//
// Generated By: dol2asm
// Translation Unit: f_pc/f_pc_method
//

#include "f_pc/f_pc_method.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct process_method_class {};

//
// Forward References:
//

extern "C" void fpcMtd_Method__FPFPv_iPv();
extern "C" void fpcMtd_Execute__FP20process_method_classPv();
extern "C" void fpcMtd_IsDelete__FP20process_method_classPv();
extern "C" void fpcMtd_Delete__FP20process_method_classPv();
extern "C" void fpcMtd_Create__FP20process_method_classPv();

//
// External References:
//

//
// Declarations:
//

/* 80022428-80022460 01CD68 0038+00 4/4 6/6 0/0 .text            fpcMtd_Method__FPFPv_iPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcMtd_Method(int (*param_0)(void*), void* param_1) {
    nofralloc
#include "asm/f_pc/f_pc_method/fpcMtd_Method__FPFPv_iPv.s"
}
#pragma pop

/* 80022460-80022484 01CDA0 0024+00 0/0 10/10 0/0 .text fpcMtd_Execute__FP20process_method_classPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcMtd_Execute(process_method_class* param_0, void* param_1) {
    nofralloc
#include "asm/f_pc/f_pc_method/fpcMtd_Execute__FP20process_method_classPv.s"
}
#pragma pop

/* 80022484-800224A8 01CDC4 0024+00 0/0 10/10 0/0 .text
 * fpcMtd_IsDelete__FP20process_method_classPv                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcMtd_IsDelete(process_method_class* param_0, void* param_1) {
    nofralloc
#include "asm/f_pc/f_pc_method/fpcMtd_IsDelete__FP20process_method_classPv.s"
}
#pragma pop

/* 800224A8-800224CC 01CDE8 0024+00 0/0 10/10 0/0 .text fpcMtd_Delete__FP20process_method_classPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcMtd_Delete(process_method_class* param_0, void* param_1) {
    nofralloc
#include "asm/f_pc/f_pc_method/fpcMtd_Delete__FP20process_method_classPv.s"
}
#pragma pop

/* 800224CC-800224F0 01CE0C 0024+00 0/0 10/10 0/0 .text fpcMtd_Create__FP20process_method_classPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcMtd_Create(process_method_class* param_0, void* param_1) {
    nofralloc
#include "asm/f_pc/f_pc_method/fpcMtd_Create__FP20process_method_classPv.s"
}
#pragma pop
