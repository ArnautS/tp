//
// Generated By: dol2asm
// Translation Unit: f_pc/f_pc_method_tag
//

#include "f_pc/f_pc_method_tag.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct process_method_tag_class {};

struct node_list_class {};

struct create_tag_class {};

//
// Forward References:
//

extern "C" void fpcMtdTg_Do__FP24process_method_tag_class();
extern "C" void fpcMtdTg_ToMethodQ__FP15node_list_classP24process_method_tag_class();
extern "C" void fpcMtdTg_MethodQTo__FP24process_method_tag_class();
extern "C" void fpcMtdTg_Init__FP24process_method_tag_classPFPv_iPv();

//
// External References:
//

extern "C" void cTg_SingleCut__FP16create_tag_class();
extern "C" void cTg_Addition__FP15node_list_classP16create_tag_class();
extern "C" void cTg_Create__FP16create_tag_classPv();
extern "C" void _savegpr_29();
extern "C" void _restgpr_29();

//
// Declarations:
//

/* 80023788-800237B8 01E0C8 0030+00 0/0 1/1 0/0 .text fpcMtdTg_Do__FP24process_method_tag_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcMtdTg_Do(process_method_tag_class* param_0) {
    nofralloc
#include "asm/f_pc/f_pc_method_tag/fpcMtdTg_Do__FP24process_method_tag_class.s"
}
#pragma pop

/* 800237B8-800237D8 01E0F8 0020+00 0/0 1/1 0/0 .text
 * fpcMtdTg_ToMethodQ__FP15node_list_classP24process_method_tag_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcMtdTg_ToMethodQ(node_list_class* param_0, process_method_tag_class* param_1) {
    nofralloc
#include "asm/f_pc/f_pc_method_tag/fpcMtdTg_ToMethodQ__FP15node_list_classP24process_method_tag_class.s"
}
#pragma pop

/* 800237D8-800237F8 01E118 0020+00 0/0 1/1 0/0 .text
 * fpcMtdTg_MethodQTo__FP24process_method_tag_class             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcMtdTg_MethodQTo(process_method_tag_class* param_0) {
    nofralloc
#include "asm/f_pc/f_pc_method_tag/fpcMtdTg_MethodQTo__FP24process_method_tag_class.s"
}
#pragma pop

/* 800237F8-80023844 01E138 004C+00 0/0 3/3 0/0 .text
 * fpcMtdTg_Init__FP24process_method_tag_classPFPv_iPv          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcMtdTg_Init(process_method_tag_class* param_0, int (*)(void*), void* param_2) {
    nofralloc
#include "asm/f_pc/f_pc_method_tag/fpcMtdTg_Init__FP24process_method_tag_classPFPv_iPv.s"
}
#pragma pop
