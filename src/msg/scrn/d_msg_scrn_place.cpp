//
// Generated By: dol2asm
// Translation Unit: msg/scrn/d_msg_scrn_place
//

#include "msg/scrn/d_msg_scrn_place.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct dMsgScrnPlace_c {
    /* 802463CC */ dMsgScrnPlace_c();
    /* 802467C4 */ ~dMsgScrnPlace_c();
    /* 80246924 */ void exec();
    /* 80246A44 */ void drawSelf();
    /* 80246A9C */ void fukiAlpha(f32);
    /* 80246B28 */ void fukiScale(f32);
    /* 80246B2C */ void fukiTrans(f32, f32);
    /* 80246B30 */ void fontAlpha(f32);
};

struct dMsgScrnBase_c {
    /* 80238C40 */ void setSelectRubyString(char*, char*, char*);
    /* 80238C44 */ void setSelectString(char*, char*, char*);
    /* 80238C48 */ bool selectAnimeMove(u8, u8, bool);
    /* 80238C50 */ void selectAnimeInit(u8, u8, f32, u8);
    /* 80238C54 */ void arwAnimeMove();
    /* 80238C58 */ void arwAnimeInit();
    /* 80238C5C */ void fukiPosCalc(u8);
    /* 80238C60 */ bool isSelect();
    /* 80238C68 */ bool selectAnimeEnd();
    /* 80238C70 */ void dotAnimeMove();
    /* 80238C74 */ void dotAnimeInit();
    /* 8023C0DC */ dMsgScrnBase_c();
    /* 8023C124 */ ~dMsgScrnBase_c();
    /* 8023C16C */ void init();
    /* 8023C234 */ void multiDraw();
    /* 8023C274 */ void draw();
    /* 8023C32C */ void drawOutFont(f32, f32, f32);
    /* 8023C574 */ void isTalkNow();
};

struct JKRExpHeap {};

struct JKRArchive {};

struct J2DTextBox {
    /* 8030074C */ void setString(s16, char const*, ...);
};

struct J2DScreen {
    /* 802F8498 */ J2DScreen();
    /* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
};

struct CPaneMgrAlpha {
    /* 802557D0 */ void setAlphaRate(f32);
};

struct CPaneMgr {
    /* 80253984 */ CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
    /* 802542E8 */ void getGlobalPosX();
    /* 80254364 */ void getGlobalPosY();
    /* 802545B0 */ void paneTrans(f32, f32);
};

//
// Forward References:
//

extern "C" void __ct__15dMsgScrnPlace_cFv();
extern "C" void __dt__15dMsgScrnPlace_cFv();
extern "C" void exec__15dMsgScrnPlace_cFv();
extern "C" void drawSelf__15dMsgScrnPlace_cFv();
extern "C" void fukiAlpha__15dMsgScrnPlace_cFf();
extern "C" void fukiScale__15dMsgScrnPlace_cFf();
extern "C" void fukiTrans__15dMsgScrnPlace_cFff();
extern "C" void fontAlpha__15dMsgScrnPlace_cFf();
extern "C" extern char const* const msg_scrn_d_msg_scrn_place__stringBase0;
extern "C" extern void* __vt__15dMsgScrnPlace_c[22];

//
// External References:
//

void mDoExt_getRubyFont();
void dCam_getBody();
void dPaneClass_showNullPane(J2DScreen*);
void* operator new(u32);
void operator delete(void*);

extern "C" void mDoExt_getRubyFont__Fv();
extern "C" void dCam_getBody__Fv();
extern "C" void setSelectRubyString__14dMsgScrnBase_cFPcPcPc();
extern "C" void setSelectString__14dMsgScrnBase_cFPcPcPc();
extern "C" bool selectAnimeMove__14dMsgScrnBase_cFUcUcb();
extern "C" void selectAnimeInit__14dMsgScrnBase_cFUcUcfUc();
extern "C" void arwAnimeMove__14dMsgScrnBase_cFv();
extern "C" void arwAnimeInit__14dMsgScrnBase_cFv();
extern "C" void fukiPosCalc__14dMsgScrnBase_cFUc();
extern "C" bool isSelect__14dMsgScrnBase_cFv();
extern "C" bool selectAnimeEnd__14dMsgScrnBase_cFv();
extern "C" void dotAnimeMove__14dMsgScrnBase_cFv();
extern "C" void dotAnimeInit__14dMsgScrnBase_cFv();
extern "C" void __ct__14dMsgScrnBase_cFv();
extern "C" void __dt__14dMsgScrnBase_cFv();
extern "C" void init__14dMsgScrnBase_cFv();
extern "C" void multiDraw__14dMsgScrnBase_cFv();
extern "C" void draw__14dMsgScrnBase_cFv();
extern "C" void drawOutFont__14dMsgScrnBase_cFfff();
extern "C" void isTalkNow__14dMsgScrnBase_cFv();
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap();
extern "C" void getGlobalPosX__8CPaneMgrFv();
extern "C" void getGlobalPosY__8CPaneMgrFv();
extern "C" void paneTrans__8CPaneMgrFff();
extern "C" void dPaneClass_showNullPane__FP9J2DScreen();
extern "C" void setAlphaRate__13CPaneMgrAlphaFf();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void __ct__9J2DScreenFv();
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive();
extern "C" void setString__10J2DTextBoxFsPCce();
extern "C" void _savegpr_26();
extern "C" void _savegpr_29();
extern "C" void _restgpr_26();
extern "C" void _restgpr_29();
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_MsgObject_HIO_c[1040];

//
// Declarations:
//

/* ############################################################################################## */
/* 80399B78-80399B98 001F+01 s=1 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80399B78 = "zelda_stage_title_foreign.blo";
SECTION_DEAD char const* const stringBase_80399B96 = "";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80399B97 = "";
#pragma pop

/* 803C12B0-803C12E8 0038+00 s=1 e=0 z=0  None .data      t_tag$3877 */
SECTION_DATA static u8 t_tag[56] = {
    0x00, 0x73, 0x66, 0x6F, 0x6E, 0x74, 0x62, 0x30, 0x00, 0x73, 0x66, 0x6F, 0x6E, 0x74,
    0x62, 0x31, 0x00, 0x73, 0x66, 0x6F, 0x6E, 0x74, 0x62, 0x32, 0x00, 0x73, 0x66, 0x6F,
    0x6E, 0x74, 0x6C, 0x30, 0x00, 0x73, 0x66, 0x6F, 0x6E, 0x74, 0x6C, 0x31, 0x00, 0x73,
    0x66, 0x6F, 0x6E, 0x74, 0x6C, 0x32, 0x00, 0x73, 0x66, 0x6F, 0x6E, 0x74, 0x30, 0x30,
};

/* 803C12E8-803C1340 0058+00 s=2 e=0 z=0  None .data      __vt__15dMsgScrnPlace_c */
SECTION_DATA void* __vt__15dMsgScrnPlace_c[22] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__14dMsgScrnBase_cFv,
    (void*)__dt__15dMsgScrnPlace_cFv,
    (void*)exec__15dMsgScrnPlace_cFv,
    (void*)multiDraw__14dMsgScrnBase_cFv,
    (void*)drawSelf__15dMsgScrnPlace_cFv,
    (void*)setSelectString__14dMsgScrnBase_cFPcPcPc,
    (void*)setSelectRubyString__14dMsgScrnBase_cFPcPcPc,
    (void*)arwAnimeInit__14dMsgScrnBase_cFv,
    (void*)arwAnimeMove__14dMsgScrnBase_cFv,
    (void*)dotAnimeInit__14dMsgScrnBase_cFv,
    (void*)dotAnimeMove__14dMsgScrnBase_cFv,
    (void*)isSelect__14dMsgScrnBase_cFv,
    (void*)selectAnimeInit__14dMsgScrnBase_cFUcUcfUc,
    (void*)selectAnimeMove__14dMsgScrnBase_cFUcUcb,
    (void*)selectAnimeEnd__14dMsgScrnBase_cFv,
    (void*)fukiScale__15dMsgScrnPlace_cFf,
    (void*)fukiTrans__15dMsgScrnPlace_cFff,
    (void*)fukiAlpha__15dMsgScrnPlace_cFf,
    (void*)fontAlpha__15dMsgScrnPlace_cFf,
    (void*)fukiPosCalc__14dMsgScrnBase_cFUc,
};

/* 80454CE8-80454CEC 0004+00 s=2 e=0 z=0  None .sdata2    @3998 */
SECTION_SDATA2 static u8 lit_3998[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80454CEC-80454CF0 0004+00 s=3 e=0 z=0  None .sdata2    @3999 */
SECTION_SDATA2 static f32 lit_3999 = 1.0f;

/* 80454CF0-80454CF8 0004+04 s=1 e=0 z=0  None .sdata2    @4000 */
SECTION_SDATA2 static f32 lit_4000[1 + 1 /* padding */] = {
    6.0f / 5.0f,
    /* padding */
    0.0f,
};

/* 802463CC-802467C4 03F8+00 s=0 e=1 z=0  None .text      __ct__15dMsgScrnPlace_cFv */
//	802463E4: 803621D0 (_savegpr_26)
//	802463EC: 8023C0DC (__ct__14dMsgScrnBase_cFv)
//	802463F0: 803C12E8 (__vt__15dMsgScrnPlace_c)
//	802463F4: 803C12E8 (__vt__15dMsgScrnPlace_c)
//	80246400: 8023C16C (init__14dMsgScrnBase_cFv)
//	80246404: 80181640 (dCam_getBody__Fv)
//	80246414: 80181640 (dCam_getBody__Fv)
//	80246424: 8043028C (g_MsgObject_HIO_c)
//	80246428: 8043028C (g_MsgObject_HIO_c)
//	80246440: 80454CE8 (lit_3998)
//	80246450: 802CEC4C (__nw__FUl)
//	8024645C: 802F8498 (__ct__9J2DScreenFv)
//	8024646C: 80399B78 (msg_scrn_d_msg_scrn_place__stringBase0)
//	80246470: 80399B78 (msg_scrn_d_msg_scrn_place__stringBase0)
//	80246478: 804061C0 (g_dComIfG_gameInfo)
//	8024647C: 804061C0 (g_dComIfG_gameInfo)
//	80246484: 802F8648 (setPriority__9J2DScreenFPCcUlP10JKRArchive)
//	8024648C: 802550E8 (dPaneClass_showNullPane__FP9J2DScreen)
//	80246494: 802CEC4C (__nw__FUl)
//	802464B8: 80253984 (__ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap)
//	802464C4: 8043028C (g_MsgObject_HIO_c)
//	802464C8: 8043028C (g_MsgObject_HIO_c)
//	802464F8: 802CEC4C (__nw__FUl)
//	80246520: 80253984 (__ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap)
//	8024652C: 8043028C (g_MsgObject_HIO_c)
//	80246530: 8043028C (g_MsgObject_HIO_c)
//	80246560: 8043028C (g_MsgObject_HIO_c)
//	80246564: 8043028C (g_MsgObject_HIO_c)
//	80246578: 802545B0 (paneTrans__8CPaneMgrFff)
//	80246580: 802CEC4C (__nw__FUl)
//	802465A4: 80253984 (__ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap)
//	802465B0: 8043028C (g_MsgObject_HIO_c)
//	802465B4: 8043028C (g_MsgObject_HIO_c)
//	802465E4: 8043028C (g_MsgObject_HIO_c)
//	802465E8: 8043028C (g_MsgObject_HIO_c)
//	802465FC: 802545B0 (paneTrans__8CPaneMgrFff)
//	8024660C: 80399B78 (msg_scrn_d_msg_scrn_place__stringBase0)
//	80246610: 80399B78 (msg_scrn_d_msg_scrn_place__stringBase0)
//	80246614: 80454CEC (lit_3999)
//	8024661C: 802CEC4C (__nw__FUl)
//	8024662C: 803C12B0 (t_tag)
//	80246630: 803C12B0 (t_tag)
//	80246648: 80253984 (__ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap)
//	80246660: 80014B04 (mDoExt_getRubyFont__Fv)
//	80246694: 8030074C (setString__10J2DTextBoxFsPCce)
//	8024672C: 80454CF0 (lit_4000)
//	8024678C: 802542E8 (getGlobalPosX__8CPaneMgrFv)
//	80246798: 80254364 (getGlobalPosY__8CPaneMgrFv)
//	802467B0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMsgScrnPlace_c::dMsgScrnPlace_c() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_place/__ct__15dMsgScrnPlace_cFv.s"
}
#pragma pop

/* 802467C4-80246924 0160+00 s=1 e=0 z=0  None .text      __dt__15dMsgScrnPlace_cFv */
//	802467D4: 803621D0 (_savegpr_26)
//	802467E4: 803C12E8 (__vt__15dMsgScrnPlace_c)
//	802467E8: 803C12E8 (__vt__15dMsgScrnPlace_c)
//	802468D0: 804061C0 (g_dComIfG_gameInfo)
//	802468D4: 804061C0 (g_dComIfG_gameInfo)
//	802468F4: 8023C124 (__dt__14dMsgScrnBase_cFv)
//	80246904: 802CED3C (__dl__FPv)
//	80246910: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMsgScrnPlace_c::~dMsgScrnPlace_c() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_place/__dt__15dMsgScrnPlace_cFv.s"
}
#pragma pop

/* 80246924-80246A44 0120+00 s=1 e=0 z=0  None .text      exec__15dMsgScrnPlace_cFv */
//	80246938: 8043028C (g_MsgObject_HIO_c)
//	8024693C: 8043028C (g_MsgObject_HIO_c)
//	80246968: 8043028C (g_MsgObject_HIO_c)
//	8024696C: 8043028C (g_MsgObject_HIO_c)
//	8024699C: 8043028C (g_MsgObject_HIO_c)
//	802469A0: 8043028C (g_MsgObject_HIO_c)
//	802469B4: 802545B0 (paneTrans__8CPaneMgrFff)
//	802469B8: 8043028C (g_MsgObject_HIO_c)
//	802469BC: 8043028C (g_MsgObject_HIO_c)
//	802469EC: 8043028C (g_MsgObject_HIO_c)
//	802469F0: 8043028C (g_MsgObject_HIO_c)
//	80246A04: 802545B0 (paneTrans__8CPaneMgrFff)
//	80246A0C: 8023C574 (isTalkNow__14dMsgScrnBase_cFv)
//	80246A1C: 80454CEC (lit_3999)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnPlace_c::exec() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_place/exec__15dMsgScrnPlace_cFv.s"
}
#pragma pop

/* 80246A44-80246A9C 0058+00 s=1 e=0 z=0  None .text      drawSelf__15dMsgScrnPlace_cFv */
//	80246A58: 804061C0 (g_dComIfG_gameInfo)
//	80246A5C: 804061C0 (g_dComIfG_gameInfo)
//	80246A78: 80454CE8 (lit_3998)
//	80246A80: 80454CEC (lit_3999)
//	80246A84: 8023C32C (drawOutFont__14dMsgScrnBase_cFfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnPlace_c::drawSelf() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_place/drawSelf__15dMsgScrnPlace_cFv.s"
}
#pragma pop

/* 80246A9C-80246B28 008C+00 s=1 e=0 z=0  None .text      fukiAlpha__15dMsgScrnPlace_cFf */
//	80246AB4: 803621DC (_savegpr_29)
//	80246AC4: 802557D0 (setAlphaRate__13CPaneMgrAlphaFf)
//	80246ACC: 8043028C (g_MsgObject_HIO_c)
//	80246AD0: 8043028C (g_MsgObject_HIO_c)
//	80246ADC: 802557D0 (setAlphaRate__13CPaneMgrAlphaFf)
//	80246AF4: 802557D0 (setAlphaRate__13CPaneMgrAlphaFf)
//	80246B14: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnPlace_c::fukiAlpha(f32 param_0) {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_place/fukiAlpha__15dMsgScrnPlace_cFf.s"
}
#pragma pop

/* 80246B28-80246B2C 0004+00 s=1 e=0 z=0  None .text      fukiScale__15dMsgScrnPlace_cFf */
void dMsgScrnPlace_c::fukiScale(f32 param_0) {
    /* empty function */
}

/* 80246B2C-80246B30 0004+00 s=1 e=0 z=0  None .text      fukiTrans__15dMsgScrnPlace_cFff */
void dMsgScrnPlace_c::fukiTrans(f32 param_0, f32 param_1) {
    /* empty function */
}

/* 80246B30-80246B34 0004+00 s=1 e=0 z=0  None .text      fontAlpha__15dMsgScrnPlace_cFf */
void dMsgScrnPlace_c::fontAlpha(f32 param_0) {
    /* empty function */
}
