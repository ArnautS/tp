// 
// Generated By: dol2asm
// Translation Unit: msg/scrn/d_msg_scrn_light
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "msg/scrn/d_msg_scrn_light.h"

// 
// Types:
// 

struct JUtility {
	struct TColor {
	};

};

struct dMsgScrnLight_c {
	/* 80245934 */ // False False
//  u8 False
//  u8 False
dMsgScrnLight_c(u8, u8);
	/* 80245B00 */ // True False
~dMsgScrnLight_c();
	/* 80245C04 */ // False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void draw(f32*, f32, f32, f32, f32, f32, u8);
	/* 80245F90 */ // False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  JUtility::TColor False
//  JUtility::TColor False
void draw(f32*, f32, f32, f32, f32, f32, f32, JUtility::TColor, JUtility::TColor);
	/* 802460DC */ // True False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void drawCommon(f32, f32, f32, f32, f32);
};

struct dMsgScrnLight_HIO_c {
	/* 8024575C */ // True False
dMsgScrnLight_HIO_c();
	/* 802457C4 */ // True False
//  u8 False
void updateColor(u8);
	/* 80246348 */ // True False
~dMsgScrnLight_HIO_c();
};

struct JKRFileLoader {
	/* 802D4270 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  JKRFileLoader* False
// 	 JKRFileLoader False
void getGlbResource(char const*, JKRFileLoader*);
};

struct JKRExpHeap {
};

struct JKRArchive {
};

struct J2DGrafContext {
};

struct J2DScreen {
	/* 802F8498 */ // False False
J2DScreen();
	/* 802F8648 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
void setPriority(char const*, u32, JKRArchive*);
	/* 802F8ED4 */ // False False
//  f32 False
//  f32 False
//  J2DGrafContext const* False
// 	 J2DGrafContext const False
// 		 J2DGrafContext False
void draw(f32, f32, J2DGrafContext const*);
	/* 802F9690 */ // False False
void animation();
};

struct J2DPane {
	/* 802F7FCC */ // False False
void animationTransform();
};

struct J2DAnmLoaderDataBase {
	/* 80308A6C */ // False False
//  void const* False
// 	 void const False
// 		 void False
void load(void const*);
};

struct CPaneMgrAlpha {
	/* 802557D0 */ // False False
//  f32 False
void setAlphaRate(f32);
	/* 80255828 */ // False False
void getAlphaRate();
};

struct CPaneMgr {
	/* 80253984 */ // False False
//  J2DScreen* False
// 	 J2DScreen False
//  u64 False
//  u8 False
//  JKRExpHeap* False
// 	 JKRExpHeap False
CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
	/* 80254458 */ // False False
//  JUtility::TColor False
//  JUtility::TColor False
void setBlackWhite(JUtility::TColor, JUtility::TColor);
};

// 
// Forward References:
// 


// True False
extern "C" void __ct__19dMsgScrnLight_HIO_cFv();
// True False
//  u8 False
extern "C" void updateColor__19dMsgScrnLight_HIO_cFUc();
// False False
//  u8 False
//  u8 False
extern "C" void __ct__15dMsgScrnLight_cFUcUc();
// True False
extern "C" void __dt__15dMsgScrnLight_cFv();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void draw__15dMsgScrnLight_cFPffffffUc();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  JUtility::TColor False
//  JUtility::TColor False
extern "C" void draw__15dMsgScrnLight_cFPfffffffQ28JUtility6TColorQ28JUtility6TColor();
// True False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void drawCommon__15dMsgScrnLight_cFfffff();
// True False
extern "C" void __dt__19dMsgScrnLight_HIO_cFv();
// False False
extern "C" void __sinit_d_msg_scrn_light_cpp();
extern "C" extern char const* const msg_scrn_d_msg_scrn_light__stringBase0;
extern "C" extern void* __vt__15dMsgScrnLight_c[3];
extern "C" extern void* __vt__19dMsgScrnLight_HIO_c[3];

// 
// External References:
// 

// False False
//  J2DScreen* False
// 	 J2DScreen False
void dPaneClass_showNullPane(J2DScreen*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  J2DScreen* False
// 	 J2DScreen False
//  u64 False
//  u8 False
//  JKRExpHeap* False
// 	 JKRExpHeap False
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap();
// False False
//  JUtility::TColor False
//  JUtility::TColor False
extern "C" void setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor();
// False False
//  J2DScreen* False
// 	 J2DScreen False
extern "C" void dPaneClass_showNullPane__FP9J2DScreen();
// False False
//  f32 False
extern "C" void setAlphaRate__13CPaneMgrAlphaFf();
// False False
extern "C" void getAlphaRate__13CPaneMgrAlphaFv();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  JKRFileLoader* False
// 	 JKRFileLoader False
extern "C" void getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader();
// False False
extern "C" void animationTransform__7J2DPaneFv();
// False False
extern "C" void __ct__9J2DScreenFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive();
// False False
//  f32 False
//  f32 False
//  J2DGrafContext const* False
// 	 J2DGrafContext const False
// 		 J2DGrafContext False
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext();
// False False
extern "C" void animation__9J2DScreenFv();
// False False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void load__20J2DAnmLoaderDataBaseFPCv();
// False False
extern "C" void __register_global_object();
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 data_804510D8[8];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803C1298-803C12A4 000C+00 s=2 e=0 z=0  None .data      __vt__15dMsgScrnLight_c                                      */
SECTION_DATA void* __vt__15dMsgScrnLight_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15dMsgScrnLight_cFv,
};

/* 803C12A4-803C12B0 000C+00 s=2 e=0 z=0  None .data      __vt__19dMsgScrnLight_HIO_c                                  */
SECTION_DATA void* __vt__19dMsgScrnLight_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__19dMsgScrnLight_HIO_cFv,
};

/* 8024575C-802457C4 0068+00 s=1 e=0 z=0  None .text      __ct__19dMsgScrnLight_HIO_cFv                                */
//	8024575C: 803C12A4 (__vt__19dMsgScrnLight_HIO_c)
//	80245760: 803C12A4 (__vt__19dMsgScrnLight_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dMsgScrnLight_HIO_c::dMsgScrnLight_HIO_c() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_light/__ct__19dMsgScrnLight_HIO_cFv.s"
}
#pragma pop


/* 802457C4-80245934 0170+00 s=1 e=0 z=0  None .text      updateColor__19dMsgScrnLight_HIO_cFUc                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMsgScrnLight_HIO_c::updateColor(u8 param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_light/updateColor__19dMsgScrnLight_HIO_cFUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 80399B08-80399B78 006C+04 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80399B08 = 
    "zelda_message_window_text_light.blo";
SECTION_DEAD char const* const stringBase_80399B2C = 
    "zelda_message_window_text_light.bck";
SECTION_DEAD char const* const stringBase_80399B50 = 
    "zelda_message_window_text_light.bpk";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80399B74 = "\0\0\0";
#pragma pop

/* 804306C8-804306D4 000C+00 s=1 e=0 z=0  None .bss       @3735                                                        */
static u8 lit_3735[12];

/* 804306D4-80430728 0050+04 s=3 e=0 z=0  None .bss       g_MsgScrnLight_HIO_c                                         */
static u8 g_MsgScrnLight_HIO_c[80 + 4 /* padding */];

/* 80454CD8-80454CDC 0004+00 s=4 e=0 z=0  None .sdata2    @3808                                                        */
SECTION_SDATA2 static u8 lit_3808[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80245934-80245B00 01CC+00 s=0 e=4 z=1  None .text      __ct__15dMsgScrnLight_cFUcUc                                 */
//	8024594C: 803C1298 (__vt__15dMsgScrnLight_c)
//	80245950: 803C1298 (__vt__15dMsgScrnLight_c)
//	80245960: 804510D8 (data_804510D8)
//	80245970: 804306D4 (g_MsgScrnLight_HIO_c)
//	80245974: 804306D4 (g_MsgScrnLight_HIO_c)
//	8024597C: 804510D8 (data_804510D8)
//	80245984: 804510D8 (data_804510D8)
//	80245988: 804306D4 (g_MsgScrnLight_HIO_c)
//	8024598C: 804306D4 (g_MsgScrnLight_HIO_c)
//	80245990: 802457C4 (updateColor__19dMsgScrnLight_HIO_cFUc)
//	80245998: 802CEC4C (__nw__FUl)
//	802459A4: 802F8498 (__ct__9J2DScreenFv)
//	802459B4: 80399B08 (msg_scrn_d_msg_scrn_light__stringBase0)
//	802459B8: 80399B08 (msg_scrn_d_msg_scrn_light__stringBase0)
//	802459C0: 804061C0 (g_dComIfG_gameInfo)
//	802459C4: 804061C0 (g_dComIfG_gameInfo)
//	802459CC: 802F8648 (setPriority__9J2DScreenFPCcUlP10JKRArchive)
//	802459D4: 802550E8 (dPaneClass_showNullPane__FP9J2DScreen)
//	80245A08: 80399B08 (msg_scrn_d_msg_scrn_light__stringBase0)
//	80245A0C: 80399B08 (msg_scrn_d_msg_scrn_light__stringBase0)
//	80245A18: 802D4270 (getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader)
//	80245A1C: 80308A6C (load__20J2DAnmLoaderDataBaseFPCv)
//	80245A24: 80454CD8 (lit_3808)
//	80245A2C: 80399B08 (msg_scrn_d_msg_scrn_light__stringBase0)
//	80245A30: 80399B08 (msg_scrn_d_msg_scrn_light__stringBase0)
//	80245A3C: 802D4270 (getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader)
//	80245A40: 80308A6C (load__20J2DAnmLoaderDataBaseFPCv)
//	80245A60: 80454CD8 (lit_3808)
//	80245A6C: 802CEC4C (__nw__FUl)
//	80245A90: 80253984 (__ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap)
//	80245ADC: 80454CD8 (lit_3808)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u8 False
//  u8 False
asm dMsgScrnLight_c::dMsgScrnLight_c(u8 param_0, u8 param_1) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_light/__ct__15dMsgScrnLight_cFUcUc.s"
}
#pragma pop


/* 80245B00-80245C04 0104+00 s=1 e=0 z=0  None .text      __dt__15dMsgScrnLight_cFv                                    */
//	80245B20: 803C1298 (__vt__15dMsgScrnLight_c)
//	80245B24: 803C1298 (__vt__15dMsgScrnLight_c)
//	80245B2C: 804510D8 (data_804510D8)
//	80245B34: 804510D8 (data_804510D8)
//	80245BE4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dMsgScrnLight_c::~dMsgScrnLight_c() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_light/__dt__15dMsgScrnLight_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454CDC-80454CE0 0004+00 s=2 e=0 z=0  None .sdata2    @3869                                                        */
SECTION_SDATA2 static f32 lit_3869 = 1.0f;

/* 80454CE0-80454CE8 0008+00 s=2 e=0 z=0  None .sdata2    @3871                                                        */
SECTION_SDATA2 static f64 lit_3871 = 4503601774854144.0 /* cast s32 to float */;

/* 80245C04-80245F90 038C+00 s=0 e=2 z=0  None .text      draw__15dMsgScrnLight_cFPffffffUc                            */
//	80245C5C: 804306D4 (g_MsgScrnLight_HIO_c)
//	80245C60: 804306D4 (g_MsgScrnLight_HIO_c)
//	80245CDC: 80254458 (setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor)
//	80245D10: 80254458 (setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor)
//	80245D7C: 80254458 (setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor)
//	80245DDC: 80254458 (setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor)
//	80245E3C: 80254458 (setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor)
//	80245E94: 80254458 (setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor)
//	80245EC8: 80254458 (setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor)
//	80245EDC: 80454CDC (lit_3869)
//	80245EF4: 80454CE0 (lit_3871)
//	80245F1C: 80454CD8 (lit_3808)
//	80245F4C: 802460DC (drawCommon__15dMsgScrnLight_cFfffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
asm void dMsgScrnLight_c::draw(f32* param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4, f32 param_5, u8 param_6) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_light/draw__15dMsgScrnLight_cFPffffffUc.s"
}
#pragma pop


/* 80245F90-802460DC 014C+00 s=0 e=1 z=1  None .text      draw__15dMsgScrnLight_cFPfffffffQ28JUtility6TColorQ28JUtility6TColor */
//	80246010: 80254458 (setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor)
//	80246038: 80454CE0 (lit_3871)
//	80246060: 80454CD8 (lit_3808)
//	80246090: 802460DC (drawCommon__15dMsgScrnLight_cFfffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  JUtility::TColor False
//  JUtility::TColor False
asm void dMsgScrnLight_c::draw(f32* param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4, f32 param_5, f32 param_6, JUtility::TColor param_7, JUtility::TColor param_8) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_light/draw__15dMsgScrnLight_cFPfffffffQ28JUtility6TColorQ28JUtility6TColor.s"
}
#pragma pop


/* 802460DC-80246348 026C+00 s=2 e=0 z=0  None .text      drawCommon__15dMsgScrnLight_cFfffff                          */
//	80246138: 804061C0 (g_dComIfG_gameInfo)
//	8024613C: 804061C0 (g_dComIfG_gameInfo)
//	8024615C: 80255828 (getAlphaRate__13CPaneMgrAlphaFv)
//	80246194: 80454CDC (lit_3869)
//	802461F4: 802557D0 (setAlphaRate__13CPaneMgrAlphaFf)
//	80246274: 802F7FCC (animationTransform__7J2DPaneFv)
//	8024627C: 802F9690 (animation__9J2DScreenFv)
//	802462D4: 80454CD8 (lit_3808)
//	802462E0: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
//	802462E4: 80454CDC (lit_3869)
//	802462F8: 802557D0 (setAlphaRate__13CPaneMgrAlphaFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
asm void dMsgScrnLight_c::drawCommon(f32 param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_light/drawCommon__15dMsgScrnLight_cFfffff.s"
}
#pragma pop


/* 80246348-80246390 0048+00 s=2 e=0 z=0  None .text      __dt__19dMsgScrnLight_HIO_cFv                                */
//	80246360: 803C12A4 (__vt__19dMsgScrnLight_HIO_c)
//	80246364: 803C12A4 (__vt__19dMsgScrnLight_HIO_c)
//	80246374: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dMsgScrnLight_HIO_c::~dMsgScrnLight_HIO_c() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_light/__dt__19dMsgScrnLight_HIO_cFv.s"
}
#pragma pop


/* 80246390-802463CC 003C+00 s=0 e=0 z=0  None .text      __sinit_d_msg_scrn_light_cpp                                 */
//	8024639C: 804306D4 (g_MsgScrnLight_HIO_c)
//	802463A0: 804306D4 (g_MsgScrnLight_HIO_c)
//	802463A4: 8024575C (__ct__19dMsgScrnLight_HIO_cFv)
//	802463A8: 80246348 (__dt__19dMsgScrnLight_HIO_cFv)
//	802463AC: 80246348 (__dt__19dMsgScrnLight_HIO_cFv)
//	802463B0: 804306C8 (lit_3735)
//	802463B4: 804306C8 (lit_3735)
//	802463B8: 80361C24 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_msg_scrn_light_cpp() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_light/__sinit_d_msg_scrn_light_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80246390 = (void*)__sinit_d_msg_scrn_light_cpp;
#pragma pop


