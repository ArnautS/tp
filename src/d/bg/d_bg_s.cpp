// 
// Generated By: dol2asm
// Translation Unit: d/bg/d_bg_s
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/bg/d_bg_s.h"

// 
// Types:
// 

struct fopAc_ac_c {
};

struct dBgW_Base {
	struct PushPullLabel {
	};

	/* 80074AB4 */ // False False
//  s16 False
void SetOldShapeAngleY(s16);
	/* 8007E6E0 */ // False False
//  s16 False
void CalcDiffShapeAngleY(s16);
};

struct dBgW {
};

struct dBgS_SplGrpChk {
	/* 80078D0C */ // False False
void Init();
};

struct dBgS_SphChk {
};

struct dBgS_RoofChk {
	/* 80079124 */ // False False
void Init();
};

struct dBgS_Acch {
	/* 80077278 */ // False False
//  int False
//  void* False
// 	 void False
//  unsigned int False
void SetNowActorInfo(int, void*, unsigned int);
	/* 800772E8 */ // False False
void CalcMovePosWork();
	/* 8007732C */ // False False
void CalcWallRR();
};

struct cXyz {
};

struct csXyz {
};

struct cBgS_PolyInfo {
	/* 802680F8 */ // False False
void ChkSetInfo() const;
	/* 80268120 */ // False False
void ClearPi();
	/* 8026816C */ // False False
//  int False
//  void* False
// 	 void False
//  unsigned int False
void SetActorInfo(int, void*, unsigned int);
	/* 8026817C */ // False False
//  void const* False
// 	 void const False
// 		 void False
//  unsigned int False
void ChkSafe(void const*, unsigned int) const;
	/* 802681AC */ // False False
void ChkBgIndex() const;
};

struct dBgS {
	/* 80030C50 */ // False False
~dBgS();
	/* 800748FC */ // True False
void Ct();
	/* 8007491C */ // True False
void Dt();
	/* 8007493C */ // False False
void ClrMoveFlag();
	/* 800749A8 */ // False False
void Move();
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
	/* 80074ABC */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void ChkMoveBG(cBgS_PolyInfo const&);
	/* 80074B40 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void ChkMoveBG_NoDABg(cBgS_PolyInfo const&);
	/* 80074B98 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetExitId(cBgS_PolyInfo const&);
	/* 80074BE8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyColor(cBgS_PolyInfo const&);
	/* 80074C6C */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetHorseNoEntry(cBgS_PolyInfo const&);
	/* 80074CBC */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetSpecialCode(cBgS_PolyInfo const&);
	/* 80074D0C */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetMagnetCode(cBgS_PolyInfo const&);
	/* 80074D5C */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetMonkeyBarsCode(cBgS_PolyInfo const&);
	/* 80074DAC */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetUnderwaterRoofCode(cBgS_PolyInfo const&);
	/* 80074E00 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetWallCode(cBgS_PolyInfo const&);
	/* 80074E50 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyAtt0(cBgS_PolyInfo const&);
	/* 80074EA0 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyAtt1(cBgS_PolyInfo const&);
	/* 80074EF0 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGroundCode(cBgS_PolyInfo const&);
	/* 80074F40 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetCamMoveBG(cBgS_PolyInfo const&);
	/* 80074F90 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomCamId(cBgS_PolyInfo const&);
	/* 80074FE0 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomPathId(cBgS_PolyInfo const&);
	/* 80075030 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomPathPntNo(cBgS_PolyInfo const&);
	/* 80075080 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGrpSoundId(cBgS_PolyInfo const&);
	/* 800750D0 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  u32 False
void ChkGrpInf(cBgS_PolyInfo const&, u32);
	/* 80075100 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomId(cBgS_PolyInfo const&);
	/* 8007519C */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyAttackThrough(cBgS_PolyInfo const&);
	/* 800751F8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void ChkPolyHSStick(cBgS_PolyInfo const&);
	/* 8007524C */ // False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
void WallCorrect(dBgS_Acch*);
	/* 80075374 */ // False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
void WallCorrectSort(dBgS_Acch*);
	/* 8007549C */ // False False
//  dBgS_RoofChk* False
// 	 dBgS_RoofChk False
void RoofChk(dBgS_RoofChk*);
	/* 80075564 */ // False False
//  dBgS_SplGrpChk* False
// 	 dBgS_SplGrpChk False
void SplGrpChk(dBgS_SplGrpChk*);
	/* 80075688 */ // False False
//  dBgS_SphChk* False
// 	 dBgS_SphChk False
//  void* False
// 	 void False
void SphChk(dBgS_SphChk*, void*);
	/* 80075774 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
//  bool False
//  bool False
void MoveBgCrrPos(cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*, bool, bool);
	/* 80075880 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void MoveBgTransPos(cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
	/* 8007595C */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void MoveBgMatrixCrrPos(cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
	/* 80075B84 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void RideCallBack(cBgS_PolyInfo const&, fopAc_ac_c*);
	/* 80075BF4 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz& False
// 	 cXyz False
void ArrowStickCallBack(cBgS_PolyInfo const&, fopAc_ac_c*, cXyz&);
	/* 80075C6C */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  dBgW_Base::PushPullLabel False
void PushPullCallBack(cBgS_PolyInfo const&, fopAc_ac_c*, s16, dBgW_Base::PushPullLabel);
};

struct cM3dGPla {
};

struct cBgW_BgId {
	/* 802681C0 */ // False False
//  int False
void Regist(int);
	/* 802681C8 */ // False False
void Release();
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgW {
	/* 8007B17C */ // False False
//  cXyz* False
// 	 cXyz False
void GetTrans(cXyz*) const;
};

struct cBgS_ShdwDraw {
};

struct cBgS_LinChk {
	/* 80267F40 */ // False False
void PreCalc();
};

struct cBgS_GndChk {
	/* 80267D44 */ // False False
void PreCheck();
};

struct cBgS_ChkElm {
	/* 8002FEF8 */ // False False
~cBgS_ChkElm();
	/* 800740F4 */ // False False
void Init();
	/* 80074110 */ // True False
//  dBgW_Base* False
// 	 dBgW_Base False
//  unsigned int False
//  void* False
// 	 void False
void Regist2(dBgW_Base*, unsigned int, void*);
	/* 80074128 */ // True False
void Release();
};

struct cBgS_Chk {
	/* 80267BDC */ // False False
//  unsigned int False
void ChkSameActorPid(unsigned int) const;
};

struct cBgS {
	/* 80030CCC */ // False False
~cBgS();
	/* 80074144 */ // True False
//  dBgW_Base* False
// 	 dBgW_Base False
//  unsigned int False
//  void* False
// 	 void False
void Regist(dBgW_Base*, unsigned int, void*);
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
	/* 800742E4 */ // True False
void Ct();
	/* 80074338 */ // True False
void Dt();
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
	/* 80074578 */ // False False
//  void* False
// 	 void False
void ConvDzb(void*);
	/* 80074618 */ // False False
//  int False
void GetActorPointer(int) const;
	/* 80074628 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetBgWBasePointer(cBgS_PolyInfo const&) const;
	/* 80074660 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void ChkPolySafe(cBgS_PolyInfo const&);
	/* 800746F4 */ // True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGrpRoomId(cBgS_PolyInfo const&) const;
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
	/* 800747F0 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void GetTriPnt(cBgS_PolyInfo const&, cXyz*, cXyz*, cXyz*) const;
	/* 80074840 */ // False False
//  cBgS_ShdwDraw* False
// 	 cBgS_ShdwDraw False
void ShdwDraw(cBgS_ShdwDraw*);
	/* 800748AC */ // True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGrpInf(cBgS_PolyInfo const&) const;
};

// 
// Forward References:
// 

// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_Typical(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// True False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
static void dBgS_MoveBGProc_RotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_Trans(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void dBgS_CheckBWallPoly(cBgS_PolyInfo const&);
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void dBgS_CheckBGroundPoly(cBgS_PolyInfo const&);
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void dBgS_CheckBRoofPoly(cBgS_PolyInfo const&);
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void dBgS_GetNY(cBgS_PolyInfo const&);

// False False
extern "C" void Init__11cBgS_ChkElmFv();
// True False
//  dBgW_Base* False
// 	 dBgW_Base False
//  unsigned int False
//  void* False
// 	 void False
extern "C" void Regist2__11cBgS_ChkElmFP9dBgW_BaseUiPv();
// True False
extern "C" void Release__11cBgS_ChkElmFv();
// True False
//  dBgW_Base* False
// 	 dBgW_Base False
//  unsigned int False
//  void* False
// 	 void False
extern "C" void Regist__4cBgSFP9dBgW_BaseUiPv();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// True False
extern "C" void Ct__4cBgSFv();
// True False
extern "C" void Dt__4cBgSFv();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
//  void* False
// 	 void False
extern "C" void ConvDzb__4cBgSFPv();
// False False
//  int False
extern "C" void GetActorPointer__4cBgSCFi();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetBgWBasePointer__4cBgSCFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void ChkPolySafe__4cBgSFRC13cBgS_PolyInfo();
// True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGrpRoomId__4cBgSCFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void GetTriPnt__4cBgSCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz();
// False False
//  cBgS_ShdwDraw* False
// 	 cBgS_ShdwDraw False
extern "C" void ShdwDraw__4cBgSFP13cBgS_ShdwDraw();
// True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGrpInf__4cBgSCFRC13cBgS_PolyInfo();
// True False
extern "C" void Ct__4dBgSFv();
// True False
extern "C" void Dt__4dBgSFv();
// False False
extern "C" void ClrMoveFlag__4dBgSFv();
// False False
extern "C" void Move__4dBgSFv();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
//  s16 False
extern "C" void SetOldShapeAngleY__9dBgW_BaseFs();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void ChkMoveBG__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void ChkMoveBG_NoDABg__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetExitId__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyColor__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetHorseNoEntry__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetSpecialCode__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetMagnetCode__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetMonkeyBarsCode__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetUnderwaterRoofCode__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetWallCode__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyAtt1__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGroundCode__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetCamMoveBG__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomCamId__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomPathId__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomPathPntNo__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGrpSoundId__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  u32 False
extern "C" void ChkGrpInf__4dBgSFRC13cBgS_PolyInfoUl();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyAttackThrough__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void ChkPolyHSStick__4dBgSFRC13cBgS_PolyInfo();
// False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
extern "C" void WallCorrect__4dBgSFP9dBgS_Acch();
// False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
extern "C" void WallCorrectSort__4dBgSFP9dBgS_Acch();
// False False
//  dBgS_RoofChk* False
// 	 dBgS_RoofChk False
extern "C" void RoofChk__4dBgSFP12dBgS_RoofChk();
// False False
//  dBgS_SplGrpChk* False
// 	 dBgS_SplGrpChk False
extern "C" void SplGrpChk__4dBgSFP14dBgS_SplGrpChk();
// False False
//  dBgS_SphChk* False
// 	 dBgS_SphChk False
//  void* False
// 	 void False
extern "C" void SphChk__4dBgSFP11dBgS_SphChkPv();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
//  bool False
//  bool False
extern "C" void MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_Typical__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// True False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" static void dBgS_MoveBGProc_RotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_Trans__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void RideCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_c();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz& False
// 	 cXyz False
extern "C" void ArrowStickCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_cR4cXyz();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  dBgW_Base::PushPullLabel False
extern "C" void PushPullCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_csQ29dBgW_Base13PushPullLabel();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void dBgS_CheckBGroundPoly__FRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void dBgS_CheckBRoofPoly__FRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void dBgS_GetNY__FRC13cBgS_PolyInfo();
extern "C" extern void* __vt__4dBgS[5];
extern "C" extern void* __vt__4cBgS[5];
extern "C" extern void* __vt__11cBgS_ChkElm[4];
extern "C" extern u8 data_80450F68[8];

// 
// External References:
// 

// False False
//  f32 False
void cBgW_CheckBGround(f32);
// False False
//  f32 False
void cBgW_CheckBRoof(f32);
// False False
//  f32 False
void cBgW_CheckBWall(f32);

// False False
extern "C" void __dt__11cBgS_ChkElmFv();
// False False
extern "C" void __dt__4dBgSFv();
// False False
extern "C" void __dt__4cBgSFv();
// False False
//  int False
//  void* False
// 	 void False
//  unsigned int False
extern "C" void SetNowActorInfo__9dBgS_AcchFiPvUi();
// False False
extern "C" void CalcMovePosWork__9dBgS_AcchFv();
// False False
extern "C" void CalcWallRR__9dBgS_AcchFv();
// False False
extern "C" void Init__14dBgS_SplGrpChkFv();
// False False
extern "C" void Init__12dBgS_RoofChkFv();
// False False
//  cXyz* False
// 	 cXyz False
extern "C" void GetTrans__4cBgWCFP4cXyz();
// False False
//  s16 False
extern "C" void CalcDiffShapeAngleY__9dBgW_BaseFs();
// False False
//  unsigned int False
extern "C" void ChkSameActorPid__8cBgS_ChkCFUi();
// False False
extern "C" void PreCheck__11cBgS_GndChkFv();
// False False
extern "C" void PreCalc__11cBgS_LinChkFv();
// False False
extern "C" void ChkSetInfo__13cBgS_PolyInfoCFv();
// False False
extern "C" void ClearPi__13cBgS_PolyInfoFv();
// False False
//  int False
//  void* False
// 	 void False
//  unsigned int False
extern "C" void SetActorInfo__13cBgS_PolyInfoFiPvUi();
// False False
//  void const* False
// 	 void const False
// 		 void False
//  unsigned int False
extern "C" void ChkSafe__13cBgS_PolyInfoCFPCvUi();
// False False
extern "C" void ChkBgIndex__13cBgS_PolyInfoCFv();
// False False
//  int False
extern "C" void Regist__9cBgW_BgIdFi();
// False False
extern "C" void Release__9cBgW_BgIdFv();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
//  f32 False
extern "C" void cBgW_CheckBGround__Ff();
// False False
//  f32 False
extern "C" void cBgW_CheckBRoof__Ff();
// False False
//  f32 False
extern "C" void cBgW_CheckBWall__Ff();
// False False
extern "C" void PSMTXInverse();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

// 
// Declarations:
// 

/* 800740F4-80074110 001C+00 s=2 e=1 z=0  None .text      Init__11cBgS_ChkElmFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void cBgS_ChkElm::Init() {
	nofralloc
#include "asm/d/bg/d_bg_s/Init__11cBgS_ChkElmFv.s"
}
#pragma pop


/* 80074110-80074128 0018+00 s=1 e=0 z=0  None .text      Regist2__11cBgS_ChkElmFP9dBgW_BaseUiPv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dBgW_Base* False
// 	 dBgW_Base False
//  unsigned int False
//  void* False
// 	 void False
asm void cBgS_ChkElm::Regist2(dBgW_Base* param_0, unsigned int param_1, void* param_2) {
	nofralloc
#include "asm/d/bg/d_bg_s/Regist2__11cBgS_ChkElmFP9dBgW_BaseUiPv.s"
}
#pragma pop


/* 80074128-80074144 001C+00 s=2 e=0 z=0  None .text      Release__11cBgS_ChkElmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void cBgS_ChkElm::Release() {
	nofralloc
#include "asm/d/bg/d_bg_s/Release__11cBgS_ChkElmFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450F60-80450F68 0004+04 s=2 e=0 z=0  None .sbss      l_SetCounter                                                 */
static u8 l_SetCounter[4 + 4 /* padding */];

/* 80074144-80074250 010C+00 s=1 e=0 z=0  None .text      Regist__4cBgSFP9dBgW_BaseUiPv                                */
//	80074154: 803621D4 (_savegpr_27)
//	80074178: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	800741B0: 80450F60 (l_SetCounter)
//	800741F0: 802681C0 (Regist__9cBgW_BgIdFi)
//	800741F8: 80450F60 (l_SetCounter)
//	80074208: 80450F60 (l_SetCounter)
//	80074230: 802681C8 (Release__9cBgW_BgIdFv)
//	8007423C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dBgW_Base* False
// 	 dBgW_Base False
//  unsigned int False
//  void* False
// 	 void False
asm void cBgS::Regist(dBgW_Base* param_0, unsigned int param_1, void* param_2) {
	nofralloc
#include "asm/d/bg/d_bg_s/Regist__4cBgSFP9dBgW_BaseUiPv.s"
}
#pragma pop


/* 80074250-800742E4 0094+00 s=0 e=2 z=187  None .text      Release__4cBgSFP9dBgW_Base                                   */
//	80074260: 803621DC (_savegpr_29)
//	80074280: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	800742B0: 80074128 (Release__11cBgS_ChkElmFv)
//	800742B8: 802681C8 (Release__9cBgW_BgIdFv)
//	800742D0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
asm void cBgS::Release(dBgW_Base* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/Release__4cBgSFP9dBgW_Base.s"
}
#pragma pop


/* 800742E4-80074338 0054+00 s=2 e=0 z=0  None .text      Ct__4cBgSFv                                                  */
//	800742F4: 803621DC (_savegpr_29)
//	80074300: 80450F60 (l_SetCounter)
//	8007430C: 800740F4 (Init__11cBgS_ChkElmFv)
//	80074324: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void cBgS::Ct() {
	nofralloc
#include "asm/d/bg/d_bg_s/Ct__4cBgSFv.s"
}
#pragma pop


/* 80074338-800743B4 007C+00 s=2 e=0 z=0  None .text      Dt__4cBgSFv                                                  */
//	80074348: 803621DC (_savegpr_29)
//	80074368: 80074128 (Release__11cBgS_ChkElmFv)
//	80074388: 800740F4 (Init__11cBgS_ChkElmFv)
//	800743A0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void cBgS::Dt() {
	nofralloc
#include "asm/d/bg/d_bg_s/Dt__4cBgSFv.s"
}
#pragma pop


/* 800743B4-800744A0 00EC+00 s=0 e=16 z=305  None .text      LineCross__4cBgSFP11cBgS_LinChk                              */
//	800743C4: 803621DC (_savegpr_29)
//	800743D4: 80268120 (ClearPi__13cBgS_PolyInfoFv)
//	800743E8: 80267F40 (PreCalc__11cBgS_LinChkFv)
//	80074424: 80267BDC (ChkSameActorPid__8cBgS_ChkCFUi)
//	80074460: 8026816C (SetActorInfo__13cBgS_PolyInfoFiPvUi)
//	8007448C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
asm void cBgS::LineCross(cBgS_LinChk* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/LineCross__4cBgSFP11cBgS_LinChk.s"
}
#pragma pop


/* ############################################################################################## */
/* 804526B8-804526C0 0004+04 s=1 e=0 z=0  None .sdata2    @3738                                                        */
SECTION_SDATA2 static f32 lit_3738[1 + 1 /* padding */] = {
	-1000000000.0f,
	/* padding */
	0.0f,
};

/* 800744A0-80074578 00D8+00 s=0 e=51 z=231  None .text      GroundCross__4cBgSFP11cBgS_GndChk                            */
//	800744B0: 803621DC (_savegpr_29)
//	800744BC: 804526B8 (lit_3738)
//	800744C8: 80268120 (ClearPi__13cBgS_PolyInfoFv)
//	800744D0: 80267D44 (PreCheck__11cBgS_GndChkFv)
//	8007450C: 80267BDC (ChkSameActorPid__8cBgS_ChkCFUi)
//	80074548: 8026816C (SetActorInfo__13cBgS_PolyInfoFiPvUi)
//	80074564: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
asm void cBgS::GroundCross(cBgS_GndChk* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GroundCross__4cBgSFP11cBgS_GndChk.s"
}
#pragma pop


/* 80074578-80074618 00A0+00 s=0 e=1 z=0  None .text      ConvDzb__4cBgSFPv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
asm void cBgS::ConvDzb(void* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/ConvDzb__4cBgSFPv.s"
}
#pragma pop


/* 80074618-80074628 0010+00 s=0 e=9 z=13  None .text      GetActorPointer__4cBgSCFi                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  int False
asm void cBgS::GetActorPointer(int param_0) const {
	nofralloc
#include "asm/d/bg/d_bg_s/GetActorPointer__4cBgSCFi.s"
}
#pragma pop


/* 80074628-80074660 0038+00 s=2 e=3 z=0  None .text      GetBgWBasePointer__4cBgSCFRC13cBgS_PolyInfo                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void cBgS::GetBgWBasePointer(cBgS_PolyInfo const& param_0) const {
	nofralloc
#include "asm/d/bg/d_bg_s/GetBgWBasePointer__4cBgSCFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074660-800746F4 0094+00 s=3 e=35 z=9  None .text      ChkPolySafe__4cBgSFRC13cBgS_PolyInfo                         */
//	80074680: 802680F8 (ChkSetInfo__13cBgS_PolyInfoCFv)
//	800746D0: 8026817C (ChkSafe__13cBgS_PolyInfoCFPCvUi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void cBgS::ChkPolySafe(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/ChkPolySafe__4cBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 800746F4-80074744 0050+00 s=1 e=0 z=0  None .text      GetGrpRoomId__4cBgSCFRC13cBgS_PolyInfo                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void cBgS::GetGrpRoomId(cBgS_PolyInfo const& param_0) const {
	nofralloc
#include "asm/d/bg/d_bg_s/GetGrpRoomId__4cBgSCFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074744-800747F0 00AC+00 s=4 e=62 z=142  None .text      GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla                */
//	800747CC: 803A37C0 (__vt__8cM3dGPla)
//	800747D0: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
asm void cBgS::GetTriPla(cBgS_PolyInfo const& param_0, cM3dGPla* param_1) const {
	nofralloc
#include "asm/d/bg/d_bg_s/GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla.s"
}
#pragma pop


/* 800747F0-80074840 0050+00 s=0 e=1 z=0  None .text      GetTriPnt__4cBgSCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
asm void cBgS::GetTriPnt(cBgS_PolyInfo const& param_0, cXyz* param_1, cXyz* param_2, cXyz* param_3) const {
	nofralloc
#include "asm/d/bg/d_bg_s/GetTriPnt__4cBgSCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz.s"
}
#pragma pop


/* 80074840-800748AC 006C+00 s=0 e=1 z=0  None .text      ShdwDraw__4cBgSFP13cBgS_ShdwDraw                             */
//	80074850: 803621DC (_savegpr_29)
//	80074898: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_ShdwDraw* False
// 	 cBgS_ShdwDraw False
asm void cBgS::ShdwDraw(cBgS_ShdwDraw* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/ShdwDraw__4cBgSFP13cBgS_ShdwDraw.s"
}
#pragma pop


/* 800748AC-800748FC 0050+00 s=1 e=0 z=0  None .text      GetGrpInf__4cBgSCFRC13cBgS_PolyInfo                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void cBgS::GetGrpInf(cBgS_PolyInfo const& param_0) const {
	nofralloc
#include "asm/d/bg/d_bg_s/GetGrpInf__4cBgSCFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 800748FC-8007491C 0020+00 s=1 e=0 z=0  None .text      Ct__4dBgSFv                                                  */
//	80074908: 800742E4 (Ct__4cBgSFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dBgS::Ct() {
	nofralloc
#include "asm/d/bg/d_bg_s/Ct__4dBgSFv.s"
}
#pragma pop


/* 8007491C-8007493C 0020+00 s=1 e=0 z=0  None .text      Dt__4dBgSFv                                                  */
//	80074928: 80074338 (Dt__4cBgSFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dBgS::Dt() {
	nofralloc
#include "asm/d/bg/d_bg_s/Dt__4dBgSFv.s"
}
#pragma pop


/* 8007493C-800749A8 006C+00 s=0 e=1 z=0  None .text      ClrMoveFlag__4dBgSFv                                         */
//	8007494C: 803621DC (_savegpr_29)
//	80074994: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dBgS::ClrMoveFlag() {
	nofralloc
#include "asm/d/bg/d_bg_s/ClrMoveFlag__4dBgSFv.s"
}
#pragma pop


/* 800749A8-80074A08 0060+00 s=0 e=1 z=0  None .text      Move__4dBgSFv                                                */
//	800749DC: 8007E6E0 (CalcDiffShapeAngleY__9dBgW_BaseFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dBgS::Move() {
	nofralloc
#include "asm/d/bg/d_bg_s/Move__4dBgSFv.s"
}
#pragma pop


/* 80074A08-80074AB4 00AC+00 s=0 e=2 z=127  None .text      Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c                       */
//	80074A18: 803621DC (_savegpr_29)
//	80074A98: 80074144 (Regist__4cBgSFP9dBgW_BaseUiPv)
//	80074AA0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void dBgS::Regist(dBgW_Base* param_0, fopAc_ac_c* param_1) {
	nofralloc
#include "asm/d/bg/d_bg_s/Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c.s"
}
#pragma pop


/* 80074AB4-80074ABC 0008+00 s=0 e=5 z=0  None .text      SetOldShapeAngleY__9dBgW_BaseFs                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  s16 False
asm void dBgW_Base::SetOldShapeAngleY(s16 param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/SetOldShapeAngleY__9dBgW_BaseFs.s"
}
#pragma pop


/* 80074ABC-80074B40 0084+00 s=0 e=11 z=5  None .text      ChkMoveBG__4dBgSFRC13cBgS_PolyInfo                           */
//	80074ACC: 804061C0 (g_dComIfG_gameInfo)
//	80074AD0: 804061C0 (g_dComIfG_gameInfo)
//	80074AD8: 80074628 (GetBgWBasePointer__4cBgSCFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::ChkMoveBG(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/ChkMoveBG__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074B40-80074B98 0058+00 s=0 e=4 z=4  None .text      ChkMoveBG_NoDABg__4dBgSFRC13cBgS_PolyInfo                    */
//	80074B4C: 804061C0 (g_dComIfG_gameInfo)
//	80074B50: 804061C0 (g_dComIfG_gameInfo)
//	80074B58: 80074628 (GetBgWBasePointer__4cBgSCFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::ChkMoveBG_NoDABg(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/ChkMoveBG_NoDABg__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074B98-80074BE8 0050+00 s=0 e=4 z=1  None .text      GetExitId__4dBgSFRC13cBgS_PolyInfo                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetExitId(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetExitId__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074BE8-80074C6C 0084+00 s=0 e=7 z=35  None .text      GetPolyColor__4dBgSFRC13cBgS_PolyInfo                        */
//	80074C08: 802680F8 (ChkSetInfo__13cBgS_PolyInfoCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetPolyColor(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetPolyColor__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074C6C-80074CBC 0050+00 s=0 e=1 z=2  None .text      GetHorseNoEntry__4dBgSFRC13cBgS_PolyInfo                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetHorseNoEntry(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetHorseNoEntry__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074CBC-80074D0C 0050+00 s=0 e=4 z=9  None .text      GetSpecialCode__4dBgSFRC13cBgS_PolyInfo                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetSpecialCode(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetSpecialCode__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074D0C-80074D5C 0050+00 s=0 e=2 z=2  None .text      GetMagnetCode__4dBgSFRC13cBgS_PolyInfo                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetMagnetCode(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetMagnetCode__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074D5C-80074DAC 0050+00 s=0 e=5 z=0  None .text      GetMonkeyBarsCode__4dBgSFRC13cBgS_PolyInfo                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetMonkeyBarsCode(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetMonkeyBarsCode__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074DAC-80074E00 0054+00 s=0 e=0 z=1  None .text      GetUnderwaterRoofCode__4dBgSFRC13cBgS_PolyInfo               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetUnderwaterRoofCode(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetUnderwaterRoofCode__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074E00-80074E50 0050+00 s=0 e=13 z=5  None .text      GetWallCode__4dBgSFRC13cBgS_PolyInfo                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetWallCode(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetWallCode__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074E50-80074EA0 0050+00 s=0 e=29 z=28  None .text      GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetPolyAtt0(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074EA0-80074EF0 0050+00 s=0 e=13 z=0  None .text      GetPolyAtt1__4dBgSFRC13cBgS_PolyInfo                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetPolyAtt1(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetPolyAtt1__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074EF0-80074F40 0050+00 s=0 e=7 z=8  None .text      GetGroundCode__4dBgSFRC13cBgS_PolyInfo                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetGroundCode(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetGroundCode__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074F40-80074F90 0050+00 s=0 e=1 z=0  None .text      GetCamMoveBG__4dBgSFRC13cBgS_PolyInfo                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetCamMoveBG(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetCamMoveBG__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074F90-80074FE0 0050+00 s=0 e=1 z=0  None .text      GetRoomCamId__4dBgSFRC13cBgS_PolyInfo                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetRoomCamId(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetRoomCamId__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80074FE0-80075030 0050+00 s=0 e=2 z=0  None .text      GetRoomPathId__4dBgSFRC13cBgS_PolyInfo                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetRoomPathId(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetRoomPathId__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80075030-80075080 0050+00 s=0 e=1 z=0  None .text      GetRoomPathPntNo__4dBgSFRC13cBgS_PolyInfo                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetRoomPathPntNo(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetRoomPathPntNo__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80075080-800750D0 0050+00 s=0 e=2 z=0  None .text      GetGrpSoundId__4dBgSFRC13cBgS_PolyInfo                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetGrpSoundId(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetGrpSoundId__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 800750D0-80075100 0030+00 s=0 e=1 z=0  None .text      ChkGrpInf__4dBgSFRC13cBgS_PolyInfoUl                         */
//	800750E4: 800748AC (GetGrpInf__4cBgSCFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  u32 False
asm void dBgS::ChkGrpInf(cBgS_PolyInfo const& param_0, u32 param_1) {
	nofralloc
#include "asm/d/bg/d_bg_s/ChkGrpInf__4dBgSFRC13cBgS_PolyInfoUl.s"
}
#pragma pop


/* 80075100-8007519C 009C+00 s=0 e=16 z=60  None .text      GetRoomId__4dBgSFRC13cBgS_PolyInfo                           */
//	80075110: 803621DC (_savegpr_29)
//	80075120: 802680F8 (ChkSetInfo__13cBgS_PolyInfoCFv)
//	80075140: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	80075174: 800746F4 (GetGrpRoomId__4cBgSCFRC13cBgS_PolyInfo)
//	80075188: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetRoomId(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetRoomId__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 8007519C-800751F8 005C+00 s=0 e=3 z=0  None .text      GetPolyAttackThrough__4dBgSFRC13cBgS_PolyInfo                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::GetPolyAttackThrough(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/GetPolyAttackThrough__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 800751F8-8007524C 0054+00 s=0 e=1 z=0  None .text      ChkPolyHSStick__4dBgSFRC13cBgS_PolyInfo                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS::ChkPolyHSStick(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/ChkPolyHSStick__4dBgSFRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 8007524C-80075374 0128+00 s=0 e=1 z=0  None .text      WallCorrect__4dBgSFP9dBgS_Acch                               */
//	8007525C: 803621D0 (_savegpr_26)
//	8007526C: 8007732C (CalcWallRR__9dBgS_AcchFv)
//	80075274: 800772E8 (CalcMovePosWork__9dBgS_AcchFv)
//	800752C4: 80267BDC (ChkSameActorPid__8cBgS_ChkCFUi)
//	80075324: 80077278 (SetNowActorInfo__9dBgS_AcchFiPvUi)
//	80075360: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
asm void dBgS::WallCorrect(dBgS_Acch* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/WallCorrect__4dBgSFP9dBgS_Acch.s"
}
#pragma pop


/* 80075374-8007549C 0128+00 s=0 e=1 z=0  None .text      WallCorrectSort__4dBgSFP9dBgS_Acch                           */
//	80075384: 803621D0 (_savegpr_26)
//	80075394: 8007732C (CalcWallRR__9dBgS_AcchFv)
//	8007539C: 800772E8 (CalcMovePosWork__9dBgS_AcchFv)
//	800753EC: 80267BDC (ChkSameActorPid__8cBgS_ChkCFUi)
//	8007544C: 80077278 (SetNowActorInfo__9dBgS_AcchFiPvUi)
//	80075488: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
asm void dBgS::WallCorrectSort(dBgS_Acch* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/WallCorrectSort__4dBgSFP9dBgS_Acch.s"
}
#pragma pop


/* 8007549C-80075564 00C8+00 s=0 e=17 z=1  None .text      RoofChk__4dBgSFP12dBgS_RoofChk                               */
//	800754AC: 803621DC (_savegpr_29)
//	800754BC: 80079124 (Init__12dBgS_RoofChkFv)
//	800754F8: 80267BDC (ChkSameActorPid__8cBgS_ChkCFUi)
//	80075534: 8026816C (SetActorInfo__13cBgS_PolyInfoFiPvUi)
//	80075550: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dBgS_RoofChk* False
// 	 dBgS_RoofChk False
asm void dBgS::RoofChk(dBgS_RoofChk* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/RoofChk__4dBgSFP12dBgS_RoofChk.s"
}
#pragma pop


/* 80075564-80075688 0124+00 s=0 e=2 z=3  None .text      SplGrpChk__4dBgSFP14dBgS_SplGrpChk                           */
//	80075574: 803621D4 (_savegpr_27)
//	80075588: 80078D0C (Init__14dBgS_SplGrpChkFv)
//	800755C4: 80267BDC (ChkSameActorPid__8cBgS_ChkCFUi)
//	8007564C: 8026816C (SetActorInfo__13cBgS_PolyInfoFiPvUi)
//	80075674: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dBgS_SplGrpChk* False
// 	 dBgS_SplGrpChk False
asm void dBgS::SplGrpChk(dBgS_SplGrpChk* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/SplGrpChk__4dBgSFP14dBgS_SplGrpChk.s"
}
#pragma pop


/* 80075688-80075774 00EC+00 s=0 e=1 z=1  None .text      SphChk__4dBgSFP11dBgS_SphChkPv                               */
//	80075698: 803621D4 (_savegpr_27)
//	800756C4: 80268120 (ClearPi__13cBgS_PolyInfoFv)
//	80075700: 80267BDC (ChkSameActorPid__8cBgS_ChkCFUi)
//	80075740: 8026816C (SetActorInfo__13cBgS_PolyInfoFiPvUi)
//	80075760: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dBgS_SphChk* False
// 	 dBgS_SphChk False
//  void* False
// 	 void False
asm void dBgS::SphChk(dBgS_SphChk* param_0, void* param_1) {
	nofralloc
#include "asm/d/bg/d_bg_s/SphChk__4dBgSFP11dBgS_SphChkPv.s"
}
#pragma pop


/* 80075774-80075880 010C+00 s=0 e=3 z=0  None .text      MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb */
//	80075784: 803621C0 (_savegpr_22)
//	800757B4: 802681AC (ChkBgIndex__13cBgS_PolyInfoCFv)
//	8007582C: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	8007586C: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
//  bool False
//  bool False
asm void dBgS::MoveBgCrrPos(cBgS_PolyInfo const& param_0, bool param_1, cXyz* param_2, csXyz* param_3, csXyz* param_4, bool param_5, bool param_6) {
	nofralloc
#include "asm/d/bg/d_bg_s/MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb.s"
}
#pragma pop


/* 80075880-8007595C 00DC+00 s=0 e=7 z=2  None .text      MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz */
//	80075890: 803621C8 (_savegpr_24)
//	800758B8: 802681AC (ChkBgIndex__13cBgS_PolyInfoCFv)
//	80075908: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	80075948: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
asm void dBgS::MoveBgTransPos(cBgS_PolyInfo const& param_0, bool param_1, cXyz* param_2, csXyz* param_3, csXyz* param_4) {
	nofralloc
#include "asm/d/bg/d_bg_s/MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop


/* 8007595C-80075A24 00C8+00 s=0 e=6 z=0  None .text      MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz */
//	8007596C: 803621C8 (_savegpr_24)
//	80075994: 802681AC (ChkBgIndex__13cBgS_PolyInfoCFv)
//	80075A10: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
asm void dBgS::MoveBgMatrixCrrPos(cBgS_PolyInfo const& param_0, bool param_1, cXyz* param_2, csXyz* param_3, csXyz* param_4) {
	nofralloc
#include "asm/d/bg/d_bg_s/MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop


/* 80075A24-80075AA4 0080+00 s=1 e=0 z=46  None .text      dBgS_MoveBGProc_Typical__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz */
//	80075A48: 803465B0 (PSMTXInverse)
//	80075A60: 80346D6C (PSMTXMultVec)
//	80075A70: 80346D6C (PSMTXMultVec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
asm void dBgS_MoveBGProc_Typical(dBgW* param_0, void* param_1, cBgS_PolyInfo const& param_2, bool param_3, cXyz* param_4, csXyz* param_5, csXyz* param_6) {
	nofralloc
#include "asm/d/bg/d_bg_s/dBgS_MoveBGProc_Typical__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop


/* 80075AA4-80075AD8 0034+00 s=1 e=0 z=0  None .text      dBgS_MoveBGProc_RotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
asm static void dBgS_MoveBGProc_RotY(dBgW* param_0, void* param_1, cBgS_PolyInfo const& param_2, bool param_3, cXyz* param_4, csXyz* param_5, csXyz* param_6) {
	nofralloc
#include "asm/d/bg/d_bg_s/dBgS_MoveBGProc_RotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop


/* 80075AD8-80075B44 006C+00 s=0 e=0 z=124  None .text      dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz */
//	80075AE8: 803621CC (_savegpr_25)
//	80075B08: 80075A24 (dBgS_MoveBGProc_Typical__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80075B28: 80075AA4 (dBgS_MoveBGProc_RotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80075B30: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
asm void dBgS_MoveBGProc_TypicalRotY(dBgW* param_0, void* param_1, cBgS_PolyInfo const& param_2, bool param_3, cXyz* param_4, csXyz* param_5, csXyz* param_6) {
	nofralloc
#include "asm/d/bg/d_bg_s/dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop


/* 80075B44-80075B84 0040+00 s=0 e=0 z=10  None .text      dBgS_MoveBGProc_Trans__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz */
//	80075B5C: 8007B17C (GetTrans__4cBgWCFP4cXyz)
//	80075B6C: 80347090 (PSVECAdd)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
asm void dBgS_MoveBGProc_Trans(dBgW* param_0, void* param_1, cBgS_PolyInfo const& param_2, bool param_3, cXyz* param_4, csXyz* param_5, csXyz* param_6) {
	nofralloc
#include "asm/d/bg/d_bg_s/dBgS_MoveBGProc_Trans__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop


/* 80075B84-80075BF4 0070+00 s=0 e=1 z=2  None .text      RideCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_c           */
//	80075B94: 803621D8 (_savegpr_28)
//	80075BB0: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80075BE0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void dBgS::RideCallBack(cBgS_PolyInfo const& param_0, fopAc_ac_c* param_1) {
	nofralloc
#include "asm/d/bg/d_bg_s/RideCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_c.s"
}
#pragma pop


/* 80075BF4-80075C6C 0078+00 s=0 e=0 z=2  None .text      ArrowStickCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_cR4cXyz */
//	80075C04: 803621D4 (_savegpr_27)
//	80075C24: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80075C58: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz& False
// 	 cXyz False
asm void dBgS::ArrowStickCallBack(cBgS_PolyInfo const& param_0, fopAc_ac_c* param_1, cXyz& param_2) {
	nofralloc
#include "asm/d/bg/d_bg_s/ArrowStickCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_cR4cXyz.s"
}
#pragma pop


/* 80075C6C-80075D0C 00A0+00 s=0 e=1 z=0  None .text      PushPullCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_csQ29dBgW_Base13PushPullLabel */
//	80075C7C: 803621D0 (_savegpr_26)
//	80075CA0: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80075CF8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  dBgW_Base::PushPullLabel False
asm void dBgS::PushPullCallBack(cBgS_PolyInfo const& param_0, fopAc_ac_c* param_1, s16 param_2, dBgW_Base::PushPullLabel param_3) {
	nofralloc
#include "asm/d/bg/d_bg_s/PushPullCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_csQ29dBgW_Base13PushPullLabel.s"
}
#pragma pop


/* 80075D0C-80075D7C 0070+00 s=0 e=8 z=1  None .text      dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo                      */
//	80075D1C: 803A37C0 (__vt__8cM3dGPla)
//	80075D20: 803A37C0 (__vt__8cM3dGPla)
//	80075D28: 804061C0 (g_dComIfG_gameInfo)
//	80075D2C: 804061C0 (g_dComIfG_gameInfo)
//	80075D38: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80075D44: 803A37C0 (__vt__8cM3dGPla)
//	80075D48: 803A37C0 (__vt__8cM3dGPla)
//	80075D5C: 80268210 (cBgW_CheckBWall__Ff)
//	80075D60: 803A37C0 (__vt__8cM3dGPla)
//	80075D64: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS_CheckBWallPoly(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80075D7C-80075DEC 0070+00 s=0 e=3 z=1  None .text      dBgS_CheckBGroundPoly__FRC13cBgS_PolyInfo                    */
//	80075D8C: 803A37C0 (__vt__8cM3dGPla)
//	80075D90: 803A37C0 (__vt__8cM3dGPla)
//	80075D98: 804061C0 (g_dComIfG_gameInfo)
//	80075D9C: 804061C0 (g_dComIfG_gameInfo)
//	80075DA8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80075DB4: 803A37C0 (__vt__8cM3dGPla)
//	80075DB8: 803A37C0 (__vt__8cM3dGPla)
//	80075DCC: 802681E4 (cBgW_CheckBGround__Ff)
//	80075DD0: 803A37C0 (__vt__8cM3dGPla)
//	80075DD4: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS_CheckBGroundPoly(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/dBgS_CheckBGroundPoly__FRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80075DEC-80075E5C 0070+00 s=0 e=0 z=1  None .text      dBgS_CheckBRoofPoly__FRC13cBgS_PolyInfo                      */
//	80075DFC: 803A37C0 (__vt__8cM3dGPla)
//	80075E00: 803A37C0 (__vt__8cM3dGPla)
//	80075E08: 804061C0 (g_dComIfG_gameInfo)
//	80075E0C: 804061C0 (g_dComIfG_gameInfo)
//	80075E18: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80075E24: 803A37C0 (__vt__8cM3dGPla)
//	80075E28: 803A37C0 (__vt__8cM3dGPla)
//	80075E3C: 802681FC (cBgW_CheckBRoof__Ff)
//	80075E40: 803A37C0 (__vt__8cM3dGPla)
//	80075E44: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS_CheckBRoofPoly(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/dBgS_CheckBRoofPoly__FRC13cBgS_PolyInfo.s"
}
#pragma pop


/* 80075E5C-80075EAC 0050+00 s=0 e=1 z=0  None .text      dBgS_GetNY__FRC13cBgS_PolyInfo                               */
//	80075E6C: 803A37C0 (__vt__8cM3dGPla)
//	80075E70: 803A37C0 (__vt__8cM3dGPla)
//	80075E78: 804061C0 (g_dComIfG_gameInfo)
//	80075E7C: 804061C0 (g_dComIfG_gameInfo)
//	80075E88: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80075E90: 803A37C0 (__vt__8cM3dGPla)
//	80075E94: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
asm void dBgS_GetNY(cBgS_PolyInfo const& param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s/dBgS_GetNY__FRC13cBgS_PolyInfo.s"
}
#pragma pop


/* ############################################################################################## */
/* 803AB608-803AB61C 0014+00 s=0 e=3 z=0  None .data      __vt__4dBgS                                                  */
SECTION_DATA void* __vt__4dBgS[5] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__4dBgSFv,
	(void*)Ct__4dBgSFv,
	(void*)Dt__4dBgSFv,
};

/* 803AB61C-803AB630 0014+00 s=0 e=4 z=0  None .data      __vt__4cBgS                                                  */
SECTION_DATA void* __vt__4cBgS[5] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__4cBgSFv,
	(void*)Ct__4cBgSFv,
	(void*)Dt__4cBgSFv,
};

/* 803AB630-803AB640 0010+00 s=0 e=2 z=0  None .data      __vt__11cBgS_ChkElm                                          */
SECTION_DATA void* __vt__11cBgS_ChkElm[4] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__11cBgS_ChkElmFv,
	(void*)Regist2__11cBgS_ChkElmFP9dBgW_BaseUiPv,
};

/* 80450F68-80450F70 0008+00 s=0 e=1 z=0  None .sbss      None                                                         */
u8 data_80450F68[8];

