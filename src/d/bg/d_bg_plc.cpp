// 
// Generated By: dol2asm
// Translation Unit: d/bg/d_bg_plc
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/bg/d_bg_plc.h"

// 
// Types:
// 

struct sBgPc {
};

struct dBgPlc {
	/* 80074074 */ // False False
dBgPlc();
	/* 80074080 */ // False False
~dBgPlc();
	/* 800740BC */ // False False
//  void* False
// 	 void False
void setBase(void*);
	/* 800740C4 */ // False False
//  int False
//  sBgPc** False
// 	 sBgPc* False
// 		 sBgPc False
void getCode(int, sBgPc**) const;
	/* 800740DC */ // False False
//  int False
void getGrpCode(int) const;
};

// 
// Forward References:
// 


// False False
extern "C" void __ct__6dBgPlcFv();
// False False
extern "C" void __dt__6dBgPlcFv();
// False False
//  void* False
// 	 void False
extern "C" void setBase__6dBgPlcFPv();
// False False
//  int False
//  sBgPc** False
// 	 sBgPc* False
// 		 sBgPc False
extern "C" void getCode__6dBgPlcCFiPP5sBgPc();
// False False
//  int False
extern "C" void getGrpCode__6dBgPlcCFi();

// 
// External References:
// 

// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();

// 
// Declarations:
// 

/* 80074074-80074080 000C+00 s=0 e=1 z=0  None .text      __ct__6dBgPlcFv                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm dBgPlc::dBgPlc() {
	nofralloc
#include "asm/d/bg/d_bg_plc/__ct__6dBgPlcFv.s"
}
#pragma pop


/* 80074080-800740BC 003C+00 s=0 e=1 z=0  None .text      __dt__6dBgPlcFv                                              */
//	800740A0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm dBgPlc::~dBgPlc() {
	nofralloc
#include "asm/d/bg/d_bg_plc/__dt__6dBgPlcFv.s"
}
#pragma pop


/* 800740BC-800740C4 0008+00 s=0 e=1 z=0  None .text      setBase__6dBgPlcFPv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
asm void dBgPlc::setBase(void* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_plc/setBase__6dBgPlcFPv.s"
}
#pragma pop


/* 800740C4-800740DC 0018+00 s=0 e=1 z=0  None .text      getCode__6dBgPlcCFiPP5sBgPc                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  int False
//  sBgPc** False
// 	 sBgPc* False
// 		 sBgPc False
asm void dBgPlc::getCode(int param_0, sBgPc** param_1) const {
	nofralloc
#include "asm/d/bg/d_bg_plc/getCode__6dBgPlcCFiPP5sBgPc.s"
}
#pragma pop


/* 800740DC-800740F4 0018+00 s=0 e=1 z=0  None .text      getGrpCode__6dBgPlcCFi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  int False
asm void dBgPlc::getGrpCode(int param_0) const {
	nofralloc
#include "asm/d/bg/d_bg_plc/getGrpCode__6dBgPlcCFi.s"
}
#pragma pop


