// 
// Generated By: dol2asm
// Translation Unit: d/bg/d_bg_s_movebg_actor
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/bg/d_bg_s_movebg_actor.h"

// 
// Types:
// 

struct mDoMtx_stack_c {
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dBgW_Base {
};

struct dBgW {
	/* 8007B970 */ // False False
dBgW();
	/* 8007B9C0 */ // False False
void Move();
};

struct cXyz {
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 80078688 */ // False False
//  bool False
bool CreateHeap();
	/* 80078690 */ // False False
//  bool False
bool Create();
	/* 80078698 */ // False False
//  bool False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
bool Execute(f32 (** )[3][4]);
	/* 800786A0 */ // False False
//  bool False
bool Draw();
	/* 800786A8 */ // False False
//  bool False
bool Delete();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800786C8 */ // True False
void MoveBGCreateHeap();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS {
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgD_t {
};

struct cBgW {
	/* 80079F38 */ // False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void Set(cBgD_t*, u32, f32 (* )[3][4]);
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void CheckCreateHeap(fopAc_ac_c*);

// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void CheckCreateHeap__FP10fopAc_ac_c();
// False False
//  bool False
extern "C" bool CreateHeap__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool Create__16dBgS_MoveBgActorFv();
// False False
//  bool False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" bool Execute__16dBgS_MoveBgActorFPPA3_A4_f();
// False False
//  bool False
extern "C" bool Draw__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool Delete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// True False
extern "C" void MoveBGCreateHeap__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
extern "C" extern void* __vt__16dBgS_MoveBgActor[10];
extern "C" extern u8 m_set_func__16dBgS_MoveBgActor[4 + 4 /* padding */];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
// False False
extern "C" void __ct__4dBgWFv();
// False False
extern "C" void Move__4dBgWFv();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _restgpr_27();
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803AB9A0-803AB9C8 0028+00 s=1 e=0 z=34  None .data      __vt__16dBgS_MoveBgActor                                     */
SECTION_DATA void* __vt__16dBgS_MoveBgActor[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__16dBgS_MoveBgActorFv,
	(void*)Create__16dBgS_MoveBgActorFv,
	(void*)Execute__16dBgS_MoveBgActorFPPA3_A4_f,
	(void*)Draw__16dBgS_MoveBgActorFv,
	(void*)Delete__16dBgS_MoveBgActorFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80078624-80078668 0044+00 s=0 e=0 z=173  None .text      __ct__16dBgS_MoveBgActorFv                                   */
//	80078638: 80018B64 (__ct__10fopAc_ac_cFv)
//	8007863C: 803AB9A0 (__vt__16dBgS_MoveBgActor)
//	80078640: 803AB9A0 (__vt__16dBgS_MoveBgActor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm dBgS_MoveBgActor::dBgS_MoveBgActor() {
	nofralloc
#include "asm/d/bg/d_bg_s_movebg_actor/__ct__16dBgS_MoveBgActorFv.s"
}
#pragma pop


/* 80078668-80078688 0020+00 s=1 e=0 z=0  None .text      CheckCreateHeap__FP10fopAc_ac_c                              */
//	80078674: 800786C8 (MoveBGCreateHeap__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void CheckCreateHeap(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/d/bg/d_bg_s_movebg_actor/CheckCreateHeap__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80078688-80078690 0008+00 s=1 e=0 z=2  None .text      CreateHeap__16dBgS_MoveBgActorFv                             */
// False False
//  bool False
bool dBgS_MoveBgActor::CreateHeap() {
	return true;
}


/* 80078690-80078698 0008+00 s=1 e=0 z=60  None .text      Create__16dBgS_MoveBgActorFv                                 */
// False False
//  bool False
bool dBgS_MoveBgActor::Create() {
	return true;
}


/* 80078698-800786A0 0008+00 s=1 e=0 z=3  None .text      Execute__16dBgS_MoveBgActorFPPA3_A4_f                        */
// False False
//  bool False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
bool dBgS_MoveBgActor::Execute(f32 (** param_0)[3][4]) {
	return true;
}


/* 800786A0-800786A8 0008+00 s=1 e=0 z=2  None .text      Draw__16dBgS_MoveBgActorFv                                   */
// False False
//  bool False
bool dBgS_MoveBgActor::Draw() {
	return true;
}


/* 800786A8-800786B0 0008+00 s=1 e=0 z=6  None .text      Delete__16dBgS_MoveBgActorFv                                 */
// False False
//  bool False
bool dBgS_MoveBgActor::Delete() {
	return true;
}


/* 800786B0-800786B8 0008+00 s=1 e=0 z=171  None .text      IsDelete__16dBgS_MoveBgActorFv                               */
// False False
//  bool False
bool dBgS_MoveBgActor::IsDelete() {
	return true;
}


/* 800786B8-800786C0 0008+00 s=1 e=0 z=171  None .text      ToFore__16dBgS_MoveBgActorFv                                 */
// False False
//  bool False
bool dBgS_MoveBgActor::ToFore() {
	return true;
}


/* 800786C0-800786C8 0008+00 s=1 e=0 z=171  None .text      ToBack__16dBgS_MoveBgActorFv                                 */
// False False
//  bool False
bool dBgS_MoveBgActor::ToBack() {
	return true;
}


/* ############################################################################################## */
/* 80450F70-80450F74 0004+00 s=2 e=0 z=0  None .sbss      m_name__16dBgS_MoveBgActor                                   */
static u8 m_name__16dBgS_MoveBgActor[4];

/* 80450F74-80450F78 0004+00 s=2 e=0 z=0  None .sbss      m_dzb_id__16dBgS_MoveBgActor                                 */
static u8 m_dzb_id__16dBgS_MoveBgActor[4];

/* 80450F78-80450F80 0004+04 s=2 e=0 z=1  None .sbss      m_set_func__16dBgS_MoveBgActor                               */
u8 m_set_func__16dBgS_MoveBgActor[4 + 4 /* padding */];

/* 800786C8-800787BC 00F4+00 s=1 e=0 z=0  None .text      MoveBGCreateHeap__16dBgS_MoveBgActorFv                       */
//	800786FC: 80450F74 (m_dzb_id__16dBgS_MoveBgActor)
//	8007871C: 802CEC4C (__nw__FUl)
//	80078728: 8007B970 (__ct__4dBgWFv)
//	80078740: 80450F70 (m_name__16dBgS_MoveBgActor)
//	80078744: 80450F74 (m_dzb_id__16dBgS_MoveBgActor)
//	80078748: 804061C0 (g_dComIfG_gameInfo)
//	8007874C: 804061C0 (g_dComIfG_gameInfo)
//	8007875C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80078770: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
//	8007877C: 80450F78 (m_set_func__16dBgS_MoveBgActor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dBgS_MoveBgActor::MoveBGCreateHeap() {
	nofralloc
#include "asm/d/bg/d_bg_s_movebg_actor/MoveBGCreateHeap__16dBgS_MoveBgActorFv.s"
}
#pragma pop


/* 800787BC-800788DC 0120+00 s=0 e=0 z=169  None .text      MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f */
//	800787CC: 803621D4 (_savegpr_27)
//	800787EC: 803DD470 (now__14mDoMtx_stack_c)
//	800787F0: 803DD470 (now__14mDoMtx_stack_c)
//	80078800: 803468E8 (PSMTXTrans)
//	80078804: 803DD470 (now__14mDoMtx_stack_c)
//	80078808: 803DD470 (now__14mDoMtx_stack_c)
//	80078810: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80078820: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80078824: 803DD470 (now__14mDoMtx_stack_c)
//	80078828: 803DD470 (now__14mDoMtx_stack_c)
//	80078830: 803464B0 (PSMTXCopy)
//	80078840: 803464B0 (PSMTXCopy)
//	80078844: 80450F70 (m_name__16dBgS_MoveBgActor)
//	80078848: 80450F74 (m_dzb_id__16dBgS_MoveBgActor)
//	8007884C: 80450F78 (m_set_func__16dBgS_MoveBgActor)
//	80078854: 80078668 (CheckCreateHeap__FP10fopAc_ac_c)
//	80078858: 80078668 (CheckCreateHeap__FP10fopAc_ac_c)
//	80078860: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80078880: 804061C0 (g_dComIfG_gameInfo)
//	80078884: 804061C0 (g_dComIfG_gameInfo)
//	80078890: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	800788C8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
asm void dBgS_MoveBgActor::MoveBGCreate(char const* param_0, int param_1, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32 param_3, f32 (* param_4)[3][4]) {
	nofralloc
#include "asm/d/bg/d_bg_s_movebg_actor/func_800787BC.s"
}
#pragma pop


/* 800788DC-80078950 0074+00 s=0 e=0 z=169  None .text      MoveBGDelete__16dBgS_MoveBgActorFv                           */
//	80078914: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80078920: 804061C0 (g_dComIfG_gameInfo)
//	80078924: 804061C0 (g_dComIfG_gameInfo)
//	80078930: 80074250 (Release__4cBgSFP9dBgW_Base)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dBgS_MoveBgActor::MoveBGDelete() {
	nofralloc
#include "asm/d/bg/d_bg_s_movebg_actor/MoveBGDelete__16dBgS_MoveBgActorFv.s"
}
#pragma pop


/* 80078950-80078A14 00C4+00 s=0 e=0 z=183  None .text      MoveBGExecute__16dBgS_MoveBgActorFv                          */
//	80078994: 803DD470 (now__14mDoMtx_stack_c)
//	80078998: 803DD470 (now__14mDoMtx_stack_c)
//	800789A8: 803468E8 (PSMTXTrans)
//	800789AC: 803DD470 (now__14mDoMtx_stack_c)
//	800789B0: 803DD470 (now__14mDoMtx_stack_c)
//	800789B8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800789C8: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	800789CC: 803DD470 (now__14mDoMtx_stack_c)
//	800789D0: 803DD470 (now__14mDoMtx_stack_c)
//	800789D8: 803464B0 (PSMTXCopy)
//	800789E4: 803464B0 (PSMTXCopy)
//	800789F4: 8007B9C0 (Move__4dBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dBgS_MoveBgActor::MoveBGExecute() {
	nofralloc
#include "asm/d/bg/d_bg_s_movebg_actor/MoveBGExecute__16dBgS_MoveBgActorFv.s"
}
#pragma pop


