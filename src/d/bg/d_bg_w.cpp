//
// Generated By: dol2asm
// Translation Unit: d/bg/d_bg_w
//

#include "d/bg/d_bg_w.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct fopAc_ac_c {};

struct cXyz {};

struct dBgW_Base {
    /* 80074AB4 */ void SetOldShapeAngleY(s16);
    /* 8007E5A8 */ dBgW_Base();
    /* 8007E640 */ ~dBgW_Base();
    /* 8007E6D8 */ void CallRideCallBack(fopAc_ac_c*, fopAc_ac_c*);
    /* 8007E6DC */ void CallArrowStickCallBack(fopAc_ac_c*, fopAc_ac_c*, cXyz&);
};

struct Vec {};

struct dBgS_Acch {
    /* 800771E4 */ void GetSpeedY();
    /* 80077200 */ void GetWallAddY(Vec&);
    /* 80077288 */ void SetWallPolyIndex(int, int);
    /* 800772E8 */ void CalcMovePosWork();
};

struct cBgS_PolyPassChk {};

struct cM3dGPla {
    /* 8026F57C */ void getCrossY(cXyz const&, f32*) const;
};

struct cBgS_GrpPassChk {};

struct dBgS_SplGrpChk {};

struct dBgS_RoofChk {};

struct dBgS_SphChk {};

struct csXyz {};

struct cBgS_PolyInfo {
    /* 802681A4 */ void SetPolyIndex(int);
};

struct dBgS_CaptPoly {};

struct dBgW {
    /* 8007B3AC */ void GetExitId(cBgS_PolyInfo const&);
    /* 8007B3D8 */ void GetPolyColor(cBgS_PolyInfo const&);
    /* 8007B404 */ void GetHorseNoEntry(cBgS_PolyInfo const&);
    /* 8007B430 */ void GetSpecialCode(cBgS_PolyInfo const&);
    /* 8007B460 */ void GetSpecialCode(int);
    /* 8007B488 */ void GetMagnetCode(cBgS_PolyInfo const&);
    /* 8007B4B4 */ void GetMonkeyBarsCode(cBgS_PolyInfo const&);
    /* 8007B4E0 */ void GetPolyObjThrough(int);
    /* 8007B504 */ void GetPolyCamThrough(int);
    /* 8007B52C */ void GetPolyLinkThrough(int);
    /* 8007B550 */ void GetPolyArrowThrough(int);
    /* 8007B574 */ void GetPolyHSStick(int);
    /* 8007B598 */ void GetPolyBoomerangThrough(int);
    /* 8007B5BC */ void GetPolyRopeThrough(int);
    /* 8007B5E0 */ void GetPolyBombThrough(int);
    /* 8007B604 */ void GetShdwThrough(int);
    /* 8007B630 */ void GetUnderwaterRoofCode(int);
    /* 8007B6AC */ void GetLinkNo(cBgS_PolyInfo const&);
    /* 8007B6D8 */ void GetWallCode(cBgS_PolyInfo const&);
    /* 8007B704 */ void GetPolyAtt0(cBgS_PolyInfo const&);
    /* 8007B734 */ void GetPolyAtt1(cBgS_PolyInfo const&);
    /* 8007B760 */ void GetGroundCode(cBgS_PolyInfo const&);
    /* 8007B7DC */ void GetIronBallThrough(int);
    /* 8007B800 */ void GetAttackThrough(int);
    /* 8007B87C */ void GetCamMoveBG(cBgS_PolyInfo const&);
    /* 8007B8A8 */ void GetRoomCamId(cBgS_PolyInfo const&);
    /* 8007B8D8 */ void GetRoomPathId(cBgS_PolyInfo const&);
    /* 8007B904 */ void GetRoomPathPntNo(cBgS_PolyInfo const&);
    /* 8007B970 */ dBgW();
    /* 8007B9C0 */ void Move();
    /* 8007B9EC */ void positionWallCorrect(dBgS_Acch*, f32, cM3dGPla&, cXyz*, f32);
    /* 8007BA40 */ void RwgWallCorrect(dBgS_Acch*, u16);
    /* 8007C234 */ void WallCorrectRp(dBgS_Acch*, int);
    /* 8007C360 */ void WallCorrectGrpRp(dBgS_Acch*, int, int);
    /* 8007C484 */ void WallCorrect(dBgS_Acch*);
    /* 8007C4AC */ void RwgWallCorrectSort(dBgS_Acch*, u16);
    /* 8007C714 */ void WallCorrectRpSort(dBgS_Acch*, int);
    /* 8007C808 */ void WallCorrectGrpRpSort(dBgS_Acch*, int, int);
    /* 8007C910 */ void WallCorrectSort(dBgS_Acch*);
    /* 8007D0DC */ void RwgRoofChk(u16, dBgS_RoofChk*);
    /* 8007D208 */ void RoofChkRp(dBgS_RoofChk*, int);
    /* 8007D330 */ void RoofChkGrpRp(dBgS_RoofChk*, int, int);
    /* 8007D470 */ void RoofChk(dBgS_RoofChk*);
    /* 8007D498 */ void RwgSplGrpChk(u16, dBgS_SplGrpChk*);
    /* 8007D5C4 */ void SplGrpChkRp(dBgS_SplGrpChk*, int);
    /* 8007D6F0 */ void SplGrpChkGrpRp(dBgS_SplGrpChk*, int, int);
    /* 8007D830 */ void SplGrpChk(dBgS_SplGrpChk*);
    /* 8007D858 */ void RwgCaptPoly(int, dBgS_CaptPoly&);
    /* 8007D8E8 */ void CaptPolyRp(dBgS_CaptPoly&, int);
    /* 8007DA04 */ void CaptPolyGrpRp(dBgS_CaptPoly&, int, int);
    /* 8007DAF8 */ void CaptPoly(dBgS_CaptPoly&);
    /* 8007DB20 */ void RwgSphChk(u16, dBgS_SphChk*, void*);
    /* 8007DC70 */ void SphChkRp(dBgS_SphChk*, void*, int);
    /* 8007DDE0 */ void SphChkGrpRp(dBgS_SphChk*, void*, int, int);
    /* 8007DF00 */ void SphChk(dBgS_SphChk*, void*);
    /* 8007DF28 */ void GetPolyGrpRoomInfId(cBgS_PolyInfo const&);
    /* 8007DF58 */ void GetGrpSoundId(cBgS_PolyInfo const&);
    /* 8007DF88 */ void CrrPos(cBgS_PolyInfo const&, void*, bool, cXyz*, csXyz*, csXyz*);
    /* 8007DFC4 */ void TransPos(cBgS_PolyInfo const&, void*, bool, cXyz*, csXyz*, csXyz*);
    /* 8007E000 */ void MatrixCrrPos(cBgS_PolyInfo const&, void*, bool, cXyz*, csXyz*, csXyz*);
    /* 8007E02C */ void ChkPolyThrough(int, cBgS_PolyPassChk*);
    /* 8007E360 */ void ChkShdwDrawThrough(int, cBgS_PolyPassChk*);
    /* 8007E3D8 */ void ChkGrpThrough(int, cBgS_GrpPassChk*, int);
    /* 8007E444 */ void CallRideCallBack(fopAc_ac_c*, fopAc_ac_c*);
    /* 8007E474 */ void CallArrowStickCallBack(fopAc_ac_c*, fopAc_ac_c*, cXyz&);
    /* 8007E4A4 */ void OffMoveFlag();
    /* 8007E4B4 */ void ChkMoveFlag() const;
    /* 8007E548 */ ~dBgW();
};

struct dBgS_PolyPassChk {
    /* 80078F04 */ void ChkNoHorse();
};

struct cM3dGTri {
    /* 8007A344 */ ~cM3dGTri();
    /* 8026F85C */ void setBg(Vec const*, Vec const*, Vec const*, cM3dGPla const*);
};

struct cM3dGSph {};

struct cM3dGLin {
    /* 8026F3C0 */ void SetEnd(cXyz const&);
};

struct cM3dGCyl {};

struct cM3dGAab {
    /* 8026EC88 */ void CrossY(cXyz const*) const;
    /* 8026ECD0 */ void UnderPlaneYUnder(f32) const;
    /* 8026ECE4 */ void TopPlaneYUnder(f32) const;
    /* 8026ECF8 */ void ClearForMinMax();
    /* 8026ED1C */ void SetMinMax(cXyz const&);
    /* 8026EDA4 */ void SetMin(cXyz const&);
    /* 8026EDE4 */ void SetMax(cXyz const&);
};

struct cM2dGCir {};

struct cBgW_TriElm {
    /* 800796F8 */ ~cBgW_TriElm();
    /* 80079754 */ cBgW_TriElm();
};

struct cBgW_RwgElm {
    /* 800791C4 */ cBgW_RwgElm();
    /* 800791D4 */ ~cBgW_RwgElm();
};

struct cBgW_NodeTree {
    /* 8007921C */ cBgW_NodeTree();
    /* 80079238 */ ~cBgW_NodeTree();
};

struct cBgW_GrpElm {
    /* 8007A184 */ ~cBgW_GrpElm();
    /* 8007A1E4 */ cBgW_GrpElm();
};

struct cBgS_ShdwDraw {};

struct cBgS_LinChk {};

struct cBgS_GndChk {};

struct cBgD_t {};

struct cBgW {
    /* 80079294 */ cBgW();
    /* 8007933C */ ~cBgW();
    /* 800793A4 */ void FreeArea();
    /* 800793C4 */ void GlobalVtx();
    /* 80079484 */ void SetVtx();
    /* 80079564 */ void CalcPlane();
    /* 80079668 */ void SetTri();
    /* 80079770 */ void BlckConnect(u16*, int*, int);
    /* 800797BC */ void ClassifyPlane();
    /* 8007998C */ void MakeBlckTransMinMax(cXyz*, cXyz*);
    /* 800799E0 */ void MakeBlckMinMax(int, cXyz*, cXyz*);
    /* 80079A68 */ void MakeBlckBnd(int, cXyz*, cXyz*);
    /* 80079BDC */ void MakeNodeTreeRp(int);
    /* 80079CC4 */ void MakeNodeTreeGrpRp(int);
    /* 80079DF0 */ void MakeNodeTree();
    /* 80079EEC */ void ChkMemoryError();
    /* 80079F38 */ void Set(cBgD_t*, u32, f32 (*)[3][4]);
    /* 8007A200 */ void RwgLineCheck(u16, cBgS_LinChk*);
    /* 8007A3A0 */ void LineCheckRp(cBgS_LinChk*, int);
    /* 8007A52C */ void LineCheckGrpRp(cBgS_LinChk*, int, int);
    /* 8007A658 */ void LineCheck(cBgS_LinChk*);
    /* 8007A680 */ void RwgGroundCheckCommon(f32, u16, cBgS_GndChk*);
    /* 8007A774 */ void RwgGroundCheckGnd(u16, cBgS_GndChk*);
    /* 8007A824 */ void RwgGroundCheckWall(u16, cBgS_GndChk*);
    /* 8007A8F4 */ void GroundCrossRp(cBgS_GndChk*, int);
    /* 8007AA50 */ void GroundCrossGrpRp(cBgS_GndChk*, int, int);
    /* 8007AB9C */ void GroundCross(cBgS_GndChk*);
    /* 8007ABC4 */ void CopyOldMtx();
    /* 8007AC10 */ void Move();
    /* 8007ADF0 */ void RwgShdwDraw(int, cBgS_ShdwDraw*);
    /* 8007AEA4 */ void ShdwDrawRp(cBgS_ShdwDraw*, int);
    /* 8007AFC0 */ void ShdwDrawGrpRp(cBgS_ShdwDraw*, int);
    /* 8007B084 */ void ShdwDraw(cBgS_ShdwDraw*);
    /* 8007B0A8 */ bool ChkPolyThrough(int, cBgS_PolyPassChk*);
    /* 8007B0B0 */ void ChkShdwDrawThrough(int, cBgS_PolyPassChk*);
    /* 8007B0DC */ bool ChkGrpThrough(int, cBgS_GrpPassChk*, int);
    /* 8007B0E4 */ void GetGrpRoomIndex(cBgS_PolyInfo const&) const;
    /* 8007B164 */ void GetBnd() const;
    /* 8007B17C */ void GetTrans(cXyz*) const;
    /* 8007B1B4 */ void GetTriPnt(cBgS_PolyInfo const&, cXyz*, cXyz*, cXyz*) const;
    /* 8007B240 */ void GetTopUnder(f32*, f32*) const;
    /* 8007B270 */ void GetTriPla(cBgS_PolyInfo const&) const;
    /* 8007B2B0 */ void GetGrpInf(cBgS_PolyInfo const&) const;
    /* 8007B2F4 */ void GetPolyInfId(int) const;
    /* 8007B30C */ void GetPolyInf0(int, u32, u32) const;
    /* 8007B360 */ void GetMaskPolyInf0_NoShift(int, u32) const;
    /* 8007B654 */ void GetPolyInf1(int, u32, u32) const;
    /* 8007B78C */ void GetMaskPolyInf1_NoShift(int, u32) const;
    /* 8007B824 */ void GetPolyInf2(int, u32, u32) const;
    /* 8007B930 */ void GetTriGrp(int) const;
    /* 8007B948 */ void ChkNotReady() const;
    /* 8007B958 */ void ChkLock() const;
    /* 8007B964 */ void ChkMoveBg() const;
};

//
// Forward References:
//

void dBgW_NewSet(cBgD_t*, u32, f32 (*)[3][4]);

extern "C" void __ct__11cBgW_RwgElmFv();
extern "C" void __dt__11cBgW_RwgElmFv();
extern "C" void __ct__13cBgW_NodeTreeFv();
extern "C" void __dt__13cBgW_NodeTreeFv();
extern "C" void __ct__4cBgWFv();
extern "C" void __dt__4cBgWFv();
extern "C" void FreeArea__4cBgWFv();
extern "C" void GlobalVtx__4cBgWFv();
extern "C" void SetVtx__4cBgWFv();
extern "C" void CalcPlane__4cBgWFv();
extern "C" void SetTri__4cBgWFv();
extern "C" void __dt__11cBgW_TriElmFv();
extern "C" void __ct__11cBgW_TriElmFv();
extern "C" void BlckConnect__4cBgWFPUsPii();
extern "C" void ClassifyPlane__4cBgWFv();
extern "C" void MakeBlckTransMinMax__4cBgWFP4cXyzP4cXyz();
extern "C" void MakeBlckMinMax__4cBgWFiP4cXyzP4cXyz();
extern "C" void MakeBlckBnd__4cBgWFiP4cXyzP4cXyz();
extern "C" void MakeNodeTreeRp__4cBgWFi();
extern "C" void MakeNodeTreeGrpRp__4cBgWFi();
extern "C" void MakeNodeTree__4cBgWFv();
extern "C" void ChkMemoryError__4cBgWFv();
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
extern "C" void __dt__11cBgW_GrpElmFv();
extern "C" void __ct__11cBgW_GrpElmFv();
extern "C" void RwgLineCheck__4cBgWFUsP11cBgS_LinChk();
extern "C" void __dt__8cM3dGTriFv();
extern "C" void LineCheckRp__4cBgWFP11cBgS_LinChki();
extern "C" void LineCheckGrpRp__4cBgWFP11cBgS_LinChkii();
extern "C" void LineCheck__4cBgWFP11cBgS_LinChk();
extern "C" void RwgGroundCheckCommon__4cBgWFfUsP11cBgS_GndChk();
extern "C" void RwgGroundCheckGnd__4cBgWFUsP11cBgS_GndChk();
extern "C" void RwgGroundCheckWall__4cBgWFUsP11cBgS_GndChk();
extern "C" void GroundCrossRp__4cBgWFP11cBgS_GndChki();
extern "C" void GroundCrossGrpRp__4cBgWFP11cBgS_GndChkii();
extern "C" void GroundCross__4cBgWFP11cBgS_GndChk();
extern "C" void CopyOldMtx__4cBgWFv();
extern "C" void Move__4cBgWFv();
extern "C" void RwgShdwDraw__4cBgWFiP13cBgS_ShdwDraw();
extern "C" void ShdwDrawRp__4cBgWFP13cBgS_ShdwDrawi();
extern "C" void ShdwDrawGrpRp__4cBgWFP13cBgS_ShdwDrawi();
extern "C" void ShdwDraw__4cBgWFP13cBgS_ShdwDraw();
extern "C" bool ChkPolyThrough__4cBgWFiP16cBgS_PolyPassChk();
extern "C" void ChkShdwDrawThrough__4cBgWFiP16cBgS_PolyPassChk();
extern "C" bool ChkGrpThrough__4cBgWFiP15cBgS_GrpPassChki();
extern "C" void GetGrpRoomIndex__4cBgWCFRC13cBgS_PolyInfo();
extern "C" void GetBnd__4cBgWCFv();
extern "C" void GetTrans__4cBgWCFP4cXyz();
extern "C" void GetTriPnt__4cBgWCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz();
extern "C" void GetTopUnder__4cBgWCFPfPf();
extern "C" void GetTriPla__4cBgWCFRC13cBgS_PolyInfo();
extern "C" void GetGrpInf__4cBgWCFRC13cBgS_PolyInfo();
extern "C" void GetPolyInfId__4cBgWCFi();
extern "C" void GetPolyInf0__4cBgWCFiUlUl();
extern "C" void GetMaskPolyInf0_NoShift__4cBgWCFiUl();
extern "C" void GetExitId__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetPolyColor__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetHorseNoEntry__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetSpecialCode__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetSpecialCode__4dBgWFi();
extern "C" void GetMagnetCode__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetMonkeyBarsCode__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetPolyObjThrough__4dBgWFi();
extern "C" void GetPolyCamThrough__4dBgWFi();
extern "C" void GetPolyLinkThrough__4dBgWFi();
extern "C" void GetPolyArrowThrough__4dBgWFi();
extern "C" void GetPolyHSStick__4dBgWFi();
extern "C" void GetPolyBoomerangThrough__4dBgWFi();
extern "C" void GetPolyRopeThrough__4dBgWFi();
extern "C" void GetPolyBombThrough__4dBgWFi();
extern "C" void GetShdwThrough__4dBgWFi();
extern "C" void GetUnderwaterRoofCode__4dBgWFi();
extern "C" void GetPolyInf1__4cBgWCFiUlUl();
extern "C" void GetLinkNo__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetWallCode__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetPolyAtt0__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetPolyAtt1__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetGroundCode__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetMaskPolyInf1_NoShift__4cBgWCFiUl();
extern "C" void GetIronBallThrough__4dBgWFi();
extern "C" void GetAttackThrough__4dBgWFi();
extern "C" void GetPolyInf2__4cBgWCFiUlUl();
extern "C" void GetCamMoveBG__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetRoomCamId__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetRoomPathId__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetRoomPathPntNo__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetTriGrp__4cBgWCFi();
extern "C" void ChkNotReady__4cBgWCFv();
extern "C" void ChkLock__4cBgWCFv();
extern "C" void ChkMoveBg__4cBgWCFv();
extern "C" void __ct__4dBgWFv();
extern "C" void Move__4dBgWFv();
extern "C" void positionWallCorrect__4dBgWFP9dBgS_AcchfR8cM3dGPlaP4cXyzf();
extern "C" void RwgWallCorrect__4dBgWFP9dBgS_AcchUs();
extern "C" void WallCorrectRp__4dBgWFP9dBgS_Acchi();
extern "C" void WallCorrectGrpRp__4dBgWFP9dBgS_Acchii();
extern "C" void WallCorrect__4dBgWFP9dBgS_Acch();
extern "C" void RwgWallCorrectSort__4dBgWFP9dBgS_AcchUs();
extern "C" void WallCorrectRpSort__4dBgWFP9dBgS_Acchi();
extern "C" void WallCorrectGrpRpSort__4dBgWFP9dBgS_Acchii();
extern "C" void WallCorrectSort__4dBgWFP9dBgS_Acch();
extern "C" void RwgRoofChk__4dBgWFUsP12dBgS_RoofChk();
extern "C" void RoofChkRp__4dBgWFP12dBgS_RoofChki();
extern "C" void RoofChkGrpRp__4dBgWFP12dBgS_RoofChkii();
extern "C" void RoofChk__4dBgWFP12dBgS_RoofChk();
extern "C" void RwgSplGrpChk__4dBgWFUsP14dBgS_SplGrpChk();
extern "C" void SplGrpChkRp__4dBgWFP14dBgS_SplGrpChki();
extern "C" void SplGrpChkGrpRp__4dBgWFP14dBgS_SplGrpChkii();
extern "C" void SplGrpChk__4dBgWFP14dBgS_SplGrpChk();
extern "C" void RwgCaptPoly__4dBgWFiR13dBgS_CaptPoly();
extern "C" void CaptPolyRp__4dBgWFR13dBgS_CaptPolyi();
extern "C" void CaptPolyGrpRp__4dBgWFR13dBgS_CaptPolyii();
extern "C" void CaptPoly__4dBgWFR13dBgS_CaptPoly();
extern "C" void RwgSphChk__4dBgWFUsP11dBgS_SphChkPv();
extern "C" void SphChkRp__4dBgWFP11dBgS_SphChkPvi();
extern "C" void SphChkGrpRp__4dBgWFP11dBgS_SphChkPvii();
extern "C" void SphChk__4dBgWFP11dBgS_SphChkPv();
extern "C" void GetPolyGrpRoomInfId__4dBgWFRC13cBgS_PolyInfo();
extern "C" void GetGrpSoundId__4dBgWFRC13cBgS_PolyInfo();
extern "C" void CrrPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz();
extern "C" void TransPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz();
extern "C" void MatrixCrrPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz();
extern "C" void ChkPolyThrough__4dBgWFiP16cBgS_PolyPassChk();
extern "C" void ChkShdwDrawThrough__4dBgWFiP16cBgS_PolyPassChk();
extern "C" void ChkGrpThrough__4dBgWFiP15cBgS_GrpPassChki();
extern "C" void CallRideCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_c();
extern "C" void CallArrowStickCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_cR4cXyz();
extern "C" void OffMoveFlag__4dBgWFv();
extern "C" void ChkMoveFlag__4dBgWCFv();
extern "C" void dBgW_NewSet__FP6cBgD_tUlPA3_A4_f();
extern "C" void __dt__4dBgWFv();
extern "C" extern void* __vt__4dBgW[65];
extern "C" extern void* __vt__8cM3dGTri[3];
extern "C" extern void* __vt__11cBgW_GrpElm[3];
extern "C" extern void* __vt__11cBgW_TriElm[3];
extern "C" extern void* __vt__4cBgW[65];
extern "C" extern void* __vt__13cBgW_NodeTree[3];
extern "C" extern void* __vt__11cBgW_RwgElm[3 + 1 /* padding */];
extern "C" extern u8 struct_80450F88[8];

//
// External References:
//

void cM_atan2s(f32, f32);
void cM_rndF(f32);
void cBgW_CheckBGround(f32);
void cBgW_CheckBRoof(f32);
void cM2d_CrossCirLin(cM2dGCir&, f32, f32, f32, f32, f32*, f32*);
void cM3d_Len2dSq(f32, f32, f32, f32);
void cM3d_Len2dSqPntAndSegLine(f32, f32, f32, f32, f32, f32, f32*, f32*, f32*);
void cM3d_CalcPla(Vec const*, Vec const*, Vec const*, Vec*, f32*);
void cM3d_Cross_AabAab(cM3dGAab const*, cM3dGAab const*);
void cM3d_Cross_AabCyl(cM3dGAab const*, cM3dGCyl const*);
void cM3d_Cross_AabSph(cM3dGAab const*, cM3dGSph const*);
void cM3d_Cross_MinMaxBoxLine(Vec const*, Vec const*, Vec const*, Vec const*);
void cM3d_CrossY_Tri(Vec const&, Vec const&, Vec const&, cM3dGPla const&, Vec const*);
void cM3d_CrossY_Tri_Front(Vec const&, Vec const&, Vec const&, Vec const*);
void cM3d_Cross_LinTri(cM3dGLin const*, cM3dGTri const*, Vec*, bool, bool);
void cM3d_Cross_SphTri(cM3dGSph const*, cM3dGTri const*, Vec*);
void* operator new(u32);
void* operator new[](u32);
void operator delete(void*);

extern "C" void SetOldShapeAngleY__9dBgW_BaseFs();
extern "C" void GetSpeedY__9dBgS_AcchFv();
extern "C" void GetWallAddY__9dBgS_AcchFR3Vec();
extern "C" void SetWallPolyIndex__9dBgS_AcchFii();
extern "C" void CalcMovePosWork__9dBgS_AcchFv();
extern "C" void ChkNoHorse__16dBgS_PolyPassChkFv();
extern "C" void __ct__9dBgW_BaseFv();
extern "C" void __dt__9dBgW_BaseFv();
extern "C" void CallRideCallBack__9dBgW_BaseFP10fopAc_ac_cP10fopAc_ac_c();
extern "C" void CallArrowStickCallBack__9dBgW_BaseFP10fopAc_ac_cP10fopAc_ac_cR4cXyz();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_rndF__Ff();
extern "C" void SetPolyIndex__13cBgS_PolyInfoFi();
extern "C" void cBgW_CheckBGround__Ff();
extern "C" void cBgW_CheckBRoof__Ff();
extern "C" void cM2d_CrossCirLin__FR8cM2dGCirffffPfPf();
extern "C" void cM3d_Len2dSq__Fffff();
extern "C" void cM3d_Len2dSqPntAndSegLine__FffffffPfPfPf();
extern "C" void cM3d_CalcPla__FPC3VecPC3VecPC3VecP3VecPf();
extern "C" void cM3d_Cross_AabAab__FPC8cM3dGAabPC8cM3dGAab();
extern "C" void cM3d_Cross_AabCyl__FPC8cM3dGAabPC8cM3dGCyl();
extern "C" void cM3d_Cross_AabSph__FPC8cM3dGAabPC8cM3dGSph();
extern "C" void cM3d_Cross_MinMaxBoxLine__FPC3VecPC3VecPC3VecPC3Vec();
extern "C" void cM3d_CrossY_Tri__FRC3VecRC3VecRC3VecRC8cM3dGPlaPC3Vec();
extern "C" void cM3d_CrossY_Tri_Front__FRC3VecRC3VecRC3VecPC3Vec();
extern "C" void cM3d_Cross_LinTri__FPC8cM3dGLinPC8cM3dGTriP3Vecbb();
extern "C" void cM3d_Cross_SphTri__FPC8cM3dGSphPC8cM3dGTriP3Vec();
extern "C" void CrossY__8cM3dGAabCFPC4cXyz();
extern "C" void UnderPlaneYUnder__8cM3dGAabCFf();
extern "C" void TopPlaneYUnder__8cM3dGAabCFf();
extern "C" void ClearForMinMax__8cM3dGAabFv();
extern "C" void SetMinMax__8cM3dGAabFRC4cXyz();
extern "C" void SetMin__8cM3dGAabFRC4cXyz();
extern "C" void SetMax__8cM3dGAabFRC4cXyz();
extern "C" void SetEnd__8cM3dGLinFRC4cXyz();
extern "C" void getCrossY__8cM3dGPlaCFRC4cXyzPf();
extern "C" void setBg__8cM3dGTriFPC3VecPC3VecPC3VecPC8cM3dGPla();
extern "C" void* __nw__FUl();
extern "C" void* __nwa__FUl();
extern "C" void __dl__FPv();
extern "C" void PSMTXIdentity();
extern "C" void PSMTXCopy();
extern "C" void PSMTXMultVec();
extern "C" void PSVECAdd();
extern "C" void PSVECDotProduct();
extern "C" void __construct_new_array();
extern "C" void __ptmf_scall();
extern "C" void _savegpr_22();
extern "C" void _savegpr_23();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_22();
extern "C" void _restgpr_23();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];

//
// Declarations:
//

/* ############################################################################################## */
/* 803ABA80-803ABB84 0104+00 s=2 e=1 z=5  None .data      __vt__4dBgW */
SECTION_DATA void* __vt__4dBgW[65] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__4dBgWFv,
    (void*)ChkMemoryError__4cBgWFv,
    (void*)ChkNotReady__4cBgWCFv,
    (void*)ChkLock__4cBgWCFv,
    (void*)ChkMoveBg__4cBgWCFv,
    (void*)ChkMoveFlag__4dBgWCFv,
    (void*)GetTriPla__4cBgWCFRC13cBgS_PolyInfo,
    (void*)GetTriPnt__4cBgWCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz,
    (void*)GetBnd__4cBgWCFv,
    (void*)GetGrpInf__4cBgWCFRC13cBgS_PolyInfo,
    (void*)OffMoveFlag__4dBgWFv,
    (void*)GetTopUnder__4cBgWCFPfPf,
    (void*)SetOldShapeAngleY__9dBgW_BaseFs,
    (void*)LineCheck__4cBgWFP11cBgS_LinChk,
    (void*)GroundCross__4cBgWFP11cBgS_GndChk,
    (void*)ShdwDraw__4cBgWFP13cBgS_ShdwDraw,
    (void*)CaptPoly__4dBgWFR13dBgS_CaptPoly,
    (void*)WallCorrect__4dBgWFP9dBgS_Acch,
    (void*)WallCorrectSort__4dBgWFP9dBgS_Acch,
    (void*)RoofChk__4dBgWFP12dBgS_RoofChk,
    (void*)SplGrpChk__4dBgWFP14dBgS_SplGrpChk,
    (void*)SphChk__4dBgWFP11dBgS_SphChkPv,
    (void*)GetGrpRoomIndex__4cBgWCFRC13cBgS_PolyInfo,
    (void*)GetExitId__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetPolyColor__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetHorseNoEntry__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetSpecialCode__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetSpecialCode__4dBgWFi,
    (void*)GetMagnetCode__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetPolyObjThrough__4dBgWFi,
    (void*)GetPolyCamThrough__4dBgWFi,
    (void*)GetPolyLinkThrough__4dBgWFi,
    (void*)GetPolyArrowThrough__4dBgWFi,
    (void*)GetPolyHSStick__4dBgWFi,
    (void*)GetPolyBoomerangThrough__4dBgWFi,
    (void*)GetPolyRopeThrough__4dBgWFi,
    (void*)GetPolyBombThrough__4dBgWFi,
    (void*)GetShdwThrough__4dBgWFi,
    (void*)GetUnderwaterRoofCode__4dBgWFi,
    (void*)GetMonkeyBarsCode__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetLinkNo__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetWallCode__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetPolyAtt0__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetPolyAtt1__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetGroundCode__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetIronBallThrough__4dBgWFi,
    (void*)GetAttackThrough__4dBgWFi,
    (void*)GetCamMoveBG__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetRoomCamId__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetRoomPathId__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetRoomPathPntNo__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetPolyGrpRoomInfId__4dBgWFRC13cBgS_PolyInfo,
    (void*)GetGrpSoundId__4dBgWFRC13cBgS_PolyInfo,
    (void*)CrrPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
    (void*)TransPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
    (void*)MatrixCrrPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
    (void*)CallRideCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_c,
    (void*)CallArrowStickCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_cR4cXyz,
    (void*)CalcPlane__4cBgWFv,
    (void*)ClassifyPlane__4cBgWFv,
    (void*)ChkPolyThrough__4dBgWFiP16cBgS_PolyPassChk,
    (void*)ChkShdwDrawThrough__4dBgWFiP16cBgS_PolyPassChk,
    (void*)ChkGrpThrough__4dBgWFiP15cBgS_GrpPassChki,
};

/* 803ABB84-803ABB90 000C+00 s=3 e=5 z=0  None .data      __vt__8cM3dGTri */
SECTION_DATA void* __vt__8cM3dGTri[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGTriFv,
};

/* 803ABB90-803ABB9C 000C+00 s=2 e=0 z=0  None .data      __vt__11cBgW_GrpElm */
SECTION_DATA void* __vt__11cBgW_GrpElm[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__11cBgW_GrpElmFv,
};

/* 803ABB9C-803ABBA8 000C+00 s=2 e=0 z=0  None .data      __vt__11cBgW_TriElm */
SECTION_DATA void* __vt__11cBgW_TriElm[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__11cBgW_TriElmFv,
};

/* 803ABBA8-803ABCAC 0104+00 s=2 e=0 z=0  None .data      __vt__4cBgW */
SECTION_DATA void* __vt__4cBgW[65] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__4cBgWFv,
    (void*)ChkMemoryError__4cBgWFv,
    (void*)ChkNotReady__4cBgWCFv,
    (void*)ChkLock__4cBgWCFv,
    (void*)ChkMoveBg__4cBgWCFv,
    (void*)NULL,
    (void*)GetTriPla__4cBgWCFRC13cBgS_PolyInfo,
    (void*)GetTriPnt__4cBgWCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz,
    (void*)GetBnd__4cBgWCFv,
    (void*)GetGrpInf__4cBgWCFRC13cBgS_PolyInfo,
    (void*)NULL,
    (void*)GetTopUnder__4cBgWCFPfPf,
    (void*)SetOldShapeAngleY__9dBgW_BaseFs,
    (void*)LineCheck__4cBgWFP11cBgS_LinChk,
    (void*)GroundCross__4cBgWFP11cBgS_GndChk,
    (void*)ShdwDraw__4cBgWFP13cBgS_ShdwDraw,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)GetGrpRoomIndex__4cBgWCFRC13cBgS_PolyInfo,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)CallRideCallBack__9dBgW_BaseFP10fopAc_ac_cP10fopAc_ac_c,
    (void*)CallArrowStickCallBack__9dBgW_BaseFP10fopAc_ac_cP10fopAc_ac_cR4cXyz,
    (void*)CalcPlane__4cBgWFv,
    (void*)ClassifyPlane__4cBgWFv,
    (void*)ChkPolyThrough__4cBgWFiP16cBgS_PolyPassChk,
    (void*)ChkShdwDrawThrough__4cBgWFiP16cBgS_PolyPassChk,
    (void*)ChkGrpThrough__4cBgWFiP15cBgS_GrpPassChki,
};

/* 803ABCAC-803ABCB8 000C+00 s=2 e=0 z=0  None .data      __vt__13cBgW_NodeTree */
SECTION_DATA void* __vt__13cBgW_NodeTree[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__13cBgW_NodeTreeFv,
};

/* 803ABCB8-803ABCC8 000C+04 s=2 e=0 z=0  None .data      __vt__11cBgW_RwgElm */
SECTION_DATA void* __vt__11cBgW_RwgElm[3 + 1 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__11cBgW_RwgElmFv,
    /* padding */
    NULL,
};

/* 800791C4-800791D4 0010+00 s=1 e=0 z=0  None .text      __ct__11cBgW_RwgElmFv */
//	800791C4: 803ABCB8 (__vt__11cBgW_RwgElm)
//	800791C8: 803ABCB8 (__vt__11cBgW_RwgElm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cBgW_RwgElm::cBgW_RwgElm() {
    nofralloc
#include "asm/d/bg/d_bg_w/__ct__11cBgW_RwgElmFv.s"
}
#pragma pop

/* 800791D4-8007921C 0048+00 s=2 e=0 z=0  None .text      __dt__11cBgW_RwgElmFv */
//	800791EC: 803ABCB8 (__vt__11cBgW_RwgElm)
//	800791F0: 803ABCB8 (__vt__11cBgW_RwgElm)
//	80079200: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cBgW_RwgElm::~cBgW_RwgElm() {
    nofralloc
#include "asm/d/bg/d_bg_w/__dt__11cBgW_RwgElmFv.s"
}
#pragma pop

/* 8007921C-80079238 001C+00 s=1 e=0 z=0  None .text      __ct__13cBgW_NodeTreeFv */
//	8007921C: 803A7218 (__vt__8cM3dGAab)
//	80079220: 803A7218 (__vt__8cM3dGAab)
//	80079228: 803ABCAC (__vt__13cBgW_NodeTree)
//	8007922C: 803ABCAC (__vt__13cBgW_NodeTree)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cBgW_NodeTree::cBgW_NodeTree() {
    nofralloc
#include "asm/d/bg/d_bg_w/__ct__13cBgW_NodeTreeFv.s"
}
#pragma pop

/* 80079238-80079294 005C+00 s=2 e=0 z=0  None .text      __dt__13cBgW_NodeTreeFv */
//	80079250: 803ABCAC (__vt__13cBgW_NodeTree)
//	80079254: 803ABCAC (__vt__13cBgW_NodeTree)
//	80079260: 803A7218 (__vt__8cM3dGAab)
//	80079264: 803A7218 (__vt__8cM3dGAab)
//	80079278: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cBgW_NodeTree::~cBgW_NodeTree() {
    nofralloc
#include "asm/d/bg/d_bg_w/__dt__13cBgW_NodeTreeFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804526F8-804526FC 0004+00 s=6 e=0 z=0  None .sdata2    @3717 */
SECTION_SDATA2 static u8 lit_3717[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80079294-8007933C 00A8+00 s=1 e=0 z=0  None .text      __ct__4cBgWFv */
//	800792A8: 8007E5A8 (__ct__9dBgW_BaseFv)
//	800792AC: 803ABBA8 (__vt__4cBgW)
//	800792B0: 803ABBA8 (__vt__4cBgW)
//	800792D4: 804526F8 (lit_3717)
//	80079304: 80346484 (PSMTXIdentity)
//	8007930C: 80346484 (PSMTXIdentity)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cBgW::cBgW() {
    nofralloc
#include "asm/d/bg/d_bg_w/__ct__4cBgWFv.s"
}
#pragma pop

/* 8007933C-800793A4 0068+00 s=2 e=1 z=5  None .text      __dt__4cBgWFv */
//	8007935C: 803ABBA8 (__vt__4cBgW)
//	80079360: 803ABBA8 (__vt__4cBgW)
//	80079368: 800793A4 (FreeArea__4cBgWFv)
//	80079374: 8007E640 (__dt__9dBgW_BaseFv)
//	80079384: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cBgW::~cBgW() {
    nofralloc
#include "asm/d/bg/d_bg_w/__dt__4cBgWFv.s"
}
#pragma pop

/* 800793A4-800793C4 0020+00 s=2 e=0 z=0  None .text      FreeArea__4cBgWFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::FreeArea() {
    nofralloc
#include "asm/d/bg/d_bg_w/FreeArea__4cBgWFv.s"
}
#pragma pop

/* 800793C4-80079484 00C0+00 s=2 e=0 z=1  None .text      GlobalVtx__4cBgWFv */
//	800793D4: 803621DC (_savegpr_29)
//	80079410: 80347090 (PSVECAdd)
//	80079450: 80346D6C (PSMTXMultVec)
//	80079470: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GlobalVtx() {
    nofralloc
#include "asm/d/bg/d_bg_w/GlobalVtx__4cBgWFv.s"
}
#pragma pop

/* 80079484-80079564 00E0+00 s=1 e=0 z=0  None .text      SetVtx__4cBgWFv */
//	800794C4: 802CECC4 (__nwa__FUl)
//	800794F4: 804526F8 (lit_3717)
//	80079538: 800793C4 (GlobalVtx__4cBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::SetVtx() {
    nofralloc
#include "asm/d/bg/d_bg_w/SetVtx__4cBgWFv.s"
}
#pragma pop

/* 80079564-80079668 0104+00 s=2 e=1 z=0  None .text      CalcPlane__4cBgWFv */
//	80079574: 803621D4 (_savegpr_27)
//	800795B4: 80347194 (PSVECDotProduct)
//	80079630: 8026891C (cM3d_CalcPla__FPC3VecPC3VecPC3VecP3VecPf)
//	80079654: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::CalcPlane() {
    nofralloc
#include "asm/d/bg/d_bg_w/CalcPlane__4cBgWFv.s"
}
#pragma pop

/* 80079668-800796F8 0090+00 s=1 e=0 z=0  None .text      SetTri__4cBgWFv */
//	80079690: 802CECC4 (__nwa__FUl)
//	80079694: 80079754 (__ct__11cBgW_TriElmFv)
//	80079698: 80079754 (__ct__11cBgW_TriElmFv)
//	8007969C: 800796F8 (__dt__11cBgW_TriElmFv)
//	800796A0: 800796F8 (__dt__11cBgW_TriElmFv)
//	800796AC: 80361F14 (__construct_new_array)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::SetTri() {
    nofralloc
#include "asm/d/bg/d_bg_w/SetTri__4cBgWFv.s"
}
#pragma pop

/* 800796F8-80079754 005C+00 s=2 e=0 z=0  None .text      __dt__11cBgW_TriElmFv */
//	80079710: 803ABB9C (__vt__11cBgW_TriElm)
//	80079714: 803ABB9C (__vt__11cBgW_TriElm)
//	80079720: 803A37C0 (__vt__8cM3dGPla)
//	80079724: 803A37C0 (__vt__8cM3dGPla)
//	80079738: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cBgW_TriElm::~cBgW_TriElm() {
    nofralloc
#include "asm/d/bg/d_bg_w/__dt__11cBgW_TriElmFv.s"
}
#pragma pop

/* 80079754-80079770 001C+00 s=1 e=0 z=0  None .text      __ct__11cBgW_TriElmFv */
//	80079754: 803ABB9C (__vt__11cBgW_TriElm)
//	80079758: 803ABB9C (__vt__11cBgW_TriElm)
//	80079760: 803A37C0 (__vt__8cM3dGPla)
//	80079764: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cBgW_TriElm::cBgW_TriElm() {
    nofralloc
#include "asm/d/bg/d_bg_w/__ct__11cBgW_TriElmFv.s"
}
#pragma pop

/* 80079770-800797BC 004C+00 s=1 e=0 z=0  None .text      BlckConnect__4cBgWFPUsPii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::BlckConnect(u16* param_0, int* param_1, int param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/BlckConnect__4cBgWFPUsPii.s"
}
#pragma pop

/* 800797BC-8007998C 01D0+00 s=2 e=1 z=0  None .text      ClassifyPlane__4cBgWFv */
//	800797DC: 803621C8 (_savegpr_24)
//	800797FC: 80451180 (G_CM3D_F_ABS_MIN)
//	800798B8: 802681E4 (cBgW_CheckBGround__Ff)
//	800798DC: 80079770 (BlckConnect__4cBgWFPUsPii)
//	800798E8: 802681FC (cBgW_CheckBRoof__Ff)
//	80079914: 80079770 (BlckConnect__4cBgWFPUsPii)
//	80079934: 80079770 (BlckConnect__4cBgWFPUsPii)
//	80079978: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::ClassifyPlane() {
    nofralloc
#include "asm/d/bg/d_bg_w/ClassifyPlane__4cBgWFv.s"
}
#pragma pop

/* 8007998C-800799E0 0054+00 s=1 e=0 z=0  None .text      MakeBlckTransMinMax__4cBgWFP4cXyzP4cXyz */
//	800799B4: 80347090 (PSVECAdd)
//	800799C4: 80347090 (PSVECAdd)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::MakeBlckTransMinMax(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/MakeBlckTransMinMax__4cBgWFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800799E0-80079A68 0088+00 s=1 e=0 z=0  None .text      MakeBlckMinMax__4cBgWFiP4cXyzP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::MakeBlckMinMax(int param_0, cXyz* param_1, cXyz* param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/MakeBlckMinMax__4cBgWFiP4cXyzP4cXyz.s"
}
#pragma pop

/* ############################################################################################## */
/* 804526FC-80452700 0004+00 s=1 e=0 z=0  None .sdata2    @3935 */
SECTION_SDATA2 static f32 lit_3935 = 1000000000.0f;

/* 80452700-80452704 0004+00 s=1 e=0 z=0  None .sdata2    @3936 */
SECTION_SDATA2 static f32 lit_3936 = -1000000000.0f;

/* 80452704-80452708 0004+00 s=5 e=0 z=0  None .sdata2    @3937 */
SECTION_SDATA2 static f32 lit_3937 = 1.0f;

/* 80079A68-80079BDC 0174+00 s=1 e=0 z=0  None .text      MakeBlckBnd__4cBgWFiP4cXyzP4cXyz */
//	80079A78: 803621D0 (_savegpr_26)
//	80079AD8: 8007998C (MakeBlckTransMinMax__4cBgWFP4cXyzP4cXyz)
//	80079AE0: 804526FC (lit_3935)
//	80079AF0: 80452700 (lit_3936)
//	80079B24: 800799E0 (MakeBlckMinMax__4cBgWFiP4cXyzP4cXyz)
//	80079B44: 800799E0 (MakeBlckMinMax__4cBgWFiP4cXyzP4cXyz)
//	80079B64: 800799E0 (MakeBlckMinMax__4cBgWFiP4cXyzP4cXyz)
//	80079B7C: 80452704 (lit_3937)
//	80079BC8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::MakeBlckBnd(int param_0, cXyz* param_1, cXyz* param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/MakeBlckBnd__4cBgWFiP4cXyzP4cXyz.s"
}
#pragma pop

/* 80079BDC-80079CC4 00E8+00 s=1 e=0 z=0  None .text      MakeNodeTreeRp__4cBgWFi */
//	80079BEC: 803621D0 (_savegpr_26)
//	80079C34: 80079A68 (MakeBlckBnd__4cBgWFiP4cXyzP4cXyz)
//	80079C48: 8026ECF8 (ClearForMinMax__8cM3dGAabFv)
//	80079C84: 8026ED1C (SetMinMax__8cM3dGAabFRC4cXyz)
//	80079C98: 8026ED1C (SetMinMax__8cM3dGAabFRC4cXyz)
//	80079CB0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::MakeNodeTreeRp(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/MakeNodeTreeRp__4cBgWFi.s"
}
#pragma pop

/* 80079CC4-80079DF0 012C+00 s=1 e=0 z=0  None .text      MakeNodeTreeGrpRp__4cBgWFi */
//	80079CD4: 803621D8 (_savegpr_28)
//	80079CFC: 80079BDC (MakeNodeTreeRp__4cBgWFi)
//	80079D2C: 8026EDA4 (SetMin__8cM3dGAabFRC4cXyz)
//	80079D5C: 8026EDE4 (SetMax__8cM3dGAabFRC4cXyz)
//	80079DA4: 8026EDA4 (SetMin__8cM3dGAabFRC4cXyz)
//	80079DBC: 8026EDE4 (SetMax__8cM3dGAabFRC4cXyz)
//	80079DDC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::MakeNodeTreeGrpRp(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/MakeNodeTreeGrpRp__4cBgWFi.s"
}
#pragma pop

/* 80079DF0-80079EEC 00FC+00 s=2 e=0 z=0  None .text      MakeNodeTree__4cBgWFv */
//	80079E00: 803621DC (_savegpr_29)
//	80079E74: 8026ECF8 (ClearForMinMax__8cM3dGAabFv)
//	80079EC0: 80079CC4 (MakeNodeTreeGrpRp__4cBgWFi)
//	80079ED8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::MakeNodeTree() {
    nofralloc
#include "asm/d/bg/d_bg_w/MakeNodeTree__4cBgWFv.s"
}
#pragma pop

/* 80079EEC-80079F38 004C+00 s=2 e=1 z=0  None .text      ChkMemoryError__4cBgWFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::ChkMemoryError() {
    nofralloc
#include "asm/d/bg/d_bg_w/ChkMemoryError__4cBgWFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452708-8045270C 0004+00 s=1 e=0 z=0  None .sdata2    @4073 */
SECTION_SDATA2 static f32 lit_4073 = 128.0f;

/* 80079F38-8007A184 024C+00 s=1 e=3 z=85  None .text      Set__4cBgWFP6cBgD_tUlPA3_A4_f */
//	80079F48: 803621D8 (_savegpr_28)
//	80079F80: 80452708 (lit_4073)
//	80079F84: 80267954 (cM_rndF__Ff)
//	80079FC4: 80346484 (PSMTXIdentity)
//	80079FCC: 80346484 (PSMTXIdentity)
//	80079FE0: 803464B0 (PSMTXCopy)
//	80079FEC: 803464B0 (PSMTXCopy)
//	80079FF8: 80079484 (SetVtx__4cBgWFv)
//	8007A008: 80079668 (SetTri__4cBgWFv)
//	8007A018: 800793A4 (FreeArea__4cBgWFv)
//	8007A034: 802CECC4 (__nwa__FUl)
//	8007A038: 800791C4 (__ct__11cBgW_RwgElmFv)
//	8007A03C: 800791C4 (__ct__11cBgW_RwgElmFv)
//	8007A040: 800791D4 (__dt__11cBgW_RwgElmFv)
//	8007A044: 800791D4 (__dt__11cBgW_RwgElmFv)
//	8007A050: 80361F14 (__construct_new_array)
//	8007A068: 800793A4 (FreeArea__4cBgWFv)
//	8007A080: 802CECC4 (__nwa__FUl)
//	8007A098: 800793A4 (FreeArea__4cBgWFv)
//	8007A0B4: 802CECC4 (__nwa__FUl)
//	8007A0B8: 8007921C (__ct__13cBgW_NodeTreeFv)
//	8007A0BC: 8007921C (__ct__13cBgW_NodeTreeFv)
//	8007A0C0: 80079238 (__dt__13cBgW_NodeTreeFv)
//	8007A0C4: 80079238 (__dt__13cBgW_NodeTreeFv)
//	8007A0D0: 80361F14 (__construct_new_array)
//	8007A0E8: 800793A4 (FreeArea__4cBgWFv)
//	8007A104: 802CECC4 (__nwa__FUl)
//	8007A108: 8007A1E4 (__ct__11cBgW_GrpElmFv)
//	8007A10C: 8007A1E4 (__ct__11cBgW_GrpElmFv)
//	8007A110: 8007A184 (__dt__11cBgW_GrpElmFv)
//	8007A114: 8007A184 (__dt__11cBgW_GrpElmFv)
//	8007A120: 80361F14 (__construct_new_array)
//	8007A138: 800793A4 (FreeArea__4cBgWFv)
//	8007A164: 80079DF0 (MakeNodeTree__4cBgWFv)
//	8007A170: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::Set(cBgD_t* param_0, u32 param_1, f32 (*param_2)[3][4]) {
    nofralloc
#include "asm/d/bg/d_bg_w/Set__4cBgWFP6cBgD_tUlPA3_A4_f.s"
}
#pragma pop

/* 8007A184-8007A1E4 0060+00 s=2 e=0 z=0  None .text      __dt__11cBgW_GrpElmFv */
//	8007A19C: 803ABB90 (__vt__11cBgW_GrpElm)
//	8007A1A0: 803ABB90 (__vt__11cBgW_GrpElm)
//	8007A1B0: 803A7218 (__vt__8cM3dGAab)
//	8007A1B4: 803A7218 (__vt__8cM3dGAab)
//	8007A1C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cBgW_GrpElm::~cBgW_GrpElm() {
    nofralloc
#include "asm/d/bg/d_bg_w/__dt__11cBgW_GrpElmFv.s"
}
#pragma pop

/* 8007A1E4-8007A200 001C+00 s=1 e=0 z=0  None .text      __ct__11cBgW_GrpElmFv */
//	8007A1E4: 803ABB90 (__vt__11cBgW_GrpElm)
//	8007A1E8: 803ABB90 (__vt__11cBgW_GrpElm)
//	8007A1F0: 803A7218 (__vt__8cM3dGAab)
//	8007A1F4: 803A7218 (__vt__8cM3dGAab)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cBgW_GrpElm::cBgW_GrpElm() {
    nofralloc
#include "asm/d/bg/d_bg_w/__ct__11cBgW_GrpElmFv.s"
}
#pragma pop

/* 8007A200-8007A344 0144+00 s=1 e=0 z=0  None .text      RwgLineCheck__4cBgWFUsP11cBgS_LinChk */
//	8007A210: 803621D0 (_savegpr_26)
//	8007A224: 803A37C0 (__vt__8cM3dGPla)
//	8007A228: 803A37C0 (__vt__8cM3dGPla)
//	8007A230: 803ABB84 (__vt__8cM3dGTri)
//	8007A234: 803ABB84 (__vt__8cM3dGTri)
//	8007A28C: 8026F85C (setBg__8cM3dGTriFPC3VecPC3VecPC3VecPC8cM3dGPla)
//	8007A2A4: 8026B0A4 (cM3d_Cross_LinTri__FPC8cM3dGLinPC8cM3dGTriP3Vecbb)
//	8007A2E0: 8026F3C0 (SetEnd__8cM3dGLinFRC4cXyz)
//	8007A2EC: 802681A4 (SetPolyIndex__13cBgS_PolyInfoFi)
//	8007A310: 803ABB84 (__vt__8cM3dGTri)
//	8007A314: 803ABB84 (__vt__8cM3dGTri)
//	8007A31C: 803A37C0 (__vt__8cM3dGPla)
//	8007A320: 803A37C0 (__vt__8cM3dGPla)
//	8007A330: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::RwgLineCheck(u16 param_0, cBgS_LinChk* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgLineCheck__4cBgWFUsP11cBgS_LinChk.s"
}
#pragma pop

/* 8007A344-8007A3A0 005C+00 s=1 e=0 z=0  None .text      __dt__8cM3dGTriFv */
//	8007A35C: 803ABB84 (__vt__8cM3dGTri)
//	8007A360: 803ABB84 (__vt__8cM3dGTri)
//	8007A36C: 803A37C0 (__vt__8cM3dGPla)
//	8007A370: 803A37C0 (__vt__8cM3dGPla)
//	8007A384: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGTri::~cM3dGTri() {
    nofralloc
#include "asm/d/bg/d_bg_w/__dt__8cM3dGTriFv.s"
}
#pragma pop

/* 8007A3A0-8007A52C 018C+00 s=1 e=0 z=0  None .text      LineCheckRp__4cBgWFP11cBgS_LinChki */
//	8007A3B0: 803621D0 (_savegpr_26)
//	8007A3D8: 80269050 (cM3d_Cross_MinMaxBoxLine__FPC3VecPC3VecPC3VecPC3Vec)
//	8007A43C: 8007A200 (RwgLineCheck__4cBgWFUsP11cBgS_LinChk)
//	8007A47C: 8007A200 (RwgLineCheck__4cBgWFUsP11cBgS_LinChk)
//	8007A4B8: 8007A200 (RwgLineCheck__4cBgWFUsP11cBgS_LinChk)
//	8007A518: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::LineCheckRp(cBgS_LinChk* param_0, int param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/LineCheckRp__4cBgWFP11cBgS_LinChki.s"
}
#pragma pop

/* 8007A52C-8007A658 012C+00 s=1 e=0 z=0  None .text      LineCheckGrpRp__4cBgWFP11cBgS_LinChkii */
//	8007A53C: 803621D4 (_savegpr_27)
//	8007A56C: 80269050 (cM3d_Cross_MinMaxBoxLine__FPC3VecPC3VecPC3VecPC3Vec)
//	8007A5D8: 8007A3A0 (LineCheckRp__4cBgWFP11cBgS_LinChki)
//	8007A644: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::LineCheckGrpRp(cBgS_LinChk* param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/LineCheckGrpRp__4cBgWFP11cBgS_LinChkii.s"
}
#pragma pop

/* 8007A658-8007A680 0028+00 s=2 e=1 z=0  None .text      LineCheck__4cBgWFP11cBgS_LinChk */
//	8007A66C: 8007A52C (LineCheckGrpRp__4cBgWFP11cBgS_LinChkii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::LineCheck(cBgS_LinChk* param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/LineCheck__4cBgWFP11cBgS_LinChk.s"
}
#pragma pop

/* 8007A680-8007A774 00F4+00 s=2 e=0 z=0  None .text RwgGroundCheckCommon__4cBgWFfUsP11cBgS_GndChk
 */
//	8007A698: 803621DC (_savegpr_29)
//	8007A704: 8026A7B8 (cM3d_CrossY_Tri_Front__FRC3VecRC3VecRC3VecPC3Vec)
//	8007A744: 802681A4 (SetPolyIndex__13cBgS_PolyInfoFi)
//	8007A760: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::RwgGroundCheckCommon(f32 param_0, u16 param_1, cBgS_GndChk* param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgGroundCheckCommon__4cBgWFfUsP11cBgS_GndChk.s"
}
#pragma pop

/* 8007A774-8007A824 00B0+00 s=1 e=0 z=0  None .text      RwgGroundCheckGnd__4cBgWFUsP11cBgS_GndChk
 */
//	8007A784: 803621D4 (_savegpr_27)
//	8007A7E8: 8007A680 (RwgGroundCheckCommon__4cBgWFfUsP11cBgS_GndChk)
//	8007A810: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::RwgGroundCheckGnd(u16 param_0, cBgS_GndChk* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgGroundCheckGnd__4cBgWFUsP11cBgS_GndChk.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045270C-80452710 0004+00 s=1 e=0 z=0  None .sdata2    @4271 */
SECTION_SDATA2 static f32 lit_4271 = 0.014000000432133675f;

/* 8007A824-8007A8F4 00D0+00 s=1 e=0 z=0  None .text      RwgGroundCheckWall__4cBgWFUsP11cBgS_GndChk
 */
//	8007A83C: 803621D4 (_savegpr_27)
//	8007A84C: 8045270C (lit_4271)
//	8007A8B0: 8007A680 (RwgGroundCheckCommon__4cBgWFfUsP11cBgS_GndChk)
//	8007A8E0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::RwgGroundCheckWall(u16 param_0, cBgS_GndChk* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgGroundCheckWall__4cBgWFUsP11cBgS_GndChk.s"
}
#pragma pop

/* 8007A8F4-8007AA50 015C+00 s=1 e=0 z=0  None .text      GroundCrossRp__4cBgWFP11cBgS_GndChki */
//	8007A904: 803621C8 (_savegpr_24)
//	8007A950: 8007A774 (RwgGroundCheckGnd__4cBgWFUsP11cBgS_GndChk)
//	8007A990: 8007A824 (RwgGroundCheckWall__4cBgWFUsP11cBgS_GndChk)
//	8007A9D4: 8026EC88 (CrossY__8cM3dGAabCFPC4cXyz)
//	8007A9E8: 8026ECD0 (UnderPlaneYUnder__8cM3dGAabCFf)
//	8007A9FC: 8026ECE4 (TopPlaneYUnder__8cM3dGAabCFf)
//	8007AA3C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GroundCrossRp(cBgS_GndChk* param_0, int param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/GroundCrossRp__4cBgWFP11cBgS_GndChki.s"
}
#pragma pop

/* 8007AA50-8007AB9C 014C+00 s=1 e=0 z=0  None .text      GroundCrossGrpRp__4cBgWFP11cBgS_GndChkii
 */
//	8007AA60: 803621D0 (_savegpr_26)
//	8007AA88: 8026EC88 (CrossY__8cM3dGAabCFPC4cXyz)
//	8007AA9C: 8026ECD0 (UnderPlaneYUnder__8cM3dGAabCFf)
//	8007AAB0: 8026ECE4 (TopPlaneYUnder__8cM3dGAabCFf)
//	8007AB1C: 8007A8F4 (GroundCrossRp__4cBgWFP11cBgS_GndChki)
//	8007AB88: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GroundCrossGrpRp(cBgS_GndChk* param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/GroundCrossGrpRp__4cBgWFP11cBgS_GndChkii.s"
}
#pragma pop

/* 8007AB9C-8007ABC4 0028+00 s=2 e=1 z=0  None .text      GroundCross__4cBgWFP11cBgS_GndChk */
//	8007ABB0: 8007AA50 (GroundCrossGrpRp__4cBgWFP11cBgS_GndChkii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GroundCross(cBgS_GndChk* param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GroundCross__4cBgWFP11cBgS_GndChk.s"
}
#pragma pop

/* 8007ABC4-8007AC10 004C+00 s=1 e=0 z=0  None .text      CopyOldMtx__4cBgWFv */
//	8007ABEC: 803464B0 (PSMTXCopy)
//	8007ABF8: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::CopyOldMtx() {
    nofralloc
#include "asm/d/bg/d_bg_w/CopyOldMtx__4cBgWFv.s"
}
#pragma pop

/* 8007AC10-8007ADF0 01E0+00 s=1 e=0 z=0  None .text      Move__4cBgWFv */
//	8007AD30: 803464B0 (PSMTXCopy)
//	8007ADA0: 800793C4 (GlobalVtx__4cBgWFv)
//	8007ADA8: 8007ABC4 (CopyOldMtx__4cBgWFv)
//	8007ADD8: 80079DF0 (MakeNodeTree__4cBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::Move() {
    nofralloc
#include "asm/d/bg/d_bg_w/Move__4cBgWFv.s"
}
#pragma pop

/* 8007ADF0-8007AEA4 00B4+00 s=1 e=0 z=0  None .text      RwgShdwDraw__4cBgWFiP13cBgS_ShdwDraw */
//	8007AE00: 803621D4 (_savegpr_27)
//	8007AE90: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::RwgShdwDraw(int param_0, cBgS_ShdwDraw* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgShdwDraw__4cBgWFiP13cBgS_ShdwDraw.s"
}
#pragma pop

/* 8007AEA4-8007AFC0 011C+00 s=1 e=0 z=0  None .text      ShdwDrawRp__4cBgWFP13cBgS_ShdwDrawi */
//	8007AEB4: 803621D4 (_savegpr_27)
//	8007AED4: 802689E8 (cM3d_Cross_AabAab__FPC8cM3dGAabPC8cM3dGAab)
//	8007AF20: 8007ADF0 (RwgShdwDraw__4cBgWFiP13cBgS_ShdwDraw)
//	8007AF44: 8007ADF0 (RwgShdwDraw__4cBgWFiP13cBgS_ShdwDraw)
//	8007AF6C: 8007ADF0 (RwgShdwDraw__4cBgWFiP13cBgS_ShdwDraw)
//	8007AFAC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::ShdwDrawRp(cBgS_ShdwDraw* param_0, int param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/ShdwDrawRp__4cBgWFP13cBgS_ShdwDrawi.s"
}
#pragma pop

/* 8007AFC0-8007B084 00C4+00 s=1 e=0 z=0  None .text      ShdwDrawGrpRp__4cBgWFP13cBgS_ShdwDrawi */
//	8007AFD0: 803621DC (_savegpr_29)
//	8007AFF4: 802689E8 (cM3d_Cross_AabAab__FPC8cM3dGAabPC8cM3dGAab)
//	8007B024: 8007AEA4 (ShdwDrawRp__4cBgWFP13cBgS_ShdwDrawi)
//	8007B070: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::ShdwDrawGrpRp(cBgS_ShdwDraw* param_0, int param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/ShdwDrawGrpRp__4cBgWFP13cBgS_ShdwDrawi.s"
}
#pragma pop

/* 8007B084-8007B0A8 0024+00 s=2 e=1 z=0  None .text      ShdwDraw__4cBgWFP13cBgS_ShdwDraw */
//	8007B094: 8007AFC0 (ShdwDrawGrpRp__4cBgWFP13cBgS_ShdwDrawi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::ShdwDraw(cBgS_ShdwDraw* param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/ShdwDraw__4cBgWFP13cBgS_ShdwDraw.s"
}
#pragma pop

/* 8007B0A8-8007B0B0 0008+00 s=1 e=0 z=0  None .text      ChkPolyThrough__4cBgWFiP16cBgS_PolyPassChk
 */
bool cBgW::ChkPolyThrough(int param_0, cBgS_PolyPassChk* param_1) {
    return false;
}

/* 8007B0B0-8007B0DC 002C+00 s=1 e=0 z=0  None .text
 * ChkShdwDrawThrough__4cBgWFiP16cBgS_PolyPassChk               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::ChkShdwDrawThrough(int param_0, cBgS_PolyPassChk* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/ChkShdwDrawThrough__4cBgWFiP16cBgS_PolyPassChk.s"
}
#pragma pop

/* 8007B0DC-8007B0E4 0008+00 s=1 e=0 z=0  None .text      ChkGrpThrough__4cBgWFiP15cBgS_GrpPassChki
 */
bool cBgW::ChkGrpThrough(int param_0, cBgS_GrpPassChk* param_1, int param_2) {
    return false;
}

/* 8007B0E4-8007B164 0080+00 s=2 e=1 z=0  None .text      GetGrpRoomIndex__4cBgWCFRC13cBgS_PolyInfo
 */
//	8007B0FC: 8007B930 (GetTriGrp__4cBgWCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetGrpRoomIndex(cBgS_PolyInfo const& param_0) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetGrpRoomIndex__4cBgWCFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B164-8007B17C 0018+00 s=2 e=1 z=0  None .text      GetBnd__4cBgWCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetBnd() const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetBnd__4cBgWCFv.s"
}
#pragma pop

/* 8007B17C-8007B1B4 0038+00 s=0 e=1 z=0  None .text      GetTrans__4cBgWCFP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetTrans(cXyz* param_0) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetTrans__4cBgWCFP4cXyz.s"
}
#pragma pop

/* 8007B1B4-8007B240 008C+00 s=2 e=1 z=0  None .text
 * GetTriPnt__4cBgWCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetTriPnt(cBgS_PolyInfo const& param_0, cXyz* param_1, cXyz* param_2,
                         cXyz* param_3) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetTriPnt__4cBgWCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz.s"
}
#pragma pop

/* 8007B240-8007B270 0030+00 s=2 e=1 z=0  None .text      GetTopUnder__4cBgWCFPfPf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetTopUnder(f32* param_0, f32* param_1) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetTopUnder__4cBgWCFPfPf.s"
}
#pragma pop

/* 8007B270-8007B2B0 0040+00 s=2 e=1 z=0  None .text      GetTriPla__4cBgWCFRC13cBgS_PolyInfo */
//	8007B280: 803A37C0 (__vt__8cM3dGPla)
//	8007B284: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetTriPla(cBgS_PolyInfo const& param_0) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetTriPla__4cBgWCFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B2B0-8007B2F4 0044+00 s=2 e=1 z=0  None .text      GetGrpInf__4cBgWCFRC13cBgS_PolyInfo */
//	8007B2C8: 8007B930 (GetTriGrp__4cBgWCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetGrpInf(cBgS_PolyInfo const& param_0) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetGrpInf__4cBgWCFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B2F4-8007B30C 0018+00 s=5 e=0 z=0  None .text      GetPolyInfId__4cBgWCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetPolyInfId(int param_0) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyInfId__4cBgWCFi.s"
}
#pragma pop

/* 8007B30C-8007B360 0054+00 s=6 e=0 z=0  None .text      GetPolyInf0__4cBgWCFiUlUl */
//	8007B31C: 803621DC (_savegpr_29)
//	8007B32C: 8007B2F4 (GetPolyInfId__4cBgWCFi)
//	8007B34C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetPolyInf0(int param_0, u32 param_1, u32 param_2) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyInf0__4cBgWCFiUlUl.s"
}
#pragma pop

/* 8007B360-8007B3AC 004C+00 s=10 e=0 z=0  None .text      GetMaskPolyInf0_NoShift__4cBgWCFiUl */
//	8007B37C: 8007B2F4 (GetPolyInfId__4cBgWCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetMaskPolyInf0_NoShift(int param_0, u32 param_1) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetMaskPolyInf0_NoShift__4cBgWCFiUl.s"
}
#pragma pop

/* 8007B3AC-8007B3D8 002C+00 s=1 e=1 z=0  None .text      GetExitId__4dBgWFRC13cBgS_PolyInfo */
//	8007B3C4: 8007B30C (GetPolyInf0__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetExitId(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetExitId__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B3D8-8007B404 002C+00 s=1 e=1 z=0  None .text      GetPolyColor__4dBgWFRC13cBgS_PolyInfo */
//	8007B3F0: 8007B30C (GetPolyInf0__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyColor(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyColor__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B404-8007B430 002C+00 s=1 e=1 z=0  None .text      GetHorseNoEntry__4dBgWFRC13cBgS_PolyInfo
 */
//	8007B41C: 8007B30C (GetPolyInf0__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetHorseNoEntry(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetHorseNoEntry__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B430-8007B460 0030+00 s=1 e=1 z=0  None .text      GetSpecialCode__4dBgWFRC13cBgS_PolyInfo */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetSpecialCode(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetSpecialCode__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B460-8007B488 0028+00 s=1 e=1 z=0  None .text      GetSpecialCode__4dBgWFi */
//	8007B474: 8007B30C (GetPolyInf0__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetSpecialCode(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetSpecialCode__4dBgWFi.s"
}
#pragma pop

/* 8007B488-8007B4B4 002C+00 s=1 e=1 z=0  None .text      GetMagnetCode__4dBgWFRC13cBgS_PolyInfo */
//	8007B4A0: 8007B30C (GetPolyInf0__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetMagnetCode(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetMagnetCode__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B4B4-8007B4E0 002C+00 s=1 e=1 z=0  None .text      GetMonkeyBarsCode__4dBgWFRC13cBgS_PolyInfo
 */
//	8007B4CC: 8007B30C (GetPolyInf0__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetMonkeyBarsCode(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetMonkeyBarsCode__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B4E0-8007B504 0024+00 s=1 e=1 z=0  None .text      GetPolyObjThrough__4dBgWFi */
//	8007B4F0: 8007B360 (GetMaskPolyInf0_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyObjThrough(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyObjThrough__4dBgWFi.s"
}
#pragma pop

/* 8007B504-8007B52C 0028+00 s=1 e=1 z=0  None .text      GetPolyCamThrough__4dBgWFi */
//	8007B518: 8007B360 (GetMaskPolyInf0_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyCamThrough(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyCamThrough__4dBgWFi.s"
}
#pragma pop

/* 8007B52C-8007B550 0024+00 s=1 e=1 z=0  None .text      GetPolyLinkThrough__4dBgWFi */
//	8007B53C: 8007B360 (GetMaskPolyInf0_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyLinkThrough(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyLinkThrough__4dBgWFi.s"
}
#pragma pop

/* 8007B550-8007B574 0024+00 s=1 e=1 z=0  None .text      GetPolyArrowThrough__4dBgWFi */
//	8007B560: 8007B360 (GetMaskPolyInf0_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyArrowThrough(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyArrowThrough__4dBgWFi.s"
}
#pragma pop

/* 8007B574-8007B598 0024+00 s=1 e=1 z=0  None .text      GetPolyHSStick__4dBgWFi */
//	8007B584: 8007B360 (GetMaskPolyInf0_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyHSStick(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyHSStick__4dBgWFi.s"
}
#pragma pop

/* 8007B598-8007B5BC 0024+00 s=1 e=1 z=0  None .text      GetPolyBoomerangThrough__4dBgWFi */
//	8007B5A8: 8007B360 (GetMaskPolyInf0_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyBoomerangThrough(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyBoomerangThrough__4dBgWFi.s"
}
#pragma pop

/* 8007B5BC-8007B5E0 0024+00 s=1 e=1 z=0  None .text      GetPolyRopeThrough__4dBgWFi */
//	8007B5CC: 8007B360 (GetMaskPolyInf0_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyRopeThrough(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyRopeThrough__4dBgWFi.s"
}
#pragma pop

/* 8007B5E0-8007B604 0024+00 s=1 e=1 z=0  None .text      GetPolyBombThrough__4dBgWFi */
//	8007B5F0: 8007B360 (GetMaskPolyInf0_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyBombThrough(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyBombThrough__4dBgWFi.s"
}
#pragma pop

/* 8007B604-8007B630 002C+00 s=1 e=1 z=0  None .text      GetShdwThrough__4dBgWFi */
//	8007B614: 8007B360 (GetMaskPolyInf0_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetShdwThrough(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetShdwThrough__4dBgWFi.s"
}
#pragma pop

/* 8007B630-8007B654 0024+00 s=1 e=1 z=0  None .text      GetUnderwaterRoofCode__4dBgWFi */
//	8007B640: 8007B360 (GetMaskPolyInf0_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetUnderwaterRoofCode(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetUnderwaterRoofCode__4dBgWFi.s"
}
#pragma pop

/* 8007B654-8007B6AC 0058+00 s=6 e=0 z=0  None .text      GetPolyInf1__4cBgWCFiUlUl */
//	8007B664: 803621DC (_savegpr_29)
//	8007B674: 8007B2F4 (GetPolyInfId__4cBgWCFi)
//	8007B698: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetPolyInf1(int param_0, u32 param_1, u32 param_2) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyInf1__4cBgWCFiUlUl.s"
}
#pragma pop

/* 8007B6AC-8007B6D8 002C+00 s=1 e=1 z=0  None .text      GetLinkNo__4dBgWFRC13cBgS_PolyInfo */
//	8007B6C4: 8007B654 (GetPolyInf1__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetLinkNo(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetLinkNo__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B6D8-8007B704 002C+00 s=1 e=1 z=0  None .text      GetWallCode__4dBgWFRC13cBgS_PolyInfo */
//	8007B6F0: 8007B654 (GetPolyInf1__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetWallCode(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetWallCode__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B704-8007B734 0030+00 s=1 e=1 z=0  None .text      GetPolyAtt0__4dBgWFRC13cBgS_PolyInfo */
//	8007B720: 8007B654 (GetPolyInf1__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyAtt0(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyAtt0__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B734-8007B760 002C+00 s=1 e=1 z=0  None .text      GetPolyAtt1__4dBgWFRC13cBgS_PolyInfo */
//	8007B74C: 8007B654 (GetPolyInf1__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyAtt1(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyAtt1__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B760-8007B78C 002C+00 s=1 e=1 z=0  None .text      GetGroundCode__4dBgWFRC13cBgS_PolyInfo */
//	8007B778: 8007B654 (GetPolyInf1__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetGroundCode(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetGroundCode__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B78C-8007B7DC 0050+00 s=2 e=0 z=0  None .text      GetMaskPolyInf1_NoShift__4cBgWCFiUl */
//	8007B7A8: 8007B2F4 (GetPolyInfId__4cBgWCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetMaskPolyInf1_NoShift(int param_0, u32 param_1) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetMaskPolyInf1_NoShift__4cBgWCFiUl.s"
}
#pragma pop

/* 8007B7DC-8007B800 0024+00 s=1 e=1 z=0  None .text      GetIronBallThrough__4dBgWFi */
//	8007B7EC: 8007B78C (GetMaskPolyInf1_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetIronBallThrough(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetIronBallThrough__4dBgWFi.s"
}
#pragma pop

/* 8007B800-8007B824 0024+00 s=1 e=1 z=0  None .text      GetAttackThrough__4dBgWFi */
//	8007B810: 8007B78C (GetMaskPolyInf1_NoShift__4cBgWCFiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetAttackThrough(int param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetAttackThrough__4dBgWFi.s"
}
#pragma pop

/* 8007B824-8007B87C 0058+00 s=4 e=0 z=0  None .text      GetPolyInf2__4cBgWCFiUlUl */
//	8007B834: 803621DC (_savegpr_29)
//	8007B844: 8007B2F4 (GetPolyInfId__4cBgWCFi)
//	8007B868: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetPolyInf2(int param_0, u32 param_1, u32 param_2) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyInf2__4cBgWCFiUlUl.s"
}
#pragma pop

/* 8007B87C-8007B8A8 002C+00 s=1 e=1 z=0  None .text      GetCamMoveBG__4dBgWFRC13cBgS_PolyInfo */
//	8007B894: 8007B824 (GetPolyInf2__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetCamMoveBG(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetCamMoveBG__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B8A8-8007B8D8 0030+00 s=1 e=1 z=0  None .text      GetRoomCamId__4dBgWFRC13cBgS_PolyInfo */
//	8007B8C4: 8007B824 (GetPolyInf2__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetRoomCamId(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetRoomCamId__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B8D8-8007B904 002C+00 s=1 e=1 z=0  None .text      GetRoomPathId__4dBgWFRC13cBgS_PolyInfo */
//	8007B8F0: 8007B824 (GetPolyInf2__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetRoomPathId(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetRoomPathId__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B904-8007B930 002C+00 s=1 e=1 z=0  None .text      GetRoomPathPntNo__4dBgWFRC13cBgS_PolyInfo
 */
//	8007B91C: 8007B824 (GetPolyInf2__4cBgWCFiUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetRoomPathPntNo(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetRoomPathPntNo__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007B930-8007B948 0018+00 s=2 e=0 z=0  None .text      GetTriGrp__4cBgWCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::GetTriGrp(int param_0) const {
    nofralloc
#include "asm/d/bg/d_bg_w/GetTriGrp__4cBgWCFi.s"
}
#pragma pop

/* 8007B948-8007B958 0010+00 s=2 e=1 z=0  None .text      ChkNotReady__4cBgWCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::ChkNotReady() const {
    nofralloc
#include "asm/d/bg/d_bg_w/ChkNotReady__4cBgWCFv.s"
}
#pragma pop

/* 8007B958-8007B964 000C+00 s=2 e=1 z=0  None .text      ChkLock__4cBgWCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::ChkLock() const {
    nofralloc
#include "asm/d/bg/d_bg_w/ChkLock__4cBgWCFv.s"
}
#pragma pop

/* 8007B964-8007B970 000C+00 s=2 e=1 z=0  None .text      ChkMoveBg__4cBgWCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgW::ChkMoveBg() const {
    nofralloc
#include "asm/d/bg/d_bg_w/ChkMoveBg__4cBgWCFv.s"
}
#pragma pop

/* 8007B970-8007B9C0 0050+00 s=1 e=2 z=87  None .text      __ct__4dBgWFv */
//	8007B984: 80079294 (__ct__4cBgWFv)
//	8007B988: 803ABA80 (__vt__4dBgW)
//	8007B98C: 803ABA80 (__vt__4dBgW)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgW::dBgW() {
    nofralloc
#include "asm/d/bg/d_bg_w/__ct__4dBgWFv.s"
}
#pragma pop

/* 8007B9C0-8007B9EC 002C+00 s=0 e=2 z=115  None .text      Move__4dBgWFv */
//	8007B9D8: 8007AC10 (Move__4cBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::Move() {
    nofralloc
#include "asm/d/bg/d_bg_w/Move__4dBgWFv.s"
}
#pragma pop

/* 8007B9EC-8007BA40 0054+00 s=2 e=0 z=0  None .text
 * positionWallCorrect__4dBgWFP9dBgS_AcchfR8cM3dGPlaP4cXyzf     */
//	8007B9F8: 80452704 (lit_3937)
//	8007BA00: 804526F8 (lit_3717)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::positionWallCorrect(dBgS_Acch* param_0, f32 param_1, cM3dGPla& param_2,
                                   cXyz* param_3, f32 param_4) {
    nofralloc
#include "asm/d/bg/d_bg_w/positionWallCorrect__4dBgWFP9dBgS_AcchfR8cM3dGPlaP4cXyzf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452710-80452718 0004+04 s=2 e=0 z=0  None .sdata2    @4962 */
SECTION_SDATA2 static f32 lit_4962[1 + 1 /* padding */] = {
    1.0f / 125.0f,
    /* padding */
    0.0f,
};

/* 8007BA40-8007C234 07F4+00 s=1 e=0 z=0  None .text      RwgWallCorrect__4dBgWFP9dBgS_AcchUs */
//	8007BA90: 803621C0 (_savegpr_22)
//	8007BAF0: 804526F8 (lit_3717)
//	8007BB0C: 80451180 (G_CM3D_F_ABS_MIN)
//	8007BB28: 80452704 (lit_3937)
//	8007BB48: 804526F8 (lit_3717)
//	8007BB94: 800771E4 (GetSpeedY__9dBgS_AcchFv)
//	8007BBA4: 80077200 (GetWallAddY__9dBgS_AcchFR3Vec)
//	8007BC28: 804526F8 (lit_3717)
//	8007BC58: 80451180 (G_CM3D_F_ABS_MIN)
//	8007BC74: 80451180 (G_CM3D_F_ABS_MIN)
//	8007BC90: 80451180 (G_CM3D_F_ABS_MIN)
//	8007BCAC: 804526F8 (lit_3717)
//	8007BCD8: 804526F8 (lit_3717)
//	8007BD18: 804526F8 (lit_3717)
//	8007BD40: 804526F8 (lit_3717)
//	8007BDB0: 80451180 (G_CM3D_F_ABS_MIN)
//	8007BF04: 8026862C (cM3d_Len2dSqPntAndSegLine__FffffffPfPfPf)
//	8007BF50: 804526F8 (lit_3717)
//	8007BF88: 8007B9EC (positionWallCorrect__4dBgWFP9dBgS_AcchfR8cM3dGPlaP4cXyzf)
//	8007BF90: 800772E8 (CalcMovePosWork__9dBgS_AcchFv)
//	8007BFB4: 80077288 (SetWallPolyIndex__9dBgS_AcchFii)
//	8007BFC0: 80267674 (cM_atan2s__Fff)
//	8007BFF0: 80268614 (cM3d_Len2dSq__Fffff)
//	8007C00C: 80268614 (cM3d_Len2dSq__Fffff)
//	8007C03C: 80452710 (lit_4962)
//	8007C064: 80268260 (cM2d_CrossCirLin__FR8cM2dGCirffffPfPf)
//	8007C09C: 800772E8 (CalcMovePosWork__9dBgS_AcchFv)
//	8007C0C0: 80077288 (SetWallPolyIndex__9dBgS_AcchFii)
//	8007C0CC: 80267674 (cM_atan2s__Fff)
//	8007C104: 80452710 (lit_4962)
//	8007C12C: 80268260 (cM2d_CrossCirLin__FR8cM2dGCirffffPfPf)
//	8007C164: 800772E8 (CalcMovePosWork__9dBgS_AcchFv)
//	8007C188: 80077288 (SetWallPolyIndex__9dBgS_AcchFii)
//	8007C194: 80267674 (cM_atan2s__Fff)
//	8007C220: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::RwgWallCorrect(dBgS_Acch* param_0, u16 param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgWallCorrect__4dBgWFP9dBgS_AcchUs.s"
}
#pragma pop

/* 8007C234-8007C360 012C+00 s=1 e=0 z=0  None .text      WallCorrectRp__4dBgWFP9dBgS_Acchi */
//	8007C244: 803621D0 (_savegpr_26)
//	8007C264: 80268B0C (cM3d_Cross_AabCyl__FPC8cM3dGAabPC8cM3dGCyl)
//	8007C2BC: 8007BA40 (RwgWallCorrect__4dBgWFP9dBgS_AcchUs)
//	8007C2EC: 8007BA40 (RwgWallCorrect__4dBgWFP9dBgS_AcchUs)
//	8007C34C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::WallCorrectRp(dBgS_Acch* param_0, int param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/WallCorrectRp__4dBgWFP9dBgS_Acchi.s"
}
#pragma pop

/* 8007C360-8007C484 0124+00 s=1 e=0 z=0  None .text      WallCorrectGrpRp__4dBgWFP9dBgS_Acchii */
//	8007C370: 803621D4 (_savegpr_27)
//	8007C398: 80268B0C (cM3d_Cross_AabCyl__FPC8cM3dGAabPC8cM3dGCyl)
//	8007C404: 8007C234 (WallCorrectRp__4dBgWFP9dBgS_Acchi)
//	8007C470: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::WallCorrectGrpRp(dBgS_Acch* param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/WallCorrectGrpRp__4dBgWFP9dBgS_Acchii.s"
}
#pragma pop

/* 8007C484-8007C4AC 0028+00 s=1 e=1 z=0  None .text      WallCorrect__4dBgWFP9dBgS_Acch */
//	8007C498: 8007C360 (WallCorrectGrpRp__4dBgWFP9dBgS_Acchii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::WallCorrect(dBgS_Acch* param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/WallCorrect__4dBgWFP9dBgS_Acch.s"
}
#pragma pop

/* ############################################################################################## */
/* 80424B80-80424F70 03F0+00 s=1 e=0 z=0  None .bss       l_wcsbuf */
static u8 l_wcsbuf[1008];

/* 80450F80-80450F84 0004+00 s=2 e=0 z=0  None .sbss      l_start */
static u8 l_start[4];

/* 80450F84-80450F88 0004+00 s=2 e=0 z=0  None .sbss      l_wcsbuf_num */
static u8 l_wcsbuf_num[4];

/* 8007C4AC-8007C714 0268+00 s=1 e=0 z=0  None .text      RwgWallCorrectSort__4dBgWFP9dBgS_AcchUs */
//	8007C4BC: 803621D0 (_savegpr_26)
//	8007C51C: 804526F8 (lit_3717)
//	8007C538: 80451180 (G_CM3D_F_ABS_MIN)
//	8007C564: 80439A20 (sincosTable___5JMath)
//	8007C568: 80439A20 (sincosTable___5JMath)
//	8007C580: 80452704 (lit_3937)
//	8007C5A0: 80450F80 (l_start)
//	8007C5AC: 80450F84 (l_wcsbuf_num)
//	8007C5BC: 80424B80 (l_wcsbuf)
//	8007C5C0: 80424B80 (l_wcsbuf)
//	8007C5D8: 80450F80 (l_start)
//	8007C5E0: 80450F84 (l_wcsbuf_num)
//	8007C604: 80450F84 (l_wcsbuf_num)
//	8007C614: 80424B80 (l_wcsbuf)
//	8007C618: 80424B80 (l_wcsbuf)
//	8007C62C: 80450F80 (l_start)
//	8007C634: 80450F84 (l_wcsbuf_num)
//	8007C648: 80450F84 (l_wcsbuf_num)
//	8007C658: 80424B80 (l_wcsbuf)
//	8007C65C: 80424B80 (l_wcsbuf)
//	8007C678: 80450F84 (l_wcsbuf_num)
//	8007C680: 80450F84 (l_wcsbuf_num)
//	8007C6A0: 80450F84 (l_wcsbuf_num)
//	8007C6B0: 80424B80 (l_wcsbuf)
//	8007C6B4: 80424B80 (l_wcsbuf)
//	8007C6D0: 80450F84 (l_wcsbuf_num)
//	8007C6D8: 80450F84 (l_wcsbuf_num)
//	8007C700: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::RwgWallCorrectSort(dBgS_Acch* param_0, u16 param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgWallCorrectSort__4dBgWFP9dBgS_AcchUs.s"
}
#pragma pop

/* 8007C714-8007C808 00F4+00 s=1 e=0 z=0  None .text      WallCorrectRpSort__4dBgWFP9dBgS_Acchi */
//	8007C724: 803621D4 (_savegpr_27)
//	8007C744: 80268B0C (cM3d_Cross_AabCyl__FPC8cM3dGAabPC8cM3dGCyl)
//	8007C790: 8007C4AC (RwgWallCorrectSort__4dBgWFP9dBgS_AcchUs)
//	8007C7B4: 8007C4AC (RwgWallCorrectSort__4dBgWFP9dBgS_AcchUs)
//	8007C7F4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::WallCorrectRpSort(dBgS_Acch* param_0, int param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/WallCorrectRpSort__4dBgWFP9dBgS_Acchi.s"
}
#pragma pop

/* 8007C808-8007C910 0108+00 s=1 e=0 z=0  None .text      WallCorrectGrpRpSort__4dBgWFP9dBgS_Acchii
 */
//	8007C818: 803621D8 (_savegpr_28)
//	8007C840: 80268B0C (cM3d_Cross_AabCyl__FPC8cM3dGAabPC8cM3dGCyl)
//	8007C8A8: 8007C714 (WallCorrectRpSort__4dBgWFP9dBgS_Acchi)
//	8007C8FC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::WallCorrectGrpRpSort(dBgS_Acch* param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/WallCorrectGrpRpSort__4dBgWFP9dBgS_Acchii.s"
}
#pragma pop

/* 8007C910-8007D0DC 07CC+00 s=1 e=1 z=0  None .text      WallCorrectSort__4dBgWFP9dBgS_Acch */
//	8007C968: 803621C4 (_savegpr_23)
//	8007C978: 80450F80 (l_start)
//	8007C97C: 80450F84 (l_wcsbuf_num)
//	8007C988: 8007C808 (WallCorrectGrpRpSort__4dBgWFP9dBgS_Acchii)
//	8007C990: 80450F80 (l_start)
//	8007C994: 804526F8 (lit_3717)
//	8007C998: 80452704 (lit_3937)
//	8007CA3C: 800771E4 (GetSpeedY__9dBgS_AcchFv)
//	8007CA4C: 80077200 (GetWallAddY__9dBgS_AcchFR3Vec)
//	8007CAD0: 804526F8 (lit_3717)
//	8007CB00: 80451180 (G_CM3D_F_ABS_MIN)
//	8007CB1C: 80451180 (G_CM3D_F_ABS_MIN)
//	8007CB38: 80451180 (G_CM3D_F_ABS_MIN)
//	8007CB54: 804526F8 (lit_3717)
//	8007CB80: 804526F8 (lit_3717)
//	8007CBC0: 804526F8 (lit_3717)
//	8007CBE8: 804526F8 (lit_3717)
//	8007CC58: 80451180 (G_CM3D_F_ABS_MIN)
//	8007CDAC: 8026862C (cM3d_Len2dSqPntAndSegLine__FffffffPfPfPf)
//	8007CDF8: 804526F8 (lit_3717)
//	8007CE30: 8007B9EC (positionWallCorrect__4dBgWFP9dBgS_AcchfR8cM3dGPlaP4cXyzf)
//	8007CE38: 800772E8 (CalcMovePosWork__9dBgS_AcchFv)
//	8007CE5C: 80077288 (SetWallPolyIndex__9dBgS_AcchFii)
//	8007CE68: 80267674 (cM_atan2s__Fff)
//	8007CE98: 80268614 (cM3d_Len2dSq__Fffff)
//	8007CEB4: 80268614 (cM3d_Len2dSq__Fffff)
//	8007CEE4: 80452710 (lit_4962)
//	8007CF0C: 80268260 (cM2d_CrossCirLin__FR8cM2dGCirffffPfPf)
//	8007CF44: 800772E8 (CalcMovePosWork__9dBgS_AcchFv)
//	8007CF68: 80077288 (SetWallPolyIndex__9dBgS_AcchFii)
//	8007CF74: 80267674 (cM_atan2s__Fff)
//	8007CFAC: 80452710 (lit_4962)
//	8007CFD4: 80268260 (cM2d_CrossCirLin__FR8cM2dGCirffffPfPf)
//	8007D00C: 800772E8 (CalcMovePosWork__9dBgS_AcchFv)
//	8007D030: 80077288 (SetWallPolyIndex__9dBgS_AcchFii)
//	8007D03C: 80267674 (cM_atan2s__Fff)
//	8007D0C8: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::WallCorrectSort(dBgS_Acch* param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/WallCorrectSort__4dBgWFP9dBgS_Acch.s"
}
#pragma pop

/* 8007D0DC-8007D208 012C+00 s=1 e=0 z=0  None .text      RwgRoofChk__4dBgWFUsP12dBgS_RoofChk */
//	8007D0EC: 803621D0 (_savegpr_26)
//	8007D118: 8026F57C (getCrossY__8cM3dGPlaCFRC4cXyzPf)
//	8007D184: 8026A60C (cM3d_CrossY_Tri__FRC3VecRC3VecRC3VecRC8cM3dGPlaPC3Vec)
//	8007D1C8: 802681A4 (SetPolyIndex__13cBgS_PolyInfoFi)
//	8007D1F4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::RwgRoofChk(u16 param_0, dBgS_RoofChk* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgRoofChk__4dBgWFUsP12dBgS_RoofChk.s"
}
#pragma pop

/* 8007D208-8007D330 0128+00 s=1 e=0 z=0  None .text      RoofChkRp__4dBgWFP12dBgS_RoofChki */
//	8007D218: 803621D0 (_savegpr_26)
//	8007D23C: 8026EC88 (CrossY__8cM3dGAabCFPC4cXyz)
//	8007D250: 8026ECD0 (UnderPlaneYUnder__8cM3dGAabCFf)
//	8007D264: 8026ECE4 (TopPlaneYUnder__8cM3dGAabCFf)
//	8007D2B4: 8007D0DC (RwgRoofChk__4dBgWFUsP12dBgS_RoofChk)
//	8007D31C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::RoofChkRp(dBgS_RoofChk* param_0, int param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/RoofChkRp__4dBgWFP12dBgS_RoofChki.s"
}
#pragma pop

/* 8007D330-8007D470 0140+00 s=1 e=0 z=0  None .text      RoofChkGrpRp__4dBgWFP12dBgS_RoofChkii */
//	8007D340: 803621D4 (_savegpr_27)
//	8007D368: 8026EC88 (CrossY__8cM3dGAabCFPC4cXyz)
//	8007D37C: 8026ECD0 (UnderPlaneYUnder__8cM3dGAabCFf)
//	8007D390: 8026ECE4 (TopPlaneYUnder__8cM3dGAabCFf)
//	8007D3FC: 8007D208 (RoofChkRp__4dBgWFP12dBgS_RoofChki)
//	8007D45C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::RoofChkGrpRp(dBgS_RoofChk* param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/RoofChkGrpRp__4dBgWFP12dBgS_RoofChkii.s"
}
#pragma pop

/* 8007D470-8007D498 0028+00 s=1 e=1 z=0  None .text      RoofChk__4dBgWFP12dBgS_RoofChk */
//	8007D484: 8007D330 (RoofChkGrpRp__4dBgWFP12dBgS_RoofChkii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::RoofChk(dBgS_RoofChk* param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/RoofChk__4dBgWFP12dBgS_RoofChk.s"
}
#pragma pop

/* 8007D498-8007D5C4 012C+00 s=1 e=0 z=0  None .text      RwgSplGrpChk__4dBgWFUsP14dBgS_SplGrpChk */
//	8007D4A8: 803621D0 (_savegpr_26)
//	8007D4D4: 8026F57C (getCrossY__8cM3dGPlaCFRC4cXyzPf)
//	8007D540: 8026A60C (cM3d_CrossY_Tri__FRC3VecRC3VecRC3VecRC8cM3dGPlaPC3Vec)
//	8007D584: 802681A4 (SetPolyIndex__13cBgS_PolyInfoFi)
//	8007D5B0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::RwgSplGrpChk(u16 param_0, dBgS_SplGrpChk* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgSplGrpChk__4dBgWFUsP14dBgS_SplGrpChk.s"
}
#pragma pop

/* 8007D5C4-8007D6F0 012C+00 s=1 e=0 z=0  None .text      SplGrpChkRp__4dBgWFP14dBgS_SplGrpChki */
//	8007D5D4: 803621D0 (_savegpr_26)
//	8007D5F8: 8026EC88 (CrossY__8cM3dGAabCFPC4cXyz)
//	8007D60C: 8026ECD0 (UnderPlaneYUnder__8cM3dGAabCFf)
//	8007D620: 8026ECE4 (TopPlaneYUnder__8cM3dGAabCFf)
//	8007D674: 8007D498 (RwgSplGrpChk__4dBgWFUsP14dBgS_SplGrpChk)
//	8007D6DC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::SplGrpChkRp(dBgS_SplGrpChk* param_0, int param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/SplGrpChkRp__4dBgWFP14dBgS_SplGrpChki.s"
}
#pragma pop

/* 8007D6F0-8007D830 0140+00 s=1 e=0 z=0  None .text      SplGrpChkGrpRp__4dBgWFP14dBgS_SplGrpChkii
 */
//	8007D700: 803621D4 (_savegpr_27)
//	8007D728: 8026EC88 (CrossY__8cM3dGAabCFPC4cXyz)
//	8007D73C: 8026ECD0 (UnderPlaneYUnder__8cM3dGAabCFf)
//	8007D750: 8026ECE4 (TopPlaneYUnder__8cM3dGAabCFf)
//	8007D7BC: 8007D5C4 (SplGrpChkRp__4dBgWFP14dBgS_SplGrpChki)
//	8007D81C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::SplGrpChkGrpRp(dBgS_SplGrpChk* param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/SplGrpChkGrpRp__4dBgWFP14dBgS_SplGrpChkii.s"
}
#pragma pop

/* 8007D830-8007D858 0028+00 s=1 e=1 z=0  None .text      SplGrpChk__4dBgWFP14dBgS_SplGrpChk */
//	8007D844: 8007D6F0 (SplGrpChkGrpRp__4dBgWFP14dBgS_SplGrpChkii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::SplGrpChk(dBgS_SplGrpChk* param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/SplGrpChk__4dBgWFP14dBgS_SplGrpChk.s"
}
#pragma pop

/* 8007D858-8007D8E8 0090+00 s=1 e=0 z=0  None .text      RwgCaptPoly__4dBgWFiR13dBgS_CaptPoly */
//	8007D868: 803621D8 (_savegpr_28)
//	8007D8D4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::RwgCaptPoly(int param_0, dBgS_CaptPoly& param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgCaptPoly__4dBgWFiR13dBgS_CaptPoly.s"
}
#pragma pop

/* 8007D8E8-8007DA04 011C+00 s=1 e=0 z=0  None .text      CaptPolyRp__4dBgWFR13dBgS_CaptPolyi */
//	8007D8F8: 803621D4 (_savegpr_27)
//	8007D918: 802689E8 (cM3d_Cross_AabAab__FPC8cM3dGAabPC8cM3dGAab)
//	8007D964: 8007D858 (RwgCaptPoly__4dBgWFiR13dBgS_CaptPoly)
//	8007D988: 8007D858 (RwgCaptPoly__4dBgWFiR13dBgS_CaptPoly)
//	8007D9B0: 8007D858 (RwgCaptPoly__4dBgWFiR13dBgS_CaptPoly)
//	8007D9F0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::CaptPolyRp(dBgS_CaptPoly& param_0, int param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/CaptPolyRp__4dBgWFR13dBgS_CaptPolyi.s"
}
#pragma pop

/* 8007DA04-8007DAF8 00F4+00 s=1 e=0 z=0  None .text      CaptPolyGrpRp__4dBgWFR13dBgS_CaptPolyii */
//	8007DA14: 803621D8 (_savegpr_28)
//	8007DA3C: 802689E8 (cM3d_Cross_AabAab__FPC8cM3dGAabPC8cM3dGAab)
//	8007DA94: 8007D8E8 (CaptPolyRp__4dBgWFR13dBgS_CaptPolyi)
//	8007DAE4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::CaptPolyGrpRp(dBgS_CaptPoly& param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/CaptPolyGrpRp__4dBgWFR13dBgS_CaptPolyii.s"
}
#pragma pop

/* 8007DAF8-8007DB20 0028+00 s=1 e=1 z=0  None .text      CaptPoly__4dBgWFR13dBgS_CaptPoly */
//	8007DB0C: 8007DA04 (CaptPolyGrpRp__4dBgWFR13dBgS_CaptPolyii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::CaptPoly(dBgS_CaptPoly& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/CaptPoly__4dBgWFR13dBgS_CaptPoly.s"
}
#pragma pop

/* 8007DB20-8007DC70 0150+00 s=1 e=0 z=0  None .text      RwgSphChk__4dBgWFUsP11dBgS_SphChkPv */
//	8007DB30: 803621C4 (_savegpr_23)
//	8007DB40: 803A37C0 (__vt__8cM3dGPla)
//	8007DB44: 803A37C0 (__vt__8cM3dGPla)
//	8007DB4C: 803ABB84 (__vt__8cM3dGTri)
//	8007DB50: 803ABB84 (__vt__8cM3dGTri)
//	8007DBD4: 8026F85C (setBg__8cM3dGTriFPC3VecPC3VecPC3VecPC8cM3dGPla)
//	8007DBE4: 8026BF04 (cM3d_Cross_SphTri__FPC8cM3dGSphPC8cM3dGTriP3Vec)
//	8007DC24: 802681A4 (SetPolyIndex__13cBgS_PolyInfoFi)
//	8007DC3C: 803ABB84 (__vt__8cM3dGTri)
//	8007DC40: 803ABB84 (__vt__8cM3dGTri)
//	8007DC48: 803A37C0 (__vt__8cM3dGPla)
//	8007DC4C: 803A37C0 (__vt__8cM3dGPla)
//	8007DC5C: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::RwgSphChk(u16 param_0, dBgS_SphChk* param_1, void* param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/RwgSphChk__4dBgWFUsP11dBgS_SphChkPv.s"
}
#pragma pop

/* 8007DC70-8007DDE0 0170+00 s=1 e=0 z=0  None .text      SphChkRp__4dBgWFP11dBgS_SphChkPvi */
//	8007DC80: 803621CC (_savegpr_25)
//	8007DCA0: 80268BB4 (cM3d_Cross_AabSph__FPC8cM3dGAabPC8cM3dGSph)
//	8007DCFC: 8007DB20 (RwgSphChk__4dBgWFUsP11dBgS_SphChkPv)
//	8007DD30: 8007DB20 (RwgSphChk__4dBgWFUsP11dBgS_SphChkPv)
//	8007DD68: 8007DB20 (RwgSphChk__4dBgWFUsP11dBgS_SphChkPv)
//	8007DDCC: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::SphChkRp(dBgS_SphChk* param_0, void* param_1, int param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/SphChkRp__4dBgWFP11dBgS_SphChkPvi.s"
}
#pragma pop

/* 8007DDE0-8007DF00 0120+00 s=1 e=0 z=0  None .text      SphChkGrpRp__4dBgWFP11dBgS_SphChkPvii */
//	8007DDF0: 803621D0 (_savegpr_26)
//	8007DE18: 80268BB4 (cM3d_Cross_AabSph__FPC8cM3dGAabPC8cM3dGSph)
//	8007DE88: 8007DC70 (SphChkRp__4dBgWFP11dBgS_SphChkPvi)
//	8007DEEC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::SphChkGrpRp(dBgS_SphChk* param_0, void* param_1, int param_2, int param_3) {
    nofralloc
#include "asm/d/bg/d_bg_w/SphChkGrpRp__4dBgWFP11dBgS_SphChkPvii.s"
}
#pragma pop

/* 8007DF00-8007DF28 0028+00 s=1 e=1 z=0  None .text      SphChk__4dBgWFP11dBgS_SphChkPv */
//	8007DF14: 8007DDE0 (SphChkGrpRp__4dBgWFP11dBgS_SphChkPvii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::SphChk(dBgS_SphChk* param_0, void* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/SphChk__4dBgWFP11dBgS_SphChkPv.s"
}
#pragma pop

/* 8007DF28-8007DF58 0030+00 s=1 e=1 z=0  None .text GetPolyGrpRoomInfId__4dBgWFRC13cBgS_PolyInfo
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetPolyGrpRoomInfId(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetPolyGrpRoomInfId__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007DF58-8007DF88 0030+00 s=1 e=1 z=0  None .text      GetGrpSoundId__4dBgWFRC13cBgS_PolyInfo */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::GetGrpSoundId(cBgS_PolyInfo const& param_0) {
    nofralloc
#include "asm/d/bg/d_bg_w/GetGrpSoundId__4dBgWFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007DF88-8007DFC4 003C+00 s=1 e=0 z=0  None .text
 * CrrPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::CrrPos(cBgS_PolyInfo const& param_0, void* param_1, bool param_2, cXyz* param_3,
                      csXyz* param_4, csXyz* param_5) {
    nofralloc
#include "asm/d/bg/d_bg_w/CrrPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop

/* 8007DFC4-8007E000 003C+00 s=1 e=0 z=0  None .text
 * TransPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::TransPos(cBgS_PolyInfo const& param_0, void* param_1, bool param_2, cXyz* param_3,
                        csXyz* param_4, csXyz* param_5) {
    nofralloc
#include "asm/d/bg/d_bg_w/TransPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop

/* 8007E000-8007E02C 002C+00 s=1 e=0 z=0  None .text
 * MatrixCrrPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::MatrixCrrPos(cBgS_PolyInfo const& param_0, void* param_1, bool param_2,
                            cXyz* param_3, csXyz* param_4, csXyz* param_5) {
    nofralloc
#include "asm/d/bg/d_bg_w/MatrixCrrPos__4dBgWFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop

/* 8007E02C-8007E360 0334+00 s=1 e=1 z=0  None .text      ChkPolyThrough__4dBgWFiP16cBgS_PolyPassChk
 */
//	8007E03C: 803621D8 (_savegpr_28)
//	8007E230: 8007B654 (GetPolyInf1__4cBgWCFiUlUl)
//	8007E244: 80078F04 (ChkNoHorse__16dBgS_PolyPassChkFv)
//	8007E264: 80078F04 (ChkNoHorse__16dBgS_PolyPassChkFv)
//	8007E2A8: 804061C0 (g_dComIfG_gameInfo)
//	8007E2AC: 804061C0 (g_dComIfG_gameInfo)
//	8007E2C4: 80362084 (__ptmf_scall)
//	8007E34C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::ChkPolyThrough(int param_0, cBgS_PolyPassChk* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/ChkPolyThrough__4dBgWFiP16cBgS_PolyPassChk.s"
}
#pragma pop

/* 8007E360-8007E3D8 0078+00 s=1 e=1 z=0  None .text
 * ChkShdwDrawThrough__4dBgWFiP16cBgS_PolyPassChk               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::ChkShdwDrawThrough(int param_0, cBgS_PolyPassChk* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/ChkShdwDrawThrough__4dBgWFiP16cBgS_PolyPassChk.s"
}
#pragma pop

/* 8007E3D8-8007E444 006C+00 s=1 e=1 z=0  None .text      ChkGrpThrough__4dBgWFiP15cBgS_GrpPassChki
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::ChkGrpThrough(int param_0, cBgS_GrpPassChk* param_1, int param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/ChkGrpThrough__4dBgWFiP15cBgS_GrpPassChki.s"
}
#pragma pop

/* 8007E444-8007E474 0030+00 s=1 e=1 z=0  None .text
 * CallRideCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_c           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::CallRideCallBack(fopAc_ac_c* param_0, fopAc_ac_c* param_1) {
    nofralloc
#include "asm/d/bg/d_bg_w/CallRideCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_c.s"
}
#pragma pop

/* 8007E474-8007E4A4 0030+00 s=1 e=1 z=0  None .text
 * CallArrowStickCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_cR4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::CallArrowStickCallBack(fopAc_ac_c* param_0, fopAc_ac_c* param_1, cXyz& param_2) {
    nofralloc
#include "asm/d/bg/d_bg_w/CallArrowStickCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_cR4cXyz.s"
}
#pragma pop

/* 8007E4A4-8007E4B4 0010+00 s=1 e=1 z=0  None .text      OffMoveFlag__4dBgWFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::OffMoveFlag() {
    nofralloc
#include "asm/d/bg/d_bg_w/OffMoveFlag__4dBgWFv.s"
}
#pragma pop

/* 8007E4B4-8007E4C0 000C+00 s=1 e=1 z=0  None .text      ChkMoveFlag__4dBgWCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW::ChkMoveFlag() const {
    nofralloc
#include "asm/d/bg/d_bg_w/ChkMoveFlag__4dBgWCFv.s"
}
#pragma pop

/* 8007E4C0-8007E548 0088+00 s=0 e=0 z=1  None .text      dBgW_NewSet__FP6cBgD_tUlPA3_A4_f */
//	8007E4D0: 803621D8 (_savegpr_28)
//	8007E4E4: 802CEC4C (__nw__FUl)
//	8007E4F0: 8007B970 (__ct__4dBgWFv)
//	8007E518: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
//	8007E534: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgW_NewSet(cBgD_t* param_0, u32 param_1, f32 (*param_2)[3][4]) {
    nofralloc
#include "asm/d/bg/d_bg_w/dBgW_NewSet__FP6cBgD_tUlPA3_A4_f.s"
}
#pragma pop

/* 8007E548-8007E5A8 0060+00 s=1 e=0 z=0  None .text      __dt__4dBgWFv */
//	8007E568: 803ABA80 (__vt__4dBgW)
//	8007E56C: 803ABA80 (__vt__4dBgW)
//	8007E578: 8007933C (__dt__4cBgWFv)
//	8007E588: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgW::~dBgW() {
    nofralloc
#include "asm/d/bg/d_bg_w/__dt__4dBgWFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F88-80450F90 0008+00 s=0 e=4 z=0  None .sbss      None */
u8 struct_80450F88[8];
