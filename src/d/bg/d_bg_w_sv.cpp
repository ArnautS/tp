// 
// Generated By: dol2asm
// Translation Unit: d/bg/d_bg_w_sv
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/bg/d_bg_w_sv.h"

// 
// Types:
// 

struct fopAc_ac_c {
};

struct dBgW_Base {
	/* 80074AB4 */ // False False
//  s16 False
void SetOldShapeAngleY(s16);
};

struct cXyz {
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct cBgD_t {
};

struct dBgWSv {
	/* 80082F98 */ // False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
void Set(cBgD_t*, u32);
	/* 80083020 */ // False False
void CopyBackVtx();
	/* 8008308C */ // True False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
void CrrPosWork(cXyz*, int, int, int);
	/* 80083244 */ // True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  void* False
// 	 void False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void CrrPos(cBgS_PolyInfo const&, void*, bool, cXyz*, csXyz*, csXyz*);
	/* 80083300 */ // True False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
void TransPosWork(cXyz*, int, int, int);
	/* 8008351C */ // True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  void* False
// 	 void False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void TransPos(cBgS_PolyInfo const&, void*, bool, cXyz*, csXyz*, csXyz*);
	/* 800835D8 */ // True False
//  void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  void* False
// 	 void False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void MatrixCrrPos(cBgS_PolyInfo const&, void*, bool, cXyz*, csXyz*, csXyz*);
	/* 800835DC */ // True False
~dBgWSv();
};

struct dBgS_RoofChk {
};

struct cBgS_GrpPassChk {
};

struct cBgS_PolyPassChk {
};

struct dBgS_SphChk {
};

struct dBgS_CaptPoly {
};

struct dBgS_Acch {
};

struct dBgS_SplGrpChk {
};

struct dBgW {
	/* 8007B3AC */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetExitId(cBgS_PolyInfo const&);
	/* 8007B3D8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyColor(cBgS_PolyInfo const&);
	/* 8007B404 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetHorseNoEntry(cBgS_PolyInfo const&);
	/* 8007B430 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetSpecialCode(cBgS_PolyInfo const&);
	/* 8007B460 */ // False False
//  int False
void GetSpecialCode(int);
	/* 8007B488 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetMagnetCode(cBgS_PolyInfo const&);
	/* 8007B4B4 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetMonkeyBarsCode(cBgS_PolyInfo const&);
	/* 8007B4E0 */ // False False
//  int False
void GetPolyObjThrough(int);
	/* 8007B504 */ // False False
//  int False
void GetPolyCamThrough(int);
	/* 8007B52C */ // False False
//  int False
void GetPolyLinkThrough(int);
	/* 8007B550 */ // False False
//  int False
void GetPolyArrowThrough(int);
	/* 8007B574 */ // False False
//  int False
void GetPolyHSStick(int);
	/* 8007B598 */ // False False
//  int False
void GetPolyBoomerangThrough(int);
	/* 8007B5BC */ // False False
//  int False
void GetPolyRopeThrough(int);
	/* 8007B5E0 */ // False False
//  int False
void GetPolyBombThrough(int);
	/* 8007B604 */ // False False
//  int False
void GetShdwThrough(int);
	/* 8007B630 */ // False False
//  int False
void GetUnderwaterRoofCode(int);
	/* 8007B6AC */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetLinkNo(cBgS_PolyInfo const&);
	/* 8007B6D8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetWallCode(cBgS_PolyInfo const&);
	/* 8007B704 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyAtt0(cBgS_PolyInfo const&);
	/* 8007B734 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyAtt1(cBgS_PolyInfo const&);
	/* 8007B760 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGroundCode(cBgS_PolyInfo const&);
	/* 8007B7DC */ // False False
//  int False
void GetIronBallThrough(int);
	/* 8007B800 */ // False False
//  int False
void GetAttackThrough(int);
	/* 8007B87C */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetCamMoveBG(cBgS_PolyInfo const&);
	/* 8007B8A8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomCamId(cBgS_PolyInfo const&);
	/* 8007B8D8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomPathId(cBgS_PolyInfo const&);
	/* 8007B904 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomPathPntNo(cBgS_PolyInfo const&);
	/* 8007C484 */ // False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
void WallCorrect(dBgS_Acch*);
	/* 8007C910 */ // False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
void WallCorrectSort(dBgS_Acch*);
	/* 8007D470 */ // False False
//  dBgS_RoofChk* False
// 	 dBgS_RoofChk False
void RoofChk(dBgS_RoofChk*);
	/* 8007D830 */ // False False
//  dBgS_SplGrpChk* False
// 	 dBgS_SplGrpChk False
void SplGrpChk(dBgS_SplGrpChk*);
	/* 8007DAF8 */ // False False
//  dBgS_CaptPoly& False
// 	 dBgS_CaptPoly False
void CaptPoly(dBgS_CaptPoly&);
	/* 8007DF00 */ // False False
//  dBgS_SphChk* False
// 	 dBgS_SphChk False
//  void* False
// 	 void False
void SphChk(dBgS_SphChk*, void*);
	/* 8007DF28 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyGrpRoomInfId(cBgS_PolyInfo const&);
	/* 8007DF58 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGrpSoundId(cBgS_PolyInfo const&);
	/* 8007E02C */ // False False
//  int False
//  cBgS_PolyPassChk* False
// 	 cBgS_PolyPassChk False
void ChkPolyThrough(int, cBgS_PolyPassChk*);
	/* 8007E360 */ // False False
//  int False
//  cBgS_PolyPassChk* False
// 	 cBgS_PolyPassChk False
void ChkShdwDrawThrough(int, cBgS_PolyPassChk*);
	/* 8007E3D8 */ // False False
//  int False
//  cBgS_GrpPassChk* False
// 	 cBgS_GrpPassChk False
//  int False
void ChkGrpThrough(int, cBgS_GrpPassChk*, int);
	/* 8007E444 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void CallRideCallBack(fopAc_ac_c*, fopAc_ac_c*);
	/* 8007E474 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz& False
// 	 cXyz False
void CallArrowStickCallBack(fopAc_ac_c*, fopAc_ac_c*, cXyz&);
	/* 8007E4A4 */ // False False
void OffMoveFlag();
	/* 8007E4B4 */ // False False
void ChkMoveFlag() const;
};

struct cBgS_ShdwDraw {
};

struct cBgS_GndChk {
};

struct cBgS_LinChk {
};

struct cBgW {
	/* 8007933C */ // False False
~cBgW();
	/* 80079564 */ // False False
void CalcPlane();
	/* 800797BC */ // False False
void ClassifyPlane();
	/* 80079EEC */ // False False
void ChkMemoryError();
	/* 80079F38 */ // False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void Set(cBgD_t*, u32, f32 (* )[3][4]);
	/* 8007A658 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCheck(cBgS_LinChk*);
	/* 8007AB9C */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
	/* 8007B084 */ // False False
//  cBgS_ShdwDraw* False
// 	 cBgS_ShdwDraw False
void ShdwDraw(cBgS_ShdwDraw*);
	/* 8007B0E4 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGrpRoomIndex(cBgS_PolyInfo const&) const;
	/* 8007B164 */ // False False
void GetBnd() const;
	/* 8007B1B4 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void GetTriPnt(cBgS_PolyInfo const&, cXyz*, cXyz*, cXyz*) const;
	/* 8007B240 */ // False False
//  f32* False
// 	 f32 False
//  f32* False
// 	 f32 False
void GetTopUnder(f32*, f32*) const;
	/* 8007B270 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetTriPla(cBgS_PolyInfo const&) const;
	/* 8007B2B0 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGrpInf(cBgS_PolyInfo const&) const;
	/* 8007B948 */ // False False
void ChkNotReady() const;
	/* 8007B958 */ // False False
void ChkLock() const;
	/* 8007B964 */ // False False
void ChkMoveBg() const;
};

// 
// Forward References:
// 


// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
extern "C" void Set__6dBgWSvFP6cBgD_tUl();
// False False
extern "C" void CopyBackVtx__6dBgWSvFv();
// True False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
extern "C" void CrrPosWork__6dBgWSvFP4cXyziii();
// True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  void* False
// 	 void False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void CrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz();
// True False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
extern "C" void TransPosWork__6dBgWSvFP4cXyziii();
// True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  void* False
// 	 void False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void TransPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz();
// True False
//  void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  void* False
// 	 void False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void MatrixCrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz();
// True False
extern "C" void __dt__6dBgWSvFv();
extern "C" extern void* __vt__6dBgWSv[65 + 1 /* padding */];

// 
// External References:
// 

// False False
//  void* False
// 	 void False
//  u32 False
void* operator new[](u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  s16 False
extern "C" void SetOldShapeAngleY__9dBgW_BaseFs();
// False False
extern "C" void __dt__4cBgWFv();
// False False
extern "C" void CalcPlane__4cBgWFv();
// False False
extern "C" void ClassifyPlane__4cBgWFv();
// False False
extern "C" void ChkMemoryError__4cBgWFv();
// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCheck__4cBgWFP11cBgS_LinChk();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgWFP11cBgS_GndChk();
// False False
//  cBgS_ShdwDraw* False
// 	 cBgS_ShdwDraw False
extern "C" void ShdwDraw__4cBgWFP13cBgS_ShdwDraw();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGrpRoomIndex__4cBgWCFRC13cBgS_PolyInfo();
// False False
extern "C" void GetBnd__4cBgWCFv();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void GetTriPnt__4cBgWCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz();
// False False
//  f32* False
// 	 f32 False
//  f32* False
// 	 f32 False
extern "C" void GetTopUnder__4cBgWCFPfPf();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetTriPla__4cBgWCFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGrpInf__4cBgWCFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetExitId__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyColor__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetHorseNoEntry__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetSpecialCode__4dBgWFRC13cBgS_PolyInfo();
// False False
//  int False
extern "C" void GetSpecialCode__4dBgWFi();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetMagnetCode__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetMonkeyBarsCode__4dBgWFRC13cBgS_PolyInfo();
// False False
//  int False
extern "C" void GetPolyObjThrough__4dBgWFi();
// False False
//  int False
extern "C" void GetPolyCamThrough__4dBgWFi();
// False False
//  int False
extern "C" void GetPolyLinkThrough__4dBgWFi();
// False False
//  int False
extern "C" void GetPolyArrowThrough__4dBgWFi();
// False False
//  int False
extern "C" void GetPolyHSStick__4dBgWFi();
// False False
//  int False
extern "C" void GetPolyBoomerangThrough__4dBgWFi();
// False False
//  int False
extern "C" void GetPolyRopeThrough__4dBgWFi();
// False False
//  int False
extern "C" void GetPolyBombThrough__4dBgWFi();
// False False
//  int False
extern "C" void GetShdwThrough__4dBgWFi();
// False False
//  int False
extern "C" void GetUnderwaterRoofCode__4dBgWFi();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetLinkNo__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetWallCode__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyAtt0__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyAtt1__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGroundCode__4dBgWFRC13cBgS_PolyInfo();
// False False
//  int False
extern "C" void GetIronBallThrough__4dBgWFi();
// False False
//  int False
extern "C" void GetAttackThrough__4dBgWFi();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetCamMoveBG__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomCamId__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomPathId__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomPathPntNo__4dBgWFRC13cBgS_PolyInfo();
// False False
extern "C" void ChkNotReady__4cBgWCFv();
// False False
extern "C" void ChkLock__4cBgWCFv();
// False False
extern "C" void ChkMoveBg__4cBgWCFv();
// False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
extern "C" void WallCorrect__4dBgWFP9dBgS_Acch();
// False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
extern "C" void WallCorrectSort__4dBgWFP9dBgS_Acch();
// False False
//  dBgS_RoofChk* False
// 	 dBgS_RoofChk False
extern "C" void RoofChk__4dBgWFP12dBgS_RoofChk();
// False False
//  dBgS_SplGrpChk* False
// 	 dBgS_SplGrpChk False
extern "C" void SplGrpChk__4dBgWFP14dBgS_SplGrpChk();
// False False
//  dBgS_CaptPoly& False
// 	 dBgS_CaptPoly False
extern "C" void CaptPoly__4dBgWFR13dBgS_CaptPoly();
// False False
//  dBgS_SphChk* False
// 	 dBgS_SphChk False
//  void* False
// 	 void False
extern "C" void SphChk__4dBgWFP11dBgS_SphChkPv();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyGrpRoomInfId__4dBgWFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGrpSoundId__4dBgWFRC13cBgS_PolyInfo();
// False False
//  int False
//  cBgS_PolyPassChk* False
// 	 cBgS_PolyPassChk False
extern "C" void ChkPolyThrough__4dBgWFiP16cBgS_PolyPassChk();
// False False
//  int False
//  cBgS_PolyPassChk* False
// 	 cBgS_PolyPassChk False
extern "C" void ChkShdwDrawThrough__4dBgWFiP16cBgS_PolyPassChk();
// False False
//  int False
//  cBgS_GrpPassChk* False
// 	 cBgS_GrpPassChk False
//  int False
extern "C" void ChkGrpThrough__4dBgWFiP15cBgS_GrpPassChki();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void CallRideCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz& False
// 	 cXyz False
extern "C" void CallArrowStickCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_cR4cXyz();
// False False
extern "C" void OffMoveFlag__4dBgWFv();
// False False
extern "C" void ChkMoveFlag__4dBgWCFv();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nwa__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _restgpr_27();
extern "C" extern void* __vt__4dBgW[65];
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];

// 
// Declarations:
// 

/* 80082F98-80083020 0088+00 s=0 e=0 z=2  None .text      Set__6dBgWSvFP6cBgD_tUl                                      */
//	80082FBC: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
//	80082FF4: 802CECC4 (__nwa__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
asm void dBgWSv::Set(cBgD_t* param_0, u32 param_1) {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/Set__6dBgWSvFP6cBgD_tUl.s"
}
#pragma pop


/* 80083020-8008308C 006C+00 s=0 e=0 z=3  None .text      CopyBackVtx__6dBgWSvFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dBgWSv::CopyBackVtx() {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/CopyBackVtx__6dBgWSvFv.s"
}
#pragma pop


/* 8008308C-80083244 01B8+00 s=1 e=0 z=0  None .text      CrrPosWork__6dBgWSvFP4cXyziii                                */
//	80083104: 80451180 (G_CM3D_F_ABS_MIN)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
asm void dBgWSv::CrrPosWork(cXyz* param_0, int param_1, int param_2, int param_3) {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/CrrPosWork__6dBgWSvFP4cXyziii.s"
}
#pragma pop


/* 80083244-80083300 00BC+00 s=1 e=0 z=0  None .text      CrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz     */
//	80083254: 803621D4 (_savegpr_27)
//	800832A4: 8008308C (CrrPosWork__6dBgWSvFP4cXyziii)
//	800832C4: 8008308C (CrrPosWork__6dBgWSvFP4cXyziii)
//	800832E4: 8008308C (CrrPosWork__6dBgWSvFP4cXyziii)
//	800832EC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  void* False
// 	 void False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
asm void dBgWSv::CrrPos(cBgS_PolyInfo const& param_0, void* param_1, bool param_2, cXyz* param_3, csXyz* param_4, csXyz* param_5) {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/CrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452758-8045275C 0004+00 s=1 e=0 z=0  None .sdata2    @3807                                                        */
SECTION_SDATA2 static u8 lit_3807[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 8045275C-80452760 0004+00 s=1 e=0 z=0  None .sdata2    @3808                                                        */
SECTION_SDATA2 static f32 lit_3808 = 1.0f;

/* 80083300-8008351C 021C+00 s=1 e=0 z=0  None .text      TransPosWork__6dBgWSvFP4cXyziii                              */
//	80083378: 80451180 (G_CM3D_F_ABS_MIN)
//	8008340C: 80452758 (lit_3807)
//	80083418: 8045275C (lit_3808)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
asm void dBgWSv::TransPosWork(cXyz* param_0, int param_1, int param_2, int param_3) {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/TransPosWork__6dBgWSvFP4cXyziii.s"
}
#pragma pop


/* 8008351C-800835D8 00BC+00 s=1 e=0 z=0  None .text      TransPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz   */
//	8008352C: 803621D4 (_savegpr_27)
//	8008357C: 80083300 (TransPosWork__6dBgWSvFP4cXyziii)
//	8008359C: 80083300 (TransPosWork__6dBgWSvFP4cXyziii)
//	800835BC: 80083300 (TransPosWork__6dBgWSvFP4cXyziii)
//	800835C4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  void* False
// 	 void False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
asm void dBgWSv::TransPos(cBgS_PolyInfo const& param_0, void* param_1, bool param_2, cXyz* param_3, csXyz* param_4, csXyz* param_5) {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/TransPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop


/* 800835D8-800835DC 0004+00 s=1 e=0 z=0  None .text      MatrixCrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz */
// True False
//  void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  void* False
// 	 void False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgWSv::MatrixCrrPos(cBgS_PolyInfo const& param_0, void* param_1, bool param_2, cXyz* param_3, csXyz* param_4, csXyz* param_5) {
	/* empty function */
}


/* ############################################################################################## */
/* 803ABEB8-803ABFC0 0104+04 s=1 e=0 z=2  None .data      __vt__6dBgWSv                                                */
SECTION_DATA void* __vt__6dBgWSv[65 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__6dBgWSvFv,
	(void*)ChkMemoryError__4cBgWFv,
	(void*)ChkNotReady__4cBgWCFv,
	(void*)ChkLock__4cBgWCFv,
	(void*)ChkMoveBg__4cBgWCFv,
	(void*)ChkMoveFlag__4dBgWCFv,
	(void*)GetTriPla__4cBgWCFRC13cBgS_PolyInfo,
	(void*)GetTriPnt__4cBgWCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz,
	(void*)GetBnd__4cBgWCFv,
	(void*)GetGrpInf__4cBgWCFRC13cBgS_PolyInfo,
	(void*)OffMoveFlag__4dBgWFv,
	(void*)GetTopUnder__4cBgWCFPfPf,
	(void*)SetOldShapeAngleY__9dBgW_BaseFs,
	(void*)LineCheck__4cBgWFP11cBgS_LinChk,
	(void*)GroundCross__4cBgWFP11cBgS_GndChk,
	(void*)ShdwDraw__4cBgWFP13cBgS_ShdwDraw,
	(void*)CaptPoly__4dBgWFR13dBgS_CaptPoly,
	(void*)WallCorrect__4dBgWFP9dBgS_Acch,
	(void*)WallCorrectSort__4dBgWFP9dBgS_Acch,
	(void*)RoofChk__4dBgWFP12dBgS_RoofChk,
	(void*)SplGrpChk__4dBgWFP14dBgS_SplGrpChk,
	(void*)SphChk__4dBgWFP11dBgS_SphChkPv,
	(void*)GetGrpRoomIndex__4cBgWCFRC13cBgS_PolyInfo,
	(void*)GetExitId__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetPolyColor__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetHorseNoEntry__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetSpecialCode__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetSpecialCode__4dBgWFi,
	(void*)GetMagnetCode__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetPolyObjThrough__4dBgWFi,
	(void*)GetPolyCamThrough__4dBgWFi,
	(void*)GetPolyLinkThrough__4dBgWFi,
	(void*)GetPolyArrowThrough__4dBgWFi,
	(void*)GetPolyHSStick__4dBgWFi,
	(void*)GetPolyBoomerangThrough__4dBgWFi,
	(void*)GetPolyRopeThrough__4dBgWFi,
	(void*)GetPolyBombThrough__4dBgWFi,
	(void*)GetShdwThrough__4dBgWFi,
	(void*)GetUnderwaterRoofCode__4dBgWFi,
	(void*)GetMonkeyBarsCode__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetLinkNo__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetWallCode__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetPolyAtt0__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetPolyAtt1__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetGroundCode__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetIronBallThrough__4dBgWFi,
	(void*)GetAttackThrough__4dBgWFi,
	(void*)GetCamMoveBG__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetRoomCamId__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetRoomPathId__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetRoomPathPntNo__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetPolyGrpRoomInfId__4dBgWFRC13cBgS_PolyInfo,
	(void*)GetGrpSoundId__4dBgWFRC13cBgS_PolyInfo,
	(void*)CrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
	(void*)TransPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
	(void*)MatrixCrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
	(void*)CallRideCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_c,
	(void*)CallArrowStickCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_cR4cXyz,
	(void*)CalcPlane__4cBgWFv,
	(void*)ClassifyPlane__4cBgWFv,
	(void*)ChkPolyThrough__4dBgWFiP16cBgS_PolyPassChk,
	(void*)ChkShdwDrawThrough__4dBgWFiP16cBgS_PolyPassChk,
	(void*)ChkGrpThrough__4dBgWFiP15cBgS_GrpPassChki,
	/* padding */
	NULL,
};

/* 800835DC-8008364C 0070+00 s=1 e=0 z=0  None .text      __dt__6dBgWSvFv                                              */
//	800835FC: 803ABEB8 (__vt__6dBgWSv)
//	80083600: 803ABEB8 (__vt__6dBgWSv)
//	8008360C: 803ABA80 (__vt__4dBgW)
//	80083610: 803ABA80 (__vt__4dBgW)
//	8008361C: 8007933C (__dt__4cBgWFv)
//	8008362C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgWSv::~dBgWSv() {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/__dt__6dBgWSvFv.s"
}
#pragma pop


