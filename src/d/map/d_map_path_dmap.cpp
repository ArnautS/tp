//
// Generated By: dol2asm
// Translation Unit: d/map/d_map_path_dmap
//

#include "d/map/d_map_path_dmap.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct stage_tgsc_data_class {};

struct renderingPlusDoor_c {
    /* 8002B0B4 */ ~renderingPlusDoor_c();
    /* 80040518 */ void afterDrawPath();
    /* 80040574 */ void drawDoor1();
    /* 800405B8 */ void drawDoor2();
    /* 800405FC */ void drawDoorCommon(stage_tgsc_data_class const*, int, bool);
    /* 80040710 */ void checkDispDoorS(int, int, f32);
    /* 80040838 */ void drawNormalDoorS(stage_tgsc_data_class const*, int, int, bool);
    /* 8004145C */ void beforeDrawPath();
};

struct Vec {};

struct dTres_c {
    struct data_s {};

    struct typeGroupData_c {};

    /* 8009C360 */ void getFirstData(u8);
    /* 8009C3B4 */ void getNextData(dTres_c::typeGroupData_c const*);
    /* 8009C39C */ void getNextData(dTres_c::typeGroupData_c*);
};

struct renderingPlusDoorAndCursor_c {
    /* 8002B008 */ ~renderingPlusDoorAndCursor_c();
    /* 800402FC */ void afterDrawPath();
    /* 80040A94 */ void getFirstData(u8);
    /* 80040AB8 */ void getNextData(dTres_c::typeGroupData_c*);
    /* 80040ADC */ void getIconPosition(dTres_c::typeGroupData_c*) const;
    /* 80040B00 */ void drawTreasure();
    /* 80040E84 */ void drawTreasureAfterPlayer();
    /* 80041208 */ void drawIconSingle(Vec const&, f32, f32);
    /* 800412C0 */ void drawCursor(Vec const&, s16, int, f32);
};

struct dDrawPath_c {
    struct room_class {};

    struct group_class {};

    struct line_class {};

    struct poly_class {};

    /* 8002ABF0 */ bool isDrawType(int);
    /* 8002AD84 */ void getLineColor(int, int);
    /* 8003CA40 */ void rendering(dDrawPath_c::poly_class const*);
    /* 8003CC24 */ void rendering(dDrawPath_c::room_class const*);
    /* 8003C94C */ void rendering(dDrawPath_c::line_class const*);
    /* 8003CCC4 */ void drawPath();
};

struct renderingDAmap_c {
    /* 8002B150 */ ~renderingDAmap_c();
    /* 8003FCA4 */ void calcFloorNoForObjectByMapPathRend(f32, int) const;
    /* 8003FCC8 */ void init(u8*, u16, u16, u16, u16);
    /* 8003FD08 */ void entry(f32, f32, f32, int, s8);
    /* 8003FD9C */ void isSwitch(dDrawPath_c::group_class const*);
    /* 8003FE18 */ void draw();
    /* 8003FE4C */ void getBackColor() const;
    /* 8003FE54 */ void isRenderingFloor(int);
    /* 8003FE6C */ void setSingleRoomSetting();
    /* 8003FE70 */ void isDrawRoom(int, int) const;
    /* 8003FF14 */ void preDrawPath();
    /* 8003FFC4 */ void postDrawPath();
    /* 8003FFEC */ void getRoomNoSingle();
    /* 8003FFF4 */ void getFirstDrawRoomNo();
    /* 80040094 */ void getNextDrawRoomNo(int);
    /* 80040134 */ void getFirstRoomPointer();
    /* 800401E8 */ void getNextRoomPointer();
    /* 800402C0 */ void isDrawPath();
    /* 800402E0 */ bool getFirstDrawLayerNo();
    /* 800402E8 */ void getNextDrawLayerNo(int);
    /* 800409B4 */ void isDrawRoomIcon(int, int) const;
    /* 800409E0 */ void isDrawIconSingle(dTres_c::data_s const*, int, int, bool, bool,
                                         Vec const*) const;
    /* 80040AE4 */ void getIconGroupNumber(u8) const;
};

struct mDoMtx_stack_c {
    /* 8000CE38 */ void scaleM(f32, f32, f32);
};

struct dSv_memBit_c {
    /* 80034934 */ void isDungeonItem(int) const;
};

struct dSv_info_c {
    /* 80035360 */ void isSwitch(int, int) const;
};

struct dStage_FileList2_dt_c {};

struct dRenderingMap_c {
    /* 8003CDAC */ void renderingMap();
};

struct dRenderingFDAmap_c {
    /* 8003CE78 */ void setTevSettingNonTextureDirectColor() const;
    /* 8003CF40 */ void setTevSettingIntensityTextureToCI() const;
    /* 8003D188 */ void preRenderingMap();
    /* 8003D320 */ void postRenderingMap();
    /* 8003D68C */ void getDecoLineColor(int, int);
    /* 8003D6B8 */ void getDecorationLineWidth(int);
};

struct dMpath_n {
    struct dTexObjAggregate_c {
        /* 8003C85C */ void create();
        /* 8003C8F4 */ void remove();
    };
};

struct dMpath_c {
    /* 8003F758 */ void isExistMapPathData();
    /* 8003F760 */ void getTopBottomFloorNo(s8*, s8*);
    /* 8003F7E8 */ void createWork();
    /* 8003FA40 */ void setPointer(s8, void*, int);
    /* 8003F810 */ void setPointer(dDrawPath_c::room_class*, s8*, s8*);
    /* 8003FB70 */ void create();
    /* 8003FBD0 */ void reset();
    /* 8003FC70 */ void remove();
};

struct dMapInfo_n {
    /* 8003ECA0 */ void chkGetCompass();
    /* 8003ECD8 */ void chkGetMap();
    /* 8003ED10 */ void isVisitedRoom(int);
    /* 8003ED60 */ void correctionOriginPos(s8, Vec*);
    /* 8003EDC0 */ void offsetPlus(dStage_FileList2_dt_c const*, Vec*);
    /* 8003EDEC */ void rotAngle(dStage_FileList2_dt_c const*, Vec*);
    /* 8003EE5C */ void getMapPlayerPos();
    /* 8003EF20 */ void getMapPlayerAngleY();
    /* 8003EF70 */ void getConstRestartIconPointer();
    /* 8003F02C */ void getMapRestartPos();
    /* 8003F0F8 */ void getMapRestartAngleY();
    /* 8003F19C */ void getRoomCenter(int, f32*, f32*);
    /* 8003F1F4 */ void getRoomMinMaxXZ(int, f32*, f32*, f32*, f32*);
    /* 8003F24C */ void getFloorParameter(f32, s8*, f32*, f32*, f32*, f32*);
};

struct dMapInfo_c {
    /* 8003F40C */ void calcFloorNo(f32, bool, int);
    /* 8003F570 */ void calcNowStayFloorNo(f32, bool);
    /* 8003F6C8 */ void move(int, f32);
    /* 8003F6FC */ void init();
    /* 8003F714 */ void reset();
    /* 8003F734 */ void create();
    /* 8003F754 */ void remove();
};

struct dDlst_base_c {};

struct dDlst_list_c {
    /* 80056794 */ void set(dDlst_base_c**&, dDlst_base_c**&, dDlst_base_c*);
};

//
// Forward References:
//

extern "C" void chkGetCompass__10dMapInfo_nFv();
extern "C" void chkGetMap__10dMapInfo_nFv();
extern "C" void isVisitedRoom__10dMapInfo_nFi();
extern "C" void correctionOriginPos__10dMapInfo_nFScP3Vec();
extern "C" void offsetPlus__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec();
extern "C" void rotAngle__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec();
extern "C" void getMapPlayerPos__10dMapInfo_nFv();
extern "C" void getMapPlayerAngleY__10dMapInfo_nFv();
extern "C" void getConstRestartIconPointer__10dMapInfo_nFv();
extern "C" void getMapRestartPos__10dMapInfo_nFv();
extern "C" void getMapRestartAngleY__10dMapInfo_nFv();
extern "C" void getRoomCenter__10dMapInfo_nFiPfPf();
extern "C" void getRoomMinMaxXZ__10dMapInfo_nFiPfPfPfPf();
extern "C" void getFloorParameter__10dMapInfo_nFfPScPfPfPfPf();
extern "C" void calcFloorNo__10dMapInfo_cFfbi();
extern "C" void calcNowStayFloorNo__10dMapInfo_cFfb();
extern "C" void move__10dMapInfo_cFif();
extern "C" void init__10dMapInfo_cFv();
extern "C" void reset__10dMapInfo_cFv();
extern "C" void create__10dMapInfo_cFv();
extern "C" void remove__10dMapInfo_cFv();
extern "C" void isExistMapPathData__8dMpath_cFv();
extern "C" void getTopBottomFloorNo__8dMpath_cFPScPSc();
extern "C" void createWork__8dMpath_cFv();
extern "C" void setPointer__8dMpath_cFPQ211dDrawPath_c10room_classPScPSc();
extern "C" void setPointer__8dMpath_cFScPvi();
extern "C" void create__8dMpath_cFv();
extern "C" void reset__8dMpath_cFv();
extern "C" void remove__8dMpath_cFv();
extern "C" void calcFloorNoForObjectByMapPathRend__16renderingDAmap_cCFfi();
extern "C" void init__16renderingDAmap_cFPUcUsUsUsUs();
extern "C" void entry__16renderingDAmap_cFfffiSc();
extern "C" void isSwitch__16renderingDAmap_cFPCQ211dDrawPath_c11group_class();
extern "C" void draw__16renderingDAmap_cFv();
extern "C" void getBackColor__16renderingDAmap_cCFv();
extern "C" void isRenderingFloor__16renderingDAmap_cFi();
extern "C" void setSingleRoomSetting__16renderingDAmap_cFv();
extern "C" void isDrawRoom__16renderingDAmap_cCFii();
extern "C" void preDrawPath__16renderingDAmap_cFv();
extern "C" void postDrawPath__16renderingDAmap_cFv();
extern "C" void getRoomNoSingle__16renderingDAmap_cFv();
extern "C" void getFirstDrawRoomNo__16renderingDAmap_cFv();
extern "C" void getNextDrawRoomNo__16renderingDAmap_cFi();
extern "C" void getFirstRoomPointer__16renderingDAmap_cFv();
extern "C" void getNextRoomPointer__16renderingDAmap_cFv();
extern "C" void isDrawPath__16renderingDAmap_cFv();
extern "C" bool getFirstDrawLayerNo__16renderingDAmap_cFv();
extern "C" void getNextDrawLayerNo__16renderingDAmap_cFi();
extern "C" void afterDrawPath__28renderingPlusDoorAndCursor_cFv();
extern "C" void afterDrawPath__19renderingPlusDoor_cFv();
extern "C" void drawDoor1__19renderingPlusDoor_cFv();
extern "C" void drawDoor2__19renderingPlusDoor_cFv();
extern "C" void drawDoorCommon__19renderingPlusDoor_cFPC21stage_tgsc_data_classib();
extern "C" void checkDispDoorS__19renderingPlusDoor_cFiif();
extern "C" void drawNormalDoorS__19renderingPlusDoor_cFPC21stage_tgsc_data_classiib();
extern "C" void isDrawRoomIcon__16renderingDAmap_cCFii();
extern "C" void isDrawIconSingle__16renderingDAmap_cCFPCQ27dTres_c6data_siibbPC3Vec();
extern "C" void getFirstData__28renderingPlusDoorAndCursor_cFUc();
extern "C" void getNextData__28renderingPlusDoorAndCursor_cFPQ27dTres_c15typeGroupData_c();
extern "C" void getIconPosition__28renderingPlusDoorAndCursor_cCFPQ27dTres_c15typeGroupData_c();
extern "C" void getIconGroupNumber__16renderingDAmap_cCFUc();
extern "C" void drawTreasure__28renderingPlusDoorAndCursor_cFv();
extern "C" void drawTreasureAfterPlayer__28renderingPlusDoorAndCursor_cFv();
extern "C" void drawIconSingle__28renderingPlusDoorAndCursor_cFRC3Vecff();
extern "C" void drawCursor__28renderingPlusDoorAndCursor_cFRC3Vecsif();
extern "C" void beforeDrawPath__19renderingPlusDoor_cFv();
extern "C" void __sinit_d_map_path_dmap_cpp();
extern "C" extern void* __vt__19renderingPlusDoor_c[41];
extern "C" extern void* __vt__28renderingPlusDoorAndCursor_c[47];
extern "C" extern void* __vt__16renderingDAmap_c[38];
extern "C" extern u32 mNextRoomNo__10dMapInfo_c;
extern "C" extern u8 data_80450E58[4];
extern "C" extern u8 data_80450E60[4];
extern "C" extern u8 mLayerList__8dMpath_c[4];
extern "C" extern u8 mMinX__8dMpath_c[4];
extern "C" extern u8 mMaxX__8dMpath_c[4];
extern "C" extern u8 mMinZ__8dMpath_c[4];
extern "C" extern u8 mMaxZ__8dMpath_c[4];
extern "C" extern f32 mAllCenterX__8dMpath_c;
extern "C" extern f32 mAllCenterZ__8dMpath_c;
extern "C" extern f32 mAllSizeX__8dMpath_c;
extern "C" extern f32 mAllSizeZ__8dMpath_c;

//
// External References:
//

void mDoMtx_YrotS(f32 (*)[4], s16);
void mDoMtx_YrotM(f32 (*)[4], s16);
void mDoMtx_ZrotM(f32 (*)[4], s16);
void mDoMtx_lookAt(f32 (*)[4], Vec const*, Vec const*, Vec const*, s16);
void dStage_GetKeepDoorInfo();
void dStage_GetRoomKeepDoorInfo();
void dComIfGs_isVisitedRoom(int);
void* operator new(u32);

extern "C" void mDoMtx_YrotS__FPA4_fs();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_ZrotM__FPA4_fs();
extern "C" void mDoMtx_lookAt__FPA4_fPC3VecPC3VecPC3Vecs();
extern "C" void scaleM__14mDoMtx_stack_cFfff();
extern "C" void dStage_GetKeepDoorInfo__Fv();
extern "C" void dStage_GetRoomKeepDoorInfo__Fv();
extern "C" bool isDrawType__11dDrawPath_cFi();
extern "C" void getLineColor__11dDrawPath_cFii();
extern "C" void __dt__28renderingPlusDoorAndCursor_cFv();
extern "C" void __dt__19renderingPlusDoor_cFv();
extern "C" void __dt__16renderingDAmap_cFv();
extern "C" void dComIfGs_isVisitedRoom__Fi();
extern "C" void isDungeonItem__12dSv_memBit_cCFi();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void create__Q28dMpath_n18dTexObjAggregate_cFv();
extern "C" void remove__Q28dMpath_n18dTexObjAggregate_cFv();
extern "C" void rendering__11dDrawPath_cFPCQ211dDrawPath_c10line_class();
extern "C" void rendering__11dDrawPath_cFPCQ211dDrawPath_c10poly_class();
extern "C" void rendering__11dDrawPath_cFPCQ211dDrawPath_c10room_class();
extern "C" void drawPath__11dDrawPath_cFv();
extern "C" void renderingMap__15dRenderingMap_cFv();
extern "C" void setTevSettingNonTextureDirectColor__18dRenderingFDAmap_cCFv();
extern "C" void setTevSettingIntensityTextureToCI__18dRenderingFDAmap_cCFv();
extern "C" void preRenderingMap__18dRenderingFDAmap_cFv();
extern "C" void postRenderingMap__18dRenderingFDAmap_cFv();
extern "C" void getDecoLineColor__18dRenderingFDAmap_cFii();
extern "C" void getDecorationLineWidth__18dRenderingFDAmap_cFi();
extern "C" void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c();
extern "C" void getFirstData__7dTres_cFUc();
extern "C" void getNextData__7dTres_cFPQ27dTres_c15typeGroupData_c();
extern "C" void getNextData__7dTres_cFPCQ27dTres_c15typeGroupData_c();
extern "C" void* __nw__FUl();
extern "C" void PSMTXTrans();
extern "C" void PSMTXMultVec();
extern "C" void PSMTXMultVecArray();
extern "C" void GXSetVtxDesc();
extern "C" void GXClearVtxDesc();
extern "C" void GXSetVtxAttrFmt();
extern "C" void GXSetArray();
extern "C" void GXSetMisc();
extern "C" void GXBegin();
extern "C" void GXLoadTexObj();
extern "C" void GXInvalidateTexAll();
extern "C" void GXSetTevColor();
extern "C" void GXLoadPosMtxImm();
extern "C" void _savegpr_20();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_20();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void floor();
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mStatus__20dStage_roomControl_c[65792];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 m_texObjAgg__8dMpath_n[28];
extern "C" extern u8 mTypeGroupListAll__7dTres_c[204 + 4 /* padding */];
extern "C" extern u8 g_fmapHIO[1188];
extern "C" extern u32 __float_max;
extern "C" extern u8 struct_80450D64[4];

//
// Declarations:
//

/* 8003ECA0-8003ECD8 0038+00 s=0 e=3 z=0  None .text      chkGetCompass__10dMapInfo_nFv */
//	8003ECAC: 804061C0 (g_dComIfG_gameInfo)
//	8003ECB0: 804061C0 (g_dComIfG_gameInfo)
//	8003ECBC: 80034934 (isDungeonItem__12dSv_memBit_cCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::chkGetCompass() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/chkGetCompass__10dMapInfo_nFv.s"
}
#pragma pop

/* 8003ECD8-8003ED10 0038+00 s=0 e=4 z=0  None .text      chkGetMap__10dMapInfo_nFv */
//	8003ECE4: 804061C0 (g_dComIfG_gameInfo)
//	8003ECE8: 804061C0 (g_dComIfG_gameInfo)
//	8003ECF4: 80034934 (isDungeonItem__12dSv_memBit_cCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::chkGetMap() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/chkGetMap__10dMapInfo_nFv.s"
}
#pragma pop

/* 8003ED10-8003ED60 0050+00 s=2 e=7 z=0  None .text      isVisitedRoom__10dMapInfo_nFi */
//	8003ED24: 8042FC60 (g_fmapHIO)
//	8003ED28: 8042FC60 (g_fmapHIO)
//	8003ED38: 8002FC98 (dComIfGs_isVisitedRoom__Fi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::isVisitedRoom(int param_0) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/isVisitedRoom__10dMapInfo_nFi.s"
}
#pragma pop

/* 8003ED60-8003EDC0 0060+00 s=1 e=2 z=0  None .text      correctionOriginPos__10dMapInfo_nFScP3Vec
 */
//	8003ED78: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003ED7C: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003ED98: 8003EDEC (rotAngle__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec)
//	8003EDA4: 8003EDC0 (offsetPlus__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::correctionOriginPos(s8 param_0, Vec* param_1) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/correctionOriginPos__10dMapInfo_nFScP3Vec.s"
}
#pragma pop

/* 8003EDC0-8003EDEC 002C+00 s=3 e=0 z=0  None .text
 * offsetPlus__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::offsetPlus(dStage_FileList2_dt_c const* param_0, Vec* param_1) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/offsetPlus__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec.s"
}
#pragma pop

/* 8003EDEC-8003EE5C 0070+00 s=3 e=0 z=0  None .text
 * rotAngle__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec        */
//	8003EE10: 803DD470 (now__14mDoMtx_stack_c)
//	8003EE14: 803DD470 (now__14mDoMtx_stack_c)
//	8003EE18: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8003EE1C: 803DD470 (now__14mDoMtx_stack_c)
//	8003EE20: 803DD470 (now__14mDoMtx_stack_c)
//	8003EE2C: 80346D6C (PSMTXMultVec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::rotAngle(dStage_FileList2_dt_c const* param_0, Vec* param_1) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/rotAngle__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451E28-80451E2C 0004+00 s=6 e=0 z=0  None .sdata2    @3796 */
SECTION_SDATA2 static u8 lit_3796[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 8003EE5C-8003EF20 00C4+00 s=1 e=6 z=0  None .text      getMapPlayerPos__10dMapInfo_nFv */
//	8003EE74: 804061C0 (g_dComIfG_gameInfo)
//	8003EE78: 804061C0 (g_dComIfG_gameInfo)
//	8003EEA4: 80451E28 (lit_3796)
//	8003EEB4: 80450D64 (struct_80450D64)
//	8003EEBC: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003EEC0: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003EEE0: 8003EDEC (rotAngle__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec)
//	8003EEEC: 8003EDC0 (offsetPlus__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::getMapPlayerPos() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getMapPlayerPos__10dMapInfo_nFv.s"
}
#pragma pop

/* 8003EF20-8003EF70 0050+00 s=1 e=1 z=0  None .text      getMapPlayerAngleY__10dMapInfo_nFv */
//	8003EF20: 80450D64 (struct_80450D64)
//	8003EF2C: 804061C0 (g_dComIfG_gameInfo)
//	8003EF30: 804061C0 (g_dComIfG_gameInfo)
//	8003EF44: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003EF48: 803F6094 (mStatus__20dStage_roomControl_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::getMapPlayerAngleY() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getMapPlayerAngleY__10dMapInfo_nFv.s"
}
#pragma pop

/* 8003EF70-8003F02C 00BC+00 s=2 e=0 z=0  None .text      getConstRestartIconPointer__10dMapInfo_nFv
 */
//	8003EF80: 803621D8 (_savegpr_28)
//	8003EF84: 80425438 (mTypeGroupListAll__7dTres_c)
//	8003EF88: 80425438 (mTypeGroupListAll__7dTres_c)
//	8003EF94: 8009C360 (getFirstData__7dTres_cFUc)
//	8003EFA0: 804061C0 (g_dComIfG_gameInfo)
//	8003EFA4: 804061C0 (g_dComIfG_gameInfo)
//	8003EFDC: 804061C0 (g_dComIfG_gameInfo)
//	8003EFE0: 804061C0 (g_dComIfG_gameInfo)
//	8003EFE4: 80035360 (isSwitch__10dSv_info_cCFii)
//	8003EFF4: 8009C3B4 (getNextData__7dTres_cFPCQ27dTres_c15typeGroupData_c)
//	8003F018: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::getConstRestartIconPointer() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getConstRestartIconPointer__10dMapInfo_nFv.s"
}
#pragma pop

/* 8003F02C-8003F0F8 00CC+00 s=1 e=2 z=0  None .text      getMapRestartPos__10dMapInfo_nFv */
//	8003F044: 8003EF70 (getConstRestartIconPointer__10dMapInfo_nFv)
//	8003F06C: 804061C0 (g_dComIfG_gameInfo)
//	8003F070: 804061C0 (g_dComIfG_gameInfo)
//	8003F08C: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003F090: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003F094: 804061C0 (g_dComIfG_gameInfo)
//	8003F098: 804061C0 (g_dComIfG_gameInfo)
//	8003F0B8: 8003EDEC (rotAngle__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec)
//	8003F0C4: 8003EDC0 (offsetPlus__10dMapInfo_nFPC21dStage_FileList2_dt_cP3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::getMapRestartPos() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getMapRestartPos__10dMapInfo_nFv.s"
}
#pragma pop

/* 8003F0F8-8003F19C 00A4+00 s=1 e=1 z=0  None .text      getMapRestartAngleY__10dMapInfo_nFv */
//	8003F108: 804061C0 (g_dComIfG_gameInfo)
//	8003F10C: 804061C0 (g_dComIfG_gameInfo)
//	8003F114: 8003EF70 (getConstRestartIconPointer__10dMapInfo_nFv)
//	8003F150: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003F154: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003F158: 804061C0 (g_dComIfG_gameInfo)
//	8003F15C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::getMapRestartAngleY() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getMapRestartAngleY__10dMapInfo_nFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451E2C-80451E30 0004+00 s=4 e=0 z=0  None .sdata2    @3887 */
SECTION_SDATA2 static f32 lit_3887 = 0.5f;

/* 8003F19C-8003F1F4 0058+00 s=0 e=1 z=0  None .text      getRoomCenter__10dMapInfo_nFiPfPf */
//	8003F19C: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003F1A0: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003F1B8: 80451E2C (lit_3887)
//	8003F1D8: 80451E2C (lit_3887)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::getRoomCenter(int param_0, f32* param_1, f32* param_2) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getRoomCenter__10dMapInfo_nFiPfPf.s"
}
#pragma pop

/* 8003F1F4-8003F24C 0058+00 s=1 e=2 z=0  None .text      getRoomMinMaxXZ__10dMapInfo_nFiPfPfPfPf */
//	8003F1F4: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003F1F8: 803F6094 (mStatus__20dStage_roomControl_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::getRoomMinMaxXZ(int param_0, f32* param_1, f32* param_2, f32* param_3,
                                     f32* param_4) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getRoomMinMaxXZ__10dMapInfo_nFiPfPfPfPf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451E30-80451E38 0008+00 s=1 e=0 z=0  None .sdata2    @3957 */
SECTION_SDATA2 static f64 lit_3957 = 4503601774854144.0 /* cast s32 to float */;

/* 8003F24C-8003F40C 01C0+00 s=2 e=0 z=0  None .text getFloorParameter__10dMapInfo_nFfPScPfPfPfPf
 */
//	8003F27C: 803621D0 (_savegpr_26)
//	8003F298: 804061C0 (g_dComIfG_gameInfo)
//	8003F29C: 804061C0 (g_dComIfG_gameInfo)
//	8003F2BC: 80451E30 (lit_3957)
//	8003F2F0: 80451E30 (lit_3957)
//	8003F32C: 80451E30 (lit_3957)
//	8003F354: 8036C0FC (floor)
//	8003F378: 80451E30 (lit_3957)
//	8003F3F8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_n::getFloorParameter(f32 param_0, s8* param_1, f32* param_2, f32* param_3,
                                       f32* param_4, f32* param_5) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getFloorParameter__10dMapInfo_nFfPScPfPfPfPf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450E58-80450E5C 0004+00 s=4 e=3 z=0  None .sbss      None */
u8 data_80450E58[4];

/* 80450E5C-80450E60 0004+00 s=4 e=0 z=0  None .sbss      mNowStayRoomNo__10dMapInfo_c */
static u8 mNowStayRoomNo__10dMapInfo_c[4];

/* 80450E60-80450E64 0004+00 s=4 e=3 z=0  None .sbss      None */
u8 data_80450E60[4];

/* 8003F40C-8003F570 0164+00 s=2 e=1 z=0  None .text      calcFloorNo__10dMapInfo_cFfbi */
//	8003F448: 8003F24C (getFloorParameter__10dMapInfo_nFfPScPfPfPfPf)
//	8003F468: 80450E5C (mNowStayRoomNo__10dMapInfo_c)
//	8003F474: 80450E60 (data_80450E60)
//	8003F480: 80450E58 (data_80450E58)
//	8003F4AC: 80451E2C (lit_3887)
//	8003F4F8: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003F4FC: 803F6094 (mStatus__20dStage_roomControl_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_c::calcFloorNo(f32 param_0, bool param_1, int param_2) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/calcFloorNo__10dMapInfo_cFfbi.s"
}
#pragma pop

/* 8003F570-8003F6C8 0158+00 s=1 e=1 z=0  None .text      calcNowStayFloorNo__10dMapInfo_cFfb */
//	8003F5A4: 8003F24C (getFloorParameter__10dMapInfo_nFfPScPfPfPfPf)
//	8003F5A8: 80450E60 (data_80450E60)
//	8003F5D0: 80450E58 (data_80450E58)
//	8003F60C: 80451E2C (lit_3887)
//	8003F640: 80450E5C (mNowStayRoomNo__10dMapInfo_c)
//	8003F654: 803F6094 (mStatus__20dStage_roomControl_c)
//	8003F658: 803F6094 (mStatus__20dStage_roomControl_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_c::calcNowStayFloorNo(f32 param_0, bool param_1) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/calcNowStayFloorNo__10dMapInfo_cFfb.s"
}
#pragma pop

/* 8003F6C8-8003F6FC 0034+00 s=0 e=1 z=0  None .text      move__10dMapInfo_cFif */
//	8003F6D4: 80450E5C (mNowStayRoomNo__10dMapInfo_c)
//	8003F6DC: 8003F570 (calcNowStayFloorNo__10dMapInfo_cFfb)
//	8003F6E0: 80450E58 (data_80450E58)
//	8003F6E8: 80450E60 (data_80450E60)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_c::move(int param_0, f32 param_1) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/move__10dMapInfo_cFif.s"
}
#pragma pop

/* 8003F6FC-8003F714 0018+00 s=2 e=0 z=0  None .text      init__10dMapInfo_cFv */
//	8003F700: 80450E58 (data_80450E58)
//	8003F704: 80450E60 (data_80450E60)
//	8003F70C: 80450E5C (mNowStayRoomNo__10dMapInfo_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_c::init() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/init__10dMapInfo_cFv.s"
}
#pragma pop

/* 8003F714-8003F734 0020+00 s=1 e=0 z=0  None .text      reset__10dMapInfo_cFv */
//	8003F720: 8003F6FC (init__10dMapInfo_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_c::reset() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/reset__10dMapInfo_cFv.s"
}
#pragma pop

/* 8003F734-8003F754 0020+00 s=1 e=0 z=0  None .text      create__10dMapInfo_cFv */
//	8003F740: 8003F6FC (init__10dMapInfo_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMapInfo_c::create() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/create__10dMapInfo_cFv.s"
}
#pragma pop

/* 8003F754-8003F758 0004+00 s=1 e=0 z=0  None .text      remove__10dMapInfo_cFv */
void dMapInfo_c::remove() {
    /* empty function */
}

/* ############################################################################################## */
/* 80450E64-80450E68 0004+00 s=5 e=1 z=0  None .sbss      mLayerList__8dMpath_c */
u8 mLayerList__8dMpath_c[4];

/* 80450E68-80450E6C 0004+00 s=3 e=1 z=0  None .sbss      mMinX__8dMpath_c */
u8 mMinX__8dMpath_c[4];

/* 80450E6C-80450E70 0004+00 s=3 e=1 z=0  None .sbss      mMaxX__8dMpath_c */
u8 mMaxX__8dMpath_c[4];

/* 80450E70-80450E74 0004+00 s=3 e=2 z=0  None .sbss      mMinZ__8dMpath_c */
u8 mMinZ__8dMpath_c[4];

/* 80450E74-80450E78 0004+00 s=3 e=1 z=0  None .sbss      mMaxZ__8dMpath_c */
u8 mMaxZ__8dMpath_c[4];

/* 80450E78-80450E7C 0004+00 s=1 e=2 z=0  None .sbss      mAllCenterX__8dMpath_c */
f32 mAllCenterX__8dMpath_c;

/* 80450E7C-80450E80 0004+00 s=1 e=2 z=0  None .sbss      mAllCenterZ__8dMpath_c */
f32 mAllCenterZ__8dMpath_c;

/* 80450E80-80450E84 0004+00 s=1 e=4 z=0  None .sbss      mAllSizeX__8dMpath_c */
f32 mAllSizeX__8dMpath_c;

/* 80450E84-80450E88 0004+00 s=1 e=4 z=0  None .sbss      mAllSizeZ__8dMpath_c */
f32 mAllSizeZ__8dMpath_c;

/* 80450E88-80450E90 0008+00 s=4 e=0 z=0  None .sbss      None */
static u8 data_80450E88[8];

/* 8003F758-8003F760 0008+00 s=2 e=1 z=0  None .text      isExistMapPathData__8dMpath_cFv */
//	8003F758: 80450E88 (data_80450E88)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMpath_c::isExistMapPathData() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/isExistMapPathData__8dMpath_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450630-80450634 0004+00 s=0 e=1 z=2  None .sdata     mNextRoomNo__10dMapInfo_c */
SECTION_SDATA u32 mNextRoomNo__10dMapInfo_c = 0xFFFFFFFF;

/* 80450634-80450638 0004+00 s=4 e=0 z=0  None .sdata     None */
SECTION_SDATA static u8 struct_80450634[4] = {
    /* 80450634 0001 data_80450634 None */
    0x7F,
    /* 80450635 0001 data_80450635 None */
    0x80,
    /* 80450636 0002 data_80450636 None */
    0x01,
    0x00,
};

/* 8003F760-8003F7E8 0088+00 s=0 e=1 z=0  None .text      getTopBottomFloorNo__8dMpath_cFPScPSc */
//	8003F77C: 8003F758 (isExistMapPathData__8dMpath_cFv)
//	8003F790: 80450635 (struct_80450634)
//	8003F7A0: 80450634 (struct_80450634)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMpath_c::getTopBottomFloorNo(s8* param_0, s8* param_1) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getTopBottomFloorNo__8dMpath_cFPScPSc.s"
}
#pragma pop

/* 8003F7E8-8003F810 0028+00 s=0 e=1 z=0  None .text      createWork__8dMpath_cFv */
//	8003F7F8: 802CEC4C (__nw__FUl)
//	8003F7FC: 80450E64 (mLayerList__8dMpath_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMpath_c::createWork() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/createWork__8dMpath_cFv.s"
}
#pragma pop

/* 8003F810-8003FA40 0230+00 s=1 e=1 z=0  None .text
 * setPointer__8dMpath_cFPQ211dDrawPath_c10room_classPScPSc     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMpath_c::setPointer(dDrawPath_c::room_class* param_0, s8* param_1, s8* param_2) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/setPointer__8dMpath_cFPQ211dDrawPath_c10room_classPScPSc.s"
}
#pragma pop

/* 8003FA40-8003FB70 0130+00 s=0 e=2 z=0  None .text      setPointer__8dMpath_cFScPvi */
//	8003FA50: 803621D8 (_savegpr_28)
//	8003FA6C: 8003FBD0 (reset__8dMpath_cFv)
//	8003FA74: 80450E88 (data_80450E88)
//	8003FA7C: 80450634 (struct_80450634)
//	8003FA80: 80450635 (struct_80450634)
//	8003FA84: 8003F810 (setPointer__8dMpath_cFPQ211dDrawPath_c10room_classPScPSc)
//	8003FA88: 80451E28 (lit_3796)
//	8003FAB0: 8003F1F4 (getRoomMinMaxXZ__10dMapInfo_nFiPfPfPfPf)
//	8003FAB8: 80450E68 (mMinX__8dMpath_c)
//	8003FAC4: 80450E68 (mMinX__8dMpath_c)
//	8003FACC: 80450E6C (mMaxX__8dMpath_c)
//	8003FAD8: 80450E6C (mMaxX__8dMpath_c)
//	8003FAE0: 80450E70 (mMinZ__8dMpath_c)
//	8003FAEC: 80450E70 (mMinZ__8dMpath_c)
//	8003FAF4: 80450E74 (mMaxZ__8dMpath_c)
//	8003FB00: 80450E74 (mMaxZ__8dMpath_c)
//	8003FB04: 80451E2C (lit_3887)
//	8003FB08: 80450E6C (mMaxX__8dMpath_c)
//	8003FB0C: 80450E68 (mMinX__8dMpath_c)
//	8003FB18: 80450E78 (mAllCenterX__8dMpath_c)
//	8003FB1C: 80450E74 (mMaxZ__8dMpath_c)
//	8003FB20: 80450E70 (mMinZ__8dMpath_c)
//	8003FB2C: 80450E7C (mAllCenterZ__8dMpath_c)
//	8003FB34: 80450E80 (mAllSizeX__8dMpath_c)
//	8003FB3C: 80450E84 (mAllSizeZ__8dMpath_c)
//	8003FB40: 80450E64 (mLayerList__8dMpath_c)
//	8003FB5C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMpath_c::setPointer(s8 param_0, void* param_1, int param_2) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/setPointer__8dMpath_cFScPvi.s"
}
#pragma pop

/* 8003FB70-8003FBD0 0060+00 s=0 e=1 z=0  None .text      create__8dMpath_cFv */
//	8003FB7C: 804061C0 (g_dComIfG_gameInfo)
//	8003FB80: 804061C0 (g_dComIfG_gameInfo)
//	8003FBA4: 8003FBD0 (reset__8dMpath_cFv)
//	8003FBAC: 80450E88 (data_80450E88)
//	8003FBB0: 80424684 (m_texObjAgg__8dMpath_n)
//	8003FBB4: 80424684 (m_texObjAgg__8dMpath_n)
//	8003FBB8: 8003C85C (create__Q28dMpath_n18dTexObjAggregate_cFv)
//	8003FBBC: 8003F734 (create__10dMapInfo_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMpath_c::create() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/create__8dMpath_cFv.s"
}
#pragma pop

/* 8003FBD0-8003FC70 00A0+00 s=2 e=0 z=0  None .text      reset__8dMpath_cFv */
//	8003FBDC: 80450636 (struct_80450634)
//	8003FC00: 80450E64 (mLayerList__8dMpath_c)
//	8003FC24: 80450AE8 (__float_max)
//	8003FC28: 80450AE8 (__float_max)
//	8003FC2C: 80450E68 (mMinX__8dMpath_c)
//	8003FC34: 80450E6C (mMaxX__8dMpath_c)
//	8003FC38: 80450E70 (mMinZ__8dMpath_c)
//	8003FC3C: 80450E74 (mMaxZ__8dMpath_c)
//	8003FC44: 80450634 (struct_80450634)
//	8003FC4C: 80450635 (struct_80450634)
//	8003FC54: 80450636 (struct_80450634)
//	8003FC58: 80450E88 (data_80450E88)
//	8003FC5C: 8003F714 (reset__10dMapInfo_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMpath_c::reset() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/reset__8dMpath_cFv.s"
}
#pragma pop

/* 8003FC70-8003FCA4 0034+00 s=0 e=1 z=0  None .text      remove__8dMpath_cFv */
//	8003FC80: 80450636 (struct_80450634)
//	8003FC84: 80424684 (m_texObjAgg__8dMpath_n)
//	8003FC88: 80424684 (m_texObjAgg__8dMpath_n)
//	8003FC8C: 8003C8F4 (remove__Q28dMpath_n18dTexObjAggregate_cFv)
//	8003FC90: 8003F754 (remove__10dMapInfo_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMpath_c::remove() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/remove__8dMpath_cFv.s"
}
#pragma pop

/* 8003FCA4-8003FCC8 0024+00 s=2 e=0 z=0  None .text
 * calcFloorNoForObjectByMapPathRend__16renderingDAmap_cCFfi    */
//	8003FCB4: 8003F40C (calcFloorNo__10dMapInfo_cFfbi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::calcFloorNoForObjectByMapPathRend(f32 param_0, int param_1) const {
    nofralloc
#include "asm/d/map/d_map_path_dmap/calcFloorNoForObjectByMapPathRend__16renderingDAmap_cCFfi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451E38-80451E40 0004+04 s=3 e=0 z=0  None .sdata2    @4202 */
SECTION_SDATA2 static f32 lit_4202[1 + 1 /* padding */] = {
    1.0f,
    /* padding */
    0.0f,
};

/* 8003FCC8-8003FD08 0040+00 s=0 e=2 z=0  None .text      init__16renderingDAmap_cFPUcUsUsUsUs */
//	8003FCE4: 80451E28 (lit_3796)
//	8003FCF0: 80451E38 (lit_4202)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::init(u8* param_0, u16 param_1, u16 param_2, u16 param_3, u16 param_4) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/init__16renderingDAmap_cFPUcUsUsUsUs.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451E40-80451E48 0008+00 s=2 e=0 z=0  None .sdata2    @4211 */
SECTION_SDATA2 static f64 lit_4211 = 4503599627370496.0 /* cast u32 to float */;

/* 8003FD08-8003FD9C 0094+00 s=0 e=2 z=0  None .text      entry__16renderingDAmap_cFfffiSc */
//	8003FD2C: 80451E40 (lit_4211)
//	8003FD74: 804061C0 (g_dComIfG_gameInfo)
//	8003FD78: 804061C0 (g_dComIfG_gameInfo)
//	8003FD88: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::entry(f32 param_0, f32 param_1, f32 param_2, int param_3, s8 param_4) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/entry__16renderingDAmap_cFfffiSc.s"
}
#pragma pop

/* 8003FD9C-8003FE18 007C+00 s=3 e=3 z=0  None .text
 * isSwitch__16renderingDAmap_cFPCQ211dDrawPath_c11group_class  */
//	8003FDCC: 804061C0 (g_dComIfG_gameInfo)
//	8003FDD0: 804061C0 (g_dComIfG_gameInfo)
//	8003FDDC: 80035360 (isSwitch__10dSv_info_cCFii)
//	8003FDEC: 804061C0 (g_dComIfG_gameInfo)
//	8003FDF0: 804061C0 (g_dComIfG_gameInfo)
//	8003FDFC: 80035360 (isSwitch__10dSv_info_cCFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::isSwitch(dDrawPath_c::group_class const* param_0) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/isSwitch__16renderingDAmap_cFPCQ211dDrawPath_c11group_class.s"
}
#pragma pop

/* 8003FE18-8003FE4C 0034+00 s=3 e=2 z=0  None .text      draw__16renderingDAmap_cFv */
//	8003FE2C: 8003CDAC (renderingMap__15dRenderingMap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::draw() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/draw__16renderingDAmap_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451E48-80451E4C 0004+00 s=1 e=0 z=0  None .sdata2    l_mapBaseColor$4239 */
SECTION_SDATA2 static u8 l_mapBaseColor[4] = {
    0x04,
    0x00,
    0x00,
    0x00,
};

/* 8003FE4C-8003FE54 0008+00 s=3 e=3 z=0  None .text      getBackColor__16renderingDAmap_cCFv */
//	8003FE4C: 80451E48 (l_mapBaseColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::getBackColor() const {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getBackColor__16renderingDAmap_cCFv.s"
}
#pragma pop

/* 8003FE54-8003FE6C 0018+00 s=3 e=3 z=0  None .text      isRenderingFloor__16renderingDAmap_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::isRenderingFloor(int param_0) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/isRenderingFloor__16renderingDAmap_cFi.s"
}
#pragma pop

/* 8003FE6C-8003FE70 0004+00 s=2 e=0 z=0  None .text      setSingleRoomSetting__16renderingDAmap_cFv
 */
void renderingDAmap_c::setSingleRoomSetting() {
    /* empty function */
}

/* 8003FE70-8003FF14 00A4+00 s=3 e=3 z=0  None .text      isDrawRoom__16renderingDAmap_cCFii */
//	8003FE80: 803621D8 (_savegpr_28)
//	8003FEE4: 8003ED10 (isVisitedRoom__10dMapInfo_nFi)
//	8003FF00: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::isDrawRoom(int param_0, int param_1) const {
    nofralloc
#include "asm/d/map/d_map_path_dmap/isDrawRoom__16renderingDAmap_cCFii.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451E4C-80451E50 0004+00 s=1 e=0 z=0  None .sdata2    @4264 */
SECTION_SDATA2 static f32 lit_4264 = -5000.0f;

/* 80451E50-80451E54 0004+00 s=1 e=0 z=0  None .sdata2    @4265 */
SECTION_SDATA2 static f32 lit_4265 = 5000.0f;

/* 80451E54-80451E58 0004+00 s=1 e=0 z=0  None .sdata2    @4266 */
SECTION_SDATA2 static f32 lit_4266 = -1.0f;

/* 8003FF14-8003FFC4 00B0+00 s=3 e=3 z=0  None .text      preDrawPath__16renderingDAmap_cFv */
//	8003FF30: 80451E4C (lit_4264)
//	8003FF40: 80451E50 (lit_4265)
//	8003FF48: 80451E28 (lit_3796)
//	8003FF50: 80451E54 (lit_4266)
//	8003FF70: 8000C710 (mDoMtx_lookAt__FPA4_fPC3VecPC3VecPC3Vecs)
//	8003FF7C: 8036024C (GXLoadPosMtxImm)
//	8003FF80: 8035B58C (GXClearVtxDesc)
//	8003FF8C: 8035AEB8 (GXSetVtxDesc)
//	8003FFA4: 8035B5C4 (GXSetVtxAttrFmt)
//	8003FFB0: 8035BE38 (GXSetMisc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::preDrawPath() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/preDrawPath__16renderingDAmap_cFv.s"
}
#pragma pop

/* 8003FFC4-8003FFEC 0028+00 s=3 e=3 z=0  None .text      postDrawPath__16renderingDAmap_cFv */
//	8003FFD8: 8035BE38 (GXSetMisc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::postDrawPath() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/postDrawPath__16renderingDAmap_cFv.s"
}
#pragma pop

/* 8003FFEC-8003FFF4 0008+00 s=3 e=3 z=0  None .text      getRoomNoSingle__16renderingDAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::getRoomNoSingle() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getRoomNoSingle__16renderingDAmap_cFv.s"
}
#pragma pop

/* 8003FFF4-80040094 00A0+00 s=2 e=0 z=0  None .text      getFirstDrawRoomNo__16renderingDAmap_cFv
 */
//	80040054: 80040094 (getNextDrawRoomNo__16renderingDAmap_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::getFirstDrawRoomNo() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getFirstDrawRoomNo__16renderingDAmap_cFv.s"
}
#pragma pop

/* 80040094-80040134 00A0+00 s=2 e=0 z=0  None .text      getNextDrawRoomNo__16renderingDAmap_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::getNextDrawRoomNo(int param_0) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getNextDrawRoomNo__16renderingDAmap_cFi.s"
}
#pragma pop

/* 80040134-800401E8 00B4+00 s=3 e=3 z=0  None .text      getFirstRoomPointer__16renderingDAmap_cFv
 */
//	80040150: 8003FFF4 (getFirstDrawRoomNo__16renderingDAmap_cFv)
//	8004017C: 80450E64 (mLayerList__8dMpath_c)
//	800401C8: 8003FE6C (setSingleRoomSetting__16renderingDAmap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::getFirstRoomPointer() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getFirstRoomPointer__16renderingDAmap_cFv.s"
}
#pragma pop

/* 800401E8-800402C0 00D8+00 s=3 e=3 z=0  None .text      getNextRoomPointer__16renderingDAmap_cFv
 */
//	800401F8: 803621DC (_savegpr_29)
//	80040210: 80040094 (getNextDrawRoomNo__16renderingDAmap_cFi)
//	80040258: 8003FFF4 (getFirstDrawRoomNo__16renderingDAmap_cFv)
//	80040268: 80450E64 (mLayerList__8dMpath_c)
//	800402A0: 8003FE6C (setSingleRoomSetting__16renderingDAmap_cFv)
//	800402AC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::getNextRoomPointer() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getNextRoomPointer__16renderingDAmap_cFv.s"
}
#pragma pop

/* 800402C0-800402E0 0020+00 s=3 e=3 z=0  None .text      isDrawPath__16renderingDAmap_cFv */
//	800402CC: 8003F758 (isExistMapPathData__8dMpath_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::isDrawPath() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/isDrawPath__16renderingDAmap_cFv.s"
}
#pragma pop

/* 800402E0-800402E8 0008+00 s=3 e=3 z=0  None .text      getFirstDrawLayerNo__16renderingDAmap_cFv
 */
bool renderingDAmap_c::getFirstDrawLayerNo() {
    return false;
}

/* 800402E8-800402FC 0014+00 s=3 e=3 z=0  None .text      getNextDrawLayerNo__16renderingDAmap_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::getNextDrawLayerNo(int param_0) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getNextDrawLayerNo__16renderingDAmap_cFi.s"
}
#pragma pop

/* 800402FC-80040518 021C+00 s=1 e=1 z=0  None .text
 * afterDrawPath__28renderingPlusDoorAndCursor_cFv              */
//	80040314: 803621DC (_savegpr_29)
//	8004031C: 80040518 (afterDrawPath__19renderingPlusDoor_cFv)
//	8004037C: 804061C0 (g_dComIfG_gameInfo)
//	80040380: 804061C0 (g_dComIfG_gameInfo)
//	80040390: 8003F02C (getMapRestartPos__10dMapInfo_nFv)
//	800403A0: 8003F40C (calcFloorNo__10dMapInfo_cFfbi)
//	800403CC: 804061C0 (g_dComIfG_gameInfo)
//	800403D0: 804061C0 (g_dComIfG_gameInfo)
//	80040400: 8003F0F8 (getMapRestartAngleY__10dMapInfo_nFv)
//	8004040C: 8003F02C (getMapRestartPos__10dMapInfo_nFv)
//	80040424: 800412C0 (drawCursor__28renderingPlusDoorAndCursor_cFRC3Vecsif)
//	80040454: 80040B00 (drawTreasure__28renderingPlusDoorAndCursor_cFv)
//	80040474: 804061C0 (g_dComIfG_gameInfo)
//	80040478: 804061C0 (g_dComIfG_gameInfo)
//	800404A0: 8003EF20 (getMapPlayerAngleY__10dMapInfo_nFv)
//	800404AC: 8003EE5C (getMapPlayerPos__10dMapInfo_nFv)
//	800404C4: 800412C0 (drawCursor__28renderingPlusDoorAndCursor_cFRC3Vecsif)
//	800404F4: 80040E84 (drawTreasureAfterPlayer__28renderingPlusDoorAndCursor_cFv)
//	80040504: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoorAndCursor_c::afterDrawPath() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/afterDrawPath__28renderingPlusDoorAndCursor_cFv.s"
}
#pragma pop

/* 80040518-80040574 005C+00 s=2 e=1 z=0  None .text      afterDrawPath__19renderingPlusDoor_cFv */
//	80040554: 80040574 (drawDoor1__19renderingPlusDoor_cFv)
//	8004055C: 800405B8 (drawDoor2__19renderingPlusDoor_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoor_c::afterDrawPath() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/afterDrawPath__19renderingPlusDoor_cFv.s"
}
#pragma pop

/* 80040574-800405B8 0044+00 s=1 e=0 z=0  None .text      drawDoor1__19renderingPlusDoor_cFv */
//	80040588: 80023EF4 (dStage_GetKeepDoorInfo__Fv)
//	800405A0: 800405FC (drawDoorCommon__19renderingPlusDoor_cFPC21stage_tgsc_data_classib)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoor_c::drawDoor1() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/drawDoor1__19renderingPlusDoor_cFv.s"
}
#pragma pop

/* 800405B8-800405FC 0044+00 s=1 e=0 z=0  None .text      drawDoor2__19renderingPlusDoor_cFv */
//	800405CC: 8002405C (dStage_GetRoomKeepDoorInfo__Fv)
//	800405E4: 800405FC (drawDoorCommon__19renderingPlusDoor_cFPC21stage_tgsc_data_classib)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoor_c::drawDoor2() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/drawDoor2__19renderingPlusDoor_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451E58-80451E5C 0004+00 s=1 e=0 z=0  None .sdata2    l_doorWhite */
SECTION_SDATA2 static u32 l_doorWhite = 0x64000000;

/* 80451E5C-80451E60 0004+00 s=1 e=0 z=0  None .sdata2    l_doorWhiteNoStay */
SECTION_SDATA2 static u32 l_doorWhiteNoStay = 0x6C000000;

/* 80451E60-80451E64 0004+00 s=1 e=0 z=0  None .sdata2    l_doorWhite2 */
SECTION_SDATA2 static u32 l_doorWhite2 = 0x64000000;

/* 80451E64-80451E68 0004+00 s=1 e=0 z=0  None .sdata2    l_doorWhiteNoStay2 */
SECTION_SDATA2 static u32 l_doorWhiteNoStay2 = 0x6C000000;

/* 80451E68-80451E70 0008+00 s=1 e=0 z=0  None .sdata2    l_tex0$4406 */
SECTION_SDATA2 static u8 l_tex0[8] = {
    0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01,
};

/* 800405FC-80040710 0114+00 s=2 e=0 z=0  None .text
 * drawDoorCommon__19renderingPlusDoor_cFPC21stage_tgsc_data_classib */
//	8004060C: 803621CC (_savegpr_25)
//	80040620: 8035B58C (GXClearVtxDesc)
//	8004062C: 8035AEB8 (GXSetVtxDesc)
//	80040638: 8035AEB8 (GXSetVtxDesc)
//	80040650: 8035B5C4 (GXSetVtxAttrFmt)
//	80040668: 8035B5C4 (GXSetVtxAttrFmt)
//	80040670: 80451E68 (l_tex0)
//	80040678: 8035BB28 (GXSetArray)
//	80040680: 8003CF40 (setTevSettingIntensityTextureToCI__18dRenderingFDAmap_cCFv)
//	800406A8: 80040710 (checkDispDoorS__19renderingPlusDoor_cFiif)
//	800406B4: 80424684 (m_texObjAgg__8dMpath_n)
//	800406B8: 80424684 (m_texObjAgg__8dMpath_n)
//	800406C4: 8035E414 (GXLoadTexObj)
//	800406DC: 80040838 (drawNormalDoorS__19renderingPlusDoor_cFPC21stage_tgsc_data_classiib)
//	800406F4: 8003CE78 (setTevSettingNonTextureDirectColor__18dRenderingFDAmap_cCFv)
//	800406FC: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoor_c::drawDoorCommon(stage_tgsc_data_class const* param_0, int param_1,
                                             bool param_2) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/drawDoorCommon__19renderingPlusDoor_cFPC21stage_tgsc_data_classib.s"
}
#pragma pop

/* 80040710-80040838 0128+00 s=1 e=0 z=0  None .text      checkDispDoorS__19renderingPlusDoor_cFiif
 */
//	80040724: 803621DC (_savegpr_29)
//	80040770: 8003ED10 (isVisitedRoom__10dMapInfo_nFi)
//	8004078C: 8003ED10 (isVisitedRoom__10dMapInfo_nFi)
//	800407D4: 8003FCA4 (calcFloorNoForObjectByMapPathRend__16renderingDAmap_cCFfi)
//	800407F8: 8003FCA4 (calcFloorNoForObjectByMapPathRend__16renderingDAmap_cCFfi)
//	80040824: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoor_c::checkDispDoorS(int param_0, int param_1, f32 param_2) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/checkDispDoorS__19renderingPlusDoor_cFiif.s"
}
#pragma pop

/* ############################################################################################## */
/* 80379C58-80379C88 0030+00 s=1 e=0 z=0  None .rodata    l_100x100BoxVertexList */
SECTION_RODATA static u8 const l_100x100BoxVertexList[48] = {
    0xC2, 0x48, 0x00, 0x00, 0xC2, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
    0xC2, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xC2, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80451E70-80451E74 0004+00 s=1 e=0 z=0  None .sdata2    @4484 */
SECTION_SDATA2 static f32 lit_4484 = 6.0f;

/* 80040838-800409B4 017C+00 s=1 e=0 z=0  None .text
 * drawNormalDoorS__19renderingPlusDoor_cFPC21stage_tgsc_data_classiib */
//	80040848: 803621DC (_savegpr_29)
//	80040858: 80450D64 (struct_80450D64)
//	80040870: 80451E58 (l_doorWhite)
//	80040880: 8035F37C (GXSetTevColor)
//	80040884: 80451E60 (l_doorWhite2)
//	80040894: 8035F37C (GXSetTevColor)
//	8004089C: 80451E5C (l_doorWhiteNoStay)
//	800408AC: 8035F37C (GXSetTevColor)
//	800408B0: 80451E64 (l_doorWhiteNoStay2)
//	800408C0: 8035F37C (GXSetTevColor)
//	800408EC: 8003ED60 (correctionOriginPos__10dMapInfo_nFScP3Vec)
//	800408F0: 803DD470 (now__14mDoMtx_stack_c)
//	800408F4: 803DD470 (now__14mDoMtx_stack_c)
//	80040900: 80451E28 (lit_3796)
//	80040904: 803468E8 (PSMTXTrans)
//	80040908: 803DD470 (now__14mDoMtx_stack_c)
//	8004090C: 803DD470 (now__14mDoMtx_stack_c)
//	80040914: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80040918: 80451E70 (lit_4484)
//	80040920: 80451E38 (lit_4202)
//	80040924: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80040928: 803DD470 (now__14mDoMtx_stack_c)
//	8004092C: 803DD470 (now__14mDoMtx_stack_c)
//	80040930: 80379C58 (l_100x100BoxVertexList)
//	80040934: 80379C58 (l_100x100BoxVertexList)
//	80040940: 80346DC0 (PSMTXMultVecArray)
//	80040950: 8035C764 (GXBegin)
//	800409A0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoor_c::drawNormalDoorS(stage_tgsc_data_class const* param_0, int param_1,
                                              int param_2, bool param_3) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/drawNormalDoorS__19renderingPlusDoor_cFPC21stage_tgsc_data_classiib.s"
}
#pragma pop

/* 800409B4-800409E0 002C+00 s=3 e=2 z=0  None .text      isDrawRoomIcon__16renderingDAmap_cCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::isDrawRoomIcon(int param_0, int param_1) const {
    nofralloc
#include "asm/d/map/d_map_path_dmap/isDrawRoomIcon__16renderingDAmap_cCFii.s"
}
#pragma pop

/* 800409E0-80040A94 00B4+00 s=3 e=3 z=0  None .text
 * isDrawIconSingle__16renderingDAmap_cCFPCQ27dTres_c6data_siibbPC3Vec */
//	800409F0: 803621C8 (_savegpr_24)
//	80040A44: 8003FCA4 (calcFloorNoForObjectByMapPathRend__16renderingDAmap_cCFfi)
//	80040A80: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::isDrawIconSingle(dTres_c::data_s const* param_0, int param_1,
                                            int param_2, bool param_3, bool param_4,
                                            Vec const* param_5) const {
    nofralloc
#include "asm/d/map/d_map_path_dmap/isDrawIconSingle__16renderingDAmap_cCFPCQ27dTres_c6data_siibbPC3Vec.s"
}
#pragma pop

/* 80040A94-80040AB8 0024+00 s=1 e=2 z=0  None .text
 * getFirstData__28renderingPlusDoorAndCursor_cFUc              */
//	80040AA4: 8009C360 (getFirstData__7dTres_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoorAndCursor_c::getFirstData(u8 param_0) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getFirstData__28renderingPlusDoorAndCursor_cFUc.s"
}
#pragma pop

/* 80040AB8-80040ADC 0024+00 s=1 e=2 z=0  None .text
 * getNextData__28renderingPlusDoorAndCursor_cFPQ27dTres_c15typeGroupData_c */
//	80040AC8: 8009C39C (getNextData__7dTres_cFPQ27dTres_c15typeGroupData_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoorAndCursor_c::getNextData(dTres_c::typeGroupData_c* param_0) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getNextData__28renderingPlusDoorAndCursor_cFPQ27dTres_c15typeGroupData_c.s"
}
#pragma pop

/* 80040ADC-80040AE4 0008+00 s=1 e=2 z=0  None .text
 * getIconPosition__28renderingPlusDoorAndCursor_cCFPQ27dTres_c15typeGroupData_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoorAndCursor_c::getIconPosition(dTres_c::typeGroupData_c* param_0) const {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getIconPosition__28renderingPlusDoorAndCursor_cCFPQ27dTres_c15typeGroupData_c.s"
}
#pragma pop

/* 80040AE4-80040B00 001C+00 s=3 e=2 z=0  None .text      getIconGroupNumber__16renderingDAmap_cCFUc
 */
//	80040AE4: 80425438 (mTypeGroupListAll__7dTres_c)
//	80040AE8: 80425438 (mTypeGroupListAll__7dTres_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingDAmap_c::getIconGroupNumber(u8 param_0) const {
    nofralloc
#include "asm/d/map/d_map_path_dmap/getIconGroupNumber__16renderingDAmap_cCFUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451E74-80451E78 0004+00 s=1 e=0 z=0  None .sdata2    l_entranceStartColor */
extern "C" u32 l_entranceStartColor;

/* 80451E78-80451E7C 0004+00 s=1 e=0 z=0  None .sdata2    l_entranceLv8StartColor */
extern "C" u32 l_entranceLv8StartColor;

/* 80451E7C-80451E80 0004+00 s=3 e=0 z=0  None .sdata2    l_treasureStartColor */
extern "C" u32 l_treasureStartColor;

/* 80451E8C-80451E90 0004+00 s=1 e=0 z=0  None .sdata2    l_destinationStartColor */
extern "C" u32 l_destinationStartColor;

/* 80379C88-80379CB8 0030+00 s=1 e=0 z=0  None .rodata    l_treasureDispList$4524 */
SECTION_RODATA static void* const l_treasureDispList_4524[12] = {
    (void*)0x01000000, (void*)0x00000002, (void*)&l_entranceStartColor,
    (void*)0x08000000, (void*)0x00000005, (void*)&l_entranceLv8StartColor,
    (void*)NULL,       (void*)0x00000001, (void*)&l_treasureStartColor,
    (void*)0x05000000, (void*)0x00000003, (void*)&l_destinationStartColor,
};

/* 80451E74-80451E78 0004+00 s=1 e=0 z=0  None .sdata2    l_entranceStartColor */
SECTION_SDATA2 static u32 l_entranceStartColor = 0x94000000;

/* 80451E78-80451E7C 0004+00 s=1 e=0 z=0  None .sdata2    l_entranceLv8StartColor */
SECTION_SDATA2 static u32 l_entranceLv8StartColor = 0x9C000000;

/* 80451E7C-80451E80 0004+00 s=3 e=0 z=0  None .sdata2    l_treasureStartColor */
SECTION_SDATA2 static u32 l_treasureStartColor = 0x7C000000;

/* 80451E80-80451E84 0004+00 s=1 e=0 z=0  None .sdata2    l_smallKeyStartColor */
SECTION_SDATA2 static u32 l_smallKeyStartColor = 0x84000000;

/* 80451E84-80451E88 0004+00 s=1 e=0 z=0  None .sdata2    l_bossStartColor */
SECTION_SDATA2 static u32 l_bossStartColor = 0x88000000;

/* 80451E88-80451E8C 0004+00 s=1 e=0 z=0  None .sdata2    l_npc0StartColor */
SECTION_SDATA2 static u32 l_npc0StartColor = 0x8C000000;

/* 80451E8C-80451E90 0004+00 s=1 e=0 z=0  None .sdata2    l_destinationStartColor */
SECTION_SDATA2 static u32 l_destinationStartColor = 0x90000000;

/* 80451E90-80451E94 0004+00 s=1 e=0 z=0  None .sdata2    l_npcYkmStartColor */
SECTION_SDATA2 static u32 l_npcYkmStartColor = 0x8C000000;

/* 80451E94-80451E98 0004+00 s=1 e=0 z=0  None .sdata2    l_npcYkwStartColor */
SECTION_SDATA2 static u32 l_npcYkwStartColor = 0x8C000000;

/* 80451E98-80451E9C 0004+00 s=1 e=0 z=0  None .sdata2    l_tksStartColor */
SECTION_SDATA2 static u32 l_tksStartColor = 0xA4000000;

/* 80451E9C-80451EA4 0008+00 s=1 e=0 z=0  None .sdata2    l_iconTex0$4523 */
SECTION_SDATA2 static u8 l_iconTex0_4523[8] = {
    0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
};

/* 80451EA4-80451EA8 0004+00 s=1 e=0 z=0  None .sdata2    tboxNotStayColor$4542 */
SECTION_SDATA2 static u8 tboxNotStayColor_4542[4] = {
    0x80,
    0x00,
    0x00,
    0x00,
};

/* 80451EA8-80451EAC 0004+00 s=2 e=0 z=0  None .sdata2    @4600 */
SECTION_SDATA2 static f32 lit_4600 = 2.0f;

/* 80040B00-80040E84 0384+00 s=1 e=0 z=0  None .text
 * drawTreasure__28renderingPlusDoorAndCursor_cFv               */
//	80040B20: 803621B8 (_savegpr_20)
//	80040B3C: 8035B58C (GXClearVtxDesc)
//	80040B48: 8035AEB8 (GXSetVtxDesc)
//	80040B54: 8035AEB8 (GXSetVtxDesc)
//	80040B6C: 8035B5C4 (GXSetVtxAttrFmt)
//	80040B84: 8035B5C4 (GXSetVtxAttrFmt)
//	80040B8C: 80451E9C (l_iconTex0_4523)
//	80040B94: 8035BB28 (GXSetArray)
//	80040B9C: 8003CF40 (setTevSettingIntensityTextureToCI__18dRenderingFDAmap_cCFv)
//	80040BA8: 80451EA4 (tboxNotStayColor_4542)
//	80040BAC: 80451E7C (l_treasureStartColor)
//	80040BB4: 80379C88 (l_treasureDispList_4524)
//	80040BB8: 80379C88 (l_treasureDispList_4524)
//	80040C20: 8035E664 (GXInvalidateTexAll)
//	80040C2C: 80424684 (m_texObjAgg__8dMpath_n)
//	80040C30: 80424684 (m_texObjAgg__8dMpath_n)
//	80040C3C: 8035E414 (GXLoadTexObj)
//	80040C74: 8035F37C (GXSetTevColor)
//	80040C94: 8035F37C (GXSetTevColor)
//	80040CA0: 80451EA8 (lit_4600)
//	80040CE0: 80451EA4 (tboxNotStayColor_4542)
//	80040D04: 80451E7C (l_treasureStartColor)
//	80040D34: 8035F37C (GXSetTevColor)
//	80040D54: 8035F37C (GXSetTevColor)
//	80040E10: 80041208 (drawIconSingle__28renderingPlusDoorAndCursor_cFRC3Vecff)
//	80040E58: 8003CE78 (setTevSettingNonTextureDirectColor__18dRenderingFDAmap_cCFv)
//	80040E70: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoorAndCursor_c::drawTreasure() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/drawTreasure__28renderingPlusDoorAndCursor_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451E80-80451E84 0004+00 s=1 e=0 z=0  None .sdata2    l_smallKeyStartColor */
extern "C" u32 l_smallKeyStartColor;

/* 80451E84-80451E88 0004+00 s=1 e=0 z=0  None .sdata2    l_bossStartColor */
extern "C" u32 l_bossStartColor;

/* 80451E88-80451E8C 0004+00 s=1 e=0 z=0  None .sdata2    l_npc0StartColor */
extern "C" u32 l_npc0StartColor;

/* 80451E90-80451E94 0004+00 s=1 e=0 z=0  None .sdata2    l_npcYkmStartColor */
extern "C" u32 l_npcYkmStartColor;

/* 80451E94-80451E98 0004+00 s=1 e=0 z=0  None .sdata2    l_npcYkwStartColor */
extern "C" u32 l_npcYkwStartColor;

/* 80451E98-80451E9C 0004+00 s=1 e=0 z=0  None .sdata2    l_tksStartColor */
extern "C" u32 l_tksStartColor;

/* 80379CB8-80379D3C 0084+00 s=1 e=0 z=0  None .rodata    l_treasureDispList$4606 */
SECTION_RODATA static void* const l_treasureDispList_4606[33] = {
    (void*)0x10000000, (void*)0x00000004, (void*)&l_tksStartColor,
    (void*)0x02000000, (void*)0x00000004, (void*)&l_smallKeyStartColor,
    (void*)0x0A000000, (void*)0x00000004, (void*)&l_npc0StartColor,
    (void*)0x09000000, (void*)0x00000004, (void*)&l_npc0StartColor,
    (void*)0x0E000000, (void*)0x00000004, (void*)&l_npcYkwStartColor,
    (void*)0x0D000000, (void*)0x00000004, (void*)&l_npcYkmStartColor,
    (void*)0x0F000000, (void*)0x00000004, (void*)&l_npc0StartColor,
    (void*)0x0B000000, (void*)0x00000004, (void*)&l_npc0StartColor,
    (void*)0x0C000000, (void*)0x00000004, (void*)&l_npc0StartColor,
    (void*)0x04000000, (void*)0x00000004, (void*)&l_smallKeyStartColor,
    (void*)0x03000000, (void*)0x00000004, (void*)&l_bossStartColor,
};

/* 80451EAC-80451EB4 0008+00 s=1 e=0 z=0  None .sdata2    l_iconTex0$4605 */
SECTION_SDATA2 static u8 l_iconTex0_4605[8] = {
    0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
};

/* 80451EB4-80451EB8 0004+00 s=1 e=0 z=0  None .sdata2    tboxNotStayColor$4624 */
SECTION_SDATA2 static u8 tboxNotStayColor_4624[4] = {
    0x80,
    0x00,
    0x00,
    0x00,
};

/* 80040E84-80041208 0384+00 s=1 e=0 z=0  None .text
 * drawTreasureAfterPlayer__28renderingPlusDoorAndCursor_cFv    */
//	80040EA4: 803621B8 (_savegpr_20)
//	80040EC0: 8035B58C (GXClearVtxDesc)
//	80040ECC: 8035AEB8 (GXSetVtxDesc)
//	80040ED8: 8035AEB8 (GXSetVtxDesc)
//	80040EF0: 8035B5C4 (GXSetVtxAttrFmt)
//	80040F08: 8035B5C4 (GXSetVtxAttrFmt)
//	80040F10: 80451EAC (l_iconTex0_4605)
//	80040F18: 8035BB28 (GXSetArray)
//	80040F20: 8003CF40 (setTevSettingIntensityTextureToCI__18dRenderingFDAmap_cCFv)
//	80040F2C: 80451EB4 (tboxNotStayColor_4624)
//	80040F30: 80451E7C (l_treasureStartColor)
//	80040F38: 80379CB8 (l_treasureDispList_4606)
//	80040F3C: 80379CB8 (l_treasureDispList_4606)
//	80040FA4: 8035E664 (GXInvalidateTexAll)
//	80040FB0: 80424684 (m_texObjAgg__8dMpath_n)
//	80040FB4: 80424684 (m_texObjAgg__8dMpath_n)
//	80040FC0: 8035E414 (GXLoadTexObj)
//	80040FF8: 8035F37C (GXSetTevColor)
//	80041018: 8035F37C (GXSetTevColor)
//	80041024: 80451EA8 (lit_4600)
//	80041064: 80451EB4 (tboxNotStayColor_4624)
//	80041088: 80451E7C (l_treasureStartColor)
//	800410B8: 8035F37C (GXSetTevColor)
//	800410D8: 8035F37C (GXSetTevColor)
//	80041194: 80041208 (drawIconSingle__28renderingPlusDoorAndCursor_cFRC3Vecff)
//	800411DC: 8003CE78 (setTevSettingNonTextureDirectColor__18dRenderingFDAmap_cCFv)
//	800411F4: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoorAndCursor_c::drawTreasureAfterPlayer() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/drawTreasureAfterPlayer__28renderingPlusDoorAndCursor_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80379D3C-80379D5C 0020+00 s=1 e=0 z=0  None .rodata    l_iconPosData$4686 */
SECTION_RODATA static u8 const l_iconPosData[32] = {
    0xC2, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
    0x42, 0x48, 0x00, 0x00, 0xC2, 0x48, 0x00, 0x00, 0xC2, 0x48, 0x00, 0x00, 0xC2, 0x48, 0x00, 0x00,
};

/* 80041208-800412C0 00B8+00 s=2 e=0 z=0  None .text
 * drawIconSingle__28renderingPlusDoorAndCursor_cFRC3Vecff      */
//	80041240: 8035C764 (GXBegin)
//	8004124C: 80379D3C (l_iconPosData)
//	80041250: 80379D3C (l_iconPosData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoorAndCursor_c::drawIconSingle(Vec const& param_0, f32 param_1,
                                                      f32 param_2) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/drawIconSingle__28renderingPlusDoorAndCursor_cFRC3Vecff.s"
}
#pragma pop

/* ############################################################################################## */
/* 80379D5C-80379D80 0024+00 s=1 e=0 z=0  None .rodata    l_offset$4703 */
SECTION_RODATA static u8 const l_offset[36] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
    0xC3, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x70, 0x00, 0x00,
    0x43, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x70, 0x00, 0x00,
};

/* 80450638-80450640 0004+04 s=1 e=0 z=0  None .sdata     l_cursorColor$4709 */
SECTION_SDATA static u8 l_cursorColor[4 + 4 /* padding */] = {
    0x78,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80451EB8-80451EC0 0004+04 s=1 e=0 z=0  None .sdata2    @4731 */
SECTION_SDATA2 static f32 lit_4731[1 + 1 /* padding */] = {
    640.0f,
    /* padding */
    0.0f,
};

/* 800412C0-8004145C 019C+00 s=1 e=0 z=0  None .text
 * drawCursor__28renderingPlusDoorAndCursor_cFRC3Vecsif         */
//	800412E0: 803621D4 (_savegpr_27)
//	800412EC: 80451EB8 (lit_4731)
//	800412FC: 80451E40 (lit_4211)
//	8004133C: 803DD470 (now__14mDoMtx_stack_c)
//	80041340: 803DD470 (now__14mDoMtx_stack_c)
//	80041348: 80451E28 (lit_3796)
//	80041350: 803468E8 (PSMTXTrans)
//	80041358: 80451E38 (lit_4202)
//	80041360: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80041364: 803DD470 (now__14mDoMtx_stack_c)
//	80041368: 803DD470 (now__14mDoMtx_stack_c)
//	80041370: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8004137C: 803DD470 (now__14mDoMtx_stack_c)
//	80041380: 803DD470 (now__14mDoMtx_stack_c)
//	80041384: 80379D5C (l_offset)
//	80041388: 80379D5C (l_offset)
//	8004139C: 80346D6C (PSMTXMultVec)
//	800413B0: 8035B58C (GXClearVtxDesc)
//	800413BC: 8035AEB8 (GXSetVtxDesc)
//	800413D4: 8035B5C4 (GXSetVtxAttrFmt)
//	800413DC: 80450638 (l_cursorColor)
//	800413E0: 80450638 (l_cursorColor)
//	800413F0: 8035F37C (GXSetTevColor)
//	80041400: 8035C764 (GXBegin)
//	80041448: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingPlusDoorAndCursor_c::drawCursor(Vec const& param_0, s16 param_1, int param_2,
                                                  f32 param_3) {
    nofralloc
#include "asm/d/map/d_map_path_dmap/drawCursor__28renderingPlusDoorAndCursor_cFRC3Vecsif.s"
}
#pragma pop

/* 8004145C-80041460 0004+00 s=2 e=0 z=0  None .text      beforeDrawPath__19renderingPlusDoor_cFv */
void renderingPlusDoor_c::beforeDrawPath() {
    /* empty function */
}

/* 80041460-80041480 0020+00 s=0 e=0 z=0  None .text      __sinit_d_map_path_dmap_cpp */
//	80041460: 80450AE8 (__float_max)
//	80041464: 80450AE8 (__float_max)
//	80041468: 80450E68 (mMinX__8dMpath_c)
//	80041470: 80450E6C (mMaxX__8dMpath_c)
//	80041474: 80450E70 (mMinZ__8dMpath_c)
//	80041478: 80450E74 (mMaxZ__8dMpath_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_map_path_dmap_cpp() {
    nofralloc
#include "asm/d/map/d_map_path_dmap/__sinit_d_map_path_dmap_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
SECTION_CTORS void* const _ctors_80041460 = (void*)__sinit_d_map_path_dmap_cpp;
#pragma pop

/* ############################################################################################## */
/* 803A7D80-803A7E24 00A4+00 s=0 e=7 z=0  None .data      __vt__19renderingPlusDoor_c */
SECTION_DATA void* __vt__19renderingPlusDoor_c[41] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__16renderingDAmap_cFv,
    (void*)__dt__19renderingPlusDoor_cFv,
    (void*)isDrawType__11dDrawPath_cFi,
    (void*)NULL,
    (void*)getLineColor__11dDrawPath_cFii,
    (void*)NULL,
    (void*)isSwitch__16renderingDAmap_cFPCQ211dDrawPath_c11group_class,
    (void*)isRenderingFloor__16renderingDAmap_cFi,
    (void*)getFirstRoomPointer__16renderingDAmap_cFv,
    (void*)getNextRoomPointer__16renderingDAmap_cFv,
    (void*)drawPath__11dDrawPath_cFv,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10line_class,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10poly_class,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10room_class,
    (void*)beforeDrawPath__19renderingPlusDoor_cFv,
    (void*)afterDrawPath__19renderingPlusDoor_cFv,
    (void*)preDrawPath__16renderingDAmap_cFv,
    (void*)postDrawPath__16renderingDAmap_cFv,
    (void*)isDrawPath__16renderingDAmap_cFv,
    (void*)preRenderingMap__18dRenderingFDAmap_cFv,
    (void*)postRenderingMap__18dRenderingFDAmap_cFv,
    (void*)getBackColor__16renderingDAmap_cCFv,
    (void*)getDecoLineColor__18dRenderingFDAmap_cFii,
    (void*)getDecorationLineWidth__18dRenderingFDAmap_cFi,
    (void*)getFirstDrawLayerNo__16renderingDAmap_cFv,
    (void*)getNextDrawLayerNo__16renderingDAmap_cFi,
    (void*)isDrawIconSingle__16renderingDAmap_cCFPCQ27dTres_c6data_siibbPC3Vec,
    (void*)getIconGroupNumber__16renderingDAmap_cCFUc,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)getRoomNoSingle__16renderingDAmap_cFv,
    (void*)isDrawRoom__16renderingDAmap_cCFii,
    (void*)isDrawRoomIcon__16renderingDAmap_cCFii,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 803A7E24-803A7EE0 00BC+00 s=0 e=4 z=0  None .data      __vt__28renderingPlusDoorAndCursor_c */
SECTION_DATA void* __vt__28renderingPlusDoorAndCursor_c[47] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__16renderingDAmap_cFv,
    (void*)__dt__28renderingPlusDoorAndCursor_cFv,
    (void*)isDrawType__11dDrawPath_cFi,
    (void*)NULL,
    (void*)getLineColor__11dDrawPath_cFii,
    (void*)NULL,
    (void*)isSwitch__16renderingDAmap_cFPCQ211dDrawPath_c11group_class,
    (void*)isRenderingFloor__16renderingDAmap_cFi,
    (void*)getFirstRoomPointer__16renderingDAmap_cFv,
    (void*)getNextRoomPointer__16renderingDAmap_cFv,
    (void*)drawPath__11dDrawPath_cFv,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10line_class,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10poly_class,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10room_class,
    (void*)beforeDrawPath__19renderingPlusDoor_cFv,
    (void*)afterDrawPath__28renderingPlusDoorAndCursor_cFv,
    (void*)preDrawPath__16renderingDAmap_cFv,
    (void*)postDrawPath__16renderingDAmap_cFv,
    (void*)isDrawPath__16renderingDAmap_cFv,
    (void*)preRenderingMap__18dRenderingFDAmap_cFv,
    (void*)postRenderingMap__18dRenderingFDAmap_cFv,
    (void*)getBackColor__16renderingDAmap_cCFv,
    (void*)getDecoLineColor__18dRenderingFDAmap_cFii,
    (void*)getDecorationLineWidth__18dRenderingFDAmap_cFi,
    (void*)getFirstDrawLayerNo__16renderingDAmap_cFv,
    (void*)getNextDrawLayerNo__16renderingDAmap_cFi,
    (void*)isDrawIconSingle__16renderingDAmap_cCFPCQ27dTres_c6data_siibbPC3Vec,
    (void*)getIconGroupNumber__16renderingDAmap_cCFUc,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)getRoomNoSingle__16renderingDAmap_cFv,
    (void*)isDrawRoom__16renderingDAmap_cCFii,
    (void*)isDrawRoomIcon__16renderingDAmap_cCFii,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)getIconPosition__28renderingPlusDoorAndCursor_cCFPQ27dTres_c15typeGroupData_c,
    (void*)getFirstData__28renderingPlusDoorAndCursor_cFUc,
    (void*)getNextData__28renderingPlusDoorAndCursor_cFPQ27dTres_c15typeGroupData_c,
    (void*)NULL,
    (void*)NULL,
};

/* 803A7EE0-803A7F78 0098+00 s=0 e=8 z=0  None .data      __vt__16renderingDAmap_c */
SECTION_DATA void* __vt__16renderingDAmap_c[38] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__16renderingDAmap_cFv,
    (void*)__dt__16renderingDAmap_cFv,
    (void*)isDrawType__11dDrawPath_cFi,
    (void*)NULL,
    (void*)getLineColor__11dDrawPath_cFii,
    (void*)NULL,
    (void*)isSwitch__16renderingDAmap_cFPCQ211dDrawPath_c11group_class,
    (void*)isRenderingFloor__16renderingDAmap_cFi,
    (void*)getFirstRoomPointer__16renderingDAmap_cFv,
    (void*)getNextRoomPointer__16renderingDAmap_cFv,
    (void*)drawPath__11dDrawPath_cFv,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10line_class,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10poly_class,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10room_class,
    (void*)NULL,
    (void*)NULL,
    (void*)preDrawPath__16renderingDAmap_cFv,
    (void*)postDrawPath__16renderingDAmap_cFv,
    (void*)isDrawPath__16renderingDAmap_cFv,
    (void*)preRenderingMap__18dRenderingFDAmap_cFv,
    (void*)postRenderingMap__18dRenderingFDAmap_cFv,
    (void*)getBackColor__16renderingDAmap_cCFv,
    (void*)getDecoLineColor__18dRenderingFDAmap_cFii,
    (void*)getDecorationLineWidth__18dRenderingFDAmap_cFi,
    (void*)getFirstDrawLayerNo__16renderingDAmap_cFv,
    (void*)getNextDrawLayerNo__16renderingDAmap_cFi,
    (void*)isDrawIconSingle__16renderingDAmap_cCFPCQ27dTres_c6data_siibbPC3Vec,
    (void*)getIconGroupNumber__16renderingDAmap_cCFUc,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)getRoomNoSingle__16renderingDAmap_cFv,
    (void*)isDrawRoom__16renderingDAmap_cCFii,
    (void*)isDrawRoomIcon__16renderingDAmap_cCFii,
};
