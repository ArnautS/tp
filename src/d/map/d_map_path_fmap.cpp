// 
// Generated By: dol2asm
// Translation Unit: d/map/d_map_path_fmap
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/map/d_map_path_fmap.h"

// 
// Types:
// 

struct fmpTresTypeGroupData_c {
	/* 8003EB70 */ // True False
~fmpTresTypeGroupData_c();
};

struct dTres_c {
	struct data_s {
	};

	struct typeGroupData_c {
	};

	/* 8009C360 */ // False False
//  u8 False
void getFirstData(u8);
	/* 8009C39C */ // False False
//  dTres_c::typeGroupData_c* False
// 	 dTres_c::typeGroupData_c False
void getNextData(dTres_c::typeGroupData_c*);
	/* 8009C49C */ // False False
//  u8 False
void getTypeGroupNoToType(u8);
	/* 8009C4B0 */ // False False
//  u8 False
void getTypeToTypeGroupNo(u8);
};

struct fmpTresTypeGroupDataList_c {
	/* 8003D790 */ // True False
//  u8 False
//  dTres_c::data_s const* False
// 	 dTres_c::data_s const False
// 		 dTres_c::data_s False
void addTypeGroupData(u8, dTres_c::data_s const*);
	/* 8003EB10 */ // False False
~fmpTresTypeGroupDataList_c();
	/* 8003EC90 */ // True False
fmpTresTypeGroupDataList_c();
};

struct dSv_save_c {
	/* 800350A8 */ // False False
//  int False
void getSave2(int);
};

struct dSv_memory2_c {
	/* 80034AEC */ // False False
//  int False
void isVisitedRoom(int);
};

struct dSv_memBit_c {
	/* 800347E8 */ // False False
//  int False
void isTbox(int) const;
};

struct dSv_info_c {
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dMenu_Fmap_region_data_c {
	/* 8003DB48 */ // False False
//  int False
void getMenuFmapStageData(int);
	/* 8003DB70 */ // False False
//  f32 False
//  f32 False
//  int False
//  int* False
// 	 int False
//  int* False
// 	 int False
void getPointStagePathInnerNo(f32, f32, int, int*, int*);
	/* 8003DEE0 */ // False False
//  int False
void buildFmapRegionData(int);
};

struct dMenu_Fmap_world_data_c {
	/* 8003E028 */ // False False
//  dMenu_Fmap_region_data_c* False
// 	 dMenu_Fmap_region_data_c False
void create(dMenu_Fmap_region_data_c*);
	/* 8003E04C */ // True False
void buildFmapWorldData();
};

struct dMenu_Fmap_stage_data_c {
	/* 8003D95C */ // True False
void isArrival();
	/* 8003D9D8 */ // True False
//  int False
//  f32 False
//  f32 False
void buildFmapStageData(int, f32, f32);
};

struct dMenu_Fmap_room_data_c {
	/* 8003D818 */ // False False
void isArrival();
	/* 8003D868 */ // True False
//  int False
//  int False
//  int False
void buildTresTypeGroup(int, int, int);
	/* 8003D92C */ // True False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void buildFmapRoomData(int, int, f32, f32, f32, f32);
};

struct dMenuFmapIconPointer_c {
	/* 8003E114 */ // False False
//  dMenu_Fmap_region_data_c* False
// 	 dMenu_Fmap_region_data_c False
//  dMenu_Fmap_stage_data_c* False
// 	 dMenu_Fmap_stage_data_c False
//  u8 False
//  int False
//  int False
void init(dMenu_Fmap_region_data_c*, dMenu_Fmap_stage_data_c*, u8, int, int);
	/* 8003E1C0 */ // True False
void getFirstData();
	/* 8003E2BC */ // True False
void getData();
	/* 8003E350 */ // True False
void getFirstRoomData();
	/* 8003E37C */ // True False
void getNextRoomData();
	/* 8003E3A4 */ // True False
void getNextStageData();
	/* 8003E3D8 */ // True False
void getNextData();
	/* 8003E490 */ // False False
void nextData();
	/* 8003E510 */ // False False
void getValidData();
};

struct dMenuFmapIconDisp_c {
	/* 8003E578 */ // False False
//  int* False
// 	 int False
//  int* False
// 	 int False
//  f32* False
// 	 f32 False
//  f32* False
// 	 f32 False
//  dTres_c::data_s const** False
// 	 dTres_c::data_s const* False
// 		 dTres_c::data_s const False
// 			 dTres_c::data_s False
void getPosition(int*, int*, f32*, f32*, dTres_c::data_s const**);
	/* 8003E6E8 */ // False False
void isDrawDisp();
};

// 
// Forward References:
// 


// True False
//  u8 False
//  dTres_c::data_s const* False
// 	 dTres_c::data_s const False
// 		 dTres_c::data_s False
extern "C" void addTypeGroupData__26fmpTresTypeGroupDataList_cFUcPCQ27dTres_c6data_s();
// False False
extern "C" void isArrival__22dMenu_Fmap_room_data_cFv();
// True False
//  int False
//  int False
//  int False
extern "C" void buildTresTypeGroup__22dMenu_Fmap_room_data_cFiii();
// True False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void buildFmapRoomData__22dMenu_Fmap_room_data_cFiiffff();
// True False
extern "C" void isArrival__23dMenu_Fmap_stage_data_cFv();
// True False
//  int False
//  f32 False
//  f32 False
extern "C" void buildFmapStageData__23dMenu_Fmap_stage_data_cFiff();
// False False
//  int False
extern "C" void getMenuFmapStageData__24dMenu_Fmap_region_data_cFi();
// False False
//  f32 False
//  f32 False
//  int False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void getPointStagePathInnerNo__24dMenu_Fmap_region_data_cFffiPiPi();
// False False
//  int False
extern "C" void buildFmapRegionData__24dMenu_Fmap_region_data_cFi();
// False False
//  dMenu_Fmap_region_data_c* False
// 	 dMenu_Fmap_region_data_c False
extern "C" void create__23dMenu_Fmap_world_data_cFP24dMenu_Fmap_region_data_c();
// True False
extern "C" void buildFmapWorldData__23dMenu_Fmap_world_data_cFv();
// False False
//  dMenu_Fmap_region_data_c* False
// 	 dMenu_Fmap_region_data_c False
//  dMenu_Fmap_stage_data_c* False
// 	 dMenu_Fmap_stage_data_c False
//  u8 False
//  int False
//  int False
extern "C" void init__22dMenuFmapIconPointer_cFP24dMenu_Fmap_region_data_cP23dMenu_Fmap_stage_data_cUcii();
// True False
extern "C" void getFirstData__22dMenuFmapIconPointer_cFv();
// True False
extern "C" void getData__22dMenuFmapIconPointer_cFv();
// True False
extern "C" void getFirstRoomData__22dMenuFmapIconPointer_cFv();
// True False
extern "C" void getNextRoomData__22dMenuFmapIconPointer_cFv();
// True False
extern "C" void getNextStageData__22dMenuFmapIconPointer_cFv();
// True False
extern "C" void getNextData__22dMenuFmapIconPointer_cFv();
// False False
extern "C" void nextData__22dMenuFmapIconPointer_cFv();
// False False
extern "C" void getValidData__22dMenuFmapIconPointer_cFv();
// False False
//  int* False
// 	 int False
//  int* False
// 	 int False
//  f32* False
// 	 f32 False
//  f32* False
// 	 f32 False
//  dTres_c::data_s const** False
// 	 dTres_c::data_s const* False
// 		 dTres_c::data_s const False
// 			 dTres_c::data_s False
extern "C" void getPosition__19dMenuFmapIconDisp_cFPiPiPfPfPPCQ27dTres_c6data_s();
// False False
extern "C" void isDrawDisp__19dMenuFmapIconDisp_cFv();
// False False
extern "C" void __dt__26fmpTresTypeGroupDataList_cFv();
// True False
extern "C" void __dt__22fmpTresTypeGroupData_cFv();
// True False
extern "C" void __ct__26fmpTresTypeGroupDataList_cFv();
extern "C" extern void* __vt__19dMenuFmapIconDisp_c[3];

// 
// External References:
// 

// False False
//  int False
//  int False
void dComIfGs_isStageTbox(int, int);
// False False
//  int False
//  int False
void dComIfGs_isStageSwitch(int, int);
// False False
void dComIfGp_isLightDropMapVisible();
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  int False
//  int False
extern "C" void dComIfGs_isStageTbox__Fii();
// False False
//  int False
//  int False
extern "C" void dComIfGs_isStageSwitch__Fii();
// False False
extern "C" void dComIfGp_isLightDropMapVisible__Fv();
// False False
//  int False
extern "C" void isTbox__12dSv_memBit_cCFi();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  int False
extern "C" void isVisitedRoom__13dSv_memory2_cFi();
// False False
//  int False
extern "C" void getSave2__10dSv_save_cFi();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  u8 False
extern "C" void getFirstData__7dTres_cFUc();
// False False
//  dTres_c::typeGroupData_c* False
// 	 dTres_c::typeGroupData_c False
extern "C" void getNextData__7dTres_cFPQ27dTres_c15typeGroupData_c();
// False False
//  u8 False
extern "C" void getTypeGroupNoToType__7dTres_cFUc();
// False False
//  u8 False
extern "C" void getTypeToTypeGroupNo__7dTres_cFUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSVECCrossProduct();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __save_gpr();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void __restore_gpr();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u32 __float_max;

// 
// Declarations:
// 

/* 8003D790-8003D818 0088+00 s=1 e=0 z=0  None .text      addTypeGroupData__26fmpTresTypeGroupDataList_cFUcPCQ27dTres_c6data_s */
//	8003D7A0: 803621D8 (_savegpr_28)
//	8003D7B8: 802CEC4C (__nw__FUl)
//	8003D804: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  dTres_c::data_s const* False
// 	 dTres_c::data_s const False
// 		 dTres_c::data_s False
asm void fmpTresTypeGroupDataList_c::addTypeGroupData(u8 param_0, dTres_c::data_s const* param_1) {
	nofralloc
#include "asm/d/map/d_map_path_fmap/addTypeGroupData__26fmpTresTypeGroupDataList_cFUcPCQ27dTres_c6data_s.s"
}
#pragma pop


/* 8003D818-8003D868 0050+00 s=1 e=1 z=0  None .text      isArrival__22dMenu_Fmap_room_data_cFv                        */
//	8003D834: 804061C0 (g_dComIfG_gameInfo)
//	8003D838: 804061C0 (g_dComIfG_gameInfo)
//	8003D840: 800350A8 (getSave2__10dSv_save_cFi)
//	8003D848: 80034AEC (isVisitedRoom__13dSv_memory2_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMenu_Fmap_room_data_c::isArrival() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/isArrival__22dMenu_Fmap_room_data_cFv.s"
}
#pragma pop


/* 8003D868-8003D92C 00C4+00 s=1 e=0 z=0  None .text      buildTresTypeGroup__22dMenu_Fmap_room_data_cFiii             */
//	8003D878: 803621D4 (_savegpr_27)
//	8003D8AC: 802CEC4C (__nw__FUl)
//	8003D8B8: 8003EC90 (__ct__26fmpTresTypeGroupDataList_cFv)
//	8003D8BC: 8003EC90 (__ct__26fmpTresTypeGroupDataList_cFv)
//	8003D8C0: 8003EB10 (__dt__26fmpTresTypeGroupDataList_cFv)
//	8003D8C4: 8003EB10 (__dt__26fmpTresTypeGroupDataList_cFv)
//	8003D8D0: 80361D60 (__construct_array)
//	8003D8E8: 8009C4B0 (getTypeToTypeGroupNo__7dTres_cFUc)
//	8003D900: 8003D790 (addTypeGroupData__26fmpTresTypeGroupDataList_cFUcPCQ27dTres_c6data_s)
//	8003D918: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  int False
asm void dMenu_Fmap_room_data_c::buildTresTypeGroup(int param_0, int param_1, int param_2) {
	nofralloc
#include "asm/d/map/d_map_path_fmap/buildTresTypeGroup__22dMenu_Fmap_room_data_cFiii.s"
}
#pragma pop


/* 8003D92C-8003D95C 0030+00 s=1 e=0 z=0  None .text      buildFmapRoomData__22dMenu_Fmap_room_data_cFiiffff           */
//	8003D948: 8003D868 (buildTresTypeGroup__22dMenu_Fmap_room_data_cFiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
asm void dMenu_Fmap_room_data_c::buildFmapRoomData(int param_0, int param_1, f32 param_2, f32 param_3, f32 param_4, f32 param_5) {
	nofralloc
#include "asm/d/map/d_map_path_fmap/buildFmapRoomData__22dMenu_Fmap_room_data_cFiiffff.s"
}
#pragma pop


/* 8003D95C-8003D9D8 007C+00 s=1 e=0 z=0  None .text      isArrival__23dMenu_Fmap_stage_data_cFv                       */
//	8003D96C: 803621DC (_savegpr_29)
//	8003D980: 804061C0 (g_dComIfG_gameInfo)
//	8003D984: 804061C0 (g_dComIfG_gameInfo)
//	8003D994: 800350A8 (getSave2__10dSv_save_cFi)
//	8003D99C: 80034AEC (isVisitedRoom__13dSv_memory2_cFi)
//	8003D9C4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMenu_Fmap_stage_data_c::isArrival() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/isArrival__23dMenu_Fmap_stage_data_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451E20-80451E28 0004+04 s=5 e=0 z=0  None .sdata2    @3894                                                        */
SECTION_SDATA2 static f32 lit_3894[1 + 1 /* padding */] = {
	0.0f,
	/* padding */
	0.0f,
};

/* 8003D9D8-8003DB48 0170+00 s=1 e=0 z=0  None .text      buildFmapStageData__23dMenu_Fmap_stage_data_cFiff            */
//	8003DA18: 803621D8 (_savegpr_28)
//	8003DA30: 80450AE8 (__float_max)
//	8003DA34: 80450AE8 (__float_max)
//	8003DA70: 8003D92C (buildFmapRoomData__22dMenu_Fmap_room_data_cFiiffff)
//	8003DAE8: 80451E20 (lit_3894)
//	8003DB34: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
//  f32 False
asm void dMenu_Fmap_stage_data_c::buildFmapStageData(int param_0, f32 param_1, f32 param_2) {
	nofralloc
#include "asm/d/map/d_map_path_fmap/buildFmapStageData__23dMenu_Fmap_stage_data_cFiff.s"
}
#pragma pop


/* 8003DB48-8003DB70 0028+00 s=0 e=1 z=0  None .text      getMenuFmapStageData__24dMenu_Fmap_region_data_cFi           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  int False
asm void dMenu_Fmap_region_data_c::getMenuFmapStageData(int param_0) {
	nofralloc
#include "asm/d/map/d_map_path_fmap/getMenuFmapStageData__24dMenu_Fmap_region_data_cFi.s"
}
#pragma pop


/* 8003DB70-8003DEE0 0370+00 s=0 e=1 z=0  None .text      getPointStagePathInnerNo__24dMenu_Fmap_region_data_cFffiPiPi */
//	8003DBA8: 803621A0 (__save_gpr)
//	8003DBD8: 80451E20 (lit_3894)
//	8003DC18: 8003D95C (isArrival__23dMenu_Fmap_stage_data_cFv)
//	8003DC24: 804061C0 (g_dComIfG_gameInfo)
//	8003DC28: 804061C0 (g_dComIfG_gameInfo)
//	8003DC30: 800350A8 (getSave2__10dSv_save_cFi)
//	8003DC38: 80034AEC (isVisitedRoom__13dSv_memory2_cFi)
//	8003DD28: 80451E20 (lit_3894)
//	8003DD84: 803471B4 (PSVECCrossProduct)
//	8003DECC: 803621EC (__restore_gpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
//  int False
//  int* False
// 	 int False
//  int* False
// 	 int False
asm void dMenu_Fmap_region_data_c::getPointStagePathInnerNo(f32 param_0, f32 param_1, int param_2, int* param_3, int* param_4) {
	nofralloc
#include "asm/d/map/d_map_path_fmap/getPointStagePathInnerNo__24dMenu_Fmap_region_data_cFffiPiPi.s"
}
#pragma pop


/* 8003DEE0-8003E028 0148+00 s=0 e=1 z=0  None .text      buildFmapRegionData__24dMenu_Fmap_region_data_cFi            */
//	8003DF10: 803621DC (_savegpr_29)
//	8003DF18: 80450AE8 (__float_max)
//	8003DF1C: 80450AE8 (__float_max)
//	8003DF50: 8003D9D8 (buildFmapStageData__23dMenu_Fmap_stage_data_cFiff)
//	8003DFD8: 80451E20 (lit_3894)
//	8003E014: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  int False
asm void dMenu_Fmap_region_data_c::buildFmapRegionData(int param_0) {
	nofralloc
#include "asm/d/map/d_map_path_fmap/buildFmapRegionData__24dMenu_Fmap_region_data_cFi.s"
}
#pragma pop


/* 8003E028-8003E04C 0024+00 s=0 e=1 z=0  None .text      create__23dMenu_Fmap_world_data_cFP24dMenu_Fmap_region_data_c */
//	8003E038: 8003E04C (buildFmapWorldData__23dMenu_Fmap_world_data_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dMenu_Fmap_region_data_c* False
// 	 dMenu_Fmap_region_data_c False
asm void dMenu_Fmap_world_data_c::create(dMenu_Fmap_region_data_c* param_0) {
	nofralloc
#include "asm/d/map/d_map_path_fmap/create__23dMenu_Fmap_world_data_cFP24dMenu_Fmap_region_data_c.s"
}
#pragma pop


/* 8003E04C-8003E114 00C8+00 s=1 e=0 z=0  None .text      buildFmapWorldData__23dMenu_Fmap_world_data_cFv              */
//	8003E04C: 80450AE8 (__float_max)
//	8003E050: 80450AE8 (__float_max)
//	8003E0F8: 80451E20 (lit_3894)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMenu_Fmap_world_data_c::buildFmapWorldData() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/buildFmapWorldData__23dMenu_Fmap_world_data_cFv.s"
}
#pragma pop


/* 8003E114-8003E1C0 00AC+00 s=0 e=3 z=0  None .text      init__22dMenuFmapIconPointer_cFP24dMenu_Fmap_region_data_cP23dMenu_Fmap_stage_data_cUcii */
//	8003E124: 803621D0 (_savegpr_26)
//	8003E140: 804061C0 (g_dComIfG_gameInfo)
//	8003E144: 804061C0 (g_dComIfG_gameInfo)
//	8003E180: 8009C49C (getTypeGroupNoToType__7dTres_cFUc)
//	8003E1A0: 8003E350 (getFirstRoomData__22dMenuFmapIconPointer_cFv)
//	8003E1AC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dMenu_Fmap_region_data_c* False
// 	 dMenu_Fmap_region_data_c False
//  dMenu_Fmap_stage_data_c* False
// 	 dMenu_Fmap_stage_data_c False
//  u8 False
//  int False
//  int False
asm void dMenuFmapIconPointer_c::init(dMenu_Fmap_region_data_c* param_0, dMenu_Fmap_stage_data_c* param_1, u8 param_2, int param_3, int param_4) {
	nofralloc
#include "asm/d/map/d_map_path_fmap/init__22dMenuFmapIconPointer_cFP24dMenu_Fmap_region_data_cP23dMenu_Fmap_stage_data_cUcii.s"
}
#pragma pop


/* 8003E1C0-8003E2BC 00FC+00 s=2 e=0 z=0  None .text      getFirstData__22dMenuFmapIconPointer_cFv                     */
//	8003E1E0: 804061C0 (g_dComIfG_gameInfo)
//	8003E1E4: 804061C0 (g_dComIfG_gameInfo)
//	8003E1EC: 80368994 (strcmp)
//	8003E1FC: 8009C360 (getFirstData__7dTres_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMenuFmapIconPointer_c::getFirstData() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/getFirstData__22dMenuFmapIconPointer_cFv.s"
}
#pragma pop


/* 8003E2BC-8003E350 0094+00 s=1 e=0 z=0  None .text      getData__22dMenuFmapIconPointer_cFv                          */
//	8003E2DC: 804061C0 (g_dComIfG_gameInfo)
//	8003E2E0: 804061C0 (g_dComIfG_gameInfo)
//	8003E2E8: 80368994 (strcmp)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMenuFmapIconPointer_c::getData() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/getData__22dMenuFmapIconPointer_cFv.s"
}
#pragma pop


/* 8003E350-8003E37C 002C+00 s=2 e=0 z=0  None .text      getFirstRoomData__22dMenuFmapIconPointer_cFv                 */
//	8003E368: 8003E1C0 (getFirstData__22dMenuFmapIconPointer_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMenuFmapIconPointer_c::getFirstRoomData() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/getFirstRoomData__22dMenuFmapIconPointer_cFv.s"
}
#pragma pop


/* 8003E37C-8003E3A4 0028+00 s=1 e=0 z=0  None .text      getNextRoomData__22dMenuFmapIconPointer_cFv                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMenuFmapIconPointer_c::getNextRoomData() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/getNextRoomData__22dMenuFmapIconPointer_cFv.s"
}
#pragma pop


/* 8003E3A4-8003E3D8 0034+00 s=1 e=0 z=0  None .text      getNextStageData__22dMenuFmapIconPointer_cFv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMenuFmapIconPointer_c::getNextStageData() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/getNextStageData__22dMenuFmapIconPointer_cFv.s"
}
#pragma pop


/* 8003E3D8-8003E490 00B8+00 s=1 e=0 z=0  None .text      getNextData__22dMenuFmapIconPointer_cFv                      */
//	8003E3F8: 804061C0 (g_dComIfG_gameInfo)
//	8003E3FC: 804061C0 (g_dComIfG_gameInfo)
//	8003E404: 80368994 (strcmp)
//	8003E41C: 8009C39C (getNextData__7dTres_cFPQ27dTres_c15typeGroupData_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMenuFmapIconPointer_c::getNextData() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/getNextData__22dMenuFmapIconPointer_cFv.s"
}
#pragma pop


/* 8003E490-8003E510 0080+00 s=1 e=3 z=0  None .text      nextData__22dMenuFmapIconPointer_cFv                         */
//	8003E4AC: 8003E3D8 (getNextData__22dMenuFmapIconPointer_cFv)
//	8003E4BC: 8003E37C (getNextRoomData__22dMenuFmapIconPointer_cFv)
//	8003E4CC: 8003E3A4 (getNextStageData__22dMenuFmapIconPointer_cFv)
//	8003E4E4: 8003E350 (getFirstRoomData__22dMenuFmapIconPointer_cFv)
//	8003E4F0: 8003E1C0 (getFirstData__22dMenuFmapIconPointer_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMenuFmapIconPointer_c::nextData() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/nextData__22dMenuFmapIconPointer_cFv.s"
}
#pragma pop


/* 8003E510-8003E578 0068+00 s=0 e=3 z=0  None .text      getValidData__22dMenuFmapIconPointer_cFv                     */
//	8003E520: 803621DC (_savegpr_29)
//	8003E530: 8003E2BC (getData__22dMenuFmapIconPointer_cFv)
//	8003E544: 8003E490 (nextData__22dMenuFmapIconPointer_cFv)
//	8003E564: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMenuFmapIconPointer_c::getValidData() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/getValidData__22dMenuFmapIconPointer_cFv.s"
}
#pragma pop


/* 8003E578-8003E6E8 0170+00 s=0 e=3 z=0  None .text      getPosition__19dMenuFmapIconDisp_cFPiPiPfPfPPCQ27dTres_c6data_s */
//	8003E598: 803621D8 (_savegpr_28)
//	8003E5D0: 80451E20 (lit_3894)
//	8003E5E0: 80451E20 (lit_3894)
//	8003E610: 804061C0 (g_dComIfG_gameInfo)
//	8003E614: 804061C0 (g_dComIfG_gameInfo)
//	8003E61C: 80368994 (strcmp)
//	8003E6D4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  int* False
// 	 int False
//  int* False
// 	 int False
//  f32* False
// 	 f32 False
//  f32* False
// 	 f32 False
//  dTres_c::data_s const** False
// 	 dTres_c::data_s const* False
// 		 dTres_c::data_s const False
// 			 dTres_c::data_s False
asm void dMenuFmapIconDisp_c::getPosition(int* param_0, int* param_1, f32* param_2, f32* param_3, dTres_c::data_s const** param_4) {
	nofralloc
#include "asm/d/map/d_map_path_fmap/getPosition__19dMenuFmapIconDisp_cFPiPiPfPfPPCQ27dTres_c6data_s.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A7D38-803A7D74 003C+00 s=1 e=0 z=0  None .data      @4467                                                        */
SECTION_DATA static void* lit_4467[15] = {
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x40C),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0xA8),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x40C),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x40C),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x154),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x1FC),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x308),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x40C),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0xA8),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x40C),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x35C),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x40C),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x40C),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x388),
	(void*)(((char*)isDrawDisp__19dMenuFmapIconDisp_cFv)+0x388),
};

/* 8003E6E8-8003EB10 0428+00 s=2 e=3 z=0  None .text      isDrawDisp__19dMenuFmapIconDisp_cFv                          */
//	8003E6F8: 803621D4 (_savegpr_27)
//	8003E758: 8003D818 (isArrival__22dMenu_Fmap_room_data_cFv)
//	8003E778: 803A7D38 (lit_4467)
//	8003E77C: 803A7D38 (lit_4467)
//	8003E7C4: 804061C0 (g_dComIfG_gameInfo)
//	8003E7C8: 804061C0 (g_dComIfG_gameInfo)
//	8003E7D0: 80035360 (isSwitch__10dSv_info_cCFii)
//	8003E828: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	8003E840: 8002EDE0 (dComIfGp_isLightDropMapVisible__Fv)
//	8003E84C: 804061C0 (g_dComIfG_gameInfo)
//	8003E850: 804061C0 (g_dComIfG_gameInfo)
//	8003E87C: 804061C0 (g_dComIfG_gameInfo)
//	8003E880: 804061C0 (g_dComIfG_gameInfo)
//	8003E888: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	8003E88C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	8003E894: 800349BC (isEventBit__11dSv_event_cCFUs)
//	8003E8D0: 8002D598 (dComIfGs_isStageTbox__Fii)
//	8003E910: 804061C0 (g_dComIfG_gameInfo)
//	8003E914: 804061C0 (g_dComIfG_gameInfo)
//	8003E91C: 800347E8 (isTbox__12dSv_memBit_cCFi)
//	8003E95C: 804061C0 (g_dComIfG_gameInfo)
//	8003E960: 804061C0 (g_dComIfG_gameInfo)
//	8003E968: 80035360 (isSwitch__10dSv_info_cCFii)
//	8003E9B0: 8002D598 (dComIfGs_isStageTbox__Fii)
//	8003E9DC: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	8003E9FC: 804061C0 (g_dComIfG_gameInfo)
//	8003EA00: 804061C0 (g_dComIfG_gameInfo)
//	8003EA10: 80035360 (isSwitch__10dSv_info_cCFii)
//	8003EA34: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	8003EA5C: 8002D598 (dComIfGs_isStageTbox__Fii)
//	8003EA98: 804061C0 (g_dComIfG_gameInfo)
//	8003EA9C: 804061C0 (g_dComIfG_gameInfo)
//	8003EAA4: 80035360 (isSwitch__10dSv_info_cCFii)
//	8003EAE4: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	8003EAFC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMenuFmapIconDisp_c::isDrawDisp() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/isDrawDisp__19dMenuFmapIconDisp_cFv.s"
}
#pragma pop


/* 8003EB10-8003EB70 0060+00 s=1 e=1 z=0  None .text      __dt__26fmpTresTypeGroupDataList_cFv                         */
//	8003EB40: 8003EB70 (__dt__22fmpTresTypeGroupData_cFv)
//	8003EB50: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm fmpTresTypeGroupDataList_c::~fmpTresTypeGroupDataList_c() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/__dt__26fmpTresTypeGroupDataList_cFv.s"
}
#pragma pop


/* 8003EB70-8003EC90 0120+00 s=1 e=0 z=0  None .text      __dt__22fmpTresTypeGroupData_cFv                             */
//	8003EB80: 803621C0 (_savegpr_22)
//	8003EC28: 802CED3C (__dl__FPv)
//	8003EC30: 802CED3C (__dl__FPv)
//	8003EC38: 802CED3C (__dl__FPv)
//	8003EC40: 802CED3C (__dl__FPv)
//	8003EC48: 802CED3C (__dl__FPv)
//	8003EC50: 802CED3C (__dl__FPv)
//	8003EC58: 802CED3C (__dl__FPv)
//	8003EC60: 802CED3C (__dl__FPv)
//	8003EC70: 802CED3C (__dl__FPv)
//	8003EC7C: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm fmpTresTypeGroupData_c::~fmpTresTypeGroupData_c() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/__dt__22fmpTresTypeGroupData_cFv.s"
}
#pragma pop


/* 8003EC90-8003ECA0 0010+00 s=1 e=0 z=0  None .text      __ct__26fmpTresTypeGroupDataList_cFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm fmpTresTypeGroupDataList_c::fmpTresTypeGroupDataList_c() {
	nofralloc
#include "asm/d/map/d_map_path_fmap/__ct__26fmpTresTypeGroupDataList_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A7D74-803A7D80 000C+00 s=0 e=3 z=0  None .data      __vt__19dMenuFmapIconDisp_c                                  */
SECTION_DATA void* __vt__19dMenuFmapIconDisp_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)isDrawDisp__19dMenuFmapIconDisp_cFv,
};

