//
// Generated By: dol2asm
// Translation Unit: d/d_camera
//

#include "d/d_camera.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

namespace std {
/* 80182A3C */ void fabsf(f32);
/* 80182D10 */ void fabs(f32);
};  // namespace std

struct stage_camera2_data_class {};

struct request_of_phase_process_class {};

struct Vec {};

struct cXyz {
    /* 80009184 */ ~cXyz();
    /* 800977F4 */ cXyz(cXyz const&);
    /* 8014195C */ cXyz(f32, f32, f32);
    /* 800125DC */ cXyz();
    /* 8008E790 */ void abs() const;
    /* 8008E8D0 */ void operator-=(Vec const&);
    /* 8008E904 */ void operator+=(Vec const&);
    /* 800977D8 */ void operator=(cXyz const&);
    /* 80182D8C */ void set(f32, f32, f32);
    /* 80266AE4 */ void operator+(Vec const&) const;
    /* 80266B34 */ void operator-(Vec const&) const;
    /* 80266B84 */ void operator*(f32) const;
    /* 80266BD0 */ void operator*(Vec const&) const;
    /* 80266CE4 */ void norm() const;
    /* 80266EF4 */ void normalize();
    /* 8026706C */ bool operator!=(Vec const&) const;
};

struct mDoMtx_stack_c {
    /* 8000CD9C */ void transM(f32, f32, f32);
    /* 8000CE70 */ void scaleM(cXyz const&);
};

struct mDoLib_clipper {
    /* 8001528C */ void setup(f32, f32, f32, f32);
};

struct mDoGph_gInf_c {
    /* 80008078 */ void onBlure();
    /* 800080A0 */ void onBlure(f32 const (*)[4]);
};

struct mDoCPd_c {
    /* 8016C314 */ void getHoldA(u32);
    /* 80182BF8 */ void getTrigA(u32);
};

struct fopAc_ac_c {};

struct daTagMwait_c {
    /* 80182D9C */ void checkEndMessage();
};

struct daTagMstop_c {
    /* 80182D64 */ void checkNoAttention() const;
};

struct daTagMhint_c {
    /* 80182D78 */ void checkNoAttention() const;
};

struct daPy_py_c {
    /* 801414CC */ void checkMagneBootsOn() const;
    /* 8015DFF4 */ void getLeftHandPos() const;
    /* 8015F8D0 */ void getThrowBoomerangActor();
    /* 801829E0 */ void checkThrowDamage() const;
    /* 80182A10 */ void checkGoronSideMove() const;
    /* 80182AAC */ void getRightFootPosP();
    /* 80182AB4 */ void getLeftFootPosP();
    /* 80182ABC */ void getMidnaActor();
    /* 80182AC4 */ void checkCopyRodThrowAfter() const;
    /* 80182AD8 */ void checkRide() const;
    /* 80182B9C */ void getRightHandPos() const;
};

struct daHorse_c {
    /* 80182D04 */ void getLashDashStart() const;
    /* 80182D1C */ void checkTurnStandCamera() const;
    /* 80182D48 */ void checkJump() const;
};

struct daAlink_c {
    /* 8009D87C */ bool getE3Zhint();
    /* 800D2ABC */ void checkCutLargeTurnState() const;
    /* 800DE884 */ void checkBowCameraArrowPosP(s16*, s16*);
    /* 800E1390 */ void getCopyRodCameraActor();
    /* 800F3CF8 */ void checkCanoeRideTandem();
    /* 80112474 */ void checkIronBallThrowMode() const;
    /* 801124B4 */ void checkIronBallThrowReturnMode() const;
    /* 80133EF0 */ void checkMidnaLockJumpPoint() const;
    /* 8018280C */ void getChainGrabActor();
    /* 80182814 */ void checkCokkoGlide() const;
    /* 8018283C */ void checkCameraLargeDamage() const;
    /* 80182870 */ void getHsSubChainTopPos() const;
    /* 80182888 */ void checkCutHeadProc() const;
    /* 8018289C */ void getRideActor();
};

struct dVibration_c {
    /* 8006FA24 */ void StartShock(int, int, cXyz);
};

struct dSv_info_c {
    /* 80035360 */ void isSwitch(int, int) const;
};

struct dSv_event_c {
    /* 800349BC */ void isEventBit(u16) const;
};

struct dStage_roomControl_c {
    /* 80024384 */ void getStatusRoomDt(int);
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C37C */ void getRes(char const*, char const*, dRes_info_c*, int);
};

struct dEvt_control_c {
    /* 800434D8 */ void searchMapEventData(u8);
};

struct dEvent_manager_c {
    /* 80047B1C */ void getMyStaffId(char const*, fopAc_ac_c*, int);
    /* 80047D4C */ void getIsAddvance(int);
    /* 80047E10 */ void getMyActIdx(int, char const* const*, int, int, int);
    /* 8004817C */ void cutEnd(int);
};

struct dDlst_window_c {
    /* 80051AC0 */ void setViewPort(f32, f32, f32, f32, f32, f32);
    /* 80051ADC */ void setScissor(f32, f32, f32, f32);
};

struct _GXColor {};

struct dDlst_effectLine_c {
    /* 800541F4 */ void update(cXyz&, _GXColor&, u16, u16, u16, u16, f32, f32, f32, f32);
};

struct dDemo_object_c {
    /* 80039128 */ void getActiveCamera();
};

struct dCstick_c {
    /* 8008845C */ bool Shift(u32);
};

struct cCcD_ShapeAttr {
    struct Shape {
        /* 80167BBC */ ~Shape();
    };
};

struct dCcS {
    /* 80086D8C */ void ChkCamera(cXyz&, cXyz&, f32, fopAc_ac_c*, fopAc_ac_c*, fopAc_ac_c*);
    /* 80086FBC */ void chkCameraPoint(cXyz const&, cCcD_ShapeAttr::Shape*, fopAc_ac_c*,
                                       fopAc_ac_c*);
};

struct cM3dGCps {
    /* 8026EF88 */ cM3dGCps();
    /* 8026EFA4 */ ~cM3dGCps();
    /* 8026F000 */ void Set(cXyz const&, cXyz const&, f32);
};

struct dCcMassS_Mng {
    /* 80085E6C */ void SetCam(cM3dGCps const&);
    /* 80085EB0 */ void GetResultCam() const;
    /* 80085EB8 */ void GetCamTopPos(Vec*);
};

struct cSAngle {
    /* 80030510 */ ~cSAngle();
    /* 80271004 */ void Val(s16);
    /* 8027100C */ void Val(f32);
    /* 8016C2CC */ void Val() const;
    /* 80270FF8 */ void Val(cSAngle const&);
    /* 80270F98 */ cSAngle(s16);
    /* 80182A48 */ cSAngle();
    /* 80270FC8 */ cSAngle(f32);
    /* 80270F68 */ cSAngle(cSAngle const&);
    /* 80182A6C */ bool operator<(cSAngle const&) const;
    /* 80182A8C */ bool operator>(cSAngle const&) const;
    /* 80182C14 */ void __ops() const;
    /* 80182CA8 */ void operator=(cSAngle const&);
    /* 80271030 */ void Degree() const;
    /* 80271098 */ void Norm() const;
    /* 802710CC */ void Abs() const;
    /* 802710E8 */ void Inv() const;
    /* 802710F8 */ void Sin() const;
    /* 80271120 */ void Cos() const;
    /* 802711A4 */ void operator-(cSAngle const&) const;
    /* 80271228 */ void operator-(s16) const;
    /* 80271148 */ void operator-() const;
    /* 80271174 */ void operator+(cSAngle const&) const;
    /* 802711FC */ void operator+(s16) const;
    /* 802711D4 */ void operator+=(cSAngle const&);
    /* 80271254 */ void operator+=(s16);
    /* 802711E8 */ void operator-=(cSAngle const&);
    /* 80271264 */ void operator*(f32) const;
    /* 802712B4 */ void operator*=(f32);
};

struct dCamMapToolData {
    /* 8015FEB8 */ void Set(s32, s32, fopAc_ac_c*, u16, u8);
};

struct dBgS_LinChk {
    /* 80077D64 */ void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct camera_class {};

struct dCamera_c {
    struct dCamInfo_c {
        /* 8018291C */ dCamInfo_c();
        /* 80182920 */ ~dCamInfo_c();
    };

    /* 8008908C */ void getEvIntData(int*, char*, int);
    /* 80088CB0 */ void getEvIntData(int*, char*);
    /* 80089154 */ void getEvFloatData(f32*, char*, f32);
    /* 80088D90 */ void getEvFloatData(f32*, char*);
    /* 8008933C */ void getEvStringData(char*, char*, char*);
    /* 800894C4 */ void getEvActor(char*);
    /* 800895F4 */ void getEvActor(char*, char*);
    /* 80089730 */ void pauseEvCamera();
    /* 800897E8 */ void fixedFrameEvCamera();
    /* 8008A510 */ void stokerEvCamera();
    /* 8008A974 */ void rollingEvCamera();
    /* 8008B9B0 */ void fixedPositionEvCamera();
    /* 8008BE2C */ void uniformTransEvCamera();
    /* 8008BE50 */ void uniformBrakeEvCamera();
    /* 8008BE74 */ void uniformAcceleEvCamera();
    /* 8008E938 */ void watchActorEvCamera();
    /* 8008FAE8 */ void restorePosEvCamera();
    /* 80090174 */ void talktoEvCamera();
    /* 80090230 */ void maptoolIdEvCamera();
    /* 80090478 */ void styleEvCamera();
    /* 80090514 */ void gameOverEvCamera();
    /* 80091468 */ void tactEvCamera();
    /* 800923B8 */ bool turnToActorEvCamera();
    /* 800923C0 */ void stbWaitEvCamera();
    /* 800924D0 */ void saveEvCamera();
    /* 8009258C */ void loadEvCamera();
    /* 800929AC */ void useItem0EvCamera();
    /* 800937AC */ void useItem1EvCamera();
    /* 80094240 */ void getItemEvCamera();
    /* 80094A70 */ void possessedEvCamera();
    /* 80095010 */ void fixedFramesEvCamera();
    /* 8009544C */ void bSplineEvCamera();
    /* 800956E4 */ void twoActor0EvCamera();
    /* 80095E7C */ void peepHoleEvCamera();
    /* 80095FD0 */ void digHoleEvCamera();
    /* 800965AC */ void hintTalkEvCamera();
    /* 80096EDC */ void bspTransEvCamera();
    /* 80097694 */ bool portalWarpEvCamera();
    /* 8009771C */ void attentionPos(fopAc_ac_c*);
    /* 80097738 */ void directionOf(fopAc_ac_c*);
    /* 8009775C */ void positionOf(fopAc_ac_c*);
    /* 80097778 */ void setFlag(u32);
    /* 8009778C */ void eyePos(fopAc_ac_c*);
    /* 8016008C */ dCamera_c(camera_class*);
    /* 80160304 */ ~dCamera_c();
    /* 80160470 */ void initialize(camera_class*, fopAc_ac_c*, u32, u32);
    /* 801614AC */ void Start();
    /* 801614C4 */ void QuickStart();
    /* 801614D0 */ void Stop();
    /* 801614E8 */ void Stay();
    /* 801614F4 */ void ChangeModeOK(s32);
    /* 80161550 */ void initPad();
    /* 801617B0 */ void updatePad();
    /* 80161D84 */ void initMonitor();
    /* 80161E34 */ void updateMonitor();
    /* 80162088 */ void checkForceLockTarget();
    /* 801622B0 */ void infoReport();
    /* 801622B4 */ void Run();
    /* 80162D38 */ void NotRun();
    /* 80162FB8 */ void V();
    /* 80162FD4 */ void U();
    /* 8016300C */ void SetTrimSize(s32);
    /* 80163028 */ void SetTrimTypeForce(s32);
    /* 80163034 */ void CalcTrimSize();
    /* 80163154 */ void Draw();
    /* 8016317C */ void setStageMapToolData();
    /* 80163340 */ void setMapToolData();
    /* 80163558 */ void SetTagData(fopAc_ac_c*, s32, u16, u8);
    /* 801635AC */ void setRoomMapToolData(dCamMapToolData*, s32, s32);
    /* 801635E4 */ void nextMode(s32);
    /* 80163C38 */ void onModeChange(s32, s32);
    /* 80163D50 */ void ModeFix(s32);
    /* 80163D5C */ void nextType(s32);
    /* 8016444C */ void onTypeChange(s32, s32);
    /* 8016469C */ void onStyleChange(s32, s32);
    /* 801647B0 */ void onRoomChange(s32);
    /* 80164878 */ void getParamTargetActor(s32);
    /* 80164944 */ void GetCameraTypeFromMapToolID(s32, s32);
    /* 80164B64 */ void GetCameraTypeFromCameraName(char const*);
    /* 80164C10 */ void GetCameraTypeFromToolData(stage_camera2_data_class*);
    /* 80164C64 */ void pushInfo(dCamera_c::dCamInfo_c*, s16);
    /* 80164CAC */ void popInfo(dCamera_c::dCamInfo_c*);
    /* 80164D2C */ void heightOf(fopAc_ac_c*);
    /* 80164E20 */ void relationalPos(fopAc_ac_c*, fopAc_ac_c*, cXyz*, f32);
    /* 80164D6C */ void relationalPos(fopAc_ac_c*, cXyz*);
    /* 80165104 */ void setUSOAngle();
    /* 80165158 */ void getUSOAngle(cSAngle);
    /* 8016517C */ void pointInSight(cXyz*);
    /* 80167C24 */ void radiusActorInSight(fopAc_ac_c*, fopAc_ac_c*, fopAc_ac_c*);
    /* 80165238 */ void radiusActorInSight(fopAc_ac_c*, fopAc_ac_c*, cXyz*, cXyz*, f32, s16, f32);
    /* 801657EC */ void groundHeight(cXyz*);
    /* 801658C0 */ void lineBGCheck(cXyz*, cXyz*, dBgS_LinChk*, u32);
    /* 80165AF0 */ void lineBGCheck(cXyz*, cXyz*, u32);
    /* 801659F4 */ void lineBGCheck(cXyz*, cXyz*, cXyz*, u32);
    /* 80165B60 */ void lineCollisionCheckBush(cXyz*, cXyz*);
    /* 80165CE0 */ void compWallMargin(cXyz*, cXyz*, f32);
    /* 80165EF4 */ void defaultTriming();
    /* 80165FB4 */ void setView(f32, f32, f32, f32);
    /* 8016608C */ void forwardCheckAngle();
    /* 80166764 */ void bumpCheck(u32);
    /* 80167BF8 */ void lineBGCheckBoth(cXyz*, cXyz*, dBgS_LinChk*, u32);
    /* 80167CD8 */ void jutOutCheck(cXyz*, f32);
    /* 80167E3C */ void tooNearEscape(cXyz*);
    /* 80167EF4 */ void getWaterSurfaceHeight(cXyz*);
    /* 80167FEC */ void checkGroundInfo();
    /* 80168744 */ void chaseCamera(s32);
    /* 8016C384 */ void lockonCamera(s32);
    /* 8016E448 */ void getMsgCmdSpeaker();
    /* 8016E4A4 */ void getMsgCmdCut(s32);
    /* 8016E4F4 */ void talktoCamera(s32);
    /* 80174E18 */ void talkBasePos(fopAc_ac_c*);
    /* 80174E34 */ void talkEyePos(fopAc_ac_c*);
    /* 80174EA4 */ bool CalcSubjectAngle(s16*, s16*);
    /* 80174EAC */ void SaveZoomRatio();
    /* 80174ED4 */ void subjectCamera(s32);
    /* 80176074 */ void magneCamera(s32);
    /* 801767F8 */ void colosseumCamera(s32);
    /* 80176DF0 */ bool test1Camera(s32);
    /* 80176DF8 */ bool test2Camera(s32);
    /* 80176E00 */ void towerCamera(s32);
    /* 80178E50 */ void hookshotCamera(s32);
    /* 80179590 */ void railCamera(s32);
    /* 8017A2A0 */ void paraRailCamera(s32);
    /* 8017ADC0 */ void rideCamera(s32);
    /* 8017D974 */ bool manualCamera(s32);
    /* 8017D97C */ void observeCamera(s32);
    /* 8017DFAC */ void fixedFrameCamera(s32);
    /* 8017E730 */ void fixedPositionCamera(s32);
    /* 8017F25C */ void oneSideCamera(s32);
    /* 8017F828 */ void eventCamera(s32);
    /* 8018050C */ void currentEvCamera();
    /* 801806D4 */ bool letCamera(s32);
    /* 801806DC */ void setEventRecoveryTrans(s16);
    /* 80180738 */ void runEventRecoveryTrans();
    /* 80180A40 */ void EventRecoverNotime();
    /* 80180AA8 */ void Set(cXyz, cXyz);
    /* 80180AE0 */ void Set(cXyz, cXyz, f32, s16);
    /* 80180B40 */ void Set(cXyz, cXyz, s16, f32);
    /* 80180C18 */ void Reset(cXyz, cXyz);
    /* 80180C68 */ void Reset();
    /* 80180BA0 */ void Reset(cXyz, cXyz, f32, s16);
    /* 80180D24 */ void shakeCamera();
    /* 80181000 */ void StartShake(s32, u8*, s32, cXyz);
    /* 80181158 */ void StopShake();
    /* 80181170 */ void StartBlure(int, fopAc_ac_c*, f32, f32);
    /* 801811B8 */ void ResetBlure();
    /* 80181208 */ void SetBlureAlpha(f32);
    /* 80181210 */ void SetBlureScale(f32, f32, f32);
    /* 80181220 */ void SetBlurePosition(f32, f32, f32);
    /* 80181278 */ void SetBlureActor(fopAc_ac_c*);
    /* 80181280 */ void blureCamera();
    /* 80181490 */ void onHorseDush();
    /* 80181500 */ void GetForceLockOnActor();
    /* 80181534 */ void ForceLockOn(fopAc_ac_c*);
    /* 80181560 */ void ForceLockOff(unsigned int);
    /* 8018159C */ void ForceLockOff(fopAc_ac_c*);
    /* 80181E20 */ void Up();
    /* 80181E64 */ void Eye();
    /* 80181E98 */ void Center();
    /* 8018295C */ void footHeightOf(fopAc_ac_c*);
    /* 80182964 */ void push_any_key();
    /* 8018296C */ void clrFlag(u32);
    /* 80182980 */ void chkFlag(u32);
    /* 801829AC */ void Bank();
};

struct dCamSetup_c {
    /* 80088668 */ dCamSetup_c();
    /* 800888B8 */ ~dCamSetup_c();
    /* 80088918 */ void CheckLatitudeRange(s16*);
    /* 80088988 */ void PlayerHideDist();
    /* 80182BB8 */ void CheckFlag2(u16);
    /* 80182BD0 */ void CheckFlag(u16);
    /* 80182BE8 */ void WaitRollSpeed();
    /* 80182BF0 */ void WaitRollTimer();
    /* 80182C1C */ void ThrowTimer();
    /* 80182C24 */ void ThrowCushion();
    /* 80182C2C */ void ThrowVAngle();
    /* 80182C34 */ void ThrowCtrAdjust();
    /* 80182CEC */ void ChargeBRatio();
    /* 80182CF4 */ void ChargeTimer();
    /* 80182CFC */ void ChargeLatitude();
};

struct dCamParam_c {
    /* 800884F0 */ dCamParam_c(s32);
    /* 8008858C */ ~dCamParam_c();
    /* 800885D4 */ void Change(s32);
    /* 80088620 */ void SearchStyle(u32);
    /* 80182C60 */ void Arg2(s16);
    /* 80182C3C */ void Arg2();
    /* 80182C48 */ void Arg1();
    /* 80182C6C */ void Arg1(u8);
    /* 80182C50 */ void Arg0();
    /* 80182C74 */ void Arg0(u8);
    /* 80182C7C */ void Fovy(u8);
    /* 80182C58 */ void Fovy();
    /* 80182C8C */ void Flag(s32, u16);
    /* 80182CB4 */ void CheckFlag(u16);
    /* 80182CD0 */ void Val(s32, int);
};

struct dCamMath {
    /* 8008813C */ void rationalBezierRatio(f32, f32);
    /* 80088284 */ void zoomFovy(f32, f32);
    /* 8008831C */ void xyzRotateX(cXyz&, cSAngle);
    /* 80088384 */ void xyzRotateY(cXyz&, cSAngle);
    /* 800883EC */ void xyzHorizontalDistance(cXyz&, cXyz&);
};

struct dCamForcusLine {
    /* 801824C8 */ void Init();
    /* 80182560 */ void Draw();
    /* 801825E4 */ void Off();
};

struct dBgS_SphChk {
    /* 80078A14 */ dBgS_SphChk();
    /* 80078AC0 */ ~dBgS_SphChk();
};

struct dBgS_RoofChk {
    /* 80078FF4 */ dBgS_RoofChk();
    /* 80079090 */ ~dBgS_RoofChk();
};

struct dBgS_PolyPassChk {
    /* 80078E68 */ void SetObj();
    /* 80078E74 */ void ClrObj();
    /* 80078E80 */ void SetCam();
    /* 80078E8C */ void ClrCam();
    /* 80078EEC */ void SetUnderwaterRoof();
};

struct dBgS_GndChk {
    /* 8007757C */ dBgS_GndChk();
    /* 800775F0 */ ~dBgS_GndChk();
};

struct dBgS_CamSphChk {
    /* 80165E74 */ ~dBgS_CamSphChk();
};

struct dBgS_CamLinChk {
    /* 80077DA4 */ dBgS_CamLinChk();
    /* 80077E00 */ ~dBgS_CamLinChk();
};

struct dBgS_CamGndChk_Wtr {
    /* 80077A00 */ dBgS_CamGndChk_Wtr();
    /* 80077A98 */ ~dBgS_CamGndChk_Wtr();
};

struct dBgS_CamGndChk {
    /* 80077988 */ ~dBgS_CamGndChk();
};

struct cBgS_PolyInfo {};

struct csXyz {};

struct dBgS {
    /* 80074ABC */ void ChkMoveBG(cBgS_PolyInfo const&);
    /* 80074EF0 */ void GetGroundCode(cBgS_PolyInfo const&);
    /* 80074F40 */ void GetCamMoveBG(cBgS_PolyInfo const&);
    /* 80074F90 */ void GetRoomCamId(cBgS_PolyInfo const&);
    /* 80075080 */ void GetGrpSoundId(cBgS_PolyInfo const&);
    /* 800750D0 */ void ChkGrpInf(cBgS_PolyInfo const&, u32);
    /* 8007549C */ void RoofChk(dBgS_RoofChk*);
    /* 80075688 */ void SphChk(dBgS_SphChk*, void*);
    /* 8007595C */ void MoveBgMatrixCrrPos(cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
};

struct dAttention_c {
    /* 8007353C */ void LockonTarget(s32);
    /* 800735DC */ void LockonReleaseDistanse();
    /* 80073734 */ void ActionTarget(s32);
    /* 8007378C */ void CheckObjectTarget(s32);
    /* 800737E4 */ void LockonTruth();
    /* 8016E424 */ void LockEdge();
    /* 80182994 */ void GetCheckObjectCount();
    /* 80182AD0 */ void keepLock(int);
};

struct d2DBSplinePath {
    /* 80097878 */ void Init(s32, s32);
    /* 80097B68 */ void Spot(f32*, f32);
    /* 801828D4 */ ~d2DBSplinePath();
};

struct camera_process_class {};

struct cSPolar {
    /* 802716EC */ void Xyz() const;
};

struct cSGlobe {
    /* 8007167C */ ~cSGlobe();
    /* 8008E774 */ void operator=(cSGlobe const&);
    /* 80182C84 */ void U() const;
    /* 8008E894 */ void U(cSAngle const&);
    /* 80182A08 */ void V() const;
    /* 8008FA58 */ void V(cSAngle const&);
    /* 8016E420 */ cSGlobe();
    /* 80271820 */ cSGlobe(f32, s16, s16);
    /* 80271880 */ cSGlobe(cXyz const&);
    /* 802717F0 */ cSGlobe(cSGlobe const&);
    /* 80271850 */ cSGlobe(f32, cSAngle const&, cSAngle const&);
    /* 80182A64 */ void R() const;
    /* 80182A4C */ void R(f32);
    /* 802719A4 */ void Val(f32, s16, s16);
    /* 80271A08 */ void Val(f32, cSAngle const&, cSAngle const&);
    /* 80271A70 */ void Val(cXyz const&);
    /* 80271AB4 */ void Xyz() const;
    /* 80271B7C */ void Invert();
};

struct cM_rnd_c {
    /* 80053CDC */ void init(int, int, int);
};

struct cM3dGSph {
    /* 8026F664 */ void Set(cXyz const&, f32);
};

struct cM3dGPla {
    /* 8001DB90 */ ~cM3dGPla();
    /* 801411F0 */ cM3dGPla();
    /* 801829EC */ void GetNP();
};

struct cM3dGLin {
    /* 80036A5C */ ~cM3dGLin();
    /* 8026F2A8 */ cM3dGLin(cXyz const&, cXyz const&);
    /* 8026F31C */ void SetStartEnd(Vec const&, Vec const&);
};

struct cM3dGCyl {
    /* 80030E3C */ ~cM3dGCyl();
    /* 8026F0A8 */ cM3dGCyl(cXyz const*, f32, f32);
};

struct cDegree {
    /* 800882E0 */ ~cDegree();
    /* 8027134C */ cDegree(f32);
    /* 80271418 */ void Cos() const;
    /* 80271440 */ void Tan() const;
};

struct cBgS_LinChk {
    /* 801829F0 */ void GetCross();
};

struct cBgS_GndChk {
    /* 80267D28 */ void SetPos(cXyz const*);
};

struct cBgS {
    /* 800743B4 */ void LineCross(cBgS_LinChk*);
    /* 800744A0 */ void GroundCross(cBgS_GndChk*);
    /* 80074618 */ void GetActorPointer(int) const;
    /* 80074744 */ void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct cBgD_Vtx_t {};

struct cAngle {
    /* 80182D28 */ void d2s(f32);
};

struct Z2StatusMgr {
    /* 802B6760 */ void setCameraPolygonPos(Vec*);
    /* 802B6784 */ void setCameraGroupInfo(u8);
    /* 802B6788 */ void setCameraInWaterDepth(f32);
};

struct JAISoundID {};

struct Z2SeMgr {
    /* 802AC50C */ void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2Audience {
    /* 802BD2DC */ void setAudioCamera(f32 (*)[4], Vec&, Vec&, f32, f32, bool, int, bool);
};

//
// Forward References:
//

static void sph_chk_callback(dBgS_SphChk*, cBgD_Vtx_t*, int, int, int, cM3dGPla*, void*);
void dCam_getAngleY(camera_class*);
void dCam_getAngleX(camera_class*);
void dCam_getControledAngleY(camera_class*);
void dCam_getCamera();
void dCam_getBody();
static void preparation(camera_process_class*);
static void view_setup(camera_process_class*);
static void store(camera_process_class*);
static void camera_execute(camera_process_class*);
static void camera_draw(camera_process_class*);
static void init_phase1(camera_class*);
static void init_phase2(camera_class*);
static void camera_create(camera_class*);
static void camera_delete(camera_process_class*);
static bool is_camera_delete(void*);
static void daAlink_getAlinkActorClass();
static void dComIfGs_isTmpBit(u16);
static void dComIfGp_getAttention();
static void dComIfG_Bgsp();
static void JMAFastSqrt(f32);
static void dComIfGp_evmng_cameraPlay();
static void fopAcM_GetParam(void const*);

extern "C" static void func_8015FA2C();
extern "C" static void func_8015FA4C();
extern "C" static void func_8015FADC();
extern "C" static void func_8015FB28();
extern "C" static void func_8015FBF8();
extern "C" void Set__15dCamMapToolDataFllP10fopAc_ac_cUsUc();
extern "C" void __ct__9dCamera_cFP12camera_class();
extern "C" static void func_801602C4();
extern "C" static void func_80160300();
extern "C" void __dt__9dCamera_cFv();
extern "C" void initialize__9dCamera_cFP12camera_classP10fopAc_ac_cUlUl();
extern "C" void Start__9dCamera_cFv();
extern "C" void QuickStart__9dCamera_cFv();
extern "C" void Stop__9dCamera_cFv();
extern "C" void Stay__9dCamera_cFv();
extern "C" void ChangeModeOK__9dCamera_cFl();
extern "C" void initPad__9dCamera_cFv();
extern "C" void updatePad__9dCamera_cFv();
extern "C" void initMonitor__9dCamera_cFv();
extern "C" void updateMonitor__9dCamera_cFv();
extern "C" void checkForceLockTarget__9dCamera_cFv();
extern "C" void infoReport__9dCamera_cFv();
extern "C" void Run__9dCamera_cFv();
extern "C" void NotRun__9dCamera_cFv();
extern "C" void V__9dCamera_cFv();
extern "C" void U__9dCamera_cFv();
extern "C" void SetTrimSize__9dCamera_cFl();
extern "C" void SetTrimTypeForce__9dCamera_cFl();
extern "C" void CalcTrimSize__9dCamera_cFv();
extern "C" void Draw__9dCamera_cFv();
extern "C" void setStageMapToolData__9dCamera_cFv();
extern "C" void setMapToolData__9dCamera_cFv();
extern "C" void SetTagData__9dCamera_cFP10fopAc_ac_clUsUc();
extern "C" void setRoomMapToolData__9dCamera_cFP15dCamMapToolDatall();
extern "C" void nextMode__9dCamera_cFl();
extern "C" void onModeChange__9dCamera_cFll();
extern "C" void ModeFix__9dCamera_cFl();
extern "C" void nextType__9dCamera_cFl();
extern "C" void onTypeChange__9dCamera_cFll();
extern "C" void onStyleChange__9dCamera_cFll();
extern "C" void onRoomChange__9dCamera_cFl();
extern "C" void getParamTargetActor__9dCamera_cFl();
extern "C" void GetCameraTypeFromMapToolID__9dCamera_cFll();
extern "C" void GetCameraTypeFromCameraName__9dCamera_cFPCc();
extern "C" void GetCameraTypeFromToolData__9dCamera_cFP24stage_camera2_data_class();
extern "C" void pushInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_cs();
extern "C" void popInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_c();
extern "C" void heightOf__9dCamera_cFP10fopAc_ac_c();
extern "C" void relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz();
extern "C" void relationalPos__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP4cXyzf();
extern "C" void setUSOAngle__9dCamera_cFv();
extern "C" void getUSOAngle__9dCamera_cF7cSAngle();
extern "C" void pointInSight__9dCamera_cFP4cXyz();
extern "C" void radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP4cXyzP4cXyzfsf();
extern "C" void groundHeight__9dCamera_cFP4cXyz();
extern "C" void lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl();
extern "C" void lineBGCheck__9dCamera_cFP4cXyzP4cXyzP4cXyzUl();
extern "C" void lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl();
extern "C" void lineCollisionCheckBush__9dCamera_cFP4cXyzP4cXyz();
extern "C" static void sph_chk_callback__FP11dBgS_SphChkP10cBgD_Vtx_tiiiP8cM3dGPlaPv();
extern "C" void compWallMargin__9dCamera_cFP4cXyzP4cXyzf();
extern "C" void __dt__14dBgS_CamSphChkFv();
extern "C" void defaultTriming__9dCamera_cFv();
extern "C" void setView__9dCamera_cFffff();
extern "C" void forwardCheckAngle__9dCamera_cFv();
extern "C" void bumpCheck__9dCamera_cFUl();
extern "C" void __dt__Q214cCcD_ShapeAttr5ShapeFv();
extern "C" void lineBGCheckBoth__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl();
extern "C" void radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP10fopAc_ac_c();
extern "C" static void func_80167CB8();
extern "C" void jutOutCheck__9dCamera_cFP4cXyzf();
extern "C" void tooNearEscape__9dCamera_cFP4cXyz();
extern "C" void getWaterSurfaceHeight__9dCamera_cFP4cXyz();
extern "C" void checkGroundInfo__9dCamera_cFv();
extern "C" void chaseCamera__9dCamera_cFl();
extern "C" static void func_8016C25C();
extern "C" void Val__7cSAngleCFv();
extern "C" static void func_8016C2D4();
extern "C" void getHoldA__8mDoCPd_cFUl();
extern "C" static void func_8016C330();
extern "C" static void func_8016C34C();
extern "C" static void func_8016C368();
extern "C" void lockonCamera__9dCamera_cFl();
extern "C" static void func_8016E410();
extern "C" void __ct__7cSGlobeFv();
extern "C" void LockEdge__12dAttention_cFv();
extern "C" void getMsgCmdSpeaker__9dCamera_cFv();
extern "C" void getMsgCmdCut__9dCamera_cFl();
extern "C" void talktoCamera__9dCamera_cFl();
extern "C" void talkBasePos__9dCamera_cFP10fopAc_ac_c();
extern "C" void talkEyePos__9dCamera_cFP10fopAc_ac_c();
extern "C" static void func_80174E50();
extern "C" bool CalcSubjectAngle__9dCamera_cFPsPs();
extern "C" void SaveZoomRatio__9dCamera_cFv();
extern "C" void subjectCamera__9dCamera_cFl();
extern "C" void magneCamera__9dCamera_cFl();
extern "C" void colosseumCamera__9dCamera_cFl();
extern "C" bool test1Camera__9dCamera_cFl();
extern "C" bool test2Camera__9dCamera_cFl();
extern "C" void towerCamera__9dCamera_cFl();
extern "C" void hookshotCamera__9dCamera_cFl();
extern "C" void railCamera__9dCamera_cFl();
extern "C" void paraRailCamera__9dCamera_cFl();
extern "C" void rideCamera__9dCamera_cFl();
extern "C" static void func_8017D934();
extern "C" bool manualCamera__9dCamera_cFl();
extern "C" void observeCamera__9dCamera_cFl();
extern "C" void fixedFrameCamera__9dCamera_cFl();
extern "C" void fixedPositionCamera__9dCamera_cFl();
extern "C" void oneSideCamera__9dCamera_cFl();
extern "C" void eventCamera__9dCamera_cFl();
extern "C" void currentEvCamera__9dCamera_cFv();
extern "C" bool letCamera__9dCamera_cFl();
extern "C" void setEventRecoveryTrans__9dCamera_cFs();
extern "C" void runEventRecoveryTrans__9dCamera_cFv();
extern "C" void EventRecoverNotime__9dCamera_cFv();
extern "C" void Set__9dCamera_cF4cXyz4cXyz();
extern "C" void Set__9dCamera_cF4cXyz4cXyzfs();
extern "C" void Set__9dCamera_cF4cXyz4cXyzsf();
extern "C" void Reset__9dCamera_cF4cXyz4cXyzfs();
extern "C" void Reset__9dCamera_cF4cXyz4cXyz();
extern "C" void Reset__9dCamera_cFv();
extern "C" void shakeCamera__9dCamera_cFv();
extern "C" void StartShake__9dCamera_cFlPUcl4cXyz();
extern "C" void StopShake__9dCamera_cFv();
extern "C" void StartBlure__9dCamera_cFiP10fopAc_ac_cff();
extern "C" void ResetBlure__9dCamera_cFv();
extern "C" void SetBlureAlpha__9dCamera_cFf();
extern "C" void SetBlureScale__9dCamera_cFfff();
extern "C" void SetBlurePosition__9dCamera_cFfff();
extern "C" void SetBlureActor__9dCamera_cFP10fopAc_ac_c();
extern "C" void blureCamera__9dCamera_cFv();
extern "C" void onHorseDush__9dCamera_cFv();
extern "C" void GetForceLockOnActor__9dCamera_cFv();
extern "C" void ForceLockOn__9dCamera_cFP10fopAc_ac_c();
extern "C" void ForceLockOff__9dCamera_cFUi();
extern "C" void ForceLockOff__9dCamera_cFP10fopAc_ac_c();
extern "C" void dCam_getAngleY__FP12camera_class();
extern "C" void dCam_getAngleX__FP12camera_class();
extern "C" void dCam_getControledAngleY__FP12camera_class();
extern "C" void dCam_getCamera__Fv();
extern "C" void dCam_getBody__Fv();
extern "C" static void preparation__FP20camera_process_class();
extern "C" static void view_setup__FP20camera_process_class();
extern "C" static void store__FP20camera_process_class();
extern "C" void Up__9dCamera_cFv();
extern "C" void Eye__9dCamera_cFv();
extern "C" void Center__9dCamera_cFv();
extern "C" static void camera_execute__FP20camera_process_class();
extern "C" static void camera_draw__FP20camera_process_class();
extern "C" static void init_phase1__FP12camera_class();
extern "C" static void init_phase2__FP12camera_class();
extern "C" static void camera_create__FP12camera_class();
extern "C" static void camera_delete__FP20camera_process_class();
extern "C" static bool is_camera_delete__FPv();
extern "C" void Init__14dCamForcusLineFv();
extern "C" void Draw__14dCamForcusLineFv();
extern "C" void Off__14dCamForcusLineFv();
extern "C" void __sinit_d_camera_cpp();
extern "C" static void func_801827EC();
extern "C" static void func_801827F4();
extern "C" static void func_801827FC();
extern "C" static void func_80182804();
extern "C" void getChainGrabActor__9daAlink_cFv();
extern "C" void checkCokkoGlide__9daAlink_cCFv();
extern "C" void checkCameraLargeDamage__9daAlink_cCFv();
extern "C" void getHsSubChainTopPos__9daAlink_cCFv();
extern "C" static void daAlink_getAlinkActorClass__Fv();
extern "C" void checkCutHeadProc__9daAlink_cCFv();
extern "C" void getRideActor__9daAlink_cFv();
extern "C" static void dComIfGs_isTmpBit__FUs();
extern "C" void __dt__14d2DBSplinePathFv();
extern "C" void __ct__Q29dCamera_c10dCamInfo_cFv();
extern "C" void __dt__Q29dCamera_c10dCamInfo_cFv();
extern "C" void footHeightOf__9dCamera_cFP10fopAc_ac_c();
extern "C" void push_any_key__9dCamera_cFv();
extern "C" void clrFlag__9dCamera_cFUl();
extern "C" void chkFlag__9dCamera_cFUl();
extern "C" void GetCheckObjectCount__12dAttention_cFv();
extern "C" static void dComIfGp_getAttention__Fv();
extern "C" void Bank__9dCamera_cFv();
extern "C" void checkThrowDamage__9daPy_py_cCFv();
extern "C" void GetNP__8cM3dGPlaFv();
extern "C" void GetCross__11cBgS_LinChkFv();
extern "C" static void dComIfG_Bgsp__Fv();
extern "C" void V__7cSGlobeCFv();
extern "C" void checkGoronSideMove__9daPy_py_cCFv();
extern "C" static void JMAFastSqrt__Ff();
extern "C" void fabsf__3stdFf();
extern "C" void __ct__7cSAngleFv();
extern "C" void R__7cSGlobeFf();
extern "C" static void dComIfGp_evmng_cameraPlay__Fv();
extern "C" void R__7cSGlobeCFv();
extern "C" bool __lt__7cSAngleCFRC7cSAngle();
extern "C" bool __gt__7cSAngleCFRC7cSAngle();
extern "C" void getRightFootPosP__9daPy_py_cFv();
extern "C" void getLeftFootPosP__9daPy_py_cFv();
extern "C" void getMidnaActor__9daPy_py_cFv();
extern "C" void checkCopyRodThrowAfter__9daPy_py_cCFv();
extern "C" void keepLock__12dAttention_cFi();
extern "C" void checkRide__9daPy_py_cCFv();
extern "C" void getRightHandPos__9daPy_py_cCFv();
extern "C" void CheckFlag2__11dCamSetup_cFUs();
extern "C" void CheckFlag__11dCamSetup_cFUs();
extern "C" void WaitRollSpeed__11dCamSetup_cFv();
extern "C" void WaitRollTimer__11dCamSetup_cFv();
extern "C" void getTrigA__8mDoCPd_cFUl();
extern "C" void __ops__7cSAngleCFv();
extern "C" void ThrowTimer__11dCamSetup_cFv();
extern "C" void ThrowCushion__11dCamSetup_cFv();
extern "C" void ThrowVAngle__11dCamSetup_cFv();
extern "C" void ThrowCtrAdjust__11dCamSetup_cFv();
extern "C" void Arg2__11dCamParam_cFv();
extern "C" void Arg1__11dCamParam_cFv();
extern "C" void Arg0__11dCamParam_cFv();
extern "C" void Fovy__11dCamParam_cFv();
extern "C" void Arg2__11dCamParam_cFs();
extern "C" void Arg1__11dCamParam_cFUc();
extern "C" void Arg0__11dCamParam_cFUc();
extern "C" void Fovy__11dCamParam_cFUc();
extern "C" void U__7cSGlobeCFv();
extern "C" void Flag__11dCamParam_cFlUs();
extern "C" void __as__7cSAngleFRC7cSAngle();
extern "C" void CheckFlag__11dCamParam_cFUs();
extern "C" void Val__11dCamParam_cFli();
extern "C" void ChargeBRatio__11dCamSetup_cFv();
extern "C" void ChargeTimer__11dCamSetup_cFv();
extern "C" void ChargeLatitude__11dCamSetup_cFv();
extern "C" void getLashDashStart__9daHorse_cCFv();
extern "C" void fabs__3stdFf();
extern "C" void checkTurnStandCamera__9daHorse_cCFv();
extern "C" void d2s__6cAngleFf();
extern "C" void checkJump__9daHorse_cCFv();
extern "C" static void fopAcM_GetParam__FPCv();
extern "C" void checkNoAttention__12daTagMstop_cCFv();
extern "C" void checkNoAttention__12daTagMhint_cCFv();
extern "C" void set__4cXyzFfff();
extern "C" void checkEndMessage__12daTagMwait_cFv();
extern "C" extern char const* const d_d_camera__stringBase0;
extern "C" extern void* d_d_camera__lit_4478[3];
extern "C" extern void* d_d_camera__lit_4479[3];
extern "C" extern void* d_d_camera__lit_4480[3];
extern "C" extern void* d_d_camera__lit_4481[3];
extern "C" extern void* d_d_camera__lit_4482[3];
extern "C" extern void* d_d_camera__lit_4483[3];
extern "C" extern void* d_d_camera__lit_4484[3];
extern "C" extern void* d_d_camera__lit_4485[3];
extern "C" extern void* d_d_camera__lit_4486[3];
extern "C" extern void* d_d_camera__lit_4487[3];
extern "C" extern void* d_d_camera__lit_4488[3];
extern "C" extern void* d_d_camera__lit_4489[3];
extern "C" extern void* d_d_camera__lit_4490[3];
extern "C" extern void* d_d_camera__lit_4491[3];
extern "C" extern void* d_d_camera__lit_4492[3];
extern "C" extern void* d_d_camera__lit_4493[3];
extern "C" extern void* d_d_camera__lit_4494[3];
extern "C" extern void* d_d_camera__lit_4495[3];
extern "C" extern void* d_d_camera__lit_4496[3];
extern "C" extern void* d_d_camera__lit_4497[3];
extern "C" extern u8 engine_tbl__9dCamera_c[240];
extern "C" extern void* lit_16620[3];
extern "C" extern void* lit_16621[3];
extern "C" extern void* lit_16622[3];
extern "C" extern void* lit_16623[3];
extern "C" extern void* lit_16624[3];
extern "C" extern void* lit_16625[3];
extern "C" extern void* lit_16626[3];
extern "C" extern void* lit_16627[3];
extern "C" extern void* lit_16628[3];
extern "C" extern void* lit_16629[3];
extern "C" extern void* lit_16630[3];
extern "C" extern void* lit_16631[3];
extern "C" extern void* lit_16632[3];
extern "C" extern void* lit_16633[3];
extern "C" extern void* lit_16634[3];
extern "C" extern void* lit_16635[3];
extern "C" extern void* lit_16636[3];
extern "C" extern void* lit_16637[3];
extern "C" extern void* lit_16638[3];
extern "C" extern void* lit_16639[3];
extern "C" extern void* lit_16640[3];
extern "C" extern void* lit_16641[3];
extern "C" extern void* lit_16642[3];
extern "C" extern void* lit_16643[3];
extern "C" extern void* lit_16644[3];
extern "C" extern void* lit_16645[3];
extern "C" extern void* lit_16646[3];
extern "C" extern void* lit_16647[3];
extern "C" extern void* lit_16648[3];
extern "C" extern void* lit_16649[3];
extern "C" extern void* lit_16650[3];
extern "C" extern void* lit_16651[3];
extern "C" extern void* lit_16652[3];
extern "C" extern void* lit_16653[3];
extern "C" extern void* data_803BA650[34];
extern "C" extern void* g_profile_CAMERA[17];
extern "C" extern void* g_profile_CAMERA2[17 + 6 /* padding */];
extern "C" extern void* __vt__14dBgS_CamSphChk[15 + 6 /* padding */];
extern "C" extern void* __vt__14d2DBSplinePath[3 + 4 /* padding */];
extern "C" extern u8 lit_14964[12];
extern "C" extern u8 lit_14968[12 + 4 /* padding */];

//
// External References:
//

void mDoMtx_XrotM(f32 (*)[4], s16);
void mDoMtx_YrotM(f32 (*)[4], s16);
void mDoMtx_ZrotM(f32 (*)[4], s16);
void mDoMtx_lookAt(f32 (*)[4], Vec const*, Vec const*, Vec const*, s16);
void mDoMtx_concatProjView(f32 const (*)[4], f32 const (*)[4], f32 (*)[4]);
void mDoLib_project(Vec*, Vec*);
void fopAcIt_Judge(void* (*)(void*, void*), void*);
void fopAcM_setStageLayer(void*);
void fopAcM_searchFromName4Event(char const*, s16);
void fopCamM_GetParam(camera_class*);
void fpcSch_JudgeForPName(void*, void*);
void fpcSch_JudgeByID(void*, void*);
void dComIfGp_getRoomCamera(int);
void dComIfGp_getRoomArrow(int);
void dComLbG_PhaseHandler(request_of_phase_process_class*, int (**)(void*), void*);
void dPath_GetRoomPath(int, int);
void dKyw_get_wind_vec();
void dKyw_get_wind_pow();
void fopAcM_GetID(void const*);
void fopAcM_GetName(void*);
void dComIfGp_getHorseActor();
void dKy_camera_water_in_status_set(u8);
void dKy_pol_sound_get(cBgS_PolyInfo const*);
void dKy_TeachWind_existence_chk();
void cM_atan2s(f32, f32);
void cM_atan2f(f32, f32);
void cM_rndFX(f32);
void cBgW_CheckBRoof(f32);
void cBgW_CheckBWall(f32);
void cM3d_Len3dSqPntAndSegLine(cM3dGLin const*, Vec const*, Vec*, f32*);
void cM3d_SignedLenPlaAndPos(cM3dGPla const*, Vec const*);
void cM3d_Cross_LinSph_CrossPos(cM3dGSph const&, cM3dGLin const&, Vec*, Vec*);
void cM3d_Cross_CylLin(cM3dGCyl const*, cM3dGLin const*, Vec*, Vec*);
void cM3d_2PlaneLinePosNearPos(cM3dGPla const&, cM3dGPla const&, Vec const*, Vec*);
void operator+(s16, cSAngle const&);
void operator-(s16, cSAngle const&);
void operator delete(void*);

extern "C" void onBlure__13mDoGph_gInf_cFv();
extern "C" void onBlure__13mDoGph_gInf_cFPA4_Cf();
extern "C" void __dt__4cXyzFv();
extern "C" void mDoMtx_XrotM__FPA4_fs();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_ZrotM__FPA4_fs();
extern "C" void mDoMtx_lookAt__FPA4_fPC3VecPC3VecPC3Vecs();
extern "C" void mDoMtx_concatProjView__FPA4_CfPA4_CfPA4_f();
extern "C" void transM__14mDoMtx_stack_cFfff();
extern "C" void scaleM__14mDoMtx_stack_cFRC4cXyz();
extern "C" void __ct__4cXyzFv();
extern "C" void setup__14mDoLib_clipperFffff();
extern "C" void mDoLib_project__FP3VecP3Vec();
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
extern "C" void fopAcM_setStageLayer__FPv();
extern "C" void fopAcM_searchFromName4Event__FPCcs();
extern "C" void __dt__8cM3dGPlaFv();
extern "C" void fopCamM_GetParam__FP12camera_class();
extern "C" void fpcSch_JudgeForPName__FPvPv();
extern "C" void fpcSch_JudgeByID__FPvPv();
extern "C" void getStatusRoomDt__20dStage_roomControl_cFi();
extern "C" void dComIfGp_getRoomCamera__Fi();
extern "C" void dComIfGp_getRoomArrow__Fi();
extern "C" void dComLbG_PhaseHandler__FP30request_of_phase_process_classPPFPv_iPv();
extern "C" void __dt__7cSAngleFv();
extern "C" void __dt__8cM3dGCylFv();
extern "C" void isEventBit__11dSv_event_cCFUs();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void __dt__8cM3dGLinFv();
extern "C" void getActiveCamera__14dDemo_object_cFv();
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
extern "C" void searchMapEventData__14dEvt_control_cFUc();
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
extern "C" void getIsAddvance__16dEvent_manager_cFi();
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
extern "C" void cutEnd__16dEvent_manager_cFi();
extern "C" void dPath_GetRoomPath__Fii();
extern "C" void setViewPort__14dDlst_window_cFffffff();
extern "C" void setScissor__14dDlst_window_cFffff();
extern "C" void init__8cM_rnd_cFiii();
extern "C" void update__18dDlst_effectLine_cFR4cXyzR8_GXColorUsUsUsUsffff();
extern "C" void dKyw_get_wind_vec__Fv();
extern "C" void dKyw_get_wind_pow__Fv();
extern "C" void StartShock__12dVibration_cFii4cXyz();
extern "C" void __dt__7cSGlobeFv();
extern "C" void LockonTarget__12dAttention_cFl();
extern "C" void LockonReleaseDistanse__12dAttention_cFv();
extern "C" void ActionTarget__12dAttention_cFl();
extern "C" void CheckObjectTarget__12dAttention_cFl();
extern "C" void LockonTruth__12dAttention_cFv();
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
extern "C" void GetActorPointer__4cBgSCFi();
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
extern "C" void ChkMoveBG__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetGroundCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetCamMoveBG__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetRoomCamId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetGrpSoundId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void ChkGrpInf__4dBgSFRC13cBgS_PolyInfoUl();
extern "C" void RoofChk__4dBgSFP12dBgS_RoofChk();
extern "C" void SphChk__4dBgSFP11dBgS_SphChkPv();
extern "C" void MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void __dt__14dBgS_CamGndChkFv();
extern "C" void __ct__18dBgS_CamGndChk_WtrFv();
extern "C" void __dt__18dBgS_CamGndChk_WtrFv();
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
extern "C" void __ct__14dBgS_CamLinChkFv();
extern "C" void __dt__14dBgS_CamLinChkFv();
extern "C" void __ct__11dBgS_SphChkFv();
extern "C" void __dt__11dBgS_SphChkFv();
extern "C" void SetObj__16dBgS_PolyPassChkFv();
extern "C" void ClrObj__16dBgS_PolyPassChkFv();
extern "C" void SetCam__16dBgS_PolyPassChkFv();
extern "C" void ClrCam__16dBgS_PolyPassChkFv();
extern "C" void SetUnderwaterRoof__16dBgS_PolyPassChkFv();
extern "C" void __ct__12dBgS_RoofChkFv();
extern "C" void __dt__12dBgS_RoofChkFv();
extern "C" void SetCam__12dCcMassS_MngFRC8cM3dGCps();
extern "C" void GetResultCam__12dCcMassS_MngCFv();
extern "C" void GetCamTopPos__12dCcMassS_MngFP3Vec();
extern "C" void ChkCamera__4dCcSFR4cXyzR4cXyzfP10fopAc_ac_cP10fopAc_ac_cP10fopAc_ac_c();
extern "C" void chkCameraPoint__4dCcSFRC4cXyzPQ214cCcD_ShapeAttr5ShapeP10fopAc_ac_cP10fopAc_ac_c();
extern "C" void rationalBezierRatio__8dCamMathFff();
extern "C" void zoomFovy__8dCamMathFff();
extern "C" void __dt__7cDegreeFv();
extern "C" void xyzRotateX__8dCamMathFR4cXyz7cSAngle();
extern "C" void xyzRotateY__8dCamMathFR4cXyz7cSAngle();
extern "C" void xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz();
extern "C" bool Shift__9dCstick_cFUl();
extern "C" void __ct__11dCamParam_cFl();
extern "C" void __dt__11dCamParam_cFv();
extern "C" void Change__11dCamParam_cFl();
extern "C" void SearchStyle__11dCamParam_cFUl();
extern "C" void __ct__11dCamSetup_cFv();
extern "C" void __dt__11dCamSetup_cFv();
extern "C" void CheckLatitudeRange__11dCamSetup_cFPs();
extern "C" void PlayerHideDist__11dCamSetup_cFv();
extern "C" void getEvIntData__9dCamera_cFPiPc();
extern "C" void getEvFloatData__9dCamera_cFPfPc();
extern "C" void getEvIntData__9dCamera_cFPiPci();
extern "C" void getEvFloatData__9dCamera_cFPfPcf();
extern "C" void getEvStringData__9dCamera_cFPcPcPc();
extern "C" void getEvActor__9dCamera_cFPc();
extern "C" void getEvActor__9dCamera_cFPcPc();
extern "C" void pauseEvCamera__9dCamera_cFv();
extern "C" void fixedFrameEvCamera__9dCamera_cFv();
extern "C" void stokerEvCamera__9dCamera_cFv();
extern "C" void rollingEvCamera__9dCamera_cFv();
extern "C" void fixedPositionEvCamera__9dCamera_cFv();
extern "C" void uniformTransEvCamera__9dCamera_cFv();
extern "C" void uniformBrakeEvCamera__9dCamera_cFv();
extern "C" void uniformAcceleEvCamera__9dCamera_cFv();
extern "C" void __as__7cSGlobeFRC7cSGlobe();
extern "C" void abs__4cXyzCFv();
extern "C" void U__7cSGlobeFRC7cSAngle();
extern "C" void __ami__4cXyzFRC3Vec();
extern "C" void __apl__4cXyzFRC3Vec();
extern "C" void watchActorEvCamera__9dCamera_cFv();
extern "C" void V__7cSGlobeFRC7cSAngle();
extern "C" void restorePosEvCamera__9dCamera_cFv();
extern "C" void talktoEvCamera__9dCamera_cFv();
extern "C" void maptoolIdEvCamera__9dCamera_cFv();
extern "C" void styleEvCamera__9dCamera_cFv();
extern "C" void gameOverEvCamera__9dCamera_cFv();
extern "C" void tactEvCamera__9dCamera_cFv();
extern "C" bool turnToActorEvCamera__9dCamera_cFv();
extern "C" void stbWaitEvCamera__9dCamera_cFv();
extern "C" void saveEvCamera__9dCamera_cFv();
extern "C" void loadEvCamera__9dCamera_cFv();
extern "C" void useItem0EvCamera__9dCamera_cFv();
extern "C" void useItem1EvCamera__9dCamera_cFv();
extern "C" void getItemEvCamera__9dCamera_cFv();
extern "C" void possessedEvCamera__9dCamera_cFv();
extern "C" void fixedFramesEvCamera__9dCamera_cFv();
extern "C" void bSplineEvCamera__9dCamera_cFv();
extern "C" void twoActor0EvCamera__9dCamera_cFv();
extern "C" void peepHoleEvCamera__9dCamera_cFv();
extern "C" void digHoleEvCamera__9dCamera_cFv();
extern "C" void hintTalkEvCamera__9dCamera_cFv();
extern "C" void bspTransEvCamera__9dCamera_cFv();
extern "C" bool portalWarpEvCamera__9dCamera_cFv();
extern "C" void attentionPos__9dCamera_cFP10fopAc_ac_c();
extern "C" void directionOf__9dCamera_cFP10fopAc_ac_c();
extern "C" void positionOf__9dCamera_cFP10fopAc_ac_c();
extern "C" void setFlag__9dCamera_cFUl();
extern "C" void eyePos__9dCamera_cFP10fopAc_ac_c();
extern "C" void fopAcM_GetID__FPCv();
extern "C" void __as__4cXyzFRC4cXyz();
extern "C" void __ct__4cXyzFRC4cXyz();
extern "C" void Init__14d2DBSplinePathFll();
extern "C" void Spot__14d2DBSplinePathFPff();
extern "C" bool getE3Zhint__9daAlink_cFv();
extern "C" void checkCutLargeTurnState__9daAlink_cCFv();
extern "C" void checkBowCameraArrowPosP__9daAlink_cFPsPs();
extern "C" void getCopyRodCameraActor__9daAlink_cFv();
extern "C" void checkCanoeRideTandem__9daAlink_cFv();
extern "C" void checkIronBallThrowMode__9daAlink_cCFv();
extern "C" void checkIronBallThrowReturnMode__9daAlink_cCFv();
extern "C" void checkMidnaLockJumpPoint__9daAlink_cCFv();
extern "C" void __ct__8cM3dGPlaFv();
extern "C" void fopAcM_GetName__FPv();
extern "C" void checkMagneBootsOn__9daPy_py_cCFv();
extern "C" void dComIfGp_getHorseActor__Fv();
extern "C" void __ct__4cXyzFfff();
extern "C" void getLeftHandPos__9daPy_py_cCFv();
extern "C" void getThrowBoomerangActor__9daPy_py_cFv();
extern "C" void dKy_camera_water_in_status_set__FUc();
extern "C" void dKy_pol_sound_get__FPC13cBgS_PolyInfo();
extern "C" void dKy_TeachWind_existence_chk__Fv();
extern "C" void __pl__4cXyzCFRC3Vec();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void __ml__4cXyzCFf();
extern "C" void __ml__4cXyzCFRC3Vec();
extern "C" void norm__4cXyzCFv();
extern "C" void normalize__4cXyzFv();
extern "C" bool __ne__4cXyzCFRC3Vec();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_atan2f__Fff();
extern "C" void cM_rndFX__Ff();
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
extern "C" void cBgW_CheckBRoof__Ff();
extern "C" void cBgW_CheckBWall__Ff();
extern "C" void cM3d_Len3dSqPntAndSegLine__FPC8cM3dGLinPC3VecP3VecPf();
extern "C" void cM3d_SignedLenPlaAndPos__FPC8cM3dGPlaPC3Vec();
extern "C" void cM3d_Cross_LinSph_CrossPos__FRC8cM3dGSphRC8cM3dGLinP3VecP3Vec();
extern "C" void cM3d_Cross_CylLin__FPC8cM3dGCylPC8cM3dGLinP3VecP3Vec();
extern "C" void cM3d_2PlaneLinePosNearPos__FRC8cM3dGPlaRC8cM3dGPlaPC3VecP3Vec();
extern "C" void __ct__8cM3dGCpsFv();
extern "C" void __dt__8cM3dGCpsFv();
extern "C" void Set__8cM3dGCpsFRC4cXyzRC4cXyzf();
extern "C" void __ct__8cM3dGCylFPC4cXyzff();
extern "C" void __ct__8cM3dGLinFRC4cXyzRC4cXyz();
extern "C" void SetStartEnd__8cM3dGLinFRC3VecRC3Vec();
extern "C" void Set__8cM3dGSphFRC4cXyzf();
extern "C" void __ct__7cSAngleFRC7cSAngle();
extern "C" void __ct__7cSAngleFs();
extern "C" void __ct__7cSAngleFf();
extern "C" void Val__7cSAngleFRC7cSAngle();
extern "C" void Val__7cSAngleFs();
extern "C" void Val__7cSAngleFf();
extern "C" void Degree__7cSAngleCFv();
extern "C" void Norm__7cSAngleCFv();
extern "C" void Abs__7cSAngleCFv();
extern "C" void Inv__7cSAngleCFv();
extern "C" void Sin__7cSAngleCFv();
extern "C" void Cos__7cSAngleCFv();
extern "C" void __mi__7cSAngleCFv();
extern "C" void __pl__7cSAngleCFRC7cSAngle();
extern "C" void __mi__7cSAngleCFRC7cSAngle();
extern "C" void __apl__7cSAngleFRC7cSAngle();
extern "C" void __ami__7cSAngleFRC7cSAngle();
extern "C" void __pl__7cSAngleCFs();
extern "C" void __mi__7cSAngleCFs();
extern "C" void __apl__7cSAngleFs();
extern "C" void __ml__7cSAngleCFf();
extern "C" void __amu__7cSAngleFf();
extern "C" void __pl__FsRC7cSAngle();
extern "C" void __mi__FsRC7cSAngle();
extern "C" void __ct__7cDegreeFf();
extern "C" void Cos__7cDegreeCFv();
extern "C" void Tan__7cDegreeCFv();
extern "C" void Xyz__7cSPolarCFv();
extern "C" void __ct__7cSGlobeFRC7cSGlobe();
extern "C" void __ct__7cSGlobeFfss();
extern "C" void __ct__7cSGlobeFfRC7cSAngleRC7cSAngle();
extern "C" void __ct__7cSGlobeFRC4cXyz();
extern "C" void Val__7cSGlobeFfss();
extern "C" void Val__7cSGlobeFfRC7cSAngleRC7cSAngle();
extern "C" void Val__7cSGlobeFRC4cXyz();
extern "C" void Xyz__7cSGlobeCFv();
extern "C" void Invert__7cSGlobeFv();
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void setCameraPolygonPos__11Z2StatusMgrFP3Vec();
extern "C" void setCameraGroupInfo__11Z2StatusMgrFUc();
extern "C" void setCameraInWaterDepth__11Z2StatusMgrFf();
extern "C" void setAudioCamera__10Z2AudienceFPA4_fR3VecR3Vecffbib();
extern "C" void __dl__FPv();
extern "C" void PSMTXCopy();
extern "C" void PSMTXInverse();
extern "C" void PSMTXTrans();
extern "C" void PSMTXMultVec();
extern "C" void PSMTXMultVecSR();
extern "C" void C_MTXPerspective();
extern "C" void PSVECAdd();
extern "C" void PSVECSubtract();
extern "C" void PSVECSquareMag();
extern "C" void PSVECDotProduct();
extern "C" void PSVECCrossProduct();
extern "C" void __register_global_object();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void __ptmf_scall();
extern "C" void __cvt_fp2unsigned();
extern "C" void _savefpr_29();
extern "C" void _restfpr_29();
extern "C" void _savegpr_16();
extern "C" void _savegpr_18();
extern "C" void _savegpr_21();
extern "C" void _savegpr_22();
extern "C" void _savegpr_23();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_16();
extern "C" void _restgpr_18();
extern "C" void _restgpr_21();
extern "C" void _restgpr_22();
extern "C" void _restgpr_23();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void strncmp();
extern "C" void strcmp();
extern "C" void tan();
extern "C" extern u8 const tempBitLabels__20dSv_event_tmp_flag_c[370 + 2 /* padding */];
extern "C" extern u8 g_mDoMtx_identity[48 + 24 /* padding */];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* g_fopCam_Method[5 + 1 /* padding */];
extern "C" extern void* g_fopVw_Method[5 + 1 /* padding */];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern void* __vt__8cM3dGLin[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__18dDlst_effectLine_c[3];
extern "C" extern void* __vt__14dBgS_CamGndChk[12];
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern f32 Zero__4cXyz[3];
extern "C" extern u8 BaseY__4cXyz[12];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 g_dComIfGoat_gameInfo[4 + 4 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern u8 data_80450B44[4];
extern "C" extern u8 struct_80450BE4[4];
extern "C" extern u8 stopStatus__10fopAc_ac_c[4];
extern "C" extern u8 struct_80450D64[4];
extern "C" extern u8 m_object__7dDemo_c[4];
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
extern "C" extern u8 _0__7cSAngle[2 + 2 /* padding */];
extern "C" extern u8 _90__7cSAngle[2 + 2 /* padding */];
extern "C" extern u8 _180__7cSAngle[2 + 2 /* padding */];
extern "C" extern u8 _270__7cSAngle[2 + 6 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

//
// Declarations:
//

/* 8015FA2C-8015FA4C 0020+00 s=2 e=0 z=0  None .text      limitf__22@unnamed@d_camera_cpp@Ffff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8015FA2C() {
    nofralloc
#include "asm/d/d_camera/func_8015FA2C.s"
}
#pragma pop

/* 8015FA4C-8015FADC 0090+00 s=1 e=0 z=0  None .text
 * hideActor__22@unnamed@d_camera_cpp@FP10fopAc_ac_c            */
//	8015FA78: 804061C0 (g_dComIfG_gameInfo)
//	8015FA7C: 804061C0 (g_dComIfG_gameInfo)
//	8015FAA4: 804061C0 (g_dComIfG_gameInfo)
//	8015FAA8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8015FA4C() {
    nofralloc
#include "asm/d/d_camera/func_8015FA4C.s"
}
#pragma pop

/* 8015FADC-8015FB28 004C+00 s=1 e=0 z=0  None .text defaultRadius__22@unnamed@d_camera_cpp@FffPf
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8015FADC() {
    nofralloc
#include "asm/d/d_camera/func_8015FADC.s"
}
#pragma pop

/* 8015FB28-8015FBF8 00D0+00 s=1 e=0 z=0  None .text
 * posInLine2D__22@unnamed@d_camera_cpp@FP4cXyzP4cXyzP4cXyz     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8015FB28() {
    nofralloc
#include "asm/d/d_camera/func_8015FB28.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453690-80453698 0004+04 s=14 e=0 z=0  None .sdata2    @4445 */
SECTION_SDATA2 static f32 lit_4445[1 + 1 /* padding */] = {
    0.5f,
    /* padding */
    0.0f,
};

/* 80453698-804536A0 0008+00 s=20 e=0 z=0  None .sdata2    @4448 */
SECTION_SDATA2 static f64 lit_4448 = 4503601774854144.0 /* cast s32 to float */;

/* 8015FBF8-8015FEB8 02C0+00 s=1 e=0 z=0  None .text
 * relationalPos2__22@unnamed@d_camera_cpp@FP10fopAc_ac_cP10fopAc_ac_cP4cXyzf7cSAngle */
//	8015FC18: 803621D4 (_savegpr_27)
//	8015FC40: 80430CF4 (Zero__4cXyz)
//	8015FC44: 80430CF4 (Zero__4cXyz)
//	8015FC9C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8015FCC0: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8015FCCC: 80266EF4 (normalize__4cXyzFv)
//	8015FCDC: 80453698 (lit_4448)
//	8015FCF8: 80266B84 (__ml__4cXyzCFf)
//	8015FD08: 803470B4 (PSVECSubtract)
//	8015FD18: 80453698 (lit_4448)
//	8015FD34: 80266B84 (__ml__4cXyzCFf)
//	8015FD44: 80347090 (PSVECAdd)
//	8015FD54: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8015FD60: 80453690 (lit_4445)
//	8015FD64: 80266B84 (__ml__4cXyzCFf)
//	8015FD74: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8015FDB8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8015FDC4: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8015FDCC: 80451188 (_0__7cSAngle)
//	8015FDEC: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8015FDFC: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8015FE08: 80270F98 (__ct__7cSAngleFs)
//	8015FE1C: 80271120 (Cos__7cSAngleCFv)
//	8015FE20: 80453690 (lit_4445)
//	8015FE3C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8015FE4C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8015FE58: 80271AB4 (Xyz__7cSGlobeCFv)
//	8015FE68: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8015FEA4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8015FBF8() {
    nofralloc
#include "asm/d/d_camera/func_8015FBF8.s"
}
#pragma pop

/* 8015FEB8-8016008C 01D4+00 s=4 e=0 z=0  None .text      Set__15dCamMapToolDataFllP10fopAc_ac_cUsUc
 */
//	8015FEC8: 803621C8 (_savegpr_24)
//	8015FF00: 8002D25C (dComIfGp_getRoomCamera__Fi)
//	8015FF0C: 8002D2AC (dComIfGp_getRoomArrow__Fi)
//	80160078: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamMapToolData::Set(s32 param_0, s32 param_1, fopAc_ac_c* param_2, u16 param_3,
                              u8 param_4) {
    nofralloc
#include "asm/d/d_camera/Set__15dCamMapToolDataFllP10fopAc_ac_cUsUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80393DC0-80393F58 0198+00 s=1 e=0 z=0  None .rodata    @16654 */
SECTION_RODATA static u8 const lit_16654[408] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80393F58-80393F68 0010+00 s=1 e=0 z=0  None .rodata    wave$17181 */
SECTION_RODATA static u8 const wave[16] = {
    0x3E, 0xCC, 0xCC, 0xCD, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x06, 0x66, 0x66, 0x40, 0x4C, 0xCC, 0xCD,
};

/* 80393F68-80394308 039C+04 s=9 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80393F68 = "camtype.dat";
SECTION_DEAD char const* const stringBase_80393F74 = "D_MN01A";
SECTION_DEAD char const* const stringBase_80393F7C = "D_MN10A";
SECTION_DEAD char const* const stringBase_80393F84 = "D_MN11A";
SECTION_DEAD char const* const stringBase_80393F8C = "D_MN04A";
SECTION_DEAD char const* const stringBase_80393F94 = "D_MN05A";
SECTION_DEAD char const* const stringBase_80393F9C = "D_MN07A";
SECTION_DEAD char const* const stringBase_80393FA4 = "FieldS";
SECTION_DEAD char const* const stringBase_80393FAB = "Event";
SECTION_DEAD char const* const stringBase_80393FB1 = "Water";
SECTION_DEAD char const* const stringBase_80393FB7 = "Scope";
SECTION_DEAD char const* const stringBase_80393FBD = "WaterSurf";
SECTION_DEAD char const* const stringBase_80393FC7 = "HorseT";
SECTION_DEAD char const* const stringBase_80393FCE = "Board";
SECTION_DEAD char const* const stringBase_80393FD4 = "Canoe";
SECTION_DEAD char const* const stringBase_80393FDA = "Keep";
SECTION_DEAD char const* const stringBase_80393FDF = "Rodeo";
SECTION_DEAD char const* const stringBase_80393FE5 = "MagneBoots";
SECTION_DEAD char const* const stringBase_80393FF0 = "MagneRoof";
SECTION_DEAD char const* const stringBase_80393FFA = "MagneWall";
SECTION_DEAD char const* const stringBase_80394004 = "CoccoJump";
SECTION_DEAD char const* const stringBase_8039400E = "Boar";
SECTION_DEAD char const* const stringBase_80394013 = "GoatBattle";
SECTION_DEAD char const* const stringBase_8039401E = "GoronJump";
SECTION_DEAD char const* const stringBase_80394028 = "Spinner";
SECTION_DEAD char const* const stringBase_80394030 = "HookWall";
SECTION_DEAD char const* const stringBase_80394039 = "HookRoof";
SECTION_DEAD char const* const stringBase_80394042 = "HookActor";
SECTION_DEAD char const* const stringBase_8039404C = "RoofHung";
SECTION_DEAD char const* const stringBase_80394055 = "Rotary";
SECTION_DEAD char const* const stringBase_8039405C = "Street";
SECTION_DEAD char const* const stringBase_80394063 = "StreetN";
SECTION_DEAD char const* const stringBase_8039406B = "StreetP";
SECTION_DEAD char const* const stringBase_80394073 = "Rampart2";
SECTION_DEAD char const* const stringBase_8039407C = "Allay";
SECTION_DEAD char const* const stringBase_80394082 = "AllayR";
SECTION_DEAD char const* const stringBase_80394089 = "AllayR2";
SECTION_DEAD char const* const stringBase_80394091 = "AllayS";
SECTION_DEAD char const* const stringBase_80394098 = "AllayN";
SECTION_DEAD char const* const stringBase_8039409F = "AllayR3";
SECTION_DEAD char const* const stringBase_803940A7 = "CopyRodHall";
SECTION_DEAD char const* const stringBase_803940B3 = "MidnaTag";
SECTION_DEAD char const* const stringBase_803940BC = "WarpObj";
SECTION_DEAD char const* const stringBase_803940C4 = "LV9GZeldaTri";
SECTION_DEAD char const* const stringBase_803940D1 = "LV4BOSSSPJP";
SECTION_DEAD char const* const stringBase_803940DD = "LV7BOSS";
SECTION_DEAD char const* const stringBase_803940E5 = "TeppeiHook";
SECTION_DEAD char const* const stringBase_803940F0 = "Peep";
SECTION_DEAD char const* const stringBase_803940F5 = "DungeonS";
SECTION_DEAD char const* const stringBase_803940FE = "Room";
SECTION_DEAD char const* const stringBase_80394103 = "Cave";
SECTION_DEAD char const* const stringBase_80394108 = "Timer";
SECTION_DEAD char const* const stringBase_8039410E = "Target";
SECTION_DEAD char const* const stringBase_80394115 = "Smoothless";
SECTION_DEAD char const* const stringBase_80394120 = "Mode";
SECTION_DEAD char const* const stringBase_80394125 = "Radius";
SECTION_DEAD char const* const stringBase_8039412C = "RadiusNear";
SECTION_DEAD char const* const stringBase_80394137 = "Longitude";
SECTION_DEAD char const* const stringBase_80394141 = "Fovy";
SECTION_DEAD char const* const stringBase_80394146 = "FovyNear";
SECTION_DEAD char const* const stringBase_8039414F = "Latitude";
SECTION_DEAD char const* const stringBase_80394158 = "Listener";
SECTION_DEAD char const* const stringBase_80394161 = "@STARTER";
SECTION_DEAD char const* const stringBase_8039416A = "Speaker";
SECTION_DEAD char const* const stringBase_80394172 = "@TALKPARTNER";
SECTION_DEAD char const* const stringBase_8039417F = "E_RD";
SECTION_DEAD char const* const stringBase_80394184 = "PAUSE";
SECTION_DEAD char const* const stringBase_8039418A = "WAIT";
SECTION_DEAD char const* const stringBase_8039418F = "TALK";
SECTION_DEAD char const* const stringBase_80394194 = "FIXEDPOS";
SECTION_DEAD char const* const stringBase_8039419D = "FIXEDFRM";
SECTION_DEAD char const* const stringBase_803941A6 = "UNITRANS";
SECTION_DEAD char const* const stringBase_803941AF = "WATCHACTOR";
SECTION_DEAD char const* const stringBase_803941BA = "RESTOREPOS";
SECTION_DEAD char const* const stringBase_803941C5 = "GETITEM";
SECTION_DEAD char const* const stringBase_803941CD = "GAMEOVER";
SECTION_DEAD char const* const stringBase_803941D6 = "TURNTOACTOR";
SECTION_DEAD char const* const stringBase_803941E2 = "ROLLING";
SECTION_DEAD char const* const stringBase_803941EA = "TACT";
SECTION_DEAD char const* const stringBase_803941EF = "WINDDIR";
SECTION_DEAD char const* const stringBase_803941F7 = "PORTALWARP";
SECTION_DEAD char const* const stringBase_80394202 = "STYLE";
SECTION_DEAD char const* const stringBase_80394208 = "SAVE";
SECTION_DEAD char const* const stringBase_8039420D = "LOAD";
SECTION_DEAD char const* const stringBase_80394212 = "USEITEM0";
SECTION_DEAD char const* const stringBase_8039421B = "USEITEM1";
SECTION_DEAD char const* const stringBase_80394224 = "FIXEDFRMS";
SECTION_DEAD char const* const stringBase_8039422E = "BSPLINE";
SECTION_DEAD char const* const stringBase_80394236 = "POSSESSED";
SECTION_DEAD char const* const stringBase_80394240 = "TWOACTOR0";
SECTION_DEAD char const* const stringBase_8039424A = "STOKER";
SECTION_DEAD char const* const stringBase_80394251 = "UNIBRAKE";
SECTION_DEAD char const* const stringBase_8039425A = "UNIACCELE";
SECTION_DEAD char const* const stringBase_80394264 = "STBWAIT";
SECTION_DEAD char const* const stringBase_8039426C = "CURRENT";
SECTION_DEAD char const* const stringBase_80394274 = "PEEPHOLE";
SECTION_DEAD char const* const stringBase_8039427D = "DIGHOLE";
SECTION_DEAD char const* const stringBase_80394285 = "HINTTALK";
SECTION_DEAD char const* const stringBase_8039428E = "BSPTRANS";
SECTION_DEAD char const* const stringBase_80394297 = "MAPTOOL";
SECTION_DEAD char const* const stringBase_8039429F = "CAMERA";
SECTION_DEAD char const* const stringBase_803942A6 = "KeepDist";
SECTION_DEAD char const* const stringBase_803942AF = "Trim";
SECTION_DEAD char const* const stringBase_803942B4 = "DEFAULT";
SECTION_DEAD char const* const stringBase_803942BC = "Recover";
SECTION_DEAD char const* const stringBase_803942C4 = "WaitAnyKey";
SECTION_DEAD char const* const stringBase_803942CF = "BGCheck";
SECTION_DEAD char const* const stringBase_803942D7 = "SavePos";
SECTION_DEAD char const* const stringBase_803942DF = "LoadPos";
SECTION_DEAD char const* const stringBase_803942E7 = "PlayerHide";
SECTION_DEAD char const* const stringBase_803942F2 = "WideMode";
SECTION_DEAD char const* const stringBase_803942FB = "Continue";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80394304 = "\0\0\0";
#pragma pop

/* 803BA160-803BA16C 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803BA16C-803BA178 000C+00 s=0 e=0 z=0  None .data      @4478 */
SECTION_DATA void* d_d_camera__lit_4478[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)letCamera__9dCamera_cFl,
};

/* 803BA178-803BA184 000C+00 s=0 e=0 z=0  None .data      @4479 */
SECTION_DATA void* d_d_camera__lit_4479[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)chaseCamera__9dCamera_cFl,
};

/* 803BA184-803BA190 000C+00 s=0 e=0 z=0  None .data      @4480 */
SECTION_DATA void* d_d_camera__lit_4480[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)lockonCamera__9dCamera_cFl,
};

/* 803BA190-803BA19C 000C+00 s=0 e=0 z=0  None .data      @4481 */
SECTION_DATA void* d_d_camera__lit_4481[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)talktoCamera__9dCamera_cFl,
};

/* 803BA19C-803BA1A8 000C+00 s=0 e=0 z=0  None .data      @4482 */
SECTION_DATA void* d_d_camera__lit_4482[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)subjectCamera__9dCamera_cFl,
};

/* 803BA1A8-803BA1B4 000C+00 s=0 e=0 z=0  None .data      @4483 */
SECTION_DATA void* d_d_camera__lit_4483[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fixedPositionCamera__9dCamera_cFl,
};

/* 803BA1B4-803BA1C0 000C+00 s=0 e=0 z=0  None .data      @4484 */
SECTION_DATA void* d_d_camera__lit_4484[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fixedFrameCamera__9dCamera_cFl,
};

/* 803BA1C0-803BA1CC 000C+00 s=0 e=0 z=0  None .data      @4485 */
SECTION_DATA void* d_d_camera__lit_4485[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)towerCamera__9dCamera_cFl,
};

/* 803BA1CC-803BA1D8 000C+00 s=0 e=0 z=0  None .data      @4486 */
SECTION_DATA void* d_d_camera__lit_4486[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)rideCamera__9dCamera_cFl,
};

/* 803BA1D8-803BA1E4 000C+00 s=0 e=0 z=0  None .data      @4487 */
SECTION_DATA void* d_d_camera__lit_4487[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)manualCamera__9dCamera_cFl,
};

/* 803BA1E4-803BA1F0 000C+00 s=0 e=0 z=0  None .data      @4488 */
SECTION_DATA void* d_d_camera__lit_4488[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)eventCamera__9dCamera_cFl,
};

/* 803BA1F0-803BA1FC 000C+00 s=0 e=0 z=0  None .data      @4489 */
SECTION_DATA void* d_d_camera__lit_4489[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)hookshotCamera__9dCamera_cFl,
};

/* 803BA1FC-803BA208 000C+00 s=0 e=0 z=0  None .data      @4490 */
SECTION_DATA void* d_d_camera__lit_4490[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)colosseumCamera__9dCamera_cFl,
};

/* 803BA208-803BA214 000C+00 s=0 e=0 z=0  None .data      @4491 */
SECTION_DATA void* d_d_camera__lit_4491[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)observeCamera__9dCamera_cFl,
};

/* 803BA214-803BA220 000C+00 s=0 e=0 z=0  None .data      @4492 */
SECTION_DATA void* d_d_camera__lit_4492[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)magneCamera__9dCamera_cFl,
};

/* 803BA220-803BA22C 000C+00 s=0 e=0 z=0  None .data      @4493 */
SECTION_DATA void* d_d_camera__lit_4493[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)railCamera__9dCamera_cFl,
};

/* 803BA22C-803BA238 000C+00 s=0 e=0 z=0  None .data      @4494 */
SECTION_DATA void* d_d_camera__lit_4494[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)paraRailCamera__9dCamera_cFl,
};

/* 803BA238-803BA244 000C+00 s=0 e=0 z=0  None .data      @4495 */
SECTION_DATA void* d_d_camera__lit_4495[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)oneSideCamera__9dCamera_cFl,
};

/* 803BA244-803BA250 000C+00 s=0 e=0 z=0  None .data      @4496 */
SECTION_DATA void* d_d_camera__lit_4496[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)test1Camera__9dCamera_cFl,
};

/* 803BA250-803BA25C 000C+00 s=0 e=0 z=0  None .data      @4497 */
SECTION_DATA void* d_d_camera__lit_4497[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)test2Camera__9dCamera_cFl,
};

/* 803BA25C-803BA34C 00F0+00 s=2 e=3 z=0  None .data      engine_tbl__9dCamera_c */
SECTION_DATA u8 engine_tbl__9dCamera_c[240] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803BA34C-803BA378 002C+00 s=1 e=0 z=0  None .data      @7128 */
SECTION_DATA static void* lit_7128[11] = {
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0xBC),
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0xB0),
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0xFC),
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0x110),
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0x110),
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0x110),
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0x110),
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0xA4),
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0x110),
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0x110),
    (void*)(((char*)onModeChange__9dCamera_cFll) + 0x110),
};

/* 803BA378-803BA39C 0024+00 s=1 e=0 z=0  None .data      @7460 */
SECTION_DATA static void* lit_7460[9] = {
    (void*)(((char*)onStyleChange__9dCamera_cFll) + 0xF8),
    (void*)(((char*)onStyleChange__9dCamera_cFll) + 0xF8),
    (void*)(((char*)onStyleChange__9dCamera_cFll) + 0xF8),
    (void*)(((char*)onStyleChange__9dCamera_cFll) + 0xF8),
    (void*)(((char*)onStyleChange__9dCamera_cFll) + 0xF8),
    (void*)(((char*)onStyleChange__9dCamera_cFll) + 0xDC),
    (void*)(((char*)onStyleChange__9dCamera_cFll) + 0xDC),
    (void*)(((char*)onStyleChange__9dCamera_cFll) + 0xF8),
    (void*)(((char*)onStyleChange__9dCamera_cFll) + 0xB4),
};

/* 803BA39C-803BA4A4 0108+00 s=1 e=0 z=0  None .data      @12300 */
SECTION_DATA static void* lit_12300[66] = {
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6508),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x4368),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x4368),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x4938),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x31D4),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x31D4),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x27B8),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x27B8),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x34DC),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x34DC),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x2118),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x2118),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x2ACC),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x2ACC),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x3994),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x3994),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x3E4C),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x3E4C),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x4F68),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x5308),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x4368),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x4368),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x4C14),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x5D7C),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x5F2C),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6044),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6044),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x55FC),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x5AB0),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x246C),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x246C),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x2DE0),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x2DE0),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x2100),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x6504),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x27B8),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x2118),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x2ACC),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x246C),
    (void*)(((char*)talktoCamera__9dCamera_cFl) + 0x2DE0),
};

/* 803BA4A4-803BA4B8 0014+00 s=1 e=0 z=0  None .data      Dsp$13137 */
SECTION_DATA static u8 Dsp[20] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x80,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};

/* 803BA4B8-803BA4C4 000C+00 s=0 e=0 z=0  None .data      @16620 */
SECTION_DATA void* lit_16620[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)pauseEvCamera__9dCamera_cFv,
};

/* 803BA4C4-803BA4D0 000C+00 s=0 e=0 z=0  None .data      @16621 */
SECTION_DATA void* lit_16621[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)pauseEvCamera__9dCamera_cFv,
};

/* 803BA4D0-803BA4DC 000C+00 s=0 e=0 z=0  None .data      @16622 */
SECTION_DATA void* lit_16622[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)talktoEvCamera__9dCamera_cFv,
};

/* 803BA4DC-803BA4E8 000C+00 s=0 e=0 z=0  None .data      @16623 */
SECTION_DATA void* lit_16623[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fixedPositionEvCamera__9dCamera_cFv,
};

/* 803BA4E8-803BA4F4 000C+00 s=0 e=0 z=0  None .data      @16624 */
SECTION_DATA void* lit_16624[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fixedFrameEvCamera__9dCamera_cFv,
};

/* 803BA4F4-803BA500 000C+00 s=0 e=0 z=0  None .data      @16625 */
SECTION_DATA void* lit_16625[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)uniformTransEvCamera__9dCamera_cFv,
};

/* 803BA500-803BA50C 000C+00 s=0 e=0 z=0  None .data      @16626 */
SECTION_DATA void* lit_16626[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)watchActorEvCamera__9dCamera_cFv,
};

/* 803BA50C-803BA518 000C+00 s=0 e=0 z=0  None .data      @16627 */
SECTION_DATA void* lit_16627[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)restorePosEvCamera__9dCamera_cFv,
};

/* 803BA518-803BA524 000C+00 s=0 e=0 z=0  None .data      @16628 */
SECTION_DATA void* lit_16628[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)getItemEvCamera__9dCamera_cFv,
};

/* 803BA524-803BA530 000C+00 s=0 e=0 z=0  None .data      @16629 */
SECTION_DATA void* lit_16629[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)gameOverEvCamera__9dCamera_cFv,
};

/* 803BA530-803BA53C 000C+00 s=0 e=0 z=0  None .data      @16630 */
SECTION_DATA void* lit_16630[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)turnToActorEvCamera__9dCamera_cFv,
};

/* 803BA53C-803BA548 000C+00 s=0 e=0 z=0  None .data      @16631 */
SECTION_DATA void* lit_16631[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)rollingEvCamera__9dCamera_cFv,
};

/* 803BA548-803BA554 000C+00 s=0 e=0 z=0  None .data      @16632 */
SECTION_DATA void* lit_16632[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)tactEvCamera__9dCamera_cFv,
};

/* 803BA554-803BA560 000C+00 s=0 e=0 z=0  None .data      @16633 */
SECTION_DATA void* lit_16633[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)pauseEvCamera__9dCamera_cFv,
};

/* 803BA560-803BA56C 000C+00 s=0 e=0 z=0  None .data      @16634 */
SECTION_DATA void* lit_16634[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)portalWarpEvCamera__9dCamera_cFv,
};

/* 803BA56C-803BA578 000C+00 s=0 e=0 z=0  None .data      @16635 */
SECTION_DATA void* lit_16635[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)styleEvCamera__9dCamera_cFv,
};

/* 803BA578-803BA584 000C+00 s=0 e=0 z=0  None .data      @16636 */
SECTION_DATA void* lit_16636[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)saveEvCamera__9dCamera_cFv,
};

/* 803BA584-803BA590 000C+00 s=0 e=0 z=0  None .data      @16637 */
SECTION_DATA void* lit_16637[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)loadEvCamera__9dCamera_cFv,
};

/* 803BA590-803BA59C 000C+00 s=0 e=0 z=0  None .data      @16638 */
SECTION_DATA void* lit_16638[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)useItem0EvCamera__9dCamera_cFv,
};

/* 803BA59C-803BA5A8 000C+00 s=0 e=0 z=0  None .data      @16639 */
SECTION_DATA void* lit_16639[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)useItem1EvCamera__9dCamera_cFv,
};

/* 803BA5A8-803BA5B4 000C+00 s=0 e=0 z=0  None .data      @16640 */
SECTION_DATA void* lit_16640[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fixedFramesEvCamera__9dCamera_cFv,
};

/* 803BA5B4-803BA5C0 000C+00 s=0 e=0 z=0  None .data      @16641 */
SECTION_DATA void* lit_16641[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)bSplineEvCamera__9dCamera_cFv,
};

/* 803BA5C0-803BA5CC 000C+00 s=0 e=0 z=0  None .data      @16642 */
SECTION_DATA void* lit_16642[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)possessedEvCamera__9dCamera_cFv,
};

/* 803BA5CC-803BA5D8 000C+00 s=0 e=0 z=0  None .data      @16643 */
SECTION_DATA void* lit_16643[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)twoActor0EvCamera__9dCamera_cFv,
};

/* 803BA5D8-803BA5E4 000C+00 s=0 e=0 z=0  None .data      @16644 */
SECTION_DATA void* lit_16644[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)stokerEvCamera__9dCamera_cFv,
};

/* 803BA5E4-803BA5F0 000C+00 s=0 e=0 z=0  None .data      @16645 */
SECTION_DATA void* lit_16645[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)uniformBrakeEvCamera__9dCamera_cFv,
};

/* 803BA5F0-803BA5FC 000C+00 s=0 e=0 z=0  None .data      @16646 */
SECTION_DATA void* lit_16646[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)uniformAcceleEvCamera__9dCamera_cFv,
};

/* 803BA5FC-803BA608 000C+00 s=0 e=0 z=0  None .data      @16647 */
SECTION_DATA void* lit_16647[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)stbWaitEvCamera__9dCamera_cFv,
};

/* 803BA608-803BA614 000C+00 s=0 e=0 z=0  None .data      @16648 */
SECTION_DATA void* lit_16648[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)currentEvCamera__9dCamera_cFv,
};

/* 803BA614-803BA620 000C+00 s=0 e=0 z=0  None .data      @16649 */
SECTION_DATA void* lit_16649[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)peepHoleEvCamera__9dCamera_cFv,
};

/* 803BA620-803BA62C 000C+00 s=0 e=0 z=0  None .data      @16650 */
SECTION_DATA void* lit_16650[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)digHoleEvCamera__9dCamera_cFv,
};

/* 803BA62C-803BA638 000C+00 s=0 e=0 z=0  None .data      @16651 */
SECTION_DATA void* lit_16651[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)hintTalkEvCamera__9dCamera_cFv,
};

/* 803BA638-803BA644 000C+00 s=0 e=0 z=0  None .data      @16652 */
SECTION_DATA void* lit_16652[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)bspTransEvCamera__9dCamera_cFv,
};

/* 803BA644-803BA650 000C+00 s=0 e=0 z=0  None .data      @16653 */
SECTION_DATA void* lit_16653[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)maptoolIdEvCamera__9dCamera_cFv,
};

/* 803BA650-803BA6D8 0088+00 s=0 e=0 z=0  None .data      ActionNames$16655 */
SECTION_DATA void* data_803BA650[34] = {
    (void*)(((char*)&d_d_camera__stringBase0) + 0x21C),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x222),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x227),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x22C),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x235),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x23E),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x247),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x252),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x25D),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x265),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x26E),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x27A),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x282),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x287),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x28F),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x29A),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2A0),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2A5),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2AA),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2B3),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2BC),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2C6),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2CE),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2D8),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2E2),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2E9),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2F2),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x2FC),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x304),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x30C),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x315),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x31D),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x326),
    (void*)(((char*)&d_d_camera__stringBase0) + 0x32F),
};

/* 803BA6D8-803BA6E4 000C+00 s=1 e=0 z=0  None .data      l_method$17952 */
SECTION_DATA static void* l_method[3] = {
    (void*)init_phase1__FP12camera_class,
    (void*)init_phase2__FP12camera_class,
    (void*)NULL,
};

/* 803BA6E4-803BA6F8 0014+00 s=2 e=0 z=0  None .data      method */
SECTION_DATA static void* method[5] = {
    (void*)camera_create__FP12camera_class,          (void*)camera_delete__FP20camera_process_class,
    (void*)camera_execute__FP20camera_process_class, (void*)is_camera_delete__FPv,
    (void*)camera_draw__FP20camera_process_class,
};

/* 803BA6F8-803BA73C 0044+00 s=0 e=0 z=1  None .data      g_profile_CAMERA */
SECTION_DATA void* g_profile_CAMERA[17] = {
    (void*)0xFFFFFFFD, (void*)0x000BFFFD,
    (void*)0x030D0000, (void*)&g_fpcLf_Method,
    (void*)0x00000D58, (void*)NULL,
    (void*)NULL,       (void*)&g_fopVw_Method,
    (void*)NULL,       (void*)&g_fopCam_Method,
    (void*)NULL,       (void*)NULL,
    (void*)NULL,       (void*)NULL,
    (void*)NULL,       (void*)&method,
    (void*)NULL,
};

/* 803BA73C-803BA798 0044+18 s=0 e=0 z=1  None .data      g_profile_CAMERA2 */
SECTION_DATA void* g_profile_CAMERA2[17 + 6 /* padding */] = {
    (void*)0xFFFFFFFD,
    (void*)0x000BFFFD,
    (void*)0x030E0000,
    (void*)&g_fpcLf_Method,
    (void*)0x00000D58,
    (void*)NULL,
    (void*)NULL,
    (void*)&g_fopVw_Method,
    (void*)0x00010000,
    (void*)&g_fopCam_Method,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)&method,
    (void*)NULL,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803BA798-803BA7EC 003C+18 s=2 e=0 z=0  None .data      __vt__14dBgS_CamSphChk */
SECTION_DATA void* __vt__14dBgS_CamSphChk[15 + 6 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__14dBgS_CamSphChkFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801827EC,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801827F4,
    (void*)NULL,
    (void*)NULL,
    (void*)func_80182804,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801827FC,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803BA7EC-803BA808 000C+10 s=3 e=0 z=0  None .data      __vt__14d2DBSplinePath */
SECTION_DATA void* __vt__14d2DBSplinePath[3 + 4 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__14d2DBSplinePathFv,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 8016008C-801602C4 0238+00 s=1 e=0 z=0  None .text      __ct__9dCamera_cFP12camera_class */
//	8016009C: 803621D0 (_savegpr_26)
//	801600AC: 8018291C (__ct__Q29dCamera_c10dCamInfo_cFv)
//	801600B0: 8018291C (__ct__Q29dCamera_c10dCamInfo_cFv)
//	801600B4: 80182920 (__dt__Q29dCamera_c10dCamInfo_cFv)
//	801600B8: 80182920 (__dt__Q29dCamera_c10dCamInfo_cFv)
//	801600C4: 80361D60 (__construct_array)
//	801600C8: 803A6F88 (__vt__12dDlst_base_c)
//	801600CC: 803A6F88 (__vt__12dDlst_base_c)
//	801600D4: 803A8DF8 (__vt__18dDlst_effectLine_c)
//	801600D8: 803A8DF8 (__vt__18dDlst_effectLine_c)
//	801600F0: 80053CDC (init__8cM_rnd_cFiii)
//	801600FC: 8007757C (__ct__11dBgS_GndChkFv)
//	80160100: 803AB6B8 (__vt__14dBgS_CamGndChk)
//	80160104: 803AB6B8 (__vt__14dBgS_CamGndChk)
//	80160128: 80078E80 (SetCam__16dBgS_PolyPassChkFv)
//	80160134: 8007757C (__ct__11dBgS_GndChkFv)
//	80160138: 803AB6B8 (__vt__14dBgS_CamGndChk)
//	8016013C: 803AB6B8 (__vt__14dBgS_CamGndChk)
//	80160154: 80078E80 (SetCam__16dBgS_PolyPassChkFv)
//	80160158: 803BA7EC (__vt__14d2DBSplinePath)
//	8016015C: 803BA7EC (__vt__14d2DBSplinePath)
//	80160170: 80097878 (Init__14d2DBSplinePathFll)
//	80160178: 80160300 (func_80160300)
//	8016017C: 80160300 (func_80160300)
//	80160180: 801602C4 (func_801602C4)
//	80160184: 801602C4 (func_801602C4)
//	80160190: 80361D60 (__construct_array)
//	80160230: 80088668 (__ct__11dCamSetup_cFv)
//	8016023C: 800884F0 (__ct__11dCamParam_cFl)
//	80160244: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	80160248: 804061C0 (g_dComIfG_gameInfo)
//	8016024C: 804061C0 (g_dComIfG_gameInfo)
//	80160264: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	80160270: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	80160280: 804061C0 (g_dComIfG_gameInfo)
//	80160284: 804061C0 (g_dComIfG_gameInfo)
//	801602A4: 80160470 (initialize__9dCamera_cFP12camera_classP10fopAc_ac_cUlUl)
//	801602B0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCamera_c::dCamera_c(camera_class* param_0) {
    nofralloc
#include "asm/d/d_camera/__ct__9dCamera_cFP12camera_class.s"
}
#pragma pop

/* 801602C4-80160300 003C+00 s=2 e=0 z=0  None .text __dt__Q29dCamera_c23@class$3665d_camera_cppFv
 */
//	801602E4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_801602C4() {
    nofralloc
#include "asm/d/d_camera/func_801602C4.s"
}
#pragma pop

/* 80160300-80160304 0004+00 s=1 e=0 z=0  None .text __ct__Q29dCamera_c23@class$3665d_camera_cppFv
 */
extern "C" static void func_80160300() {
    /* empty function */
}

/* 80160304-80160470 016C+00 s=1 e=0 z=0  None .text      __dt__9dCamera_cFv */
//	80160324: 804061C0 (g_dComIfG_gameInfo)
//	80160328: 804061C0 (g_dComIfG_gameInfo)
//	80160390: 80450CBC (stopStatus__10fopAc_ac_c)
//	8016039C: 8008858C (__dt__11dCamParam_cFv)
//	801603A8: 800888B8 (__dt__11dCamSetup_cFv)
//	801603B0: 801602C4 (func_801602C4)
//	801603B4: 801602C4 (func_801602C4)
//	801603C0: 80361CE8 (__destroy_arr)
//	801603D4: 803BA7EC (__vt__14d2DBSplinePath)
//	801603D8: 803BA7EC (__vt__14d2DBSplinePath)
//	801603F8: 80077988 (__dt__14dBgS_CamGndChkFv)
//	8016040C: 80077988 (__dt__14dBgS_CamGndChkFv)
//	80160420: 803A8DF8 (__vt__18dDlst_effectLine_c)
//	80160424: 803A8DF8 (__vt__18dDlst_effectLine_c)
//	80160430: 80182920 (__dt__Q29dCamera_c10dCamInfo_cFv)
//	80160434: 80182920 (__dt__Q29dCamera_c10dCamInfo_cFv)
//	80160440: 80361CE8 (__destroy_arr)
//	80160450: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCamera_c::~dCamera_c() {
    nofralloc
#include "asm/d/d_camera/__dt__9dCamera_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8042C8F8-8042C9A0 00A8+00 s=12 e=0 z=0  None .bss       specialType__22@unnamed@d_camera_cpp@ */
static u8 data_8042C8F8[168];

/* 80451020-80451024 0004+00 s=4 e=0 z=0  None .sbss      Stage__22@unnamed@d_camera_cpp@ */
static u8 data_80451020[4];

/* 804536A0-804536A4 0004+00 s=39 e=0 z=0  None .sdata2    @5656 */
SECTION_SDATA2 static u8 lit_5656[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 804536A4-804536A8 0004+00 s=1 e=0 z=0  None .sdata2    @5657 */
SECTION_SDATA2 static f32 lit_5657 = 32767.0f;

/* 804536A8-804536AC 0004+00 s=26 e=0 z=0  None .sdata2    @5658 */
SECTION_SDATA2 static f32 lit_5658 = 1.0f;

/* 804536AC-804536B0 0004+00 s=6 e=0 z=0  None .sdata2    @5659 */
SECTION_SDATA2 static f32 lit_5659 = -1000000000.0f;

/* 804536B0-804536B4 0004+00 s=4 e=0 z=0  None .sdata2    @5660 */
SECTION_SDATA2 static f32 lit_5660 = -20.0f;

/* 804536B4-804536B8 0004+00 s=6 e=0 z=0  None .sdata2    @5661 */
SECTION_SDATA2 static f32 lit_5661 = 300.0f;

/* 804536B8-804536BC 0004+00 s=9 e=0 z=0  None .sdata2    @5662 */
SECTION_SDATA2 static f32 lit_5662 = 60.0f;

/* 804536BC-804536C0 0004+00 s=2 e=0 z=0  None .sdata2    @5663 */
SECTION_SDATA2 static f32 lit_5663 = 85.0f;

/* 80160470-801614AC 103C+00 s=1 e=0 z=0  None .text
 * initialize__9dCamera_cFP12camera_classP10fopAc_ac_cUlUl      */
//	80160480: 803621D0 (_savegpr_26)
//	80160498: 804061C0 (g_dComIfG_gameInfo)
//	8016049C: 804061C0 (g_dComIfG_gameInfo)
//	801604A4: 80393F68 (d_d_camera__stringBase0)
//	801604A8: 80393F68 (d_d_camera__stringBase0)
//	801604B8: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	801604F4: 80161D84 (initMonitor__9dCamera_cFv)
//	801604FC: 80161550 (initPad__9dCamera_cFv)
//	80160504: 801824C8 (Init__14dCamForcusLineFv)
//	80160508: 80450D64 (struct_80450D64)
//	80160514: 804061C0 (g_dComIfG_gameInfo)
//	80160518: 804061C0 (g_dComIfG_gameInfo)
//	80160528: 80393F68 (d_d_camera__stringBase0)
//	8016052C: 80393F68 (d_d_camera__stringBase0)
//	80160534: 80368994 (strcmp)
//	80160544: 80451020 (data_80451020)
//	80160550: 80393F68 (d_d_camera__stringBase0)
//	80160554: 80393F68 (d_d_camera__stringBase0)
//	8016055C: 80368994 (strcmp)
//	8016056C: 80451020 (data_80451020)
//	80160578: 80393F68 (d_d_camera__stringBase0)
//	8016057C: 80393F68 (d_d_camera__stringBase0)
//	80160584: 80368994 (strcmp)
//	80160594: 80451020 (data_80451020)
//	801605A0: 80393F68 (d_d_camera__stringBase0)
//	801605A4: 80393F68 (d_d_camera__stringBase0)
//	801605AC: 80368994 (strcmp)
//	801605BC: 80451020 (data_80451020)
//	801605C8: 80393F68 (d_d_camera__stringBase0)
//	801605CC: 80393F68 (d_d_camera__stringBase0)
//	801605D4: 80368994 (strcmp)
//	801605E4: 80451020 (data_80451020)
//	801605F0: 80393F68 (d_d_camera__stringBase0)
//	801605F4: 80393F68 (d_d_camera__stringBase0)
//	801605FC: 80368994 (strcmp)
//	8016060C: 80451020 (data_80451020)
//	80160614: 80393F68 (d_d_camera__stringBase0)
//	80160618: 80393F68 (d_d_camera__stringBase0)
//	80160620: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160624: 8042C8F8 (data_8042C8F8)
//	80160628: 8042C8F8 (data_8042C8F8)
//	80160630: 80393F68 (d_d_camera__stringBase0)
//	80160634: 80393F68 (d_d_camera__stringBase0)
//	8016063C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160640: 8042C8F8 (data_8042C8F8)
//	80160644: 8042C8F8 (data_8042C8F8)
//	80160650: 80393F68 (d_d_camera__stringBase0)
//	80160654: 80393F68 (d_d_camera__stringBase0)
//	8016065C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160660: 8042C8F8 (data_8042C8F8)
//	80160664: 8042C8F8 (data_8042C8F8)
//	80160670: 80393F68 (d_d_camera__stringBase0)
//	80160674: 80393F68 (d_d_camera__stringBase0)
//	8016067C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160680: 8042C8F8 (data_8042C8F8)
//	80160684: 8042C8F8 (data_8042C8F8)
//	80160690: 80393F68 (d_d_camera__stringBase0)
//	80160694: 80393F68 (d_d_camera__stringBase0)
//	8016069C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801606A0: 8042C8F8 (data_8042C8F8)
//	801606A4: 8042C8F8 (data_8042C8F8)
//	801606B0: 80393F68 (d_d_camera__stringBase0)
//	801606B4: 80393F68 (d_d_camera__stringBase0)
//	801606BC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801606C0: 8042C8F8 (data_8042C8F8)
//	801606C4: 8042C8F8 (data_8042C8F8)
//	801606D0: 80393F68 (d_d_camera__stringBase0)
//	801606D4: 80393F68 (d_d_camera__stringBase0)
//	801606DC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801606E0: 8042C8F8 (data_8042C8F8)
//	801606E4: 8042C8F8 (data_8042C8F8)
//	801606F0: 80393F68 (d_d_camera__stringBase0)
//	801606F4: 80393F68 (d_d_camera__stringBase0)
//	801606FC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160700: 8042C8F8 (data_8042C8F8)
//	80160704: 8042C8F8 (data_8042C8F8)
//	80160710: 80393F68 (d_d_camera__stringBase0)
//	80160714: 80393F68 (d_d_camera__stringBase0)
//	8016071C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160720: 8042C8F8 (data_8042C8F8)
//	80160724: 8042C8F8 (data_8042C8F8)
//	80160730: 80393F68 (d_d_camera__stringBase0)
//	80160734: 80393F68 (d_d_camera__stringBase0)
//	8016073C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160740: 8042C8F8 (data_8042C8F8)
//	80160744: 8042C8F8 (data_8042C8F8)
//	80160750: 80393F68 (d_d_camera__stringBase0)
//	80160754: 80393F68 (d_d_camera__stringBase0)
//	8016075C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160760: 8042C8F8 (data_8042C8F8)
//	80160764: 8042C8F8 (data_8042C8F8)
//	80160770: 80393F68 (d_d_camera__stringBase0)
//	80160774: 80393F68 (d_d_camera__stringBase0)
//	8016077C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160780: 8042C8F8 (data_8042C8F8)
//	80160784: 8042C8F8 (data_8042C8F8)
//	80160790: 80393F68 (d_d_camera__stringBase0)
//	80160794: 80393F68 (d_d_camera__stringBase0)
//	8016079C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801607A0: 8042C8F8 (data_8042C8F8)
//	801607A4: 8042C8F8 (data_8042C8F8)
//	801607B0: 80393F68 (d_d_camera__stringBase0)
//	801607B4: 80393F68 (d_d_camera__stringBase0)
//	801607BC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801607C0: 8042C8F8 (data_8042C8F8)
//	801607C4: 8042C8F8 (data_8042C8F8)
//	801607D0: 80393F68 (d_d_camera__stringBase0)
//	801607D4: 80393F68 (d_d_camera__stringBase0)
//	801607DC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801607E0: 8042C8F8 (data_8042C8F8)
//	801607E4: 8042C8F8 (data_8042C8F8)
//	801607F0: 80393F68 (d_d_camera__stringBase0)
//	801607F4: 80393F68 (d_d_camera__stringBase0)
//	801607FC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160800: 8042C8F8 (data_8042C8F8)
//	80160804: 8042C8F8 (data_8042C8F8)
//	80160810: 80393F68 (d_d_camera__stringBase0)
//	80160814: 80393F68 (d_d_camera__stringBase0)
//	8016081C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160820: 8042C8F8 (data_8042C8F8)
//	80160824: 8042C8F8 (data_8042C8F8)
//	80160830: 80393F68 (d_d_camera__stringBase0)
//	80160834: 80393F68 (d_d_camera__stringBase0)
//	8016083C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160840: 8042C8F8 (data_8042C8F8)
//	80160844: 8042C8F8 (data_8042C8F8)
//	80160850: 80393F68 (d_d_camera__stringBase0)
//	80160854: 80393F68 (d_d_camera__stringBase0)
//	8016085C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160860: 8042C8F8 (data_8042C8F8)
//	80160864: 8042C8F8 (data_8042C8F8)
//	80160870: 80393F68 (d_d_camera__stringBase0)
//	80160874: 80393F68 (d_d_camera__stringBase0)
//	8016087C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160880: 8042C8F8 (data_8042C8F8)
//	80160884: 8042C8F8 (data_8042C8F8)
//	80160890: 80393F68 (d_d_camera__stringBase0)
//	80160894: 80393F68 (d_d_camera__stringBase0)
//	8016089C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801608A0: 8042C8F8 (data_8042C8F8)
//	801608A4: 8042C8F8 (data_8042C8F8)
//	801608B0: 80393F68 (d_d_camera__stringBase0)
//	801608B4: 80393F68 (d_d_camera__stringBase0)
//	801608BC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801608C0: 8042C8F8 (data_8042C8F8)
//	801608C4: 8042C8F8 (data_8042C8F8)
//	801608D0: 80393F68 (d_d_camera__stringBase0)
//	801608D4: 80393F68 (d_d_camera__stringBase0)
//	801608DC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801608E0: 8042C8F8 (data_8042C8F8)
//	801608E4: 8042C8F8 (data_8042C8F8)
//	801608F0: 80393F68 (d_d_camera__stringBase0)
//	801608F4: 80393F68 (d_d_camera__stringBase0)
//	801608FC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160900: 8042C8F8 (data_8042C8F8)
//	80160904: 8042C8F8 (data_8042C8F8)
//	80160910: 80393F68 (d_d_camera__stringBase0)
//	80160914: 80393F68 (d_d_camera__stringBase0)
//	8016091C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160920: 8042C8F8 (data_8042C8F8)
//	80160924: 8042C8F8 (data_8042C8F8)
//	80160930: 80393F68 (d_d_camera__stringBase0)
//	80160934: 80393F68 (d_d_camera__stringBase0)
//	8016093C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160940: 8042C8F8 (data_8042C8F8)
//	80160944: 8042C8F8 (data_8042C8F8)
//	80160950: 80393F68 (d_d_camera__stringBase0)
//	80160954: 80393F68 (d_d_camera__stringBase0)
//	8016095C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160960: 8042C8F8 (data_8042C8F8)
//	80160964: 8042C8F8 (data_8042C8F8)
//	80160970: 80393F68 (d_d_camera__stringBase0)
//	80160974: 80393F68 (d_d_camera__stringBase0)
//	8016097C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160980: 8042C8F8 (data_8042C8F8)
//	80160984: 8042C8F8 (data_8042C8F8)
//	80160990: 80393F68 (d_d_camera__stringBase0)
//	80160994: 80393F68 (d_d_camera__stringBase0)
//	8016099C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801609A0: 8042C8F8 (data_8042C8F8)
//	801609A4: 8042C8F8 (data_8042C8F8)
//	801609B0: 80393F68 (d_d_camera__stringBase0)
//	801609B4: 80393F68 (d_d_camera__stringBase0)
//	801609BC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801609C0: 8042C8F8 (data_8042C8F8)
//	801609C4: 8042C8F8 (data_8042C8F8)
//	801609D0: 80393F68 (d_d_camera__stringBase0)
//	801609D4: 80393F68 (d_d_camera__stringBase0)
//	801609DC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	801609E0: 8042C8F8 (data_8042C8F8)
//	801609E4: 8042C8F8 (data_8042C8F8)
//	801609F0: 80393F68 (d_d_camera__stringBase0)
//	801609F4: 80393F68 (d_d_camera__stringBase0)
//	801609FC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160A00: 8042C8F8 (data_8042C8F8)
//	80160A04: 8042C8F8 (data_8042C8F8)
//	80160A10: 80393F68 (d_d_camera__stringBase0)
//	80160A14: 80393F68 (d_d_camera__stringBase0)
//	80160A1C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160A20: 8042C8F8 (data_8042C8F8)
//	80160A24: 8042C8F8 (data_8042C8F8)
//	80160A30: 80393F68 (d_d_camera__stringBase0)
//	80160A34: 80393F68 (d_d_camera__stringBase0)
//	80160A3C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160A40: 8042C8F8 (data_8042C8F8)
//	80160A44: 8042C8F8 (data_8042C8F8)
//	80160A50: 80393F68 (d_d_camera__stringBase0)
//	80160A54: 80393F68 (d_d_camera__stringBase0)
//	80160A5C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160A60: 8042C8F8 (data_8042C8F8)
//	80160A64: 8042C8F8 (data_8042C8F8)
//	80160A70: 80393F68 (d_d_camera__stringBase0)
//	80160A74: 80393F68 (d_d_camera__stringBase0)
//	80160A7C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160A80: 8042C8F8 (data_8042C8F8)
//	80160A84: 8042C8F8 (data_8042C8F8)
//	80160A90: 80393F68 (d_d_camera__stringBase0)
//	80160A94: 80393F68 (d_d_camera__stringBase0)
//	80160A9C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160AA0: 8042C8F8 (data_8042C8F8)
//	80160AA4: 8042C8F8 (data_8042C8F8)
//	80160AB0: 80393F68 (d_d_camera__stringBase0)
//	80160AB4: 80393F68 (d_d_camera__stringBase0)
//	80160ABC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160AC0: 8042C8F8 (data_8042C8F8)
//	80160AC4: 8042C8F8 (data_8042C8F8)
//	80160AD0: 80393F68 (d_d_camera__stringBase0)
//	80160AD4: 80393F68 (d_d_camera__stringBase0)
//	80160ADC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160AE0: 8042C8F8 (data_8042C8F8)
//	80160AE4: 8042C8F8 (data_8042C8F8)
//	80160AF0: 80393F68 (d_d_camera__stringBase0)
//	80160AF4: 80393F68 (d_d_camera__stringBase0)
//	80160AFC: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160B00: 8042C8F8 (data_8042C8F8)
//	80160B04: 8042C8F8 (data_8042C8F8)
//	80160B1C: 80393F68 (d_d_camera__stringBase0)
//	80160B20: 80393F68 (d_d_camera__stringBase0)
//	80160B28: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160B2C: 8042C8F8 (data_8042C8F8)
//	80160B30: 8042C8F8 (data_8042C8F8)
//	80160B48: 804061C0 (g_dComIfG_gameInfo)
//	80160B4C: 804061C0 (g_dComIfG_gameInfo)
//	80160B70: 804536A0 (lit_5656)
//	80160B7C: 80451188 (_0__7cSAngle)
//	80160B88: 804536A4 (lit_5657)
//	80160B8C: 8026798C (cM_rndFX__Ff)
//	80160B90: 803620AC (__cvt_fp2unsigned)
//	80160B98: 804536A8 (lit_5658)
//	80160BA0: 804536A0 (lit_5656)
//	80160BDC: 804536AC (lit_5659)
//	80160C08: 80430CF4 (Zero__4cXyz)
//	80160C0C: 80430CF4 (Zero__4cXyz)
//	80160C44: 80451188 (_0__7cSAngle)
//	80160D08: 8016317C (setStageMapToolData__9dCamera_cFv)
//	80160D20: 80164C10 (GetCameraTypeFromToolData__9dCamera_cFP24stage_camera2_data_class)
//	80160D80: 80393F68 (d_d_camera__stringBase0)
//	80160D84: 80393F68 (d_d_camera__stringBase0)
//	80160D8C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160D9C: 80393F68 (d_d_camera__stringBase0)
//	80160DA0: 80393F68 (d_d_camera__stringBase0)
//	80160DA8: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160DB8: 80393F68 (d_d_camera__stringBase0)
//	80160DBC: 80393F68 (d_d_camera__stringBase0)
//	80160DC4: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160DD0: 80450D64 (struct_80450D64)
//	80160DE0: 80024384 (getStatusRoomDt__20dStage_roomControl_cFi)
//	80160E18: 801635AC (setRoomMapToolData__9dCamera_cFP15dCamMapToolDatall)
//	80160E20: 80167FEC (checkGroundInfo__9dCamera_cFv)
//	80160E28: 80163340 (setMapToolData__9dCamera_cFv)
//	80160E40: 80164C10 (GetCameraTypeFromToolData__9dCamera_cFP24stage_camera2_data_class)
//	80160E4C: 804061C0 (g_dComIfG_gameInfo)
//	80160E50: 804061C0 (g_dComIfG_gameInfo)
//	80160E70: 80393F68 (d_d_camera__stringBase0)
//	80160E74: 80393F68 (d_d_camera__stringBase0)
//	80160E7C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	80160EE8: 800885D4 (Change__11dCamParam_cFl)
//	80160EEC: 804061C0 (g_dComIfG_gameInfo)
//	80160EF0: 804061C0 (g_dComIfG_gameInfo)
//	80160F1C: 804061C0 (g_dComIfG_gameInfo)
//	80160F20: 804061C0 (g_dComIfG_gameInfo)
//	80160F90: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80160F9C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80160FBC: 802710E8 (Inv__7cSAngleCFv)
//	80160FC8: 80270F98 (__ct__7cSAngleFs)
//	80160FEC: 80451188 (_0__7cSAngle)
//	8016102C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80161058: 804536B0 (lit_5660)
//	8016106C: 80270F98 (__ct__7cSAngleFs)
//	8016107C: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80161084: 804536A0 (lit_5656)
//	80161090: 80271850 (__ct__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	8016109C: 80271AB4 (Xyz__7cSGlobeCFv)
//	801610AC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801610E0: 804061C0 (g_dComIfG_gameInfo)
//	801610E4: 804061C0 (g_dComIfG_gameInfo)
//	80161124: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80161130: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80161138: 802710E8 (Inv__7cSAngleCFv)
//	80161144: 80270F98 (__ct__7cSAngleFs)
//	80161158: 80271AB4 (Xyz__7cSGlobeCFv)
//	80161168: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801611B4: 80451188 (_0__7cSAngle)
//	801611E0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016120C: 804536B0 (lit_5660)
//	80161220: 80270F98 (__ct__7cSAngleFs)
//	80161230: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80161238: 804536A0 (lit_5656)
//	80161244: 80271850 (__ct__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	80161250: 80271AB4 (Xyz__7cSGlobeCFv)
//	80161260: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801612A0: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801612A8: 802710E8 (Inv__7cSAngleCFv)
//	801612B4: 804536B4 (lit_5661)
//	801612BC: 802719A4 (Val__7cSGlobeFfss)
//	801612C8: 80271AB4 (Xyz__7cSGlobeCFv)
//	801612D8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80161328: 802710E8 (Inv__7cSAngleCFv)
//	80161334: 80270F98 (__ct__7cSAngleFs)
//	80161340: 804536B8 (lit_5662)
//	8016134C: 804536A0 (lit_5656)
//	80161354: 804536A8 (lit_5658)
//	80161360: 80451188 (_0__7cSAngle)
//	80161394: 804536A0 (lit_5656)
//	8016139C: 804536BC (lit_5663)
//	801613C0: 80430CF4 (Zero__4cXyz)
//	801613C4: 80430CF4 (Zero__4cXyz)
//	801613EC: 80451188 (_0__7cSAngle)
//	8016144C: 80451018 (m_midnaActor__9daPy_py_c)
//	80161478: 80430CF4 (Zero__4cXyz)
//	8016147C: 80430CF4 (Zero__4cXyz)
//	80161498: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::initialize(camera_class* param_0, fopAc_ac_c* param_1, u32 param_2,
                               u32 param_3) {
    nofralloc
#include "asm/d/d_camera/initialize__9dCamera_cFP12camera_classP10fopAc_ac_cUlUl.s"
}
#pragma pop

/* 801614AC-801614C4 0018+00 s=0 e=1 z=106  None .text      Start__9dCamera_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Start() {
    nofralloc
#include "asm/d/d_camera/Start__9dCamera_cFv.s"
}
#pragma pop

/* 801614C4-801614D0 000C+00 s=0 e=1 z=0  None .text      QuickStart__9dCamera_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::QuickStart() {
    nofralloc
#include "asm/d/d_camera/QuickStart__9dCamera_cFv.s"
}
#pragma pop

/* 801614D0-801614E8 0018+00 s=0 e=2 z=98  None .text      Stop__9dCamera_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Stop() {
    nofralloc
#include "asm/d/d_camera/Stop__9dCamera_cFv.s"
}
#pragma pop

/* 801614E8-801614F4 000C+00 s=0 e=2 z=0  None .text      Stay__9dCamera_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Stay() {
    nofralloc
#include "asm/d/d_camera/Stay__9dCamera_cFv.s"
}
#pragma pop

/* 801614F4-80161550 005C+00 s=2 e=4 z=0  None .text      ChangeModeOK__9dCamera_cFl */
//	801614F4: 804061C0 (g_dComIfG_gameInfo)
//	801614F8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::ChangeModeOK(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/ChangeModeOK__9dCamera_cFl.s"
}
#pragma pop

/* 80161550-801617B0 0260+00 s=1 e=0 z=0  None .text      initPad__9dCamera_cFv */
//	8016155C: 804536A0 (lit_5656)
//	80161578: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	8016157C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801615B0: 804536A0 (lit_5656)
//	801615C0: 80451188 (_0__7cSAngle)
//	801615EC: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801615F0: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161628: 804536A0 (lit_5656)
//	80161638: 80451188 (_0__7cSAngle)
//	80161658: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	8016165C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::initPad() {
    nofralloc
#include "asm/d/d_camera/initPad__9dCamera_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804536C0-804536C8 0004+04 s=1 e=0 z=0  None .sdata2    @6093 */
SECTION_SDATA2 static f32 lit_6093[1 + 1 /* padding */] = {
    0.0010000000474974513f,
    /* padding */
    0.0f,
};

/* 801617B0-80161D84 05D4+00 s=1 e=0 z=0  None .text      updatePad__9dCamera_cFv */
//	801617E8: 804536A0 (lit_5656)
//	80161800: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161804: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161850: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161854: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161864: 80271004 (Val__7cSAngleFs)
//	80161874: 804536A0 (lit_5656)
//	8016188C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161890: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801618DC: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801618E0: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801618F0: 80271004 (Val__7cSAngleFs)
//	801618FC: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161900: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801619A4: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801619A8: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161A4C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161A50: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161BD0: 804061C0 (g_dComIfG_gameInfo)
//	80161BD4: 804061C0 (g_dComIfG_gameInfo)
//	80161C58: 804061C0 (g_dComIfG_gameInfo)
//	80161C5C: 804061C0 (g_dComIfG_gameInfo)
//	80161CBC: 804061C0 (g_dComIfG_gameInfo)
//	80161CC0: 804061C0 (g_dComIfG_gameInfo)
//	80161D30: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161D34: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80161D40: 804536C0 (lit_6093)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::updatePad() {
    nofralloc
#include "asm/d/d_camera/updatePad__9dCamera_cFv.s"
}
#pragma pop

/* 80161D84-80161E34 00B0+00 s=1 e=0 z=0  None .text      initMonitor__9dCamera_cFv */
//	80161DAC: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	80161DCC: 80430CF4 (Zero__4cXyz)
//	80161DD0: 80430CF4 (Zero__4cXyz)
//	80161DE8: 804536A0 (lit_5656)
//	80161E04: 80430CF4 (Zero__4cXyz)
//	80161E08: 80430CF4 (Zero__4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::initMonitor() {
    nofralloc
#include "asm/d/d_camera/initMonitor__9dCamera_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804536C8-804536D0 0008+00 s=7 e=0 z=0  None .sdata2    @6177 */
SECTION_SDATA2 static f64 lit_6177 = 0.5;

/* 804536D0-804536D8 0008+00 s=7 e=0 z=0  None .sdata2    @6178 */
SECTION_SDATA2 static f64 lit_6178 = 3.0;

/* 804536D8-804536E0 0008+00 s=7 e=0 z=0  None .sdata2    @6179 */
SECTION_SDATA2 static u8 lit_6179[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804536E0-804536E4 0004+00 s=8 e=0 z=0  None .sdata2    @6180 */
SECTION_SDATA2 static f32 lit_6180 = 1.0f / 100.0f;

/* 80161E34-80162088 0254+00 s=1 e=0 z=0  None .text      updateMonitor__9dCamera_cFv */
//	80161E5C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	80161E84: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80161EAC: 804061C0 (g_dComIfG_gameInfo)
//	80161EB0: 804061C0 (g_dComIfG_gameInfo)
//	80161ECC: 8007595C (MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80161EE8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80161F08: 80347138 (PSVECSquareMag)
//	80161F0C: 804536A0 (lit_5656)
//	80161F1C: 804536C8 (lit_6177)
//	80161F24: 804536D0 (lit_6178)
//	80161F6C: 804536D8 (lit_6179)
//	80161F78: 80450AE0 (__float_nan)
//	80161F7C: 80450AE0 (__float_nan)
//	80161FE8: 80450AE0 (__float_nan)
//	80161FEC: 80450AE0 (__float_nan)
//	80161FFC: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	80162010: 804536E0 (lit_6180)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::updateMonitor() {
    nofralloc
#include "asm/d/d_camera/updateMonitor__9dCamera_cFv.s"
}
#pragma pop

/* 80162088-801622B0 0228+00 s=1 e=0 z=0  None .text      checkForceLockTarget__9dCamera_cFv */
//	80162098: 803621D8 (_savegpr_28)
//	801620B4: 80181500 (GetForceLockOnActor__9dCamera_cFv)
//	801620C8: 804061C0 (g_dComIfG_gameInfo)
//	801620CC: 804061C0 (g_dComIfG_gameInfo)
//	801620DC: 800737E4 (LockonTruth__12dAttention_cFv)
//	80162104: 80453698 (lit_4448)
//	8016214C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016215C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016216C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016218C: 80347138 (PSVECSquareMag)
//	80162190: 804536A0 (lit_5656)
//	801621A0: 804536C8 (lit_6177)
//	801621A8: 804536D0 (lit_6178)
//	801621F0: 804536D8 (lit_6179)
//	801621FC: 80450AE0 (__float_nan)
//	80162200: 80450AE0 (__float_nan)
//	8016226C: 80450AE0 (__float_nan)
//	80162270: 80450AE0 (__float_nan)
//	8016229C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::checkForceLockTarget() {
    nofralloc
#include "asm/d/d_camera/checkForceLockTarget__9dCamera_cFv.s"
}
#pragma pop

/* 801622B0-801622B4 0004+00 s=1 e=0 z=0  None .text      infoReport__9dCamera_cFv */
void dCamera_c::infoReport() {
    /* empty function */
}

/* ############################################################################################## */
/* 804536E4-804536E8 0004+00 s=12 e=0 z=0  None .sdata2    @6629 */
SECTION_SDATA2 static f32 lit_6629 = 10.0f;

/* 804536E8-804536EC 0004+00 s=9 e=0 z=0  None .sdata2    @6630 */
SECTION_SDATA2 static f32 lit_6630 = 1.0f / 20.0f;

/* 801622B4-80162D38 0A84+00 s=1 e=0 z=0  None .text      Run__9dCamera_cFv */
//	801622CC: 803621CC (_savegpr_25)
//	801622D4: 804061C0 (g_dComIfG_gameInfo)
//	801622D8: 804061C0 (g_dComIfG_gameInfo)
//	801622E0: 80451018 (m_midnaActor__9daPy_py_c)
//	8016230C: 804061C0 (g_dComIfG_gameInfo)
//	80162310: 804061C0 (g_dComIfG_gameInfo)
//	8016233C: 801825E4 (Off__14dCamForcusLineFv)
//	8016236C: 80450D64 (struct_80450D64)
//	80162384: 801647B0 (onRoomChange__9dCamera_cFl)
//	8016238C: 80167FEC (checkGroundInfo__9dCamera_cFv)
//	80162394: 80163340 (setMapToolData__9dCamera_cFv)
//	80162414: 80112474 (checkIronBallThrowMode__9daAlink_cCFv)
//	80162444: 80161E34 (updateMonitor__9dCamera_cFv)
//	80162448: 804061C0 (g_dComIfG_gameInfo)
//	8016244C: 804061C0 (g_dComIfG_gameInfo)
//	80162458: 800737E4 (LockonTruth__12dAttention_cFv)
//	8016246C: 8007353C (LockonTarget__12dAttention_cFl)
//	801624B8: 801617B0 (updatePad__9dCamera_cFv)
//	801624C4: 8008845C (Shift__9dCstick_cFUl)
//	801624D4: 804536A0 (lit_5656)
//	801624F4: 80162088 (checkForceLockTarget__9dCamera_cFv)
//	80162520: 80163D5C (nextType__9dCamera_cFl)
//	8016253C: 8016444C (onTypeChange__9dCamera_cFll)
//	80162560: 8042C8F8 (data_8042C8F8)
//	80162564: 8042C8F8 (data_8042C8F8)
//	80162584: 801635E4 (nextMode__9dCamera_cFl)
//	801625E0: 80163C38 (onModeChange__9dCamera_cFll)
//	80162604: 801614F4 (ChangeModeOK__9dCamera_cFl)
//	80162660: 8016469C (onStyleChange__9dCamera_cFll)
//	80162678: 800885D4 (Change__11dCamParam_cFl)
//	801626D8: 804061C0 (g_dComIfG_gameInfo)
//	801626DC: 804061C0 (g_dComIfG_gameInfo)
//	80162754: 8016608C (forwardCheckAngle__9dCamera_cFv)
//	80162764: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80162774: 80271264 (__ml__7cSAngleCFf)
//	80162780: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	80162788: 80451188 (_0__7cSAngle)
//	801627DC: 804536E4 (lit_6629)
//	80162820: 803BA25C (engine_tbl__9dCamera_c)
//	80162824: 803BA25C (engine_tbl__9dCamera_c)
//	8016282C: 80362084 (__ptmf_scall)
//	80162888: 80165EF4 (defaultTriming__9dCamera_cFv)
//	801628A0: 804536E8 (lit_6630)
//	801628A4: 80271264 (__ml__7cSAngleCFf)
//	801628B0: 802711E8 (__ami__7cSAngleFRC7cSAngle)
//	801628B8: 80180D24 (shakeCamera__9dCamera_cFv)
//	801628C0: 80181280 (blureCamera__9dCamera_cFv)
//	801629C0: 80166764 (bumpCheck__9dCamera_cFUl)
//	801629D0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801629DC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	801629F8: 80270FC8 (__ct__7cSAngleFf)
//	80162A28: 80270FC8 (__ct__7cSAngleFf)
//	80162A68: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80162A78: 80165158 (getUSOAngle__9dCamera_cF7cSAngle)
//	80162A8C: 802710E8 (Inv__7cSAngleCFv)
//	80162A98: 80270F98 (__ct__7cSAngleFs)
//	80162AB4: 801622B0 (infoReport__9dCamera_cFv)
//	80162ACC: 80266CE4 (norm__4cXyzCFv)
//	80162AEC: 804061C0 (g_dComIfG_gameInfo)
//	80162AF0: 804061C0 (g_dComIfG_gameInfo)
//	80162B00: 804536A8 (lit_5658)
//	80162B14: 80270F98 (__ct__7cSAngleFs)
//	80162B20: 80270F98 (__ct__7cSAngleFs)
//	80162B30: 804061C0 (g_dComIfG_gameInfo)
//	80162B34: 804061C0 (g_dComIfG_gameInfo)
//	80162B3C: 80270F98 (__ct__7cSAngleFs)
//	80162B48: 80270F98 (__ct__7cSAngleFs)
//	80162B5C: 802716EC (Xyz__7cSPolarCFv)
//	80162B9C: 804536E0 (lit_6180)
//	80162BA4: 804536A8 (lit_5658)
//	80162BAC: 804536A0 (lit_5656)
//	80162BB8: 804536A0 (lit_5656)
//	80162BC0: 804536A8 (lit_5658)
//	80162BD8: 804536A0 (lit_5656)
//	80162BE0: 804536A8 (lit_5658)
//	80162BF0: 80451188 (_0__7cSAngle)
//	80162C00: 80451188 (_0__7cSAngle)
//	80162C10: 80167EF4 (getWaterSurfaceHeight__9dCamera_cFP4cXyz)
//	80162C28: 801AB270 (dKy_camera_water_in_status_set__FUc)
//	80162C2C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80162C3C: 802B6788 (setCameraInWaterDepth__11Z2StatusMgrFf)
//	80162C48: 801AB270 (dKy_camera_water_in_status_set__FUc)
//	80162C4C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80162C54: 804536A0 (lit_5656)
//	80162C58: 802B6788 (setCameraInWaterDepth__11Z2StatusMgrFf)
//	80162C88: 80088988 (PlayerHideDist__11dCamSetup_cFv)
//	80162CCC: 80180738 (runEventRecoveryTrans__9dCamera_cFv)
//	80162D24: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Run() {
    nofralloc
#include "asm/d/d_camera/Run__9dCamera_cFv.s"
}
#pragma pop

/* 80162D38-80162FB8 0280+00 s=1 e=0 z=0  None .text      NotRun__9dCamera_cFv */
//	80162D50: 803621DC (_savegpr_29)
//	80162D58: 804061C0 (g_dComIfG_gameInfo)
//	80162D5C: 804061C0 (g_dComIfG_gameInfo)
//	80162D64: 80451018 (m_midnaActor__9daPy_py_c)
//	80162D8C: 804061C0 (g_dComIfG_gameInfo)
//	80162D90: 804061C0 (g_dComIfG_gameInfo)
//	80162DBC: 80167FEC (checkGroundInfo__9dCamera_cFv)
//	80162DCC: 804061C0 (g_dComIfG_gameInfo)
//	80162DD0: 804061C0 (g_dComIfG_gameInfo)
//	80162DF0: 8042C8F8 (data_8042C8F8)
//	80162DF4: 8042C8F8 (data_8042C8F8)
//	80162E10: 80164C64 (pushInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_cs)
//	80162E30: 80088620 (SearchStyle__11dCamParam_cFUl)
//	80162E6C: 8017F828 (eventCamera__9dCamera_cFl)
//	80162EB8: 801825E4 (Off__14dCamForcusLineFv)
//	80162EC0: 80180D24 (shakeCamera__9dCamera_cFv)
//	80162EC8: 80181280 (blureCamera__9dCamera_cFv)
//	80162ED8: 80451188 (_0__7cSAngle)
//	80162EE8: 80451188 (_0__7cSAngle)
//	80162EF8: 80167EF4 (getWaterSurfaceHeight__9dCamera_cFP4cXyz)
//	80162F10: 801AB270 (dKy_camera_water_in_status_set__FUc)
//	80162F14: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80162F24: 802B6788 (setCameraInWaterDepth__11Z2StatusMgrFf)
//	80162F30: 801AB270 (dKy_camera_water_in_status_set__FUc)
//	80162F34: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80162F3C: 804536A0 (lit_5656)
//	80162F40: 802B6788 (setCameraInWaterDepth__11Z2StatusMgrFf)
//	80162FA4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::NotRun() {
    nofralloc
#include "asm/d/d_camera/NotRun__9dCamera_cFv.s"
}
#pragma pop

/* 80162FB8-80162FD4 001C+00 s=1 e=0 z=0  None .text      V__9dCamera_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::V() {
    nofralloc
#include "asm/d/d_camera/V__9dCamera_cFv.s"
}
#pragma pop

/* 80162FD4-8016300C 0038+00 s=1 e=0 z=0  None .text      U__9dCamera_cFv */
//	80162FF8: 802710E8 (Inv__7cSAngleCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::U() {
    nofralloc
#include "asm/d/d_camera/U__9dCamera_cFv.s"
}
#pragma pop

/* 8016300C-80163028 001C+00 s=1 e=1 z=135  None .text      SetTrimSize__9dCamera_cFl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::SetTrimSize(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/SetTrimSize__9dCamera_cFl.s"
}
#pragma pop

/* 80163028-80163034 000C+00 s=1 e=2 z=4  None .text      SetTrimTypeForce__9dCamera_cFl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::SetTrimTypeForce(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/SetTrimTypeForce__9dCamera_cFl.s"
}
#pragma pop

/* ############################################################################################## */
/* 804536EC-804536F0 0004+00 s=5 e=0 z=0  None .sdata2    @6766 */
SECTION_SDATA2 static f32 lit_6766 = 0.25f;

/* 80163034-80163154 0120+00 s=1 e=0 z=0  None .text      CalcTrimSize__9dCamera_cFv */
//	80163074: 804536EC (lit_6766)
//	80163090: 804536EC (lit_6766)
//	801630B0: 804536EC (lit_6766)
//	801630D0: 804536EC (lit_6766)
//	801630EC: 804536A0 (lit_5656)
//	80163114: 804061C0 (g_dComIfG_gameInfo)
//	80163118: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::CalcTrimSize() {
    nofralloc
#include "asm/d/d_camera/CalcTrimSize__9dCamera_cFv.s"
}
#pragma pop

/* 80163154-8016317C 0028+00 s=1 e=0 z=0  None .text      Draw__9dCamera_cFv */
//	80163164: 80182560 (Draw__14dCamForcusLineFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Draw() {
    nofralloc
#include "asm/d/d_camera/Draw__9dCamera_cFv.s"
}
#pragma pop

/* 8016317C-80163340 01C4+00 s=1 e=0 z=0  None .text      setStageMapToolData__9dCamera_cFv */
//	8016318C: 803621D4 (_savegpr_27)
//	801631B8: 804061C0 (g_dComIfG_gameInfo)
//	801631BC: 804061C0 (g_dComIfG_gameInfo)
//	8016332C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::setStageMapToolData() {
    nofralloc
#include "asm/d/d_camera/setStageMapToolData__9dCamera_cFv.s"
}
#pragma pop

/* 80163340-80163558 0218+00 s=2 e=0 z=0  None .text      setMapToolData__9dCamera_cFv */
//	80163358: 80450D64 (struct_80450D64)
//	80163364: 8002D25C (dComIfGp_getRoomCamera__Fi)
//	8016336C: 8002D2AC (dComIfGp_getRoomArrow__Fi)
//	8016353C: 801635AC (setRoomMapToolData__9dCamera_cFP15dCamMapToolDatall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::setMapToolData() {
    nofralloc
#include "asm/d/d_camera/setMapToolData__9dCamera_cFv.s"
}
#pragma pop

/* 80163558-801635AC 0054+00 s=0 e=0 z=1  None .text      SetTagData__9dCamera_cFP10fopAc_ac_clUsUc
 */
//	80163588: 80450D64 (struct_80450D64)
//	80163598: 8015FEB8 (Set__15dCamMapToolDataFllP10fopAc_ac_cUsUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::SetTagData(fopAc_ac_c* param_0, s32 param_1, u16 param_2, u8 param_3) {
    nofralloc
#include "asm/d/d_camera/SetTagData__9dCamera_cFP10fopAc_ac_clUsUc.s"
}
#pragma pop

/* 801635AC-801635E4 0038+00 s=2 e=0 z=0  None .text
 * setRoomMapToolData__9dCamera_cFP15dCamMapToolDatall          */
//	801635D0: 8015FEB8 (Set__15dCamMapToolDataFllP10fopAc_ac_cUsUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::setRoomMapToolData(dCamMapToolData* param_0, s32 param_1, s32 param_2) {
    nofralloc
#include "asm/d/d_camera/setRoomMapToolData__9dCamera_cFP15dCamMapToolDatall.s"
}
#pragma pop

/* 801635E4-80163C38 0654+00 s=1 e=0 z=0  None .text      nextMode__9dCamera_cFl */
//	801635F4: 803621CC (_savegpr_25)
//	80163600: 804061C0 (g_dComIfG_gameInfo)
//	80163604: 804061C0 (g_dComIfG_gameInfo)
//	8016361C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	80163638: 804061C0 (g_dComIfG_gameInfo)
//	8016363C: 804061C0 (g_dComIfG_gameInfo)
//	801636CC: 804061C0 (g_dComIfG_gameInfo)
//	801636D0: 804061C0 (g_dComIfG_gameInfo)
//	801636F4: 800737E4 (LockonTruth__12dAttention_cFv)
//	80163760: 80450618 (g_dComIfGoat_gameInfo)
//	80163838: 804061C0 (g_dComIfG_gameInfo)
//	8016383C: 804061C0 (g_dComIfG_gameInfo)
//	801638BC: 800737E4 (LockonTruth__12dAttention_cFv)
//	8016392C: 800737E4 (LockonTruth__12dAttention_cFv)
//	8016397C: 800737E4 (LockonTruth__12dAttention_cFv)
//	80163A04: 800737E4 (LockonTruth__12dAttention_cFv)
//	80163A48: 80112474 (checkIronBallThrowMode__9daAlink_cCFv)
//	80163AB8: 8015F8D0 (getThrowBoomerangActor__9daPy_py_cFv)
//	80163AF8: 800E1390 (getCopyRodCameraActor__9daAlink_cFv)
//	80163C24: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::nextMode(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/nextMode__9dCamera_cFl.s"
}
#pragma pop

/* 80163C38-80163D50 0118+00 s=2 e=0 z=0  None .text      onModeChange__9dCamera_cFll */
//	80163C4C: 804536A0 (lit_5656)
//	80163C90: 804061C0 (g_dComIfG_gameInfo)
//	80163C94: 804061C0 (g_dComIfG_gameInfo)
//	80163CC4: 803BA34C (lit_7128)
//	80163CC8: 803BA34C (lit_7128)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::onModeChange(s32 param_0, s32 param_1) {
    nofralloc
#include "asm/d/d_camera/onModeChange__9dCamera_cFll.s"
}
#pragma pop

/* 80163D50-80163D5C 000C+00 s=0 e=0 z=4  None .text      ModeFix__9dCamera_cFl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::ModeFix(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/ModeFix__9dCamera_cFl.s"
}
#pragma pop

/* 80163D5C-8016444C 06F0+00 s=1 e=0 z=0  None .text      nextType__9dCamera_cFl */
//	80163D6C: 803621BC (_savegpr_21)
//	80163D9C: 80164C10 (GetCameraTypeFromToolData__9dCamera_cFP24stage_camera2_data_class)
//	80163DAC: 804061C0 (g_dComIfG_gameInfo)
//	80163DB0: 804061C0 (g_dComIfG_gameInfo)
//	80163DE8: 802681FC (cBgW_CheckBRoof__Ff)
//	80163E00: 80268210 (cBgW_CheckBWall__Ff)
//	80163E18: 800E1390 (getCopyRodCameraActor__9daAlink_cFv)
//	80163E28: 804061C0 (g_dComIfG_gameInfo)
//	80163E2C: 804061C0 (g_dComIfG_gameInfo)
//	80163E50: 801614F4 (ChangeModeOK__9dCamera_cFl)
//	80163E5C: 804061C0 (g_dComIfG_gameInfo)
//	80163E60: 804061C0 (g_dComIfG_gameInfo)
//	80163E70: 800737E4 (LockonTruth__12dAttention_cFv)
//	80163E94: 8042C8F8 (data_8042C8F8)
//	80163E98: 8042C8F8 (data_8042C8F8)
//	80163F44: 80133EF0 (checkMidnaLockJumpPoint__9daAlink_cCFv)
//	80163F50: 80451018 (m_midnaActor__9daPy_py_c)
//	80163F98: 8042C8F8 (data_8042C8F8)
//	80163F9C: 8042C8F8 (data_8042C8F8)
//	80163FA8: 80451018 (m_midnaActor__9daPy_py_c)
//	80163FB8: 8042C8F8 (data_8042C8F8)
//	80163FBC: 8042C8F8 (data_8042C8F8)
//	80163FD4: 8042C8F8 (data_8042C8F8)
//	80163FD8: 8042C8F8 (data_8042C8F8)
//	80163FF0: 8042C8F8 (data_8042C8F8)
//	80163FF4: 8042C8F8 (data_8042C8F8)
//	8016401C: 8042C8F8 (data_8042C8F8)
//	80164020: 8042C8F8 (data_8042C8F8)
//	80164034: 8042C8F8 (data_8042C8F8)
//	80164038: 8042C8F8 (data_8042C8F8)
//	8016404C: 8042C8F8 (data_8042C8F8)
//	80164050: 8042C8F8 (data_8042C8F8)
//	80164064: 8042C8F8 (data_8042C8F8)
//	80164068: 8042C8F8 (data_8042C8F8)
//	80164090: 8042C8F8 (data_8042C8F8)
//	80164094: 8042C8F8 (data_8042C8F8)
//	801640BC: 8042C8F8 (data_8042C8F8)
//	801640C0: 8042C8F8 (data_8042C8F8)
//	801640E8: 8042C8F8 (data_8042C8F8)
//	801640EC: 8042C8F8 (data_8042C8F8)
//	80164114: 8042C8F8 (data_8042C8F8)
//	80164118: 8042C8F8 (data_8042C8F8)
//	80164124: 804061C0 (g_dComIfG_gameInfo)
//	80164128: 804061C0 (g_dComIfG_gameInfo)
//	80164144: 8042C8F8 (data_8042C8F8)
//	80164148: 8042C8F8 (data_8042C8F8)
//	80164168: 8042C8F8 (data_8042C8F8)
//	8016416C: 8042C8F8 (data_8042C8F8)
//	80164178: 8042C8F8 (data_8042C8F8)
//	8016417C: 8042C8F8 (data_8042C8F8)
//	80164190: 8042C8F8 (data_8042C8F8)
//	80164194: 8042C8F8 (data_8042C8F8)
//	801641C8: 8042C8F8 (data_8042C8F8)
//	801641CC: 8042C8F8 (data_8042C8F8)
//	801641E4: 804061C0 (g_dComIfG_gameInfo)
//	801641E8: 804061C0 (g_dComIfG_gameInfo)
//	801641F8: 8042C8F8 (data_8042C8F8)
//	801641FC: 8042C8F8 (data_8042C8F8)
//	80164218: 80450D64 (struct_80450D64)
//	8016422C: 8015FEB8 (Set__15dCamMapToolDataFllP10fopAc_ac_cUsUc)
//	80164238: 80164C10 (GetCameraTypeFromToolData__9dCamera_cFP24stage_camera2_data_class)
//	8016424C: 8042C8F8 (data_8042C8F8)
//	80164250: 8042C8F8 (data_8042C8F8)
//	8016425C: 8042C8F8 (data_8042C8F8)
//	80164260: 8042C8F8 (data_8042C8F8)
//	80164310: 80164C10 (GetCameraTypeFromToolData__9dCamera_cFP24stage_camera2_data_class)
//	80164380: 80164C10 (GetCameraTypeFromToolData__9dCamera_cFP24stage_camera2_data_class)
//	80164398: 801614F4 (ChangeModeOK__9dCamera_cFl)
//	801643A4: 804061C0 (g_dComIfG_gameInfo)
//	801643A8: 804061C0 (g_dComIfG_gameInfo)
//	801643B8: 804061C0 (g_dComIfG_gameInfo)
//	801643BC: 804061C0 (g_dComIfG_gameInfo)
//	801643D8: 8042C8F8 (data_8042C8F8)
//	801643DC: 8042C8F8 (data_8042C8F8)
//	80164438: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::nextType(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/nextType__9dCamera_cFl.s"
}
#pragma pop

/* 8016444C-8016469C 0250+00 s=1 e=0 z=0  None .text      onTypeChange__9dCamera_cFll */
//	80164460: 8042C8F8 (data_8042C8F8)
//	80164464: 8042C8F8 (data_8042C8F8)
//	801644A0: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801644B0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801644D4: 801806DC (setEventRecoveryTrans__9dCamera_cFs)
//	801644E0: 80164CAC (popInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_c)
//	801644F0: 803470B4 (PSVECSubtract)
//	80164500: 803470B4 (PSVECSubtract)
//	80164554: 800885D4 (Change__11dCamParam_cFl)
//	801645B0: 8026F2A8 (__ct__8cM3dGLinFRC4cXyzRC4cXyz)
//	801645C0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801645EC: 80268710 (cM3d_Len3dSqPntAndSegLine__FPC8cM3dGLinPC3VecP3VecPf)
//	8016461C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80164628: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80164638: 803A78F8 (__vt__8cM3dGLin)
//	8016463C: 803A78F8 (__vt__8cM3dGLin)
//	80164664: 80164C64 (pushInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_cs)
//	80164668: 804536A0 (lit_5656)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::onTypeChange(s32 param_0, s32 param_1) {
    nofralloc
#include "asm/d/d_camera/onTypeChange__9dCamera_cFll.s"
}
#pragma pop

/* 8016469C-801647B0 0114+00 s=2 e=0 z=0  None .text      onStyleChange__9dCamera_cFll */
//	801646AC: 803621DC (_savegpr_29)
//	801646F8: 80165104 (setUSOAngle__9dCamera_cFv)
//	80164704: 804061C0 (g_dComIfG_gameInfo)
//	80164708: 804061C0 (g_dComIfG_gameInfo)
//	80164718: 804536A8 (lit_5658)
//	80164738: 803BA378 (lit_7460)
//	8016473C: 803BA378 (lit_7460)
//	80164790: 80165104 (setUSOAngle__9dCamera_cFv)
//	8016479C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::onStyleChange(s32 param_0, s32 param_1) {
    nofralloc
#include "asm/d/d_camera/onStyleChange__9dCamera_cFll.s"
}
#pragma pop

/* 801647B0-80164878 00C8+00 s=1 e=0 z=0  None .text      onRoomChange__9dCamera_cFl */
//	801647C0: 803621DC (_savegpr_29)
//	801647E0: 804061C0 (g_dComIfG_gameInfo)
//	801647E4: 804061C0 (g_dComIfG_gameInfo)
//	801647EC: 80024384 (getStatusRoomDt__20dStage_roomControl_cFi)
//	80164834: 8015FEB8 (Set__15dCamMapToolDataFllP10fopAc_ac_cUsUc)
//	80164864: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::onRoomChange(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/onRoomChange__9dCamera_cFl.s"
}
#pragma pop

/* 80164878-80164944 00CC+00 s=4 e=0 z=0  None .text      getParamTargetActor__9dCamera_cFl */
//	80164884: 804061C0 (g_dComIfG_gameInfo)
//	80164888: 804061C0 (g_dComIfG_gameInfo)
//	801648F8: 8007353C (LockonTarget__12dAttention_cFl)
//	80164908: 80073734 (ActionTarget__12dAttention_cFl)
//	80164918: 8007378C (CheckObjectTarget__12dAttention_cFl)
//	80164924: 800E1390 (getCopyRodCameraActor__9daAlink_cFv)
//	80164930: 8001D7A0 (fopAcM_searchFromName4Event__FPCcs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::getParamTargetActor(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/getParamTargetActor__9dCamera_cFl.s"
}
#pragma pop

/* 80164944-80164B64 0220+00 s=0 e=1 z=0  None .text      GetCameraTypeFromMapToolID__9dCamera_cFll
 */
//	80164954: 803621CC (_savegpr_25)
//	80164960: 804061C0 (g_dComIfG_gameInfo)
//	80164964: 804061C0 (g_dComIfG_gameInfo)
//	801649B0: 8002D25C (dComIfGp_getRoomCamera__Fi)
//	801649BC: 8002D2AC (dComIfGp_getRoomArrow__Fi)
//	80164A1C: 80368994 (strcmp)
//	80164B50: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::GetCameraTypeFromMapToolID(s32 param_0, s32 param_1) {
    nofralloc
#include "asm/d/d_camera/GetCameraTypeFromMapToolID__9dCamera_cFll.s"
}
#pragma pop

/* 80164B64-80164C10 00AC+00 s=2 e=1 z=0  None .text GetCameraTypeFromCameraName__9dCamera_cFPCc
 */
//	80164B74: 803621D8 (_savegpr_28)
//	80164B94: 80368994 (strcmp)
//	80164BC0: 80368994 (strcmp)
//	80164BFC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::GetCameraTypeFromCameraName(char const* param_0) {
    nofralloc
#include "asm/d/d_camera/GetCameraTypeFromCameraName__9dCamera_cFPCc.s"
}
#pragma pop

/* 80164C10-80164C64 0054+00 s=2 e=0 z=0  None .text
 * GetCameraTypeFromToolData__9dCamera_cFP24stage_camera2_data_class */
//	80164C38: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::GetCameraTypeFromToolData(stage_camera2_data_class* param_0) {
    nofralloc
#include "asm/d/d_camera/GetCameraTypeFromToolData__9dCamera_cFP24stage_camera2_data_class.s"
}
#pragma pop

/* 80164C64-80164CAC 0048+00 s=4 e=2 z=0  None .text
 * pushInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_cs              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::pushInfo(dCamera_c::dCamInfo_c* param_0, s16 param_1) {
    nofralloc
#include "asm/d/d_camera/pushInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_cs.s"
}
#pragma pop

/* 80164CAC-80164D2C 0080+00 s=2 e=0 z=0  None .text popInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::popInfo(dCamera_c::dCamInfo_c* param_0) {
    nofralloc
#include "asm/d/d_camera/popInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 804536F0-804536F4 0004+00 s=2 e=0 z=0  None .sdata2    @7609 */
SECTION_SDATA2 static f32 lit_7609 = 11.0f / 10.0f;

/* 80164D2C-80164D6C 0040+00 s=4 e=0 z=0  None .text      heightOf__9dCamera_cFP10fopAc_ac_c */
//	80164D54: 804536F0 (lit_7609)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::heightOf(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/d_camera/heightOf__9dCamera_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80164D6C-80164E20 00B4+00 s=9 e=15 z=0  None .text
 * relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz                */
//	80164D7C: 803621D8 (_savegpr_28)
//	80164D94: 80430CF4 (Zero__4cXyz)
//	80164D98: 80430CF4 (Zero__4cXyz)
//	80164DBC: 80270F98 (__ct__7cSAngleFs)
//	80164DCC: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	80164DF4: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80164E04: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80164E0C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::relationalPos(fopAc_ac_c* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/d_camera/relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz.s"
}
#pragma pop

/* 80164E20-80165104 02E4+00 s=0 e=1 z=0  None .text
 * relationalPos__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP4cXyzf  */
//	80164E40: 803621D4 (_savegpr_27)
//	80164E60: 80430CF4 (Zero__4cXyz)
//	80164E64: 80430CF4 (Zero__4cXyz)
//	80164E8C: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	80164E98: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80164EC0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80164EE8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80164F0C: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80164F18: 80266EF4 (normalize__4cXyzFv)
//	80164F28: 80453698 (lit_4448)
//	80164F44: 80266B84 (__ml__4cXyzCFf)
//	80164F54: 803470B4 (PSVECSubtract)
//	80164F64: 80453698 (lit_4448)
//	80164F80: 80266B84 (__ml__4cXyzCFf)
//	80164F90: 80347090 (PSVECAdd)
//	80164FA0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80164FAC: 80453690 (lit_4445)
//	80164FB0: 80266B84 (__ml__4cXyzCFf)
//	80164FC0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80165004: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80165010: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80165018: 80451188 (_0__7cSAngle)
//	80165038: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80165048: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80165054: 80270F98 (__ct__7cSAngleFs)
//	80165068: 80271120 (Cos__7cSAngleCFv)
//	8016506C: 80453690 (lit_4445)
//	80165088: 80271AB4 (Xyz__7cSGlobeCFv)
//	80165098: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801650A4: 80271AB4 (Xyz__7cSGlobeCFv)
//	801650B4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801650F0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::relationalPos(fopAc_ac_c* param_0, fopAc_ac_c* param_1, cXyz* param_2,
                                  f32 param_3) {
    nofralloc
#include "asm/d/d_camera/relationalPos__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP4cXyzf.s"
}
#pragma pop

/* 80165104-80165158 0054+00 s=7 e=0 z=0  None .text      setUSOAngle__9dCamera_cFv */
//	80165124: 802710E8 (Inv__7cSAngleCFv)
//	80165130: 80270F98 (__ct__7cSAngleFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::setUSOAngle() {
    nofralloc
#include "asm/d/d_camera/setUSOAngle__9dCamera_cFv.s"
}
#pragma pop

/* 80165158-8016517C 0024+00 s=1 e=0 z=0  None .text      getUSOAngle__9dCamera_cF7cSAngle */
//	80165168: 80270F68 (__ct__7cSAngleFRC7cSAngle)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::getUSOAngle(cSAngle param_0) {
    nofralloc
#include "asm/d/d_camera/getUSOAngle__9dCamera_cF7cSAngle.s"
}
#pragma pop

/* 8016517C-80165238 00BC+00 s=1 e=2 z=0  None .text      pointInSight__9dCamera_cFP4cXyz */
//	801651A4: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	801651A8: 804061C0 (g_dComIfG_gameInfo)
//	801651AC: 804061C0 (g_dComIfG_gameInfo)
//	801651DC: 80015310 (mDoLib_project__FP3VecP3Vec)
//	801651E8: 804536A0 (lit_5656)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::pointInSight(cXyz* param_0) {
    nofralloc
#include "asm/d/d_camera/pointInSight__9dCamera_cFP4cXyz.s"
}
#pragma pop

/* ############################################################################################## */
/* 804536F4-804536F8 0004+00 s=1 e=0 z=0  None .sdata2    @8015 */
SECTION_SDATA2 static f32 lit_8015 = 0.01745329238474369f;

/* 804536F8-804536FC 0004+00 s=9 e=0 z=0  None .sdata2    @8016 */
SECTION_SDATA2 static f32 lit_8016 = 2.0f;

/* 804536FC-80453700 0004+00 s=3 e=0 z=0  None .sdata2    @8017 */
SECTION_SDATA2 static f32 lit_8017 = 448.0f;

/* 80453700-80453704 0004+00 s=3 e=0 z=0  None .sdata2    @8018 */
SECTION_SDATA2 static f32 lit_8018 = 19.0f / 20.0f;

/* 80453704-80453708 0004+00 s=1 e=0 z=0  None .sdata2    @8019 */
SECTION_SDATA2 static f32 lit_8019 = 17.0f / 20.0f;

/* 80453708-8045370C 0004+00 s=3 e=0 z=0  None .sdata2    @8020 */
SECTION_SDATA2 static f32 lit_8020 = 608.0f;

/* 8045370C-80453710 0004+00 s=11 e=0 z=0  None .sdata2    @8021 */
SECTION_SDATA2 static f32 lit_8021 = 1.0f / 10.0f;

/* 80453710-80453714 0004+00 s=6 e=0 z=0  None .sdata2    @8022 */
SECTION_SDATA2 static f32 lit_8022 = 200.0f;

/* 80453714-80453718 0004+00 s=5 e=0 z=0  None .sdata2    @8023 */
SECTION_SDATA2 static f32 lit_8023 = 1.0f / 5.0f;

/* 80165238-801657EC 05B4+00 s=3 e=0 z=0  None .text
 * radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP4cXyzP4cXyzfsf */
//	80165270: 803621D0 (_savegpr_26)
//	80165298: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	8016529C: 804061C0 (g_dComIfG_gameInfo)
//	801652A0: 804061C0 (g_dComIfG_gameInfo)
//	801652C0: 80453690 (lit_4445)
//	801652C4: 804536F4 (lit_8015)
//	801652D4: 804536F8 (lit_8016)
//	801652E4: 804536FC (lit_8017)
//	801652F0: 804536E0 (lit_6180)
//	801652FC: 80453700 (lit_8018)
//	80165304: 804536A8 (lit_5658)
//	80165314: 80453704 (lit_8019)
//	8016531C: 80453708 (lit_8020)
//	80165338: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80165360: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	80165370: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80165378: 80453690 (lit_4445)
//	801653A0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801653C8: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801653D8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801653E0: 80453690 (lit_4445)
//	80165408: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80165428: 80347138 (PSVECSquareMag)
//	8016542C: 804536A0 (lit_5656)
//	8016543C: 804536C8 (lit_6177)
//	80165444: 804536D0 (lit_6178)
//	8016548C: 804536D8 (lit_6179)
//	80165498: 80450AE0 (__float_nan)
//	8016549C: 80450AE0 (__float_nan)
//	80165508: 80450AE0 (__float_nan)
//	8016550C: 80450AE0 (__float_nan)
//	80165510: 804536A8 (lit_5658)
//	80165514: 8045370C (lit_8021)
//	8016551C: 80453710 (lit_8022)
//	80165528: 80453714 (lit_8023)
//	80165538: 804536A8 (lit_5658)
//	80165558: 80266EF4 (normalize__4cXyzFv)
//	80165568: 80453698 (lit_4448)
//	80165588: 80266B84 (__ml__4cXyzCFf)
//	80165598: 80347090 (PSVECAdd)
//	801655A8: 80453698 (lit_4448)
//	801655C8: 80266B84 (__ml__4cXyzCFf)
//	801655D8: 803470B4 (PSVECSubtract)
//	801655F0: 8000C710 (mDoMtx_lookAt__FPA4_fPC3VecPC3VecPC3Vecs)
//	80165600: 80346D6C (PSMTXMultVec)
//	80165610: 80346D6C (PSMTXMultVec)
//	80165624: 80267814 (cM_atan2f__Fff)
//	8016563C: 80267814 (cM_atan2f__Fff)
//	8016566C: 80267814 (cM_atan2f__Fff)
//	80165684: 80267814 (cM_atan2f__Fff)
//	801656B0: 804536A0 (lit_5656)
//	801656B8: 804536A0 (lit_5656)
//	801656BC: 804536A8 (lit_5658)
//	801656D0: 8036C668 (tan)
//	801656E8: 8036C668 (tan)
//	80165714: 804536A0 (lit_5656)
//	801657D8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::radiusActorInSight(fopAc_ac_c* param_0, fopAc_ac_c* param_1, cXyz* param_2,
                                       cXyz* param_3, f32 param_4, s16 param_5, f32 param_6) {
    nofralloc
#include "asm/d/d_camera/radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP4cXyzP4cXyzfsf.s"
}
#pragma pop

/* 801657EC-801658C0 00D4+00 s=3 e=0 z=0  None .text      groundHeight__9dCamera_cFP4cXyz */
//	80165810: 8007757C (__ct__11dBgS_GndChkFv)
//	8016581C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80165820: 804061C0 (g_dComIfG_gameInfo)
//	80165824: 804061C0 (g_dComIfG_gameInfo)
//	80165834: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80165840: 80077A00 (__ct__18dBgS_CamGndChk_WtrFv)
//	8016584C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80165858: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8016586C: 804536AC (lit_5659)
//	8016588C: 80077A98 (__dt__18dBgS_CamGndChk_WtrFv)
//	80165898: 800775F0 (__dt__11dBgS_GndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::groundHeight(cXyz* param_0) {
    nofralloc
#include "asm/d/d_camera/groundHeight__9dCamera_cFP4cXyz.s"
}
#pragma pop

/* 801658C0-801659F4 0134+00 s=12 e=0 z=0  None .text
 * lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl         */
//	801658D0: 803621D8 (_savegpr_28)
//	801658F0: 80078E8C (ClrCam__16dBgS_PolyPassChkFv)
//	801658F8: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80165904: 80078E74 (ClrObj__16dBgS_PolyPassChkFv)
//	8016590C: 80078E80 (SetCam__16dBgS_PolyPassChkFv)
//	80165920: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	801659B4: 804061C0 (g_dComIfG_gameInfo)
//	801659B8: 804061C0 (g_dComIfG_gameInfo)
//	801659C4: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	801659E0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::lineBGCheck(cXyz* param_0, cXyz* param_1, dBgS_LinChk* param_2, u32 param_3) {
    nofralloc
#include "asm/d/d_camera/lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl.s"
}
#pragma pop

/* 801659F4-80165AF0 00FC+00 s=4 e=4 z=0  None .text lineBGCheck__9dCamera_cFP4cXyzP4cXyzP4cXyzUl
 */
//	80165A04: 803621D4 (_savegpr_27)
//	80165A20: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	80165A38: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80165A44: 803A37C0 (__vt__8cM3dGPla)
//	80165A48: 803A37C0 (__vt__8cM3dGPla)
//	80165A50: 804061C0 (g_dComIfG_gameInfo)
//	80165A54: 804061C0 (g_dComIfG_gameInfo)
//	80165A64: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80165A74: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80165A90: 803A37C0 (__vt__8cM3dGPla)
//	80165A94: 803A37C0 (__vt__8cM3dGPla)
//	80165AA4: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	80165AD0: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	80165ADC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::lineBGCheck(cXyz* param_0, cXyz* param_1, cXyz* param_2, u32 param_3) {
    nofralloc
#include "asm/d/d_camera/lineBGCheck__9dCamera_cFP4cXyzP4cXyzP4cXyzUl.s"
}
#pragma pop

/* 80165AF0-80165B60 0070+00 s=3 e=13 z=0  None .text      lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl */
//	80165B00: 803621D8 (_savegpr_28)
//	80165B18: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	80165B30: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80165B40: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	80165B4C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::lineBGCheck(cXyz* param_0, cXyz* param_1, u32 param_2) {
    nofralloc
#include "asm/d/d_camera/lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453718-8045371C 0004+00 s=7 e=0 z=0  None .sdata2    @8127 */
SECTION_SDATA2 static f32 lit_8127 = 30.0f;

/* 80165B60-80165C08 00A8+00 s=1 e=0 z=0  None .text
 * lineCollisionCheckBush__9dCamera_cFP4cXyzP4cXyz              */
//	80165B70: 803621D8 (_savegpr_28)
//	80165B80: 804061C0 (g_dComIfG_gameInfo)
//	80165B84: 804061C0 (g_dComIfG_gameInfo)
//	80165B90: 80085EB0 (GetResultCam__12dCcMassS_MngCFv)
//	80165BBC: 8026EF88 (__ct__8cM3dGCpsFv)
//	80165BCC: 80453718 (lit_8127)
//	80165BD0: 8026F000 (Set__8cM3dGCpsFRC4cXyzRC4cXyzf)
//	80165BDC: 80085E6C (SetCam__12dCcMassS_MngFRC8cM3dGCps)
//	80165BE8: 8026EFA4 (__dt__8cM3dGCpsFv)
//	80165BF4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::lineCollisionCheckBush(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/d_camera/lineCollisionCheckBush__9dCamera_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045371C-80453720 0004+00 s=1 e=0 z=0  None .sdata2    @8163 */
SECTION_SDATA2 static f32 lit_8163 = -9.999999747378752e-05f;

/* 80165C08-80165CE0 00D8+00 s=1 e=0 z=0  None .text
 * sph_chk_callback__FP11dBgS_SphChkP10cBgD_Vtx_tiiiP8cM3dGPlaPv */
//	80165C40: 80268814 (cM3d_SignedLenPlaAndPos__FPC8cM3dGPlaPC3Vec)
//	80165C50: 80347194 (PSVECDotProduct)
//	80165C5C: 8045371C (lit_8163)
//	80165C98: 8045370C (lit_8021)
//	80165CA4: 80266B84 (__ml__4cXyzCFf)
//	80165CB4: 80347090 (PSVECAdd)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void sph_chk_callback(dBgS_SphChk* param_0, cBgD_Vtx_t* param_1, int param_2,
                                 int param_3, int param_4, cM3dGPla* param_5, void* param_6) {
    nofralloc
#include "asm/d/d_camera/sph_chk_callback__FP11dBgS_SphChkP10cBgD_Vtx_tiiiP8cM3dGPlaPv.s"
}
#pragma pop

/* 80165CE0-80165E74 0194+00 s=1 e=0 z=0  None .text      compWallMargin__9dCamera_cFP4cXyzP4cXyzf
 */
//	80165CF8: 803621C8 (_savegpr_24)
//	80165D14: 80078A14 (__ct__11dBgS_SphChkFv)
//	80165D18: 803BA798 (__vt__14dBgS_CamSphChk)
//	80165D1C: 803BA798 (__vt__14dBgS_CamSphChk)
//	80165D48: 80078E80 (SetCam__16dBgS_PolyPassChkFv)
//	80165D7C: 80165C08 (sph_chk_callback__FP11dBgS_SphChkP10cBgD_Vtx_tiiiP8cM3dGPlaPv)
//	80165D80: 80165C08 (sph_chk_callback__FP11dBgS_SphChkP10cBgD_Vtx_tiiiP8cM3dGPlaPv)
//	80165D94: 8026F664 (Set__8cM3dGSphFRC4cXyzf)
//	80165DA0: 804061C0 (g_dComIfG_gameInfo)
//	80165DA4: 804061C0 (g_dComIfG_gameInfo)
//	80165DE4: 8026F664 (Set__8cM3dGSphFRC4cXyzf)
//	80165DFC: 80075688 (SphChk__4dBgSFP11dBgS_SphChkPv)
//	80165E2C: 803BA798 (__vt__14dBgS_CamSphChk)
//	80165E30: 803BA798 (__vt__14dBgS_CamSphChk)
//	80165E50: 80078AC0 (__dt__11dBgS_SphChkFv)
//	80165E60: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::compWallMargin(cXyz* param_0, cXyz* param_1, f32 param_2) {
    nofralloc
#include "asm/d/d_camera/compWallMargin__9dCamera_cFP4cXyzP4cXyzf.s"
}
#pragma pop

/* 80165E74-80165EF4 0080+00 s=5 e=0 z=0  None .text      __dt__14dBgS_CamSphChkFv */
//	80165E94: 803BA798 (__vt__14dBgS_CamSphChk)
//	80165E98: 803BA798 (__vt__14dBgS_CamSphChk)
//	80165EC4: 80078AC0 (__dt__11dBgS_SphChkFv)
//	80165ED4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_CamSphChk::~dBgS_CamSphChk() {
    nofralloc
#include "asm/d/d_camera/__dt__14dBgS_CamSphChkFv.s"
}
#pragma pop

/* 80165EF4-80165FB4 00C0+00 s=1 e=0 z=0  None .text      defaultTriming__9dCamera_cFv */
//	80165F14: 8016300C (SetTrimSize__9dCamera_cFl)
//	80165F60: 8016300C (SetTrimSize__9dCamera_cFl)
//	80165F70: 8016300C (SetTrimSize__9dCamera_cFl)
//	80165F7C: 8016300C (SetTrimSize__9dCamera_cFl)
//	80165F88: 8016300C (SetTrimSize__9dCamera_cFl)
//	80165F98: 8016300C (SetTrimSize__9dCamera_cFl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::defaultTriming() {
    nofralloc
#include "asm/d/d_camera/defaultTriming__9dCamera_cFv.s"
}
#pragma pop

/* 80165FB4-8016608C 00D8+00 s=1 e=0 z=0  None .text      setView__9dCamera_cFffff */
//	80165FF8: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	80165FFC: 804061C0 (g_dComIfG_gameInfo)
//	80166000: 804061C0 (g_dComIfG_gameInfo)
//	8016603C: 80051AC0 (setViewPort__14dDlst_window_cFffffff)
//	80166054: 80051ADC (setScissor__14dDlst_window_cFffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::setView(f32 param_0, f32 param_1, f32 param_2, f32 param_3) {
    nofralloc
#include "asm/d/d_camera/setView__9dCamera_cFffff.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453720-80453724 0004+00 s=3 e=0 z=0  None .sdata2    @8529 */
SECTION_SDATA2 static f32 lit_8529 = 182.04444885253906f;

/* 80453724-80453728 0004+00 s=12 e=0 z=0  None .sdata2    @8530 */
SECTION_SDATA2 static f32 lit_8530 = 0.75f;

/* 8016608C-80166764 06D8+00 s=1 e=0 z=0  None .text      forwardCheckAngle__9dCamera_cFv */
//	801660AC: 803621D8 (_savegpr_28)
//	801660BC: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	801660C4: 80451188 (_0__7cSAngle)
//	801660C8: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	801660D8: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801660FC: 80164D2C (heightOf__9dCamera_cFP10fopAc_ac_c)
//	80166110: 80453720 (lit_8529)
//	8016612C: 80270F98 (__ct__7cSAngleFs)
//	80166140: 802710E8 (Inv__7cSAngleCFv)
//	80166154: 80271820 (__ct__7cSGlobeFfss)
//	80166160: 80271AB4 (Xyz__7cSGlobeCFv)
//	80166170: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801661A0: 801659F4 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP4cXyzUl)
//	801661B8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801661D8: 80347138 (PSVECSquareMag)
//	801661DC: 804536A0 (lit_5656)
//	801661EC: 804536C8 (lit_6177)
//	801661F4: 804536D0 (lit_6178)
//	8016623C: 804536D8 (lit_6179)
//	80166248: 80450AE0 (__float_nan)
//	8016624C: 80450AE0 (__float_nan)
//	801662B8: 80450AE0 (__float_nan)
//	801662BC: 80450AE0 (__float_nan)
//	801662C0: 804536A8 (lit_5658)
//	801662F0: 80266CE4 (norm__4cXyzCFv)
//	80166300: 80266B84 (__ml__4cXyzCFf)
//	80166310: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016634C: 801657EC (groundHeight__9dCamera_cFP4cXyz)
//	80166364: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80166370: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8016637C: 80451188 (_0__7cSAngle)
//	80166390: 80271264 (__ml__7cSAngleCFf)
//	801663A8: 80271264 (__ml__7cSAngleCFf)
//	801663B4: 80453720 (lit_8529)
//	801663D0: 80270F98 (__ct__7cSAngleFs)
//	801663E0: 802710E8 (Inv__7cSAngleCFv)
//	801663F4: 80271820 (__ct__7cSGlobeFfss)
//	80166400: 80271AB4 (Xyz__7cSGlobeCFv)
//	80166410: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80166440: 801659F4 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP4cXyzUl)
//	80166458: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80166478: 80347138 (PSVECSquareMag)
//	8016647C: 804536A0 (lit_5656)
//	8016648C: 804536C8 (lit_6177)
//	80166494: 804536D0 (lit_6178)
//	801664DC: 804536D8 (lit_6179)
//	801664E8: 80450AE0 (__float_nan)
//	801664EC: 80450AE0 (__float_nan)
//	80166558: 80450AE0 (__float_nan)
//	8016655C: 80450AE0 (__float_nan)
//	80166560: 804536A8 (lit_5658)
//	80166590: 80266CE4 (norm__4cXyzCFv)
//	801665A0: 80266B84 (__ml__4cXyzCFf)
//	801665B0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801665EC: 801657EC (groundHeight__9dCamera_cFP4cXyz)
//	80166604: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80166610: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8016661C: 80451188 (_0__7cSAngle)
//	80166630: 80271264 (__ml__7cSAngleCFf)
//	80166648: 80271264 (__ml__7cSAngleCFf)
//	80166658: 80451188 (_0__7cSAngle)
//	80166680: 80271148 (__mi__7cSAngleCFv)
//	80166694: 80271148 (__mi__7cSAngleCFv)
//	801666CC: 80271148 (__mi__7cSAngleCFv)
//	801666E0: 80271148 (__mi__7cSAngleCFv)
//	801666FC: 80271148 (__mi__7cSAngleCFv)
//	8016670C: 80451188 (_0__7cSAngle)
//	8016671C: 80453724 (lit_8530)
//	80166720: 802712B4 (__amu__7cSAngleFf)
//	8016672C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80166738: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	80166750: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::forwardCheckAngle() {
    nofralloc
#include "asm/d/d_camera/forwardCheckAngle__9dCamera_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451024-80451028 0004+00 s=1 e=0 z=0  None .sbss      prev_plat1$8536 */
static u8 prev_plat1[4];

/* 80451028-8045102C 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80451028[4];

/* 8045102C-80451030 0004+00 s=1 e=0 z=0  None .sbss      prev_plat2$8539 */
static u8 prev_plat2[4];

/* 80451030-80451034 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80451030[4];

/* 80453728-8045372C 0004+00 s=4 e=0 z=0  None .sdata2    @9395 */
SECTION_SDATA2 static f32 lit_9395 = 3.0f / 10.0f;

/* 8045372C-80453730 0004+00 s=2 e=0 z=0  None .sdata2    @9396 */
SECTION_SDATA2 static f32 lit_9396 = 9.999999747378752e-05f;

/* 80453730-80453734 0004+00 s=3 e=0 z=0  None .sdata2    @9397 */
SECTION_SDATA2 static f32 lit_9397 = 7.0f / 10.0f;

/* 80453734-80453738 0004+00 s=10 e=0 z=0  None .sdata2    @9398 */
SECTION_SDATA2 static f32 lit_9398 = 40.0f;

/* 80453738-8045373C 0004+00 s=6 e=0 z=0  None .sdata2    @9399 */
SECTION_SDATA2 static f32 lit_9399 = 100.0f;

/* 8045373C-80453740 0004+00 s=2 e=0 z=0  None .sdata2    @9400 */
SECTION_SDATA2 static f32 lit_9400 = 33.0f / 100.0f;

/* 80453740-80453744 0004+00 s=2 e=0 z=0  None .sdata2    @9401 */
SECTION_SDATA2 static f32 lit_9401 = 2.0f / 25.0f;

/* 80453744-80453748 0004+00 s=1 e=0 z=0  None .sdata2    @9402 */
SECTION_SDATA2 static f32 lit_9402 = -0.5f;

/* 80453748-8045374C 0004+00 s=1 e=0 z=0  None .sdata2    @9403 */
SECTION_SDATA2 static f32 lit_9403 = 6.0f;

/* 8045374C-80453750 0004+00 s=2 e=0 z=0  None .sdata2    @9404 */
SECTION_SDATA2 static f32 lit_9404 = 1.5f;

/* 80453750-80453754 0004+00 s=9 e=0 z=0  None .sdata2    @9405 */
SECTION_SDATA2 static f32 lit_9405 = 5.0f;

/* 80453754-80453758 0004+00 s=6 e=0 z=0  None .sdata2    @9406 */
SECTION_SDATA2 static f32 lit_9406 = 80.0f;

/* 80453758-8045375C 0004+00 s=2 e=0 z=0  None .sdata2    @9407 */
SECTION_SDATA2 static f32 lit_9407 = 3.0f;

/* 8045375C-80453760 0004+00 s=1 e=0 z=0  None .sdata2    @9408 */
SECTION_SDATA2 static f32 lit_9408 = -3.0f;

/* 80453760-80453768 0008+00 s=6 e=0 z=0  None .sdata2    @9410 */
SECTION_SDATA2 static f64 lit_9410 = 4503599627370496.0 /* cast u32 to float */;

/* 80166764-80167BBC 1458+00 s=1 e=0 z=0  None .text      bumpCheck__9dCamera_cFUl */
//	801667AC: 803621C0 (_savegpr_22)
//	801667BC: 80451028 (data_80451028)
//	801667CC: 80451024 (prev_plat1)
//	801667D4: 80451028 (data_80451028)
//	801667D8: 80451030 (data_80451030)
//	801667E8: 8045102C (prev_plat2)
//	801667F0: 80451030 (data_80451030)
//	801667F8: 80453690 (lit_4445)
//	8016680C: 8027134C (__ct__7cDegreeFf)
//	80166814: 80271418 (Cos__7cDegreeCFv)
//	80166824: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80166830: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016683C: 802717F0 (__ct__7cSGlobeFRC7cSGlobe)
//	8016684C: 801AC140 (dKy_TeachWind_existence_chk__Fv)
//	80166858: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	80166860: 80453728 (lit_9395)
//	8016686C: 8005AAE0 (dKyw_get_wind_vec__Fv)
//	80166878: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80166880: 8045372C (lit_9396)
//	8016688C: 8026798C (cM_rndFX__Ff)
//	801668A0: 80271AB4 (Xyz__7cSGlobeCFv)
//	801668B0: 80347090 (PSVECAdd)
//	801668B4: 804536A8 (lit_5658)
//	801668C4: 80453728 (lit_9395)
//	801668D8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801668E4: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	801668F0: 80271098 (Norm__7cSAngleCFv)
//	801668FC: 80453730 (lit_9397)
//	80166904: 8026798C (cM_rndFX__Ff)
//	8016690C: 804536A8 (lit_5658)
//	8016692C: 8007167C (__dt__7cSGlobeFv)
//	80166934: 80167CB8 (func_80167CB8)
//	80166964: 80023590 (fpcSch_JudgeByID__FPvPv)
//	80166968: 80023590 (fpcSch_JudgeByID__FPvPv)
//	80166970: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80166990: 80453734 (lit_9398)
//	8016699C: 80453738 (lit_9399)
//	801669AC: 802710F8 (Sin__7cSAngleCFv)
//	80166A04: 80167C24 (radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP10fopAc_ac_c)
//	80166A08: 804536A0 (lit_5656)
//	80166A24: 8045373C (lit_9400)
//	80166A2C: 80453740 (lit_9401)
//	80166A48: 804536A8 (lit_5658)
//	80166A58: 80453760 (lit_9410)
//	80166A70: 804536E4 (lit_6629)
//	80166A94: 80271AB4 (Xyz__7cSGlobeCFv)
//	80166AA4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80166AB0: 800977D8 (__as__4cXyzFRC4cXyz)
//	80166AD8: 804536E8 (lit_6630)
//	80166ADC: 80165238 (radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP4cXyzP4cXyzfsf)
//	80166AE0: 804536A0 (lit_5656)
//	80166AFC: 8045373C (lit_9400)
//	80166B04: 80453740 (lit_9401)
//	80166B20: 804536A8 (lit_5658)
//	80166B30: 80453760 (lit_9410)
//	80166B48: 804536E4 (lit_6629)
//	80166B6C: 80271AB4 (Xyz__7cSGlobeCFv)
//	80166B7C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80166B88: 800977D8 (__as__4cXyzFRC4cXyz)
//	80166B90: 8045370C (lit_8021)
//	80166BA4: 80453740 (lit_9401)
//	80166BCC: 80271AB4 (Xyz__7cSGlobeCFv)
//	80166BDC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80166BE8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80166C04: 80271030 (Degree__7cSAngleCFv)
//	80166C14: 80270FC8 (__ct__7cSAngleFf)
//	80166C20: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80166C2C: 80271AB4 (Xyz__7cSGlobeCFv)
//	80166C3C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80166C48: 800977D8 (__as__4cXyzFRC4cXyz)
//	80166C54: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	80166C5C: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	80166C6C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80166C78: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80166C84: 80266CE4 (norm__4cXyzCFv)
//	80166C90: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80166CA0: 80266B84 (__ml__4cXyzCFf)
//	80166CB0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80166CBC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80166CE0: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80166CEC: 803A37C0 (__vt__8cM3dGPla)
//	80166CF0: 803A37C0 (__vt__8cM3dGPla)
//	80166CF8: 804061C0 (g_dComIfG_gameInfo)
//	80166CFC: 804061C0 (g_dComIfG_gameInfo)
//	80166D10: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80166D14: 803A37C0 (__vt__8cM3dGPla)
//	80166D18: 803A37C0 (__vt__8cM3dGPla)
//	80166D30: 80453724 (lit_8530)
//	80166D54: 80453744 (lit_9402)
//	80166DA4: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80166DBC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80166DC8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80166DD0: 8008E790 (abs__4cXyzCFv)
//	80166DE0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80166DEC: 80347194 (PSVECDotProduct)
//	80166E00: 803471B4 (PSVECCrossProduct)
//	80166E08: 80453744 (lit_9402)
//	80166E18: 80453690 (lit_4445)
//	80166E40: 80453690 (lit_4445)
//	80166E50: 80268210 (cBgW_CheckBWall__Ff)
//	80166EE8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80166EF4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80166F04: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80166F10: 80453690 (lit_4445)
//	80166F14: 80266B84 (__ml__4cXyzCFf)
//	80166F20: 800977D8 (__as__4cXyzFRC4cXyz)
//	80166F34: 8026EB38 (cM3d_2PlaneLinePosNearPos__FRC8cM3dGPlaRC8cM3dGPlaPC3VecP3Vec)
//	80166F4C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80166F58: 800977D8 (__as__4cXyzFRC4cXyz)
//	80166F64: 800977D8 (__as__4cXyzFRC4cXyz)
//	80166F70: 804536F8 (lit_8016)
//	80166F74: 80266B84 (__ml__4cXyzCFf)
//	80166F84: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80166F90: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80166FA0: 80347090 (PSVECAdd)
//	80166FB0: 80347090 (PSVECAdd)
//	80166FB8: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	80166FD0: 80167BF8 (lineBGCheckBoth__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80166FF0: 80167BF8 (lineBGCheckBoth__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80167004: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016702C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80167038: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80167040: 8008E790 (abs__4cXyzCFv)
//	80167044: 804536B8 (lit_5662)
//	8016705C: 80453748 (lit_9403)
//	80167074: 8045374C (lit_9404)
//	8016708C: 804536A8 (lit_5658)
//	80167094: 80453698 (lit_4448)
//	801670C4: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801670D4: 80271264 (__ml__7cSAngleCFf)
//	801670E4: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801670F0: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	801670FC: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016710C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80167118: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016714C: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80167160: 800977D8 (__as__4cXyzFRC4cXyz)
//	80167178: 80165CE0 (compWallMargin__9dCamera_cFP4cXyzP4cXyzf)
//	80167184: 800977D8 (__as__4cXyzFRC4cXyz)
//	801671A0: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	801671B0: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	801671C4: 800977D8 (__as__4cXyzFRC4cXyz)
//	801671D0: 800977D8 (__as__4cXyzFRC4cXyz)
//	80167218: 804536E4 (lit_6629)
//	80167230: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80167240: 80451190 (_90__7cSAngle)
//	80167244: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80167250: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80167258: 802710F8 (Sin__7cSAngleCFv)
//	8016726C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016727C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80167288: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80167294: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80167298: 804536A0 (lit_5656)
//	801672B8: 804536A8 (lit_5658)
//	801672C0: 804536A0 (lit_5656)
//	801672D0: 804536A0 (lit_5656)
//	801672E0: 8045370C (lit_8021)
//	801672E4: 804536A8 (lit_5658)
//	80167304: 80453750 (lit_9405)
//	8016731C: 804536E8 (lit_6630)
//	80167328: 80453714 (lit_8023)
//	80167354: 80453718 (lit_8127)
//	8016735C: 80453718 (lit_8127)
//	8016736C: 80266CE4 (norm__4cXyzCFv)
//	80167374: 802710F8 (Sin__7cSAngleCFv)
//	80167384: 80266B84 (__ml__4cXyzCFf)
//	80167394: 80347090 (PSVECAdd)
//	801673A4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801673B0: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	801673C4: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801673D4: 80271264 (__ml__7cSAngleCFf)
//	801673E4: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801673F0: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	801673F8: 80453754 (lit_9406)
//	801673FC: 80270FC8 (__ct__7cSAngleFf)
//	80167424: 80453754 (lit_9406)
//	80167428: 80270FC8 (__ct__7cSAngleFf)
//	80167434: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8016744C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016745C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80167468: 800977D8 (__as__4cXyzFRC4cXyz)
//	80167480: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80167494: 800977D8 (__as__4cXyzFRC4cXyz)
//	801674AC: 80165CE0 (compWallMargin__9dCamera_cFP4cXyzP4cXyzf)
//	801674B8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801674C4: 80167E3C (tooNearEscape__9dCamera_cFP4cXyz)
//	801674EC: 8007167C (__dt__7cSGlobeFv)
//	801674F8: 8007167C (__dt__7cSGlobeFv)
//	80167518: 800977D8 (__as__4cXyzFRC4cXyz)
//	80167524: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016753C: 80165CE0 (compWallMargin__9dCamera_cFP4cXyzP4cXyzf)
//	80167548: 800977D8 (__as__4cXyzFRC4cXyz)
//	80167554: 80167E3C (tooNearEscape__9dCamera_cFP4cXyz)
//	80167564: 8001DB90 (__dt__8cM3dGPlaFv)
//	80167570: 8001DB90 (__dt__8cM3dGPlaFv)
//	8016757C: 8007167C (__dt__7cSGlobeFv)
//	80167588: 8007167C (__dt__7cSGlobeFv)
//	801675B8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801675C4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801675CC: 8008E790 (abs__4cXyzCFv)
//	801675D0: 804536B8 (lit_5662)
//	801675E8: 80453748 (lit_9403)
//	80167600: 8045374C (lit_9404)
//	80167618: 804536A8 (lit_5658)
//	80167620: 80453698 (lit_4448)
//	80167668: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80167678: 80271264 (__ml__7cSAngleCFf)
//	80167688: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80167694: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	801676A0: 80271AB4 (Xyz__7cSGlobeCFv)
//	801676B0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801676BC: 800977D8 (__as__4cXyzFRC4cXyz)
//	801676D4: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	801676E8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80167714: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016772C: 80165CE0 (compWallMargin__9dCamera_cFP4cXyzP4cXyzf)
//	80167738: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016775C: 804061C0 (g_dComIfG_gameInfo)
//	80167760: 804061C0 (g_dComIfG_gameInfo)
//	80167780: 80086FBC
//(chkCameraPoint__4dCcSFRC4cXyzPQ214cCcD_ShapeAttr5ShapeP10fopAc_ac_cP10fopAc_ac_c) 	801677B4:
// 800977D8 (__as__4cXyzFRC4cXyz) 	801677CC: 804536F8 (lit_8016) 	801677E4: 800977D8
//(__as__4cXyzFRC4cXyz) 	80167830: 804536A0 (lit_5656) 	8016784C: 8008E790 (abs__4cXyzCFv)
//80167878: 8026F0A8 (__ct__8cM3dGCylFPC4cXyzff) 	80167888: 8026F2A8
// (__ct__8cM3dGLinFRC4cXyzRC4cXyz) 	8016789C: 8026C944
// (cM3d_Cross_CylLin__FPC8cM3dGCylPC8cM3dGLinP3VecP3Vec) 	801678B8: 804536A0 (lit_5656) 	801678D8:
//80266EF4 (normalize__4cXyzFv) 	801678E4: 804536F8 (lit_8016) 	801678E8: 80266B84 (__ml__4cXyzCFf)
//	801678F8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80167904: 800977D8 (__as__4cXyzFRC4cXyz)
//	80167914: 80036A5C (__dt__8cM3dGLinFv)
//	80167920: 80030E3C (__dt__8cM3dGCylFv)
//	80167938: 80167BBC (__dt__Q214cCcD_ShapeAttr5ShapeFv)
//	80167948: 8007757C (__ct__11dBgS_GndChkFv)
//	80167954: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80167958: 804061C0 (g_dComIfG_gameInfo)
//	8016795C: 804061C0 (g_dComIfG_gameInfo)
//	80167968: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8016796C: 80453734 (lit_9398)
//	80167988: 800977D8 (__as__4cXyzFRC4cXyz)
//	80167994: 800977D8 (__as__4cXyzFRC4cXyz)
//	801679A4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801679B0: 80453690 (lit_4445)
//	801679B4: 80266B84 (__ml__4cXyzCFf)
//	801679C4: 80347090 (PSVECAdd)
//	801679D4: 800977D8 (__as__4cXyzFRC4cXyz)
//	801679E0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801679F0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801679FC: 80453690 (lit_4445)
//	80167A00: 80266B84 (__ml__4cXyzCFf)
//	80167A10: 80347090 (PSVECAdd)
//	80167A2C: 80165B60 (lineCollisionCheckBush__9dCamera_cFP4cXyzP4cXyz)
//	80167A38: 804061C0 (g_dComIfG_gameInfo)
//	80167A3C: 804061C0 (g_dComIfG_gameInfo)
//	80167A48: 80085EB8 (GetCamTopPos__12dCcMassS_MngFP3Vec)
//	80167A60: 80453714 (lit_8023)
//	80167A80: 800775F0 (__dt__11dBgS_GndChkFv)
//	80167A9C: 804536A0 (lit_5656)
//	80167AAC: 80453758 (lit_9407)
//	80167AC8: 804536A0 (lit_5656)
//	80167AD8: 8045375C (lit_9408)
//	80167AE4: 80453758 (lit_9407)
//	80167AFC: 800977D8 (__as__4cXyzFRC4cXyz)
//	80167B08: 800977D8 (__as__4cXyzFRC4cXyz)
//	80167B20: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80167B2C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80167B38: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	80167B4C: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	80167B58: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	80167B64: 8007167C (__dt__7cSGlobeFv)
//	80167BA8: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::bumpCheck(u32 param_0) {
    nofralloc
#include "asm/d/d_camera/bumpCheck__9dCamera_cFUl.s"
}
#pragma pop

/* 80167BBC-80167BF8 003C+00 s=1 e=0 z=0  None .text      __dt__Q214cCcD_ShapeAttr5ShapeFv */
//	80167BDC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_ShapeAttr::Shape::~Shape() {
    nofralloc
#include "asm/d/d_camera/__dt__Q214cCcD_ShapeAttr5ShapeFv.s"
}
#pragma pop

/* 80167BF8-80167C24 002C+00 s=2 e=0 z=0  None .text
 * lineBGCheckBoth__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl     */
//	80167C10: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::lineBGCheckBoth(cXyz* param_0, cXyz* param_1, dBgS_LinChk* param_2,
                                    u32 param_3) {
    nofralloc
#include "asm/d/d_camera/lineBGCheckBoth__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl.s"
}
#pragma pop

/* 80167C24-80167CB8 0094+00 s=1 e=0 z=0  None .text
 * radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP10fopAc_ac_c */
//	80167C3C: 803621DC (_savegpr_29)
//	80167C5C: 804536E8 (lit_6630)
//	80167C60: 80165238 (radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP4cXyzP4cXyzfsf)
//	80167C84: 804536E8 (lit_6630)
//	80167C88: 80165238 (radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP4cXyzP4cXyzfsf)
//	80167CA4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::radiusActorInSight(fopAc_ac_c* param_0, fopAc_ac_c* param_1,
                                       fopAc_ac_c* param_2) {
    nofralloc
#include "asm/d/d_camera/radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP10fopAc_ac_c.s"
}
#pragma pop

/* 80167CB8-80167CD8 0020+00 s=2 e=0 z=0  None .text
 * is_player__22@unnamed@d_camera_cpp@FP10fopAc_ac_c            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80167CB8() {
    nofralloc
#include "asm/d/d_camera/func_80167CB8.s"
}
#pragma pop

/* 80167CD8-80167E3C 0164+00 s=2 e=0 z=0  None .text      jutOutCheck__9dCamera_cFP4cXyzf */
//	80167D0C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80167D34: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	80167D44: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80167D50: 80453690 (lit_4445)
//	80167D54: 80266B84 (__ml__4cXyzCFf)
//	80167D64: 80347090 (PSVECAdd)
//	80167D6C: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	80167D84: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80167D90: 803A37C0 (__vt__8cM3dGPla)
//	80167D94: 803A37C0 (__vt__8cM3dGPla)
//	80167D9C: 804061C0 (g_dComIfG_gameInfo)
//	80167DA0: 804061C0 (g_dComIfG_gameInfo)
//	80167DB0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80167DD8: 80266B84 (__ml__4cXyzCFf)
//	80167DE8: 80347090 (PSVECAdd)
//	80167DEC: 803A37C0 (__vt__8cM3dGPla)
//	80167DF0: 803A37C0 (__vt__8cM3dGPla)
//	80167E00: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	80167E14: 80077E00 (__dt__14dBgS_CamLinChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::jutOutCheck(cXyz* param_0, f32 param_1) {
    nofralloc
#include "asm/d/d_camera/jutOutCheck__9dCamera_cFP4cXyzf.s"
}
#pragma pop

/* 80167E3C-80167EF4 00B8+00 s=1 e=0 z=0  None .text      tooNearEscape__9dCamera_cFP4cXyz */
//	80167E60: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80167E88: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80167E94: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80167E9C: 80453734 (lit_9398)
//	80167EB4: 80271AB4 (Xyz__7cSGlobeCFv)
//	80167EC4: 80266AE4 (__pl__4cXyzCFRC3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::tooNearEscape(cXyz* param_0) {
    nofralloc
#include "asm/d/d_camera/tooNearEscape__9dCamera_cFP4cXyz.s"
}
#pragma pop

/* 80167EF4-80167FEC 00F8+00 s=2 e=0 z=0  None .text      getWaterSurfaceHeight__9dCamera_cFP4cXyz
 */
//	80167F14: 804536AC (lit_5659)
//	80167F34: 80078FF4 (__ct__12dBgS_RoofChkFv)
//	80167F3C: 80078EEC (SetUnderwaterRoof__16dBgS_PolyPassChkFv)
//	80167F58: 804061C0 (g_dComIfG_gameInfo)
//	80167F5C: 804061C0 (g_dComIfG_gameInfo)
//	80167F6C: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	80167F84: 80077A00 (__ct__18dBgS_CamGndChk_WtrFv)
//	80167F90: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80167F9C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80167FB8: 80077A98 (__dt__18dBgS_CamGndChk_WtrFv)
//	80167FC4: 80079090 (__dt__12dBgS_RoofChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::getWaterSurfaceHeight(cXyz* param_0) {
    nofralloc
#include "asm/d/d_camera/getWaterSurfaceHeight__9dCamera_cFP4cXyz.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453768-8045376C 0004+00 s=8 e=0 z=0  None .sdata2    @9788 */
SECTION_SDATA2 static f32 lit_9788 = 20.0f;

/* 80167FEC-80168744 0758+00 s=3 e=0 z=0  None .text      checkGroundInfo__9dCamera_cFv */
//	80168004: 803621D4 (_savegpr_27)
//	8016801C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	80168038: 804061C0 (g_dComIfG_gameInfo)
//	8016803C: 804061C0 (g_dComIfG_gameInfo)
//	80168064: 8009778C (eyePos__9dCamera_cFP10fopAc_ac_c)
//	8016808C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801680B4: 80453768 (lit_9788)
//	801680C4: 80078FF4 (__ct__12dBgS_RoofChkFv)
//	801680CC: 80078EEC (SetUnderwaterRoof__16dBgS_PolyPassChkFv)
//	801680E8: 804061C0 (g_dComIfG_gameInfo)
//	801680EC: 804061C0 (g_dComIfG_gameInfo)
//	801680FC: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	80168118: 8007757C (__ct__11dBgS_GndChkFv)
//	8016811C: 803AB6B8 (__vt__14dBgS_CamGndChk)
//	80168120: 803AB6B8 (__vt__14dBgS_CamGndChk)
//	80168144: 80078E80 (SetCam__16dBgS_PolyPassChkFv)
//	80168150: 80078E8C (ClrCam__16dBgS_PolyPassChkFv)
//	80168158: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80168164: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80168170: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8016817C: 80078E80 (SetCam__16dBgS_PolyPassChkFv)
//	80168184: 80078E74 (ClrObj__16dBgS_PolyPassChkFv)
//	80168190: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8016819C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80168284: 804536AC (lit_5659)
//	801682A8: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	801682B4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	801682BC: 804536AC (lit_5659)
//	801682F8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80168300: 80453734 (lit_9398)
//	80168314: 804061C0 (g_dComIfG_gameInfo)
//	80168318: 804061C0 (g_dComIfG_gameInfo)
//	80168404: 804061C0 (g_dComIfG_gameInfo)
//	80168408: 804061C0 (g_dComIfG_gameInfo)
//	8016847C: 80268210 (cBgW_CheckBWall__Ff)
//	801684D8: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	801684EC: 80074618 (GetActorPointer__4cBgSCFi)
//	80168508: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	80168530: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016853C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80168558: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80168580: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801685E0: 8007595C (MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	801685FC: 8007595C (MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	8016860C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80168618: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	8016865C: 80074F40 (GetCamMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	80168698: 80074F90 (GetRoomCamId__4dBgSFRC13cBgS_PolyInfo)
//	801686F8: 80074F90 (GetRoomCamId__4dBgSFRC13cBgS_PolyInfo)
//	80168714: 80077988 (__dt__14dBgS_CamGndChkFv)
//	80168720: 80079090 (__dt__12dBgS_RoofChkFv)
//	80168730: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::checkGroundInfo() {
    nofralloc
#include "asm/d/d_camera/checkGroundInfo__9dCamera_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8042C9A0-8042C9AC 000C+00 s=1 e=0 z=0  None .bss       @9808 */
static u8 lit_9808[12];

/* 80451034-80451038 0004+00 s=1 e=0 z=0  None .sbss      JumpCushion$9801 */
static f32 JumpCushion;

/* 80451038-8045103C 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 struct_80451038[4];

/* 8045103C-80451040 0004+00 s=2 e=0 z=0  None .sbss      None */
static u8 struct_8045103C[4];

/* 8045376C-80453770 0004+00 s=3 e=0 z=0  None .sdata2    @10550 */
SECTION_SDATA2 static f32 lit_10550 = 9.0f / 10.0f;

/* 80453770-80453774 0004+00 s=2 e=0 z=0  None .sdata2    @10551 */
SECTION_SDATA2 static f32 lit_10551 = -75.0f;

/* 80453774-80453778 0004+00 s=2 e=0 z=0  None .sdata2    @10552 */
SECTION_SDATA2 static f32 lit_10552 = 75.0f;

/* 80453778-8045377C 0004+00 s=1 e=0 z=0  None .sdata2    @10553 */
SECTION_SDATA2 static f32 lit_10553 = 22.0f;

/* 8045377C-80453780 0004+00 s=2 e=0 z=0  None .sdata2    @10554 */
SECTION_SDATA2 static f32 lit_10554 = 550.0f;

/* 80453780-80453784 0004+00 s=2 e=0 z=0  None .sdata2    @10555 */
SECTION_SDATA2 static f32 lit_10555 = -70.0f;

/* 80453784-80453788 0004+00 s=3 e=0 z=0  None .sdata2    @10556 */
SECTION_SDATA2 static f32 lit_10556 = 90.0f;

/* 80453788-8045378C 0004+00 s=6 e=0 z=0  None .sdata2    @10557 */
SECTION_SDATA2 static f32 lit_10557 = 50.0f;

/* 8045378C-80453790 0004+00 s=3 e=0 z=0  None .sdata2    @10558 */
SECTION_SDATA2 static f32 lit_10558 = -30.0f;

/* 80453790-80453794 0004+00 s=4 e=0 z=0  None .sdata2    @10559 */
SECTION_SDATA2 static f32 lit_10559 = -80.0f;

/* 80453794-80453798 0004+00 s=3 e=0 z=0  None .sdata2    @10560 */
SECTION_SDATA2 static f32 lit_10560 = 3.0f / 20.0f;

/* 80453798-8045379C 0004+00 s=3 e=0 z=0  None .sdata2    @10561 */
SECTION_SDATA2 static f32 lit_10561 = -60.0f;

/* 8045379C-804537A0 0004+00 s=2 e=0 z=0  None .sdata2    @10562 */
SECTION_SDATA2 static f32 lit_10562 = -1.0f / 5.0f;

/* 804537A0-804537A4 0004+00 s=2 e=0 z=0  None .sdata2    @10563 */
SECTION_SDATA2 static f32 lit_10563 = 1.0f / 25.0f;

/* 804537A4-804537A8 0004+00 s=3 e=0 z=0  None .sdata2    @10564 */
SECTION_SDATA2 static f32 lit_10564 = -45.0f;

/* 804537A8-804537AC 0004+00 s=3 e=0 z=0  None .sdata2    @10565 */
SECTION_SDATA2 static f32 lit_10565 = 45.0f;

/* 804537AC-804537B0 0004+00 s=2 e=0 z=0  None .sdata2    @10566 */
SECTION_SDATA2 static f32 lit_10566 = 3.0f / 50.0f;

/* 804537B0-804537B4 0004+00 s=2 e=0 z=0  None .sdata2    @10567 */
SECTION_SDATA2 static f32 lit_10567 = 100000.0f;

/* 804537B4-804537B8 0004+00 s=1 e=0 z=0  None .sdata2    @10568 */
SECTION_SDATA2 static f32 lit_10568 = 2.5f;

/* 804537B8-804537BC 0004+00 s=5 e=0 z=0  None .sdata2    @10569 */
SECTION_SDATA2 static f32 lit_10569 = 8.0f;

/* 804537BC-804537C0 0004+00 s=2 e=0 z=0  None .sdata2    @10570 */
SECTION_SDATA2 static f32 lit_10570 = 6.0f / 5.0f;

/* 804537C0-804537C4 0004+00 s=1 e=0 z=0  None .sdata2    @10571 */
SECTION_SDATA2 static f32 lit_10571 = 0.0062500000931322575f;

/* 804537C4-804537C8 0004+00 s=1 e=0 z=0  None .sdata2    @10572 */
SECTION_SDATA2 static f32 lit_10572 = 11.0f / 5.0f;

/* 804537C8-804537CC 0004+00 s=1 e=0 z=0  None .sdata2    @10573 */
SECTION_SDATA2 static f32 lit_10573 = -1.0f / 10.0f;

/* 804537CC-804537D0 0004+00 s=6 e=0 z=0  None .sdata2    @10574 */
SECTION_SDATA2 static f32 lit_10574 = 15.0f;

/* 804537D0-804537D4 0004+00 s=3 e=0 z=0  None .sdata2    @10575 */
SECTION_SDATA2 static f32 lit_10575 = 1.25f;

/* 804537D4-804537D8 0004+00 s=1 e=0 z=0  None .sdata2    @10576 */
SECTION_SDATA2 static f32 lit_10576 = 7.0f / 20.0f;

/* 804537D8-804537DC 0004+00 s=3 e=0 z=0  None .sdata2    @10577 */
SECTION_SDATA2 static f32 lit_10577 = 2.0f / 5.0f;

/* 804537DC-804537E0 0004+00 s=1 e=0 z=0  None .sdata2    @10578 */
SECTION_SDATA2 static f32 lit_10578 = 500.0f;

/* 804537E0-804537E4 0004+00 s=1 e=0 z=0  None .sdata2    @10579 */
SECTION_SDATA2 static f32 lit_10579 = 11.0f / 20.0f;

/* 804537E4-804537E8 0004+00 s=1 e=0 z=0  None .sdata2    @10580 */
SECTION_SDATA2 static f32 lit_10580 = 14.0f;

/* 804537E8-804537EC 0004+00 s=5 e=0 z=0  None .sdata2    @10581 */
SECTION_SDATA2 static f32 lit_10581 = 180.0f;

/* 804537EC-804537F0 0004+00 s=4 e=0 z=0  None .sdata2    @10582 */
SECTION_SDATA2 static f32 lit_10582 = -50.0f;

/* 80168744-8016C25C 3B18+00 s=3 e=0 z=0  None .text      chaseCamera__9dCamera_cFl */
//	801687E4: 803621A8 (_savegpr_16)
//	801687F0: 80451038 (struct_80451038)
//	801687FC: 8045376C (lit_10550)
//	80168800: 80451034 (JumpCushion)
//	80168808: 80451038 (struct_80451038)
//	80168810: 80182CFC (ChargeLatitude__11dCamSetup_cFv)
//	8016881C: 80182CF4 (ChargeTimer__11dCamSetup_cFv)
//	80168824: 80182CEC (ChargeBRatio__11dCamSetup_cFv)
//	8016882C: 80451039 (struct_80451038)
//	80168838: 8045103C (struct_8045103C)
//	8016883C: 80453754 (lit_9406)
//	80168840: 80270FC8 (__ct__7cSAngleFf)
//	80168844: 80030510 (__dt__7cSAngleFv)
//	80168848: 80030510 (__dt__7cSAngleFv)
//	8016884C: 8042C9A0 (lit_9808)
//	80168850: 8042C9A0 (lit_9808)
//	80168854: 80361C24 (__register_global_object)
//	8016885C: 80451039 (struct_80451038)
//	80168864: 80182ABC (getMidnaActor__9daPy_py_cFv)
//	80168868: 8018299C (dComIfGp_getAttention__Fv)
//	8016886C: 80182994 (GetCheckObjectCount__12dAttention_cFv)
//	80168878: 8018299C (dComIfGp_getAttention__Fv)
//	80168880: 8007378C (CheckObjectTarget__12dAttention_cFl)
//	80168890: 80097778 (setFlag__9dCamera_cFUl)
//	801688A0: 80182CD0 (Val__11dCamParam_cFli)
//	801688B4: 80182CD0 (Val__11dCamParam_cFli)
//	801688C8: 80182CD0 (Val__11dCamParam_cFli)
//	801688DC: 80182CD0 (Val__11dCamParam_cFli)
//	801688F0: 80182CD0 (Val__11dCamParam_cFli)
//	80168904: 80182CD0 (Val__11dCamParam_cFli)
//	80168918: 80182CD0 (Val__11dCamParam_cFli)
//	8016892C: 80182CD0 (Val__11dCamParam_cFli)
//	80168940: 80182CD0 (Val__11dCamParam_cFli)
//	80168954: 80182CD0 (Val__11dCamParam_cFli)
//	80168968: 80182CD0 (Val__11dCamParam_cFli)
//	8016897C: 80182CD0 (Val__11dCamParam_cFli)
//	80168990: 80182CD0 (Val__11dCamParam_cFli)
//	801689A4: 80182CD0 (Val__11dCamParam_cFli)
//	801689B8: 80182CD0 (Val__11dCamParam_cFli)
//	801689CC: 80182CD0 (Val__11dCamParam_cFli)
//	801689E0: 80182CD0 (Val__11dCamParam_cFli)
//	801689F4: 80182CD0 (Val__11dCamParam_cFli)
//	80168A08: 80182CD0 (Val__11dCamParam_cFli)
//	80168A1C: 80182CD0 (Val__11dCamParam_cFli)
//	80168A30: 80182CD0 (Val__11dCamParam_cFli)
//	80168A44: 80182CD0 (Val__11dCamParam_cFli)
//	80168A58: 80182CD0 (Val__11dCamParam_cFli)
//	80168A6C: 80182CD0 (Val__11dCamParam_cFli)
//	80168A78: 80453770 (lit_10551)
//	80168A7C: 80270FC8 (__ct__7cSAngleFf)
//	80168A84: 80453774 (lit_10552)
//	80168A88: 80270FC8 (__ct__7cSAngleFf)
//	80168A8C: 804536EC (lit_6766)
//	80168A98: 80182CB4 (CheckFlag__11dCamParam_cFUs)
//	80168AAC: 80097778 (setFlag__9dCamera_cFUl)
//	80168AD0: 8042C8F8 (data_8042C8F8)
//	80168AD4: 8042C8F8 (data_8042C8F8)
//	80168AE4: 804536A0 (lit_5656)
//	80168B0C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80168B1C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	80168B2C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80168B38: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80168B44: 80009184 (__dt__4cXyzFv)
//	80168B50: 80009184 (__dt__4cXyzFv)
//	80168B5C: 80009184 (__dt__4cXyzFv)
//	80168B68: 80182980 (chkFlag__9dCamera_cFUl)
//	80168B88: 800977D8 (__as__4cXyzFRC4cXyz)
//	80168B94: 800977D8 (__as__4cXyzFRC4cXyz)
//	80168BA0: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	80168BAC: 804536A0 (lit_5656)
//	80168BC8: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80168BD0: 802710E8 (Inv__7cSAngleCFv)
//	80168BDC: 80270F98 (__ct__7cSAngleFs)
//	80168BE8: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80168BF4: 80030510 (__dt__7cSAngleFv)
//	80168C00: 80030510 (__dt__7cSAngleFv)
//	80168C28: 804536A0 (lit_5656)
//	80168C40: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80168C4C: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80168C58: 80030510 (__dt__7cSAngleFv)
//	80168C64: 80182980 (chkFlag__9dCamera_cFUl)
//	80168C74: 80165104 (setUSOAngle__9dCamera_cFv)
//	80168C84: 80182C8C (Flag__11dCamParam_cFlUs)
//	80168CCC: 80009184 (__dt__4cXyzFv)
//	80168CDC: 8016C368 (func_8016C368)
//	80168D04: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80168D10: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80168D1C: 80030510 (__dt__7cSAngleFv)
//	80168D34: 8016C368 (func_8016C368)
//	80168D50: 8016C368 (func_8016C368)
//	80168D64: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	80168D8C: 80268210 (cBgW_CheckBWall__Ff)
//	80168DA0: 80182C84 (U__7cSGlobeCFv)
//	80168DB0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80168DBC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80168DC8: 80030510 (__dt__7cSAngleFv)
//	80168DEC: 80182C8C (Flag__11dCamParam_cFlUs)
//	80168E10: 80182C7C (Fovy__11dCamParam_cFUc)
//	80168E1C: 80182C74 (Arg0__11dCamParam_cFUc)
//	80168E28: 80182C6C (Arg1__11dCamParam_cFUc)
//	80168E38: 80182C60 (Arg2__11dCamParam_cFs)
//	80168E78: 800885D4 (Change__11dCamParam_cFl)
//	80168E88: 80182C58 (Fovy__11dCamParam_cFv)
//	80168E9C: 80182C58 (Fovy__11dCamParam_cFv)
//	80168EA4: 80453698 (lit_4448)
//	80168EC4: 80182C50 (Arg0__11dCamParam_cFv)
//	80168ED8: 80182C50 (Arg0__11dCamParam_cFv)
//	80168EE0: 80453698 (lit_4448)
//	80168EFC: 80453738 (lit_9399)
//	80168F08: 80182C48 (Arg1__11dCamParam_cFv)
//	80168F1C: 80182C48 (Arg1__11dCamParam_cFv)
//	80168F24: 80453698 (lit_4448)
//	80168F44: 80182C3C (Arg2__11dCamParam_cFv)
//	80168F58: 80182C3C (Arg2__11dCamParam_cFv)
//	80168F60: 80453698 (lit_4448)
//	80168FA4: 80182C7C (Fovy__11dCamParam_cFUc)
//	80168FB0: 80182C74 (Arg0__11dCamParam_cFUc)
//	80168FBC: 80182C6C (Arg1__11dCamParam_cFUc)
//	80168FC8: 80182C60 (Arg2__11dCamParam_cFs)
//	80169008: 800885D4 (Change__11dCamParam_cFl)
//	80169024: 80453714 (lit_8023)
//	80169064: 8016C34C (func_8016C34C)
//	8016907C: 8016C368 (func_8016C368)
//	80169094: 8016C330 (func_8016C330)
//	801690A8: 8018296C (clrFlag__9dCamera_cFUl)
//	801690B0: 80182AB4 (getLeftFootPosP__9daPy_py_cFv)
//	801690BC: 80182AAC (getRightFootPosP__9daPy_py_cFv)
//	801690F4: 80182980 (chkFlag__9dCamera_cFUl)
//	80169104: 80182C34 (ThrowCtrAdjust__11dCamSetup_cFv)
//	80169114: 80182C2C (ThrowVAngle__11dCamSetup_cFv)
//	80169134: 80182C24 (ThrowCushion__11dCamSetup_cFv)
//	80169144: 80451188 (_0__7cSAngle)
//	80169148: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016918C: 80182980 (chkFlag__9dCamera_cFUl)
//	8016919C: 80182C34 (ThrowCtrAdjust__11dCamSetup_cFv)
//	801691B4: 80182C1C (ThrowTimer__11dCamSetup_cFv)
//	801691B8: 80453698 (lit_4448)
//	80169204: 800F3CF8 (checkCanoeRideTandem__9daAlink_cFv)
//	80169210: 80453738 (lit_9399)
//	80169224: 8016C368 (func_8016C368)
//	80169234: 80453778 (lit_10553)
//	8016923C: 804536A8 (lit_5658)
//	80169260: 80182964 (push_any_key__9dCamera_cFv)
//	801692A0: 8045377C (lit_10554)
//	801692B0: 804536F0 (lit_7609)
//	801692CC: 8016C34C (func_8016C34C)
//	801692E8: 80453768 (lit_9788)
//	801692FC: 8016C330 (func_8016C330)
//	80169350: 8016C330 (func_8016C330)
//	80169370: 80182980 (chkFlag__9dCamera_cFUl)
//	8016937C: 80453780 (lit_10555)
//	801693A0: 8045374C (lit_9404)
//	801693B4: 804536F0 (lit_7609)
//	801693D0: 8016C330 (func_8016C330)
//	801693E8: 804536A8 (lit_5658)
//	801693EC: 80453734 (lit_9398)
//	801693F8: 80453724 (lit_8530)
//	80169400: 80453718 (lit_8127)
//	80169404: 804536A8 (lit_5658)
//	8016940C: 80453784 (lit_10556)
//	80169428: 8045372C (lit_9396)
//	80169444: 804536B4 (lit_5661)
//	8016945C: 8018299C (dComIfGp_getAttention__Fv)
//	8016947C: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016948C: 80451188 (_0__7cSAngle)
//	80169490: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	801694A0: 804536EC (lit_6766)
//	801694B0: 8016C330 (func_8016C330)
//	801694BC: 80182878 (daAlink_getAlinkActorClass__Fv)
//	801694C0: 80182870 (getHsSubChainTopPos__9daAlink_cCFv)
//	801694CC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801694DC: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801694EC: 80453738 (lit_9399)
//	80169504: 80009184 (__dt__4cXyzFv)
//	8016951C: 80009184 (__dt__4cXyzFv)
//	80169528: 8016C368 (func_8016C368)
//	80169534: 80453788 (lit_10557)
//	8016954C: 804536A8 (lit_5658)
//	80169554: 8045378C (lit_10558)
//	8016955C: 80453790 (lit_10559)
//	80169560: 8027100C (Val__7cSAngleFf)
//	80169568: 80453754 (lit_9406)
//	8016956C: 8027100C (Val__7cSAngleFf)
//	80169570: 80453734 (lit_9398)
//	80169574: 80453718 (lit_8127)
//	8016957C: 80451198 (_270__7cSAngle)
//	80169580: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	80169590: 80451190 (_90__7cSAngle)
//	80169594: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	801695A0: 80453718 (lit_8127)
//	801695AC: 804536E4 (lit_6629)
//	801695BC: 804536E4 (lit_6629)
//	801695CC: 804536E8 (lit_6630)
//	801695D4: 80453794 (lit_10560)
//	801695E8: 8016C368 (func_8016C368)
//	801695F4: 80453788 (lit_10557)
//	801695FC: 804536EC (lit_6766)
//	80169610: 80453798 (lit_10561)
//	80169614: 8027100C (Val__7cSAngleFf)
//	8016961C: 804536B8 (lit_5662)
//	80169620: 8027100C (Val__7cSAngleFf)
//	80169624: 80453718 (lit_8127)
//	80169634: 80453718 (lit_8127)
//	80169648: 80451188 (_0__7cSAngle)
//	8016964C: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80169650: 80453794 (lit_10560)
//	80169664: 80451188 (_0__7cSAngle)
//	80169668: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80169688: 8016C368 (func_8016C368)
//	80169694: 8045378C (lit_10558)
//	801696A4: 8045378C (lit_10558)
//	801696C0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801696CC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801696D8: 80009184 (__dt__4cXyzFv)
//	801696EC: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	80169710: 80182980 (chkFlag__9dCamera_cFUl)
//	80169724: 8016C330 (func_8016C330)
//	8016973C: 8016C368 (func_8016C368)
//	8016974C: 8045379C (lit_10562)
//	80169764: 80453714 (lit_8023)
//	8016977C: 804537A0 (lit_10563)
//	8016978C: 804537A4 (lit_10564)
//	80169794: 804537A8 (lit_10565)
//	801697B4: 804537AC (lit_10566)
//	801697E4: 804536A0 (lit_5656)
//	801697FC: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016980C: 80182A64 (R__7cSGlobeCFv)
//	80169850: 80453724 (lit_8530)
//	8016988C: 80453740 (lit_9401)
//	801698B0: 8014195C (__ct__4cXyzFfff)
//	801698CC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801698D8: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	801698E4: 80009184 (__dt__4cXyzFv)
//	80169908: 8016C368 (func_8016C368)
//	80169914: 804536A0 (lit_5656)
//	80169920: 804536A8 (lit_5658)
//	80169948: 804536E0 (lit_6180)
//	80169980: 804536A0 (lit_5656)
//	801699A0: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801699B4: 80009184 (__dt__4cXyzFv)
//	801699C0: 804536A8 (lit_5658)
//	801699CC: 80182A54 (dComIfGp_evmng_cameraPlay__Fv)
//	801699E0: 80393F68 (d_d_camera__stringBase0)
//	801699E4: 80393F68 (d_d_camera__stringBase0)
//	801699F0: 8008908C (getEvIntData__9dCamera_cFPiPci)
//	80169A28: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	80169A34: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80169A40: 80009184 (__dt__4cXyzFv)
//	80169A48: 80271B7C (Invert__7cSGlobeFv)
//	80169A54: 802717F0 (__ct__7cSGlobeFRC7cSGlobe)
//	80169A5C: 804537B0 (lit_10567)
//	80169A60: 80182A4C (R__7cSGlobeFf)
//	80169A6C: 80271AB4 (Xyz__7cSGlobeCFv)
//	80169A7C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80169A88: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80169A94: 80009184 (__dt__4cXyzFv)
//	80169AA0: 80009184 (__dt__4cXyzFv)
//	80169AB0: 8026F2A8 (__ct__8cM3dGLinFRC4cXyzRC4cXyz)
//	80169AC4: 80268710 (cM3d_Len3dSqPntAndSegLine__FPC8cM3dGLinPC3VecP3VecPf)
//	80169AE4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80169AF4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80169B00: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80169B0C: 80009184 (__dt__4cXyzFv)
//	80169B18: 800977D8 (__as__4cXyzFRC4cXyz)
//	80169B28: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80169B34: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80169B40: 80009184 (__dt__4cXyzFv)
//	80169B48: 80182A48 (__ct__7cSAngleFv)
//	80169B54: 80182980 (chkFlag__9dCamera_cFUl)
//	80169B74: 80182A3C (fabsf__3stdFf)
//	80169B78: 804536E8 (lit_6630)
//	80169B90: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80169B98: 802710E8 (Inv__7cSAngleCFv)
//	80169BA4: 80271004 (Val__7cSAngleFs)
//	80169BB0: 80030510 (__dt__7cSAngleFv)
//	80169BBC: 80182C84 (U__7cSGlobeCFv)
//	80169BC8: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	80169BD0: 80453690 (lit_4445)
//	80169BDC: 80270FC8 (__ct__7cSAngleFf)
//	80169BE4: 80453690 (lit_4445)
//	80169BF8: 80271850 (__ct__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	80169C04: 80030510 (__dt__7cSAngleFv)
//	80169C10: 80271AB4 (Xyz__7cSGlobeCFv)
//	80169C20: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80169C2C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80169C38: 80009184 (__dt__4cXyzFv)
//	80169C44: 80009184 (__dt__4cXyzFv)
//	80169C54: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80169C60: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80169C68: 8008E790 (abs__4cXyzCFv)
//	80169C6C: 804537B4 (lit_10568)
//	80169C7C: 80009184 (__dt__4cXyzFv)
//	80169C88: 80009184 (__dt__4cXyzFv)
//	80169CA8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80169CC8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80169CD4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80169CDC: 8008E790 (abs__4cXyzCFv)
//	80169CE0: 804537B8 (lit_10569)
//	80169CF0: 80009184 (__dt__4cXyzFv)
//	80169CFC: 80009184 (__dt__4cXyzFv)
//	80169D14: 80182A3C (fabsf__3stdFf)
//	80169D34: 80182A3C (fabsf__3stdFf)
//	80169D54: 80270FC8 (__ct__7cSAngleFf)
//	80169D5C: 802710F8 (Sin__7cSAngleCFv)
//	80169D6C: 80030510 (__dt__7cSAngleFv)
//	80169D70: 80453738 (lit_9399)
//	80169D8C: 80182A3C (fabsf__3stdFf)
//	80169D90: 804537BC (lit_10570)
//	80169D98: 804537C0 (lit_10571)
//	80169DA0: 80182A24 (JMAFastSqrt__Ff)
//	80169DA4: 804537C4 (lit_10572)
//	80169DDC: 80009184 (__dt__4cXyzFv)
//	80169DE8: 8007167C (__dt__7cSGlobeFv)
//	80169DF4: 80030510 (__dt__7cSAngleFv)
//	80169E00: 80036A5C (__dt__8cM3dGLinFv)
//	80169E0C: 80009184 (__dt__4cXyzFv)
//	80169E18: 8007167C (__dt__7cSGlobeFv)
//	80169E24: 80009184 (__dt__4cXyzFv)
//	80169E2C: 80182A10 (checkGoronSideMove__9daPy_py_cCFv)
//	80169E48: 8042C8F8 (data_8042C8F8)
//	80169E4C: 8042C8F8 (data_8042C8F8)
//	80169E70: 80182980 (chkFlag__9dCamera_cFUl)
//	80169EB8: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	80169EE4: 80271AB4 (Xyz__7cSGlobeCFv)
//	80169EF0: 80266CE4 (norm__4cXyzCFv)
//	80169EFC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80169F08: 80009184 (__dt__4cXyzFv)
//	80169F14: 80009184 (__dt__4cXyzFv)
//	80169F20: 80347194 (PSVECDotProduct)
//	80169F24: 804537C8 (lit_10573)
//	80169F3C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80169F48: 80453690 (lit_4445)
//	80169F4C: 80266B84 (__ml__4cXyzCFf)
//	80169F58: 800977D8 (__as__4cXyzFRC4cXyz)
//	80169F64: 80009184 (__dt__4cXyzFv)
//	80169F70: 80009184 (__dt__4cXyzFv)
//	80169F7C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80169F88: 80182A4C (R__7cSGlobeFf)
//	80169F94: 80271AB4 (Xyz__7cSGlobeCFv)
//	80169FA4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80169FB0: 800977D8 (__as__4cXyzFRC4cXyz)
//	80169FBC: 80009184 (__dt__4cXyzFv)
//	80169FC8: 80009184 (__dt__4cXyzFv)
//	80169FE0: 80009184 (__dt__4cXyzFv)
//	80169FE8: 80451020 (data_80451020)
//	80169FF8: 8018283C (checkCameraLargeDamage__9daAlink_cCFv)
//	8016A014: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	8016A020: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016A02C: 80009184 (__dt__4cXyzFv)
//	8016A038: 80270FC8 (__ct__7cSAngleFf)
//	8016A040: 80182C84 (U__7cSGlobeCFv)
//	8016A054: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	8016A060: 80030510 (__dt__7cSAngleFv)
//	8016A06C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016A07C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016A088: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016A094: 80009184 (__dt__4cXyzFv)
//	8016A0A0: 80009184 (__dt__4cXyzFv)
//	8016A0E4: 80182980 (chkFlag__9dCamera_cFUl)
//	8016A0FC: 80182980 (chkFlag__9dCamera_cFUl)
//	8016A124: 80182A08 (V__7cSGlobeCFv)
//	8016A128: 80271030 (Degree__7cSAngleCFv)
//	8016A138: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016A144: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016A158: 80182980 (chkFlag__9dCamera_cFUl)
//	8016A168: 80182A64 (R__7cSGlobeCFv)
//	8016A184: 80453698 (lit_4448)
//	8016A1A4: 804536A0 (lit_5656)
//	8016A1CC: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	8016A1D8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016A1E4: 80009184 (__dt__4cXyzFv)
//	8016A1EC: 800E1390 (getCopyRodCameraActor__9daAlink_cFv)
//	8016A204: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016A210: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016A21C: 80009184 (__dt__4cXyzFv)
//	8016A230: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	8016A248: 80097778 (setFlag__9dCamera_cFUl)
//	8016A254: 80009184 (__dt__4cXyzFv)
//	8016A278: 80453738 (lit_9399)
//	8016A28C: 80453750 (lit_9405)
//	8016A290: 80167CD8 (jutOutCheck__9dCamera_cFP4cXyzf)
//	8016A298: 804536A0 (lit_5656)
//	8016A2A0: 804536E4 (lit_6629)
//	8016A2AC: 8014195C (__ct__4cXyzFfff)
//	8016A2BC: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016A2C8: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016A2D8: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	8016A2E8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016A2F4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016A300: 80009184 (__dt__4cXyzFv)
//	8016A30C: 80009184 (__dt__4cXyzFv)
//	8016A318: 80030510 (__dt__7cSAngleFv)
//	8016A324: 80009184 (__dt__4cXyzFv)
//	8016A32C: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	8016A344: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	8016A354: 801411F0 (__ct__8cM3dGPlaFv)
//	8016A358: 801829F8 (dComIfG_Bgsp__Fv)
//	8016A364: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8016A36C: 801829F0 (GetCross__11cBgS_LinChkFv)
//	8016A378: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016A380: 801829EC (GetNP__8cM3dGPlaFv)
//	8016A38C: 8008E904 (__apl__4cXyzFRC3Vec)
//	8016A390: 80453758 (lit_9407)
//	8016A3A0: 8001DB90 (__dt__8cM3dGPlaFv)
//	8016A3B4: 802710E8 (Inv__7cSAngleCFv)
//	8016A3C0: 80270F98 (__ct__7cSAngleFs)
//	8016A3CC: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016A3D8: 80030510 (__dt__7cSAngleFv)
//	8016A3E8: 801829F8 (dComIfG_Bgsp__Fv)
//	8016A400: 8007595C (MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	8016A410: 80453698 (lit_4448)
//	8016A444: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016A454: 80453724 (lit_8530)
//	8016A45C: 80182964 (push_any_key__9dCamera_cFv)
//	8016A46C: 8045370C (lit_8021)
//	8016A498: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016A4A8: 80266B84 (__ml__4cXyzCFf)
//	8016A4B4: 8008E904 (__apl__4cXyzFRC3Vec)
//	8016A4C0: 80009184 (__dt__4cXyzFv)
//	8016A4CC: 80009184 (__dt__4cXyzFv)
//	8016A4D8: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	8016A4F8: 80182A3C (fabsf__3stdFf)
//	8016A4FC: 80453768 (lit_9788)
//	8016A518: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016A524: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016A530: 80009184 (__dt__4cXyzFv)
//	8016A538: 804537CC (lit_10574)
//	8016A548: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	8016A560: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	8016A570: 801411F0 (__ct__8cM3dGPlaFv)
//	8016A574: 801829F8 (dComIfG_Bgsp__Fv)
//	8016A580: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8016A588: 801829F0 (GetCross__11cBgS_LinChkFv)
//	8016A594: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016A59C: 801829EC (GetNP__8cM3dGPlaFv)
//	8016A5A8: 8008E904 (__apl__4cXyzFRC3Vec)
//	8016A5B4: 8001DB90 (__dt__8cM3dGPlaFv)
//	8016A5C0: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	8016A5CC: 80009184 (__dt__4cXyzFv)
//	8016A5D4: 80182A64 (R__7cSGlobeCFv)
//	8016A5E0: 8015FA2C (func_8015FA2C)
//	8016A5FC: 80270FC8 (__ct__7cSAngleFf)
//	8016A614: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8016A61C: 80271030 (Degree__7cSAngleCFv)
//	8016A628: 802710E8 (Inv__7cSAngleCFv)
//	8016A634: 80270F98 (__ct__7cSAngleFs)
//	8016A648: 80271850 (__ct__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	8016A654: 80030510 (__dt__7cSAngleFv)
//	8016A65C: 80182A64 (R__7cSGlobeCFv)
//	8016A668: 80182A64 (R__7cSGlobeCFv)
//	8016A678: 80182A64 (R__7cSGlobeCFv)
//	8016A684: 80182A4C (R__7cSGlobeFf)
//	8016A68C: 80182A08 (V__7cSGlobeCFv)
//	8016A698: 80182A08 (V__7cSGlobeCFv)
//	8016A6A8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016A6B8: 80271264 (__ml__7cSAngleCFf)
//	8016A6C0: 80182A08 (V__7cSGlobeCFv)
//	8016A6D0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016A6DC: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8016A6E8: 80030510 (__dt__7cSAngleFv)
//	8016A6F4: 80030510 (__dt__7cSAngleFv)
//	8016A700: 80030510 (__dt__7cSAngleFv)
//	8016A70C: 80182980 (chkFlag__9dCamera_cFUl)
//	8016A72C: 80182C84 (U__7cSGlobeCFv)
//	8016A73C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016A74C: 80271264 (__ml__7cSAngleCFf)
//	8016A754: 80182C84 (U__7cSGlobeCFv)
//	8016A764: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016A770: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016A77C: 80030510 (__dt__7cSAngleFv)
//	8016A788: 80030510 (__dt__7cSAngleFv)
//	8016A794: 80030510 (__dt__7cSAngleFv)
//	8016A7A0: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016A7B0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016A7BC: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016A7C8: 80009184 (__dt__4cXyzFv)
//	8016A7D4: 80009184 (__dt__4cXyzFv)
//	8016A7E0: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016A804: 80182A64 (R__7cSGlobeCFv)
//	8016A858: 8007167C (__dt__7cSGlobeFv)
//	8016A864: 80030510 (__dt__7cSAngleFv)
//	8016A870: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	8016A87C: 80009184 (__dt__4cXyzFv)
//	8016A888: 80009184 (__dt__4cXyzFv)
//	8016A894: 80009184 (__dt__4cXyzFv)
//	8016A8A0: 80009184 (__dt__4cXyzFv)
//	8016A8AC: 80009184 (__dt__4cXyzFv)
//	8016A8B8: 80030510 (__dt__7cSAngleFv)
//	8016A8C4: 80030510 (__dt__7cSAngleFv)
//	8016A8D0: 80030510 (__dt__7cSAngleFv)
//	8016A8DC: 80030510 (__dt__7cSAngleFv)
//	8016A928: 804536A8 (lit_5658)
//	8016A930: 80453698 (lit_4448)
//	8016A94C: 80453768 (lit_9788)
//	8016A958: 80453690 (lit_4445)
//	8016A95C: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016A968: 801829E0 (checkThrowDamage__9daPy_py_cCFv)
//	8016A97C: 8018299C (dComIfGp_getAttention__Fv)
//	8016A984: 8007353C (LockonTarget__12dAttention_cFl)
//	8016A990: 801412BC (fopAcM_GetName__FPv)
//	8016A9A8: 80097778 (setFlag__9dCamera_cFUl)
//	8016A9D4: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016A9E0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016A9EC: 80009184 (__dt__4cXyzFv)
//	8016A9F4: 804536E4 (lit_6629)
//	8016AA08: 801657EC (groundHeight__9dCamera_cFP4cXyz)
//	8016AA14: 8018295C (footHeightOf__9dCamera_cFP10fopAc_ac_c)
//	8016AA2C: 8016C368 (func_8016C368)
//	8016AA38: 804536A0 (lit_5656)
//	8016AA68: 80453698 (lit_4448)
//	8016AA84: 80453718 (lit_8127)
//	8016AA8C: 804537D0 (lit_10575)
//	8016AA90: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016AA94: 80451034 (JumpCushion)
//	8016AAC8: 801829F8 (dComIfG_Bgsp__Fv)
//	8016AAD0: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	8016AAE8: 80182814 (checkCokkoGlide__9daAlink_cCFv)
//	8016AAFC: 804536E0 (lit_6180)
//	8016AB04: 8045370C (lit_8021)
//	8016AB08: 804536A8 (lit_5658)
//	8016AB28: 8016C368 (func_8016C368)
//	8016AB44: 80165104 (setUSOAngle__9dCamera_cFv)
//	8016AB54: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016AB60: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016AB6C: 80030510 (__dt__7cSAngleFv)
//	8016AB80: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016AB90: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016AB9C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016ABA8: 80030510 (__dt__7cSAngleFv)
//	8016ABB4: 80030510 (__dt__7cSAngleFv)
//	8016ABBC: 80453788 (lit_10557)
//	8016ABC0: 80270FC8 (__ct__7cSAngleFf)
//	8016ABC8: 80182C14 (__ops__7cSAngleCFv)
//	8016ABD4: 802710CC (Abs__7cSAngleCFv)
//	8016ABF8: 80030510 (__dt__7cSAngleFv)
//	8016AC14: 80030510 (__dt__7cSAngleFv)
//	8016AC24: 804537D4 (lit_10576)
//	8016AC3C: 8016C368 (func_8016C368)
//	8016AC4C: 80451198 (_270__7cSAngle)
//	8016AC50: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	8016AC60: 80451190 (_90__7cSAngle)
//	8016AC64: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	8016AC70: 8045370C (lit_8021)
//	8016AC80: 804537D8 (lit_10577)
//	8016ACA4: 804536EC (lit_6766)
//	8016ACC0: 8045370C (lit_8021)
//	8016ACC8: 8045376C (lit_10550)
//	8016ACE8: 80182980 (chkFlag__9dCamera_cFUl)
//	8016ACF8: 804536EC (lit_6766)
//	8016AD04: 80453724 (lit_8530)
//	8016AD3C: 80182BF8 (getTrigA__8mDoCPd_cFUl)
//	8016AD48: 804536E0 (lit_6180)
//	8016AD60: 8045370C (lit_8021)
//	8016AD7C: 804537D8 (lit_10577)
//	8016ADA0: 8014195C (__ct__4cXyzFfff)
//	8016ADB4: 80182980 (chkFlag__9dCamera_cFUl)
//	8016ADC4: 80182A64 (R__7cSGlobeCFv)
//	8016ADDC: 80182980 (chkFlag__9dCamera_cFUl)
//	8016ADF4: 8016C368 (func_8016C368)
//	8016AE04: 8016C34C (func_8016C34C)
//	8016AE14: 8045370C (lit_8021)
//	8016AE28: 80182980 (chkFlag__9dCamera_cFUl)
//	8016AE40: 8016C368 (func_8016C368)
//	8016AE54: 8016C330 (func_8016C330)
//	8016AE70: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016AE7C: 804536A0 (lit_5656)
//	8016AE84: 80182964 (push_any_key__9dCamera_cFv)
//	8016AEA4: 80182BF0 (WaitRollTimer__11dCamSetup_cFv)
//	8016AEC8: 8007353C (LockonTarget__12dAttention_cFl)
//	8016AEDC: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016AEEC: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016AEFC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016AF08: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016AF14: 80009184 (__dt__4cXyzFv)
//	8016AF20: 80009184 (__dt__4cXyzFv)
//	8016AF2C: 80009184 (__dt__4cXyzFv)
//	8016AF34: 80182C84 (U__7cSGlobeCFv)
//	8016AF40: 80271148 (__mi__7cSAngleCFv)
//	8016AF4C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016AF58: 80030510 (__dt__7cSAngleFv)
//	8016AF64: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016AF74: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	8016AF80: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016AF8C: 80009184 (__dt__4cXyzFv)
//	8016AF98: 80030510 (__dt__7cSAngleFv)
//	8016AFA4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016AFAC: 80182A3C (fabsf__3stdFf)
//	8016AFB0: 80453710 (lit_8022)
//	8016AFBC: 804536A0 (lit_5656)
//	8016AFC8: 80453690 (lit_4445)
//	8016AFD8: 8008E790 (abs__4cXyzCFv)
//	8016AFDC: 804537DC (lit_10578)
//	8016AFE8: 804537E0 (lit_10579)
//	8016AFF8: 804536A8 (lit_5658)
//	8016B010: 80009184 (__dt__4cXyzFv)
//	8016B01C: 80030510 (__dt__7cSAngleFv)
//	8016B028: 80009184 (__dt__4cXyzFv)
//	8016B030: 804536E0 (lit_6180)
//	8016B048: 80182C84 (U__7cSGlobeCFv)
//	8016B054: 80451198 (_270__7cSAngle)
//	8016B058: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016B060: 80182A08 (V__7cSGlobeCFv)
//	8016B074: 80271850 (__ct__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	8016B080: 80030510 (__dt__7cSAngleFv)
//	8016B08C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016B098: 8008E904 (__apl__4cXyzFRC3Vec)
//	8016B0A4: 80009184 (__dt__4cXyzFv)
//	8016B0B0: 8007167C (__dt__7cSGlobeFv)
//	8016B0C0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016B0D0: 80266BD0 (__ml__4cXyzCFRC3Vec)
//	8016B0DC: 8008E904 (__apl__4cXyzFRC3Vec)
//	8016B0E8: 80009184 (__dt__4cXyzFv)
//	8016B0F4: 80009184 (__dt__4cXyzFv)
//	8016B104: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016B110: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8016B11C: 80009184 (__dt__4cXyzFv)
//	8016B134: 80453698 (lit_4448)
//	8016B150: 804537E4 (lit_10580)
//	8016B158: 804536A8 (lit_5658)
//	8016B16C: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016B178: 804536A8 (lit_5658)
//	8016B198: 804536A8 (lit_5658)
//	8016B1A4: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016B1B0: 8016C314 (getHoldA__8mDoCPd_cFUl)
//	8016B1C0: 804537E8 (lit_10581)
//	8016B1C8: 80270FC8 (__ct__7cSAngleFf)
//	8016B1D0: 80271120 (Cos__7cSAngleCFv)
//	8016B1D8: 804536A8 (lit_5658)
//	8016B1F0: 80030510 (__dt__7cSAngleFv)
//	8016B200: 804537D8 (lit_10577)
//	8016B220: 804536E8 (lit_6630)
//	8016B234: 80453714 (lit_8023)
//	8016B25C: 80182980 (chkFlag__9dCamera_cFUl)
//	8016B27C: 804536E8 (lit_6630)
//	8016B290: 804536A8 (lit_5658)
//	8016B298: 80453714 (lit_8023)
//	8016B2C0: 804536A0 (lit_5656)
//	8016B2D0: 804536A0 (lit_5656)
//	8016B2E8: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016B2F0: 804537E8 (lit_10581)
//	8016B2F8: 80270FC8 (__ct__7cSAngleFf)
//	8016B300: 80271120 (Cos__7cSAngleCFv)
//	8016B308: 804536A8 (lit_5658)
//	8016B324: 80030510 (__dt__7cSAngleFv)
//	8016B330: 804536F8 (lit_8016)
//	8016B33C: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016B344: 804537E8 (lit_10581)
//	8016B34C: 80270FC8 (__ct__7cSAngleFf)
//	8016B354: 80271120 (Cos__7cSAngleCFv)
//	8016B35C: 804536A8 (lit_5658)
//	8016B378: 80030510 (__dt__7cSAngleFv)
//	8016B3A4: 8016C368 (func_8016C368)
//	8016B3C4: 8016C368 (func_8016C368)
//	8016B3E0: 80451198 (_270__7cSAngle)
//	8016B3E4: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	8016B3F4: 80451190 (_90__7cSAngle)
//	8016B3F8: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	8016B434: 80453690 (lit_4445)
//	8016B438: 80453698 (lit_4448)
//	8016B454: 80453718 (lit_8127)
//	8016B474: 80453690 (lit_4445)
//	8016B48C: 80182A48 (__ct__7cSAngleFv)
//	8016B494: 80182A08 (V__7cSGlobeCFv)
//	8016B498: 80271120 (Cos__7cSAngleCFv)
//	8016B4AC: 80182980 (chkFlag__9dCamera_cFUl)
//	8016B4C0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016B4D0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016B4DC: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8016B4E8: 80009184 (__dt__4cXyzFv)
//	8016B4F0: 80182C84 (U__7cSGlobeCFv)
//	8016B4FC: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B508: 8016C2D4 (func_8016C2D4)
//	8016B510: 80271120 (Cos__7cSAngleCFv)
//	8016B514: 80453728 (lit_9395)
//	8016B51C: 804537D4 (lit_10576)
//	8016B52C: 80030510 (__dt__7cSAngleFv)
//	8016B538: 8007167C (__dt__7cSGlobeFv)
//	8016B544: 80009184 (__dt__4cXyzFv)
//	8016B55C: 802710E8 (Inv__7cSAngleCFv)
//	8016B568: 80270F98 (__ct__7cSAngleFs)
//	8016B574: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B580: 80030510 (__dt__7cSAngleFv)
//	8016B588: 80182BE8 (WaitRollSpeed__11dCamSetup_cFv)
//	8016B5A0: 80182C84 (U__7cSGlobeCFv)
//	8016B5AC: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B5C0: 802710E8 (Inv__7cSAngleCFv)
//	8016B5CC: 80270F98 (__ct__7cSAngleFs)
//	8016B5D8: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B5E4: 80030510 (__dt__7cSAngleFv)
//	8016B5F4: 80182980 (chkFlag__9dCamera_cFUl)
//	8016B628: 8018280C (getChainGrabActor__9daAlink_cFv)
//	8016B638: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016B648: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016B654: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8016B660: 80009184 (__dt__4cXyzFv)
//	8016B66C: 80009184 (__dt__4cXyzFv)
//	8016B674: 80182C84 (U__7cSGlobeCFv)
//	8016B680: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B68C: 8007167C (__dt__7cSGlobeFv)
//	8016B6B8: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016B6C8: 802710E8 (Inv__7cSAngleCFv)
//	8016B6D4: 80270F98 (__ct__7cSAngleFs)
//	8016B6E0: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B6EC: 80030510 (__dt__7cSAngleFv)
//	8016B6FC: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B708: 802710E8 (Inv__7cSAngleCFv)
//	8016B714: 80270F98 (__ct__7cSAngleFs)
//	8016B720: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B72C: 80030510 (__dt__7cSAngleFv)
//	8016B738: 80182A3C (fabsf__3stdFf)
//	8016B740: 80182A3C (fabsf__3stdFf)
//	8016B758: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016B768: 80182A3C (fabsf__3stdFf)
//	8016B76C: 804536E8 (lit_6630)
//	8016B77C: 80453690 (lit_4445)
//	8016B780: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016B784: 804537B8 (lit_10569)
//	8016B7AC: 80270FC8 (__ct__7cSAngleFf)
//	8016B7B4: 80182C84 (U__7cSGlobeCFv)
//	8016B7C4: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016B7D0: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B7DC: 80030510 (__dt__7cSAngleFv)
//	8016B7E8: 80030510 (__dt__7cSAngleFv)
//	8016B7F0: 80182A3C (fabsf__3stdFf)
//	8016B7F4: 804536E8 (lit_6630)
//	8016B804: 80182BD0 (CheckFlag__11dCamSetup_cFUs)
//	8016B820: 80165104 (setUSOAngle__9dCamera_cFv)
//	8016B82C: 80182BB8 (CheckFlag2__11dCamSetup_cFUs)
//	8016B848: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B858: 80182980 (chkFlag__9dCamera_cFUl)
//	8016B874: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B880: 8018296C (clrFlag__9dCamera_cFUl)
//	8016B890: 8016C330 (func_8016C330)
//	8016B8AC: 80182C84 (U__7cSGlobeCFv)
//	8016B8B0: 8016C2CC (Val__7cSAngleCFv)
//	8016B8BC: 80270F98 (__ct__7cSAngleFs)
//	8016B8C8: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B8D4: 80030510 (__dt__7cSAngleFv)
//	8016B8F4: 8016C34C (func_8016C34C)
//	8016B904: 80182C84 (U__7cSGlobeCFv)
//	8016B908: 8016C2CC (Val__7cSAngleCFv)
//	8016B914: 80270F98 (__ct__7cSAngleFs)
//	8016B920: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B92C: 80030510 (__dt__7cSAngleFv)
//	8016B93C: 804536A0 (lit_5656)
//	8016B94C: 8016C330 (func_8016C330)
//	8016B968: 80182C84 (U__7cSGlobeCFv)
//	8016B96C: 8016C2CC (Val__7cSAngleCFv)
//	8016B978: 80270F98 (__ct__7cSAngleFs)
//	8016B984: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016B990: 80030510 (__dt__7cSAngleFv)
//	8016B9B0: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016B9BC: 80182C84 (U__7cSGlobeCFv)
//	8016B9CC: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016B9DC: 80271264 (__ml__7cSAngleCFf)
//	8016B9E4: 80182C84 (U__7cSGlobeCFv)
//	8016B9F4: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016BA00: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016BA0C: 80030510 (__dt__7cSAngleFv)
//	8016BA18: 80030510 (__dt__7cSAngleFv)
//	8016BA24: 80030510 (__dt__7cSAngleFv)
//	8016BA2C: 80182A48 (__ct__7cSAngleFv)
//	8016BA54: 80453698 (lit_4448)
//	8016BA70: 804537E4 (lit_10580)
//	8016BA7C: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016BA8C: 80097778 (setFlag__9dCamera_cFUl)
//	8016BAA4: 800D2ABC (checkCutLargeTurnState__9daAlink_cCFv)
//	8016BAB8: 804536A8 (lit_5658)
//	8016BAEC: 804536A8 (lit_5658)
//	8016BB00: 804536A0 (lit_5656)
//	8016BB2C: 80453690 (lit_4445)
//	8016BB58: 8016C330 (func_8016C330)
//	8016BB64: 8016C330 (func_8016C330)
//	8016BB7C: 80453724 (lit_8530)
//	8016BB94: 80182980 (chkFlag__9dCamera_cFUl)
//	8016BBC8: 80182980 (chkFlag__9dCamera_cFUl)
//	8016BBE4: 804536A0 (lit_5656)
//	8016BBF0: 80182A08 (V__7cSGlobeCFv)
//	8016BBF4: 80271030 (Degree__7cSAngleCFv)
//	8016BC4C: 80271030 (Degree__7cSAngleCFv)
//	8016BC6C: 804536E8 (lit_6630)
//	8016BC70: 80451034 (JumpCushion)
//	8016BC94: 80182A08 (V__7cSGlobeCFv)
//	8016BC98: 80271030 (Degree__7cSAngleCFv)
//	8016BCA0: 80453700 (lit_8018)
//	8016BCB0: 8016C25C (func_8016C25C)
//	8016BCC8: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016BCE8: 80009184 (__dt__4cXyzFv)
//	8016BCFC: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016BD0C: 80453794 (lit_10560)
//	8016BD10: 80453724 (lit_8530)
//	8016BD28: 80182A08 (V__7cSGlobeCFv)
//	8016BD2C: 80271030 (Degree__7cSAngleCFv)
//	8016BD3C: 80182A08 (V__7cSGlobeCFv)
//	8016BD40: 80271030 (Degree__7cSAngleCFv)
//	8016BD50: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016BD68: 804537EC (lit_10582)
//	8016BD6C: 8027100C (Val__7cSAngleFf)
//	8016BD70: 80453724 (lit_8530)
//	8016BD98: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016BDAC: 80009184 (__dt__4cXyzFv)
//	8016BDB8: 8027100C (Val__7cSAngleFf)
//	8016BDC4: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	8016BDD8: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016BDE8: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	8016BDFC: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016BE14: 80182A08 (V__7cSGlobeCFv)
//	8016BE24: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016BE34: 80271264 (__ml__7cSAngleCFf)
//	8016BE3C: 80182A08 (V__7cSGlobeCFv)
//	8016BE4C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016BE58: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8016BE64: 80030510 (__dt__7cSAngleFv)
//	8016BE70: 80030510 (__dt__7cSAngleFv)
//	8016BE7C: 80030510 (__dt__7cSAngleFv)
//	8016BE84: 80182A64 (R__7cSGlobeCFv)
//	8016BE98: 804536A8 (lit_5658)
//	8016BEE8: 8016C368 (func_8016C368)
//	8016BEF8: 80182A64 (R__7cSGlobeCFv)
//	8016BF00: 804537D8 (lit_10577)
//	8016BF0C: 80182A64 (R__7cSGlobeCFv)
//	8016BF1C: 8045374C (lit_9404)
//	8016BF6C: 804536E0 (lit_6180)
//	8016BF94: 804536E0 (lit_6180)
//	8016BFD0: 804536E0 (lit_6180)
//	8016BFF4: 804536E0 (lit_6180)
//	8016C00C: 804536A8 (lit_5658)
//	8016C018: 80182A64 (R__7cSGlobeCFv)
//	8016C020: 80182A64 (R__7cSGlobeCFv)
//	8016C034: 80182A64 (R__7cSGlobeCFv)
//	8016C040: 80182A4C (R__7cSGlobeFf)
//	8016C04C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016C05C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016C068: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016C074: 80009184 (__dt__4cXyzFv)
//	8016C080: 80009184 (__dt__4cXyzFv)
//	8016C08C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016C0A8: 804536E0 (lit_6180)
//	8016C104: 80030510 (__dt__7cSAngleFv)
//	8016C110: 80030510 (__dt__7cSAngleFv)
//	8016C11C: 8007167C (__dt__7cSGlobeFv)
//	8016C128: 80009184 (__dt__4cXyzFv)
//	8016C134: 80009184 (__dt__4cXyzFv)
//	8016C140: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	8016C14C: 80009184 (__dt__4cXyzFv)
//	8016C158: 80009184 (__dt__4cXyzFv)
//	8016C164: 80009184 (__dt__4cXyzFv)
//	8016C170: 80009184 (__dt__4cXyzFv)
//	8016C17C: 80009184 (__dt__4cXyzFv)
//	8016C188: 80030510 (__dt__7cSAngleFv)
//	8016C194: 80030510 (__dt__7cSAngleFv)
//	8016C1A0: 80030510 (__dt__7cSAngleFv)
//	8016C1AC: 80030510 (__dt__7cSAngleFv)
//	8016C248: 803621F4 (_restgpr_16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::chaseCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/chaseCamera__9dCamera_cFl.s"
}
#pragma pop

/* 8016C25C-8016C2CC 0070+00 s=2 e=0 z=0  None .text
 * isPlayerFlying__22@unnamed@d_camera_cpp@FP9daAlink_c         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8016C25C() {
    nofralloc
#include "asm/d/d_camera/func_8016C25C.s"
}
#pragma pop

/* 8016C2CC-8016C2D4 0008+00 s=1 e=0 z=0  None .text      Val__7cSAngleCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cSAngle::Val() const {
    nofralloc
#include "asm/d/d_camera/Val__7cSAngleCFv.s"
}
#pragma pop

/* 8016C2D4-8016C314 0040+00 s=1 e=0 z=0  None .text      sAngleX__22@unnamed@d_camera_cpp@FR4cXyz
 */
//	8016C2F0: 80267674 (cM_atan2s__Fff)
//	8016C2FC: 80270F98 (__ct__7cSAngleFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8016C2D4() {
    nofralloc
#include "asm/d/d_camera/func_8016C2D4.s"
}
#pragma pop

/* 8016C314-8016C330 001C+00 s=1 e=0 z=0  None .text      getHoldA__8mDoCPd_cFUl */
//	8016C318: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	8016C31C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoCPd_c::getHoldA(u32 param_0) {
    nofralloc
#include "asm/d/d_camera/getHoldA__8mDoCPd_cFUl.s"
}
#pragma pop

/* 8016C330-8016C34C 001C+00 s=5 e=0 z=0  None .text
 * check_owner_action1__22@unnamed@d_camera_cpp@FUlUl           */
//	8016C330: 804061C0 (g_dComIfG_gameInfo)
//	8016C334: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8016C330() {
    nofralloc
#include "asm/d/d_camera/func_8016C330.s"
}
#pragma pop

/* 8016C34C-8016C368 001C+00 s=2 e=0 z=0  None .text isPlayerCharging__22@unnamed@d_camera_cpp@FUl
 */
//	8016C34C: 804061C0 (g_dComIfG_gameInfo)
//	8016C350: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8016C34C() {
    nofralloc
#include "asm/d/d_camera/func_8016C34C.s"
}
#pragma pop

/* 8016C368-8016C384 001C+00 s=5 e=0 z=0  None .text
 * check_owner_action__22@unnamed@d_camera_cpp@FUlUl            */
//	8016C368: 804061C0 (g_dComIfG_gameInfo)
//	8016C36C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8016C368() {
    nofralloc
#include "asm/d/d_camera/func_8016C368.s"
}
#pragma pop

/* ############################################################################################## */
/* 804537F0-804537F4 0004+00 s=4 e=0 z=0  None .sdata2    @11167 */
SECTION_SDATA2 static f32 lit_11167 = -10.0f;

/* 804537F4-804537F8 0004+00 s=3 e=0 z=0  None .sdata2    @11168 */
SECTION_SDATA2 static f32 lit_11168 = 4.0f / 5.0f;

/* 804537F8-804537FC 0004+00 s=1 e=0 z=0  None .sdata2    @11169 */
SECTION_SDATA2 static f32 lit_11169 = 250.0f;

/* 804537FC-80453800 0004+00 s=1 e=0 z=0  None .sdata2    @11170 */
SECTION_SDATA2 static f32 lit_11170 = -90.0f;

/* 80453800-80453804 0004+00 s=3 e=0 z=0  None .sdata2    @11171 */
SECTION_SDATA2 static f32 lit_11171 = 25.0f;

/* 80453804-80453808 0004+00 s=1 e=0 z=0  None .sdata2    @11172 */
SECTION_SDATA2 static f32 lit_11172 = 7.5f;

/* 80453808-8045380C 0004+00 s=3 e=0 z=0  None .sdata2    @11173 */
SECTION_SDATA2 static f32 lit_11173 = -15.0f;

/* 8045380C-80453810 0004+00 s=2 e=0 z=0  None .sdata2    @11174 */
SECTION_SDATA2 static f32 lit_11174 = 280.0f;

/* 80453810-80453814 0004+00 s=1 e=0 z=0  None .sdata2    @11175 */
SECTION_SDATA2 static f32 lit_11175 = 1.0f / 50.0f;

/* 8016C384-8016E410 208C+00 s=1 e=0 z=0  None .text      lockonCamera__9dCamera_cFl */
//	8016C424: 803621B0 (_savegpr_18)
//	8016C43C: 80270FC8 (__ct__7cSAngleFf)
//	8016C448: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016C454: 80030510 (__dt__7cSAngleFv)
//	8016C470: 80182CD0 (Val__11dCamParam_cFli)
//	8016C484: 80182CD0 (Val__11dCamParam_cFli)
//	8016C498: 80182CD0 (Val__11dCamParam_cFli)
//	8016C4AC: 80182CD0 (Val__11dCamParam_cFli)
//	8016C4C0: 80182CD0 (Val__11dCamParam_cFli)
//	8016C4D4: 80182CD0 (Val__11dCamParam_cFli)
//	8016C4E8: 80182CD0 (Val__11dCamParam_cFli)
//	8016C4FC: 80182CD0 (Val__11dCamParam_cFli)
//	8016C510: 80182CD0 (Val__11dCamParam_cFli)
//	8016C524: 80182CD0 (Val__11dCamParam_cFli)
//	8016C538: 80182CD0 (Val__11dCamParam_cFli)
//	8016C54C: 80182CD0 (Val__11dCamParam_cFli)
//	8016C560: 80182CD0 (Val__11dCamParam_cFli)
//	8016C574: 80182CD0 (Val__11dCamParam_cFli)
//	8016C588: 80182CD0 (Val__11dCamParam_cFli)
//	8016C59C: 80182CD0 (Val__11dCamParam_cFli)
//	8016C5B0: 80182CD0 (Val__11dCamParam_cFli)
//	8016C5B8: 8018299C (dComIfGp_getAttention__Fv)
//	8016C5C4: 80182A54 (dComIfGp_evmng_cameraPlay__Fv)
//	8016C5D4: 80393F68 (d_d_camera__stringBase0)
//	8016C5D8: 80393F68 (d_d_camera__stringBase0)
//	8016C5E0: 800894C4 (getEvActor__9dCamera_cFPc)
//	8016C610: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	8016C61C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016C628: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016C640: 804536A8 (lit_5658)
//	8016C658: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016C668: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016C674: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016C680: 80009184 (__dt__4cXyzFv)
//	8016C690: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016C69C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	8016C6A8: 80009184 (__dt__4cXyzFv)
//	8016C6D8: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016C6E4: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016C6F0: 80030510 (__dt__7cSAngleFv)
//	8016C6F4: 804536A0 (lit_5656)
//	8016C708: 804536A8 (lit_5658)
//	8016C740: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016C744: 804536A8 (lit_5658)
//	8016C760: 80182888 (checkCutHeadProc__9daAlink_cCFv)
//	8016C778: 800977C0 (fopAcM_GetID__FPCv)
//	8016C78C: 801412BC (fopAcM_GetName__FPv)
//	8016C7A0: 801412BC (fopAcM_GetName__FPv)
//	8016C7B4: 80165104 (setUSOAngle__9dCamera_cFv)
//	8016C7C8: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016C7DC: 80164878 (getParamTargetActor__9dCamera_cFl)
//	8016C7E8: 800977C0 (fopAcM_GetID__FPCv)
//	8016C7F4: 8042C8F8 (data_8042C8F8)
//	8016C7F8: 8042C8F8 (data_8042C8F8)
//	8016C80C: 804537F0 (lit_11167)
//	8016C810: 80270FC8 (__ct__7cSAngleFf)
//	8016C828: 804537F0 (lit_11167)
//	8016C82C: 80270FC8 (__ct__7cSAngleFf)
//	8016C838: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8016C844: 80030510 (__dt__7cSAngleFv)
//	8016C850: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016C860: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016C86C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016C878: 80009184 (__dt__4cXyzFv)
//	8016C884: 80009184 (__dt__4cXyzFv)
//	8016C890: 80030510 (__dt__7cSAngleFv)
//	8016C89C: 80009184 (__dt__4cXyzFv)
//	8016C8B0: 80182888 (checkCutHeadProc__9daAlink_cCFv)
//	8016C8D0: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8016C8D4: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8016C8DC: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8016C8F0: 8018299C (dComIfGp_getAttention__Fv)
//	8016C8F8: 80182AD0 (keepLock__12dAttention_cFi)
//	8016C900: 8018299C (dComIfGp_getAttention__Fv)
//	8016C908: 80182AD0 (keepLock__12dAttention_cFi)
//	8016C92C: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8016C930: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8016C938: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8016C94C: 8016C368 (func_8016C368)
//	8016C964: 8042C8F8 (data_8042C8F8)
//	8016C968: 8042C8F8 (data_8042C8F8)
//	8016C99C: 804061C0 (g_dComIfG_gameInfo)
//	8016C9A0: 804061C0 (g_dComIfG_gameInfo)
//	8016C9BC: 8007595C (MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	8016C9C4: 80182AC4 (checkCopyRodThrowAfter__9daPy_py_cCFv)
//	8016C9E0: 800737E4 (LockonTruth__12dAttention_cFv)
//	8016C9F4: 8016C368 (func_8016C368)
//	8016CA2C: 80182980 (chkFlag__9dCamera_cFUl)
//	8016CA44: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016CA50: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016CA58: 8008E790 (abs__4cXyzCFv)
//	8016CA68: 80009184 (__dt__4cXyzFv)
//	8016CA74: 80009184 (__dt__4cXyzFv)
//	8016CA80: 80453734 (lit_9398)
//	8016CA8C: 80453768 (lit_9788)
//	8016CA90: 80453768 (lit_9788)
//	8016CAA0: 80453724 (lit_8530)
//	8016CAA8: 80271030 (Degree__7cSAngleCFv)
//	8016CAB0: 80453768 (lit_9788)
//	8016CAB4: 8045370C (lit_8021)
//	8016CAB8: 804537D8 (lit_10577)
//	8016CAD8: 801412BC (fopAcM_GetName__FPv)
//	8016CAE8: 804536B8 (lit_5662)
//	8016CAEC: 80453768 (lit_9788)
//	8016CAF0: 804536B0 (lit_5660)
//	8016CB00: 801412BC (fopAcM_GetName__FPv)
//	8016CB10: 804537F4 (lit_11168)
//	8016CB18: 80453750 (lit_9405)
//	8016CB1C: 804536E4 (lit_6629)
//	8016CB28: 801412BC (fopAcM_GetName__FPv)
//	8016CB38: 804537CC (lit_10574)
//	8016CB3C: 80453750 (lit_9405)
//	8016CB44: 801829E0 (checkThrowDamage__9daPy_py_cCFv)
//	8016CB54: 804537F0 (lit_11167)
//	8016CB58: 804536A0 (lit_5656)
//	8016CB5C: 804536B4 (lit_5661)
//	8016CB60: 804537F8 (lit_11169)
//	8016CB64: 804536E8 (lit_6630)
//	8016CB68: 8045370C (lit_8021)
//	8016CB74: 8016C368 (func_8016C368)
//	8016CB88: 8016C330 (func_8016C330)
//	8016CB98: 8018299C (dComIfGp_getAttention__Fv)
//	8016CB9C: 8016E424 (LockEdge__12dAttention_cFv)
//	8016CBBC: 8016E420 (__ct__7cSGlobeFv)
//	8016CBC4: 800735DC (LockonReleaseDistanse__12dAttention_cFv)
//	8016CBE0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016CBEC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016CBF8: 80009184 (__dt__4cXyzFv)
//	8016CC08: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016CC14: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016CC20: 80009184 (__dt__4cXyzFv)
//	8016CC3C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016CC50: 80009184 (__dt__4cXyzFv)
//	8016CC60: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016CC74: 80009184 (__dt__4cXyzFv)
//	8016CC84: 8016C368 (func_8016C368)
//	8016CC94: 804536A0 (lit_5656)
//	8016CC9C: 804537FC (lit_11170)
//	8016CCA0: 8014195C (__ct__4cXyzFfff)
//	8016CCB0: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016CCC0: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	8016CCCC: 8008E904 (__apl__4cXyzFRC3Vec)
//	8016CCD8: 80009184 (__dt__4cXyzFv)
//	8016CCE4: 80030510 (__dt__7cSAngleFv)
//	8016CCF0: 80009184 (__dt__4cXyzFv)
//	8016CD00: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016CD0C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	8016CD18: 80009184 (__dt__4cXyzFv)
//	8016CD24: 80453698 (lit_4448)
//	8016CD50: 804536A8 (lit_5658)
//	8016CD68: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	8016CD74: 80009184 (__dt__4cXyzFv)
//	8016CD80: 80009184 (__dt__4cXyzFv)
//	8016CD94: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016CDA0: 80451188 (_0__7cSAngle)
//	8016CDA8: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	8016CDB4: 80030510 (__dt__7cSAngleFv)
//	8016CDB8: 804536A8 (lit_5658)
//	8016CDC8: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016CDD8: 8016E410 (func_8016E410)
//	8016CDE0: 80270FC8 (__ct__7cSAngleFf)
//	8016CE0C: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016CE18: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016CE24: 80030510 (__dt__7cSAngleFv)
//	8016CE34: 8016C368 (func_8016C368)
//	8016CE44: 8016C368 (func_8016C368)
//	8016CE58: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	8016CE7C: 80268210 (cBgW_CheckBWall__Ff)
//	8016CEA4: 80453760 (lit_9410)
//	8016CEBC: 80453698 (lit_4448)
//	8016CED8: 80453690 (lit_4445)
//	8016CEDC: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016CEE8: 802712B4 (__amu__7cSAngleFf)
//	8016CF00: 804536A8 (lit_5658)
//	8016CF0C: 802710E8 (Inv__7cSAngleCFv)
//	8016CF1C: 80271320 (__mi__FsRC7cSAngle)
//	8016CF28: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016CF34: 80030510 (__dt__7cSAngleFv)
//	8016CF60: 802711E8 (__ami__7cSAngleFRC7cSAngle)
//	8016CF6C: 80271148 (__mi__7cSAngleCFv)
//	8016CF78: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016CF84: 80030510 (__dt__7cSAngleFv)
//	8016CF94: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8016CFA0: 80451188 (_0__7cSAngle)
//	8016CFBC: 802711E8 (__ami__7cSAngleFRC7cSAngle)
//	8016CFC8: 80271148 (__mi__7cSAngleCFv)
//	8016CFD4: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016CFE0: 80030510 (__dt__7cSAngleFv)
//	8016CFF8: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8016D008: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016D014: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016D020: 80009184 (__dt__4cXyzFv)
//	8016D034: 80182980 (chkFlag__9dCamera_cFUl)
//	8016D04C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016D058: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016D064: 80009184 (__dt__4cXyzFv)
//	8016D070: 8016517C (pointInSight__9dCamera_cFP4cXyz)
//	8016D0B0: 80009184 (__dt__4cXyzFv)
//	8016D0D8: 8045370C (lit_8021)
//	8016D0F8: 80182A3C (fabsf__3stdFf)
//	8016D0FC: 804536A8 (lit_5658)
//	8016D118: 804536E0 (lit_6180)
//	8016D120: 804536EC (lit_6766)
//	8016D180: 8016E410 (func_8016E410)
//	8016D184: 80453800 (lit_11171)
//	8016D19C: 8016E410 (func_8016E410)
//	8016D1D4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016D1E4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016D1F0: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	8016D1FC: 80009184 (__dt__4cXyzFv)
//	8016D22C: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016D238: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016D244: 80030510 (__dt__7cSAngleFv)
//	8016D250: 80009184 (__dt__4cXyzFv)
//	8016D264: 80271120 (Cos__7cSAngleCFv)
//	8016D274: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016D27C: 80271120 (Cos__7cSAngleCFv)
//	8016D28C: 80030510 (__dt__7cSAngleFv)
//	8016D290: 804536A0 (lit_5656)
//	8016D2A4: 80182D10 (fabs__3stdFf)
//	8016D2B0: 80182D10 (fabs__3stdFf)
//	8016D2C8: 80453690 (lit_4445)
//	8016D2DC: 804536A8 (lit_5658)
//	8016D304: 80453690 (lit_4445)
//	8016D314: 80271120 (Cos__7cSAngleCFv)
//	8016D328: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016D36C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016D378: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016D384: 80030510 (__dt__7cSAngleFv)
//	8016D398: 80271120 (Cos__7cSAngleCFv)
//	8016D39C: 80182A3C (fabsf__3stdFf)
//	8016D3A0: 80453724 (lit_8530)
//	8016D3BC: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016D3CC: 80271264 (__ml__7cSAngleCFf)
//	8016D3DC: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016D3E8: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016D3F4: 80030510 (__dt__7cSAngleFv)
//	8016D400: 80030510 (__dt__7cSAngleFv)
//	8016D40C: 80030510 (__dt__7cSAngleFv)
//	8016D418: 804536E8 (lit_6630)
//	8016D41C: 80271264 (__ml__7cSAngleCFf)
//	8016D42C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016D438: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016D444: 80030510 (__dt__7cSAngleFv)
//	8016D450: 80030510 (__dt__7cSAngleFv)
//	8016D460: 80271120 (Cos__7cSAngleCFv)
//	8016D464: 80182A3C (fabsf__3stdFf)
//	8016D48C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016D49C: 80271264 (__ml__7cSAngleCFf)
//	8016D4AC: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016D4B8: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016D4C4: 80030510 (__dt__7cSAngleFv)
//	8016D4D0: 80030510 (__dt__7cSAngleFv)
//	8016D4DC: 80030510 (__dt__7cSAngleFv)
//	8016D4EC: 80271264 (__ml__7cSAngleCFf)
//	8016D4FC: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016D508: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016D514: 80030510 (__dt__7cSAngleFv)
//	8016D520: 80030510 (__dt__7cSAngleFv)
//	8016D534: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	8016D540: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016D550: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016D55C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016D568: 80009184 (__dt__4cXyzFv)
//	8016D574: 80009184 (__dt__4cXyzFv)
//	8016D57C: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	8016D5A0: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	8016D5B8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016D5C4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016D5D0: 80009184 (__dt__4cXyzFv)
//	8016D5D8: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	8016D5F4: 80167BF8 (lineBGCheckBoth__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	8016D61C: 80167BF8 (lineBGCheckBoth__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	8016D638: 801411F0 (__ct__8cM3dGPlaFv)
//	8016D63C: 804061C0 (g_dComIfG_gameInfo)
//	8016D640: 804061C0 (g_dComIfG_gameInfo)
//	8016D650: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8016D658: 801829F0 (GetCross__11cBgS_LinChkFv)
//	8016D664: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016D670: 80453750 (lit_9405)
//	8016D674: 80266B84 (__ml__4cXyzCFf)
//	8016D680: 8008E904 (__apl__4cXyzFRC3Vec)
//	8016D68C: 80009184 (__dt__4cXyzFv)
//	8016D694: 801412BC (fopAcM_GetName__FPv)
//	8016D6AC: 80181560 (ForceLockOff__9dCamera_cFUi)
//	8016D6B8: 8001DB90 (__dt__8cM3dGPlaFv)
//	8016D6C4: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	8016D6D0: 80009184 (__dt__4cXyzFv)
//	8016D6E0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016D6EC: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8016D6F8: 80009184 (__dt__4cXyzFv)
//	8016D704: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016D714: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016D728: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016D734: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016D740: 80030510 (__dt__7cSAngleFv)
//	8016D758: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016D764: 804536A0 (lit_5656)
//	8016D78C: 804536A0 (lit_5656)
//	8016D7B0: 80182A3C (fabsf__3stdFf)
//	8016D7B4: 804536E8 (lit_6630)
//	8016D7C4: 80453690 (lit_4445)
//	8016D7C8: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016D7CC: 80453804 (lit_11172)
//	8016D7D8: 80270FC8 (__ct__7cSAngleFf)
//	8016D7E8: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016D7F4: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016D800: 80030510 (__dt__7cSAngleFv)
//	8016D80C: 80030510 (__dt__7cSAngleFv)
//	8016D814: 80182A3C (fabsf__3stdFf)
//	8016D818: 804536E8 (lit_6630)
//	8016D828: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016D82C: 804536A0 (lit_5656)
//	8016D840: 80030510 (__dt__7cSAngleFv)
//	8016D854: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016D880: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016D894: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016D8A0: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016D8AC: 80030510 (__dt__7cSAngleFv)
//	8016D8B8: 80030510 (__dt__7cSAngleFv)
//	8016D8C8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016D8D8: 80271264 (__ml__7cSAngleCFf)
//	8016D8E0: 802710F8 (Sin__7cSAngleCFv)
//	8016D8EC: 80271264 (__ml__7cSAngleCFf)
//	8016D8FC: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016D908: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016D914: 80030510 (__dt__7cSAngleFv)
//	8016D920: 80030510 (__dt__7cSAngleFv)
//	8016D92C: 80030510 (__dt__7cSAngleFv)
//	8016D938: 80030510 (__dt__7cSAngleFv)
//	8016D944: 80030510 (__dt__7cSAngleFv)
//	8016D960: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016D96C: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016D978: 80030510 (__dt__7cSAngleFv)
//	8016D98C: 804536A8 (lit_5658)
//	8016D9A4: 804536E0 (lit_6180)
//	8016D9A8: 804536A8 (lit_5658)
//	8016D9E0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016D9F0: 80271264 (__ml__7cSAngleCFf)
//	8016DA00: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016DA0C: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016DA18: 80030510 (__dt__7cSAngleFv)
//	8016DA24: 80030510 (__dt__7cSAngleFv)
//	8016DA30: 80030510 (__dt__7cSAngleFv)
//	8016DA50: 804537CC (lit_10574)
//	8016DA54: 8027100C (Val__7cSAngleFf)
//	8016DA60: 80453808 (lit_11173)
//	8016DA64: 8027100C (Val__7cSAngleFf)
//	8016DA6C: 802710E8 (Inv__7cSAngleCFv)
//	8016DA7C: 802712F4 (__pl__FsRC7cSAngle)
//	8016DA8C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016DA98: 804536E8 (lit_6630)
//	8016DA9C: 80271264 (__ml__7cSAngleCFf)
//	8016DAA8: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8016DAB4: 80030510 (__dt__7cSAngleFv)
//	8016DAC0: 80030510 (__dt__7cSAngleFv)
//	8016DACC: 80030510 (__dt__7cSAngleFv)
//	8016DAD8: 80030510 (__dt__7cSAngleFv)
//	8016DAE8: 8016C330 (func_8016C330)
//	8016DAFC: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016DB10: 80453794 (lit_10560)
//	8016DB30: 80453698 (lit_4448)
//	8016DB6C: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016DB7C: 80451194 (_180__7cSAngle)
//	8016DB84: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016DB90: 80453690 (lit_4445)
//	8016DB94: 80271264 (__ml__7cSAngleCFf)
//	8016DBA4: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016DBB0: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016DBBC: 80030510 (__dt__7cSAngleFv)
//	8016DBC8: 80030510 (__dt__7cSAngleFv)
//	8016DBD4: 80030510 (__dt__7cSAngleFv)
//	8016DBEC: 80451194 (_180__7cSAngle)
//	8016DBF4: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016DC00: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016DC0C: 80030510 (__dt__7cSAngleFv)
//	8016DC14: 80451194 (_180__7cSAngle)
//	8016DC1C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016DC28: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016DC34: 80030510 (__dt__7cSAngleFv)
//	8016DC3C: 80453698 (lit_4448)
//	8016DC78: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016DC90: 80030510 (__dt__7cSAngleFv)
//	8016DCB0: 80453760 (lit_9410)
//	8016DCC8: 80453698 (lit_4448)
//	8016DCF0: 80453760 (lit_9410)
//	8016DD08: 80453698 (lit_4448)
//	8016DD28: 804536A8 (lit_5658)
//	8016DD3C: 802710E8 (Inv__7cSAngleCFv)
//	8016DD4C: 80271320 (__mi__FsRC7cSAngle)
//	8016DD58: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016DD64: 80030510 (__dt__7cSAngleFv)
//	8016DD6C: 80271030 (Degree__7cSAngleCFv)
//	8016DD70: 80182A3C (fabsf__3stdFf)
//	8016DD80: 80271264 (__ml__7cSAngleCFf)
//	8016DD90: 80271264 (__ml__7cSAngleCFf)
//	8016DD9C: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8016DDA8: 80030510 (__dt__7cSAngleFv)
//	8016DDB4: 80030510 (__dt__7cSAngleFv)
//	8016DDC4: 802710E8 (Inv__7cSAngleCFv)
//	8016DDD0: 80270F98 (__ct__7cSAngleFs)
//	8016DDE0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016DDEC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016DDF8: 80030510 (__dt__7cSAngleFv)
//	8016DE00: 80451198 (_270__7cSAngle)
//	8016DE14: 80451198 (_270__7cSAngle)
//	8016DE18: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016DE24: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016DE30: 80030510 (__dt__7cSAngleFv)
//	8016DE38: 80451190 (_90__7cSAngle)
//	8016DE4C: 80451190 (_90__7cSAngle)
//	8016DE50: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016DE5C: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016DE68: 80030510 (__dt__7cSAngleFv)
//	8016DE74: 80030510 (__dt__7cSAngleFv)
//	8016DE80: 80030510 (__dt__7cSAngleFv)
//	8016DE88: 8016C34C (func_8016C34C)
//	8016DEA0: 80453698 (lit_4448)
//	8016DEBC: 80453768 (lit_9788)
//	8016DED0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016DEDC: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8016DEE8: 80271264 (__ml__7cSAngleCFf)
//	8016DEF4: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8016DF00: 80030510 (__dt__7cSAngleFv)
//	8016DF0C: 80030510 (__dt__7cSAngleFv)
//	8016DF18: 80097778 (setFlag__9dCamera_cFUl)
//	8016DF34: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016DF64: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016DF74: 80271264 (__ml__7cSAngleCFf)
//	8016DF7C: 80271120 (Cos__7cSAngleCFv)
//	8016DF80: 80182A3C (fabsf__3stdFf)
//	8016DF8C: 80271264 (__ml__7cSAngleCFf)
//	8016DF98: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8016DFA4: 80030510 (__dt__7cSAngleFv)
//	8016DFB0: 80030510 (__dt__7cSAngleFv)
//	8016DFBC: 80030510 (__dt__7cSAngleFv)
//	8016DFCC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016DFDC: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016DFE8: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016DFF0: 80271120 (Cos__7cSAngleCFv)
//	8016DFF8: 802712B4 (__amu__7cSAngleFf)
//	8016E004: 80030510 (__dt__7cSAngleFv)
//	8016E010: 80030510 (__dt__7cSAngleFv)
//	8016E01C: 802712B4 (__amu__7cSAngleFf)
//	8016E02C: 8016E410 (func_8016E410)
//	8016E034: 80270FC8 (__ct__7cSAngleFf)
//	8016E03C: 804536A8 (lit_5658)
//	8016E044: 802712B4 (__amu__7cSAngleFf)
//	8016E054: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016E064: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016E070: 80453794 (lit_10560)
//	8016E074: 80271264 (__ml__7cSAngleCFf)
//	8016E084: 80271264 (__ml__7cSAngleCFf)
//	8016E090: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8016E09C: 80030510 (__dt__7cSAngleFv)
//	8016E0A8: 80030510 (__dt__7cSAngleFv)
//	8016E0B4: 80030510 (__dt__7cSAngleFv)
//	8016E0C0: 80030510 (__dt__7cSAngleFv)
//	8016E0CC: 80030510 (__dt__7cSAngleFv)
//	8016E0D8: 80030510 (__dt__7cSAngleFv)
//	8016E0EC: 80088918 (CheckLatitudeRange__11dCamSetup_cFPs)
//	8016E100: 80271004 (Val__7cSAngleFs)
//	8016E10C: 804536E8 (lit_6630)
//	8016E110: 8045380C (lit_11174)
//	8016E138: 8015FADC (func_8015FADC)
//	8016E154: 8016E410 (func_8016E410)
//	8016E15C: 80453810 (lit_11175)
//	8016E16C: 804537D8 (lit_10577)
//	8016E190: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	8016E19C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016E1AC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016E1B8: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016E1C4: 80009184 (__dt__4cXyzFv)
//	8016E1D0: 80009184 (__dt__4cXyzFv)
//	8016E1E0: 8016E410 (func_8016E410)
//	8016E1EC: 80453794 (lit_10560)
//	8016E214: 80097778 (setFlag__9dCamera_cFUl)
//	8016E238: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016E24C: 8007353C (LockonTarget__12dAttention_cFl)
//	8016E270: 801414D8 (dComIfGp_getHorseActor__Fv)
//	8016E27C: 80182D04 (getLashDashStart__9daHorse_cCFv)
//	8016E28C: 80181490 (onHorseDush__9dCamera_cFv)
//	8016E2B8: 80030510 (__dt__7cSAngleFv)
//	8016E2C4: 80030510 (__dt__7cSAngleFv)
//	8016E2D0: 80030510 (__dt__7cSAngleFv)
//	8016E2DC: 8007167C (__dt__7cSGlobeFv)
//	8016E2E8: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	8016E2F4: 80030510 (__dt__7cSAngleFv)
//	8016E300: 80030510 (__dt__7cSAngleFv)
//	8016E30C: 80030510 (__dt__7cSAngleFv)
//	8016E318: 80030510 (__dt__7cSAngleFv)
//	8016E324: 80009184 (__dt__4cXyzFv)
//	8016E330: 80030510 (__dt__7cSAngleFv)
//	8016E33C: 80030510 (__dt__7cSAngleFv)
//	8016E348: 80030510 (__dt__7cSAngleFv)
//	8016E354: 8007167C (__dt__7cSGlobeFv)
//	8016E360: 80030510 (__dt__7cSAngleFv)
//	8016E3FC: 803621FC (_restgpr_18)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::lockonCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/lockonCamera__9dCamera_cFl.s"
}
#pragma pop

/* 8016E410-8016E420 0010+00 s=1 e=0 z=0  None .text      rangef__22@unnamed@d_camera_cpp@Ffff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8016E410() {
    nofralloc
#include "asm/d/d_camera/func_8016E410.s"
}
#pragma pop

/* 8016E420-8016E424 0004+00 s=2 e=0 z=0  None .text      __ct__7cSGlobeFv */
cSGlobe::cSGlobe() {
    /* empty function */
}

/* 8016E424-8016E448 0024+00 s=1 e=0 z=0  None .text      LockEdge__12dAttention_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dAttention_c::LockEdge() {
    nofralloc
#include "asm/d/d_camera/LockEdge__12dAttention_cFv.s"
}
#pragma pop

/* 8016E448-8016E4A4 005C+00 s=1 e=0 z=0  None .text      getMsgCmdSpeaker__9dCamera_cFv */
//	8016E448: 804061C0 (g_dComIfG_gameInfo)
//	8016E44C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::getMsgCmdSpeaker() {
    nofralloc
#include "asm/d/d_camera/getMsgCmdSpeaker__9dCamera_cFv.s"
}
#pragma pop

/* 8016E4A4-8016E4F4 0050+00 s=1 e=0 z=0  None .text      getMsgCmdCut__9dCamera_cFl */
//	8016E4A4: 804061C0 (g_dComIfG_gameInfo)
//	8016E4A8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::getMsgCmdCut(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/getMsgCmdCut__9dCamera_cFl.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453814-80453818 0004+00 s=1 e=0 z=0  None .sdata2    @12268 */
SECTION_SDATA2 static f32 lit_12268 = 999.9000244140625f;

/* 80453818-8045381C 0004+00 s=1 e=0 z=0  None .sdata2    @12269 */
SECTION_SDATA2 static f32 lit_12269 = 260.0f;

/* 8045381C-80453820 0004+00 s=1 e=0 z=0  None .sdata2    @12270 */
SECTION_SDATA2 static f32 lit_12270 = 210.0f;

/* 80453820-80453824 0004+00 s=1 e=0 z=0  None .sdata2    @12271 */
SECTION_SDATA2 static f32 lit_12271 = 48.0f;

/* 80453824-80453828 0004+00 s=1 e=0 z=0  None .sdata2    @12272 */
SECTION_SDATA2 static f32 lit_12272 = 88.0f;

/* 80453828-8045382C 0004+00 s=1 e=0 z=0  None .sdata2    @12273 */
SECTION_SDATA2 static f32 lit_12273 = -180.0f;

/* 8045382C-80453830 0004+00 s=1 e=0 z=0  None .sdata2    @12274 */
SECTION_SDATA2 static f32 lit_12274 = 360.0f;

/* 80453830-80453834 0004+00 s=1 e=0 z=0  None .sdata2    @12275 */
SECTION_SDATA2 static f32 lit_12275 = 35.0f;

/* 80453834-80453838 0004+00 s=1 e=0 z=0  None .sdata2    @12276 */
SECTION_SDATA2 static f32 lit_12276 = -40.0f;

/* 80453838-8045383C 0004+00 s=2 e=0 z=0  None .sdata2    @12277 */
SECTION_SDATA2 static f32 lit_12277 = 55.0f;

/* 8045383C-80453840 0004+00 s=2 e=0 z=0  None .sdata2    @12278 */
SECTION_SDATA2 static f32 lit_12278 = 70.0f;

/* 80453840-80453844 0004+00 s=3 e=0 z=0  None .sdata2    @12279 */
SECTION_SDATA2 static f32 lit_12279 = -200.0f;

/* 80453844-80453848 0004+00 s=1 e=0 z=0  None .sdata2    @12280 */
SECTION_SDATA2 static f32 lit_12280 = 140.0f;

/* 80453848-8045384C 0004+00 s=1 e=0 z=0  None .sdata2    @12281 */
SECTION_SDATA2 static f32 lit_12281 = 110.0f;

/* 8045384C-80453850 0004+00 s=1 e=0 z=0  None .sdata2    @12282 */
SECTION_SDATA2 static f32 lit_12282 = 125.0f;

/* 80453850-80453854 0004+00 s=1 e=0 z=0  None .sdata2    @12283 */
SECTION_SDATA2 static f32 lit_12283 = 76.0f;

/* 80453854-80453858 0004+00 s=1 e=0 z=0  None .sdata2    @12284 */
SECTION_SDATA2 static f32 lit_12284 = 190.0f;

/* 80453858-8045385C 0004+00 s=3 e=0 z=0  None .sdata2    @12285 */
SECTION_SDATA2 static f32 lit_12285 = 120.0f;

/* 8045385C-80453860 0004+00 s=2 e=0 z=0  None .sdata2    @12286 */
SECTION_SDATA2 static f32 lit_12286 = -5.0f;

/* 80453860-80453864 0004+00 s=1 e=0 z=0  None .sdata2    @12287 */
SECTION_SDATA2 static f32 lit_12287 = -35.0f;

/* 80453864-80453868 0004+00 s=1 e=0 z=0  None .sdata2    @12288 */
SECTION_SDATA2 static f32 lit_12288 = 9.0f / 20.0f;

/* 80453868-8045386C 0004+00 s=1 e=0 z=0  None .sdata2    @12289 */
SECTION_SDATA2 static f32 lit_12289 = 65.0f;

/* 8045386C-80453870 0004+00 s=2 e=0 z=0  None .sdata2    @12290 */
SECTION_SDATA2 static f32 lit_12290 = 400.0f;

/* 80453870-80453874 0004+00 s=1 e=0 z=0  None .sdata2    @12291 */
SECTION_SDATA2 static f32 lit_12291 = 68.0f;

/* 80453874-80453878 0004+00 s=1 e=0 z=0  None .sdata2    @12292 */
SECTION_SDATA2 static f32 lit_12292 = 750.0f;

/* 80453878-8045387C 0004+00 s=1 e=0 z=0  None .sdata2    @12293 */
SECTION_SDATA2 static f32 lit_12293 = 58.0f;

/* 8045387C-80453880 0004+00 s=2 e=0 z=0  None .sdata2    @12294 */
SECTION_SDATA2 static f32 lit_12294 = 160.0f;

/* 80453880-80453884 0004+00 s=1 e=0 z=0  None .sdata2    @12295 */
SECTION_SDATA2 static f32 lit_12295 = 95.0f;

/* 80453884-80453888 0004+00 s=3 e=0 z=0  None .sdata2    @12296 */
SECTION_SDATA2 static f32 lit_12296 = -150.0f;

/* 80453888-8045388C 0004+00 s=1 e=0 z=0  None .sdata2    @12297 */
SECTION_SDATA2 static f32 lit_12297 = 7.0f / 25.0f;

/* 8016E4F4-80174E18 6924+00 s=2 e=0 z=0  None .text      talktoCamera__9dCamera_cFl */
//	8016E5B8: 803621C0 (_savegpr_22)
//	8016E5CC: 80182CD0 (Val__11dCamParam_cFli)
//	8016E5E0: 80182CD0 (Val__11dCamParam_cFli)
//	8016E5F4: 80182CD0 (Val__11dCamParam_cFli)
//	8016E608: 80182CD0 (Val__11dCamParam_cFli)
//	8016E61C: 80182CD0 (Val__11dCamParam_cFli)
//	8016E630: 80182CD0 (Val__11dCamParam_cFli)
//	8016E644: 80182CD0 (Val__11dCamParam_cFli)
//	8016E658: 80182CD0 (Val__11dCamParam_cFli)
//	8016E66C: 80182CD0 (Val__11dCamParam_cFli)
//	8016E680: 80182CD0 (Val__11dCamParam_cFli)
//	8016E694: 80182CD0 (Val__11dCamParam_cFli)
//	8016E6A8: 80182CD0 (Val__11dCamParam_cFli)
//	8016E6BC: 80182CD0 (Val__11dCamParam_cFli)
//	8016E6D0: 80182CD0 (Val__11dCamParam_cFli)
//	8016E6D8: 804536B4 (lit_5661)
//	8016E720: 80453814 (lit_12268)
//	8016E72C: 804536A8 (lit_5658)
//	8016E738: 80430CF4 (Zero__4cXyz)
//	8016E73C: 80430CF4 (Zero__4cXyz)
//	8016E740: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016E764: 80182A54 (dComIfGp_evmng_cameraPlay__Fv)
//	8016E7AC: 80393F68 (d_d_camera__stringBase0)
//	8016E7B0: 80393F68 (d_d_camera__stringBase0)
//	8016E7BC: 8008908C (getEvIntData__9dCamera_cFPiPci)
//	8016E7D0: 80393F68 (d_d_camera__stringBase0)
//	8016E7D4: 80393F68 (d_d_camera__stringBase0)
//	8016E7E0: 8008908C (getEvIntData__9dCamera_cFPiPci)
//	8016E7F4: 80393F68 (d_d_camera__stringBase0)
//	8016E7F8: 80393F68 (d_d_camera__stringBase0)
//	8016E804: 80089154 (getEvFloatData__9dCamera_cFPfPcf)
//	8016E818: 80393F68 (d_d_camera__stringBase0)
//	8016E81C: 80393F68 (d_d_camera__stringBase0)
//	8016E828: 80089154 (getEvFloatData__9dCamera_cFPfPcf)
//	8016E838: 80393F68 (d_d_camera__stringBase0)
//	8016E83C: 80393F68 (d_d_camera__stringBase0)
//	8016E848: 80089154 (getEvFloatData__9dCamera_cFPfPcf)
//	8016E854: 80393F68 (d_d_camera__stringBase0)
//	8016E858: 80393F68 (d_d_camera__stringBase0)
//	8016E860: 80453814 (lit_12268)
//	8016E864: 80089154 (getEvFloatData__9dCamera_cFPfPcf)
//	8016E870: 80393F68 (d_d_camera__stringBase0)
//	8016E874: 80393F68 (d_d_camera__stringBase0)
//	8016E880: 80089154 (getEvFloatData__9dCamera_cFPfPcf)
//	8016E894: 80393F68 (d_d_camera__stringBase0)
//	8016E898: 80393F68 (d_d_camera__stringBase0)
//	8016E8A4: 80089154 (getEvFloatData__9dCamera_cFPfPcf)
//	8016E8B4: 80393F68 (d_d_camera__stringBase0)
//	8016E8B8: 80393F68 (d_d_camera__stringBase0)
//	8016E8C4: 80089154 (getEvFloatData__9dCamera_cFPfPcf)
//	8016E8D8: 80393F68 (d_d_camera__stringBase0)
//	8016E8DC: 80393F68 (d_d_camera__stringBase0)
//	8016E8E4: 80453814 (lit_12268)
//	8016E8E8: 80089154 (getEvFloatData__9dCamera_cFPfPcf)
//	8016E8F0: 80393F68 (d_d_camera__stringBase0)
//	8016E8F4: 80393F68 (d_d_camera__stringBase0)
//	8016E900: 800895F4 (getEvActor__9dCamera_cFPcPc)
//	8016E90C: 80393F68 (d_d_camera__stringBase0)
//	8016E910: 80393F68 (d_d_camera__stringBase0)
//	8016E91C: 800895F4 (getEvActor__9dCamera_cFPcPc)
//	8016E934: 8016E448 (getMsgCmdSpeaker__9dCamera_cFv)
//	8016E94C: 80182A54 (dComIfGp_evmng_cameraPlay__Fv)
//	8016E9C0: 801412BC (fopAcM_GetName__FPv)
//	8016E9D4: 801412BC (fopAcM_GetName__FPv)
//	8016E9E8: 801412BC (fopAcM_GetName__FPv)
//	8016E9FC: 801412BC (fopAcM_GetName__FPv)
//	8016EA10: 801412BC (fopAcM_GetName__FPv)
//	8016EA24: 801412BC (fopAcM_GetName__FPv)
//	8016EA38: 80453818 (lit_12269)
//	8016EA40: 8045381C (lit_12270)
//	8016EA48: 804537A8 (lit_10565)
//	8016EA54: 80453820 (lit_12271)
//	8016EA5C: 80453754 (lit_9406)
//	8016EA60: 80453734 (lit_9398)
//	8016EA68: 801412BC (fopAcM_GetName__FPv)
//	8016EA7C: 80182D9C (checkEndMessage__12daTagMwait_cFv)
//	8016EA90: 80182ABC (getMidnaActor__9daPy_py_cFv)
//	8016EAB0: 8016E4A4 (getMsgCmdCut__9dCamera_cFl)
//	8016EAE0: 80270FC8 (__ct__7cSAngleFf)
//	8016EAEC: 80270FC8 (__ct__7cSAngleFf)
//	8016EAF8: 80270FC8 (__ct__7cSAngleFf)
//	8016EB04: 80270FC8 (__ct__7cSAngleFf)
//	8016EB18: 80182A48 (__ct__7cSAngleFv)
//	8016EB20: 800125DC (__ct__4cXyzFv)
//	8016EB30: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016EB40: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016EB50: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016EB5C: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8016EB68: 80009184 (__dt__4cXyzFv)
//	8016EB74: 80009184 (__dt__4cXyzFv)
//	8016EB80: 80009184 (__dt__4cXyzFv)
//	8016EB88: 800125DC (__ct__4cXyzFv)
//	8016EB90: 800125DC (__ct__4cXyzFv)
//	8016EBA0: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016EBEC: 8016C368 (func_8016C368)
//	8016EC04: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016EC10: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016EC1C: 80009184 (__dt__4cXyzFv)
//	8016EC2C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016EC38: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016EC44: 80009184 (__dt__4cXyzFv)
//	8016EC74: 80453734 (lit_9398)
//	8016EC90: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016ECA0: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016ECB0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016ECBC: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016ECC8: 80009184 (__dt__4cXyzFv)
//	8016ECD4: 80009184 (__dt__4cXyzFv)
//	8016ECE0: 80009184 (__dt__4cXyzFv)
//	8016ECF0: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016ECF8: 80182C84 (U__7cSGlobeCFv)
//	8016ED08: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016ED14: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016ED20: 80030510 (__dt__7cSAngleFv)
//	8016ED2C: 80030510 (__dt__7cSAngleFv)
//	8016ED3C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016ED48: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016ED58: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	8016ED68: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016ED74: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016ED80: 80009184 (__dt__4cXyzFv)
//	8016ED8C: 80009184 (__dt__4cXyzFv)
//	8016ED98: 80030510 (__dt__7cSAngleFv)
//	8016EDA4: 80009184 (__dt__4cXyzFv)
//	8016EDB4: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016EDC4: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016EDD4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016EDE0: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016EDEC: 80009184 (__dt__4cXyzFv)
//	8016EDF8: 80009184 (__dt__4cXyzFv)
//	8016EE04: 80009184 (__dt__4cXyzFv)
//	8016EE14: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016EE1C: 80182C84 (U__7cSGlobeCFv)
//	8016EE20: 802710E8 (Inv__7cSAngleCFv)
//	8016EE30: 80271320 (__mi__FsRC7cSAngle)
//	8016EE3C: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016EE48: 80030510 (__dt__7cSAngleFv)
//	8016EE54: 80030510 (__dt__7cSAngleFv)
//	8016EE64: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8016EE70: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016EE80: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	8016EE90: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016EE9C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016EEA8: 80009184 (__dt__4cXyzFv)
//	8016EEB4: 80009184 (__dt__4cXyzFv)
//	8016EEC0: 80030510 (__dt__7cSAngleFv)
//	8016EECC: 80009184 (__dt__4cXyzFv)
//	8016EEEC: 80453754 (lit_9406)
//	8016EF08: 80453754 (lit_9406)
//	8016EF1C: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	8016EF2C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016EF38: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016EF44: 80009184 (__dt__4cXyzFv)
//	8016EF50: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	8016EF5C: 80266EF4 (normalize__4cXyzFv)
//	8016EF68: 80009184 (__dt__4cXyzFv)
//	8016EF78: 80453698 (lit_4448)
//	8016EF94: 80266B84 (__ml__4cXyzCFf)
//	8016EFA0: 8008E904 (__apl__4cXyzFRC3Vec)
//	8016EFAC: 80009184 (__dt__4cXyzFv)
//	8016EFBC: 80453698 (lit_4448)
//	8016EFD8: 80266B84 (__ml__4cXyzCFf)
//	8016EFE4: 8008E8D0 (__ami__4cXyzFRC3Vec)
//	8016EFF0: 80009184 (__dt__4cXyzFv)
//	8016EFF8: 80182A64 (R__7cSGlobeCFv)
//	8016EFFC: 80453824 (lit_12272)
//	8016F010: 80182A4C (R__7cSGlobeFf)
//	8016F01C: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	8016F024: 80453824 (lit_12272)
//	8016F038: 804536A8 (lit_5658)
//	8016F06C: 8014195C (__ct__4cXyzFfff)
//	8016F098: 80182A4C (R__7cSGlobeFf)
//	8016F0B8: 80182A64 (R__7cSGlobeCFv)
//	8016F0C4: 80182A64 (R__7cSGlobeCFv)
//	8016F0CC: 80182A3C (fabsf__3stdFf)
//	8016F0D0: 80182A24 (JMAFastSqrt__Ff)
//	8016F0D4: 80453690 (lit_4445)
//	8016F124: 80182A48 (__ct__7cSAngleFv)
//	8016F12C: 80182A48 (__ct__7cSAngleFv)
//	8016F134: 80453828 (lit_12273)
//	8016F144: 8045382C (lit_12274)
//	8016F158: 8027100C (Val__7cSAngleFf)
//	8016F160: 80182C84 (U__7cSGlobeCFv)
//	8016F170: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016F17C: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F188: 80030510 (__dt__7cSAngleFv)
//	8016F194: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016F1A0: 801412BC (fopAcM_GetName__FPv)
//	8016F1B4: 801412BC (fopAcM_GetName__FPv)
//	8016F1C8: 801412BC (fopAcM_GetName__FPv)
//	8016F1DC: 801412BC (fopAcM_GetName__FPv)
//	8016F1F8: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016F204: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016F210: 80030510 (__dt__7cSAngleFv)
//	8016F218: 80182C84 (U__7cSGlobeCFv)
//	8016F228: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016F234: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F240: 80030510 (__dt__7cSAngleFv)
//	8016F24C: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016F258: 80182C84 (U__7cSGlobeCFv)
//	8016F264: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8016F26C: 80182C84 (U__7cSGlobeCFv)
//	8016F27C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016F288: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F294: 80030510 (__dt__7cSAngleFv)
//	8016F29C: 80451190 (_90__7cSAngle)
//	8016F2A0: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	8016F2B4: 80451190 (_90__7cSAngle)
//	8016F2B8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016F2C0: 80451190 (_90__7cSAngle)
//	8016F2C8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016F2D4: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F2E0: 80030510 (__dt__7cSAngleFv)
//	8016F2EC: 80030510 (__dt__7cSAngleFv)
//	8016F2F4: 80451198 (_270__7cSAngle)
//	8016F2F8: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	8016F30C: 80451198 (_270__7cSAngle)
//	8016F310: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016F318: 80451198 (_270__7cSAngle)
//	8016F320: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016F32C: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F338: 80030510 (__dt__7cSAngleFv)
//	8016F344: 80030510 (__dt__7cSAngleFv)
//	8016F350: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	8016F364: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F36C: 80451188 (_0__7cSAngle)
//	8016F370: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	8016F384: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	8016F398: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F3A4: 80271148 (__mi__7cSAngleCFv)
//	8016F3B0: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	8016F3C0: 80030510 (__dt__7cSAngleFv)
//	8016F3D4: 80271148 (__mi__7cSAngleCFv)
//	8016F3E0: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F3EC: 80030510 (__dt__7cSAngleFv)
//	8016F3F4: 80451188 (_0__7cSAngle)
//	8016F3F8: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	8016F40C: 80271148 (__mi__7cSAngleCFv)
//	8016F418: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	8016F428: 80030510 (__dt__7cSAngleFv)
//	8016F43C: 80271148 (__mi__7cSAngleCFv)
//	8016F448: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F454: 80030510 (__dt__7cSAngleFv)
//	8016F45C: 80182C84 (U__7cSGlobeCFv)
//	8016F46C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016F478: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016F484: 80030510 (__dt__7cSAngleFv)
//	8016F48C: 80182C84 (U__7cSGlobeCFv)
//	8016F498: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016F4A4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016F4B0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016F4C0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016F4CC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016F4D8: 80009184 (__dt__4cXyzFv)
//	8016F4E4: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8016F4F0: 80266EF4 (normalize__4cXyzFv)
//	8016F4FC: 80009184 (__dt__4cXyzFv)
//	8016F50C: 80453698 (lit_4448)
//	8016F528: 80266B84 (__ml__4cXyzCFf)
//	8016F534: 8008E8D0 (__ami__4cXyzFRC3Vec)
//	8016F540: 80009184 (__dt__4cXyzFv)
//	8016F550: 80453698 (lit_4448)
//	8016F56C: 80266B84 (__ml__4cXyzCFf)
//	8016F578: 8008E904 (__apl__4cXyzFRC3Vec)
//	8016F584: 80009184 (__dt__4cXyzFv)
//	8016F58C: 800125DC (__ct__4cXyzFv)
//	8016F59C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016F5A8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016F5B4: 80009184 (__dt__4cXyzFv)
//	8016F5CC: 801659F4 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP4cXyzUl)
//	8016F5E0: 80266CE4 (norm__4cXyzCFv)
//	8016F5EC: 804536E4 (lit_6629)
//	8016F5F0: 80266B84 (__ml__4cXyzCFf)
//	8016F600: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016F60C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016F618: 80009184 (__dt__4cXyzFv)
//	8016F624: 80009184 (__dt__4cXyzFv)
//	8016F630: 80009184 (__dt__4cXyzFv)
//	8016F640: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8016F64C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016F658: 80009184 (__dt__4cXyzFv)
//	8016F664: 80453690 (lit_4445)
//	8016F668: 80266B84 (__ml__4cXyzCFf)
//	8016F678: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016F684: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016F690: 80009184 (__dt__4cXyzFv)
//	8016F69C: 80009184 (__dt__4cXyzFv)
//	8016F6A8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016F6B0: 80182C84 (U__7cSGlobeCFv)
//	8016F6C0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016F6CC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016F6D8: 80030510 (__dt__7cSAngleFv)
//	8016F6E0: 80451188 (_0__7cSAngle)
//	8016F6E4: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	8016F704: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8016F70C: 80182C84 (U__7cSGlobeCFv)
//	8016F718: 80182C84 (U__7cSGlobeCFv)
//	8016F728: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016F734: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016F740: 80030510 (__dt__7cSAngleFv)
//	8016F748: 80271120 (Cos__7cSAngleCFv)
//	8016F754: 80182A64 (R__7cSGlobeCFv)
//	8016F758: 80453690 (lit_4445)
//	8016F764: 804536EC (lit_6766)
//	8016F770: 80182A4C (R__7cSGlobeFf)
//	8016F77C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016F78C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016F798: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016F7A8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016F7B4: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016F7C0: 80009184 (__dt__4cXyzFv)
//	8016F7CC: 80009184 (__dt__4cXyzFv)
//	8016F7D8: 80009184 (__dt__4cXyzFv)
//	8016F7E4: 80009184 (__dt__4cXyzFv)
//	8016F7F0: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016F7FC: 8007167C (__dt__7cSGlobeFv)
//	8016F808: 80030510 (__dt__7cSAngleFv)
//	8016F814: 80009184 (__dt__4cXyzFv)
//	8016F820: 80009184 (__dt__4cXyzFv)
//	8016F82C: 80009184 (__dt__4cXyzFv)
//	8016F838: 80009184 (__dt__4cXyzFv)
//	8016F844: 8007167C (__dt__7cSGlobeFv)
//	8016F850: 80009184 (__dt__4cXyzFv)
//	8016F85C: 80009184 (__dt__4cXyzFv)
//	8016F868: 80009184 (__dt__4cXyzFv)
//	8016F874: 80030510 (__dt__7cSAngleFv)
//	8016F87C: 80182A48 (__ct__7cSAngleFv)
//	8016F880: 80453814 (lit_12268)
//	8016F894: 8027100C (Val__7cSAngleFf)
//	8016F8A0: 80271120 (Cos__7cSAngleCFv)
//	8016F8A4: 8045370C (lit_8021)
//	8016F8B0: 80182A08 (V__7cSGlobeCFv)
//	8016F8C0: 80271264 (__ml__7cSAngleCFf)
//	8016F8D0: 80271264 (__ml__7cSAngleCFf)
//	8016F8DC: 80270FC8 (__ct__7cSAngleFf)
//	8016F8EC: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016F8F8: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F904: 80030510 (__dt__7cSAngleFv)
//	8016F910: 80030510 (__dt__7cSAngleFv)
//	8016F91C: 80030510 (__dt__7cSAngleFv)
//	8016F928: 80030510 (__dt__7cSAngleFv)
//	8016F934: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	8016F948: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F954: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	8016F968: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016F974: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8016F97C: 80182A48 (__ct__7cSAngleFv)
//	8016F984: 80182AD8 (checkRide__9daPy_py_cCFv)
//	8016F994: 8018289C (getRideActor__9daAlink_cFv)
//	8016F9A0: 80182C84 (U__7cSGlobeCFv)
//	8016F9AC: 80182C84 (U__7cSGlobeCFv)
//	8016F9BC: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016F9C4: 80451188 (_0__7cSAngle)
//	8016F9C8: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	8016F9D8: 80030510 (__dt__7cSAngleFv)
//	8016F9E8: 804536E4 (lit_6629)
//	8016F9EC: 80270FC8 (__ct__7cSAngleFf)
//	8016F9F8: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016FA04: 80030510 (__dt__7cSAngleFv)
//	8016FA10: 804537F0 (lit_11167)
//	8016FA14: 80270FC8 (__ct__7cSAngleFf)
//	8016FA20: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016FA2C: 80030510 (__dt__7cSAngleFv)
//	8016FA38: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016FA48: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016FA54: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016FA60: 80009184 (__dt__4cXyzFv)
//	8016FA6C: 80009184 (__dt__4cXyzFv)
//	8016FA94: 801412BC (fopAcM_GetName__FPv)
//	8016FABC: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016FAC8: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016FAD4: 80009184 (__dt__4cXyzFv)
//	8016FADC: 80453830 (lit_12275)
//	8016FAEC: 80182C84 (U__7cSGlobeCFv)
//	8016FAF8: 80182C84 (U__7cSGlobeCFv)
//	8016FB08: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016FB10: 80451188 (_0__7cSAngle)
//	8016FB14: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	8016FB20: 80453834 (lit_12276)
//	8016FB28: 80453734 (lit_9398)
//	8016FB34: 80030510 (__dt__7cSAngleFv)
//	8016FB40: 80270FC8 (__ct__7cSAngleFf)
//	8016FB50: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8016FB60: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016FB6C: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016FB78: 80030510 (__dt__7cSAngleFv)
//	8016FB84: 80030510 (__dt__7cSAngleFv)
//	8016FB90: 80030510 (__dt__7cSAngleFv)
//	8016FB98: 804536E4 (lit_6629)
//	8016FB9C: 80270FC8 (__ct__7cSAngleFf)
//	8016FBA8: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8016FBB4: 80030510 (__dt__7cSAngleFv)
//	8016FBBC: 80453710 (lit_8022)
//	8016FBC0: 80182A4C (R__7cSGlobeFf)
//	8016FBCC: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016FBDC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016FBE8: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016FBF4: 80009184 (__dt__4cXyzFv)
//	8016FC00: 80009184 (__dt__4cXyzFv)
//	8016FC0C: 80453838 (lit_12277)
//	8016FC34: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8016FC3C: 804536E4 (lit_6629)
//	8016FC50: 80009184 (__dt__4cXyzFv)
//	8016FC60: 80182C8C (Flag__11dCamParam_cFlUs)
//	8016FC70: 80182C84 (U__7cSGlobeCFv)
//	8016FC7C: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016FC84: 80182A48 (__ct__7cSAngleFv)
//	8016FC90: 80430CF4 (Zero__4cXyz)
//	8016FC94: 80430CF4 (Zero__4cXyz)
//	8016FC98: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016FCA0: 804536E4 (lit_6629)
//	8016FCA8: 80182C84 (U__7cSGlobeCFv)
//	8016FCB4: 80182C84 (U__7cSGlobeCFv)
//	8016FCC4: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016FCD0: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016FCDC: 80030510 (__dt__7cSAngleFv)
//	8016FCE4: 80271030 (Degree__7cSAngleCFv)
//	8016FCE8: 80182A3C (fabsf__3stdFf)
//	8016FCF8: 80182C84 (U__7cSGlobeCFv)
//	8016FD08: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016FD14: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016FD20: 80030510 (__dt__7cSAngleFv)
//	8016FD4C: 8045370C (lit_8021)
//	8016FD50: 80165238 (radiusActorInSight__9dCamera_cFP10fopAc_ac_cP10fopAc_ac_cP4cXyzP4cXyzfsf)
//	8016FD58: 804536A0 (lit_5656)
//	8016FD68: 80182A64 (R__7cSGlobeCFv)
//	8016FD74: 80182A4C (R__7cSGlobeFf)
//	8016FD80: 80271AB4 (Xyz__7cSGlobeCFv)
//	8016FD90: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8016FD9C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016FDA8: 80009184 (__dt__4cXyzFv)
//	8016FDB4: 80009184 (__dt__4cXyzFv)
//	8016FDC8: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	8016FDE4: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	8016FDF8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016FE04: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016FE1C: 80174E50 (func_80174E50)
//	8016FE2C: 80009184 (__dt__4cXyzFv)
//	8016FE38: 80009184 (__dt__4cXyzFv)
//	8016FE54: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	8016FE68: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016FE74: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8016FE8C: 80174E50 (func_80174E50)
//	8016FE9C: 80009184 (__dt__4cXyzFv)
//	8016FEA8: 80009184 (__dt__4cXyzFv)
//	8016FEC4: 800977D8 (__as__4cXyzFRC4cXyz)
//	8016FECC: 80182C84 (U__7cSGlobeCFv)
//	8016FEDC: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016FEE8: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8016FEF4: 80030510 (__dt__7cSAngleFv)
//	8016FEF8: 80453814 (lit_12268)
//	8016FF0C: 8027100C (Val__7cSAngleFf)
//	8016FF18: 80182C84 (U__7cSGlobeCFv)
//	8016FF24: 80182C84 (U__7cSGlobeCFv)
//	8016FF34: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8016FF40: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8016FF48: 80271120 (Cos__7cSAngleCFv)
//	8016FF4C: 8045370C (lit_8021)
//	8016FF58: 80182A08 (V__7cSGlobeCFv)
//	8016FF68: 80271264 (__ml__7cSAngleCFf)
//	8016FF78: 80271264 (__ml__7cSAngleCFf)
//	8016FF84: 80270FC8 (__ct__7cSAngleFf)
//	8016FF94: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8016FFA0: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8016FFAC: 80030510 (__dt__7cSAngleFv)
//	8016FFB8: 80030510 (__dt__7cSAngleFv)
//	8016FFC4: 80030510 (__dt__7cSAngleFv)
//	8016FFD0: 80030510 (__dt__7cSAngleFv)
//	8016FFDC: 80030510 (__dt__7cSAngleFv)
//	8016FFE8: 80030510 (__dt__7cSAngleFv)
//	8016FFF4: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	80170008: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80170014: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	80170028: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80170034: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80170048: 80182C84 (U__7cSGlobeCFv)
//	80170054: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80170068: 804536EC (lit_6766)
//	80170070: 8015FBF8 (func_8015FBF8)
//	8017007C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170088: 80009184 (__dt__4cXyzFv)
//	80170094: 80030510 (__dt__7cSAngleFv)
//	801700A0: 80271AB4 (Xyz__7cSGlobeCFv)
//	801700B0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801700BC: 800977D8 (__as__4cXyzFRC4cXyz)
//	801700C8: 80009184 (__dt__4cXyzFv)
//	801700D4: 80009184 (__dt__4cXyzFv)
//	801700F0: 804536A0 (lit_5656)
//	801700F4: 804537CC (lit_10574)
//	801700F8: 804536B0 (lit_5660)
//	801700FC: 80182D8C (set__4cXyzFfff)
//	80170110: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	8017011C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170128: 80009184 (__dt__4cXyzFv)
//	80170130: 804536B8 (lit_5662)
//	80170134: 8045383C (lit_12278)
//	80170138: 80453840 (lit_12279)
//	8017013C: 80182D8C (set__4cXyzFfff)
//	80170150: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	8017015C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170168: 80009184 (__dt__4cXyzFv)
//	80170178: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80170184: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80170190: 80009184 (__dt__4cXyzFv)
//	8017019C: 800977D8 (__as__4cXyzFRC4cXyz)
//	801701A8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801701BC: 80453698 (lit_4448)
//	801701EC: 80182C84 (U__7cSGlobeCFv)
//	801701F8: 80182C84 (U__7cSGlobeCFv)
//	80170208: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80170210: 80451188 (_0__7cSAngle)
//	80170214: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	80170224: 80030510 (__dt__7cSAngleFv)
//	8017024C: 80009184 (__dt__4cXyzFv)
//	80170258: 80030510 (__dt__7cSAngleFv)
//	80170264: 80030510 (__dt__7cSAngleFv)
//	80170270: 80030510 (__dt__7cSAngleFv)
//	8017027C: 80030510 (__dt__7cSAngleFv)
//	80170288: 80030510 (__dt__7cSAngleFv)
//	80170294: 80009184 (__dt__4cXyzFv)
//	801702A0: 80009184 (__dt__4cXyzFv)
//	801702AC: 80009184 (__dt__4cXyzFv)
//	801702B8: 8007167C (__dt__7cSGlobeFv)
//	801702C4: 80009184 (__dt__4cXyzFv)
//	801702D0: 80030510 (__dt__7cSAngleFv)
//	801702D8: 801412BC (fopAcM_GetName__FPv)
//	801702EC: 80182D78 (checkNoAttention__12daTagMhint_cCFv)
//	801702FC: 801412BC (fopAcM_GetName__FPv)
//	80170310: 80182D64 (checkNoAttention__12daTagMstop_cCFv)
//	80170334: 8016C368 (func_8016C368)
//	8017035C: 804537CC (lit_10574)
//	80170360: 80270FC8 (__ct__7cSAngleFf)
//	80170370: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80170380: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017038C: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80170398: 80030510 (__dt__7cSAngleFv)
//	801703A4: 80030510 (__dt__7cSAngleFv)
//	801703B0: 80030510 (__dt__7cSAngleFv)
//	801703B8: 80453750 (lit_9405)
//	801703BC: 80270FC8 (__ct__7cSAngleFf)
//	801703C8: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	801703D4: 80030510 (__dt__7cSAngleFv)
//	801703DC: 80453844 (lit_12280)
//	801703E0: 80182A4C (R__7cSGlobeFf)
//	801703EC: 80453718 (lit_8127)
//	801703F0: 80270FC8 (__ct__7cSAngleFf)
//	80170400: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80170410: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017041C: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80170428: 80030510 (__dt__7cSAngleFv)
//	80170434: 80030510 (__dt__7cSAngleFv)
//	80170440: 80030510 (__dt__7cSAngleFv)
//	80170448: 80453800 (lit_11171)
//	8017044C: 80270FC8 (__ct__7cSAngleFf)
//	80170458: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80170464: 80030510 (__dt__7cSAngleFv)
//	8017046C: 804537E8 (lit_10581)
//	80170470: 80182A4C (R__7cSGlobeFf)
//	8017047C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017048C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80170498: 800977D8 (__as__4cXyzFRC4cXyz)
//	801704A4: 80009184 (__dt__4cXyzFv)
//	801704B0: 80009184 (__dt__4cXyzFv)
//	801704BC: 80453838 (lit_12277)
//	801704D0: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801704DC: 800977D8 (__as__4cXyzFRC4cXyz)
//	801704E8: 80009184 (__dt__4cXyzFv)
//	801704F8: 80453848 (lit_12281)
//	8017050C: 804536E4 (lit_6629)
//	8017051C: 80430CF4 (Zero__4cXyz)
//	80170520: 80430CF4 (Zero__4cXyz)
//	80170524: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80170530: 80167CB8 (func_80167CB8)
//	8017054C: 804536A0 (lit_5656)
//	80170554: 804537A8 (lit_10565)
//	80170558: 8014195C (__ct__4cXyzFfff)
//	80170568: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80170578: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	80170584: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170590: 80009184 (__dt__4cXyzFv)
//	8017059C: 80030510 (__dt__7cSAngleFv)
//	801705AC: 80009184 (__dt__4cXyzFv)
//	801705B4: 800125DC (__ct__4cXyzFv)
//	801705BC: 800125DC (__ct__4cXyzFv)
//	801705C4: 800125DC (__ct__4cXyzFv)
//	801705CC: 800125DC (__ct__4cXyzFv)
//	801705DC: 803BA39C (lit_12300)
//	801705E0: 803BA39C (lit_12300)
//	801705FC: 804536A8 (lit_5658)
//	80170624: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170630: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017063C: 80009184 (__dt__4cXyzFv)
//	8017064C: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170658: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170664: 80009184 (__dt__4cXyzFv)
//	80170674: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80170680: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017068C: 80009184 (__dt__4cXyzFv)
//	8017069C: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801706A8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801706B4: 80009184 (__dt__4cXyzFv)
//	801706CC: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801706E0: 80009184 (__dt__4cXyzFv)
//	801706E8: 801412BC (fopAcM_GetName__FPv)
//	80170704: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017070C: 80453734 (lit_9398)
//	80170720: 80009184 (__dt__4cXyzFv)
//	80170734: 8008E904 (__apl__4cXyzFRC3Vec)
//	8017074C: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170758: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170764: 80009184 (__dt__4cXyzFv)
//	80170774: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170780: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017078C: 80009184 (__dt__4cXyzFv)
//	8017079C: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801707A8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801707B4: 80009184 (__dt__4cXyzFv)
//	801707C4: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801707D0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801707DC: 80009184 (__dt__4cXyzFv)
//	801707F4: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80170808: 80009184 (__dt__4cXyzFv)
//	8017081C: 8008E904 (__apl__4cXyzFRC3Vec)
//	80170828: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170840: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80170854: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017086C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80170878: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80170884: 80009184 (__dt__4cXyzFv)
//	8017089C: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801708A8: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	801708B4: 80030510 (__dt__7cSAngleFv)
//	801708BC: 8045384C (lit_12282)
//	801708C0: 80182A4C (R__7cSGlobeFf)
//	801708C8: 80453800 (lit_11171)
//	801708EC: 80009184 (__dt__4cXyzFv)
//	801708F8: 80009184 (__dt__4cXyzFv)
//	80170914: 80271AB4 (Xyz__7cSGlobeCFv)
//	80170924: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80170930: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017093C: 80009184 (__dt__4cXyzFv)
//	80170948: 80009184 (__dt__4cXyzFv)
//	8017094C: 804536B8 (lit_5662)
//	80170958: 8015FA4C (func_8015FA4C)
//	8017099C: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801709A8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801709B4: 80009184 (__dt__4cXyzFv)
//	801709C4: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801709D0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801709DC: 80009184 (__dt__4cXyzFv)
//	801709EC: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801709F8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170A04: 80009184 (__dt__4cXyzFv)
//	80170A14: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80170A20: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170A2C: 80009184 (__dt__4cXyzFv)
//	80170A44: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80170A58: 80009184 (__dt__4cXyzFv)
//	80170A6C: 8008E904 (__apl__4cXyzFRC3Vec)
//	80170A80: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170A8C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170A98: 80009184 (__dt__4cXyzFv)
//	80170AA8: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170AB4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170AC0: 80009184 (__dt__4cXyzFv)
//	80170AD0: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80170ADC: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170AE8: 80009184 (__dt__4cXyzFv)
//	80170AF8: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80170B04: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170B10: 80009184 (__dt__4cXyzFv)
//	80170B28: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80170B3C: 80009184 (__dt__4cXyzFv)
//	80170B50: 8008E904 (__apl__4cXyzFRC3Vec)
//	80170B5C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170B68: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80170B7C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80170B94: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80170BA0: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80170BAC: 80009184 (__dt__4cXyzFv)
//	80170BC4: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80170BD0: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80170BDC: 80030510 (__dt__7cSAngleFv)
//	80170BE4: 8045384C (lit_12282)
//	80170BE8: 80182A4C (R__7cSGlobeFf)
//	80170BF0: 80453830 (lit_12275)
//	80170BF4: 80270FC8 (__ct__7cSAngleFf)
//	80170C00: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80170C0C: 80030510 (__dt__7cSAngleFv)
//	80170C14: 80453800 (lit_11171)
//	80170C48: 80271AB4 (Xyz__7cSGlobeCFv)
//	80170C58: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80170C64: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170C70: 80009184 (__dt__4cXyzFv)
//	80170C7C: 80009184 (__dt__4cXyzFv)
//	80170C80: 804536B8 (lit_5662)
//	80170C90: 80009184 (__dt__4cXyzFv)
//	80170C9C: 80009184 (__dt__4cXyzFv)
//	80170CA4: 8015FA4C (func_8015FA4C)
//	80170CC4: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170CD0: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170CDC: 80009184 (__dt__4cXyzFv)
//	80170CEC: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170CF8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170D04: 80009184 (__dt__4cXyzFv)
//	80170D14: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80170D20: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170D2C: 80009184 (__dt__4cXyzFv)
//	80170D3C: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80170D48: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170D54: 80009184 (__dt__4cXyzFv)
//	80170D6C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80170D80: 80009184 (__dt__4cXyzFv)
//	80170D94: 8008E904 (__apl__4cXyzFRC3Vec)
//	80170DAC: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170DB8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170DC4: 80009184 (__dt__4cXyzFv)
//	80170DD4: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170DE0: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170DEC: 80009184 (__dt__4cXyzFv)
//	80170DFC: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80170E08: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170E14: 80009184 (__dt__4cXyzFv)
//	80170E24: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80170E30: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170E3C: 80009184 (__dt__4cXyzFv)
//	80170E54: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80170E68: 80009184 (__dt__4cXyzFv)
//	80170E7C: 8008E904 (__apl__4cXyzFRC3Vec)
//	80170E88: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170EA0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80170EB4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80170ECC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80170ED8: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80170EE4: 80009184 (__dt__4cXyzFv)
//	80170EFC: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80170F08: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80170F14: 80030510 (__dt__7cSAngleFv)
//	80170F1C: 80453850 (lit_12283)
//	80170F20: 80182A4C (R__7cSGlobeFf)
//	80170F28: 804536E4 (lit_6629)
//	80170F4C: 80009184 (__dt__4cXyzFv)
//	80170F58: 80009184 (__dt__4cXyzFv)
//	80170F74: 80271AB4 (Xyz__7cSGlobeCFv)
//	80170F84: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80170F90: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170F9C: 80009184 (__dt__4cXyzFv)
//	80170FA8: 80009184 (__dt__4cXyzFv)
//	80170FAC: 80453788 (lit_10557)
//	80170FB8: 8015FA4C (func_8015FA4C)
//	80170FD8: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80170FE4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80170FF0: 80009184 (__dt__4cXyzFv)
//	80171000: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	8017100C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171018: 80009184 (__dt__4cXyzFv)
//	80171028: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171034: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171040: 80009184 (__dt__4cXyzFv)
//	80171050: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	8017105C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171068: 80009184 (__dt__4cXyzFv)
//	80171080: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80171094: 80009184 (__dt__4cXyzFv)
//	801710A8: 8008E904 (__apl__4cXyzFRC3Vec)
//	801710C0: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801710CC: 800977D8 (__as__4cXyzFRC4cXyz)
//	801710D8: 80009184 (__dt__4cXyzFv)
//	801710E8: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801710F4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171100: 80009184 (__dt__4cXyzFv)
//	80171110: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	8017111C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171128: 80009184 (__dt__4cXyzFv)
//	80171138: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171144: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171150: 80009184 (__dt__4cXyzFv)
//	80171168: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017117C: 80009184 (__dt__4cXyzFv)
//	80171190: 8008E904 (__apl__4cXyzFRC3Vec)
//	8017119C: 800977D8 (__as__4cXyzFRC4cXyz)
//	801711B4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801711C8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801711E0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801711EC: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	801711F8: 80009184 (__dt__4cXyzFv)
//	80171210: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017121C: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80171228: 80030510 (__dt__7cSAngleFv)
//	80171230: 8045384C (lit_12282)
//	80171234: 80182A4C (R__7cSGlobeFf)
//	8017123C: 804537CC (lit_10574)
//	80171260: 80009184 (__dt__4cXyzFv)
//	8017126C: 80009184 (__dt__4cXyzFv)
//	80171288: 80271AB4 (Xyz__7cSGlobeCFv)
//	80171298: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801712A4: 800977D8 (__as__4cXyzFRC4cXyz)
//	801712B0: 80009184 (__dt__4cXyzFv)
//	801712BC: 80009184 (__dt__4cXyzFv)
//	801712C0: 804537A8 (lit_10565)
//	801712CC: 8015FA4C (func_8015FA4C)
//	801712F0: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801712FC: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171308: 80009184 (__dt__4cXyzFv)
//	80171318: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80171324: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171330: 80009184 (__dt__4cXyzFv)
//	80171340: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	8017134C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171358: 80009184 (__dt__4cXyzFv)
//	80171368: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171374: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171380: 80009184 (__dt__4cXyzFv)
//	80171398: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801713AC: 80009184 (__dt__4cXyzFv)
//	801713C0: 8008E904 (__apl__4cXyzFRC3Vec)
//	801713DC: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801713E8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801713F4: 80009184 (__dt__4cXyzFv)
//	80171404: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80171410: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017141C: 80009184 (__dt__4cXyzFv)
//	8017142C: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171438: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171444: 80009184 (__dt__4cXyzFv)
//	80171454: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171460: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017146C: 80009184 (__dt__4cXyzFv)
//	80171484: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80171498: 80009184 (__dt__4cXyzFv)
//	801714AC: 8008E904 (__apl__4cXyzFRC3Vec)
//	801714B8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801714D0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801714E4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801714FC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80171508: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80171514: 80009184 (__dt__4cXyzFv)
//	8017151C: 80453854 (lit_12284)
//	80171520: 80182A4C (R__7cSGlobeFf)
//	80171538: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80171544: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80171550: 80030510 (__dt__7cSAngleFv)
//	80171558: 80453734 (lit_9398)
//	8017157C: 80009184 (__dt__4cXyzFv)
//	80171588: 80009184 (__dt__4cXyzFv)
//	801715A4: 80271AB4 (Xyz__7cSGlobeCFv)
//	801715B4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801715C0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801715CC: 80009184 (__dt__4cXyzFv)
//	801715D8: 80009184 (__dt__4cXyzFv)
//	801715DC: 804537A8 (lit_10565)
//	801715F0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801715FC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80171608: 80009184 (__dt__4cXyzFv)
//	8017161C: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	80171630: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017163C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80171654: 80174E50 (func_80174E50)
//	80171664: 80009184 (__dt__4cXyzFv)
//	80171670: 80009184 (__dt__4cXyzFv)
//	8017168C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171698: 800977D8 (__as__4cXyzFRC4cXyz)
//	801716A4: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	801716B4: 8015FA4C (func_8015FA4C)
//	801716C0: 80009184 (__dt__4cXyzFv)
//	801716E4: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801716F0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801716FC: 80009184 (__dt__4cXyzFv)
//	8017170C: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80171718: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171724: 80009184 (__dt__4cXyzFv)
//	80171730: 802717F0 (__ct__7cSGlobeFRC7cSGlobe)
//	80171740: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	8017174C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171758: 80009184 (__dt__4cXyzFv)
//	80171768: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171774: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171780: 80009184 (__dt__4cXyzFv)
//	80171798: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801717AC: 80009184 (__dt__4cXyzFv)
//	801717C0: 8008E904 (__apl__4cXyzFRC3Vec)
//	801717CC: 8007167C (__dt__7cSGlobeFv)
//	801717E8: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801717F4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171800: 80009184 (__dt__4cXyzFv)
//	80171810: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	8017181C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171828: 80009184 (__dt__4cXyzFv)
//	80171838: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171844: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171850: 80009184 (__dt__4cXyzFv)
//	80171860: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	8017186C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171878: 80009184 (__dt__4cXyzFv)
//	80171890: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801718A4: 80009184 (__dt__4cXyzFv)
//	801718B8: 8008E904 (__apl__4cXyzFRC3Vec)
//	801718C4: 800977D8 (__as__4cXyzFRC4cXyz)
//	801718CC: 804536E4 (lit_6629)
//	801718FC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80171908: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80171914: 80009184 (__dt__4cXyzFv)
//	8017191C: 80182A64 (R__7cSGlobeCFv)
//	80171920: 80453750 (lit_9405)
//	8017192C: 80182A4C (R__7cSGlobeFf)
//	80171940: 80271AB4 (Xyz__7cSGlobeCFv)
//	80171950: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017195C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171968: 80009184 (__dt__4cXyzFv)
//	80171974: 80009184 (__dt__4cXyzFv)
//	80171978: 804536BC (lit_5663)
//	80171980: 804537EC (lit_10582)
//	8017199C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801719A8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801719B4: 80009184 (__dt__4cXyzFv)
//	801719BC: 8015FA4C (func_8015FA4C)
//	801719C8: 80009184 (__dt__4cXyzFv)
//	801719EC: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801719F8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171A04: 80009184 (__dt__4cXyzFv)
//	80171A14: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80171A20: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171A2C: 80009184 (__dt__4cXyzFv)
//	80171A3C: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171A48: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171A54: 80009184 (__dt__4cXyzFv)
//	80171A64: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171A70: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171A7C: 80009184 (__dt__4cXyzFv)
//	80171A94: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80171AA8: 80009184 (__dt__4cXyzFv)
//	80171ABC: 8008E904 (__apl__4cXyzFRC3Vec)
//	80171AE0: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80171AEC: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171AF8: 80009184 (__dt__4cXyzFv)
//	80171B08: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80171B14: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171B20: 80009184 (__dt__4cXyzFv)
//	80171B30: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171B3C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171B48: 80009184 (__dt__4cXyzFv)
//	80171B58: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171B64: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171B70: 80009184 (__dt__4cXyzFv)
//	80171B88: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80171B9C: 80009184 (__dt__4cXyzFv)
//	80171BB0: 8008E904 (__apl__4cXyzFRC3Vec)
//	80171BCC: 804536A0 (lit_5656)
//	80171BD0: 80453808 (lit_11173)
//	80171BD4: 804537CC (lit_10574)
//	80171BD8: 8014195C (__ct__4cXyzFfff)
//	80171BE8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80171BF8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80171C04: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80171C10: 80009184 (__dt__4cXyzFv)
//	80171C1C: 80009184 (__dt__4cXyzFv)
//	80171C28: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80171C30: 80182C84 (U__7cSGlobeCFv)
//	80171C3C: 80182C84 (U__7cSGlobeCFv)
//	80171C4C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80171C58: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80171C64: 80030510 (__dt__7cSAngleFv)
//	80171C70: 80271AB4 (Xyz__7cSGlobeCFv)
//	80171C80: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80171C8C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171C98: 80009184 (__dt__4cXyzFv)
//	80171CA4: 80009184 (__dt__4cXyzFv)
//	80171CCC: 80453790 (lit_10559)
//	80171CD4: 80453774 (lit_10552)
//	80171CD8: 80270FC8 (__ct__7cSAngleFf)
//	80171CE4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171CF4: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80171D04: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80171D0C: 80453858 (lit_12285)
//	80171D10: 80451188 (_0__7cSAngle)
//	80171D18: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	80171D24: 80030510 (__dt__7cSAngleFv)
//	80171D30: 80030510 (__dt__7cSAngleFv)
//	80171D3C: 80030510 (__dt__7cSAngleFv)
//	80171D48: 8007167C (__dt__7cSGlobeFv)
//	80171D54: 8007167C (__dt__7cSGlobeFv)
//	80171D60: 80009184 (__dt__4cXyzFv)
//	80171D6C: 80271AB4 (Xyz__7cSGlobeCFv)
//	80171D7C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80171D88: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171D94: 80009184 (__dt__4cXyzFv)
//	80171DA0: 80009184 (__dt__4cXyzFv)
//	80171DA4: 80453788 (lit_10557)
//	80171DB8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80171DC4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80171DD0: 80009184 (__dt__4cXyzFv)
//	80171DE4: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	80171DF8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80171E04: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80171E1C: 80174E50 (func_80174E50)
//	80171E2C: 80009184 (__dt__4cXyzFv)
//	80171E38: 80009184 (__dt__4cXyzFv)
//	80171E54: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171E60: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171E6C: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	80171E80: 80009184 (__dt__4cXyzFv)
//	80171EA4: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80171EB0: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171EBC: 80009184 (__dt__4cXyzFv)
//	80171ECC: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80171ED8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171EE4: 80009184 (__dt__4cXyzFv)
//	80171EF4: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171F00: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171F0C: 80009184 (__dt__4cXyzFv)
//	80171F1C: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171F28: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171F34: 80009184 (__dt__4cXyzFv)
//	80171F4C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80171F60: 80009184 (__dt__4cXyzFv)
//	80171F74: 8008E904 (__apl__4cXyzFRC3Vec)
//	80171F98: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80171FA4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171FB0: 80009184 (__dt__4cXyzFv)
//	80171FC0: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80171FCC: 800977D8 (__as__4cXyzFRC4cXyz)
//	80171FD8: 80009184 (__dt__4cXyzFv)
//	80171FE8: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80171FF4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172000: 80009184 (__dt__4cXyzFv)
//	80172010: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	8017201C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172028: 80009184 (__dt__4cXyzFv)
//	80172040: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80172054: 80009184 (__dt__4cXyzFv)
//	80172068: 8008E904 (__apl__4cXyzFRC3Vec)
//	80172084: 804536A0 (lit_5656)
//	80172088: 804537F0 (lit_11167)
//	8017208C: 80453768 (lit_9788)
//	80172090: 8014195C (__ct__4cXyzFfff)
//	801720A0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801720B0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801720BC: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	801720C8: 80009184 (__dt__4cXyzFv)
//	801720D4: 80009184 (__dt__4cXyzFv)
//	801720E0: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	801720E8: 80182C84 (U__7cSGlobeCFv)
//	801720F4: 80182C84 (U__7cSGlobeCFv)
//	80172104: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80172110: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8017211C: 80030510 (__dt__7cSAngleFv)
//	80172128: 80271AB4 (Xyz__7cSGlobeCFv)
//	80172138: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80172144: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172150: 80009184 (__dt__4cXyzFv)
//	8017215C: 80009184 (__dt__4cXyzFv)
//	8017216C: 804537A4 (lit_10564)
//	80172174: 804537A8 (lit_10565)
//	80172178: 80270FC8 (__ct__7cSAngleFf)
//	80172184: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017218C: 80453800 (lit_11171)
//	80172190: 80270FC8 (__ct__7cSAngleFf)
//	801721A0: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801721B0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801721B8: 80453858 (lit_12285)
//	801721C4: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	801721D0: 80030510 (__dt__7cSAngleFv)
//	801721DC: 80030510 (__dt__7cSAngleFv)
//	801721E8: 80030510 (__dt__7cSAngleFv)
//	801721F4: 80030510 (__dt__7cSAngleFv)
//	80172200: 8007167C (__dt__7cSGlobeFv)
//	8017220C: 8007167C (__dt__7cSGlobeFv)
//	80172218: 80009184 (__dt__4cXyzFv)
//	80172224: 80271AB4 (Xyz__7cSGlobeCFv)
//	80172234: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80172240: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017224C: 80009184 (__dt__4cXyzFv)
//	80172258: 80009184 (__dt__4cXyzFv)
//	8017225C: 804537A8 (lit_10565)
//	80172270: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017227C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80172288: 80009184 (__dt__4cXyzFv)
//	8017229C: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	801722B0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801722BC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801722D4: 80174E50 (func_80174E50)
//	801722E4: 80009184 (__dt__4cXyzFv)
//	801722F0: 80009184 (__dt__4cXyzFv)
//	8017230C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172318: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172324: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	80172338: 80009184 (__dt__4cXyzFv)
//	80172360: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	8017236C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172378: 80009184 (__dt__4cXyzFv)
//	80172388: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80172394: 800977D8 (__as__4cXyzFRC4cXyz)
//	801723A0: 80009184 (__dt__4cXyzFv)
//	801723B0: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801723BC: 800977D8 (__as__4cXyzFRC4cXyz)
//	801723C8: 80009184 (__dt__4cXyzFv)
//	801723D8: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801723E4: 800977D8 (__as__4cXyzFRC4cXyz)
//	801723F0: 80009184 (__dt__4cXyzFv)
//	80172408: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017241C: 80009184 (__dt__4cXyzFv)
//	80172430: 8008E904 (__apl__4cXyzFRC3Vec)
//	80172458: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80172464: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172470: 80009184 (__dt__4cXyzFv)
//	80172480: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	8017248C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172498: 80009184 (__dt__4cXyzFv)
//	801724A8: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801724B4: 800977D8 (__as__4cXyzFRC4cXyz)
//	801724C0: 80009184 (__dt__4cXyzFv)
//	801724D0: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801724DC: 800977D8 (__as__4cXyzFRC4cXyz)
//	801724E8: 80009184 (__dt__4cXyzFv)
//	80172500: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80172514: 80009184 (__dt__4cXyzFv)
//	80172528: 8008E904 (__apl__4cXyzFRC3Vec)
//	80172544: 804536A0 (lit_5656)
//	80172548: 8045378C (lit_10558)
//	8017254C: 80453768 (lit_9788)
//	80172550: 8014195C (__ct__4cXyzFfff)
//	80172564: 8045385C (lit_12286)
//	80172578: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80172588: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80172598: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801725A4: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	801725B0: 80009184 (__dt__4cXyzFv)
//	801725BC: 80009184 (__dt__4cXyzFv)
//	801725C8: 80009184 (__dt__4cXyzFv)
//	801725D4: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	801725DC: 80182C84 (U__7cSGlobeCFv)
//	801725E8: 80182C84 (U__7cSGlobeCFv)
//	801725F8: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80172604: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80172610: 80030510 (__dt__7cSAngleFv)
//	8017261C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017262C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80172638: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172644: 80009184 (__dt__4cXyzFv)
//	80172650: 80009184 (__dt__4cXyzFv)
//	80172660: 8045378C (lit_10558)
//	80172668: 80453830 (lit_12275)
//	8017266C: 80270FC8 (__ct__7cSAngleFf)
//	8017267C: 804536A0 (lit_5656)
//	80172684: 80453860 (lit_12287)
//	80172688: 80270FC8 (__ct__7cSAngleFf)
//	80172694: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017269C: 80453860 (lit_12287)
//	801726A0: 80270FC8 (__ct__7cSAngleFf)
//	801726B0: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801726C0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801726C8: 80453784 (lit_10556)
//	801726D4: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	801726E0: 80030510 (__dt__7cSAngleFv)
//	801726EC: 80030510 (__dt__7cSAngleFv)
//	801726F8: 80030510 (__dt__7cSAngleFv)
//	80172704: 80030510 (__dt__7cSAngleFv)
//	80172710: 80030510 (__dt__7cSAngleFv)
//	8017271C: 8007167C (__dt__7cSGlobeFv)
//	80172728: 8007167C (__dt__7cSGlobeFv)
//	80172734: 80009184 (__dt__4cXyzFv)
//	80172740: 80271AB4 (Xyz__7cSGlobeCFv)
//	80172750: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017275C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172768: 80009184 (__dt__4cXyzFv)
//	80172774: 80009184 (__dt__4cXyzFv)
//	80172778: 80453838 (lit_12277)
//	8017278C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80172798: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801727A4: 80009184 (__dt__4cXyzFv)
//	801727B8: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	801727CC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801727D8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801727F0: 80174E50 (func_80174E50)
//	80172800: 80009184 (__dt__4cXyzFv)
//	8017280C: 80009184 (__dt__4cXyzFv)
//	80172828: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172834: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172840: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	80172854: 80009184 (__dt__4cXyzFv)
//	80172880: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	8017288C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172898: 80009184 (__dt__4cXyzFv)
//	801728A8: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801728B4: 800977D8 (__as__4cXyzFRC4cXyz)
//	801728C0: 80009184 (__dt__4cXyzFv)
//	801728D0: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801728DC: 800977D8 (__as__4cXyzFRC4cXyz)
//	801728E8: 80009184 (__dt__4cXyzFv)
//	801728F8: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80172904: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172910: 80009184 (__dt__4cXyzFv)
//	80172928: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017293C: 80009184 (__dt__4cXyzFv)
//	80172950: 8008E904 (__apl__4cXyzFRC3Vec)
//	80172974: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80172980: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017298C: 80009184 (__dt__4cXyzFv)
//	8017299C: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801729A8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801729B4: 80009184 (__dt__4cXyzFv)
//	801729C4: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801729D0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801729DC: 80009184 (__dt__4cXyzFv)
//	801729EC: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801729F8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172A04: 80009184 (__dt__4cXyzFv)
//	80172A1C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80172A30: 80009184 (__dt__4cXyzFv)
//	80172A44: 8008E904 (__apl__4cXyzFRC3Vec)
//	80172A60: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80172A64: 804537BC (lit_10570)
//	80172A80: 80009184 (__dt__4cXyzFv)
//	80172A84: 80453864 (lit_12288)
//	80172A98: 80453730 (lit_9397)
//	80172AA8: 80182A64 (R__7cSGlobeCFv)
//	80172AAC: 80453864 (lit_12288)
//	80172AB8: 80453800 (lit_11171)
//	80172ABC: 804536E4 (lit_6629)
//	80172AC0: 8014195C (__ct__4cXyzFfff)
//	80172AC8: 80453774 (lit_10552)
//	80172AD0: 80453770 (lit_10551)
//	80172AD4: 8014195C (__ct__4cXyzFfff)
//	80172B04: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80172B10: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80172B1C: 80009184 (__dt__4cXyzFv)
//	80172B28: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80172B30: 80182C84 (U__7cSGlobeCFv)
//	80172B3C: 80182C84 (U__7cSGlobeCFv)
//	80172B4C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80172B58: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80172B64: 80030510 (__dt__7cSAngleFv)
//	80172B74: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80172B80: 80271AB4 (Xyz__7cSGlobeCFv)
//	80172B90: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80172B9C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172BA8: 80009184 (__dt__4cXyzFv)
//	80172BB4: 80009184 (__dt__4cXyzFv)
//	80172BC0: 80009184 (__dt__4cXyzFv)
//	80172BD8: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80172BE0: 80182C84 (U__7cSGlobeCFv)
//	80172BE4: 802710E8 (Inv__7cSAngleCFv)
//	80172BF0: 80182C84 (U__7cSGlobeCFv)
//	80172C00: 802711FC (__pl__7cSAngleCFs)
//	80172C0C: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80172C18: 80030510 (__dt__7cSAngleFv)
//	80172C20: 80182A08 (V__7cSGlobeCFv)
//	80172C2C: 804536EC (lit_6766)
//	80172C30: 80271264 (__ml__7cSAngleCFf)
//	80172C38: 80182A08 (V__7cSGlobeCFv)
//	80172C44: 80453724 (lit_8530)
//	80172C48: 80271264 (__ml__7cSAngleCFf)
//	80172C58: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80172C64: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80172C70: 80030510 (__dt__7cSAngleFv)
//	80172C7C: 80030510 (__dt__7cSAngleFv)
//	80172C88: 80030510 (__dt__7cSAngleFv)
//	80172C94: 80271AB4 (Xyz__7cSGlobeCFv)
//	80172CA4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80172CB0: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172CBC: 80009184 (__dt__4cXyzFv)
//	80172CC8: 80009184 (__dt__4cXyzFv)
//	80172CD8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80172CE4: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80172CF0: 80009184 (__dt__4cXyzFv)
//	80172D0C: 80453838 (lit_12277)
//	80172D18: 80453868 (lit_12289)
//	80172D28: 8007167C (__dt__7cSGlobeFv)
//	80172D34: 8007167C (__dt__7cSGlobeFv)
//	80172D40: 80009184 (__dt__4cXyzFv)
//	80172D4C: 80009184 (__dt__4cXyzFv)
//	80172D5C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80172D68: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80172D74: 80009184 (__dt__4cXyzFv)
//	80172D88: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	80172D9C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80172DA8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80172DC0: 80174E50 (func_80174E50)
//	80172DD0: 80009184 (__dt__4cXyzFv)
//	80172DDC: 80009184 (__dt__4cXyzFv)
//	80172DF8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172E04: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172E10: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	80172E24: 80009184 (__dt__4cXyzFv)
//	80172E48: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172E50: 80453830 (lit_12275)
//	80172E54: 80270FC8 (__ct__7cSAngleFf)
//	80172E5C: 80182C84 (U__7cSGlobeCFv)
//	80172E68: 8045386C (lit_12290)
//	80172E70: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	80172E7C: 80030510 (__dt__7cSAngleFv)
//	80172E84: 80182A08 (V__7cSGlobeCFv)
//	80172E8C: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	80172EA0: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80172EA8: 80182A08 (V__7cSGlobeCFv)
//	80172EB0: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	80172EC4: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80172ED4: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80172EE0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80172EEC: 80009184 (__dt__4cXyzFv)
//	80172EFC: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80172F08: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80172F14: 80009184 (__dt__4cXyzFv)
//	80172F1C: 80182A48 (__ct__7cSAngleFv)
//	80172F30: 80453768 (lit_9788)
//	80172F34: 80270FC8 (__ct__7cSAngleFf)
//	80172F40: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80172F4C: 80030510 (__dt__7cSAngleFv)
//	80172F58: 804536B0 (lit_5660)
//	80172F5C: 80270FC8 (__ct__7cSAngleFf)
//	80172F68: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80172F74: 80030510 (__dt__7cSAngleFv)
//	80172F84: 80271AB4 (Xyz__7cSGlobeCFv)
//	80172F94: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80172FA0: 800977D8 (__as__4cXyzFRC4cXyz)
//	80172FAC: 80009184 (__dt__4cXyzFv)
//	80172FB8: 80009184 (__dt__4cXyzFv)
//	80172FCC: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	80172FE8: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	80172FFC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173008: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173020: 80174E50 (func_80174E50)
//	80173030: 80009184 (__dt__4cXyzFv)
//	8017303C: 80009184 (__dt__4cXyzFv)
//	80173050: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017305C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173074: 80174E50 (func_80174E50)
//	80173084: 80009184 (__dt__4cXyzFv)
//	80173090: 80009184 (__dt__4cXyzFv)
//	801730A0: 80182C84 (U__7cSGlobeCFv)
//	801730B0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801730BC: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	801730C8: 80030510 (__dt__7cSAngleFv)
//	801730D8: 804536B8 (lit_5662)
//	801730E8: 80030510 (__dt__7cSAngleFv)
//	801730F4: 80009184 (__dt__4cXyzFv)
//	80173100: 80009184 (__dt__4cXyzFv)
//	80173124: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017312C: 80182A48 (__ct__7cSAngleFv)
//	80173140: 80182C84 (U__7cSGlobeCFv)
//	8017314C: 80451190 (_90__7cSAngle)
//	80173150: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017315C: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80173168: 80030510 (__dt__7cSAngleFv)
//	80173174: 80182C84 (U__7cSGlobeCFv)
//	80173180: 80451198 (_270__7cSAngle)
//	80173184: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80173190: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8017319C: 80030510 (__dt__7cSAngleFv)
//	801731A4: 804537CC (lit_10574)
//	801731A8: 80270FC8 (__ct__7cSAngleFf)
//	801731B0: 8045386C (lit_12290)
//	801731BC: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	801731C8: 80030510 (__dt__7cSAngleFv)
//	801731D0: 80182A08 (V__7cSGlobeCFv)
//	801731D8: 80182A8C (__gt__7cSAngleCFRC7cSAngle)
//	801731EC: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	801731F4: 80182A08 (V__7cSGlobeCFv)
//	801731FC: 80182A6C (__lt__7cSAngleCFRC7cSAngle)
//	80173210: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80173220: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017322C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173238: 80009184 (__dt__4cXyzFv)
//	80173248: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80173254: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173260: 80009184 (__dt__4cXyzFv)
//	80173268: 80451188 (_0__7cSAngle)
//	8017326C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017327C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017328C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80173298: 800977D8 (__as__4cXyzFRC4cXyz)
//	801732A4: 80009184 (__dt__4cXyzFv)
//	801732B0: 80009184 (__dt__4cXyzFv)
//	801732C4: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	801732E0: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	801732F4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173300: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173318: 80174E50 (func_80174E50)
//	80173328: 80009184 (__dt__4cXyzFv)
//	80173334: 80009184 (__dt__4cXyzFv)
//	80173348: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173354: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017336C: 80174E50 (func_80174E50)
//	8017337C: 80009184 (__dt__4cXyzFv)
//	80173388: 80009184 (__dt__4cXyzFv)
//	801733A0: 80453768 (lit_9788)
//	801733A4: 80270FC8 (__ct__7cSAngleFf)
//	801733B0: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	801733BC: 80030510 (__dt__7cSAngleFv)
//	801733CC: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801733D8: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	801733E4: 80030510 (__dt__7cSAngleFv)
//	801733F8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80173404: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80173410: 80030510 (__dt__7cSAngleFv)
//	80173420: 804536B8 (lit_5662)
//	80173430: 80030510 (__dt__7cSAngleFv)
//	8017343C: 80009184 (__dt__4cXyzFv)
//	80173448: 80009184 (__dt__4cXyzFv)
//	80173454: 80030510 (__dt__7cSAngleFv)
//	8017347C: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80173488: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173494: 80009184 (__dt__4cXyzFv)
//	801734A4: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801734B0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801734BC: 80009184 (__dt__4cXyzFv)
//	801734CC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801734D8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801734E4: 80009184 (__dt__4cXyzFv)
//	801734F0: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	801734F8: 80182A48 (__ct__7cSAngleFv)
//	80173504: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	80173508: 804536F8 (lit_8016)
//	80173510: 80453690 (lit_4445)
//	8017351C: 804536B8 (lit_5662)
//	8017352C: 8027134C (__ct__7cDegreeFf)
//	80173534: 80271440 (Tan__7cDegreeCFv)
//	8017354C: 80451198 (_270__7cSAngle)
//	80173550: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8017355C: 80451190 (_90__7cSAngle)
//	80173560: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80173570: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	8017357C: 80453690 (lit_4445)
//	80173580: 80266B84 (__ml__4cXyzCFf)
//	80173590: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017359C: 800977D8 (__as__4cXyzFRC4cXyz)
//	801735A8: 80009184 (__dt__4cXyzFv)
//	801735B4: 80009184 (__dt__4cXyzFv)
//	801735C0: 80009184 (__dt__4cXyzFv)
//	801735D0: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801735E0: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801735E4: 80453690 (lit_4445)
//	801735F8: 80453718 (lit_8127)
//	8017360C: 80009184 (__dt__4cXyzFv)
//	80173618: 80009184 (__dt__4cXyzFv)
//	80173620: 80182C84 (U__7cSGlobeCFv)
//	80173630: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017363C: 80451188 (_0__7cSAngle)
//	80173644: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	80173650: 80030510 (__dt__7cSAngleFv)
//	8017365C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017366C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80173678: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173684: 80009184 (__dt__4cXyzFv)
//	80173690: 80009184 (__dt__4cXyzFv)
//	80173694: 804536B8 (lit_5662)
//	801736AC: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	801736C8: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	801736DC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801736E8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173700: 80174E50 (func_80174E50)
//	80173710: 80009184 (__dt__4cXyzFv)
//	8017371C: 80009184 (__dt__4cXyzFv)
//	80173730: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017373C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173754: 80174E50 (func_80174E50)
//	80173764: 80009184 (__dt__4cXyzFv)
//	80173770: 80009184 (__dt__4cXyzFv)
//	8017378C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173798: 800977D8 (__as__4cXyzFRC4cXyz)
//	801737A4: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	801737B8: 800882E0 (__dt__7cDegreeFv)
//	801737C4: 80030510 (__dt__7cSAngleFv)
//	801737D0: 8007167C (__dt__7cSGlobeFv)
//	801737DC: 80009184 (__dt__4cXyzFv)
//	801737E8: 80009184 (__dt__4cXyzFv)
//	801737F4: 80009184 (__dt__4cXyzFv)
//	80173808: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80173814: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173820: 80009184 (__dt__4cXyzFv)
//	8017383C: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80173848: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173854: 80009184 (__dt__4cXyzFv)
//	80173864: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80173878: 80009184 (__dt__4cXyzFv)
//	80173888: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80173894: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801738A0: 80009184 (__dt__4cXyzFv)
//	801738B8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801738CC: 80009184 (__dt__4cXyzFv)
//	801738DC: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	801738F0: 80009184 (__dt__4cXyzFv)
//	80173900: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017390C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80173918: 80009184 (__dt__4cXyzFv)
//	80173920: 80453710 (lit_8022)
//	80173924: 80182A4C (R__7cSGlobeFf)
//	80173934: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80173944: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	8017394C: 80453870 (lit_12291)
//	80173968: 80009184 (__dt__4cXyzFv)
//	80173974: 80009184 (__dt__4cXyzFv)
//	80173988: 80009184 (__dt__4cXyzFv)
//	80173994: 80009184 (__dt__4cXyzFv)
//	801739A4: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801739C0: 80009184 (__dt__4cXyzFv)
//	801739CC: 80271AB4 (Xyz__7cSGlobeCFv)
//	801739DC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801739E8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801739F4: 80009184 (__dt__4cXyzFv)
//	80173A00: 80009184 (__dt__4cXyzFv)
//	80173A04: 80453838 (lit_12277)
//	80173A18: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80173A24: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173A30: 80009184 (__dt__4cXyzFv)
//	80173A44: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	80173A58: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173A64: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173A7C: 80174E50 (func_80174E50)
//	80173A8C: 80009184 (__dt__4cXyzFv)
//	80173A98: 80009184 (__dt__4cXyzFv)
//	80173AB4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173AC0: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173ACC: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	80173ADC: 8015FA4C (func_8015FA4C)
//	80173AE8: 80009184 (__dt__4cXyzFv)
//	80173B08: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80173B14: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173B20: 80009184 (__dt__4cXyzFv)
//	80173B30: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80173B3C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173B48: 80009184 (__dt__4cXyzFv)
//	80173B58: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80173B64: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173B70: 80009184 (__dt__4cXyzFv)
//	80173B80: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80173B8C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173B98: 80009184 (__dt__4cXyzFv)
//	80173BB0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80173BC4: 80009184 (__dt__4cXyzFv)
//	80173BD8: 8008E904 (__apl__4cXyzFRC3Vec)
//	80173BE4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173BF0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173C04: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173C1C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80173C28: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80173C34: 80009184 (__dt__4cXyzFv)
//	80173C3C: 80453750 (lit_9405)
//	80173C40: 80270FC8 (__ct__7cSAngleFf)
//	80173C48: 80182A08 (V__7cSGlobeCFv)
//	80173C58: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80173C64: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80173C70: 80030510 (__dt__7cSAngleFv)
//	80173C7C: 80030510 (__dt__7cSAngleFv)
//	80173C84: 80453874 (lit_12292)
//	80173C88: 80182A4C (R__7cSGlobeFf)
//	80173CC0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80173CCC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173CD8: 80009184 (__dt__4cXyzFv)
//	80173CE8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80173CF4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173D00: 80009184 (__dt__4cXyzFv)
//	80173D08: 80182A48 (__ct__7cSAngleFv)
//	80173D1C: 804536E4 (lit_6629)
//	80173D20: 80270FC8 (__ct__7cSAngleFf)
//	80173D28: 80182C84 (U__7cSGlobeCFv)
//	80173D38: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80173D44: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80173D50: 80030510 (__dt__7cSAngleFv)
//	80173D5C: 80030510 (__dt__7cSAngleFv)
//	80173D64: 80453768 (lit_9788)
//	80173D68: 80270FC8 (__ct__7cSAngleFf)
//	80173D74: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80173D80: 80030510 (__dt__7cSAngleFv)
//	80173D8C: 804536E4 (lit_6629)
//	80173D90: 80270FC8 (__ct__7cSAngleFf)
//	80173D98: 80182C84 (U__7cSGlobeCFv)
//	80173DA8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80173DB4: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80173DC0: 80030510 (__dt__7cSAngleFv)
//	80173DCC: 80030510 (__dt__7cSAngleFv)
//	80173DD4: 804536B0 (lit_5660)
//	80173DD8: 80270FC8 (__ct__7cSAngleFf)
//	80173DE4: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80173DF0: 80030510 (__dt__7cSAngleFv)
//	80173DF4: 80182ABC (getMidnaActor__9daPy_py_cFv)
//	80173E08: 80271AB4 (Xyz__7cSGlobeCFv)
//	80173E18: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80173E24: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173E30: 80009184 (__dt__4cXyzFv)
//	80173E3C: 80009184 (__dt__4cXyzFv)
//	80173E50: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	80173E6C: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	80173E80: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173E8C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173EA4: 80174E50 (func_80174E50)
//	80173EB4: 80009184 (__dt__4cXyzFv)
//	80173EC0: 80009184 (__dt__4cXyzFv)
//	80173ED4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173EE0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80173EF8: 80174E50 (func_80174E50)
//	80173F08: 80009184 (__dt__4cXyzFv)
//	80173F14: 80009184 (__dt__4cXyzFv)
//	80173F24: 80182C84 (U__7cSGlobeCFv)
//	80173F34: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80173F40: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80173F4C: 80030510 (__dt__7cSAngleFv)
//	80173F5C: 804536B8 (lit_5662)
//	80173F6C: 80030510 (__dt__7cSAngleFv)
//	80173F78: 80009184 (__dt__4cXyzFv)
//	80173F84: 80009184 (__dt__4cXyzFv)
//	80173F90: 80009184 (__dt__4cXyzFv)
//	80173F9C: 80009184 (__dt__4cXyzFv)
//	80173FB0: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80173FBC: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173FC8: 80009184 (__dt__4cXyzFv)
//	80173FD8: 80174E34 (talkEyePos__9dCamera_cFP10fopAc_ac_c)
//	80173FE4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80173FF0: 80009184 (__dt__4cXyzFv)
//	80174000: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017400C: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80174018: 80009184 (__dt__4cXyzFv)
//	80174038: 802717F0 (__ct__7cSGlobeFRC7cSGlobe)
//	80174040: 80182A64 (R__7cSGlobeCFv)
//	80174044: 80453690 (lit_4445)
//	80174050: 80182A4C (R__7cSGlobeFf)
//	8017405C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017406C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80174078: 800977D8 (__as__4cXyzFRC4cXyz)
//	80174084: 80009184 (__dt__4cXyzFv)
//	80174090: 80009184 (__dt__4cXyzFv)
//	80174098: 80453768 (lit_9788)
//	801740A0: 804536E4 (lit_6629)
//	801740C8: 804537A4 (lit_10564)
//	801740D4: 80453750 (lit_9405)
//	801740D8: 80453790 (lit_10559)
//	801740DC: 80453734 (lit_9398)
//	801740E8: 8014195C (__ct__4cXyzFfff)
//	801740F4: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80174100: 80009184 (__dt__4cXyzFv)
//	80174110: 80453868 (lit_12289)
//	8017411C: 80453750 (lit_9405)
//	80174120: 80453790 (lit_10559)
//	80174124: 80453734 (lit_9398)
//	80174130: 8014195C (__ct__4cXyzFfff)
//	8017413C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80174148: 80009184 (__dt__4cXyzFv)
//	80174158: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80174160: 80182C84 (U__7cSGlobeCFv)
//	80174170: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017417C: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80174188: 80030510 (__dt__7cSAngleFv)
//	80174194: 80030510 (__dt__7cSAngleFv)
//	8017419C: 80182A08 (V__7cSGlobeCFv)
//	801741A8: 80182A08 (V__7cSGlobeCFv)
//	801741B8: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801741C4: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	801741D0: 80030510 (__dt__7cSAngleFv)
//	801741DC: 80271AB4 (Xyz__7cSGlobeCFv)
//	801741EC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801741F8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80174204: 80009184 (__dt__4cXyzFv)
//	80174210: 80009184 (__dt__4cXyzFv)
//	80174220: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017422C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80174238: 80009184 (__dt__4cXyzFv)
//	8017423C: 80453734 (lit_9398)
//	80174244: 80453808 (lit_11173)
//	8017425C: 8007167C (__dt__7cSGlobeFv)
//	80174268: 8007167C (__dt__7cSGlobeFv)
//	80174274: 804536A0 (lit_5656)
//	80174278: 80453800 (lit_11171)
//	8017427C: 80453780 (lit_10555)
//	80174280: 8014195C (__ct__4cXyzFfff)
//	8017428C: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8017429C: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801742A4: 80182C84 (U__7cSGlobeCFv)
//	801742B4: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801742C0: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	801742CC: 80030510 (__dt__7cSAngleFv)
//	801742D8: 80030510 (__dt__7cSAngleFv)
//	801742E8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801742F4: 80271AB4 (Xyz__7cSGlobeCFv)
//	80174304: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80174310: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017431C: 80009184 (__dt__4cXyzFv)
//	80174328: 80009184 (__dt__4cXyzFv)
//	80174334: 80009184 (__dt__4cXyzFv)
//	8017433C: 804536B0 (lit_5660)
//	80174340: 80270FC8 (__ct__7cSAngleFf)
//	80174348: 80453834 (lit_12276)
//	8017434C: 80270FC8 (__ct__7cSAngleFf)
//	8017435C: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017436C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80174374: 80453844 (lit_12280)
//	80174380: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	8017438C: 80030510 (__dt__7cSAngleFv)
//	80174398: 80030510 (__dt__7cSAngleFv)
//	801743A4: 80030510 (__dt__7cSAngleFv)
//	801743B0: 80030510 (__dt__7cSAngleFv)
//	801743C4: 80271AB4 (Xyz__7cSGlobeCFv)
//	801743D4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801743E0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801743EC: 80009184 (__dt__4cXyzFv)
//	801743F8: 80009184 (__dt__4cXyzFv)
//	801743FC: 80453878 (lit_12293)
//	8017440C: 8007167C (__dt__7cSGlobeFv)
//	80174418: 80009184 (__dt__4cXyzFv)
//	8017442C: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	80174438: 800977D8 (__as__4cXyzFRC4cXyz)
//	80174444: 80009184 (__dt__4cXyzFv)
//	80174458: 80453768 (lit_9788)
//	8017445C: 80270FC8 (__ct__7cSAngleFf)
//	80174468: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80174474: 80030510 (__dt__7cSAngleFv)
//	8017447C: 8045387C (lit_12294)
//	80174480: 80182A4C (R__7cSGlobeFf)
//	80174490: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80174498: 802710E8 (Inv__7cSAngleCFv)
//	801744A4: 80270F98 (__ct__7cSAngleFs)
//	801744B0: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	801744BC: 80030510 (__dt__7cSAngleFv)
//	801744C8: 80030510 (__dt__7cSAngleFv)
//	801744CC: 80453880 (lit_12295)
//	801744F4: 80271AB4 (Xyz__7cSGlobeCFv)
//	80174504: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80174510: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017451C: 80009184 (__dt__4cXyzFv)
//	80174528: 80009184 (__dt__4cXyzFv)
//	8017452C: 80453878 (lit_12293)
//	80174544: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80174550: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017455C: 80009184 (__dt__4cXyzFv)
//	8017456C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80174578: 800977D8 (__as__4cXyzFRC4cXyz)
//	80174584: 80009184 (__dt__4cXyzFv)
//	80174594: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801745A0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801745AC: 80009184 (__dt__4cXyzFv)
//	801745BC: 80174E18 (talkBasePos__9dCamera_cFP10fopAc_ac_c)
//	801745C8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801745D4: 80009184 (__dt__4cXyzFv)
//	801745F0: 804536A0 (lit_5656)
//	801745F4: 804536E4 (lit_6629)
//	801745F8: 80453798 (lit_10561)
//	801745FC: 8014195C (__ct__4cXyzFfff)
//	80174608: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80174618: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80174620: 80182C84 (U__7cSGlobeCFv)
//	80174630: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017463C: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80174648: 80030510 (__dt__7cSAngleFv)
//	80174654: 80030510 (__dt__7cSAngleFv)
//	80174660: 80271AB4 (Xyz__7cSGlobeCFv)
//	80174670: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017467C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80174688: 80009184 (__dt__4cXyzFv)
//	80174694: 80009184 (__dt__4cXyzFv)
//	8017469C: 80182A48 (__ct__7cSAngleFv)
//	801746AC: 80453884 (lit_12296)
//	801746B0: 8027100C (Val__7cSAngleFf)
//	801746C0: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801746D0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801746D8: 80453710 (lit_8022)
//	801746DC: 80451188 (_0__7cSAngle)
//	801746E4: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	801746F0: 80030510 (__dt__7cSAngleFv)
//	801746FC: 80030510 (__dt__7cSAngleFv)
//	80174708: 80453860 (lit_12287)
//	8017470C: 8027100C (Val__7cSAngleFf)
//	8017471C: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017472C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80174734: 8045387C (lit_12294)
//	80174738: 80451188 (_0__7cSAngle)
//	80174740: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	8017474C: 80030510 (__dt__7cSAngleFv)
//	80174758: 80030510 (__dt__7cSAngleFv)
//	8017475C: 804536B8 (lit_5662)
//	8017476C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017477C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80174788: 800977D8 (__as__4cXyzFRC4cXyz)
//	80174794: 80009184 (__dt__4cXyzFv)
//	801747A0: 80009184 (__dt__4cXyzFv)
//	801747B0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801747BC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801747C8: 80009184 (__dt__4cXyzFv)
//	801747DC: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	801747F0: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801747FC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80174814: 80174E50 (func_80174E50)
//	80174824: 80009184 (__dt__4cXyzFv)
//	80174830: 80009184 (__dt__4cXyzFv)
//	80174840: 80453768 (lit_9788)
//	80174850: 80453830 (lit_12275)
//	80174854: 80270FC8 (__ct__7cSAngleFf)
//	80174864: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80174874: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017487C: 804537E8 (lit_10581)
//	80174888: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	80174894: 80030510 (__dt__7cSAngleFv)
//	801748A0: 80030510 (__dt__7cSAngleFv)
//	801748AC: 80030510 (__dt__7cSAngleFv)
//	801748B8: 80271AB4 (Xyz__7cSGlobeCFv)
//	801748C8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801748D4: 800977D8 (__as__4cXyzFRC4cXyz)
//	801748E0: 80009184 (__dt__4cXyzFv)
//	801748EC: 80009184 (__dt__4cXyzFv)
//	80174900: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	80174914: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80174920: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80174938: 80174E50 (func_80174E50)
//	80174948: 80009184 (__dt__4cXyzFv)
//	80174954: 80009184 (__dt__4cXyzFv)
//	80174970: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017497C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80174988: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	801749A0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801749AC: 800977D8 (__as__4cXyzFRC4cXyz)
//	801749B8: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	801749CC: 80009184 (__dt__4cXyzFv)
//	801749D8: 80030510 (__dt__7cSAngleFv)
//	801749E4: 8007167C (__dt__7cSGlobeFv)
//	801749F0: 80009184 (__dt__4cXyzFv)
//	80174A2C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80174A38: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	80174A44: 80271AB4 (Xyz__7cSGlobeCFv)
//	80174A54: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80174A60: 800977D8 (__as__4cXyzFRC4cXyz)
//	80174A6C: 80009184 (__dt__4cXyzFv)
//	80174A78: 80009184 (__dt__4cXyzFv)
//	80174A90: 80453698 (lit_4448)
//	80174AD0: 80453888 (lit_12297)
//	80174AD4: 8008813C (rationalBezierRatio__8dCamMathFff)
//	80174AE8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80174AF8: 80266B84 (__ml__4cXyzCFf)
//	80174B04: 8008E904 (__apl__4cXyzFRC3Vec)
//	80174B10: 80009184 (__dt__4cXyzFv)
//	80174B1C: 80009184 (__dt__4cXyzFv)
//	80174B24: 80182A64 (R__7cSGlobeCFv)
//	80174B30: 80182A64 (R__7cSGlobeCFv)
//	80174B40: 80182A64 (R__7cSGlobeCFv)
//	80174B4C: 80182A4C (R__7cSGlobeFf)
//	80174B54: 80182A08 (V__7cSGlobeCFv)
//	80174B60: 80182A08 (V__7cSGlobeCFv)
//	80174B70: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80174B80: 80271264 (__ml__7cSAngleCFf)
//	80174B88: 80182A08 (V__7cSGlobeCFv)
//	80174B98: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80174BA4: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80174BB0: 80030510 (__dt__7cSAngleFv)
//	80174BBC: 80030510 (__dt__7cSAngleFv)
//	80174BC8: 80030510 (__dt__7cSAngleFv)
//	80174BD0: 80182C84 (U__7cSGlobeCFv)
//	80174BDC: 80182C84 (U__7cSGlobeCFv)
//	80174BEC: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80174BFC: 80271264 (__ml__7cSAngleCFf)
//	80174C04: 80182C84 (U__7cSGlobeCFv)
//	80174C14: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80174C20: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80174C2C: 80030510 (__dt__7cSAngleFv)
//	80174C38: 80030510 (__dt__7cSAngleFv)
//	80174C44: 80030510 (__dt__7cSAngleFv)
//	80174C50: 80271AB4 (Xyz__7cSGlobeCFv)
//	80174C60: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80174C6C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80174C78: 80009184 (__dt__4cXyzFv)
//	80174C84: 80009184 (__dt__4cXyzFv)
//	80174CE4: 80009184 (__dt__4cXyzFv)
//	80174CF0: 80009184 (__dt__4cXyzFv)
//	80174CFC: 80009184 (__dt__4cXyzFv)
//	80174D08: 80009184 (__dt__4cXyzFv)
//	80174D14: 80009184 (__dt__4cXyzFv)
//	80174D20: 80030510 (__dt__7cSAngleFv)
//	80174D2C: 80030510 (__dt__7cSAngleFv)
//	80174D38: 80030510 (__dt__7cSAngleFv)
//	80174D44: 80030510 (__dt__7cSAngleFv)
//	80174E04: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::talktoCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/talktoCamera__9dCamera_cFl.s"
}
#pragma pop

/* 80174E18-80174E34 001C+00 s=1 e=0 z=0  None .text      talkBasePos__9dCamera_cFP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::talkBasePos(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/d_camera/talkBasePos__9dCamera_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80174E34-80174E50 001C+00 s=1 e=0 z=0  None .text      talkEyePos__9dCamera_cFP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::talkEyePos(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/d_camera/talkEyePos__9dCamera_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80174E50-80174EA4 0054+00 s=1 e=0 z=0  None .text
 * lineCollisionCheck__22@unnamed@d_camera_cpp@F4cXyz4cXyzP10fopAc_ac_cP10fopAc_ac_cP10fopAc_ac_c */
//	80174E70: 804061C0 (g_dComIfG_gameInfo)
//	80174E74: 804061C0 (g_dComIfG_gameInfo)
//	80174E84: 804537CC (lit_10574)
//	80174E90: 80086D8C (ChkCamera__4dCcSFR4cXyzR4cXyzfP10fopAc_ac_cP10fopAc_ac_cP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80174E50() {
    nofralloc
#include "asm/d/d_camera/func_80174E50.s"
}
#pragma pop

/* 80174EA4-80174EAC 0008+00 s=0 e=1 z=0  None .text      CalcSubjectAngle__9dCamera_cFPsPs */
bool dCamera_c::CalcSubjectAngle(s16* param_0, s16* param_1) {
    return false;
}

/* 80174EAC-80174ED4 0028+00 s=0 e=0 z=1  None .text      SaveZoomRatio__9dCamera_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::SaveZoomRatio() {
    nofralloc
#include "asm/d/d_camera/SaveZoomRatio__9dCamera_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045388C-80453890 0004+00 s=1 e=0 z=0  None .sdata2    @12864 */
SECTION_SDATA2 static f32 lit_12864 = 270.0f;

/* 80453890-80453894 0004+00 s=1 e=0 z=0  None .sdata2    @12865 */
SECTION_SDATA2 static f32 lit_12865 = 19.0f;

/* 80453894-80453898 0004+00 s=1 e=0 z=0  None .sdata2    @12866 */
SECTION_SDATA2 static f32 lit_12866 = 150.0f;

/* 80453898-8045389C 0004+00 s=1 e=0 z=0  None .sdata2    @12867 */
SECTION_SDATA2 static f32 lit_12867 = -1.0f / 100.0f;

/* 8045389C-804538A0 0004+00 s=5 e=0 z=0  None .sdata2    @12868 */
SECTION_SDATA2 static f32 lit_12868 = -1.0f;

/* 804538A0-804538A4 0004+00 s=1 e=0 z=0  None .sdata2    @12869 */
SECTION_SDATA2 static f32 lit_12869 = -511.0f;

/* 80174ED4-80176074 11A0+00 s=1 e=0 z=0  None .text      subjectCamera__9dCamera_cFl */
//	80174F5C: 803621BC (_savegpr_21)
//	80174FBC: 8016C368 (func_8016C368)
//	80174FD0: 8016C368 (func_8016C368)
//	80174FE4: 8016C368 (func_8016C368)
//	80175004: 8016C368 (func_8016C368)
//	80175010: 8016C368 (func_8016C368)
//	8017503C: 802710E8 (Inv__7cSAngleCFv)
//	80175048: 80271004 (Val__7cSAngleFs)
//	80175054: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	80175068: 8016C330 (func_8016C330)
//	8017508C: 804536A0 (lit_5656)
//	801750C0: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801750D0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801750D8: 80451188 (_0__7cSAngle)
//	80175144: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175158: 80270F98 (__ct__7cSAngleFs)
//	8017516C: 80430D24 (BaseY__4cXyz)
//	80175170: 80430D24 (BaseY__4cXyz)
//	80175174: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175178: 803A2FD8 (g_mDoMtx_identity)
//	8017517C: 803A2FD8 (g_mDoMtx_identity)
//	80175194: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801751A8: 80270F98 (__ct__7cSAngleFs)
//	801751B4: 80270F98 (__ct__7cSAngleFs)
//	801751C4: 800DE884 (checkBowCameraArrowPosP__9daAlink_cFPsPs)
//	801751D4: 8016C368 (func_8016C368)
//	801751F0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801751FC: 80271004 (Val__7cSAngleFs)
//	80175208: 80271004 (Val__7cSAngleFs)
//	8017522C: 8015DFF4 (getLeftHandPos__9daPy_py_cCFv)
//	80175238: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175248: 80182B9C (getRightHandPos__9daPy_py_cCFv)
//	80175254: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175260: 801124B4 (checkIronBallThrowReturnMode__9daAlink_cCFv)
//	80175278: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80175284: 800977D8 (__as__4cXyzFRC4cXyz)
//	801752AC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801752B8: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	801752C8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801752D4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801752DC: 8008E790 (abs__4cXyzCFv)
//	801752E0: 80453710 (lit_8022)
//	801752F8: 802710E8 (Inv__7cSAngleCFv)
//	80175304: 80270F98 (__ct__7cSAngleFs)
//	80175328: 80453750 (lit_9405)
//	8017532C: 80270FC8 (__ct__7cSAngleFf)
//	80175338: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	80175344: 8007167C (__dt__7cSGlobeFv)
//	80175360: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017536C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175384: 80453750 (lit_9405)
//	80175388: 80270FC8 (__ct__7cSAngleFf)
//	80175394: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	801753A4: 800977D8 (__as__4cXyzFRC4cXyz)
//	801753CC: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801753D8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801753E8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801753F4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175404: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80175410: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175420: 80346E4C (PSMTXMultVecSR)
//	80175430: 80346E4C (PSMTXMultVecSR)
//	80175440: 80347090 (PSVECAdd)
//	80175450: 80347090 (PSVECAdd)
//	80175460: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017546C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80175484: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175490: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017549C: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	801754A8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801754C8: 8042C8F8 (data_8042C8F8)
//	801754CC: 8042C8F8 (data_8042C8F8)
//	80175550: 804061C0 (g_dComIfG_gameInfo)
//	80175554: 804061C0 (g_dComIfG_gameInfo)
//	80175588: 801124B4 (checkIronBallThrowReturnMode__9daAlink_cCFv)
//	80175594: 804536A0 (lit_5656)
//	80175598: 80453734 (lit_9398)
//	8017559C: 80453788 (lit_10557)
//	801755A0: 8045388C (lit_12864)
//	801755A4: 8045383C (lit_12278)
//	801755D8: 80453728 (lit_9395)
//	801755DC: 804536A8 (lit_5658)
//	801755F8: 80453728 (lit_9395)
//	8017560C: 804536A8 (lit_5658)
//	80175690: 80453890 (lit_12865)
//	80175734: 80453768 (lit_9788)
//	80175750: 804061C0 (g_dComIfG_gameInfo)
//	80175754: 804061C0 (g_dComIfG_gameInfo)
//	80175764: 80453788 (lit_10557)
//	80175788: 80453894 (lit_12866)
//	8017578C: 80453768 (lit_9788)
//	801757E4: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	801757F4: 8008831C (xyzRotateX__8dCamMathFR4cXyz7cSAngle)
//	80175800: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017580C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017581C: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	80175828: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175834: 80453734 (lit_9398)
//	8017583C: 804536A0 (lit_5656)
//	80175840: 804536A0 (lit_5656)
//	8017585C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017586C: 8008831C (xyzRotateX__8dCamMathFR4cXyz7cSAngle)
//	80175878: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175884: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80175894: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	801758A0: 800977D8 (__as__4cXyzFRC4cXyz)
//	801758B8: 80346E4C (PSMTXMultVecSR)
//	801758C8: 80346E4C (PSMTXMultVecSR)
//	801758CC: 804536A8 (lit_5658)
//	801758D4: 801124B4 (checkIronBallThrowReturnMode__9daAlink_cCFv)
//	801758E0: 8045370C (lit_8021)
//	80175920: 804536A8 (lit_5658)
//	80175930: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017593C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80175944: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	80175960: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017596C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017598C: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80175998: 803A37C0 (__vt__8cM3dGPla)
//	8017599C: 803A37C0 (__vt__8cM3dGPla)
//	801759A4: 804061C0 (g_dComIfG_gameInfo)
//	801759A8: 804061C0 (g_dComIfG_gameInfo)
//	801759B8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	801759C4: 800977D8 (__as__4cXyzFRC4cXyz)
//	801759D0: 80453750 (lit_9405)
//	801759D4: 80266B84 (__ml__4cXyzCFf)
//	801759E4: 80347090 (PSVECAdd)
//	801759F0: 8001DB90 (__dt__8cM3dGPlaFv)
//	80175A00: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80175A10: 80266B84 (__ml__4cXyzCFf)
//	80175A20: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80175A2C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175A3C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80175A48: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80175A58: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80175A68: 80266B84 (__ml__4cXyzCFf)
//	80175A78: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80175A84: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175AA4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175AB0: 80430D24 (BaseY__4cXyz)
//	80175AB4: 80430D24 (BaseY__4cXyz)
//	80175AB8: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175AC8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80175AD4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80175AE0: 80266EF4 (normalize__4cXyzFv)
//	80175AEC: 80453734 (lit_9398)
//	80175AF0: 80266B84 (__ml__4cXyzCFf)
//	80175B00: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80175B0C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175B24: 801659F4 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP4cXyzUl)
//	80175B38: 804536E4 (lit_6629)
//	80175B3C: 80266B84 (__ml__4cXyzCFf)
//	80175B4C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80175B58: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175B70: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175B7C: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175B90: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80175B9C: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80175BA0: 804536A8 (lit_5658)
//	80175BB0: 80453698 (lit_4448)
//	80175BDC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80175BEC: 80266B84 (__ml__4cXyzCFf)
//	80175BFC: 80347090 (PSVECAdd)
//	80175C28: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80175C38: 80271264 (__ml__7cSAngleCFf)
//	80175C48: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80175C54: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80175C68: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80175C78: 80271264 (__ml__7cSAngleCFf)
//	80175C88: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80175C94: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80175CA0: 80271AB4 (Xyz__7cSGlobeCFv)
//	80175CB0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80175CBC: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175CE0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80175CF0: 80266B84 (__ml__4cXyzCFf)
//	80175D00: 80347090 (PSVECAdd)
//	80175D0C: 80266CE4 (norm__4cXyzCFv)
//	80175D18: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175D54: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175D60: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175D6C: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	80175D78: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175D84: 8007167C (__dt__7cSGlobeFv)
//	80175D90: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	80175DA8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80175DB4: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80175DC0: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175DCC: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175DD8: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	80175DE4: 800977D8 (__as__4cXyzFRC4cXyz)
//	80175DFC: 804536A0 (lit_5656)
//	80175E0C: 804536E0 (lit_6180)
//	80175E1C: 8008813C (rationalBezierRatio__8dCamMathFff)
//	80175E2C: 80453898 (lit_12867)
//	80175E40: 8008813C (rationalBezierRatio__8dCamMathFff)
//	80175E50: 8045370C (lit_8021)
//	80175E64: 804536A0 (lit_5656)
//	80175E78: 804536A8 (lit_5658)
//	80175EA4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80175EBC: 8045389C (lit_12868)
//	80175EC8: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80175EE4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80175EFC: 8045389C (lit_12868)
//	80175F08: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80175F0C: 804536A0 (lit_5656)
//	80175F1C: 80453690 (lit_4445)
//	80175F28: 804536A8 (lit_5658)
//	80175F34: 804536A0 (lit_5656)
//	80175F3C: 804536A8 (lit_5658)
//	80175F40: 804537B8 (lit_10569)
//	80175F4C: 80453690 (lit_4445)
//	80175F58: 80088284 (zoomFovy__8dCamMathFff)
//	80175F5C: 804536F8 (lit_8016)
//	80175F78: 804061C0 (g_dComIfG_gameInfo)
//	80175F7C: 804061C0 (g_dComIfG_gameInfo)
//	80175F8C: 804536A8 (lit_5658)
//	80175F90: 804538A0 (lit_12869)
//	80175FAC: 8016C368 (func_8016C368)
//	80175FB8: 804061C0 (g_dComIfG_gameInfo)
//	80175FBC: 804061C0 (g_dComIfG_gameInfo)
//	80175FDC: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	80176060: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::subjectCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/subjectCamera__9dCamera_cFl.s"
}
#pragma pop

/* ############################################################################################## */
/* 804538A4-804538A8 0004+00 s=3 e=0 z=0  None .sdata2    @13132 */
SECTION_SDATA2 static f32 lit_13132 = 4.0f;

/* 80176074-801767F8 0784+00 s=1 e=0 z=0  None .text      magneCamera__9dCamera_cFl */
//	80176104: 803621D8 (_savegpr_28)
//	80176184: 80270F98 (__ct__7cSAngleFs)
//	80176194: 803A2FD8 (g_mDoMtx_identity)
//	80176198: 803A2FD8 (g_mDoMtx_identity)
//	801761B0: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801761C8: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801761F0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80176218: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80176240: 80346E4C (PSMTXMultVecSR)
//	80176250: 80346E4C (PSMTXMultVecSR)
//	80176260: 80347090 (PSVECAdd)
//	80176270: 80347090 (PSVECAdd)
//	80176298: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801762A4: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	801762B8: 804536A8 (lit_5658)
//	801762CC: 804536A0 (lit_5656)
//	801762FC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017630C: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	80176334: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80176344: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017636C: 80346E4C (PSMTXMultVecSR)
//	8017637C: 80347090 (PSVECAdd)
//	8017638C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017639C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801763AC: 80266B84 (__ml__4cXyzCFf)
//	801763BC: 80347090 (PSVECAdd)
//	801763CC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801763D8: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80176418: 804536A0 (lit_5656)
//	8017642C: 802710E8 (Inv__7cSAngleCFv)
//	80176438: 80270F98 (__ct__7cSAngleFs)
//	80176450: 804536E8 (lit_6630)
//	8017645C: 80453690 (lit_4445)
//	80176460: 8008813C (rationalBezierRatio__8dCamMathFff)
//	80176464: 804536E4 (lit_6629)
//	80176470: 80270FC8 (__ct__7cSAngleFf)
//	80176480: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80176494: 802710E8 (Inv__7cSAngleCFv)
//	801764A8: 80271320 (__mi__FsRC7cSAngle)
//	801764B4: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	801764BC: 802710F8 (Sin__7cSAngleCFv)
//	801764D8: 80271120 (Cos__7cSAngleCFv)
//	801764DC: 804536A0 (lit_5656)
//	801764E8: 804537B8 (lit_10569)
//	801764F0: 804538A4 (lit_13132)
//	801764F8: 804536A8 (lit_5658)
//	801764FC: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8017650C: 80270FC8 (__ct__7cSAngleFf)
//	8017651C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80176538: 80270FC8 (__ct__7cSAngleFf)
//	8017654C: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	80176558: 80271AB4 (Xyz__7cSGlobeCFv)
//	80176568: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80176590: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801765B8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801765E0: 80346E4C (PSMTXMultVecSR)
//	801765F0: 80346E4C (PSMTXMultVecSR)
//	80176600: 80347090 (PSVECAdd)
//	80176610: 80347090 (PSVECAdd)
//	80176620: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017662C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80176674: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80176684: 80271264 (__ml__7cSAngleCFf)
//	80176694: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801766A0: 80270F98 (__ct__7cSAngleFs)
//	801766BC: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801766CC: 80271264 (__ml__7cSAngleCFf)
//	801766D4: 80271120 (Cos__7cSAngleCFv)
//	801766E0: 80271264 (__ml__7cSAngleCFf)
//	801766F0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801766FC: 80270F98 (__ct__7cSAngleFs)
//	80176710: 80271AB4 (Xyz__7cSGlobeCFv)
//	80176720: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801767E4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::magneCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/magneCamera__9dCamera_cFl.s"
}
#pragma pop

/* ############################################################################################## */
/* 804538A8-804538AC 0004+00 s=1 e=0 z=0  None .sdata2    @13314 */
SECTION_SDATA2 static f32 lit_13314 = 0.9990000128746033f;

/* 801767F8-80176DF0 05F8+00 s=1 e=0 z=0  None .text      colosseumCamera__9dCamera_cFl */
//	80176868: 803621DC (_savegpr_29)
//	801768AC: 80451020 (data_80451020)
//	801768C4: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801768CC: 8045389C (lit_12868)
//	801768DC: 8042C8F8 (data_8042C8F8)
//	801768E0: 8042C8F8 (data_8042C8F8)
//	80176900: 80168744 (chaseCamera__9dCamera_cFl)
//	80176914: 804536A0 (lit_5656)
//	8017697C: 80164878 (getParamTargetActor__9dCamera_cFl)
//	80176990: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801769A8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801769C0: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801769D8: 80097878 (Init__14d2DBSplinePathFll)
//	801769E0: 804538A8 (lit_13314)
//	801769EC: 804536A8 (lit_5658)
//	801769F4: 80453698 (lit_4448)
//	80176A28: 804536A8 (lit_5658)
//	80176A68: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80176A78: 804536A0 (lit_5656)
//	80176A8C: 802710E8 (Inv__7cSAngleCFv)
//	80176A98: 80270F98 (__ct__7cSAngleFs)
//	80176AA8: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	80176AD0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80176AE0: 80347090 (PSVECAdd)
//	80176AF0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80176AFC: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80176B0C: 804536A0 (lit_5656)
//	80176B20: 804536A8 (lit_5658)
//	80176B48: 803BA4A4 (Dsp)
//	80176B4C: 803BA4A4 (Dsp)
//	80176B50: 80097B68 (Spot__14d2DBSplinePathFPff)
//	80176B60: 80271AB4 (Xyz__7cSGlobeCFv)
//	80176B70: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80176BA0: 804536A0 (lit_5656)
//	80176BDC: 80270FC8 (__ct__7cSAngleFf)
//	80176BFC: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	80176C08: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80176C24: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80176C34: 80266B84 (__ml__4cXyzCFf)
//	80176C44: 80347090 (PSVECAdd)
//	80176C70: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80176C80: 80271264 (__ml__7cSAngleCFf)
//	80176C90: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80176C9C: 80270F98 (__ct__7cSAngleFs)
//	80176CB4: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80176CC4: 80271264 (__ml__7cSAngleCFf)
//	80176CD4: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80176CE0: 80270F98 (__ct__7cSAngleFs)
//	80176D18: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	80176D24: 80271AB4 (Xyz__7cSGlobeCFv)
//	80176D34: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80176DDC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::colosseumCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/colosseumCamera__9dCamera_cFl.s"
}
#pragma pop

/* 80176DF0-80176DF8 0008+00 s=1 e=0 z=0  None .text      test1Camera__9dCamera_cFl */
bool dCamera_c::test1Camera(s32 param_0) {
    return false;
}

/* 80176DF8-80176E00 0008+00 s=1 e=0 z=0  None .text      test2Camera__9dCamera_cFl */
bool dCamera_c::test2Camera(s32 param_0) {
    return false;
}

/* ############################################################################################## */
/* 804538AC-804538B0 0004+00 s=2 e=0 z=0  None .sdata2    @13673 */
SECTION_SDATA2 static f32 lit_13673 = 1.0f / 40.0f;

/* 80176E00-80178E50 2050+00 s=1 e=0 z=0  None .text      towerCamera__9dCamera_cFl */
//	80176EA0: 803621C0 (_savegpr_22)
//	80176EB4: 80270FC8 (__ct__7cSAngleFf)
//	80176EC0: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80176ECC: 80030510 (__dt__7cSAngleFv)
//	80176ED4: 80453754 (lit_9406)
//	80176ED8: 80270FC8 (__ct__7cSAngleFf)
//	80176EE0: 80453798 (lit_10561)
//	80176EE4: 80270FC8 (__ct__7cSAngleFf)
//	80176EEC: 804536B8 (lit_5662)
//	80176EF0: 80270FC8 (__ct__7cSAngleFf)
//	80176F00: 80182CD0 (Val__11dCamParam_cFli)
//	80176F14: 80182CD0 (Val__11dCamParam_cFli)
//	80176F28: 80182CD0 (Val__11dCamParam_cFli)
//	80176F3C: 80182CD0 (Val__11dCamParam_cFli)
//	80176F50: 80182CD0 (Val__11dCamParam_cFli)
//	80176F64: 80182CD0 (Val__11dCamParam_cFli)
//	80176F78: 80182CD0 (Val__11dCamParam_cFli)
//	80176F8C: 80182CD0 (Val__11dCamParam_cFli)
//	80176FA0: 80182CD0 (Val__11dCamParam_cFli)
//	80176FB4: 80182CD0 (Val__11dCamParam_cFli)
//	80176FC8: 80182CD0 (Val__11dCamParam_cFli)
//	80176FDC: 80182CD0 (Val__11dCamParam_cFli)
//	80176FF0: 80182CD0 (Val__11dCamParam_cFli)
//	80177004: 80182CD0 (Val__11dCamParam_cFli)
//	80177018: 80182CD0 (Val__11dCamParam_cFli)
//	8017702C: 80182CD0 (Val__11dCamParam_cFli)
//	80177040: 80182CD0 (Val__11dCamParam_cFli)
//	80177054: 80182CD0 (Val__11dCamParam_cFli)
//	80177068: 80182CD0 (Val__11dCamParam_cFli)
//	80177070: 80270FC8 (__ct__7cSAngleFf)
//	80177080: 80182CD0 (Val__11dCamParam_cFli)
//	80177088: 80270FC8 (__ct__7cSAngleFf)
//	80177098: 80182CD0 (Val__11dCamParam_cFli)
//	801770AC: 80182CD0 (Val__11dCamParam_cFli)
//	801770C0: 80182CD0 (Val__11dCamParam_cFli)
//	801770D4: 80182CD0 (Val__11dCamParam_cFli)
//	801770E8: 80182CD0 (Val__11dCamParam_cFli)
//	801770FC: 80182CD0 (Val__11dCamParam_cFli)
//	80177110: 8045376C (lit_10550)
//	80177134: 8018299C (dComIfGp_getAttention__Fv)
//	80177164: 80270F98 (__ct__7cSAngleFs)
//	80177170: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8017717C: 80030510 (__dt__7cSAngleFv)
//	80177184: 80451190 (_90__7cSAngle)
//	801771AC: 8042C8F8 (data_8042C8F8)
//	801771B0: 8042C8F8 (data_8042C8F8)
//	801771DC: 80168744 (chaseCamera__9dCamera_cFl)
//	801771EC: 80030510 (__dt__7cSAngleFv)
//	801771F8: 80030510 (__dt__7cSAngleFv)
//	80177204: 80030510 (__dt__7cSAngleFv)
//	80177210: 80030510 (__dt__7cSAngleFv)
//	8017721C: 80030510 (__dt__7cSAngleFv)
//	80177228: 80030510 (__dt__7cSAngleFv)
//	8017723C: 8016C368 (func_8016C368)
//	8017724C: 804538A4 (lit_13132)
//	80177250: 80270FC8 (__ct__7cSAngleFf)
//	80177278: 80030510 (__dt__7cSAngleFv)
//	80177288: 804538A4 (lit_13132)
//	8017728C: 8027100C (Val__7cSAngleFf)
//	80177290: 804537F0 (lit_11167)
//	801772AC: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801772BC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801772C8: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	801772D4: 80009184 (__dt__4cXyzFv)
//	801772E0: 80009184 (__dt__4cXyzFv)
//	801772F0: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801772FC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80177308: 80030510 (__dt__7cSAngleFv)
//	80177320: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80177328: 80451188 (_0__7cSAngle)
//	80177348: 80030510 (__dt__7cSAngleFv)
//	80177358: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80177360: 80451188 (_0__7cSAngle)
//	80177380: 80030510 (__dt__7cSAngleFv)
//	801773A8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801773B4: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	801773C0: 80009184 (__dt__4cXyzFv)
//	801773C4: 804536A0 (lit_5656)
//	801773E8: 80271030 (Degree__7cSAngleCFv)
//	801773FC: 800977D8 (__as__4cXyzFRC4cXyz)
//	80177400: 804536E0 (lit_6180)
//	80177410: 80453724 (lit_8530)
//	8017743C: 804536A0 (lit_5656)
//	80177458: 80182C8C (Flag__11dCamParam_cFlUs)
//	80177468: 802710E8 (Inv__7cSAngleCFv)
//	8017747C: 80271228 (__mi__7cSAngleCFs)
//	80177488: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	80177494: 80030510 (__dt__7cSAngleFv)
//	801774A8: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	801774B8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801774C4: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	801774D0: 80030510 (__dt__7cSAngleFv)
//	801774DC: 80030510 (__dt__7cSAngleFv)
//	801774E4: 80451188 (_0__7cSAngle)
//	801774F0: 804536A8 (lit_5658)
//	801774FC: 8045389C (lit_12868)
//	80177514: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80177518: 804536A0 (lit_5656)
//	80177534: 80030510 (__dt__7cSAngleFv)
//	80177548: 804536A0 (lit_5656)
//	8017754C: 804536A8 (lit_5658)
//	80177550: 8015FA2C (func_8015FA2C)
//	80177564: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017757C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80177588: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80177594: 80030510 (__dt__7cSAngleFv)
//	8017759C: 802710F8 (Sin__7cSAngleCFv)
//	801775B0: 80030510 (__dt__7cSAngleFv)
//	801775C0: 80182980 (chkFlag__9dCamera_cFUl)
//	801775D8: 8016C368 (func_8016C368)
//	801775E8: 8045379C (lit_10562)
//	80177600: 80453714 (lit_8023)
//	80177618: 804537A0 (lit_10563)
//	80177628: 804537A4 (lit_10564)
//	80177630: 804537A8 (lit_10565)
//	80177650: 804537AC (lit_10566)
//	80177698: 80453768 (lit_9788)
//	801776A0: 804536A8 (lit_5658)
//	801776AC: 80451020 (data_80451020)
//	801776DC: 80451020 (data_80451020)
//	801776E8: 80182A54 (dComIfGp_evmng_cameraPlay__Fv)
//	801776FC: 80451020 (data_80451020)
//	80177710: 8016C330 (func_8016C330)
//	80177754: 80182A54 (dComIfGp_evmng_cameraPlay__Fv)
//	80177768: 80393F68 (d_d_camera__stringBase0)
//	8017776C: 80393F68 (d_d_camera__stringBase0)
//	80177778: 8008908C (getEvIntData__9dCamera_cFPiPci)
//	801777A4: 80182980 (chkFlag__9dCamera_cFUl)
//	801777DC: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	801777E8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	801777F4: 80009184 (__dt__4cXyzFv)
//	80177804: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80177810: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80177818: 8008E790 (abs__4cXyzCFv)
//	80177828: 80009184 (__dt__4cXyzFv)
//	80177834: 80009184 (__dt__4cXyzFv)
//	80177844: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80177850: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80177858: 8008E790 (abs__4cXyzCFv)
//	80177868: 80009184 (__dt__4cXyzFv)
//	80177874: 80009184 (__dt__4cXyzFv)
//	8017788C: 80182A3C (fabsf__3stdFf)
//	8017789C: 80164D2C (heightOf__9dCamera_cFP10fopAc_ac_c)
//	801778A0: 804536E4 (lit_6629)
//	801778B8: 80182A24 (JMAFastSqrt__Ff)
//	801778BC: 804537B8 (lit_10569)
//	801778E0: 80009184 (__dt__4cXyzFv)
//	801778F4: 80453698 (lit_4448)
//	80177914: 804536A0 (lit_5656)
//	80177924: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80177934: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017794C: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017795C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80177968: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80177974: 80030510 (__dt__7cSAngleFv)
//	80177980: 80030510 (__dt__7cSAngleFv)
//	80177994: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801779A0: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	801779AC: 80030510 (__dt__7cSAngleFv)
//	801779BC: 80182C8C (Flag__11dCamParam_cFlUs)
//	801779E0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801779EC: 80271AB4 (Xyz__7cSGlobeCFv)
//	801779FC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80177A0C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80177A1C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80177A2C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80177A3C: 80266B84 (__ml__4cXyzCFf)
//	80177A4C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80177A58: 800977D8 (__as__4cXyzFRC4cXyz)
//	80177A64: 80009184 (__dt__4cXyzFv)
//	80177A70: 80009184 (__dt__4cXyzFv)
//	80177A7C: 80009184 (__dt__4cXyzFv)
//	80177A88: 80009184 (__dt__4cXyzFv)
//	80177A94: 80009184 (__dt__4cXyzFv)
//	80177AA0: 80009184 (__dt__4cXyzFv)
//	80177AAC: 80009184 (__dt__4cXyzFv)
//	80177AB8: 80009184 (__dt__4cXyzFv)
//	80177ACC: 80097778 (setFlag__9dCamera_cFUl)
//	80177AE0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80177AEC: 80271AB4 (Xyz__7cSGlobeCFv)
//	80177AFC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80177B08: 800977D8 (__as__4cXyzFRC4cXyz)
//	80177B14: 80009184 (__dt__4cXyzFv)
//	80177B20: 80009184 (__dt__4cXyzFv)
//	80177B2C: 80009184 (__dt__4cXyzFv)
//	80177B48: 804061C0 (g_dComIfG_gameInfo)
//	80177B4C: 804061C0 (g_dComIfG_gameInfo)
//	80177B68: 8007595C (MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80177B78: 80453698 (lit_4448)
//	80177BB0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80177BC0: 80266B84 (__ml__4cXyzCFf)
//	80177BCC: 8008E904 (__apl__4cXyzFRC3Vec)
//	80177BD8: 80009184 (__dt__4cXyzFv)
//	80177BE4: 80009184 (__dt__4cXyzFv)
//	80177BF4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80177C04: 80266B84 (__ml__4cXyzCFf)
//	80177C10: 8008E904 (__apl__4cXyzFRC3Vec)
//	80177C1C: 80009184 (__dt__4cXyzFv)
//	80177C28: 80009184 (__dt__4cXyzFv)
//	80177C38: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80177C44: 800977D8 (__as__4cXyzFRC4cXyz)
//	80177C50: 80009184 (__dt__4cXyzFv)
//	80177C58: 804537CC (lit_10574)
//	80177C68: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	80177C80: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80177C90: 801411F0 (__ct__8cM3dGPlaFv)
//	80177C94: 804061C0 (g_dComIfG_gameInfo)
//	80177C98: 804061C0 (g_dComIfG_gameInfo)
//	80177CA8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80177CB0: 801829F0 (GetCross__11cBgS_LinChkFv)
//	80177CBC: 800977D8 (__as__4cXyzFRC4cXyz)
//	80177CC8: 8008E904 (__apl__4cXyzFRC3Vec)
//	80177CD4: 8001DB90 (__dt__8cM3dGPlaFv)
//	80177CE4: 8015FA2C (func_8015FA2C)
//	80177CF8: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80177D0C: 80270FC8 (__ct__7cSAngleFf)
//	80177D18: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80177D24: 80030510 (__dt__7cSAngleFv)
//	80177D40: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80177D5C: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80177D64: 802710E8 (Inv__7cSAngleCFv)
//	80177D70: 80270F98 (__ct__7cSAngleFs)
//	80177D84: 80271850 (__ct__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	80177D90: 80030510 (__dt__7cSAngleFv)
//	80177DB8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80177DC8: 80271264 (__ml__7cSAngleCFf)
//	80177DD8: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80177DE4: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80177DF0: 80030510 (__dt__7cSAngleFv)
//	80177DFC: 80030510 (__dt__7cSAngleFv)
//	80177E08: 80030510 (__dt__7cSAngleFv)
//	80177E14: 80271AB4 (Xyz__7cSGlobeCFv)
//	80177E24: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80177E30: 800977D8 (__as__4cXyzFRC4cXyz)
//	80177E3C: 80009184 (__dt__4cXyzFv)
//	80177E48: 80009184 (__dt__4cXyzFv)
//	80177E6C: 80271030 (Degree__7cSAngleCFv)
//	80177EAC: 8007167C (__dt__7cSGlobeFv)
//	80177EB8: 80030510 (__dt__7cSAngleFv)
//	80177EC4: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	80177ED0: 80009184 (__dt__4cXyzFv)
//	80177EDC: 8007167C (__dt__7cSGlobeFv)
//	80177EE8: 80009184 (__dt__4cXyzFv)
//	80177EF4: 80009184 (__dt__4cXyzFv)
//	80177F00: 80030510 (__dt__7cSAngleFv)
//	80177F0C: 8007167C (__dt__7cSGlobeFv)
//	80177F18: 80030510 (__dt__7cSAngleFv)
//	80177F24: 80030510 (__dt__7cSAngleFv)
//	80177F30: 80030510 (__dt__7cSAngleFv)
//	80177F3C: 80030510 (__dt__7cSAngleFv)
//	80177F48: 80030510 (__dt__7cSAngleFv)
//	80177F54: 80030510 (__dt__7cSAngleFv)
//	80177F6C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	80177F78: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80177F84: 80009184 (__dt__4cXyzFv)
//	80177F8C: 804536E4 (lit_6629)
//	80177FA0: 801657EC (groundHeight__9dCamera_cFP4cXyz)
//	80177FB0: 804536A0 (lit_5656)
//	80177FDC: 80453698 (lit_4448)
//	80177FF8: 80453754 (lit_9406)
//	80178000: 804537D0 (lit_10575)
//	80178004: 8008813C (rationalBezierRatio__8dCamMathFff)
//	80178008: 8045376C (lit_10550)
//	8017802C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80178038: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80178044: 80030510 (__dt__7cSAngleFv)
//	80178058: 8014195C (__ct__4cXyzFfff)
//	80178068: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80178078: 80266BD0 (__ml__4cXyzCFRC3Vec)
//	80178084: 8008E904 (__apl__4cXyzFRC3Vec)
//	80178090: 80009184 (__dt__4cXyzFv)
//	8017809C: 80009184 (__dt__4cXyzFv)
//	801780AC: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801780B8: 800977D8 (__as__4cXyzFRC4cXyz)
//	801780C4: 80009184 (__dt__4cXyzFv)
//	801780CC: 804537CC (lit_10574)
//	801780E4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801780F0: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	801780FC: 80009184 (__dt__4cXyzFv)
//	80178100: 804536A8 (lit_5658)
//	80178118: 804536A0 (lit_5656)
//	80178128: 804536A8 (lit_5658)
//	80178158: 804536A8 (lit_5658)
//	80178170: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80178180: 80271264 (__ml__7cSAngleCFf)
//	80178190: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017819C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	801781A8: 80030510 (__dt__7cSAngleFv)
//	801781B4: 80030510 (__dt__7cSAngleFv)
//	801781C0: 80030510 (__dt__7cSAngleFv)
//	801781D0: 80182C8C (Flag__11dCamParam_cFlUs)
//	801781E0: 80182A3C (fabsf__3stdFf)
//	801781E4: 804536E8 (lit_6630)
//	801781F4: 80453690 (lit_4445)
//	801781F8: 8008813C (rationalBezierRatio__8dCamMathFff)
//	801781FC: 804537B8 (lit_10569)
//	80178208: 80270FC8 (__ct__7cSAngleFf)
//	80178218: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80178224: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80178230: 80030510 (__dt__7cSAngleFv)
//	8017823C: 80030510 (__dt__7cSAngleFv)
//	80178244: 80182A3C (fabsf__3stdFf)
//	80178248: 804536E8 (lit_6630)
//	8017825C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017826C: 80271264 (__ml__7cSAngleCFf)
//	8017827C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80178288: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	80178294: 80030510 (__dt__7cSAngleFv)
//	801782A0: 80030510 (__dt__7cSAngleFv)
//	801782AC: 80030510 (__dt__7cSAngleFv)
//	801782BC: 804536E8 (lit_6630)
//	801782C0: 804537F4 (lit_11168)
//	801782DC: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	801782E8: 80030510 (__dt__7cSAngleFv)
//	801782FC: 804536A0 (lit_5656)
//	80178318: 80182C8C (Flag__11dCamParam_cFlUs)
//	80178330: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	80178340: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017834C: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	80178358: 80030510 (__dt__7cSAngleFv)
//	80178364: 80030510 (__dt__7cSAngleFv)
//	8017836C: 80453734 (lit_9398)
//	80178374: 804536A8 (lit_5658)
//	80178388: 80451188 (_0__7cSAngle)
//	80178398: 804536A8 (lit_5658)
//	801783A4: 804538AC (lit_13673)
//	801783BC: 8045389C (lit_12868)
//	801783C8: 804538AC (lit_13673)
//	801783DC: 804536E8 (lit_6630)
//	801783E0: 80453690 (lit_4445)
//	80178404: 80451194 (_180__7cSAngle)
//	8017840C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80178418: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80178424: 80030510 (__dt__7cSAngleFv)
//	80178434: 80271264 (__ml__7cSAngleCFf)
//	8017843C: 802710E8 (Inv__7cSAngleCFv)
//	8017844C: 80271320 (__mi__FsRC7cSAngle)
//	80178458: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80178464: 80030510 (__dt__7cSAngleFv)
//	80178470: 80030510 (__dt__7cSAngleFv)
//	8017847C: 80030510 (__dt__7cSAngleFv)
//	8017848C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017849C: 80271264 (__ml__7cSAngleCFf)
//	801784AC: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801784B8: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	801784C4: 80030510 (__dt__7cSAngleFv)
//	801784D0: 80030510 (__dt__7cSAngleFv)
//	801784DC: 80030510 (__dt__7cSAngleFv)
//	801784E8: 80030510 (__dt__7cSAngleFv)
//	801784FC: 80182C8C (Flag__11dCamParam_cFlUs)
//	80178520: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017852C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80178538: 80030510 (__dt__7cSAngleFv)
//	80178544: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8017855C: 804536A8 (lit_5658)
//	8017856C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017857C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017858C: 80271264 (__ml__7cSAngleCFf)
//	8017859C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801785A8: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	801785B4: 80030510 (__dt__7cSAngleFv)
//	801785C0: 80030510 (__dt__7cSAngleFv)
//	801785CC: 80030510 (__dt__7cSAngleFv)
//	801785D8: 80030510 (__dt__7cSAngleFv)
//	801785E4: 80030510 (__dt__7cSAngleFv)
//	801785FC: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80178608: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	80178614: 80030510 (__dt__7cSAngleFv)
//	80178620: 8008813C (rationalBezierRatio__8dCamMathFff)
//	80178638: 804536A8 (lit_5658)
//	80178648: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80178658: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80178668: 80271264 (__ml__7cSAngleCFf)
//	80178678: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80178684: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	80178690: 80030510 (__dt__7cSAngleFv)
//	8017869C: 80030510 (__dt__7cSAngleFv)
//	801786A8: 80030510 (__dt__7cSAngleFv)
//	801786B4: 80030510 (__dt__7cSAngleFv)
//	801786C0: 80030510 (__dt__7cSAngleFv)
//	801786D0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801786DC: 8045373C (lit_9400)
//	801786E0: 80271264 (__ml__7cSAngleCFf)
//	801786EC: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	801786F8: 80030510 (__dt__7cSAngleFv)
//	80178704: 80030510 (__dt__7cSAngleFv)
//	80178718: 8016C368 (func_8016C368)
//	80178724: 804536A0 (lit_5656)
//	8017874C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80178760: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017876C: 804536A8 (lit_5658)
//	80178770: 80271264 (__ml__7cSAngleCFf)
//	80178780: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017878C: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	80178798: 80030510 (__dt__7cSAngleFv)
//	801787A4: 80030510 (__dt__7cSAngleFv)
//	801787B0: 80030510 (__dt__7cSAngleFv)
//	801787BC: 80030510 (__dt__7cSAngleFv)
//	801787D0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801787E4: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801787F0: 804536A8 (lit_5658)
//	801787F4: 80271264 (__ml__7cSAngleCFf)
//	80178804: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80178810: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8017881C: 80030510 (__dt__7cSAngleFv)
//	80178828: 80030510 (__dt__7cSAngleFv)
//	80178834: 80030510 (__dt__7cSAngleFv)
//	80178840: 80030510 (__dt__7cSAngleFv)
//	80178850: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017885C: 8045373C (lit_9400)
//	80178860: 80271264 (__ml__7cSAngleCFf)
//	8017886C: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	80178878: 80030510 (__dt__7cSAngleFv)
//	80178884: 80030510 (__dt__7cSAngleFv)
//	80178894: 8016C368 (func_8016C368)
//	801788AC: 804536A0 (lit_5656)
//	801788BC: 804536E8 (lit_6630)
//	801788E8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801788F8: 80271264 (__ml__7cSAngleCFf)
//	80178908: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80178914: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	80178920: 80030510 (__dt__7cSAngleFv)
//	8017892C: 80030510 (__dt__7cSAngleFv)
//	80178938: 80030510 (__dt__7cSAngleFv)
//	80178968: 80182C8C (Flag__11dCamParam_cFlUs)
//	80178978: 80451188 (_0__7cSAngle)
//	8017897C: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	80178990: 80271030 (Degree__7cSAngleCFv)
//	801789A0: 8027100C (Val__7cSAngleFf)
//	801789A8: 804536E0 (lit_6180)
//	801789CC: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	801789D4: 80271030 (Degree__7cSAngleCFv)
//	801789E0: 80453730 (lit_9397)
//	801789E4: 8008813C (rationalBezierRatio__8dCamMathFff)
//	80178A04: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	80178A20: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	80178A34: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	80178A44: 80271264 (__ml__7cSAngleCFf)
//	80178A54: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80178A60: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	80178A6C: 80030510 (__dt__7cSAngleFv)
//	80178A78: 80030510 (__dt__7cSAngleFv)
//	80178A84: 80030510 (__dt__7cSAngleFv)
//	80178AC8: 804536E0 (lit_6180)
//	80178AF4: 804536E0 (lit_6180)
//	80178B10: 804536A8 (lit_5658)
//	80178B24: 80182C8C (Flag__11dCamParam_cFlUs)
//	80178B40: 80271850 (__ct__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	80178B4C: 80271AB4 (Xyz__7cSGlobeCFv)
//	80178B5C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80178B68: 800977F4 (__ct__4cXyzFRC4cXyz)
//	80178B74: 80009184 (__dt__4cXyzFv)
//	80178B80: 80009184 (__dt__4cXyzFv)
//	80178BA0: 801659F4 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP4cXyzUl)
//	80178BBC: 80009184 (__dt__4cXyzFv)
//	80178BC8: 80009184 (__dt__4cXyzFv)
//	80178BD4: 8007167C (__dt__7cSGlobeFv)
//	80178BF8: 80271AB4 (Xyz__7cSGlobeCFv)
//	80178C08: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80178C14: 800977D8 (__as__4cXyzFRC4cXyz)
//	80178C20: 80009184 (__dt__4cXyzFv)
//	80178C2C: 80009184 (__dt__4cXyzFv)
//	80178C40: 80453750 (lit_9405)
//	80178C64: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80178C70: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80178C7C: 80009184 (__dt__4cXyzFv)
//	80178C84: 804536E0 (lit_6180)
//	80178CC8: 80030510 (__dt__7cSAngleFv)
//	80178CD4: 80030510 (__dt__7cSAngleFv)
//	80178CE0: 80030510 (__dt__7cSAngleFv)
//	80178CEC: 8007167C (__dt__7cSGlobeFv)
//	80178CF8: 80009184 (__dt__4cXyzFv)
//	80178D04: 80030510 (__dt__7cSAngleFv)
//	80178D10: 80009184 (__dt__4cXyzFv)
//	80178D1C: 80009184 (__dt__4cXyzFv)
//	80178D28: 8007167C (__dt__7cSGlobeFv)
//	80178D34: 80009184 (__dt__4cXyzFv)
//	80178D40: 80009184 (__dt__4cXyzFv)
//	80178D4C: 80030510 (__dt__7cSAngleFv)
//	80178D58: 8007167C (__dt__7cSGlobeFv)
//	80178D64: 80030510 (__dt__7cSAngleFv)
//	80178D70: 80030510 (__dt__7cSAngleFv)
//	80178D7C: 80030510 (__dt__7cSAngleFv)
//	80178D88: 80030510 (__dt__7cSAngleFv)
//	80178D94: 80030510 (__dt__7cSAngleFv)
//	80178DA0: 80030510 (__dt__7cSAngleFv)
//	80178E3C: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::towerCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/towerCamera__9dCamera_cFl.s"
}
#pragma pop

/* ############################################################################################## */
/* 804538B0-804538B4 0004+00 s=1 e=0 z=0  None .sdata2    @14059 */
SECTION_SDATA2 static f32 lit_14059 = -160.0f;

/* 804538B4-804538B8 0004+00 s=1 e=0 z=0  None .sdata2    @14060 */
SECTION_SDATA2 static f32 lit_14060 = 170.0f;

/* 804538B8-804538BC 0004+00 s=2 e=0 z=0  None .sdata2    @14061 */
SECTION_SDATA2 static f32 lit_14061 = -120.0f;

/* 804538BC-804538C0 0004+00 s=1 e=0 z=0  None .sdata2    @14062 */
SECTION_SDATA2 static f32 lit_14062 = -240.0f;

/* 804538C0-804538C4 0004+00 s=1 e=0 z=0  None .sdata2    @14063 */
SECTION_SDATA2 static f32 lit_14063 = 340.0f;

/* 804538C4-804538C8 0004+00 s=2 e=0 z=0  None .sdata2    @14064 */
SECTION_SDATA2 static f32 lit_14064 = -100.0f;

/* 80178E50-80179590 0740+00 s=1 e=0 z=0  None .text      hookshotCamera__9dCamera_cFl */
//	80178E80: 803621CC (_savegpr_25)
//	80178EBC: 804537E8 (lit_10581)
//	80178EC4: 80453768 (lit_9788)
//	80178ECC: 804538B0 (lit_14059)
//	80178EE0: 8045387C (lit_12294)
//	80178EE8: 804536B8 (lit_5662)
//	80178EF0: 80453840 (lit_12279)
//	80178F04: 804538B4 (lit_14060)
//	80178F0C: 80453790 (lit_10559)
//	80178F14: 80453884 (lit_12296)
//	80178F28: 80453738 (lit_9399)
//	80178F30: 804538B8 (lit_14061)
//	80178F38: 804538BC (lit_14062)
//	80178F4C: 80453734 (lit_9398)
//	80178F58: 804538C0 (lit_14063)
//	80178F6C: 804536E4 (lit_6629)
//	80178F74: 804538C4 (lit_14064)
//	80178F7C: 8045380C (lit_11174)
//	80178F90: 80453754 (lit_9406)
//	80178F98: 804537EC (lit_10582)
//	80178FA0: 80453710 (lit_8022)
//	80179014: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	80179030: 804061C0 (g_dComIfG_gameInfo)
//	80179034: 804061C0 (g_dComIfG_gameInfo)
//	80179070: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801790B4: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	801790E0: 80347138 (PSVECSquareMag)
//	801790E4: 804536A0 (lit_5656)
//	801790F4: 804536C8 (lit_6177)
//	801790FC: 804536D0 (lit_6178)
//	80179144: 804536D8 (lit_6179)
//	80179150: 80450AE0 (__float_nan)
//	80179154: 80450AE0 (__float_nan)
//	801791C0: 80450AE0 (__float_nan)
//	801791C4: 80450AE0 (__float_nan)
//	80179234: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80179244: 802711FC (__pl__7cSAngleCFs)
//	80179250: 80270F98 (__ct__7cSAngleFs)
//	80179270: 802711FC (__pl__7cSAngleCFs)
//	8017927C: 80270F98 (__ct__7cSAngleFs)
//	80179290: 80271AB4 (Xyz__7cSGlobeCFv)
//	801792A0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801792CC: 80165AF0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzUl)
//	8017934C: 804536A8 (lit_5658)
//	8017938C: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	801793B4: 804061C0 (g_dComIfG_gameInfo)
//	801793B8: 804061C0 (g_dComIfG_gameInfo)
//	801793D8: 8007595C (MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	801793F4: 8007595C (MoveBgMatrixCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80179404: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80179414: 80266BD0 (__ml__4cXyzCFRC3Vec)
//	80179424: 80347090 (PSVECAdd)
//	80179434: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80179440: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8017948C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017949C: 80271264 (__ml__7cSAngleCFf)
//	801794AC: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801794B8: 80270F98 (__ct__7cSAngleFs)
//	801794D4: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801794E4: 80271264 (__ml__7cSAngleCFf)
//	801794F4: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	80179500: 80270F98 (__ct__7cSAngleFs)
//	80179514: 80271AB4 (Xyz__7cSGlobeCFv)
//	80179524: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017957C: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::hookshotCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/hookshotCamera__9dCamera_cFl.s"
}
#pragma pop

/* ############################################################################################## */
/* 8042C9AC-8042C9B8 000C+00 s=1 e=0 z=0  None .bss       @14159 */
static u8 lit_14159[12];

/* 80451040-80451044 0004+00 s=2 e=0 z=0  None .sbss      None */
static u8 struct_80451040[4];

/* 80179590-8017A2A0 0D10+00 s=1 e=0 z=0  None .text      railCamera__9dCamera_cFl */
//	80179610: 803621C8 (_savegpr_24)
//	80179674: 804536A8 (lit_5658)
//	80179680: 804536A0 (lit_5656)
//	801796D0: 800517EC (dPath_GetRoomPath__Fii)
//	801796F8: 80453738 (lit_9399)
//	80179700: 80453698 (lit_4448)
//	80179758: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80179790: 80164878 (getParamTargetActor__9dCamera_cFl)
//	801797EC: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80179854: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	80179864: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	801798CC: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	801798E8: 804536B4 (lit_5661)
//	80179920: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80179994: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	801799F0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80179A24: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80179A5C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80179A9C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80179AAC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80179AB8: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80179ABC: 804536A8 (lit_5658)
//	80179ACC: 804536F8 (lit_8016)
//	80179AF0: 802717F0 (__ct__7cSGlobeFRC7cSGlobe)
//	80179B08: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80179B14: 80271AB4 (Xyz__7cSGlobeCFv)
//	80179B24: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80179B4C: 804536A0 (lit_5656)
//	80179B54: 804536A0 (lit_5656)
//	80179B8C: 80453724 (lit_8530)
//	80179BB8: 803A78F8 (__vt__8cM3dGLin)
//	80179BBC: 803A78F8 (__vt__8cM3dGLin)
//	80179BF4: 8026F31C (SetStartEnd__8cM3dGLinFRC3VecRC3Vec)
//	80179C08: 80268710 (cM3d_Len3dSqPntAndSegLine__FPC8cM3dGLinPC3VecP3VecPf)
//	80179C20: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80179C2C: 8045370C (lit_8021)
//	80179C30: 80266B84 (__ml__4cXyzCFf)
//	80179C40: 80347090 (PSVECAdd)
//	80179C70: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80179C7C: 80271AB4 (Xyz__7cSGlobeCFv)
//	80179C8C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80179CB4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80179CC0: 8045370C (lit_8021)
//	80179CC4: 80266B84 (__ml__4cXyzCFf)
//	80179CD4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80179CF0: 803A78F8 (__vt__8cM3dGLin)
//	80179CF4: 803A78F8 (__vt__8cM3dGLin)
//	80179D10: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	80179D1C: 80271AB4 (Xyz__7cSGlobeCFv)
//	80179D2C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80179D54: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80179D64: 80266BD0 (__ml__4cXyzCFRC3Vec)
//	80179D74: 80347090 (PSVECAdd)
//	80179D80: 8008813C (rationalBezierRatio__8dCamMathFff)
//	80179D88: 803A7904 (__vt__8cM3dGSph)
//	80179D8C: 803A7904 (__vt__8cM3dGSph)
//	80179DA0: 8026F664 (Set__8cM3dGSphFRC4cXyzf)
//	80179DA4: 804536A0 (lit_5656)
//	80179DEC: 803A78F8 (__vt__8cM3dGLin)
//	80179DF0: 803A78F8 (__vt__8cM3dGLin)
//	80179E60: 8026F31C (SetStartEnd__8cM3dGLinFRC3VecRC3Vec)
//	80179E74: 8026B4E8 (cM3d_Cross_LinSph_CrossPos__FRC8cM3dGSphRC8cM3dGLinP3VecP3Vec)
//	80179E9C: 8015FB28 (func_8015FB28)
//	80179EB0: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	80179EE4: 8015FB28 (func_8015FB28)
//	80179EF8: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	80179F88: 8026F31C (SetStartEnd__8cM3dGLinFRC3VecRC3Vec)
//	80179F9C: 8026B4E8 (cM3d_Cross_LinSph_CrossPos__FRC8cM3dGSphRC8cM3dGLinP3VecP3Vec)
//	80179FC4: 8015FB28 (func_8015FB28)
//	80179FD8: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	8017A00C: 8015FB28 (func_8015FB28)
//	8017A020: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	8017A050: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017A05C: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8017A074: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017A080: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017A084: 8045103E (struct_8045103C)
//	8017A090: 80451040 (struct_80451040)
//	8017A094: 80453858 (lit_12285)
//	8017A098: 80270FC8 (__ct__7cSAngleFf)
//	8017A09C: 80030510 (__dt__7cSAngleFv)
//	8017A0A0: 80030510 (__dt__7cSAngleFv)
//	8017A0A4: 8042C9AC (lit_14159)
//	8017A0A8: 8042C9AC (lit_14159)
//	8017A0AC: 80361C24 (__register_global_object)
//	8017A0B4: 8045103E (struct_8045103C)
//	8017A0B8: 80451040 (struct_80451040)
//	8017A0C0: 802710CC (Abs__7cSAngleCFv)
//	8017A0D8: 80165104 (setUSOAngle__9dCamera_cFv)
//	8017A128: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017A138: 80271264 (__ml__7cSAngleCFf)
//	8017A148: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017A154: 80270F98 (__ct__7cSAngleFs)
//	8017A170: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017A180: 80271264 (__ml__7cSAngleCFf)
//	8017A190: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017A19C: 80270F98 (__ct__7cSAngleFs)
//	8017A1B0: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017A1C0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017A1FC: 803A78F8 (__vt__8cM3dGLin)
//	8017A200: 803A78F8 (__vt__8cM3dGLin)
//	8017A208: 803A7904 (__vt__8cM3dGSph)
//	8017A20C: 803A7904 (__vt__8cM3dGSph)
//	8017A28C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::railCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/railCamera__9dCamera_cFl.s"
}
#pragma pop

/* ############################################################################################## */
/* 8042C9B8-8042C9C4 000C+00 s=1 e=0 z=0  None .bss       @14615 */
static u8 lit_14615[12];

/* 80451044-80451048 0004+00 s=2 e=0 z=0  None .sbss      None */
static u8 struct_80451044[4];

/* 8017A2A0-8017ADC0 0B20+00 s=1 e=0 z=0  None .text      paraRailCamera__9dCamera_cFl */
//	8017A310: 803621C4 (_savegpr_23)
//	8017A39C: 804536A8 (lit_5658)
//	8017A3B0: 804536A0 (lit_5656)
//	8017A3E4: 800517EC (dPath_GetRoomPath__Fii)
//	8017A40C: 80453738 (lit_9399)
//	8017A414: 80453698 (lit_4448)
//	8017A434: 803A78F8 (__vt__8cM3dGLin)
//	8017A438: 803A78F8 (__vt__8cM3dGLin)
//	8017A4AC: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017A4E0: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017A514: 802717F0 (__ct__7cSGlobeFRC7cSGlobe)
//	8017A518: 80453738 (lit_9399)
//	8017A52C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017A538: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017A548: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017A57C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017A58C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017A598: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8017A59C: 804536A8 (lit_5658)
//	8017A5AC: 804536F8 (lit_8016)
//	8017A5D0: 802717F0 (__ct__7cSGlobeFRC7cSGlobe)
//	8017A5E8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017A5F4: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017A604: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017A62C: 804536A0 (lit_5656)
//	8017A634: 804536A0 (lit_5656)
//	8017A66C: 80453724 (lit_8530)
//	8017A698: 803A78F8 (__vt__8cM3dGLin)
//	8017A69C: 803A78F8 (__vt__8cM3dGLin)
//	8017A6D4: 8026F31C (SetStartEnd__8cM3dGLinFRC3VecRC3Vec)
//	8017A6E8: 80268710 (cM3d_Len3dSqPntAndSegLine__FPC8cM3dGLinPC3VecP3VecPf)
//	8017A700: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017A70C: 8045370C (lit_8021)
//	8017A710: 80266B84 (__ml__4cXyzCFf)
//	8017A720: 80347090 (PSVECAdd)
//	8017A750: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017A7B8: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	8017A7C8: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	8017A814: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017A820: 8045370C (lit_8021)
//	8017A824: 80266B84 (__ml__4cXyzCFf)
//	8017A834: 80347090 (PSVECAdd)
//	8017A850: 803A78F8 (__vt__8cM3dGLin)
//	8017A854: 803A78F8 (__vt__8cM3dGLin)
//	8017A870: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	8017A87C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017A88C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017A8B4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017A8C4: 80266BD0 (__ml__4cXyzCFRC3Vec)
//	8017A8D4: 80347090 (PSVECAdd)
//	8017A8E0: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8017A970: 8026F31C (SetStartEnd__8cM3dGLinFRC3VecRC3Vec)
//	8017A984: 80268710 (cM3d_Len3dSqPntAndSegLine__FPC8cM3dGLinPC3VecP3VecPf)
//	8017AA24: 8026F31C (SetStartEnd__8cM3dGLinFRC3VecRC3Vec)
//	8017AA38: 80268710 (cM3d_Len3dSqPntAndSegLine__FPC8cM3dGLinPC3VecP3VecPf)
//	8017AAD8: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	8017AAE8: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	8017AB58: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017AB64: 8045370C (lit_8021)
//	8017AB68: 80266B84 (__ml__4cXyzCFf)
//	8017AB78: 80347090 (PSVECAdd)
//	8017AB88: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017AB94: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8017ABAC: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017ABB8: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017ABBC: 80451042 (struct_80451040)
//	8017ABC8: 80451044 (struct_80451044)
//	8017ABCC: 80453858 (lit_12285)
//	8017ABD0: 80270FC8 (__ct__7cSAngleFf)
//	8017ABD4: 80030510 (__dt__7cSAngleFv)
//	8017ABD8: 80030510 (__dt__7cSAngleFv)
//	8017ABDC: 8042C9B8 (lit_14615)
//	8017ABE0: 8042C9B8 (lit_14615)
//	8017ABE4: 80361C24 (__register_global_object)
//	8017ABEC: 80451042 (struct_80451040)
//	8017ABF0: 80451044 (struct_80451044)
//	8017ABF8: 802710CC (Abs__7cSAngleCFv)
//	8017AC10: 80165104 (setUSOAngle__9dCamera_cFv)
//	8017AC60: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017AC70: 80271264 (__ml__7cSAngleCFf)
//	8017AC80: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017AC8C: 80270F98 (__ct__7cSAngleFs)
//	8017ACA8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017ACB8: 80271264 (__ml__7cSAngleCFf)
//	8017ACC8: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017ACD4: 80270F98 (__ct__7cSAngleFs)
//	8017ACE8: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017ACF8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017AD38: 803A78F8 (__vt__8cM3dGLin)
//	8017AD3C: 803A78F8 (__vt__8cM3dGLin)
//	8017ADAC: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::paraRailCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/paraRailCamera__9dCamera_cFl.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451048-8045104C 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 struct_80451048[4];

/* 8045104C-80451050 0002+02 s=1 e=0 z=0  None .sbss      LatMax$14967 */
static u8 LatMax[2 + 2 /* padding */];

/* 804538C8-804538CC 0004+00 s=1 e=0 z=0  None .sdata2    @15474 */
SECTION_SDATA2 static f32 lit_15474 = 1200.0f;

/* 804538CC-804538D0 0004+00 s=1 e=0 z=0  None .sdata2    @15475 */
SECTION_SDATA2 static f32 lit_15475 = 3.0f / 5.0f;

/* 804538D0-804538D4 0004+00 s=1 e=0 z=0  None .sdata2    @15476 */
SECTION_SDATA2 static f32 lit_15476 = 800.0f;

/* 804538D4-804538D8 0004+00 s=1 e=0 z=0  None .sdata2    @15477 */
SECTION_SDATA2 static f32 lit_15477 = 28.0f;

/* 804538D8-804538DC 0004+00 s=2 e=0 z=0  None .sdata2    @15478 */
SECTION_SDATA2 static f32 lit_15478 = 320.0f;

/* 804538DC-804538E0 0004+00 s=1 e=0 z=0  None .sdata2    @15479 */
SECTION_SDATA2 static f32 lit_15479 = 6000.0f;

/* 804538E0-804538E4 0004+00 s=1 e=0 z=0  None .sdata2    @15480 */
SECTION_SDATA2 static f32 lit_15480 = 1000.0f;

/* 804538E4-804538E8 0004+00 s=1 e=0 z=0  None .sdata2    @15481 */
SECTION_SDATA2 static f32 lit_15481 = 23.0f;

/* 804538E8-804538EC 0004+00 s=1 e=0 z=0  None .sdata2    @15482 */
SECTION_SDATA2 static f32 lit_15482 = 780.0f;

/* 804538EC-804538F0 0004+00 s=1 e=0 z=0  None .sdata2    @15483 */
SECTION_SDATA2 static f32 lit_15483 = 1250.0f;

/* 804538F0-804538F4 0004+00 s=1 e=0 z=0  None .sdata2    @15484 */
SECTION_SDATA2 static f32 lit_15484 = 34.0f;

/* 804538F4-804538F8 0004+00 s=1 e=0 z=0  None .sdata2    @15485 */
SECTION_SDATA2 static f32 lit_15485 = 900.0f;

/* 804538F8-804538FC 0004+00 s=1 e=0 z=0  None .sdata2    @15486 */
SECTION_SDATA2 static f32 lit_15486 = 1.0500000715255737f;

/* 804538FC-80453900 0004+00 s=1 e=0 z=0  None .sdata2    @15487 */
SECTION_SDATA2 static f32 lit_15487 = 1.1500000953674316f;

/* 8017ADC0-8017D934 2B74+00 s=1 e=0 z=0  None .text      rideCamera__9dCamera_cFl */
//	8017AE60: 803621D0 (_savegpr_26)
//	8017AE6C: 8042C8F8 (data_8042C8F8)
//	8017AE70: 8042C8F8 (data_8042C8F8)
//	8017AE74: 80451046 (struct_80451044)
//	8017AE80: 80451048 (struct_80451048)
//	8017AE84: 80453790 (lit_10559)
//	8017AE88: 80270FC8 (__ct__7cSAngleFf)
//	8017AE8C: 80030510 (__dt__7cSAngleFv)
//	8017AE90: 80030510 (__dt__7cSAngleFv)
//	8017AE98: 80361C24 (__register_global_object)
//	8017AEA0: 80451046 (struct_80451044)
//	8017AEA4: 8045104A (struct_80451048)
//	8017AEB0: 8045104C (LatMax)
//	8017AEB4: 80453754 (lit_9406)
//	8017AEB8: 80270FC8 (__ct__7cSAngleFf)
//	8017AEBC: 80030510 (__dt__7cSAngleFv)
//	8017AEC0: 80030510 (__dt__7cSAngleFv)
//	8017AEC8: 80361C24 (__register_global_object)
//	8017AED0: 8045104A (struct_80451048)
//	8017AEE0: 80182CD0 (Val__11dCamParam_cFli)
//	8017AEF4: 80182CD0 (Val__11dCamParam_cFli)
//	8017AF08: 80182CD0 (Val__11dCamParam_cFli)
//	8017AF18: 80182CD0 (Val__11dCamParam_cFli)
//	8017AF2C: 80182CD0 (Val__11dCamParam_cFli)
//	8017AF40: 80182CD0 (Val__11dCamParam_cFli)
//	8017AF54: 80182CD0 (Val__11dCamParam_cFli)
//	8017AF68: 80182CD0 (Val__11dCamParam_cFli)
//	8017AF7C: 80182CD0 (Val__11dCamParam_cFli)
//	8017AF90: 80182CD0 (Val__11dCamParam_cFli)
//	8017AFA4: 80182CD0 (Val__11dCamParam_cFli)
//	8017AFB8: 80182CD0 (Val__11dCamParam_cFli)
//	8017AFCC: 80182CD0 (Val__11dCamParam_cFli)
//	8017AFE0: 80182CD0 (Val__11dCamParam_cFli)
//	8017AFE8: 80270FC8 (__ct__7cSAngleFf)
//	8017AFF8: 80182CD0 (Val__11dCamParam_cFli)
//	8017B00C: 80182CD0 (Val__11dCamParam_cFli)
//	8017B020: 80182CD0 (Val__11dCamParam_cFli)
//	8017B034: 80182CD0 (Val__11dCamParam_cFli)
//	8017B048: 80182CD0 (Val__11dCamParam_cFli)
//	8017B05C: 80182CD0 (Val__11dCamParam_cFli)
//	8017B070: 80182CD0 (Val__11dCamParam_cFli)
//	8017B084: 80182CD0 (Val__11dCamParam_cFli)
//	8017B098: 80182CD0 (Val__11dCamParam_cFli)
//	8017B0A0: 804536A0 (lit_5656)
//	8017B0B0: 804536A8 (lit_5658)
//	8017B0C0: 80453690 (lit_4445)
//	8017B0C8: 80453808 (lit_11173)
//	8017B0CC: 80270FC8 (__ct__7cSAngleFf)
//	8017B0D0: 8045370C (lit_8021)
//	8017B0D8: 80451188 (_0__7cSAngle)
//	8017B0DC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017B0E0: 804536A8 (lit_5658)
//	8017B0E4: 80182878 (daAlink_getAlinkActorClass__Fv)
//	8017B0EC: 8018299C (dComIfGp_getAttention__Fv)
//	8017B114: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017B120: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017B12C: 8008E774 (__as__7cSGlobeFRC7cSGlobe)
//	8017B160: 801414D8 (dComIfGp_getHorseActor__Fv)
//	8017B190: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	8017B194: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	8017B19C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8017B1C8: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017B1D8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017B1E4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017B1EC: 8008E790 (abs__4cXyzCFv)
//	8017B1FC: 80009184 (__dt__4cXyzFv)
//	8017B208: 80009184 (__dt__4cXyzFv)
//	8017B214: 80009184 (__dt__4cXyzFv)
//	8017B228: 80097778 (setFlag__9dCamera_cFUl)
//	8017B23C: 804536A0 (lit_5656)
//	8017B260: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017B26C: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8017B278: 80030510 (__dt__7cSAngleFv)
//	8017B290: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017B29C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017B2A8: 80009184 (__dt__4cXyzFv)
//	8017B2C8: 80430CF4 (Zero__4cXyz)
//	8017B2CC: 80430CF4 (Zero__4cXyz)
//	8017B2D0: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017B2EC: 804536A0 (lit_5656)
//	8017B304: 80271030 (Degree__7cSAngleCFv)
//	8017B30C: 804536A0 (lit_5656)
//	8017B314: 804536A8 (lit_5658)
//	8017B32C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017B338: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017B354: 804536A0 (lit_5656)
//	8017B360: 8045370C (lit_8021)
//	8017B388: 80393F68 (d_d_camera__stringBase0)
//	8017B38C: 80393F68 (d_d_camera__stringBase0)
//	8017B398: 80368954 (strncmp)
//	8017B3B4: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017B3C8: 80164878 (getParamTargetActor__9dCamera_cFl)
//	8017B3DC: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017B404: 80450618 (g_dComIfGoat_gameInfo)
//	8017B438: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	8017B43C: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	8017B444: 801828A4 (dComIfGs_isTmpBit__FUs)
//	8017B458: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	8017B45C: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	8017B464: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8017B470: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	8017B474: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	8017B47C: 801828A4 (dComIfGs_isTmpBit__FUs)
//	8017B490: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	8017B494: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	8017B49C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8017B4B0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017B4BC: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	8017B4C8: 80009184 (__dt__4cXyzFv)
//	8017B4D8: 80182980 (chkFlag__9dCamera_cFUl)
//	8017B528: 80182980 (chkFlag__9dCamera_cFUl)
//	8017B55C: 80182980 (chkFlag__9dCamera_cFUl)
//	8017B59C: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017B5C4: 80182D04 (getLashDashStart__9daHorse_cCFv)
//	8017B5D4: 80181490 (onHorseDush__9dCamera_cFv)
//	8017B5E4: 804536A0 (lit_5656)
//	8017B60C: 8045370C (lit_8021)
//	8017B640: 8045370C (lit_8021)
//	8017B654: 8045389C (lit_12868)
//	8017B668: 804536A8 (lit_5658)
//	8017B694: 804536A0 (lit_5656)
//	8017B6BC: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017B6CC: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017B6DC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017B6E8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017B6F4: 80009184 (__dt__4cXyzFv)
//	8017B700: 80009184 (__dt__4cXyzFv)
//	8017B70C: 80009184 (__dt__4cXyzFv)
//	8017B714: 8008E790 (abs__4cXyzCFv)
//	8017B728: 80271148 (__mi__7cSAngleCFv)
//	8017B734: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017B740: 80030510 (__dt__7cSAngleFv)
//	8017B74C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017B75C: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	8017B768: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017B774: 80009184 (__dt__4cXyzFv)
//	8017B780: 80030510 (__dt__7cSAngleFv)
//	8017B78C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017B794: 80182A3C (fabsf__3stdFf)
//	8017B798: 80453710 (lit_8022)
//	8017B7A4: 804536A0 (lit_5656)
//	8017B7B0: 80453690 (lit_4445)
//	8017B7C0: 8008E790 (abs__4cXyzCFv)
//	8017B7C4: 804538C8 (lit_15474)
//	8017B7D0: 804536A8 (lit_5658)
//	8017B7DC: 804538CC (lit_15475)
//	8017B7FC: 8045386C (lit_12290)
//	8017B808: 804536A8 (lit_5658)
//	8017B810: 804538C8 (lit_15474)
//	8017B81C: 804536A0 (lit_5656)
//	8017B824: 804536A8 (lit_5658)
//	8017B82C: 804538D0 (lit_15476)
//	8017B838: 80453790 (lit_10559)
//	8017B848: 804538D4 (lit_15477)
//	8017B858: 804538D8 (lit_15478)
//	8017B868: 80453728 (lit_9395)
//	8017B884: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017B894: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017B8A0: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8017B8AC: 80030510 (__dt__7cSAngleFv)
//	8017B8B8: 80030510 (__dt__7cSAngleFv)
//	8017B8BC: 804536EC (lit_6766)
//	8017B8C8: 80009184 (__dt__4cXyzFv)
//	8017B8D4: 80030510 (__dt__7cSAngleFv)
//	8017B8E0: 80009184 (__dt__4cXyzFv)
//	8017B8FC: 8007353C (LockonTarget__12dAttention_cFl)
//	8017B90C: 8007353C (LockonTarget__12dAttention_cFl)
//	8017B91C: 8007378C (CheckObjectTarget__12dAttention_cFl)
//	8017B93C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017B948: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017B954: 80009184 (__dt__4cXyzFv)
//	8017B964: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017B970: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017B97C: 80009184 (__dt__4cXyzFv)
//	8017B988: 800883EC (xyzHorizontalDistance__8dCamMathFR4cXyzR4cXyz)
//	8017B98C: 804538DC (lit_15479)
//	8017B9A8: 80009184 (__dt__4cXyzFv)
//	8017B9B4: 80009184 (__dt__4cXyzFv)
//	8017B9C4: 801412BC (fopAcM_GetName__FPv)
//	8017B9D8: 801412BC (fopAcM_GetName__FPv)
//	8017B9EC: 801412BC (fopAcM_GetName__FPv)
//	8017BA00: 801412BC (fopAcM_GetName__FPv)
//	8017BA1C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017BA2C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017BA3C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017BA48: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017BA54: 80009184 (__dt__4cXyzFv)
//	8017BA60: 80009184 (__dt__4cXyzFv)
//	8017BA6C: 80009184 (__dt__4cXyzFv)
//	8017BA78: 80271148 (__mi__7cSAngleCFv)
//	8017BA84: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017BA90: 80030510 (__dt__7cSAngleFv)
//	8017BA9C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017BAAC: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	8017BAB8: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017BAC4: 80009184 (__dt__4cXyzFv)
//	8017BAD0: 80030510 (__dt__7cSAngleFv)
//	8017BADC: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017BAE4: 80182A3C (fabsf__3stdFf)
//	8017BAE8: 80453710 (lit_8022)
//	8017BAF4: 804536A0 (lit_5656)
//	8017BB00: 80453690 (lit_4445)
//	8017BB10: 8008E790 (abs__4cXyzCFv)
//	8017BB14: 804538E0 (lit_15480)
//	8017BB20: 804538CC (lit_15475)
//	8017BB30: 804536A8 (lit_5658)
//	8017BB4C: 80009184 (__dt__4cXyzFv)
//	8017BB58: 80030510 (__dt__7cSAngleFv)
//	8017BB64: 80009184 (__dt__4cXyzFv)
//	8017BB7C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017BB8C: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017BB9C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017BBA8: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017BBB4: 80009184 (__dt__4cXyzFv)
//	8017BBC0: 80009184 (__dt__4cXyzFv)
//	8017BBCC: 80009184 (__dt__4cXyzFv)
//	8017BBD8: 80271148 (__mi__7cSAngleCFv)
//	8017BBE4: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017BBF0: 80030510 (__dt__7cSAngleFv)
//	8017BBFC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017BC0C: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	8017BC18: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017BC24: 80009184 (__dt__4cXyzFv)
//	8017BC30: 80030510 (__dt__7cSAngleFv)
//	8017BC3C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017BC44: 80182A3C (fabsf__3stdFf)
//	8017BC48: 80453710 (lit_8022)
//	8017BC54: 804536A0 (lit_5656)
//	8017BC60: 80453690 (lit_4445)
//	8017BC70: 8008E790 (abs__4cXyzCFv)
//	8017BC74: 804538D0 (lit_15476)
//	8017BC80: 804537F4 (lit_11168)
//	8017BC90: 804536A8 (lit_5658)
//	8017BCAC: 80009184 (__dt__4cXyzFv)
//	8017BCB8: 80030510 (__dt__7cSAngleFv)
//	8017BCC4: 80009184 (__dt__4cXyzFv)
//	8017BCD4: 801412BC (fopAcM_GetName__FPv)
//	8017BCE4: 8045385C (lit_12286)
//	8017BCE8: 804536E4 (lit_6629)
//	8017BCEC: 804538D0 (lit_15476)
//	8017BCF0: 804538C4 (lit_14064)
//	8017BCF4: 804536B0 (lit_5660)
//	8017BD08: 801412BC (fopAcM_GetName__FPv)
//	8017BD1C: 80182D5C (fopAcM_GetParam__FPCv)
//	8017BD2C: 801412BC (fopAcM_GetName__FPv)
//	8017BD50: 8045377C (lit_10554)
//	8017BD54: 804538B8 (lit_14061)
//	8017BD58: 804538E4 (lit_15481)
//	8017BD5C: 804536B8 (lit_5662)
//	8017BD64: 804538E8 (lit_15482)
//	8017BD68: 80453884 (lit_12296)
//	8017BD6C: 80453800 (lit_11171)
//	8017BD70: 804537F0 (lit_11167)
//	8017BD74: 80453838 (lit_12277)
//	8017BD78: 804537CC (lit_10574)
//	8017BD8C: 801412BC (fopAcM_GetName__FPv)
//	8017BDA0: 801412BC (fopAcM_GetName__FPv)
//	8017BDBC: 801412BC (fopAcM_GetName__FPv)
//	8017BDD0: 801412BC (fopAcM_GetName__FPv)
//	8017BDF4: 804538E0 (lit_15480)
//	8017BDFC: 80453750 (lit_9405)
//	8017BE08: 80453790 (lit_10559)
//	8017BE0C: 804538C4 (lit_14064)
//	8017BE10: 804536B4 (lit_5661)
//	8017BE18: 80453768 (lit_9788)
//	8017BE1C: 80453750 (lit_9405)
//	8017BE20: 804538EC (lit_15483)
//	8017BE24: 80453840 (lit_12279)
//	8017BE28: 804536E4 (lit_6629)
//	8017BE30: 80182D48 (checkJump__9daHorse_cCFv)
//	8017BE48: 804536E0 (lit_6180)
//	8017BE58: 80453690 (lit_4445)
//	8017BE5C: 804537D8 (lit_10577)
//	8017BE68: 804536E4 (lit_6629)
//	8017BE6C: 80270FC8 (__ct__7cSAngleFf)
//	8017BE94: 80030510 (__dt__7cSAngleFv)
//	8017BEA0: 804536B0 (lit_5660)
//	8017BEA4: 804536E4 (lit_6629)
//	8017BEB0: 804538C4 (lit_14064)
//	8017BEB4: 804537CC (lit_10574)
//	8017BEBC: 80453724 (lit_8530)
//	8017BEC4: 80453750 (lit_9405)
//	8017BEDC: 804536A0 (lit_5656)
//	8017BEE0: 804536A0 (lit_5656)
//	8017BEF8: 800F3CF8 (checkCanoeRideTandem__9daAlink_cFv)
//	8017BF0C: 804538C4 (lit_14064)
//	8017BF54: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017BF64: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
//	8017BF74: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017BF80: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017BF8C: 80009184 (__dt__4cXyzFv)
//	8017BF98: 80009184 (__dt__4cXyzFv)
//	8017BFA4: 80009184 (__dt__4cXyzFv)
//	8017BFAC: 8008E790 (abs__4cXyzCFv)
//	8017BFB0: 804538C8 (lit_15474)
//	8017BFBC: 8045378C (lit_10558)
//	8017BFC0: 804536E4 (lit_6629)
//	8017BFC4: 80453788 (lit_10557)
//	8017BFCC: 804538F0 (lit_15484)
//	8017BFD0: 804536F8 (lit_8016)
//	8017BFD4: 804538F4 (lit_15485)
//	8017BFD8: 804537EC (lit_10582)
//	8017BFE8: 80271148 (__mi__7cSAngleCFv)
//	8017BFF4: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017C000: 80030510 (__dt__7cSAngleFv)
//	8017C00C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017C01C: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	8017C028: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017C034: 80009184 (__dt__4cXyzFv)
//	8017C040: 80030510 (__dt__7cSAngleFv)
//	8017C04C: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017C058: 8017D934 (func_8017D934)
//	8017C064: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017C070: 80030510 (__dt__7cSAngleFv)
//	8017C078: 80271120 (Cos__7cSAngleCFv)
//	8017C07C: 804536B4 (lit_5661)
//	8017C088: 804538A4 (lit_13132)
//	8017C098: 80182A3C (fabsf__3stdFf)
//	8017C09C: 80453710 (lit_8022)
//	8017C0A8: 804536A0 (lit_5656)
//	8017C0B4: 80453690 (lit_4445)
//	8017C0C4: 8008E790 (abs__4cXyzCFv)
//	8017C0C8: 804538E0 (lit_15480)
//	8017C0D4: 804538CC (lit_15475)
//	8017C0E4: 804536A8 (lit_5658)
//	8017C0E8: 804538C8 (lit_15474)
//	8017C104: 80030510 (__dt__7cSAngleFv)
//	8017C110: 80009184 (__dt__4cXyzFv)
//	8017C11C: 80030510 (__dt__7cSAngleFv)
//	8017C128: 80009184 (__dt__4cXyzFv)
//	8017C130: 8016C25C (func_8016C25C)
//	8017C174: 804536A0 (lit_5656)
//	8017C1A0: 80453698 (lit_4448)
//	8017C1BC: 80453734 (lit_9398)
//	8017C1C4: 804537D0 (lit_10575)
//	8017C1C8: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8017C1CC: 80453690 (lit_4445)
//	8017C200: 8045370C (lit_8021)
//	8017C204: 804536A8 (lit_5658)
//	8017C21C: 804536E8 (lit_6630)
//	8017C234: 804536A8 (lit_5658)
//	8017C258: 80182BD0 (CheckFlag__11dCamSetup_cFUs)
//	8017C264: 80182A54 (dComIfGp_evmng_cameraPlay__Fv)
//	8017C26C: 804536EC (lit_6766)
//	8017C2E0: 804536A0 (lit_5656)
//	8017C2EC: 8016C330 (func_8016C330)
//	8017C304: 80453808 (lit_11173)
//	8017C30C: 804537CC (lit_10574)
//	8017C328: 804536A8 (lit_5658)
//	8017C33C: 8045370C (lit_8021)
//	8017C340: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8017C374: 8016E420 (__ct__7cSGlobeFv)
//	8017C388: 8045370C (lit_8021)
//	8017C3AC: 804536E8 (lit_6630)
//	8017C3D0: 8014195C (__ct__4cXyzFfff)
//	8017C3D8: 802710E8 (Inv__7cSAngleCFv)
//	8017C3E4: 80182D28 (d2s__6cAngleFf)
//	8017C3F8: 802719A4 (Val__7cSGlobeFfss)
//	8017C42C: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017C43C: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017C444: 802710E8 (Inv__7cSAngleCFv)
//	8017C458: 802711FC (__pl__7cSAngleCFs)
//	8017C464: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8017C470: 80030510 (__dt__7cSAngleFv)
//	8017C47C: 80030510 (__dt__7cSAngleFv)
//	8017C488: 80030510 (__dt__7cSAngleFv)
//	8017C49C: 804536A8 (lit_5658)
//	8017C4AC: 804538AC (lit_13673)
//	8017C4B0: 804536A8 (lit_5658)
//	8017C4C8: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	8017C4D8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017C4E4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017C4F0: 80009184 (__dt__4cXyzFv)
//	8017C504: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	8017C510: 800977F4 (__ct__4cXyzFRC4cXyz)
//	8017C51C: 80009184 (__dt__4cXyzFv)
//	8017C534: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	8017C544: 801411F0 (__ct__8cM3dGPlaFv)
//	8017C548: 804061C0 (g_dComIfG_gameInfo)
//	8017C54C: 804061C0 (g_dComIfG_gameInfo)
//	8017C55C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8017C564: 801829F0 (GetCross__11cBgS_LinChkFv)
//	8017C570: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017C57C: 8008E904 (__apl__4cXyzFRC3Vec)
//	8017C588: 8001DB90 (__dt__8cM3dGPlaFv)
//	8017C59C: 8014195C (__ct__4cXyzFfff)
//	8017C5A4: 80453714 (lit_8023)
//	8017C5A8: 804536A8 (lit_5658)
//	8017C5C8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017C5D8: 80266B84 (__ml__4cXyzCFf)
//	8017C5E4: 8008E904 (__apl__4cXyzFRC3Vec)
//	8017C5F0: 80009184 (__dt__4cXyzFv)
//	8017C5FC: 80009184 (__dt__4cXyzFv)
//	8017C608: 80453750 (lit_9405)
//	8017C60C: 80167CD8 (jutOutCheck__9dCamera_cFP4cXyzf)
//	8017C650: 804536A8 (lit_5658)
//	8017C65C: 80453698 (lit_4448)
//	8017C688: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017C698: 80266B84 (__ml__4cXyzCFf)
//	8017C6A4: 8008E904 (__apl__4cXyzFRC3Vec)
//	8017C6B0: 80009184 (__dt__4cXyzFv)
//	8017C6BC: 80009184 (__dt__4cXyzFv)
//	8017C6C8: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017C6D8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017C6E4: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	8017C6F0: 80009184 (__dt__4cXyzFv)
//	8017C70C: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017C710: 804536A8 (lit_5658)
//	8017C724: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8017C730: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8017C73C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017C74C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017C758: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017C764: 80009184 (__dt__4cXyzFv)
//	8017C770: 80009184 (__dt__4cXyzFv)
//	8017C77C: 804536A8 (lit_5658)
//	8017C788: 80453698 (lit_4448)
//	8017C7B4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017C7C4: 80266BD0 (__ml__4cXyzCFRC3Vec)
//	8017C7D0: 8008E904 (__apl__4cXyzFRC3Vec)
//	8017C7DC: 80009184 (__dt__4cXyzFv)
//	8017C7E8: 80009184 (__dt__4cXyzFv)
//	8017C814: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017C824: 80271264 (__ml__7cSAngleCFf)
//	8017C834: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017C840: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8017C84C: 80030510 (__dt__7cSAngleFv)
//	8017C858: 80030510 (__dt__7cSAngleFv)
//	8017C864: 80030510 (__dt__7cSAngleFv)
//	8017C878: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017C888: 80271264 (__ml__7cSAngleCFf)
//	8017C898: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017C8A4: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8017C8B0: 80030510 (__dt__7cSAngleFv)
//	8017C8BC: 80030510 (__dt__7cSAngleFv)
//	8017C8C8: 80030510 (__dt__7cSAngleFv)
//	8017C8D4: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017C8E4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017C8F0: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017C8FC: 80009184 (__dt__4cXyzFv)
//	8017C908: 80009184 (__dt__4cXyzFv)
//	8017C914: 804536A8 (lit_5658)
//	8017C920: 80453698 (lit_4448)
//	8017C948: 8008E904 (__apl__4cXyzFRC3Vec)
//	8017C958: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017C968: 80266B84 (__ml__4cXyzCFf)
//	8017C974: 8008E904 (__apl__4cXyzFRC3Vec)
//	8017C980: 80009184 (__dt__4cXyzFv)
//	8017C98C: 80009184 (__dt__4cXyzFv)
//	8017C998: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8017C9B4: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017C9D8: 80271254 (__apl__7cSAngleFs)
//	8017CA04: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017CA14: 80271264 (__ml__7cSAngleCFf)
//	8017CA24: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017CA30: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8017CA3C: 80030510 (__dt__7cSAngleFv)
//	8017CA48: 80030510 (__dt__7cSAngleFv)
//	8017CA54: 80030510 (__dt__7cSAngleFv)
//	8017CA68: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017CA78: 80271264 (__ml__7cSAngleCFf)
//	8017CA88: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017CA94: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8017CAA0: 80030510 (__dt__7cSAngleFv)
//	8017CAAC: 80030510 (__dt__7cSAngleFv)
//	8017CAB8: 80030510 (__dt__7cSAngleFv)
//	8017CAC4: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017CAD4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017CAE0: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017CAEC: 80009184 (__dt__4cXyzFv)
//	8017CAF8: 80009184 (__dt__4cXyzFv)
//	8017CB18: 804536A8 (lit_5658)
//	8017CB24: 80453698 (lit_4448)
//	8017CB50: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017CB60: 80266B84 (__ml__4cXyzCFf)
//	8017CB6C: 8008E904 (__apl__4cXyzFRC3Vec)
//	8017CB78: 80009184 (__dt__4cXyzFv)
//	8017CB84: 80009184 (__dt__4cXyzFv)
//	8017CB90: 80182CA8 (__as__7cSAngleFRC7cSAngle)
//	8017CBAC: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017CBD0: 80271254 (__apl__7cSAngleFs)
//	8017CBFC: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017CC0C: 80271264 (__ml__7cSAngleCFf)
//	8017CC1C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017CC28: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8017CC34: 80030510 (__dt__7cSAngleFv)
//	8017CC40: 80030510 (__dt__7cSAngleFv)
//	8017CC4C: 80030510 (__dt__7cSAngleFv)
//	8017CC60: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017CC70: 80271264 (__ml__7cSAngleCFf)
//	8017CC80: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017CC8C: 8008E894 (U__7cSGlobeFRC7cSAngle)
//	8017CC98: 80030510 (__dt__7cSAngleFv)
//	8017CCA4: 80030510 (__dt__7cSAngleFv)
//	8017CCB0: 80030510 (__dt__7cSAngleFv)
//	8017CCBC: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017CCCC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017CCD8: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017CCE4: 80009184 (__dt__4cXyzFv)
//	8017CCF0: 80009184 (__dt__4cXyzFv)
//	8017CD28: 80030510 (__dt__7cSAngleFv)
//	8017CD34: 80009184 (__dt__4cXyzFv)
//	8017CD40: 80009184 (__dt__4cXyzFv)
//	8017CD4C: 80009184 (__dt__4cXyzFv)
//	8017CD58: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	8017CD64: 80009184 (__dt__4cXyzFv)
//	8017CD70: 80030510 (__dt__7cSAngleFv)
//	8017CD7C: 8007167C (__dt__7cSGlobeFv)
//	8017CD88: 80030510 (__dt__7cSAngleFv)
//	8017CD94: 80030510 (__dt__7cSAngleFv)
//	8017CDA0: 80030510 (__dt__7cSAngleFv)
//	8017CDE8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017CDF8: 80266BD0 (__ml__4cXyzCFRC3Vec)
//	8017CE04: 8008E904 (__apl__4cXyzFRC3Vec)
//	8017CE10: 80009184 (__dt__4cXyzFv)
//	8017CE1C: 80009184 (__dt__4cXyzFv)
//	8017CE50: 804536A8 (lit_5658)
//	8017CE54: 80453698 (lit_4448)
//	8017CE74: 804538F8 (lit_15486)
//	8017CEB4: 804536A8 (lit_5658)
//	8017CEE4: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017CEEC: 802710E8 (Inv__7cSAngleCFv)
//	8017CEFC: 80271320 (__mi__FsRC7cSAngle)
//	8017CF08: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017CF14: 80030510 (__dt__7cSAngleFv)
//	8017CF20: 80030510 (__dt__7cSAngleFv)
//	8017CF28: 802710F8 (Sin__7cSAngleCFv)
//	8017CF2C: 80182A3C (fabsf__3stdFf)
//	8017CF40: 80030510 (__dt__7cSAngleFv)
//	8017CF54: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017CF74: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017CF7C: 802710E8 (Inv__7cSAngleCFv)
//	8017CF8C: 80271320 (__mi__FsRC7cSAngle)
//	8017CF98: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017CFA4: 80030510 (__dt__7cSAngleFv)
//	8017CFB0: 80030510 (__dt__7cSAngleFv)
//	8017CFB8: 802710F8 (Sin__7cSAngleCFv)
//	8017CFBC: 80182A3C (fabsf__3stdFf)
//	8017CFD4: 80030510 (__dt__7cSAngleFv)
//	8017D004: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017D014: 80182A3C (fabsf__3stdFf)
//	8017D018: 804536E8 (lit_6630)
//	8017D034: 80453690 (lit_4445)
//	8017D038: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8017D03C: 804537B8 (lit_10569)
//	8017D048: 80270FC8 (__ct__7cSAngleFf)
//	8017D05C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017D068: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017D074: 80030510 (__dt__7cSAngleFv)
//	8017D080: 80030510 (__dt__7cSAngleFv)
//	8017D088: 80182A3C (fabsf__3stdFf)
//	8017D08C: 804536E8 (lit_6630)
//	8017D0A0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017D0B0: 80271264 (__ml__7cSAngleCFf)
//	8017D0C0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017D0CC: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8017D0D8: 80030510 (__dt__7cSAngleFv)
//	8017D0E4: 80030510 (__dt__7cSAngleFv)
//	8017D0F0: 80030510 (__dt__7cSAngleFv)
//	8017D0FC: 804536A0 (lit_5656)
//	8017D110: 80030510 (__dt__7cSAngleFv)
//	8017D124: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017D13C: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017D144: 802710E8 (Inv__7cSAngleCFv)
//	8017D158: 802711FC (__pl__7cSAngleCFs)
//	8017D164: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017D170: 80030510 (__dt__7cSAngleFv)
//	8017D17C: 80030510 (__dt__7cSAngleFv)
//	8017D190: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017D1A0: 80271264 (__ml__7cSAngleCFf)
//	8017D1B0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017D1BC: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8017D1C8: 80030510 (__dt__7cSAngleFv)
//	8017D1D4: 80030510 (__dt__7cSAngleFv)
//	8017D1E0: 80030510 (__dt__7cSAngleFv)
//	8017D1EC: 80030510 (__dt__7cSAngleFv)
//	8017D200: 80182D1C (checkTurnStandCamera__9daHorse_cCFv)
//	8017D214: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8017D22C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017D23C: 80271264 (__ml__7cSAngleCFf)
//	8017D24C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017D258: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8017D264: 80030510 (__dt__7cSAngleFv)
//	8017D270: 80030510 (__dt__7cSAngleFv)
//	8017D27C: 80030510 (__dt__7cSAngleFv)
//	8017D294: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017D2A4: 80271264 (__ml__7cSAngleCFf)
//	8017D2B4: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017D2C0: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8017D2CC: 80030510 (__dt__7cSAngleFv)
//	8017D2D8: 80030510 (__dt__7cSAngleFv)
//	8017D2E4: 80030510 (__dt__7cSAngleFv)
//	8017D2F4: 804536E0 (lit_6180)
//	8017D2F8: 804536A8 (lit_5658)
//	8017D318: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017D324: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8017D330: 80009184 (__dt__4cXyzFv)
//	8017D334: 804536EC (lit_6766)
//	8017D350: 80182C8C (Flag__11dCamParam_cFlUs)
//	8017D388: 802711FC (__pl__7cSAngleCFs)
//	8017D394: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8017D3A0: 80030510 (__dt__7cSAngleFv)
//	8017D3B4: 80270F98 (__ct__7cSAngleFs)
//	8017D3C0: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8017D3CC: 80030510 (__dt__7cSAngleFv)
//	8017D3D0: 804537D8 (lit_10577)
//	8017D40C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017D418: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017D420: 80271120 (Cos__7cSAngleCFv)
//	8017D430: 80030510 (__dt__7cSAngleFv)
//	8017D43C: 80030510 (__dt__7cSAngleFv)
//	8017D44C: 80271004 (Val__7cSAngleFs)
//	8017D45C: 80271264 (__ml__7cSAngleCFf)
//	8017D46C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017D478: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8017D484: 80030510 (__dt__7cSAngleFv)
//	8017D490: 80030510 (__dt__7cSAngleFv)
//	8017D494: 804536A0 (lit_5656)
//	8017D4B4: 8045389C (lit_12868)
//	8017D4C0: 8045376C (lit_10550)
//	8017D4D4: 804536A8 (lit_5658)
//	8017D4EC: 804536E4 (lit_6629)
//	8017D4F0: 80270FC8 (__ct__7cSAngleFf)
//	8017D500: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017D50C: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8017D518: 80030510 (__dt__7cSAngleFv)
//	8017D524: 80030510 (__dt__7cSAngleFv)
//	8017D538: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017D548: 80271264 (__ml__7cSAngleCFf)
//	8017D558: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017D564: 8008FA58 (V__7cSGlobeFRC7cSAngle)
//	8017D570: 80030510 (__dt__7cSAngleFv)
//	8017D57C: 80030510 (__dt__7cSAngleFv)
//	8017D588: 80030510 (__dt__7cSAngleFv)
//	8017D59C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017D5AC: 80271264 (__ml__7cSAngleCFf)
//	8017D5BC: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017D5C8: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017D5D4: 80030510 (__dt__7cSAngleFv)
//	8017D5E0: 80030510 (__dt__7cSAngleFv)
//	8017D5EC: 80030510 (__dt__7cSAngleFv)
//	8017D5F4: 80451048 (struct_80451048)
//	8017D604: 80451048 (struct_80451048)
//	8017D608: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8017D610: 8045104C (LatMax)
//	8017D620: 8045104C (LatMax)
//	8017D624: 80270FF8 (Val__7cSAngleFRC7cSAngle)
//	8017D638: 80271A08 (Val__7cSGlobeFfRC7cSAngleRC7cSAngle)
//	8017D644: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017D654: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017D660: 800977D8 (__as__4cXyzFRC4cXyz)
//	8017D66C: 80009184 (__dt__4cXyzFv)
//	8017D678: 80009184 (__dt__4cXyzFv)
//	8017D6A8: 804536A8 (lit_5658)
//	8017D6AC: 80453698 (lit_4448)
//	8017D6CC: 804538FC (lit_15487)
//	8017D714: 80271264 (__ml__7cSAngleCFf)
//	8017D724: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017D72C: 80182A3C (fabsf__3stdFf)
//	8017D730: 804536E0 (lit_6180)
//	8017D740: 80271264 (__ml__7cSAngleCFf)
//	8017D74C: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8017D758: 80030510 (__dt__7cSAngleFv)
//	8017D764: 80030510 (__dt__7cSAngleFv)
//	8017D770: 80030510 (__dt__7cSAngleFv)
//	8017D77C: 80097778 (setFlag__9dCamera_cFUl)
//	8017D788: 80451188 (_0__7cSAngle)
//	8017D790: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017D79C: 804536E8 (lit_6630)
//	8017D7A0: 80271264 (__ml__7cSAngleCFf)
//	8017D7AC: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8017D7B8: 80030510 (__dt__7cSAngleFv)
//	8017D7C4: 80030510 (__dt__7cSAngleFv)
//	8017D7D0: 80097778 (setFlag__9dCamera_cFUl)
//	8017D7DC: 80030510 (__dt__7cSAngleFv)
//	8017D7E8: 8007167C (__dt__7cSGlobeFv)
//	8017D7F4: 80030510 (__dt__7cSAngleFv)
//	8017D800: 80030510 (__dt__7cSAngleFv)
//	8017D80C: 80030510 (__dt__7cSAngleFv)
//	8017D818: 80009184 (__dt__4cXyzFv)
//	8017D824: 80009184 (__dt__4cXyzFv)
//	8017D830: 80009184 (__dt__4cXyzFv)
//	8017D83C: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	8017D848: 80009184 (__dt__4cXyzFv)
//	8017D854: 80030510 (__dt__7cSAngleFv)
//	8017D860: 8007167C (__dt__7cSGlobeFv)
//	8017D86C: 80030510 (__dt__7cSAngleFv)
//	8017D878: 80030510 (__dt__7cSAngleFv)
//	8017D884: 80030510 (__dt__7cSAngleFv)
//	8017D920: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::rideCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/rideCamera__9dCamera_cFl.s"
}
#pragma pop

/* 8017D934-8017D974 0040+00 s=1 e=0 z=0  None .text      sAngleY__22@unnamed@d_camera_cpp@FR4cXyz
 */
//	8017D950: 80267674 (cM_atan2s__Fff)
//	8017D95C: 80270F98 (__ct__7cSAngleFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8017D934() {
    nofralloc
#include "asm/d/d_camera/func_8017D934.s"
}
#pragma pop

/* 8017D974-8017D97C 0008+00 s=1 e=0 z=0  None .text      manualCamera__9dCamera_cFl */
bool dCamera_c::manualCamera(s32 param_0) {
    return true;
}

/* ############################################################################################## */
/* 80453900-80453904 0004+00 s=1 e=0 z=0  None .sdata2    @15772 */
SECTION_SDATA2 static f32 lit_15772 = -0.75f;

/* 80453904-80453908 0004+00 s=1 e=0 z=0  None .sdata2    @15773 */
SECTION_SDATA2 static f32 lit_15773 = 4.0f / 3.0f;

/* 8017D97C-8017DFAC 0630+00 s=1 e=0 z=0  None .text      observeCamera__9dCamera_cFl */
//	8017D9AC: 803621DC (_savegpr_29)
//	8017D9D8: 80270FC8 (__ct__7cSAngleFf)
//	8017D9EC: 80270FC8 (__ct__7cSAngleFf)
//	8017DA90: 800885D4 (Change__11dCamParam_cFl)
//	8017DAEC: 800885D4 (Change__11dCamParam_cFl)
//	8017DB24: 80453788 (lit_10557)
//	8017DB38: 80271820 (__ct__7cSGlobeFfss)
//	8017DB44: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017DB54: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017DB90: 802710E8 (Inv__7cSAngleCFv)
//	8017DB9C: 802710E8 (Inv__7cSAngleCFv)
//	8017DBA8: 80453788 (lit_10557)
//	8017DBB0: 80271820 (__ct__7cSGlobeFfss)
//	8017DBBC: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017DBCC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017DBF4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017DC00: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	8017DC70: 80453698 (lit_4448)
//	8017DCA0: 80453698 (lit_4448)
//	8017DCBC: 80270FC8 (__ct__7cSAngleFf)
//	8017DCDC: 80453698 (lit_4448)
//	8017DCF8: 80270FC8 (__ct__7cSAngleFf)
//	8017DD08: 80453724 (lit_8530)
//	8017DD18: 804536A8 (lit_5658)
//	8017DD20: 80453900 (lit_15772)
//	8017DD30: 8045389C (lit_12868)
//	8017DD38: 80453904 (lit_15773)
//	8017DD44: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8017DD50: 80453724 (lit_8530)
//	8017DD60: 804536A8 (lit_5658)
//	8017DD68: 80453900 (lit_15772)
//	8017DD78: 8045389C (lit_12868)
//	8017DD80: 80453904 (lit_15773)
//	8017DD8C: 8008813C (rationalBezierRatio__8dCamMathFff)
//	8017DD90: 804061C0 (g_dComIfG_gameInfo)
//	8017DD94: 804061C0 (g_dComIfG_gameInfo)
//	8017DDB0: 80270FC8 (__ct__7cSAngleFf)
//	8017DDC0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017DDCC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017DDE0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017DE08: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017DE20: 80271148 (__mi__7cSAngleCFv)
//	8017DE50: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017DE64: 80270F98 (__ct__7cSAngleFs)
//	8017DE78: 80270FC8 (__ct__7cSAngleFf)
//	8017DE88: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017DE94: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017DEA8: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017DED0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017DEE8: 80271148 (__mi__7cSAngleCFv)
//	8017DF18: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017DF2C: 80270F98 (__ct__7cSAngleFs)
//	8017DF40: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017DF50: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017DF98: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::observeCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/observeCamera__9dCamera_cFl.s"
}
#pragma pop

/* 8017DFAC-8017E730 0784+00 s=1 e=0 z=0  None .text      fixedFrameCamera__9dCamera_cFl */
//	8017E078: 804537B0 (lit_10567)
//	8017E08C: 80271820 (__ct__7cSGlobeFfss)
//	8017E098: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017E0A8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017E0E8: 8026F2A8 (__ct__8cM3dGLinFRC4cXyzRC4cXyz)
//	8017E0F8: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017E124: 80268710 (cM3d_Len3dSqPntAndSegLine__FPC8cM3dGLinPC3VecP3VecPf)
//	8017E158: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017E168: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017E188: 80347138 (PSVECSquareMag)
//	8017E18C: 804536A0 (lit_5656)
//	8017E19C: 804536C8 (lit_6177)
//	8017E1A4: 804536D0 (lit_6178)
//	8017E1EC: 804536D8 (lit_6179)
//	8017E1F8: 80450AE0 (__float_nan)
//	8017E1FC: 80450AE0 (__float_nan)
//	8017E268: 80450AE0 (__float_nan)
//	8017E26C: 80450AE0 (__float_nan)
//	8017E284: 802719A4 (Val__7cSGlobeFfss)
//	8017E290: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017E2A0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017E2C0: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	8017E2D8: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	8017E2E4: 803A37C0 (__vt__8cM3dGPla)
//	8017E2E8: 803A37C0 (__vt__8cM3dGPla)
//	8017E2F0: 804061C0 (g_dComIfG_gameInfo)
//	8017E2F4: 804061C0 (g_dComIfG_gameInfo)
//	8017E304: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8017E328: 80453750 (lit_9405)
//	8017E32C: 80266B84 (__ml__4cXyzCFf)
//	8017E33C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017E358: 803A37C0 (__vt__8cM3dGPla)
//	8017E35C: 803A37C0 (__vt__8cM3dGPla)
//	8017E370: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017E37C: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	8017E390: 80453760 (lit_9410)
//	8017E3D4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017E3F4: 80347138 (PSVECSquareMag)
//	8017E3F8: 804536A0 (lit_5656)
//	8017E408: 804536C8 (lit_6177)
//	8017E410: 804536D0 (lit_6178)
//	8017E458: 804536D8 (lit_6179)
//	8017E464: 80450AE0 (__float_nan)
//	8017E468: 80450AE0 (__float_nan)
//	8017E4D4: 80450AE0 (__float_nan)
//	8017E4D8: 80450AE0 (__float_nan)
//	8017E4EC: 80164D2C (heightOf__9dCamera_cFP10fopAc_ac_c)
//	8017E4F4: 804536A0 (lit_5656)
//	8017E540: 80453698 (lit_4448)
//	8017E568: 80077E00 (__dt__14dBgS_CamLinChkFv)
//	8017E56C: 803A78F8 (__vt__8cM3dGLin)
//	8017E570: 803A78F8 (__vt__8cM3dGLin)
//	8017E590: 80453698 (lit_4448)
//	8017E5D0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017E5E0: 80266B84 (__ml__4cXyzCFf)
//	8017E5F0: 80347090 (PSVECAdd)
//	8017E61C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017E62C: 80271264 (__ml__7cSAngleCFf)
//	8017E63C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017E648: 80270F98 (__ct__7cSAngleFs)
//	8017E664: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017E674: 80271264 (__ml__7cSAngleCFf)
//	8017E684: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017E690: 80270F98 (__ct__7cSAngleFs)
//	8017E6A4: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017E6B4: 80266AE4 (__pl__4cXyzCFRC3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::fixedFrameCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/fixedFrameCamera__9dCamera_cFl.s"
}
#pragma pop

/* 8017E730-8017F25C 0B2C+00 s=1 e=0 z=0  None .text      fixedPositionCamera__9dCamera_cFl */
//	8017E7E4: 80430CF4 (Zero__4cXyz)
//	8017E7E8: 80430CF4 (Zero__4cXyz)
//	8017E8C8: 800885D4 (Change__11dCamParam_cFl)
//	8017E8F4: 8026706C (__ne__4cXyzCFRC3Vec)
//	8017E904: 80165104 (setUSOAngle__9dCamera_cFv)
//	8017E92C: 80453760 (lit_9410)
//	8017E9C0: 80453698 (lit_4448)
//	8017EA14: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017EA20: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8017EA3C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017EA4C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017EA74: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017EA94: 80347138 (PSVECSquareMag)
//	8017EA98: 804536A0 (lit_5656)
//	8017EAA8: 804536C8 (lit_6177)
//	8017EAB0: 804536D0 (lit_6178)
//	8017EAF8: 804536D8 (lit_6179)
//	8017EB04: 80450AE0 (__float_nan)
//	8017EB08: 80450AE0 (__float_nan)
//	8017EB74: 80450AE0 (__float_nan)
//	8017EB78: 80450AE0 (__float_nan)
//	8017EB94: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	8017EBA4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017EBC4: 80347138 (PSVECSquareMag)
//	8017EBC8: 804536A0 (lit_5656)
//	8017EBD8: 804536C8 (lit_6177)
//	8017EBE0: 804536D0 (lit_6178)
//	8017EC28: 804536D8 (lit_6179)
//	8017EC34: 80450AE0 (__float_nan)
//	8017EC38: 80450AE0 (__float_nan)
//	8017ECA4: 80450AE0 (__float_nan)
//	8017ECA8: 80450AE0 (__float_nan)
//	8017ECC8: 80164D2C (heightOf__9dCamera_cFP10fopAc_ac_c)
//	8017ECCC: 804536E4 (lit_6629)
//	8017ECE4: 804536A0 (lit_5656)
//	8017ED28: 80453698 (lit_4448)
//	8017ED54: 80453698 (lit_4448)
//	8017EDA8: 80164D6C (relationalPos__9dCamera_cFP10fopAc_ac_cP4cXyz)
//	8017EDF8: 804536A8 (lit_5658)
//	8017EE20: 80453698 (lit_4448)
//	8017EE58: 804536A8 (lit_5658)
//	8017EE78: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017EE88: 80266B84 (__ml__4cXyzCFf)
//	8017EE98: 80347090 (PSVECAdd)
//	8017EEA8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017EEB8: 80266BD0 (__ml__4cXyzCFRC3Vec)
//	8017EEC8: 80347090 (PSVECAdd)
//	8017EED8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017EEE4: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8017EF0C: 80270F98 (__ct__7cSAngleFs)
//	8017EF18: 80270F98 (__ct__7cSAngleFs)
//	8017EF6C: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017EF7C: 80271264 (__ml__7cSAngleCFf)
//	8017EF8C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017EF98: 80270F98 (__ct__7cSAngleFs)
//	8017EFB4: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017EFC4: 80271264 (__ml__7cSAngleCFf)
//	8017EFD4: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017EFE0: 80270F98 (__ct__7cSAngleFs)
//	8017EFF4: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017F004: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017F064: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017F074: 80266BD0 (__ml__4cXyzCFRC3Vec)
//	8017F084: 80347090 (PSVECAdd)
//	8017F094: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017F0A0: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8017F0C8: 80270F98 (__ct__7cSAngleFs)
//	8017F0D4: 80270F98 (__ct__7cSAngleFs)
//	8017F128: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017F138: 80271264 (__ml__7cSAngleCFf)
//	8017F148: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017F154: 80270F98 (__ct__7cSAngleFs)
//	8017F170: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017F180: 80271264 (__ml__7cSAngleCFf)
//	8017F190: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017F19C: 80270F98 (__ct__7cSAngleFs)
//	8017F1B0: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017F1C0: 80266AE4 (__pl__4cXyzCFRC3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::fixedPositionCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/fixedPositionCamera__9dCamera_cFl.s"
}
#pragma pop

/* 8017F25C-8017F828 05CC+00 s=1 e=0 z=0  None .text      oneSideCamera__9dCamera_cFl */
//	8017F2E0: 80430CF4 (Zero__4cXyz)
//	8017F2E4: 80430CF4 (Zero__4cXyz)
//	8017F3C4: 800885D4 (Change__11dCamParam_cFl)
//	8017F3F0: 8026706C (__ne__4cXyzCFRC3Vec)
//	8017F400: 80165104 (setUSOAngle__9dCamera_cFv)
//	8017F428: 80453760 (lit_9410)
//	8017F45C: 80453760 (lit_9410)
//	8017F474: 8027100C (Val__7cSAngleFf)
//	8017F480: 80453784 (lit_10556)
//	8017F484: 8027100C (Val__7cSAngleFf)
//	8017F494: 80453760 (lit_9410)
//	8017F4AC: 80453738 (lit_9399)
//	8017F4D4: 80453784 (lit_10556)
//	8017F4D8: 8027100C (Val__7cSAngleFf)
//	8017F4FC: 80097738 (directionOf__9dCamera_cFP10fopAc_ac_c)
//	8017F50C: 80088384 (xyzRotateY__8dCamMathFR4cXyz7cSAngle)
//	8017F534: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	8017F544: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017F56C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017F578: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	8017F580: 804537E8 (lit_10581)
//	8017F590: 804536A8 (lit_5658)
//	8017F5C0: 80270F98 (__ct__7cSAngleFs)
//	8017F5CC: 80270F98 (__ct__7cSAngleFs)
//	8017F5E0: 80270F98 (__ct__7cSAngleFs)
//	8017F5F0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017F5FC: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017F60C: 80271264 (__ml__7cSAngleCFf)
//	8017F618: 80270F68 (__ct__7cSAngleFRC7cSAngle)
//	8017F634: 80271148 (__mi__7cSAngleCFv)
//	8017F68C: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017F6A4: 80271148 (__mi__7cSAngleCFv)
//	8017F6D4: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017F6F0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	8017F720: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	8017F730: 80271264 (__ml__7cSAngleCFf)
//	8017F740: 80271264 (__ml__7cSAngleCFf)
//	8017F74C: 802711D4 (__apl__7cSAngleFRC7cSAngle)
//	8017F758: 80270F98 (__ct__7cSAngleFs)
//	8017F76C: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017F77C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017F7C8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8017F7D4: 80271A70 (Val__7cSGlobeFRC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::oneSideCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/oneSideCamera__9dCamera_cFl.s"
}
#pragma pop

/* 8017F828-8018050C 0CE4+00 s=2 e=0 z=0  None .text      eventCamera__9dCamera_cFl */
//	8017F838: 803621DC (_savegpr_29)
//	8017F840: 803BA160 (cNullVec__6Z2Calc)
//	8017F844: 803BA160 (cNullVec__6Z2Calc)
//	8017F84C: 80393DC0 (lit_16654)
//	8017F850: 80393DC0 (lit_16654)
//	8017FBD0: 804061C0 (g_dComIfG_gameInfo)
//	8017FBD4: 804061C0 (g_dComIfG_gameInfo)
//	8017FC00: 80163028 (SetTrimTypeForce__9dCamera_cFl)
//	8017FC10: 80393F68 (d_d_camera__stringBase0)
//	8017FC14: 80393F68 (d_d_camera__stringBase0)
//	8017FC24: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	8017FC7C: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	8017FC88: 8042C8F8 (data_8042C8F8)
//	8017FC8C: 8042C8F8 (data_8042C8F8)
//	8017FD1C: 8042C8F8 (data_8042C8F8)
//	8017FD20: 8042C8F8 (data_8042C8F8)
//	8017FD48: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	8017FD94: 8042C8F8 (data_8042C8F8)
//	8017FD98: 8042C8F8 (data_8042C8F8)
//	8017FE4C: 80164C64 (pushInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_cs)
//	8017FE5C: 80164C64 (pushInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_cs)
//	8017FE6C: 804061C0 (g_dComIfG_gameInfo)
//	8017FE70: 804061C0 (g_dComIfG_gameInfo)
//	8017FE84: 800434D8 (searchMapEventData__14dEvt_control_cFUc)
//	8017FEC8: 801806DC (setEventRecoveryTrans__9dCamera_cFs)
//	8017FED8: 801806DC (setEventRecoveryTrans__9dCamera_cFs)
//	8017FEE8: 801806DC (setEventRecoveryTrans__9dCamera_cFs)
//	8017FEF8: 801806DC (setEventRecoveryTrans__9dCamera_cFs)
//	8017FF2C: 801806DC (setEventRecoveryTrans__9dCamera_cFs)
//	8017FF40: 804061C0 (g_dComIfG_gameInfo)
//	8017FF44: 804061C0 (g_dComIfG_gameInfo)
//	8017FF50: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8017FF70: 80393F68 (d_d_camera__stringBase0)
//	8017FF74: 80393F68 (d_d_camera__stringBase0)
//	8017FF7C: 80088D90 (getEvFloatData__9dCamera_cFPfPc)
//	8017FFA4: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017FFB4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8017FFE0: 80271AB4 (Xyz__7cSGlobeCFv)
//	8017FFF0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80180014: 80393F68 (d_d_camera__stringBase0)
//	80180018: 80393F68 (d_d_camera__stringBase0)
//	80180024: 8008933C (getEvStringData__9dCamera_cFPcPcPc)
//	8018012C: 80393F68 (d_d_camera__stringBase0)
//	80180130: 80393F68 (d_d_camera__stringBase0)
//	8018013C: 8008908C (getEvIntData__9dCamera_cFPiPci)
//	80180150: 80393F68 (d_d_camera__stringBase0)
//	80180154: 80393F68 (d_d_camera__stringBase0)
//	80180160: 8008908C (getEvIntData__9dCamera_cFPiPci)
//	80180184: 80393F68 (d_d_camera__stringBase0)
//	80180188: 80393F68 (d_d_camera__stringBase0)
//	801801A0: 8008908C (getEvIntData__9dCamera_cFPiPci)
//	801801AC: 80393F68 (d_d_camera__stringBase0)
//	801801B0: 80393F68 (d_d_camera__stringBase0)
//	801801B8: 80088CB0 (getEvIntData__9dCamera_cFPiPc)
//	801801EC: 80164C64 (pushInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_cs)
//	80180208: 80164C64 (pushInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_cs)
//	80180214: 80393F68 (d_d_camera__stringBase0)
//	80180218: 80393F68 (d_d_camera__stringBase0)
//	80180220: 80088CB0 (getEvIntData__9dCamera_cFPiPc)
//	80180250: 80164CAC (popInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_c)
//	80180268: 80164CAC (popInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_c)
//	80180274: 80163028 (SetTrimTypeForce__9dCamera_cFl)
//	80180280: 80393F68 (d_d_camera__stringBase0)
//	80180284: 80393F68 (d_d_camera__stringBase0)
//	80180290: 8008908C (getEvIntData__9dCamera_cFPiPci)
//	801802A0: 804061C0 (g_dComIfG_gameInfo)
//	801802A4: 804061C0 (g_dComIfG_gameInfo)
//	801802C4: 80393F68 (d_d_camera__stringBase0)
//	801802C8: 80393F68 (d_d_camera__stringBase0)
//	801802D4: 8008908C (getEvIntData__9dCamera_cFPiPci)
//	801802E4: 804061C0 (g_dComIfG_gameInfo)
//	801802E8: 804061C0 (g_dComIfG_gameInfo)
//	801802FC: 804061C0 (g_dComIfG_gameInfo)
//	80180300: 804061C0 (g_dComIfG_gameInfo)
//	801803B0: 80362084 (__ptmf_scall)
//	801803C8: 804061C0 (g_dComIfG_gameInfo)
//	801803CC: 804061C0 (g_dComIfG_gameInfo)
//	801803D8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8018045C: 8026F2A8 (__ct__8cM3dGLinFRC4cXyzRC4cXyz)
//	8018046C: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80180498: 80268710 (cM3d_Len3dSqPntAndSegLine__FPC8cM3dGLinPC3VecP3VecPf)
//	801804C8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801804D4: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	801804E4: 803A78F8 (__vt__8cM3dGLin)
//	801804E8: 803A78F8 (__vt__8cM3dGLin)
//	801804F8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::eventCamera(s32 param_0) {
    nofralloc
#include "asm/d/d_camera/eventCamera__9dCamera_cFl.s"
}
#pragma pop

/* 8018050C-801806D4 01C8+00 s=1 e=0 z=0  None .text      currentEvCamera__9dCamera_cFv */
//	80180558: 80088620 (SearchStyle__11dCamParam_cFUl)
//	80180568: 80393F68 (d_d_camera__stringBase0)
//	8018056C: 80393F68 (d_d_camera__stringBase0)
//	80180578: 8008908C (getEvIntData__9dCamera_cFPiPci)
//	801805AC: 803BA25C (engine_tbl__9dCamera_c)
//	801805B0: 803BA25C (engine_tbl__9dCamera_c)
//	801805B8: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::currentEvCamera() {
    nofralloc
#include "asm/d/d_camera/currentEvCamera__9dCamera_cFv.s"
}
#pragma pop

/* 801806D4-801806DC 0008+00 s=1 e=0 z=0  None .text      letCamera__9dCamera_cFl */
bool dCamera_c::letCamera(s32 param_0) {
    return true;
}

/* 801806DC-80180738 005C+00 s=2 e=0 z=0  None .text      setEventRecoveryTrans__9dCamera_cFs */
//	801806F8: 80164C64 (pushInfo__9dCamera_cFPQ29dCamera_c10dCamInfo_cs)
//	80180708: 8009775C (positionOf__9dCamera_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::setEventRecoveryTrans(s16 param_0) {
    nofralloc
#include "asm/d/d_camera/setEventRecoveryTrans__9dCamera_cFs.s"
}
#pragma pop

/* 80180738-80180A40 0308+00 s=1 e=0 z=0  None .text      runEventRecoveryTrans__9dCamera_cFv */
//	80180788: 804536A8 (lit_5658)
//	8018078C: 80453698 (lit_4448)
//	801807C4: 8008813C (rationalBezierRatio__8dCamMathFff)
//	801807D8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801807E8: 80266B84 (__ml__4cXyzCFf)
//	801807F8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80180820: 8009771C (attentionPos__9dCamera_cFP10fopAc_ac_c)
//	80180840: 80077DA4 (__ct__14dBgS_CamLinChkFv)
//	80180844: 803A37C0 (__vt__8cM3dGPla)
//	80180848: 803A37C0 (__vt__8cM3dGPla)
//	80180870: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	8018087C: 804061C0 (g_dComIfG_gameInfo)
//	80180880: 804061C0 (g_dComIfG_gameInfo)
//	80180890: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	801808B4: 80453750 (lit_9405)
//	801808B8: 80266B84 (__ml__4cXyzCFf)
//	801808C8: 80347090 (PSVECAdd)
//	801808D8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801808E8: 80266B84 (__ml__4cXyzCFf)
//	801808F8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80180934: 801658C0 (lineBGCheck__9dCamera_cFP4cXyzP4cXyzP11dBgS_LinChkUl)
//	80180940: 804061C0 (g_dComIfG_gameInfo)
//	80180944: 804061C0 (g_dComIfG_gameInfo)
//	80180954: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8018097C: 80266B84 (__ml__4cXyzCFf)
//	8018098C: 80347090 (PSVECAdd)
//	8018099C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801809A8: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	801809D0: 802711A4 (__mi__7cSAngleCFRC7cSAngle)
//	801809E0: 80271264 (__ml__7cSAngleCFf)
//	801809F0: 80271174 (__pl__7cSAngleCFRC7cSAngle)
//	801809FC: 803A37C0 (__vt__8cM3dGPla)
//	80180A00: 803A37C0 (__vt__8cM3dGPla)
//	80180A10: 80077E00 (__dt__14dBgS_CamLinChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::runEventRecoveryTrans() {
    nofralloc
#include "asm/d/d_camera/runEventRecoveryTrans__9dCamera_cFv.s"
}
#pragma pop

/* 80180A40-80180AA8 0068+00 s=0 e=3 z=0  None .text      EventRecoverNotime__9dCamera_cFv */
//	80180A94: 80180BA0 (Reset__9dCamera_cF4cXyz4cXyzfs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::EventRecoverNotime() {
    nofralloc
#include "asm/d/d_camera/EventRecoverNotime__9dCamera_cFv.s"
}
#pragma pop

/* 80180AA8-80180AE0 0038+00 s=0 e=0 z=24  None .text      Set__9dCamera_cF4cXyz4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Set(cXyz param_0, cXyz param_1) {
    nofralloc
#include "asm/d/d_camera/Set__9dCamera_cF4cXyz4cXyz.s"
}
#pragma pop

/* 80180AE0-80180B40 0060+00 s=0 e=2 z=93  None .text      Set__9dCamera_cF4cXyz4cXyzfs */
//	80180B28: 80271004 (Val__7cSAngleFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Set(cXyz param_0, cXyz param_1, f32 param_2, s16 param_3) {
    nofralloc
#include "asm/d/d_camera/Set__9dCamera_cF4cXyz4cXyzfs.s"
}
#pragma pop

/* 80180B40-80180BA0 0060+00 s=0 e=0 z=11  None .text      Set__9dCamera_cF4cXyz4cXyzsf */
//	80180B88: 80271004 (Val__7cSAngleFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Set(cXyz param_0, cXyz param_1, s16 param_2, f32 param_3) {
    nofralloc
#include "asm/d/d_camera/Set__9dCamera_cF4cXyz4cXyzsf.s"
}
#pragma pop

/* 80180BA0-80180C18 0078+00 s=1 e=1 z=18  None .text      Reset__9dCamera_cF4cXyz4cXyzfs */
//	80180BF0: 80270F98 (__ct__7cSAngleFs)
//	80180C00: 80180C68 (Reset__9dCamera_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Reset(cXyz param_0, cXyz param_1, f32 param_2, s16 param_3) {
    nofralloc
#include "asm/d/d_camera/Reset__9dCamera_cF4cXyz4cXyzfs.s"
}
#pragma pop

/* 80180C18-80180C68 0050+00 s=0 e=0 z=64  None .text      Reset__9dCamera_cF4cXyz4cXyz */
//	80180C54: 80180C68 (Reset__9dCamera_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Reset(cXyz param_0, cXyz param_1) {
    nofralloc
#include "asm/d/d_camera/Reset__9dCamera_cF4cXyz4cXyz.s"
}
#pragma pop

/* 80180C68-80180D24 00BC+00 s=2 e=1 z=3  None .text      Reset__9dCamera_cFv */
//	80180CC8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80180CD4: 80271A70 (Val__7cSGlobeFRC4cXyz)
//	80180CF4: 802710E8 (Inv__7cSAngleCFv)
//	80180D00: 80270F98 (__ct__7cSAngleFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Reset() {
    nofralloc
#include "asm/d/d_camera/Reset__9dCamera_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453908-8045390C 0004+00 s=1 e=0 z=0  None .sdata2    @17253 */
SECTION_SDATA2 static f32 lit_17253 = 43.0f / 100.0f;

/* 8045390C-80453910 0004+00 s=1 e=0 z=0  None .sdata2    @17254 */
SECTION_SDATA2 static f32 lit_17254 = 0.04500000178813934f;

/* 80453910-80453914 0004+00 s=1 e=0 z=0  None .sdata2    @17255 */
SECTION_SDATA2 static f32 lit_17255 = 3.0f / 25.0f;

/* 80180D24-80181000 02DC+00 s=2 e=0 z=0  None .text      shakeCamera__9dCamera_cFv */
//	80180D48: 804536A0 (lit_5656)
//	80180D80: 804536A8 (lit_5658)
//	80180D88: 80393F58 (wave)
//	80180D8C: 80393F58 (wave)
//	80180D90: 80453908 (lit_17253)
//	80180DD4: 804536E8 (lit_6630)
//	80180DD8: 8026798C (cM_rndFX__Ff)
//	80180DDC: 80453700 (lit_8018)
//	80180E14: 8045390C (lit_17254)
//	80180E18: 8026798C (cM_rndFX__Ff)
//	80180E28: 8045390C (lit_17254)
//	80180E2C: 8026798C (cM_rndFX__Ff)
//	80180E48: 80266B84 (__ml__4cXyzCFf)
//	80180E78: 804536A8 (lit_5658)
//	80180E7C: 80266B84 (__ml__4cXyzCFf)
//	80180EC4: 804536E4 (lit_6629)
//	80180EC8: 80266B84 (__ml__4cXyzCFf)
//	80180F08: 80453910 (lit_17255)
//	80180F0C: 8026798C (cM_rndFX__Ff)
//	80180F24: 80453794 (lit_10560)
//	80180F28: 8026798C (cM_rndFX__Ff)
//	80180F34: 80270FC8 (__ct__7cSAngleFf)
//	80180F4C: 80453718 (lit_8127)
//	80180F60: 80450BE5 (struct_80450BE4)
//	80180F64: 80008078 (onBlure__13mDoGph_gInf_cFv)
//	80180F74: 8045370C (lit_8021)
//	80180F78: 80266B84 (__ml__4cXyzCFf)
//	80180F88: 803470B4 (PSVECSubtract)
//	80180F94: 8045370C (lit_8021)
//	80180F98: 80266B84 (__ml__4cXyzCFf)
//	80180FA8: 803470B4 (PSVECSubtract)
//	80180FB0: 8045370C (lit_8021)
//	80180FC8: 80271264 (__ml__7cSAngleCFf)
//	80180FD4: 802711E8 (__ami__7cSAngleFRC7cSAngle)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::shakeCamera() {
    nofralloc
#include "asm/d/d_camera/shakeCamera__9dCamera_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453914-80453918 0004+00 s=1 e=0 z=0  None .sdata2
 * PatternLengthMax__Q29dCamera_c23@class$3669d_camera_cpp      */
SECTION_SDATA2 static u8 data_80453914[4] = {
    0x00,
    0x00,
    0x00,
    0x04,
};

/* 80181000-80181158 0158+00 s=0 e=1 z=0  None .text      StartShake__9dCamera_cFlPUcl4cXyz */
//	80181024: 80453914 (data_80453914)
//	80181034: 80453914 (data_80453914)
//	80181068: 80453914 (data_80453914)
//	801810DC: 80453914 (data_80453914)
//	80181114: 80266CE4 (norm__4cXyzCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::StartShake(s32 param_0, u8* param_1, s32 param_2, cXyz param_3) {
    nofralloc
#include "asm/d/d_camera/StartShake__9dCamera_cFlPUcl4cXyz.s"
}
#pragma pop

/* 80181158-80181170 0018+00 s=0 e=1 z=0  None .text      StopShake__9dCamera_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::StopShake() {
    nofralloc
#include "asm/d/d_camera/StopShake__9dCamera_cFv.s"
}
#pragma pop

/* 80181170-801811B8 0048+00 s=1 e=2 z=10  None .text      StartBlure__9dCamera_cFiP10fopAc_ac_cff
 */
//	80181188: 804536A0 (lit_5656)
//	80181194: 80453690 (lit_4445)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::StartBlure(int param_0, fopAc_ac_c* param_1, f32 param_2, f32 param_3) {
    nofralloc
#include "asm/d/d_camera/StartBlure__9dCamera_cFiP10fopAc_ac_cff.s"
}
#pragma pop

/* 801811B8-80181208 0050+00 s=0 e=0 z=1  None .text      ResetBlure__9dCamera_cFv */
//	801811C0: 80453724 (lit_8530)
//	801811C8: 80453690 (lit_4445)
//	801811D4: 804536A0 (lit_5656)
//	801811DC: 804536A8 (lit_5658)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::ResetBlure() {
    nofralloc
#include "asm/d/d_camera/ResetBlure__9dCamera_cFv.s"
}
#pragma pop

/* 80181208-80181210 0008+00 s=0 e=1 z=0  None .text      SetBlureAlpha__9dCamera_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::SetBlureAlpha(f32 param_0) {
    nofralloc
#include "asm/d/d_camera/SetBlureAlpha__9dCamera_cFf.s"
}
#pragma pop

/* 80181210-80181220 0010+00 s=0 e=1 z=0  None .text      SetBlureScale__9dCamera_cFfff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::SetBlureScale(f32 param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/d_camera/SetBlureScale__9dCamera_cFfff.s"
}
#pragma pop

/* 80181220-80181278 0058+00 s=0 e=1 z=0  None .text      SetBlurePosition__9dCamera_cFfff */
//	80181230: 80362144 (_savefpr_29)
//	8018124C: 80181278 (SetBlureActor__9dCamera_cFP10fopAc_ac_c)
//	80181260: 80362190 (_restfpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::SetBlurePosition(f32 param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/d_camera/SetBlurePosition__9dCamera_cFfff.s"
}
#pragma pop

/* 80181278-80181280 0008+00 s=1 e=0 z=0  None .text      SetBlureActor__9dCamera_cFP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::SetBlureActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/d_camera/SetBlureActor__9dCamera_cFP10fopAc_ac_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453918-8045391C 0004+00 s=1 e=0 z=0  None .sdata2    @17392 */
SECTION_SDATA2 static f32 lit_17392 = 230.0f;

/* 80181280-80181490 0210+00 s=2 e=0 z=0  None .text      blureCamera__9dCamera_cFv */
//	801812BC: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	801812C0: 804061C0 (g_dComIfG_gameInfo)
//	801812C4: 804061C0 (g_dComIfG_gameInfo)
//	801812F0: 8009778C (eyePos__9dCamera_cFP10fopAc_ac_c)
//	80181314: 80015310 (mDoLib_project__FP3VecP3Vec)
//	80181338: 804536A0 (lit_5656)
//	80181350: 80453698 (lit_4448)
//	8018138C: 804536A8 (lit_5658)
//	801813B4: 804536A0 (lit_5656)
//	801813BC: 803DD470 (now__14mDoMtx_stack_c)
//	801813C0: 803DD470 (now__14mDoMtx_stack_c)
//	801813D0: 803468E8 (PSMTXTrans)
//	801813D8: 8000CE70 (scaleM__14mDoMtx_stack_cFRC4cXyz)
//	801813DC: 803DD470 (now__14mDoMtx_stack_c)
//	801813E0: 803DD470 (now__14mDoMtx_stack_c)
//	801813E8: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	801813EC: 803DD470 (now__14mDoMtx_stack_c)
//	801813F0: 803DD470 (now__14mDoMtx_stack_c)
//	801813F8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	801813FC: 803DD470 (now__14mDoMtx_stack_c)
//	80181400: 803DD470 (now__14mDoMtx_stack_c)
//	80181408: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80181424: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80181428: 803DD470 (now__14mDoMtx_stack_c)
//	8018142C: 803DD470 (now__14mDoMtx_stack_c)
//	80181430: 800080A0 (onBlure__13mDoGph_gInf_cFPA4_Cf)
//	80181434: 80453918 (lit_17392)
//	80181454: 8000CE70 (scaleM__14mDoMtx_stack_cFRC4cXyz)
//	80181458: 80450BE5 (struct_80450BE4)
//	80181464: 80450BE4 (struct_80450BE4)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::blureCamera() {
    nofralloc
#include "asm/d/d_camera/blureCamera__9dCamera_cFv.s"
}
#pragma pop

/* 80181490-80181500 0070+00 s=2 e=0 z=0  None .text      onHorseDush__9dCamera_cFv */
//	801814A4: 804536A0 (lit_5656)
//	801814AC: 804536A8 (lit_5658)
//	801814B8: 804061C0 (g_dComIfG_gameInfo)
//	801814BC: 804061C0 (g_dComIfG_gameInfo)
//	801814D0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	801814E0: 80453724 (lit_8530)
//	801814E4: 804536A8 (lit_5658)
//	801814E8: 80181170 (StartBlure__9dCamera_cFiP10fopAc_ac_cff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::onHorseDush() {
    nofralloc
#include "asm/d/d_camera/onHorseDush__9dCamera_cFv.s"
}
#pragma pop

/* 80181500-80181534 0034+00 s=1 e=1 z=5  None .text      GetForceLockOnActor__9dCamera_cFv */
//	80181514: 80023590 (fpcSch_JudgeByID__FPvPv)
//	80181518: 80023590 (fpcSch_JudgeByID__FPvPv)
//	80181520: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::GetForceLockOnActor() {
    nofralloc
#include "asm/d/d_camera/GetForceLockOnActor__9dCamera_cFv.s"
}
#pragma pop

/* 80181534-80181560 002C+00 s=0 e=0 z=9  None .text      ForceLockOn__9dCamera_cFP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::ForceLockOn(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/d_camera/ForceLockOn__9dCamera_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80181560-8018159C 003C+00 s=1 e=0 z=0  None .text      ForceLockOff__9dCamera_cFUi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::ForceLockOff(unsigned int param_0) {
    nofralloc
#include "asm/d/d_camera/ForceLockOff__9dCamera_cFUi.s"
}
#pragma pop

/* 8018159C-801815CC 0030+00 s=0 e=0 z=7  None .text      ForceLockOff__9dCamera_cFP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::ForceLockOff(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/d_camera/ForceLockOff__9dCamera_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 801815CC-801815F0 0024+00 s=0 e=0 z=5  None .text      dCam_getAngleY__FP12camera_class */
//	801815DC: 80162FD4 (U__9dCamera_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCam_getAngleY(camera_class* param_0) {
    nofralloc
#include "asm/d/d_camera/dCam_getAngleY__FP12camera_class.s"
}
#pragma pop

/* 801815F0-80181614 0024+00 s=0 e=0 z=5  None .text      dCam_getAngleX__FP12camera_class */
//	80181600: 80162FB8 (V__9dCamera_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCam_getAngleX(camera_class* param_0) {
    nofralloc
#include "asm/d/d_camera/dCam_getAngleX__FP12camera_class.s"
}
#pragma pop

/* 80181614-80181630 001C+00 s=0 e=2 z=4  None .text      dCam_getControledAngleY__FP12camera_class
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCam_getControledAngleY(camera_class* param_0) {
    nofralloc
#include "asm/d/d_camera/dCam_getControledAngleY__FP12camera_class.s"
}
#pragma pop

/* 80181630-80181640 0010+00 s=1 e=1 z=0  None .text      dCam_getCamera__Fv */
//	80181630: 804061C0 (g_dComIfG_gameInfo)
//	80181634: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCam_getCamera() {
    nofralloc
#include "asm/d/d_camera/dCam_getCamera__Fv.s"
}
#pragma pop

/* 80181640-80181664 0024+00 s=0 e=43 z=91  None .text      dCam_getBody__Fv */
//	8018164C: 80181630 (dCam_getCamera__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCam_getBody() {
    nofralloc
#include "asm/d/d_camera/dCam_getBody__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045391C-80453920 0004+00 s=2 e=0 z=0  None .sdata2    @17525 */
SECTION_SDATA2 static f32 lit_17525 = 19.0f / 14.0f;

/* 80181664-80181708 00A4+00 s=1 e=0 z=0  None .text      preparation__FP20camera_process_class */
//	8018167C: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	80181680: 804061C0 (g_dComIfG_gameInfo)
//	80181684: 804061C0 (g_dComIfG_gameInfo)
//	801816BC: 8045391C (lit_17525)
//	801816C4: 8009D87C (getE3Zhint__9daAlink_cFv)
//	801816D0: 804061C0 (g_dComIfG_gameInfo)
//	801816D4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void preparation(camera_process_class* param_0) {
    nofralloc
#include "asm/d/d_camera/preparation__FP20camera_process_class.s"
}
#pragma pop

/* 80181708-80181804 00FC+00 s=2 e=0 z=0  None .text      view_setup__FP20camera_process_class */
//	80181718: 803621DC (_savegpr_29)
//	80181720: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	80181724: 804061C0 (g_dComIfG_gameInfo)
//	80181728: 804061C0 (g_dComIfG_gameInfo)
//	80181760: 8000C710 (mDoMtx_lookAt__FPA4_fPC3VecPC3VecPC3Vecs)
//	8018176C: 803464B0 (PSMTXCopy)
//	80181770: 804536A0 (lit_5656)
//	80181780: 804061C0 (g_dComIfG_gameInfo)
//	80181784: 804061C0 (g_dComIfG_gameInfo)
//	801817C4: 80453760 (lit_9410)
//	801817E8: 8001528C (setup__14mDoLib_clipperFffff)
//	801817F0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void view_setup(camera_process_class* param_0) {
    nofralloc
#include "asm/d/d_camera/view_setup__FP20camera_process_class.s"
}
#pragma pop

/* 80181804-80181E20 061C+00 s=2 e=0 z=0  None .text      store__FP20camera_process_class */
//	8018181C: 803621D0 (_savegpr_26)
//	80181828: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	80181830: 804061C0 (g_dComIfG_gameInfo)
//	80181834: 804061C0 (g_dComIfG_gameInfo)
//	8018188C: 80270F98 (__ct__7cSAngleFs)
//	80181894: 80450E20 (m_object__7dDemo_c)
//	80181898: 80039128 (getActiveCamera__14dDemo_object_cFv)
//	80181928: 80453720 (lit_8529)
//	80181948: 80270F98 (__ct__7cSAngleFs)
//	8018197C: 80181E98 (Center__9dCamera_cFv)
//	801819A0: 80181E64 (Eye__9dCamera_cFv)
//	801819C4: 80181E20 (Up__9dCamera_cFv)
//	801819E8: 801829AC (Bank__9dCamera_cFv)
//	80181A24: 804536A0 (lit_5656)
//	80181D64: 804061C0 (g_dComIfG_gameInfo)
//	80181D68: 804061C0 (g_dComIfG_gameInfo)
//	80181D7C: 80453718 (lit_8127)
//	80181DDC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80181DE8: 80271880 (__ct__7cSGlobeFRC4cXyz)
//	80181DF0: 802710E8 (Inv__7cSAngleCFv)
//	80181E0C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void store(camera_process_class* param_0) {
    nofralloc
#include "asm/d/d_camera/store__FP20camera_process_class.s"
}
#pragma pop

/* 80181E20-80181E64 0044+00 s=1 e=0 z=0  None .text      Up__9dCamera_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Up() {
    nofralloc
#include "asm/d/d_camera/Up__9dCamera_cFv.s"
}
#pragma pop

/* 80181E64-80181E98 0034+00 s=1 e=1 z=30  None .text      Eye__9dCamera_cFv */
//	80181E80: 80266AE4 (__pl__4cXyzCFRC3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Eye() {
    nofralloc
#include "asm/d/d_camera/Eye__9dCamera_cFv.s"
}
#pragma pop

/* 80181E98-80181ECC 0034+00 s=1 e=1 z=25  None .text      Center__9dCamera_cFv */
//	80181EB4: 80266AE4 (__pl__4cXyzCFRC3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Center() {
    nofralloc
#include "asm/d/d_camera/Center__9dCamera_cFv.s"
}
#pragma pop

/* 80181ECC-80181F70 00A4+00 s=1 e=0 z=0  None .text      camera_execute__FP20camera_process_class
 */
//	80181EE0: 80181664 (preparation__FP20camera_process_class)
//	80181EE4: 80450E20 (m_object__7dDemo_c)
//	80181EE8: 80039128 (getActiveCamera__14dDemo_object_cFv)
//	80181EF8: 804536A0 (lit_5656)
//	80181F00: 80453708 (lit_8020)
//	80181F04: 804536FC (lit_8017)
//	80181F08: 80165FB4 (setView__9dCamera_cFffff)
//	80181F0C: 804061C0 (g_dComIfG_gameInfo)
//	80181F10: 804061C0 (g_dComIfG_gameInfo)
//	80181F30: 801622B4 (Run__9dCamera_cFv)
//	80181F3C: 80162D38 (NotRun__9dCamera_cFv)
//	80181F44: 80163034 (CalcTrimSize__9dCamera_cFv)
//	80181F4C: 80181804 (store__FP20camera_process_class)
//	80181F54: 80181708 (view_setup__FP20camera_process_class)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void camera_execute(camera_process_class* param_0) {
    nofralloc
#include "asm/d/d_camera/camera_execute__FP20camera_process_class.s"
}
#pragma pop

/* 80181F70-801821E0 0270+00 s=1 e=0 z=0  None .text      camera_draw__FP20camera_process_class */
//	80181F88: 803621D4 (_savegpr_27)
//	80181F98: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	80181F9C: 804061C0 (g_dComIfG_gameInfo)
//	80181FA0: 804061C0 (g_dComIfG_gameInfo)
//	80181FC8: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	80181FE4: 804536A0 (lit_5656)
//	80181FE8: 80453698 (lit_4448)
//	80182004: 80453708 (lit_8020)
//	80182008: 804536FC (lit_8017)
//	8018200C: 804536F8 (lit_8016)
//	80182028: 80051ADC (setScissor__14dDlst_window_cFffff)
//	80182040: 80346F28 (C_MTXPerspective)
//	80182058: 8000C710 (mDoMtx_lookAt__FPA4_fPC3VecPC3VecPC3Vecs)
//	80182060: 80434AC8 (j3dSys)
//	80182064: 80434AC8 (j3dSys)
//	80182068: 803464B0 (PSMTXCopy)
//	80182074: 803465B0 (PSMTXInverse)
//	80182078: 80450B44 (data_80450B44)
//	80182090: 804061C0 (g_dComIfG_gameInfo)
//	80182094: 804061C0 (g_dComIfG_gameInfo)
//	801820A8: 802BD2DC (setAudioCamera__10Z2AudienceFPA4_fR3VecR3Vecffbib)
//	801820B0: 8007757C (__ct__11dBgS_GndChkFv)
//	801820C8: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	801820D4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	801820DC: 804536AC (lit_5659)
//	801820F8: 800750D0 (ChkGrpInf__4dBgSFRC13cBgS_PolyInfoUl)
//	80182108: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80182118: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	80182120: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80182130: 80075080 (GetGrpSoundId__4dBgSFRC13cBgS_PolyInfo)
//	80182138: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80182140: 802B6784 (setCameraGroupInfo__11Z2StatusMgrFUc)
//	80182158: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80182164: 802B6760 (setCameraPolygonPos__11Z2StatusMgrFP3Vec)
//	8018216C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80182178: 802B6760 (setCameraPolygonPos__11Z2StatusMgrFP3Vec)
//	80182184: 803464B0 (PSMTXCopy)
//	80182188: 804536A0 (lit_5656)
//	801821A4: 8000C8D0 (mDoMtx_concatProjView__FPA4_CfPA4_CfPA4_f)
//	801821AC: 80163154 (Draw__9dCamera_cFv)
//	801821B8: 800775F0 (__dt__11dBgS_GndChkFv)
//	801821CC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void camera_draw(camera_process_class* param_0) {
    nofralloc
#include "asm/d/d_camera/camera_draw__FP20camera_process_class.s"
}
#pragma pop

/* 801821E0-80182260 0080+00 s=1 e=0 z=0  None .text      init_phase1__FP12camera_class */
//	801821F4: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	801821F8: 804061C0 (g_dComIfG_gameInfo)
//	801821FC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void init_phase1(camera_class* param_0) {
    nofralloc
#include "asm/d/d_camera/init_phase1__FP12camera_class.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453920-80453924 0004+00 s=1 e=0 z=0  None .sdata2    @17948 */
SECTION_SDATA2 static f32 lit_17948 = 160000.0f;

/* 80182260-80182454 01F4+00 s=1 e=0 z=0  None .text      init_phase2__FP12camera_class */
//	80182278: 803621D8 (_savegpr_28)
//	80182284: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	80182298: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	8018229C: 804061C0 (g_dComIfG_gameInfo)
//	801822A0: 804061C0 (g_dComIfG_gameInfo)
//	801822D8: 8007757C (__ct__11dBgS_GndChkFv)
//	801822F4: 80453788 (lit_10557)
//	80182308: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8018230C: 804061C0 (g_dComIfG_gameInfo)
//	80182310: 804061C0 (g_dComIfG_gameInfo)
//	80182320: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80182324: 804536AC (lit_5659)
//	80182338: 800775F0 (__dt__11dBgS_GndChkFv)
//	80182348: 800198C4 (fopAcM_setStageLayer__FPv)
//	80182350: 804061C0 (g_dComIfG_gameInfo)
//	80182354: 804061C0 (g_dComIfG_gameInfo)
//	8018236C: 8016008C (__ct__9dCamera_cFP12camera_class)
//	80182370: 80453920 (lit_17948)
//	801823C0: 804536A8 (lit_5658)
//	801823CC: 80453718 (lit_8127)
//	801823D4: 8045391C (lit_17525)
//	80182400: 80181804 (store__FP20camera_process_class)
//	80182408: 80181708 (view_setup__FP20camera_process_class)
//	8018242C: 800775F0 (__dt__11dBgS_GndChkFv)
//	80182440: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void init_phase2(camera_class* param_0) {
    nofralloc
#include "asm/d/d_camera/init_phase2__FP12camera_class.s"
}
#pragma pop

/* 80182454-80182484 0030+00 s=1 e=0 z=0  None .text      camera_create__FP12camera_class */
//	80182468: 803BA6D8 (l_method)
//	8018246C: 803BA6D8 (l_method)
//	80182470: 8002FB20 (dComLbG_PhaseHandler__FP30request_of_phase_process_classPPFPv_iPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void camera_create(camera_class* param_0) {
    nofralloc
#include "asm/d/d_camera/camera_create__FP12camera_class.s"
}
#pragma pop

/* 80182484-801824C0 003C+00 s=1 e=0 z=0  None .text      camera_delete__FP20camera_process_class */
//	80182498: 80160304 (__dt__9dCamera_cFv)
//	801824A0: 804061C0 (g_dComIfG_gameInfo)
//	801824A4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void camera_delete(camera_process_class* param_0) {
    nofralloc
#include "asm/d/d_camera/camera_delete__FP20camera_process_class.s"
}
#pragma pop

/* 801824C0-801824C8 0008+00 s=1 e=0 z=0  None .text      is_camera_delete__FPv */
static bool is_camera_delete(void* param_0) {
    return true;
}

/* ############################################################################################## */
/* 80453924-80453928 0004+00 s=1 e=0 z=0  None .sdata2    @17979 */
SECTION_SDATA2 static f32 lit_17979 = 240.0f;

/* 801824C8-80182560 0098+00 s=1 e=0 z=0  None .text      Init__14dCamForcusLineFv */
//	801824DC: 804538D8 (lit_15478)
//	801824E4: 80453924 (lit_17979)
//	801824EC: 804536A0 (lit_5656)
//	80182540: 804537E8 (lit_10581)
//	80182550: 804536B8 (lit_5662)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamForcusLine::Init() {
    nofralloc
#include "asm/d/d_camera/Init__14dCamForcusLineFv.s"
}
#pragma pop

/* 80182560-801825E4 0084+00 s=1 e=0 z=0  None .text      Draw__14dCamForcusLineFv */
//	8018259C: 80053CDC (init__8cM_rnd_cFiii)
//	801825CC: 800541F4 (update__18dDlst_effectLine_cFR4cXyzR8_GXColorUsUsUsUsffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamForcusLine::Draw() {
    nofralloc
#include "asm/d/d_camera/Draw__14dCamForcusLineFv.s"
}
#pragma pop

/* 801825E4-801825FC 0018+00 s=2 e=0 z=0  None .text      Off__14dCamForcusLineFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamForcusLine::Off() {
    nofralloc
#include "asm/d/d_camera/Off__14dCamForcusLineFv.s"
}
#pragma pop

/* 801825FC-801827EC 01F0+00 s=0 e=0 z=0  None .text      __sinit_d_camera_cpp */
//	801825FC: 803BA160 (cNullVec__6Z2Calc)
//	80182600: 803BA160 (cNullVec__6Z2Calc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_camera_cpp() {
    nofralloc
#include "asm/d/d_camera/__sinit_d_camera_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
SECTION_CTORS void* const _ctors_801825FC = (void*)__sinit_d_camera_cpp;
#pragma pop

/* 801827EC-801827F4 0008+00 s=1 e=0 z=0  None .text      @20@__dt__14dBgS_CamSphChkFv */
//	801827F0: 80165E74 (__dt__14dBgS_CamSphChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_801827EC() {
    nofralloc
#include "asm/d/d_camera/func_801827EC.s"
}
#pragma pop

/* 801827F4-801827FC 0008+00 s=1 e=0 z=0  None .text      @36@__dt__14dBgS_CamSphChkFv */
//	801827F8: 80165E74 (__dt__14dBgS_CamSphChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_801827F4() {
    nofralloc
#include "asm/d/d_camera/func_801827F4.s"
}
#pragma pop

/* 801827FC-80182804 0008+00 s=1 e=0 z=0  None .text      @72@__dt__14dBgS_CamSphChkFv */
//	80182800: 80165E74 (__dt__14dBgS_CamSphChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_801827FC() {
    nofralloc
#include "asm/d/d_camera/func_801827FC.s"
}
#pragma pop

/* 80182804-8018280C 0008+00 s=1 e=0 z=0  None .text      @56@__dt__14dBgS_CamSphChkFv */
//	80182808: 80165E74 (__dt__14dBgS_CamSphChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80182804() {
    nofralloc
#include "asm/d/d_camera/func_80182804.s"
}
#pragma pop

/* 8018280C-80182814 0008+00 s=1 e=0 z=0  None .text      getChainGrabActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getChainGrabActor() {
    nofralloc
#include "asm/d/d_camera/getChainGrabActor__9daAlink_cFv.s"
}
#pragma pop

/* 80182814-8018283C 0028+00 s=1 e=0 z=0  None .text      checkCokkoGlide__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCokkoGlide() const {
    nofralloc
#include "asm/d/d_camera/checkCokkoGlide__9daAlink_cCFv.s"
}
#pragma pop

/* 8018283C-80182870 0034+00 s=1 e=0 z=0  None .text      checkCameraLargeDamage__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCameraLargeDamage() const {
    nofralloc
#include "asm/d/d_camera/checkCameraLargeDamage__9daAlink_cCFv.s"
}
#pragma pop

/* 80182870-80182878 0008+00 s=1 e=0 z=0  None .text      getHsSubChainTopPos__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getHsSubChainTopPos() const {
    nofralloc
#include "asm/d/d_camera/getHsSubChainTopPos__9daAlink_cCFv.s"
}
#pragma pop

/* 80182878-80182888 0010+00 s=2 e=0 z=0  None .text      daAlink_getAlinkActorClass__Fv */
//	80182878: 804061C0 (g_dComIfG_gameInfo)
//	8018287C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_getAlinkActorClass() {
    nofralloc
#include "asm/d/d_camera/daAlink_getAlinkActorClass__Fv.s"
}
#pragma pop

/* 80182888-8018289C 0014+00 s=1 e=0 z=0  None .text      checkCutHeadProc__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutHeadProc() const {
    nofralloc
#include "asm/d/d_camera/checkCutHeadProc__9daAlink_cCFv.s"
}
#pragma pop

/* 8018289C-801828A4 0008+00 s=1 e=0 z=0  None .text      getRideActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getRideActor() {
    nofralloc
#include "asm/d/d_camera/getRideActor__9daAlink_cFv.s"
}
#pragma pop

/* 801828A4-801828D4 0030+00 s=1 e=0 z=0  None .text      dComIfGs_isTmpBit__FUs */
//	801828B4: 804061C0 (g_dComIfG_gameInfo)
//	801828B8: 804061C0 (g_dComIfG_gameInfo)
//	801828C0: 800349BC (isEventBit__11dSv_event_cCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGs_isTmpBit(u16 param_0) {
    nofralloc
#include "asm/d/d_camera/dComIfGs_isTmpBit__FUs.s"
}
#pragma pop

/* 801828D4-8018291C 0048+00 s=1 e=0 z=0  None .text      __dt__14d2DBSplinePathFv */
//	801828EC: 803BA7EC (__vt__14d2DBSplinePath)
//	801828F0: 803BA7EC (__vt__14d2DBSplinePath)
//	80182900: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm d2DBSplinePath::~d2DBSplinePath() {
    nofralloc
#include "asm/d/d_camera/__dt__14d2DBSplinePathFv.s"
}
#pragma pop

/* 8018291C-80182920 0004+00 s=1 e=0 z=0  None .text      __ct__Q29dCamera_c10dCamInfo_cFv */
dCamera_c::dCamInfo_c::dCamInfo_c() {
    /* empty function */
}

/* 80182920-8018295C 003C+00 s=2 e=0 z=0  None .text      __dt__Q29dCamera_c10dCamInfo_cFv */
//	80182940: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCamera_c::dCamInfo_c::~dCamInfo_c() {
    nofralloc
#include "asm/d/d_camera/__dt__Q29dCamera_c10dCamInfo_cFv.s"
}
#pragma pop

/* 8018295C-80182964 0008+00 s=1 e=0 z=0  None .text      footHeightOf__9dCamera_cFP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::footHeightOf(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/d_camera/footHeightOf__9dCamera_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80182964-8018296C 0008+00 s=1 e=0 z=0  None .text      push_any_key__9dCamera_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::push_any_key() {
    nofralloc
#include "asm/d/d_camera/push_any_key__9dCamera_cFv.s"
}
#pragma pop

/* 8018296C-80182980 0014+00 s=1 e=0 z=0  None .text      clrFlag__9dCamera_cFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::clrFlag(u32 param_0) {
    nofralloc
#include "asm/d/d_camera/clrFlag__9dCamera_cFUl.s"
}
#pragma pop

/* 80182980-80182994 0014+00 s=4 e=0 z=0  None .text      chkFlag__9dCamera_cFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::chkFlag(u32 param_0) {
    nofralloc
#include "asm/d/d_camera/chkFlag__9dCamera_cFUl.s"
}
#pragma pop

/* 80182994-8018299C 0008+00 s=1 e=0 z=0  None .text      GetCheckObjectCount__12dAttention_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dAttention_c::GetCheckObjectCount() {
    nofralloc
#include "asm/d/d_camera/GetCheckObjectCount__12dAttention_cFv.s"
}
#pragma pop

/* 8018299C-801829AC 0010+00 s=4 e=0 z=0  None .text      dComIfGp_getAttention__Fv */
//	8018299C: 804061C0 (g_dComIfG_gameInfo)
//	801829A0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_getAttention() {
    nofralloc
#include "asm/d/d_camera/dComIfGp_getAttention__Fv.s"
}
#pragma pop

/* 801829AC-801829E0 0034+00 s=1 e=0 z=0  None .text      Bank__9dCamera_cFv */
//	801829C8: 80271174 (__pl__7cSAngleCFRC7cSAngle)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamera_c::Bank() {
    nofralloc
#include "asm/d/d_camera/Bank__9dCamera_cFv.s"
}
#pragma pop

/* 801829E0-801829EC 000C+00 s=2 e=0 z=0  None .text      checkThrowDamage__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkThrowDamage() const {
    nofralloc
#include "asm/d/d_camera/checkThrowDamage__9daPy_py_cCFv.s"
}
#pragma pop

/* 801829EC-801829F0 0004+00 s=1 e=0 z=0  None .text      GetNP__8cM3dGPlaFv */
void cM3dGPla::GetNP() {
    /* empty function */
}

/* 801829F0-801829F8 0008+00 s=4 e=0 z=0  None .text      GetCross__11cBgS_LinChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cBgS_LinChk::GetCross() {
    nofralloc
#include "asm/d/d_camera/GetCross__11cBgS_LinChkFv.s"
}
#pragma pop

/* 801829F8-80182A08 0010+00 s=1 e=0 z=0  None .text      dComIfG_Bgsp__Fv */
//	801829F8: 804061C0 (g_dComIfG_gameInfo)
//	801829FC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfG_Bgsp() {
    nofralloc
#include "asm/d/d_camera/dComIfG_Bgsp__Fv.s"
}
#pragma pop

/* 80182A08-80182A10 0008+00 s=2 e=0 z=0  None .text      V__7cSGlobeCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cSGlobe::V() const {
    nofralloc
#include "asm/d/d_camera/V__7cSGlobeCFv.s"
}
#pragma pop

/* 80182A10-80182A24 0014+00 s=1 e=0 z=0  None .text      checkGoronSideMove__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkGoronSideMove() const {
    nofralloc
#include "asm/d/d_camera/checkGoronSideMove__9daPy_py_cCFv.s"
}
#pragma pop

/* 80182A24-80182A3C 0018+00 s=3 e=0 z=0  None .text      JMAFastSqrt__Ff */
//	80182A24: 804536A0 (lit_5656)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JMAFastSqrt(f32 param_0) {
    nofralloc
#include "asm/d/d_camera/JMAFastSqrt__Ff.s"
}
#pragma pop

/* 80182A3C-80182A48 000C+00 s=5 e=0 z=0  None .text      fabsf__3stdFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void std::fabsf(f32 param_0) {
    nofralloc
#include "asm/d/d_camera/fabsf__3stdFf.s"
}
#pragma pop

/* 80182A48-80182A4C 0004+00 s=2 e=0 z=0  None .text      __ct__7cSAngleFv */
cSAngle::cSAngle() {
    /* empty function */
}

/* 80182A4C-80182A54 0008+00 s=2 e=0 z=0  None .text      R__7cSGlobeFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cSGlobe::R(f32 param_0) {
    nofralloc
#include "asm/d/d_camera/R__7cSGlobeFf.s"
}
#pragma pop

/* 80182A54-80182A64 0010+00 s=5 e=0 z=0  None .text      dComIfGp_evmng_cameraPlay__Fv */
//	80182A54: 804061C0 (g_dComIfG_gameInfo)
//	80182A58: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_evmng_cameraPlay() {
    nofralloc
#include "asm/d/d_camera/dComIfGp_evmng_cameraPlay__Fv.s"
}
#pragma pop

/* 80182A64-80182A6C 0008+00 s=2 e=0 z=0  None .text      R__7cSGlobeCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cSGlobe::R() const {
    nofralloc
#include "asm/d/d_camera/R__7cSGlobeCFv.s"
}
#pragma pop

/* 80182A6C-80182A8C 0020+00 s=2 e=0 z=0  None .text      __lt__7cSAngleCFRC7cSAngle */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool cSAngle::operator<(cSAngle const& param_0) const {
    nofralloc
#include "asm/d/d_camera/__lt__7cSAngleCFRC7cSAngle.s"
}
#pragma pop

/* 80182A8C-80182AAC 0020+00 s=2 e=0 z=0  None .text      __gt__7cSAngleCFRC7cSAngle */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool cSAngle::operator>(cSAngle const& param_0) const {
    nofralloc
#include "asm/d/d_camera/__gt__7cSAngleCFRC7cSAngle.s"
}
#pragma pop

/* 80182AAC-80182AB4 0008+00 s=1 e=0 z=0  None .text      getRightFootPosP__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getRightFootPosP() {
    nofralloc
#include "asm/d/d_camera/getRightFootPosP__9daPy_py_cFv.s"
}
#pragma pop

/* 80182AB4-80182ABC 0008+00 s=1 e=0 z=0  None .text      getLeftFootPosP__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getLeftFootPosP() {
    nofralloc
#include "asm/d/d_camera/getLeftFootPosP__9daPy_py_cFv.s"
}
#pragma pop

/* 80182ABC-80182AC4 0008+00 s=2 e=0 z=0  None .text      getMidnaActor__9daPy_py_cFv */
//	80182ABC: 80451018 (m_midnaActor__9daPy_py_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getMidnaActor() {
    nofralloc
#include "asm/d/d_camera/getMidnaActor__9daPy_py_cFv.s"
}
#pragma pop

/* 80182AC4-80182AD0 000C+00 s=1 e=0 z=0  None .text      checkCopyRodThrowAfter__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkCopyRodThrowAfter() const {
    nofralloc
#include "asm/d/d_camera/checkCopyRodThrowAfter__9daPy_py_cCFv.s"
}
#pragma pop

/* 80182AD0-80182AD8 0008+00 s=1 e=0 z=0  None .text      keepLock__12dAttention_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dAttention_c::keepLock(int param_0) {
    nofralloc
#include "asm/d/d_camera/keepLock__12dAttention_cFi.s"
}
#pragma pop

/* 80182AD8-80182B9C 00C4+00 s=1 e=0 z=0  None .text      checkRide__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkRide() const {
    nofralloc
#include "asm/d/d_camera/checkRide__9daPy_py_cCFv.s"
}
#pragma pop

/* 80182B9C-80182BB8 001C+00 s=1 e=0 z=0  None .text      getRightHandPos__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getRightHandPos() const {
    nofralloc
#include "asm/d/d_camera/getRightHandPos__9daPy_py_cCFv.s"
}
#pragma pop

/* 80182BB8-80182BD0 0018+00 s=1 e=0 z=0  None .text      CheckFlag2__11dCamSetup_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::CheckFlag2(u16 param_0) {
    nofralloc
#include "asm/d/d_camera/CheckFlag2__11dCamSetup_cFUs.s"
}
#pragma pop

/* 80182BD0-80182BE8 0018+00 s=2 e=0 z=0  None .text      CheckFlag__11dCamSetup_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::CheckFlag(u16 param_0) {
    nofralloc
#include "asm/d/d_camera/CheckFlag__11dCamSetup_cFUs.s"
}
#pragma pop

/* 80182BE8-80182BF0 0008+00 s=1 e=0 z=0  None .text      WaitRollSpeed__11dCamSetup_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::WaitRollSpeed() {
    nofralloc
#include "asm/d/d_camera/WaitRollSpeed__11dCamSetup_cFv.s"
}
#pragma pop

/* 80182BF0-80182BF8 0008+00 s=1 e=0 z=0  None .text      WaitRollTimer__11dCamSetup_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::WaitRollTimer() {
    nofralloc
#include "asm/d/d_camera/WaitRollTimer__11dCamSetup_cFv.s"
}
#pragma pop

/* 80182BF8-80182C14 001C+00 s=1 e=0 z=0  None .text      getTrigA__8mDoCPd_cFUl */
//	80182BFC: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80182C00: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoCPd_c::getTrigA(u32 param_0) {
    nofralloc
#include "asm/d/d_camera/getTrigA__8mDoCPd_cFUl.s"
}
#pragma pop

/* 80182C14-80182C1C 0008+00 s=1 e=0 z=0  None .text      __ops__7cSAngleCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cSAngle::__ops() const {
    nofralloc
#include "asm/d/d_camera/__ops__7cSAngleCFv.s"
}
#pragma pop

/* 80182C1C-80182C24 0008+00 s=1 e=0 z=0  None .text      ThrowTimer__11dCamSetup_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::ThrowTimer() {
    nofralloc
#include "asm/d/d_camera/ThrowTimer__11dCamSetup_cFv.s"
}
#pragma pop

/* 80182C24-80182C2C 0008+00 s=1 e=0 z=0  None .text      ThrowCushion__11dCamSetup_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::ThrowCushion() {
    nofralloc
#include "asm/d/d_camera/ThrowCushion__11dCamSetup_cFv.s"
}
#pragma pop

/* 80182C2C-80182C34 0008+00 s=1 e=0 z=0  None .text      ThrowVAngle__11dCamSetup_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::ThrowVAngle() {
    nofralloc
#include "asm/d/d_camera/ThrowVAngle__11dCamSetup_cFv.s"
}
#pragma pop

/* 80182C34-80182C3C 0008+00 s=1 e=0 z=0  None .text      ThrowCtrAdjust__11dCamSetup_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::ThrowCtrAdjust() {
    nofralloc
#include "asm/d/d_camera/ThrowCtrAdjust__11dCamSetup_cFv.s"
}
#pragma pop

/* 80182C3C-80182C48 000C+00 s=1 e=0 z=0  None .text      Arg2__11dCamParam_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::Arg2() {
    nofralloc
#include "asm/d/d_camera/Arg2__11dCamParam_cFv.s"
}
#pragma pop

/* 80182C48-80182C50 0008+00 s=1 e=0 z=0  None .text      Arg1__11dCamParam_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::Arg1() {
    nofralloc
#include "asm/d/d_camera/Arg1__11dCamParam_cFv.s"
}
#pragma pop

/* 80182C50-80182C58 0008+00 s=1 e=0 z=0  None .text      Arg0__11dCamParam_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::Arg0() {
    nofralloc
#include "asm/d/d_camera/Arg0__11dCamParam_cFv.s"
}
#pragma pop

/* 80182C58-80182C60 0008+00 s=1 e=0 z=0  None .text      Fovy__11dCamParam_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::Fovy() {
    nofralloc
#include "asm/d/d_camera/Fovy__11dCamParam_cFv.s"
}
#pragma pop

/* 80182C60-80182C6C 000C+00 s=1 e=0 z=0  None .text      Arg2__11dCamParam_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::Arg2(s16 param_0) {
    nofralloc
#include "asm/d/d_camera/Arg2__11dCamParam_cFs.s"
}
#pragma pop

/* 80182C6C-80182C74 0008+00 s=1 e=0 z=0  None .text      Arg1__11dCamParam_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::Arg1(u8 param_0) {
    nofralloc
#include "asm/d/d_camera/Arg1__11dCamParam_cFUc.s"
}
#pragma pop

/* 80182C74-80182C7C 0008+00 s=1 e=0 z=0  None .text      Arg0__11dCamParam_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::Arg0(u8 param_0) {
    nofralloc
#include "asm/d/d_camera/Arg0__11dCamParam_cFUc.s"
}
#pragma pop

/* 80182C7C-80182C84 0008+00 s=1 e=0 z=0  None .text      Fovy__11dCamParam_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::Fovy(u8 param_0) {
    nofralloc
#include "asm/d/d_camera/Fovy__11dCamParam_cFUc.s"
}
#pragma pop

/* 80182C84-80182C8C 0008+00 s=2 e=0 z=0  None .text      U__7cSGlobeCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cSGlobe::U() const {
    nofralloc
#include "asm/d/d_camera/U__7cSGlobeCFv.s"
}
#pragma pop

/* 80182C8C-80182CA8 001C+00 s=5 e=0 z=0  None .text      Flag__11dCamParam_cFlUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::Flag(s32 param_0, u16 param_1) {
    nofralloc
#include "asm/d/d_camera/Flag__11dCamParam_cFlUs.s"
}
#pragma pop

/* 80182CA8-80182CB4 000C+00 s=5 e=0 z=0  None .text      __as__7cSAngleFRC7cSAngle */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cSAngle::operator=(cSAngle const& param_0) {
    nofralloc
#include "asm/d/d_camera/__as__7cSAngleFRC7cSAngle.s"
}
#pragma pop

/* 80182CB4-80182CD0 001C+00 s=1 e=0 z=0  None .text      CheckFlag__11dCamParam_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::CheckFlag(u16 param_0) {
    nofralloc
#include "asm/d/d_camera/CheckFlag__11dCamParam_cFUs.s"
}
#pragma pop

/* 80182CD0-80182CEC 001C+00 s=5 e=0 z=0  None .text      Val__11dCamParam_cFli */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamParam_c::Val(s32 param_0, int param_1) {
    nofralloc
#include "asm/d/d_camera/Val__11dCamParam_cFli.s"
}
#pragma pop

/* 80182CEC-80182CF4 0008+00 s=1 e=0 z=0  None .text      ChargeBRatio__11dCamSetup_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::ChargeBRatio() {
    nofralloc
#include "asm/d/d_camera/ChargeBRatio__11dCamSetup_cFv.s"
}
#pragma pop

/* 80182CF4-80182CFC 0008+00 s=1 e=0 z=0  None .text      ChargeTimer__11dCamSetup_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::ChargeTimer() {
    nofralloc
#include "asm/d/d_camera/ChargeTimer__11dCamSetup_cFv.s"
}
#pragma pop

/* 80182CFC-80182D04 0008+00 s=1 e=0 z=0  None .text      ChargeLatitude__11dCamSetup_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCamSetup_c::ChargeLatitude() {
    nofralloc
#include "asm/d/d_camera/ChargeLatitude__11dCamSetup_cFv.s"
}
#pragma pop

/* 80182D04-80182D10 000C+00 s=2 e=0 z=0  None .text      getLashDashStart__9daHorse_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daHorse_c::getLashDashStart() const {
    nofralloc
#include "asm/d/d_camera/getLashDashStart__9daHorse_cCFv.s"
}
#pragma pop

/* 80182D10-80182D1C 000C+00 s=1 e=0 z=0  None .text      fabs__3stdFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void std::fabs(f32 param_0) {
    nofralloc
#include "asm/d/d_camera/fabs__3stdFf.s"
}
#pragma pop

/* 80182D1C-80182D28 000C+00 s=1 e=0 z=0  None .text      checkTurnStandCamera__9daHorse_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daHorse_c::checkTurnStandCamera() const {
    nofralloc
#include "asm/d/d_camera/checkTurnStandCamera__9daHorse_cCFv.s"
}
#pragma pop

/* 80182D28-80182D48 0020+00 s=1 e=0 z=0  None .text      d2s__6cAngleFf */
//	80182D2C: 80453720 (lit_8529)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cAngle::d2s(f32 param_0) {
    nofralloc
#include "asm/d/d_camera/d2s__6cAngleFf.s"
}
#pragma pop

/* 80182D48-80182D5C 0014+00 s=1 e=0 z=0  None .text      checkJump__9daHorse_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daHorse_c::checkJump() const {
    nofralloc
#include "asm/d/d_camera/checkJump__9daHorse_cCFv.s"
}
#pragma pop

/* 80182D5C-80182D64 0008+00 s=1 e=0 z=0  None .text      fopAcM_GetParam__FPCv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void fopAcM_GetParam(void const* param_0) {
    nofralloc
#include "asm/d/d_camera/fopAcM_GetParam__FPCv.s"
}
#pragma pop

/* 80182D64-80182D78 0014+00 s=1 e=0 z=0  None .text      checkNoAttention__12daTagMstop_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagMstop_c::checkNoAttention() const {
    nofralloc
#include "asm/d/d_camera/checkNoAttention__12daTagMstop_cCFv.s"
}
#pragma pop

/* 80182D78-80182D8C 0014+00 s=1 e=0 z=0  None .text      checkNoAttention__12daTagMhint_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagMhint_c::checkNoAttention() const {
    nofralloc
#include "asm/d/d_camera/checkNoAttention__12daTagMhint_cCFv.s"
}
#pragma pop

/* 80182D8C-80182D9C 0010+00 s=1 e=0 z=0  None .text      set__4cXyzFfff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cXyz::set(f32 param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/d_camera/set__4cXyzFfff.s"
}
#pragma pop

/* 80182D9C-80182DD4 0038+00 s=1 e=0 z=0  None .text      checkEndMessage__12daTagMwait_cFv */
//	80182DAC: 804061C0 (g_dComIfG_gameInfo)
//	80182DB0: 804061C0 (g_dComIfG_gameInfo)
//	80182DC0: 80035360 (isSwitch__10dSv_info_cCFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagMwait_c::checkEndMessage() {
    nofralloc
#include "asm/d/d_camera/checkEndMessage__12daTagMwait_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8042C9C4-8042C9D0 000C+00 s=0 e=0 z=0  None .bss       @14964 */
u8 lit_14964[12];

/* 8042C9D0-8042C9E0 000C+04 s=0 e=0 z=0  None .bss       @14968 */
u8 lit_14968[12 + 4 /* padding */];
