// 
// Generated By: dol2asm
// Translation Unit: d/menu/d_menu_window
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/menu/d_menu_window.h"

// 
// Types:
// 

struct msg_class {
};

struct dMw_c {
	/* 801FA13C */ // True False
//  u8 False
void key_wait_init(u8);
	/* 801FA220 */ // True False
//  u8 False
void ring_open_init(u8);
	/* 801FA23C */ // True False
//  void False
//  u8 False
void ring_move_init(u8);
	/* 801FA240 */ // True False
//  void False
//  u8 False
void ring_close_init(u8);
	/* 801FA244 */ // True False
//  u8 False
void collect_open_init(u8);
	/* 801FA2D0 */ // True False
//  u8 False
void collect_move_init(u8);
	/* 801FA46C */ // True False
//  u8 False
void collect_close_init(u8);
	/* 801FA538 */ // True False
//  u8 False
void fmap_open_init(u8);
	/* 801FA55C */ // True False
//  void False
//  u8 False
void fmap_move_init(u8);
	/* 801FA560 */ // True False
//  void False
//  u8 False
void fmap_close_init(u8);
	/* 801FA564 */ // True False
//  u8 False
void dmap_open_init(u8);
	/* 801FA588 */ // True False
//  void False
//  u8 False
void dmap_move_init(u8);
	/* 801FA58C */ // True False
//  void False
//  u8 False
void dmap_close_init(u8);
	/* 801FA590 */ // True False
//  u8 False
void collect_save_open_init(u8);
	/* 801FA5E4 */ // True False
//  void False
//  u8 False
void collect_save_move_init(u8);
	/* 801FA5E8 */ // True False
//  u8 False
void collect_save_close_init(u8);
	/* 801FA608 */ // True False
//  u8 False
void collect_option_open_init(u8);
	/* 801FA65C */ // True False
//  void False
//  u8 False
void collect_option_move_init(u8);
	/* 801FA660 */ // True False
//  u8 False
void collect_option_close_init(u8);
	/* 801FA680 */ // True False
//  u8 False
void collect_letter_open_init(u8);
	/* 801FA6DC */ // True False
//  void False
//  u8 False
void collect_letter_move_init(u8);
	/* 801FA6E0 */ // True False
//  u8 False
void collect_letter_close_init(u8);
	/* 801FA738 */ // True False
//  u8 False
void collect_fishing_open_init(u8);
	/* 801FA794 */ // True False
//  void False
//  u8 False
void collect_fishing_move_init(u8);
	/* 801FA798 */ // True False
//  u8 False
void collect_fishing_close_init(u8);
	/* 801FA7F0 */ // True False
//  u8 False
void collect_skill_open_init(u8);
	/* 801FA84C */ // True False
//  void False
//  u8 False
void collect_skill_move_init(u8);
	/* 801FA850 */ // True False
//  u8 False
void collect_skill_close_init(u8);
	/* 801FA8A8 */ // True False
//  u8 False
void collect_insect_open_init(u8);
	/* 801FA908 */ // True False
//  void False
//  u8 False
void collect_insect_move_init(u8);
	/* 801FA90C */ // True False
//  u8 False
void collect_insect_close_init(u8);
	/* 801FA964 */ // True False
//  u8 False
void insect_open_init(u8);
	/* 801FA9E8 */ // True False
//  void False
//  u8 False
void insect_open2_init(u8);
	/* 801FA9EC */ // True False
//  void False
//  u8 False
void insect_move_init(u8);
	/* 801FA9F0 */ // True False
//  u8 False
void insect_close_init(u8);
	/* 801FAA48 */ // True False
void key_wait_proc();
	/* 801FAFDC */ // True False
void ring_open_proc();
	/* 801FB01C */ // True False
void ring_move_proc();
	/* 801FB064 */ // True False
void ring_close_proc();
	/* 801FB0B8 */ // True False
void collect_open_proc();
	/* 801FB110 */ // True False
void collect_move_proc();
	/* 801FB1A0 */ // True False
void collect_close_proc();
	/* 801FB240 */ // True False
void fmap_open_proc();
	/* 801FB298 */ // True False
void fmap_move_proc();
	/* 801FB36C */ // True False
void fmap_close_proc();
	/* 801FB3AC */ // True False
void dmap_open_proc();
	/* 801FB404 */ // True False
void dmap_move_proc();
	/* 801FB5DC */ // True False
void dmap_close_proc();
	/* 801FB61C */ // True False
void collect_save_open_proc();
	/* 801FB67C */ // True False
void collect_save_move_proc();
	/* 801FB6D8 */ // True False
void collect_save_close_proc();
	/* 801FB73C */ // True False
void collect_option_open_proc();
	/* 801FB7AC */ // True False
void collect_option_move_proc();
	/* 801FB800 */ // True False
void collect_option_close_proc();
	/* 801FB81C */ // True False
void collect_letter_open_proc();
	/* 801FB8AC */ // True False
void collect_letter_move_proc();
	/* 801FB900 */ // True False
void collect_letter_close_proc();
	/* 801FB91C */ // True False
void collect_fishing_open_proc();
	/* 801FB9AC */ // True False
void collect_fishing_move_proc();
	/* 801FBA00 */ // True False
void collect_fishing_close_proc();
	/* 801FBA1C */ // True False
void collect_skill_open_proc();
	/* 801FBAAC */ // True False
void collect_skill_move_proc();
	/* 801FBB00 */ // True False
void collect_skill_close_proc();
	/* 801FBB1C */ // True False
void collect_insect_open_proc();
	/* 801FBBAC */ // True False
void collect_insect_move_proc();
	/* 801FBC00 */ // True False
void collect_insect_close_proc();
	/* 801FBC1C */ // True False
void insect_open_proc();
	/* 801FBC78 */ // True False
void insect_open2_proc();
	/* 801FBD08 */ // True False
void insect_move_proc();
	/* 801FBD64 */ // True False
void insect_close_proc();
	/* 801FBD80 */ // True False
void dMw_capture_create();
	/* 801FBE14 */ // True False
void dMw_capture_delete();
	/* 801FBE94 */ // True False
//  u8 False
void dMw_ring_create(u8);
	/* 801FBF60 */ // True False
void dMw_ring_delete();
	/* 801FBFF8 */ // True False
void dMw_collect_create();
	/* 801FC090 */ // True False
//  bool False
void dMw_collect_delete(bool);
	/* 801FC0FC */ // True False
void dMw_fmap_create();
	/* 801FC264 */ // True False
//  bool False
void dMw_fmap_delete(bool);
	/* 801FC350 */ // True False
void dMw_dmap_create();
	/* 801FC46C */ // True False
//  bool False
void dMw_dmap_delete(bool);
	/* 801FC520 */ // True False
void dMw_save_create();
	/* 801FC5D0 */ // True False
void dMw_save_delete();
	/* 801FC668 */ // True False
void dMw_option_create();
	/* 801FC70C */ // True False
void dMw_option_delete();
	/* 801FC7BC */ // True False
void dMw_letter_create();
	/* 801FC85C */ // True False
void dMw_letter_delete();
	/* 801FC904 */ // True False
void dMw_fishing_create();
	/* 801FC9A4 */ // True False
void dMw_fishing_delete();
	/* 801FCA4C */ // True False
void dMw_skill_create();
	/* 801FCAEC */ // True False
void dMw_skill_delete();
	/* 801FCB94 */ // True False
//  u8 False
void dMw_insect_create(u8);
	/* 801FCC44 */ // True False
void dMw_insect_delete();
	/* 801FCCEC */ // True False
//  u8 False
void dMw_onButtonBit(u8);
	/* 801FCCFC */ // True False
//  u8 False
void dMw_offButtonBit(u8);
	/* 801FCD0C */ // True False
//  u8 False
void dMw_isButtonBit(u8);
	/* 801FCD24 */ // True False
void dMw_isPush_S_Button();
	/* 801FCDD8 */ // True False
void isPauseReady();
	/* 801FCE08 */ // False False
void dMw_fade_out();
	/* 801FCE78 */ // False False
void dMw_fade_in();
	/* 801FCEE8 */ // True False
void checkCStickTrigger();
	/* 801FCF84 */ // True False
void isEventCheck();
	/* 801FD094 */ // True False
void markMemSize();
	/* 801FD0D4 */ // True False
void checkMemSize();
	/* 801FD140 */ // True False
void _create();
	/* 801FD2D8 */ // True False
void _execute();
	/* 801FD450 */ // True False
void _draw();
	/* 801FD67C */ // True False
void _delete();
};

struct dMsgObject_c {
	/* 802379AC */ // False False
void setKillMessageFlag();
	/* 8023822C */ // False False
void getStatus();
};

struct dMeterMap_c {
	/* 8020D650 */ // False False
void isEnableDispMapAndMapDispSizeTypeNo();
	/* 8020D874 */ // False False
void setDispPosInsideFlg_SE_On();
	/* 8020D8BC */ // False False
void setDispPosOutsideFlg_SE_On();
};

struct dMeter2_c {
	/* 8021F6EC */ // False False
void emphasisButtonDelete();
};

struct dMeter2Info_c {
	/* 8021C9DC */ // False False
void resetWarpStatus();
};

struct dMenu_save_c {
	/* 801EF6A0 */ // False False
dMenu_save_c();
	/* 801EF7AC */ // False False
void _create();
	/* 801F0938 */ // False False
void initialize();
	/* 801F09AC */ // False False
void _open();
	/* 801F0B28 */ // False False
void _delete();
	/* 801F1048 */ // False False
void _move();
	/* 801F69FC */ // False False
void _draw2();
};

struct STControl {
	/* 80032044 */ // False False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
//  f32 False
//  f32 False
//  s16 False
//  s16 False
STControl(s16, s16, s16, s16, f32, f32, s16, s16);
	/* 80032088 */ // False False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
//  f32 False
//  f32 False
//  s16 False
//  s16 False
void setWaitParm(s16, s16, s16, s16, f32, f32, s16, s16);
	/* 8003219C */ // False False
void checkTrigger();
};

struct JKRExpHeap {
};

struct CSTControl {
};

struct dMenu_Skill_c {
	/* 801F7224 */ // False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
dMenu_Skill_c(JKRExpHeap*, STControl*, CSTControl*);
	/* 801F7718 */ // False False
void _move();
	/* 801F7950 */ // False False
void isSync();
	/* 801F7A40 */ // False False
void _open();
};

struct dMenu_Ring_c {
	/* 801E9118 */ // False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
//  u8 False
dMenu_Ring_c(JKRExpHeap*, STControl*, CSTControl*, u8);
	/* 801EAB7C */ // False False
void _create();
	/* 801EABE8 */ // False False
//  void False
void _delete();
	/* 801EABEC */ // False False
void _move();
	/* 801EB0A4 */ // False False
void isOpen();
	/* 801EB2B4 */ // False False
void isMoveEnd();
	/* 801EB3CC */ // False False
void isClose();
};

struct JKRArchive {
};

struct dMenu_Option_c {
	/* 801E1F10 */ // False False
//  JKRArchive* False
// 	 JKRArchive False
//  STControl* False
// 	 STControl False
dMenu_Option_c(JKRArchive*, STControl*);
	/* 801E2C1C */ // False False
void _delete();
	/* 801E3408 */ // False False
void _move();
	/* 801E3A7C */ // False False
void isSync();
	/* 801E3B98 */ // False False
void _open();
};

struct dMenu_Letter_c {
	/* 801DCDC0 */ // False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
dMenu_Letter_c(JKRExpHeap*, STControl*, CSTControl*);
	/* 801DD474 */ // False False
void _move();
	/* 801DD934 */ // False False
void isSync();
	/* 801DDA74 */ // False False
void _open();
};

struct dMenu_Insect_c {
	/* 801D8114 */ // False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
//  u8 False
dMenu_Insect_c(JKRExpHeap*, STControl*, CSTControl*, u8);
	/* 801D86C8 */ // False False
void _move();
	/* 801D88EC */ // False False
void isSync();
	/* 801D894C */ // False False
void _open();
};

struct dMenu_Fmap_c {
	/* 801C66E4 */ // False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
//  u8 False
//  u8 False
//  u8 False
//  f32 False
//  f32 False
//  u8 False
dMenu_Fmap_c(JKRExpHeap*, STControl*, CSTControl*, u8, u8, u8, f32, f32, u8);
	/* 801C74A4 */ // False False
//  void False
void _delete();
	/* 801C74A8 */ // False False
void _move();
	/* 801C7650 */ // False False
void _draw();
	/* 801C77F0 */ // False False
//  u8* False
// 	 u8 False
void getNextStatus(u8*);
	/* 801C7AFC */ // False False
void isSync();
	/* 801CADC4 */ // False False
void isOpen();
	/* 801CB038 */ // False False
void isClose();
	/* 801CB1DC */ // False False
void getProcess();
	/* 801CB200 */ // False False
void getRegionCursor();
	/* 801CB230 */ // False False
void getStageCursor();
	/* 801CB260 */ // False False
void getStageTransX();
	/* 801CB290 */ // False False
void getStageTransZ();
};

struct dMenu_Fishing_c {
	/* 801C4D54 */ // False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
dMenu_Fishing_c(JKRExpHeap*, STControl*, CSTControl*);
	/* 801C50B4 */ // False False
void _move();
	/* 801C5204 */ // False False
void isSync();
	/* 801C52E4 */ // False False
void _open();
};

struct dMenu_Dmap_c {
	/* 801BB498 */ // False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
//  u8 False
//  u8 False
dMenu_Dmap_c(JKRExpHeap*, STControl*, CSTControl*, u8, u8);
	/* 801BDDA4 */ // False False
void _move();
	/* 801BE328 */ // False False
void isOpen();
	/* 801BE670 */ // False False
void isClose();
	/* 801BE7E0 */ // False False
void _draw();
	/* 801BF334 */ // False False
void getNextStatus();
	/* 801BF410 */ // False False
void isSync();
};

struct dMenu_Collect_c {
	/* 801B78C0 */ // False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
dMenu_Collect_c(JKRExpHeap*, STControl*, CSTControl*);
	/* 801B7A0C */ // False False
void _create();
	/* 801B7A44 */ // False False
void _delete();
	/* 801B7A7C */ // False False
void _move();
	/* 801B7AC0 */ // False False
void draw();
};

struct dMenu_Collect2D_c {
	/* 801B5F84 */ // False False
void isKeyCheck();
	/* 801B5FAC */ // False False
//  bool False
bool isOutCheck();
};

struct dDlst_base_c {
};

struct dDlst_list_c {
	/* 80056794 */ // False False
//  dDlst_base_c**& False
// 	 dDlst_base_c** False
// 		 dDlst_base_c* False
// 			 dDlst_base_c False
//  dDlst_base_c**& False
// 	 dDlst_base_c** False
// 		 dDlst_base_c* False
// 			 dDlst_base_c False
//  dDlst_base_c* False
// 	 dDlst_base_c False
void set(dDlst_base_c**&, dDlst_base_c**&, dDlst_base_c*);
};

struct dDlst_MENU_CAPTURE_c {
	/* 801FDFCC */ // True False
void draw();
	/* 801FE2E8 */ // True False
~dDlst_MENU_CAPTURE_c();
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct JKRHeap {
	/* 802CE5CC */ // False False
void freeAll();
	/* 802CE784 */ // False False
void getTotalFreeSize();
};

// 
// Forward References:
// 

// False False
void dMw_UP_TRIGGER();
// False False
void dMw_DOWN_TRIGGER();
// False False
void dMw_LEFT_TRIGGER();
// False False
void dMw_RIGHT_TRIGGER();
// False False
void dMw_A_TRIGGER();
// False False
void dMw_B_TRIGGER();
// False False
void dMw_Z_TRIGGER();
// False False
void dMw_START_TRIGGER();
// False False
void dMw_onPauseWindow();
// False False
void dMw_offPauseWindow();
// False False
void dMw_onMenuRing();
// False False
void dMw_offMenuRing();
// True False
static void dMw_isMenuRing();
// True False
//  dMw_c* False
// 	 dMw_c False
static void dMw_Draw(dMw_c*);
// True False
//  dMw_c* False
// 	 dMw_c False
static void dMw_Execute(dMw_c*);
// True False
//  bool False
//  dMw_c* False
// 	 dMw_c False
static bool dMw_IsDelete(dMw_c*);
// True False
//  dMw_c* False
// 	 dMw_c False
static void dMw_Delete(dMw_c*);
// True False
//  msg_class* False
// 	 msg_class False
static void dMw_Create(msg_class*);

// False False
extern "C" void dMw_UP_TRIGGER__Fv();
// False False
extern "C" void dMw_DOWN_TRIGGER__Fv();
// False False
extern "C" void dMw_LEFT_TRIGGER__Fv();
// False False
extern "C" void dMw_RIGHT_TRIGGER__Fv();
// False False
extern "C" void dMw_A_TRIGGER__Fv();
// False False
extern "C" void dMw_B_TRIGGER__Fv();
// False False
extern "C" void dMw_Z_TRIGGER__Fv();
// False False
extern "C" void dMw_START_TRIGGER__Fv();
// False False
extern "C" void dMw_onPauseWindow__Fv();
// False False
extern "C" void dMw_offPauseWindow__Fv();
// False False
extern "C" void dMw_onMenuRing__Fv();
// False False
extern "C" void dMw_offMenuRing__Fv();
// True False
extern "C" static void dMw_isMenuRing__Fv();
// True False
//  u8 False
extern "C" void key_wait_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void ring_open_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void ring_move_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void ring_close_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_open_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_move_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_close_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void fmap_open_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void fmap_move_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void fmap_close_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void dmap_open_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void dmap_move_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void dmap_close_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_save_open_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void collect_save_move_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_save_close_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_option_open_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void collect_option_move_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_option_close_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_letter_open_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void collect_letter_move_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_letter_close_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_fishing_open_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void collect_fishing_move_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_fishing_close_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_skill_open_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void collect_skill_move_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_skill_close_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_insect_open_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void collect_insect_move_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void collect_insect_close_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void insect_open_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void insect_open2_init__5dMw_cFUc();
// True False
//  void False
//  u8 False
extern "C" void insect_move_init__5dMw_cFUc();
// True False
//  u8 False
extern "C" void insect_close_init__5dMw_cFUc();
// True False
extern "C" void key_wait_proc__5dMw_cFv();
// True False
extern "C" void ring_open_proc__5dMw_cFv();
// True False
extern "C" void ring_move_proc__5dMw_cFv();
// True False
extern "C" void ring_close_proc__5dMw_cFv();
// True False
extern "C" void collect_open_proc__5dMw_cFv();
// True False
extern "C" void collect_move_proc__5dMw_cFv();
// True False
extern "C" void collect_close_proc__5dMw_cFv();
// True False
extern "C" void fmap_open_proc__5dMw_cFv();
// True False
extern "C" void fmap_move_proc__5dMw_cFv();
// True False
extern "C" void fmap_close_proc__5dMw_cFv();
// True False
extern "C" void dmap_open_proc__5dMw_cFv();
// True False
extern "C" void dmap_move_proc__5dMw_cFv();
// True False
extern "C" void dmap_close_proc__5dMw_cFv();
// True False
extern "C" void collect_save_open_proc__5dMw_cFv();
// True False
extern "C" void collect_save_move_proc__5dMw_cFv();
// True False
extern "C" void collect_save_close_proc__5dMw_cFv();
// True False
extern "C" void collect_option_open_proc__5dMw_cFv();
// True False
extern "C" void collect_option_move_proc__5dMw_cFv();
// True False
extern "C" void collect_option_close_proc__5dMw_cFv();
// True False
extern "C" void collect_letter_open_proc__5dMw_cFv();
// True False
extern "C" void collect_letter_move_proc__5dMw_cFv();
// True False
extern "C" void collect_letter_close_proc__5dMw_cFv();
// True False
extern "C" void collect_fishing_open_proc__5dMw_cFv();
// True False
extern "C" void collect_fishing_move_proc__5dMw_cFv();
// True False
extern "C" void collect_fishing_close_proc__5dMw_cFv();
// True False
extern "C" void collect_skill_open_proc__5dMw_cFv();
// True False
extern "C" void collect_skill_move_proc__5dMw_cFv();
// True False
extern "C" void collect_skill_close_proc__5dMw_cFv();
// True False
extern "C" void collect_insect_open_proc__5dMw_cFv();
// True False
extern "C" void collect_insect_move_proc__5dMw_cFv();
// True False
extern "C" void collect_insect_close_proc__5dMw_cFv();
// True False
extern "C" void insect_open_proc__5dMw_cFv();
// True False
extern "C" void insect_open2_proc__5dMw_cFv();
// True False
extern "C" void insect_move_proc__5dMw_cFv();
// True False
extern "C" void insect_close_proc__5dMw_cFv();
// True False
extern "C" void dMw_capture_create__5dMw_cFv();
// True False
extern "C" void dMw_capture_delete__5dMw_cFv();
// True False
//  u8 False
extern "C" void dMw_ring_create__5dMw_cFUc();
// True False
extern "C" void dMw_ring_delete__5dMw_cFv();
// True False
extern "C" void dMw_collect_create__5dMw_cFv();
// True False
//  bool False
extern "C" void dMw_collect_delete__5dMw_cFb();
// True False
extern "C" void dMw_fmap_create__5dMw_cFv();
// True False
//  bool False
extern "C" void dMw_fmap_delete__5dMw_cFb();
// True False
extern "C" void dMw_dmap_create__5dMw_cFv();
// True False
//  bool False
extern "C" void dMw_dmap_delete__5dMw_cFb();
// True False
extern "C" void dMw_save_create__5dMw_cFv();
// True False
extern "C" void dMw_save_delete__5dMw_cFv();
// True False
extern "C" void dMw_option_create__5dMw_cFv();
// True False
extern "C" void dMw_option_delete__5dMw_cFv();
// True False
extern "C" void dMw_letter_create__5dMw_cFv();
// True False
extern "C" void dMw_letter_delete__5dMw_cFv();
// True False
extern "C" void dMw_fishing_create__5dMw_cFv();
// True False
extern "C" void dMw_fishing_delete__5dMw_cFv();
// True False
extern "C" void dMw_skill_create__5dMw_cFv();
// True False
extern "C" void dMw_skill_delete__5dMw_cFv();
// True False
//  u8 False
extern "C" void dMw_insect_create__5dMw_cFUc();
// True False
extern "C" void dMw_insect_delete__5dMw_cFv();
// True False
//  u8 False
extern "C" void dMw_onButtonBit__5dMw_cFUc();
// True False
//  u8 False
extern "C" void dMw_offButtonBit__5dMw_cFUc();
// True False
//  u8 False
extern "C" void dMw_isButtonBit__5dMw_cFUc();
// True False
extern "C" void dMw_isPush_S_Button__5dMw_cFv();
// True False
extern "C" void isPauseReady__5dMw_cFv();
// False False
extern "C" void dMw_fade_out__5dMw_cFv();
// False False
extern "C" void dMw_fade_in__5dMw_cFv();
// True False
extern "C" void checkCStickTrigger__5dMw_cFv();
// True False
extern "C" void isEventCheck__5dMw_cFv();
// True False
extern "C" void markMemSize__5dMw_cFv();
// True False
extern "C" void checkMemSize__5dMw_cFv();
// True False
extern "C" void _create__5dMw_cFv();
// True False
extern "C" void _execute__5dMw_cFv();
// True False
extern "C" void _draw__5dMw_cFv();
// True False
extern "C" void _delete__5dMw_cFv();
// True False
//  dMw_c* False
// 	 dMw_c False
extern "C" static void dMw_Draw__FP5dMw_c();
// True False
//  dMw_c* False
// 	 dMw_c False
extern "C" static void dMw_Execute__FP5dMw_c();
// True False
//  bool False
//  dMw_c* False
// 	 dMw_c False
extern "C" static bool dMw_IsDelete__FP5dMw_c();
// True False
//  dMw_c* False
// 	 dMw_c False
extern "C" static void dMw_Delete__FP5dMw_c();
// True False
//  msg_class* False
// 	 msg_class False
extern "C" static void dMw_Create__FP9msg_class();
// False False
extern "C" void __sinit_d_menu_window_cpp();
// True False
extern "C" void draw__20dDlst_MENU_CAPTURE_cFv();
// True False
extern "C" void __dt__20dDlst_MENU_CAPTURE_cFv();
extern "C" extern char const* const d_menu_d_menu_window__stringBase0;
extern "C" extern void* lit_4276[3];
extern "C" extern void* lit_4277[3];
extern "C" extern void* lit_4278[3];
extern "C" extern void* lit_4279[3];
extern "C" extern void* lit_4280[3];
extern "C" extern void* lit_4281[3];
extern "C" extern void* lit_4282[3];
extern "C" extern void* lit_4283[3];
extern "C" extern void* lit_4284[3];
extern "C" extern void* lit_4285[3];
extern "C" extern void* lit_4286[3];
extern "C" extern void* lit_4287[3];
extern "C" extern void* lit_4288[3];
extern "C" extern void* lit_4289[3];
extern "C" extern void* d_menu_d_menu_window__lit_4290[3];
extern "C" extern void* lit_4291[3];
extern "C" extern void* lit_4292[3];
extern "C" extern void* d_menu_d_menu_window__lit_4293[3];
extern "C" extern void* d_menu_d_menu_window__lit_4294[3];
extern "C" extern void* d_menu_d_menu_window__lit_4295[3];
extern "C" extern void* d_menu_d_menu_window__lit_4296[3];
extern "C" extern void* d_menu_d_menu_window__lit_4297[3];
extern "C" extern void* d_menu_d_menu_window__lit_4298[3];
extern "C" extern void* d_menu_d_menu_window__lit_4299[3];
extern "C" extern void* d_menu_d_menu_window__lit_4300[3];
extern "C" extern void* d_menu_d_menu_window__lit_4301[3];
extern "C" extern void* d_menu_d_menu_window__lit_4302[3];
extern "C" extern void* d_menu_d_menu_window__lit_4303[3];
extern "C" extern void* d_menu_d_menu_window__lit_4304[3];
extern "C" extern void* d_menu_d_menu_window__lit_4305[3];
extern "C" extern void* d_menu_d_menu_window__lit_4306[3];
extern "C" extern void* d_menu_d_menu_window__lit_4307[3];
extern "C" extern void* d_menu_d_menu_window__lit_4308[3];
extern "C" extern void* d_menu_d_menu_window__lit_4309[3];
extern "C" extern void* d_menu_d_menu_window__lit_4310[3];
extern "C" extern void* d_menu_d_menu_window__lit_4311[3];
extern "C" extern void* d_menu_d_menu_window__lit_4312[3];
extern "C" extern void* d_menu_d_menu_window__lit_4313[3];
extern "C" extern void* d_menu_d_menu_window__lit_4314[3];
extern "C" extern void* d_menu_d_menu_window__lit_4315[3];
extern "C" extern void* d_menu_d_menu_window__lit_4316[3];
extern "C" extern void* d_menu_d_menu_window__lit_4317[3];
extern "C" extern void* d_menu_d_menu_window__lit_4318[3];
extern "C" extern void* d_menu_d_menu_window__lit_4319[3];
extern "C" extern void* d_menu_d_menu_window__lit_4320[3];
extern "C" extern void* d_menu_d_menu_window__lit_4321[3];
extern "C" extern void* lit_4322[3];
extern "C" extern void* lit_4323[3];
extern "C" extern void* lit_4324[3];
extern "C" extern void* lit_4325[3];
extern "C" extern void* lit_4326[3];
extern "C" extern void* lit_4327[3];
extern "C" extern void* lit_4328[3];
extern "C" extern void* lit_4329[3];
extern "C" extern void* lit_4330[3];
extern "C" extern void* lit_4331[3];
extern "C" extern void* lit_4332[3];
extern "C" extern void* lit_4333[3];
extern "C" extern void* lit_4334[3];
extern "C" extern void* lit_4335[3];
extern "C" extern void* lit_4336[3];
extern "C" extern void* lit_4337[3];
extern "C" extern void* lit_4338[3];
extern "C" extern void* lit_4339[3];
extern "C" extern void* lit_4340[3];
extern "C" extern void* lit_4341[3];
extern "C" extern void* lit_4342[3];
extern "C" extern void* lit_4343[3];
extern "C" extern void* lit_4344[3];
extern "C" extern void* lit_4345[3];
extern "C" extern void* g_profile_MENUWINDOW[10 + 6 /* padding */];
extern "C" extern void* __vt__20dDlst_MENU_CAPTURE_c[4 + 1 /* padding */];

// 
// External References:
// 

// False False
//  JKRHeap* False
// 	 JKRHeap False
void mDoExt_setCurrentHeap(JKRHeap*);
// False False
void mDoExt_getCurrentHeap();
// False False
void mDoExt_removeMesgFont();
// False False
void fopOvlpM_IsDoingReq();
// False False
//  void* False
// 	 void False
void fopMsgM_setStageLayer(void*);
// False False
//  u8 False
void dComIfGp_setHeapLockFlag(u8);
// False False
//  int False
void dComIfGp_offHeapLockFlag(int);
// False False
void dCam_getBody();
// False False
void dMeter2Info_isItemOpenCheck();
// False False
//  void False
void dMeter2Info_set2DVibration();
// False False
//  void False
void dMeter2Info_set2DVibrationM();
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
extern "C" void OSReport_Error();
// False False
//  JKRHeap* False
// 	 JKRHeap False
extern "C" void mDoExt_setCurrentHeap__FP7JKRHeap();
// False False
extern "C" void mDoExt_getCurrentHeap__Fv();
// False False
extern "C" void mDoExt_removeMesgFont__Fv();
// False False
extern "C" void fopOvlpM_IsDoingReq__Fv();
// False False
//  void* False
// 	 void False
extern "C" void fopMsgM_setStageLayer__FPv();
// False False
//  u8 False
extern "C" void dComIfGp_setHeapLockFlag__FUc();
// False False
//  int False
extern "C" void dComIfGp_offHeapLockFlag__Fi();
// False False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
//  f32 False
//  f32 False
//  s16 False
//  s16 False
extern "C" void __ct__9STControlFssssffss();
// False False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
//  f32 False
//  f32 False
//  s16 False
//  s16 False
extern "C" void setWaitParm__9STControlFssssffss();
// False False
extern "C" void checkTrigger__9STControlFv();
// False False
//  dDlst_base_c**& False
// 	 dDlst_base_c** False
// 		 dDlst_base_c* False
// 			 dDlst_base_c False
//  dDlst_base_c**& False
// 	 dDlst_base_c** False
// 		 dDlst_base_c* False
// 			 dDlst_base_c False
//  dDlst_base_c* False
// 	 dDlst_base_c False
extern "C" void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c();
// False False
extern "C" void dCam_getBody__Fv();
// False False
extern "C" void isKeyCheck__17dMenu_Collect2D_cFv();
// False False
//  bool False
extern "C" bool isOutCheck__17dMenu_Collect2D_cFv();
// False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
extern "C" void __ct__15dMenu_Collect_cFP10JKRExpHeapP9STControlP10CSTControl();
// False False
extern "C" void _create__15dMenu_Collect_cFv();
// False False
extern "C" void _delete__15dMenu_Collect_cFv();
// False False
extern "C" void _move__15dMenu_Collect_cFv();
// False False
extern "C" void draw__15dMenu_Collect_cFv();
// False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
//  u8 False
//  u8 False
extern "C" void __ct__12dMenu_Dmap_cFP10JKRExpHeapP9STControlP10CSTControlUcUc();
// False False
extern "C" void _move__12dMenu_Dmap_cFv();
// False False
extern "C" void isOpen__12dMenu_Dmap_cFv();
// False False
extern "C" void isClose__12dMenu_Dmap_cFv();
// False False
extern "C" void _draw__12dMenu_Dmap_cFv();
// False False
extern "C" void getNextStatus__12dMenu_Dmap_cFv();
// False False
extern "C" void isSync__12dMenu_Dmap_cFv();
// False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
extern "C" void __ct__15dMenu_Fishing_cFP10JKRExpHeapP9STControlP10CSTControl();
// False False
extern "C" void _move__15dMenu_Fishing_cFv();
// False False
extern "C" void isSync__15dMenu_Fishing_cFv();
// False False
extern "C" void _open__15dMenu_Fishing_cFv();
// False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
//  u8 False
//  u8 False
//  u8 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void __ct__12dMenu_Fmap_cFP10JKRExpHeapP9STControlP10CSTControlUcUcUcffUc();
// False False
//  void False
extern "C" void _delete__12dMenu_Fmap_cFv();
// False False
extern "C" void _move__12dMenu_Fmap_cFv();
// False False
extern "C" void _draw__12dMenu_Fmap_cFv();
// False False
//  u8* False
// 	 u8 False
extern "C" void getNextStatus__12dMenu_Fmap_cFPUc();
// False False
extern "C" void isSync__12dMenu_Fmap_cFv();
// False False
extern "C" void isOpen__12dMenu_Fmap_cFv();
// False False
extern "C" void isClose__12dMenu_Fmap_cFv();
// False False
extern "C" void getProcess__12dMenu_Fmap_cFv();
// False False
extern "C" void getRegionCursor__12dMenu_Fmap_cFv();
// False False
extern "C" void getStageCursor__12dMenu_Fmap_cFv();
// False False
extern "C" void getStageTransX__12dMenu_Fmap_cFv();
// False False
extern "C" void getStageTransZ__12dMenu_Fmap_cFv();
// False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
//  u8 False
extern "C" void __ct__14dMenu_Insect_cFP10JKRExpHeapP9STControlP10CSTControlUc();
// False False
extern "C" void _move__14dMenu_Insect_cFv();
// False False
extern "C" void isSync__14dMenu_Insect_cFv();
// False False
extern "C" void _open__14dMenu_Insect_cFv();
// False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
extern "C" void __ct__14dMenu_Letter_cFP10JKRExpHeapP9STControlP10CSTControl();
// False False
extern "C" void _move__14dMenu_Letter_cFv();
// False False
extern "C" void isSync__14dMenu_Letter_cFv();
// False False
extern "C" void _open__14dMenu_Letter_cFv();
// False False
//  JKRArchive* False
// 	 JKRArchive False
//  STControl* False
// 	 STControl False
extern "C" void __ct__14dMenu_Option_cFP10JKRArchiveP9STControl();
// False False
extern "C" void _delete__14dMenu_Option_cFv();
// False False
extern "C" void _move__14dMenu_Option_cFv();
// False False
extern "C" void isSync__14dMenu_Option_cFv();
// False False
extern "C" void _open__14dMenu_Option_cFv();
// False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
//  u8 False
extern "C" void __ct__12dMenu_Ring_cFP10JKRExpHeapP9STControlP10CSTControlUc();
// False False
extern "C" void _create__12dMenu_Ring_cFv();
// False False
//  void False
extern "C" void _delete__12dMenu_Ring_cFv();
// False False
extern "C" void _move__12dMenu_Ring_cFv();
// False False
extern "C" void isOpen__12dMenu_Ring_cFv();
// False False
extern "C" void isMoveEnd__12dMenu_Ring_cFv();
// False False
extern "C" void isClose__12dMenu_Ring_cFv();
// False False
extern "C" void __ct__12dMenu_save_cFv();
// False False
extern "C" void _create__12dMenu_save_cFv();
// False False
extern "C" void initialize__12dMenu_save_cFv();
// False False
extern "C" void _open__12dMenu_save_cFv();
// False False
extern "C" void _delete__12dMenu_save_cFv();
// False False
extern "C" void _move__12dMenu_save_cFv();
// False False
extern "C" void _draw2__12dMenu_save_cFv();
// False False
//  JKRExpHeap* False
// 	 JKRExpHeap False
//  STControl* False
// 	 STControl False
//  CSTControl* False
// 	 CSTControl False
extern "C" void __ct__13dMenu_Skill_cFP10JKRExpHeapP9STControlP10CSTControl();
// False False
extern "C" void _move__13dMenu_Skill_cFv();
// False False
extern "C" void isSync__13dMenu_Skill_cFv();
// False False
extern "C" void _open__13dMenu_Skill_cFv();
// False False
extern "C" void isEnableDispMapAndMapDispSizeTypeNo__11dMeterMap_cFv();
// False False
extern "C" void setDispPosInsideFlg_SE_On__11dMeterMap_cFv();
// False False
extern "C" void setDispPosOutsideFlg_SE_On__11dMeterMap_cFv();
// False False
extern "C" void resetWarpStatus__13dMeter2Info_cFv();
// False False
extern "C" void dMeter2Info_isItemOpenCheck__Fv();
// False False
//  void False
extern "C" void dMeter2Info_set2DVibration__Fv();
// False False
//  void False
extern "C" void dMeter2Info_set2DVibrationM__Fv();
// False False
extern "C" void emphasisButtonDelete__9dMeter2_cFv();
// False False
extern "C" void setKillMessageFlag__12dMsgObject_cFv();
// False False
extern "C" void getStatus__12dMsgObject_cFv();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void freeAll__7JKRHeapFv();
// False False
extern "C" void getTotalFreeSize__7JKRHeapFv();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void GXSetVtxDesc();
// False False
extern "C" void GXClearVtxDesc();
// False False
extern "C" void GXSetVtxAttrFmt();
// False False
extern "C" void GXSetTexCoordGen2();
// False False
extern "C" void GXSetNumTexGens();
// False False
extern "C" void GXPixModeSync();
// False False
extern "C" void GXBegin();
// False False
extern "C" void GXSetCullMode();
// False False
extern "C" void GXSetTexCopySrc();
// False False
extern "C" void GXSetTexCopyDst();
// False False
extern "C" void GXCopyTex();
// False False
extern "C" void GXSetNumChans();
// False False
extern "C" void GXInitTexObj();
// False False
extern "C" void GXInitTexObjLOD();
// False False
extern "C" void GXLoadTexObj();
// False False
extern "C" void GXSetTevColorIn();
// False False
extern "C" void GXSetTevAlphaIn();
// False False
extern "C" void GXSetTevColorOp();
// False False
extern "C" void GXSetTevAlphaOp();
// False False
extern "C" void GXSetTevColor();
// False False
extern "C" void GXSetAlphaCompare();
// False False
extern "C" void GXSetTevOrder();
// False False
extern "C" void GXSetNumTevStages();
// False False
extern "C" void GXSetFog();
// False False
extern "C" void GXSetFogRangeAdj();
// False False
extern "C" void GXSetBlendMode();
// False False
extern "C" void GXSetZMode();
// False False
extern "C" void GXSetZCompLoc();
// False False
extern "C" void GXSetDither();
// False False
extern "C" void GXLoadPosMtxImm();
// False False
extern "C" void GXSetCurrentMtx();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 g_mDoMtx_identity[48 + 24 /* padding */];
extern "C" extern void* g_fopMsg_Method[5 + 1 /* padding */];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern void* __vt__10CSTControl[4];
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_mwHIO[304];
extern "C" extern u8 g_mwDHIO[520];
extern "C" extern u8 g_fmapHIO[1188];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern u8 g_clearColor[4];
extern "C" extern u32 g_blackColor;
extern "C" extern u8 mFader__13mDoGph_gInf_c[4];
extern "C" extern u8 mFrameBufferTimg__13mDoGph_gInf_c[4];
extern "C" extern u8 mFrameBufferTex__13mDoGph_gInf_c[4];
extern "C" extern u8 struct_80450BE4[4];
extern "C" extern u8 sManager__10JFWDisplay[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* 801F9F84-801F9F98 0014+00 s=3 e=2 z=0  None .text      dMw_UP_TRIGGER__Fv                                           */
//	801F9F84: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801F9F88: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_UP_TRIGGER() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_UP_TRIGGER__Fv.s"
}
#pragma pop


/* 801F9F98-801F9FAC 0014+00 s=1 e=2 z=0  None .text      dMw_DOWN_TRIGGER__Fv                                         */
//	801F9F98: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801F9F9C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_DOWN_TRIGGER() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_DOWN_TRIGGER__Fv.s"
}
#pragma pop


/* 801F9FAC-801F9FF4 0048+00 s=1 e=6 z=0  None .text      dMw_LEFT_TRIGGER__Fv                                         */
//	801F9FB8: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801F9FBC: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801F9FCC: 801F9F84 (dMw_UP_TRIGGER__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_LEFT_TRIGGER() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_LEFT_TRIGGER__Fv.s"
}
#pragma pop


/* 801F9FF4-801FA03C 0048+00 s=1 e=6 z=0  None .text      dMw_RIGHT_TRIGGER__Fv                                        */
//	801FA000: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FA004: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FA014: 801F9F84 (dMw_UP_TRIGGER__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_RIGHT_TRIGGER() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_RIGHT_TRIGGER__Fv.s"
}
#pragma pop


/* 801FA03C-801FA050 0014+00 s=1 e=7 z=0  None .text      dMw_A_TRIGGER__Fv                                            */
//	801FA03C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FA040: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_A_TRIGGER() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_A_TRIGGER__Fv.s"
}
#pragma pop


/* 801FA050-801FA064 0014+00 s=1 e=8 z=0  None .text      dMw_B_TRIGGER__Fv                                            */
//	801FA050: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FA054: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_B_TRIGGER() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_B_TRIGGER__Fv.s"
}
#pragma pop


/* 801FA064-801FA078 0014+00 s=0 e=5 z=0  None .text      dMw_Z_TRIGGER__Fv                                            */
//	801FA064: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FA068: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_Z_TRIGGER() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_Z_TRIGGER__Fv.s"
}
#pragma pop


/* 801FA078-801FA08C 0014+00 s=2 e=1 z=0  None .text      dMw_START_TRIGGER__Fv                                        */
//	801FA078: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FA07C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_START_TRIGGER() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_START_TRIGGER__Fv.s"
}
#pragma pop


/* 801FA08C-801FA0AC 0020+00 s=0 e=0 z=1  None .text      dMw_onPauseWindow__Fv                                        */
//	801FA08C: 80430188 (g_meter2_info)
//	801FA090: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_onPauseWindow() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_onPauseWindow__Fv.s"
}
#pragma pop


/* 801FA0AC-801FA0CC 0020+00 s=0 e=0 z=1  None .text      dMw_offPauseWindow__Fv                                       */
//	801FA0AC: 80430188 (g_meter2_info)
//	801FA0B0: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_offPauseWindow() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_offPauseWindow__Fv.s"
}
#pragma pop


/* 801FA0CC-801FA0F0 0024+00 s=0 e=0 z=4  None .text      dMw_onMenuRing__Fv                                           */
//	801FA0CC: 80430188 (g_meter2_info)
//	801FA0D0: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_onMenuRing() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_onMenuRing__Fv.s"
}
#pragma pop


/* 801FA0F0-801FA114 0024+00 s=0 e=0 z=2  None .text      dMw_offMenuRing__Fv                                          */
//	801FA0F0: 80430188 (g_meter2_info)
//	801FA0F4: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_offMenuRing() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_offMenuRing__Fv.s"
}
#pragma pop


/* 801FA114-801FA13C 0028+00 s=1 e=0 z=0  None .text      dMw_isMenuRing__Fv                                           */
//	801FA114: 80430188 (g_meter2_info)
//	801FA118: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm static void dMw_isMenuRing() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_isMenuRing__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803BE8F8-803BE904 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803BE904-803BE910 000C+00 s=0 e=0 z=0  None .data      @4276                                                        */
SECTION_DATA void* lit_4276[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)key_wait_init__5dMw_cFUc,
};

/* 803BE910-803BE91C 000C+00 s=0 e=0 z=0  None .data      @4277                                                        */
SECTION_DATA void* lit_4277[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)ring_open_init__5dMw_cFUc,
};

/* 803BE91C-803BE928 000C+00 s=0 e=0 z=0  None .data      @4278                                                        */
SECTION_DATA void* lit_4278[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)ring_move_init__5dMw_cFUc,
};

/* 803BE928-803BE934 000C+00 s=0 e=0 z=0  None .data      @4279                                                        */
SECTION_DATA void* lit_4279[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)ring_close_init__5dMw_cFUc,
};

/* 803BE934-803BE940 000C+00 s=0 e=0 z=0  None .data      @4280                                                        */
SECTION_DATA void* lit_4280[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_open_init__5dMw_cFUc,
};

/* 803BE940-803BE94C 000C+00 s=0 e=0 z=0  None .data      @4281                                                        */
SECTION_DATA void* lit_4281[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_move_init__5dMw_cFUc,
};

/* 803BE94C-803BE958 000C+00 s=0 e=0 z=0  None .data      @4282                                                        */
SECTION_DATA void* lit_4282[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_close_init__5dMw_cFUc,
};

/* 803BE958-803BE964 000C+00 s=0 e=0 z=0  None .data      @4283                                                        */
SECTION_DATA void* lit_4283[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fmap_open_init__5dMw_cFUc,
};

/* 803BE964-803BE970 000C+00 s=0 e=0 z=0  None .data      @4284                                                        */
SECTION_DATA void* lit_4284[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fmap_move_init__5dMw_cFUc,
};

/* 803BE970-803BE97C 000C+00 s=0 e=0 z=0  None .data      @4285                                                        */
SECTION_DATA void* lit_4285[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fmap_close_init__5dMw_cFUc,
};

/* 803BE97C-803BE988 000C+00 s=0 e=0 z=0  None .data      @4286                                                        */
SECTION_DATA void* lit_4286[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)dmap_open_init__5dMw_cFUc,
};

/* 803BE988-803BE994 000C+00 s=0 e=0 z=0  None .data      @4287                                                        */
SECTION_DATA void* lit_4287[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)dmap_move_init__5dMw_cFUc,
};

/* 803BE994-803BE9A0 000C+00 s=0 e=0 z=0  None .data      @4288                                                        */
SECTION_DATA void* lit_4288[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)dmap_close_init__5dMw_cFUc,
};

/* 803BE9A0-803BE9AC 000C+00 s=0 e=0 z=0  None .data      @4289                                                        */
SECTION_DATA void* lit_4289[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_save_open_init__5dMw_cFUc,
};

/* 803BE9AC-803BE9B8 000C+00 s=0 e=0 z=0  None .data      @4290                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4290[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_save_move_init__5dMw_cFUc,
};

/* 803BE9B8-803BE9C4 000C+00 s=0 e=0 z=0  None .data      @4291                                                        */
SECTION_DATA void* lit_4291[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_save_close_init__5dMw_cFUc,
};

/* 803BE9C4-803BE9D0 000C+00 s=0 e=0 z=0  None .data      @4292                                                        */
SECTION_DATA void* lit_4292[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_option_open_init__5dMw_cFUc,
};

/* 803BE9D0-803BE9DC 000C+00 s=0 e=0 z=0  None .data      @4293                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4293[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_option_move_init__5dMw_cFUc,
};

/* 803BE9DC-803BE9E8 000C+00 s=0 e=0 z=0  None .data      @4294                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4294[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_option_close_init__5dMw_cFUc,
};

/* 803BE9E8-803BE9F4 000C+00 s=0 e=0 z=0  None .data      @4295                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4295[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_letter_open_init__5dMw_cFUc,
};

/* 803BE9F4-803BEA00 000C+00 s=0 e=0 z=0  None .data      @4296                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4296[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_letter_move_init__5dMw_cFUc,
};

/* 803BEA00-803BEA0C 000C+00 s=0 e=0 z=0  None .data      @4297                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4297[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_letter_close_init__5dMw_cFUc,
};

/* 803BEA0C-803BEA18 000C+00 s=0 e=0 z=0  None .data      @4298                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4298[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_fishing_open_init__5dMw_cFUc,
};

/* 803BEA18-803BEA24 000C+00 s=0 e=0 z=0  None .data      @4299                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4299[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_fishing_move_init__5dMw_cFUc,
};

/* 803BEA24-803BEA30 000C+00 s=0 e=0 z=0  None .data      @4300                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4300[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_fishing_close_init__5dMw_cFUc,
};

/* 803BEA30-803BEA3C 000C+00 s=0 e=0 z=0  None .data      @4301                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4301[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_skill_open_init__5dMw_cFUc,
};

/* 803BEA3C-803BEA48 000C+00 s=0 e=0 z=0  None .data      @4302                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4302[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_skill_move_init__5dMw_cFUc,
};

/* 803BEA48-803BEA54 000C+00 s=0 e=0 z=0  None .data      @4303                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4303[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_skill_close_init__5dMw_cFUc,
};

/* 803BEA54-803BEA60 000C+00 s=0 e=0 z=0  None .data      @4304                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4304[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_insect_open_init__5dMw_cFUc,
};

/* 803BEA60-803BEA6C 000C+00 s=0 e=0 z=0  None .data      @4305                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4305[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_insect_move_init__5dMw_cFUc,
};

/* 803BEA6C-803BEA78 000C+00 s=0 e=0 z=0  None .data      @4306                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4306[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_insect_close_init__5dMw_cFUc,
};

/* 803BEA78-803BEA84 000C+00 s=0 e=0 z=0  None .data      @4307                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4307[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)insect_open_init__5dMw_cFUc,
};

/* 803BEA84-803BEA90 000C+00 s=0 e=0 z=0  None .data      @4308                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4308[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)insect_open2_init__5dMw_cFUc,
};

/* 803BEA90-803BEA9C 000C+00 s=0 e=0 z=0  None .data      @4309                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4309[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)insect_move_init__5dMw_cFUc,
};

/* 803BEA9C-803BEAA8 000C+00 s=0 e=0 z=0  None .data      @4310                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4310[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)insect_close_init__5dMw_cFUc,
};

/* 803BEAA8-803BEC4C 01A4+00 s=1 e=0 z=0  None .data      init_proc                                                    */
SECTION_DATA static u8 init_proc[420] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 803BEC4C-803BEC58 000C+00 s=0 e=0 z=0  None .data      @4311                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4311[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)key_wait_proc__5dMw_cFv,
};

/* 803BEC58-803BEC64 000C+00 s=0 e=0 z=0  None .data      @4312                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4312[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)ring_open_proc__5dMw_cFv,
};

/* 803BEC64-803BEC70 000C+00 s=0 e=0 z=0  None .data      @4313                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4313[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)ring_move_proc__5dMw_cFv,
};

/* 803BEC70-803BEC7C 000C+00 s=0 e=0 z=0  None .data      @4314                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4314[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)ring_close_proc__5dMw_cFv,
};

/* 803BEC7C-803BEC88 000C+00 s=0 e=0 z=0  None .data      @4315                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4315[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_open_proc__5dMw_cFv,
};

/* 803BEC88-803BEC94 000C+00 s=0 e=0 z=0  None .data      @4316                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4316[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_move_proc__5dMw_cFv,
};

/* 803BEC94-803BECA0 000C+00 s=0 e=0 z=0  None .data      @4317                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4317[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_close_proc__5dMw_cFv,
};

/* 803BECA0-803BECAC 000C+00 s=0 e=0 z=0  None .data      @4318                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4318[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fmap_open_proc__5dMw_cFv,
};

/* 803BECAC-803BECB8 000C+00 s=0 e=0 z=0  None .data      @4319                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4319[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fmap_move_proc__5dMw_cFv,
};

/* 803BECB8-803BECC4 000C+00 s=0 e=0 z=0  None .data      @4320                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4320[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fmap_close_proc__5dMw_cFv,
};

/* 803BECC4-803BECD0 000C+00 s=0 e=0 z=0  None .data      @4321                                                        */
SECTION_DATA void* d_menu_d_menu_window__lit_4321[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)dmap_open_proc__5dMw_cFv,
};

/* 803BECD0-803BECDC 000C+00 s=0 e=0 z=0  None .data      @4322                                                        */
SECTION_DATA void* lit_4322[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)dmap_move_proc__5dMw_cFv,
};

/* 803BECDC-803BECE8 000C+00 s=0 e=0 z=0  None .data      @4323                                                        */
SECTION_DATA void* lit_4323[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)dmap_close_proc__5dMw_cFv,
};

/* 803BECE8-803BECF4 000C+00 s=0 e=0 z=0  None .data      @4324                                                        */
SECTION_DATA void* lit_4324[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_save_open_proc__5dMw_cFv,
};

/* 803BECF4-803BED00 000C+00 s=0 e=0 z=0  None .data      @4325                                                        */
SECTION_DATA void* lit_4325[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_save_move_proc__5dMw_cFv,
};

/* 803BED00-803BED0C 000C+00 s=0 e=0 z=0  None .data      @4326                                                        */
SECTION_DATA void* lit_4326[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_save_close_proc__5dMw_cFv,
};

/* 803BED0C-803BED18 000C+00 s=0 e=0 z=0  None .data      @4327                                                        */
SECTION_DATA void* lit_4327[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_option_open_proc__5dMw_cFv,
};

/* 803BED18-803BED24 000C+00 s=0 e=0 z=0  None .data      @4328                                                        */
SECTION_DATA void* lit_4328[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_option_move_proc__5dMw_cFv,
};

/* 803BED24-803BED30 000C+00 s=0 e=0 z=0  None .data      @4329                                                        */
SECTION_DATA void* lit_4329[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_option_close_proc__5dMw_cFv,
};

/* 803BED30-803BED3C 000C+00 s=0 e=0 z=0  None .data      @4330                                                        */
SECTION_DATA void* lit_4330[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_letter_open_proc__5dMw_cFv,
};

/* 803BED3C-803BED48 000C+00 s=0 e=0 z=0  None .data      @4331                                                        */
SECTION_DATA void* lit_4331[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_letter_move_proc__5dMw_cFv,
};

/* 803BED48-803BED54 000C+00 s=0 e=0 z=0  None .data      @4332                                                        */
SECTION_DATA void* lit_4332[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_letter_close_proc__5dMw_cFv,
};

/* 803BED54-803BED60 000C+00 s=0 e=0 z=0  None .data      @4333                                                        */
SECTION_DATA void* lit_4333[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_fishing_open_proc__5dMw_cFv,
};

/* 803BED60-803BED6C 000C+00 s=0 e=0 z=0  None .data      @4334                                                        */
SECTION_DATA void* lit_4334[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_fishing_move_proc__5dMw_cFv,
};

/* 803BED6C-803BED78 000C+00 s=0 e=0 z=0  None .data      @4335                                                        */
SECTION_DATA void* lit_4335[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_fishing_close_proc__5dMw_cFv,
};

/* 803BED78-803BED84 000C+00 s=0 e=0 z=0  None .data      @4336                                                        */
SECTION_DATA void* lit_4336[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_skill_open_proc__5dMw_cFv,
};

/* 803BED84-803BED90 000C+00 s=0 e=0 z=0  None .data      @4337                                                        */
SECTION_DATA void* lit_4337[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_skill_move_proc__5dMw_cFv,
};

/* 803BED90-803BED9C 000C+00 s=0 e=0 z=0  None .data      @4338                                                        */
SECTION_DATA void* lit_4338[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_skill_close_proc__5dMw_cFv,
};

/* 803BED9C-803BEDA8 000C+00 s=0 e=0 z=0  None .data      @4339                                                        */
SECTION_DATA void* lit_4339[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_insect_open_proc__5dMw_cFv,
};

/* 803BEDA8-803BEDB4 000C+00 s=0 e=0 z=0  None .data      @4340                                                        */
SECTION_DATA void* lit_4340[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_insect_move_proc__5dMw_cFv,
};

/* 803BEDB4-803BEDC0 000C+00 s=0 e=0 z=0  None .data      @4341                                                        */
SECTION_DATA void* lit_4341[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)collect_insect_close_proc__5dMw_cFv,
};

/* 803BEDC0-803BEDCC 000C+00 s=0 e=0 z=0  None .data      @4342                                                        */
SECTION_DATA void* lit_4342[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)insect_open_proc__5dMw_cFv,
};

/* 803BEDCC-803BEDD8 000C+00 s=0 e=0 z=0  None .data      @4343                                                        */
SECTION_DATA void* lit_4343[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)insect_open2_proc__5dMw_cFv,
};

/* 803BEDD8-803BEDE4 000C+00 s=0 e=0 z=0  None .data      @4344                                                        */
SECTION_DATA void* lit_4344[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)insect_move_proc__5dMw_cFv,
};

/* 803BEDE4-803BEDF0 000C+00 s=0 e=0 z=0  None .data      @4345                                                        */
SECTION_DATA void* lit_4345[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)insect_close_proc__5dMw_cFv,
};

/* 803BEDF0-803BEF94 01A4+00 s=1 e=0 z=0  None .data      move_proc                                                    */
SECTION_DATA static u8 move_proc[420] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 803BEF94-803BF014 0080+00 s=1 e=0 z=0  None .data      @4360                                                        */
SECTION_DATA static void* lit_4360[32] = {
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0x94),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0x60),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0x84),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0x74),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xA0),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)key_wait_init__5dMw_cFUc)+0xB0),
};

/* 801FA13C-801FA220 00E4+00 s=2 e=0 z=0  None .text      key_wait_init__5dMw_cFUc                                     */
//	801FA158: 80430188 (g_meter2_info)
//	801FA15C: 80430188 (g_meter2_info)
//	801FA170: 801FBE14 (dMw_capture_delete__5dMw_cFv)
//	801FA184: 803BEF94 (lit_4360)
//	801FA188: 803BEF94 (lit_4360)
//	801FA19C: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FA1A8: 801FC090 (dMw_collect_delete__5dMw_cFb)
//	801FA1B8: 801FC46C (dMw_dmap_delete__5dMw_cFb)
//	801FA1C8: 801FC264 (dMw_fmap_delete__5dMw_cFb)
//	801FA1D4: 801FBF60 (dMw_ring_delete__5dMw_cFv)
//	801FA1DC: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FA1E4: 801FC5D0 (dMw_save_delete__5dMw_cFv)
//	801FA1EC: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FA1F4: 801FCC44 (dMw_insect_delete__5dMw_cFv)
//	801FA1FC: 802CE5CC (freeAll__7JKRHeapFv)
//	801FA204: 8002E188 (dComIfGp_offHeapLockFlag__Fi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::key_wait_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/key_wait_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA220-801FA23C 001C+00 s=1 e=0 z=0  None .text      ring_open_init__5dMw_cFUc                                    */
//	801FA220: 80430188 (g_meter2_info)
//	801FA224: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::ring_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/ring_open_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA23C-801FA240 0004+00 s=1 e=0 z=0  None .text      ring_move_init__5dMw_cFUc                                    */
// True False
//  void False
//  u8 False
void dMw_c::ring_move_init(u8 param_0) {
	/* empty function */
}


/* 801FA240-801FA244 0004+00 s=1 e=0 z=0  None .text      ring_close_init__5dMw_cFUc                                   */
// True False
//  void False
//  u8 False
void dMw_c::ring_close_init(u8 param_0) {
	/* empty function */
}


/* ############################################################################################## */
/* 804544C0-804544C4 0004+00 s=2 e=0 z=0  None .sdata2    @4152                                                        */
SECTION_SDATA2 static u8 lit_4152[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 804544C4-804544C8 0004+00 s=10 e=0 z=0  None .sdata2    @4386                                                        */
SECTION_SDATA2 static f32 lit_4386 = 1.0f;

/* 804544C8-804544CC 0004+00 s=10 e=0 z=0  None .sdata2    @4387                                                        */
SECTION_SDATA2 static f32 lit_4387 = -1.0f;

/* 801FA244-801FA2D0 008C+00 s=1 e=0 z=0  None .text      collect_open_init__5dMw_cFUc                                 */
//	801FA260: 80430188 (g_meter2_info)
//	801FA264: 80430188 (g_meter2_info)
//	801FA27C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FA290: 804544C4 (lit_4386)
//	801FA298: 804544C8 (lit_4387)
//	801FA2A4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FA2A8: 801FCE08 (dMw_fade_out__5dMw_cFv)
//	801FA2B0: 801FBD80 (dMw_capture_create__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_open_init__5dMw_cFUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 803BF014-803BF080 006C+00 s=1 e=0 z=0  None .data      @4418                                                        */
SECTION_DATA static void* lit_4418[27] = {
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x3C),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x54),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x88),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0xBC),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0xF0),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x124),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x188),
	(void*)(((char*)collect_move_init__5dMw_cFUc)+0x158),
};

/* 801FA2D0-801FA46C 019C+00 s=2 e=0 z=0  None .text      collect_move_init__5dMw_cFUc                                 */
//	801FA2F4: 803BF014 (lit_4418)
//	801FA2F8: 803BF014 (lit_4418)
//	801FA30C: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FA314: 8002E0E0 (dComIfGp_setHeapLockFlag__FUc)
//	801FA31C: 801FBFF8 (dMw_collect_create__5dMw_cFv)
//	801FA324: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FA32C: 801FC5D0 (dMw_save_delete__5dMw_cFv)
//	801FA338: 80430188 (g_meter2_info)
//	801FA33C: 80430188 (g_meter2_info)
//	801FA350: 801FBFF8 (dMw_collect_create__5dMw_cFv)
//	801FA358: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FA360: 801FC70C (dMw_option_delete__5dMw_cFv)
//	801FA36C: 80430188 (g_meter2_info)
//	801FA370: 80430188 (g_meter2_info)
//	801FA384: 801FBFF8 (dMw_collect_create__5dMw_cFv)
//	801FA38C: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FA394: 801FC85C (dMw_letter_delete__5dMw_cFv)
//	801FA3A0: 80430188 (g_meter2_info)
//	801FA3A4: 80430188 (g_meter2_info)
//	801FA3B8: 801FBFF8 (dMw_collect_create__5dMw_cFv)
//	801FA3C0: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FA3C8: 801FC9A4 (dMw_fishing_delete__5dMw_cFv)
//	801FA3D4: 80430188 (g_meter2_info)
//	801FA3D8: 80430188 (g_meter2_info)
//	801FA3EC: 801FBFF8 (dMw_collect_create__5dMw_cFv)
//	801FA3F4: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FA3FC: 801FCAEC (dMw_skill_delete__5dMw_cFv)
//	801FA408: 80430188 (g_meter2_info)
//	801FA40C: 80430188 (g_meter2_info)
//	801FA420: 801FBFF8 (dMw_collect_create__5dMw_cFv)
//	801FA428: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FA430: 801FCC44 (dMw_insect_delete__5dMw_cFv)
//	801FA43C: 80430188 (g_meter2_info)
//	801FA440: 80430188 (g_meter2_info)
//	801FA454: 801FBFF8 (dMw_collect_create__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_move_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_move_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA46C-801FA538 00CC+00 s=1 e=0 z=0  None .text      collect_close_init__5dMw_cFUc                                */
//	801FA4BC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FA4D0: 804544C4 (lit_4386)
//	801FA4D8: 804544C8 (lit_4387)
//	801FA4E4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FA4F4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FA508: 804544C4 (lit_4386)
//	801FA510: 804544C8 (lit_4387)
//	801FA51C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FA520: 8021E9D4 (dMeter2Info_set2DVibrationM__Fv)
//	801FA524: 801FCE08 (dMw_fade_out__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_close_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_close_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA538-801FA55C 0024+00 s=1 e=0 z=0  None .text      fmap_open_init__5dMw_cFUc                                    */
//	801FA538: 80430188 (g_meter2_info)
//	801FA53C: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::fmap_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/fmap_open_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA55C-801FA560 0004+00 s=1 e=0 z=0  None .text      fmap_move_init__5dMw_cFUc                                    */
// True False
//  void False
//  u8 False
void dMw_c::fmap_move_init(u8 param_0) {
	/* empty function */
}


/* 801FA560-801FA564 0004+00 s=1 e=0 z=0  None .text      fmap_close_init__5dMw_cFUc                                   */
// True False
//  void False
//  u8 False
void dMw_c::fmap_close_init(u8 param_0) {
	/* empty function */
}


/* 801FA564-801FA588 0024+00 s=1 e=0 z=0  None .text      dmap_open_init__5dMw_cFUc                                    */
//	801FA564: 80430188 (g_meter2_info)
//	801FA568: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::dmap_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dmap_open_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA588-801FA58C 0004+00 s=1 e=0 z=0  None .text      dmap_move_init__5dMw_cFUc                                    */
// True False
//  void False
//  u8 False
void dMw_c::dmap_move_init(u8 param_0) {
	/* empty function */
}


/* 801FA58C-801FA590 0004+00 s=1 e=0 z=0  None .text      dmap_close_init__5dMw_cFUc                                   */
// True False
//  void False
//  u8 False
void dMw_c::dmap_close_init(u8 param_0) {
	/* empty function */
}


/* 801FA590-801FA5E4 0054+00 s=1 e=0 z=0  None .text      collect_save_open_init__5dMw_cFUc                            */
//	801FA5AC: 80430188 (g_meter2_info)
//	801FA5B0: 80430188 (g_meter2_info)
//	801FA5C4: 801FC090 (dMw_collect_delete__5dMw_cFb)
//	801FA5CC: 801FC520 (dMw_save_create__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_save_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_save_open_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA5E4-801FA5E8 0004+00 s=1 e=0 z=0  None .text      collect_save_move_init__5dMw_cFUc                            */
// True False
//  void False
//  u8 False
void dMw_c::collect_save_move_init(u8 param_0) {
	/* empty function */
}


/* 801FA5E8-801FA608 0020+00 s=1 e=0 z=0  None .text      collect_save_close_init__5dMw_cFUc                           */
//	801FA5F4: 801FCE08 (dMw_fade_out__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_save_close_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_save_close_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA608-801FA65C 0054+00 s=1 e=0 z=0  None .text      collect_option_open_init__5dMw_cFUc                          */
//	801FA624: 80430188 (g_meter2_info)
//	801FA628: 80430188 (g_meter2_info)
//	801FA63C: 801FC090 (dMw_collect_delete__5dMw_cFb)
//	801FA644: 801FC668 (dMw_option_create__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_option_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_option_open_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA65C-801FA660 0004+00 s=1 e=0 z=0  None .text      collect_option_move_init__5dMw_cFUc                          */
// True False
//  void False
//  u8 False
void dMw_c::collect_option_move_init(u8 param_0) {
	/* empty function */
}


/* 801FA660-801FA680 0020+00 s=1 e=0 z=0  None .text      collect_option_close_init__5dMw_cFUc                         */
//	801FA66C: 801FCE08 (dMw_fade_out__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_option_close_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_option_close_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA680-801FA6DC 005C+00 s=1 e=0 z=0  None .text      collect_letter_open_init__5dMw_cFUc                          */
//	801FA69C: 80430188 (g_meter2_info)
//	801FA6A0: 80430188 (g_meter2_info)
//	801FA6BC: 801FC090 (dMw_collect_delete__5dMw_cFb)
//	801FA6C4: 801FC7BC (dMw_letter_create__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_letter_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_letter_open_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA6DC-801FA6E0 0004+00 s=1 e=0 z=0  None .text      collect_letter_move_init__5dMw_cFUc                          */
// True False
//  void False
//  u8 False
void dMw_c::collect_letter_move_init(u8 param_0) {
	/* empty function */
}


/* 801FA6E0-801FA738 0058+00 s=1 e=0 z=0  None .text      collect_letter_close_init__5dMw_cFUc                         */
//	801FA6F4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FA708: 804544C4 (lit_4386)
//	801FA710: 804544C8 (lit_4387)
//	801FA71C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FA720: 8021E9D0 (dMeter2Info_set2DVibration__Fv)
//	801FA724: 801FCE08 (dMw_fade_out__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_letter_close_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_letter_close_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA738-801FA794 005C+00 s=1 e=0 z=0  None .text      collect_fishing_open_init__5dMw_cFUc                         */
//	801FA754: 80430188 (g_meter2_info)
//	801FA758: 80430188 (g_meter2_info)
//	801FA774: 801FC090 (dMw_collect_delete__5dMw_cFb)
//	801FA77C: 801FC904 (dMw_fishing_create__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_fishing_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_fishing_open_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA794-801FA798 0004+00 s=1 e=0 z=0  None .text      collect_fishing_move_init__5dMw_cFUc                         */
// True False
//  void False
//  u8 False
void dMw_c::collect_fishing_move_init(u8 param_0) {
	/* empty function */
}


/* 801FA798-801FA7F0 0058+00 s=1 e=0 z=0  None .text      collect_fishing_close_init__5dMw_cFUc                        */
//	801FA7AC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FA7C0: 804544C4 (lit_4386)
//	801FA7C8: 804544C8 (lit_4387)
//	801FA7D4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FA7D8: 8021E9D0 (dMeter2Info_set2DVibration__Fv)
//	801FA7DC: 801FCE08 (dMw_fade_out__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_fishing_close_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_fishing_close_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA7F0-801FA84C 005C+00 s=1 e=0 z=0  None .text      collect_skill_open_init__5dMw_cFUc                           */
//	801FA80C: 80430188 (g_meter2_info)
//	801FA810: 80430188 (g_meter2_info)
//	801FA82C: 801FC090 (dMw_collect_delete__5dMw_cFb)
//	801FA834: 801FCA4C (dMw_skill_create__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_skill_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_skill_open_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA84C-801FA850 0004+00 s=1 e=0 z=0  None .text      collect_skill_move_init__5dMw_cFUc                           */
// True False
//  void False
//  u8 False
void dMw_c::collect_skill_move_init(u8 param_0) {
	/* empty function */
}


/* 801FA850-801FA8A8 0058+00 s=1 e=0 z=0  None .text      collect_skill_close_init__5dMw_cFUc                          */
//	801FA864: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FA878: 804544C4 (lit_4386)
//	801FA880: 804544C8 (lit_4387)
//	801FA88C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FA890: 8021E9D0 (dMeter2Info_set2DVibration__Fv)
//	801FA894: 801FCE08 (dMw_fade_out__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_skill_close_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_skill_close_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA8A8-801FA908 0060+00 s=1 e=0 z=0  None .text      collect_insect_open_init__5dMw_cFUc                          */
//	801FA8C4: 80430188 (g_meter2_info)
//	801FA8C8: 80430188 (g_meter2_info)
//	801FA8E4: 801FC090 (dMw_collect_delete__5dMw_cFb)
//	801FA8F0: 801FCB94 (dMw_insect_create__5dMw_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_insect_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_insect_open_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA908-801FA90C 0004+00 s=1 e=0 z=0  None .text      collect_insect_move_init__5dMw_cFUc                          */
// True False
//  void False
//  u8 False
void dMw_c::collect_insect_move_init(u8 param_0) {
	/* empty function */
}


/* 801FA90C-801FA964 0058+00 s=1 e=0 z=0  None .text      collect_insect_close_init__5dMw_cFUc                         */
//	801FA920: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FA934: 804544C4 (lit_4386)
//	801FA93C: 804544C8 (lit_4387)
//	801FA948: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FA94C: 8021E9D0 (dMeter2Info_set2DVibration__Fv)
//	801FA950: 801FCE08 (dMw_fade_out__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::collect_insect_close_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_insect_close_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA964-801FA9E8 0084+00 s=1 e=0 z=0  None .text      insect_open_init__5dMw_cFUc                                  */
//	801FA980: 80430188 (g_meter2_info)
//	801FA984: 80430188 (g_meter2_info)
//	801FA99C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FA9B0: 804544C4 (lit_4386)
//	801FA9B8: 804544C8 (lit_4387)
//	801FA9C4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FA9C8: 801FCE08 (dMw_fade_out__5dMw_cFv)
//	801FA9D0: 801FBD80 (dMw_capture_create__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::insect_open_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/insect_open_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FA9E8-801FA9EC 0004+00 s=1 e=0 z=0  None .text      insect_open2_init__5dMw_cFUc                                 */
// True False
//  void False
//  u8 False
void dMw_c::insect_open2_init(u8 param_0) {
	/* empty function */
}


/* 801FA9EC-801FA9F0 0004+00 s=1 e=0 z=0  None .text      insect_move_init__5dMw_cFUc                                  */
// True False
//  void False
//  u8 False
void dMw_c::insect_move_init(u8 param_0) {
	/* empty function */
}


/* 801FA9F0-801FAA48 0058+00 s=1 e=0 z=0  None .text      insect_close_init__5dMw_cFUc                                 */
//	801FAA04: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FAA18: 804544C4 (lit_4386)
//	801FAA20: 804544C8 (lit_4387)
//	801FAA2C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FAA30: 8021E9D0 (dMeter2Info_set2DVibration__Fv)
//	801FAA34: 801FCE08 (dMw_fade_out__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::insect_close_init(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/insect_close_init__5dMw_cFUc.s"
}
#pragma pop


/* 801FAA48-801FAFDC 0594+00 s=1 e=0 z=0  None .text      key_wait_proc__5dMw_cFv                                      */
//	801FAA58: 803621DC (_savegpr_29)
//	801FAA98: 801FBE94 (dMw_ring_create__5dMw_cFUc)
//	801FAAA4: 801FBE94 (dMw_ring_create__5dMw_cFUc)
//	801FAAB0: 801FBE94 (dMw_ring_create__5dMw_cFUc)
//	801FAABC: 801FBE94 (dMw_ring_create__5dMw_cFUc)
//	801FAACC: 801FBE94 (dMw_ring_create__5dMw_cFUc)
//	801FAAE0: 80450BC8 (mFader__13mDoGph_gInf_c)
//	801FAAF0: 804061C0 (g_dComIfG_gameInfo)
//	801FAAF4: 804061C0 (g_dComIfG_gameInfo)
//	801FAB0C: 804061C0 (g_dComIfG_gameInfo)
//	801FAB10: 804061C0 (g_dComIfG_gameInfo)
//	801FAB20: 80181640 (dCam_getBody__Fv)
//	801FAB30: 80181640 (dCam_getBody__Fv)
//	801FAB40: 804061C0 (g_dComIfG_gameInfo)
//	801FAB44: 804061C0 (g_dComIfG_gameInfo)
//	801FAB70: 801FCDD8 (isPauseReady__5dMw_cFv)
//	801FAB7C: 8001E5A8 (fopOvlpM_IsDoingReq__Fv)
//	801FAB88: 80450BE6 (struct_80450BE4)
//	801FAB94: 804061C0 (g_dComIfG_gameInfo)
//	801FAB98: 804061C0 (g_dComIfG_gameInfo)
//	801FABB8: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FABBC: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FABD4: 80430188 (g_meter2_info)
//	801FABD8: 80430188 (g_meter2_info)
//	801FABEC: 801FCF84 (isEventCheck__5dMw_cFv)
//	801FAC04: 80430188 (g_meter2_info)
//	801FAC08: 80430188 (g_meter2_info)
//	801FAC18: 802379AC (setKillMessageFlag__12dMsgObject_cFv)
//	801FAC28: 80430188 (g_meter2_info)
//	801FAC2C: 80430188 (g_meter2_info)
//	801FAC34: 8021F6EC (emphasisButtonDelete__9dMeter2_cFv)
//	801FAC3C: 8002E0E0 (dComIfGp_setHeapLockFlag__FUc)
//	801FAC54: 801FA078 (dMw_START_TRIGGER__Fv)
//	801FAC60: 801FA03C (dMw_A_TRIGGER__Fv)
//	801FAC6C: 80430188 (g_meter2_info)
//	801FAC70: 80430188 (g_meter2_info)
//	801FAC88: 80430188 (g_meter2_info)
//	801FAC8C: 80430188 (g_meter2_info)
//	801FAC9C: 804061C0 (g_dComIfG_gameInfo)
//	801FACA0: 804061C0 (g_dComIfG_gameInfo)
//	801FACB0: 802379AC (setKillMessageFlag__12dMsgObject_cFv)
//	801FACC0: 80430188 (g_meter2_info)
//	801FACC4: 80430188 (g_meter2_info)
//	801FACCC: 8021F6EC (emphasisButtonDelete__9dMeter2_cFv)
//	801FACD4: 8002E0E0 (dComIfGp_setHeapLockFlag__FUc)
//	801FACE4: 80430188 (g_meter2_info)
//	801FACE8: 80430188 (g_meter2_info)
//	801FAD30: 8042FC60 (g_fmapHIO)
//	801FAD34: 8042FC60 (g_fmapHIO)
//	801FAD44: 802379AC (setKillMessageFlag__12dMsgObject_cFv)
//	801FAD54: 80430188 (g_meter2_info)
//	801FAD58: 80430188 (g_meter2_info)
//	801FAD60: 8021F6EC (emphasisButtonDelete__9dMeter2_cFv)
//	801FAD64: 804061C0 (g_dComIfG_gameInfo)
//	801FAD68: 804061C0 (g_dComIfG_gameInfo)
//	801FAE58: 8002E0E0 (dComIfGp_setHeapLockFlag__FUc)
//	801FAE68: 801FC0FC (dMw_fmap_create__5dMw_cFv)
//	801FAEA4: 8002E0E0 (dComIfGp_setHeapLockFlag__FUc)
//	801FAEB4: 801FC350 (dMw_dmap_create__5dMw_cFv)
//	801FAEBC: 801F9F84 (dMw_UP_TRIGGER__Fv)
//	801FAEC8: 801F9F98 (dMw_DOWN_TRIGGER__Fv)
//	801FAED4: 801F9FAC (dMw_LEFT_TRIGGER__Fv)
//	801FAEE0: 801F9FF4 (dMw_RIGHT_TRIGGER__Fv)
//	801FAEEC: 80430188 (g_meter2_info)
//	801FAEF0: 80430188 (g_meter2_info)
//	801FAF0C: 80430188 (g_meter2_info)
//	801FAF10: 80430188 (g_meter2_info)
//	801FAF34: 8021E688 (dMeter2Info_isItemOpenCheck__Fv)
//	801FAF40: 804061C0 (g_dComIfG_gameInfo)
//	801FAF44: 804061C0 (g_dComIfG_gameInfo)
//	801FAF54: 802379AC (setKillMessageFlag__12dMsgObject_cFv)
//	801FAF64: 80430188 (g_meter2_info)
//	801FAF68: 80430188 (g_meter2_info)
//	801FAF70: 8021F6EC (emphasisButtonDelete__9dMeter2_cFv)
//	801FAF74: 801F9F98 (dMw_DOWN_TRIGGER__Fv)
//	801FAF90: 801FBE94 (dMw_ring_create__5dMw_cFUc)
//	801FAFA8: 801FBE94 (dMw_ring_create__5dMw_cFUc)
//	801FAFC0: 8002E0E0 (dComIfGp_setHeapLockFlag__FUc)
//	801FAFC8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::key_wait_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/key_wait_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FAFDC-801FB01C 0040+00 s=1 e=0 z=0  None .text      ring_open_proc__5dMw_cFv                                     */
//	801FAFF4: 801EB0A4 (isOpen__12dMenu_Ring_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::ring_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/ring_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB01C-801FB064 0048+00 s=1 e=0 z=0  None .text      ring_move_proc__5dMw_cFv                                     */
//	801FB034: 801EABEC (_move__12dMenu_Ring_cFv)
//	801FB03C: 801EB2B4 (isMoveEnd__12dMenu_Ring_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::ring_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/ring_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB064-801FB0B8 0054+00 s=1 e=0 z=0  None .text      ring_close_proc__5dMw_cFv                                    */
//	801FB07C: 801EB3CC (isClose__12dMenu_Ring_cFv)
//	801FB088: 80430188 (g_meter2_info)
//	801FB08C: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::ring_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/ring_close_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB0B8-801FB110 0058+00 s=1 e=0 z=0  None .text      collect_open_proc__5dMw_cFv                                  */
//	801FB0E0: 8021E9D4 (dMeter2Info_set2DVibrationM__Fv)
//	801FB0E4: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB110-801FB1A0 0090+00 s=1 e=0 z=0  None .text      collect_move_proc__5dMw_cFv                                  */
//	801FB144: 801FCD24 (dMw_isPush_S_Button__5dMw_cFv)
//	801FB158: 801B5F84 (isKeyCheck__17dMenu_Collect2D_cFv)
//	801FB16C: 801B5FAC (isOutCheck__17dMenu_Collect2D_cFv)
//	801FB188: 801B7A7C (_move__15dMenu_Collect_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB1A0-801FB240 00A0+00 s=1 e=0 z=0  None .text      collect_close_proc__5dMw_cFv                                 */
//	801FB1A0: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_close_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB240-801FB298 0058+00 s=1 e=0 z=0  None .text      fmap_open_proc__5dMw_cFv                                     */
//	801FB268: 8021E9D4 (dMeter2Info_set2DVibrationM__Fv)
//	801FB270: 801CADC4 (isOpen__12dMenu_Fmap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::fmap_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/fmap_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB298-801FB36C 00D4+00 s=1 e=0 z=0  None .text      fmap_move_proc__5dMw_cFv                                     */
//	801FB2B0: 801C74A8 (_move__12dMenu_Fmap_cFv)
//	801FB2B4: 80450BC8 (mFader__13mDoGph_gInf_c)
//	801FB2CC: 801C77F0 (getNextStatus__12dMenu_Fmap_cFPUc)
//	801FB2D4: 8042FC60 (g_fmapHIO)
//	801FB2D8: 8042FC60 (g_fmapHIO)
//	801FB2F8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FB30C: 804544C4 (lit_4386)
//	801FB314: 804544C8 (lit_4387)
//	801FB320: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FB324: 80430188 (g_meter2_info)
//	801FB328: 80430188 (g_meter2_info)
//	801FB344: 8020D874 (setDispPosInsideFlg_SE_On__11dMeterMap_cFv)
//	801FB354: 8020D8BC (setDispPosOutsideFlg_SE_On__11dMeterMap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::fmap_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/fmap_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB36C-801FB3AC 0040+00 s=1 e=0 z=0  None .text      fmap_close_proc__5dMw_cFv                                    */
//	801FB384: 801CB038 (isClose__12dMenu_Fmap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::fmap_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/fmap_close_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB3AC-801FB404 0058+00 s=1 e=0 z=0  None .text      dmap_open_proc__5dMw_cFv                                     */
//	801FB3D4: 8021E9D4 (dMeter2Info_set2DVibrationM__Fv)
//	801FB3DC: 801BE328 (isOpen__12dMenu_Dmap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dmap_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/dmap_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB404-801FB5DC 01D8+00 s=1 e=0 z=0  None .text      dmap_move_proc__5dMw_cFv                                     */
//	801FB41C: 801BF334 (getNextStatus__12dMenu_Dmap_cFv)
//	801FB42C: 8020D650 (isEnableDispMapAndMapDispSizeTypeNo__11dMeterMap_cFv)
//	801FB43C: 80430188 (g_meter2_info)
//	801FB440: 80430188 (g_meter2_info)
//	801FB44C: 8020D874 (setDispPosInsideFlg_SE_On__11dMeterMap_cFv)
//	801FB458: 80430188 (g_meter2_info)
//	801FB45C: 80430188 (g_meter2_info)
//	801FB468: 8020D8BC (setDispPosOutsideFlg_SE_On__11dMeterMap_cFv)
//	801FB470: 80430188 (g_meter2_info)
//	801FB474: 80430188 (g_meter2_info)
//	801FB498: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FB4AC: 804544C4 (lit_4386)
//	801FB4B4: 804544C8 (lit_4387)
//	801FB4C0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FB4D4: 80430188 (g_meter2_info)
//	801FB4D8: 80430188 (g_meter2_info)
//	801FB4F4: 8020D8BC (setDispPosOutsideFlg_SE_On__11dMeterMap_cFv)
//	801FB50C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FB520: 804544C4 (lit_4386)
//	801FB528: 804544C8 (lit_4387)
//	801FB534: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FB544: 8020D650 (isEnableDispMapAndMapDispSizeTypeNo__11dMeterMap_cFv)
//	801FB554: 80430188 (g_meter2_info)
//	801FB558: 80430188 (g_meter2_info)
//	801FB568: 80430188 (g_meter2_info)
//	801FB56C: 80430188 (g_meter2_info)
//	801FB590: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801FB5A4: 804544C4 (lit_4386)
//	801FB5AC: 804544C8 (lit_4387)
//	801FB5B8: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	801FB5C4: 801BDDA4 (_move__12dMenu_Dmap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dmap_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/dmap_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB5DC-801FB61C 0040+00 s=1 e=0 z=0  None .text      dmap_close_proc__5dMw_cFv                                    */
//	801FB5F4: 801BE670 (isClose__12dMenu_Dmap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dmap_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/dmap_close_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB61C-801FB67C 0060+00 s=1 e=0 z=0  None .text      collect_save_open_proc__5dMw_cFv                             */
//	801FB640: 801F09AC (_open__12dMenu_save_cFv)
//	801FB64C: 801FCE78 (dMw_fade_in__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_save_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_save_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB67C-801FB6D8 005C+00 s=1 e=0 z=0  None .text      collect_save_move_proc__5dMw_cFv                             */
//	801FB6A0: 801F1048 (_move__12dMenu_save_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_save_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_save_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB6D8-801FB73C 0064+00 s=1 e=0 z=0  None .text      collect_save_close_proc__5dMw_cFv                            */
//	801FB6EC: 80450BC8 (mFader__13mDoGph_gInf_c)
//	801FB700: 801F1048 (_move__12dMenu_save_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_save_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_save_close_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB73C-801FB7AC 0070+00 s=1 e=0 z=0  None .text      collect_option_open_proc__5dMw_cFv                           */
//	801FB760: 801E3B98 (_open__14dMenu_Option_cFv)
//	801FB76C: 801FCE78 (dMw_fade_in__5dMw_cFv)
//	801FB780: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_option_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_option_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB7AC-801FB800 0054+00 s=1 e=0 z=0  None .text      collect_option_move_proc__5dMw_cFv                           */
//	801FB7D0: 801E3408 (_move__14dMenu_Option_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_option_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_option_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB800-801FB81C 001C+00 s=1 e=0 z=0  None .text      collect_option_close_proc__5dMw_cFv                          */
//	801FB800: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_option_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_option_close_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB81C-801FB8AC 0090+00 s=1 e=0 z=0  None .text      collect_letter_open_proc__5dMw_cFv                           */
//	801FB840: 801DDA74 (_open__14dMenu_Letter_cFv)
//	801FB854: 801DD934 (isSync__14dMenu_Letter_cFv)
//	801FB860: 801FCE78 (dMw_fade_in__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_letter_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_letter_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB8AC-801FB900 0054+00 s=1 e=0 z=0  None .text      collect_letter_move_proc__5dMw_cFv                           */
//	801FB8D0: 801DD474 (_move__14dMenu_Letter_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_letter_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_letter_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB900-801FB91C 001C+00 s=1 e=0 z=0  None .text      collect_letter_close_proc__5dMw_cFv                          */
//	801FB900: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_letter_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_letter_close_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB91C-801FB9AC 0090+00 s=1 e=0 z=0  None .text      collect_fishing_open_proc__5dMw_cFv                          */
//	801FB940: 801C52E4 (_open__15dMenu_Fishing_cFv)
//	801FB954: 801C5204 (isSync__15dMenu_Fishing_cFv)
//	801FB960: 801FCE78 (dMw_fade_in__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_fishing_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_fishing_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FB9AC-801FBA00 0054+00 s=1 e=0 z=0  None .text      collect_fishing_move_proc__5dMw_cFv                          */
//	801FB9D0: 801C50B4 (_move__15dMenu_Fishing_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_fishing_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_fishing_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBA00-801FBA1C 001C+00 s=1 e=0 z=0  None .text      collect_fishing_close_proc__5dMw_cFv                         */
//	801FBA00: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_fishing_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_fishing_close_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBA1C-801FBAAC 0090+00 s=1 e=0 z=0  None .text      collect_skill_open_proc__5dMw_cFv                            */
//	801FBA40: 801F7A40 (_open__13dMenu_Skill_cFv)
//	801FBA54: 801F7950 (isSync__13dMenu_Skill_cFv)
//	801FBA60: 801FCE78 (dMw_fade_in__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_skill_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_skill_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBAAC-801FBB00 0054+00 s=1 e=0 z=0  None .text      collect_skill_move_proc__5dMw_cFv                            */
//	801FBAD0: 801F7718 (_move__13dMenu_Skill_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_skill_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_skill_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBB00-801FBB1C 001C+00 s=1 e=0 z=0  None .text      collect_skill_close_proc__5dMw_cFv                           */
//	801FBB00: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_skill_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_skill_close_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBB1C-801FBBAC 0090+00 s=1 e=0 z=0  None .text      collect_insect_open_proc__5dMw_cFv                           */
//	801FBB40: 801D894C (_open__14dMenu_Insect_cFv)
//	801FBB54: 801D88EC (isSync__14dMenu_Insect_cFv)
//	801FBB60: 801FCE78 (dMw_fade_in__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_insect_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_insect_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBBAC-801FBC00 0054+00 s=1 e=0 z=0  None .text      collect_insect_move_proc__5dMw_cFv                           */
//	801FBBD0: 801D86C8 (_move__14dMenu_Insect_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_insect_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_insect_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBC00-801FBC1C 001C+00 s=1 e=0 z=0  None .text      collect_insect_close_proc__5dMw_cFv                          */
//	801FBC00: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::collect_insect_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/collect_insect_close_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBC1C-801FBC78 005C+00 s=1 e=0 z=0  None .text      insect_open_proc__5dMw_cFv                                   */
//	801FBC30: 80450BC8 (mFader__13mDoGph_gInf_c)
//	801FBC4C: 8002E0E0 (dComIfGp_setHeapLockFlag__FUc)
//	801FBC58: 801FCB94 (dMw_insect_create__5dMw_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::insect_open_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/insect_open_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBC78-801FBD08 0090+00 s=1 e=0 z=0  None .text      insect_open2_proc__5dMw_cFv                                  */
//	801FBC9C: 801D894C (_open__14dMenu_Insect_cFv)
//	801FBCB0: 801D88EC (isSync__14dMenu_Insect_cFv)
//	801FBCBC: 801FCE78 (dMw_fade_in__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::insect_open2_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/insect_open2_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBD08-801FBD64 005C+00 s=1 e=0 z=0  None .text      insect_move_proc__5dMw_cFv                                   */
//	801FBD34: 801D86C8 (_move__14dMenu_Insect_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::insect_move_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/insect_move_proc__5dMw_cFv.s"
}
#pragma pop


/* 801FBD64-801FBD80 001C+00 s=1 e=0 z=0  None .text      insect_close_proc__5dMw_cFv                                  */
//	801FBD64: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::insect_close_proc() {
	nofralloc
#include "asm/d/menu/d_menu_window/insect_close_proc__5dMw_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803BF080-803BF094 0014+00 s=1 e=0 z=0  None .data      l_dMw_Method                                                 */
SECTION_DATA static void* l_dMw_Method[5] = {
	(void*)dMw_Create__FP9msg_class,
	(void*)dMw_Delete__FP5dMw_c,
	(void*)dMw_Execute__FP5dMw_c,
	(void*)dMw_IsDelete__FP5dMw_c,
	(void*)dMw_Draw__FP5dMw_c,
};

/* 803BF094-803BF0D4 0028+18 s=0 e=0 z=1  None .data      g_profile_MENUWINDOW                                         */
SECTION_DATA void* g_profile_MENUWINDOW[10 + 6 /* padding */] = {
	(void*)0xFFFFFFFD,
	(void*)0x000CFFFD,
	(void*)0x03140000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000158,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopMsg_Method,
	(void*)0x02FF0000,
	(void*)&l_dMw_Method,
	/* padding */
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
};

/* 803BF0D4-803BF0E8 0010+04 s=11 e=0 z=0  None .data      __vt__20dDlst_MENU_CAPTURE_c                                 */
SECTION_DATA void* __vt__20dDlst_MENU_CAPTURE_c[4 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)draw__20dDlst_MENU_CAPTURE_cFv,
	(void*)__dt__20dDlst_MENU_CAPTURE_cFv,
	/* padding */
	NULL,
};

/* 801FBD80-801FBE14 0094+00 s=2 e=0 z=0  None .text      dMw_capture_create__5dMw_cFv                                 */
//	801FBD94: 804061C0 (g_dComIfG_gameInfo)
//	801FBD98: 804061C0 (g_dComIfG_gameInfo)
//	801FBDB8: 802CEC4C (__nw__FUl)
//	801FBDC4: 803A6F88 (__vt__12dDlst_base_c)
//	801FBDC8: 803A6F88 (__vt__12dDlst_base_c)
//	801FBDD0: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FBDD4: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_capture_create() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_capture_create__5dMw_cFv.s"
}
#pragma pop


/* 801FBE14-801FBE94 0080+00 s=2 e=0 z=0  None .text      dMw_capture_delete__5dMw_cFv                                 */
//	801FBE2C: 804061C0 (g_dComIfG_gameInfo)
//	801FBE30: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_capture_delete() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_capture_delete__5dMw_cFv.s"
}
#pragma pop


/* 801FBE94-801FBF60 00CC+00 s=1 e=0 z=0  None .text      dMw_ring_create__5dMw_cFUc                                   */
//	801FBEB0: 801FD094 (markMemSize__5dMw_cFv)
//	801FBEB8: 8002E0E0 (dComIfGp_setHeapLockFlag__FUc)
//	801FBEC0: 802CEC4C (__nw__FUl)
//	801FBEDC: 801E9118 (__ct__12dMenu_Ring_cFP10JKRExpHeapP9STControlP10CSTControlUc)
//	801FBEEC: 801EAB7C (_create__12dMenu_Ring_cFv)
//	801FBF00: 802CEC4C (__nw__FUl)
//	801FBF0C: 803A6F88 (__vt__12dDlst_base_c)
//	801FBF10: 803A6F88 (__vt__12dDlst_base_c)
//	801FBF18: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FBF1C: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::dMw_ring_create(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_ring_create__5dMw_cFUc.s"
}
#pragma pop


/* 801FBF60-801FBFF8 0098+00 s=2 e=0 z=0  None .text      dMw_ring_delete__5dMw_cFv                                    */
//	801FBF80: 801EABE8 (_delete__12dMenu_Ring_cFv)
//	801FBFDC: 801FD0D4 (checkMemSize__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_ring_delete() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_ring_delete__5dMw_cFv.s"
}
#pragma pop


/* 801FBFF8-801FC090 0098+00 s=1 e=0 z=0  None .text      dMw_collect_create__5dMw_cFv                                 */
//	801FC00C: 801FD094 (markMemSize__5dMw_cFv)
//	801FC014: 802CEC4C (__nw__FUl)
//	801FC02C: 801B78C0 (__ct__15dMenu_Collect_cFP10JKRExpHeapP9STControlP10CSTControl)
//	801FC03C: 801B7A0C (_create__15dMenu_Collect_cFv)
//	801FC040: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FC044: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FC05C: 801FCCEC (dMw_onButtonBit__5dMw_cFUc)
//	801FC078: 801FCCEC (dMw_onButtonBit__5dMw_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_collect_create() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_collect_create__5dMw_cFv.s"
}
#pragma pop


/* 801FC090-801FC0FC 006C+00 s=8 e=0 z=0  None .text      dMw_collect_delete__5dMw_cFb                                 */
//	801FC0B0: 801B7A44 (_delete__15dMenu_Collect_cFv)
//	801FC0E0: 801FD0D4 (checkMemSize__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  bool False
asm void dMw_c::dMw_collect_delete(bool param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_collect_delete__5dMw_cFb.s"
}
#pragma pop


/* 801FC0FC-801FC264 0168+00 s=1 e=0 z=0  None .text      dMw_fmap_create__5dMw_cFv                                    */
//	801FC114: 801FD094 (markMemSize__5dMw_cFv)
//	801FC11C: 8002E0E0 (dComIfGp_setHeapLockFlag__FUc)
//	801FC124: 80430188 (g_meter2_info)
//	801FC128: 80430188 (g_meter2_info)
//	801FC1AC: 802CEC4C (__nw__FUl)
//	801FC1DC: 801C66E4 (__ct__12dMenu_Fmap_cFP10JKRExpHeapP9STControlP10CSTControlUcUcUcffUc)
//	801FC1F8: 802CEC4C (__nw__FUl)
//	801FC204: 803A6F88 (__vt__12dDlst_base_c)
//	801FC208: 803A6F88 (__vt__12dDlst_base_c)
//	801FC210: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FC214: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FC240: 80430188 (g_meter2_info)
//	801FC244: 80430188 (g_meter2_info)
//	801FC248: 8021C9DC (resetWarpStatus__13dMeter2Info_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_fmap_create() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_fmap_create__5dMw_cFv.s"
}
#pragma pop


/* 801FC264-801FC350 00EC+00 s=2 e=0 z=0  None .text      dMw_fmap_delete__5dMw_cFb                                    */
//	801FC284: 801C7AFC (isSync__12dMenu_Fmap_cFv)
//	801FC29C: 801CB1DC (getProcess__12dMenu_Fmap_cFv)
//	801FC2A8: 801CB200 (getRegionCursor__12dMenu_Fmap_cFv)
//	801FC2B4: 801CB230 (getStageCursor__12dMenu_Fmap_cFv)
//	801FC2C0: 801CB260 (getStageTransX__12dMenu_Fmap_cFv)
//	801FC2CC: 801CB290 (getStageTransZ__12dMenu_Fmap_cFv)
//	801FC2D8: 801C74A4 (_delete__12dMenu_Fmap_cFv)
//	801FC334: 801FD0D4 (checkMemSize__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  bool False
asm void dMw_c::dMw_fmap_delete(bool param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_fmap_delete__5dMw_cFb.s"
}
#pragma pop


/* 801FC350-801FC46C 011C+00 s=1 e=0 z=0  None .text      dMw_dmap_create__5dMw_cFv                                    */
//	801FC368: 801FD094 (markMemSize__5dMw_cFv)
//	801FC370: 8002E0E0 (dComIfGp_setHeapLockFlag__FUc)
//	801FC384: 802CEC4C (__nw__FUl)
//	801FC390: 803A6F88 (__vt__12dDlst_base_c)
//	801FC394: 803A6F88 (__vt__12dDlst_base_c)
//	801FC39C: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FC3A0: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FC3D0: 80430188 (g_meter2_info)
//	801FC3D4: 80430188 (g_meter2_info)
//	801FC41C: 802CEC4C (__nw__FUl)
//	801FC43C: 801BB498 (__ct__12dMenu_Dmap_cFP10JKRExpHeapP9STControlP10CSTControlUcUc)
//	801FC448: 80430188 (g_meter2_info)
//	801FC44C: 80430188 (g_meter2_info)
//	801FC450: 8021C9DC (resetWarpStatus__13dMeter2Info_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_dmap_create() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_dmap_create__5dMw_cFv.s"
}
#pragma pop


/* 801FC46C-801FC520 00B4+00 s=2 e=0 z=0  None .text      dMw_dmap_delete__5dMw_cFb                                    */
//	801FC48C: 801BF410 (isSync__12dMenu_Dmap_cFv)
//	801FC504: 801FD0D4 (checkMemSize__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  bool False
asm void dMw_c::dMw_dmap_delete(bool param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_dmap_delete__5dMw_cFb.s"
}
#pragma pop


/* 801FC520-801FC5D0 00B0+00 s=1 e=0 z=0  None .text      dMw_save_create__5dMw_cFv                                    */
//	801FC534: 801FD094 (markMemSize__5dMw_cFv)
//	801FC53C: 802CEC4C (__nw__FUl)
//	801FC548: 801EF6A0 (__ct__12dMenu_save_cFv)
//	801FC564: 801EF7AC (_create__12dMenu_save_cFv)
//	801FC56C: 801F0938 (initialize__12dMenu_save_cFv)
//	801FC580: 802CEC4C (__nw__FUl)
//	801FC58C: 803A6F88 (__vt__12dDlst_base_c)
//	801FC590: 803A6F88 (__vt__12dDlst_base_c)
//	801FC598: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FC59C: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_save_create() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_save_create__5dMw_cFv.s"
}
#pragma pop


/* 801FC5D0-801FC668 0098+00 s=3 e=0 z=0  None .text      dMw_save_delete__5dMw_cFv                                    */
//	801FC5F0: 801F0B28 (_delete__12dMenu_save_cFv)
//	801FC64C: 801FD0D4 (checkMemSize__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_save_delete() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_save_delete__5dMw_cFv.s"
}
#pragma pop


/* 801FC668-801FC70C 00A4+00 s=1 e=0 z=0  None .text      dMw_option_create__5dMw_cFv                                  */
//	801FC67C: 801FD094 (markMemSize__5dMw_cFv)
//	801FC684: 802CEC4C (__nw__FUl)
//	801FC690: 804061C0 (g_dComIfG_gameInfo)
//	801FC694: 804061C0 (g_dComIfG_gameInfo)
//	801FC6A0: 801E1F10 (__ct__14dMenu_Option_cFP10JKRArchiveP9STControl)
//	801FC6BC: 802CEC4C (__nw__FUl)
//	801FC6C8: 803A6F88 (__vt__12dDlst_base_c)
//	801FC6CC: 803A6F88 (__vt__12dDlst_base_c)
//	801FC6D4: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FC6D8: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_option_create() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_option_create__5dMw_cFv.s"
}
#pragma pop


/* 801FC70C-801FC7BC 00B0+00 s=2 e=0 z=0  None .text      dMw_option_delete__5dMw_cFv                                  */
//	801FC72C: 801E3A7C (isSync__14dMenu_Option_cFv)
//	801FC744: 801E2C1C (_delete__14dMenu_Option_cFv)
//	801FC7A0: 801FD0D4 (checkMemSize__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_option_delete() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_option_delete__5dMw_cFv.s"
}
#pragma pop


/* 801FC7BC-801FC85C 00A0+00 s=1 e=0 z=0  None .text      dMw_letter_create__5dMw_cFv                                  */
//	801FC7D0: 801FD094 (markMemSize__5dMw_cFv)
//	801FC7D8: 802CEC4C (__nw__FUl)
//	801FC7F0: 801DCDC0 (__ct__14dMenu_Letter_cFP10JKRExpHeapP9STControlP10CSTControl)
//	801FC80C: 802CEC4C (__nw__FUl)
//	801FC818: 803A6F88 (__vt__12dDlst_base_c)
//	801FC81C: 803A6F88 (__vt__12dDlst_base_c)
//	801FC824: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FC828: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_letter_create() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_letter_create__5dMw_cFv.s"
}
#pragma pop


/* 801FC85C-801FC904 00A8+00 s=2 e=0 z=0  None .text      dMw_letter_delete__5dMw_cFv                                  */
//	801FC87C: 801DD934 (isSync__14dMenu_Letter_cFv)
//	801FC8E8: 801FD0D4 (checkMemSize__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_letter_delete() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_letter_delete__5dMw_cFv.s"
}
#pragma pop


/* 801FC904-801FC9A4 00A0+00 s=1 e=0 z=0  None .text      dMw_fishing_create__5dMw_cFv                                 */
//	801FC918: 801FD094 (markMemSize__5dMw_cFv)
//	801FC920: 802CEC4C (__nw__FUl)
//	801FC938: 801C4D54 (__ct__15dMenu_Fishing_cFP10JKRExpHeapP9STControlP10CSTControl)
//	801FC954: 802CEC4C (__nw__FUl)
//	801FC960: 803A6F88 (__vt__12dDlst_base_c)
//	801FC964: 803A6F88 (__vt__12dDlst_base_c)
//	801FC96C: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FC970: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_fishing_create() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_fishing_create__5dMw_cFv.s"
}
#pragma pop


/* 801FC9A4-801FCA4C 00A8+00 s=2 e=0 z=0  None .text      dMw_fishing_delete__5dMw_cFv                                 */
//	801FC9C4: 801C5204 (isSync__15dMenu_Fishing_cFv)
//	801FCA30: 801FD0D4 (checkMemSize__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_fishing_delete() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_fishing_delete__5dMw_cFv.s"
}
#pragma pop


/* 801FCA4C-801FCAEC 00A0+00 s=1 e=0 z=0  None .text      dMw_skill_create__5dMw_cFv                                   */
//	801FCA60: 801FD094 (markMemSize__5dMw_cFv)
//	801FCA68: 802CEC4C (__nw__FUl)
//	801FCA80: 801F7224 (__ct__13dMenu_Skill_cFP10JKRExpHeapP9STControlP10CSTControl)
//	801FCA9C: 802CEC4C (__nw__FUl)
//	801FCAA8: 803A6F88 (__vt__12dDlst_base_c)
//	801FCAAC: 803A6F88 (__vt__12dDlst_base_c)
//	801FCAB4: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FCAB8: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_skill_create() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_skill_create__5dMw_cFv.s"
}
#pragma pop


/* 801FCAEC-801FCB94 00A8+00 s=2 e=0 z=0  None .text      dMw_skill_delete__5dMw_cFv                                   */
//	801FCB0C: 801F7950 (isSync__13dMenu_Skill_cFv)
//	801FCB78: 801FD0D4 (checkMemSize__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_skill_delete() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_skill_delete__5dMw_cFv.s"
}
#pragma pop


/* 801FCB94-801FCC44 00B0+00 s=2 e=0 z=0  None .text      dMw_insect_create__5dMw_cFUc                                 */
//	801FCBB0: 801FD094 (markMemSize__5dMw_cFv)
//	801FCBB8: 802CEC4C (__nw__FUl)
//	801FCBD4: 801D8114 (__ct__14dMenu_Insect_cFP10JKRExpHeapP9STControlP10CSTControlUc)
//	801FCBF0: 802CEC4C (__nw__FUl)
//	801FCBFC: 803A6F88 (__vt__12dDlst_base_c)
//	801FCC00: 803A6F88 (__vt__12dDlst_base_c)
//	801FCC08: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FCC0C: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::dMw_insect_create(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_insect_create__5dMw_cFUc.s"
}
#pragma pop


/* 801FCC44-801FCCEC 00A8+00 s=3 e=0 z=0  None .text      dMw_insect_delete__5dMw_cFv                                  */
//	801FCC64: 801D88EC (isSync__14dMenu_Insect_cFv)
//	801FCCD0: 801FD0D4 (checkMemSize__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_insect_delete() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_insect_delete__5dMw_cFv.s"
}
#pragma pop


/* 801FCCEC-801FCCFC 0010+00 s=1 e=0 z=0  None .text      dMw_onButtonBit__5dMw_cFUc                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::dMw_onButtonBit(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_onButtonBit__5dMw_cFUc.s"
}
#pragma pop


/* 801FCCFC-801FCD0C 0010+00 s=1 e=0 z=0  None .text      dMw_offButtonBit__5dMw_cFUc                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::dMw_offButtonBit(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_offButtonBit__5dMw_cFUc.s"
}
#pragma pop


/* 801FCD0C-801FCD24 0018+00 s=1 e=0 z=0  None .text      dMw_isButtonBit__5dMw_cFUc                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void dMw_c::dMw_isButtonBit(u8 param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_isButtonBit__5dMw_cFUc.s"
}
#pragma pop


/* 801FCD24-801FCDD8 00B4+00 s=1 e=0 z=0  None .text      dMw_isPush_S_Button__5dMw_cFv                                */
//	801FCD34: 80450BC8 (mFader__13mDoGph_gInf_c)
//	801FCD44: 804061C0 (g_dComIfG_gameInfo)
//	801FCD48: 804061C0 (g_dComIfG_gameInfo)
//	801FCDA0: 801FA078 (dMw_START_TRIGGER__Fv)
//	801FCDAC: 801FA050 (dMw_B_TRIGGER__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::dMw_isPush_S_Button() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_isPush_S_Button__5dMw_cFv.s"
}
#pragma pop


/* 801FCDD8-801FCE08 0030+00 s=1 e=0 z=0  None .text      isPauseReady__5dMw_cFv                                       */
//	801FCDD8: 804061C0 (g_dComIfG_gameInfo)
//	801FCDDC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::isPauseReady() {
	nofralloc
#include "asm/d/menu/d_menu_window/isPauseReady__5dMw_cFv.s"
}
#pragma pop


/* 801FCE08-801FCE78 0070+00 s=10 e=3 z=0  None .text      dMw_fade_out__5dMw_cFv                                       */
//	801FCE14: 804511C0 (sManager__10JFWDisplay)
//	801FCE38: 80450604 (g_blackColor)
//	801FCE44: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_c::dMw_fade_out() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_fade_out__5dMw_cFv.s"
}
#pragma pop


/* 801FCE78-801FCEE8 0070+00 s=9 e=4 z=0  None .text      dMw_fade_in__5dMw_cFv                                        */
//	801FCE84: 804511C0 (sManager__10JFWDisplay)
//	801FCEA8: 80450604 (g_blackColor)
//	801FCEB4: 80450BC8 (mFader__13mDoGph_gInf_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void dMw_c::dMw_fade_in() {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_fade_in__5dMw_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804544CC-804544D0 0004+00 s=1 e=0 z=0  None .sdata2    @6000                                                        */
SECTION_SDATA2 static f32 lit_6000 = 4.0f / 5.0f;

/* 804544D0-804544D4 0004+00 s=1 e=0 z=0  None .sdata2    @6001                                                        */
SECTION_SDATA2 static f32 lit_6001 = 3.0f / 20.0f;

/* 801FCEE8-801FCF84 009C+00 s=1 e=0 z=0  None .text      checkCStickTrigger__5dMw_cFv                                 */
//	801FCF24: 804544CC (lit_6000)
//	801FCF58: 804544D0 (lit_6001)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::checkCStickTrigger() {
	nofralloc
#include "asm/d/menu/d_menu_window/checkCStickTrigger__5dMw_cFv.s"
}
#pragma pop


/* 801FCF84-801FD094 0110+00 s=1 e=0 z=0  None .text      isEventCheck__5dMw_cFv                                       */
//	801FCFA8: 80430188 (g_meter2_info)
//	801FCFAC: 80430188 (g_meter2_info)
//	801FCFD0: 804061C0 (g_dComIfG_gameInfo)
//	801FCFD4: 804061C0 (g_dComIfG_gameInfo)
//	801FCFE4: 8023822C (getStatus__12dMsgObject_cFv)
//	801FD03C: 80430188 (g_meter2_info)
//	801FD040: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::isEventCheck() {
	nofralloc
#include "asm/d/menu/d_menu_window/isEventCheck__5dMw_cFv.s"
}
#pragma pop


/* 801FD094-801FD0D4 0040+00 s=10 e=0 z=0  None .text      markMemSize__5dMw_cFv                                        */
//	801FD0B8: 802CE784 (getTotalFreeSize__7JKRHeapFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::markMemSize() {
	nofralloc
#include "asm/d/menu/d_menu_window/markMemSize__5dMw_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80397E38-80397E50 0015+03 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80397E38 = "memory free error!!\n";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80397E4D = "\0\0";
#pragma pop

/* 801FD0D4-801FD140 006C+00 s=10 e=0 z=0  None .text      checkMemSize__5dMw_cFv                                       */
//	801FD0F8: 802CE784 (getTotalFreeSize__7JKRHeapFv)
//	801FD114: 80397E38 (d_menu_d_menu_window__stringBase0)
//	801FD118: 80397E38 (d_menu_d_menu_window__stringBase0)
//	801FD120: 80006C0C (OSReport_Error)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::checkMemSize() {
	nofralloc
#include "asm/d/menu/d_menu_window/checkMemSize__5dMw_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804544D4-804544D8 0004+00 s=1 e=0 z=0  None .sdata2    @6086                                                        */
SECTION_SDATA2 static f32 lit_6086 = 9.0f / 10.0f;

/* 804544D8-804544E0 0004+04 s=1 e=0 z=0  None .sdata2    @6087                                                        */
SECTION_SDATA2 static f32 lit_6087[1 + 1 /* padding */] = {
	0.5f,
	/* padding */
	0.0f,
};

/* 801FD140-801FD2D8 0198+00 s=1 e=0 z=0  None .text      _create__5dMw_cFv                                            */
//	801FD158: 804061C0 (g_dComIfG_gameInfo)
//	801FD15C: 804061C0 (g_dComIfG_gameInfo)
//	801FD16C: 802CEC4C (__nw__FUl)
//	801FD188: 804544D4 (lit_6086)
//	801FD18C: 804544D8 (lit_6087)
//	801FD198: 80032044 (__ct__9STControlFssssffss)
//	801FD1B4: 802CEC4C (__nw__FUl)
//	801FD1D0: 804544D4 (lit_6086)
//	801FD1D4: 804544D8 (lit_6087)
//	801FD1E0: 80032044 (__ct__9STControlFssssffss)
//	801FD1E4: 803A7250 (__vt__10CSTControl)
//	801FD1E8: 803A7250 (__vt__10CSTControl)
//	801FD208: 804544D4 (lit_6086)
//	801FD20C: 804544D8 (lit_6087)
//	801FD218: 80032088 (setWaitParm__9STControlFssssffss)
//	801FD250: 804544C0 (lit_4152)
//	801FD2A8: 80430188 (g_meter2_info)
//	801FD2AC: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::_create() {
	nofralloc
#include "asm/d/menu/d_menu_window/_create__5dMw_cFv.s"
}
#pragma pop


/* 801FD2D8-801FD450 0178+00 s=1 e=0 z=0  None .text      _execute__5dMw_cFv                                           */
//	801FD2E8: 803621DC (_savegpr_29)
//	801FD308: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD318: 8003219C (checkTrigger__9STControlFv)
//	801FD31C: 801FA114 (dMw_isMenuRing__Fv)
//	801FD32C: 8003219C (checkTrigger__9STControlFv)
//	801FD334: 801FCEE8 (checkCStickTrigger__5dMw_cFv)
//	801FD338: 804061C0 (g_dComIfG_gameInfo)
//	801FD33C: 804061C0 (g_dComIfG_gameInfo)
//	801FD384: 803BEDF0 (move_proc)
//	801FD388: 803BEDF0 (move_proc)
//	801FD390: 80362084 (__ptmf_scall)
//	801FD3B0: 803BEAA8 (init_proc)
//	801FD3B4: 803BEAA8 (init_proc)
//	801FD3BC: 80362084 (__ptmf_scall)
//	801FD3C4: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FD3C8: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FD3E0: 801FCD0C (dMw_isButtonBit__5dMw_cFUc)
//	801FD3F4: 801FCCFC (dMw_offButtonBit__5dMw_cFUc)
//	801FD3F8: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FD3FC: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	801FD414: 801FCD0C (dMw_isButtonBit__5dMw_cFUc)
//	801FD428: 801FCCFC (dMw_offButtonBit__5dMw_cFUc)
//	801FD430: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD43C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::_execute() {
	nofralloc
#include "asm/d/menu/d_menu_window/_execute__5dMw_cFv.s"
}
#pragma pop


/* 801FD450-801FD67C 022C+00 s=1 e=0 z=0  None .text      _draw__5dMw_cFv                                              */
//	801FD460: 803621D8 (_savegpr_28)
//	801FD498: 804061C0 (g_dComIfG_gameInfo)
//	801FD49C: 804061C0 (g_dComIfG_gameInfo)
//	801FD4AC: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
//	801FD4B4: 804061C0 (g_dComIfG_gameInfo)
//	801FD4B8: 804061C0 (g_dComIfG_gameInfo)
//	801FD4C8: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
//	801FD4CC: 804061C0 (g_dComIfG_gameInfo)
//	801FD4D0: 804061C0 (g_dComIfG_gameInfo)
//	801FD4E0: 80430188 (g_meter2_info)
//	801FD4E4: 80430188 (g_meter2_info)
//	801FD500: 801B7AC0 (draw__15dMenu_Collect_cFv)
//	801FD51C: 801C7650 (_draw__12dMenu_Fmap_cFv)
//	801FD538: 801BE7E0 (_draw__12dMenu_Dmap_cFv)
//	801FD554: 801F69FC (_draw2__12dMenu_save_cFv)
//	801FD564: 804061C0 (g_dComIfG_gameInfo)
//	801FD568: 804061C0 (g_dComIfG_gameInfo)
//	801FD578: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
//	801FD588: 804061C0 (g_dComIfG_gameInfo)
//	801FD58C: 804061C0 (g_dComIfG_gameInfo)
//	801FD59C: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
//	801FD5AC: 804061C0 (g_dComIfG_gameInfo)
//	801FD5B0: 804061C0 (g_dComIfG_gameInfo)
//	801FD5C0: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
//	801FD5D0: 804061C0 (g_dComIfG_gameInfo)
//	801FD5D4: 804061C0 (g_dComIfG_gameInfo)
//	801FD5E4: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
//	801FD5F4: 804061C0 (g_dComIfG_gameInfo)
//	801FD5F8: 804061C0 (g_dComIfG_gameInfo)
//	801FD608: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
//	801FD648: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
//	801FD65C: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
//	801FD668: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::_draw() {
	nofralloc
#include "asm/d/menu/d_menu_window/_draw__5dMw_cFv.s"
}
#pragma pop


/* 801FD67C-801FD840 01C4+00 s=1 e=0 z=0  None .text      _delete__5dMw_cFv                                            */
//	801FD694: 8000F1EC (mDoExt_getCurrentHeap__Fv)
//	801FD6A0: 802CED3C (__dl__FPv)
//	801FD6B0: 802CED3C (__dl__FPv)
//	801FD6C0: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD6CC: 801FC090 (dMw_collect_delete__5dMw_cFb)
//	801FD6DC: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD6F0: 801FC46C (dMw_dmap_delete__5dMw_cFb)
//	801FD700: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD714: 801FC264 (dMw_fmap_delete__5dMw_cFb)
//	801FD724: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD734: 801FC5D0 (dMw_save_delete__5dMw_cFv)
//	801FD744: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD754: 801FC70C (dMw_option_delete__5dMw_cFv)
//	801FD764: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD774: 801FC85C (dMw_letter_delete__5dMw_cFv)
//	801FD784: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD794: 801FC9A4 (dMw_fishing_delete__5dMw_cFv)
//	801FD7A4: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD7B4: 801FCAEC (dMw_skill_delete__5dMw_cFv)
//	801FD7C4: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD7D4: 801FCC44 (dMw_insect_delete__5dMw_cFv)
//	801FD7E4: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD7F4: 801FBF60 (dMw_ring_delete__5dMw_cFv)
//	801FD804: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD814: 801FBE14 (dMw_capture_delete__5dMw_cFv)
//	801FD81C: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	801FD820: 80014A2C (mDoExt_removeMesgFont__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMw_c::_delete() {
	nofralloc
#include "asm/d/menu/d_menu_window/_delete__5dMw_cFv.s"
}
#pragma pop


/* 801FD840-801FD860 0020+00 s=1 e=0 z=0  None .text      dMw_Draw__FP5dMw_c                                           */
//	801FD84C: 801FD450 (_draw__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dMw_c* False
// 	 dMw_c False
asm static void dMw_Draw(dMw_c* param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_Draw__FP5dMw_c.s"
}
#pragma pop


/* 801FD860-801FD880 0020+00 s=1 e=0 z=0  None .text      dMw_Execute__FP5dMw_c                                        */
//	801FD86C: 801FD2D8 (_execute__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dMw_c* False
// 	 dMw_c False
asm static void dMw_Execute(dMw_c* param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_Execute__FP5dMw_c.s"
}
#pragma pop


/* 801FD880-801FD888 0008+00 s=1 e=0 z=0  None .text      dMw_IsDelete__FP5dMw_c                                       */
// True False
//  bool False
//  dMw_c* False
// 	 dMw_c False
static bool dMw_IsDelete(dMw_c* param_0) {
	return true;
}


/* 801FD888-801FD8C0 0038+00 s=1 e=0 z=0  None .text      dMw_Delete__FP5dMw_c                                         */
//	801FD894: 801FD67C (_delete__5dMw_cFv)
//	801FD8A4: 80430188 (g_meter2_info)
//	801FD8A8: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dMw_c* False
// 	 dMw_c False
asm static void dMw_Delete(dMw_c* param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_Delete__FP5dMw_c.s"
}
#pragma pop


/* 801FD8C0-801FD928 0068+00 s=1 e=0 z=0  None .text      dMw_Create__FP9msg_class                                     */
//	801FD8D4: 80430188 (g_meter2_info)
//	801FD8D8: 80430188 (g_meter2_info)
//	801FD8E4: 8042E86C (g_mwHIO)
//	801FD8E8: 8042E86C (g_mwHIO)
//	801FD8F0: 8042E9A8 (g_mwDHIO)
//	801FD8F4: 8042E9A8 (g_mwDHIO)
//	801FD900: 8002E188 (dComIfGp_offHeapLockFlag__Fi)
//	801FD908: 8001F9B4 (fopMsgM_setStageLayer__FPv)
//	801FD910: 801FD140 (_create__5dMw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  msg_class* False
// 	 msg_class False
asm static void dMw_Create(msg_class* param_0) {
	nofralloc
#include "asm/d/menu/d_menu_window/dMw_Create__FP9msg_class.s"
}
#pragma pop


/* 801FD928-801FDFCC 06A4+00 s=0 e=0 z=0  None .text      __sinit_d_menu_window_cpp                                    */
//	801FD928: 803BE8F8 (cNullVec__6Z2Calc)
//	801FD92C: 803BE8F8 (cNullVec__6Z2Calc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_menu_window_cpp() {
	nofralloc
#include "asm/d/menu/d_menu_window/__sinit_d_menu_window_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_801FD928 = (void*)__sinit_d_menu_window_cpp;
#pragma pop


/* ############################################################################################## */
/* 80456B88-80456B90 0004+04 s=1 e=0 z=0  None .sbss2     @4115                                                        */
SECTION_SBSS2 static u8 lit_4115[4 + 4 /* padding */];

/* 801FDFCC-801FE2E8 031C+00 s=1 e=0 z=0  None .text      draw__20dDlst_MENU_CAPTURE_cFv                               */
//	801FDFF8: 804061C0 (g_dComIfG_gameInfo)
//	801FDFFC: 804061C0 (g_dComIfG_gameInfo)
//	801FE014: 8035CA80 (GXSetTexCopySrc)
//	801FE020: 80450BCC (mFrameBufferTimg__13mDoGph_gInf_c)
//	801FE02C: 8035CB30 (GXSetTexCopyDst)
//	801FE030: 80450BD0 (mFrameBufferTex__13mDoGph_gInf_c)
//	801FE038: 8035D46C (GXCopyTex)
//	801FE03C: 8035C374 (GXPixModeSync)
//	801FE048: 80450BD0 (mFrameBufferTex__13mDoGph_gInf_c)
//	801FE054: 80450BCC (mFrameBufferTimg__13mDoGph_gInf_c)
//	801FE068: 8035DE40 (GXInitTexObj)
//	801FE078: 804544C0 (lit_4152)
//	801FE090: 8035E0D4 (GXInitTexObjLOD)
//	801FE09C: 8035E414 (GXLoadTexObj)
//	801FE0A4: 8035DB30 (GXSetNumChans)
//	801FE0AC: 8035BDFC (GXSetNumTexGens)
//	801FE0C8: 8035BB7C (GXSetTexCoordGen2)
//	801FE0D0: 8035F890 (GXSetNumTevStages)
//	801FE0E4: 8035F6F4 (GXSetTevOrder)
//	801FE0FC: 8035F224 (GXSetTevColorIn)
//	801FE118: 8035F2AC (GXSetTevColorOp)
//	801FE11C: 80456B88 (lit_4115)
//	801FE13C: 8035F37C (GXSetTevColor)
//	801FE154: 8035F268 (GXSetTevAlphaIn)
//	801FE170: 8035F314 (GXSetTevAlphaOp)
//	801FE178: 8035FCD0 (GXSetZCompLoc)
//	801FE188: 8035FC9C (GXSetZMode)
//	801FE19C: 8035FBF0 (GXSetBlendMode)
//	801FE1B4: 8035F624 (GXSetAlphaCompare)
//	801FE1B8: 80450600 (g_clearColor)
//	801FE1C4: 804544C0 (lit_4152)
//	801FE1D8: 8035F8B8 (GXSetFog)
//	801FE1E8: 8035FACC (GXSetFogRangeAdj)
//	801FE1F0: 8035C984 (GXSetCullMode)
//	801FE1F8: 8035FDD8 (GXSetDither)
//	801FE1FC: 803A2FD8 (g_mDoMtx_identity)
//	801FE200: 803A2FD8 (g_mDoMtx_identity)
//	801FE208: 8036024C (GXLoadPosMtxImm)
//	801FE210: 803602EC (GXSetCurrentMtx)
//	801FE214: 8035B58C (GXClearVtxDesc)
//	801FE220: 8035AEB8 (GXSetVtxDesc)
//	801FE22C: 8035AEB8 (GXSetVtxDesc)
//	801FE244: 8035B5C4 (GXSetVtxAttrFmt)
//	801FE25C: 8035B5C4 (GXSetVtxAttrFmt)
//	801FE26C: 8035C764 (GXBegin)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dDlst_MENU_CAPTURE_c::draw() {
	nofralloc
#include "asm/d/menu/d_menu_window/draw__20dDlst_MENU_CAPTURE_cFv.s"
}
#pragma pop


/* 801FE2E8-801FE330 0048+00 s=1 e=0 z=0  None .text      __dt__20dDlst_MENU_CAPTURE_cFv                               */
//	801FE300: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FE304: 803BF0D4 (__vt__20dDlst_MENU_CAPTURE_c)
//	801FE314: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dDlst_MENU_CAPTURE_c::~dDlst_MENU_CAPTURE_c() {
	nofralloc
#include "asm/d/menu/d_menu_window/__dt__20dDlst_MENU_CAPTURE_cFv.s"
}
#pragma pop


