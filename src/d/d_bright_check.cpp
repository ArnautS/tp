//
// Generated By: dol2asm
// Translation Unit: d/d_bright_check
//

#include "d/d_bright_check.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct dMsgString_c {
    /* 80249C20 */ dMsgString_c();
    /* 80249D28 */ ~dMsgString_c();
};

struct dDlst_base_c {};

struct dDlst_list_c {
    /* 80056794 */ void set(dDlst_base_c**&, dDlst_base_c**&, dDlst_base_c*);
};

struct dDlst_BrightCheck_c {
    /* 801935D0 */ void draw();
    /* 80193648 */ ~dDlst_BrightCheck_c();
};

struct JKRArchive {};

struct dBrightCheck_c {
    /* 80192F10 */ dBrightCheck_c(JKRArchive*);
    /* 80192F98 */ ~dBrightCheck_c();
    /* 80193030 */ void screenSet();
    /* 801934D0 */ void _move();
    /* 80193508 */ void modeWait();
    /* 8019350C */ void modeMove();
    /* 80193594 */ void _draw();
};

struct Vec {};

struct JAISoundID {};

struct Z2SeMgr {
    /* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J2DTextBox {
    /* 8030074C */ void setString(s16, char const*, ...);
};

struct J2DGrafContext {};

struct J2DScreen {
    /* 802F8498 */ J2DScreen();
    /* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
    /* 802F8ED4 */ void draw(f32, f32, J2DGrafContext const*);
};

//
// Forward References:
//

extern "C" void __ct__14dBrightCheck_cFP10JKRArchive();
extern "C" void __dt__14dBrightCheck_cFv();
extern "C" void screenSet__14dBrightCheck_cFv();
extern "C" void _move__14dBrightCheck_cFv();
extern "C" void modeWait__14dBrightCheck_cFv();
extern "C" void modeMove__14dBrightCheck_cFv();
extern "C" void _draw__14dBrightCheck_cFv();
extern "C" void draw__19dDlst_BrightCheck_cFv();
extern "C" void __sinit_d_bright_check_cpp();
extern "C" void __dt__19dDlst_BrightCheck_cFv();
extern "C" extern u8 const data_80394938[40];
extern "C" extern u8 const data_80394960[80];
extern "C" extern u8 const data_803949B0[40];
extern "C" extern char const* const d_d_bright_check__stringBase0;
extern "C" extern void* d_d_bright_check__lit_3797[3];
extern "C" extern void* d_d_bright_check__lit_3798[3];
extern "C" extern void* __vt__19dDlst_BrightCheck_c[4];
extern "C" extern void* __vt__14dBrightCheck_c[3 + 4 /* padding */];

//
// External References:
//

void mDoExt_getMesgFont();
void mDoExt_getRubyFont();
void* operator new(u32);
void operator delete(void*);

extern "C" void mDoExt_getMesgFont__Fv();
extern "C" void mDoExt_getRubyFont__Fv();
extern "C" void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c();
extern "C" void __ct__12dMsgString_cFv();
extern "C" void __dt__12dMsgString_cFv();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void __ct__9J2DScreenFv();
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive();
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext();
extern "C" void setString__10J2DTextBoxFsPCce();
extern "C" void __ptmf_scall();
extern "C" void _savegpr_22();
extern "C" void _restgpr_22();
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

//
// Declarations:
//

/* ############################################################################################## */
/* 803BB5B0-803BB5BC 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803BB5BC-803BB5C8 000C+00 s=0 e=0 z=0  None .data      @3797 */
SECTION_DATA void* d_d_bright_check__lit_3797[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)modeWait__14dBrightCheck_cFv,
};

/* 803BB5C8-803BB5D4 000C+00 s=0 e=0 z=0  None .data      @3798 */
SECTION_DATA void* d_d_bright_check__lit_3798[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)modeMove__14dBrightCheck_cFv,
};

/* 803BB5D4-803BB5EC 0018+00 s=1 e=0 z=0  None .data      brightChackProc */
SECTION_DATA static u8 brightChackProc[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803BB5EC-803BB5FC 0010+00 s=3 e=0 z=0  None .data      __vt__19dDlst_BrightCheck_c */
SECTION_DATA void* __vt__19dDlst_BrightCheck_c[4] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__19dDlst_BrightCheck_cFv,
    (void*)__dt__19dDlst_BrightCheck_cFv,
};

/* 803BB5FC-803BB618 000C+10 s=2 e=0 z=0  None .data      __vt__14dBrightCheck_c */
SECTION_DATA void* __vt__14dBrightCheck_c[3 + 4 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__14dBrightCheck_cFv,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 80192F10-80192F98 0088+00 s=0 e=1 z=0  None .text      __ct__14dBrightCheck_cFP10JKRArchive */
//	80192F24: 803BB5FC (__vt__14dBrightCheck_c)
//	80192F28: 803BB5FC (__vt__14dBrightCheck_c)
//	80192F30: 803A6F88 (__vt__12dDlst_base_c)
//	80192F34: 803A6F88 (__vt__12dDlst_base_c)
//	80192F3C: 803BB5EC (__vt__19dDlst_BrightCheck_c)
//	80192F40: 803BB5EC (__vt__19dDlst_BrightCheck_c)
//	80192F50: 802CEC4C (__nw__FUl)
//	80192F5C: 80249C20 (__ct__12dMsgString_cFv)
//	80192F6C: 80193030 (screenSet__14dBrightCheck_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBrightCheck_c::dBrightCheck_c(JKRArchive* param_0) {
    nofralloc
#include "asm/d/d_bright_check/__ct__14dBrightCheck_cFP10JKRArchive.s"
}
#pragma pop

/* 80192F98-80193030 0098+00 s=1 e=0 z=0  None .text      __dt__14dBrightCheck_cFv */
//	80192FB8: 803BB5FC (__vt__14dBrightCheck_c)
//	80192FBC: 803BB5FC (__vt__14dBrightCheck_c)
//	80192FEC: 80249D28 (__dt__12dMsgString_cFv)
//	80192FF8: 803BB5EC (__vt__19dDlst_BrightCheck_c)
//	80192FFC: 803BB5EC (__vt__19dDlst_BrightCheck_c)
//	80193010: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBrightCheck_c::~dBrightCheck_c() {
    nofralloc
#include "asm/d/d_bright_check/__dt__14dBrightCheck_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80394910-80394938 0028+00 s=1 e=0 z=0  None .rodata    tv_btnA$3744 */
SECTION_RODATA static u8 const tv_btnA[40] = {
    0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x74, 0x31, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x61,
    0x74, 0x32, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x74, 0x33, 0x63, 0x6F, 0x6E, 0x74,
    0x5F, 0x61, 0x74, 0x34, 0x00, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x74,
};

/* 80394938-80394960 0028+00 s=0 e=0 z=0  None .rodata    ftv_btnA$3745 */
SECTION_RODATA u8 const data_80394938[40] = {
    0x00, 0x66, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x31, 0x66, 0x6F, 0x6E, 0x74, 0x5F, 0x61,
    0x74, 0x32, 0x66, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x74, 0x33, 0x66, 0x6F, 0x6E, 0x74,
    0x5F, 0x61, 0x74, 0x34, 0x00, 0x66, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x74,
};

/* 80394960-803949B0 0050+00 s=0 e=0 z=0  None .rodata    txTV$3751 */
SECTION_RODATA u8 const data_80394960[80] = {
    0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x74, 0x36, 0x31, 0x00, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x74, 0x32,
    0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x74, 0x39, 0x31, 0x00, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x74, 0x31,
    0x6D, 0x65, 0x6E, 0x75, 0x74, 0x31, 0x30, 0x31, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x74, 0x30, 0x31,
    0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x74, 0x37, 0x31, 0x00, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x74, 0x33,
    0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x74, 0x38, 0x31, 0x00, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x74, 0x34,
};

/* 803949B0-803949D8 0028+00 s=0 e=0 z=0  None .rodata    txTVhide$3752 */
SECTION_RODATA u8 const data_803949B0[40] = {
    0x00, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x36, 0x6E, 0x00, 0x6D, 0x65, 0x6E, 0x75, 0x5F,
    0x39, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x31, 0x30, 0x6E, 0x00, 0x6D, 0x65, 0x6E,
    0x75, 0x5F, 0x37, 0x6E, 0x00, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x38, 0x6E,
};

/* 803949D8-803949F0 0018+00 s=1 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_803949D8 = "zelda_option_check.blo";
SECTION_DEAD char const* const stringBase_803949EF = "";
#pragma pop

/* 80453A00-80453A04 0004+00 s=2 e=0 z=0  None .sdata2    @3792 */
SECTION_SDATA2 static u8 lit_3792[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80193030-801934D0 04A0+00 s=1 e=0 z=0  None .text      screenSet__14dBrightCheck_cFv */
//	80193048: 803621C0 (_savegpr_22)
//	80193050: 80394910 (tv_btnA)
//	80193054: 80394910 (tv_btnA)
//	8019305C: 802CEC4C (__nw__FUl)
//	80193068: 802F8498 (__ct__9J2DScreenFv)
//	80193078: 803949D8 (d_d_bright_check__stringBase0)
//	8019307C: 803949D8 (d_d_bright_check__stringBase0)
//	80193088: 802F8648 (setPriority__9J2DScreenFPCcUlP10JKRArchive)
//	8019312C: 80014B04 (mDoExt_getRubyFont__Fv)
//	80193150: 803949D8 (d_d_bright_check__stringBase0)
//	80193154: 803949D8 (d_d_bright_check__stringBase0)
//	80193160: 8030074C (setString__10J2DTextBoxFsPCce)
//	801931A8: 803949D8 (d_d_bright_check__stringBase0)
//	801931AC: 803949D8 (d_d_bright_check__stringBase0)
//	801931FC: 800149F0 (mDoExt_getMesgFont__Fv)
//	8019322C: 8030074C (setString__10J2DTextBoxFsPCce)
//	801932C0: 80453A00 (lit_3792)
//	801932E8: 800149F0 (mDoExt_getMesgFont__Fv)
//	80193318: 803949D8 (d_d_bright_check__stringBase0)
//	8019331C: 803949D8 (d_d_bright_check__stringBase0)
//	80193328: 8030074C (setString__10J2DTextBoxFsPCce)
//	8019336C: 803949D8 (d_d_bright_check__stringBase0)
//	80193370: 803949D8 (d_d_bright_check__stringBase0)
//	8019337C: 8030074C (setString__10J2DTextBoxFsPCce)
//	801933C0: 803949D8 (d_d_bright_check__stringBase0)
//	801933C4: 803949D8 (d_d_bright_check__stringBase0)
//	801933D0: 8030074C (setString__10J2DTextBoxFsPCce)
//	80193414: 803949D8 (d_d_bright_check__stringBase0)
//	80193418: 803949D8 (d_d_bright_check__stringBase0)
//	80193424: 8030074C (setString__10J2DTextBoxFsPCce)
//	80193460: 803949D8 (d_d_bright_check__stringBase0)
//	80193464: 803949D8 (d_d_bright_check__stringBase0)
//	80193470: 8030074C (setString__10J2DTextBoxFsPCce)
//	801934BC: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBrightCheck_c::screenSet() {
    nofralloc
#include "asm/d/d_bright_check/screenSet__14dBrightCheck_cFv.s"
}
#pragma pop

/* 801934D0-80193508 0038+00 s=0 e=1 z=0  None .text      _move__14dBrightCheck_cFv */
//	801934E4: 803BB5D4 (brightChackProc)
//	801934E8: 803BB5D4 (brightChackProc)
//	801934F0: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBrightCheck_c::_move() {
    nofralloc
#include "asm/d/d_bright_check/_move__14dBrightCheck_cFv.s"
}
#pragma pop

/* 80193508-8019350C 0004+00 s=1 e=0 z=0  None .text      modeWait__14dBrightCheck_cFv */
void dBrightCheck_c::modeWait() {
    /* empty function */
}

/* ############################################################################################## */
/* 80453A04-80453A08 0004+00 s=1 e=0 z=0  None .sdata2    @3821 */
SECTION_SDATA2 static f32 lit_3821 = 1.0f;

/* 80453A08-80453A10 0004+04 s=1 e=0 z=0  None .sdata2    @3822 */
SECTION_SDATA2 static f32 lit_3822[1 + 1 /* padding */] = {
    -1.0f,
    /* padding */
    0.0f,
};

/* 8019350C-80193594 0088+00 s=1 e=0 z=0  None .text      modeMove__14dBrightCheck_cFv */
//	80193520: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80193524: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80193544: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80193558: 80453A04 (lit_3821)
//	80193560: 80453A08 (lit_3822)
//	8019356C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBrightCheck_c::modeMove() {
    nofralloc
#include "asm/d/d_bright_check/modeMove__14dBrightCheck_cFv.s"
}
#pragma pop

/* 80193594-801935D0 003C+00 s=0 e=1 z=0  None .text      _draw__14dBrightCheck_cFv */
//	801935A4: 804061C0 (g_dComIfG_gameInfo)
//	801935A8: 804061C0 (g_dComIfG_gameInfo)
//	801935BC: 80056794 (set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBrightCheck_c::_draw() {
    nofralloc
#include "asm/d/d_bright_check/_draw__14dBrightCheck_cFv.s"
}
#pragma pop

/* 801935D0-80193608 0038+00 s=1 e=0 z=0  None .text      draw__19dDlst_BrightCheck_cFv */
//	801935DC: 804061C0 (g_dComIfG_gameInfo)
//	801935E0: 804061C0 (g_dComIfG_gameInfo)
//	801935EC: 80453A00 (lit_3792)
//	801935F4: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_BrightCheck_c::draw() {
    nofralloc
#include "asm/d/d_bright_check/draw__19dDlst_BrightCheck_cFv.s"
}
#pragma pop

/* 80193608-80193648 0040+00 s=0 e=0 z=0  None .text      __sinit_d_bright_check_cpp */
//	80193608: 803BB5B0 (cNullVec__6Z2Calc)
//	8019360C: 803BB5B0 (cNullVec__6Z2Calc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_bright_check_cpp() {
    nofralloc
#include "asm/d/d_bright_check/__sinit_d_bright_check_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
SECTION_CTORS void* const _ctors_80193608 = (void*)__sinit_d_bright_check_cpp;
#pragma pop

/* 80193648-80193690 0048+00 s=1 e=0 z=0  None .text      __dt__19dDlst_BrightCheck_cFv */
//	80193660: 803BB5EC (__vt__19dDlst_BrightCheck_c)
//	80193664: 803BB5EC (__vt__19dDlst_BrightCheck_c)
//	80193674: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_BrightCheck_c::~dDlst_BrightCheck_c() {
    nofralloc
#include "asm/d/d_bright_check/__dt__19dDlst_BrightCheck_cFv.s"
}
#pragma pop
