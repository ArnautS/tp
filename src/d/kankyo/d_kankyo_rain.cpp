//
// Generated By: dol2asm
// Translation Unit: d/kankyo/d_kankyo_rain
//

#include "d/kankyo/d_kankyo_rain.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct daPy_py_c {
    /* 8006F160 */ bool getKandelaarFlamePos();
    /* 8015F424 */ void checkNowWolfEyeUp();
};

struct dSv_memBit_c {
    /* 80034934 */ void isDungeonItem(int) const;
};

struct dStage_roomControl_c {
    /* 80024384 */ void getStatusRoomDt(int);
};

struct dScnKy_env_light_c {
    /* 8019FA08 */ void getDaytime();
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {};

struct Vec {};

struct cXyz {
    /* 80009184 */ ~cXyz();
    /* 80266AE4 */ void operator+(Vec const&) const;
};

struct csXyz {
    /* 80018BD0 */ ~csXyz();
    /* 802673F4 */ csXyz(s16, s16, s16);
};

struct dKy_tevstr_c {};

struct _GXColor {};

struct dPa_control_c {
    /* 8004D4CC */ void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*,
                            cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*,
                            _GXColor const*, cXyz const*, f32);
};

struct dKankyo_rain_Packet {};

struct dEvent_manager_c {
    /* 800483E8 */ void getRunEventName();
};

struct dDlst_peekZ_c {
    /* 80056018 */ void newData(s16, s16, u32*);
};

struct dComIfG_play_c {
    /* 8002C97C */ void getLayerNo(int);
};

struct dCcMassS_Mng {
    /* 80085690 */ void Prepare();
};

struct dBgS_RoofChk {
    /* 80078FF4 */ dBgS_RoofChk();
    /* 80079090 */ ~dBgS_RoofChk();
};

struct dBgS_PolyPassChk {
    /* 80078E68 */ void SetObj();
};

struct dBgS_ObjGndChk_All {
    /* 800778E8 */ ~dBgS_ObjGndChk_All();
};

struct dBgS_GndChk {
    /* 8007757C */ dBgS_GndChk();
    /* 800775F0 */ ~dBgS_GndChk();
};

struct dBgS_CamGndChk_Wtr {
    /* 80077A00 */ dBgS_CamGndChk_Wtr();
    /* 80077A98 */ ~dBgS_CamGndChk_Wtr();
};

struct dBgS {
    /* 8007549C */ void RoofChk(dBgS_RoofChk*);
};

struct camera_class {};

struct cBgS_GndChk {
    /* 80267D28 */ void SetPos(cXyz const*);
};

struct cBgS {
    /* 800744A0 */ void GroundCross(cBgS_GndChk*);
};

struct _GXTexObj {};

struct _GXTexMapID {};

struct Z2EnvSeMgr {
    /* 802C7CF4 */ void startNearThunderSe(s8);
};

struct STAR_EFF {
    /* 80056DC8 */ ~STAR_EFF();
    /* 80056E04 */ STAR_EFF();
};

struct SNOW_EFF {
    /* 80056D58 */ ~SNOW_EFF();
    /* 80056D94 */ SNOW_EFF();
};

struct ResTIMG {};

struct LIGHT_INFLUENCE {};

struct J3DSys {
    /* 8031073C */ void reinitGX();
};

struct DOUBLE_POS {};

//
// Forward References:
//

static void vectle_calc(DOUBLE_POS*, cXyz*);
static void get_vectle_calc(cXyz*, cXyz*, cXyz*);
void dKyr_get_vectle_calc(cXyz*, cXyz*, cXyz*);
static void dKy_set_eyevect_calc(camera_class*, Vec*, f32, f32);
static void dKy_set_eyevect_calc2(camera_class*, Vec*, f32, f32);
static void dKyr_set_btitex_common(_GXTexObj*, ResTIMG*, _GXTexMapID);
static void dKyr_set_btitex(_GXTexObj*, ResTIMG*);
void dKyr_lenzflare_move();
static void dKyr_moon_arrival_check();
void dKyr_sun_move();
void dKyr_rain_init();
static void rain_bg_chk(dKankyo_rain_Packet*, int);
static void overhead_bg_chk();
static void forward_overhead_bg_chk(cXyz*, f32);
void dKyr_rain_move();
static void d_krain_cut_turn_check();
void dKyr_housi_move();
void dKyr_snow_init();
void dKyr_snow_move();
void dKyr_star_init();
void dKyr_star_move();
void cloud_shadow_move();
void vrkumo_move();
static void dKr_cullVtx_Set();
static void dKyr_draw_rev_moon(f32 (*)[4], u8**);
void dKyr_drawSun(f32 (*)[4], cXyz*, _GXColor&, u8**);
void dKyr_drawLenzflare(f32 (*)[4], cXyz*, _GXColor&, u8**);
void dKyr_drawRain(f32 (*)[4], u8**);
void dKyr_drawSibuki(f32 (*)[4], u8**);
void dKyr_drawHousi(f32 (*)[4], u8**);
void dKyr_drawSnow(f32 (*)[4], u8**);
void dKyr_drawStar(f32 (*)[4], u8**);
void drawCloudShadow(f32 (*)[4], u8**);
void drawVrkumo(f32 (*)[4], _GXColor&, u8**);
void dKyr_thunder_init();
void dKyr_thunder_move();
void dKyr_shstar_init();
void dKyr_shstar_move();
void dKyr_odour_init();
void dKyr_odour_move();
void dKyr_odour_draw(f32 (*)[4], u8**);
void dKyr_mud_init();
void dKyr_mud_move();
void dKyr_mud_draw(f32 (*)[4], u8**);
void dKyr_evil_init();
void dKyr_evil_move();
static void dKyr_evil_draw2(f32 (*)[4], u8**);
static void dKyr_near_bosslight_check(cXyz);
void dKyr_evil_draw(f32 (*)[4], u8**);

extern "C" static void vectle_calc__FP10DOUBLE_POSP4cXyz();
extern "C" static void get_vectle_calc__FP4cXyzP4cXyzP4cXyz();
extern "C" void dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz();
extern "C" static void dKy_set_eyevect_calc__FP12camera_classP3Vecff();
extern "C" static void dKy_set_eyevect_calc2__FP12camera_classP3Vecff();
extern "C" static void dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID();
extern "C" static void dKyr_set_btitex__FP9_GXTexObjP7ResTIMG();
extern "C" void dKyr_lenzflare_move__Fv();
extern "C" static void dKyr_moon_arrival_check__Fv();
extern "C" void dKyr_sun_move__Fv();
extern "C" void dKyr_rain_init__Fv();
extern "C" static void rain_bg_chk__FP19dKankyo_rain_Packeti();
extern "C" static void overhead_bg_chk__Fv();
extern "C" static void forward_overhead_bg_chk__FP4cXyzf();
extern "C" void dKyr_rain_move__Fv();
extern "C" static void d_krain_cut_turn_check__Fv();
extern "C" void dKyr_housi_move__Fv();
extern "C" void dKyr_snow_init__Fv();
extern "C" void dKyr_snow_move__Fv();
extern "C" void dKyr_star_init__Fv();
extern "C" void dKyr_star_move__Fv();
extern "C" void cloud_shadow_move__Fv();
extern "C" void vrkumo_move__Fv();
extern "C" static void dKr_cullVtx_Set__Fv();
extern "C" static void dKyr_draw_rev_moon__FPA4_fPPUc();
extern "C" void dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc();
extern "C" void dKyr_drawLenzflare__FPA4_fP4cXyzR8_GXColorPPUc();
extern "C" void dKyr_drawRain__FPA4_fPPUc();
extern "C" void dKyr_drawSibuki__FPA4_fPPUc();
extern "C" void dKyr_drawHousi__FPA4_fPPUc();
extern "C" void dKyr_drawSnow__FPA4_fPPUc();
extern "C" void dKyr_drawStar__FPA4_fPPUc();
extern "C" void drawCloudShadow__FPA4_fPPUc();
extern "C" void drawVrkumo__FPA4_fR8_GXColorPPUc();
extern "C" void dKyr_thunder_init__Fv();
extern "C" void dKyr_thunder_move__Fv();
extern "C" void dKyr_shstar_init__Fv();
extern "C" void dKyr_shstar_move__Fv();
extern "C" void dKyr_odour_init__Fv();
extern "C" void dKyr_odour_move__Fv();
extern "C" void dKyr_odour_draw__FPA4_fPPUc();
extern "C" void dKyr_mud_init__Fv();
extern "C" void dKyr_mud_move__Fv();
extern "C" void dKyr_mud_draw__FPA4_fPPUc();
extern "C" void dKyr_evil_init__Fv();
extern "C" void dKyr_evil_move__Fv();
extern "C" static void dKyr_evil_draw2__FPA4_fPPUc();
extern "C" static void dKyr_near_bosslight_check__F4cXyz();
extern "C" void dKyr_evil_draw__FPA4_fPPUc();
extern "C" bool getKandelaarFlamePos__9daPy_py_cFv();
extern "C" extern char const* const d_kankyo_d_kankyo_rain__stringBase0;
extern "C" extern u8 lit_7955[12];
extern "C" extern u8 lit_7956[12];
extern "C" extern u8 lit_7957[12];
extern "C" extern u8 data_80424980[48];
extern "C" extern u8 lit_8942[12];
extern "C" extern u8 lit_8945[12];
extern "C" extern u8 lit_8946[12];
extern "C" extern u8 lit_8947[12];
extern "C" extern u8 data_804249E0[48];
extern "C" extern u8 lit_9425[12];
extern "C" extern u8 lit_9428[12];
extern "C" extern u8 lit_9429[12];
extern "C" extern u8 lit_9430[12];
extern "C" extern u8 lit_9431[12];
extern "C" extern u8 lit_9432[12];
extern "C" extern u8 lit_9433[12];
extern "C" extern u8 lit_9434[12];
extern "C" extern u8 lit_9435[12];
extern "C" extern u8 lit_9436[12];
extern "C" extern u8 lit_9437[12];
extern "C" extern u8 lit_9438[12];
extern "C" extern u8 lit_9439[12];
extern "C" extern u8 data_80424AAC[78 + 6 /* padding */];

//
// External References:
//

void mDoMtx_ZXYrotM(f32 (*)[4], s16, s16, s16);
void mDoMtx_XrotM(f32 (*)[4], s16);
void mDoMtx_YrotM(f32 (*)[4], s16);
void mDoMtx_ZrotM(f32 (*)[4], s16);
void mDoLib_project(Vec*, Vec*);
void fopKyM_create(s16, int, cXyz*, cXyz*, int (*)(void*));
void dComIfG_getStageRes(char const*);
void dComIfGs_PolyDamageOff_Set(s8);
void dKyw_get_wind_vec();
void dKyw_get_wind_pow();
void dKyw_get_wind_vecpow();
void dKyw_pntwind_get_vecpow(cXyz*);
void dKy_get_parcent(f32, f32, f32);
void dKy_daynight_check();
void dKy_move_room_ratio(dKy_tevstr_c*, s8*);
void dKy_efplight_set(LIGHT_INFLUENCE*);
void dKy_efplight_cut(LIGHT_INFLUENCE*);
void dKy_actor_addcol_amb_set(s16, s16, s16, f32);
void dKy_bg_addcol_amb_set(s16, s16, s16, f32);
void dKy_bg1_addcol_amb_set(s16, s16, s16, f32);
void dKy_addcol_fog_set(s16, s16, s16, f32);
void dKy_vrbox_addcol_sky0_set(s16, s16, s16, f32);
void dKy_vrbox_addcol_kasumi_set(s16, s16, s16, f32);
void dKy_GxFog_set();
void dKy_rain_check();
void dKy_set_actcol_ratio(f32);
void dKy_set_bgcol_ratio(f32);
void dKy_set_fogcol_ratio(f32);
void dKy_set_vrboxcol_ratio(f32);
void dKy_ParticleColor_get_bg(cXyz*, dKy_tevstr_c*, _GXColor*, _GXColor*, _GXColor*, _GXColor*,
                              f32);
void dKy_darkworld_check();
void cM_rad2s(f32);
void cM_atan2s(f32, f32);
void cM_rndF(f32);
void cM_rndFX(f32);
void cM3d_VectorProduct2d(f32, f32, f32, f32, f32, f32);
void cLib_addCalc(f32*, f32, f32, f32, f32);
void* operator new(u32, int);

extern "C" void __dt__4cXyzFv();
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
extern "C" void mDoMtx_XrotM__FPA4_fs();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_ZrotM__FPA4_fs();
extern "C" void mDoLib_project__FP3VecP3Vec();
extern "C" void __dt__5csXyzFv();
extern "C" void fopKyM_create__FsiP4cXyzP4cXyzPFPv_i();
extern "C" void getStatusRoomDt__20dStage_roomControl_cFi();
extern "C" void getLayerNo__14dComIfG_play_cFi();
extern "C" void dComIfG_getStageRes__FPCc();
extern "C" void dComIfGs_PolyDamageOff_Set__FSc();
extern "C" void isDungeonItem__12dSv_memBit_cCFi();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void getRunEventName__16dEvent_manager_cFv();
extern "C" void
set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void newData__13dDlst_peekZ_cFssPUl();
extern "C" void __dt__8SNOW_EFFFv();
extern "C" void __ct__8SNOW_EFFFv();
extern "C" void __dt__8STAR_EFFFv();
extern "C" void __ct__8STAR_EFFFv();
extern "C" void dKyw_get_wind_vec__Fv();
extern "C" void dKyw_get_wind_pow__Fv();
extern "C" void dKyw_get_wind_vecpow__Fv();
extern "C" void dKyw_pntwind_get_vecpow__FP4cXyz();
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
extern "C" void RoofChk__4dBgSFP12dBgS_RoofChk();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void __dt__18dBgS_ObjGndChk_AllFv();
extern "C" void __ct__18dBgS_CamGndChk_WtrFv();
extern "C" void __dt__18dBgS_CamGndChk_WtrFv();
extern "C" void SetObj__16dBgS_PolyPassChkFv();
extern "C" void __ct__12dBgS_RoofChkFv();
extern "C" void __dt__12dBgS_RoofChkFv();
extern "C" void Prepare__12dCcMassS_MngFv();
extern "C" void checkNowWolfEyeUp__9daPy_py_cFv();
extern "C" void dKy_get_parcent__Ffff();
extern "C" void getDaytime__18dScnKy_env_light_cFv();
extern "C" void dKy_daynight_check__Fv();
extern "C" void dKy_move_room_ratio__FP12dKy_tevstr_cPSc();
extern "C" void dKy_efplight_set__FP15LIGHT_INFLUENCE();
extern "C" void dKy_efplight_cut__FP15LIGHT_INFLUENCE();
extern "C" void dKy_actor_addcol_amb_set__Fsssf();
extern "C" void dKy_bg_addcol_amb_set__Fsssf();
extern "C" void dKy_bg1_addcol_amb_set__Fsssf();
extern "C" void dKy_addcol_fog_set__Fsssf();
extern "C" void dKy_vrbox_addcol_sky0_set__Fsssf();
extern "C" void dKy_vrbox_addcol_kasumi_set__Fsssf();
extern "C" void dKy_GxFog_set__Fv();
extern "C" void dKy_rain_check__Fv();
extern "C" void dKy_set_actcol_ratio__Ff();
extern "C" void dKy_set_bgcol_ratio__Ff();
extern "C" void dKy_set_fogcol_ratio__Ff();
extern "C" void dKy_set_vrboxcol_ratio__Ff();
extern "C" void
dKy_ParticleColor_get_bg__FP4cXyzP12dKy_tevstr_cP8_GXColorP8_GXColorP8_GXColorP8_GXColorf();
extern "C" void dKy_darkworld_check__Fv();
extern "C" void __pl__4cXyzCFRC3Vec();
extern "C" void __ct__5csXyzFsss();
extern "C" void cM_rad2s__Ff();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_rndF__Ff();
extern "C" void cM_rndFX__Ff();
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
extern "C" void cM3d_VectorProduct2d__Fffffff();
extern "C" void cLib_addCalc__FPfffff();
extern "C" void startNearThunderSe__10Z2EnvSeMgrFSc();
extern "C" void* __nw__FUli();
extern "C" void reinitGX__6J3DSysFv();
extern "C" void PSMTXConcat();
extern "C" void PSMTXInverse();
extern "C" void PSMTXRotRad();
extern "C" void PSMTXTrans();
extern "C" void C_MTXLightPerspective();
extern "C" void PSMTXMultVec();
extern "C" void PSVECAdd();
extern "C" void PSVECSquareMag();
extern "C" void PSVECSquareDistance();
extern "C" void GXSetVtxDesc();
extern "C" void GXClearVtxDesc();
extern "C" void GXSetVtxAttrFmt();
extern "C" void GXSetTexCoordGen2();
extern "C" void GXSetNumTexGens();
extern "C" void GXBegin();
extern "C" void GXSetCullMode();
extern "C" void GXSetNumChans();
extern "C" void GXSetChanCtrl();
extern "C" void GXInitTexObj();
extern "C" void GXInitTexObjLOD();
extern "C" void GXLoadTexObj();
extern "C" void GXSetNumIndStages();
extern "C" void GXSetTevColorIn();
extern "C" void GXSetTevAlphaIn();
extern "C" void GXSetTevColorOp();
extern "C" void GXSetTevAlphaOp();
extern "C" void GXSetTevColor();
extern "C" void GXSetAlphaCompare();
extern "C" void GXSetTevOrder();
extern "C" void GXSetNumTevStages();
extern "C" void GXSetFog();
extern "C" void GXSetBlendMode();
extern "C" void GXSetColorUpdate();
extern "C" void GXSetZMode();
extern "C" void GXSetZCompLoc();
extern "C" void GXLoadPosMtxImm();
extern "C" void GXSetCurrentMtx();
extern "C" void GXLoadTexMtxImm();
extern "C" void GXSetClipMode();
extern "C" void __register_global_object();
extern "C" void __construct_array();
extern "C" void __save_gpr();
extern "C" void _savegpr_17();
extern "C" void _savegpr_18();
extern "C" void _savegpr_19();
extern "C" void _savegpr_20();
extern "C" void _savegpr_21();
extern "C" void _savegpr_22();
extern "C" void _savegpr_23();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void __restore_gpr();
extern "C" void _restgpr_17();
extern "C" void _restgpr_18();
extern "C" void _restgpr_19();
extern "C" void _restgpr_20();
extern "C" void _restgpr_21();
extern "C" void _restgpr_22();
extern "C" void _restgpr_23();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void memcmp();
extern "C" void strcmp();
extern "C" void cos();
extern "C" void sin();
extern "C" void atan2();
extern "C" void sqrt();
extern "C" extern void* __vt__14dBgS_ObjGndChk[12 + 1 /* padding */];
extern "C" extern void* __vt__19dKankyo_star_Packet[5];
extern "C" extern void* __vt__19dKankyo_snow_Packet[5];
extern "C" extern void* __vt__18dBgS_ObjGndChk_All[12];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_mEnvSeMgr[780];
extern "C" extern u8 g_Counter[12 + 4 /* padding */];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mFrameBufferTimg__13mDoGph_gInf_c[4];
extern "C" extern u8 struct_80450D64[4];
extern "C" extern u8 m_mode__7dDemo_c[4];
extern "C" extern u8 sOldVcdVatCmd__8J3DShape[4];

//
// Declarations:
//

/* ############################################################################################## */
/* 804521B0-804521B8 0008+00 s=19 e=0 z=0  None .sdata2    @3953 */
SECTION_SDATA2 static u8 lit_3953[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804521B8-804521BC 0004+00 s=31 e=0 z=0  None .sdata2    @3954 */
SECTION_SDATA2 static u8 lit_3954[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 8005B660-8005B708 00A8+00 s=3 e=0 z=0  None .text      vectle_calc__FP10DOUBLE_POSP4cXyz */
//	8005B69C: 8036CA54 (sqrt)
//	8005B6A0: 804521B0 (lit_3953)
//	8005B6E0: 804521B8 (lit_3954)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void vectle_calc(DOUBLE_POS* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/vectle_calc__FP10DOUBLE_POSP4cXyz.s"
}
#pragma pop

/* 8005B708-8005B760 0058+00 s=7 e=0 z=0  None .text      get_vectle_calc__FP4cXyzP4cXyzP4cXyz */
//	8005B74C: 8005B660 (vectle_calc__FP10DOUBLE_POSP4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void get_vectle_calc(cXyz* param_0, cXyz* param_1, cXyz* param_2) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/get_vectle_calc__FP4cXyzP4cXyzP4cXyz.s"
}
#pragma pop

/* 8005B760-8005B780 0020+00 s=8 e=7 z=11  None .text      dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz
 */
//	8005B76C: 8005B708 (get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_get_vectle_calc(cXyz* param_0, cXyz* param_1, cXyz* param_2) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz.s"
}
#pragma pop

/* ############################################################################################## */
/* 804521BC-804521C0 0004+00 s=4 e=0 z=0  None .sdata2    @3970 */
SECTION_SDATA2 static f32 lit_3970 = 200.0f;

/* 8005B780-8005B830 00B0+00 s=2 e=0 z=0  None .text dKy_set_eyevect_calc__FP12camera_classP3Vecff
 */
//	8005B7C0: 8005B708 (get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005B7E8: 804521BC (lit_3970)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dKy_set_eyevect_calc(camera_class* param_0, Vec* param_1, f32 param_2,
                                     f32 param_3) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKy_set_eyevect_calc__FP12camera_classP3Vecff.s"
}
#pragma pop

/* 8005B830-8005B92C 00FC+00 s=6 e=0 z=0  None .text
 * dKy_set_eyevect_calc2__FP12camera_classP3Vecff               */
//	8005B874: 804521B8 (lit_3954)
//	8005B894: 804521B0 (lit_3953)
//	8005B8B4: 8005B660 (vectle_calc__FP10DOUBLE_POSP4cXyz)
//	8005B8F4: 804521B8 (lit_3954)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dKy_set_eyevect_calc2(camera_class* param_0, Vec* param_1, f32 param_2,
                                      f32 param_3) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKy_set_eyevect_calc2__FP12camera_classP3Vecff.s"
}
#pragma pop

/* ############################################################################################## */
/* 804521C0-804521C4 0004+00 s=1 e=0 z=0  None .sdata2    @3992 */
SECTION_SDATA2 static f32 lit_3992 = 0.125f;

/* 804521C4-804521C8 0004+00 s=9 e=0 z=0  None .sdata2    @3993 */
SECTION_SDATA2 static f32 lit_3993 = 1.0f / 100.0f;

/* 804521C8-804521D0 0008+00 s=15 e=0 z=0  None .sdata2    @3995 */
SECTION_SDATA2 static f64 lit_3995 = 4503601774854144.0 /* cast s32 to float */;

/* 8005B92C-8005BA24 00F8+00 s=5 e=0 z=0  None .text
 * dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID   */
//	8005B93C: 803621DC (_savegpr_29)
//	8005B974: 8035DE40 (GXInitTexObj)
//	8005B984: 804521C0 (lit_3992)
//	8005B990: 804521C8 (lit_3995)
//	8005B9D0: 804521C4 (lit_3993)
//	8005B9FC: 8035E0D4 (GXInitTexObjLOD)
//	8005BA08: 8035E414 (GXLoadTexObj)
//	8005BA10: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dKyr_set_btitex_common(_GXTexObj* param_0, ResTIMG* param_1, _GXTexMapID param_2) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID.s"
}
#pragma pop

/* 8005BA24-8005BA48 0024+00 s=12 e=0 z=0  None .text      dKyr_set_btitex__FP9_GXTexObjP7ResTIMG */
//	8005BA34: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dKyr_set_btitex(_GXTexObj* param_0, ResTIMG* param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_set_btitex__FP9_GXTexObjP7ResTIMG.s"
}
#pragma pop

/* ############################################################################################## */
/* 804521D0-804521D4 0004+00 s=4 e=0 z=0  None .sdata2    @4103 */
SECTION_SDATA2 static f32 lit_4103 = 9.999999747378752e-05f;

/* 804521D4-804521D8 0004+00 s=4 e=0 z=0  None .sdata2    @4104 */
SECTION_SDATA2 static f32 lit_4104 = 4000.0f;

/* 804521D8-804521DC 0004+00 s=2 e=0 z=0  None .sdata2    @4105 */
SECTION_SDATA2 static f32 lit_4105 = 304.0f;

/* 804521DC-804521E0 0004+00 s=2 e=0 z=0  None .sdata2    @4106 */
SECTION_SDATA2 static f32 lit_4106 = 224.0f;

/* 804521E0-804521E4 0004+00 s=2 e=0 z=0  None .sdata2    @4107 */
SECTION_SDATA2 static f32 lit_4107 = 0.0054931640625f;

/* 804521E4-804521E8 0004+00 s=6 e=0 z=0  None .sdata2    @4108 */
SECTION_SDATA2 static f32 lit_4108 = 180.0f;

/* 804521E8-804521F0 0008+00 s=17 e=0 z=0  None .sdata2    @4109 */
SECTION_SDATA2 static f64 lit_4109 = 0.5;

/* 804521F0-804521F8 0008+00 s=17 e=0 z=0  None .sdata2    @4110 */
SECTION_SDATA2 static f64 lit_4110 = 3.0;

/* 804521F8-804521FC 0004+00 s=6 e=0 z=0  None .sdata2    @4111 */
SECTION_SDATA2 static f32 lit_4111 = 250.0f;

/* 804521FC-80452200 0004+00 s=4 e=0 z=0  None .sdata2    @4112 */
SECTION_SDATA2 static f32 lit_4112 = 600.0f;

/* 80452200-80452204 0004+00 s=2 e=0 z=0  None .sdata2    @4113 */
SECTION_SDATA2 static f32 lit_4113 = 110.0f;

/* 80452204-80452208 0004+00 s=1 e=0 z=0  None .sdata2    @4114 */
SECTION_SDATA2 static f32 lit_4114 = 4100.0f;

/* 8005BA48-8005BED8 0490+00 s=0 e=1 z=0  None .text      dKyr_lenzflare_move__Fv */
//	8005BA58: 803621D8 (_savegpr_28)
//	8005BA5C: 8042CA54 (g_env_light)
//	8005BA60: 8042CA54 (g_env_light)
//	8005BA6C: 804061C0 (g_dComIfG_gameInfo)
//	8005BA70: 804061C0 (g_dComIfG_gameInfo)
//	8005BA7C: 804521D0 (lit_4103)
//	8005BA90: 804521D4 (lit_4104)
//	8005BA98: 8005B780 (dKy_set_eyevect_calc__FP12camera_classP3Vecff)
//	8005BAA8: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005BAE4: 80015310 (mDoLib_project__FP3VecP3Vec)
//	8005BAE8: 804521D8 (lit_4105)
//	8005BAF0: 804521DC (lit_4106)
//	8005BAF8: 804521B8 (lit_3954)
//	8005BB0C: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005BB18: 80267674 (cM_atan2s__Fff)
//	8005BB20: 804521C8 (lit_3995)
//	8005BB44: 804521E0 (lit_4107)
//	8005BB54: 804521E4 (lit_4108)
//	8005BB6C: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005BB88: 8034739C (PSVECSquareDistance)
//	8005BB8C: 804521B8 (lit_3954)
//	8005BB9C: 804521E8 (lit_4109)
//	8005BBA4: 804521F0 (lit_4110)
//	8005BBEC: 804521B0 (lit_3953)
//	8005BBF8: 80450AE0 (__float_nan)
//	8005BBFC: 80450AE0 (__float_nan)
//	8005BC68: 80450AE0 (__float_nan)
//	8005BC6C: 80450AE0 (__float_nan)
//	8005BC70: 804521F8 (lit_4111)
//	8005BC74: 804521FC (lit_4112)
//	8005BC84: 804521C8 (lit_3995)
//	8005BD14: 8034739C (PSVECSquareDistance)
//	8005BD18: 804521B8 (lit_3954)
//	8005BD28: 804521E8 (lit_4109)
//	8005BD30: 804521F0 (lit_4110)
//	8005BD78: 804521B0 (lit_3953)
//	8005BD84: 80450AE0 (__float_nan)
//	8005BD88: 80450AE0 (__float_nan)
//	8005BDF4: 80450AE0 (__float_nan)
//	8005BDF8: 80450AE0 (__float_nan)
//	8005BDFC: 804521F8 (lit_4111)
//	8005BE00: 80452200 (lit_4113)
//	8005BE14: 80452204 (lit_4114)
//	8005BE1C: 804521C8 (lit_3995)
//	8005BEC4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_lenzflare_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_lenzflare_move__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452208-8045220C 0004+00 s=3 e=0 z=0  None .sdata2    @4126 */
SECTION_SDATA2 static f32 lit_4126 = 285.0f;

/* 8045220C-80452210 0004+00 s=1 e=0 z=0  None .sdata2    @4127 */
SECTION_SDATA2 static f32 lit_4127 = 67.5f;

/* 8005BED8-8005BF08 0030+00 s=1 e=0 z=0  None .text      dKyr_moon_arrival_check__Fv */
//	8005BEDC: 8042CA54 (g_env_light)
//	8005BEE0: 8042CA54 (g_env_light)
//	8005BEE8: 80452208 (lit_4126)
//	8005BEF4: 8045220C (lit_4127)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dKyr_moon_arrival_check() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_moon_arrival_check__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8037A4C0-8037A4E8 0028+00 s=1 e=0 z=0  None .rodata    sun_chkpnt$4155 */
SECTION_RODATA static u8 const sun_chkpnt[40] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0xC1, 0xA0,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0xC1, 0xA0, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
};

/* 8037A4E8-8037A508 0020+00 s=1 e=0 z=0  None .rodata    @6991 */
SECTION_RODATA static u8 const lit_6991[32] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x54, 0x7A, 0xE1, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x47, 0xAE, 0x14,
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x47, 0xAE, 0x14, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x54, 0x7A, 0xE1,
};

/* 8037A508-8037A528 0020+00 s=1 e=0 z=0  None .rodata    @7275 */
SECTION_RODATA static u8 const lit_7275[32] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x54, 0x7A, 0xE1, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x47, 0xAE, 0x14,
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x47, 0xAE, 0x14, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x54, 0x7A, 0xE1,
};

/* 8037A528-8037A548 0020+00 s=1 e=0 z=0  None .rodata    scale_dat$7608 */
SECTION_RODATA static u8 const scale_dat[32] = {
    0x45, 0xFA, 0x00, 0x00, 0x46, 0x24, 0x10, 0x00, 0x40, 0x4C, 0xCC, 0xCD, 0x3F, 0xE6, 0x66, 0x66,
    0x3F, 0xE6, 0x66, 0x66, 0x40, 0xC6, 0x66, 0x66, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x80, 0x00, 0x00,
};

/* 8037A548-8037A568 0020+00 s=1 e=0 z=0  None .rodata    col_dat$7609 */
SECTION_RODATA static u8 const col_dat[32] = {
    0xB4, 0xC8, 0xFF, 0xFF, 0xC8, 0xC8, 0xFF, 0x50, 0xFF, 0x8C, 0x78, 0x5A, 0xFF, 0xB4, 0x78, 0x64,
    0xB4, 0xB4, 0x78, 0x55, 0xB4, 0xC8, 0x64, 0x5A, 0xDC, 0xFF, 0xB4, 0x6E, 0xC8, 0xDC, 0xFF, 0x5A,
};

/* 8037A568-8037A578 0010+00 s=1 e=0 z=0  None .rodata    star_col$9440 */
SECTION_RODATA static u8 const star_col[16] = {
    0xFF, 0xBE, 0xC8, 0xA0, 0xC8, 0xFF, 0xBE, 0x78, 0xC8, 0xBE, 0xFF, 0x50, 0xFF, 0xFF, 0xFF, 0xC8,
};

/* 8037A578-8037A620 00A7+01 s=25 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_8037A578 = "F_SP200";
SECTION_DEAD char const* const stringBase_8037A580 = "D_MN09B";
SECTION_DEAD char const* const stringBase_8037A588 = "Always";
SECTION_DEAD char const* const stringBase_8037A58F = "F_SP122";
SECTION_DEAD char const* const stringBase_8037A597 = "R_SP30";
SECTION_DEAD char const* const stringBase_8037A59E = "R_SP107";
SECTION_DEAD char const* const stringBase_8037A5A6 = "R_SP127";
SECTION_DEAD char const* const stringBase_8037A5AE = "F_SP113";
SECTION_DEAD char const* const stringBase_8037A5B6 = "D_MN09";
SECTION_DEAD char const* const stringBase_8037A5BD = "D_MN08";
SECTION_DEAD char const* const stringBase_8037A5C4 = "F_SP127";
SECTION_DEAD char const* const stringBase_8037A5CC = "D_MN05A";
SECTION_DEAD char const* const stringBase_8037A5D4 = "D_MN07A";
SECTION_DEAD char const* const stringBase_8037A5DC = "F_SP103";
SECTION_DEAD char const* const stringBase_8037A5E4 = "APPEAR_HAWKER";
SECTION_DEAD char const* const stringBase_8037A5F2 = "F_NW01";
SECTION_DEAD char const* const stringBase_8037A5F9 = "D_MN11";
SECTION_DEAD char const* const stringBase_8037A600 = "D_MN07";
SECTION_DEAD char const* const stringBase_8037A607 = "R_SP";
SECTION_DEAD char const* const stringBase_8037A60C = "F_kumolight_01.bti";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8037A61F = "";
#pragma pop

/* 803A9BA0-803A9BAC 000C+00 s=1 e=0 z=0  None .data      sun_color$4213 */
SECTION_DATA static u8 sun_color[12] = {
    0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF,
};

/* 803A9BAC-803A9BB8 000C+00 s=1 e=0 z=0  None .data      sun_color2$4214 */
SECTION_DATA static u8 sun_color2[12] = {
    0xFF, 0x6E, 0x2B, 0xFF, 0x9C, 0x79, 0x5C, 0xFF, 0xFF, 0x4E, 0x00, 0xFF,
};

/* 80450EE8-80450EEC 0004+00 s=1 e=0 z=0  None .sbss      S_parcent_bak$4131 */
static u8 S_parcent_bak[4];

/* 80450EEC-80450EF0 0004+00 s=2 e=0 z=0  None .sbss      None */
static u8 struct_80450EEC[4];

/* 80452210-80452214 0004+00 s=4 e=0 z=0  None .sdata2    @4353 */
SECTION_SDATA2 static f32 lit_4353 = 8000.0f;

/* 80452214-80452218 0004+00 s=26 e=0 z=0  None .sdata2    @4354 */
SECTION_SDATA2 static f32 lit_4354 = 1.0f;

/* 80452218-8045221C 0004+00 s=1 e=0 z=0  None .sdata2    @4355 */
SECTION_SDATA2 static f32 lit_4355 = 77.5f;

/* 8045221C-80452220 0004+00 s=5 e=0 z=0  None .sdata2    @4356 */
SECTION_SDATA2 static f32 lit_4356 = 1.0f / 20.0f;

/* 80452220-80452224 0004+00 s=14 e=0 z=0  None .sdata2    @4357 */
SECTION_SDATA2 static f32 lit_4357 = 1.0f / 10.0f;

/* 80452224-80452228 0004+00 s=2 e=0 z=0  None .sdata2    @4358 */
SECTION_SDATA2 static f32 lit_4358 = 9.999999747378752e-06f;

/* 80452228-8045222C 0004+00 s=2 e=0 z=0  None .sdata2    @4359 */
SECTION_SDATA2 static f32 lit_4359 = 458.0f;

/* 8045222C-80452230 0004+00 s=2 e=0 z=0  None .sdata2    @4360 */
SECTION_SDATA2 static f32 lit_4360 = 608.0f;

/* 80452230-80452234 0004+00 s=3 e=0 z=0  None .sdata2    @4361 */
SECTION_SDATA2 static f32 lit_4361 = 1000000000.0f;

/* 80452234-80452238 0004+00 s=1 e=0 z=0  None .sdata2    @4362 */
SECTION_SDATA2 static f32 lit_4362 = 450.0f;

/* 80452238-8045223C 0004+00 s=10 e=0 z=0  None .sdata2    @4363 */
SECTION_SDATA2 static f32 lit_4363 = 0.0010000000474974513f;

/* 8045223C-80452240 0004+00 s=18 e=0 z=0  None .sdata2    @4364 */
SECTION_SDATA2 static f32 lit_4364 = 0.5f;

/* 80452240-80452244 0004+00 s=13 e=0 z=0  None .sdata2    @4365 */
SECTION_SDATA2 static f32 lit_4365 = 1.0f / 5.0f;

/* 80452244-80452248 0004+00 s=11 e=0 z=0  None .sdata2    @4366 */
SECTION_SDATA2 static f32 lit_4366 = 3.0f / 10.0f;

/* 80452248-8045224C 0004+00 s=8 e=0 z=0  None .sdata2    @4367 */
SECTION_SDATA2 static f32 lit_4367 = 4.0f / 5.0f;

/* 8045224C-80452250 0004+00 s=12 e=0 z=0  None .sdata2    @4368 */
SECTION_SDATA2 static f32 lit_4368 = 255.0f;

/* 80452250-80452254 0004+00 s=2 e=0 z=0  None .sdata2    @4369 */
SECTION_SDATA2 static f32 lit_4369 = 90.0f;

/* 80452254-80452258 0004+00 s=3 e=0 z=0  None .sdata2    @4370 */
SECTION_SDATA2 static f32 lit_4370 = 105.0f;

/* 80452258-8045225C 0004+00 s=1 e=0 z=0  None .sdata2    @4371 */
SECTION_SDATA2 static f32 lit_4371 = 247.5f;

/* 8045225C-80452260 0004+00 s=1 e=0 z=0  None .sdata2    @4372 */
SECTION_SDATA2 static f32 lit_4372 = 270.0f;

/* 80452260-80452264 0004+00 s=1 e=0 z=0  None .sdata2    @4373 */
SECTION_SDATA2 static f32 lit_4373 = -8000.0f;

/* 80452264-80452268 0004+00 s=2 e=0 z=0  None .sdata2    @4374 */
SECTION_SDATA2 static f32 lit_4374 = 6.0f;

/* 80452268-8045226C 0004+00 s=1 e=0 z=0  None .sdata2    @4375 */
SECTION_SDATA2 static f32 lit_4375 = 30160.0f;

/* 8045226C-80452270 0004+00 s=1 e=0 z=0  None .sdata2    @4376 */
SECTION_SDATA2 static f32 lit_4376 = 21678.0f;

/* 80452270-80452278 0008+00 s=9 e=0 z=0  None .sdata2    @4379 */
SECTION_SDATA2 static f64 lit_4379 = 4503599627370496.0 /* cast u32 to float */;

/* 8005BF08-8005CC5C 0D54+00 s=0 e=1 z=0  None .text      dKyr_sun_move__Fv */
//	8005BF38: 803621AC (_savegpr_17)
//	8005BF3C: 8042CA54 (g_env_light)
//	8005BF40: 8042CA54 (g_env_light)
//	8005BF4C: 804061C0 (g_dComIfG_gameInfo)
//	8005BF50: 804061C0 (g_dComIfG_gameInfo)
//	8005BF58: 804521B8 (lit_3954)
//	8005BF5C: 80450EEC (struct_80450EEC)
//	8005BF68: 80450EE8 (S_parcent_bak)
//	8005BF70: 80450EEC (struct_80450EEC)
//	8005BF80: 804061C0 (g_dComIfG_gameInfo)
//	8005BF84: 804061C0 (g_dComIfG_gameInfo)
//	8005BFA8: 8042CA54 (g_env_light)
//	8005BFAC: 8042CA54 (g_env_light)
//	8005BFD0: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005BFDC: 8042CA54 (g_env_light)
//	8005BFE0: 8042CA54 (g_env_light)
//	8005BFEC: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005BFF4: 80452210 (lit_4353)
//	8005C040: 804521B8 (lit_3954)
//	8005C050: 80452214 (lit_4354)
//	8005C064: 80452214 (lit_4354)
//	8005C0C0: 8042CA54 (g_env_light)
//	8005C0C4: 8042CA54 (g_env_light)
//	8005C0CC: 80452218 (lit_4355)
//	8005C0D8: 80452208 (lit_4126)
//	8005C0E4: 801A8A34 (dKy_rain_check__Fv)
//	8005C0F8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005C0FC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005C100: 80368994 (strcmp)
//	8005C110: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005C114: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005C11C: 80368994 (strcmp)
//	8005C128: 804521B8 (lit_3954)
//	8005C130: 80452214 (lit_4354)
//	8005C134: 8045221C (lit_4356)
//	8005C138: 80452220 (lit_4357)
//	8005C13C: 80452224 (lit_4358)
//	8005C140: 8026F97C (cLib_addCalc__FPfffff)
//	8005C158: 80015310 (mDoLib_project__FP3VecP3Vec)
//	8005C168: 80452228 (lit_4359)
//	8005C170: 804061C0 (g_dComIfG_gameInfo)
//	8005C174: 804061C0 (g_dComIfG_gameInfo)
//	8005C17C: 8037A4C0 (sun_chkpnt)
//	8005C180: 8037A4C0 (sun_chkpnt)
//	8005C184: 804521B8 (lit_3954)
//	8005C1C8: 8045222C (lit_4360)
//	8005C22C: 80056018 (newData__13dDlst_peekZ_cFssPUl)
//	8005C2AC: 80452230 (lit_4361)
//	8005C2B4: 804521B8 (lit_3954)
//	8005C2BC: 804521D8 (lit_4105)
//	8005C2C4: 804521DC (lit_4106)
//	8005C2D8: 8034739C (PSVECSquareDistance)
//	8005C2DC: 804521B8 (lit_3954)
//	8005C2EC: 804521E8 (lit_4109)
//	8005C2F4: 804521F0 (lit_4110)
//	8005C33C: 804521B0 (lit_3953)
//	8005C348: 80450AE0 (__float_nan)
//	8005C34C: 80450AE0 (__float_nan)
//	8005C3B8: 80450AE0 (__float_nan)
//	8005C3BC: 80450AE0 (__float_nan)
//	8005C3C8: 80452234 (lit_4362)
//	8005C3D8: 80452214 (lit_4354)
//	8005C3E8: 80452214 (lit_4354)
//	8005C410: 804521B8 (lit_3954)
//	8005C414: 80452220 (lit_4357)
//	8005C418: 8045221C (lit_4356)
//	8005C41C: 80452238 (lit_4363)
//	8005C420: 8026F97C (cLib_addCalc__FPfffff)
//	8005C434: 8042CA54 (g_env_light)
//	8005C438: 8042CA54 (g_env_light)
//	8005C484: 80452214 (lit_4354)
//	8005C488: 8045223C (lit_4364)
//	8005C490: 804521C4 (lit_3993)
//	8005C494: 8026F97C (cLib_addCalc__FPfffff)
//	8005C4A0: 80452214 (lit_4354)
//	8005C4A4: 80452240 (lit_4365)
//	8005C4A8: 80452244 (lit_4366)
//	8005C4AC: 80452238 (lit_4363)
//	8005C4B0: 8026F97C (cLib_addCalc__FPfffff)
//	8005C4C8: 804521B8 (lit_3954)
//	8005C4CC: 8045223C (lit_4364)
//	8005C4D4: 80452238 (lit_4363)
//	8005C4D8: 8026F97C (cLib_addCalc__FPfffff)
//	8005C4E4: 804521B8 (lit_3954)
//	8005C4E8: 80452240 (lit_4365)
//	8005C4EC: 80452244 (lit_4366)
//	8005C4F0: 80452238 (lit_4363)
//	8005C4F4: 8026F97C (cLib_addCalc__FPfffff)
//	8005C4FC: 804521B8 (lit_3954)
//	8005C52C: 804521B8 (lit_3954)
//	8005C568: 80450EE8 (S_parcent_bak)
//	8005C580: 80452244 (lit_4366)
//	8005C58C: 80452214 (lit_4354)
//	8005C59C: 801A8A54 (dKy_set_actcol_ratio__Ff)
//	8005C5A0: 80452214 (lit_4354)
//	8005C5B0: 801A8A64 (dKy_set_bgcol_ratio__Ff)
//	8005C5B4: 80452214 (lit_4354)
//	8005C5C8: 801A8A74 (dKy_set_fogcol_ratio__Ff)
//	8005C5CC: 80452214 (lit_4354)
//	8005C5D0: 80452248 (lit_4367)
//	8005C5E8: 801A8A84 (dKy_set_vrboxcol_ratio__Ff)
//	8005C5EC: 80450EE8 (S_parcent_bak)
//	8005C5F4: 8045224C (lit_4368)
//	8005C610: 80452214 (lit_4354)
//	8005C614: 80452220 (lit_4357)
//	8005C618: 804521C4 (lit_3993)
//	8005C61C: 804521D0 (lit_4103)
//	8005C620: 8026F97C (cLib_addCalc__FPfffff)
//	8005C62C: 804521B8 (lit_3954)
//	8005C630: 8045223C (lit_4364)
//	8005C634: 80452220 (lit_4357)
//	8005C638: 80452238 (lit_4363)
//	8005C63C: 8026F97C (cLib_addCalc__FPfffff)
//	8005C644: 804521E4 (lit_4108)
//	8005C650: 80452250 (lit_4369)
//	8005C65C: 804521B8 (lit_3954)
//	8005C664: 80452254 (lit_4370)
//	8005C670: 8019D8AC (dKy_get_parcent__Ffff)
//	8005C678: 80452214 (lit_4354)
//	8005C67C: 803A9BA0 (sun_color)
//	8005C680: 803A9BA0 (sun_color)
//	8005C684: 80452270 (lit_4379)
//	8005C784: 803A9BAC (sun_color2)
//	8005C788: 803A9BAC (sun_color2)
//	8005C888: 80452258 (lit_4371)
//	8005C894: 80452214 (lit_4354)
//	8005C89C: 8045225C (lit_4372)
//	8005C8A8: 8019D8AC (dKy_get_parcent__Ffff)
//	8005C8AC: 80452214 (lit_4354)
//	8005C8B8: 804521B8 (lit_3954)
//	8005C8BC: 803A9BA0 (sun_color)
//	8005C8C0: 803A9BA0 (sun_color)
//	8005C8C8: 80452270 (lit_4379)
//	8005C9C8: 803A9BAC (sun_color2)
//	8005C9CC: 803A9BAC (sun_color2)
//	8005CACC: 8005BED8 (dKyr_moon_arrival_check__Fv)
//	8005CAE4: 80452260 (lit_4373)
//	8005CAF0: 80452264 (lit_4374)
//	8005CAF8: 80452214 (lit_4354)
//	8005CB0C: 80452240 (lit_4365)
//	8005CB10: 804521C4 (lit_3993)
//	8005CB14: 80452238 (lit_4363)
//	8005CB18: 8026F97C (cLib_addCalc__FPfffff)
//	8005CB24: 804521B8 (lit_3954)
//	8005CB28: 80452240 (lit_4365)
//	8005CB2C: 804521C4 (lit_3993)
//	8005CB30: 80452238 (lit_4363)
//	8005CB34: 8026F97C (cLib_addCalc__FPfffff)
//	8005CB38: 8042CA54 (g_env_light)
//	8005CB3C: 8042CA54 (g_env_light)
//	8005CB50: 8045224C (lit_4368)
//	8005CB60: 80452240 (lit_4365)
//	8005CB7C: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005CB84: 80452268 (lit_4375)
//	8005CBC0: 8045226C (lit_4376)
//	8005CBCC: 804061C0 (g_dComIfG_gameInfo)
//	8005CBD0: 804061C0 (g_dComIfG_gameInfo)
//	8005CC18: 80452214 (lit_4354)
//	8005CC1C: 8004D4CC
//(set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8005CC48: 803621F8 (_restgpr_17)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_sun_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_sun_move__Fv.s"
}
#pragma pop

/* 8005CC5C-8005CDA8 014C+00 s=0 e=1 z=0  None .text      dKyr_rain_init__Fv */
//	8005CC6C: 803621DC (_savegpr_29)
//	8005CC70: 804061C0 (g_dComIfG_gameInfo)
//	8005CC74: 804061C0 (g_dComIfG_gameInfo)
//	8005CC7C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005CC80: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005CC9C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8005CCA0: 8042CA54 (g_env_light)
//	8005CCA4: 8042CA54 (g_env_light)
//	8005CCB0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005CCB4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005CCC8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8005CD0C: 804521B8 (lit_3954)
//	8005CD94: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_rain_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_rain_init__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452278-8045227C 0004+00 s=1 e=0 z=0  None .sdata2    @4430 */
SECTION_SDATA2 static f32 lit_4430 = -800.0f;

/* 8005CDA8-8005CDD0 0028+00 s=1 e=0 z=0  None .text      rain_bg_chk__FP19dKankyo_rain_Packeti */
//	8005CDA8: 80452278 (lit_4430)
//	8005CDAC: 804061C0 (g_dComIfG_gameInfo)
//	8005CDB0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void rain_bg_chk(dKankyo_rain_Packet* param_0, int param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/rain_bg_chk__FP19dKankyo_rain_Packeti.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045227C-80452280 0004+00 s=9 e=0 z=0  None .sdata2    @4467 */
SECTION_SDATA2 static f32 lit_4467 = 50.0f;

/* 80452280-80452284 0004+00 s=4 e=0 z=0  None .sdata2    @4468 */
SECTION_SDATA2 static f32 lit_4468 = 10000.0f;

/* 8005CDD0-8005CF78 01A8+00 s=1 e=0 z=0  None .text      overhead_bg_chk__Fv */
//	8005CDE0: 803621DC (_savegpr_29)
//	8005CDE4: 804061C0 (g_dComIfG_gameInfo)
//	8005CDE8: 804061C0 (g_dComIfG_gameInfo)
//	8005CDFC: 8007757C (__ct__11dBgS_GndChkFv)
//	8005CE00: 803A382C (__vt__14dBgS_ObjGndChk)
//	8005CE04: 803A382C (__vt__14dBgS_ObjGndChk)
//	8005CE28: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	8005CE2C: 803AB6E8 (__vt__18dBgS_ObjGndChk_All)
//	8005CE30: 803AB6E8 (__vt__18dBgS_ObjGndChk_All)
//	8005CE60: 80078FF4 (__ct__12dBgS_RoofChkFv)
//	8005CE7C: 8045227C (lit_4467)
//	8005CE94: 804061C0 (g_dComIfG_gameInfo)
//	8005CE98: 804061C0 (g_dComIfG_gameInfo)
//	8005CEA8: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	8005CEAC: 80452230 (lit_4361)
//	8005CEC0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005CEC4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005CECC: 80368994 (strcmp)
//	8005CED8: 80450D64 (struct_80450D64)
//	8005CEEC: 80079090 (__dt__12dBgS_RoofChkFv)
//	8005CEF8: 800778E8 (__dt__18dBgS_ObjGndChk_AllFv)
//	8005CF08: 80452280 (lit_4468)
//	8005CF1C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8005CF28: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8005CF2C: 8045227C (lit_4467)
//	8005CF4C: 80079090 (__dt__12dBgS_RoofChkFv)
//	8005CF58: 800778E8 (__dt__18dBgS_ObjGndChk_AllFv)
//	8005CF64: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void overhead_bg_chk() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/overhead_bg_chk__Fv.s"
}
#pragma pop

/* 8005CF78-8005D18C 0214+00 s=1 e=0 z=0  None .text      forward_overhead_bg_chk__FP4cXyzf */
//	8005CF90: 803621D8 (_savegpr_28)
//	8005CF9C: 804061C0 (g_dComIfG_gameInfo)
//	8005CFA0: 804061C0 (g_dComIfG_gameInfo)
//	8005CFB4: 8007757C (__ct__11dBgS_GndChkFv)
//	8005CFB8: 803A382C (__vt__14dBgS_ObjGndChk)
//	8005CFBC: 803A382C (__vt__14dBgS_ObjGndChk)
//	8005CFE0: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	8005CFE4: 803AB6E8 (__vt__18dBgS_ObjGndChk_All)
//	8005CFE8: 803AB6E8 (__vt__18dBgS_ObjGndChk_All)
//	8005D018: 80078FF4 (__ct__12dBgS_RoofChkFv)
//	8005D028: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005D068: 8045227C (lit_4467)
//	8005D0A0: 804061C0 (g_dComIfG_gameInfo)
//	8005D0A4: 804061C0 (g_dComIfG_gameInfo)
//	8005D0B4: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	8005D0B8: 80452230 (lit_4361)
//	8005D0CC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005D0D0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005D0D8: 80368994 (strcmp)
//	8005D0E4: 80450D64 (struct_80450D64)
//	8005D0F8: 80079090 (__dt__12dBgS_RoofChkFv)
//	8005D104: 800778E8 (__dt__18dBgS_ObjGndChk_AllFv)
//	8005D114: 80452280 (lit_4468)
//	8005D128: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8005D134: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8005D138: 8045227C (lit_4467)
//	8005D158: 80079090 (__dt__12dBgS_RoofChkFv)
//	8005D164: 800778E8 (__dt__18dBgS_ObjGndChk_AllFv)
//	8005D178: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void forward_overhead_bg_chk(cXyz* param_0, f32 param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/forward_overhead_bg_chk__FP4cXyzf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452284-80452288 0004+00 s=1 e=0 z=0  None .sdata2    @5096 */
SECTION_SDATA2 static f32 lit_5096 = -2.5f;

/* 80452288-8045228C 0004+00 s=6 e=0 z=0  None .sdata2    @5097 */
SECTION_SDATA2 static f32 lit_5097 = 10.0f;

/* 8045228C-80452290 0004+00 s=8 e=0 z=0  None .sdata2    @5098 */
SECTION_SDATA2 static f32 lit_5098 = 20.0f;

/* 80452290-80452294 0004+00 s=6 e=0 z=0  None .sdata2    @5099 */
SECTION_SDATA2 static f32 lit_5099 = 15.0f;

/* 80452294-80452298 0004+00 s=5 e=0 z=0  None .sdata2    @5100 */
SECTION_SDATA2 static f32 lit_5100 = 700.0f;

/* 80452298-8045229C 0004+00 s=2 e=0 z=0  None .sdata2    @5101 */
SECTION_SDATA2 static f32 lit_5101 = 1400.0f;

/* 8045229C-804522A0 0004+00 s=5 e=0 z=0  None .sdata2    @5102 */
SECTION_SDATA2 static f32 lit_5102 = 1200.0f;

/* 804522A0-804522A4 0004+00 s=1 e=0 z=0  None .sdata2    @5103 */
SECTION_SDATA2 static f32 lit_5103 = 35.5f;

/* 804522A4-804522A8 0004+00 s=4 e=0 z=0  None .sdata2    @5104 */
SECTION_SDATA2 static f32 lit_5104 = 800.0f;

/* 804522A8-804522AC 0004+00 s=5 e=0 z=0  None .sdata2    @5105 */
SECTION_SDATA2 static f32 lit_5105 = 360.0f;

/* 804522AC-804522B0 0004+00 s=4 e=0 z=0  None .sdata2    @5106 */
SECTION_SDATA2 static f32 lit_5106 = 2.0f / 25.0f;

/* 804522B0-804522B4 0004+00 s=2 e=0 z=0  None .sdata2    @5107 */
SECTION_SDATA2 static f32 lit_5107 = -2.0f;

/* 804522B4-804522B8 0004+00 s=2 e=0 z=0  None .sdata2    @5108 */
SECTION_SDATA2 static f32 lit_5108 = 850.0f;

/* 804522B8-804522BC 0004+00 s=8 e=0 z=0  None .sdata2    @5109 */
SECTION_SDATA2 static f32 lit_5109 = 40.0f;

/* 804522BC-804522C0 0004+00 s=2 e=0 z=0  None .sdata2    @5110 */
SECTION_SDATA2 static f32 lit_5110 = 550.0f;

/* 804522C0-804522C4 0004+00 s=1 e=0 z=0  None .sdata2    @5111 */
SECTION_SDATA2 static f32 lit_5111 = -2680.0f;

/* 804522C4-804522C8 0004+00 s=1 e=0 z=0  None .sdata2    @5112 */
SECTION_SDATA2 static f32 lit_5112 = 2200.0f;

/* 804522C8-804522CC 0004+00 s=2 e=0 z=0  None .sdata2    @5113 */
SECTION_SDATA2 static f32 lit_5113 = 1600.0f;

/* 804522CC-804522D0 0004+00 s=1 e=0 z=0  None .sdata2    @5114 */
SECTION_SDATA2 static f32 lit_5114 = 27453.0f;

/* 804522D0-804522D4 0004+00 s=1 e=0 z=0  None .sdata2    @5115 */
SECTION_SDATA2 static f32 lit_5115 = 8528.0f;

/* 804522D4-804522D8 0004+00 s=1 e=0 z=0  None .sdata2    @5116 */
SECTION_SDATA2 static f32 lit_5116 = 1300.0f;

/* 804522D8-804522DC 0004+00 s=2 e=0 z=0  None .sdata2    @5117 */
SECTION_SDATA2 static f32 lit_5117 = 1100.0f;

/* 804522DC-804522E0 0004+00 s=5 e=0 z=0  None .sdata2    @5118 */
SECTION_SDATA2 static f32 lit_5118 = 80.0f;

/* 804522E0-804522E4 0004+00 s=6 e=0 z=0  None .sdata2    @5119 */
SECTION_SDATA2 static f32 lit_5119 = 500.0f;

/* 804522E4-804522E8 0004+00 s=1 e=0 z=0  None .sdata2    @5120 */
SECTION_SDATA2 static f32 lit_5120 = -228.0f;

/* 804522E8-804522EC 0004+00 s=1 e=0 z=0  None .sdata2    @5121 */
SECTION_SDATA2 static f32 lit_5121 = 795.0f;

/* 804522EC-804522F0 0004+00 s=4 e=0 z=0  None .sdata2    @5122 */
SECTION_SDATA2 static f32 lit_5122 = 1500.0f;

/* 804522F0-804522F4 0004+00 s=2 e=0 z=0  None .sdata2    @5123 */
SECTION_SDATA2 static f32 lit_5123 = 5100.0f;

/* 804522F4-804522F8 0004+00 s=2 e=0 z=0  None .sdata2    @5124 */
SECTION_SDATA2 static f32 lit_5124 = -3250.0f;

/* 804522F8-804522FC 0004+00 s=3 e=0 z=0  None .sdata2    @5125 */
SECTION_SDATA2 static f32 lit_5125 = -50.0f;

/* 804522FC-80452300 0004+00 s=2 e=0 z=0  None .sdata2    @5126 */
SECTION_SDATA2 static f32 lit_5126 = -2700.0f;

/* 80452300-80452304 0004+00 s=2 e=0 z=0  None .sdata2    @5127 */
SECTION_SDATA2 static f32 lit_5127 = 15750.0f;

/* 80452304-80452308 0004+00 s=1 e=0 z=0  None .sdata2    @5128 */
SECTION_SDATA2 static f32 lit_5128 = -3680.0f;

/* 80452308-8045230C 0004+00 s=1 e=0 z=0  None .sdata2    @5129 */
SECTION_SDATA2 static f32 lit_5129 = -11975.0f;

/* 8045230C-80452310 0004+00 s=1 e=0 z=0  None .sdata2    @5130 */
SECTION_SDATA2 static f32 lit_5130 = -10530.0f;

/* 80452310-80452314 0004+00 s=1 e=0 z=0  None .sdata2    @5131 */
SECTION_SDATA2 static f32 lit_5131 = 3350.0f;

/* 80452314-80452318 0004+00 s=1 e=0 z=0  None .sdata2    @5132 */
SECTION_SDATA2 static f32 lit_5132 = -13027.0f;

/* 80452318-8045231C 0004+00 s=1 e=0 z=0  None .sdata2    @5133 */
SECTION_SDATA2 static f32 lit_5133 = -11430.0f;

/* 8045231C-80452320 0004+00 s=1 e=0 z=0  None .sdata2    @5134 */
SECTION_SDATA2 static f32 lit_5134 = 36900.0f;

/* 8005D18C-8005E8B0 1724+00 s=0 e=1 z=0  None .text      dKyr_rain_move__Fv */
//	8005D1B4: 803621B0 (_savegpr_18)
//	8005D1B8: 8042CA54 (g_env_light)
//	8005D1BC: 8042CA54 (g_env_light)
//	8005D1C4: 804061C0 (g_dComIfG_gameInfo)
//	8005D1C8: 804061C0 (g_dComIfG_gameInfo)
//	8005D1D8: 8005AB00 (dKyw_get_wind_vecpow__Fv)
//	8005D1FC: 804061C0 (g_dComIfG_gameInfo)
//	8005D200: 804061C0 (g_dComIfG_gameInfo)
//	8005D218: 804521B8 (lit_3954)
//	8005D220: 80452284 (lit_5096)
//	8005D230: 8042CA54 (g_env_light)
//	8005D234: 8042CA54 (g_env_light)
//	8005D260: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005D26C: 8034739C (PSVECSquareDistance)
//	8005D270: 804521B8 (lit_3954)
//	8005D280: 804521E8 (lit_4109)
//	8005D288: 804521F0 (lit_4110)
//	8005D2D0: 804521B0 (lit_3953)
//	8005D2DC: 80450AE0 (__float_nan)
//	8005D2E0: 80450AE0 (__float_nan)
//	8005D34C: 80450AE0 (__float_nan)
//	8005D350: 80450AE0 (__float_nan)
//	8005D354: 80452288 (lit_5097)
//	8005D364: 8045227C (lit_4467)
//	8005D36C: 80452214 (lit_4354)
//	8005D380: 804521B8 (lit_3954)
//	8005D39C: 8034739C (PSVECSquareDistance)
//	8005D3A0: 804521B8 (lit_3954)
//	8005D3B0: 804521E8 (lit_4109)
//	8005D3B8: 804521F0 (lit_4110)
//	8005D400: 804521B0 (lit_3953)
//	8005D40C: 80450AE0 (__float_nan)
//	8005D410: 80450AE0 (__float_nan)
//	8005D47C: 80450AE0 (__float_nan)
//	8005D480: 80450AE0 (__float_nan)
//	8005D484: 8045228C (lit_5098)
//	8005D48C: 80452214 (lit_4354)
//	8005D4A0: 80452290 (lit_5099)
//	8005D4D0: 8034739C (PSVECSquareDistance)
//	8005D4D4: 804521B8 (lit_3954)
//	8005D4E4: 804521E8 (lit_4109)
//	8005D4EC: 804521F0 (lit_4110)
//	8005D534: 804521B0 (lit_3953)
//	8005D540: 80450AE0 (__float_nan)
//	8005D544: 80450AE0 (__float_nan)
//	8005D5B0: 80450AE0 (__float_nan)
//	8005D5B4: 80450AE0 (__float_nan)
//	8005D5B8: 80452288 (lit_5097)
//	8005D5C8: 8045227C (lit_4467)
//	8005D5D0: 80452214 (lit_4354)
//	8005D5E4: 804521B8 (lit_3954)
//	8005D5F0: 80452240 (lit_4365)
//	8005D5F4: 80452220 (lit_4357)
//	8005D5F8: 804521C4 (lit_3993)
//	8005D5FC: 8026F97C (cLib_addCalc__FPfffff)
//	8005D604: 80452244 (lit_4366)
//	8005D61C: 80452240 (lit_4365)
//	8005D620: 80452220 (lit_4357)
//	8005D624: 804521C4 (lit_3993)
//	8005D628: 8026F97C (cLib_addCalc__FPfffff)
//	8005D634: 80452240 (lit_4365)
//	8005D638: 80452220 (lit_4357)
//	8005D63C: 804521C4 (lit_3993)
//	8005D640: 8026F97C (cLib_addCalc__FPfffff)
//	8005D64C: 80452240 (lit_4365)
//	8005D650: 80452220 (lit_4357)
//	8005D654: 804521C4 (lit_3993)
//	8005D658: 8026F97C (cLib_addCalc__FPfffff)
//	8005D67C: 80452294 (lit_5100)
//	8005D680: 804521FC (lit_4112)
//	8005D684: 8005B830 (dKy_set_eyevect_calc2__FP12camera_classP3Vecff)
//	8005D688: 804521B8 (lit_3954)
//	8005D698: 8005AAE0 (dKyw_get_wind_vec__Fv)
//	8005D69C: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	8005D6A0: 804521B8 (lit_3954)
//	8005D6C8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005D6CC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005D6D4: 80368994 (strcmp)
//	8005D6E0: 80450D64 (struct_80450D64)
//	8005D700: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005D704: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005D70C: 80368994 (strcmp)
//	8005D718: 80450D64 (struct_80450D64)
//	8005D730: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005D734: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005D73C: 80368994 (strcmp)
//	8005D754: 8005CDD0 (overhead_bg_chk__Fv)
//	8005D760: 80452294 (lit_5100)
//	8005D764: 8005CF78 (forward_overhead_bg_chk__FP4cXyzf)
//	8005D770: 80452298 (lit_5101)
//	8005D774: 8005CF78 (forward_overhead_bg_chk__FP4cXyzf)
//	8005D7BC: 8045229C (lit_5102)
//	8005D7CC: 804521B8 (lit_3954)
//	8005D7D0: 8045223C (lit_4364)
//	8005D7D4: 80452240 (lit_4365)
//	8005D7D8: 804521C4 (lit_3993)
//	8005D7DC: 8026F97C (cLib_addCalc__FPfffff)
//	8005D7E8: 80452214 (lit_4354)
//	8005D7EC: 80452220 (lit_4357)
//	8005D7F4: 80452238 (lit_4363)
//	8005D7F8: 8026F97C (cLib_addCalc__FPfffff)
//	8005D808: 804521B8 (lit_3954)
//	8005D80C: 8045223C (lit_4364)
//	8005D810: 80452240 (lit_4365)
//	8005D814: 804521C4 (lit_3993)
//	8005D818: 8026F97C (cLib_addCalc__FPfffff)
//	8005D824: 80452214 (lit_4354)
//	8005D828: 80452220 (lit_4357)
//	8005D830: 80452238 (lit_4363)
//	8005D834: 8026F97C (cLib_addCalc__FPfffff)
//	8005D844: 804521B8 (lit_3954)
//	8005D848: 8045223C (lit_4364)
//	8005D84C: 80452240 (lit_4365)
//	8005D850: 804521C4 (lit_3993)
//	8005D854: 8026F97C (cLib_addCalc__FPfffff)
//	8005D860: 80452214 (lit_4354)
//	8005D864: 80452220 (lit_4357)
//	8005D86C: 80452238 (lit_4363)
//	8005D870: 8026F97C (cLib_addCalc__FPfffff)
//	8005D87C: 80452214 (lit_4354)
//	8005D8B0: 80452288 (lit_5097)
//	8005D8B4: 80267954 (cM_rndF__Ff)
//	8005D8B8: 804522A0 (lit_5103)
//	8005D8E8: 804522A4 (lit_5104)
//	8005D8EC: 8026798C (cM_rndFX__Ff)
//	8005D8F4: 804521FC (lit_4112)
//	8005D8F8: 80267954 (cM_rndF__Ff)
//	8005D900: 804522A4 (lit_5104)
//	8005D904: 8026798C (cM_rndFX__Ff)
//	8005D90C: 80452214 (lit_4354)
//	8005D914: 804522A8 (lit_5105)
//	8005D918: 80267954 (cM_rndF__Ff)
//	8005D920: 804522A8 (lit_5105)
//	8005D924: 80267954 (cM_rndF__Ff)
//	8005D934: 8005CDA8 (rain_bg_chk__FP19dKankyo_rain_Packeti)
//	8005D948: 80452220 (lit_4357)
//	8005D94C: 8026798C (cM_rndFX__Ff)
//	8005D960: 8045223C (lit_4364)
//	8005D964: 80452220 (lit_4357)
//	8005D968: 804521C4 (lit_3993)
//	8005D96C: 8026F97C (cLib_addCalc__FPfffff)
//	8005D974: 8045228C (lit_5098)
//	8005D97C: 80452288 (lit_5097)
//	8005D998: 804522AC (lit_5106)
//	8005D9A0: 804521C8 (lit_3995)
//	8005D9D8: 804522B0 (lit_5107)
//	8005DAA0: 8034739C (PSVECSquareDistance)
//	8005DAA4: 804521B8 (lit_3954)
//	8005DAB4: 804521E8 (lit_4109)
//	8005DABC: 804521F0 (lit_4110)
//	8005DB04: 804521B0 (lit_3953)
//	8005DB10: 80450AE0 (__float_nan)
//	8005DB14: 80450AE0 (__float_nan)
//	8005DB80: 80450AE0 (__float_nan)
//	8005DB84: 80450AE0 (__float_nan)
//	8005DB94: 804522A4 (lit_5104)
//	8005DBA8: 80452288 (lit_5097)
//	8005DBAC: 80267954 (cM_rndF__Ff)
//	8005DBB0: 804522A0 (lit_5103)
//	8005DBE0: 8034739C (PSVECSquareDistance)
//	8005DBE4: 804521B8 (lit_3954)
//	8005DBF4: 804521E8 (lit_4109)
//	8005DBFC: 804521F0 (lit_4110)
//	8005DC44: 804521B0 (lit_3953)
//	8005DC50: 80450AE0 (__float_nan)
//	8005DC54: 80450AE0 (__float_nan)
//	8005DCC0: 80450AE0 (__float_nan)
//	8005DCC4: 80450AE0 (__float_nan)
//	8005DCC8: 804522B4 (lit_5108)
//	8005DCD4: 804522A4 (lit_5104)
//	8005DCD8: 8026798C (cM_rndFX__Ff)
//	8005DCE0: 804522A4 (lit_5104)
//	8005DCE4: 8026798C (cM_rndFX__Ff)
//	8005DCEC: 804522A4 (lit_5104)
//	8005DCF0: 8026798C (cM_rndFX__Ff)
//	8005DCFC: 804522B8 (lit_5109)
//	8005DD00: 8026798C (cM_rndFX__Ff)
//	8005DD14: 8005B708 (get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005DD1C: 804522A4 (lit_5104)
//	8005DD54: 8005CDA8 (rain_bg_chk__FP19dKankyo_rain_Packeti)
//	8005DD68: 8045228C (lit_5098)
//	8005DD94: 804522A4 (lit_5104)
//	8005DD98: 8026798C (cM_rndFX__Ff)
//	8005DDA0: 804521BC (lit_3970)
//	8005DDA8: 804522A4 (lit_5104)
//	8005DDAC: 8026798C (cM_rndFX__Ff)
//	8005DDBC: 8005CDA8 (rain_bg_chk__FP19dKankyo_rain_Packeti)
//	8005DE28: 80452214 (lit_4354)
//	8005DE68: 8034739C (PSVECSquareDistance)
//	8005DE6C: 804521B8 (lit_3954)
//	8005DE7C: 804521E8 (lit_4109)
//	8005DE84: 804521F0 (lit_4110)
//	8005DECC: 804521B0 (lit_3953)
//	8005DED8: 80450AE0 (__float_nan)
//	8005DEDC: 80450AE0 (__float_nan)
//	8005DF48: 80450AE0 (__float_nan)
//	8005DF4C: 80450AE0 (__float_nan)
//	8005DF50: 804522A4 (lit_5104)
//	8005DF70: 80452214 (lit_4354)
//	8005DFA4: 8034739C (PSVECSquareDistance)
//	8005DFA8: 804521B8 (lit_3954)
//	8005DFB8: 804521E8 (lit_4109)
//	8005DFC0: 804521F0 (lit_4110)
//	8005E008: 804521B0 (lit_3953)
//	8005E014: 80450AE0 (__float_nan)
//	8005E018: 80450AE0 (__float_nan)
//	8005E084: 80450AE0 (__float_nan)
//	8005E088: 80450AE0 (__float_nan)
//	8005E08C: 804522BC (lit_5110)
//	8005E0AC: 80452214 (lit_4354)
//	8005E0E0: 8034739C (PSVECSquareDistance)
//	8005E0E4: 804521B8 (lit_3954)
//	8005E0F4: 804521E8 (lit_4109)
//	8005E0FC: 804521F0 (lit_4110)
//	8005E144: 804521B0 (lit_3953)
//	8005E150: 80450AE0 (__float_nan)
//	8005E154: 80450AE0 (__float_nan)
//	8005E1C0: 80450AE0 (__float_nan)
//	8005E1C4: 80450AE0 (__float_nan)
//	8005E1C8: 804522BC (lit_5110)
//	8005E1E8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005E1EC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005E1F4: 80368994 (strcmp)
//	8005E200: 80450D64 (struct_80450D64)
//	8005E210: 804522C0 (lit_5111)
//	8005E220: 804522C4 (lit_5112)
//	8005E22C: 804521B8 (lit_3954)
//	8005E240: 804522C8 (lit_5113)
//	8005E24C: 804521B8 (lit_3954)
//	8005E25C: 804522CC (lit_5114)
//	8005E26C: 804522D0 (lit_5115)
//	8005E274: 804522D4 (lit_5116)
//	8005E284: 804522D8 (lit_5117)
//	8005E298: 8034739C (PSVECSquareDistance)
//	8005E29C: 804521B8 (lit_3954)
//	8005E2AC: 804521E8 (lit_4109)
//	8005E2B4: 804521F0 (lit_4110)
//	8005E2FC: 804521B0 (lit_3953)
//	8005E308: 80450AE0 (__float_nan)
//	8005E30C: 80450AE0 (__float_nan)
//	8005E378: 80450AE0 (__float_nan)
//	8005E37C: 80450AE0 (__float_nan)
//	8005E380: 804522DC (lit_5118)
//	8005E38C: 804521B8 (lit_3954)
//	8005E39C: 8034739C (PSVECSquareDistance)
//	8005E3A0: 804521B8 (lit_3954)
//	8005E3B0: 804521E8 (lit_4109)
//	8005E3B8: 804521F0 (lit_4110)
//	8005E400: 804521B0 (lit_3953)
//	8005E40C: 80450AE0 (__float_nan)
//	8005E410: 80450AE0 (__float_nan)
//	8005E47C: 80450AE0 (__float_nan)
//	8005E480: 80450AE0 (__float_nan)
//	8005E484: 804522E0 (lit_5119)
//	8005E490: 804521B8 (lit_3954)
//	8005E4A0: 804522E4 (lit_5120)
//	8005E4B0: 804522E8 (lit_5121)
//	8005E4C0: 8034739C (PSVECSquareDistance)
//	8005E4C4: 804521B8 (lit_3954)
//	8005E4D4: 804521E8 (lit_4109)
//	8005E4DC: 804521F0 (lit_4110)
//	8005E524: 804521B0 (lit_3953)
//	8005E530: 80450AE0 (__float_nan)
//	8005E534: 80450AE0 (__float_nan)
//	8005E5A0: 80450AE0 (__float_nan)
//	8005E5A4: 80450AE0 (__float_nan)
//	8005E5A8: 804522EC (lit_5122)
//	8005E5B4: 804521B8 (lit_3954)
//	8005E5BC: 804521B8 (lit_3954)
//	8005E5E8: 804521B8 (lit_3954)
//	8005E5F4: 80347138 (PSVECSquareMag)
//	8005E5F8: 804521B8 (lit_3954)
//	8005E608: 804521E8 (lit_4109)
//	8005E610: 804521F0 (lit_4110)
//	8005E658: 804521B0 (lit_3953)
//	8005E664: 80450AE0 (__float_nan)
//	8005E668: 80450AE0 (__float_nan)
//	8005E6D4: 80450AE0 (__float_nan)
//	8005E6D8: 80450AE0 (__float_nan)
//	8005E6E4: 804521B8 (lit_3954)
//	8005E6F0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005E6F4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005E6FC: 80368994 (strcmp)
//	8005E708: 80450D64 (struct_80450D64)
//	8005E718: 804522F0 (lit_5123)
//	8005E728: 804522F4 (lit_5124)
//	8005E738: 804522F8 (lit_5125)
//	8005E744: 804522FC (lit_5126)
//	8005E750: 80452300 (lit_5127)
//	8005E75C: 804521B8 (lit_3954)
//	8005E774: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005E778: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005E780: 80368994 (strcmp)
//	8005E78C: 80450D64 (struct_80450D64)
//	8005E79C: 80452304 (lit_5128)
//	8005E7AC: 80452308 (lit_5129)
//	8005E7B8: 8045230C (lit_5130)
//	8005E7C4: 804521B8 (lit_3954)
//	8005E7D8: 80452310 (lit_5131)
//	8005E7E8: 80452314 (lit_5132)
//	8005E7F4: 80452318 (lit_5133)
//	8005E800: 804521B8 (lit_3954)
//	8005E818: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005E81C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005E824: 80368994 (strcmp)
//	8005E830: 80450D64 (struct_80450D64)
//	8005E840: 8045231C (lit_5134)
//	8005E84C: 804521B8 (lit_3954)
//	8005E85C: 8045223C (lit_4364)
//	8005E860: 8026798C (cM_rndFX__Ff)
//	8005E89C: 803621FC (_restgpr_18)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_rain_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_rain_move__Fv.s"
}
#pragma pop

/* 8005E8B0-8005E8F8 0048+00 s=1 e=0 z=0  None .text      d_krain_cut_turn_check__Fv */
//	8005E8B0: 804061C0 (g_dComIfG_gameInfo)
//	8005E8B4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void d_krain_cut_turn_check() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/d_krain_cut_turn_check__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452320-80452324 0004+00 s=1 e=0 z=0  None .sdata2    @5716 */
SECTION_SDATA2 static f32 lit_5716 = -100000000.0f;

/* 80452324-80452328 0004+00 s=2 e=0 z=0  None .sdata2    @5717 */
SECTION_SDATA2 static f32 lit_5717 = 100000.0f;

/* 80452328-8045232C 0004+00 s=1 e=0 z=0  None .sdata2    @5718 */
SECTION_SDATA2 static f32 lit_5718 = 14.0f / 5.0f;

/* 8045232C-80452330 0004+00 s=1 e=0 z=0  None .sdata2    @5719 */
SECTION_SDATA2 static f32 lit_5719 = -11.0f / 20.0f;

/* 80452330-80452334 0004+00 s=9 e=0 z=0  None .sdata2    @5720 */
SECTION_SDATA2 static f32 lit_5720 = 2.0f / 5.0f;

/* 80452334-80452338 0004+00 s=6 e=0 z=0  None .sdata2    @5721 */
SECTION_SDATA2 static f32 lit_5721 = 1.5f;

/* 80452338-8045233C 0004+00 s=4 e=0 z=0  None .sdata2    @5722 */
SECTION_SDATA2 static f32 lit_5722 = 65536.0f;

/* 8045233C-80452340 0004+00 s=5 e=0 z=0  None .sdata2    @5723 */
SECTION_SDATA2 static f32 lit_5723 = 1000.0f;

/* 80452340-80452344 0004+00 s=1 e=0 z=0  None .sdata2    @5724 */
SECTION_SDATA2 static f32 lit_5724 = -100149.8984375f;

/* 80452344-80452348 0004+00 s=1 e=0 z=0  None .sdata2    @5725 */
SECTION_SDATA2 static f32 lit_5725 = -99999.8984375f;

/* 80452348-8045234C 0004+00 s=2 e=0 z=0  None .sdata2    @5726 */
SECTION_SDATA2 static f32 lit_5726 = 2.5f;

/* 8045234C-80452350 0004+00 s=7 e=0 z=0  None .sdata2    @5727 */
SECTION_SDATA2 static f32 lit_5727 = 0.25f;

/* 80452350-80452354 0004+00 s=6 e=0 z=0  None .sdata2    @5728 */
SECTION_SDATA2 static f32 lit_5728 = 5.0f;

/* 80452354-80452358 0004+00 s=7 e=0 z=0  None .sdata2    @5729 */
SECTION_SDATA2 static f32 lit_5729 = 3.0f / 5.0f;

/* 80452358-8045235C 0004+00 s=2 e=0 z=0  None .sdata2    @5730 */
SECTION_SDATA2 static f32 lit_5730 = 3.0f;

/* 8045235C-80452360 0004+00 s=1 e=0 z=0  None .sdata2    @5731 */
SECTION_SDATA2 static f32 lit_5731 = 4.5f;

/* 80452360-80452364 0004+00 s=2 e=0 z=0  None .sdata2    @5732 */
SECTION_SDATA2 static f32 lit_5732 = 0.75f;

/* 80452364-80452368 0004+00 s=2 e=0 z=0  None .sdata2    @5733 */
SECTION_SDATA2 static f32 lit_5733 = 3.0f / 100.0f;

/* 80452368-8045236C 0004+00 s=2 e=0 z=0  None .sdata2    @5734 */
SECTION_SDATA2 static f32 lit_5734 = 1.0f / 50.0f;

/* 8045236C-80452370 0004+00 s=5 e=0 z=0  None .sdata2    @5735 */
SECTION_SDATA2 static f32 lit_5735 = 300.0f;

/* 80452370-80452374 0004+00 s=1 e=0 z=0  None .sdata2    @5736 */
SECTION_SDATA2 static f32 lit_5736 = 5600.0f;

/* 80452374-80452378 0004+00 s=3 e=0 z=0  None .sdata2    @5737 */
SECTION_SDATA2 static f32 lit_5737 = 130.0f;

/* 80452378-8045237C 0004+00 s=7 e=0 z=0  None .sdata2    @5738 */
SECTION_SDATA2 static f32 lit_5738 = 2.0f;

/* 8045237C-80452380 0004+00 s=4 e=0 z=0  None .sdata2    @5739 */
SECTION_SDATA2 static f32 lit_5739 = 400.0f;

/* 80452380-80452384 0004+00 s=3 e=0 z=0  None .sdata2    @5740 */
SECTION_SDATA2 static f32 lit_5740 = 30.0f;

/* 80452384-80452388 0004+00 s=3 e=0 z=0  None .sdata2    @5741 */
SECTION_SDATA2 static f32 lit_5741 = 9.0f;

/* 80452388-8045238C 0004+00 s=1 e=0 z=0  None .sdata2    @5742 */
SECTION_SDATA2 static f32 lit_5742 = -99979.8984375f;

/* 8045238C-80452390 0004+00 s=1 e=0 z=0  None .sdata2    @5743 */
SECTION_SDATA2 static f32 lit_5743 = 1050.0f;

/* 80452390-80452394 0004+00 s=1 e=0 z=0  None .sdata2    @5744 */
SECTION_SDATA2 static f32 lit_5744 = 3200.0f;

/* 80452394-80452398 0004+00 s=1 e=0 z=0  None .sdata2    @5745 */
SECTION_SDATA2 static f32 lit_5745 = 1700.0f;

/* 80452398-8045239C 0004+00 s=1 e=0 z=0  None .sdata2    @5746 */
SECTION_SDATA2 static f32 lit_5746 = 2800.0f;

/* 8045239C-804523A0 0004+00 s=1 e=0 z=0  None .sdata2    @5747 */
SECTION_SDATA2 static f32 lit_5747 = 825.0f;

/* 804523A0-804523A4 0004+00 s=3 e=0 z=0  None .sdata2    @5748 */
SECTION_SDATA2 static f32 lit_5748 = 2000.0f;

/* 8005E8F8-8005FBDC 12E4+00 s=0 e=1 z=0  None .text      dKyr_housi_move__Fv */
//	8005E950: 803621C0 (_savegpr_22)
//	8005E954: 8042CA54 (g_env_light)
//	8005E958: 8042CA54 (g_env_light)
//	8005E960: 804061C0 (g_dComIfG_gameInfo)
//	8005E964: 804061C0 (g_dComIfG_gameInfo)
//	8005E974: 8005AB00 (dKyw_get_wind_vecpow__Fv)
//	8005E994: 8007757C (__ct__11dBgS_GndChkFv)
//	8005E99C: 80452214 (lit_4354)
//	8005E9A4: 80077A00 (__ct__18dBgS_CamGndChk_WtrFv)
//	8005E9A8: 80452320 (lit_5716)
//	8005E9B0: 804061C0 (g_dComIfG_gameInfo)
//	8005E9B4: 804061C0 (g_dComIfG_gameInfo)
//	8005E9C0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005E9C4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005E9CC: 80368994 (strcmp)
//	8005E9DC: 8042CA54 (g_env_light)
//	8005E9E0: 8042CA54 (g_env_light)
//	8005EA08: 80452324 (lit_5717)
//	8005EA1C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8005EA28: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8005EA30: 801AC57C (dKy_darkworld_check__Fv)
//	8005EA4C: 804521B8 (lit_3954)
//	8005EA54: 80452328 (lit_5718)
//	8005EA6C: 804521B8 (lit_3954)
//	8005EA74: 8045232C (lit_5719)
//	8005EA80: 8042CA54 (g_env_light)
//	8005EA84: 8042CA54 (g_env_light)
//	8005EA9C: 804521B8 (lit_3954)
//	8005EAC0: 80452214 (lit_4354)
//	8005EAC4: 80452240 (lit_4365)
//	8005EAC8: 8045221C (lit_4356)
//	8005EACC: 804521C4 (lit_3993)
//	8005EAD0: 8026F97C (cLib_addCalc__FPfffff)
//	8005EADC: 804521B8 (lit_3954)
//	8005EAE0: 80452240 (lit_4365)
//	8005EAE4: 8045221C (lit_4356)
//	8005EAE8: 804521C4 (lit_3993)
//	8005EAEC: 8026F97C (cLib_addCalc__FPfffff)
//	8005EB04: 80077A98 (__dt__18dBgS_CamGndChk_WtrFv)
//	8005EB10: 800775F0 (__dt__11dBgS_GndChkFv)
//	8005EB20: 804522A4 (lit_5104)
//	8005EB28: 8005B830 (dKy_set_eyevect_calc2__FP12camera_classP3Vecff)
//	8005EB34: 8034739C (PSVECSquareDistance)
//	8005EB38: 804521B8 (lit_3954)
//	8005EB48: 804521E8 (lit_4109)
//	8005EB50: 804521F0 (lit_4110)
//	8005EB98: 804521B0 (lit_3953)
//	8005EBA4: 80450AE0 (__float_nan)
//	8005EBA8: 80450AE0 (__float_nan)
//	8005EC14: 80450AE0 (__float_nan)
//	8005EC18: 80450AE0 (__float_nan)
//	8005EC1C: 804522E0 (lit_5119)
//	8005EC44: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	8005EC54: 804521B8 (lit_3954)
//	8005EC58: 8042CA54 (g_env_light)
//	8005EC5C: 8042CA54 (g_env_light)
//	8005EC70: 80077A00 (__ct__18dBgS_CamGndChk_WtrFv)
//	8005EC90: 80452324 (lit_5717)
//	8005ECA4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8005ECB0: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8005ECC4: 80452294 (lit_5100)
//	8005ECCC: 804521B8 (lit_3954)
//	8005ECDC: 80452214 (lit_4354)
//	8005ECF4: 80077A98 (__dt__18dBgS_CamGndChk_WtrFv)
//	8005ED00: 8042CA54 (g_env_light)
//	8005ED04: 8042CA54 (g_env_light)
//	8005ED08: 80452330 (lit_5720)
//	8005ED10: 804521B8 (lit_3954)
//	8005ED14: 804523A0 (lit_5748)
//	8005ED18: 80452214 (lit_4354)
//	8005ED58: 8045223C (lit_4364)
//	8005ED5C: 80267954 (cM_rndF__Ff)
//	8005ED60: 80452220 (lit_4357)
//	8005ED70: 80452334 (lit_5721)
//	8005ED74: 80267954 (cM_rndF__Ff)
//	8005ED78: 80452240 (lit_4365)
//	8005ED8C: 80452338 (lit_5722)
//	8005ED90: 8026798C (cM_rndFX__Ff)
//	8005EDBC: 8045233C (lit_5723)
//	8005EDC0: 8026798C (cM_rndFX__Ff)
//	8005EDC8: 8045233C (lit_5723)
//	8005EDCC: 8026798C (cM_rndFX__Ff)
//	8005EDD4: 8045233C (lit_5723)
//	8005EDD8: 8026798C (cM_rndFX__Ff)
//	8005EDE0: 804521B8 (lit_3954)
//	8005EDEC: 804522A8 (lit_5105)
//	8005EDF0: 80267954 (cM_rndF__Ff)
//	8005EDF8: 804522A8 (lit_5105)
//	8005EDFC: 80267954 (cM_rndF__Ff)
//	8005EE04: 804522A8 (lit_5105)
//	8005EE08: 80267954 (cM_rndF__Ff)
//	8005EE10: 804521B8 (lit_3954)
//	8005EE2C: 80452340 (lit_5724)
//	8005EE38: 80452288 (lit_5097)
//	8005EE3C: 80452344 (lit_5725)
//	8005EE4C: 804521B8 (lit_3954)
//	8005EE68: 80452348 (lit_5726)
//	8005EE80: 8045234C (lit_5727)
//	8005EE8C: 802675E4 (cM_rad2s__Ff)
//	8005EE94: 80439A20 (sincosTable___5JMath)
//	8005EE98: 80439A20 (sincosTable___5JMath)
//	8005EEAC: 80452350 (lit_5728)
//	8005EEF0: 80452354 (lit_5729)
//	8005EF1C: 80452358 (lit_5730)
//	8005EF34: 80452334 (lit_5721)
//	8005EF60: 8045235C (lit_5731)
//	8005EF84: 80452360 (lit_5732)
//	8005EFA4: 80452244 (lit_4366)
//	8005EFE0: 802675E4 (cM_rad2s__Ff)
//	8005EFE8: 80439A20 (sincosTable___5JMath)
//	8005EFEC: 80439A20 (sincosTable___5JMath)
//	8005EFF8: 8045223C (lit_4364)
//	8005F010: 802675E4 (cM_rad2s__Ff)
//	8005F018: 80439A20 (sincosTable___5JMath)
//	8005F01C: 80439A20 (sincosTable___5JMath)
//	8005F038: 8005E8B0 (d_krain_cut_turn_check__Fv)
//	8005F050: 80452364 (lit_5733)
//	8005F060: 80452368 (lit_5734)
//	8005F070: 804521C4 (lit_3993)
//	8005F118: 8034739C (PSVECSquareDistance)
//	8005F11C: 804521B8 (lit_3954)
//	8005F12C: 804521E8 (lit_4109)
//	8005F134: 804521F0 (lit_4110)
//	8005F17C: 804521B0 (lit_3953)
//	8005F188: 80450AE0 (__float_nan)
//	8005F18C: 80450AE0 (__float_nan)
//	8005F1F8: 80450AE0 (__float_nan)
//	8005F1FC: 80450AE0 (__float_nan)
//	8005F200: 8045236C (lit_5735)
//	8005F210: 80452370 (lit_5736)
//	8005F220: 80452374 (lit_5737)
//	8005F230: 80452378 (lit_5738)
//	8005F270: 80452378 (lit_5738)
//	8005F290: 8034739C (PSVECSquareDistance)
//	8005F294: 804521B8 (lit_3954)
//	8005F2A4: 804521E8 (lit_4109)
//	8005F2AC: 804521F0 (lit_4110)
//	8005F2F4: 804521B0 (lit_3953)
//	8005F300: 80450AE0 (__float_nan)
//	8005F304: 80450AE0 (__float_nan)
//	8005F370: 80450AE0 (__float_nan)
//	8005F374: 80450AE0 (__float_nan)
//	8005F378: 8045237C (lit_5739)
//	8005F394: 8005B284 (dKyw_pntwind_get_vecpow__FP4cXyz)
//	8005F3B4: 80452380 (lit_5740)
//	8005F3C0: 80452384 (lit_5741)
//	8005F3D4: 80452380 (lit_5740)
//	8005F3E0: 80452384 (lit_5741)
//	8005F3F8: 80452380 (lit_5740)
//	8005F404: 80452384 (lit_5741)
//	8005F41C: 804521B8 (lit_3954)
//	8005F420: 80452240 (lit_4365)
//	8005F424: 80452220 (lit_4357)
//	8005F428: 80452224 (lit_4358)
//	8005F42C: 8026F97C (cLib_addCalc__FPfffff)
//	8005F434: 804521B8 (lit_3954)
//	8005F438: 80452240 (lit_4365)
//	8005F43C: 80452220 (lit_4357)
//	8005F440: 80452224 (lit_4358)
//	8005F444: 8026F97C (cLib_addCalc__FPfffff)
//	8005F44C: 804521B8 (lit_3954)
//	8005F450: 80452240 (lit_4365)
//	8005F454: 80452220 (lit_4357)
//	8005F458: 80452224 (lit_4358)
//	8005F45C: 8026F97C (cLib_addCalc__FPfffff)
//	8005F4C8: 8034739C (PSVECSquareDistance)
//	8005F4CC: 804521B8 (lit_3954)
//	8005F4DC: 804521E8 (lit_4109)
//	8005F4E4: 804521F0 (lit_4110)
//	8005F52C: 804521B0 (lit_3953)
//	8005F538: 80450AE0 (__float_nan)
//	8005F53C: 80450AE0 (__float_nan)
//	8005F5A8: 80450AE0 (__float_nan)
//	8005F5AC: 80450AE0 (__float_nan)
//	8005F5BC: 8045233C (lit_5723)
//	8005F5CC: 80452388 (lit_5742)
//	8005F600: 8034739C (PSVECSquareDistance)
//	8005F604: 804521B8 (lit_3954)
//	8005F614: 804521E8 (lit_4109)
//	8005F61C: 804521F0 (lit_4110)
//	8005F664: 804521B0 (lit_3953)
//	8005F670: 80450AE0 (__float_nan)
//	8005F674: 80450AE0 (__float_nan)
//	8005F6E0: 80450AE0 (__float_nan)
//	8005F6E4: 80450AE0 (__float_nan)
//	8005F6E8: 8045238C (lit_5743)
//	8005F6F4: 8045233C (lit_5723)
//	8005F6F8: 8026798C (cM_rndFX__Ff)
//	8005F700: 8045233C (lit_5723)
//	8005F704: 8026798C (cM_rndFX__Ff)
//	8005F70C: 8045233C (lit_5723)
//	8005F710: 8026798C (cM_rndFX__Ff)
//	8005F71C: 8045227C (lit_4467)
//	8005F720: 8026798C (cM_rndFX__Ff)
//	8005F734: 8005B708 (get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8005F73C: 8045233C (lit_5723)
//	8005F7A0: 8045233C (lit_5723)
//	8005F7AC: 804521B8 (lit_3954)
//	8005F7C8: 80452390 (lit_5744)
//	8005F7CC: 80267954 (cM_rndF__Ff)
//	8005F7E0: 80452390 (lit_5744)
//	8005F808: 804521FC (lit_4112)
//	8005F818: 804522C8 (lit_5113)
//	8005F840: 80452394 (lit_5745)
//	8005F850: 80452398 (lit_5746)
//	8005F8D0: 804521B8 (lit_3954)
//	8005F8D8: 80452214 (lit_4354)
//	8005F8E4: 8045223C (lit_4364)
//	8005F8E8: 80452368 (lit_5734)
//	8005F8EC: 80452224 (lit_4358)
//	8005F8F0: 8026F97C (cLib_addCalc__FPfffff)
//	8005F908: 804521B8 (lit_3954)
//	8005F910: 801AC57C (dKy_darkworld_check__Fv)
//	8005F934: 8034739C (PSVECSquareDistance)
//	8005F938: 804521B8 (lit_3954)
//	8005F948: 804521E8 (lit_4109)
//	8005F950: 804521F0 (lit_4110)
//	8005F998: 804521B0 (lit_3953)
//	8005F9A4: 80450AE0 (__float_nan)
//	8005F9A8: 80450AE0 (__float_nan)
//	8005FA14: 80450AE0 (__float_nan)
//	8005FA18: 80450AE0 (__float_nan)
//	8005FA20: 804522A4 (lit_5104)
//	8005FA34: 8045239C (lit_5747)
//	8005FA3C: 80452214 (lit_4354)
//	8005FA50: 804521B8 (lit_3954)
//	8005FA60: 8034739C (PSVECSquareDistance)
//	8005FA70: 804521E8 (lit_4109)
//	8005FA78: 804521F0 (lit_4110)
//	8005FAC0: 804521B0 (lit_3953)
//	8005FACC: 80450AE0 (__float_nan)
//	8005FAD0: 80450AE0 (__float_nan)
//	8005FB3C: 80450AE0 (__float_nan)
//	8005FB40: 80450AE0 (__float_nan)
//	8005FB6C: 80077A98 (__dt__18dBgS_CamGndChk_WtrFv)
//	8005FB78: 800775F0 (__dt__11dBgS_GndChkFv)
//	8005FBC8: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_housi_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_housi_move__Fv.s"
}
#pragma pop

/* 8005FBDC-8005FD48 016C+00 s=0 e=1 z=0  None .text      dKyr_snow_init__Fv */
//	8005FBEC: 803621DC (_savegpr_29)
//	8005FBF0: 804061C0 (g_dComIfG_gameInfo)
//	8005FBF4: 804061C0 (g_dComIfG_gameInfo)
//	8005FC04: 802CEC74 (__nw__FUli)
//	8005FC14: 803CD97C (__vt__9J3DPacket)
//	8005FC18: 803CD97C (__vt__9J3DPacket)
//	8005FC30: 803A9B4C (__vt__19dKankyo_snow_Packet)
//	8005FC34: 803A9B4C (__vt__19dKankyo_snow_Packet)
//	8005FC40: 80056D94 (__ct__8SNOW_EFFFv)
//	8005FC44: 80056D94 (__ct__8SNOW_EFFFv)
//	8005FC48: 80056D58 (__dt__8SNOW_EFFFv)
//	8005FC4C: 80056D58 (__dt__8SNOW_EFFFv)
//	8005FC58: 80361D60 (__construct_array)
//	8005FC5C: 8042CA54 (g_env_light)
//	8005FC60: 8042CA54 (g_env_light)
//	8005FC70: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005FC74: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8005FC80: 804061C0 (g_dComIfG_gameInfo)
//	8005FC84: 804061C0 (g_dComIfG_gameInfo)
//	8005FC94: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8005FCEC: 804521B8 (lit_3954)
//	8005FD34: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_snow_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_snow_init__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804523A4-804523A8 0004+00 s=8 e=0 z=0  None .sdata2    @6355 */
SECTION_SDATA2 static f32 lit_6355 = 100.0f;

/* 804523A8-804523AC 0004+00 s=2 e=0 z=0  None .sdata2    @6356 */
SECTION_SDATA2 static f32 lit_6356 = 6.0f / 5.0f;

/* 804523AC-804523B0 0004+00 s=1 e=0 z=0  None .sdata2    @6357 */
SECTION_SDATA2 static f32 lit_6357 = 6.5f;

/* 804523B0-804523B4 0004+00 s=3 e=0 z=0  None .sdata2    @6358 */
SECTION_SDATA2 static f32 lit_6358 = 9.0f / 20.0f;

/* 804523B4-804523B8 0004+00 s=1 e=0 z=0  None .sdata2    @6359 */
SECTION_SDATA2 static f32 lit_6359 = 53.0f / 10.0f;

/* 804523B8-804523BC 0004+00 s=2 e=0 z=0  None .sdata2    @6360 */
SECTION_SDATA2 static f32 lit_6360 = 7.0f / 20.0f;

/* 804523BC-804523C0 0004+00 s=2 e=0 z=0  None .sdata2    @6361 */
SECTION_SDATA2 static f32 lit_6361 = 3000.0f;

/* 804523C0-804523C4 0004+00 s=1 e=0 z=0  None .sdata2    @6362 */
SECTION_SDATA2 static f32 lit_6362 = 27.5f;

/* 804523C4-804523C8 0004+00 s=1 e=0 z=0  None .sdata2    @6363 */
SECTION_SDATA2 static f32 lit_6363 = 1150.0f;

/* 804523C8-804523D0 0004+04 s=1 e=0 z=0  None .sdata2    @6364 */
SECTION_SDATA2 static f32 lit_6364[1 + 1 /* padding */] = {
    55.0f,
    /* padding */
    0.0f,
};

/* 804523D0-804523D8 0008+00 s=1 e=0 z=0  None .sdata2    @6365 */
SECTION_SDATA2 static f64 lit_6365 = 1.0;

/* 804523D8-804523DC 0004+00 s=1 e=0 z=0  None .sdata2    @6366 */
SECTION_SDATA2 static f32 lit_6366 = -340.0f;

/* 804523DC-804523E0 0004+00 s=1 e=0 z=0  None .sdata2    @6367 */
SECTION_SDATA2 static f32 lit_6367 = 9800.0f;

/* 804523E0-804523E4 0004+00 s=2 e=0 z=0  None .sdata2    @6368 */
SECTION_SDATA2 static f32 lit_6368 = 19.0f / 50.0f;

/* 8005FD48-80061324 15DC+00 s=0 e=1 z=0  None .text      dKyr_snow_move__Fv */
//	8005FDC0: 803621BC (_savegpr_21)
//	8005FDC4: 8042CA54 (g_env_light)
//	8005FDC8: 8042CA54 (g_env_light)
//	8005FDD0: 804061C0 (g_dComIfG_gameInfo)
//	8005FDD4: 804061C0 (g_dComIfG_gameInfo)
//	8005FDE4: 8005AB00 (dKyw_get_wind_vecpow__Fv)
//	8005FE04: 8005AB00 (dKyw_get_wind_vecpow__Fv)
//	8005FE28: 8007757C (__ct__11dBgS_GndChkFv)
//	8005FE2C: 803A382C (__vt__14dBgS_ObjGndChk)
//	8005FE30: 803A382C (__vt__14dBgS_ObjGndChk)
//	8005FE54: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	8005FE58: 803AB6E8 (__vt__18dBgS_ObjGndChk_All)
//	8005FE5C: 803AB6E8 (__vt__18dBgS_ObjGndChk_All)
//	8005FE8C: 8042CA54 (g_env_light)
//	8005FE90: 8042CA54 (g_env_light)
//	8005FEB8: 800778E8 (__dt__18dBgS_ObjGndChk_AllFv)
//	8005FED8: 804523A4 (lit_6355)
//	8005FEEC: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8005FEF0: 804061C0 (g_dComIfG_gameInfo)
//	8005FEF4: 804061C0 (g_dComIfG_gameInfo)
//	8005FF04: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8005FF14: 804522E0 (lit_5119)
//	8005FF1C: 8005B830 (dKy_set_eyevect_calc2__FP12camera_classP3Vecff)
//	8005FF28: 8045233C (lit_5723)
//	8005FF30: 8005B830 (dKy_set_eyevect_calc2__FP12camera_classP3Vecff)
//	8005FF3C: 8034739C (PSVECSquareDistance)
//	8005FF40: 804521B8 (lit_3954)
//	8005FF50: 804521E8 (lit_4109)
//	8005FF58: 804521F0 (lit_4110)
//	8005FFA0: 804521B0 (lit_3953)
//	8005FFAC: 80450AE0 (__float_nan)
//	8005FFB0: 80450AE0 (__float_nan)
//	8006001C: 80450AE0 (__float_nan)
//	80060020: 80450AE0 (__float_nan)
//	80060024: 804522EC (lit_5122)
//	80060050: 804521B8 (lit_3954)
//	80060060: 8005AAE0 (dKyw_get_wind_vec__Fv)
//	80060068: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	80060070: 8042CA54 (g_env_light)
//	80060074: 8042CA54 (g_env_light)
//	80060084: 804523A8 (lit_6356)
//	80060094: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80060098: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800600A0: 80368994 (strcmp)
//	800600AC: 80452244 (lit_4366)
//	800600B4: 804521B8 (lit_3954)
//	800600D4: 804521B0 (lit_3953)
//	800600F4: 8005B660 (vectle_calc__FP10DOUBLE_POSP4cXyz)
//	800600F8: 804521B8 (lit_3954)
//	80060118: 80268894 (cM3d_VectorProduct2d__Fffffff)
//	80060144: 80452244 (lit_4366)
//	80060158: 80452214 (lit_4354)
//	80060190: 804521F8 (lit_4111)
//	80060198: 80452378 (lit_5738)
//	8006019C: 80452350 (lit_5728)
//	800601A0: 804521C8 (lit_3995)
//	800601A8: 804521B8 (lit_3954)
//	800601AC: 804523A4 (lit_6355)
//	800601B0: 804523D0 (lit_6365)
//	800601B4: 80452330 (lit_5720)
//	800601B8: 8045236C (lit_5735)
//	800601BC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800601C0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800601C4: 804523E0 (lit_6368)
//	800601C8: 804522B4 (lit_5108)
//	800601D4: 804523AC (lit_6357)
//	800601D8: 80267954 (cM_rndF__Ff)
//	80060238: 804522D8 (lit_5117)
//	8006023C: 8026798C (cM_rndFX__Ff)
//	8006024C: 804522D8 (lit_5117)
//	8006025C: 8026798C (cM_rndFX__Ff)
//	8006026C: 804522BC (lit_5110)
//	80060270: 8026798C (cM_rndFX__Ff)
//	80060280: 804522BC (lit_5110)
//	80060290: 8026798C (cM_rndFX__Ff)
//	800602A0: 804521B8 (lit_3954)
//	800602A8: 80452338 (lit_5722)
//	800602AC: 80267954 (cM_rndF__Ff)
//	800602B4: 80452338 (lit_5722)
//	800602B8: 80267954 (cM_rndF__Ff)
//	800602D0: 804522AC (lit_5106)
//	800602D4: 8026798C (cM_rndFX__Ff)
//	800602E8: 8045223C (lit_4364)
//	800602EC: 80452220 (lit_4357)
//	800602F0: 804521C4 (lit_3993)
//	800602F4: 8026F97C (cLib_addCalc__FPfffff)
//	8006031C: 8034739C (PSVECSquareDistance)
//	80060320: 804521B8 (lit_3954)
//	80060330: 804521E8 (lit_4109)
//	80060338: 804521F0 (lit_4110)
//	80060380: 804521B0 (lit_3953)
//	8006038C: 80450AE0 (__float_nan)
//	80060390: 80450AE0 (__float_nan)
//	800603FC: 80450AE0 (__float_nan)
//	80060400: 80450AE0 (__float_nan)
//	80060404: 804522E0 (lit_5119)
//	80060420: 804521F8 (lit_4111)
//	80060428: 80452214 (lit_4354)
//	80060438: 804523B0 (lit_6358)
//	80060468: 80439A20 (sincosTable___5JMath)
//	8006046C: 80439A20 (sincosTable___5JMath)
//	800604F4: 804523B4 (lit_6359)
//	80060544: 8034739C (PSVECSquareDistance)
//	80060548: 804521B8 (lit_3954)
//	80060558: 804521E8 (lit_4109)
//	80060560: 804521F0 (lit_4110)
//	800605A8: 804521B0 (lit_3953)
//	800605B4: 80450AE0 (__float_nan)
//	800605B8: 80450AE0 (__float_nan)
//	80060624: 80450AE0 (__float_nan)
//	80060628: 80450AE0 (__float_nan)
//	8006062C: 804522E0 (lit_5119)
//	80060648: 804521F8 (lit_4111)
//	80060650: 80452214 (lit_4354)
//	80060660: 804523B8 (lit_6360)
//	800606C0: 804523B4 (lit_6359)
//	800606FC: 804523BC (lit_6361)
//	80060700: 80267954 (cM_rndF__Ff)
//	80060710: 8045234C (lit_5727)
//	80060714: 804522EC (lit_5122)
//	80060718: 80452238 (lit_4363)
//	8006071C: 8026F97C (cLib_addCalc__FPfffff)
//	80060720: 804523BC (lit_6361)
//	80060724: 80267954 (cM_rndF__Ff)
//	80060734: 8045234C (lit_5727)
//	80060738: 804522EC (lit_5122)
//	8006073C: 80452238 (lit_4363)
//	80060740: 8026F97C (cLib_addCalc__FPfffff)
//	80060764: 8034739C (PSVECSquareDistance)
//	80060768: 804521B8 (lit_3954)
//	80060778: 804521E8 (lit_4109)
//	80060780: 804521F0 (lit_4110)
//	800607C8: 804521B0 (lit_3953)
//	800607D4: 80450AE0 (__float_nan)
//	800607D8: 80450AE0 (__float_nan)
//	80060844: 80450AE0 (__float_nan)
//	80060848: 80450AE0 (__float_nan)
//	80060858: 804522BC (lit_5110)
//	8006087C: 8034739C (PSVECSquareDistance)
//	80060880: 804521B8 (lit_3954)
//	80060890: 804521E8 (lit_4109)
//	80060898: 804521F0 (lit_4110)
//	800608E0: 804521B0 (lit_3953)
//	800608EC: 80450AE0 (__float_nan)
//	800608F0: 80450AE0 (__float_nan)
//	8006095C: 80450AE0 (__float_nan)
//	80060960: 80450AE0 (__float_nan)
//	80060964: 804521FC (lit_4112)
//	80060970: 804522BC (lit_5110)
//	80060974: 8026798C (cM_rndFX__Ff)
//	80060984: 804522BC (lit_5110)
//	80060988: 8026798C (cM_rndFX__Ff)
//	80060998: 804522BC (lit_5110)
//	8006099C: 8026798C (cM_rndFX__Ff)
//	800609B0: 804523C0 (lit_6362)
//	800609B4: 8026798C (cM_rndFX__Ff)
//	800609C8: 8005B708 (get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	800609D4: 804522BC (lit_5110)
//	80060A3C: 8034739C (PSVECSquareDistance)
//	80060A40: 804521B8 (lit_3954)
//	80060A50: 804521E8 (lit_4109)
//	80060A58: 804521F0 (lit_4110)
//	80060AA0: 804521B0 (lit_3953)
//	80060AAC: 80450AE0 (__float_nan)
//	80060AB0: 80450AE0 (__float_nan)
//	80060B1C: 80450AE0 (__float_nan)
//	80060B20: 80450AE0 (__float_nan)
//	80060B24: 804522D8 (lit_5117)
//	80060B38: 8034739C (PSVECSquareDistance)
//	80060B3C: 804521B8 (lit_3954)
//	80060B4C: 804521E8 (lit_4109)
//	80060B54: 804521F0 (lit_4110)
//	80060B9C: 804521B0 (lit_3953)
//	80060BA8: 80450AE0 (__float_nan)
//	80060BAC: 80450AE0 (__float_nan)
//	80060C18: 80450AE0 (__float_nan)
//	80060C1C: 80450AE0 (__float_nan)
//	80060C20: 804523C4 (lit_6363)
//	80060C2C: 804522D8 (lit_5117)
//	80060C30: 8026798C (cM_rndFX__Ff)
//	80060C40: 804522D8 (lit_5117)
//	80060C44: 8026798C (cM_rndFX__Ff)
//	80060C54: 804522D8 (lit_5117)
//	80060C58: 8026798C (cM_rndFX__Ff)
//	80060C6C: 804523C8 (lit_6364)
//	80060C70: 8026798C (cM_rndFX__Ff)
//	80060C84: 8005B708 (get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	80060C90: 804522D8 (lit_5117)
//	80060CEC: 8034739C (PSVECSquareDistance)
//	80060CFC: 804521E8 (lit_4109)
//	80060D04: 804521F0 (lit_4110)
//	80060D4C: 804521B0 (lit_3953)
//	80060D58: 80450AE0 (__float_nan)
//	80060D5C: 80450AE0 (__float_nan)
//	80060DC8: 80450AE0 (__float_nan)
//	80060DCC: 80450AE0 (__float_nan)
//	80060DDC: 80452214 (lit_4354)
//	80060DEC: 8034739C (PSVECSquareDistance)
//	80060DFC: 804521E8 (lit_4109)
//	80060E04: 804521F0 (lit_4110)
//	80060E4C: 804521B0 (lit_3953)
//	80060E58: 80450AE0 (__float_nan)
//	80060E5C: 80450AE0 (__float_nan)
//	80060EC8: 80450AE0 (__float_nan)
//	80060ECC: 80450AE0 (__float_nan)
//	80060ED8: 804522BC (lit_5110)
//	80060EE0: 804521F8 (lit_4111)
//	80060EE8: 804521B8 (lit_3954)
//	80060F10: 804521B8 (lit_3954)
//	80060F14: 80452240 (lit_4365)
//	80060F18: 80452220 (lit_4357)
//	80060F1C: 804521C4 (lit_3993)
//	80060F20: 8026F97C (cLib_addCalc__FPfffff)
//	80060F40: 804521C4 (lit_3993)
//	80060F68: 80368994 (strcmp)
//	80060F78: 804523D8 (lit_6366)
//	80060F84: 804521B8 (lit_3954)
//	80060F94: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80060F98: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80060FA0: 80368994 (strcmp)
//	80060FB0: 804523DC (lit_6367)
//	80060FBC: 804521B8 (lit_3954)
//	80060FE4: 8034739C (PSVECSquareDistance)
//	80060FF4: 804521E8 (lit_4109)
//	80060FFC: 804521F0 (lit_4110)
//	80061044: 804521B0 (lit_3953)
//	80061050: 80450AE0 (__float_nan)
//	80061054: 80450AE0 (__float_nan)
//	800610C0: 80450AE0 (__float_nan)
//	800610C4: 80450AE0 (__float_nan)
//	800610D4: 80452214 (lit_4354)
//	800610E4: 8034739C (PSVECSquareDistance)
//	800610F4: 804521E8 (lit_4109)
//	800610FC: 804521F0 (lit_4110)
//	80061144: 804521B0 (lit_3953)
//	80061150: 80450AE0 (__float_nan)
//	80061154: 80450AE0 (__float_nan)
//	800611C0: 80450AE0 (__float_nan)
//	800611C4: 80450AE0 (__float_nan)
//	800611D0: 804522D8 (lit_5117)
//	800611D8: 804521F8 (lit_4111)
//	800611E0: 804521B8 (lit_3954)
//	80061208: 804521B8 (lit_3954)
//	8006120C: 80452240 (lit_4365)
//	80061210: 80452220 (lit_4357)
//	80061214: 804521C4 (lit_3993)
//	80061218: 8026F97C (cLib_addCalc__FPfffff)
//	8006122C: 80368994 (strcmp)
//	8006123C: 804523D8 (lit_6366)
//	80061248: 804521B8 (lit_3954)
//	80061258: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006125C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80061264: 80368994 (strcmp)
//	80061274: 804523DC (lit_6367)
//	80061280: 804521B8 (lit_3954)
//	800612A0: 800778E8 (__dt__18dBgS_ObjGndChk_AllFv)
//	80061310: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_snow_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_snow_move__Fv.s"
}
#pragma pop

/* 80061324-8006140C 00E8+00 s=0 e=1 z=0  None .text      dKyr_star_init__Fv */
//	80061340: 802CEC74 (__nw__FUli)
//	80061350: 803CD97C (__vt__9J3DPacket)
//	80061354: 803CD97C (__vt__9J3DPacket)
//	8006136C: 803A9B38 (__vt__19dKankyo_star_Packet)
//	80061370: 803A9B38 (__vt__19dKankyo_star_Packet)
//	8006137C: 80056E04 (__ct__8STAR_EFFFv)
//	80061380: 80056E04 (__ct__8STAR_EFFFv)
//	80061384: 80056DC8 (__dt__8STAR_EFFFv)
//	80061388: 80056DC8 (__dt__8STAR_EFFFv)
//	80061394: 80361D60 (__construct_array)
//	80061398: 8042CA54 (g_env_light)
//	8006139C: 8042CA54 (g_env_light)
//	800613AC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800613B0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800613BC: 804061C0 (g_dComIfG_gameInfo)
//	800613C0: 804061C0 (g_dComIfG_gameInfo)
//	800613D0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	800613DC: 80452214 (lit_4354)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_star_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_star_init__Fv.s"
}
#pragma pop

/* 8006140C-80061438 002C+00 s=0 e=1 z=0  None .text      dKyr_star_move__Fv */
//	8006140C: 8042CA54 (g_env_light)
//	80061410: 8042CA54 (g_env_light)
//	8006142C: 80452214 (lit_4354)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_star_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_star_move__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804523E4-804523E8 0004+00 s=2 e=0 z=0  None .sdata2    @6720 */
SECTION_SDATA2 static f32 lit_6720 = 0.004999999888241291f;

/* 804523E8-804523EC 0004+00 s=7 e=0 z=0  None .sdata2    @6721 */
SECTION_SDATA2 static f32 lit_6721 = 9.999999974752427e-07f;

/* 804523EC-804523F0 0004+00 s=1 e=0 z=0  None .sdata2    @6722 */
SECTION_SDATA2 static f32 lit_6722 = -300.0f;

/* 804523F0-804523F4 0004+00 s=2 e=0 z=0  None .sdata2    @6723 */
SECTION_SDATA2 static f32 lit_6723 = 65535.0f;

/* 804523F4-804523F8 0004+00 s=1 e=0 z=0  None .sdata2    @6724 */
SECTION_SDATA2 static f32 lit_6724 = 0.027000002562999725f;

/* 804523F8-804523FC 0004+00 s=1 e=0 z=0  None .sdata2    @6725 */
SECTION_SDATA2 static f32 lit_6725 = 23.0f;

/* 804523FC-80452400 0004+00 s=5 e=0 z=0  None .sdata2    @6726 */
SECTION_SDATA2 static f32 lit_6726 = 120.0f;

/* 80452400-80452404 0004+00 s=1 e=0 z=0  None .sdata2    @6727 */
SECTION_SDATA2 static f32 lit_6727 = 1540.0f;

/* 80452404-80452408 0004+00 s=1 e=0 z=0  None .sdata2    @6728 */
SECTION_SDATA2 static f32 lit_6728 = 1040.0f;

/* 80452408-8045240C 0004+00 s=1 e=0 z=0  None .sdata2    @6729 */
SECTION_SDATA2 static f32 lit_6729 = 44.0f;

/* 8045240C-80452410 0004+00 s=1 e=0 z=0  None .sdata2    @6730 */
SECTION_SDATA2 static f32 lit_6730 = 408.0f;

/* 80452410-80452414 0004+00 s=2 e=0 z=0  None .sdata2    @6731 */
SECTION_SDATA2 static f32 lit_6731 = 3.0f / 25.0f;

/* 80452414-80452418 0004+00 s=1 e=0 z=0  None .sdata2    @6732 */
SECTION_SDATA2 static f32 lit_6732 = 6.0f / 25.0f;

/* 80452418-8045241C 0004+00 s=1 e=0 z=0  None .sdata2    @6733 */
SECTION_SDATA2 static f32 lit_6733 = 9.0f / 25.0f;

/* 8045241C-80452420 0004+00 s=2 e=0 z=0  None .sdata2    @6734 */
SECTION_SDATA2 static f32 lit_6734 = 9.0f / 100.0f;

/* 80452420-80452424 0004+00 s=1 e=0 z=0  None .sdata2    @6735 */
SECTION_SDATA2 static f32 lit_6735 = 13.0f / 100.0f;

/* 80452424-80452428 0004+00 s=2 e=0 z=0  None .sdata2    @6736 */
SECTION_SDATA2 static f32 lit_6736 = 7.0f / 10.0f;

/* 80061438-800620AC 0C74+00 s=0 e=1 z=0  None .text      cloud_shadow_move__Fv */
//	80061498: 803621B8 (_savegpr_20)
//	8006149C: 8042CA54 (g_env_light)
//	800614A0: 8042CA54 (g_env_light)
//	800614A8: 804061C0 (g_dComIfG_gameInfo)
//	800614AC: 804061C0 (g_dComIfG_gameInfo)
//	800614BC: 8005AB00 (dKyw_get_wind_vecpow__Fv)
//	800614D8: 8005AAE0 (dKyw_get_wind_vec__Fv)
//	800614E0: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	800614E4: 804061C0 (g_dComIfG_gameInfo)
//	800614E8: 804061C0 (g_dComIfG_gameInfo)
//	80061500: 803465B0 (PSMTXInverse)
//	80061510: 8042CA54 (g_env_light)
//	80061514: 8042CA54 (g_env_light)
//	80061538: 8042CA54 (g_env_light)
//	8006153C: 8042CA54 (g_env_light)
//	80061554: 80430CD8 (g_Counter)
//	80061558: 80430CD8 (g_Counter)
//	80061564: 804523E4 (lit_6720)
//	80061568: 8026798C (cM_rndFX__Ff)
//	8006156C: 804521C4 (lit_3993)
//	80061574: 8042CA54 (g_env_light)
//	80061578: 8042CA54 (g_env_light)
//	80061580: 80452214 (lit_4354)
//	80061584: 80452220 (lit_4357)
//	80061588: 804523E8 (lit_6721)
//	8006158C: 8026F97C (cLib_addCalc__FPfffff)
//	80061594: 8042CA54 (g_env_light)
//	80061598: 8042CA54 (g_env_light)
//	800615A0: 80452244 (lit_4366)
//	800615A4: 80452220 (lit_4357)
//	800615A8: 804521C4 (lit_3993)
//	800615AC: 804523E8 (lit_6721)
//	800615B0: 8026F97C (cLib_addCalc__FPfffff)
//	800615B4: 8042CA54 (g_env_light)
//	800615B8: 8042CA54 (g_env_light)
//	800615CC: 80452214 (lit_4354)
//	800615D0: 8045223C (lit_4364)
//	800615D4: 80452220 (lit_4357)
//	800615D8: 804523E8 (lit_6721)
//	800615DC: 8026F97C (cLib_addCalc__FPfffff)
//	800615F4: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	800615F8: 80452330 (lit_5720)
//	80061600: 80452354 (lit_5729)
//	80061614: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	80061618: 80452330 (lit_5720)
//	80061620: 80452354 (lit_5729)
//	80061634: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	80061638: 80452330 (lit_5720)
//	80061640: 80452354 (lit_5729)
//	80061664: 804522B8 (lit_5109)
//	8006166C: 80452214 (lit_4354)
//	80061684: 80452214 (lit_4354)
//	80061690: 8045229C (lit_5102)
//	80061698: 8005B830 (dKy_set_eyevect_calc2__FP12camera_classP3Vecff)
//	800616A4: 8042CA54 (g_env_light)
//	800616A8: 8042CA54 (g_env_light)
//	800616AC: 804061C0 (g_dComIfG_gameInfo)
//	800616B0: 804061C0 (g_dComIfG_gameInfo)
//	800616B8: 804521B8 (lit_3954)
//	800616BC: 80452298 (lit_5101)
//	800616C0: 80452214 (lit_4354)
//	800616C4: 80452294 (lit_5100)
//	800616C8: 80452408 (lit_6729)
//	800616CC: 8045240C (lit_6730)
//	800616D0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800616D4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80061720: 804523EC (lit_6722)
//	80061730: 80452298 (lit_5101)
//	80061734: 8026798C (cM_rndFX__Ff)
//	8006173C: 80452298 (lit_5101)
//	80061740: 8026798C (cM_rndFX__Ff)
//	80061748: 80452298 (lit_5101)
//	8006174C: 8026798C (cM_rndFX__Ff)
//	80061754: 8045223C (lit_4364)
//	80061758: 80267954 (cM_rndF__Ff)
//	8006175C: 8045223C (lit_4364)
//	80061768: 804521B8 (lit_3954)
//	80061770: 804523F0 (lit_6723)
//	80061774: 80267954 (cM_rndF__Ff)
//	80061788: 804521B8 (lit_3954)
//	800617E0: 80439A20 (sincosTable___5JMath)
//	800617E4: 80439A20 (sincosTable___5JMath)
//	800617F0: 8045223C (lit_4364)
//	800617F4: 80452214 (lit_4354)
//	8006180C: 8045237C (lit_5739)
//	80061828: 80452354 (lit_5729)
//	8006182C: 80452330 (lit_5720)
//	80061854: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	8006185C: 804522AC (lit_5106)
//	80061868: 80452354 (lit_5729)
//	800618C4: 80452354 (lit_5729)
//	800618C8: 804523F4 (lit_6724)
//	800618D4: 80452244 (lit_4366)
//	800618DC: 804522AC (lit_5106)
//	80061910: 804523F8 (lit_6725)
//	8006193C: 8045228C (lit_5098)
//	8006195C: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	80061960: 8045228C (lit_5098)
//	80061988: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	8006198C: 804523FC (lit_6726)
//	800619E0: 8034739C (PSVECSquareDistance)
//	800619E4: 804521B8 (lit_3954)
//	800619F4: 804521E8 (lit_4109)
//	800619FC: 804521F0 (lit_4110)
//	80061A44: 804521B0 (lit_3953)
//	80061A50: 80450AE0 (__float_nan)
//	80061A54: 80450AE0 (__float_nan)
//	80061AC0: 80450AE0 (__float_nan)
//	80061AC4: 80450AE0 (__float_nan)
//	80061AC8: 80452298 (lit_5101)
//	80061AF0: 804523EC (lit_6722)
//	80061B08: 8034739C (PSVECSquareDistance)
//	80061B0C: 804521B8 (lit_3954)
//	80061B1C: 804521E8 (lit_4109)
//	80061B24: 804521F0 (lit_4110)
//	80061B6C: 804521B0 (lit_3953)
//	80061B78: 80450AE0 (__float_nan)
//	80061B7C: 80450AE0 (__float_nan)
//	80061BE8: 80450AE0 (__float_nan)
//	80061BEC: 80450AE0 (__float_nan)
//	80061BF0: 80452400 (lit_6727)
//	80061BFC: 80452298 (lit_5101)
//	80061C00: 8026798C (cM_rndFX__Ff)
//	80061C08: 80452298 (lit_5101)
//	80061C0C: 8026798C (cM_rndFX__Ff)
//	80061C14: 80452298 (lit_5101)
//	80061C18: 8026798C (cM_rndFX__Ff)
//	80061C28: 804521B8 (lit_3954)
//	80061C2C: 8045223C (lit_4364)
//	80061C30: 80452220 (lit_4357)
//	80061C34: 804521C4 (lit_3993)
//	80061C38: 8026F97C (cLib_addCalc__FPfffff)
//	80061C40: 804521C4 (lit_3993)
//	80061C58: 8005B708 (get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	80061C5C: 8045223C (lit_4364)
//	80061C60: 80267954 (cM_rndF__Ff)
//	80061C70: 8045223C (lit_4364)
//	80061C74: 80267954 (cM_rndF__Ff)
//	80061C84: 8045223C (lit_4364)
//	80061C88: 80267954 (cM_rndF__Ff)
//	80061C9C: 80452298 (lit_5101)
//	80061CC0: 804521B8 (lit_3954)
//	80061D0C: 8034739C (PSVECSquareDistance)
//	80061D1C: 804521E8 (lit_4109)
//	80061D24: 804521F0 (lit_4110)
//	80061D6C: 804521B0 (lit_3953)
//	80061D78: 80450AE0 (__float_nan)
//	80061D7C: 80450AE0 (__float_nan)
//	80061DE8: 80450AE0 (__float_nan)
//	80061DEC: 80450AE0 (__float_nan)
//	80061E08: 8045236C (lit_5735)
//	80061E14: 804521B8 (lit_3954)
//	80061E20: 8045237C (lit_5739)
//	80061E28: 804521B8 (lit_3954)
//	80061E3C: 80452214 (lit_4354)
//	80061E50: 80452404 (lit_6728)
//	80061E5C: 80452214 (lit_4354)
//	80061E6C: 804521B8 (lit_3954)
//	80061E80: 80452214 (lit_4354)
//	80061E90: 80452214 (lit_4354)
//	80061EA8: 80452410 (lit_6731)
//	80061EC0: 80452414 (lit_6732)
//	80061ED0: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	80061ED4: 80452240 (lit_4365)
//	80061EE8: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	80061EF0: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	80061F04: 80452418 (lit_6733)
//	80061F14: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	80061F18: 804523E0 (lit_6368)
//	80061F2C: 8045234C (lit_5727)
//	80061F54: 8045241C (lit_6734)
//	80061F64: 80452420 (lit_6735)
//	80061F74: 80452244 (lit_4366)
//	80061F84: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	80061F88: 80452424 (lit_6736)
//	80061F94: 80452418 (lit_6733)
//	80061F9C: 80452220 (lit_4357)
//	80061FA8: 801A6D4C (dKy_move_room_ratio__FP12dKy_tevstr_cPSc)
//	80061FC8: 804521B8 (lit_3954)
//	80061FD0: 80452238 (lit_4363)
//	80061FF8: 80368994 (strcmp)
//	80062020: 80452220 (lit_4357)
//	80062028: 80452238 (lit_4363)
//	8006202C: 8026F97C (cLib_addCalc__FPfffff)
//	80062098: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cloud_shadow_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/cloud_shadow_move__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452428-8045242C 0004+00 s=1 e=0 z=0  None .sdata2    @6947 */
SECTION_SDATA2 static f32 lit_6947 = 2500.0f;

/* 8045242C-80452430 0004+00 s=1 e=0 z=0  None .sdata2    @6948 */
SECTION_SDATA2 static f32 lit_6948 = 25.0f;

/* 80452430-80452438 0004+04 s=1 e=0 z=0  None .sdata2    @6949 */
SECTION_SDATA2 static f32 lit_6949[1 + 1 /* padding */] = {
    18000.0f,
    /* padding */
    0.0f,
};

/* 80452438-80452440 0008+00 s=1 e=0 z=0  None .sdata2    @6950 */
SECTION_SDATA2 static f64 lit_6950 = 14000.0;

/* 80452440-80452444 0004+00 s=1 e=0 z=0  None .sdata2    @6951 */
SECTION_SDATA2 static f32 lit_6951 = 15000.0f;

/* 80452444-80452448 0004+00 s=3 e=0 z=0  None .sdata2    @6952 */
SECTION_SDATA2 static f32 lit_6952 = 5000.0f;

/* 80452448-8045244C 0004+00 s=1 e=0 z=0  None .sdata2    @6953 */
SECTION_SDATA2 static f32 lit_6953 = 15100.0f;

/* 8045244C-80452450 0004+00 s=1 e=0 z=0  None .sdata2    @6954 */
SECTION_SDATA2 static f32 lit_6954 = -7.0f / 10.0f;

/* 80452450-80452454 0004+00 s=1 e=0 z=0  None .sdata2    @6955 */
SECTION_SDATA2 static f32 lit_6955 = 1.0f / 40.0f;

/* 800620AC-80062ADC 0A30+00 s=0 e=1 z=0  None .text      vrkumo_move__Fv */
//	8006211C: 803621C4 (_savegpr_23)
//	80062124: 8005AB00 (dKyw_get_wind_vecpow__Fv)
//	80062140: 8042CA54 (g_env_light)
//	80062144: 8042CA54 (g_env_light)
//	8006214C: 804061C0 (g_dComIfG_gameInfo)
//	80062150: 804061C0 (g_dComIfG_gameInfo)
//	80062158: 8005AAE0 (dKyw_get_wind_vec__Fv)
//	80062160: 801AC57C (dKy_darkworld_check__Fv)
//	8006216C: 804522DC (lit_5118)
//	80062170: 804521B8 (lit_3954)
//	80062188: 80452288 (lit_5097)
//	8006218C: 80452428 (lit_6947)
//	80062194: 8045242C (lit_6948)
//	80062198: 8045229C (lit_5102)
//	800621A0: 804061C0 (g_dComIfG_gameInfo)
//	800621A4: 804061C0 (g_dComIfG_gameInfo)
//	800621B0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800621B4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800621BC: 80368994 (strcmp)
//	800621C8: 804521D4 (lit_4104)
//	800621CC: 804523A0 (lit_5748)
//	800621D0: 8042CA54 (g_env_light)
//	800621D4: 8042CA54 (g_env_light)
//	80062214: 804061C0 (g_dComIfG_gameInfo)
//	80062218: 804061C0 (g_dComIfG_gameInfo)
//	80062228: 804521B8 (lit_3954)
//	80062230: 80450D64 (struct_80450D64)
//	80062240: 80024384 (getStatusRoomDt__20dStage_roomControl_cFi)
//	80062260: 8045241C (lit_6734)
//	8006227C: 8042CA54 (g_env_light)
//	80062280: 8042CA54 (g_env_light)
//	80062284: 804521B8 (lit_3954)
//	80062288: 80452214 (lit_4354)
//	8006228C: 80452440 (lit_6951)
//	80062290: 804522E0 (lit_5119)
//	80062294: 804521C8 (lit_3995)
//	8006229C: 804523A4 (lit_6355)
//	800622A4: 80452354 (lit_5729)
//	800622A8: 80452450 (lit_6955)
//	800622D8: 804523F0 (lit_6723)
//	800622DC: 80267954 (cM_rndF__Ff)
//	800622EC: 80452430 (lit_6949)
//	800622F0: 80267954 (cM_rndF__Ff)
//	800622F4: 80452440 (lit_6951)
//	80062300: 8045233C (lit_5723)
//	80062304: 80267954 (cM_rndF__Ff)
//	80062308: 80452438 (lit_6950)
//	80062318: 80439A20 (sincosTable___5JMath)
//	8006231C: 80439A20 (sincosTable___5JMath)
//	8006232C: 80452444 (lit_6952)
//	8006233C: 80452270 (lit_4379)
//	8006235C: 804521B8 (lit_3954)
//	80062380: 804521B8 (lit_3954)
//	80062390: 80452444 (lit_6952)
//	800623A0: 80452270 (lit_4379)
//	800623E0: 80452244 (lit_4366)
//	800623E4: 8026798C (cM_rndFX__Ff)
//	800623E8: 80452244 (lit_4366)
//	800623F4: 804521B8 (lit_3954)
//	800623FC: 80452378 (lit_5738)
//	80062400: 80267954 (cM_rndF__Ff)
//	80062404: 80452330 (lit_5720)
//	80062438: 804521B8 (lit_3954)
//	80062444: 80347138 (PSVECSquareMag)
//	80062448: 804521B8 (lit_3954)
//	80062458: 804521E8 (lit_4109)
//	80062460: 804521F0 (lit_4110)
//	800624A8: 804521B0 (lit_3953)
//	800624B4: 80450AE0 (__float_nan)
//	800624B8: 80450AE0 (__float_nan)
//	80062524: 80450AE0 (__float_nan)
//	80062528: 80450AE0 (__float_nan)
//	8006252C: 80452440 (lit_6951)
//	8006253C: 80347138 (PSVECSquareMag)
//	80062540: 804521B8 (lit_3954)
//	80062550: 804521E8 (lit_4109)
//	80062558: 804521F0 (lit_4110)
//	800625A0: 804521B0 (lit_3953)
//	800625AC: 80450AE0 (__float_nan)
//	800625B0: 80450AE0 (__float_nan)
//	8006261C: 80450AE0 (__float_nan)
//	80062620: 80450AE0 (__float_nan)
//	80062624: 80452448 (lit_6953)
//	80062630: 804523F0 (lit_6723)
//	80062634: 80267954 (cM_rndF__Ff)
//	80062644: 80452430 (lit_6949)
//	80062648: 80267954 (cM_rndF__Ff)
//	8006264C: 80452440 (lit_6951)
//	80062658: 8045233C (lit_5723)
//	8006265C: 80267954 (cM_rndF__Ff)
//	80062660: 80452438 (lit_6950)
//	80062670: 80439A20 (sincosTable___5JMath)
//	80062674: 80439A20 (sincosTable___5JMath)
//	80062684: 80452444 (lit_6952)
//	80062694: 80452270 (lit_4379)
//	800626B4: 804521B8 (lit_3954)
//	800626D8: 804521B8 (lit_3954)
//	800626E8: 80452444 (lit_6952)
//	800626F8: 80452270 (lit_4379)
//	80062754: 804521B8 (lit_3954)
//	80062760: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80062764: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006276C: 80368994 (strcmp)
//	80062778: 8045244C (lit_6954)
//	80062780: 804521B8 (lit_3954)
//	80062790: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80062794: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006279C: 80368994 (strcmp)
//	800627A8: 80452244 (lit_4366)
//	800627B4: 8045223C (lit_4364)
//	800627E4: 804521B8 (lit_3954)
//	800627FC: 804521C8 (lit_3995)
//	80062818: 804523A4 (lit_6355)
//	800628B4: 80347138 (PSVECSquareMag)
//	800628C4: 804521E8 (lit_4109)
//	800628CC: 804521F0 (lit_4110)
//	80062914: 804521B0 (lit_3953)
//	80062920: 80450AE0 (__float_nan)
//	80062924: 80450AE0 (__float_nan)
//	80062990: 80450AE0 (__float_nan)
//	80062994: 80450AE0 (__float_nan)
//	80062A18: 804521B8 (lit_3954)
//	80062A24: 8045223C (lit_4364)
//	80062A30: 804521B8 (lit_3954)
//	80062A44: 8045223C (lit_4364)
//	80062A4C: 80452238 (lit_4363)
//	80062A50: 8026F97C (cLib_addCalc__FPfffff)
//	80062AC8: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void vrkumo_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/vrkumo_move__Fv.s"
}
#pragma pop

/* 80062ADC-80062B4C 0070+00 s=7 e=0 z=0  None .text      dKr_cullVtx_Set__Fv */
//	80062AEC: 8035C984 (GXSetCullMode)
//	80062B04: 8035B5C4 (GXSetVtxAttrFmt)
//	80062B1C: 8035B5C4 (GXSetVtxAttrFmt)
//	80062B20: 8035B58C (GXClearVtxDesc)
//	80062B2C: 8035AEB8 (GXSetVtxDesc)
//	80062B38: 8035AEB8 (GXSetVtxDesc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dKr_cullVtx_Set() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKr_cullVtx_Set__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803A9BB8-803A9BD8 0020+00 s=1 e=0 z=0  None .data      @7214 */
SECTION_DATA static void* lit_7214[8] = {
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x150),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x15C),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x168),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x174),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x180),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x18C),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x198),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x1A4),
};

/* 80452454-80452458 0004+00 s=5 e=0 z=0  None .sdata2    @7208 */
SECTION_SDATA2 static f32 lit_7208 = -1.0f;

/* 80452458-8045245C 0004+00 s=8 e=0 z=0  None .sdata2    @7209 */
SECTION_SDATA2 static f32 lit_7209 = 45.0f;

/* 8045245C-80452460 0004+00 s=2 e=0 z=0  None .sdata2    @7210 */
SECTION_SDATA2 static f32 lit_7210 = -6.2831854820251465f;

/* 80452460-80452464 0004+00 s=12 e=0 z=0  None .sdata2    @7211 */
SECTION_SDATA2 static f32 lit_7211 = 0.01745329238474369f;

/* 80452464-80452468 0004+00 s=2 e=0 z=0  None .sdata2    @7212 */
SECTION_SDATA2 static f32 lit_7212 = 11000.0f;

/* 80452468-8045246C 0004+00 s=2 e=0 z=0  None .sdata2    @7213 */
SECTION_SDATA2 static f32 lit_7213 = 23.0f / 10.0f;

/* 80062B4C-80063670 0B24+00 s=2 e=0 z=0  None .text      dKyr_draw_rev_moon__FPA4_fPPUc */
//	80062BAC: 803621CC (_savegpr_25)
//	80062BB8: 8042CA54 (g_env_light)
//	80062BBC: 8042CA54 (g_env_light)
//	80062BC8: 804061C0 (g_dComIfG_gameInfo)
//	80062BCC: 804061C0 (g_dComIfG_gameInfo)
//	80062BE4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80062C04: 8042CA54 (g_env_light)
//	80062C08: 8042CA54 (g_env_light)
//	80062C50: 8019FA08 (getDaytime__18dScnKy_env_light_cFv)
//	80062C54: 804521E4 (lit_4108)
//	80062C84: 803A9BB8 (lit_7214)
//	80062C88: 803A9BB8 (lit_7214)
//	80062CA0: 80452214 (lit_4354)
//	80062CAC: 80452214 (lit_4354)
//	80062CB8: 80452214 (lit_4354)
//	80062CC4: 80452214 (lit_4354)
//	80062CD0: 80452214 (lit_4354)
//	80062CDC: 80452454 (lit_7208)
//	80062CE8: 80452454 (lit_7208)
//	80062CF4: 80452454 (lit_7208)
//	80062CF8: 8042CA54 (g_env_light)
//	80062CFC: 8042CA54 (g_env_light)
//	80062D34: 804061C0 (g_dComIfG_gameInfo)
//	80062D38: 804061C0 (g_dComIfG_gameInfo)
//	80062D50: 803465B0 (PSMTXInverse)
//	80062D84: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
//	80062D94: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
//	80062DAC: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
//	80062DB4: 8035DB30 (GXSetNumChans)
//	80062DC8: 8035F37C (GXSetTevColor)
//	80062DDC: 8035F37C (GXSetTevColor)
//	80062DE4: 8035BDFC (GXSetNumTexGens)
//	80062E00: 8035BB7C (GXSetTexCoordGen2)
//	80062E1C: 8035BB7C (GXSetTexCoordGen2)
//	80062E38: 8035BB7C (GXSetTexCoordGen2)
//	80062E40: 8035F890 (GXSetNumTevStages)
//	80062E54: 8035F6F4 (GXSetTevOrder)
//	80062E6C: 8035F224 (GXSetTevColorIn)
//	80062E88: 8035F2AC (GXSetTevColorOp)
//	80062EA0: 8035F268 (GXSetTevAlphaIn)
//	80062EBC: 8035F314 (GXSetTevAlphaOp)
//	80062ED0: 8035F6F4 (GXSetTevOrder)
//	80062EE8: 8035F224 (GXSetTevColorIn)
//	80062F04: 8035F2AC (GXSetTevColorOp)
//	80062F1C: 8035F268 (GXSetTevAlphaIn)
//	80062F38: 8035F314 (GXSetTevAlphaOp)
//	80062F4C: 8035F6F4 (GXSetTevOrder)
//	80062F64: 8035F224 (GXSetTevColorIn)
//	80062F80: 8035F2AC (GXSetTevColorOp)
//	80062F98: 8035F268 (GXSetTevAlphaIn)
//	80062FB4: 8035F314 (GXSetTevAlphaOp)
//	80062FC8: 8035FBF0 (GXSetBlendMode)
//	80062FE0: 8035F624 (GXSetAlphaCompare)
//	80062FF0: 8035FC9C (GXSetZMode)
//	80062FF8: 8035F0D4 (GXSetNumIndStages)
//	80063000: 8035C984 (GXSetCullMode)
//	80063018: 8035B5C4 (GXSetVtxAttrFmt)
//	80063030: 8035B5C4 (GXSetVtxAttrFmt)
//	80063048: 8035B5C4 (GXSetVtxAttrFmt)
//	80063060: 8035B5C4 (GXSetVtxAttrFmt)
//	80063064: 8035B58C (GXClearVtxDesc)
//	80063070: 8035AEB8 (GXSetVtxDesc)
//	8006307C: 8035AEB8 (GXSetVtxDesc)
//	80063088: 8035AEB8 (GXSetVtxDesc)
//	80063094: 8035AEB8 (GXSetVtxDesc)
//	8006309C: 8037A4E8 (lit_6991)
//	800630A0: 8037A4E8 (lit_6991)
//	800630D0: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	800630E8: 804521B8 (lit_3954)
//	800630FC: 8036C720 (atan2)
//	8006310C: 8036C720 (atan2)
//	80063124: 804521B8 (lit_3954)
//	80063138: 8036C720 (atan2)
//	80063148: 8036C720 (atan2)
//	8006314C: 80452458 (lit_7209)
//	80063150: 804522A8 (lit_5105)
//	80063158: 8045245C (lit_7210)
//	80063174: 80452460 (lit_7211)
//	8006317C: 803466A8 (PSMTXRotRad)
//	8006318C: 803464E4 (PSMTXConcat)
//	80063198: 8036024C (GXLoadPosMtxImm)
//	800631A0: 803602EC (GXSetCurrentMtx)
//	800631B4: 80452210 (lit_4353)
//	800631B8: 804061C0 (g_dComIfG_gameInfo)
//	800631BC: 804061C0 (g_dComIfG_gameInfo)
//	800631C4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800631C8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800631D0: 80368994 (strcmp)
//	800631DC: 80452464 (lit_7212)
//	800631E0: 8045224C (lit_4368)
//	8006320C: 8035F37C (GXSetTevColor)
//	80063214: 8045227C (lit_4467)
//	80063224: 804521B8 (lit_3954)
//	80063248: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	8006324C: 8035B58C (GXClearVtxDesc)
//	80063258: 8035AEB8 (GXSetVtxDesc)
//	80063264: 8035AEB8 (GXSetVtxDesc)
//	8006326C: 8035F890 (GXSetNumTevStages)
//	80063280: 8035F6F4 (GXSetTevOrder)
//	80063298: 8035F224 (GXSetTevColorIn)
//	800632B4: 8035F2AC (GXSetTevColorOp)
//	800632CC: 8035F268 (GXSetTevAlphaIn)
//	800632E8: 8035F314 (GXSetTevAlphaOp)
//	800632FC: 8035FBF0 (GXSetBlendMode)
//	80063300: 80452468 (lit_7213)
//	80063308: 804522B8 (lit_5109)
//	80063358: 80452460 (lit_7211)
//	80063360: 803466A8 (PSMTXRotRad)
//	80063370: 803464E4 (PSMTXConcat)
//	8006337C: 8036024C (GXLoadPosMtxImm)
//	80063384: 803602EC (GXSetCurrentMtx)
//	80063398: 8035F37C (GXSetTevColor)
//	800633AC: 8035F37C (GXSetTevColor)
//	800633D0: 80346D6C (PSMTXMultVec)
//	80063414: 80346D6C (PSMTXMultVec)
//	80063474: 80346D6C (PSMTXMultVec)
//	800634B4: 80346D6C (PSMTXMultVec)
//	800634E8: 8035C764 (GXBegin)
//	80063604: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	8006365C: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dKyr_draw_rev_moon(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_draw_rev_moon__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 803A9BD8-803A9BF8 0020+00 s=1 e=0 z=0  None .data      @7549 */
SECTION_DATA static void* lit_7549[8] = {
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x354),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x360),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x36C),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x378),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x384),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x390),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x39C),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x3A8),
};

/* 8045246C-80452470 0004+00 s=2 e=0 z=0  None .sdata2    @7545 */
SECTION_SDATA2 static f32 lit_7545 = 3900.0f;

/* 80452470-80452474 0004+00 s=2 e=0 z=0  None .sdata2    @7546 */
SECTION_SDATA2 static f32 lit_7546 = 8052.0f;

/* 80452474-80452478 0004+00 s=2 e=0 z=0  None .sdata2    @7547 */
SECTION_SDATA2 static f32 lit_7547 = -9072.0f;

/* 80452478-8045247C 0004+00 s=1 e=0 z=0  None .sdata2    @7548 */
SECTION_SDATA2 static f32 lit_7548 = 2400.0f;

/* 80063670-8006444C 0DDC+00 s=1 e=1 z=0  None .text      dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc
 */
//	800636D0: 803621B8 (_savegpr_20)
//	800636E0: 8042CA54 (g_env_light)
//	800636E4: 8042CA54 (g_env_light)
//	800636F0: 804061C0 (g_dComIfG_gameInfo)
//	800636F4: 804061C0 (g_dComIfG_gameInfo)
//	800636FC: 804521B8 (lit_3954)
//	80063718: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006371C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063720: 80368994 (strcmp)
//	8006372C: 80452214 (lit_4354)
//	80063734: 804521B8 (lit_3954)
//	80063740: 804521B8 (lit_3954)
//	80063754: 804521B8 (lit_3954)
//	800637A8: 8042CA54 (g_env_light)
//	800637AC: 8042CA54 (g_env_light)
//	800637C8: 80452208 (lit_4126)
//	800637D4: 80452254 (lit_4370)
//	80063804: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063808: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006380C: 80368994 (strcmp)
//	8006381C: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	8006385C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800638A0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800638A4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800638AC: 80368994 (strcmp)
//	800638B8: 8019FAB8 (dKy_daynight_check__Fv)
//	800638C4: 8045246C (lit_7545)
//	800638D4: 80452470 (lit_7546)
//	800638E4: 80452474 (lit_7547)
//	80063924: 8042CA54 (g_env_light)
//	80063928: 8042CA54 (g_env_light)
//	8006392C: 8019FA08 (getDaytime__18dScnKy_env_light_cFv)
//	80063930: 804521E4 (lit_4108)
//	80063954: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063958: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006395C: 80368994 (strcmp)
//	80063968: 8042CA54 (g_env_light)
//	8006396C: 8042CA54 (g_env_light)
//	80063970: 8019FA08 (getDaytime__18dScnKy_env_light_cFv)
//	80063974: 804521E4 (lit_4108)
//	800639AC: 803A9BD8 (lit_7549)
//	800639B0: 803A9BD8 (lit_7549)
//	800639C8: 80452214 (lit_4354)
//	800639D4: 80452214 (lit_4354)
//	800639E0: 80452214 (lit_4354)
//	800639EC: 80452214 (lit_4354)
//	800639F8: 80452214 (lit_4354)
//	80063A04: 80452454 (lit_7208)
//	80063A10: 80452454 (lit_7208)
//	80063A1C: 80452454 (lit_7208)
//	80063A20: 8042CA54 (g_env_light)
//	80063A24: 8042CA54 (g_env_light)
//	80063A5C: 804061C0 (g_dComIfG_gameInfo)
//	80063A60: 804061C0 (g_dComIfG_gameInfo)
//	80063A78: 803465B0 (PSMTXInverse)
//	80063AAC: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
//	80063ABC: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
//	80063AD4: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
//	80063ADC: 8035DB30 (GXSetNumChans)
//	80063AF0: 8035F37C (GXSetTevColor)
//	80063B04: 8035F37C (GXSetTevColor)
//	80063B0C: 8035BDFC (GXSetNumTexGens)
//	80063B28: 8035BB7C (GXSetTexCoordGen2)
//	80063B44: 8035BB7C (GXSetTexCoordGen2)
//	80063B60: 8035BB7C (GXSetTexCoordGen2)
//	80063B68: 8035F890 (GXSetNumTevStages)
//	80063B7C: 8035F6F4 (GXSetTevOrder)
//	80063B94: 8035F224 (GXSetTevColorIn)
//	80063BB0: 8035F2AC (GXSetTevColorOp)
//	80063BC8: 8035F268 (GXSetTevAlphaIn)
//	80063BE4: 8035F314 (GXSetTevAlphaOp)
//	80063BF8: 8035F6F4 (GXSetTevOrder)
//	80063C10: 8035F224 (GXSetTevColorIn)
//	80063C2C: 8035F2AC (GXSetTevColorOp)
//	80063C44: 8035F268 (GXSetTevAlphaIn)
//	80063C60: 8035F314 (GXSetTevAlphaOp)
//	80063C74: 8035F6F4 (GXSetTevOrder)
//	80063C8C: 8035F224 (GXSetTevColorIn)
//	80063CA8: 8035F2AC (GXSetTevColorOp)
//	80063CC0: 8035F268 (GXSetTevAlphaIn)
//	80063CDC: 8035F314 (GXSetTevAlphaOp)
//	80063CF0: 8035FBF0 (GXSetBlendMode)
//	80063D08: 8035F624 (GXSetAlphaCompare)
//	80063D18: 8035FC9C (GXSetZMode)
//	80063D20: 8035F0D4 (GXSetNumIndStages)
//	80063D28: 8035C984 (GXSetCullMode)
//	80063D40: 8035B5C4 (GXSetVtxAttrFmt)
//	80063D58: 8035B5C4 (GXSetVtxAttrFmt)
//	80063D70: 8035B5C4 (GXSetVtxAttrFmt)
//	80063D88: 8035B5C4 (GXSetVtxAttrFmt)
//	80063D8C: 8035B58C (GXClearVtxDesc)
//	80063D98: 8035AEB8 (GXSetVtxDesc)
//	80063DA4: 8035AEB8 (GXSetVtxDesc)
//	80063DB0: 8035AEB8 (GXSetVtxDesc)
//	80063DBC: 8035AEB8 (GXSetVtxDesc)
//	80063DD0: 8037A508 (lit_7275)
//	80063DD4: 8037A508 (lit_7275)
//	80063DFC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063E00: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063E04: 80368994 (strcmp)
//	80063E1C: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	80063E34: 804521B8 (lit_3954)
//	80063E48: 8036C720 (atan2)
//	80063E58: 8036C720 (atan2)
//	80063E70: 804521B8 (lit_3954)
//	80063E84: 8036C720 (atan2)
//	80063E94: 8036C720 (atan2)
//	80063E98: 80452458 (lit_7209)
//	80063E9C: 804522A8 (lit_5105)
//	80063EA4: 8045245C (lit_7210)
//	80063EBC: 80452460 (lit_7211)
//	80063EC4: 803466A8 (PSMTXRotRad)
//	80063ED4: 803464E4 (PSMTXConcat)
//	80063EE0: 8036024C (GXLoadPosMtxImm)
//	80063EE8: 803602EC (GXSetCurrentMtx)
//	80063EFC: 80452210 (lit_4353)
//	80063F04: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063F08: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063F10: 80368994 (strcmp)
//	80063F1C: 80452464 (lit_7212)
//	80063F28: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063F2C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063F30: 80368994 (strcmp)
//	80063F3C: 80452280 (lit_4468)
//	80063F44: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063F48: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063F50: 80368994 (strcmp)
//	80063F5C: 8019FAB8 (dKy_daynight_check__Fv)
//	80063F68: 8045229C (lit_5102)
//	80063F74: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	80063F78: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063F7C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063F84: 80368994 (strcmp)
//	80063F90: 80452478 (lit_7548)
//	80063F94: 8045224C (lit_4368)
//	80063FC0: 8035F37C (GXSetTevColor)
//	80063FC8: 8045227C (lit_4467)
//	80063FD8: 804521B8 (lit_3954)
//	80063FEC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80063FF0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80064004: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	80064008: 8035B58C (GXClearVtxDesc)
//	80064014: 8035AEB8 (GXSetVtxDesc)
//	80064020: 8035AEB8 (GXSetVtxDesc)
//	80064028: 8035F890 (GXSetNumTevStages)
//	8006403C: 8035F6F4 (GXSetTevOrder)
//	80064054: 8035F224 (GXSetTevColorIn)
//	80064070: 8035F2AC (GXSetTevColorOp)
//	80064088: 8035F268 (GXSetTevAlphaIn)
//	800640A4: 8035F314 (GXSetTevAlphaOp)
//	800640B8: 8035FBF0 (GXSetBlendMode)
//	800640BC: 80452468 (lit_7213)
//	800640C4: 804522B8 (lit_5109)
//	80064114: 80452460 (lit_7211)
//	8006411C: 803466A8 (PSMTXRotRad)
//	8006412C: 803464E4 (PSMTXConcat)
//	80064138: 8036024C (GXLoadPosMtxImm)
//	80064140: 803602EC (GXSetCurrentMtx)
//	80064154: 8035F37C (GXSetTevColor)
//	80064168: 8035F37C (GXSetTevColor)
//	8006418C: 80346D6C (PSMTXMultVec)
//	800641D0: 80346D6C (PSMTXMultVec)
//	80064230: 80346D6C (PSMTXMultVec)
//	80064270: 80346D6C (PSMTXMultVec)
//	800642A4: 8035C764 (GXBegin)
//	800643B8: 80368994 (strcmp)
//	800643CC: 80062B4C (dKyr_draw_rev_moon__FPA4_fPPUc)
//	800643E0: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	80064438: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawSun(f32 (*param_0)[4], cXyz* param_1, _GXColor& param_2, u8** param_3) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450EF0-80450EF4 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 struct_80450EF0[4];

/* 80450EF4-80450EF8 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80450EF4[4];

/* 8045247C-80452480 0004+00 s=1 e=0 z=0  None .sdata2    @7882 */
SECTION_SDATA2 static f32 lit_7882 = 29.0f / 10.0f;

/* 80452480-80452484 0004+00 s=2 e=0 z=0  None .sdata2    @7883 */
SECTION_SDATA2 static f32 lit_7883 = 34.0f;

/* 80452484-80452488 0004+00 s=1 e=0 z=0  None .sdata2    @7884 */
SECTION_SDATA2 static f32 lit_7884 = 160.0f;

/* 80452488-8045248C 0004+00 s=1 e=0 z=0  None .sdata2    @7885 */
SECTION_SDATA2 static f32 lit_7885 = 43.0f / 50.0f;

/* 8045248C-80452490 0004+00 s=1 e=0 z=0  None .sdata2    @7886 */
SECTION_SDATA2 static f32 lit_7886 = 123.0f / 50.0f;

/* 80452490-80452494 0004+00 s=2 e=0 z=0  None .sdata2    @7887 */
SECTION_SDATA2 static f32 lit_7887 = 11.0f / 10.0f;

/* 80452494-80452498 0004+00 s=1 e=0 z=0  None .sdata2    @7888 */
SECTION_SDATA2 static f32 lit_7888 = 1.0f / 25.0f;

/* 80452498-8045249C 0004+00 s=1 e=0 z=0  None .sdata2    @7889 */
SECTION_SDATA2 static f32 lit_7889 = 3.0f / 40.0f;

/* 8045249C-804524A0 0004+00 s=1 e=0 z=0  None .sdata2    @7890 */
SECTION_SDATA2 static f32 lit_7890 = 22.0f / 25.0f;

/* 804524A0-804524A4 0004+00 s=1 e=0 z=0  None .sdata2    @7891 */
SECTION_SDATA2 static f32 lit_7891 = 30.599998474121094f;

/* 804524A4-804524A8 0004+00 s=4 e=0 z=0  None .sdata2    @7892 */
SECTION_SDATA2 static f32 lit_7892 = 140.0f;

/* 804524A8-804524AC 0004+00 s=1 e=0 z=0  None .sdata2    @7893 */
SECTION_SDATA2 static f32 lit_7893 = 17.0f / 20.0f;

/* 804524AC-804524B0 0004+00 s=2 e=0 z=0  None .sdata2    @7894 */
SECTION_SDATA2 static f32 lit_7894 = 60.0f;

/* 8006444C-8006562C 11E0+00 s=0 e=1 z=0  None .text
 * dKyr_drawLenzflare__FPA4_fP4cXyzR8_GXColorPPUc               */
//	800644EC: 803621BC (_savegpr_21)
//	800644FC: 8042CA54 (g_env_light)
//	80064500: 8042CA54 (g_env_light)
//	8006450C: 804061C0 (g_dComIfG_gameInfo)
//	80064510: 804061C0 (g_dComIfG_gameInfo)
//	80064518: 80450EF0 (struct_80450EF0)
//	80064528: 80450EEE (struct_80450EEC)
//	80064530: 80450EF0 (struct_80450EF0)
//	80064534: 80450EF4 (data_80450EF4)
//	80064544: 80450EF2 (struct_80450EF0)
//	8006454C: 80450EF4 (data_80450EF4)
//	80064554: 80452214 (lit_4354)
//	80064564: 80452220 (lit_4357)
//	80064574: 80452210 (lit_4353)
//	8006457C: 8005B830 (dKy_set_eyevect_calc2__FP12camera_classP3Vecff)
//	800645B0: 804061C0 (g_dComIfG_gameInfo)
//	800645B4: 804061C0 (g_dComIfG_gameInfo)
//	800645CC: 803465B0 (PSMTXInverse)
//	800645D8: 80434AC8 (j3dSys)
//	800645DC: 80434AC8 (j3dSys)
//	800645E0: 8031073C (reinitGX__6J3DSysFv)
//	800645EC: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	800645F4: 8035DB30 (GXSetNumChans)
//	80064608: 8035F37C (GXSetTevColor)
//	8006461C: 8035F37C (GXSetTevColor)
//	80064624: 8035BDFC (GXSetNumTexGens)
//	80064640: 8035BB7C (GXSetTexCoordGen2)
//	80064648: 8035F890 (GXSetNumTevStages)
//	8006465C: 8035F6F4 (GXSetTevOrder)
//	80064674: 8035F224 (GXSetTevColorIn)
//	80064690: 8035F2AC (GXSetTevColorOp)
//	800646A8: 8035F268 (GXSetTevAlphaIn)
//	800646C4: 8035F314 (GXSetTevAlphaOp)
//	800646D4: 804521B8 (lit_3954)
//	800646D8: 80452214 (lit_4354)
//	800646DC: 80452220 (lit_4357)
//	800646E8: 8035F8B8 (GXSetFog)
//	800646FC: 8035FBF0 (GXSetBlendMode)
//	80064714: 8035F624 (GXSetAlphaCompare)
//	8006471C: 8035FCD0 (GXSetZCompLoc)
//	8006472C: 8035FC9C (GXSetZMode)
//	80064734: 8035F0D4 (GXSetNumIndStages)
//	80064738: 80062ADC (dKr_cullVtx_Set__Fv)
//	80064744: 804521B8 (lit_3954)
//	80064748: 803466A8 (PSMTXRotRad)
//	80064758: 803464E4 (PSMTXConcat)
//	80064764: 8036024C (GXLoadPosMtxImm)
//	8006476C: 803602EC (GXSetCurrentMtx)
//	80064774: 804521B8 (lit_3954)
//	80064780: 80450EEE (struct_80450EEC)
//	8006478C: 80450EF2 (struct_80450EF0)
//	8006479C: 80450EEE (struct_80450EEC)
//	800647A4: 80450EF2 (struct_80450EF0)
//	800647BC: 803465B0 (PSMTXInverse)
//	800647C4: 8035DB30 (GXSetNumChans)
//	800647E4: 8035DB6C (GXSetChanCtrl)
//	800647EC: 8035BDFC (GXSetNumTexGens)
//	800647F4: 8035F890 (GXSetNumTevStages)
//	800647FC: 80452290 (lit_5099)
//	80064830: 8035F37C (GXSetTevColor)
//	80064844: 8035F6F4 (GXSetTevOrder)
//	8006485C: 8035F224 (GXSetTevColorIn)
//	80064878: 8035F2AC (GXSetTevColorOp)
//	80064890: 8035F268 (GXSetTevAlphaIn)
//	800648AC: 8035F314 (GXSetTevAlphaOp)
//	800648B4: 803605D0 (GXSetClipMode)
//	800648BC: 8035F0D4 (GXSetNumIndStages)
//	800648D4: 8035B5C4 (GXSetVtxAttrFmt)
//	800648D8: 8035B58C (GXClearVtxDesc)
//	800648E4: 8035AEB8 (GXSetVtxDesc)
//	800648F0: 8036024C (GXLoadPosMtxImm)
//	800648F8: 803602EC (GXSetCurrentMtx)
//	80064900: 80452330 (lit_5720)
//	80064904: 80452354 (lit_5729)
//	80064918: 8045247C (lit_7882)
//	80064920: 80452334 (lit_5721)
//	80064928: 80452480 (lit_7883)
//	8006492C: 80439A20 (sincosTable___5JMath)
//	80064930: 80439A20 (sincosTable___5JMath)
//	80064934: 804521B8 (lit_3954)
//	80064938: 8045233C (lit_5723)
//	8006493C: 8045223C (lit_4364)
//	80064940: 8045236C (lit_5735)
//	80064948: 80452484 (lit_7884)
//	80064968: 804521C8 (lit_3995)
//	8006498C: 804521C8 (lit_3995)
//	80064A44: 80452488 (lit_7885)
//	80064A54: 8045248C (lit_7886)
//	80064AA0: 80346D6C (PSMTXMultVec)
//	80064ADC: 8034739C (PSVECSquareDistance)
//	80064AEC: 804521E8 (lit_4109)
//	80064AF4: 804521F0 (lit_4110)
//	80064B3C: 804521B0 (lit_3953)
//	80064B48: 80450AE0 (__float_nan)
//	80064B4C: 80450AE0 (__float_nan)
//	80064BB8: 80450AE0 (__float_nan)
//	80064BBC: 80450AE0 (__float_nan)
//	80064C0C: 80452220 (lit_4357)
//	80064C14: 80452490 (lit_7887)
//	80064C1C: 80452240 (lit_4365)
//	80064C24: 80452330 (lit_5720)
//	80064C50: 80346D6C (PSMTXMultVec)
//	80064C9C: 80346D6C (PSMTXMultVec)
//	80064CE8: 80346D6C (PSMTXMultVec)
//	80064D28: 8035C764 (GXBegin)
//	80064D84: 8035DB30 (GXSetNumChans)
//	80064D98: 8035F37C (GXSetTevColor)
//	80064DAC: 8035F37C (GXSetTevColor)
//	80064DB4: 8035BDFC (GXSetNumTexGens)
//	80064DD0: 8035BB7C (GXSetTexCoordGen2)
//	80064DD8: 8035F890 (GXSetNumTevStages)
//	80064DEC: 8035F6F4 (GXSetTevOrder)
//	80064E04: 8035F224 (GXSetTevColorIn)
//	80064E20: 8035F2AC (GXSetTevColorOp)
//	80064E38: 8035F268 (GXSetTevAlphaIn)
//	80064E54: 8035F314 (GXSetTevAlphaOp)
//	80064E64: 804521B8 (lit_3954)
//	80064E68: 80452214 (lit_4354)
//	80064E6C: 80452220 (lit_4357)
//	80064E78: 8035F8B8 (GXSetFog)
//	80064E8C: 8035FBF0 (GXSetBlendMode)
//	80064EA4: 8035F624 (GXSetAlphaCompare)
//	80064EAC: 8035FCD0 (GXSetZCompLoc)
//	80064EBC: 8035FC9C (GXSetZMode)
//	80064EC4: 8035F0D4 (GXSetNumIndStages)
//	80064EC8: 80062ADC (dKr_cullVtx_Set__Fv)
//	80064ED8: 80452214 (lit_4354)
//	80064EE4: 8045223C (lit_4364)
//	80064EE8: 804521F8 (lit_4111)
//	80064EF4: 80452494 (lit_7888)
//	80064EF8: 80452498 (lit_7889)
//	80064F34: 80452248 (lit_4367)
//	80064F38: 8037A548 (col_dat)
//	80064F3C: 8037A548 (col_dat)
//	80064F48: 80452270 (lit_4379)
//	80064F84: 80452240 (lit_4365)
//	80064F88: 8037A548 (col_dat)
//	80064F8C: 8037A548 (col_dat)
//	80064F98: 80452270 (lit_4379)
//	80064FE4: 8035FBF0 (GXSetBlendMode)
//	80064FE8: 8045223C (lit_4364)
//	80064FF0: 80452270 (lit_4379)
//	80065094: 804521C8 (lit_3995)
//	800650B0: 8045249C (lit_7890)
//	800650B8: 804524A0 (lit_7891)
//	80065130: 8045223C (lit_4364)
//	80065138: 80452270 (lit_4379)
//	800651E0: 80452214 (lit_4354)
//	800651F0: 804524A4 (lit_7892)
//	80065218: 8037A548 (col_dat)
//	8006521C: 8037A548 (col_dat)
//	80065284: 8035F37C (GXSetTevColor)
//	80065298: 8035F37C (GXSetTevColor)
//	800652A4: 8037A528 (scale_dat)
//	800652A8: 8037A528 (scale_dat)
//	800652BC: 80452240 (lit_4365)
//	800652C0: 80452444 (lit_6952)
//	800652DC: 80452240 (lit_4365)
//	800652F0: 804524A8 (lit_7893)
//	80065300: 804521D4 (lit_4104)
//	80065308: 804524AC (lit_7894)
//	8006530C: 8037A528 (scale_dat)
//	80065310: 8037A528 (scale_dat)
//	80065320: 80452214 (lit_4354)
//	80065348: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	80065360: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	80065370: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	80065380: 804521B8 (lit_3954)
//	80065394: 80346D6C (PSMTXMultVec)
//	800653D4: 804521B8 (lit_3954)
//	800653E8: 80346D6C (PSMTXMultVec)
//	80065424: 804521B8 (lit_3954)
//	80065438: 80346D6C (PSMTXMultVec)
//	80065474: 804521B8 (lit_3954)
//	80065488: 80346D6C (PSMTXMultVec)
//	800654D8: 8035C764 (GXBegin)
//	80065578: 801A862C (dKy_GxFog_set__Fv)
//	80065580: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	80065618: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawLenzflare(f32 (*param_0)[4], cXyz* param_1, _GXColor& param_2, u8** param_3) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawLenzflare__FPA4_fP4cXyzR8_GXColorPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80424950-8042495C 000C+00 s=3 e=0 z=0  None .bss       @7952 */
static u8 lit_7952[12];

/* 80450EF8-80450EFC 0004+00 s=1 e=0 z=0  None .sbss      rot$7919 */
static u8 rot_7919[4];

/* 80450EFC-80450F00 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 struct_80450EFC[4];

/* 804524B0-804524B4 0004+00 s=2 e=0 z=0  None .sdata2    @8211 */
SECTION_SDATA2 static f32 lit_8211 = 70.0f;

/* 804524B4-804524B8 0004+00 s=1 e=0 z=0  None .sdata2    @8212 */
SECTION_SDATA2 static f32 lit_8212 = -1.5f;

/* 804524B8-804524BC 0004+00 s=5 e=0 z=0  None .sdata2    @8213 */
SECTION_SDATA2 static f32 lit_8213 = 150.0f;

/* 804524BC-804524C0 0004+00 s=1 e=0 z=0  None .sdata2    @8214 */
SECTION_SDATA2 static f32 lit_8214 = 320.0f;

/* 804524C0-804524C4 0004+00 s=1 e=0 z=0  None .sdata2    @8215 */
SECTION_SDATA2 static f32 lit_8215 = 480.0f;

/* 8006562C-80066048 0A1C+00 s=0 e=1 z=0  None .text      dKyr_drawRain__FPA4_fPPUc */
//	800656AC: 803621B4 (_savegpr_19)
//	800656B8: 80424950 (lit_7952)
//	800656BC: 80424950 (lit_7952)
//	800656C0: 8042CA54 (g_env_light)
//	800656C4: 8042CA54 (g_env_light)
//	800656CC: 804061C0 (g_dComIfG_gameInfo)
//	800656D0: 804061C0 (g_dComIfG_gameInfo)
//	800656DC: 8005AB00 (dKyw_get_wind_vecpow__Fv)
//	800656F8: 80450EFC (struct_80450EFC)
//	80065708: 80450EF8 (rot_7919)
//	80065710: 80450EFC (struct_80450EFC)
//	80065714: 8042CA54 (g_env_light)
//	80065718: 8042CA54 (g_env_light)
//	80065734: 804521B8 (lit_3954)
//	8006573C: 804522B0 (lit_5107)
//	80065764: 804061C0 (g_dComIfG_gameInfo)
//	80065768: 804061C0 (g_dComIfG_gameInfo)
//	80065780: 803465B0 (PSMTXInverse)
//	80065794: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	8006579C: 8035DB30 (GXSetNumChans)
//	800657B0: 8035F37C (GXSetTevColor)
//	800657B8: 8035BDFC (GXSetNumTexGens)
//	800657D4: 8035BB7C (GXSetTexCoordGen2)
//	800657DC: 8035F890 (GXSetNumTevStages)
//	800657F0: 8035F6F4 (GXSetTevOrder)
//	80065808: 8035F224 (GXSetTevColorIn)
//	80065824: 8035F2AC (GXSetTevColorOp)
//	8006583C: 8035F268 (GXSetTevAlphaIn)
//	80065858: 8035F314 (GXSetTevAlphaOp)
//	8006586C: 8035FBF0 (GXSetBlendMode)
//	80065884: 8035F624 (GXSetAlphaCompare)
//	80065894: 8035FC9C (GXSetZMode)
//	8006589C: 803605D0 (GXSetClipMode)
//	800658A4: 8035F0D4 (GXSetNumIndStages)
//	800658A8: 80062ADC (dKr_cullVtx_Set__Fv)
//	800658B4: 80452460 (lit_7211)
//	800658B8: 80450EF8 (rot_7919)
//	800658BC: 80452270 (lit_4379)
//	800658D8: 803466A8 (PSMTXRotRad)
//	800658E8: 803464E4 (PSMTXConcat)
//	800658F4: 8036024C (GXLoadPosMtxImm)
//	800658FC: 803602EC (GXSetCurrentMtx)
//	80065908: 804061C0 (g_dComIfG_gameInfo)
//	8006590C: 804061C0 (g_dComIfG_gameInfo)
//	80065914: 80452334 (lit_5721)
//	8006591C: 80452454 (lit_7208)
//	80065928: 804521B8 (lit_3954)
//	80065950: 801AC57C (dKy_darkworld_check__Fv)
//	8006595C: 80452480 (lit_7883)
//	80065980: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80065984: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006598C: 80368994 (strcmp)
//	80065998: 80452384 (lit_5741)
//	800659B8: 8045228C (lit_5098)
//	800659E4: 8035F37C (GXSetTevColor)
//	80065A20: 8034739C (PSVECSquareDistance)
//	80065A24: 804521B8 (lit_3954)
//	80065A34: 804521E8 (lit_4109)
//	80065A3C: 804521F0 (lit_4110)
//	80065A84: 804521B0 (lit_3953)
//	80065A90: 80450AE0 (__float_nan)
//	80065A94: 80450AE0 (__float_nan)
//	80065B00: 80450AE0 (__float_nan)
//	80065B04: 80450AE0 (__float_nan)
//	80065B08: 80452220 (lit_4357)
//	80065B0C: 804522EC (lit_5122)
//	80065B18: 80452214 (lit_4354)
//	80065B28: 80452350 (lit_5728)
//	80065B2C: 804524B0 (lit_8211)
//	80065B38: 8045234C (lit_5727)
//	80065B3C: 80267954 (cM_rndF__Ff)
//	80065B40: 80452214 (lit_4354)
//	80065B50: 80452288 (lit_5097)
//	80065B6C: 804522AC (lit_5106)
//	80065B74: 804521C8 (lit_3995)
//	80065BA4: 8045234C (lit_5727)
//	80065BA8: 80267954 (cM_rndF__Ff)
//	80065BAC: 80452214 (lit_4354)
//	80065BDC: 8045234C (lit_5727)
//	80065BE0: 80267954 (cM_rndF__Ff)
//	80065BE4: 80452214 (lit_4354)
//	80065BF4: 80452288 (lit_5097)
//	80065C10: 804522AC (lit_5106)
//	80065C18: 804521C8 (lit_3995)
//	80065C4C: 804521B8 (lit_3954)
//	80065C64: 80346D6C (PSMTXMultVec)
//	80065CB0: 804524B4 (lit_8212)
//	80065CB8: 804521B8 (lit_3954)
//	80065CD0: 80346D6C (PSMTXMultVec)
//	80065D1C: 804524B4 (lit_8212)
//	80065D24: 804521B8 (lit_3954)
//	80065D3C: 80346D6C (PSMTXMultVec)
//	80065D74: 804521B8 (lit_3954)
//	80065D8C: 80346D6C (PSMTXMultVec)
//	80065DFC: 80450EFD (struct_80450EFC)
//	80065E08: 804524B8 (lit_8213)
//	80065E10: 804521B8 (lit_3954)
//	80065E2C: 80009184 (__dt__4cXyzFv)
//	80065E30: 80009184 (__dt__4cXyzFv)
//	80065E38: 80361C24 (__register_global_object)
//	80065E3C: 804521B8 (lit_3954)
//	80065E44: 804524B8 (lit_8213)
//	80065E60: 80009184 (__dt__4cXyzFv)
//	80065E64: 80009184 (__dt__4cXyzFv)
//	80065E6C: 80361C24 (__register_global_object)
//	80065E70: 804524B8 (lit_8213)
//	80065E78: 804524BC (lit_8214)
//	80065E94: 80009184 (__dt__4cXyzFv)
//	80065E98: 80009184 (__dt__4cXyzFv)
//	80065EA0: 80361C24 (__register_global_object)
//	80065EA4: 80452458 (lit_7209)
//	80065EAC: 804524C0 (lit_8215)
//	80065EC8: 80009184 (__dt__4cXyzFv)
//	80065ECC: 80009184 (__dt__4cXyzFv)
//	80065ED4: 80361C24 (__register_global_object)
//	80065EDC: 80450EFD (struct_80450EFC)
//	80065EEC: 8035C764 (GXBegin)
//	80065FB4: 803605D0 (GXSetClipMode)
//	80065FBC: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	80066034: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawRain(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawRain__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 804524C4-804524C8 0004+00 s=1 e=0 z=0  None .sdata2    @8360 */
SECTION_SDATA2 static f32 lit_8360 = 7000.0f;

/* 804524C8-804524CC 0004+00 s=1 e=0 z=0  None .sdata2    @8361 */
SECTION_SDATA2 static f32 lit_8361 = 3600.0f;

/* 80066048-8006653C 04F4+00 s=0 e=1 z=0  None .text      dKyr_drawSibuki__FPA4_fPPUc */
//	80066080: 803621D4 (_savegpr_27)
//	8006608C: 804061C0 (g_dComIfG_gameInfo)
//	80066090: 804061C0 (g_dComIfG_gameInfo)
//	80066098: 8042CA54 (g_env_light)
//	8006609C: 8042CA54 (g_env_light)
//	800660D0: 803465B0 (PSMTXInverse)
//	800660DC: 804061C0 (g_dComIfG_gameInfo)
//	800660E0: 804061C0 (g_dComIfG_gameInfo)
//	800660E8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800660EC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800660F4: 80368994 (strcmp)
//	80066100: 80450D64 (struct_80450D64)
//	80066110: 804522F0 (lit_5123)
//	80066120: 804522F4 (lit_5124)
//	80066130: 804522F8 (lit_5125)
//	8006613C: 804522FC (lit_5126)
//	80066148: 80452300 (lit_5127)
//	80066158: 8045224C (lit_4368)
//	80066168: 804521B8 (lit_3954)
//	80066178: 804521BC (lit_3970)
//	80066180: 80452240 (lit_4365)
//	80066184: 80452380 (lit_5740)
//	80066188: 80452238 (lit_4363)
//	8006618C: 8026F97C (cLib_addCalc__FPfffff)
//	80066198: 804524C4 (lit_8360)
//	8006619C: 804521D4 (lit_4104)
//	800661A0: 8005B780 (dKy_set_eyevect_calc__FP12camera_classP3Vecff)
//	800661B0: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	800661B8: 804521B8 (lit_3954)
//	800661C4: 8045223C (lit_4364)
//	800661D0: 80452214 (lit_4354)
//	800661E4: 80452214 (lit_4354)
//	8006621C: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	80066224: 8035DB30 (GXSetNumChans)
//	80066238: 8035F37C (GXSetTevColor)
//	8006624C: 8035F37C (GXSetTevColor)
//	80066254: 8035BDFC (GXSetNumTexGens)
//	80066270: 8035BB7C (GXSetTexCoordGen2)
//	80066278: 8035F890 (GXSetNumTevStages)
//	8006628C: 8035F6F4 (GXSetTevOrder)
//	800662A4: 8035F224 (GXSetTevColorIn)
//	800662C0: 8035F2AC (GXSetTevColorOp)
//	800662D8: 8035F268 (GXSetTevAlphaIn)
//	800662F4: 8035F314 (GXSetTevAlphaOp)
//	80066308: 8035FBF0 (GXSetBlendMode)
//	80066320: 8035F624 (GXSetAlphaCompare)
//	80066330: 8035FC9C (GXSetZMode)
//	80066338: 803605D0 (GXSetClipMode)
//	80066340: 8035F0D4 (GXSetNumIndStages)
//	80066344: 80062ADC (dKr_cullVtx_Set__Fv)
//	80066350: 8036024C (GXLoadPosMtxImm)
//	80066358: 803602EC (GXSetCurrentMtx)
//	8006636C: 80452458 (lit_7209)
//	80066378: 80452214 (lit_4354)
//	80066390: 80452240 (lit_4365)
//	80066398: 8042CA54 (g_env_light)
//	8006639C: 8042CA54 (g_env_light)
//	800663A0: 80452290 (lit_5099)
//	800663AC: 80452288 (lit_5097)
//	800663B0: 80267954 (cM_rndF__Ff)
//	800663BC: 804524C8 (lit_8361)
//	800663C0: 8026798C (cM_rndFX__Ff)
//	800663C8: 804522EC (lit_5122)
//	800663CC: 8026798C (cM_rndFX__Ff)
//	800663D4: 804524C8 (lit_8361)
//	800663D8: 8026798C (cM_rndFX__Ff)
//	8006644C: 8035C764 (GXBegin)
//	800664F0: 803605D0 (GXSetClipMode)
//	800664F8: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	80066528: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawSibuki(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawSibuki__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F00-80450F04 0004+00 s=1 e=0 z=0  None .sbss      rot$8366 */
static u8 rot_8366[4];

/* 80450F04-80450F08 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80450F04[4];

/* 804524CC-804524D0 0004+00 s=1 e=0 z=0  None .sdata2    @8393 */
SECTION_SDATA2 static u32 lit_8393 = 0x323232FF;

/* 804524D0-804524D4 0004+00 s=1 e=0 z=0  None .sdata2    @8394 */
SECTION_SDATA2 static u32 lit_8394 = 0xFFD7F0FF;

/* 804524D4-804524D8 0004+00 s=1 e=0 z=0  None .sdata2    @8917 */
SECTION_SDATA2 static f32 lit_8917 = 18.0f;

/* 804524D8-804524DC 0004+00 s=1 e=0 z=0  None .sdata2    @8918 */
SECTION_SDATA2 static f32 lit_8918 = -0.5f;

/* 804524DC-804524E0 0004+00 s=1 e=0 z=0  None .sdata2    @8919 */
SECTION_SDATA2 static f32 lit_8919 = 123.0f;

/* 804524E0-804524E4 0004+00 s=1 e=0 z=0  None .sdata2    @8920 */
SECTION_SDATA2 static f32 lit_8920 = 8.0f;

/* 804524E4-804524E8 0004+00 s=1 e=0 z=0  None .sdata2    @8921 */
SECTION_SDATA2 static f32 lit_8921 = -9.0f / 10.0f;

/* 804524E8-804524EC 0004+00 s=1 e=0 z=0  None .sdata2    @8922 */
SECTION_SDATA2 static f32 lit_8922 = 213.0f;

/* 804524EC-804524F0 0004+00 s=1 e=0 z=0  None .sdata2    @8923 */
SECTION_SDATA2 static f32 lit_8923 = 685.0f;

/* 804524F0-804524F4 0004+00 s=1 e=0 z=0  None .sdata2    @8924 */
SECTION_SDATA2 static f32 lit_8924 = 483.0f;

/* 804524F4-804524F8 0004+00 s=1 e=0 z=0  None .sdata2    @8925 */
SECTION_SDATA2 static f32 lit_8925 = 32765.0f;

/* 804524F8-804524FC 0004+00 s=1 e=0 z=0  None .sdata2    @8926 */
SECTION_SDATA2 static f32 lit_8926 = -16384.0f;

/* 804524FC-80452500 0004+00 s=1 e=0 z=0  None .sdata2    @8927 */
SECTION_SDATA2 static f32 lit_8927 = 16384.0f;

/* 8006653C-80067488 0F4C+00 s=0 e=1 z=0  None .text      dKyr_drawHousi__FPA4_fPPUc */
//	8006658C: 803621AC (_savegpr_17)
//	80066598: 8042CA54 (g_env_light)
//	8006659C: 8042CA54 (g_env_light)
//	800665A4: 80450F04 (data_80450F04)
//	800665B0: 804521B8 (lit_3954)
//	800665B4: 80450F00 (rot_8366)
//	800665BC: 80450F04 (data_80450F04)
//	800665D0: 804061C0 (g_dComIfG_gameInfo)
//	800665D4: 804061C0 (g_dComIfG_gameInfo)
//	800665E0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800665E4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800665EC: 80368994 (strcmp)
//	80066600: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80066604: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006660C: 80368994 (strcmp)
//	80066618: 80450D64 (struct_80450D64)
//	8006662C: 80434AC8 (j3dSys)
//	80066630: 80434AC8 (j3dSys)
//	80066634: 8031073C (reinitGX__6J3DSysFv)
//	80066638: 804523FC (lit_6726)
//	8006663C: 8042CA54 (g_env_light)
//	80066640: 8042CA54 (g_env_light)
//	80066650: 804524A4 (lit_7892)
//	800666A8: 801AC57C (dKy_darkworld_check__Fv)
//	800666F8: 8045224C (lit_4368)
//	8006673C: 8042CA54 (g_env_light)
//	80066740: 8042CA54 (g_env_light)
//	80066758: 804524CC (lit_8393)
//	80066760: 804524D0 (lit_8394)
//	80066768: 804061C0 (g_dComIfG_gameInfo)
//	8006676C: 804061C0 (g_dComIfG_gameInfo)
//	800667C0: 804521B8 (lit_3954)
//	800667C4: 801A9CBC
//(dKy_ParticleColor_get_bg__FP4cXyzP12dKy_tevstr_cP8_GXColorP8_GXColorP8_GXColorP8_GXColorf)
//	800667C8: 8045224C (lit_4368)
//	800667CC: 804061C0 (g_dComIfG_gameInfo)
//	800667D0: 804061C0 (g_dComIfG_gameInfo)
//	800667E8: 803465B0 (PSMTXInverse)
//	800667F8: 804061C0 (g_dComIfG_gameInfo)
//	800667FC: 804061C0 (g_dComIfG_gameInfo)
//	80066800: 8042CA54 (g_env_light)
//	80066804: 8042CA54 (g_env_light)
//	80066808: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006680C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80066810: 804523A8 (lit_6356)
//	80066814: 80452460 (lit_7211)
//	80066820: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	80066828: 8035DB30 (GXSetNumChans)
//	8006683C: 8035F37C (GXSetTevColor)
//	80066850: 8035F37C (GXSetTevColor)
//	80066858: 8035BDFC (GXSetNumTexGens)
//	80066874: 8035BB7C (GXSetTexCoordGen2)
//	8006687C: 8035F890 (GXSetNumTevStages)
//	80066890: 8035F6F4 (GXSetTevOrder)
//	800668A8: 8035F224 (GXSetTevColorIn)
//	800668C4: 8035F2AC (GXSetTevColorOp)
//	800668DC: 8035F268 (GXSetTevAlphaIn)
//	800668F8: 8035F314 (GXSetTevAlphaOp)
//	80066904: 80368994 (strcmp)
//	8006692C: 8035FBF0 (GXSetBlendMode)
//	80066944: 8035FBF0 (GXSetBlendMode)
//	8006695C: 8035F624 (GXSetAlphaCompare)
//	80066974: 8035FC9C (GXSetZMode)
//	80066988: 8035FC9C (GXSetZMode)
//	80066990: 803605D0 (GXSetClipMode)
//	80066998: 8035F0D4 (GXSetNumIndStages)
//	8006699C: 80062ADC (dKr_cullVtx_Set__Fv)
//	800669A0: 80450F00 (rot_8366)
//	800669A8: 80450F00 (rot_8366)
//	800669B8: 803466A8 (PSMTXRotRad)
//	800669C8: 803464E4 (PSMTXConcat)
//	800669D4: 8036024C (GXLoadPosMtxImm)
//	800669DC: 803602EC (GXSetCurrentMtx)
//	80066A60: 8035F37C (GXSetTevColor)
//	80066A74: 804523A4 (lit_6355)
//	80066A84: 8045228C (lit_5098)
//	80066A98: 804521B8 (lit_3954)
//	80066AA8: 804522B8 (lit_5109)
//	80066AB0: 80452214 (lit_4354)
//	80066AFC: 8035E414 (GXLoadTexObj)
//	80066B10: 8035F37C (GXSetTevColor)
//	80066B14: 80452384 (lit_5741)
//	80066B2C: 804524D4 (lit_8917)
//	80066B34: 80452350 (lit_5728)
//	80066B40: 802675E4 (cM_rad2s__Ff)
//	80066B48: 80439A20 (sincosTable___5JMath)
//	80066B4C: 80439A20 (sincosTable___5JMath)
//	80066B54: 80452240 (lit_4365)
//	80066B60: 80452264 (lit_4374)
//	80066B6C: 802675E4 (cM_rad2s__Ff)
//	80066B74: 80439A20 (sincosTable___5JMath)
//	80066B78: 80439A20 (sincosTable___5JMath)
//	80066B88: 801AC57C (dKy_darkworld_check__Fv)
//	80066BA4: 80452454 (lit_7208)
//	80066BAC: 804524D8 (lit_8918)
//	80066BB4: 804521B8 (lit_3954)
//	80066BCC: 80452334 (lit_5721)
//	80066BE4: 80452214 (lit_4354)
//	80066C20: 804524DC (lit_8919)
//	80066C24: 804521C8 (lit_3995)
//	80066C44: 80430CD8 (g_Counter)
//	80066C48: 80430CD8 (g_Counter)
//	80066C4C: 80452270 (lit_4379)
//	80066C50: 80439A20 (sincosTable___5JMath)
//	80066C54: 80439A20 (sincosTable___5JMath)
//	80066C58: 804524E0 (lit_8920)
//	80066C5C: 80452244 (lit_4366)
//	80066C60: 803DD470 (now__14mDoMtx_stack_c)
//	80066C64: 803DD470 (now__14mDoMtx_stack_c)
//	80066C68: 80452338 (lit_5722)
//	80066CE8: 803468E8 (PSMTXTrans)
//	80066D00: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80066D10: 80346D6C (PSMTXMultVec)
//	80066D54: 80452454 (lit_7208)
//	80066D5C: 804524E4 (lit_8921)
//	80066D64: 804521B8 (lit_3954)
//	80066D7C: 80452490 (lit_7887)
//	80066D94: 80452214 (lit_4354)
//	80066DD0: 804524E8 (lit_8922)
//	80066DD4: 804521C8 (lit_3995)
//	80066DF4: 804524DC (lit_8919)
//	80066E0C: 804521F8 (lit_4111)
//	80066E24: 804524EC (lit_8923)
//	80066E40: 80452244 (lit_4366)
//	80066E44: 803DD470 (now__14mDoMtx_stack_c)
//	80066E48: 803DD470 (now__14mDoMtx_stack_c)
//	80066E64: 80430CD8 (g_Counter)
//	80066E68: 80430CD8 (g_Counter)
//	80066E70: 80452270 (lit_4379)
//	80066E9C: 80439A20 (sincosTable___5JMath)
//	80066EA0: 80439A20 (sincosTable___5JMath)
//	80066EB0: 80452240 (lit_4365)
//	80066EB8: 80452248 (lit_4367)
//	80066ECC: 80430CD8 (g_Counter)
//	80066ED0: 80430CD8 (g_Counter)
//	80066ED8: 80452270 (lit_4379)
//	80066F04: 80439A20 (sincosTable___5JMath)
//	80066F08: 80439A20 (sincosTable___5JMath)
//	80066F1C: 80452290 (lit_5099)
//	80066F2C: 80430CD8 (g_Counter)
//	80066F30: 80430CD8 (g_Counter)
//	80066F38: 80452270 (lit_4379)
//	80066F64: 80439A20 (sincosTable___5JMath)
//	80066F68: 80439A20 (sincosTable___5JMath)
//	80066F84: 80430CD8 (g_Counter)
//	80066F88: 80430CD8 (g_Counter)
//	80066F90: 80452270 (lit_4379)
//	80066FBC: 80439A20 (sincosTable___5JMath)
//	80066FC0: 80439A20 (sincosTable___5JMath)
//	80066FCC: 80452264 (lit_4374)
//	80067018: 803468E8 (PSMTXTrans)
//	80067038: 804524F0 (lit_8924)
//	8006703C: 8045223C (lit_4364)
//	80067068: 804521C8 (lit_3995)
//	80067088: 803DD470 (now__14mDoMtx_stack_c)
//	8006708C: 803DD470 (now__14mDoMtx_stack_c)
//	800670A0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800670A4: 803DD470 (now__14mDoMtx_stack_c)
//	800670A8: 803DD470 (now__14mDoMtx_stack_c)
//	800670BC: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	800670C0: 803DD470 (now__14mDoMtx_stack_c)
//	800670C4: 803DD470 (now__14mDoMtx_stack_c)
//	800670D8: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	800670F8: 80452380 (lit_5740)
//	80067110: 804523A4 (lit_6355)
//	80067124: 804524F4 (lit_8925)
//	80067134: 804524F8 (lit_8926)
//	80067138: 80452220 (lit_4357)
//	8006713C: 804522E0 (lit_5119)
//	80067140: 804521D0 (lit_4103)
//	80067144: 8026F97C (cLib_addCalc__FPfffff)
//	80067150: 804524FC (lit_8927)
//	80067154: 80452220 (lit_4357)
//	80067158: 804522E0 (lit_5119)
//	8006715C: 804521D0 (lit_4103)
//	80067160: 8026F97C (cLib_addCalc__FPfffff)
//	80067164: 803DD470 (now__14mDoMtx_stack_c)
//	80067168: 803DD470 (now__14mDoMtx_stack_c)
//	8006717C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80067180: 803DD470 (now__14mDoMtx_stack_c)
//	80067184: 803DD470 (now__14mDoMtx_stack_c)
//	80067198: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8006719C: 803DD470 (now__14mDoMtx_stack_c)
//	800671A0: 803DD470 (now__14mDoMtx_stack_c)
//	800671B4: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	800671C4: 80346D6C (PSMTXMultVec)
//	8006720C: 804521B8 (lit_3954)
//	80067220: 80346D6C (PSMTXMultVec)
//	80067264: 804521B8 (lit_3954)
//	80067278: 80346D6C (PSMTXMultVec)
//	800672B8: 804521B8 (lit_3954)
//	800672CC: 80346D6C (PSMTXMultVec)
//	80067308: 804521B8 (lit_3954)
//	8006731C: 80346D6C (PSMTXMultVec)
//	8006735C: 8035C764 (GXBegin)
//	80067364: 801AC57C (dKy_darkworld_check__Fv)
//	80067424: 803605D0 (GXSetClipMode)
//	8006742C: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	80067474: 803621F8 (_restgpr_17)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawHousi(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawHousi__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F08-80450F0C 0004+00 s=1 e=0 z=0  None .sbss      rot$8936 */
static u8 rot_8936[4];

/* 80450F0C-80450F10 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 struct_80450F0C[4];

/* 80450F10-80450F14 0004+00 s=1 e=0 z=0  None .sbss      S_fubuki_ratio$8948 */
static f32 S_fubuki_ratio;

/* 80450F14-80450F18 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80450F14[4];

/* 80452500-80452504 0004+00 s=1 e=0 z=0  None .sdata2    @8939 */
SECTION_SDATA2 static u32 lit_8939 = 0xFFFFFFFF;

/* 80452504-80452508 0004+00 s=1 e=0 z=0  None .sdata2    @8940 */
SECTION_SDATA2 static u32 lit_8940 = 0xFFFFFFFF;

/* 80452508-8045250C 0004+00 s=1 e=0 z=0  None .sdata2    @9384 */
SECTION_SDATA2 static f32 lit_9384 = -20.0f;

/* 8045250C-80452510 0004+00 s=1 e=0 z=0  None .sdata2    @9385 */
SECTION_SDATA2 static f32 lit_9385 = 178.5f;

/* 80452510-80452514 0004+00 s=1 e=0 z=0  None .sdata2    @9386 */
SECTION_SDATA2 static f32 lit_9386 = 127.5f;

/* 80452514-80452518 0004+00 s=3 e=0 z=0  None .sdata2    @9387 */
SECTION_SDATA2 static f32 lit_9387 = 719.0f;

/* 80452518-8045251C 0004+00 s=1 e=0 z=0  None .sdata2    @9388 */
SECTION_SDATA2 static f32 lit_9388 = 220.0f;

/* 8045251C-80452520 0004+00 s=1 e=0 z=0  None .sdata2    @9389 */
SECTION_SDATA2 static f32 lit_9389 = 2079.0f;

/* 80452520-80452524 0004+00 s=1 e=0 z=0  None .sdata2    @9390 */
SECTION_SDATA2 static f32 lit_9390 = 3013.0f;

/* 80452524-80452528 0004+00 s=1 e=0 z=0  None .sdata2    @9391 */
SECTION_SDATA2 static f32 lit_9391 = 864.0f;

/* 80452528-8045252C 0004+00 s=1 e=0 z=0  None .sdata2    @9392 */
SECTION_SDATA2 static f32 lit_9392 = -6000.0f;

/* 8045252C-80452530 0004+00 s=1 e=0 z=0  None .sdata2    @9393 */
SECTION_SDATA2 static f32 lit_9393 = -4145.0f;

/* 80452530-80452534 0004+00 s=1 e=0 z=0  None .sdata2    @9394 */
SECTION_SDATA2 static f32 lit_9394 = -2960.0f;

/* 80452534-80452538 0004+00 s=1 e=0 z=0  None .sdata2    @9395 */
SECTION_SDATA2 static f32 lit_9395 = -880.0f;

/* 80452538-8045253C 0004+00 s=1 e=0 z=0  None .sdata2    @9396 */
SECTION_SDATA2 static f32 lit_9396 = -4920.0f;

/* 8045253C-80452540 0004+00 s=1 e=0 z=0  None .sdata2    @9397 */
SECTION_SDATA2 static f32 lit_9397 = -2000.0f;

/* 80452540-80452544 0004+00 s=1 e=0 z=0  None .sdata2    @9398 */
SECTION_SDATA2 static f32 lit_9398 = 4.0f;

/* 80452544-80452548 0004+00 s=1 e=0 z=0  None .sdata2    @9399 */
SECTION_SDATA2 static f32 lit_9399 = 14.0f;

/* 80452548-8045254C 0004+00 s=1 e=0 z=0  None .sdata2    @9400 */
SECTION_SDATA2 static f32 lit_9400 = -24.0f;

/* 8045254C-80452550 0004+00 s=1 e=0 z=0  None .sdata2    @9401 */
SECTION_SDATA2 static f32 lit_9401 = 952.0f;

/* 80452550-80452554 0004+00 s=1 e=0 z=0  None .sdata2    @9402 */
SECTION_SDATA2 static f32 lit_9402 = -52.0f;

/* 80067488-800685DC 1154+00 s=0 e=1 z=0  None .text      dKyr_drawSnow__FPA4_fPPUc */
//	80067528: 803621A0 (__save_gpr)
//	80067534: 80424950 (lit_7952)
//	80067538: 80424950 (lit_7952)
//	8006753C: 804061C0 (g_dComIfG_gameInfo)
//	80067540: 804061C0 (g_dComIfG_gameInfo)
//	80067548: 8042CA54 (g_env_light)
//	8006754C: 8042CA54 (g_env_light)
//	80067554: 80450F0C (struct_80450F0C)
//	80067560: 804521B8 (lit_3954)
//	80067564: 80450F08 (rot_8936)
//	8006756C: 80450F0C (struct_80450F0C)
//	80067574: 80452500 (lit_8939)
//	8006757C: 80452504 (lit_8940)
//	80067588: 80450F0D (struct_80450F0C)
//	80067594: 804521B8 (lit_3954)
//	800675B4: 80009184 (__dt__4cXyzFv)
//	800675B8: 80009184 (__dt__4cXyzFv)
//	800675C0: 80361C24 (__register_global_object)
//	800675C4: 8045227C (lit_4467)
//	800675E8: 80009184 (__dt__4cXyzFv)
//	800675EC: 80009184 (__dt__4cXyzFv)
//	800675F4: 80361C24 (__register_global_object)
//	800675F8: 804522F8 (lit_5125)
//	80067600: 8045228C (lit_5098)
//	80067608: 8045227C (lit_4467)
//	80067624: 80009184 (__dt__4cXyzFv)
//	80067628: 80009184 (__dt__4cXyzFv)
//	80067630: 80361C24 (__register_global_object)
//	80067634: 804522F8 (lit_5125)
//	8006763C: 80452508 (lit_9384)
//	8006765C: 80009184 (__dt__4cXyzFv)
//	80067660: 80009184 (__dt__4cXyzFv)
//	80067668: 80361C24 (__register_global_object)
//	80067670: 80450F0D (struct_80450F0C)
//	80067674: 80450F14 (data_80450F14)
//	80067680: 804521B8 (lit_3954)
//	80067684: 80450F10 (S_fubuki_ratio)
//	8006768C: 80450F14 (data_80450F14)
//	80067698: 80434AC8 (j3dSys)
//	8006769C: 80434AC8 (j3dSys)
//	800676A0: 8031073C (reinitGX__6J3DSysFv)
//	800676B0: 8042CA54 (g_env_light)
//	800676B4: 8042CA54 (g_env_light)
//	800676CC: 8042CA54 (g_env_light)
//	800676D0: 8042CA54 (g_env_light)
//	800676E8: 8042CA54 (g_env_light)
//	800676EC: 8042CA54 (g_env_light)
//	80067714: 804521B8 (lit_3954)
//	80067718: 801A9CBC
//(dKy_ParticleColor_get_bg__FP4cXyzP12dKy_tevstr_cP8_GXColorP8_GXColorP8_GXColorP8_GXColorf)
//	8006771C: 8045250C (lit_9385)
//	80067720: 80452244 (lit_4366)
//	80067728: 80452270 (lit_4379)
//	800677B0: 80452510 (lit_9386)
//	800677B4: 8045223C (lit_4364)
//	8006783C: 804061C0 (g_dComIfG_gameInfo)
//	80067840: 804061C0 (g_dComIfG_gameInfo)
//	80067858: 803465B0 (PSMTXInverse)
//	80067874: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	8006787C: 8035DB30 (GXSetNumChans)
//	80067890: 8035F37C (GXSetTevColor)
//	800678A4: 8035F37C (GXSetTevColor)
//	800678AC: 8035BDFC (GXSetNumTexGens)
//	800678C8: 8035BB7C (GXSetTexCoordGen2)
//	800678D0: 8035F890 (GXSetNumTevStages)
//	800678E4: 8035F6F4 (GXSetTevOrder)
//	800678FC: 8035F224 (GXSetTevColorIn)
//	80067918: 8035F2AC (GXSetTevColorOp)
//	80067930: 8035F268 (GXSetTevAlphaIn)
//	8006794C: 8035F314 (GXSetTevAlphaOp)
//	80067960: 8035FBF0 (GXSetBlendMode)
//	80067978: 8035F624 (GXSetAlphaCompare)
//	80067988: 8035FC9C (GXSetZMode)
//	80067990: 803605D0 (GXSetClipMode)
//	80067998: 8035F0D4 (GXSetNumIndStages)
//	8006799C: 80062ADC (dKr_cullVtx_Set__Fv)
//	800679A8: 80452460 (lit_7211)
//	800679AC: 80450F08 (rot_8936)
//	800679B4: 803466A8 (PSMTXRotRad)
//	800679B8: 80452378 (lit_5738)
//	800679BC: 8026798C (cM_rndFX__Ff)
//	800679C0: 80452350 (lit_5728)
//	800679C8: 80450F08 (rot_8936)
//	800679D0: 80450F08 (rot_8936)
//	800679D4: 80452514 (lit_9387)
//	800679E0: 804521B8 (lit_3954)
//	800679E4: 80450F08 (rot_8936)
//	800679F4: 803464E4 (PSMTXConcat)
//	80067A00: 8036024C (GXLoadPosMtxImm)
//	80067A08: 803602EC (GXSetCurrentMtx)
//	80067A0C: 8042CA54 (g_env_light)
//	80067A10: 8042CA54 (g_env_light)
//	80067A28: 80450F10 (S_fubuki_ratio)
//	80067A2C: 804521B8 (lit_3954)
//	80067A30: 8045234C (lit_5727)
//	80067A34: 80452220 (lit_4357)
//	80067A38: 80452238 (lit_4363)
//	80067A3C: 8026F97C (cLib_addCalc__FPfffff)
//	80067A40: 80450F10 (S_fubuki_ratio)
//	80067A44: 804521B8 (lit_3954)
//	80067A64: 80450F10 (S_fubuki_ratio)
//	80067A68: 80452214 (lit_4354)
//	80067A6C: 8045234C (lit_5727)
//	80067A70: 80452220 (lit_4357)
//	80067A74: 80452238 (lit_4363)
//	80067A78: 8026F97C (cLib_addCalc__FPfffff)
//	80067A8C: 80452458 (lit_7209)
//	80067A94: 80452214 (lit_4354)
//	80067AAC: 80452214 (lit_4354)
//	80067AB8: 804061C0 (g_dComIfG_gameInfo)
//	80067ABC: 804061C0 (g_dComIfG_gameInfo)
//	80067AC8: 8042CA54 (g_env_light)
//	80067ACC: 8042CA54 (g_env_light)
//	80067AF8: 80430CD8 (g_Counter)
//	80067AFC: 80430CD8 (g_Counter)
//	80067B04: 80439A20 (sincosTable___5JMath)
//	80067B08: 80439A20 (sincosTable___5JMath)
//	80067B10: 80452334 (lit_5721)
//	80067B14: 804521C8 (lit_3995)
//	80067B30: 80452290 (lit_5099)
//	80067B40: 80452244 (lit_4366)
//	80067B48: 8045224C (lit_4368)
//	80067B54: 80452270 (lit_4379)
//	80067B68: 80452214 (lit_4354)
//	80067C10: 804521E4 (lit_4108)
//	80067C14: 80452248 (lit_4367)
//	80067C60: 80450F10 (S_fubuki_ratio)
//	80067C64: 80452518 (lit_9388)
//	80067C68: 80452248 (lit_4367)
//	80067C90: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80067C94: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80067C9C: 80368994 (strcmp)
//	80067CA8: 80450D64 (struct_80450D64)
//	80067CB8: 8045251C (lit_9389)
//	80067CC4: 80452520 (lit_9390)
//	80067CD4: 80452524 (lit_9391)
//	80067CE4: 80452528 (lit_9392)
//	80067CF0: 8045252C (lit_9393)
//	80067CFC: 80452530 (lit_9394)
//	80067D0C: 80452534 (lit_9395)
//	80067D18: 80452528 (lit_9392)
//	80067D24: 80452538 (lit_9396)
//	80067D34: 80452524 (lit_9391)
//	80067D40: 8045253C (lit_9397)
//	80067D6C: 8035F37C (GXSetTevColor)
//	80067D70: 80452378 (lit_5738)
//	80067D74: 804521C8 (lit_3995)
//	80067D90: 804522E0 (lit_5119)
//	80067DAC: 8034739C (PSVECSquareDistance)
//	80067DB0: 804521B8 (lit_3954)
//	80067DC0: 804521E8 (lit_4109)
//	80067DC8: 804521F0 (lit_4110)
//	80067E10: 804521B0 (lit_3953)
//	80067E1C: 80450AE0 (__float_nan)
//	80067E20: 80450AE0 (__float_nan)
//	80067E8C: 80450AE0 (__float_nan)
//	80067E90: 80450AE0 (__float_nan)
//	80067E94: 8045233C (lit_5723)
//	80067EA0: 80452214 (lit_4354)
//	80067EBC: 80452540 (lit_9398)
//	80067EC0: 80452288 (lit_5097)
//	80067ED4: 804521C8 (lit_3995)
//	80067F00: 80452540 (lit_9398)
//	80067F04: 80452544 (lit_9399)
//	80067F18: 804521C8 (lit_3995)
//	80067F44: 80452454 (lit_7208)
//	80067F58: 804521B8 (lit_3954)
//	80067F6C: 80346D6C (PSMTXMultVec)
//	80067FA0: 80452454 (lit_7208)
//	80067FB0: 804521B8 (lit_3954)
//	80067FC4: 80346D6C (PSMTXMultVec)
//	80068000: 804521B8 (lit_3954)
//	80068014: 80346D6C (PSMTXMultVec)
//	80068054: 804521B8 (lit_3954)
//	80068068: 80346D6C (PSMTXMultVec)
//	800680F4: 8035C764 (GXBegin)
//	800681C8: 80450D64 (struct_80450D64)
//	800681D8: 804523BC (lit_6361)
//	800681E4: 80450D64 (struct_80450D64)
//	8006820C: 8045224C (lit_4368)
//	80068210: 80452330 (lit_5720)
//	80068244: 8035F37C (GXSetTevColor)
//	80068248: 80450D64 (struct_80450D64)
//	80068254: 80452548 (lit_9400)
//	80068264: 8045254C (lit_9401)
//	80068274: 80452548 (lit_9400)
//	80068284: 80452550 (lit_9402)
//	80068294: 80452378 (lit_5738)
//	8006829C: 804521B8 (lit_3954)
//	800682B4: 804521B8 (lit_3954)
//	800682C8: 80346D6C (PSMTXMultVec)
//	80068300: 804521B8 (lit_3954)
//	80068314: 80346D6C (PSMTXMultVec)
//	8006834C: 804521B8 (lit_3954)
//	80068360: 80346D6C (PSMTXMultVec)
//	80068398: 804521B8 (lit_3954)
//	800683AC: 80346D6C (PSMTXMultVec)
//	800683E8: 8035C764 (GXBegin)
//	80068528: 803605D0 (GXSetClipMode)
//	80068530: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	800685C8: 803621EC (__restore_gpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawSnow(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawSnow__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F18-80450F1C 0004+00 s=1 e=0 z=0  None .sbss      rot$9421 */
static u8 rot_9421[4];

/* 80450F1C-80450F20 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 struct_80450F1C[4];

/* 80452554-80452558 0004+00 s=2 e=0 z=0  None .sdata2    @9833 */
SECTION_SDATA2 static f32 lit_9833 = 13.0f / 20.0f;

/* 80452558-8045255C 0004+00 s=1 e=0 z=0  None .sdata2    @9834 */
SECTION_SDATA2 static f32 lit_9834 = 7.0f / 25.0f;

/* 8045255C-80452560 0004+00 s=1 e=0 z=0  None .sdata2    @9835 */
SECTION_SDATA2 static f32 lit_9835 = 540.0f;

/* 80452560-80452564 0004+00 s=1 e=0 z=0  None .sdata2    @9836 */
SECTION_SDATA2 static f32 lit_9836 = 0.03125f;

/* 80452564-80452568 0004+00 s=1 e=0 z=0  None .sdata2    @9837 */
SECTION_SDATA2 static f32 lit_9837 = 0.004950494971126318f;

/* 800685DC-8006950C 0F30+00 s=0 e=1 z=0  None .text      dKyr_drawStar__FPA4_fPPUc */
//	80068654: 803621B8 (_savegpr_20)
//	8006865C: 80424950 (lit_7952)
//	80068660: 80424950 (lit_7952)
//	80068664: 8042CA54 (g_env_light)
//	80068668: 8042CA54 (g_env_light)
//	80068670: 804061C0 (g_dComIfG_gameInfo)
//	80068674: 804061C0 (g_dComIfG_gameInfo)
//	8006867C: 80450F1C (struct_80450F1C)
//	80068688: 804521B8 (lit_3954)
//	8006868C: 80450F18 (rot_9421)
//	80068694: 80450F1C (struct_80450F1C)
//	800686A4: 80450F1D (struct_80450F1C)
//	800686C0: 802673F4 (__ct__5csXyzFsss)
//	800686D8: 80018BD0 (__dt__5csXyzFv)
//	800686DC: 80018BD0 (__dt__5csXyzFv)
//	800686E4: 80361C24 (__register_global_object)
//	800686F8: 802673F4 (__ct__5csXyzFsss)
//	80068714: 80018BD0 (__dt__5csXyzFv)
//	80068718: 80018BD0 (__dt__5csXyzFv)
//	80068720: 80361C24 (__register_global_object)
//	80068734: 802673F4 (__ct__5csXyzFsss)
//	80068750: 80018BD0 (__dt__5csXyzFv)
//	80068754: 80018BD0 (__dt__5csXyzFv)
//	8006875C: 80361C24 (__register_global_object)
//	80068770: 802673F4 (__ct__5csXyzFsss)
//	8006878C: 80018BD0 (__dt__5csXyzFv)
//	80068790: 80018BD0 (__dt__5csXyzFv)
//	80068798: 80361C24 (__register_global_object)
//	800687AC: 802673F4 (__ct__5csXyzFsss)
//	800687C8: 80018BD0 (__dt__5csXyzFv)
//	800687CC: 80018BD0 (__dt__5csXyzFv)
//	800687D4: 80361C24 (__register_global_object)
//	800687E8: 802673F4 (__ct__5csXyzFsss)
//	80068804: 80018BD0 (__dt__5csXyzFv)
//	80068808: 80018BD0 (__dt__5csXyzFv)
//	80068810: 80361C24 (__register_global_object)
//	80068824: 802673F4 (__ct__5csXyzFsss)
//	80068840: 80018BD0 (__dt__5csXyzFv)
//	80068844: 80018BD0 (__dt__5csXyzFv)
//	8006884C: 80361C24 (__register_global_object)
//	80068860: 802673F4 (__ct__5csXyzFsss)
//	8006887C: 80018BD0 (__dt__5csXyzFv)
//	80068880: 80018BD0 (__dt__5csXyzFv)
//	80068888: 80361C24 (__register_global_object)
//	8006889C: 802673F4 (__ct__5csXyzFsss)
//	800688B8: 80018BD0 (__dt__5csXyzFv)
//	800688BC: 80018BD0 (__dt__5csXyzFv)
//	800688C4: 80361C24 (__register_global_object)
//	800688D8: 802673F4 (__ct__5csXyzFsss)
//	800688F4: 80018BD0 (__dt__5csXyzFv)
//	800688F8: 80018BD0 (__dt__5csXyzFv)
//	80068900: 80361C24 (__register_global_object)
//	80068914: 802673F4 (__ct__5csXyzFsss)
//	80068930: 80018BD0 (__dt__5csXyzFv)
//	80068934: 80018BD0 (__dt__5csXyzFv)
//	8006893C: 80361C24 (__register_global_object)
//	80068950: 802673F4 (__ct__5csXyzFsss)
//	8006896C: 80018BD0 (__dt__5csXyzFv)
//	80068970: 80018BD0 (__dt__5csXyzFv)
//	80068978: 80361C24 (__register_global_object)
//	8006898C: 802673F4 (__ct__5csXyzFsss)
//	800689A8: 80018BD0 (__dt__5csXyzFv)
//	800689AC: 80018BD0 (__dt__5csXyzFv)
//	800689B4: 80361C24 (__register_global_object)
//	800689BC: 80450F1D (struct_80450F1C)
//	800689CC: 804061C0 (g_dComIfG_gameInfo)
//	800689D0: 804061C0 (g_dComIfG_gameInfo)
//	800689DC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800689E0: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	800689E4: 80368994 (strcmp)
//	800689F4: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	80068A0C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80068A10: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80068A18: 80368994 (strcmp)
//	80068A28: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80068A2C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80068A34: 80368994 (strcmp)
//	80068A40: 80450D64 (struct_80450D64)
//	80068A54: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80068A58: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80068A60: 80368994 (strcmp)
//	80068A6C: 8019FAB8 (dKy_daynight_check__Fv)
//	80068A98: 804061C0 (g_dComIfG_gameInfo)
//	80068A9C: 804061C0 (g_dComIfG_gameInfo)
//	80068AB4: 803465B0 (PSMTXInverse)
//	80068AC4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80068AC8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	80068ACC: 80368994 (strcmp)
//	80068ADC: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	80068B10: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80068B34: 8045246C (lit_7545)
//	80068B44: 80452470 (lit_7546)
//	80068B54: 80452474 (lit_7547)
//	80068B6C: 80015310 (mDoLib_project__FP3VecP3Vec)
//	80068B74: 8035DB30 (GXSetNumChans)
//	80068B94: 8035DB6C (GXSetChanCtrl)
//	80068B9C: 8035BDFC (GXSetNumTexGens)
//	80068BA4: 8035F890 (GXSetNumTevStages)
//	80068BB8: 8035F37C (GXSetTevColor)
//	80068BCC: 8035F6F4 (GXSetTevOrder)
//	80068BE4: 8035F224 (GXSetTevColorIn)
//	80068C00: 8035F2AC (GXSetTevColorOp)
//	80068C18: 8035F268 (GXSetTevAlphaIn)
//	80068C34: 8035F314 (GXSetTevAlphaOp)
//	80068C44: 8035FC9C (GXSetZMode)
//	80068C58: 8035FBF0 (GXSetBlendMode)
//	80068C70: 8035F624 (GXSetAlphaCompare)
//	80068C78: 8035F0D4 (GXSetNumIndStages)
//	80068C90: 8035B5C4 (GXSetVtxAttrFmt)
//	80068C94: 8035B58C (GXClearVtxDesc)
//	80068CA0: 8035AEB8 (GXSetVtxDesc)
//	80068CAC: 80452460 (lit_7211)
//	80068CB0: 80450F18 (rot_9421)
//	80068CB8: 803466A8 (PSMTXRotRad)
//	80068CC8: 803464E4 (PSMTXConcat)
//	80068CD4: 8036024C (GXLoadPosMtxImm)
//	80068CDC: 803602EC (GXSetCurrentMtx)
//	80068CE0: 80450F18 (rot_9421)
//	80068CE4: 80452554 (lit_9833)
//	80068CEC: 80450F18 (rot_9421)
//	80068CF0: 80452514 (lit_9387)
//	80068CFC: 804521B8 (lit_3954)
//	80068D00: 80450F18 (rot_9421)
//	80068D1C: 804521B8 (lit_3954)
//	80068D30: 80452458 (lit_7209)
//	80068D38: 80452214 (lit_4354)
//	80068D4C: 80452214 (lit_4354)
//	80068D54: 80452558 (lit_9834)
//	80068D58: 80452214 (lit_4354)
//	80068D64: 804521B8 (lit_3954)
//	80068D80: 80346D6C (PSMTXMultVec)
//	80068DB8: 8045223C (lit_4364)
//	80068DC8: 804521B8 (lit_3954)
//	80068DDC: 80346D6C (PSMTXMultVec)
//	80068E1C: 804521B8 (lit_3954)
//	80068E30: 80346D6C (PSMTXMultVec)
//	80068E6C: 804521B8 (lit_3954)
//	80068E78: 804061C0 (g_dComIfG_gameInfo)
//	80068E7C: 804061C0 (g_dComIfG_gameInfo)
//	80068E80: 804521E4 (lit_4108)
//	80068E84: 80452294 (lit_5100)
//	80068E94: 804522DC (lit_5118)
//	80068EA8: 8042CA54 (g_env_light)
//	80068EAC: 8042CA54 (g_env_light)
//	80068EC8: 804521C8 (lit_3995)
//	80068F28: 8045255C (lit_9835)
//	80068F38: 8045237C (lit_5739)
//	80068F44: 8045223C (lit_4364)
//	80068F78: 80452248 (lit_4367)
//	80068F80: 80452560 (lit_9836)
//	80068F88: 804521C8 (lit_3995)
//	80068FB0: 80452214 (lit_4354)
//	80068FB4: 80452564 (lit_9837)
//	80068FC0: 8045236C (lit_5735)
//	80068FCC: 80439A20 (sincosTable___5JMath)
//	80068FD0: 80439A20 (sincosTable___5JMath)
//	80068FEC: 80452458 (lit_7209)
//	8006900C: 804521BC (lit_3970)
//	8006901C: 80452358 (lit_5730)
//	80069038: 8045228C (lit_5098)
//	80069050: 8045229C (lit_5102)
//	80069060: 8037A568 (star_col)
//	80069064: 8037A568 (star_col)
//	8006908C: 804524B0 (lit_8211)
//	80069094: 804521C8 (lit_3995)
//	800690D4: 8035F37C (GXSetTevColor)
//	80069108: 80015310 (mDoLib_project__FP3VecP3Vec)
//	8006911C: 8034739C (PSVECSquareDistance)
//	8006912C: 804521E8 (lit_4109)
//	80069134: 804521F0 (lit_4110)
//	8006917C: 804521B0 (lit_3953)
//	80069188: 80450AE0 (__float_nan)
//	8006918C: 80450AE0 (__float_nan)
//	800691F8: 80450AE0 (__float_nan)
//	800691FC: 80450AE0 (__float_nan)
//	80069238: 8019FA08 (getDaytime__18dScnKy_env_light_cFv)
//	80069268: 804521B8 (lit_3954)
//	80069280: 8035C764 (GXBegin)
//	8006939C: 8035C764 (GXBegin)
//	80069488: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	800694F8: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawStar(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawStar__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F20-80450F24 0004+00 s=1 e=0 z=0  None .sbss      rot$9847 */
static u8 rot_9847[4];

/* 80450F24-80450F28 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80450F24[4];

/* 80452568-8045256C 0004+00 s=1 e=0 z=0  None .sdata2    @9850 */
SECTION_SDATA2 static u32 lit_9850 = 0xFFFFFFFF;

/* 8045256C-80452570 0004+00 s=1 e=0 z=0  None .sdata2    @9851 */
SECTION_SDATA2 static u32 lit_9851 = 0xFFFFFFFF;

/* 80452570-80452574 0004+00 s=1 e=0 z=0  None .sdata2    @9852 */
SECTION_SDATA2 static u32 lit_9852 = 0xFFFFFFFF;

/* 80452574-80452578 0004+00 s=2 e=0 z=0  None .sdata2    @10030 */
SECTION_SDATA2 static f32 lit_10030 = 11.0f / 20.0f;

/* 80452578-8045257C 0004+00 s=2 e=0 z=0  None .sdata2    @10031 */
SECTION_SDATA2 static f32 lit_10031 = 49.0f / 100.0f;

/* 8006950C-8006A090 0B84+00 s=0 e=1 z=0  None .text      drawCloudShadow__FPA4_fPPUc */
//	8006953C: 803621D0 (_savegpr_26)
//	80069548: 8042CA54 (g_env_light)
//	8006954C: 8042CA54 (g_env_light)
//	80069554: 804061C0 (g_dComIfG_gameInfo)
//	80069558: 804061C0 (g_dComIfG_gameInfo)
//	80069564: 80450F24 (data_80450F24)
//	80069570: 804521B8 (lit_3954)
//	80069574: 80450F20 (rot_9847)
//	8006957C: 80450F24 (data_80450F24)
//	80069580: 80452568 (lit_9850)
//	80069588: 8045256C (lit_9851)
//	80069590: 80452570 (lit_9852)
//	80069598: 80452214 (lit_4354)
//	800695A8: 80434AC8 (j3dSys)
//	800695AC: 80434AC8 (j3dSys)
//	800695B0: 8031073C (reinitGX__6J3DSysFv)
//	800695B4: 804061C0 (g_dComIfG_gameInfo)
//	800695B8: 804061C0 (g_dComIfG_gameInfo)
//	800695D0: 803465B0 (PSMTXInverse)
//	800695E0: 803605D0 (GXSetClipMode)
//	800695E4: 8042CA54 (g_env_light)
//	800695E8: 8042CA54 (g_env_light)
//	80069610: 804521B8 (lit_3954)
//	80069614: 801A9CBC
//(dKy_ParticleColor_get_bg__FP4cXyzP12dKy_tevstr_cP8_GXColorP8_GXColorP8_GXColorP8_GXColorf)
//	8006961C: 80452270 (lit_4379)
//	80069634: 80452330 (lit_5720)
//	80069650: 80452354 (lit_5729)
//	800696F4: 804523B0 (lit_6358)
//	8006970C: 80452574 (lit_10030)
//	800697B8: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	800697C0: 8035DB30 (GXSetNumChans)
//	800697D4: 8035F37C (GXSetTevColor)
//	800697E8: 8035F37C (GXSetTevColor)
//	800697F0: 8035BDFC (GXSetNumTexGens)
//	8006980C: 8035BB7C (GXSetTexCoordGen2)
//	80069814: 8035F890 (GXSetNumTevStages)
//	80069828: 8035F6F4 (GXSetTevOrder)
//	80069840: 8035F224 (GXSetTevColorIn)
//	8006985C: 8035F2AC (GXSetTevColorOp)
//	80069874: 8035F268 (GXSetTevAlphaIn)
//	80069890: 8035F314 (GXSetTevAlphaOp)
//	80069894: 801A862C (dKy_GxFog_set__Fv)
//	800698D4: 8035FBF0 (GXSetBlendMode)
//	800698EC: 8035FBF0 (GXSetBlendMode)
//	80069904: 8035F624 (GXSetAlphaCompare)
//	80069914: 8035FC9C (GXSetZMode)
//	8006991C: 8035F0D4 (GXSetNumIndStages)
//	80069920: 80062ADC (dKr_cullVtx_Set__Fv)
//	8006992C: 80452460 (lit_7211)
//	80069930: 80450F20 (rot_9847)
//	80069938: 803466A8 (PSMTXRotRad)
//	80069948: 803464E4 (PSMTXConcat)
//	80069954: 8036024C (GXLoadPosMtxImm)
//	80069958: 80450F20 (rot_9847)
//	8006995C: 804523B0 (lit_6358)
//	80069964: 80450F20 (rot_9847)
//	80069968: 804521B8 (lit_3954)
//	80069974: 80452514 (lit_9387)
//	80069978: 80450F20 (rot_9847)
//	80069980: 803602EC (GXSetCurrentMtx)
//	800699C4: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
//	800699C8: 804061C0 (g_dComIfG_gameInfo)
//	800699CC: 804061C0 (g_dComIfG_gameInfo)
//	800699E4: 80450BCC (mFrameBufferTimg__13mDoGph_gInf_c)
//	800699EC: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
//	800699FC: 80452578 (lit_10031)
//	80069A04: 8045223C (lit_4364)
//	80069A0C: 80346C18 (C_MTXLightPerspective)
//	80069A14: 80434AC8 (j3dSys)
//	80069A18: 80434AC8 (j3dSys)
//	80069A20: 803464E4 (PSMTXConcat)
//	80069A24: 80450F20 (rot_9847)
//	80069A28: 80452378 (lit_5738)
//	80069A30: 80450F20 (rot_9847)
//	80069A3C: 80452460 (lit_7211)
//	80069A44: 803466A8 (PSMTXRotRad)
//	80069A54: 803464E4 (PSMTXConcat)
//	80069A60: 8036024C (GXLoadPosMtxImm)
//	80069A68: 803602EC (GXSetCurrentMtx)
//	80069A78: 80360320 (GXLoadTexMtxImm)
//	80069A90: 8035B5C4 (GXSetVtxAttrFmt)
//	80069AA8: 8035B5C4 (GXSetVtxAttrFmt)
//	80069AC0: 8035B5C4 (GXSetVtxAttrFmt)
//	80069AC4: 8035B58C (GXClearVtxDesc)
//	80069AD0: 8035AEB8 (GXSetVtxDesc)
//	80069ADC: 8035AEB8 (GXSetVtxDesc)
//	80069AE8: 8035AEB8 (GXSetVtxDesc)
//	80069AF0: 8035DB30 (GXSetNumChans)
//	80069B10: 8035DB6C (GXSetChanCtrl)
//	80069B24: 8035F37C (GXSetTevColor)
//	80069B38: 8035F37C (GXSetTevColor)
//	80069B40: 8035BDFC (GXSetNumTexGens)
//	80069B5C: 8035BB7C (GXSetTexCoordGen2)
//	80069B78: 8035BB7C (GXSetTexCoordGen2)
//	80069B80: 8035F890 (GXSetNumTevStages)
//	80069B94: 8035F6F4 (GXSetTevOrder)
//	80069BAC: 8035F224 (GXSetTevColorIn)
//	80069BC8: 8035F2AC (GXSetTevColorOp)
//	80069BE0: 8035F268 (GXSetTevAlphaIn)
//	80069BFC: 8035F314 (GXSetTevAlphaOp)
//	80069C10: 8035F6F4 (GXSetTevOrder)
//	80069C28: 8035F224 (GXSetTevColorIn)
//	80069C44: 8035F2AC (GXSetTevColorOp)
//	80069C5C: 8035F268 (GXSetTevAlphaIn)
//	80069C78: 8035F314 (GXSetTevAlphaOp)
//	80069C8C: 8035FBF0 (GXSetBlendMode)
//	80069CA4: 8035F624 (GXSetAlphaCompare)
//	80069CAC: 8035FCD0 (GXSetZCompLoc)
//	80069CBC: 8035FC9C (GXSetZMode)
//	80069CC4: 8035C984 (GXSetCullMode)
//	80069CCC: 8035F0D4 (GXSetNumIndStages)
//	80069CF4: 8042CA54 (g_env_light)
//	80069CF8: 8042CA54 (g_env_light)
//	80069D08: 804521C4 (lit_3993)
//	80069D28: 8045224C (lit_4368)
//	80069D54: 8035F37C (GXSetTevColor)
//	80069D94: 804521B8 (lit_3954)
//	80069DA8: 80346D6C (PSMTXMultVec)
//	80069DE4: 804521B8 (lit_3954)
//	80069DF8: 80346D6C (PSMTXMultVec)
//	80069E34: 804521B8 (lit_3954)
//	80069E48: 80346D6C (PSMTXMultVec)
//	80069E84: 804521B8 (lit_3954)
//	80069E98: 80346D6C (PSMTXMultVec)
//	80069EE4: 8035C764 (GXBegin)
//	80069F84: 8035C764 (GXBegin)
//	8006A04C: 803605D0 (GXSetClipMode)
//	8006A054: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	8006A07C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void drawCloudShadow(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/drawCloudShadow__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F28-80450F2C 0004+00 s=1 e=0 z=0  None .sbss      howa_loop_cnt$10108 */
static u8 howa_loop_cnt[4];

/* 80450F2C-80450F30 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80450F2C[4];

/* 8045257C-80452580 0004+00 s=1 e=0 z=0  None .sdata2    @10593 */
SECTION_SDATA2 static f32 lit_10593 = 240.0f;

/* 80452580-80452584 0004+00 s=1 e=0 z=0  None .sdata2    @10594 */
SECTION_SDATA2 static f32 lit_10594 = 1.000000013351432e-10f;

/* 80452584-80452588 0004+00 s=1 e=0 z=0  None .sdata2    @10595 */
SECTION_SDATA2 static f32 lit_10595 = 0.0625f;

/* 80452588-8045258C 0004+00 s=1 e=0 z=0  None .sdata2    @10596 */
SECTION_SDATA2 static f32 lit_10596 = 21.0f / 25.0f;

/* 8045258C-80452590 0004+00 s=1 e=0 z=0  None .sdata2    @10597 */
SECTION_SDATA2 static f32 lit_10597 = 23.0f / 25.0f;

/* 80452590-80452594 0004+00 s=1 e=0 z=0  None .sdata2    @10598 */
SECTION_SDATA2 static f32 lit_10598 = 19.0f / 10.0f;

/* 80452594-80452598 0004+00 s=1 e=0 z=0  None .sdata2    @10599 */
SECTION_SDATA2 static f32 lit_10599 = 16.0f;

/* 80452598-8045259C 0004+00 s=2 e=0 z=0  None .sdata2    @10600 */
SECTION_SDATA2 static f32 lit_10600 = 9.0f / 10.0f;

/* 8045259C-804525A0 0004+00 s=1 e=0 z=0  None .sdata2    @10601 */
SECTION_SDATA2 static f32 lit_10601 = -4.0f;

/* 804525A0-804525A4 0004+00 s=1 e=0 z=0  None .sdata2    @10602 */
SECTION_SDATA2 static f32 lit_10602 = 121.0f / 100.0f;

/* 804525A4-804525A8 0004+00 s=1 e=0 z=0  None .sdata2    @10603 */
SECTION_SDATA2 static f32 lit_10603 = 708.0f;

/* 804525A8-804525AC 0004+00 s=1 e=0 z=0  None .sdata2    @10604 */
SECTION_SDATA2 static f32 lit_10604 = 558.0f;

/* 8006A090-8006B190 1100+00 s=0 e=1 z=0  None .text      drawVrkumo__FPA4_fR8_GXColorPPUc */
//	8006A0F8: 803621A0 (__save_gpr)
//	8006A108: 8042CA54 (g_env_light)
//	8006A10C: 8042CA54 (g_env_light)
//	8006A11C: 804061C0 (g_dComIfG_gameInfo)
//	8006A120: 804061C0 (g_dComIfG_gameInfo)
//	8006A12C: 804521B8 (lit_3954)
//	8006A13C: 804061C0 (g_dComIfG_gameInfo)
//	8006A140: 804061C0 (g_dComIfG_gameInfo)
//	8006A158: 803465B0 (PSMTXInverse)
//	8006A168: 804521E0 (lit_4107)
//	8006A16C: 804521C8 (lit_3995)
//	8006A198: 80450D64 (struct_80450D64)
//	8006A1A4: 804061C0 (g_dComIfG_gameInfo)
//	8006A1A8: 804061C0 (g_dComIfG_gameInfo)
//	8006A1B0: 80024384 (getStatusRoomDt__20dStage_roomControl_cFi)
//	8006A1C4: 8042CA54 (g_env_light)
//	8006A1C8: 8042CA54 (g_env_light)
//	8006A1D0: 80452254 (lit_4370)
//	8006A1DC: 8045257C (lit_10593)
//	8006A1E8: 804061C0 (g_dComIfG_gameInfo)
//	8006A1EC: 804061C0 (g_dComIfG_gameInfo)
//	8006A208: 804521B8 (lit_3954)
//	8006A21C: 80015310 (mDoLib_project__FP3VecP3Vec)
//	8006A224: 804521B8 (lit_3954)
//	8006A230: 8045222C (lit_4360)
//	8006A248: 80452228 (lit_4359)
//	8006A25C: 8042CA54 (g_env_light)
//	8006A260: 8042CA54 (g_env_light)
//	8006A264: 80452460 (lit_7211)
//	8006A26C: 804061C0 (g_dComIfG_gameInfo)
//	8006A270: 804061C0 (g_dComIfG_gameInfo)
//	8006A284: 804523A4 (lit_6355)
//	8006A28C: 80452580 (lit_10594)
//	8006A2A0: 8035FC44 (GXSetColorUpdate)
//	8006A2A8: 803605D0 (GXSetClipMode)
//	8006A2B4: 803605D0 (GXSetClipMode)
//	8006A2F0: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	8006A2F8: 8035DB30 (GXSetNumChans)
//	8006A30C: 8035F37C (GXSetTevColor)
//	8006A320: 8035F37C (GXSetTevColor)
//	8006A328: 8035BDFC (GXSetNumTexGens)
//	8006A344: 8035BB7C (GXSetTexCoordGen2)
//	8006A34C: 8035F890 (GXSetNumTevStages)
//	8006A360: 8035F6F4 (GXSetTevOrder)
//	8006A378: 8035F224 (GXSetTevColorIn)
//	8006A394: 8035F2AC (GXSetTevColorOp)
//	8006A3AC: 8035F268 (GXSetTevAlphaIn)
//	8006A3C8: 8035F314 (GXSetTevAlphaOp)
//	8006A3D8: 804521B8 (lit_3954)
//	8006A3DC: 80452214 (lit_4354)
//	8006A3E0: 80452220 (lit_4357)
//	8006A3EC: 8035F8B8 (GXSetFog)
//	8006A400: 8035FBF0 (GXSetBlendMode)
//	8006A420: 8035F624 (GXSetAlphaCompare)
//	8006A428: 8035FCD0 (GXSetZCompLoc)
//	8006A438: 8035FC9C (GXSetZMode)
//	8006A454: 8035F624 (GXSetAlphaCompare)
//	8006A45C: 8035FCD0 (GXSetZCompLoc)
//	8006A46C: 8035FC9C (GXSetZMode)
//	8006A474: 8035F0D4 (GXSetNumIndStages)
//	8006A48C: 8035B5C4 (GXSetVtxAttrFmt)
//	8006A4A4: 8035B5C4 (GXSetVtxAttrFmt)
//	8006A4A8: 8035B58C (GXClearVtxDesc)
//	8006A4B4: 8035AEB8 (GXSetVtxDesc)
//	8006A4C0: 8035AEB8 (GXSetVtxDesc)
//	8006A4E0: 803466A8 (PSMTXRotRad)
//	8006A4F0: 803464E4 (PSMTXConcat)
//	8006A4FC: 8036024C (GXLoadPosMtxImm)
//	8006A504: 803602EC (GXSetCurrentMtx)
//	8006A530: 804523B0 (lit_6358)
//	8006A544: 804521C8 (lit_3995)
//	8006A560: 80452584 (lit_10595)
//	8006A568: 80452214 (lit_4354)
//	8006A578: 80450F2C (data_80450F2C)
//	8006A584: 804521B8 (lit_3954)
//	8006A588: 80450F28 (howa_loop_cnt)
//	8006A590: 80450F2C (data_80450F2C)
//	8006A594: 80452354 (lit_5729)
//	8006A598: 80452588 (lit_10596)
//	8006A59C: 801AC57C (dKy_darkworld_check__Fv)
//	8006A5A8: 80452248 (lit_4367)
//	8006A5B4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006A5B8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006A5C0: 80368994 (strcmp)
//	8006A5CC: 80452554 (lit_9833)
//	8006A5EC: 804521C8 (lit_3995)
//	8006A608: 804521D0 (lit_4103)
//	8006A60C: 80450F28 (howa_loop_cnt)
//	8006A618: 802675E4 (cM_rad2s__Ff)
//	8006A620: 80439A20 (sincosTable___5JMath)
//	8006A624: 80439A20 (sincosTable___5JMath)
//	8006A634: 80450F28 (howa_loop_cnt)
//	8006A638: 80452334 (lit_5721)
//	8006A644: 80450F28 (howa_loop_cnt)
//	8006A648: 8045221C (lit_4356)
//	8006A678: 80452214 (lit_4354)
//	8006A688: 804521C8 (lit_3995)
//	8006A7A0: 8045224C (lit_4368)
//	8006A7C8: 80452270 (lit_4379)
//	8006A7DC: 80452248 (lit_4367)
//	8006A854: 80452270 (lit_4379)
//	8006A868: 8045258C (lit_10597)
//	8006A8D4: 804523E8 (lit_6721)
//	8006A8EC: 8035E414 (GXLoadTexObj)
//	8006A900: 8035F37C (GXSetTevColor)
//	8006A904: 80452240 (lit_4365)
//	8006A908: 804521C8 (lit_3995)
//	8006A924: 804523A4 (lit_6355)
//	8006A938: 80452574 (lit_10030)
//	8006A93C: 80452244 (lit_4366)
//	8006A964: 804521B8 (lit_3954)
//	8006AA4C: 804521B8 (lit_3954)
//	8006AA60: 8036C720 (atan2)
//	8006AA70: 8036C720 (atan2)
//	8006AA80: 80452590 (lit_10598)
//	8006AA88: 80452214 (lit_4354)
//	8006AAA0: 80452354 (lit_5729)
//	8006AAA8: 80452214 (lit_4354)
//	8006AAAC: 80452594 (lit_10599)
//	8006AABC: 80452598 (lit_10600)
//	8006AAC4: 8045259C (lit_10601)
//	8006AAD4: 80452378 (lit_5738)
//	8006AAF0: 804525A0 (lit_10602)
//	8006AB04: 8036C590 (sin)
//	8006AB10: 8036C028 (cos)
//	8006AB24: 8036C590 (sin)
//	8006AB34: 8036C028 (cos)
//	8006AB40: 8036C028 (cos)
//	8006AB68: 804525A0 (lit_10602)
//	8006AB7C: 8036C590 (sin)
//	8006AB88: 8036C028 (cos)
//	8006AB9C: 8036C590 (sin)
//	8006ABAC: 8036C028 (cos)
//	8006ABB8: 8036C028 (cos)
//	8006ABE0: 804521B8 (lit_3954)
//	8006ABEC: 8036C590 (sin)
//	8006ABF8: 8036C028 (cos)
//	8006AC0C: 8036C590 (sin)
//	8006AC1C: 8036C028 (cos)
//	8006AC28: 8036C028 (cos)
//	8006AC50: 804521B8 (lit_3954)
//	8006AC5C: 8036C590 (sin)
//	8006AC68: 8036C028 (cos)
//	8006AC7C: 8036C590 (sin)
//	8006AC8C: 8036C028 (cos)
//	8006AC98: 8036C028 (cos)
//	8006ACC0: 80452324 (lit_5717)
//	8006AD54: 80347090 (PSVECAdd)
//	8006AD64: 80347090 (PSVECAdd)
//	8006AD74: 80347090 (PSVECAdd)
//	8006AD84: 80347090 (PSVECAdd)
//	8006AD94: 804522B8 (lit_5109)
//	8006ADD0: 80015310 (mDoLib_project__FP3VecP3Vec)
//	8006ADE0: 804525A4 (lit_10603)
//	8006ADF8: 804525A8 (lit_10604)
//	8006AE34: 8035C764 (GXBegin)
//	8006AEC8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AECC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AED4: 80368994 (strcmp)
//	8006AEE4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AEE8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AEF0: 80368994 (strcmp)
//	8006AF00: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AF04: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AF0C: 80368994 (strcmp)
//	8006AF1C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AF20: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AF28: 80368994 (strcmp)
//	8006AF38: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AF3C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AF44: 80368994 (strcmp)
//	8006AF54: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AF58: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006AF60: 80368994 (strcmp)
//	8006AF6C: 80450D64 (struct_80450D64)
//	8006AF84: 804522B8 (lit_5109)
//	8006AFCC: 80015310 (mDoLib_project__FP3VecP3Vec)
//	8006AFDC: 804525A4 (lit_10603)
//	8006AFF4: 804525A8 (lit_10604)
//	8006B030: 8035C764 (GXBegin)
//	8006B0FC: 8035FC44 (GXSetColorUpdate)
//	8006B110: 803605D0 (GXSetClipMode)
//	8006B114: 801A862C (dKy_GxFog_set__Fv)
//	8006B11C: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	8006B17C: 803621EC (__restore_gpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void drawVrkumo(f32 (*param_0)[4], _GXColor& param_1, u8** param_2) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/drawVrkumo__FPA4_fR8_GXColorPPUc.s"
}
#pragma pop

/* 8006B190-8006B1A8 0018+00 s=0 e=1 z=0  None .text      dKyr_thunder_init__Fv */
//	8006B194: 8042CA54 (g_env_light)
//	8006B198: 8042CA54 (g_env_light)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_thunder_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_thunder_init__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804525AC-804525B0 0004+00 s=1 e=0 z=0  None .sdata2    @10732 */
SECTION_SDATA2 static f32 lit_10732 = 90000.0f;

/* 804525B0-804525B4 0004+00 s=1 e=0 z=0  None .sdata2    @10733 */
SECTION_SDATA2 static f32 lit_10733 = 0.007000000216066837f;

/* 804525B4-804525B8 0004+00 s=1 e=0 z=0  None .sdata2    @10734 */
SECTION_SDATA2 static f32 lit_10734 = 195520.0f;

/* 804525B8-804525BC 0004+00 s=1 e=0 z=0  None .sdata2    @10735 */
SECTION_SDATA2 static f32 lit_10735 = 4818.0f;

/* 804525BC-804525C0 0004+00 s=1 e=0 z=0  None .sdata2    @10736 */
SECTION_SDATA2 static f32 lit_10736 = 1385.0f;

/* 804525C0-804525C4 0004+00 s=1 e=0 z=0  None .sdata2    @10737 */
SECTION_SDATA2 static f32 lit_10737 = 75.0f;

/* 804525C4-804525C8 0004+00 s=1 e=0 z=0  None .sdata2    @10738 */
SECTION_SDATA2 static f32 lit_10738 = -48.0f;

/* 804525C8-804525CC 0004+00 s=1 e=0 z=0  None .sdata2    @10739 */
SECTION_SDATA2 static f32 lit_10739 = 3.0f / 20.0f;

/* 8006B1A8-8006B8DC 0734+00 s=0 e=1 z=0  None .text      dKyr_thunder_move__Fv */
//	8006B1C0: 803621D4 (_savegpr_27)
//	8006B1C4: 8042CA54 (g_env_light)
//	8006B1C8: 8042CA54 (g_env_light)
//	8006B1CC: 804061C0 (g_dComIfG_gameInfo)
//	8006B1D0: 804061C0 (g_dComIfG_gameInfo)
//	8006B1E4: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006B1E8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006B1F4: 8036608C (memcmp)
//	8006B208: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006B20C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006B214: 80368994 (strcmp)
//	8006B220: 80450D64 (struct_80450D64)
//	8006B268: 804521B8 (lit_3954)
//	8006B278: 80452280 (lit_4468)
//	8006B27C: 8026798C (cM_rndFX__Ff)
//	8006B284: 80452280 (lit_4468)
//	8006B288: 8026798C (cM_rndFX__Ff)
//	8006B290: 80450E38 (m_mode__7dDemo_c)
//	8006B2A0: 8042CA54 (g_env_light)
//	8006B2A4: 8042CA54 (g_env_light)
//	8006B2F4: 804525AC (lit_10732)
//	8006B2FC: 80452214 (lit_4354)
//	8006B308: 801A797C (dKy_efplight_set__FP15LIGHT_INFLUENCE)
//	8006B30C: 80452330 (lit_5720)
//	8006B310: 80267954 (cM_rndF__Ff)
//	8006B314: 80452354 (lit_5729)
//	8006B334: 8001F7B8 (fopKyM_create__FsiP4cXyzP4cXyzPFPv_i)
//	8006B34C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006B350: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006B358: 80368994 (strcmp)
//	8006B370: 8042CA54 (g_env_light)
//	8006B374: 8042CA54 (g_env_light)
//	8006B3B0: 804525AC (lit_10732)
//	8006B3B8: 80452214 (lit_4354)
//	8006B3C4: 801A797C (dKy_efplight_set__FP15LIGHT_INFLUENCE)
//	8006B3C8: 80452330 (lit_5720)
//	8006B3CC: 80267954 (cM_rndF__Ff)
//	8006B3D0: 80452354 (lit_5729)
//	8006B3F0: 8001F7B8 (fopKyM_create__FsiP4cXyzP4cXyzPFPv_i)
//	8006B404: 80452214 (lit_4354)
//	8006B408: 80267954 (cM_rndF__Ff)
//	8006B40C: 804525B0 (lit_10733)
//	8006B418: 80452330 (lit_5720)
//	8006B41C: 80267954 (cM_rndF__Ff)
//	8006B420: 80452354 (lit_5729)
//	8006B434: 80452214 (lit_4354)
//	8006B438: 80267954 (cM_rndF__Ff)
//	8006B43C: 80452240 (lit_4365)
//	8006B45C: 8001F7B8 (fopKyM_create__FsiP4cXyzP4cXyzPFPv_i)
//	8006B464: 80452214 (lit_4354)
//	8006B468: 80267954 (cM_rndF__Ff)
//	8006B46C: 804523E4 (lit_6720)
//	8006B478: 8042CA54 (g_env_light)
//	8006B47C: 8042CA54 (g_env_light)
//	8006B4BC: 804525AC (lit_10732)
//	8006B4C4: 80452214 (lit_4354)
//	8006B4D0: 801A797C (dKy_efplight_set__FP15LIGHT_INFLUENCE)
//	8006B4D4: 80452330 (lit_5720)
//	8006B4D8: 80267954 (cM_rndF__Ff)
//	8006B4DC: 80452354 (lit_5729)
//	8006B4FC: 8001F7B8 (fopKyM_create__FsiP4cXyzP4cXyzPFPv_i)
//	8006B514: 80452214 (lit_4354)
//	8006B518: 80452244 (lit_4366)
//	8006B51C: 80452240 (lit_4365)
//	8006B520: 80452238 (lit_4363)
//	8006B524: 8026F97C (cLib_addCalc__FPfffff)
//	8006B548: 8042DD70 (g_mEnvSeMgr)
//	8006B54C: 8042DD70 (g_mEnvSeMgr)
//	8006B554: 802C7CF4 (startNearThunderSe__10Z2EnvSeMgrFSc)
//	8006B56C: 804521B8 (lit_3954)
//	8006B570: 80452220 (lit_4357)
//	8006B574: 8045221C (lit_4356)
//	8006B578: 80452238 (lit_4363)
//	8006B57C: 8026F97C (cLib_addCalc__FPfffff)
//	8006B584: 804521B8 (lit_3954)
//	8006B5A4: 801A7A00 (dKy_efplight_cut__FP15LIGHT_INFLUENCE)
//	8006B5B0: 8042CA54 (g_env_light)
//	8006B5B4: 8042CA54 (g_env_light)
//	8006B5CC: 8045223C (lit_4364)
//	8006B5DC: 80452330 (lit_5720)
//	8006B5E8: 80452214 (lit_4354)
//	8006B5EC: 80267954 (cM_rndF__Ff)
//	8006B5F0: 80452244 (lit_4366)
//	8006B5FC: 80452330 (lit_5720)
//	8006B600: 80267954 (cM_rndF__Ff)
//	8006B604: 80452354 (lit_5729)
//	8006B610: 80452214 (lit_4354)
//	8006B614: 80267954 (cM_rndF__Ff)
//	8006B618: 8045221C (lit_4356)
//	8006B638: 8001F7B8 (fopKyM_create__FsiP4cXyzP4cXyzPFPv_i)
//	8006B668: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8006B684: 804523A0 (lit_5748)
//	8006B6B4: 804525B4 (lit_10734)
//	8006B6BC: 804525B8 (lit_10735)
//	8006B6C4: 804525BC (lit_10736)
//	8006B6CC: 804525C0 (lit_10737)
//	8006B6EC: 80452374 (lit_5737)
//	8006B708: 804524B8 (lit_8213)
//	8006B724: 8042CA54 (g_env_light)
//	8006B728: 8042CA54 (g_env_light)
//	8006B74C: 8005B760 (dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8006B764: 804525C4 (lit_10738)
//	8006B788: 801A7AC8 (dKy_actor_addcol_amb_set__Fsssf)
//	8006B78C: 804525C4 (lit_10738)
//	8006B7B0: 801A7B68 (dKy_bg_addcol_amb_set__Fsssf)
//	8006B7B4: 804525C4 (lit_10738)
//	8006B7D4: 80452330 (lit_5720)
//	8006B7DC: 801A7C08 (dKy_bg1_addcol_amb_set__Fsssf)
//	8006B7EC: 80452354 (lit_5729)
//	8006B7F8: 801A7F20 (dKy_vrbox_addcol_sky0_set__Fsssf)
//	8006B808: 8045223C (lit_4364)
//	8006B814: 801A7FC0 (dKy_vrbox_addcol_kasumi_set__Fsssf)
//	8006B818: 80452214 (lit_4354)
//	8006B81C: 8042CA54 (g_env_light)
//	8006B820: 8042CA54 (g_env_light)
//	8006B83C: 80452330 (lit_5720)
//	8006B848: 801A7DE8 (dKy_addcol_fog_set__Fsssf)
//	8006B85C: 804525C8 (lit_10739)
//	8006B868: 801A7F20 (dKy_vrbox_addcol_sky0_set__Fsssf)
//	8006B878: 804523B8 (lit_6360)
//	8006B884: 801A7FC0 (dKy_vrbox_addcol_kasumi_set__Fsssf)
//	8006B888: 80452214 (lit_4354)
//	8006B88C: 8042CA54 (g_env_light)
//	8006B890: 8042CA54 (g_env_light)
//	8006B8AC: 80452410 (lit_6731)
//	8006B8B8: 801A7DE8 (dKy_addcol_fog_set__Fsssf)
//	8006B8C8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_thunder_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_thunder_move__Fv.s"
}
#pragma pop

/* 8006B8DC-8006B8E0 0004+00 s=0 e=1 z=0  None .text      dKyr_shstar_init__Fv */
void dKyr_shstar_init() {
    /* empty function */
}

/* 8006B8E0-8006B8E4 0004+00 s=0 e=1 z=0  None .text      dKyr_shstar_move__Fv */
void dKyr_shstar_move() {
    /* empty function */
}

/* 8006B8E4-8006B924 0040+00 s=0 e=1 z=0  None .text      dKyr_odour_init__Fv */
//	8006B8E4: 8042CA54 (g_env_light)
//	8006B8E8: 8042CA54 (g_env_light)
//	8006B8F8: 804521B8 (lit_3954)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_odour_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_odour_init__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804525CC-804525D0 0004+00 s=1 e=0 z=0  None .sdata2    @10872 */
SECTION_SDATA2 static f32 lit_10872 = 78.0f;

/* 804525D0-804525D4 0004+00 s=1 e=0 z=0  None .sdata2    @10873 */
SECTION_SDATA2 static f32 lit_10873 = 3.0f / 50.0f;

/* 8006B924-8006BE0C 04E8+00 s=0 e=1 z=0  None .text      dKyr_odour_move__Fv */
//	8006B934: 803621D8 (_savegpr_28)
//	8006B938: 8042CA54 (g_env_light)
//	8006B93C: 8042CA54 (g_env_light)
//	8006B944: 804521B8 (lit_3954)
//	8006B94C: 80452214 (lit_4354)
//	8006B958: 804061C0 (g_dComIfG_gameInfo)
//	8006B95C: 804061C0 (g_dComIfG_gameInfo)
//	8006B974: 803465B0 (PSMTXInverse)
//	8006B980: 804524B8 (lit_8213)
//	8006B984: 80267954 (cM_rndF__Ff)
//	8006B9A8: 8045227C (lit_4467)
//	8006B9AC: 80267954 (cM_rndF__Ff)
//	8006BA14: 80452214 (lit_4354)
//	8006BA18: 80267954 (cM_rndF__Ff)
//	8006BA1C: 80452220 (lit_4357)
//	8006BA28: 804521B8 (lit_3954)
//	8006BA4C: 8034739C (PSVECSquareDistance)
//	8006BA50: 804521B8 (lit_3954)
//	8006BA60: 804521E8 (lit_4109)
//	8006BA68: 804521F0 (lit_4110)
//	8006BAB0: 804521B0 (lit_3953)
//	8006BABC: 80450AE0 (__float_nan)
//	8006BAC0: 80450AE0 (__float_nan)
//	8006BB2C: 80450AE0 (__float_nan)
//	8006BB30: 80450AE0 (__float_nan)
//	8006BB58: 80439A20 (sincosTable___5JMath)
//	8006BB5C: 80439A20 (sincosTable___5JMath)
//	8006BB68: 804524AC (lit_7894)
//	8006BB6C: 80452244 (lit_4366)
//	8006BBA4: 80452250 (lit_4369)
//	8006BBA8: 80452248 (lit_4367)
//	8006BBD4: 80452200 (lit_4113)
//	8006BBF0: 804525CC (lit_10872)
//	8006BC08: 804521C8 (lit_3995)
//	8006BC40: 804521B8 (lit_3954)
//	8006BC48: 804524B8 (lit_8213)
//	8006BC58: 804524A4 (lit_7892)
//	8006BC9C: 804523A4 (lit_6355)
//	8006BCBC: 803DD470 (now__14mDoMtx_stack_c)
//	8006BCC0: 803DD470 (now__14mDoMtx_stack_c)
//	8006BCC4: 804521B8 (lit_3954)
//	8006BCD0: 803468E8 (PSMTXTrans)
//	8006BCD4: 803DD470 (now__14mDoMtx_stack_c)
//	8006BCD8: 803DD470 (now__14mDoMtx_stack_c)
//	8006BCE8: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8006BCEC: 803DD470 (now__14mDoMtx_stack_c)
//	8006BCF0: 803DD470 (now__14mDoMtx_stack_c)
//	8006BCFC: 80346D6C (PSMTXMultVec)
//	8006BD60: 80452214 (lit_4354)
//	8006BD64: 80452220 (lit_4357)
//	8006BD68: 80452240 (lit_4365)
//	8006BD6C: 80452238 (lit_4363)
//	8006BD70: 8026F97C (cLib_addCalc__FPfffff)
//	8006BD78: 80452214 (lit_4354)
//	8006BDAC: 804521B8 (lit_3954)
//	8006BDB0: 80452220 (lit_4357)
//	8006BDB4: 804525D0 (lit_10873)
//	8006BDB8: 80452238 (lit_4363)
//	8006BDBC: 8026F97C (cLib_addCalc__FPfffff)
//	8006BDC4: 80452220 (lit_4357)
//	8006BDD4: 804521B8 (lit_3954)
//	8006BDF8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_odour_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_odour_move__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F30-80450F34 0004+00 s=1 e=0 z=0  None .sbss      rot$10882 */
static u8 rot_10882[4];

/* 80450F34-80450F38 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80450F34[4];

/* 8006BE0C-8006C790 0984+00 s=0 e=1 z=0  None .text      dKyr_odour_draw__FPA4_fPPUc */
//	8006BE2C: 803621CC (_savegpr_25)
//	8006BE38: 8042CA54 (g_env_light)
//	8006BE3C: 8042CA54 (g_env_light)
//	8006BE44: 80450F34 (data_80450F34)
//	8006BE50: 804521B8 (lit_3954)
//	8006BE54: 80450F30 (rot_10882)
//	8006BE5C: 80450F34 (data_80450F34)
//	8006BE60: 80434AC8 (j3dSys)
//	8006BE64: 80434AC8 (j3dSys)
//	8006BE68: 8031073C (reinitGX__6J3DSysFv)
//	8006BE6C: 804061C0 (g_dComIfG_gameInfo)
//	8006BE70: 804061C0 (g_dComIfG_gameInfo)
//	8006BE88: 803465B0 (PSMTXInverse)
//	8006BE98: 804521B8 (lit_3954)
//	8006BEBC: 803605D0 (GXSetClipMode)
//	8006BEC0: 804061C0 (g_dComIfG_gameInfo)
//	8006BEC4: 804061C0 (g_dComIfG_gameInfo)
//	8006C010: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
//	8006C014: 804061C0 (g_dComIfG_gameInfo)
//	8006C018: 804061C0 (g_dComIfG_gameInfo)
//	8006C034: 80450BCC (mFrameBufferTimg__13mDoGph_gInf_c)
//	8006C03C: 8005B92C (dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID)
//	8006C04C: 80452578 (lit_10031)
//	8006C054: 8045223C (lit_4364)
//	8006C05C: 80346C18 (C_MTXLightPerspective)
//	8006C064: 80434AC8 (j3dSys)
//	8006C068: 80434AC8 (j3dSys)
//	8006C070: 803464E4 (PSMTXConcat)
//	8006C074: 80450F30 (rot_10882)
//	8006C078: 80452378 (lit_5738)
//	8006C080: 80450F30 (rot_10882)
//	8006C08C: 80452460 (lit_7211)
//	8006C094: 803466A8 (PSMTXRotRad)
//	8006C0A4: 803464E4 (PSMTXConcat)
//	8006C0B0: 8036024C (GXLoadPosMtxImm)
//	8006C0B8: 803602EC (GXSetCurrentMtx)
//	8006C0C8: 80360320 (GXLoadTexMtxImm)
//	8006C0E0: 8035B5C4 (GXSetVtxAttrFmt)
//	8006C0F8: 8035B5C4 (GXSetVtxAttrFmt)
//	8006C110: 8035B5C4 (GXSetVtxAttrFmt)
//	8006C114: 8035B58C (GXClearVtxDesc)
//	8006C120: 8035AEB8 (GXSetVtxDesc)
//	8006C12C: 8035AEB8 (GXSetVtxDesc)
//	8006C138: 8035AEB8 (GXSetVtxDesc)
//	8006C140: 8035DB30 (GXSetNumChans)
//	8006C160: 8035DB6C (GXSetChanCtrl)
//	8006C174: 8035F37C (GXSetTevColor)
//	8006C188: 8035F37C (GXSetTevColor)
//	8006C190: 8035BDFC (GXSetNumTexGens)
//	8006C1AC: 8035BB7C (GXSetTexCoordGen2)
//	8006C1C8: 8035BB7C (GXSetTexCoordGen2)
//	8006C1D0: 8035F890 (GXSetNumTevStages)
//	8006C1E4: 8035F6F4 (GXSetTevOrder)
//	8006C1FC: 8035F224 (GXSetTevColorIn)
//	8006C218: 8035F2AC (GXSetTevColorOp)
//	8006C230: 8035F268 (GXSetTevAlphaIn)
//	8006C24C: 8035F314 (GXSetTevAlphaOp)
//	8006C260: 8035F6F4 (GXSetTevOrder)
//	8006C278: 8035F224 (GXSetTevColorIn)
//	8006C294: 8035F2AC (GXSetTevColorOp)
//	8006C2AC: 8035F268 (GXSetTevAlphaIn)
//	8006C2C8: 8035F314 (GXSetTevAlphaOp)
//	8006C2DC: 8035FBF0 (GXSetBlendMode)
//	8006C2F4: 8035F624 (GXSetAlphaCompare)
//	8006C2FC: 8035FCD0 (GXSetZCompLoc)
//	8006C30C: 8035FC9C (GXSetZMode)
//	8006C314: 8035C984 (GXSetCullMode)
//	8006C31C: 803605D0 (GXSetClipMode)
//	8006C324: 8035F0D4 (GXSetNumIndStages)
//	8006C368: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8006C38C: 8034739C (PSVECSquareDistance)
//	8006C390: 804521B8 (lit_3954)
//	8006C3A0: 804521E8 (lit_4109)
//	8006C3A8: 804521F0 (lit_4110)
//	8006C3F0: 804521B0 (lit_3953)
//	8006C3FC: 80450AE0 (__float_nan)
//	8006C400: 80450AE0 (__float_nan)
//	8006C46C: 80450AE0 (__float_nan)
//	8006C470: 80450AE0 (__float_nan)
//	8006C474: 804521F8 (lit_4111)
//	8006C480: 804524B8 (lit_8213)
//	8006C48C: 804521B8 (lit_3954)
//	8006C49C: 804521B8 (lit_3954)
//	8006C4B0: 80452214 (lit_4354)
//	8006C4C4: 80452214 (lit_4354)
//	8006C4F4: 804523E8 (lit_6721)
//	8006C504: 8045224C (lit_4368)
//	8006C52C: 8035F37C (GXSetTevColor)
//	8006C554: 804521B8 (lit_3954)
//	8006C568: 80346D6C (PSMTXMultVec)
//	8006C5A4: 804521B8 (lit_3954)
//	8006C5B8: 80346D6C (PSMTXMultVec)
//	8006C5F4: 804521B8 (lit_3954)
//	8006C608: 80346D6C (PSMTXMultVec)
//	8006C644: 804521B8 (lit_3954)
//	8006C658: 80346D6C (PSMTXMultVec)
//	8006C698: 8035C764 (GXBegin)
//	8006C75C: 803605D0 (GXSetClipMode)
//	8006C764: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	8006C77C: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_odour_draw(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_odour_draw__FPA4_fPPUc.s"
}
#pragma pop

/* 8006C790-8006C85C 00CC+00 s=0 e=1 z=0  None .text      dKyr_mud_init__Fv */
//	8006C7A0: 8042CA54 (g_env_light)
//	8006C7A4: 8042CA54 (g_env_light)
//	8006C7A8: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006C7AC: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006C7B8: 804061C0 (g_dComIfG_gameInfo)
//	8006C7BC: 804061C0 (g_dComIfG_gameInfo)
//	8006C7CC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8006C7D0: 8042CA54 (g_env_light)
//	8006C7D4: 8042CA54 (g_env_light)
//	8006C810: 804061C0 (g_dComIfG_gameInfo)
//	8006C814: 804061C0 (g_dComIfG_gameInfo)
//	8006C820: 80034934 (isDungeonItem__12dSv_memBit_cCFi)
//	8006C82C: 80452214 (lit_4354)
//	8006C83C: 804521B8 (lit_3954)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_mud_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_mud_init__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804525D4-804525D8 0004+00 s=1 e=0 z=0  None .sdata2    @11302 */
SECTION_SDATA2 static f32 lit_11302 = 770.0f;

/* 8006C85C-8006D01C 07C0+00 s=0 e=1 z=0  None .text      dKyr_mud_move__Fv */
//	8006C88C: 803621CC (_savegpr_25)
//	8006C890: 8042CA54 (g_env_light)
//	8006C894: 8042CA54 (g_env_light)
//	8006C89C: 804061C0 (g_dComIfG_gameInfo)
//	8006C8A0: 804061C0 (g_dComIfG_gameInfo)
//	8006C8AC: 8005AB00 (dKyw_get_wind_vecpow__Fv)
//	8006C8CC: 8007757C (__ct__11dBgS_GndChkFv)
//	8006C8D0: 8042CA54 (g_env_light)
//	8006C8D4: 8042CA54 (g_env_light)
//	8006C8EC: 804521B8 (lit_3954)
//	8006C910: 804061C0 (g_dComIfG_gameInfo)
//	8006C914: 804061C0 (g_dComIfG_gameInfo)
//	8006C91C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006C920: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006C928: 80368994 (strcmp)
//	8006C934: 8042CA54 (g_env_light)
//	8006C938: 8042CA54 (g_env_light)
//	8006C94C: 8002F9F0 (dComIfGs_PolyDamageOff_Set__FSc)
//	8006C954: 804521B8 (lit_3954)
//	8006C958: 80452220 (lit_4357)
//	8006C95C: 80452238 (lit_4363)
//	8006C960: 804523E8 (lit_6721)
//	8006C964: 8026F97C (cLib_addCalc__FPfffff)
//	8006C970: 80452214 (lit_4354)
//	8006C974: 80452240 (lit_4365)
//	8006C978: 8045221C (lit_4356)
//	8006C97C: 804521C4 (lit_3993)
//	8006C980: 8026F97C (cLib_addCalc__FPfffff)
//	8006C98C: 804521B8 (lit_3954)
//	8006C990: 80452240 (lit_4365)
//	8006C994: 8045221C (lit_4356)
//	8006C998: 804521C4 (lit_3993)
//	8006C99C: 8026F97C (cLib_addCalc__FPfffff)
//	8006C9B4: 800775F0 (__dt__11dBgS_GndChkFv)
//	8006C9C4: 804522A4 (lit_5104)
//	8006C9C8: 804521B8 (lit_3954)
//	8006C9CC: 8005B830 (dKy_set_eyevect_calc2__FP12camera_classP3Vecff)
//	8006C9D0: 8005AAF0 (dKyw_get_wind_pow__Fv)
//	8006C9DC: 804521B8 (lit_3954)
//	8006C9E0: 80452214 (lit_4354)
//	8006C9E4: 804521C8 (lit_3995)
//	8006C9EC: 8045237C (lit_5739)
//	8006CA1C: 8045223C (lit_4364)
//	8006CA20: 80267954 (cM_rndF__Ff)
//	8006CA24: 8045223C (lit_4364)
//	8006CA2C: 80452348 (lit_5726)
//	8006CA40: 80452338 (lit_5722)
//	8006CA44: 8026798C (cM_rndFX__Ff)
//	8006CA60: 804521B8 (lit_3954)
//	8006CA70: 80452294 (lit_5100)
//	8006CA74: 8026798C (cM_rndFX__Ff)
//	8006CA7C: 804521B8 (lit_3954)
//	8006CA84: 80452294 (lit_5100)
//	8006CA88: 8026798C (cM_rndFX__Ff)
//	8006CA90: 804521B8 (lit_3954)
//	8006CA9C: 804522A8 (lit_5105)
//	8006CAA0: 80267954 (cM_rndF__Ff)
//	8006CAA8: 804522A8 (lit_5105)
//	8006CAAC: 80267954 (cM_rndF__Ff)
//	8006CAB4: 804522A8 (lit_5105)
//	8006CAB8: 80267954 (cM_rndF__Ff)
//	8006CADC: 802675E4 (cM_rad2s__Ff)
//	8006CAE4: 80439A20 (sincosTable___5JMath)
//	8006CAE8: 80439A20 (sincosTable___5JMath)
//	8006CB08: 802675E4 (cM_rad2s__Ff)
//	8006CB10: 80439A20 (sincosTable___5JMath)
//	8006CB14: 80439A20 (sincosTable___5JMath)
//	8006CB34: 80452364 (lit_5733)
//	8006CB44: 80452368 (lit_5734)
//	8006CB54: 804521C4 (lit_3993)
//	8006CB70: 804521B8 (lit_3954)
//	8006CBAC: 8034739C (PSVECSquareDistance)
//	8006CBB0: 804521B8 (lit_3954)
//	8006CBC0: 804521E8 (lit_4109)
//	8006CBC8: 804521F0 (lit_4110)
//	8006CC10: 804521B0 (lit_3953)
//	8006CC1C: 80450AE0 (__float_nan)
//	8006CC20: 80450AE0 (__float_nan)
//	8006CC8C: 80450AE0 (__float_nan)
//	8006CC90: 80450AE0 (__float_nan)
//	8006CC94: 80452294 (lit_5100)
//	8006CCA8: 804521C4 (lit_3993)
//	8006CCD4: 8034739C (PSVECSquareDistance)
//	8006CCD8: 804521B8 (lit_3954)
//	8006CCE8: 804521E8 (lit_4109)
//	8006CCF0: 804521F0 (lit_4110)
//	8006CD38: 804521B0 (lit_3953)
//	8006CD44: 80450AE0 (__float_nan)
//	8006CD48: 80450AE0 (__float_nan)
//	8006CDB4: 80450AE0 (__float_nan)
//	8006CDB8: 80450AE0 (__float_nan)
//	8006CDBC: 804525D4 (lit_11302)
//	8006CDC8: 80452294 (lit_5100)
//	8006CDCC: 8026798C (cM_rndFX__Ff)
//	8006CDD4: 804521B8 (lit_3954)
//	8006CDDC: 80452294 (lit_5100)
//	8006CDE0: 8026798C (cM_rndFX__Ff)
//	8006CDF8: 8005B708 (get_vectle_calc__FP4cXyzP4cXyzP4cXyz)
//	8006CDFC: 80452240 (lit_4365)
//	8006CE00: 8026798C (cM_rndFX__Ff)
//	8006CE10: 804521B8 (lit_3954)
//	8006CE18: 80452240 (lit_4365)
//	8006CE1C: 8026798C (cM_rndFX__Ff)
//	8006CE30: 80452294 (lit_5100)
//	8006CE3C: 804521B8 (lit_3954)
//	8006CE90: 8045234C (lit_5727)
//	8006CE94: 8045221C (lit_4356)
//	8006CE98: 804523E8 (lit_6721)
//	8006CE9C: 8026F97C (cLib_addCalc__FPfffff)
//	8006CED0: 8034739C (PSVECSquareDistance)
//	8006CEE0: 804521E8 (lit_4109)
//	8006CEE8: 804521F0 (lit_4110)
//	8006CF30: 804521B0 (lit_3953)
//	8006CF3C: 80450AE0 (__float_nan)
//	8006CF40: 80450AE0 (__float_nan)
//	8006CFAC: 80450AE0 (__float_nan)
//	8006CFB0: 80450AE0 (__float_nan)
//	8006CFE0: 800775F0 (__dt__11dBgS_GndChkFv)
//	8006D008: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_mud_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_mud_move__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F38-80450F3C 0004+00 s=1 e=0 z=0  None .sbss      rot$11307 */
static f32 rot_11307;

/* 80450F3C-80450F40 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80450F3C[4];

/* 804525D8-804525DC 0004+00 s=1 e=0 z=0  None .sdata2    @11508 */
SECTION_SDATA2 static f32 lit_11508 = 13.0f / 10.0f;

/* 804525DC-804525E0 0004+00 s=1 e=0 z=0  None .sdata2    @11509 */
SECTION_SDATA2 static f32 lit_11509 = 12.0f;

/* 8006D01C-8006D914 08F8+00 s=0 e=1 z=0  None .text      dKyr_mud_draw__FPA4_fPPUc */
//	8006D06C: 803621CC (_savegpr_25)
//	8006D078: 8042CA54 (g_env_light)
//	8006D07C: 8042CA54 (g_env_light)
//	8006D088: 80450F3C (data_80450F3C)
//	8006D094: 804521B8 (lit_3954)
//	8006D098: 80450F38 (rot_11307)
//	8006D0A0: 80450F3C (data_80450F3C)
//	8006D0A4: 8042CA54 (g_env_light)
//	8006D0A8: 8042CA54 (g_env_light)
//	8006D0C0: 80434AC8 (j3dSys)
//	8006D0C4: 80434AC8 (j3dSys)
//	8006D0C8: 8031073C (reinitGX__6J3DSysFv)
//	8006D0CC: 8042CA54 (g_env_light)
//	8006D0D0: 8042CA54 (g_env_light)
//	8006D0E4: 804525D8 (lit_11508)
//	8006D0E8: 8042CA54 (g_env_light)
//	8006D0EC: 8042CA54 (g_env_light)
//	8006D0F4: 804521C8 (lit_3995)
//	8006D1B8: 804521C8 (lit_3995)
//	8006D1E4: 8045224C (lit_4368)
//	8006D1F0: 8045234C (lit_5727)
//	8006D1F4: 80452360 (lit_5732)
//	8006D1F8: 8042CA54 (g_env_light)
//	8006D1FC: 8042CA54 (g_env_light)
//	8006D234: 804523E8 (lit_6721)
//	8006D240: 80452214 (lit_4354)
//	8006D270: 80452270 (lit_4379)
//	8006D284: 8045223C (lit_4364)
//	8006D288: 804521C8 (lit_3995)
//	8006D310: 804061C0 (g_dComIfG_gameInfo)
//	8006D314: 804061C0 (g_dComIfG_gameInfo)
//	8006D31C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006D320: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006D328: 80368994 (strcmp)
//	8006D334: 80452214 (lit_4354)
//	8006D378: 8045228C (lit_5098)
//	8006D37C: 80452270 (lit_4379)
//	8006D3B4: 804523A4 (lit_6355)
//	8006D3E8: 804523FC (lit_6726)
//	8006D4E4: 804061C0 (g_dComIfG_gameInfo)
//	8006D4E8: 804061C0 (g_dComIfG_gameInfo)
//	8006D500: 803465B0 (PSMTXInverse)
//	8006D50C: 8042CA54 (g_env_light)
//	8006D510: 8042CA54 (g_env_light)
//	8006D520: 80452458 (lit_7209)
//	8006D524: 804525DC (lit_11509)
//	8006D528: 8045234C (lit_5727)
//	8006D52C: 80452350 (lit_5728)
//	8006D530: 80439A20 (sincosTable___5JMath)
//	8006D534: 80439A20 (sincosTable___5JMath)
//	8006D538: 804521B8 (lit_3954)
//	8006D544: 80452460 (lit_7211)
//	8006D550: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	8006D558: 8035DB30 (GXSetNumChans)
//	8006D56C: 8035F37C (GXSetTevColor)
//	8006D57C: 8035F37C (GXSetTevColor)
//	8006D584: 8035BDFC (GXSetNumTexGens)
//	8006D5A0: 8035BB7C (GXSetTexCoordGen2)
//	8006D5A8: 8035F890 (GXSetNumTevStages)
//	8006D5BC: 8035F6F4 (GXSetTevOrder)
//	8006D5D4: 8035F224 (GXSetTevColorIn)
//	8006D5F0: 8035F2AC (GXSetTevColorOp)
//	8006D608: 8035F268 (GXSetTevAlphaIn)
//	8006D624: 8035F314 (GXSetTevAlphaOp)
//	8006D638: 8035FBF0 (GXSetBlendMode)
//	8006D650: 8035F624 (GXSetAlphaCompare)
//	8006D66C: 8035FC9C (GXSetZMode)
//	8006D680: 8035FC9C (GXSetZMode)
//	8006D688: 803605D0 (GXSetClipMode)
//	8006D690: 8035F0D4 (GXSetNumIndStages)
//	8006D694: 80062ADC (dKr_cullVtx_Set__Fv)
//	8006D6A0: 80450F38 (rot_11307)
//	8006D6A8: 803466A8 (PSMTXRotRad)
//	8006D6B8: 803464E4 (PSMTXConcat)
//	8006D6C4: 8036024C (GXLoadPosMtxImm)
//	8006D6CC: 803602EC (GXSetCurrentMtx)
//	8006D730: 8035E414 (GXLoadTexObj)
//	8006D744: 8035F37C (GXSetTevColor)
//	8006D764: 802675E4 (cM_rad2s__Ff)
//	8006D784: 802675E4 (cM_rad2s__Ff)
//	8006D80C: 8035C764 (GXBegin)
//	8006D8B0: 803605D0 (GXSetClipMode)
//	8006D8B8: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	8006D900: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_mud_draw(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_mud_draw__FPA4_fPPUc.s"
}
#pragma pop

/* 8006D914-8006DA04 00F0+00 s=0 e=1 z=1  None .text      dKyr_evil_init__Fv */
//	8006D928: 8042CA54 (g_env_light)
//	8006D92C: 8042CA54 (g_env_light)
//	8006D93C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006D940: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006D94C: 804061C0 (g_dComIfG_gameInfo)
//	8006D950: 804061C0 (g_dComIfG_gameInfo)
//	8006D964: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8006D970: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006D974: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006D97C: 8002F434 (dComIfG_getStageRes__FPCc)
//	8006D998: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006D99C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006D9B0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_evil_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_evil_init__Fv.s"
}
#pragma pop

/* 8006DA04-8006DA7C 0078+00 s=0 e=1 z=0  None .text      dKyr_evil_move__Fv */
//	8006DA14: 8042CA54 (g_env_light)
//	8006DA18: 8042CA54 (g_env_light)
//	8006DA24: 8005AB00 (dKyw_get_wind_vecpow__Fv)
//	8006DA44: 8007757C (__ct__11dBgS_GndChkFv)
//	8006DA64: 800775F0 (__dt__11dBgS_GndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_evil_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_evil_move__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F40-80450F44 0004+00 s=1 e=0 z=0  None .sbss      rot$11586 */
static u8 rot_11586[4];

/* 80450F44-80450F48 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80450F44[4];

/* 804525E0-804525E4 0004+00 s=1 e=0 z=0  None .sdata2    @11882 */
SECTION_SDATA2 static f32 lit_11882 = -5000.0f;

/* 804525E4-804525E8 0004+00 s=2 e=0 z=0  None .sdata2    @11883 */
SECTION_SDATA2 static f32 lit_11883 = 9000.0f;

/* 804525E8-804525EC 0004+00 s=2 e=0 z=0  None .sdata2    @11884 */
SECTION_SDATA2 static f32 lit_11884 = 688.0f;

/* 804525EC-804525F0 0004+00 s=2 e=0 z=0  None .sdata2    @11885 */
SECTION_SDATA2 static f32 lit_11885 = 538.0f;

/* 804525F0-804525F4 0004+00 s=1 e=0 z=0  None .sdata2    @11886 */
SECTION_SDATA2 static f32 lit_11886 = 159.0f;

/* 804525F4-804525F8 0004+00 s=1 e=0 z=0  None .sdata2    @11887 */
SECTION_SDATA2 static f32 lit_11887 = 135.0f;

/* 8006DA7C-8006E448 09CC+00 s=1 e=0 z=0  None .text      dKyr_evil_draw2__FPA4_fPPUc */
//	8006DAF4: 803621C4 (_savegpr_23)
//	8006DB00: 8042CA54 (g_env_light)
//	8006DB04: 8042CA54 (g_env_light)
//	8006DB0C: 80450F44 (data_80450F44)
//	8006DB18: 804521B8 (lit_3954)
//	8006DB1C: 80450F40 (rot_11586)
//	8006DB24: 80450F44 (data_80450F44)
//	8006DB28: 80430CD8 (g_Counter)
//	8006DB2C: 80430CD8 (g_Counter)
//	8006DB38: 80439A20 (sincosTable___5JMath)
//	8006DB3C: 80439A20 (sincosTable___5JMath)
//	8006DB54: 80434AC8 (j3dSys)
//	8006DB58: 80434AC8 (j3dSys)
//	8006DB5C: 8031073C (reinitGX__6J3DSysFv)
//	8006DB60: 804061C0 (g_dComIfG_gameInfo)
//	8006DB64: 804061C0 (g_dComIfG_gameInfo)
//	8006DB7C: 803465B0 (PSMTXInverse)
//	8006DB88: 8045224C (lit_4368)
//	8006DBA0: 804523FC (lit_6726)
//	8006DBE8: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	8006DBEC: 80450F40 (rot_11586)
//	8006DBF0: 80452424 (lit_6736)
//	8006DBF8: 80450F40 (rot_11586)
//	8006DC04: 80452460 (lit_7211)
//	8006DC0C: 803466A8 (PSMTXRotRad)
//	8006DC1C: 803464E4 (PSMTXConcat)
//	8006DC28: 8036024C (GXLoadPosMtxImm)
//	8006DC30: 803602EC (GXSetCurrentMtx)
//	8006DC48: 8035B5C4 (GXSetVtxAttrFmt)
//	8006DC60: 8035B5C4 (GXSetVtxAttrFmt)
//	8006DC64: 8035B58C (GXClearVtxDesc)
//	8006DC70: 8035AEB8 (GXSetVtxDesc)
//	8006DC7C: 8035AEB8 (GXSetVtxDesc)
//	8006DC84: 8035DB30 (GXSetNumChans)
//	8006DC98: 8035F37C (GXSetTevColor)
//	8006DCAC: 8035F37C (GXSetTevColor)
//	8006DCB4: 8035BDFC (GXSetNumTexGens)
//	8006DCD0: 8035BB7C (GXSetTexCoordGen2)
//	8006DCD8: 8035F890 (GXSetNumTevStages)
//	8006DCEC: 8035F6F4 (GXSetTevOrder)
//	8006DD04: 8035F224 (GXSetTevColorIn)
//	8006DD20: 8035F2AC (GXSetTevColorOp)
//	8006DD38: 8035F268 (GXSetTevAlphaIn)
//	8006DD54: 8035F314 (GXSetTevAlphaOp)
//	8006DD68: 8035FBF0 (GXSetBlendMode)
//	8006DD80: 8035F624 (GXSetAlphaCompare)
//	8006DD88: 8035FCD0 (GXSetZCompLoc)
//	8006DD98: 8035FC9C (GXSetZMode)
//	8006DDA0: 8035C984 (GXSetCullMode)
//	8006DDA8: 803605D0 (GXSetClipMode)
//	8006DDB0: 8035F0D4 (GXSetNumIndStages)
//	8006DDBC: 804061C0 (g_dComIfG_gameInfo)
//	8006DDC0: 804061C0 (g_dComIfG_gameInfo)
//	8006DDC8: 804522DC (lit_5118)
//	8006DDD0: 8042CA54 (g_env_light)
//	8006DDD4: 8042CA54 (g_env_light)
//	8006DE08: 80439A20 (sincosTable___5JMath)
//	8006DE0C: 80439A20 (sincosTable___5JMath)
//	8006DE1C: 80452240 (lit_4365)
//	8006DE20: 80452248 (lit_4367)
//	8006DE38: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8006DE58: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006DE5C: 8037A578 (d_kankyo_d_kankyo_rain__stringBase0)
//	8006DE64: 80368994 (strcmp)
//	8006DE70: 80450D64 (struct_80450D64)
//	8006DE88: 804525E0 (lit_11882)
//	8006DE98: 804525E4 (lit_11883)
//	8006DEAC: 804522B8 (lit_5109)
//	8006DEC0: 80015310 (mDoLib_project__FP3VecP3Vec)
//	8006DED0: 804525E8 (lit_11884)
//	8006DEE8: 804525EC (lit_11885)
//	8006DEFC: 8034739C (PSVECSquareDistance)
//	8006DF00: 804521B8 (lit_3954)
//	8006DF10: 804521E8 (lit_4109)
//	8006DF18: 804521F0 (lit_4110)
//	8006DF60: 804521B0 (lit_3953)
//	8006DF6C: 80450AE0 (__float_nan)
//	8006DF70: 80450AE0 (__float_nan)
//	8006DFDC: 80450AE0 (__float_nan)
//	8006DFE0: 80450AE0 (__float_nan)
//	8006DFE4: 804521F8 (lit_4111)
//	8006DFF0: 804524B8 (lit_8213)
//	8006DFFC: 804521B8 (lit_3954)
//	8006E008: 804523A4 (lit_6355)
//	8006E010: 804521B8 (lit_3954)
//	8006E024: 80452214 (lit_4354)
//	8006E038: 80452214 (lit_4354)
//	8006E044: 8045223C (lit_4364)
//	8006E054: 80452240 (lit_4365)
//	8006E058: 80452330 (lit_5720)
//	8006E068: 80450D64 (struct_80450D64)
//	8006E074: 804523A4 (lit_6355)
//	8006E078: 804523E8 (lit_6721)
//	8006E088: 8045224C (lit_4368)
//	8006E0A0: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	8006E0AC: 804522DC (lit_5118)
//	8006E0F0: 8045224C (lit_4368)
//	8006E108: 804523FC (lit_6726)
//	8006E124: 8045228C (lit_5098)
//	8006E14C: 804525F0 (lit_11886)
//	8006E164: 804525F4 (lit_11887)
//	8006E194: 8035F37C (GXSetTevColor)
//	8006E1A8: 8035F37C (GXSetTevColor)
//	8006E1D0: 804521B8 (lit_3954)
//	8006E1E4: 80346D6C (PSMTXMultVec)
//	8006E220: 804521B8 (lit_3954)
//	8006E234: 80346D6C (PSMTXMultVec)
//	8006E270: 804521B8 (lit_3954)
//	8006E284: 80346D6C (PSMTXMultVec)
//	8006E2C0: 804521B8 (lit_3954)
//	8006E2D4: 80346D6C (PSMTXMultVec)
//	8006E348: 8035C764 (GXBegin)
//	8006E3BC: 803605D0 (GXSetClipMode)
//	8006E3C4: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	8006E434: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dKyr_evil_draw2(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_evil_draw2__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 804525F8-804525FC 0004+00 s=1 e=0 z=0  None .sdata2    @11953 */
SECTION_SDATA2 static f32 lit_11953 = 10000000.0f;

/* 8006E448-8006E6B0 0268+00 s=1 e=0 z=0  None .text      dKyr_near_bosslight_check__F4cXyz */
//	8006E460: 803621D4 (_savegpr_27)
//	8006E468: 804525F8 (lit_11953)
//	8006E46C: 8042CA54 (g_env_light)
//	8006E470: 8042CA54 (g_env_light)
//	8006E498: 8034739C (PSVECSquareDistance)
//	8006E49C: 804521B8 (lit_3954)
//	8006E4AC: 804521E8 (lit_4109)
//	8006E4B4: 804521F0 (lit_4110)
//	8006E4FC: 804521B0 (lit_3953)
//	8006E508: 80450AE0 (__float_nan)
//	8006E50C: 80450AE0 (__float_nan)
//	8006E578: 80450AE0 (__float_nan)
//	8006E57C: 80450AE0 (__float_nan)
//	8006E590: 8034739C (PSVECSquareDistance)
//	8006E594: 804521B8 (lit_3954)
//	8006E5A4: 804521E8 (lit_4109)
//	8006E5AC: 804521F0 (lit_4110)
//	8006E5F4: 804521B0 (lit_3953)
//	8006E600: 80450AE0 (__float_nan)
//	8006E604: 80450AE0 (__float_nan)
//	8006E670: 80450AE0 (__float_nan)
//	8006E674: 80450AE0 (__float_nan)
//	8006E69C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dKyr_near_bosslight_check(cXyz param_0) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_near_bosslight_check__F4cXyz.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F48-80450F4C 0004+00 s=1 e=0 z=0  None .sbss      rot$11958 */
static u8 rot_11958[4];

/* 80450F4C-80450F50 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 data_80450F4C[4];

/* 804525FC-80452600 0004+00 s=1 e=0 z=0  None .sdata2    @12252 */
SECTION_SDATA2 static f32 lit_12252 = 69.0f;

/* 80452600-80452604 0004+00 s=1 e=0 z=0  None .sdata2    @12253 */
SECTION_SDATA2 static f32 lit_12253 = 137.0f;

/* 80452604-80452608 0004+00 s=1 e=0 z=0  None .sdata2    @12254 */
SECTION_SDATA2 static f32 lit_12254 = 750.0f;

/* 80452608-8045260C 0004+00 s=1 e=0 z=0  None .sdata2    @12255 */
SECTION_SDATA2 static f32 lit_12255 = 9.0f / 5.0f;

/* 8045260C-80452610 0004+00 s=1 e=0 z=0  None .sdata2    @12256 */
SECTION_SDATA2 static f32 lit_12256 = 165.0f;

/* 80452610-80452614 0004+00 s=1 e=0 z=0  None .sdata2    @12257 */
SECTION_SDATA2 static f32 lit_12257 = 155.0f;

/* 80452614-80452618 0004+00 s=1 e=0 z=0  None .sdata2    @12258 */
SECTION_SDATA2 static f32 lit_12258 = -3000.0f;

/* 80452618-8045261C 0004+00 s=1 e=0 z=0  None .sdata2    @12259 */
SECTION_SDATA2 static f32 lit_12259 = 127.0f;

/* 8045261C-80452620 0004+00 s=1 e=0 z=0  None .sdata2    @12260 */
SECTION_SDATA2 static f32 lit_12260 = 115.0f;

/* 8006E6B0-8006F160 0AB0+00 s=0 e=1 z=0  None .text      dKyr_evil_draw__FPA4_fPPUc */
//	8006E6E0: 803621C0 (_savegpr_22)
//	8006E6EC: 8042CA54 (g_env_light)
//	8006E6F0: 8042CA54 (g_env_light)
//	8006E6F8: 80450F4C (data_80450F4C)
//	8006E704: 804521B8 (lit_3954)
//	8006E708: 80450F48 (rot_11958)
//	8006E710: 80450F4C (data_80450F4C)
//	8006E714: 80430CD8 (g_Counter)
//	8006E718: 80430CD8 (g_Counter)
//	8006E724: 80439A20 (sincosTable___5JMath)
//	8006E728: 80439A20 (sincosTable___5JMath)
//	8006E740: 80434AC8 (j3dSys)
//	8006E744: 80434AC8 (j3dSys)
//	8006E748: 8031073C (reinitGX__6J3DSysFv)
//	8006E74C: 804061C0 (g_dComIfG_gameInfo)
//	8006E750: 804061C0 (g_dComIfG_gameInfo)
//	8006E768: 803465B0 (PSMTXInverse)
//	8006E774: 804525FC (lit_12252)
//	8006E78C: 80452458 (lit_7209)
//	8006E7A4: 80452600 (lit_12253)
//	8006E7E4: 8005BA24 (dKyr_set_btitex__FP9_GXTexObjP7ResTIMG)
//	8006E7E8: 80450F48 (rot_11958)
//	8006E7EC: 80452214 (lit_4354)
//	8006E7F4: 80450F48 (rot_11958)
//	8006E800: 80452460 (lit_7211)
//	8006E808: 803466A8 (PSMTXRotRad)
//	8006E818: 803464E4 (PSMTXConcat)
//	8006E824: 8036024C (GXLoadPosMtxImm)
//	8006E82C: 803602EC (GXSetCurrentMtx)
//	8006E844: 8035B5C4 (GXSetVtxAttrFmt)
//	8006E85C: 8035B5C4 (GXSetVtxAttrFmt)
//	8006E860: 8035B58C (GXClearVtxDesc)
//	8006E86C: 8035AEB8 (GXSetVtxDesc)
//	8006E878: 8035AEB8 (GXSetVtxDesc)
//	8006E880: 8035DB30 (GXSetNumChans)
//	8006E894: 8035F37C (GXSetTevColor)
//	8006E8A8: 8035F37C (GXSetTevColor)
//	8006E8B0: 8035BDFC (GXSetNumTexGens)
//	8006E8CC: 8035BB7C (GXSetTexCoordGen2)
//	8006E8D4: 8035F890 (GXSetNumTevStages)
//	8006E8E8: 8035F6F4 (GXSetTevOrder)
//	8006E900: 8035F224 (GXSetTevColorIn)
//	8006E91C: 8035F2AC (GXSetTevColorOp)
//	8006E934: 8035F268 (GXSetTevAlphaIn)
//	8006E950: 8035F314 (GXSetTevAlphaOp)
//	8006E964: 8035FBF0 (GXSetBlendMode)
//	8006E97C: 8035F624 (GXSetAlphaCompare)
//	8006E984: 8035FCD0 (GXSetZCompLoc)
//	8006E994: 8035FC9C (GXSetZMode)
//	8006E99C: 8035C984 (GXSetCullMode)
//	8006E9A4: 803605D0 (GXSetClipMode)
//	8006E9AC: 8035F0D4 (GXSetNumIndStages)
//	8006E9B0: 804061C0 (g_dComIfG_gameInfo)
//	8006E9B4: 804061C0 (g_dComIfG_gameInfo)
//	8006E9BC: 80085690 (Prepare__12dCcMassS_MngFv)
//	8006E9C8: 804061C0 (g_dComIfG_gameInfo)
//	8006E9CC: 804061C0 (g_dComIfG_gameInfo)
//	8006E9D0: 804522DC (lit_5118)
//	8006E9D8: 8042CA54 (g_env_light)
//	8006E9DC: 8042CA54 (g_env_light)
//	8006EA0C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8006EA28: 804525E4 (lit_11883)
//	8006EA3C: 804522B8 (lit_5109)
//	8006EA50: 80015310 (mDoLib_project__FP3VecP3Vec)
//	8006EA60: 804525E8 (lit_11884)
//	8006EA78: 804525EC (lit_11885)
//	8006EA8C: 8034739C (PSVECSquareDistance)
//	8006EA90: 804521B8 (lit_3954)
//	8006EAA0: 804521E8 (lit_4109)
//	8006EAA8: 804521F0 (lit_4110)
//	8006EAF0: 804521B0 (lit_3953)
//	8006EAFC: 80450AE0 (__float_nan)
//	8006EB00: 80450AE0 (__float_nan)
//	8006EB6C: 80450AE0 (__float_nan)
//	8006EB70: 80450AE0 (__float_nan)
//	8006EB74: 804522A4 (lit_5104)
//	8006EB80: 8045227C (lit_4467)
//	8006EB8C: 804521B8 (lit_3954)
//	8006EB98: 80452604 (lit_12254)
//	8006EBA0: 804521B8 (lit_3954)
//	8006EBB4: 80452214 (lit_4354)
//	8006EBC4: 80452214 (lit_4354)
//	8006EBD8: 80452214 (lit_4354)
//	8006EBE8: 80452608 (lit_12255)
//	8006EBF0: 804523E8 (lit_6721)
//	8006EC00: 8045224C (lit_4368)
//	8006EC34: 8006E448 (dKyr_near_bosslight_check__F4cXyz)
//	8006EC38: 80452444 (lit_6952)
//	8006EC44: 80430CD8 (g_Counter)
//	8006EC48: 80430CD8 (g_Counter)
//	8006EC5C: 80439A20 (sincosTable___5JMath)
//	8006EC60: 80439A20 (sincosTable___5JMath)
//	8006EC70: 80452220 (lit_4357)
//	8006EC74: 80452598 (lit_10600)
//	8006EC78: 80452214 (lit_4354)
//	8006EC94: 804521B8 (lit_3954)
//	8006EC9C: 8045223C (lit_4364)
//	8006ECA0: 80452220 (lit_4357)
//	8006ECA4: 804521C4 (lit_3993)
//	8006ECA8: 8026F97C (cLib_addCalc__FPfffff)
//	8006ECD0: 804523FC (lit_6726)
//	8006ECEC: 804524A4 (lit_7892)
//	8006ED04: 8045260C (lit_12256)
//	8006ED20: 804522DC (lit_5118)
//	8006ED3C: 80452374 (lit_5737)
//	8006ED54: 80452610 (lit_12257)
//	8006ED6C: 80450D64 (struct_80450D64)
//	8006ED7C: 804521B8 (lit_3954)
//	8006ED88: 80452214 (lit_4354)
//	8006ED8C: 80452614 (lit_12258)
//	8006EDB4: 8045224C (lit_4368)
//	8006EDD0: 804521C8 (lit_3995)
//	8006EDEC: 80452290 (lit_5099)
//	8006EDF4: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	8006EE08: 80452618 (lit_12259)
//	8006EE4C: 804521B8 (lit_3954)
//	8006EE5C: 80452214 (lit_4354)
//	8006EE70: 8045227C (lit_4467)
//	8006EE78: 80452290 (lit_5099)
//	8006EE98: 804523A4 (lit_6355)
//	8006EEB0: 8045261C (lit_12260)
//	8006EEDC: 8035F37C (GXSetTevColor)
//	8006EEF0: 8035F37C (GXSetTevColor)
//	8006EF18: 804521B8 (lit_3954)
//	8006EF2C: 80346D6C (PSMTXMultVec)
//	8006EF68: 804521B8 (lit_3954)
//	8006EF7C: 80346D6C (PSMTXMultVec)
//	8006EFB8: 804521B8 (lit_3954)
//	8006EFCC: 80346D6C (PSMTXMultVec)
//	8006F008: 804521B8 (lit_3954)
//	8006F01C: 80346D6C (PSMTXMultVec)
//	8006F05C: 8035C764 (GXBegin)
//	8006F104: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	8006F10C: 803605D0 (GXSetClipMode)
//	8006F110: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	8006F124: 8006DA7C (dKyr_evil_draw2__FPA4_fPPUc)
//	8006F14C: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_evil_draw(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_evil_draw__FPA4_fPPUc.s"
}
#pragma pop

/* 8006F160-8006F168 0008+00 s=0 e=1 z=0  None .text      getKandelaarFlamePos__9daPy_py_cFv */
bool daPy_py_c::getKandelaarFlamePos() {
    return false;
}

/* ############################################################################################## */
/* 8042495C-80424968 000C+00 s=0 e=0 z=0  None .bss       @7955 */
u8 lit_7955[12];

/* 80424968-80424974 000C+00 s=0 e=0 z=0  None .bss       @7956 */
u8 lit_7956[12];

/* 80424974-80424980 000C+00 s=0 e=0 z=0  None .bss       @7957 */
u8 lit_7957[12];

/* 80424980-804249B0 0030+00 s=0 e=0 z=0  None .bss       add_table$7951 */
u8 data_80424980[48];

/* 804249B0-804249BC 000C+00 s=0 e=0 z=0  None .bss       @8942 */
u8 lit_8942[12];

/* 804249BC-804249C8 000C+00 s=0 e=0 z=0  None .bss       @8945 */
u8 lit_8945[12];

/* 804249C8-804249D4 000C+00 s=0 e=0 z=0  None .bss       @8946 */
u8 lit_8946[12];

/* 804249D4-804249E0 000C+00 s=0 e=0 z=0  None .bss       @8947 */
u8 lit_8947[12];

/* 804249E0-80424A10 0030+00 s=0 e=0 z=0  None .bss       add_table$8941 */
u8 data_804249E0[48];

/* 80424A10-80424A1C 000C+00 s=0 e=0 z=0  None .bss       @9425 */
u8 lit_9425[12];

/* 80424A1C-80424A28 000C+00 s=0 e=0 z=0  None .bss       @9428 */
u8 lit_9428[12];

/* 80424A28-80424A34 000C+00 s=0 e=0 z=0  None .bss       @9429 */
u8 lit_9429[12];

/* 80424A34-80424A40 000C+00 s=0 e=0 z=0  None .bss       @9430 */
u8 lit_9430[12];

/* 80424A40-80424A4C 000C+00 s=0 e=0 z=0  None .bss       @9431 */
u8 lit_9431[12];

/* 80424A4C-80424A58 000C+00 s=0 e=0 z=0  None .bss       @9432 */
u8 lit_9432[12];

/* 80424A58-80424A64 000C+00 s=0 e=0 z=0  None .bss       @9433 */
u8 lit_9433[12];

/* 80424A64-80424A70 000C+00 s=0 e=0 z=0  None .bss       @9434 */
u8 lit_9434[12];

/* 80424A70-80424A7C 000C+00 s=0 e=0 z=0  None .bss       @9435 */
u8 lit_9435[12];

/* 80424A7C-80424A88 000C+00 s=0 e=0 z=0  None .bss       @9436 */
u8 lit_9436[12];

/* 80424A88-80424A94 000C+00 s=0 e=0 z=0  None .bss       @9437 */
u8 lit_9437[12];

/* 80424A94-80424AA0 000C+00 s=0 e=0 z=0  None .bss       @9438 */
u8 lit_9438[12];

/* 80424AA0-80424AAC 000C+00 s=0 e=0 z=0  None .bss       @9439 */
u8 lit_9439[12];

/* 80424AAC-80424B00 004E+06 s=0 e=0 z=0  None .bss       hokuto_position$9424 */
u8 data_80424AAC[78 + 6 /* padding */];
