// 
// Generated By: dol2asm
// Translation Unit: d/meter/d_meter_haihai
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/meter/d_meter_haihai.h"

// 
// Types:
// 

struct dMeterSub_c {
	/* 80194138 */ // False False
//  bool False
bool isDead();
};

struct J2DAnmTextureSRTKey {
};

struct J2DAnmTransformKey {
};

struct J2DAnmColor {
};

struct dMeterHaihai_c {
	/* 8020AE8C */ // False False
//  u8 False
dMeterHaihai_c(u8);
	/* 8020AEF0 */ // True False
~dMeterHaihai_c();
	/* 8020AF6C */ // True False
void _create();
	/* 8020B0F4 */ // True False
//  u32 False
void _execute(u32);
	/* 8020B140 */ // True False
void draw();
	/* 8020B814 */ // False False
//  u8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void drawHaihai(u8, f32, f32, f32, f32);
	/* 8020B518 */ // False False
//  u8 False
void drawHaihai(u8);
	/* 8020B9B0 */ // True False
//  f32 False
//  f32 False
void drawHaihaiLeft(f32, f32);
	/* 8020BA4C */ // True False
//  f32 False
//  f32 False
void drawHaihaiRight(f32, f32);
	/* 8020BAE8 */ // True False
//  f32 False
//  f32 False
void drawHaihaiTop(f32, f32);
	/* 8020BB84 */ // True False
//  f32 False
//  f32 False
void drawHaihaiBottom(f32, f32);
	/* 8020BC20 */ // False False
//  f32 False
void setScale(f32);
	/* 8020BDAC */ // True False
void _delete();
	/* 8020BEA0 */ // True False
//  void False
//  u32 False
void alphaAnimeHaihai(u32);
	/* 8020BEA4 */ // True False
void updateHaihai();
	/* 8020BF00 */ // True False
//  J2DAnmTransformKey* False
// 	 J2DAnmTransformKey False
void playBckAnime(J2DAnmTransformKey*);
	/* 8020C078 */ // True False
//  J2DAnmTextureSRTKey* False
// 	 J2DAnmTextureSRTKey False
void playBtkAnime(J2DAnmTextureSRTKey*);
	/* 8020C1CC */ // True False
//  J2DAnmColor* False
// 	 J2DAnmColor False
void playBpkAnime(J2DAnmColor*);
};

struct JKRFileLoader {
	/* 802D4270 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  JKRFileLoader* False
// 	 JKRFileLoader False
void getGlbResource(char const*, JKRFileLoader*);
};

struct JKRExpHeap {
};

struct JKRArchive {
};

struct J2DGrafContext {
};

struct J2DScreen {
	/* 802F8498 */ // False False
J2DScreen();
	/* 802F8648 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
void setPriority(char const*, u32, JKRArchive*);
	/* 802F8ED4 */ // False False
//  f32 False
//  f32 False
//  J2DGrafContext const* False
// 	 J2DGrafContext const False
// 		 J2DGrafContext False
void draw(f32, f32, J2DGrafContext const*);
	/* 802F9690 */ // False False
void animation();
};

struct J2DRotateAxis {
};

struct J2DPane {
	/* 802F71DC */ // False False
//  f32 False
//  f32 False
//  J2DRotateAxis False
//  f32 False
void rotate(f32, f32, J2DRotateAxis, f32);
	/* 802F7FCC */ // False False
void animationTransform();
};

struct J2DAnmLoaderDataBase {
	/* 80308A6C */ // False False
//  void const* False
// 	 void const False
// 		 void False
void load(void const*);
};

struct CPaneMgr {
	/* 80253984 */ // False False
//  J2DScreen* False
// 	 J2DScreen False
//  u64 False
//  u8 False
//  JKRExpHeap* False
// 	 JKRExpHeap False
CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
};

// 
// Forward References:
// 


// False False
//  u8 False
extern "C" void __ct__14dMeterHaihai_cFUc();
// True False
extern "C" void __dt__14dMeterHaihai_cFv();
// True False
extern "C" void _create__14dMeterHaihai_cFv();
// True False
//  u32 False
extern "C" void _execute__14dMeterHaihai_cFUl();
// True False
extern "C" void draw__14dMeterHaihai_cFv();
// False False
//  u8 False
extern "C" void drawHaihai__14dMeterHaihai_cFUc();
// False False
//  u8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void drawHaihai__14dMeterHaihai_cFUcffff();
// True False
//  f32 False
//  f32 False
extern "C" void drawHaihaiLeft__14dMeterHaihai_cFff();
// True False
//  f32 False
//  f32 False
extern "C" void drawHaihaiRight__14dMeterHaihai_cFff();
// True False
//  f32 False
//  f32 False
extern "C" void drawHaihaiTop__14dMeterHaihai_cFff();
// True False
//  f32 False
//  f32 False
extern "C" void drawHaihaiBottom__14dMeterHaihai_cFff();
// False False
//  f32 False
extern "C" void setScale__14dMeterHaihai_cFf();
// True False
extern "C" void _delete__14dMeterHaihai_cFv();
// True False
//  void False
//  u32 False
extern "C" void alphaAnimeHaihai__14dMeterHaihai_cFUl();
// True False
extern "C" void updateHaihai__14dMeterHaihai_cFv();
// True False
//  J2DAnmTransformKey* False
// 	 J2DAnmTransformKey False
extern "C" void playBckAnime__14dMeterHaihai_cFP18J2DAnmTransformKey();
// True False
//  J2DAnmTextureSRTKey* False
// 	 J2DAnmTextureSRTKey False
extern "C" void playBtkAnime__14dMeterHaihai_cFP19J2DAnmTextureSRTKey();
// True False
//  J2DAnmColor* False
// 	 J2DAnmColor False
extern "C" void playBpkAnime__14dMeterHaihai_cFP11J2DAnmColor();
extern "C" extern char const* const d_meter_d_meter_haihai__stringBase0;
extern "C" extern void* __vt__14dMeterHaihai_c[8];

// 
// External References:
// 

// False False
//  J2DScreen* False
// 	 J2DScreen False
void dPaneClass_showNullPane(J2DScreen*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  bool False
extern "C" bool isDead__11dMeterSub_cFv();
// False False
//  J2DScreen* False
// 	 J2DScreen False
//  u64 False
//  u8 False
//  JKRExpHeap* False
// 	 JKRExpHeap False
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap();
// False False
//  J2DScreen* False
// 	 J2DScreen False
extern "C" void dPaneClass_showNullPane__FP9J2DScreen();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  JKRFileLoader* False
// 	 JKRFileLoader False
extern "C" void getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader();
// False False
//  f32 False
//  f32 False
//  J2DRotateAxis False
//  f32 False
extern "C" void rotate__7J2DPaneFff13J2DRotateAxisf();
// False False
extern "C" void animationTransform__7J2DPaneFv();
// False False
extern "C" void __ct__9J2DScreenFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive();
// False False
//  f32 False
//  f32 False
//  J2DGrafContext const* False
// 	 J2DGrafContext const False
// 		 J2DGrafContext False
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext();
// False False
extern "C" void animation__9J2DScreenFv();
// False False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void load__20J2DAnmLoaderDataBaseFPCv();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern void* __vt__11dMeterSub_c[8 + 3 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_drawHIO[3880];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803BF268-803BF288 0020+00 s=2 e=0 z=0  None .data      __vt__14dMeterHaihai_c                                       */
SECTION_DATA void* __vt__14dMeterHaihai_c[8] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)draw__14dMeterHaihai_cFv,
	(void*)__dt__14dMeterHaihai_cFv,
	(void*)_create__14dMeterHaihai_cFv,
	(void*)_execute__14dMeterHaihai_cFUl,
	(void*)_delete__14dMeterHaihai_cFv,
	(void*)isDead__11dMeterSub_cFv,
};

/* 8020AE8C-8020AEF0 0064+00 s=0 e=4 z=0  None .text      __ct__14dMeterHaihai_cFUc                                    */
//	8020AEA0: 803A6F88 (__vt__12dDlst_base_c)
//	8020AEA4: 803A6F88 (__vt__12dDlst_base_c)
//	8020AEAC: 803BB6D4 (__vt__11dMeterSub_c)
//	8020AEB0: 803BB6D4 (__vt__11dMeterSub_c)
//	8020AEB8: 803BF268 (__vt__14dMeterHaihai_c)
//	8020AEBC: 803BF268 (__vt__14dMeterHaihai_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u8 False
asm dMeterHaihai_c::dMeterHaihai_c(u8 param_0) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/__ct__14dMeterHaihai_cFUc.s"
}
#pragma pop


/* 8020AEF0-8020AF6C 007C+00 s=1 e=0 z=0  None .text      __dt__14dMeterHaihai_cFv                                     */
//	8020AF10: 803BF268 (__vt__14dMeterHaihai_c)
//	8020AF14: 803BF268 (__vt__14dMeterHaihai_c)
//	8020AF34: 803BB6D4 (__vt__11dMeterSub_c)
//	8020AF38: 803BB6D4 (__vt__11dMeterSub_c)
//	8020AF4C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dMeterHaihai_c::~dMeterHaihai_c() {
	nofralloc
#include "asm/d/meter/d_meter_haihai/__dt__14dMeterHaihai_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80398158-803981B0 0058+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80398158 = "zelda_hihi_cursor.blo";
SECTION_DEAD char const* const stringBase_8039816E = "zelda_hihi_cursor.bck";
SECTION_DEAD char const* const stringBase_80398184 = "zelda_hihi_cursor.btk";
SECTION_DEAD char const* const stringBase_8039819A = "zelda_hihi_cursor.bpk";
#pragma pop

/* 804547B0-804547B4 0004+00 s=6 e=0 z=0  None .sdata2    @3742                                                        */
SECTION_SDATA2 static u8 lit_3742[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 8020AF6C-8020B0F4 0188+00 s=1 e=0 z=0  None .text      _create__14dMeterHaihai_cFv                                  */
//	8020AF88: 802CEC4C (__nw__FUl)
//	8020AF94: 802F8498 (__ct__9J2DScreenFv)
//	8020AFA4: 80398158 (d_meter_d_meter_haihai__stringBase0)
//	8020AFA8: 80398158 (d_meter_d_meter_haihai__stringBase0)
//	8020AFB0: 804061C0 (g_dComIfG_gameInfo)
//	8020AFB4: 804061C0 (g_dComIfG_gameInfo)
//	8020AFBC: 802F8648 (setPriority__9J2DScreenFPCcUlP10JKRArchive)
//	8020AFC4: 802550E8 (dPaneClass_showNullPane__FP9J2DScreen)
//	8020AFCC: 802CEC4C (__nw__FUl)
//	8020AFF0: 80253984 (__ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap)
//	8020B02C: 80398158 (d_meter_d_meter_haihai__stringBase0)
//	8020B030: 80398158 (d_meter_d_meter_haihai__stringBase0)
//	8020B03C: 802D4270 (getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader)
//	8020B040: 80308A6C (load__20J2DAnmLoaderDataBaseFPCv)
//	8020B048: 804547B0 (lit_3742)
//	8020B050: 80398158 (d_meter_d_meter_haihai__stringBase0)
//	8020B054: 80398158 (d_meter_d_meter_haihai__stringBase0)
//	8020B060: 802D4270 (getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader)
//	8020B064: 80308A6C (load__20J2DAnmLoaderDataBaseFPCv)
//	8020B084: 804547B0 (lit_3742)
//	8020B08C: 80398158 (d_meter_d_meter_haihai__stringBase0)
//	8020B090: 80398158 (d_meter_d_meter_haihai__stringBase0)
//	8020B09C: 802D4270 (getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader)
//	8020B0A0: 80308A6C (load__20J2DAnmLoaderDataBaseFPCv)
//	8020B0C0: 804547B0 (lit_3742)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMeterHaihai_c::_create() {
	nofralloc
#include "asm/d/meter/d_meter_haihai/_create__14dMeterHaihai_cFv.s"
}
#pragma pop


/* 8020B0F4-8020B140 004C+00 s=1 e=0 z=0  None .text      _execute__14dMeterHaihai_cFUl                                */
//	8020B114: 8020BEA4 (updateHaihai__14dMeterHaihai_cFv)
//	8020B120: 8020BEA0 (alphaAnimeHaihai__14dMeterHaihai_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void dMeterHaihai_c::_execute(u32 param_0) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/_execute__14dMeterHaihai_cFUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 804547B4-804547B8 0004+00 s=2 e=0 z=0  None .sdata2    @3890                                                        */
SECTION_SDATA2 static f32 lit_3890 = 13.0f / 5.0f;

/* 804547B8-804547BC 0004+00 s=2 e=0 z=0  None .sdata2    @3891                                                        */
SECTION_SDATA2 static f32 lit_3891 = 39.0f;

/* 804547BC-804547C0 0004+00 s=2 e=0 z=0  None .sdata2    @3892                                                        */
SECTION_SDATA2 static f32 lit_3892 = 58.0f;

/* 804547C0-804547C4 0004+00 s=2 e=0 z=0  None .sdata2    @3893                                                        */
SECTION_SDATA2 static f32 lit_3893 = 304.0f;

/* 804547C4-804547C8 0004+00 s=2 e=0 z=0  None .sdata2    @3894                                                        */
SECTION_SDATA2 static f32 lit_3894 = 224.0f;

/* 804547C8-804547CC 0004+00 s=6 e=0 z=0  None .sdata2    @3895                                                        */
SECTION_SDATA2 static f32 lit_3895 = 0.5f;

/* 804547CC-804547D0 0004+00 s=2 e=0 z=0  None .sdata2    @3896                                                        */
SECTION_SDATA2 static f32 lit_3896 = 90.0f;

/* 804547D0-804547D4 0004+00 s=2 e=0 z=0  None .sdata2    @3897                                                        */
SECTION_SDATA2 static f32 lit_3897 = 180.0f;

/* 804547D4-804547D8 0004+00 s=2 e=0 z=0  None .sdata2    @3898                                                        */
SECTION_SDATA2 static f32 lit_3898 = 270.0f;

/* 8020B140-8020B518 03D8+00 s=1 e=0 z=0  None .text      draw__14dMeterHaihai_cFv                                     */
//	8020B150: 803621DC (_savegpr_29)
//	8020B19C: 804061C0 (g_dComIfG_gameInfo)
//	8020B1A0: 804061C0 (g_dComIfG_gameInfo)
//	8020B1A8: 8042EBC8 (g_drawHIO)
//	8020B1AC: 8042EBC8 (g_drawHIO)
//	8020B1F0: 804061C0 (g_dComIfG_gameInfo)
//	8020B1F4: 804061C0 (g_dComIfG_gameInfo)
//	8020B1FC: 8042EBC8 (g_drawHIO)
//	8020B200: 8042EBC8 (g_drawHIO)
//	8020B20C: 804547B4 (lit_3890)
//	8020B21C: 804547B8 (lit_3891)
//	8020B22C: 804547BC (lit_3892)
//	8020B244: 804061C0 (g_dComIfG_gameInfo)
//	8020B248: 804061C0 (g_dComIfG_gameInfo)
//	8020B250: 8042EBC8 (g_drawHIO)
//	8020B254: 8042EBC8 (g_drawHIO)
//	8020B2A8: 804547C0 (lit_3893)
//	8020B2B8: 804547C4 (lit_3894)
//	8020B2F8: 804547C8 (lit_3895)
//	8020B308: 804547B0 (lit_3742)
//	8020B30C: 802F71DC (rotate__7J2DPaneFff13J2DRotateAxisf)
//	8020B314: 804547B0 (lit_3742)
//	8020B31C: 804061C0 (g_dComIfG_gameInfo)
//	8020B320: 804061C0 (g_dComIfG_gameInfo)
//	8020B328: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
//	8020B344: 804547C0 (lit_3893)
//	8020B354: 804547C4 (lit_3894)
//	8020B394: 804547C8 (lit_3895)
//	8020B3A4: 804547CC (lit_3896)
//	8020B3A8: 802F71DC (rotate__7J2DPaneFff13J2DRotateAxisf)
//	8020B3B0: 804547B0 (lit_3742)
//	8020B3B8: 804061C0 (g_dComIfG_gameInfo)
//	8020B3BC: 804061C0 (g_dComIfG_gameInfo)
//	8020B3C4: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
//	8020B3E0: 804547C0 (lit_3893)
//	8020B3F0: 804547C4 (lit_3894)
//	8020B430: 804547C8 (lit_3895)
//	8020B440: 804547D0 (lit_3897)
//	8020B444: 802F71DC (rotate__7J2DPaneFff13J2DRotateAxisf)
//	8020B44C: 804547B0 (lit_3742)
//	8020B454: 804061C0 (g_dComIfG_gameInfo)
//	8020B458: 804061C0 (g_dComIfG_gameInfo)
//	8020B460: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
//	8020B47C: 804547C0 (lit_3893)
//	8020B48C: 804547C4 (lit_3894)
//	8020B4CC: 804547C8 (lit_3895)
//	8020B4DC: 804547D4 (lit_3898)
//	8020B4E0: 802F71DC (rotate__7J2DPaneFff13J2DRotateAxisf)
//	8020B4E8: 804547B0 (lit_3742)
//	8020B4F0: 804061C0 (g_dComIfG_gameInfo)
//	8020B4F4: 804061C0 (g_dComIfG_gameInfo)
//	8020B4FC: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
//	8020B504: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMeterHaihai_c::draw() {
	nofralloc
#include "asm/d/meter/d_meter_haihai/draw__14dMeterHaihai_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804547D8-804547DC 0004+00 s=2 e=0 z=0  None .sdata2    @3940                                                        */
SECTION_SDATA2 static f32 lit_3940 = 3.0f;

/* 804547DC-804547E0 0004+00 s=2 e=0 z=0  None .sdata2    @3941                                                        */
SECTION_SDATA2 static f32 lit_3941 = 5.0f;

/* 804547E0-804547E4 0004+00 s=1 e=0 z=0  None .sdata2    @3942                                                        */
SECTION_SDATA2 static f32 lit_3942 = 70.0f;

/* 804547E4-804547E8 0004+00 s=1 e=0 z=0  None .sdata2    @3943                                                        */
SECTION_SDATA2 static f32 lit_3943 = 50.0f;

/* 8020B518-8020B814 02FC+00 s=0 e=1 z=0  None .text      drawHaihai__14dMeterHaihai_cFUc                              */
//	8020B540: 804547C0 (lit_3893)
//	8020B544: 804547C4 (lit_3894)
//	8020B554: 804547D8 (lit_3940)
//	8020B558: 8042EBC8 (g_drawHIO)
//	8020B55C: 8042EBC8 (g_drawHIO)
//	8020B570: 804547DC (lit_3941)
//	8020B580: 8042EBC8 (g_drawHIO)
//	8020B584: 8042EBC8 (g_drawHIO)
//	8020B5AC: 8042EBC8 (g_drawHIO)
//	8020B5B0: 8042EBC8 (g_drawHIO)
//	8020B5C4: 8042EBC8 (g_drawHIO)
//	8020B5C8: 8042EBC8 (g_drawHIO)
//	8020B5D0: 804547B4 (lit_3890)
//	8020B5E0: 804547B8 (lit_3891)
//	8020B5EC: 8020BB84 (drawHaihaiBottom__14dMeterHaihai_cFff)
//	8020B5F8: 8042EBC8 (g_drawHIO)
//	8020B5FC: 8042EBC8 (g_drawHIO)
//	8020B610: 804547E0 (lit_3942)
//	8020B614: 8042EBC8 (g_drawHIO)
//	8020B618: 8042EBC8 (g_drawHIO)
//	8020B620: 804547BC (lit_3892)
//	8020B638: 8020BA4C (drawHaihaiRight__14dMeterHaihai_cFff)
//	8020B644: 8042EBC8 (g_drawHIO)
//	8020B648: 8042EBC8 (g_drawHIO)
//	8020B65C: 8042EBC8 (g_drawHIO)
//	8020B660: 8042EBC8 (g_drawHIO)
//	8020B668: 804547B4 (lit_3890)
//	8020B674: 804547E4 (lit_3943)
//	8020B67C: 804547B8 (lit_3891)
//	8020B68C: 8020BAE8 (drawHaihaiTop__14dMeterHaihai_cFff)
//	8020B698: 8042EBC8 (g_drawHIO)
//	8020B69C: 8042EBC8 (g_drawHIO)
//	8020B6B0: 8042EBC8 (g_drawHIO)
//	8020B6B4: 8042EBC8 (g_drawHIO)
//	8020B6BC: 804547BC (lit_3892)
//	8020B6C8: 804547E0 (lit_3942)
//	8020B6D8: 8020B9B0 (drawHaihaiLeft__14dMeterHaihai_cFff)
//	8020B6EC: 8042EBC8 (g_drawHIO)
//	8020B6F0: 8042EBC8 (g_drawHIO)
//	8020B704: 8042EBC8 (g_drawHIO)
//	8020B708: 8042EBC8 (g_drawHIO)
//	8020B71C: 8020BB84 (drawHaihaiBottom__14dMeterHaihai_cFff)
//	8020B728: 8042EBC8 (g_drawHIO)
//	8020B72C: 8042EBC8 (g_drawHIO)
//	8020B740: 804547E0 (lit_3942)
//	8020B744: 8042EBC8 (g_drawHIO)
//	8020B748: 8042EBC8 (g_drawHIO)
//	8020B760: 8020BA4C (drawHaihaiRight__14dMeterHaihai_cFff)
//	8020B76C: 8042EBC8 (g_drawHIO)
//	8020B770: 8042EBC8 (g_drawHIO)
//	8020B784: 8042EBC8 (g_drawHIO)
//	8020B788: 8042EBC8 (g_drawHIO)
//	8020B794: 804547E4 (lit_3943)
//	8020B7A4: 8020BAE8 (drawHaihaiTop__14dMeterHaihai_cFff)
//	8020B7B0: 8042EBC8 (g_drawHIO)
//	8020B7B4: 8042EBC8 (g_drawHIO)
//	8020B7C8: 8042EBC8 (g_drawHIO)
//	8020B7CC: 8042EBC8 (g_drawHIO)
//	8020B7D8: 804547E0 (lit_3942)
//	8020B7E8: 8020B9B0 (drawHaihaiLeft__14dMeterHaihai_cFff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u8 False
asm void dMeterHaihai_c::drawHaihai(u8 param_0) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/drawHaihai__14dMeterHaihai_cFUc.s"
}
#pragma pop


/* 8020B814-8020B9B0 019C+00 s=0 e=2 z=0  None .text      drawHaihai__14dMeterHaihai_cFUcffff                          */
//	8020B860: 804547D8 (lit_3940)
//	8020B864: 8042EBC8 (g_drawHIO)
//	8020B868: 8042EBC8 (g_drawHIO)
//	8020B87C: 804547DC (lit_3941)
//	8020B88C: 8042EBC8 (g_drawHIO)
//	8020B890: 8042EBC8 (g_drawHIO)
//	8020B8B0: 8042EBC8 (g_drawHIO)
//	8020B8B4: 8042EBC8 (g_drawHIO)
//	8020B8CC: 804547C8 (lit_3895)
//	8020B8D8: 8020BB84 (drawHaihaiBottom__14dMeterHaihai_cFff)
//	8020B8E4: 8042EBC8 (g_drawHIO)
//	8020B8E8: 8042EBC8 (g_drawHIO)
//	8020B8FC: 804547C8 (lit_3895)
//	8020B90C: 8020BA4C (drawHaihaiRight__14dMeterHaihai_cFff)
//	8020B918: 8042EBC8 (g_drawHIO)
//	8020B91C: 8042EBC8 (g_drawHIO)
//	8020B934: 804547C8 (lit_3895)
//	8020B940: 8020BAE8 (drawHaihaiTop__14dMeterHaihai_cFff)
//	8020B94C: 8042EBC8 (g_drawHIO)
//	8020B950: 8042EBC8 (g_drawHIO)
//	8020B964: 804547C8 (lit_3895)
//	8020B974: 8020B9B0 (drawHaihaiLeft__14dMeterHaihai_cFff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
asm void dMeterHaihai_c::drawHaihai(u8 param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/drawHaihai__14dMeterHaihai_cFUcffff.s"
}
#pragma pop


/* 8020B9B0-8020BA4C 009C+00 s=2 e=0 z=0  None .text      drawHaihaiLeft__14dMeterHaihai_cFff                          */
//	8020BA04: 804547C8 (lit_3895)
//	8020BA14: 804547D4 (lit_3898)
//	8020BA18: 802F71DC (rotate__7J2DPaneFff13J2DRotateAxisf)
//	8020BA20: 804547B0 (lit_3742)
//	8020BA28: 804061C0 (g_dComIfG_gameInfo)
//	8020BA2C: 804061C0 (g_dComIfG_gameInfo)
//	8020BA34: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
asm void dMeterHaihai_c::drawHaihaiLeft(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/drawHaihaiLeft__14dMeterHaihai_cFff.s"
}
#pragma pop


/* 8020BA4C-8020BAE8 009C+00 s=2 e=0 z=0  None .text      drawHaihaiRight__14dMeterHaihai_cFff                         */
//	8020BAA0: 804547C8 (lit_3895)
//	8020BAB0: 804547CC (lit_3896)
//	8020BAB4: 802F71DC (rotate__7J2DPaneFff13J2DRotateAxisf)
//	8020BABC: 804547B0 (lit_3742)
//	8020BAC4: 804061C0 (g_dComIfG_gameInfo)
//	8020BAC8: 804061C0 (g_dComIfG_gameInfo)
//	8020BAD0: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
asm void dMeterHaihai_c::drawHaihaiRight(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/drawHaihaiRight__14dMeterHaihai_cFff.s"
}
#pragma pop


/* 8020BAE8-8020BB84 009C+00 s=2 e=0 z=0  None .text      drawHaihaiTop__14dMeterHaihai_cFff                           */
//	8020BB3C: 804547C8 (lit_3895)
//	8020BB4C: 804547D0 (lit_3897)
//	8020BB50: 802F71DC (rotate__7J2DPaneFff13J2DRotateAxisf)
//	8020BB58: 804547B0 (lit_3742)
//	8020BB60: 804061C0 (g_dComIfG_gameInfo)
//	8020BB64: 804061C0 (g_dComIfG_gameInfo)
//	8020BB6C: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
asm void dMeterHaihai_c::drawHaihaiTop(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/drawHaihaiTop__14dMeterHaihai_cFff.s"
}
#pragma pop


/* 8020BB84-8020BC20 009C+00 s=2 e=0 z=0  None .text      drawHaihaiBottom__14dMeterHaihai_cFff                        */
//	8020BBD8: 804547C8 (lit_3895)
//	8020BBE8: 804547B0 (lit_3742)
//	8020BBEC: 802F71DC (rotate__7J2DPaneFff13J2DRotateAxisf)
//	8020BBF4: 804547B0 (lit_3742)
//	8020BBFC: 804061C0 (g_dComIfG_gameInfo)
//	8020BC00: 804061C0 (g_dComIfG_gameInfo)
//	8020BC08: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
asm void dMeterHaihai_c::drawHaihaiBottom(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/drawHaihaiBottom__14dMeterHaihai_cFff.s"
}
#pragma pop


/* ############################################################################################## */
/* 804547E8-804547EC 0004+00 s=1 e=0 z=0  None .sdata2    @4116                                                        */
SECTION_SDATA2 static f32 lit_4116 = 4.0f / 5.0f;

/* 804547EC-804547F0 0004+00 s=1 e=0 z=0  None .sdata2    @4117                                                        */
SECTION_SDATA2 static f32 lit_4117 = 3.0f / 5.0f;

/* 8020BC20-8020BDAC 018C+00 s=1 e=1 z=0  None .text      setScale__14dMeterHaihai_cFf                                 */
//	8020BC38: 804547E8 (lit_4116)
//	8020BC3C: 804547EC (lit_4117)
//	8020BC40: 8042EBC8 (g_drawHIO)
//	8020BC44: 8042EBC8 (g_drawHIO)
//	8020BC9C: 804547EC (lit_4117)
//	8020BCA0: 8042EBC8 (g_drawHIO)
//	8020BCA4: 8042EBC8 (g_drawHIO)
//	8020BCEC: 8042EBC8 (g_drawHIO)
//	8020BCF0: 8042EBC8 (g_drawHIO)
//	8020BD28: 8042EBC8 (g_drawHIO)
//	8020BD2C: 8042EBC8 (g_drawHIO)
//	8020BD64: 8042EBC8 (g_drawHIO)
//	8020BD68: 8042EBC8 (g_drawHIO)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
asm void dMeterHaihai_c::setScale(f32 param_0) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/setScale__14dMeterHaihai_cFf.s"
}
#pragma pop


/* 8020BDAC-8020BEA0 00F4+00 s=1 e=0 z=0  None .text      _delete__14dMeterHaihai_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMeterHaihai_c::_delete() {
	nofralloc
#include "asm/d/meter/d_meter_haihai/_delete__14dMeterHaihai_cFv.s"
}
#pragma pop


/* 8020BEA0-8020BEA4 0004+00 s=1 e=0 z=0  None .text      alphaAnimeHaihai__14dMeterHaihai_cFUl                        */
// True False
//  void False
//  u32 False
void dMeterHaihai_c::alphaAnimeHaihai(u32 param_0) {
	/* empty function */
}


/* ############################################################################################## */
/* 804547F0-804547F8 0004+04 s=4 e=0 z=0  None .sdata2    @4165                                                        */
SECTION_SDATA2 static f32 lit_4165[1 + 1 /* padding */] = {
	1.0f,
	/* padding */
	0.0f,
};

/* 8020BEA4-8020BF00 005C+00 s=1 e=0 z=0  None .text      updateHaihai__14dMeterHaihai_cFv                             */
//	8020BEBC: 8020BF00 (playBckAnime__14dMeterHaihai_cFP18J2DAnmTransformKey)
//	8020BEC8: 8020C078 (playBtkAnime__14dMeterHaihai_cFP19J2DAnmTextureSRTKey)
//	8020BED4: 8020C1CC (playBpkAnime__14dMeterHaihai_cFP11J2DAnmColor)
//	8020BEDC: 802F9690 (animation__9J2DScreenFv)
//	8020BEE4: 804547F0 (lit_4165)
//	8020BEE8: 8020BC20 (setScale__14dMeterHaihai_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dMeterHaihai_c::updateHaihai() {
	nofralloc
#include "asm/d/meter/d_meter_haihai/updateHaihai__14dMeterHaihai_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804547F8-80454800 0008+00 s=3 e=0 z=0  None .sdata2    @4189                                                        */
SECTION_SDATA2 static f64 lit_4189 = 4503601774854144.0 /* cast s32 to float */;

/* 8020BF00-8020C078 0178+00 s=1 e=0 z=0  None .text      playBckAnime__14dMeterHaihai_cFP18J2DAnmTransformKey         */
//	8020BF40: 8042EBC8 (g_drawHIO)
//	8020BF44: 8042EBC8 (g_drawHIO)
//	8020BF5C: 8042EBC8 (g_drawHIO)
//	8020BF60: 8042EBC8 (g_drawHIO)
//	8020BF78: 804547F8 (lit_4189)
//	8020BFC4: 804547F0 (lit_4165)
//	8020C028: 802F7FCC (animationTransform__7J2DPaneFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J2DAnmTransformKey* False
// 	 J2DAnmTransformKey False
asm void dMeterHaihai_c::playBckAnime(J2DAnmTransformKey* param_0) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/playBckAnime__14dMeterHaihai_cFP18J2DAnmTransformKey.s"
}
#pragma pop


/* 8020C078-8020C1CC 0154+00 s=1 e=0 z=0  None .text      playBtkAnime__14dMeterHaihai_cFP19J2DAnmTextureSRTKey        */
//	8020C0B8: 8042EBC8 (g_drawHIO)
//	8020C0BC: 8042EBC8 (g_drawHIO)
//	8020C0D4: 8042EBC8 (g_drawHIO)
//	8020C0D8: 8042EBC8 (g_drawHIO)
//	8020C0F0: 804547F8 (lit_4189)
//	8020C13C: 804547F0 (lit_4165)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J2DAnmTextureSRTKey* False
// 	 J2DAnmTextureSRTKey False
asm void dMeterHaihai_c::playBtkAnime(J2DAnmTextureSRTKey* param_0) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/playBtkAnime__14dMeterHaihai_cFP19J2DAnmTextureSRTKey.s"
}
#pragma pop


/* 8020C1CC-8020C320 0154+00 s=1 e=0 z=0  None .text      playBpkAnime__14dMeterHaihai_cFP11J2DAnmColor                */
//	8020C20C: 8042EBC8 (g_drawHIO)
//	8020C210: 8042EBC8 (g_drawHIO)
//	8020C228: 8042EBC8 (g_drawHIO)
//	8020C22C: 8042EBC8 (g_drawHIO)
//	8020C244: 804547F8 (lit_4189)
//	8020C290: 804547F0 (lit_4165)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J2DAnmColor* False
// 	 J2DAnmColor False
asm void dMeterHaihai_c::playBpkAnime(J2DAnmColor* param_0) {
	nofralloc
#include "asm/d/meter/d_meter_haihai/playBpkAnime__14dMeterHaihai_cFP11J2DAnmColor.s"
}
#pragma pop


