//
// Generated By: dol2asm
// Translation Unit: d/save/d_save
//

#include "d/save/d_save.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct daObjCarry_c {
    /* 80031CF8 */ void clrSaveFlag();
    /* 80031D04 */ void setSaveFlag();
};

struct dSv_zone_c {
    /* 80034F44 */ void init(int);
};

struct dSv_zoneBit_c {
    /* 80034CA0 */ void init();
    /* 80034CEC */ void clearRoomSwitch();
    /* 80034CF8 */ void clearRoomItem();
    /* 80034D04 */ void onSwitch(int);
    /* 80034D2C */ void offSwitch(int);
    /* 80034D50 */ void isSwitch(int) const;
    /* 80034D78 */ void revSwitch(int);
    /* 80034DAC */ void onOneSwitch(int);
    /* 80034DC8 */ void offOneSwitch(int);
    /* 80034DE0 */ void isOneSwitch(int) const;
    /* 80034DFC */ void revOneSwitch(int);
    /* 80034E24 */ void onItem(int);
    /* 80034E50 */ void isItem(int) const;
    /* 80034E7C */ void onOneItem(int);
    /* 80034E98 */ void isOneItem(int) const;
};

struct dSv_zoneActor_c {
    /* 80034EB4 */ void init();
    /* 80034ED4 */ void on(int);
    /* 80034EF8 */ void off(int);
    /* 80034F1C */ void is(int) const;
};

struct cXyz {};

struct dSv_turnRestart_c {
    /* 80034FA4 */ void set(cXyz const&, s16, s8, u32);
};

struct dSv_save_c {
    /* 8003501C */ void init();
    /* 800350A8 */ void getSave2(int);
};

struct dSv_restart_c {
    /* 80034F80 */ void setRoom(cXyz const&, s16, s8);
};

struct dSv_player_wolf_c {
    /* 800342B4 */ void init();
};

struct dSv_player_status_b_c {
    /* 80032B50 */ void init();
    /* 80032B94 */ void onDarkClearLV(int);
    /* 80032BB0 */ void isDarkClearLV(int) const;
    /* 80032BD0 */ void onTransformLV(int);
    /* 80032BEC */ void isTransformLV(int) const;
};

struct dSv_player_status_a_c {
    /* 80032958 */ void init();
    /* 80032A48 */ void setSelectItemIndex(int, u8);
    /* 80032A5C */ void getSelectItemIndex(int) const;
    /* 80032A78 */ void setMixItemIndex(int, u8);
    /* 80032A8C */ void getMixItemIndex(int) const;
    /* 80032AA8 */ void getRupeeMax() const;
    /* 80032AF8 */ void isMagicFlag(u8) const;
};

struct dSv_player_return_place_c {
    /* 80032CC8 */ void init();
    /* 80032D1C */ void set(char const*, s8, u8);
};

struct dSv_player_last_mark_info_c {
    /* 80032EB0 */ void init();
    /* 80032F2C */ void setWarpItemData(char const*, cXyz const&, s16, s8, u8, u8);
};

struct dSv_player_item_record_c {
    /* 80033F00 */ void init();
    /* 80033F6C */ void setBombNum(u8, u8);
    /* 80033F7C */ void getBombNum(u8) const;
    /* 80033F8C */ void setBottleNum(u8, u8);
    /* 80033F9C */ void addBottleNum(u8, s16);
    /* 80034030 */ void getBottleNum(u8) const;
};

struct dSv_player_item_max_c {
    /* 80034040 */ void init();
    /* 800340B8 */ void setBombNum(u8, u8);
    /* 800340F8 */ void getBombNum(u8) const;
};

struct dSv_player_item_c {
    /* 80032F90 */ void init();
    /* 80032FB8 */ void setItem(int, u8);
    /* 80033030 */ void getItem(int, bool) const;
    /* 800332F8 */ void setLineUpItem();
    /* 80033354 */ void getLineUpItem(int) const;
    /* 80033370 */ void setBottleItemIn(u8, u8);
    /* 80033450 */ void setEmptyBottleItemIn(u8);
    /* 80033494 */ void setEmptyBottle();
    /* 80033514 */ void setEmptyBottle(u8);
    /* 80033598 */ void setEquipBottleItemIn(u8, u8);
    /* 800336BC */ void setEquipBottleItemEmpty(u8);
    /* 800336E0 */ void checkBottle(u8);
    /* 80033754 */ void checkInsectBottle();
    /* 800337EC */ void checkEmptyBottle();
    /* 80033910 */ void setBombBagItemIn(u8, u8, u8, bool);
    /* 80033828 */ void setBombBagItemIn(u8, u8, bool);
    /* 80033A20 */ void setEmptyBombBagItemIn(u8, bool);
    /* 80033A50 */ void setEmptyBombBagItemIn(u8, u8, bool);
    /* 80033A88 */ void setEmptyBombBag();
    /* 80033B08 */ void setEmptyBombBag(u8, u8);
    /* 80033BEC */ void checkBombBag(u8);
    /* 80033C2C */ void setWarashibeItem(u8);
    /* 80033CBC */ void setRodTypeLevelUp();
    /* 80033D40 */ void setBaitItem(u8);
};

struct dSv_player_info_c {
    /* 80034518 */ void init();
};

struct dSv_player_get_item_c {
    /* 80033E40 */ void init();
    /* 80033E60 */ void onFirstBit(u8);
    /* 80033E94 */ void offFirstBit(u8);
    /* 80033EC8 */ void isFirstBit(u8) const;
};

struct dSv_player_field_last_stay_info_c {
    /* 80032D60 */ void init();
    /* 80032DE0 */ void set(char const*, cXyz const&, s16, s8, u8);
    /* 80032E4C */ void onRegionBit(int);
    /* 80032E78 */ void isRegionBit(int) const;
};

struct dSv_player_config_c {
    /* 800345AC */ void init();
    /* 80034644 */ void checkVibration() const;
    /* 80034684 */ void getSound();
    /* 8003468C */ void setSound(u8);
    /* 80034694 */ void getVibration();
    /* 8003469C */ void setVibration(u8);
};

struct dSv_player_collect_c {
    /* 800341AC */ void init();
    /* 800341E8 */ void setCollect(int, u8);
    /* 80034208 */ void isCollect(int, u8) const;
    /* 8003422C */ void onCollectCrystal(u8);
    /* 8003424C */ void isCollectCrystal(u8) const;
    /* 80034270 */ void onCollectMirror(u8);
    /* 80034290 */ void isCollectMirror(u8) const;
};

struct dSv_player_c {
    /* 800346A4 */ void init();
};

struct dSv_memory_c {
    /* 80030DB0 */ dSv_memory_c();
    /* 80034A64 */ void init();
};

struct dSv_memory2_c {
    /* 80030D80 */ dSv_memory2_c();
    /* 80034A84 */ void init();
    /* 80034AA4 */ void onVisitedRoom(int);
    /* 80034AC8 */ void offVisitedRoom(int);
    /* 80034AEC */ void isVisitedRoom(int);
};

struct dSv_memBit_c {
    /* 80034750 */ void init();
    /* 800347A0 */ void onTbox(int);
    /* 800347C4 */ void offTbox(int);
    /* 800347E8 */ void isTbox(int) const;
    /* 80034810 */ void onSwitch(int);
    /* 80034838 */ void offSwitch(int);
    /* 80034860 */ void isSwitch(int) const;
    /* 8003488C */ void revSwitch(int);
    /* 800348C4 */ void onItem(int);
    /* 800348EC */ void isItem(int) const;
    /* 80034918 */ void onDungeonItem(int);
    /* 80034934 */ void isDungeonItem(int) const;
};

struct dSv_light_drop_c {
    /* 800342DC */ void init();
    /* 80034320 */ void setLightDropNum(u8, u8);
    /* 80034340 */ void getLightDropNum(u8) const;
    /* 80034368 */ void onLightDropGetFlag(u8);
    /* 8003439C */ void isLightDropGetFlag(u8) const;
};

struct dSv_letter_info_c {
    /* 800343DC */ void init();
    /* 80034428 */ void onLetterGetFlag(int);
    /* 8003444C */ void isLetterGetFlag(int) const;
    /* 80034474 */ void onLetterReadFlag(int);
    /* 8003449C */ void isLetterReadFlag(int) const;
};

struct dSv_info_c {
    /* 80034FCC */ void init();
    /* 800350BC */ void getSave(int);
    /* 800350F0 */ void putSave(int);
    /* 8003514C */ void initZone();
    /* 800351A4 */ void createZone(int);
    /* 80035200 */ void onSwitch(int, int);
    /* 800352B0 */ void offSwitch(int, int);
    /* 80035360 */ void isSwitch(int, int) const;
    /* 8003542C */ void revSwitch(int, int);
    /* 800354E0 */ void onItem(int, int);
    /* 80035590 */ void isItem(int, int) const;
    /* 80035644 */ void onActor(int, int);
    /* 800356B4 */ void offActor(int, int);
    /* 80035724 */ void isActor(int, int) const;
    /* 80035798 */ void memory_to_card(char*, int);
    /* 80035A04 */ void card_to_memory(char*, int);
    /* 80035BD0 */ void initdata_to_card(char*, int);
};

struct dSv_horse_place_c {
    /* 80032C0C */ void init();
    /* 80032C64 */ void set(char const*, cXyz const&, s16, s8);
};

struct dSv_fishing_info_c {
    /* 800344C8 */ void init();
    /* 800344FC */ void addFishCount(u8);
};

struct dSv_event_c {
    /* 80034954 */ void init();
    /* 8003498C */ void onEventBit(u16);
    /* 800349A4 */ void offEventBit(u16);
    /* 800349BC */ void isEventBit(u16) const;
    /* 800349E0 */ void setEventReg(u16, u8);
    /* 80034A04 */ void getEventReg(u16) const;
};

struct dSv_danBit_c {
    /* 80034B14 */ void init(s8);
    /* 80034B98 */ void onSwitch(int);
    /* 80034BC0 */ void offSwitch(int);
    /* 80034BE8 */ void isSwitch(int) const;
    /* 80034C14 */ void revSwitch(int);
    /* 80034C4C */ void onItem(int);
    /* 80034C74 */ void isItem(int) const;
};

struct dSv_MiniGame_c {
    /* 80034A1C */ void init();
};

struct dStage_roomControl_c {
    /* 8002D9B0 */ void getZoneNo(int);
};

struct JMSMesgEntry_c {};

struct dMeter2Info_c {
    /* 8021C250 */ void getString(u32, char*, JMSMesgEntry_c*);
    /* 8021DCC4 */ void setHotSpringTimer(u8);
    /* 8021E290 */ void setSaveStageName(char const*);
};

struct dComIfG_play_c {
    /* 8002B3A8 */ void setNowVibration(u8);
    /* 8002B3B0 */ void getNowVibration();
};

struct Z2AudioMgr {
    /* 802CD888 */ void setOutputMode(u32);
};

//
// Forward References:
//

extern "C" static void dSv_item_rename__FUc();
extern "C" void init__21dSv_player_status_a_cFv();
extern "C" void setSelectItemIndex__21dSv_player_status_a_cFiUc();
extern "C" void getSelectItemIndex__21dSv_player_status_a_cCFi();
extern "C" void setMixItemIndex__21dSv_player_status_a_cFiUc();
extern "C" void getMixItemIndex__21dSv_player_status_a_cCFi();
extern "C" void getRupeeMax__21dSv_player_status_a_cCFv();
extern "C" void isMagicFlag__21dSv_player_status_a_cCFUc();
extern "C" void init__21dSv_player_status_b_cFv();
extern "C" void onDarkClearLV__21dSv_player_status_b_cFi();
extern "C" void isDarkClearLV__21dSv_player_status_b_cCFi();
extern "C" void onTransformLV__21dSv_player_status_b_cFi();
extern "C" void isTransformLV__21dSv_player_status_b_cCFi();
extern "C" void init__17dSv_horse_place_cFv();
extern "C" void set__17dSv_horse_place_cFPCcRC4cXyzsSc();
extern "C" void init__25dSv_player_return_place_cFv();
extern "C" void set__25dSv_player_return_place_cFPCcScUc();
extern "C" void init__33dSv_player_field_last_stay_info_cFv();
extern "C" void set__33dSv_player_field_last_stay_info_cFPCcRC4cXyzsScUc();
extern "C" void onRegionBit__33dSv_player_field_last_stay_info_cFi();
extern "C" void isRegionBit__33dSv_player_field_last_stay_info_cCFi();
extern "C" void init__27dSv_player_last_mark_info_cFv();
extern "C" void setWarpItemData__27dSv_player_last_mark_info_cFPCcRC4cXyzsScUcUc();
extern "C" void init__17dSv_player_item_cFv();
extern "C" void setItem__17dSv_player_item_cFiUc();
extern "C" void getItem__17dSv_player_item_cCFib();
extern "C" void setLineUpItem__17dSv_player_item_cFv();
extern "C" void getLineUpItem__17dSv_player_item_cCFi();
extern "C" void setBottleItemIn__17dSv_player_item_cFUcUc();
extern "C" void setEmptyBottleItemIn__17dSv_player_item_cFUc();
extern "C" void setEmptyBottle__17dSv_player_item_cFv();
extern "C" void setEmptyBottle__17dSv_player_item_cFUc();
extern "C" void setEquipBottleItemIn__17dSv_player_item_cFUcUc();
extern "C" void setEquipBottleItemEmpty__17dSv_player_item_cFUc();
extern "C" void checkBottle__17dSv_player_item_cFUc();
extern "C" void checkInsectBottle__17dSv_player_item_cFv();
extern "C" void checkEmptyBottle__17dSv_player_item_cFv();
extern "C" void setBombBagItemIn__17dSv_player_item_cFUcUcb();
extern "C" void setBombBagItemIn__17dSv_player_item_cFUcUcUcb();
extern "C" void setEmptyBombBagItemIn__17dSv_player_item_cFUcb();
extern "C" void setEmptyBombBagItemIn__17dSv_player_item_cFUcUcb();
extern "C" void setEmptyBombBag__17dSv_player_item_cFv();
extern "C" void setEmptyBombBag__17dSv_player_item_cFUcUc();
extern "C" void checkBombBag__17dSv_player_item_cFUc();
extern "C" void setWarashibeItem__17dSv_player_item_cFUc();
extern "C" void setRodTypeLevelUp__17dSv_player_item_cFv();
extern "C" void setBaitItem__17dSv_player_item_cFUc();
extern "C" void init__21dSv_player_get_item_cFv();
extern "C" void onFirstBit__21dSv_player_get_item_cFUc();
extern "C" void offFirstBit__21dSv_player_get_item_cFUc();
extern "C" void isFirstBit__21dSv_player_get_item_cCFUc();
extern "C" void init__24dSv_player_item_record_cFv();
extern "C" void setBombNum__24dSv_player_item_record_cFUcUc();
extern "C" void getBombNum__24dSv_player_item_record_cCFUc();
extern "C" void setBottleNum__24dSv_player_item_record_cFUcUc();
extern "C" void addBottleNum__24dSv_player_item_record_cFUcs();
extern "C" void getBottleNum__24dSv_player_item_record_cCFUc();
extern "C" void init__21dSv_player_item_max_cFv();
extern "C" void setBombNum__21dSv_player_item_max_cFUcUc();
extern "C" void getBombNum__21dSv_player_item_max_cCFUc();
extern "C" void init__20dSv_player_collect_cFv();
extern "C" void setCollect__20dSv_player_collect_cFiUc();
extern "C" void isCollect__20dSv_player_collect_cCFiUc();
extern "C" void onCollectCrystal__20dSv_player_collect_cFUc();
extern "C" void isCollectCrystal__20dSv_player_collect_cCFUc();
extern "C" void onCollectMirror__20dSv_player_collect_cFUc();
extern "C" void isCollectMirror__20dSv_player_collect_cCFUc();
extern "C" void init__17dSv_player_wolf_cFv();
extern "C" void init__16dSv_light_drop_cFv();
extern "C" void setLightDropNum__16dSv_light_drop_cFUcUc();
extern "C" void getLightDropNum__16dSv_light_drop_cCFUc();
extern "C" void onLightDropGetFlag__16dSv_light_drop_cFUc();
extern "C" void isLightDropGetFlag__16dSv_light_drop_cCFUc();
extern "C" void init__17dSv_letter_info_cFv();
extern "C" void onLetterGetFlag__17dSv_letter_info_cFi();
extern "C" void isLetterGetFlag__17dSv_letter_info_cCFi();
extern "C" void onLetterReadFlag__17dSv_letter_info_cFi();
extern "C" void isLetterReadFlag__17dSv_letter_info_cCFi();
extern "C" void init__18dSv_fishing_info_cFv();
extern "C" void addFishCount__18dSv_fishing_info_cFUc();
extern "C" void init__17dSv_player_info_cFv();
extern "C" void init__19dSv_player_config_cFv();
extern "C" void checkVibration__19dSv_player_config_cCFv();
extern "C" void getSound__19dSv_player_config_cFv();
extern "C" void setSound__19dSv_player_config_cFUc();
extern "C" void getVibration__19dSv_player_config_cFv();
extern "C" void setVibration__19dSv_player_config_cFUc();
extern "C" void init__12dSv_player_cFv();
extern "C" void init__12dSv_memBit_cFv();
extern "C" void onTbox__12dSv_memBit_cFi();
extern "C" void offTbox__12dSv_memBit_cFi();
extern "C" void isTbox__12dSv_memBit_cCFi();
extern "C" void onSwitch__12dSv_memBit_cFi();
extern "C" void offSwitch__12dSv_memBit_cFi();
extern "C" void isSwitch__12dSv_memBit_cCFi();
extern "C" void revSwitch__12dSv_memBit_cFi();
extern "C" void onItem__12dSv_memBit_cFi();
extern "C" void isItem__12dSv_memBit_cCFi();
extern "C" void onDungeonItem__12dSv_memBit_cFi();
extern "C" void isDungeonItem__12dSv_memBit_cCFi();
extern "C" void init__11dSv_event_cFv();
extern "C" void onEventBit__11dSv_event_cFUs();
extern "C" void offEventBit__11dSv_event_cFUs();
extern "C" void isEventBit__11dSv_event_cCFUs();
extern "C" void setEventReg__11dSv_event_cFUsUc();
extern "C" void getEventReg__11dSv_event_cCFUs();
extern "C" void init__14dSv_MiniGame_cFv();
extern "C" void init__12dSv_memory_cFv();
extern "C" void init__13dSv_memory2_cFv();
extern "C" void onVisitedRoom__13dSv_memory2_cFi();
extern "C" void offVisitedRoom__13dSv_memory2_cFi();
extern "C" void isVisitedRoom__13dSv_memory2_cFi();
extern "C" void init__12dSv_danBit_cFSc();
extern "C" void onSwitch__12dSv_danBit_cFi();
extern "C" void offSwitch__12dSv_danBit_cFi();
extern "C" void isSwitch__12dSv_danBit_cCFi();
extern "C" void revSwitch__12dSv_danBit_cFi();
extern "C" void onItem__12dSv_danBit_cFi();
extern "C" void isItem__12dSv_danBit_cCFi();
extern "C" void init__13dSv_zoneBit_cFv();
extern "C" void clearRoomSwitch__13dSv_zoneBit_cFv();
extern "C" void clearRoomItem__13dSv_zoneBit_cFv();
extern "C" void onSwitch__13dSv_zoneBit_cFi();
extern "C" void offSwitch__13dSv_zoneBit_cFi();
extern "C" void isSwitch__13dSv_zoneBit_cCFi();
extern "C" void revSwitch__13dSv_zoneBit_cFi();
extern "C" void onOneSwitch__13dSv_zoneBit_cFi();
extern "C" void offOneSwitch__13dSv_zoneBit_cFi();
extern "C" void isOneSwitch__13dSv_zoneBit_cCFi();
extern "C" void revOneSwitch__13dSv_zoneBit_cFi();
extern "C" void onItem__13dSv_zoneBit_cFi();
extern "C" void isItem__13dSv_zoneBit_cCFi();
extern "C" void onOneItem__13dSv_zoneBit_cFi();
extern "C" void isOneItem__13dSv_zoneBit_cCFi();
extern "C" void init__15dSv_zoneActor_cFv();
extern "C" void on__15dSv_zoneActor_cFi();
extern "C" void off__15dSv_zoneActor_cFi();
extern "C" void is__15dSv_zoneActor_cCFi();
extern "C" void init__10dSv_zone_cFi();
extern "C" void setRoom__13dSv_restart_cFRC4cXyzsSc();
extern "C" void set__17dSv_turnRestart_cFRC4cXyzsScUl();
extern "C" void init__10dSv_info_cFv();
extern "C" void init__10dSv_save_cFv();
extern "C" void getSave2__10dSv_save_cFi();
extern "C" void getSave__10dSv_info_cFi();
extern "C" void putSave__10dSv_info_cFi();
extern "C" void initZone__10dSv_info_cFv();
extern "C" void createZone__10dSv_info_cFi();
extern "C" void onSwitch__10dSv_info_cFii();
extern "C" void offSwitch__10dSv_info_cFii();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void revSwitch__10dSv_info_cFii();
extern "C" void onItem__10dSv_info_cFii();
extern "C" void isItem__10dSv_info_cCFii();
extern "C" void onActor__10dSv_info_cFii();
extern "C" void offActor__10dSv_info_cFii();
extern "C" void isActor__10dSv_info_cCFii();
extern "C" void memory_to_card__10dSv_info_cFPci();
extern "C" void card_to_memory__10dSv_info_cFPci();
extern "C" void initdata_to_card__10dSv_info_cFPci();
extern "C" extern u8 const tempBitLabels__20dSv_event_tmp_flag_c[370 + 2 /* padding */];
extern "C" extern char const* const d_save_d_save__stringBase0;

//
// External References:
//

SECTION_INIT void memcpy();
extern "C" void OSReport_Error();
extern "C" void setNowVibration__14dComIfG_play_cFUc();
extern "C" void getNowVibration__14dComIfG_play_cFv();
extern "C" void getZoneNo__20dStage_roomControl_cFi();
extern "C" void dComIfGs_setSelectItemIndex__FiUc();
extern "C" void dComIfGs_setMixItemIndex__FiUc();
extern "C" void dComIfGs_getMixItemIndex__Fi();
extern "C" void dComIfGp_setSelectItem__Fi();
extern "C" s32 dComIfGs_getBottleMax__Fv();
extern "C" void dComIfGs_setKeyNum__FiUc();
extern "C" void __ct__13dSv_memory2_cFv();
extern "C" void __ct__12dSv_memory_cFv();
extern "C" void clrSaveFlag__12daObjCarry_cFv();
extern "C" void setSaveFlag__12daObjCarry_cFv();
extern "C" void setInitEventBit__Fv();
extern "C" void getString__13dMeter2Info_cFUlPcP14JMSMesgEntry_c();
extern "C" void setHotSpringTimer__13dMeter2Info_cFUc();
extern "C" void setSaveStageName__13dMeter2Info_cFPCc();
extern "C" void setOutputMode__10Z2AudioMgrFUl();
extern "C" void OSGetSoundMode();
extern "C" void OSGetTime();
extern "C" void __construct_array();
extern "C" void _savegpr_22();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_22();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void __div2i();
extern "C" void printf();
extern "C" void strcpy();
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 sRumbleSupported__10JUTGamePad[4];

//
// Declarations:
//

/* 80032918-80032958 02D258 0040+00 4/4 0/0 0/0 .text            dSv_item_rename__FUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dSv_item_rename(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/dSv_item_rename__FUc.s"
}
#pragma pop

/* 80032958-80032A48 02D298 00F0+00 1/1 0/0 0/0 .text            init__21dSv_player_status_a_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_a_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__21dSv_player_status_a_cFv.s"
}
#pragma pop

/* 80032A48-80032A5C 02D388 0014+00 0/0 1/1 0/0 .text
 * setSelectItemIndex__21dSv_player_status_a_cFiUc              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_a_c::setSelectItemIndex(int param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setSelectItemIndex__21dSv_player_status_a_cFiUc.s"
}
#pragma pop

/* 80032A5C-80032A78 02D39C 001C+00 7/7 20/20 0/0 .text
 * getSelectItemIndex__21dSv_player_status_a_cCFi               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_a_c::getSelectItemIndex(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/getSelectItemIndex__21dSv_player_status_a_cCFi.s"
}
#pragma pop

/* 80032A78-80032A8C 02D3B8 0014+00 0/0 1/1 0/0 .text setMixItemIndex__21dSv_player_status_a_cFiUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_a_c::setMixItemIndex(int param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setMixItemIndex__21dSv_player_status_a_cFiUc.s"
}
#pragma pop

/* 80032A8C-80032AA8 02D3CC 001C+00 0/0 1/1 0/0 .text getMixItemIndex__21dSv_player_status_a_cCFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_a_c::getMixItemIndex(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/getMixItemIndex__21dSv_player_status_a_cCFi.s"
}
#pragma pop

/* 80032AA8-80032AF8 02D3E8 0050+00 0/0 4/4 0/0 .text getRupeeMax__21dSv_player_status_a_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_a_c::getRupeeMax() const {
    nofralloc
#include "asm/d/save/d_save/getRupeeMax__21dSv_player_status_a_cCFv.s"
}
#pragma pop

/* 80032AF8-80032B50 02D438 0058+00 0/0 1/1 0/0 .text isMagicFlag__21dSv_player_status_a_cCFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_a_c::isMagicFlag(u8 param_0) const {
    nofralloc
#include "asm/d/save/d_save/isMagicFlag__21dSv_player_status_a_cCFUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451D58-80451D5C 000358 0004+00 1/1 0/0 0/0 .sdata2          @3775 */
SECTION_SDATA2 static f32 lit_3775 = 255.0f;

/* 80032B50-80032B94 02D490 0044+00 1/1 0/0 0/0 .text            init__21dSv_player_status_b_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_b_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__21dSv_player_status_b_cFv.s"
}
#pragma pop

/* 80032B94-80032BB0 02D4D4 001C+00 0/0 1/1 0/0 .text onDarkClearLV__21dSv_player_status_b_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_b_c::onDarkClearLV(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onDarkClearLV__21dSv_player_status_b_cFi.s"
}
#pragma pop

/* 80032BB0-80032BD0 02D4F0 0020+00 0/0 4/4 8/8 .text isDarkClearLV__21dSv_player_status_b_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_b_c::isDarkClearLV(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isDarkClearLV__21dSv_player_status_b_cCFi.s"
}
#pragma pop

/* 80032BD0-80032BEC 02D510 001C+00 0/0 1/1 0/0 .text onTransformLV__21dSv_player_status_b_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_b_c::onTransformLV(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onTransformLV__21dSv_player_status_b_cFi.s"
}
#pragma pop

/* 80032BEC-80032C0C 02D52C 0020+00 0/0 8/8 9/9 .text isTransformLV__21dSv_player_status_b_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_status_b_c::isTransformLV(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isTransformLV__21dSv_player_status_b_cCFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451D5C-80451D60 00035C 0004+00 3/3 0/0 0/0 .sdata2          @3813 */
SECTION_SDATA2 static u8 lit_3813[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80032C0C-80032C64 02D54C 0058+00 1/1 0/0 0/0 .text            init__17dSv_horse_place_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_horse_place_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__17dSv_horse_place_cFv.s"
}
#pragma pop

/* 80032C64-80032CC8 02D5A4 0064+00 0/0 0/0 1/1 .text set__17dSv_horse_place_cFPCcRC4cXyzsSc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_horse_place_c::set(char const* param_0, cXyz const& param_1, s16 param_2, s8 param_3) {
    nofralloc
#include "asm/d/save/d_save/set__17dSv_horse_place_cFPCcRC4cXyzsSc.s"
}
#pragma pop

/* 80032CC8-80032D1C 02D608 0054+00 1/1 0/0 0/0 .text            init__25dSv_player_return_place_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_return_place_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__25dSv_player_return_place_cFv.s"
}
#pragma pop

/* 80032D1C-80032D60 02D65C 0044+00 0/0 0/0 1/1 .text set__25dSv_player_return_place_cFPCcScUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_return_place_c::set(char const* param_0, s8 param_1, u8 param_2) {
    nofralloc
#include "asm/d/save/d_save/set__25dSv_player_return_place_cFPCcScUc.s"
}
#pragma pop

/* 80032D60-80032DE0 02D6A0 0080+00 1/1 0/0 0/0 .text init__33dSv_player_field_last_stay_info_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_field_last_stay_info_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__33dSv_player_field_last_stay_info_cFv.s"
}
#pragma pop

/* 80032DE0-80032E4C 02D720 006C+00 0/0 2/2 0/0 .text
 * set__33dSv_player_field_last_stay_info_cFPCcRC4cXyzsScUc     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_field_last_stay_info_c::set(char const* param_0, cXyz const& param_1,
                                                s16 param_2, s8 param_3, u8 param_4) {
    nofralloc
#include "asm/d/save/d_save/set__33dSv_player_field_last_stay_info_cFPCcRC4cXyzsScUc.s"
}
#pragma pop

/* 80032E4C-80032E78 02D78C 002C+00 0/0 1/1 0/0 .text
 * onRegionBit__33dSv_player_field_last_stay_info_cFi           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_field_last_stay_info_c::onRegionBit(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onRegionBit__33dSv_player_field_last_stay_info_cFi.s"
}
#pragma pop

/* 80032E78-80032EB0 02D7B8 0038+00 0/0 2/2 0/0 .text
 * isRegionBit__33dSv_player_field_last_stay_info_cCFi          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_field_last_stay_info_c::isRegionBit(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isRegionBit__33dSv_player_field_last_stay_info_cCFi.s"
}
#pragma pop

/* 80032EB0-80032F2C 02D7F0 007C+00 1/1 0/0 0/0 .text init__27dSv_player_last_mark_info_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_last_mark_info_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__27dSv_player_last_mark_info_cFv.s"
}
#pragma pop

/* 80032F2C-80032F90 02D86C 0064+00 0/0 1/1 0/0 .text
 * setWarpItemData__27dSv_player_last_mark_info_cFPCcRC4cXyzsScUcUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_last_mark_info_c::setWarpItemData(char const* param_0, cXyz const& param_1,
                                                      s16 param_2, s8 param_3, u8 param_4,
                                                      u8 param_5) {
    nofralloc
#include "asm/d/save/d_save/setWarpItemData__27dSv_player_last_mark_info_cFPCcRC4cXyzsScUcUc.s"
}
#pragma pop

/* 80032F90-80032FB8 02D8D0 0028+00 1/1 0/0 0/0 .text            init__17dSv_player_item_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__17dSv_player_item_cFv.s"
}
#pragma pop

/* 80032FB8-80033030 02D8F8 0078+00 11/11 45/45 2/2 .text setItem__17dSv_player_item_cFiUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setItem(int param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setItem__17dSv_player_item_cFiUc.s"
}
#pragma pop

/* 80033030-800332F8 02D970 02C8+00 7/7 70/70 2/2 .text            getItem__17dSv_player_item_cCFib
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::getItem(int param_0, bool param_1) const {
    nofralloc
#include "asm/d/save/d_save/getItem__17dSv_player_item_cCFib.s"
}
#pragma pop

/* ############################################################################################## */
/* 803A7270-803A7288 004390 0017+01 1/1 0/0 0/0 .data            i_item_lst$4006 */
SECTION_DATA static u8 i_item_lst[23 + 1 /* padding */] = {
    0x0A,
    0x08,
    0x06,
    0x02,
    0x09,
    0x04,
    0x03,
    0x00,
    0x01,
    0x17,
    0x14,
    0x05,
    0x0F,
    0x10,
    0x11,
    0x0B,
    0x0C,
    0x0D,
    0x0E,
    0x13,
    0x12,
    0x16,
    0x15,
    /* padding */
    0x00,
};

/* 800332F8-80033354 02DC38 005C+00 2/2 0/0 0/0 .text setLineUpItem__17dSv_player_item_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setLineUpItem() {
    nofralloc
#include "asm/d/save/d_save/setLineUpItem__17dSv_player_item_cFv.s"
}
#pragma pop

/* 80033354-80033370 02DC94 001C+00 0/0 2/2 0/0 .text getLineUpItem__17dSv_player_item_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::getLineUpItem(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/getLineUpItem__17dSv_player_item_cCFi.s"
}
#pragma pop

/* 80033370-80033450 02DCB0 00E0+00 1/1 2/2 0/0 .text setBottleItemIn__17dSv_player_item_cFUcUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setBottleItemIn(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setBottleItemIn__17dSv_player_item_cFUcUc.s"
}
#pragma pop

/* 80033450-80033494 02DD90 0044+00 0/0 26/26 0/0 .text
 * setEmptyBottleItemIn__17dSv_player_item_cFUc                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setEmptyBottleItemIn(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/setEmptyBottleItemIn__17dSv_player_item_cFUc.s"
}
#pragma pop

/* 80033494-80033514 02DDD4 0080+00 0/0 1/1 1/1 .text setEmptyBottle__17dSv_player_item_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setEmptyBottle() {
    nofralloc
#include "asm/d/save/d_save/setEmptyBottle__17dSv_player_item_cFv.s"
}
#pragma pop

/* 80033514-80033598 02DE54 0084+00 0/0 3/3 0/0 .text setEmptyBottle__17dSv_player_item_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setEmptyBottle(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/setEmptyBottle__17dSv_player_item_cFUc.s"
}
#pragma pop

/* 80033598-800336BC 02DED8 0124+00 1/1 3/3 0/0 .text
 * setEquipBottleItemIn__17dSv_player_item_cFUcUc               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setEquipBottleItemIn(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setEquipBottleItemIn__17dSv_player_item_cFUcUc.s"
}
#pragma pop

/* 800336BC-800336E0 02DFFC 0024+00 0/0 4/4 0/0 .text
 * setEquipBottleItemEmpty__17dSv_player_item_cFUc              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setEquipBottleItemEmpty(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/setEquipBottleItemEmpty__17dSv_player_item_cFUc.s"
}
#pragma pop

/* 800336E0-80033754 02E020 0074+00 0/0 30/30 0/0 .text checkBottle__17dSv_player_item_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::checkBottle(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/checkBottle__17dSv_player_item_cFUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 803A7288-803A78F8 0043A8 066C+04 2/2 45/45 148/148 .data saveBitLabels__16dSv_event_flag_c */
SECTION_DATA extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */] = {
    0xFF,
    0xFF,
    0x00,
    0x80,
    0x00,
    0x40,
    0x00,
    0x20,
    0x00,
    0x10,
    0x00,
    0x08,
    0x00,
    0x04,
    0x00,
    0x02,
    0x00,
    0x01,
    0x01,
    0x80,
    0x01,
    0x40,
    0x01,
    0x20,
    0x01,
    0x10,
    0x01,
    0x08,
    0x01,
    0x04,
    0x01,
    0x02,
    0x01,
    0x01,
    0x02,
    0x80,
    0x02,
    0x40,
    0x02,
    0x20,
    0x02,
    0x10,
    0x02,
    0x08,
    0x02,
    0x04,
    0x02,
    0x02,
    0x02,
    0x01,
    0x03,
    0x80,
    0x03,
    0x40,
    0x03,
    0x20,
    0x03,
    0x10,
    0x03,
    0x08,
    0x03,
    0x04,
    0x03,
    0x02,
    0x03,
    0x01,
    0x04,
    0x80,
    0x04,
    0x40,
    0x04,
    0x20,
    0x04,
    0x10,
    0x04,
    0x08,
    0x04,
    0x04,
    0x04,
    0x02,
    0x04,
    0x01,
    0x05,
    0x80,
    0x05,
    0x40,
    0x05,
    0x20,
    0x05,
    0x10,
    0x05,
    0x08,
    0x05,
    0x04,
    0x05,
    0x02,
    0x05,
    0x01,
    0x06,
    0x80,
    0x06,
    0x40,
    0x06,
    0x20,
    0x06,
    0x10,
    0x06,
    0x08,
    0x06,
    0x04,
    0x06,
    0x02,
    0x06,
    0x01,
    0x07,
    0x80,
    0x07,
    0x40,
    0x07,
    0x20,
    0x07,
    0x10,
    0x07,
    0x08,
    0x07,
    0x04,
    0x07,
    0x02,
    0x07,
    0x01,
    0x08,
    0x80,
    0x08,
    0x40,
    0x08,
    0x20,
    0x08,
    0x10,
    0x08,
    0x08,
    0x08,
    0x04,
    0x08,
    0x02,
    0x08,
    0x01,
    0x09,
    0x80,
    0x09,
    0x40,
    0x09,
    0x20,
    0x09,
    0x10,
    0x09,
    0x08,
    0x09,
    0x04,
    0x09,
    0x02,
    0x09,
    0x01,
    0x0A,
    0x80,
    0x0A,
    0x40,
    0x0A,
    0x20,
    0x0A,
    0x10,
    0x0A,
    0x08,
    0x0A,
    0x04,
    0x0A,
    0x02,
    0x0A,
    0x01,
    0x0B,
    0x80,
    0x0B,
    0x40,
    0x0B,
    0x20,
    0x0B,
    0x10,
    0x0B,
    0x08,
    0x0B,
    0x04,
    0x0B,
    0x02,
    0x0B,
    0x01,
    0x0C,
    0x80,
    0x0C,
    0x40,
    0x0C,
    0x20,
    0x0C,
    0x10,
    0x0C,
    0x08,
    0x0C,
    0x04,
    0x0C,
    0x02,
    0x0C,
    0x01,
    0x0D,
    0x80,
    0x0D,
    0x40,
    0x0D,
    0x20,
    0x0D,
    0x10,
    0x0D,
    0x08,
    0x0D,
    0x04,
    0x0D,
    0x02,
    0x0D,
    0x01,
    0x0E,
    0x80,
    0x0E,
    0x40,
    0x0E,
    0x20,
    0x0E,
    0x10,
    0x0E,
    0x08,
    0x0E,
    0x04,
    0x0E,
    0x02,
    0x0E,
    0x01,
    0x0F,
    0x80,
    0x0F,
    0x40,
    0x0F,
    0x20,
    0x0F,
    0x10,
    0x0F,
    0x08,
    0x0F,
    0x04,
    0x0F,
    0x02,
    0x0F,
    0x01,
    0x10,
    0x80,
    0x10,
    0x40,
    0x10,
    0x20,
    0x10,
    0x10,
    0x10,
    0x08,
    0x10,
    0x04,
    0x10,
    0x02,
    0x10,
    0x01,
    0x11,
    0x80,
    0x11,
    0x40,
    0x11,
    0x20,
    0x11,
    0x10,
    0x11,
    0x08,
    0x11,
    0x04,
    0x11,
    0x02,
    0x11,
    0x01,
    0x12,
    0x80,
    0x12,
    0x40,
    0x12,
    0x20,
    0x12,
    0x10,
    0x12,
    0x08,
    0x12,
    0x04,
    0x12,
    0x02,
    0x12,
    0x01,
    0x13,
    0x80,
    0x13,
    0x40,
    0x13,
    0x20,
    0x13,
    0x10,
    0x13,
    0x08,
    0x13,
    0x04,
    0x13,
    0x02,
    0x13,
    0x01,
    0x14,
    0x80,
    0x14,
    0x40,
    0x14,
    0x20,
    0x14,
    0x10,
    0x14,
    0x08,
    0x14,
    0x04,
    0x14,
    0x02,
    0x14,
    0x01,
    0x15,
    0x80,
    0x15,
    0x40,
    0x15,
    0x20,
    0x15,
    0x10,
    0x15,
    0x08,
    0x15,
    0x04,
    0x15,
    0x02,
    0x15,
    0x01,
    0x16,
    0x80,
    0x16,
    0x40,
    0x16,
    0x20,
    0x16,
    0x10,
    0x16,
    0x08,
    0x16,
    0x04,
    0x16,
    0x02,
    0x16,
    0x01,
    0xFF,
    0x1F,
    0x17,
    0x80,
    0x17,
    0x40,
    0x17,
    0x20,
    0x17,
    0x10,
    0x17,
    0x08,
    0x17,
    0x04,
    0x17,
    0x02,
    0x17,
    0x01,
    0x18,
    0x80,
    0x18,
    0x40,
    0x18,
    0x20,
    0x18,
    0x10,
    0xFE,
    0xFF,
    0xFD,
    0xFF,
    0xFC,
    0xFF,
    0xFB,
    0xFF,
    0x18,
    0x08,
    0x18,
    0x04,
    0x18,
    0x02,
    0x18,
    0x01,
    0x19,
    0x80,
    0x19,
    0x40,
    0x19,
    0x20,
    0x19,
    0x10,
    0x19,
    0x08,
    0x19,
    0x04,
    0x19,
    0x02,
    0x19,
    0x01,
    0x1A,
    0x80,
    0x1A,
    0x40,
    0x1A,
    0x20,
    0x1A,
    0x10,
    0x1A,
    0x08,
    0x1A,
    0x04,
    0x1A,
    0x02,
    0x1A,
    0x01,
    0x1B,
    0x80,
    0x1B,
    0x40,
    0x1B,
    0x20,
    0x1B,
    0x10,
    0x1B,
    0x08,
    0x1B,
    0x04,
    0x1B,
    0x02,
    0x1B,
    0x01,
    0x1C,
    0x80,
    0x1C,
    0x40,
    0x1C,
    0x20,
    0x1C,
    0x10,
    0x1C,
    0x08,
    0x1C,
    0x04,
    0x1C,
    0x02,
    0x1C,
    0x01,
    0x1D,
    0x80,
    0x1D,
    0x40,
    0x1D,
    0x20,
    0x1D,
    0x10,
    0x1D,
    0x08,
    0x1D,
    0x04,
    0x1D,
    0x02,
    0x1D,
    0x01,
    0x1E,
    0x80,
    0x1E,
    0x40,
    0x1E,
    0x20,
    0x1E,
    0x10,
    0x1E,
    0x08,
    0x1E,
    0x04,
    0x1E,
    0x02,
    0x1E,
    0x01,
    0x1F,
    0x80,
    0x1F,
    0x40,
    0x1F,
    0x20,
    0x1F,
    0x10,
    0x1F,
    0x08,
    0x1F,
    0x04,
    0x1F,
    0x02,
    0x1F,
    0x01,
    0x20,
    0x80,
    0x20,
    0x40,
    0x20,
    0x20,
    0x20,
    0x10,
    0x20,
    0x08,
    0x20,
    0x04,
    0x20,
    0x02,
    0x20,
    0x01,
    0x21,
    0x80,
    0x21,
    0x40,
    0x21,
    0x20,
    0x21,
    0x10,
    0x21,
    0x08,
    0x21,
    0x04,
    0x21,
    0x02,
    0x21,
    0x01,
    0x22,
    0x80,
    0x22,
    0x40,
    0x22,
    0x20,
    0x22,
    0x10,
    0x22,
    0x08,
    0x22,
    0x04,
    0x22,
    0x02,
    0x22,
    0x01,
    0x23,
    0x80,
    0x23,
    0x40,
    0x23,
    0x20,
    0x23,
    0x10,
    0x23,
    0x08,
    0x23,
    0x04,
    0x23,
    0x02,
    0x23,
    0x01,
    0x24,
    0x80,
    0x24,
    0x40,
    0x24,
    0x20,
    0x24,
    0x10,
    0x24,
    0x08,
    0x24,
    0x04,
    0x24,
    0x02,
    0x24,
    0x01,
    0x25,
    0x80,
    0x25,
    0x40,
    0x25,
    0x20,
    0x25,
    0x10,
    0x25,
    0x08,
    0x25,
    0x04,
    0x25,
    0x02,
    0x25,
    0x01,
    0x26,
    0x80,
    0x26,
    0x40,
    0x26,
    0x20,
    0x26,
    0x10,
    0x26,
    0x08,
    0x26,
    0x04,
    0x26,
    0x02,
    0x26,
    0x01,
    0x27,
    0x80,
    0x27,
    0x40,
    0x27,
    0x20,
    0x27,
    0x10,
    0x27,
    0x08,
    0x27,
    0x04,
    0x27,
    0x02,
    0x27,
    0x01,
    0x28,
    0x80,
    0x28,
    0x40,
    0x28,
    0x20,
    0x28,
    0x10,
    0x28,
    0x08,
    0x28,
    0x04,
    0x28,
    0x02,
    0x28,
    0x01,
    0x29,
    0x80,
    0x29,
    0x40,
    0x29,
    0x20,
    0x29,
    0x10,
    0x29,
    0x08,
    0x29,
    0x04,
    0x29,
    0x02,
    0x29,
    0x01,
    0x2A,
    0x80,
    0x2A,
    0x40,
    0x2A,
    0x20,
    0x2A,
    0x10,
    0x2A,
    0x08,
    0x2A,
    0x04,
    0x2A,
    0x02,
    0x2A,
    0x01,
    0x2B,
    0x80,
    0x2B,
    0x40,
    0x2B,
    0x20,
    0x2B,
    0x10,
    0x2B,
    0x08,
    0x2B,
    0x04,
    0x2B,
    0x02,
    0x2B,
    0x01,
    0x2C,
    0x80,
    0x2C,
    0x40,
    0x2C,
    0x20,
    0x2C,
    0x10,
    0x2C,
    0x08,
    0x2C,
    0x04,
    0x2C,
    0x02,
    0x2C,
    0x01,
    0x2D,
    0x80,
    0x2D,
    0x40,
    0x2D,
    0x20,
    0x2D,
    0x10,
    0x2D,
    0x08,
    0x2D,
    0x04,
    0x2D,
    0x02,
    0x2D,
    0x01,
    0x2E,
    0x80,
    0x2E,
    0x40,
    0x2E,
    0x20,
    0x2E,
    0x10,
    0x2E,
    0x08,
    0x2E,
    0x04,
    0x2E,
    0x02,
    0x2E,
    0x01,
    0x2F,
    0x80,
    0x2F,
    0x40,
    0x2F,
    0x20,
    0x2F,
    0x10,
    0x2F,
    0x08,
    0x2F,
    0x04,
    0x2F,
    0x02,
    0x2F,
    0x01,
    0x30,
    0x80,
    0x30,
    0x40,
    0x30,
    0x20,
    0x30,
    0x10,
    0x30,
    0x08,
    0x30,
    0x04,
    0x30,
    0x02,
    0x30,
    0x01,
    0x31,
    0x80,
    0x31,
    0x40,
    0x31,
    0x20,
    0x31,
    0x10,
    0x31,
    0x08,
    0x31,
    0x04,
    0x31,
    0x02,
    0x31,
    0x01,
    0x32,
    0x80,
    0x32,
    0x40,
    0x32,
    0x20,
    0x32,
    0x10,
    0x32,
    0x08,
    0x32,
    0x04,
    0x32,
    0x02,
    0x32,
    0x01,
    0x33,
    0x80,
    0x33,
    0x40,
    0x33,
    0x20,
    0x33,
    0x10,
    0x33,
    0x08,
    0x33,
    0x04,
    0x33,
    0x02,
    0x33,
    0x01,
    0x34,
    0x80,
    0x34,
    0x40,
    0x34,
    0x20,
    0x34,
    0x10,
    0x34,
    0x08,
    0x34,
    0x04,
    0x34,
    0x02,
    0x34,
    0x01,
    0x35,
    0x80,
    0x35,
    0x40,
    0x35,
    0x20,
    0x35,
    0x10,
    0x35,
    0x08,
    0x35,
    0x04,
    0x35,
    0x02,
    0x35,
    0x01,
    0x36,
    0x80,
    0x36,
    0x40,
    0x36,
    0x20,
    0x36,
    0x10,
    0x36,
    0x08,
    0x36,
    0x04,
    0x36,
    0x02,
    0x36,
    0x01,
    0x37,
    0x80,
    0x37,
    0x40,
    0x37,
    0x20,
    0x37,
    0x10,
    0x37,
    0x08,
    0xFA,
    0xFF,
    0xF9,
    0xFF,
    0x37,
    0x04,
    0x37,
    0x02,
    0x37,
    0x01,
    0x38,
    0x80,
    0x38,
    0x40,
    0x38,
    0x20,
    0x38,
    0x10,
    0x38,
    0x08,
    0x38,
    0x04,
    0x38,
    0x02,
    0x38,
    0x01,
    0x39,
    0x80,
    0x39,
    0x40,
    0x39,
    0x20,
    0x39,
    0x10,
    0x39,
    0x08,
    0x39,
    0x04,
    0x39,
    0x02,
    0x39,
    0x01,
    0x3A,
    0x80,
    0x3A,
    0x40,
    0x3A,
    0x20,
    0x3A,
    0x10,
    0x3A,
    0x08,
    0x3A,
    0x04,
    0x3A,
    0x02,
    0x3A,
    0x01,
    0x3B,
    0x80,
    0x3B,
    0x40,
    0x3B,
    0x20,
    0x3B,
    0x10,
    0x3B,
    0x08,
    0x3B,
    0x04,
    0x3B,
    0x02,
    0x3B,
    0x01,
    0x3C,
    0x80,
    0x3C,
    0x40,
    0x3C,
    0x20,
    0x3C,
    0x10,
    0x3C,
    0x08,
    0x3C,
    0x04,
    0x3C,
    0x02,
    0x3C,
    0x01,
    0x3D,
    0x80,
    0x3D,
    0x40,
    0x3D,
    0x20,
    0x3D,
    0x10,
    0x3D,
    0x08,
    0x3D,
    0x04,
    0x3D,
    0x02,
    0x3D,
    0x01,
    0x3E,
    0x80,
    0x3E,
    0x40,
    0x3E,
    0x20,
    0x3E,
    0x10,
    0x3E,
    0x08,
    0x3E,
    0x04,
    0x3E,
    0x02,
    0xF8,
    0xFF,
    0xF7,
    0xFF,
    0x3E,
    0x01,
    0x3F,
    0x80,
    0x3F,
    0x40,
    0x3F,
    0x20,
    0x3F,
    0x10,
    0x3F,
    0x08,
    0x3F,
    0x04,
    0x3F,
    0x02,
    0x3F,
    0x01,
    0x40,
    0x80,
    0x40,
    0x40,
    0x40,
    0x20,
    0x40,
    0x10,
    0x40,
    0x08,
    0x40,
    0x04,
    0x40,
    0x02,
    0x40,
    0x01,
    0x41,
    0x80,
    0x41,
    0x40,
    0x41,
    0x20,
    0x41,
    0x10,
    0x41,
    0x08,
    0x41,
    0x04,
    0x41,
    0x02,
    0x41,
    0x01,
    0x42,
    0x80,
    0x42,
    0x40,
    0x42,
    0x20,
    0x42,
    0x10,
    0x42,
    0x08,
    0x42,
    0x04,
    0x42,
    0x02,
    0x42,
    0x01,
    0x43,
    0x80,
    0x43,
    0x40,
    0x43,
    0x20,
    0x43,
    0x10,
    0x43,
    0x08,
    0x43,
    0x04,
    0x43,
    0x02,
    0x43,
    0x01,
    0x44,
    0x80,
    0x44,
    0x40,
    0x44,
    0x20,
    0x44,
    0x10,
    0x44,
    0x08,
    0x44,
    0x04,
    0x44,
    0x02,
    0x44,
    0x01,
    0x45,
    0x80,
    0x45,
    0x40,
    0x45,
    0x20,
    0x45,
    0x10,
    0x45,
    0x08,
    0x45,
    0x04,
    0x45,
    0x02,
    0x45,
    0x01,
    0x46,
    0x80,
    0x46,
    0x40,
    0x46,
    0x20,
    0x46,
    0x10,
    0x46,
    0x08,
    0x46,
    0x04,
    0x46,
    0x02,
    0x46,
    0x01,
    0x47,
    0x80,
    0x47,
    0x40,
    0x47,
    0x20,
    0x47,
    0x10,
    0x47,
    0x08,
    0x47,
    0x04,
    0x47,
    0x02,
    0x47,
    0x01,
    0x48,
    0x80,
    0x48,
    0x40,
    0x48,
    0x20,
    0x48,
    0x10,
    0x48,
    0x08,
    0x48,
    0x04,
    0x48,
    0x02,
    0x48,
    0x01,
    0x49,
    0x80,
    0x49,
    0x40,
    0x49,
    0x20,
    0x49,
    0x10,
    0x49,
    0x08,
    0x49,
    0x04,
    0x49,
    0x02,
    0x49,
    0x01,
    0xFF,
    0xFF,
    0x4A,
    0x40,
    0x4A,
    0x20,
    0x4A,
    0x10,
    0x4A,
    0x08,
    0x4A,
    0x04,
    0x4A,
    0x02,
    0x4A,
    0x01,
    0x4B,
    0x80,
    0x4B,
    0x40,
    0x4B,
    0x20,
    0x4B,
    0x10,
    0x4B,
    0x08,
    0x4B,
    0x04,
    0x4B,
    0x02,
    0x4B,
    0x01,
    0x4C,
    0x80,
    0x4C,
    0x40,
    0x4C,
    0x20,
    0x4C,
    0x10,
    0x4C,
    0x08,
    0x4C,
    0x04,
    0x4C,
    0x02,
    0x4C,
    0x01,
    0x4D,
    0x80,
    0x4D,
    0x40,
    0x4D,
    0x20,
    0x4D,
    0x10,
    0x4D,
    0x08,
    0x4A,
    0x80,
    0x4D,
    0x04,
    0x4D,
    0x02,
    0x4D,
    0x01,
    0x4E,
    0x80,
    0x4E,
    0x40,
    0x4E,
    0x20,
    0x4E,
    0x10,
    0x4E,
    0x08,
    0x4E,
    0x04,
    0x4E,
    0x02,
    0x4E,
    0x01,
    0x4F,
    0x80,
    0x4F,
    0x40,
    0x4F,
    0x20,
    0x4F,
    0x10,
    0x4F,
    0x08,
    0x4F,
    0x04,
    0x4F,
    0x02,
    0x4F,
    0x01,
    0x50,
    0x80,
    0x50,
    0x40,
    0x50,
    0x20,
    0x50,
    0x10,
    0x50,
    0x08,
    0x50,
    0x04,
    0x50,
    0x02,
    0x50,
    0x01,
    0x51,
    0x80,
    0x51,
    0x40,
    0x51,
    0x20,
    0x51,
    0x10,
    0x51,
    0x08,
    0x51,
    0x04,
    0x51,
    0x02,
    0x51,
    0x01,
    0x52,
    0x80,
    0x52,
    0x40,
    0x52,
    0x20,
    0x52,
    0x10,
    0x52,
    0x08,
    0x52,
    0x04,
    0x52,
    0x02,
    0x52,
    0x01,
    0x53,
    0x80,
    0x53,
    0x40,
    0x53,
    0x20,
    0x53,
    0x10,
    0x53,
    0x08,
    0x53,
    0x04,
    0x53,
    0x02,
    0x53,
    0x01,
    0x54,
    0x80,
    0x54,
    0x40,
    0x54,
    0x20,
    0x54,
    0x10,
    0x54,
    0x08,
    0x54,
    0x04,
    0x54,
    0x02,
    0x54,
    0x01,
    0x55,
    0x80,
    0x55,
    0x40,
    0x55,
    0x20,
    0x55,
    0x10,
    0x55,
    0x08,
    0x55,
    0x04,
    0x55,
    0x02,
    0x55,
    0x01,
    0x56,
    0x80,
    0x56,
    0x40,
    0x56,
    0x20,
    0x56,
    0x10,
    0x56,
    0x08,
    0x56,
    0x04,
    0x56,
    0x02,
    0x56,
    0x01,
    0x57,
    0x80,
    0x57,
    0x40,
    0x57,
    0x20,
    0xF6,
    0x3F,
    0xF5,
    0x7F,
    0xF4,
    0x7F,
    0xF3,
    0x7F,
    0xF2,
    0x7F,
    0x57,
    0x10,
    0x57,
    0x08,
    0x57,
    0x04,
    0x57,
    0x02,
    0x57,
    0x01,
    0x58,
    0x80,
    0x58,
    0x40,
    0x58,
    0x20,
    0x58,
    0x10,
    0x58,
    0x08,
    0x58,
    0x04,
    0x58,
    0x02,
    0x58,
    0x01,
    0x59,
    0x80,
    0x59,
    0x40,
    0x59,
    0x20,
    0xF1,
    0x1F,
    0x59,
    0x10,
    0x59,
    0x08,
    0x59,
    0x04,
    0x59,
    0x02,
    0x59,
    0x01,
    0x5A,
    0x80,
    0x5A,
    0x40,
    0x5A,
    0x20,
    0x5A,
    0x10,
    0x5A,
    0x08,
    0x5A,
    0x04,
    0x5A,
    0x02,
    0x5A,
    0x01,
    0x5B,
    0x80,
    0x5B,
    0x40,
    0x5B,
    0x20,
    0x5B,
    0x10,
    0x5B,
    0x08,
    0x5B,
    0x04,
    0x5B,
    0x02,
    0x5B,
    0x01,
    0x5C,
    0x80,
    0x5C,
    0x40,
    0x5C,
    0x20,
    0x5C,
    0x10,
    0x5C,
    0x08,
    0x5C,
    0x04,
    0x5C,
    0x02,
    0xF0,
    0xFF,
    0xEF,
    0xFF,
    0xEE,
    0xFF,
    0xED,
    0xFF,
    0xEC,
    0xFF,
    0xEB,
    0xFF,
    0x5C,
    0x01,
    0x5D,
    0x80,
    0x5D,
    0x40,
    0x5D,
    0x20,
    0x5D,
    0x10,
    0x5D,
    0x08,
    0x5D,
    0x04,
    0x5D,
    0x02,
    0x5D,
    0x01,
    0x5E,
    0x80,
    0x5E,
    0x40,
    0x5E,
    0x20,
    0x5E,
    0x10,
    0x5E,
    0x08,
    0x5E,
    0x04,
    0x5E,
    0x02,
    0x5E,
    0x01,
    0x5F,
    0x80,
    0x5F,
    0x40,
    0x5F,
    0x20,
    0x5F,
    0x10,
    0x5F,
    0x08,
    0x5F,
    0x04,
    0x5F,
    0x02,
    0x5F,
    0x01,
    0x60,
    0x80,
    0x60,
    0x40,
    0x60,
    0x20,
    0x60,
    0x10,
    0x60,
    0x08,
    0x60,
    0x04,
    0x60,
    0x02,
    0x60,
    0x01,
    0x61,
    0x80,
    0x61,
    0x40,
    0x61,
    0x20,
    0x61,
    0x10,
    0x61,
    0x08,
    0x61,
    0x04,
    0x61,
    0x02,
    0x61,
    0x01,
    0x62,
    0x80,
    0x62,
    0x40,
    0x62,
    0x20,
    0x62,
    0x10,
    0x62,
    0x08,
    0x62,
    0x04,
    0x62,
    0x02,
    0x62,
    0x01,
    0x63,
    0x80,
    0x63,
    0x40,
    0x63,
    0x20,
    0x63,
    0x10,
    0x63,
    0x08,
    0x63,
    0x04,
    0x63,
    0x02,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80033754-800337EC 02E094 0098+00 0/0 1/1 0/0 .text checkInsectBottle__17dSv_player_item_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::checkInsectBottle() {
    nofralloc
#include "asm/d/save/d_save/checkInsectBottle__17dSv_player_item_cFv.s"
}
#pragma pop

/* 800337EC-80033828 02E12C 003C+00 0/0 1/1 1/1 .text checkEmptyBottle__17dSv_player_item_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::checkEmptyBottle() {
    nofralloc
#include "asm/d/save/d_save/checkEmptyBottle__17dSv_player_item_cFv.s"
}
#pragma pop

/* 80033828-80033910 02E168 00E8+00 1/1 0/0 0/0 .text setBombBagItemIn__17dSv_player_item_cFUcUcb
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setBombBagItemIn(u8 param_0, u8 param_1, bool param_2) {
    nofralloc
#include "asm/d/save/d_save/setBombBagItemIn__17dSv_player_item_cFUcUcb.s"
}
#pragma pop

/* 80033910-80033A20 02E250 0110+00 1/1 0/0 0/0 .text
 * setBombBagItemIn__17dSv_player_item_cFUcUcUcb                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setBombBagItemIn(u8 param_0, u8 param_1, u8 param_2, bool param_3) {
    nofralloc
#include "asm/d/save/d_save/setBombBagItemIn__17dSv_player_item_cFUcUcUcb.s"
}
#pragma pop

/* 80033A20-80033A50 02E360 0030+00 0/0 2/2 0/0 .text
 * setEmptyBombBagItemIn__17dSv_player_item_cFUcb               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setEmptyBombBagItemIn(u8 param_0, bool param_1) {
    nofralloc
#include "asm/d/save/d_save/setEmptyBombBagItemIn__17dSv_player_item_cFUcb.s"
}
#pragma pop

/* 80033A50-80033A88 02E390 0038+00 0/0 1/1 1/1 .text
 * setEmptyBombBagItemIn__17dSv_player_item_cFUcUcb             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setEmptyBombBagItemIn(u8 param_0, u8 param_1, bool param_2) {
    nofralloc
#include "asm/d/save/d_save/setEmptyBombBagItemIn__17dSv_player_item_cFUcUcb.s"
}
#pragma pop

/* 80033A88-80033B08 02E3C8 0080+00 0/0 2/2 0/0 .text setEmptyBombBag__17dSv_player_item_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setEmptyBombBag() {
    nofralloc
#include "asm/d/save/d_save/setEmptyBombBag__17dSv_player_item_cFv.s"
}
#pragma pop

/* 80033B08-80033BEC 02E448 00E4+00 0/0 3/3 0/0 .text setEmptyBombBag__17dSv_player_item_cFUcUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setEmptyBombBag(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setEmptyBombBag__17dSv_player_item_cFUcUc.s"
}
#pragma pop

/* 80033BEC-80033C2C 02E52C 0040+00 0/0 1/1 0/0 .text checkBombBag__17dSv_player_item_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::checkBombBag(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/checkBombBag__17dSv_player_item_cFUc.s"
}
#pragma pop

/* 80033C2C-80033CBC 02E56C 0090+00 0/0 2/2 1/1 .text setWarashibeItem__17dSv_player_item_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setWarashibeItem(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/setWarashibeItem__17dSv_player_item_cFUc.s"
}
#pragma pop

/* 80033CBC-80033D40 02E5FC 0084+00 0/0 1/1 0/0 .text setRodTypeLevelUp__17dSv_player_item_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setRodTypeLevelUp() {
    nofralloc
#include "asm/d/save/d_save/setRodTypeLevelUp__17dSv_player_item_cFv.s"
}
#pragma pop

/* 80033D40-80033E40 02E680 0100+00 0/0 2/2 0/0 .text            setBaitItem__17dSv_player_item_cFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_c::setBaitItem(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/setBaitItem__17dSv_player_item_cFUc.s"
}
#pragma pop

/* 80033E40-80033E60 02E780 0020+00 1/1 0/0 0/0 .text            init__21dSv_player_get_item_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_get_item_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__21dSv_player_get_item_cFv.s"
}
#pragma pop

/* 80033E60-80033E94 02E7A0 0034+00 0/0 3/3 1/1 .text onFirstBit__21dSv_player_get_item_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_get_item_c::onFirstBit(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/onFirstBit__21dSv_player_get_item_cFUc.s"
}
#pragma pop

/* 80033E94-80033EC8 02E7D4 0034+00 0/0 7/7 1/1 .text offFirstBit__21dSv_player_get_item_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_get_item_c::offFirstBit(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/offFirstBit__21dSv_player_get_item_cFUc.s"
}
#pragma pop

/* 80033EC8-80033F00 02E808 0038+00 4/4 87/87 2/2 .text isFirstBit__21dSv_player_get_item_cCFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_get_item_c::isFirstBit(u8 param_0) const {
    nofralloc
#include "asm/d/save/d_save/isFirstBit__21dSv_player_get_item_cCFUc.s"
}
#pragma pop

/* 80033F00-80033F6C 02E840 006C+00 1/1 0/0 0/0 .text            init__24dSv_player_item_record_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_record_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__24dSv_player_item_record_cFv.s"
}
#pragma pop

/* 80033F6C-80033F7C 02E8AC 0010+00 3/3 5/5 0/0 .text setBombNum__24dSv_player_item_record_cFUcUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_record_c::setBombNum(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setBombNum__24dSv_player_item_record_cFUcUc.s"
}
#pragma pop

/* 80033F7C-80033F8C 02E8BC 0010+00 0/0 13/13 2/2 .text getBombNum__24dSv_player_item_record_cCFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_record_c::getBombNum(u8 param_0) const {
    nofralloc
#include "asm/d/save/d_save/getBombNum__24dSv_player_item_record_cCFUc.s"
}
#pragma pop

/* 80033F8C-80033F9C 02E8CC 0010+00 0/0 2/2 0/0 .text
 * setBottleNum__24dSv_player_item_record_cFUcUc                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_record_c::setBottleNum(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setBottleNum__24dSv_player_item_record_cFUcUc.s"
}
#pragma pop

/* 80033F9C-80034030 02E8DC 0094+00 0/0 1/1 0/0 .text addBottleNum__24dSv_player_item_record_cFUcs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_record_c::addBottleNum(u8 param_0, s16 param_1) {
    nofralloc
#include "asm/d/save/d_save/addBottleNum__24dSv_player_item_record_cFUcs.s"
}
#pragma pop

/* 80034030-80034040 02E970 0010+00 0/0 4/4 0/0 .text getBottleNum__24dSv_player_item_record_cCFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_record_c::getBottleNum(u8 param_0) const {
    nofralloc
#include "asm/d/save/d_save/getBottleNum__24dSv_player_item_record_cCFUc.s"
}
#pragma pop

/* 80034040-800340B8 02E980 0078+00 1/1 0/0 0/0 .text            init__21dSv_player_item_max_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_max_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__21dSv_player_item_max_cFv.s"
}
#pragma pop

/* 800340B8-800340F8 02E9F8 0040+00 1/1 0/0 0/0 .text setBombNum__21dSv_player_item_max_cFUcUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_max_c::setBombNum(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setBombNum__21dSv_player_item_max_cFUcUc.s"
}
#pragma pop

/* 800340F8-800341AC 02EA38 00B4+00 3/3 14/14 2/2 .text getBombNum__21dSv_player_item_max_cCFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_item_max_c::getBombNum(u8 param_0) const {
    nofralloc
#include "asm/d/save/d_save/getBombNum__21dSv_player_item_max_cCFUc.s"
}
#pragma pop

/* 800341AC-800341E8 02EAEC 003C+00 1/1 0/0 0/0 .text            init__20dSv_player_collect_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_collect_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__20dSv_player_collect_cFv.s"
}
#pragma pop

/* 800341E8-80034208 02EB28 0020+00 0/0 8/8 0/0 .text setCollect__20dSv_player_collect_cFiUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_collect_c::setCollect(int param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setCollect__20dSv_player_collect_cFiUc.s"
}
#pragma pop

/* 80034208-8003422C 02EB48 0024+00 0/0 4/4 4/4 .text isCollect__20dSv_player_collect_cCFiUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_collect_c::isCollect(int param_0, u8 param_1) const {
    nofralloc
#include "asm/d/save/d_save/isCollect__20dSv_player_collect_cCFiUc.s"
}
#pragma pop

/* 8003422C-8003424C 02EB6C 0020+00 0/0 1/1 1/1 .text onCollectCrystal__20dSv_player_collect_cFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_collect_c::onCollectCrystal(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/onCollectCrystal__20dSv_player_collect_cFUc.s"
}
#pragma pop

/* 8003424C-80034270 02EB8C 0024+00 0/0 4/4 0/0 .text isCollectCrystal__20dSv_player_collect_cCFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_collect_c::isCollectCrystal(u8 param_0) const {
    nofralloc
#include "asm/d/save/d_save/isCollectCrystal__20dSv_player_collect_cCFUc.s"
}
#pragma pop

/* 80034270-80034290 02EBB0 0020+00 0/0 1/1 1/1 .text onCollectMirror__20dSv_player_collect_cFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_collect_c::onCollectMirror(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/onCollectMirror__20dSv_player_collect_cFUc.s"
}
#pragma pop

/* 80034290-800342B4 02EBD0 0024+00 0/0 4/4 0/0 .text isCollectMirror__20dSv_player_collect_cCFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_collect_c::isCollectMirror(u8 param_0) const {
    nofralloc
#include "asm/d/save/d_save/isCollectMirror__20dSv_player_collect_cCFUc.s"
}
#pragma pop

/* 800342B4-800342DC 02EBF4 0028+00 1/1 0/0 0/0 .text            init__17dSv_player_wolf_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_wolf_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__17dSv_player_wolf_cFv.s"
}
#pragma pop

/* 800342DC-80034320 02EC1C 0044+00 1/1 0/0 0/0 .text            init__16dSv_light_drop_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_light_drop_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__16dSv_light_drop_cFv.s"
}
#pragma pop

/* 80034320-80034340 02EC60 0020+00 0/0 0/0 1/1 .text setLightDropNum__16dSv_light_drop_cFUcUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_light_drop_c::setLightDropNum(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setLightDropNum__16dSv_light_drop_cFUcUc.s"
}
#pragma pop

/* 80034340-80034368 02EC80 0028+00 0/0 11/11 4/4 .text getLightDropNum__16dSv_light_drop_cCFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_light_drop_c::getLightDropNum(u8 param_0) const {
    nofralloc
#include "asm/d/save/d_save/getLightDropNum__16dSv_light_drop_cCFUc.s"
}
#pragma pop

/* 80034368-8003439C 02ECA8 0034+00 0/0 4/4 0/0 .text onLightDropGetFlag__16dSv_light_drop_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_light_drop_c::onLightDropGetFlag(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/onLightDropGetFlag__16dSv_light_drop_cFUc.s"
}
#pragma pop

/* 8003439C-800343DC 02ECDC 0040+00 0/0 8/8 2/2 .text isLightDropGetFlag__16dSv_light_drop_cCFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_light_drop_c::isLightDropGetFlag(u8 param_0) const {
    nofralloc
#include "asm/d/save/d_save/isLightDropGetFlag__16dSv_light_drop_cCFUc.s"
}
#pragma pop

/* 800343DC-80034428 02ED1C 004C+00 1/1 0/0 0/0 .text            init__17dSv_letter_info_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_letter_info_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__17dSv_letter_info_cFv.s"
}
#pragma pop

/* 80034428-8003444C 02ED68 0024+00 0/0 2/2 0/0 .text onLetterGetFlag__17dSv_letter_info_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_letter_info_c::onLetterGetFlag(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onLetterGetFlag__17dSv_letter_info_cFi.s"
}
#pragma pop

/* 8003444C-80034474 02ED8C 0028+00 0/0 4/4 0/0 .text isLetterGetFlag__17dSv_letter_info_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_letter_info_c::isLetterGetFlag(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isLetterGetFlag__17dSv_letter_info_cCFi.s"
}
#pragma pop

/* 80034474-8003449C 02EDB4 0028+00 0/0 1/1 0/0 .text onLetterReadFlag__17dSv_letter_info_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_letter_info_c::onLetterReadFlag(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onLetterReadFlag__17dSv_letter_info_cFi.s"
}
#pragma pop

/* 8003449C-800344C8 02EDDC 002C+00 0/0 3/3 0/0 .text isLetterReadFlag__17dSv_letter_info_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_letter_info_c::isLetterReadFlag(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isLetterReadFlag__17dSv_letter_info_cCFi.s"
}
#pragma pop

/* 800344C8-800344FC 02EE08 0034+00 1/1 0/0 0/0 .text            init__18dSv_fishing_info_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_fishing_info_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__18dSv_fishing_info_cFv.s"
}
#pragma pop

/* 800344FC-80034518 02EE3C 001C+00 0/0 0/0 1/1 .text addFishCount__18dSv_fishing_info_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_fishing_info_c::addFishCount(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/addFishCount__18dSv_fishing_info_cFUc.s"
}
#pragma pop

/* 80034518-800345AC 02EE58 0094+00 1/1 0/0 0/0 .text            init__17dSv_player_info_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_info_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__17dSv_player_info_cFv.s"
}
#pragma pop

/* 800345AC-80034644 02EEEC 0098+00 1/1 0/0 0/0 .text            init__19dSv_player_config_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_config_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__19dSv_player_config_cFv.s"
}
#pragma pop

/* 80034644-80034684 02EF84 0040+00 0/0 4/4 0/0 .text checkVibration__19dSv_player_config_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_config_c::checkVibration() const {
    nofralloc
#include "asm/d/save/d_save/checkVibration__19dSv_player_config_cCFv.s"
}
#pragma pop

/* 80034684-8003468C 02EFC4 0008+00 1/1 2/2 0/0 .text            getSound__19dSv_player_config_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_config_c::getSound() {
    nofralloc
#include "asm/d/save/d_save/getSound__19dSv_player_config_cFv.s"
}
#pragma pop

/* 8003468C-80034694 02EFCC 0008+00 1/1 1/1 0/0 .text            setSound__19dSv_player_config_cFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_config_c::setSound(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/setSound__19dSv_player_config_cFUc.s"
}
#pragma pop

/* 80034694-8003469C 02EFD4 0008+00 1/1 1/1 0/0 .text getVibration__19dSv_player_config_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_config_c::getVibration() {
    nofralloc
#include "asm/d/save/d_save/getVibration__19dSv_player_config_cFv.s"
}
#pragma pop

/* 8003469C-800346A4 02EFDC 0008+00 0/0 1/1 0/0 .text setVibration__19dSv_player_config_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_config_c::setVibration(u8 param_0) {
    nofralloc
#include "asm/d/save/d_save/setVibration__19dSv_player_config_cFUc.s"
}
#pragma pop

/* 800346A4-80034750 02EFE4 00AC+00 1/1 0/0 0/0 .text            init__12dSv_player_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_player_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__12dSv_player_cFv.s"
}
#pragma pop

/* 80034750-800347A0 02F090 0050+00 1/1 0/0 0/0 .text            init__12dSv_memBit_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__12dSv_memBit_cFv.s"
}
#pragma pop

/* 800347A0-800347C4 02F0E0 0024+00 0/0 0/0 15/15 .text            onTbox__12dSv_memBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::onTbox(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onTbox__12dSv_memBit_cFi.s"
}
#pragma pop

/* 800347C4-800347E8 02F104 0024+00 0/0 0/0 5/5 .text            offTbox__12dSv_memBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::offTbox(int param_0) {
    nofralloc
#include "asm/d/save/d_save/offTbox__12dSv_memBit_cFi.s"
}
#pragma pop

/* 800347E8-80034810 02F128 0028+00 0/0 6/6 7/7 .text            isTbox__12dSv_memBit_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::isTbox(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isTbox__12dSv_memBit_cCFi.s"
}
#pragma pop

/* 80034810-80034838 02F150 0028+00 1/1 5/5 18/18 .text            onSwitch__12dSv_memBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::onSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onSwitch__12dSv_memBit_cFi.s"
}
#pragma pop

/* 80034838-80034860 02F178 0028+00 1/1 3/3 3/3 .text            offSwitch__12dSv_memBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::offSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/offSwitch__12dSv_memBit_cFi.s"
}
#pragma pop

/* 80034860-8003488C 02F1A0 002C+00 1/1 11/11 23/23 .text            isSwitch__12dSv_memBit_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::isSwitch(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isSwitch__12dSv_memBit_cCFi.s"
}
#pragma pop

/* 8003488C-800348C4 02F1CC 0038+00 1/1 0/0 0/0 .text            revSwitch__12dSv_memBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::revSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/revSwitch__12dSv_memBit_cFi.s"
}
#pragma pop

/* 800348C4-800348EC 02F204 0028+00 1/1 0/0 0/0 .text            onItem__12dSv_memBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::onItem(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onItem__12dSv_memBit_cFi.s"
}
#pragma pop

/* 800348EC-80034918 02F22C 002C+00 1/1 2/2 1/1 .text            isItem__12dSv_memBit_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::isItem(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isItem__12dSv_memBit_cCFi.s"
}
#pragma pop

/* 80034918-80034934 02F258 001C+00 0/0 8/8 18/18 .text            onDungeonItem__12dSv_memBit_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::onDungeonItem(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onDungeonItem__12dSv_memBit_cFi.s"
}
#pragma pop

/* 80034934-80034954 02F274 0020+00 0/0 27/27 47/47 .text isDungeonItem__12dSv_memBit_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memBit_c::isDungeonItem(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isDungeonItem__12dSv_memBit_cCFi.s"
}
#pragma pop

/* 80034954-8003498C 02F294 0038+00 2/2 0/0 0/0 .text            init__11dSv_event_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_event_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__11dSv_event_cFv.s"
}
#pragma pop

/* 8003498C-800349A4 02F2CC 0018+00 1/1 27/27 58/58 .text            onEventBit__11dSv_event_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_event_c::onEventBit(u16 param_0) {
    nofralloc
#include "asm/d/save/d_save/onEventBit__11dSv_event_cFUs.s"
}
#pragma pop

/* 800349A4-800349BC 02F2E4 0018+00 1/1 14/14 23/23 .text            offEventBit__11dSv_event_cFUs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_event_c::offEventBit(u16 param_0) {
    nofralloc
#include "asm/d/save/d_save/offEventBit__11dSv_event_cFUs.s"
}
#pragma pop

/* 800349BC-800349E0 02F2FC 0024+00 3/3 77/77 153/153 .text            isEventBit__11dSv_event_cCFUs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_event_c::isEventBit(u16 param_0) const {
    nofralloc
#include "asm/d/save/d_save/isEventBit__11dSv_event_cCFUs.s"
}
#pragma pop

/* 800349E0-80034A04 02F320 0024+00 0/0 12/12 17/17 .text            setEventReg__11dSv_event_cFUsUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_event_c::setEventReg(u16 param_0, u8 param_1) {
    nofralloc
#include "asm/d/save/d_save/setEventReg__11dSv_event_cFUsUc.s"
}
#pragma pop

/* 80034A04-80034A1C 02F344 0018+00 0/0 19/19 20/20 .text            getEventReg__11dSv_event_cCFUs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_event_c::getEventReg(u16 param_0) const {
    nofralloc
#include "asm/d/save/d_save/getEventReg__11dSv_event_cCFUs.s"
}
#pragma pop

/* 80034A1C-80034A64 02F35C 0048+00 1/1 0/0 0/0 .text            init__14dSv_MiniGame_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_MiniGame_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__14dSv_MiniGame_cFv.s"
}
#pragma pop

/* 80034A64-80034A84 02F3A4 0020+00 2/2 2/2 0/0 .text            init__12dSv_memory_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memory_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__12dSv_memory_cFv.s"
}
#pragma pop

/* 80034A84-80034AA4 02F3C4 0020+00 1/1 1/1 0/0 .text            init__13dSv_memory2_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memory2_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__13dSv_memory2_cFv.s"
}
#pragma pop

/* 80034AA4-80034AC8 02F3E4 0024+00 0/0 1/1 1/1 .text            onVisitedRoom__13dSv_memory2_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memory2_c::onVisitedRoom(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onVisitedRoom__13dSv_memory2_cFi.s"
}
#pragma pop

/* 80034AC8-80034AEC 02F408 0024+00 0/0 1/1 1/1 .text            offVisitedRoom__13dSv_memory2_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memory2_c::offVisitedRoom(int param_0) {
    nofralloc
#include "asm/d/save/d_save/offVisitedRoom__13dSv_memory2_cFi.s"
}
#pragma pop

/* 80034AEC-80034B14 02F42C 0028+00 0/0 4/4 0/0 .text            isVisitedRoom__13dSv_memory2_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_memory2_c::isVisitedRoom(int param_0) {
    nofralloc
#include "asm/d/save/d_save/isVisitedRoom__13dSv_memory2_cFi.s"
}
#pragma pop

/* 80034B14-80034B98 02F454 0084+00 1/1 1/1 0/0 .text            init__12dSv_danBit_cFSc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_danBit_c::init(s8 param_0) {
    nofralloc
#include "asm/d/save/d_save/init__12dSv_danBit_cFSc.s"
}
#pragma pop

/* 80034B98-80034BC0 02F4D8 0028+00 1/1 2/2 26/26 .text            onSwitch__12dSv_danBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_danBit_c::onSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onSwitch__12dSv_danBit_cFi.s"
}
#pragma pop

/* 80034BC0-80034BE8 02F500 0028+00 1/1 1/1 10/10 .text            offSwitch__12dSv_danBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_danBit_c::offSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/offSwitch__12dSv_danBit_cFi.s"
}
#pragma pop

/* 80034BE8-80034C14 02F528 002C+00 1/1 6/6 14/14 .text            isSwitch__12dSv_danBit_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_danBit_c::isSwitch(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isSwitch__12dSv_danBit_cCFi.s"
}
#pragma pop

/* 80034C14-80034C4C 02F554 0038+00 1/1 0/0 0/0 .text            revSwitch__12dSv_danBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_danBit_c::revSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/revSwitch__12dSv_danBit_cFi.s"
}
#pragma pop

/* 80034C4C-80034C74 02F58C 0028+00 1/1 0/0 0/0 .text            onItem__12dSv_danBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_danBit_c::onItem(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onItem__12dSv_danBit_cFi.s"
}
#pragma pop

/* 80034C74-80034CA0 02F5B4 002C+00 1/1 2/2 0/0 .text            isItem__12dSv_danBit_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_danBit_c::isItem(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isItem__12dSv_danBit_cCFi.s"
}
#pragma pop

/* 80034CA0-80034CEC 02F5E0 004C+00 1/1 0/0 0/0 .text            init__13dSv_zoneBit_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__13dSv_zoneBit_cFv.s"
}
#pragma pop

/* 80034CEC-80034CF8 02F62C 000C+00 0/0 3/3 0/0 .text            clearRoomSwitch__13dSv_zoneBit_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::clearRoomSwitch() {
    nofralloc
#include "asm/d/save/d_save/clearRoomSwitch__13dSv_zoneBit_cFv.s"
}
#pragma pop

/* 80034CF8-80034D04 02F638 000C+00 0/0 3/3 0/0 .text            clearRoomItem__13dSv_zoneBit_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::clearRoomItem() {
    nofralloc
#include "asm/d/save/d_save/clearRoomItem__13dSv_zoneBit_cFv.s"
}
#pragma pop

/* 80034D04-80034D2C 02F644 0028+00 1/1 1/1 0/0 .text            onSwitch__13dSv_zoneBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::onSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onSwitch__13dSv_zoneBit_cFi.s"
}
#pragma pop

/* 80034D2C-80034D50 02F66C 0024+00 1/1 1/1 0/0 .text            offSwitch__13dSv_zoneBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::offSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/offSwitch__13dSv_zoneBit_cFi.s"
}
#pragma pop

/* 80034D50-80034D78 02F690 0028+00 1/1 1/1 0/0 .text            isSwitch__13dSv_zoneBit_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::isSwitch(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isSwitch__13dSv_zoneBit_cCFi.s"
}
#pragma pop

/* 80034D78-80034DAC 02F6B8 0034+00 1/1 0/0 0/0 .text            revSwitch__13dSv_zoneBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::revSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/revSwitch__13dSv_zoneBit_cFi.s"
}
#pragma pop

/* 80034DAC-80034DC8 02F6EC 001C+00 1/1 1/1 0/0 .text            onOneSwitch__13dSv_zoneBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::onOneSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onOneSwitch__13dSv_zoneBit_cFi.s"
}
#pragma pop

/* 80034DC8-80034DE0 02F708 0018+00 1/1 1/1 0/0 .text            offOneSwitch__13dSv_zoneBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::offOneSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/offOneSwitch__13dSv_zoneBit_cFi.s"
}
#pragma pop

/* 80034DE0-80034DFC 02F720 001C+00 1/1 1/1 0/0 .text            isOneSwitch__13dSv_zoneBit_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::isOneSwitch(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isOneSwitch__13dSv_zoneBit_cCFi.s"
}
#pragma pop

/* 80034DFC-80034E24 02F73C 0028+00 1/1 0/0 0/0 .text            revOneSwitch__13dSv_zoneBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::revOneSwitch(int param_0) {
    nofralloc
#include "asm/d/save/d_save/revOneSwitch__13dSv_zoneBit_cFi.s"
}
#pragma pop

/* 80034E24-80034E50 02F764 002C+00 1/1 0/0 0/0 .text            onItem__13dSv_zoneBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::onItem(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onItem__13dSv_zoneBit_cFi.s"
}
#pragma pop

/* 80034E50-80034E7C 02F790 002C+00 1/1 1/1 0/0 .text            isItem__13dSv_zoneBit_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::isItem(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isItem__13dSv_zoneBit_cCFi.s"
}
#pragma pop

/* 80034E7C-80034E98 02F7BC 001C+00 1/1 0/0 0/0 .text            onOneItem__13dSv_zoneBit_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::onOneItem(int param_0) {
    nofralloc
#include "asm/d/save/d_save/onOneItem__13dSv_zoneBit_cFi.s"
}
#pragma pop

/* 80034E98-80034EB4 02F7D8 001C+00 1/1 1/1 0/0 .text            isOneItem__13dSv_zoneBit_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneBit_c::isOneItem(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/isOneItem__13dSv_zoneBit_cCFi.s"
}
#pragma pop

/* 80034EB4-80034ED4 02F7F4 0020+00 1/1 0/0 0/0 .text            init__15dSv_zoneActor_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneActor_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__15dSv_zoneActor_cFv.s"
}
#pragma pop

/* 80034ED4-80034EF8 02F814 0024+00 1/1 0/0 0/0 .text            on__15dSv_zoneActor_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneActor_c::on(int param_0) {
    nofralloc
#include "asm/d/save/d_save/on__15dSv_zoneActor_cFi.s"
}
#pragma pop

/* 80034EF8-80034F1C 02F838 0024+00 1/1 0/0 0/0 .text            off__15dSv_zoneActor_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneActor_c::off(int param_0) {
    nofralloc
#include "asm/d/save/d_save/off__15dSv_zoneActor_cFi.s"
}
#pragma pop

/* 80034F1C-80034F44 02F85C 0028+00 1/1 0/0 0/0 .text            is__15dSv_zoneActor_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zoneActor_c::is(int param_0) const {
    nofralloc
#include "asm/d/save/d_save/is__15dSv_zoneActor_cCFi.s"
}
#pragma pop

/* 80034F44-80034F80 02F884 003C+00 2/2 0/0 0/0 .text            init__10dSv_zone_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_zone_c::init(int param_0) {
    nofralloc
#include "asm/d/save/d_save/init__10dSv_zone_cFi.s"
}
#pragma pop

/* 80034F80-80034FA4 02F8C0 0024+00 0/0 3/3 14/14 .text setRoom__13dSv_restart_cFRC4cXyzsSc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_restart_c::setRoom(cXyz const& param_0, s16 param_1, s8 param_2) {
    nofralloc
#include "asm/d/save/d_save/setRoom__13dSv_restart_cFRC4cXyzsSc.s"
}
#pragma pop

/* 80034FA4-80034FCC 02F8E4 0028+00 0/0 2/2 0/0 .text set__17dSv_turnRestart_cFRC4cXyzsScUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_turnRestart_c::set(cXyz const& param_0, s16 param_1, s8 param_2, u32 param_3) {
    nofralloc
#include "asm/d/save/d_save/set__17dSv_turnRestart_cFRC4cXyzsScUl.s"
}
#pragma pop

/* 80034FCC-8003501C 02F90C 0050+00 0/0 2/2 0/0 .text            init__10dSv_info_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__10dSv_info_cFv.s"
}
#pragma pop

/* 8003501C-800350A8 02F95C 008C+00 2/2 0/0 0/0 .text            init__10dSv_save_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_save_c::init() {
    nofralloc
#include "asm/d/save/d_save/init__10dSv_save_cFv.s"
}
#pragma pop

/* 800350A8-800350BC 02F9E8 0014+00 0/0 6/6 1/1 .text            getSave2__10dSv_save_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_save_c::getSave2(int param_0) {
    nofralloc
#include "asm/d/save/d_save/getSave2__10dSv_save_cFi.s"
}
#pragma pop

/* 800350BC-800350F0 02F9FC 0034+00 0/0 1/1 0/0 .text            getSave__10dSv_info_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::getSave(int param_0) {
    nofralloc
#include "asm/d/save/d_save/getSave__10dSv_info_cFi.s"
}
#pragma pop

/* 800350F0-8003514C 02FA30 005C+00 0/0 2/2 0/0 .text            putSave__10dSv_info_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::putSave(int param_0) {
    nofralloc
#include "asm/d/save/d_save/putSave__10dSv_info_cFi.s"
}
#pragma pop

/* 8003514C-800351A4 02FA8C 0058+00 1/1 1/1 0/0 .text            initZone__10dSv_info_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::initZone() {
    nofralloc
#include "asm/d/save/d_save/initZone__10dSv_info_cFv.s"
}
#pragma pop

/* 800351A4-80035200 02FAE4 005C+00 0/0 1/1 0/0 .text            createZone__10dSv_info_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::createZone(int param_0) {
    nofralloc
#include "asm/d/save/d_save/createZone__10dSv_info_cFi.s"
}
#pragma pop

/* 80035200-800352B0 02FB40 00B0+00 0/0 8/8 352/352 .text            onSwitch__10dSv_info_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::onSwitch(int param_0, int param_1) {
    nofralloc
#include "asm/d/save/d_save/onSwitch__10dSv_info_cFii.s"
}
#pragma pop

/* 800352B0-80035360 02FBF0 00B0+00 0/0 2/2 93/93 .text            offSwitch__10dSv_info_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::offSwitch(int param_0, int param_1) {
    nofralloc
#include "asm/d/save/d_save/offSwitch__10dSv_info_cFii.s"
}
#pragma pop

/* 80035360-8003542C 02FCA0 00CC+00 0/0 27/27 734/734 .text            isSwitch__10dSv_info_cCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::isSwitch(int param_0, int param_1) const {
    nofralloc
#include "asm/d/save/d_save/isSwitch__10dSv_info_cCFii.s"
}
#pragma pop

/* 8003542C-800354E0 02FD6C 00B4+00 0/0 0/0 2/2 .text            revSwitch__10dSv_info_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::revSwitch(int param_0, int param_1) {
    nofralloc
#include "asm/d/save/d_save/revSwitch__10dSv_info_cFii.s"
}
#pragma pop

/* 800354E0-80035590 02FE20 00B0+00 0/0 1/1 3/3 .text            onItem__10dSv_info_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::onItem(int param_0, int param_1) {
    nofralloc
#include "asm/d/save/d_save/onItem__10dSv_info_cFii.s"
}
#pragma pop

/* 80035590-80035644 02FED0 00B4+00 0/0 1/1 3/3 .text            isItem__10dSv_info_cCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::isItem(int param_0, int param_1) const {
    nofralloc
#include "asm/d/save/d_save/isItem__10dSv_info_cCFii.s"
}
#pragma pop

/* 80035644-800356B4 02FF84 0070+00 0/0 1/1 4/4 .text            onActor__10dSv_info_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::onActor(int param_0, int param_1) {
    nofralloc
#include "asm/d/save/d_save/onActor__10dSv_info_cFii.s"
}
#pragma pop

/* 800356B4-80035724 02FFF4 0070+00 0/0 0/0 2/2 .text            offActor__10dSv_info_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::offActor(int param_0, int param_1) {
    nofralloc
#include "asm/d/save/d_save/offActor__10dSv_info_cFii.s"
}
#pragma pop

/* 80035724-80035798 030064 0074+00 0/0 3/3 0/0 .text            isActor__10dSv_info_cCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::isActor(int param_0, int param_1) const {
    nofralloc
#include "asm/d/save/d_save/isActor__10dSv_info_cCFii.s"
}
#pragma pop

/* 80035798-80035A04 0300D8 026C+00 0/0 1/1 0/0 .text            memory_to_card__10dSv_info_cFPci */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::memory_to_card(char* param_0, int param_1) {
    nofralloc
#include "asm/d/save/d_save/memory_to_card__10dSv_info_cFPci.s"
}
#pragma pop

/* 80035A04-80035BD0 030344 01CC+00 0/0 2/2 0/0 .text            card_to_memory__10dSv_info_cFPci */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::card_to_memory(char* param_0, int param_1) {
    nofralloc
#include "asm/d/save/d_save/card_to_memory__10dSv_info_cFPci.s"
}
#pragma pop

/* 80035BD0-80035C88 030510 00B8+00 0/0 3/3 0/0 .text            initdata_to_card__10dSv_info_cFPci
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSv_info_c::initdata_to_card(char* param_0, int param_1) {
    nofralloc
#include "asm/d/save/d_save/initdata_to_card__10dSv_info_cFPci.s"
}
#pragma pop

/* ############################################################################################## */
/* 803790C0-80379234 005720 0172+02 0/0 17/17 7/7 .rodata tempBitLabels__20dSv_event_tmp_flag_c */
SECTION_RODATA extern u8 const tempBitLabels__20dSv_event_tmp_flag_c[370 + 2 /* padding */] = {
    0xFF,
    0xFF,
    0xFF,
    0xFF,
    0xFF,
    0x0F,
    0xFE,
    0xFF,
    0x00,
    0x40,
    0xFD,
    0xFF,
    0xFC,
    0xFF,
    0x00,
    0x20,
    0x00,
    0x80,
    0x00,
    0x10,
    0x00,
    0x08,
    0x00,
    0x04,
    0x00,
    0x02,
    0x00,
    0x01,
    0x01,
    0x80,
    0x01,
    0x40,
    0x01,
    0x20,
    0x01,
    0x10,
    0x01,
    0x08,
    0x01,
    0x04,
    0x01,
    0x02,
    0x01,
    0x01,
    0x02,
    0x80,
    0x02,
    0x40,
    0x02,
    0x20,
    0x02,
    0x10,
    0x02,
    0x08,
    0x02,
    0x04,
    0x02,
    0x02,
    0x02,
    0x01,
    0x03,
    0x80,
    0x03,
    0x40,
    0x03,
    0x20,
    0x03,
    0x10,
    0xFB,
    0xFF,
    0x03,
    0x08,
    0x03,
    0x04,
    0x03,
    0x02,
    0x03,
    0x01,
    0x04,
    0x80,
    0x04,
    0x40,
    0x04,
    0x20,
    0x04,
    0x10,
    0x04,
    0x08,
    0x04,
    0x04,
    0x04,
    0x02,
    0x04,
    0x01,
    0x05,
    0x80,
    0x05,
    0x40,
    0x05,
    0x20,
    0x05,
    0x10,
    0x05,
    0x08,
    0x05,
    0x04,
    0x05,
    0x02,
    0x05,
    0x01,
    0x06,
    0x80,
    0x06,
    0x40,
    0x06,
    0x20,
    0x06,
    0x10,
    0x06,
    0x08,
    0x06,
    0x04,
    0x06,
    0x02,
    0x06,
    0x01,
    0x07,
    0x80,
    0x07,
    0x40,
    0x07,
    0x20,
    0x07,
    0x10,
    0x07,
    0x08,
    0x07,
    0x04,
    0x07,
    0x02,
    0x07,
    0x01,
    0x08,
    0x80,
    0x08,
    0x40,
    0x08,
    0x20,
    0x08,
    0x10,
    0x08,
    0x08,
    0x08,
    0x04,
    0x08,
    0x02,
    0x08,
    0x01,
    0x09,
    0x80,
    0x09,
    0x40,
    0x09,
    0x20,
    0x09,
    0x10,
    0x09,
    0x08,
    0x09,
    0x04,
    0x09,
    0x02,
    0x09,
    0x01,
    0x0A,
    0x80,
    0x0A,
    0x40,
    0x0A,
    0x20,
    0x0A,
    0x10,
    0x0A,
    0x08,
    0x0A,
    0x04,
    0x0A,
    0x02,
    0x0A,
    0x01,
    0x0B,
    0x80,
    0x0B,
    0x40,
    0x0B,
    0x20,
    0x0B,
    0x10,
    0x0B,
    0x08,
    0x0B,
    0x04,
    0xFA,
    0xFF,
    0xF9,
    0xFF,
    0xF8,
    0xFF,
    0xF7,
    0xFF,
    0xF6,
    0xFF,
    0xF5,
    0xFF,
    0x0B,
    0x02,
    0x0B,
    0x01,
    0x0C,
    0x80,
    0x0C,
    0x40,
    0x0C,
    0x20,
    0x0C,
    0x10,
    0x0C,
    0x08,
    0xF4,
    0xFF,
    0xF3,
    0xFF,
    0x0C,
    0x04,
    0x0C,
    0x02,
    0x0C,
    0x01,
    0x0D,
    0x80,
    0x0D,
    0x40,
    0x0D,
    0x20,
    0x0D,
    0x10,
    0x0D,
    0x08,
    0x0D,
    0x04,
    0x0D,
    0x02,
    0x0D,
    0x01,
    0x0E,
    0x80,
    0x0E,
    0x40,
    0x0E,
    0x20,
    0x0E,
    0x10,
    0x0E,
    0x08,
    0x0E,
    0x04,
    0x0E,
    0x02,
    0x0E,
    0x01,
    0x0F,
    0x80,
    0x0F,
    0x40,
    0x0F,
    0x20,
    0x0F,
    0x10,
    0x0F,
    0x08,
    0x0F,
    0x04,
    0x0F,
    0x02,
    0x0F,
    0x01,
    0x10,
    0x80,
    0x10,
    0x40,
    0x10,
    0x20,
    0x10,
    0x10,
    0x10,
    0x08,
    0x10,
    0x04,
    0x10,
    0x02,
    0x10,
    0x01,
    0x11,
    0x80,
    0x11,
    0x40,
    0x11,
    0x20,
    0x11,
    0x10,
    0x11,
    0x08,
    0x11,
    0x04,
    0x11,
    0x02,
    0x11,
    0x01,
    0x12,
    0x80,
    0x12,
    0x40,
    0x12,
    0x20,
    0x12,
    0x10,
    0x12,
    0x08,
    0x12,
    0x04,
    0x12,
    0x02,
    0x12,
    0x01,
    0x13,
    0x80,
    0x13,
    0x40,
    0x13,
    0x20,
    0x13,
    0x10,
    0x13,
    0x08,
    0x13,
    0x04,
    0x13,
    0x02,
    0x13,
    0x01,
    0x14,
    0x80,
    0x14,
    0x40,
    0x14,
    0x20,
    0x14,
    0x10,
    0x14,
    0x08,
    0x14,
    0x04,
    0x14,
    0x02,
    0x14,
    0x01,
    0x15,
    0x80,
    0xF2,
    0xFF,
    /* padding */
    0x00,
    0x00,
};
SECTION_DEAD void* const cg_803790C0 = (void*)(&tempBitLabels__20dSv_event_tmp_flag_c);

/* 80379234-80379298 005894 0062+02 8/8 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD static char const* const stringBase_80379234 = "";
SECTION_DEAD static char const* const stringBase_80379235 = "F_SP108";
SECTION_DEAD static char const* const stringBase_8037923D = "合成アイテム不定＝＝＝＞%d, %d\n";
SECTION_DEAD static char const* const stringBase_8037925D = "Write size:%d\n";
SECTION_DEAD static char const* const stringBase_8037926C = "SAVE size:%d\n";
SECTION_DEAD static char const* const stringBase_8037927A = "LOAD size:%d\n";
SECTION_DEAD static char const* const stringBase_80379288 = "INIT size:%d\n";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80379296 = "\0";
#pragma pop
