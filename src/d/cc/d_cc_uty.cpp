// 
// Generated By: dol2asm
// Translation Unit: d/cc/d_cc_uty
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/cc/d_cc_uty.h"

// 
// Types:
// 

struct fopAc_ac_c {
};

struct daPy_py_c {
	/* 80088134 */ // False False
//  bool False
bool checkCutJumpCancelTurn() const;
	/* 8015F398 */ // False False
void checkMasterSwordEquip();
};

struct dCcU_AtInfo {
};

struct dCcD_GObjInf {
	/* 800845B0 */ // False False
//  u8 False
//  int False
void getHitSeID(u8, int);
};

struct cCcD_Obj {
	/* 80263A48 */ // False False
void GetAc();
};

struct Z2Creature {
};

// 
// Forward References:
// 

// False False
//  int False
void pl_cut_LRC(int);
// False False
void cc_pl_cut_bit_get();
// True False
//  s8 False
static void getMapInfo(s8);
// True False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  int False
static void getHitId(cCcD_Obj*, int);
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void def_se_set(Z2Creature*, cCcD_Obj*, u32, fopAc_ac_c*);
// True False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
static void at_power_get(dCcU_AtInfo*);
// False False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void at_power_check(dCcU_AtInfo*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);

// False False
//  int False
extern "C" void pl_cut_LRC__Fi();
// False False
extern "C" void cc_pl_cut_bit_get__Fv();
// True False
//  s8 False
extern "C" static void getMapInfo__FSc();
// True False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  int False
extern "C" static void getHitId__FP8cCcD_Obji();
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c();
// True False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" static void at_power_get__FP11dCcU_AtInfo();
// False False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void at_power_check__FP11dCcU_AtInfo();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
//  bool False
extern "C" bool checkCutJumpCancelTurn__9daPy_py_cCFv();

// 
// External References:
// 

// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void dCcD_GetGObjInf(cCcD_Obj*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndFX(f32);

// False False
//  u8 False
//  int False
extern "C" void getHitSeID__12dCcD_GObjInfFUci();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void dCcD_GetGObjInf__FP8cCcD_Obj();
// False False
extern "C" void checkMasterSwordEquip__9daPy_py_cFv();
// False False
extern "C" void GetAc__8cCcD_ObjFv();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _restgpr_25();
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u32 __float_nan;
extern "C" extern u8 struct_80451124[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803AC418-803AC500 00E8+00 s=1 e=0 z=0  None .data      plCutLRC                                                     */
SECTION_DATA static u8 plCutLRC[232] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 800873B0-800873D4 0024+00 s=0 e=0 z=3  None .text      pl_cut_LRC__Fi                                               */
//	800873C4: 803AC418 (plCutLRC)
//	800873C8: 803AC418 (plCutLRC)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  int False
asm void pl_cut_LRC(int param_0) {
	nofralloc
#include "asm/d/cc/d_cc_uty/pl_cut_LRC__Fi.s"
}
#pragma pop


/* 800873D4-800874C4 00F0+00 s=1 e=0 z=14  None .text      cc_pl_cut_bit_get__Fv                                        */
//	800873D4: 804061C0 (g_dComIfG_gameInfo)
//	800873D8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void cc_pl_cut_bit_get() {
	nofralloc
#include "asm/d/cc/d_cc_uty/cc_pl_cut_bit_get__Fv.s"
}
#pragma pop


/* 800874C4-800874F0 002C+00 s=1 e=0 z=0  None .text      getMapInfo__FSc                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s8 False
asm static void getMapInfo(s8 param_0) {
	nofralloc
#include "asm/d/cc/d_cc_uty/getMapInfo__FSc.s"
}
#pragma pop


/* 800874F0-80087514 0024+00 s=2 e=0 z=0  None .text      getHitId__FP8cCcD_Obji                                       */
//	80087500: 800845B0 (getHitSeID__12dCcD_GObjInfFUci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  int False
asm static void getHitId(cCcD_Obj* param_0, int param_1) {
	nofralloc
#include "asm/d/cc/d_cc_uty/getHitId__FP8cCcD_Obji.s"
}
#pragma pop


/* 80087514-80087594 0080+00 s=0 e=0 z=47  None .text      def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c          */
//	8008755C: 800874F0 (getHitId__FP8cCcD_Obji)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void def_se_set(Z2Creature* param_0, cCcD_Obj* param_1, u32 param_2, fopAc_ac_c* param_3) {
	nofralloc
#include "asm/d/cc/d_cc_uty/def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c.s"
}
#pragma pop


/* 80087594-80087A58 04C4+00 s=1 e=0 z=0  None .text      at_power_get__FP11dCcU_AtInfo                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
asm static void at_power_get(dCcU_AtInfo* param_0) {
	nofralloc
#include "asm/d/cc/d_cc_uty/at_power_get__FP11dCcU_AtInfo.s"
}
#pragma pop


/* 80087A58-80087C04 01AC+00 s=1 e=0 z=38  None .text      at_power_check__FP11dCcU_AtInfo                              */
//	80087A80: 80263A48 (GetAc__8cCcD_ObjFv)
//	80087AAC: 80087594 (at_power_get__FP11dCcU_AtInfo)
//	80087AF8: 800873D4 (cc_pl_cut_bit_get__Fv)
//	80087BBC: 8008479C (dCcD_GetGObjInf__FP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
asm void at_power_check(dCcU_AtInfo* param_0) {
	nofralloc
#include "asm/d/cc/d_cc_uty/at_power_check__FP11dCcU_AtInfo.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452798-804527A0 0004+04 s=1 e=0 z=0  None .sdata2    @4212                                                        */
SECTION_SDATA2 static f32 lit_4212[1 + 1 /* padding */] = {
	0.0f,
	/* padding */
	0.0f,
};

/* 804527A0-804527A8 0008+00 s=1 e=0 z=0  None .sdata2    @4213                                                        */
SECTION_SDATA2 static f64 lit_4213 = 0.5;

/* 804527A8-804527B0 0008+00 s=1 e=0 z=0  None .sdata2    @4214                                                        */
SECTION_SDATA2 static f64 lit_4214 = 3.0;

/* 804527B0-804527B8 0008+00 s=1 e=0 z=0  None .sdata2    @4215                                                        */
SECTION_SDATA2 static u8 lit_4215[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804527B8-804527BC 0004+00 s=1 e=0 z=0  None .sdata2    @4216                                                        */
SECTION_SDATA2 static f32 lit_4216 = 100.0f;

/* 804527BC-804527C0 0004+00 s=1 e=0 z=0  None .sdata2    @4217                                                        */
SECTION_SDATA2 static f32 lit_4217 = 4000.0f;

/* 804527C0-804527C8 0004+04 s=1 e=0 z=0  None .sdata2    @4218                                                        */
SECTION_SDATA2 static f32 lit_4218[1 + 1 /* padding */] = {
	10000.0f,
	/* padding */
	0.0f,
};

/* 80087C04-80088134 0530+00 s=0 e=0 z=84  None .text      cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo                    */
//	80087C24: 803621CC (_savegpr_25)
//	80087C30: 804061C0 (g_dComIfG_gameInfo)
//	80087C34: 804061C0 (g_dComIfG_gameInfo)
//	80087C40: 80087A58 (at_power_check__FP11dCcU_AtInfo)
//	80087C6C: 80452798 (lit_4212)
//	80087C78: 80347138 (PSVECSquareMag)
//	80087C7C: 80452798 (lit_4212)
//	80087C8C: 804527A0 (lit_4213)
//	80087C94: 804527A8 (lit_4214)
//	80087CDC: 804527B0 (lit_4215)
//	80087CE8: 80450AE0 (__float_nan)
//	80087CEC: 80450AE0 (__float_nan)
//	80087D58: 80450AE0 (__float_nan)
//	80087D5C: 80450AE0 (__float_nan)
//	80087D60: 804527B8 (lit_4216)
//	80087D78: 804527BC (lit_4217)
//	80087D7C: 8026798C (cM_rndFX__Ff)
//	80087D94: 80267674 (cM_atan2s__Fff)
//	80087DCC: 804527C0 (lit_4218)
//	80087DD0: 8026798C (cM_rndFX__Ff)
//	80087DE8: 80267674 (cM_atan2s__Fff)
//	80087E18: 80267674 (cM_atan2s__Fff)
//	80087EA8: 804061C0 (g_dComIfG_gameInfo)
//	80087EAC: 804061C0 (g_dComIfG_gameInfo)
//	80087EC0: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	80087ED8: 804061C0 (g_dComIfG_gameInfo)
//	80087EDC: 804061C0 (g_dComIfG_gameInfo)
//	80087FA4: 800874F0 (getHitId__FP8cCcD_Obji)
//	80087FCC: 800874C4 (getMapInfo__FSc)
//	80087FDC: 800874F0 (getHitId__FP8cCcD_Obji)
//	80088104: 80451125 (struct_80451124)
//	80088120: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
asm void cc_at_check(fopAc_ac_c* param_0, dCcU_AtInfo* param_1) {
	nofralloc
#include "asm/d/cc/d_cc_uty/cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo.s"
}
#pragma pop


/* 80088134-8008813C 0008+00 s=0 e=1 z=0  None .text      checkCutJumpCancelTurn__9daPy_py_cCFv                        */
// False False
//  bool False
bool daPy_py_c::checkCutJumpCancelTurn() const {
	return false;
}


