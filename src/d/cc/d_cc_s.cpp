//
// Generated By: dol2asm
// Translation Unit: d/cc/d_cc_s
//

#include "d/cc/d_cc_s.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct csXyz {};

struct mDoMtx_stack_c {
    /* 8000CF0C */ void ZXYrotS(csXyz const&);
};

struct fopAc_ac_c {};

struct cXyz {};

struct dPa_control_c {
    /* 8004C218 */ void setHitMark(u16, fopAc_ac_c*, cXyz const*, csXyz const*, cXyz const*, u32);
};

struct dJntCol_c {
    /* 80036C44 */ void getHitmarkPosAndAngle(cXyz const*, csXyz const*, cXyz*, csXyz*, int) const;
};

struct cCcD_GStts {};

struct dCcD_GStts {};

struct cCcD_ShapeAttr {
    struct Shape {};
};

struct cCcD_Obj {
    /* 80263A48 */ void GetAc();
};

struct cCcD_GObjInf {};

struct cCcD_Stts {
    /* 80263934 */ void PlusCcMove(f32, f32, f32);
    /* 80263970 */ void PlusDmg(int);
};

struct dCcD_GObjInf {
    /* 800843DC */ void ChkAtNoGuard();
};

struct dCcS {
    /* 8002FF40 */ ~dCcS();
    /* 80085ED4 */ void Ct();
    /* 80085F08 */ void Dt();
    /* 80085F28 */ void ChkShieldFrontRange(cCcD_Obj*, cCcD_Obj*, int, cXyz const*);
    /* 800860F8 */ void ChkShield(cCcD_Obj*, cCcD_Obj*, dCcD_GObjInf*, dCcD_GObjInf*, cXyz const*);
    /* 800861B0 */ void CalcTgPlusDmg(cCcD_Obj*, cCcD_Obj*, cCcD_Stts*, cCcD_Stts*);
    /* 800861B4 */ void ChkAtTgHitAfterCross(bool, bool, cCcD_GObjInf const*, cCcD_GObjInf const*,
                                             cCcD_Stts*, cCcD_Stts*, cCcD_GStts*, cCcD_GStts*);
    /* 80086240 */ void SetCoGObjInf(bool, bool, cCcD_GObjInf*, cCcD_GObjInf*, cCcD_Stts*,
                                     cCcD_Stts*, cCcD_GStts*, cCcD_GStts*);
    /* 80086360 */ void GetRank(u8);
    /* 80086404 */ bool ChkNoHitGCo(cCcD_Obj*, cCcD_Obj*);
    /* 8008640C */ void SetPosCorrect(cCcD_Obj*, cXyz*, cCcD_Obj*, cXyz*, f32);
    /* 80086754 */ void CalcParticleAngle(dCcD_GObjInf*, cCcD_Stts*, cCcD_Stts*, csXyz*);
    /* 8008685C */ void ProcAtTgHitmark(bool, bool, cCcD_Obj*, cCcD_Obj*, dCcD_GObjInf*,
                                        dCcD_GObjInf*, cCcD_Stts*, cCcD_Stts*, dCcD_GStts*,
                                        dCcD_GStts*, cXyz*, bool);
    /* 80086AC0 */ void SetAtTgGObjInf(bool, bool, cCcD_Obj*, cCcD_Obj*, cCcD_GObjInf*,
                                       cCcD_GObjInf*, cCcD_Stts*, cCcD_Stts*, cCcD_GStts*,
                                       cCcD_GStts*, cXyz*);
    /* 80086D8C */ void ChkCamera(cXyz&, cXyz&, f32, fopAc_ac_c*, fopAc_ac_c*, fopAc_ac_c*);
    /* 80086FBC */ void chkCameraPoint(cXyz const&, cCcD_ShapeAttr::Shape*, fopAc_ac_c*,
                                       fopAc_ac_c*);
    /* 800872A8 */ void MoveAfterCheck();
    /* 800872AC */ void DrawAfter();
    /* 800872B0 */ void Move();
    /* 800872D0 */ void Draw();
    /* 8008730C */ void MassClear();
    /* 80087330 */ void ChkAtTgMtrlHit(u8, u8);
    /* 8008734C */ void ChkNoHitGAtTg(cCcD_GObjInf const*, cCcD_GObjInf const*, cCcD_GStts*,
                                      cCcD_GStts*);
};

struct dCcMassS_Mng {
    /* 800855E4 */ void Ct();
    /* 80085CF0 */ void Clear();
};

struct dCcD_GAtTgCoCommonBase {
    /* 80083678 */ void SetHitApid(unsigned int);
    /* 80083718 */ void SetEffCounterTimer();
    /* 80083748 */ void ChkEffCounter();
};

struct cM3dGSphS {};

struct cM3dGSph {
    /* 8026F6A8 */ void Set(cM3dGSphS const&);
};

struct cM3dGCps {
    /* 8026EF88 */ cM3dGCps();
    /* 8026EFA4 */ ~cM3dGCps();
    /* 8026F000 */ void Set(cXyz const&, cXyz const&, f32);
};

struct cM3dGAab {};

struct cCcS {
    /* 80264A94 */ void Ct();
    /* 80264B60 */ void Dt();
    /* 80265CCC */ void Move();
    /* 80265D30 */ void DrawClear();
    /* 80265DF4 */ void SetCoGCorrectProc(cCcD_Obj*, cCcD_Obj*);
};

struct cCcD_SphAttr {
    /* 8008721C */ ~cCcD_SphAttr();
    /* 802646E0 */ void CalcAabBox();
};

struct cCcD_DivideInfo {
    /* 80263368 */ void Chk(cCcD_DivideInfo const&) const;
};

struct cCcD_DivideArea {
    /* 802636A0 */ void CalcDivideInfoOverArea(cCcD_DivideInfo*, cM3dGAab const&);
};

struct cCcD_CpsAttr {
    /* 80263FC4 */ void CalcAabBox();
};

struct Vec {};

//
// Forward References:
//

extern "C" void Ct__4dCcSFv();
extern "C" void Dt__4dCcSFv();
extern "C" void ChkShieldFrontRange__4dCcSFP8cCcD_ObjP8cCcD_ObjiPC4cXyz();
extern "C" void ChkShield__4dCcSFP8cCcD_ObjP8cCcD_ObjP12dCcD_GObjInfP12dCcD_GObjInfPC4cXyz();
extern "C" void CalcTgPlusDmg__4dCcSFP8cCcD_ObjP8cCcD_ObjP9cCcD_SttsP9cCcD_Stts();
extern "C" void
ChkAtTgHitAfterCross__4dCcSFbbPC12cCcD_GObjInfPC12cCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10cCcD_GSttsP10cCcD_GStts();
extern "C" void
SetCoGObjInf__4dCcSFbbP12cCcD_GObjInfP12cCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10cCcD_GSttsP10cCcD_GStts();
extern "C" void GetRank__4dCcSFUc();
extern "C" bool ChkNoHitGCo__4dCcSFP8cCcD_ObjP8cCcD_Obj();
extern "C" void SetPosCorrect__4dCcSFP8cCcD_ObjP4cXyzP8cCcD_ObjP4cXyzf();
extern "C" void CalcParticleAngle__4dCcSFP12dCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP5csXyz();
extern "C" void
ProcAtTgHitmark__4dCcSFbbP8cCcD_ObjP8cCcD_ObjP12dCcD_GObjInfP12dCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10dCcD_GSttsP10dCcD_GSttsP4cXyzb();
extern "C" void
SetAtTgGObjInf__4dCcSFbbP8cCcD_ObjP8cCcD_ObjP12cCcD_GObjInfP12cCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10cCcD_GSttsP10cCcD_GSttsP4cXyz();
extern "C" void ChkCamera__4dCcSFR4cXyzR4cXyzfP10fopAc_ac_cP10fopAc_ac_cP10fopAc_ac_c();
extern "C" void chkCameraPoint__4dCcSFRC4cXyzPQ214cCcD_ShapeAttr5ShapeP10fopAc_ac_cP10fopAc_ac_c();
extern "C" void __dt__12cCcD_SphAttrFv();
extern "C" void MoveAfterCheck__4dCcSFv();
extern "C" void DrawAfter__4dCcSFv();
extern "C" void Move__4dCcSFv();
extern "C" void Draw__4dCcSFv();
extern "C" void MassClear__4dCcSFv();
extern "C" void ChkAtTgMtrlHit__4dCcSFUcUc();
extern "C" void ChkNoHitGAtTg__4dCcSFPC12cCcD_GObjInfPC12cCcD_GObjInfP10cCcD_GSttsP10cCcD_GStts();
extern "C" extern void* __vt__4dCcS[13];

//
// External References:
//

void cM3d_CalcVecZAngle(Vec const&, csXyz*);
void cLib_distanceAngleS(s16, s16);
void operator delete(void*);

extern "C" void ZXYrotS__14mDoMtx_stack_cFRC5csXyz();
extern "C" void __dt__4dCcSFv();
extern "C" void getHitmarkPosAndAngle__9dJntCol_cCFPC4cXyzPC5csXyzP4cXyzP5csXyzi();
extern "C" void setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl();
extern "C" void SetHitApid__22dCcD_GAtTgCoCommonBaseFUi();
extern "C" void SetEffCounterTimer__22dCcD_GAtTgCoCommonBaseFv();
extern "C" void ChkEffCounter__22dCcD_GAtTgCoCommonBaseFv();
extern "C" void ChkAtNoGuard__12dCcD_GObjInfFv();
extern "C" void Ct__12dCcMassS_MngFv();
extern "C" void Clear__12dCcMassS_MngFv();
extern "C" void Chk__15cCcD_DivideInfoCFRC15cCcD_DivideInfo();
extern "C" void CalcDivideInfoOverArea__15cCcD_DivideAreaFP15cCcD_DivideInfoRC8cM3dGAab();
extern "C" void PlusCcMove__9cCcD_SttsFfff();
extern "C" void PlusDmg__9cCcD_SttsFi();
extern "C" void GetAc__8cCcD_ObjFv();
extern "C" void CalcAabBox__12cCcD_CpsAttrFv();
extern "C" void CalcAabBox__12cCcD_SphAttrFv();
extern "C" void Ct__4cCcSFv();
extern "C" void Dt__4cCcSFv();
extern "C" void Move__4cCcSFv();
extern "C" void DrawClear__4cCcSFv();
extern "C" void SetCoGCorrectProc__4cCcSFP8cCcD_ObjP8cCcD_Obj();
extern "C" void cM3d_CalcVecZAngle__FRC3VecP5csXyz();
extern "C" void __ct__8cM3dGCpsFv();
extern "C" void __dt__8cM3dGCpsFv();
extern "C" void Set__8cM3dGCpsFRC4cXyzRC4cXyzf();
extern "C" void Set__8cM3dGSphFRC9cM3dGSphS();
extern "C" void cLib_distanceAngleS__Fss();
extern "C" void __dl__FPv();
extern "C" void PSMTXMultVecSR();
extern "C" void PSVECAdd();
extern "C" void PSVECSubtract();
extern "C" void PSVECScale();
extern "C" void PSVECNormalize();
extern "C" void PSVECMag();
extern "C" void PSVECDotProduct();
extern "C" void _savegpr_17();
extern "C" void _savegpr_23();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_29();
extern "C" void _restgpr_17();
extern "C" void _restgpr_23();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_29();
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__15cCcD_DivideInfo[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CpsAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 BaseZ__4cXyz[12];
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];

//
// Declarations:
//

/* 80085ED4-80085F08 0034+00 s=0 e=1 z=0  None .text      Ct__4dCcSFv */
//	80085EE8: 80264A94 (Ct__4cCcSFv)
//	80085EF0: 800855E4 (Ct__12dCcMassS_MngFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::Ct() {
    nofralloc
#include "asm/d/cc/d_cc_s/Ct__4dCcSFv.s"
}
#pragma pop

/* 80085F08-80085F28 0020+00 s=0 e=1 z=0  None .text      Dt__4dCcSFv */
//	80085F14: 80264B60 (Dt__4cCcSFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::Dt() {
    nofralloc
#include "asm/d/cc/d_cc_s/Dt__4dCcSFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452778-8045277C 0004+00 s=3 e=0 z=0  None .sdata2    @3705 */
SECTION_SDATA2 static u8 lit_3705[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80085F28-800860F8 01D0+00 s=1 e=0 z=0  None .text
 * ChkShieldFrontRange__4dCcSFP8cCcD_ObjP8cCcD_ObjiPC4cXyz      */
//	80085F38: 803621C8 (_savegpr_24)
//	80085F98: 80263A48 (GetAc__8cCcD_ObjFv)
//	80085FFC: 80036C44 (getHitmarkPosAndAngle__9dJntCol_cCFPC4cXyzPC5csXyzP4cXyzP5csXyzi)
//	80086024: 8000CF0C (ZXYrotS__14mDoMtx_stack_cFRC5csXyz)
//	80086028: 803DD470 (now__14mDoMtx_stack_c)
//	8008602C: 803DD470 (now__14mDoMtx_stack_c)
//	80086030: 80430D3C (BaseZ__4cXyz)
//	80086034: 80430D3C (BaseZ__4cXyz)
//	8008603C: 80346E4C (PSMTXMultVecSR)
//	80086044: 8000CF0C (ZXYrotS__14mDoMtx_stack_cFRC5csXyz)
//	80086048: 803DD470 (now__14mDoMtx_stack_c)
//	8008604C: 803DD470 (now__14mDoMtx_stack_c)
//	80086050: 80430D3C (BaseZ__4cXyz)
//	80086054: 80430D3C (BaseZ__4cXyz)
//	8008605C: 80346E4C (PSMTXMultVecSR)
//	80086068: 80347194 (PSVECDotProduct)
//	8008606C: 80452778 (lit_3705)
//	800860C4: 80270E24 (cLib_distanceAngleS__Fss)
//	800860E4: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::ChkShieldFrontRange(cCcD_Obj* param_0, cCcD_Obj* param_1, int param_2,
                                   cXyz const* param_3) {
    nofralloc
#include "asm/d/cc/d_cc_s/ChkShieldFrontRange__4dCcSFP8cCcD_ObjP8cCcD_ObjiPC4cXyz.s"
}
#pragma pop

/* 800860F8-800861B0 00B8+00 s=1 e=0 z=0  None .text
 * ChkShield__4dCcSFP8cCcD_ObjP8cCcD_ObjP12dCcD_GObjInfP12dCcD_GObjInfPC4cXyz */
//	80086108: 803621D0 (_savegpr_26)
//	80086128: 800843DC (ChkAtNoGuard__12dCcD_GObjInfFv)
//	80086184: 80085F28 (ChkShieldFrontRange__4dCcSFP8cCcD_ObjP8cCcD_ObjiPC4cXyz)
//	8008619C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::ChkShield(cCcD_Obj* param_0, cCcD_Obj* param_1, dCcD_GObjInf* param_2,
                         dCcD_GObjInf* param_3, cXyz const* param_4) {
    nofralloc
#include "asm/d/cc/d_cc_s/ChkShield__4dCcSFP8cCcD_ObjP8cCcD_ObjP12dCcD_GObjInfP12dCcD_GObjInfPC4cXyz.s"
}
#pragma pop

/* 800861B0-800861B4 0004+00 s=1 e=0 z=0  None .text
 * CalcTgPlusDmg__4dCcSFP8cCcD_ObjP8cCcD_ObjP9cCcD_SttsP9cCcD_Stts */
void dCcS::CalcTgPlusDmg(cCcD_Obj* param_0, cCcD_Obj* param_1, cCcD_Stts* param_2,
                         cCcD_Stts* param_3) {
    /* empty function */
}

/* 800861B4-80086240 008C+00 s=1 e=0 z=0  None .text
 * ChkAtTgHitAfterCross__4dCcSFbbPC12cCcD_GObjInfPC12cCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10cCcD_GSttsP10cCcD_GStts
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::ChkAtTgHitAfterCross(bool param_0, bool param_1, cCcD_GObjInf const* param_2,
                                    cCcD_GObjInf const* param_3, cCcD_Stts* param_4,
                                    cCcD_Stts* param_5, cCcD_GStts* param_6, cCcD_GStts* param_7) {
    nofralloc
#include "asm/d/cc/d_cc_s/func_800861B4.s"
}
#pragma pop

/* 80086240-80086360 0120+00 s=1 e=0 z=0  None .text
 * SetCoGObjInf__4dCcSFbbP12cCcD_GObjInfP12cCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10cCcD_GSttsP10cCcD_GStts
 */
//	80086250: 803621CC (_savegpr_25)
//	80086280: 80083678 (SetHitApid__22dCcD_GAtTgCoCommonBaseFUi)
//	800862AC: 80083678 (SetHitApid__22dCcD_GAtTgCoCommonBaseFUi)
//	800862E0: 80263A48 (GetAc__8cCcD_ObjFv)
//	800862EC: 80263A48 (GetAc__8cCcD_ObjFv)
//	80086320: 80263A48 (GetAc__8cCcD_ObjFv)
//	8008632C: 80263A48 (GetAc__8cCcD_ObjFv)
//	8008634C: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::SetCoGObjInf(bool param_0, bool param_1, cCcD_GObjInf* param_2,
                            cCcD_GObjInf* param_3, cCcD_Stts* param_4, cCcD_Stts* param_5,
                            cCcD_GStts* param_6, cCcD_GStts* param_7) {
    nofralloc
#include "asm/d/cc/d_cc_s/SetCoGObjInf__4dCcSFbbP12cCcD_GObjInfP12cCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10cCcD_GSttsP10cCcD_GStts.s"
}
#pragma pop

/* 80086360-80086404 00A4+00 s=1 e=0 z=0  None .text      GetRank__4dCcSFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::GetRank(u8 param_0) {
    nofralloc
#include "asm/d/cc/d_cc_s/GetRank__4dCcSFUc.s"
}
#pragma pop

/* 80086404-8008640C 0008+00 s=1 e=0 z=0  None .text      ChkNoHitGCo__4dCcSFP8cCcD_ObjP8cCcD_Obj */
bool dCcS::ChkNoHitGCo(cCcD_Obj* param_0, cCcD_Obj* param_1) {
    return false;
}

/* ############################################################################################## */
/* 803AC328-803AC3A4 0079+03 s=1 e=0 z=0  None .data      rank_tbl */
SECTION_DATA static u8 rank_tbl[121 + 3 /* padding */] = {
    0x00,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x00,
    0x32,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x00,
    0x00,
    0x32,
    0x4B,
    0x5A,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x00,
    0x00,
    0x19,
    0x32,
    0x4B,
    0x5A,
    0x64,
    0x64,
    0x64,
    0x64,
    0x64,
    0x00,
    0x00,
    0x0A,
    0x19,
    0x32,
    0x4B,
    0x5A,
    0x64,
    0x64,
    0x64,
    0x64,
    0x00,
    0x00,
    0x00,
    0x0A,
    0x19,
    0x32,
    0x4B,
    0x5A,
    0x64,
    0x64,
    0x64,
    0x00,
    0x00,
    0x00,
    0x00,
    0x0A,
    0x19,
    0x32,
    0x4B,
    0x5A,
    0x64,
    0x64,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x0A,
    0x19,
    0x32,
    0x4B,
    0x64,
    0x64,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x0A,
    0x19,
    0x32,
    0x64,
    0x64,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x32,
    0x64,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 8045277C-80452780 0004+00 s=1 e=0 z=0  None .sdata2    @3924 */
SECTION_SDATA2 static f32 lit_3924 = 1.0f / 100.0f;

/* 80452780-80452788 0004+04 s=2 e=0 z=0  None .sdata2    @3925 */
SECTION_SDATA2 static f32 lit_3925[1 + 1 /* padding */] = {
    -1.0f,
    /* padding */
    0.0f,
};

/* 80452788-80452790 0008+00 s=1 e=0 z=0  None .sdata2    @3927 */
SECTION_SDATA2 static f64 lit_3927 = 4503599627370496.0 /* cast u32 to float */;

/* 8008640C-80086754 0348+00 s=1 e=0 z=0  None .text
 * SetPosCorrect__4dCcSFP8cCcD_ObjP4cXyzP8cCcD_ObjP4cXyzf       */
//	80086434: 803621CC (_savegpr_25)
//	80086490: 80451180 (G_CM3D_F_ABS_MIN)
//	80086518: 80086360 (GetRank__4dCcSFUc)
//	8008652C: 80086360 (GetRank__4dCcSFUc)
//	80086534: 803AC328 (rank_tbl)
//	80086538: 803AC328 (rank_tbl)
//	80086544: 8045277C (lit_3924)
//	80086548: 80452788 (lit_3927)
//	80086594: 803470B4 (PSVECSubtract)
//	8008659C: 80347150 (PSVECMag)
//	800865B4: 80452778 (lit_3705)
//	800865F0: 80451180 (G_CM3D_F_ABS_MIN)
//	80086610: 803470D8 (PSVECScale)
//	80086614: 80452780 (lit_3925)
//	80086628: 803470D8 (PSVECScale)
//	80086638: 803470D8 (PSVECScale)
//	80086668: 80452778 (lit_3705)
//	80086694: 80452778 (lit_3705)
//	800866EC: 80263934 (PlusCcMove__9cCcD_SttsFfff)
//	80086700: 80263934 (PlusCcMove__9cCcD_SttsFfff)
//	80086710: 80347090 (PSVECAdd)
//	80086720: 80347090 (PSVECAdd)
//	80086740: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::SetPosCorrect(cCcD_Obj* param_0, cXyz* param_1, cCcD_Obj* param_2, cXyz* param_3,
                             f32 param_4) {
    nofralloc
#include "asm/d/cc/d_cc_s/SetPosCorrect__4dCcSFP8cCcD_ObjP4cXyzP8cCcD_ObjP4cXyzf.s"
}
#pragma pop

/* 80086754-8008685C 0108+00 s=1 e=0 z=0  None .text
 * CalcParticleAngle__4dCcSFP12dCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP5csXyz */
//	80086764: 803621DC (_savegpr_29)
//	80086790: 80347150 (PSVECMag)
//	8008679C: 80451180 (G_CM3D_F_ABS_MIN)
//	800867C0: 80452778 (lit_3705)
//	800867CC: 80452780 (lit_3925)
//	800867E4: 803470B4 (PSVECSubtract)
//	800867EC: 80347150 (PSVECMag)
//	800867F8: 80451180 (G_CM3D_F_ABS_MIN)
//	80086804: 80452778 (lit_3705)
//	80086810: 80452780 (lit_3925)
//	80086824: 803470F4 (PSVECNormalize)
//	80086834: 803470F4 (PSVECNormalize)
//	80086840: 8026E570 (cM3d_CalcVecZAngle__FRC3VecP5csXyz)
//	80086848: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::CalcParticleAngle(dCcD_GObjInf* param_0, cCcD_Stts* param_1, cCcD_Stts* param_2,
                                 csXyz* param_3) {
    nofralloc
#include "asm/d/cc/d_cc_s/CalcParticleAngle__4dCcSFP12dCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP5csXyz.s"
}
#pragma pop

/* 8008685C-80086AC0 0264+00 s=1 e=0 z=0  None .text
 * ProcAtTgHitmark__4dCcSFbbP8cCcD_ObjP8cCcD_ObjP12dCcD_GObjInfP12dCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10dCcD_GSttsP10dCcD_GSttsP4cXyzb
 */
//	8008686C: 803621C8 (_savegpr_24)
//	800868BC: 80263A48 (GetAc__8cCcD_ObjFv)
//	800868CC: 80263A48 (GetAc__8cCcD_ObjFv)
//	800869A8: 80263A48 (GetAc__8cCcD_ObjFv)
//	800869B0: 804061C0 (g_dComIfG_gameInfo)
//	800869B4: 804061C0 (g_dComIfG_gameInfo)
//	800869D0: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	80086A14: 80263A48 (GetAc__8cCcD_ObjFv)
//	80086A1C: 804061C0 (g_dComIfG_gameInfo)
//	80086A20: 804061C0 (g_dComIfG_gameInfo)
//	80086A3C: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	80086A7C: 80263A48 (GetAc__8cCcD_ObjFv)
//	80086A84: 804061C0 (g_dComIfG_gameInfo)
//	80086A88: 804061C0 (g_dComIfG_gameInfo)
//	80086AA4: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	80086AAC: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::ProcAtTgHitmark(bool param_0, bool param_1, cCcD_Obj* param_2, cCcD_Obj* param_3,
                               dCcD_GObjInf* param_4, dCcD_GObjInf* param_5, cCcD_Stts* param_6,
                               cCcD_Stts* param_7, dCcD_GStts* param_8, dCcD_GStts* param_9,
                               cXyz* param_10, bool param_11) {
    nofralloc
#include "asm/d/cc/d_cc_s/func_8008685C.s"
}
#pragma pop

/* 80086AC0-80086D8C 02CC+00 s=1 e=0 z=0  None .text
 * SetAtTgGObjInf__4dCcSFbbP8cCcD_ObjP8cCcD_ObjP12cCcD_GObjInfP12cCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10cCcD_GSttsP10cCcD_GSttsP4cXyz
 */
//	80086AD0: 803621AC (_savegpr_17)
//	80086B18: 800860F8 (ChkShield__4dCcSFP8cCcD_ObjP8cCcD_ObjP12dCcD_GObjInfP12dCcD_GObjInfPC4cXyz)
//	80086B7C: 80083678 (SetHitApid__22dCcD_GAtTgCoCommonBaseFUi)
//	80086C3C: 80083678 (SetHitApid__22dCcD_GAtTgCoCommonBaseFUi)
//	80086C60: 80263970 (PlusDmg__9cCcD_SttsFi)
//	80086C94: 80263A48 (GetAc__8cCcD_ObjFv)
//	80086CA0: 80263A48 (GetAc__8cCcD_ObjFv)
//	80086CD4: 80263A48 (GetAc__8cCcD_ObjFv)
//	80086CE0: 80263A48 (GetAc__8cCcD_ObjFv)
//	80086D10: 80083748 (ChkEffCounter__22dCcD_GAtTgCoCommonBaseFv)
//	80086D20: 80083748 (ChkEffCounter__22dCcD_GAtTgCoCommonBaseFv)
//	80086D30: 80083718 (SetEffCounterTimer__22dCcD_GAtTgCoCommonBaseFv)
//	80086D38: 80083718 (SetEffCounterTimer__22dCcD_GAtTgCoCommonBaseFv)
//	80086D70: 8008685C
//(ProcAtTgHitmark__4dCcSFbbP8cCcD_ObjP8cCcD_ObjP12dCcD_GObjInfP12dCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10dCcD_GSttsP10dCcD_GSttsP4cXyzb)
//	80086D78: 803621F8 (_restgpr_17)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::SetAtTgGObjInf(bool param_0, bool param_1, cCcD_Obj* param_2, cCcD_Obj* param_3,
                              cCcD_GObjInf* param_4, cCcD_GObjInf* param_5, cCcD_Stts* param_6,
                              cCcD_Stts* param_7, cCcD_GStts* param_8, cCcD_GStts* param_9,
                              cXyz* param_10) {
    nofralloc
#include "asm/d/cc/d_cc_s/func_80086AC0.s"
}
#pragma pop

/* 80086D8C-80086FBC 0230+00 s=0 e=2 z=0  None .text
 * ChkCamera__4dCcSFR4cXyzR4cXyzfP10fopAc_ac_cP10fopAc_ac_cP10fopAc_ac_c */
//	80086DA0: 803621C4 (_savegpr_23)
//	80086DE0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80086DE4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80086DEC: 803A7218 (__vt__8cM3dGAab)
//	80086DF0: 803A7218 (__vt__8cM3dGAab)
//	80086DFC: 8026EF88 (__ct__8cM3dGCpsFv)
//	80086E00: 803C3608 (__vt__12cCcD_CpsAttr)
//	80086E04: 803C3608 (__vt__12cCcD_CpsAttr)
//	80086E28: 8026F000 (Set__8cM3dGCpsFRC4cXyzRC4cXyzf)
//	80086E30: 80263FC4 (CalcAabBox__12cCcD_CpsAttrFv)
//	80086E34: 803A7224 (__vt__15cCcD_DivideInfo)
//	80086E38: 803A7224 (__vt__15cCcD_DivideInfo)
//	80086E4C: 802636A0 (CalcDivideInfoOverArea__15cCcD_DivideAreaFP15cCcD_DivideInfoRC8cM3dGAab)
//	80086E68: 80263A48 (GetAc__8cCcD_ObjFv)
//	80086E78: 80263A48 (GetAc__8cCcD_ObjFv)
//	80086E88: 80263A48 (GetAc__8cCcD_ObjFv)
//	80086EA0: 80263368 (Chk__15cCcD_DivideInfoCFRC15cCcD_DivideInfo)
//	80086F08: 803A7224 (__vt__15cCcD_DivideInfo)
//	80086F0C: 803A7224 (__vt__15cCcD_DivideInfo)
//	80086F14: 803C3608 (__vt__12cCcD_CpsAttr)
//	80086F18: 803C3608 (__vt__12cCcD_CpsAttr)
//	80086F2C: 8026EFA4 (__dt__8cM3dGCpsFv)
//	80086F30: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80086F34: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80086F3C: 803A7218 (__vt__8cM3dGAab)
//	80086F40: 803A7218 (__vt__8cM3dGAab)
//	80086F5C: 803A7224 (__vt__15cCcD_DivideInfo)
//	80086F60: 803A7224 (__vt__15cCcD_DivideInfo)
//	80086F68: 803C3608 (__vt__12cCcD_CpsAttr)
//	80086F6C: 803C3608 (__vt__12cCcD_CpsAttr)
//	80086F80: 8026EFA4 (__dt__8cM3dGCpsFv)
//	80086F84: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80086F88: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80086F90: 803A7218 (__vt__8cM3dGAab)
//	80086F94: 803A7218 (__vt__8cM3dGAab)
//	80086FA8: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::ChkCamera(cXyz& param_0, cXyz& param_1, f32 param_2, fopAc_ac_c* param_3,
                         fopAc_ac_c* param_4, fopAc_ac_c* param_5) {
    nofralloc
#include "asm/d/cc/d_cc_s/ChkCamera__4dCcSFR4cXyzR4cXyzfP10fopAc_ac_cP10fopAc_ac_cP10fopAc_ac_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452790-80452798 0004+04 s=1 e=0 z=0  None .sdata2    @4336 */
SECTION_SDATA2 static f32 lit_4336[1 + 1 /* padding */] = {
    1.0f,
    /* padding */
    0.0f,
};

/* 80086FBC-8008721C 0260+00 s=0 e=1 z=0  None .text
 * chkCameraPoint__4dCcSFRC4cXyzPQ214cCcD_ShapeAttr5ShapeP10fopAc_ac_cP10fopAc_ac_c */
//	80086FCC: 803621C8 (_savegpr_24)
//	80087000: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80087004: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8008700C: 803A7218 (__vt__8cM3dGAab)
//	80087010: 803A7218 (__vt__8cM3dGAab)
//	80087018: 803A7904 (__vt__8cM3dGSph)
//	8008701C: 803A7904 (__vt__8cM3dGSph)
//	80087028: 803C3540 (__vt__12cCcD_SphAttr)
//	8008702C: 803C3540 (__vt__12cCcD_SphAttr)
//	80087054: 80452790 (lit_4336)
//	80087064: 8026F6A8 (Set__8cM3dGSphFRC9cM3dGSphS)
//	8008706C: 802646E0 (CalcAabBox__12cCcD_SphAttrFv)
//	80087070: 803A7224 (__vt__15cCcD_DivideInfo)
//	80087074: 803A7224 (__vt__15cCcD_DivideInfo)
//	80087088: 802636A0 (CalcDivideInfoOverArea__15cCcD_DivideAreaFP15cCcD_DivideInfoRC8cM3dGAab)
//	800870A4: 80263A48 (GetAc__8cCcD_ObjFv)
//	800870B4: 80263A48 (GetAc__8cCcD_ObjFv)
//	800870CC: 80263368 (Chk__15cCcD_DivideInfoCFRC15cCcD_DivideInfo)
//	8008715C: 803A7224 (__vt__15cCcD_DivideInfo)
//	80087160: 803A7224 (__vt__15cCcD_DivideInfo)
//	80087168: 803C3540 (__vt__12cCcD_SphAttr)
//	8008716C: 803C3540 (__vt__12cCcD_SphAttr)
//	80087180: 803A7904 (__vt__8cM3dGSph)
//	80087184: 803A7904 (__vt__8cM3dGSph)
//	8008718C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80087190: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80087198: 803A7218 (__vt__8cM3dGAab)
//	8008719C: 803A7218 (__vt__8cM3dGAab)
//	800871B8: 803A7224 (__vt__15cCcD_DivideInfo)
//	800871BC: 803A7224 (__vt__15cCcD_DivideInfo)
//	800871C4: 803C3540 (__vt__12cCcD_SphAttr)
//	800871C8: 803C3540 (__vt__12cCcD_SphAttr)
//	800871DC: 803A7904 (__vt__8cM3dGSph)
//	800871E0: 803A7904 (__vt__8cM3dGSph)
//	800871E8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800871EC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800871F4: 803A7218 (__vt__8cM3dGAab)
//	800871F8: 803A7218 (__vt__8cM3dGAab)
//	80087208: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::chkCameraPoint(cXyz const& param_0, cCcD_ShapeAttr::Shape* param_1,
                              fopAc_ac_c* param_2, fopAc_ac_c* param_3) {
    nofralloc
#include "asm/d/cc/d_cc_s/chkCameraPoint__4dCcSFRC4cXyzPQ214cCcD_ShapeAttr5ShapeP10fopAc_ac_cP10fopAc_ac_c.s"
}
#pragma pop

/* 8008721C-800872A8 008C+00 s=0 e=2 z=0  None .text      __dt__12cCcD_SphAttrFv */
//	80087234: 803C3540 (__vt__12cCcD_SphAttr)
//	80087238: 803C3540 (__vt__12cCcD_SphAttr)
//	80087250: 803A7904 (__vt__8cM3dGSph)
//	80087254: 803A7904 (__vt__8cM3dGSph)
//	80087264: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80087268: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80087274: 803A7218 (__vt__8cM3dGAab)
//	80087278: 803A7218 (__vt__8cM3dGAab)
//	8008728C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_SphAttr::~cCcD_SphAttr() {
    nofralloc
#include "asm/d/cc/d_cc_s/__dt__12cCcD_SphAttrFv.s"
}
#pragma pop

/* 800872A8-800872AC 0004+00 s=1 e=0 z=0  None .text      MoveAfterCheck__4dCcSFv */
void dCcS::MoveAfterCheck() {
    /* empty function */
}

/* 800872AC-800872B0 0004+00 s=1 e=0 z=0  None .text      DrawAfter__4dCcSFv */
void dCcS::DrawAfter() {
    /* empty function */
}

/* 800872B0-800872D0 0020+00 s=0 e=1 z=0  None .text      Move__4dCcSFv */
//	800872BC: 80265CCC (Move__4cCcSFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::Move() {
    nofralloc
#include "asm/d/cc/d_cc_s/Move__4dCcSFv.s"
}
#pragma pop

/* 800872D0-8008730C 003C+00 s=0 e=1 z=0  None .text      Draw__4dCcSFv */
//	800872E4: 800872AC (DrawAfter__4dCcSFv)
//	800872EC: 80265D30 (DrawClear__4cCcSFv)
//	800872F4: 80085CF0 (Clear__12dCcMassS_MngFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::Draw() {
    nofralloc
#include "asm/d/cc/d_cc_s/Draw__4dCcSFv.s"
}
#pragma pop

/* 8008730C-80087330 0024+00 s=0 e=0 z=1  None .text      MassClear__4dCcSFv */
//	8008731C: 80085CF0 (Clear__12dCcMassS_MngFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::MassClear() {
    nofralloc
#include "asm/d/cc/d_cc_s/MassClear__4dCcSFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803AC3A4-803AC3E4 0040+00 s=1 e=0 z=0  None .data      m_mtrl_hit_tbl__4dCcS */
SECTION_DATA static u8 m_mtrl_hit_tbl__4dCcS[64] = {
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01,
};

/* 80087330-8008734C 001C+00 s=1 e=0 z=0  None .text      ChkAtTgMtrlHit__4dCcSFUcUc */
//	80087334: 803AC3A4 (m_mtrl_hit_tbl__4dCcS)
//	80087338: 803AC3A4 (m_mtrl_hit_tbl__4dCcS)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::ChkAtTgMtrlHit(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/cc/d_cc_s/ChkAtTgMtrlHit__4dCcSFUcUc.s"
}
#pragma pop

/* 8008734C-800873B0 0064+00 s=1 e=0 z=0  None .text
 * ChkNoHitGAtTg__4dCcSFPC12cCcD_GObjInfPC12cCcD_GObjInfP10cCcD_GSttsP10cCcD_GStts */
//	80087394: 80087330 (ChkAtTgMtrlHit__4dCcSFUcUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dCcS::ChkNoHitGAtTg(cCcD_GObjInf const* param_0, cCcD_GObjInf const* param_1,
                             cCcD_GStts* param_2, cCcD_GStts* param_3) {
    nofralloc
#include "asm/d/cc/d_cc_s/ChkNoHitGAtTg__4dCcSFPC12cCcD_GObjInfPC12cCcD_GObjInfP10cCcD_GSttsP10cCcD_GStts.s"
}
#pragma pop

/* ############################################################################################## */
/* 803AC3E4-803AC418 0034+00 s=0 e=2 z=0  None .data      __vt__4dCcS */
SECTION_DATA void* __vt__4dCcS[13] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)CalcTgPlusDmg__4dCcSFP8cCcD_ObjP8cCcD_ObjP9cCcD_SttsP9cCcD_Stts,
    (void*)SetPosCorrect__4dCcSFP8cCcD_ObjP4cXyzP8cCcD_ObjP4cXyzf,
    (void*)
        SetCoGObjInf__4dCcSFbbP12cCcD_GObjInfP12cCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10cCcD_GSttsP10cCcD_GStts,
    (void*)
        SetAtTgGObjInf__4dCcSFbbP8cCcD_ObjP8cCcD_ObjP12cCcD_GObjInfP12cCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10cCcD_GSttsP10cCcD_GSttsP4cXyz,
    (void*)ChkNoHitGAtTg__4dCcSFPC12cCcD_GObjInfPC12cCcD_GObjInfP10cCcD_GSttsP10cCcD_GStts,
    (void*)
        ChkAtTgHitAfterCross__4dCcSFbbPC12cCcD_GObjInfPC12cCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP10cCcD_GSttsP10cCcD_GStts,
    (void*)ChkNoHitGCo__4dCcSFP8cCcD_ObjP8cCcD_Obj,
    (void*)__dt__4dCcSFv,
    (void*)MoveAfterCheck__4dCcSFv,
    (void*)SetCoGCorrectProc__4cCcSFP8cCcD_ObjP8cCcD_Obj,
    (void*)CalcParticleAngle__4dCcSFP12dCcD_GObjInfP9cCcD_SttsP9cCcD_SttsP5csXyz,
};
