//
// Generated By: dol2asm
// Translation Unit: d/a/d_a_alink
//

#include "d/a/d_a_alink.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct stage_stag_info_class {};

struct request_of_phase_process_class {};

struct Quaternion {};

struct Vec {};

struct cXyz {
    /* 80009184 */ ~cXyz();
    /* 800977F4 */ cXyz(cXyz const&);
    /* 8014195C */ cXyz(f32, f32, f32);
    /* 800125DC */ cXyz();
    /* 8008E790 */ void abs() const;
    /* 800977D8 */ void operator=(cXyz const&);
    /* 80266AE4 */ void operator+(Vec const&) const;
    /* 80266B34 */ void operator-(Vec const&) const;
    /* 80266B84 */ void operator*(f32) const;
    /* 80266C18 */ void operator/(f32) const;
    /* 80266CBC */ void outprod(Vec const&) const;
    /* 80266D30 */ void normZP() const;
    /* 80266EF4 */ void normalize();
    /* 80266F48 */ void normalizeZP();
    /* 80267128 */ void atan2sX_Z() const;
    /* 80267150 */ void atan2sY_XZ() const;
};

struct csXyz {
    /* 80018BD0 */ ~csXyz();
    /* 80112C80 */ csXyz();
    /* 802673F4 */ csXyz(s16, s16, s16);
};

struct mDoMtx_stack_c {
    /* 8000CD64 */ void transS(cXyz const&);
    /* 8000CDD4 */ void transM(cXyz const&);
    /* 8000CD9C */ void transM(f32, f32, f32);
    /* 8000CE38 */ void scaleM(f32, f32, f32);
    /* 8000CF0C */ void ZXYrotS(csXyz const&);
    /* 8000CF44 */ void ZXYrotM(csXyz const&);
    /* 8000CF7C */ void quatM(Quaternion const*);
};

struct J3DDeformData {};

struct J3DAnmCluster {};

struct mDoExt_blkAnm {
    /* 8000DA08 */ void init(J3DDeformData*, J3DAnmCluster*, int, int, f32, s16, s16);
};

struct J3DAnmTransform {};

struct J3DModelData {};

struct mDoExt_bckAnm {
    /* 8000D7DC */ void init(J3DAnmTransform*, int, int, f32, s16, s16, bool);
    /* 8000D990 */ void changeBckOnly(J3DAnmTransform*);
    /* 8000D9CC */ void entry(J3DModelData*, f32);
};

struct mDoExt_baseAnm {
    /* 8000D428 */ void play();
};

struct mDoExt_MtxCalcOldFrame {
    /* 8000F848 */ void initOldFrameMorf(f32, u16, u16);
};

struct mDoExt_MtxCalcAnmBlendTbl {
    /* 800D00BC */ void getAnm(int);
};

struct mDoExt_AnmRatioPack {
    /* 80140DF0 */ ~mDoExt_AnmRatioPack();
    /* 80140E2C */ mDoExt_AnmRatioPack();
};

struct fopEn_enemy_c {};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
    /* 80018C8C */ ~fopAc_ac_c();
};

struct fopAcM_wt_c {
    /* 8001DD84 */ void waterCheck(cXyz const*);
};

struct fopAcM_lc_c {
    /* 8001DC68 */ void lineCheck(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct fopAcM_gc_c {
    /* 8001DCBC */ void gndCheck(cXyz const*);
};

struct e_wb_class {
    /* 80037C7C */ void checkWait();
    /* 80037C90 */ void setPlayerRideNow();
    /* 80037CB0 */ void setPlayerRide();
    /* 80037CF4 */ void getOff();
    /* 80037D68 */ void checkDownDamage();
    /* 80037D94 */ void checkNormalRideMode() const;
    /* 80037DBC */ void setRunRideMode();
};

struct daTagMist_c {
    /* 80031CF0 */ void getPlayerNo();
};

struct cBgS_PolyInfo {
    /* 80268074 */ cBgS_PolyInfo();
    /* 802680B0 */ ~cBgS_PolyInfo();
    /* 80268120 */ void ClearPi();
    /* 80268148 */ void SetPolyInfo(cBgS_PolyInfo const&);
};

struct daTagMagne_c {
    /* 80031B50 */ void checkMagnetCode(cBgS_PolyInfo&);
};

struct ResTIMG {};

struct daPy_sightPacket_c {
    /* 80140CDC */ ~daPy_sightPacket_c();
    /* 8015F1A0 */ void draw();
    /* 8015F2FC */ void setSight();
    /* 8015F384 */ void setSightImage(ResTIMG*);
};

struct daPy_py_c {
    struct daPy_FLG2 {};

    struct daPy_FLG0 {};

    struct daPy_ERFLG2 {};

    struct daPy_FLG3 {};

    struct daPy_ERFLG1 {};

    struct daPy_FLG1 {};

    struct daPy_RFLG0 {};

    struct daPy_ERFLG0 {};

    /* 8000B1E4 */ s32 getAtnActorID() const;
    /* 8001E11C */ void onFrollCrashFlg(u8, int);
    /* 8001E120 */ bool checkWolfDash() const;
    /* 8001E128 */ bool checkFrontRoll() const;
    /* 8001E130 */ bool checkHorseRide() const;
    /* 8001E138 */ s32 getGrabActorID() const;
    /* 8006F160 */ bool getKandelaarFlamePos();
    /* 80077494 */ bool checkPlayerFly() const;
    /* 80088134 */ bool checkCutJumpCancelTurn() const;
    /* 800977B4 */ void checkMidnaRide() const;
    /* 80097850 */ bool checkCanoeRide() const;
    /* 80097858 */ bool checkBoardRide() const;
    /* 80097860 */ bool checkSpinnerRide() const;
    /* 80097868 */ bool checkBoarRide() const;
    /* 8014111C */ void onNoResetFlg2(daPy_py_c::daPy_FLG2);
    /* 8014112C */ void offNoResetFlg0(daPy_py_c::daPy_FLG0);
    /* 80141190 */ void checkEndResetFlg2(daPy_py_c::daPy_ERFLG2) const;
    /* 801411B0 */ void getSumouMode() const;
    /* 801411D4 */ void checkNoResetFlg3(daPy_py_c::daPy_FLG3) const;
    /* 80141210 */ void checkShieldGet();
    /* 801412B0 */ void checkEquipHeavyBoots() const;
    /* 801412C4 */ void onNoResetFlg0(daPy_py_c::daPy_FLG0);
    /* 80141340 */ void checkEndResetFlg1(daPy_py_c::daPy_ERFLG1) const;
    /* 8014135C */ void offNoResetFlg1(daPy_py_c::daPy_FLG1);
    /* 8014136C */ void offNoResetFlg2(daPy_py_c::daPy_FLG2);
    /* 801413CC */ void checkWolf() const;
    /* 801413D8 */ void checkSwordGet();
    /* 801413F8 */ void checkResetFlg0(daPy_py_c::daPy_RFLG0) const;
    /* 80141410 */ void checkNoResetFlg0(daPy_py_c::daPy_FLG0) const;
    /* 801414C0 */ void checkNoResetFlg2(daPy_py_c::daPy_FLG2) const;
    /* 801414CC */ void checkMagneBootsOn() const;
    /* 801414E8 */ void checkBoarSingleBattle() const;
    /* 801414F4 */ void checkEndResetFlg0(daPy_py_c::daPy_ERFLG0) const;
    /* 80141500 */ bool getMidnaAtnPos() const;
    /* 80141508 */ void setMidnaMsgNum(fopAc_ac_c*, u16);
    /* 8014150C */ void getModelMtx();
    /* 80141514 */ void getInvMtx();
    /* 8014151C */ void getShadowTalkAtnPos();
    /* 80141524 */ void getLeftItemMatrix();
    /* 8014152C */ void getRightItemMatrix();
    /* 80141534 */ void getLeftHandMatrix();
    /* 8014153C */ void getRightHandMatrix();
    /* 80141544 */ void getLinkBackBone1Matrix();
    /* 8014154C */ void getWolfMouthMatrix();
    /* 80141554 */ void getWolfBackbone2Matrix();
    /* 8014155C */ bool getBottleMtx();
    /* 80141564 */ bool checkPlayerGuard() const;
    /* 8014156C */ bool checkAutoJump() const;
    /* 80141574 */ bool checkSideStep() const;
    /* 8014157C */ bool checkWolfTriggerJump() const;
    /* 80141584 */ bool checkGuardBreakMode() const;
    /* 8014158C */ bool checkLv3Slide() const;
    /* 80141594 */ bool checkWolfHowlDemoMode() const;
    /* 8014159C */ bool checkChainBlockPushPull();
    /* 801415A4 */ bool checkElecDamage() const;
    /* 801415AC */ bool checkEmptyBottleSwing() const;
    /* 801415B4 */ bool checkBottleSwingMode() const;
    /* 801415BC */ bool checkHawkWait() const;
    /* 801415C4 */ bool checkGoatThrow() const;
    /* 801415CC */ bool checkGoatThrowAfter() const;
    /* 801415D4 */ bool checkWolfTagLockJump() const;
    /* 801415DC */ bool checkWolfTagLockJumpLand() const;
    /* 801415E4 */ bool checkWolfRope();
    /* 801415EC */ bool checkWolfRopeHang() const;
    /* 801415F4 */ bool checkRollJump() const;
    /* 801415FC */ bool checkGoronRideWait() const;
    /* 80141604 */ bool checkWolfChain() const;
    /* 8014160C */ bool checkWolfWait() const;
    /* 80141614 */ bool checkWolfJumpAttack() const;
    /* 8014161C */ bool checkWolfRSit() const;
    /* 80141624 */ bool checkBubbleFly() const;
    /* 8014162C */ bool checkBottleDrinkEnd() const;
    /* 80141634 */ bool checkWolfDig() const;
    /* 8014163C */ bool checkCutCharge() const;
    /* 80141644 */ bool checkCutTurnCharge() const;
    /* 8014164C */ bool checkCutLargeJumpCharge() const;
    /* 80141654 */ bool getBokoFlamePos(cXyz*);
    /* 8014165C */ bool checkComboCutTurn() const;
    /* 80141664 */ bool checkClimbMove() const;
    /* 8014166C */ bool checkGrassWhistle() const;
    /* 80141674 */ bool checkBoarRun() const;
    /* 8014167C */ bool checkFmChainPut() const;
    /* 80141684 */ bool checkHorseElecDamage() const;
    /* 8014168C */ void getBaseAnimeFrameRate() const;
    /* 80141694 */ void getBaseAnimeFrame() const;
    /* 8014169C */ void setAnimeFrame(f32);
    /* 801416A0 */ bool checkWolfLock(fopAc_ac_c*) const;
    /* 801416A8 */ bool cancelWolfLock(fopAc_ac_c*);
    /* 801416B0 */ s32 getItemID() const;
    /* 801416B8 */ bool exchangeGrabActor(fopAc_ac_c*);
    /* 801416C0 */ bool setForceGrab(fopAc_ac_c*, int, int);
    /* 801416C8 */ void setForcePutPos(cXyz const&);
    /* 801416CC */ bool checkPlayerNoDraw();
    /* 801416D4 */ bool checkRopeTag();
    /* 801416DC */ void voiceStart(u32);
    /* 801416E0 */ void seStartOnlyReverb(u32);
    /* 801416E4 */ void seStartOnlyReverbLevel(u32);
    /* 801416E8 */ void setOutPower(f32, s16, int);
    /* 801416EC */ void setGrabCollisionOffset(f32, f32, cBgS_PolyInfo*);
    /* 801416F0 */ void onMagneGrab(f32, f32);
    /* 801416F4 */ bool getModelJointMtx(u16);
    /* 801416FC */ bool getHeadMtx();
    /* 80141704 */ bool setHookshotCarryOffset(unsigned int, cXyz const*);
    /* 8014170C */ bool checkIronBallReturn() const;
    /* 80141714 */ bool checkIronBallGroundStop() const;
    /* 8014171C */ bool checkSingleBoarBattleSecondBowReady() const;
    /* 80141724 */ bool checkPointSubWindowMode() const;
    /* 8014172C */ void setClothesChange(int);
    /* 80141730 */ void setPlayerPosAndAngle(f32 (*)[4]);
    /* 80141734 */ void setPlayerPosAndAngle(cXyz const*, csXyz const*);
    /* 80141738 */ void setPlayerPosAndAngle(cXyz const*, s16, int);
    /* 8014173C */ bool setThrowDamage(s16, f32, f32, int, int, int);
    /* 80141744 */ bool checkSetNpcTks(cXyz*, int, int);
    /* 8014174C */ bool setRollJump(f32, f32, s16);
    /* 80141754 */ void playerStartCollisionSE(u32, u32);
    /* 80141758 */ void changeTextureAnime(u16, u16, int);
    /* 8014175C */ void cancelChangeTextureAnime();
    /* 80141760 */ void cancelDungeonWarpReadyNeck();
    /* 80141764 */ void onSceneChangeArea(u8, u8, fopAc_ac_c*);
    /* 80141768 */ void onSceneChangeAreaJump(u8, u8, fopAc_ac_c*);
    /* 8014176C */ void onSceneChangeDead(u8, int);
    /* 80141770 */ bool getSpinnerActor();
    /* 80141778 */ bool checkHorseRideNotReady() const;
    /* 80141780 */ bool checkArrowChargeEnd() const;
    /* 80141788 */ void getSearchBallScale() const;
    /* 80141790 */ bool checkFastShotTime();
    /* 80141798 */ bool checkNoEquipItem() const;
    /* 801417A0 */ bool checkFireMaterial() const;
    /* 801417A8 */ bool checkKandelaarSwing(int) const;
    /* 801417B0 */ bool getBoardCutTurnOffsetAngleY() const;
    /* 801417B8 */ void getMagneHitPos();
    /* 801417C0 */ void getMagneBootsTopVec();
    /* 801417C8 */ bool checkUseKandelaar(int);
    /* 801417D0 */ void setDkCaught(fopAc_ac_c*);
    /* 801417D4 */ void onPressedDamage(cXyz const&, s16);
    /* 801417D8 */ bool checkPriActorOwn(fopAc_ac_c const*) const;
    /* 801417E0 */ bool onWolfEnemyBiteAll(fopAc_ac_c*, daPy_py_c::daPy_FLG2);
    /* 801417E8 */ bool checkWolfEnemyBiteAllOwn(fopAc_ac_c const*) const;
    /* 801417F0 */ void setWolfEnemyHangBiteAngle(s16);
    /* 801417F4 */ void setKandelaarMtx(f32 (*)[4], int, int);
    /* 801417F8 */ bool getStickAngleFromPlayerShape(s16*) const;
    /* 80141800 */ bool checkSpinnerPathMove();
    /* 80141808 */ bool checkSpinnerTriggerAttack();
    /* 80141810 */ void onSpinnerPathForceRemove();
    /* 80141814 */ bool getIronBallBgHit() const;
    /* 8014181C */ bool getIronBallCenterPos();
    /* 80141824 */ bool checkCanoeFishingGetLeft() const;
    /* 8014182C */ bool checkCanoeFishingGetRight() const;
    /* 80141834 */ bool checkBeeChildDrink() const;
    /* 8014183C */ void skipPortalObjWarp();
    /* 80141840 */ bool checkTreasureRupeeReturn(int) const;
    /* 80141848 */ void setSumouReady(fopAc_ac_c*);
    /* 8014184C */ bool checkAcceptDungeonWarpAlink(int);
    /* 80141854 */ bool getSumouCounter() const;
    /* 8014185C */ bool checkSumouWithstand() const;
    /* 80141864 */ void cancelGoronThrowEvent();
    /* 80141868 */ void setSumouGraspCancelCount(int);
    /* 8014186C */ void setSumouPushBackDirection(s16);
    /* 80141870 */ void setSumouLoseHeadUp();
    /* 80141874 */ void getGiantPuzzleAimAngle() const;
    /* 8014187C */ void setGoronSideMove(fopAc_ac_c*);
    /* 80141880 */ void setCargoCarry(fopAc_ac_c*);
    /* 80141884 */ bool getDpdFarFlg() const;
    /* 8014188C */ bool getHookshotTopPos();
    /* 80141894 */ bool checkHookshotReturnMode() const;
    /* 8014189C */ bool checkHookshotShootReturnMode() const;
    /* 801418A4 */ bool checkOctaIealHang() const;
    /* 801418AC */ void cancelOctaIealHang();
    /* 801418B0 */ void cancelDragonHangBackJump();
    /* 801418B4 */ void setOctaIealWildHang();
    /* 801418B8 */ bool checkDragonHangRide() const;
    /* 801418C0 */ void changeDragonActor(fopAc_ac_c*);
    /* 801418C4 */ bool getClothesChangeWaitTimer() const;
    /* 801418CC */ bool getShieldChangeWaitTimer() const;
    /* 801418D4 */ bool getSwordChangeWaitTimer() const;
    /* 801418DC */ bool checkMetamorphose() const;
    /* 801418E4 */ bool checkWolfDownAttackPullOut() const;
    /* 801418EC */ bool checkBootsOrArmorHeavy() const;
    /* 801418F4 */ s32 getBottleOpenAppearItem() const;
    /* 801418FC */ bool checkItemSwordEquip() const;
    /* 80141904 */ void getSinkShapeOffset() const;
    /* 8014190C */ bool checkSinkDead() const;
    /* 80141914 */ bool checkHorseStart();
    /* 8014191C */ bool getWolfHowlMgrP();
    /* 80141924 */ bool checkWolfHowlSuccessAnime() const;
    /* 8014192C */ bool checkCopyRodTopUse();
    /* 80141934 */ bool checkCopyRodEquip() const;
    /* 8014193C */ bool checkCutJumpMode() const;
    /* 8015EA0C */ void setParamData(int, int, int, int);
    /* 8015EA20 */ void checkFishingRodItem(int);
    /* 8015EA48 */ void checkBombItem(int);
    /* 8015EA88 */ void checkBottleItem(int);
    /* 8015EAD8 */ void checkDrinkBottleItem(int);
    /* 8015EB40 */ void checkOilBottleItem(int);
    /* 8015EB68 */ void checkOpenBottleItem(int);
    /* 8015EB90 */ void checkBowItem(int);
    /* 8015EBB8 */ void checkHookshotItem(int);
    /* 8015EBD8 */ void checkTradeItem(int);
    /* 8015EC28 */ void checkDungeonWarpItem(int);
    /* 8015F398 */ void checkMasterSwordEquip();
    /* 8015F3C4 */ void checkWoodShieldEquip();
    /* 8015F698 */ void checkCarryStartLightBallA();
    /* 8015F730 */ void checkCarryStartLightBallB();
};

struct daPy_frameCtrl_c {
    /* 80140D24 */ ~daPy_frameCtrl_c();
    /* 80140D80 */ daPy_frameCtrl_c();
    /* 8015E4CC */ void checkAnmEnd();
    /* 8015E510 */ void updateFrame();
    /* 8015E544 */ void setFrameCtrl(u8, s16, s16, f32, f32);
};

struct daPy_demo_c {
    /* 8014137C */ void setSpecialDemoType();
};

struct daPy_anmHeap_c {
    struct daAlinkHEAP_TYPE {};

    /* 80140DCC */ void __defctor();
    /* 8015ED10 */ daPy_anmHeap_c(u32);
    /* 8015ED50 */ ~daPy_anmHeap_c();
    /* 8015EDC4 */ void mallocBuffer();
    /* 8015EE00 */ void createHeap(daPy_anmHeap_c::daAlinkHEAP_TYPE);
    /* 8015F068 */ void loadDataIdx(u16);
    /* 8015F0D0 */ void loadDataPriIdx(u16);
    /* 8015F118 */ void loadDataDemoRID(u16, u16);
    /* 8015F168 */ void setAnimeHeap();
};

struct daPy_actorKeep_c {
    /* 801410EC */ daPy_actorKeep_c();
    /* 8015EC48 */ void setActor();
    /* 8015ECB8 */ void setData(fopAc_ac_c*);
    /* 8015ECFC */ void clearData();
};

struct daObj_Sekizoa_c {
    /* 801312C8 */ void setWolfHowling();
};

struct daObjSwHang_c {
    /* 80101874 */ void getHangPos();
};

struct daObjMovebox {
    struct Act_c {
        struct Prm_e {};
    };
};

struct daObj {
    /*          */ template <typename A1>
    /*          */ void PrmAbstract(
        /* fopAc_ac_c const*, daObjMovebox::Act_c::Prm_e, daObjMovebox::Act_c::Prm_e */);
    /* 80141ACC */ /* PrmAbstract<daObjMovebox::Act_c::Prm_e> */
    void PrmAbstract__template0(fopAc_ac_c const*, daObjMovebox::Act_c::Prm_e,
                                daObjMovebox::Act_c::Prm_e);
};

struct daNpcT_ActorMngr_c {
    /* 80145708 */ void getActorP();
};

struct J3DModel {
    /* 800CFFE0 */ void getAnmMtx(int);
    /* 800CFFF4 */ void setBaseTRMtx(f32 (*)[4]);
    /* 803279A0 */ void diff();
    /* 80327A2C */ void setDeformData(J3DDeformData*, u32);
    /* 80327C58 */ void calcWeightEnvelopeMtx();
};

struct daMirror_c {
    /* 8003194C */ void entry(J3DModel*);
};

struct daMidna_c {
    /* 801419F4 */ void onForcePanic();
    /* 80141A04 */ void checkForceNormalColor() const;
    /* 80141A10 */ void checkForceTiredColor() const;
    /* 80141A1C */ void checkMidnaTired();
    /* 80141A84 */ void onNoServiceWait();
};

struct daItemBase_c {
    /* 80037A5C */ void getItemNo();
    /* 80037A64 */ void hide();
    /* 80037A74 */ void show();
    /* 80037AE4 */ void dead();
};

struct daHorse_c {
    /* 80141944 */ void getZeldaActor();
};

struct daCrod_c {
    /* 80141A94 */ void setControllActorData();
};

struct daAlink_sight_c {
    /* 800CFDF4 */ ~daAlink_sight_c();
    /* 80126650 */ void create();
    /* 801266C0 */ void draw();
    /* 80126710 */ void onLockFlg();
};

struct J3DMaterial {};

struct daAlink_matAnm_c {
    /* 8009D8E4 */ void init();
    /* 8009D90C */ void calc(J3DMaterial*) const;
    /* 800D0180 */ void offSetFlg();
    /* 800D0B8C */ ~daAlink_matAnm_c();
};

struct daAlink_lockCursor_c {
    /* 800CFE68 */ ~daAlink_lockCursor_c();
    /* 80125F14 */ void create();
    /* 80126358 */ void update();
    /* 80126424 */ void draw();
};

struct daAlink_footData_c {
    /* 800CFCB8 */ ~daAlink_footData_c();
    /* 800CFCF4 */ daAlink_footData_c();
};

struct cM3dGPla {
    /* 8001DB90 */ ~cM3dGPla();
    /* 801411F0 */ cM3dGPla();
    /* 8026F3DC */ cM3dGPla(cXyz const*, f32);
    /* 8026F408 */ void crossInfLin(cXyz const&, cXyz const&, cXyz&) const;
};

struct dDemo_actor_c {
    /* 8003819C */ void getPrm_Morf();
    /* 80038338 */ void getDemoIDData(int*, int*, int*, u16*, u8*);
};

struct J3DAnmBase {};

struct JPABaseEmitter {};

struct J3DGXColorS10 {
    /* 8000E460 */ J3DGXColorS10();
};

struct daAlinkHIO_anm_c {};

struct dCcD_GObjInf {
    /* 80083A28 */ dCcD_GObjInf();
    /* 800840E4 */ ~dCcD_GObjInf();
    /* 800842C0 */ void ChkAtHit();
    /* 80084318 */ void ResetAtHit();
    /* 800843A8 */ void GetAtHitGObj();
    /* 80084460 */ void ChkTgHit();
    /* 800844B8 */ void ResetTgHit();
    /* 80084548 */ void GetTgHitGObj();
    /* 8008457C */ void GetTgHitObjSe();
    /* 800845B0 */ void getHitSeID(u8, int);
    /* 80084658 */ void ChkCoHit();
    /* 800846B0 */ void ResetCoHit();
};

struct dBgS_LinChk {
    /* 80077D64 */ void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct JKRHeap {
    /* 802CE5CC */ void freeAll();
};

struct JKRExpHeap {
    /* 802CEE2C */ void create(u32, JKRHeap*, bool);
};

struct _GXColorS10 {};

struct J3DAnmTevRegKey {
    /* 8032B1F8 */ void getTevColorReg(u16, _GXColorS10*) const;
    /* 8032B87C */ void searchUpdateMaterialID(J3DModelData*);
};

struct dBgW_Base {
    struct PushPullLabel {};
};

struct dAttList_c {
    /* 80073864 */ void getActor();
};

struct dCcG_At_Spl {};

struct daAlink_c {
    struct daAlink_ANM {};

    struct daAlink_UPPER {};

    struct daAlink_UNDER {};

    struct daAlink_FTANM {};

    struct daAlink_WARP_MAT_MODE {};

    struct daAlink_PROC {};

    struct firePointEff_c {
        /* 800CFC3C */ ~firePointEff_c();
        /* 800CFC78 */ firePointEff_c();
    };

    struct hsChainShape_c {
        /* 800D0CDC */ ~hsChainShape_c();
        /* 80107900 */ void draw();
    };

    struct daAlink_WANM {};

    /* 80097870 */ void getShadowTalkAtnPos();
    /* 8009D87C */ bool getE3Zhint();
    /* 8009D884 */ void getAlinkArcName();
    /* 8009DA60 */ void checkStageName(char const*);
    /* 8009DA98 */ void tgHitCallback(fopAc_ac_c*, dCcD_GObjInf*, dCcD_GObjInf*);
    /* 8009DB64 */ void coHitCallback(fopAc_ac_c*, dCcD_GObjInf*);
    /* 8009DC6C */ void setMatrixWorldAxisRot(f32 (*)[4], s16, s16, s16, int, cXyz const*);
    /* 8009DD90 */ void jointControll(int);
    /* 8009E7B8 */ void setUpperFront();
    /* 8009E91C */ void changeBlendRate(int);
    /* 8009EB18 */ void resetRootMtx();
    /* 8009EB58 */ void modelCallBack(int);
    /* 8009ECA0 */ void headModelCallBack(int);
    /* 8009EF7C */ void wolfModelCallBack(int);
    /* 8009F034 */ void setHatAngle();
    /* 8009FFF8 */ void calcHairAngle(s16*);
    /* 800A002C */ void setHairAngle(cXyz*, f32, f32);
    /* 800A0744 */ void setLookPosFromOut(cXyz*);
    /* 800A07D8 */ void checkAttentionPosAngle(cXyz*);
    /* 800A0868 */ void checkActorPosAngle(fopAc_ac_c*, cXyz**);
    /* 800A093C */ void getNeckAimPos(cXyz*, int*, int);
    /* 800A142C */ void getNeckAimAngle(cXyz*, s16*, s16*, s16*, s16*);
    /* 800A1AEC */ void setEyeMove(cXyz*, s16, s16);
    /* 800A1F90 */ void setNeckAngle();
    /* 800A2160 */ void getStickAngleFromPlayerShape(s16*) const;
    /* 800A2198 */ void commonLineCheck(cXyz*, cXyz*);
    /* 800A21E0 */ void getMoveBGActorName(cBgS_PolyInfo&, int);
    /* 800A2280 */ void checkGoronRide();
    /* 800A22E8 */ void setMoveSlantAngle();
    /* 800A2710 */ void setArmMatrix();
    /* 800A29DC */ void setFootMatrix();
    /* 800A2C24 */ void setMatrixOffset(f32*, f32);
    /* 800A2CE0 */ void setLegAngle(f32, daAlink_footData_c*, s16*, s16*, int);
    /* 800A3430 */ void footBgCheck();
    /* 800A39B8 */ void handBgCheck();
    /* 800A3C8C */ void setItemHeap();
    /* 800A3CE4 */ void setIdxMask(u16*, u16*);
    /* 800A3D0C */ void getAnimeResource(daPy_anmHeap_c*, u16, u32);
    /* 800A3D7C */ void initModel(J3DModelData*, u32, u32);
    /* 800A3E30 */ void initModel(u16, u32);
    /* 800A3E98 */ void initModelEnv(u16, u32);
    /* 800A3F00 */ void initDemoModel(J3DModel**, char const*, u32);
    /* 800A3F98 */ void initDemoBck(mDoExt_bckAnm**, char const*);
    /* 800A4068 */ void createHeap();
    /* 800A4910 */ void setSelectEquipItem(int);
    /* 800A4BC8 */ void checkBoarStart();
    /* 800A4C40 */ void checkCanoeStart();
    /* 800A4CB4 */ void playerInit();
    /* 800D01A8 */ void checkHorseStart();
    /* 800A54F4 */ void checkHorseStart(u32, int);
    /* 800A551C */ void setStartProcInit();
    /* 800A5CC8 */ void create();
    /* 800A662C */ void setRoomInfo();
    /* 800A67E0 */ void setShapeAngleOnGround();
    /* 800A6B0C */ void setStepsOffset();
    /* 800A6DCC */ void iceSlipBgCheck();
    /* 800A7050 */ void setIceSlipSpeed();
    /* 800A7358 */ void setPolygonSpeed();
    /* 800A7950 */ void checkWindSpeedOnAngle() const;
    /* 800A79EC */ void checkWindSpeedOnAngleAnime(int) const;
    /* 800A7A5C */ void checkDashAnime() const;
    /* 800A7ABC */ void checkWindWallRate(cXyz const&);
    /* 800A7CB0 */ void setWindSpeed();
    /* 800A8310 */ void setBodyPartPos();
    /* 800A87D8 */ void setRollJump(f32, f32, s16);
    /* 800A87F8 */ void setAttentionPos();
    /* 800A8CE4 */ void setMatrix();
    /* 800A9248 */ void simpleAnmPlay(J3DAnmBase*);
    /* 800A92F0 */ void setSwordPos();
    /* 800A9450 */ void setItemMatrix(int);
    /* 800A9F4C */ void setWolfItemMatrix();
    /* 800AA2BC */ void setHandIndex(daAlink_c::daAlink_ANM);
    /* 800AA2E0 */ void setSwordAtCollision(int);
    /* 800AA5E8 */ void checkNoCollisionCorret();
    /* 800AA6B4 */ void decSwordBlur();
    /* 800AA714 */ void resetWolfAtCollision();
    /* 800AA7EC */ void setWolfAtCollision();
    /* 800AA9DC */ void resetAtCollision(int);
    /* 800AAABC */ void setAtCollision();
    /* 800AB878 */ void setWolfCollisionPos();
    /* 800ABAE0 */ void initLockAt();
    /* 800ABB28 */ void cancelLockAt();
    /* 800ABB84 */ void setCollisionPos();
    /* 800ABDB8 */ void setCollision();
    /* 800AC328 */ void getBaseAnimeFrame() const;
    /* 800AC378 */ void setAnimeFrame(f32);
    /* 800AC394 */ void setFrameCtrl(daPy_frameCtrl_c*, u8, s16, s16, f32, f32);
    /* 800AC450 */ void getMainBckData(daAlink_c::daAlink_ANM) const;
    /* 800AC558 */ void checkUnderMove0BckNoArc(daAlink_c::daAlink_ANM) const;
    /* 800AC5B4 */ void checkUnderMove1BckNoArc(daAlink_c::daAlink_ANM) const;
    /* 800AC610 */ void getUnderUpperAnime(daAlink_c::daAlink_ANM, J3DAnmTransform**,
                                           J3DAnmTransform**, int, u32);
    /* 800AC738 */ void setDoubleAnimeBlendRatio(f32);
    /* 800AC754 */ void commonDoubleAnime(J3DAnmTransform*, J3DAnmTransform*, J3DAnmTransform*,
                                          J3DAnmTransform*, f32, f32, f32, int);
    /* 800ACA14 */ void setDoubleAnime(f32, f32, f32, daAlink_c::daAlink_ANM,
                                       daAlink_c::daAlink_ANM, int, f32);
    /* 800ACD40 */ void commonSingleAnime(J3DAnmTransform*, J3DAnmTransform*, f32, f32, s16);
    /* 800ACF80 */ void setSingleAnimeBase(daAlink_c::daAlink_ANM);
    /* 800ACFB0 */ void setSingleAnimeBaseMorf(daAlink_c::daAlink_ANM, f32);
    /* 800ACFE0 */ void setSingleAnimeBaseSpeed(daAlink_c::daAlink_ANM, f32, f32);
    /* 800AD00C */ void setSingleAnime(daAlink_c::daAlink_ANM, f32, f32, s16, f32);
    /* 800AD0F4 */ void setSingleAnimeParam(daAlink_c::daAlink_ANM, daAlinkHIO_anm_c const*);
    /* 800AD128 */ void animePlay(J3DAnmTransform*, daPy_frameCtrl_c*);
    /* 800AD170 */ void allAnimePlay();
    /* 800AD2D8 */ void setUpperAnimeMorf(f32);
    /* 800AD340 */ void setUpperAnimeBase(u16);
    /* 800AD374 */ void setUpperAnimeBaseMorf(u16, f32);
    /* 800AD3A8 */ void setUpperAnimeBaseSpeed(u16, f32, f32);
    /* 800AD3D8 */ void setUpperAnime(u16, daAlink_c::daAlink_UPPER, f32, f32, s16, f32);
    /* 800AD6F0 */ void setUpperAnimeParam(u16, daAlink_c::daAlink_UPPER, daAlinkHIO_anm_c const*);
    /* 800AD724 */ void resetUpperAnime(daAlink_c::daAlink_UPPER, f32);
    /* 800AD8F4 */ void setUnderAnimeMorf(f32);
    /* 800AD964 */ void setUnderAnime(u16, daAlink_c::daAlink_UNDER, f32, f32, s16, f32);
    /* 800ADAB8 */ void setUnderAnimeParam(u16, daAlink_c::daAlink_UNDER, daAlinkHIO_anm_c const*);
    /* 800ADAEC */ void resetUnderAnime(daAlink_c::daAlink_UNDER, f32);
    /* 800ADB78 */ void setOldRootQuaternion(s16, s16, s16);
    /* 800ADC50 */ void checkAtnLeftAnime();
    /* 800ADCEC */ void checkAtnRightAnime();
    /* 800ADD88 */ void getMoveGroundAngleSpeedRate();
    /* 800ADE14 */ void setBlendMoveAnime(f32);
    /* 800AEA70 */ void setBlendAtnMoveAnime(f32);
    /* 800AF11C */ void setBlendAtnBackMoveAnime(f32);
    /* 800AF4B0 */ void setFaceBck(u16, int, u16);
    /* 800AF61C */ void setFaceBtp(u16, int, u16);
    /* 800AF7D0 */ void setFaceBtk(u16, int, u16);
    /* 800AF8A0 */ void setFaceBasicTexture(daAlink_c::daAlink_FTANM);
    /* 800AF9A8 */ void setFaceBasicAnime(daAlink_c::daAlink_ANM);
    /* 800AFAA8 */ void setFacePriTexture(daAlink_c::daAlink_FTANM);
    /* 800AFB14 */ void setFacePriAnime(daAlink_c::daAlink_ANM);
    /* 800AFB74 */ void resetFacePriBck();
    /* 800AFBD0 */ void resetFacePriBtp();
    /* 800AFC2C */ void resetFacePriBtk();
    /* 800AFC88 */ void resetFacePriTexture();
    /* 800AFCBC */ void resetFacePriAnime();
    /* 800AFCF0 */ void playFaceTextureAnime();
    /* 800B0098 */ void getGroundAngle(cBgS_PolyInfo*, s16);
    /* 800B0150 */ void getRoofAngle(cBgS_PolyInfo*, s16);
    /* 800B01FC */ void getWallEdgePos(cXyz const&, cM3dGPla*, cM3dGPla*, cXyz*, int);
    /* 800B02BC */ void setFrontWallType();
    /* 800B1488 */ void checkWaterPolygonUnder();
    /* 800B14B4 */ void setWaterY();
    /* 800B154C */ void setHangWaterY();
    /* 800B172C */ void setSandDownBgCheckWallH();
    /* 800B1770 */ void setBgCheckParam();
    /* 800B1B28 */ void checkNotJumpSinkLimit();
    /* 800B1B68 */ void checkNotItemSinkLimit();
    /* 800B1BAC */ void setSandShapeOffset();
    /* 800B1FB8 */ void checkLv2MiddleBossBgRide(s16);
    /* 800B1FD8 */ void getSlidePolygon(cM3dGPla*);
    /* 800B21EC */ void checkSlope() const;
    /* 800B221C */ void setPlayerPosAndAngle(cXyz const*, s16, int);
    /* 800B23FC */ void setPlayerPosAndAngle(cXyz const*, csXyz const*);
    /* 800B24F4 */ void setPlayerPosAndAngle(f32 (*)[4]);
    /* 800B25CC */ void itemTriggerCheck(u8);
    /* 800B25E8 */ void itemButtonCheck(u8);
    /* 800B2604 */ void itemButton();
    /* 800B2634 */ void itemTrigger();
    /* 800B2664 */ void spActionButton();
    /* 800B2688 */ void spActionTrigger();
    /* 800B26AC */ void midnaTalkTrigger() const;
    /* 800B26B8 */ void swordSwingTrigger();
    /* 800B26DC */ void setItemActionButtonStatus(u8);
    /* 800B26FC */ void itemActionTrigger();
    /* 800B271C */ void setStickData();
    /* 800B2EA4 */ void setAtnList();
    /* 800B3220 */ void setRStatus(u8);
    /* 800B3238 */ void setRStatusEmphasys(u8);
    /* 800B3250 */ void setDoStatus(u8);
    /* 800B3268 */ void setDoStatusEmphasys(u8);
    /* 800B3280 */ void setDoStatusContinuation(u8);
    /* 800B3298 */ void setBStatus(u8);
    /* 800B32B0 */ void checkAtnWaitAnime();
    /* 800B3358 */ void setTiredVoice(daPy_frameCtrl_c*);
    /* 800B33E4 */ void checkRestHPAnime();
    /* 800B3494 */ void getDirectionFromAngle(s16);
    /* 800B3500 */ void checkAttentionState();
    /* 800B3630 */ void getShapeAngleYAtnActor();
    /* 800B3734 */ void setShapeAngleToAtnActor(int);
    /* 800B3844 */ void initServiceWaitTime();
    /* 800B3904 */ void checkZeroSpeedF() const;
    /* 800B3924 */ void setNormalSpeedF(f32, f32);
    /* 800B3F2C */ void getStickAngleDistanceRate();
    /* 800B3FD4 */ void setSpeedAndAngleNormal();
    /* 800B444C */ void setSpeedAndAngleAtn();
    /* 800B477C */ void checkRequestTalkActor(dAttList_c*, fopAc_ac_c*);
    /* 800B47B4 */ void checkServiceWaitMode();
    /* 800B48D0 */ void setJumpMode();
    /* 800B4908 */ void getMetamorphoseNearDis() const;
    /* 800B4918 */ void getMetamorphoseFarDis() const;
    /* 800B4928 */ void getMetamorphoseFarAngle() const;
    /* 800B4938 */ void setMidnaMsg();
    /* 800B4950 */ void notTalk();
    /* 800B4A08 */ void setTalkStatus();
    /* 800B4B2C */ void getFrontRollRate();
    /* 800B4B7C */ void decideCommonDoStatus();
    /* 800B5284 */ void decideDoStatus();
    /* 800B58EC */ void checkWaitAction();
    /* 800B5BC0 */ void setFallVoice();
    /* 800B5C34 */ void setLandPassiveData();
    /* 800B5C64 */ void setStepLandVibration();
    /* 800B5CCC */ void checkLandAction(int);
    /* 800B5F6C */ void checkSlideAction();
    /* 800B607C */ void checkAutoJumpAction();
    /* 800B69CC */ void checkCutJumpInFly();
    /* 800B6A30 */ void checkFrontWallTypeAction();
    /* 800B6F28 */ void checkItemActionInitStart();
    /* 800B7090 */ void checkItemChangeAutoAction();
    /* 800B7168 */ void setFastShotTimer();
    /* 800B7190 */ void cancelItemUseQuake(int);
    /* 800B71EC */ void cancelUpperItemReadyAnime(int);
    /* 800B72E4 */ void checkItemActorPointer();
    /* 800B7390 */ void checkSwordTwirlAction();
    /* 800B74B4 */ void checkUpperItemActionFly();
    /* 800B7528 */ void checkItemButtonChange();
    /* 800B75EC */ void checkUpperItemAction();
    /* 800B7B7C */ void orderPeep();
    /* 800B7BF8 */ void orderTalk(int);
    /* 800B80C4 */ void orderZTalk();
    /* 800B8374 */ void checkNormalAction();
    /* 800B8930 */ void checkReadyItem();
    /* 800B8988 */ void checkItemAction();
    /* 800B9010 */ bool checkRAction();
    /* 800B9018 */ void checkMoveDoAction();
    /* 800B9148 */ void checkSideRollAction(int);
    /* 800B9254 */ void checkNoUpperAnime() const;
    /* 800B92D0 */ void checkOneHandItemEquipAnime() const;
    /* 800B92F8 */ void checkItemEquipAnime() const;
    /* 800B9340 */ void checkEquipAnime() const;
    /* 800B9398 */ void checkWindDashAnime() const;
    /* 800B93CC */ void checkSwordTwirlAnime() const;
    /* 800B93F4 */ void swordEquip(int);
    /* 800B9580 */ void swordUnequip();
    /* 800B9640 */ void itemEquip(u16);
    /* 800B96A4 */ void itemUnequip(u16, f32);
    /* 800B97EC */ void checkFastUnequip();
    /* 800B983C */ void allUnequip(int);
    /* 800B994C */ void checkItemChangeFromButton();
    /* 800B9D2C */ void checkNextActionFromButton();
    /* 800B9F50 */ void checkGroundSpecialMode();
    /* 800BA09C */ void commonCheckNextAction(int);
    /* 800BA0D0 */ void checkNextAction(int);
    /* 800BA6A0 */ void commonChangeItem();
    /* 800BA914 */ void setItemAction();
    /* 800BAF08 */ void checkNextActionFromCrouch(int);
    /* 800BAF80 */ void checkUpperReadyThrowAnime() const;
    /* 800BB020 */ void getBodyAngleXBasePos(cXyz*);
    /* 800BB084 */ void getBodyAngleXAtnActor(int);
    /* 800BB2B0 */ void setBodyAngleXReadyAnime(int);
    /* 800BB324 */ void setMagicArmorBrk(int);
    /* 800BB408 */ void checkMagicArmorHeavy() const;
    /* 800BB458 */ void checkBootsOrArmorHeavy() const;
    /* 800BB4B8 */ void checkHeavyStateOn(int, int);
    /* 800BB560 */ void setOutPower(f32, s16, int);
    /* 800BB644 */ void initGravity();
    /* 800BB770 */ void setSpecialGravity(f32, f32, int);
    /* 800BB7A0 */ void transAnimeProc(cXyz*, f32, f32);
    /* 800BBD40 */ void setFootSpeed();
    /* 800BBF68 */ void posMove();
    /* 800BD6FC */ void autoGroundHit();
    /* 800BDD70 */ void startPeepChange();
    /* 800BDE20 */ void setLastSceneDamage(int, u32*);
    /* 800BDE48 */ void setLastSceneMode(u32*);
    /* 800BDF60 */ void startRestartRoom(u32, int, int, int);
    /* 800BE26C */ void checkCoachGuardGame();
    /* 800BE2C0 */ void checkRoofRestart();
    /* 800BE3E4 */ void checkRestartRoom();
    /* 800BE9D4 */ void getSceneExitMoveAngle();
    /* 800BEAF8 */ void checkSceneChange(int);
    /* 800BF084 */ void voiceStart(u32);
    /* 800BF0B8 */ void voiceStartLevel(u32);
    /* 800BF0EC */ void seStartSwordCut(u32);
    /* 800BF124 */ void seStartOnlyReverb(u32);
    /* 800BF15C */ void seStartOnlyReverbLevel(u32);
    /* 800BF194 */ void seStartMapInfo(u32);
    /* 800BF1CC */ void seStartMapInfoLevel(u32);
    /* 800BF204 */ void setBasAnime(daAlink_c::daAlink_UNDER);
    /* 800BF37C */ void initBasAnime();
    /* 800BF4E0 */ void resetBasAnime();
    /* 800BF500 */ void checkSightLine(f32, cXyz*);
    /* 800BF79C */ void setMetamorphoseModel(int);
    /* 800BF854 */ void keepItemData();
    /* 800BF884 */ void returnKeepItemData();
    /* 800BF8D0 */ void setItemModel();
    /* 800BF9F0 */ void setItemActor();
    /* 800BFD74 */ void makeItemType();
    /* 800BFDB0 */ void checkZoraWearAbility() const;
    /* 800BFDFC */ void checkMagicArmorWearAbility() const;
    /* 800BFE48 */ void loadAramBmd(u16, u32);
    /* 800BFF04 */ void loadAram(u16, u32);
    /* 800BFF70 */ void loadAramItemBrk(u16, J3DModel*);
    /* 800BFFCC */ void loadAramItemBtk(u16, J3DModel*);
    /* 800C0028 */ void loadAramItemBtp(u16, J3DModel*);
    /* 800C0084 */ void changeItemBck(u16, f32);
    /* 800C0114 */ void checkGroupItem(int, int) const;
    /* 800C0164 */ void checkSetItemTrigger(int);
    /* 800C0208 */ void checkItemSetButton(int);
    /* 800C0284 */ void checkField();
    /* 800C02C8 */ void checkBossRoom();
    /* 800C0310 */ void checkDungeon();
    /* 800C0358 */ void checkCastleTown();
    /* 800C03A0 */ void checkCloudSea();
    /* 800C03E8 */ void checkRoomOnly();
    /* 800C044C */ void checkLv2DungeonRoomSpecial();
    /* 800C04B4 */ void checkRoomSpecial();
    /* 800C0520 */ void checkRoom();
    /* 800C0594 */ void checkNotBattleStage();
    /* 800C05DC */ void checkNotHeavyBootsStage();
    /* 800C0630 */ void checkNotAutoJumpStage();
    /* 800C0678 */ void checkCastleTownUseItem(u16);
    /* 800C077C */ void changeItemTriggerKeepProc(u8, int);
    /* 800C0A9C */ void checkNewItemChange(u8);
    /* 800C12DC */ void deleteEquipItem(int, int);
    /* 800C1704 */ void setLight();
    /* 800C1CEC */ void setFrontRollCrashShock(u8);
    /* 800C1DAC */ void getModelJointMtx(u16);
    /* 800C1DE0 */ void onFrollCrashFlg(u8, int);
    /* 800C1E0C */ void changeWarpMaterial(daAlink_c::daAlink_WARP_MAT_MODE);
    /* 800C1F6C */ void commonProcInit(daAlink_c::daAlink_PROC);
    /* 800C2DA4 */ void commonProcInitNotSameProc(daAlink_c::daAlink_PROC);
    /* 800C2DDC */ void procPreActionUnequipInit(int, fopAc_ac_c*);
    /* 800C2EAC */ void procPreActionUnequip();
    /* 800C3098 */ void procServiceWaitInit();
    /* 800C30F0 */ void procServiceWait();
    /* 800C3224 */ void procTiredWaitInit();
    /* 800C3338 */ void procTiredWait();
    /* 800C33B8 */ void procWaitInit();
    /* 800C3504 */ void procWait();
    /* 800C36CC */ void procMoveInit();
    /* 800C3730 */ void procMove();
    /* 800C3810 */ void procAtnMoveInit();
    /* 800C3868 */ void procAtnMove();
    /* 800C38CC */ void procAtnActorWaitInit();
    /* 800C397C */ void procAtnActorWait();
    /* 800C39EC */ void procAtnActorMoveInit();
    /* 800C3A44 */ void procAtnActorMove();
    /* 800C3A94 */ void procWaitTurnInit();
    /* 800C3B1C */ void procWaitTurn();
    /* 800C3C3C */ void procMoveTurnInit(int);
    /* 800C3D38 */ void procMoveTurn();
    /* 800C3DA0 */ void procSideStepInit(int);
    /* 800C3F60 */ void procSideStep();
    /* 800C40F0 */ void procSideStepLandInit();
    /* 800C4278 */ void procSideStepLand();
    /* 800C4378 */ void procSlideInit(s16);
    /* 800C4514 */ void procSlide();
    /* 800C47AC */ void procSlideLandInit(int);
    /* 800C4894 */ void procSlideLand();
    /* 800C494C */ void procFrontRollInit();
    /* 800C4B40 */ void procFrontRoll();
    /* 800C4F14 */ void procFrontRollCrashInit();
    /* 800C4FFC */ void procFrontRollCrash();
    /* 800C5160 */ void procFrontRollSuccessInit();
    /* 800C5240 */ void procFrontRollSuccess();
    /* 800C5328 */ void procSideRollInit(int);
    /* 800C5484 */ void procSideRoll();
    /* 800C5700 */ void backJumpSpeedDec();
    /* 800C57A4 */ void procBackJumpInit(int);
    /* 800C5964 */ void procBackJump();
    /* 800C5A54 */ void procBackJumpLandInit(int);
    /* 800C5AF0 */ void procBackJumpLand();
    /* 800C5C28 */ void procSlipInit();
    /* 800C5CA4 */ void procSlip();
    /* 800C5E68 */ void procAutoJumpInit(int);
    /* 800C61EC */ void procAutoJump();
    /* 800C66DC */ void procDiveJumpInit();
    /* 800C6798 */ void procDiveJump();
    /* 800C6850 */ void procRollJumpInit();
    /* 800C692C */ void procRollJump();
    /* 800C6A48 */ void procFallInit(int, f32);
    /* 800C6D20 */ void procFall();
    /* 800C6F18 */ void procLandInit(f32);
    /* 800C6FE4 */ void procLand();
    /* 800C70F8 */ void procSmallJumpInit(int);
    /* 800C72D4 */ void procSmallJump();
    /* 800C74D4 */ void procStepMoveInit();
    /* 800C755C */ void procStepMove();
    /* 800C7690 */ void procCrouchInit();
    /* 800C76F8 */ void procCrouch();
    /* 800C77F4 */ void procCoMetamorphoseInit();
    /* 800C7C64 */ void procCoMetamorphose();
    /* 800C82E8 */ void procCoMetamorphoseOnlyInit();
    /* 800C83A0 */ void procCoMetamorphoseOnly();
    /* 800C8460 */ void procFloorDownReboundInit();
    /* 800C84D0 */ void procFloorDownRebound();
    /* 800C854C */ void procGoronRideWaitInit(fopAc_ac_c*);
    /* 800C85D8 */ void procGoronRideWait();
    /* 800C8700 */ void execute();
    /* 800CAFC8 */ void setDrawHand();
    /* 800CB480 */ void checkSwordDraw();
    /* 800CB53C */ void checkShieldDraw();
    /* 800CB5F8 */ void checkItemDraw();
    /* 800CB694 */ void initShadowScaleLight();
    /* 800CBA38 */ void moveShadowScaleLight();
    /* 800CBC18 */ void shadowDraw();
    /* 800CC25C */ void modelCalc(J3DModel*);
    /* 800CC298 */ void basicModelDraw(J3DModel*);
    /* 800CC2E0 */ void modelDraw(J3DModel*, int);
    /* 800CC364 */ void setWaterDropColor(J3DGXColorS10 const*);
    /* 800CC7DC */ void initTevCustomColor();
    /* 800CC7FC */ void draw();
    /* 800CD7AC */ ~daAlink_c();
    /* 800CE294 */ void checkNoSubjectModeCamera();
    /* 800CE468 */ void acceptSubjectModeChange();
    /* 800CE628 */ void checkSubjectAction();
    /* 800CE728 */ void checkBodyAngleX(s16);
    /* 800CE8A0 */ void setBodyAngleToCamera();
    /* 800CEAF4 */ void setSubjectMode();
    /* 800CEB58 */ void subjectCancelTrigger();
    /* 800CEBD8 */ void checkSubjectEnd(int);
    /* 800CECE4 */ void searchPeepObj(fopAc_ac_c*, void*);
    /* 800CED84 */ void procCoSubjectivityInit();
    /* 800CEE08 */ void procCoSubjectivity();
    /* 800CEF70 */ void procCoSwimSubjectivityInit();
    /* 800CF018 */ void procCoSwimSubjectivity();
    /* 800CF100 */ void procCoPeepSubjectivityInit();
    /* 800CF1B8 */ void procCoPeepSubjectivity();
    /* 800CF25C */ void checkBoardRide() const;
    /* 800CF270 */ void checkCanoeRide() const;
    /* 800CF284 */ void checkHorseRide() const;
    /* 800CF298 */ void getLeftItemMatrix();
    /* 800CF2B4 */ void checkBoarRide() const;
    /* 800CF2C8 */ void checkSpinnerRide() const;
    /* 800CF2DC */ void getLeftHandMatrix();
    /* 800CF2F8 */ void getRightHandMatrix();
    /* 800CF314 */ void onSceneChangeArea(u8, u8, fopAc_ac_c*);
    /* 800CF328 */ void getRightItemMatrix();
    /* 800CF344 */ void checkPlayerNoDraw();
    /* 800CF380 */ daAlink_c();
    /* 800CFEB0 */ void checkRideOn() const;
    /* 800CFF4C */ void checkAttentionLock();
    /* 800D0020 */ void checkFmChainGrabAnime() const;
    /* 800D0048 */ void checkSmallUpperGuardAnime() const;
    /* 800D00EC */ void checkReinRide() const;
    /* 800D0110 */ void checkWolfEnemyThrowAnime() const;
    /* 800D0138 */ void checkSpecialDemoMode() const;
    /* 800D014C */ void setMidnaTalkStatus(u8);
    /* 800D0164 */ void set3DStatus(u8, u8);
    /* 800D018C */ void checkModeFlg(u32) const;
    /* 800D0198 */ void getShieldChangeWaitTimer() const;
    /* 800D01A0 */ void getClothesChangeWaitTimer() const;
    /* 800D01E0 */ void checkCutTurnCharge() const;
    /* 800D2684 */ void checkCutTurnCharge();
    /* 800D0208 */ void checkAcceptDungeonWarpAlink(int);
    /* 800D0228 */ void getSpinnerActor();
    /* 800D0274 */ void getSumouCounter() const;
    /* 800D027C */ void checkSumouWithstand() const;
    /* 800D0284 */ void setMidnaMsgNum(fopAc_ac_c*, u16);
    /* 800D0290 */ void getModelMtx();
    /* 800D029C */ void getInvMtx();
    /* 800D02A4 */ void getLinkBackBone1Matrix();
    /* 800D02B8 */ void getWolfMouthMatrix();
    /* 800D02CC */ void getWolfBackbone2Matrix();
    /* 800D02E0 */ void getBottleMtx();
    /* 800D0334 */ void getHeadMtx();
    /* 800D0350 */ void getGroundY();
    /* 800D0358 */ void getBaseAnimeFrameRate() const;
    /* 800D0360 */ void getAtnActorID() const;
    /* 800D0368 */ void getItemID() const;
    /* 800D0370 */ void getGrabActorID() const;
    /* 800D038C */ void setForcePutPos(cXyz const&);
    /* 800D03B4 */ void checkPlayerFly() const;
    /* 800D03C8 */ void checkFrontRoll() const;
    /* 800D03DC */ void checkWolfDash() const;
    /* 800D03F0 */ void checkAutoJump() const;
    /* 800D0414 */ void checkSideStep() const;
    /* 800D0444 */ void checkWolfTriggerJump() const;
    /* 800D0468 */ void checkGuardBreakMode() const;
    /* 800D047C */ void checkLv3Slide() const;
    /* 800D04A4 */ void checkWolfHowlDemoMode() const;
    /* 800D04B8 */ void checkElecDamage() const;
    /* 800D04CC */ void checkEmptyBottleSwing() const;
    /* 800D04F4 */ void checkBottleSwingMode() const;
    /* 800D0508 */ void checkHawkWait() const;
    /* 800D051C */ void checkGoatThrow() const;
    /* 800D0544 */ void checkGoatThrowAfter() const;
    /* 800D0570 */ void checkWolfTagLockJump() const;
    /* 800D0598 */ void checkWolfTagLockJumpLand() const;
    /* 800D05AC */ void checkWolfRopeHang() const;
    /* 800D05C0 */ void checkRollJump() const;
    /* 800D05D4 */ void checkGoronRideWait() const;
    /* 800D05E8 */ void checkWolfChain() const;
    /* 800D05FC */ void checkWolfWait() const;
    /* 800D0610 */ void checkWolfJumpAttack() const;
    /* 800D0624 */ void checkWolfRSit() const;
    /* 800D0638 */ void checkBottleDrinkEnd() const;
    /* 800D0660 */ void checkWolfDig() const;
    /* 800D0674 */ void checkCutCharge() const;
    /* 800D0688 */ void checkCutLargeJumpCharge() const;
    /* 800D06B0 */ void checkComboCutTurn() const;
    /* 800D06D8 */ void checkClimbMove() const;
    /* 800D0704 */ void checkGrassWhistle() const;
    /* 800D0718 */ void checkBoarRun() const;
    /* 800D072C */ void checkHorseRideNotReady() const;
    /* 800D0794 */ void getSearchBallScale() const;
    /* 800D079C */ void checkFastShotTime();
    /* 800D07A4 */ void checkCutJumpCancelTurn() const;
    /* 800D07D4 */ void checkSingleBoarBattleSecondBowReady() const;
    /* 800D07FC */ void cancelDungeonWarpReadyNeck();
    /* 800D0818 */ void onSceneChangeAreaJump(u8, u8, fopAc_ac_c*);
    /* 800D0830 */ void onSceneChangeDead(u8, int);
    /* 800D084C */ void checkNoEquipItem() const;
    /* 800D0860 */ void getBoardCutTurnOffsetAngleY() const;
    /* 800D087C */ void getMagneBootsTopVec();
    /* 800D0884 */ void setCargoCarry(fopAc_ac_c*);
    /* 800D08B0 */ void setGoronSideMove(fopAc_ac_c*);
    /* 800D08DC */ void setSumouReady(fopAc_ac_c*);
    /* 800D091C */ void setSumouPushBackDirection(s16);
    /* 800D0930 */ void setSumouLoseHeadUp();
    /* 800D0948 */ void checkPriActorOwn(fopAc_ac_c const*) const;
    /* 800D095C */ void checkWolfEnemyBiteAllOwn(fopAc_ac_c const*) const;
    /* 800D0970 */ void setWolfEnemyHangBiteAngle(s16);
    /* 800D0984 */ void setSumouGraspCancelCount(int);
    /* 800D0998 */ void checkItemSwordEquip() const;
    /* 800D09AC */ void getSinkShapeOffset() const;
    /* 800D09B4 */ void checkSinkDead() const;
    /* 800D09C8 */ void checkCutJumpMode() const;
    /* 800D09DC */ void getGiantPuzzleAimAngle() const;
    /* 800D09E4 */ void getSwordChangeWaitTimer() const;
    /* 800D09EC */ void checkMetamorphose() const;
    /* 800D0A14 */ void checkWolfDownAttackPullOut() const;
    /* 800D0A28 */ void getMidnaAtnPos() const;
    /* 800D0A30 */ void checkCopyRodEquip() const;
    /* 800D0A44 */ void checkCanoeFishingGetLeft() const;
    /* 800D0A6C */ void checkCanoeFishingGetRight() const;
    /* 800D0A94 */ void checkBeeChildDrink() const;
    /* 800D0A9C */ void getWolfHowlMgrP();
    /* 800D0AA4 */ void checkWolfHowlSuccessAnime() const;
    /* 800D0AC8 */ void checkOctaIealHang() const;
    /* 800D0AF0 */ void cancelOctaIealHang();
    /* 800D0B08 */ void cancelDragonHangBackJump();
    /* 800D0B20 */ void setOctaIealWildHang();
    /* 800D0B38 */ void checkDragonHangRide() const;
    /* 800D0B60 */ void playerStartCollisionSE(u32, u32);
    /* 800D0E08 */ void checkLightSwordMtrl();
    /* 800D0E98 */ void checkSwordEquipAnime() const;
    /* 800D0ECC */ void checkCutDashAnime() const;
    /* 800D0EFC */ void checkCutDashEnemyHit(dCcD_GObjInf&);
    /* 800D0F5C */ void getSwordAtType();
    /* 800D0F90 */ void initCutTurnAt(f32, int);
    /* 800D102C */ void checkCutFinishJumpUp();
    /* 800D1088 */ void changeCutFast();
    /* 800D10E0 */ void checkCutFastReady();
    /* 800D1268 */ void setSwordModel();
    /* 800D1310 */ void offSwordModel();
    /* 800D13AC */ void checkCutTypeNoBlur() const;
    /* 800D13E4 */ void checkCutTurnInput() const;
    /* 800D1424 */ void getCutTurnDirection() const;
    /* 800D1430 */ void resetCombo(int);
    /* 800D1454 */ void checkComboCnt();
    /* 800D152C */ void setCutType(u8);
    /* 800D1540 */ void setCylAtParam(u32, dCcG_At_Spl, u8, u8, int, f32, f32);
    /* 800D1688 */ void setSwordAtParam(dCcG_At_Spl, u8, u8, int, f32, f32);
    /* 800D1788 */ void notSwordHitVibActor(fopAc_ac_c*);
    /* 800D17EC */ void setSwordHitVibration(dCcD_GObjInf*);
    /* 800D1920 */ void checkAtShieldHit(dCcD_GObjInf&);
    /* 800D1978 */ void checkCutReverseAt(dCcD_GObjInf*);
    /* 800D19C8 */ void changeCutReverseProc(daAlink_c::daAlink_ANM);
    /* 800D1E1C */ void setCutDash(int, int);
    /* 800D20B4 */ void checkForceSwordSwing();
    /* 800D20FC */ void setComboReserb();
    /* 800D2188 */ void checkComboReserb();
    /* 800D21D0 */ void commonCutAction();
    /* 800D2284 */ void setSwordVoiceSe(u32);
    /* 800D22BC */ void setSwordChargeVoiceSe();
    /* 800D2304 */ void setSwordComboVoice();
    /* 800D2368 */ void checkCutTurnInputTrigger();
    /* 800D23C0 */ void checkCutAction();
    /* 800D26EC */ void getCutDirection();
    /* 800D2760 */ void checkCutCancelNextMode(int);
    /* 800D27E4 */ void checkDoCutAction();
    /* 800D2890 */ void checkCutBackState();
    /* 800D28F4 */ void checkCutHeadState();
    /* 800D29D4 */ void checkDownAttackState();
    /* 800D2ABC */ void checkCutLargeTurnState() const;
    /* 800D2B88 */ void cancelCutCharge();
    /* 800D2BFC */ void initCutAtnActorSearch();
    /* 800D2C54 */ void checkCutAtnActorChange();
    /* 800D2C78 */ void setCutJumpSpeed(int);
    /* 800D2F58 */ void procCutNormalInit(int);
    /* 800D31B8 */ void procCutNormal();
    /* 800D34D8 */ void procCutFinishInit(int);
    /* 800D382C */ void procCutFinish();
    /* 800D3ADC */ void procCutFinishJumpUpInit();
    /* 800D3CCC */ void procCutFinishJumpUp();
    /* 800D3DD8 */ void procCutFinishJumpUpLandInit();
    /* 800D3ECC */ void procCutFinishJumpUpLand();
    /* 800D4068 */ void procCutReverseInit(daAlink_c::daAlink_ANM);
    /* 800D41FC */ void procCutReverse();
    /* 800D42FC */ void procCutJumpInit(int);
    /* 800D43F8 */ void procCutJump();
    /* 800D452C */ void procCutJumpLandInit(int);
    /* 800D4684 */ void procCutJumpLand();
    /* 800D47DC */ void procCutTurnInit(int, int);
    /* 800D4A74 */ void procCutTurn();
    /* 800D4C68 */ void procCutTurnChargeInit();
    /* 800D4D04 */ void procCutTurnCharge();
    /* 800D4DDC */ void procCutTurnMoveInit(int);
    /* 800D4EFC */ void procCutTurnMove();
    /* 800D53C8 */ void procCutDownInit();
    /* 800D57F8 */ void procCutDown();
    /* 800D58A0 */ void procCutDownLandInit(fopEn_enemy_c*);
    /* 800D5ADC */ void procCutDownLand();
    /* 800D5C88 */ void procCutHeadInit();
    /* 800D5FC8 */ void procCutHead();
    /* 800D6130 */ void procCutHeadLandInit();
    /* 800D618C */ void procCutHeadLand();
    /* 800D6238 */ void procCutLargeJumpChargeInit();
    /* 800D62A0 */ void procCutLargeJumpCharge();
    /* 800D6374 */ void procCutLargeJumpInit();
    /* 800D6484 */ void procCutLargeJump();
    /* 800D66C0 */ void procCutLargeJumpLandInit(int);
    /* 800D67FC */ void procCutLargeJumpLand();
    /* 800D698C */ void procSwordUnequipSpInit();
    /* 800D6A38 */ void procSwordUnequipSp();
    /* 800D6D94 */ void getFreezeR() const;
    /* 800D6DA4 */ void getFreezeG() const;
    /* 800D6DB4 */ void getFreezeB() const;
    /* 800D6DC4 */ void checkMiddleBossGoronRoom();
    /* 800D6DF0 */ void setDkCaught(fopAc_ac_c*);
    /* 800D6E24 */ void freezeTimerDamage();
    /* 800D6F00 */ void onPressedDamage(cXyz const&, s16);
    /* 800D6F2C */ void checkNoLandDamageSlidePolygon();
    /* 800D6FE0 */ void checkCutLandDamage();
    /* 800D70A0 */ void checkCaughtEscapeCutTurn();
    /* 800D7160 */ void setThrowDamage(s16, f32, f32, int, int, int);
    /* 800D7208 */ void damageMagnification(int, int);
    /* 800D72BC */ void setDamagePoint(int, int, int, int);
    /* 800D7478 */ void setDamagePointNormal(int);
    /* 800D74A4 */ void setLandDamagePoint(int);
    /* 800D74F4 */ void getDamageVec(dCcD_GObjInf*);
    /* 800D76C4 */ void setDashDamage();
    /* 800D7768 */ void checkIcePolygonDamage(cBgS_PolyInfo*);
    /* 800D77C8 */ void checkMagicArmorNoDamage();
    /* 800D7820 */ void checkPolyDamage();
    /* 800D7A98 */ void checkElecReturnDamage(dCcD_GObjInf&, fopAc_ac_c**);
    /* 800D7B18 */ void damageTimerCount();
    /* 800D7BE8 */ void checkHugeAttack(int) const;
    /* 800D7C14 */ void checkLargeAttack(int) const;
    /* 800D7C40 */ void checkDamageAction();
    /* 800D8F3C */ void procDamageInit(dCcD_GObjInf*, int);
    /* 800D9514 */ void procDamage();
    /* 800D96DC */ void procCoLargeDamageInit(int, int, s16, s16, dCcD_GObjInf*, int);
    /* 800D9E88 */ void procCoLargeDamage();
    /* 800DA180 */ void procLargeDamageUpInit(int, int, s16, s16);
    /* 800DA554 */ void procLargeDamageUp();
    /* 800DA82C */ void procCoLargeDamageWallInit(int, int, s16, s16);
    /* 800DAC28 */ void procCoLargeDamageWall();
    /* 800DAC84 */ void procCoPolyDamageInit();
    /* 800DAD90 */ void procCoPolyDamage();
    /* 800DAE10 */ void procLandDamageInit(int);
    /* 800DB060 */ void procLandDamage();
    /* 800DB140 */ void procCoElecDamageInit(fopAc_ac_c*, dCcD_GObjInf*, int);
    /* 800DB418 */ void procCoElecDamage();
    /* 800DB5B0 */ void procStEscapeInit();
    /* 800DB610 */ void procStEscape();
    /* 800DB6A4 */ void procDkCaughtInit(unsigned int);
    /* 800DB860 */ void procDkCaught();
    /* 800DBC98 */ void setScreamWaitAnime();
    /* 800DBD1C */ void procScreamWaitInit();
    /* 800DBDA4 */ void procScreamWait();
    /* 800DBE00 */ void procCoSandWallHitInit();
    /* 800DBE74 */ void procCoSandWallHit();
    /* 800DBED8 */ void procCoLavaReturnInit(int);
    /* 800DC214 */ void procCoLavaReturn();
    /* 800DC278 */ void procCoSwimFreezeReturnInit();
    /* 800DC474 */ void procCoSwimFreezeReturn();
    /* 800DC548 */ void checkEnemyGroup(fopAc_ac_c*);
    /* 800DC5A4 */ void checkSpecialNpc(fopAc_ac_c*);
    /* 800DC5DC */ void checkShieldAttackEmphasys();
    /* 800DC678 */ void checkGuardActionChange();
    /* 800DC79C */ void stickArrowIncrement(int);
    /* 800DC8C4 */ void setArrowShieldActor(fopAc_ac_c*, int);
    /* 800DCA2C */ void checkWoodShieldEquipNotIronBall() const;
    /* 800DCA80 */ void getArrowShieldOffset(cXyz const*, csXyz const*, cXyz*, cXyz*) const;
    /* 800DCD74 */ void setArrowShieldPos(cXyz*, csXyz*, cXyz const*, cXyz const*) const;
    /* 800DCDF0 */ void checkUpperGuardAnime() const;
    /* 800DCE6C */ void checkPlayerGuard() const;
    /* 800DCF04 */ void checkPlayerGuardAndAttack() const;
    /* 800DCF64 */ void checkGuardAccept();
    /* 800DD008 */ void setUpperGuardAnime(f32);
    /* 800DD018 */ void setShieldGuard();
    /* 800DD114 */ void setGuardSe(dCcD_GObjInf*);
    /* 800DD1D4 */ void setSmallGuard(dCcD_GObjInf*);
    /* 800DD3E4 */ void procGuardSlipInit(int, dCcD_GObjInf*);
    /* 800DD894 */ void procGuardSlip();
    /* 800DDA10 */ void procGuardAttackInit();
    /* 800DDBA8 */ void procGuardAttack();
    /* 800DDE58 */ void procGuardBreakInit();
    /* 800DDF2C */ void procGuardBreak();
    /* 800DE008 */ void procTurnMoveInit(int);
    /* 800DE380 */ void procTurnMove();
    /* 800DE64C */ void getArrowFlyData(f32*, f32*, int) const;
    /* 800DE740 */ void getArrowIncAtR() const;
    /* 800DE750 */ void getBombArrowFlyExplodeTime() const;
    /* 800DE760 */ void getArrowIncAtMaxStart() const;
    /* 800DE770 */ void getArrowIncAtMax() const;
    /* 800DE780 */ void checkBowAndSlingItem(int);
    /* 800DE7D4 */ void setSlingModel();
    /* 800DE884 */ void checkBowCameraArrowPosP(s16*, s16*);
    /* 800DE990 */ void checkArrowChargeEnd() const;
    /* 800DE9B8 */ void checkBowReadyAnime() const;
    /* 800DE9E8 */ void checkBowAnime() const;
    /* 800DEA3C */ void makeArrow();
    /* 800DEAE4 */ void deleteArrow();
    /* 800DEB8C */ void setBowOrSlingStatus();
    /* 800DEBC8 */ void changeArrowType();
    /* 800DED88 */ void cancelBowMoveRideNotAtn();
    /* 800DEE1C */ void cancelBowMove();
    /* 800DEEDC */ void setBowReadyAnime();
    /* 800DEFB8 */ void setBowReloadAnime();
    /* 800DF0BC */ void checkUpperItemActionBow();
    /* 800DF798 */ void checkUpperItemActionBowFly();
    /* 800DF814 */ void checkNextActionBow();
    /* 800DFAE8 */ void setBowModel();
    /* 800DFBC8 */ void checkBowGrabLeftHand() const;
    /* 800DFC28 */ void setBowHangAnime();
    /* 800DFC70 */ void setBowNormalAnime();
    /* 800DFCD8 */ void setBowSight();
    /* 800DFD6C */ void procBowSubjectInit();
    /* 800DFDDC */ void procBowSubject();
    /* 800DFE3C */ void procBowMoveInit();
    /* 800DFEC0 */ void procBowMove();
    /* 800DFFE0 */ void checkBoomerangLockAccept();
    /* 800E0010 */ void getBoomSpeed();
    /* 800E00B0 */ void getBoomCatchSpeed() const;
    /* 800E00C0 */ void getBoomFlyMax() const;
    /* 800E011C */ void getBoomLockMax();
    /* 800E0190 */ void getBoomBgThroughTime() const;
    /* 800E01A0 */ void checkBossBabaRoom();
    /* 800E01CC */ void cancelBoomerangLock(fopAc_ac_c*);
    /* 800E0210 */ void getBoomerangActor();
    /* 800E0244 */ void checkBoomerangChargeEnd();
    /* 800E02B8 */ void checkBoomerangCarry(fopAc_ac_c*);
    /* 800E03D0 */ void initBoomerangUpperAnimeSpeed(int);
    /* 800E0440 */ void checkBoomerangAnime() const;
    /* 800E04AC */ void checkBoomerangThrowAnime() const;
    /* 800E04E8 */ void setBoomerangReadyQuake();
    /* 800E055C */ void setBoomerangReadyAnime();
    /* 800E05E8 */ void setThrowBoomerangAnime();
    /* 800E0630 */ void setBoomerangCatchAnime();
    /* 800E06B8 */ void throwBoomerang();
    /* 800E08C4 */ void returnBoomerang(int);
    /* 800E0A9C */ void checkUpperItemActionBoomerang();
    /* 800E0B58 */ void checkUpperItemActionBoomerangFly();
    /* 800E0BE4 */ void checkNextActionBoomerang();
    /* 800E0D8C */ void checkBoomerangCatchAction();
    /* 800E0E64 */ void setBoomerangSight();
    /* 800E0F10 */ void procBoomerangSubjectInit();
    /* 800E0FA0 */ void procBoomerangSubject();
    /* 800E1060 */ void procBoomerangMoveInit();
    /* 800E10F4 */ void procBoomerangMove();
    /* 800E11D8 */ void procBoomerangCatchInit();
    /* 800E1248 */ void procBoomerangCatch();
    /* 800E12E0 */ void checkLv6BossRoom();
    /* 800E1310 */ void getCopyRodBallSpeed() const;
    /* 800E1320 */ void getCopyRodBallReturnSpeed() const;
    /* 800E1330 */ void getCopyRodBallDisMax() const;
    /* 800E1374 */ void getCopyRodControllActor();
    /* 800E1390 */ void getCopyRodCameraActor();
    /* 800E13AC */ void initCopyRodUpperAnimeSpeed(int);
    /* 800E1408 */ void checkForestOldCentury();
    /* 800E145C */ void checkCopyRodTopUse();
    /* 800E1530 */ void checkCopyRodAnime() const;
    /* 800E158C */ void setCopyRodControllAnime();
    /* 800E15FC */ void setCopyRodControllUpperSpeedRate();
    /* 800E1748 */ void setCopyRodModel();
    /* 800E1840 */ void setCopyRodReadyAnime();
    /* 800E191C */ void throwCopyRod();
    /* 800E1A30 */ void returnCopyRod();
    /* 800E1ADC */ void checkUpperItemActionCopyRod();
    /* 800E1BB4 */ void checkUpperItemActionCopyRodFly();
    /* 800E1C44 */ void checkNextActionCopyRod();
    /* 800E1D6C */ void setCopyRodSight();
    /* 800E1E20 */ void procCopyRodSubjectInit();
    /* 800E1EB0 */ void procCopyRodSubject();
    /* 800E1F68 */ void procCopyRodMoveInit();
    /* 800E1FFC */ void procCopyRodMove();
    /* 800E20C8 */ void procCopyRodSwingInit();
    /* 800E21FC */ void procCopyRodSwing();
    /* 800E2308 */ void procCopyRodReviveInit();
    /* 800E23A4 */ void procCopyRodRevive();
    /* 800E23FC */ void concatMagneBootMtx();
    /* 800E243C */ void concatMagneBootInvMtx();
    /* 800E247C */ void multVecMagneBootInvMtx(cXyz*);
    /* 800E24B0 */ void commonMagneLineCheck(cXyz*, cXyz*);
    /* 800E251C */ void checkBootsMoveAnime(int);
    /* 800E2580 */ void setHeavyBoots(int);
    /* 800E2738 */ void getMagneBootsLocalAngleY(s16, int);
    /* 800E2808 */ void setMagneBootsMtx(cBgS_PolyInfo*, int);
    /* 800E2DC4 */ void cancelMagneBootsOn();
    /* 800E2F88 */ void checkMagneBootsFly();
    /* 800E3048 */ void procBootsEquipInit();
    /* 800E30DC */ void procBootsEquip();
    /* 800E3218 */ void procMagneBootsFlyInit();
    /* 800E3454 */ void procMagneBootsFly();
    /* 800E3760 */ void getBombExplodeTime() const;
    /* 800E3770 */ void getBombGravity() const;
    /* 800E3780 */ void getBombMaxFallSpeed() const;
    /* 800E3790 */ void getBombBoundRate() const;
    /* 800E37A0 */ void getBombStopSpeedY() const;
    /* 800E37B0 */ void getBombMaxSpeedY() const;
    /* 800E37C0 */ void getBombEffScale() const;
    /* 800E37D0 */ void getBombAtR() const;
    /* 800E37E0 */ void getEnemyBombColorR() const;
    /* 800E37F0 */ void getBombWaterGravity() const;
    /* 800E3800 */ void getBombWaterMaxFallSpeed() const;
    /* 800E3810 */ void getBombExplodeWaterEffectLimit() const;
    /* 800E3820 */ void getBombInsectLimitAngle() const;
    /* 800E38EC */ void checkGrabLineCheck();
    /* 800E3994 */ void setGrabCollisionOffset(f32, f32, cBgS_PolyInfo*);
    /* 800E3A14 */ void exchangeGrabActor(fopAc_ac_c*);
    /* 800E3A9C */ void setForceGrab(fopAc_ac_c*, int, int);
    /* 800E3BCC */ void getGrabThrowRate();
    /* 800E3C1C */ void checkGrabThrowAnime() const;
    /* 800E3C6C */ void checkGrabAnime() const;
    /* 800E3C9C */ void checkGrabAnimeAndThrow() const;
    /* 800E3CF4 */ void checkGrabCarryActor();
    /* 800E3D1C */ void checkGrabSlowMoveActor();
    /* 800E3D6C */ void checkGrabHeavyActor();
    /* 800E3D94 */ void checkGrabSideActor();
    /* 800E3DBC */ void setGrabUpperAnime(f32);
    /* 800E3F20 */ void checkGrabRooster();
    /* 800E3F50 */ void setGrabItemPos();
    /* 800E4BD4 */ void freeGrabItem();
    /* 800E4DEC */ void setGrabUpperSpeedRate();
    /* 800E4FA8 */ void setCarryArmAngle(f32, f32);
    /* 800E5150 */ void checkGrabNotThrow();
    /* 800E5170 */ void checkNextActionGrab();
    /* 800E53AC */ void initGrabNextMode();
    /* 800E53F8 */ void setGrabItemThrow();
    /* 800E57AC */ void checkUpperGrabItemThrow(f32);
    /* 800E5830 */ void putObjLineCheck(dBgS_LinChk&, cXyz*, fopAc_ac_c*);
    /* 800E5B6C */ void grabLineCheck(cXyz*, cXyz*);
    /* 800E5BB4 */ void setGrabItemActor(fopAc_ac_c*);
    /* 800E5CBC */ void procGrabReadyInit();
    /* 800E5EC8 */ void procGrabReady();
    /* 800E5FD0 */ void procGrabUpInit();
    /* 800E6230 */ void procGrabUp();
    /* 800E637C */ void procGrabMiss();
    /* 800E63F0 */ void procGrabThrowInit(int);
    /* 800E65F8 */ void procGrabThrow();
    /* 800E672C */ void procGrabPutInit();
    /* 800E6914 */ void procGrabPut();
    /* 800E6A9C */ void procGrabWaitInit();
    /* 800E6C34 */ void procGrabWait();
    /* 800E6D6C */ void procGrabReboundInit(int);
    /* 800E6E0C */ void procGrabRebound();
    /* 800E6EEC */ void procGrabStandInit();
    /* 800E6FE0 */ void procGrabStand();
    /* 800E70C0 */ void checkInsectActorName(fopAc_ac_c*);
    /* 800E70FC */ void procInsectCatchInit();
    /* 800E71D4 */ void procInsectCatch();
    /* 800E7254 */ void procPickUpInit();
    /* 800E7460 */ void procPickUp();
    /* 800E75EC */ void procPickPutInit(int);
    /* 800E76E0 */ void procPickPut();
    /* 800E7894 */ void checkSetChainPullAnime(s16);
    /* 800E794C */ void getChainStickAngleY(s16) const;
    /* 800E7994 */ void checkChainEmphasys();
    /* 800E79F8 */ void searchFmChainPos();
    /* 800E7AEC */ void setFmChainPosFromOut(fopAc_ac_c*, cXyz*, int);
    /* 800E7BD0 */ void checkChainBlockPushPull();
    /* 800E7C30 */ void procFmChainUpInit();
    /* 800E7CC0 */ void procFmChainUp();
    /* 800E7DD8 */ void procFmChainStrongPullInit();
    /* 800E7E50 */ void procFmChainStrongPull();
    /* 800E7ED0 */ void setWallGrabStatus(u8, u8);
    /* 800E7EE4 */ void getWallGrabStatus();
    /* 800E7EF4 */ void wallGrabTrigger();
    /* 800E7F18 */ void wallGrabButton();
    /* 800E7F3C */ void setPushPullKeepData(dBgW_Base::PushPullLabel, int);
    /* 800E80A4 */ void checkPushPullTurnBlock();
    /* 800E8148 */ void checkPullBehindWall();
    /* 800E8298 */ void offGoatStopGame();
    /* 800E82B0 */ void checkGoatCatchActor(fopAc_ac_c*);
    /* 800E8314 */ void getGoatCatchDistance2();
    /* 800E8334 */ void endPushPull();
    /* 800E8354 */ void getPushPullAnimeSpeed();
    /* 800E8428 */ void procCoPushPullWaitInit(int);
    /* 800E857C */ void procCoPushPullWait();
    /* 800E875C */ void procCoPushMoveInit(int, int);
    /* 800E89F0 */ void procCoPushMove();
    /* 800E8D1C */ void procPullMoveInit(int);
    /* 800E8F44 */ void procPullMove();
    /* 800E91C4 */ void cancelGoronThrowEvent();
    /* 800E9210 */ void setGoatStopGameFail(fopAc_ac_c*);
    /* 800E9344 */ void procGoatMoveInit();
    /* 800E9434 */ void procGoatMove();
    /* 800E9894 */ void procGoatCatchInit(fopAc_ac_c*, f32);
    /* 800E9BD0 */ void procGoatCatch();
    /* 800EA2A8 */ void procGoatStrokeInit();
    /* 800EA3AC */ void procGoatStroke();
    /* 800EA3F4 */ void procGoronMoveInit();
    /* 800EA4CC */ void procGoronMove();
    /* 800EA844 */ void checkSumouVsActor();
    /* 800EA8D0 */ void cancelSumouMode();
    /* 800EA908 */ void sumouPunchTrigger();
    /* 800EA92C */ void setSumouPunchStatus();
    /* 800EA950 */ void procSumouReadyInit();
    /* 800EAA28 */ void procSumouReady();
    /* 800EAC4C */ void procSumouMoveInit();
    /* 800EAD84 */ void procSumouMove();
    /* 800EB208 */ void procSumouSideMoveInit();
    /* 800EB2BC */ void procSumouSideMove();
    /* 800EB624 */ void procSumouActionInit(int, int, int);
    /* 800EBCE0 */ void procSumouAction();
    /* 800EC0F8 */ void procSumouStaggerInit();
    /* 800EC170 */ void procSumouStagger();
    /* 800EC20C */ void procSumouWinLoseInit();
    /* 800EC3D8 */ void procSumouWinLose();
    /* 800EC538 */ void procSumouShikoInit();
    /* 800EC5F4 */ void procSumouShiko();
    /* 800EC76C */ void checkHorseZeldaBowMode();
    /* 800EC7B0 */ void setHorseZeldaDamage();
    /* 800EC7DC */ void checkHorseDashAccept();
    /* 800EC814 */ void checkCowGame();
    /* 800EC87C */ void getReinRideDirection();
    /* 800EC8F8 */ void checkReinRideBgCheck();
    /* 800ECA3C */ void commonInitForceRideRein();
    /* 800ECAAC */ void initForceRideBoar();
    /* 800ECB58 */ void initForceRideHorse();
    /* 800ECBD0 */ void rideGetOff();
    /* 800ECD90 */ void checkHorseNotDamageReaction() const;
    /* 800ECDC4 */ void checkHorseWaitLashAnime() const;
    /* 800ECDEC */ void checkHorseReinLeftOnly() const;
    /* 800ECE10 */ void getReinHandType() const;
    /* 800ECF04 */ void checkHorseLieAnime() const;
    /* 800ECF5C */ void checkHorseSubjectivity() const;
    /* 800ECF9C */ void setHorseSwordUpAnime();
    /* 800ECFF4 */ void setHorseTurnUpperAnime(int);
    /* 800ED074 */ void checkHorseNoUpperAnime() const;
    /* 800ED0D4 */ void getHorseReinHandPos(cXyz*, cXyz*);
    /* 800ED1F0 */ void checkHorseNotGrab() const;
    /* 800ED310 */ void setHorseStirrup();
    /* 800ED4B8 */ void changeBoarRunRide();
    /* 800ED4DC */ void setSyncHorsePos();
    /* 800ED78C */ void setSyncBoarPos();
    /* 800ED90C */ void setSyncBoarRunPos();
    /* 800EDA24 */ void setSyncRidePos();
    /* 800EDA78 */ void setHorseTurnAnime();
    /* 800EDB48 */ void getBaseHorseAnime(daAlink_c::daAlink_ANM*);
    /* 800EDD6C */ void checkHorseSpecialProc();
    /* 800EDE8C */ void checkHorseServiceWaitAnime();
    /* 800EDEEC */ void setSyncHorse(int);
    /* 800EE64C */ void setSyncBoar(int);
    /* 800EE918 */ void setSyncRide(int);
    /* 800EEAE8 */ void setBaseHorseAnimeFrame();
    /* 800EEC98 */ void setBaseBoarAnime();
    /* 800EED98 */ void setBaseRideAnime();
    /* 800EEE30 */ void checkHorseSwordUpSpped();
    /* 800EEE5C */ void setHorseSwordUp(int);
    /* 800EEF30 */ void setRideSubjectAngle(s16);
    /* 800EF050 */ void setBodyAngleRideReadyAnime();
    /* 800EF0E8 */ void checkHorseGetOffWallCheck(cXyz*, cXyz*, s16);
    /* 800EF198 */ void checkHorseGetOffDirection();
    /* 800EF35C */ void boarForceGetOff();
    /* 800EF394 */ void horseGetOffEnd();
    /* 800EF450 */ void checkNextActionHorse();
    /* 800EF598 */ void checkHorseGetOff();
    /* 800EF6B0 */ void checkHorseGetOffAndSetDoStatus();
    /* 800EF884 */ void setHorseGetOff(int);
    /* 800EF95C */ void procHorseRideInit();
    /* 800EFDC4 */ void procHorseRide();
    /* 800F038C */ void procHorseGetOffInit(int);
    /* 800F0620 */ void procHorseGetOff();
    /* 800F0980 */ void procHorseWaitInit();
    /* 800F0AA4 */ void procHorseWait();
    /* 800F0C6C */ void procHorseTurnInit();
    /* 800F0CE4 */ void procHorseTurn();
    /* 800F1060 */ void procHorseJumpInit();
    /* 800F10F8 */ void procHorseJump();
    /* 800F1188 */ void procHorseLandInit();
    /* 800F1204 */ void procHorseLand();
    /* 800F1294 */ void procHorseSubjectivityInit();
    /* 800F12F8 */ void procHorseSubjectivity();
    /* 800F13D8 */ void procHorseCutInit();
    /* 800F1688 */ void procHorseCut();
    /* 800F1894 */ void procHorseCutChargeReadyInit();
    /* 800F194C */ void procHorseCutChargeReady();
    /* 800F1AAC */ void procHorseCutTurnInit();
    /* 800F1BA4 */ void procHorseCutTurn();
    /* 800F1D18 */ void procHorseDamageInit(dCcD_GObjInf*);
    /* 800F2028 */ void procHorseDamage();
    /* 800F2150 */ void procHorseBowSubjectInit();
    /* 800F21B4 */ void procHorseBowSubject();
    /* 800F224C */ void procHorseBowMoveInit();
    /* 800F22A8 */ void procHorseBowMove();
    /* 800F2334 */ void procHorseGrabMoveInit();
    /* 800F2390 */ void procHorseGrabMove();
    /* 800F2454 */ void procHorseBoomerangSubjectInit();
    /* 800F24C8 */ void procHorseBoomerangSubject();
    /* 800F25B4 */ void procHorseBoomerangMoveInit();
    /* 800F2628 */ void procHorseBoomerangMove();
    /* 800F26F4 */ void procHorseHookshotSubjectInit();
    /* 800F2770 */ void procHorseHookshotSubject();
    /* 800F2824 */ void procHorseHookshotMoveInit();
    /* 800F2898 */ void procHorseHookshotMove();
    /* 800F2934 */ void procHorseBottleDrinkInit(u16);
    /* 800F2AD8 */ void procHorseBottleDrink();
    /* 800F2B4C */ void procHorseKandelaarPourInit();
    /* 800F2C78 */ void procHorseKandelaarPour();
    /* 800F2D84 */ void procHorseComebackInit();
    /* 800F2DE4 */ void procHorseComeback();
    /* 800F2EE0 */ void procHorseRunInit();
    /* 800F2F98 */ void procHorseRun();
    /* 800F3430 */ void procHorseHangInit(dCcD_GObjInf*, int);
    /* 800F3580 */ void procHorseHang();
    /* 800F36E4 */ void procHorseGetKeyInit();
    /* 800F3754 */ void procHorseGetKey();
    /* 800F3818 */ void procHorseLookDownInit();
    /* 800F3894 */ void procHorseLookDown();
    /* 800F38E8 */ void procBoarRunInit();
    /* 800F3998 */ void procBoarRun();
    /* 800F3BB0 */ void getCanoeMaxSpeed() const;
    /* 800F3BDC */ void getCanoeBackMaxSpeed() const;
    /* 800F3BEC */ void getCanoeCres() const;
    /* 800F3C18 */ void getCanoeSpeedRate() const;
    /* 800F3C44 */ void getCanoeMaxRotSpeed() const;
    /* 800F3CCC */ void getCanoeLocalPaddleTop();
    /* 800F3CF8 */ void checkCanoeRideTandem();
    /* 800F3D58 */ void checkFishingRodAndLureItem() const;
    /* 800F3DA0 */ void initFishingRodHand();
    /* 800F3DFC */ void getCanoePaddleMatrix();
    /* 800F3E4C */ void checkFishingRodGrab(fopAc_ac_c*) const;
    /* 800F3EB8 */ void checkCanoePaddleGrab(fopAc_ac_c*) const;
    /* 800F3F38 */ void checkCanoeFishingRodGrabOrPut() const;
    /* 800F3FC4 */ void initCanoeRide();
    /* 800F4008 */ void checkCanoeJumpRide();
    /* 800F40E4 */ void setArmReelAnime();
    /* 800F4140 */ void setFishingWaitAction();
    /* 800F4490 */ void setFishGetFace();
    /* 800F4564 */ void setRideCanoeBasePos(fopAc_ac_c*);
    /* 800F459C */ void setSyncCanoePos();
    /* 800F47D8 */ void canoeCommon();
    /* 800F4924 */ void checkNextActionCanoe();
    /* 800F4A50 */ void procCanoeRideInit();
    /* 800F4B90 */ void procCanoeRide();
    /* 800F4C78 */ void procCanoeJumpRideInit(fopAc_ac_c*);
    /* 800F4D84 */ void procCanoeJumpRide();
    /* 800F4DF8 */ void procCanoeGetOffInit();
    /* 800F5048 */ void procCanoeGetOff();
    /* 800F51E4 */ void procCanoeWaitInit(int);
    /* 800F542C */ void procCanoeWait();
    /* 800F571C */ void procCanoeRowInit(int);
    /* 800F5A1C */ void procCanoeRow();
    /* 800F5D04 */ void procCanoePaddleShiftInit(int);
    /* 800F5DB8 */ void procCanoePaddleShift();
    /* 800F5EA8 */ void procCanoePaddlePutInit(int);
    /* 800F5FEC */ void procCanoePaddlePut();
    /* 800F6140 */ void procCanoePaddleGrabInit();
    /* 800F6188 */ void procCanoePaddleGrab();
    /* 800F6320 */ void procCanoeRodGrabInit();
    /* 800F6394 */ void procCanoeRodGrab();
    /* 800F6464 */ void procCanoeFishingWaitInit();
    /* 800F659C */ void procCanoeFishingWait();
    /* 800F67C0 */ void procCanoeFishingReelInit();
    /* 800F6874 */ void procCanoeFishingReel();
    /* 800F69D4 */ void procCanoeFishingGetInit();
    /* 800F6A70 */ void procCanoeFishingGet();
    /* 800F6BEC */ void procCanoeSubjectivityInit();
    /* 800F6C30 */ void procCanoeSubjectivity();
    /* 800F6D10 */ void procCanoeBowSubjectInit();
    /* 800F6D64 */ void procCanoeBowSubject();
    /* 800F6DF0 */ void procCanoeBowMoveInit();
    /* 800F6E44 */ void procCanoeBowMove();
    /* 800F6EB0 */ void procCanoeGrabMoveInit();
    /* 800F6EFC */ void procCanoeGrabMove();
    /* 800F6FA4 */ void procCanoeBoomerangSubjectInit();
    /* 800F7010 */ void procCanoeBoomerangSubject();
    /* 800F70F0 */ void procCanoeBoomerangMoveInit();
    /* 800F715C */ void procCanoeBoomerangMove();
    /* 800F7208 */ void procCanoeHookshotSubjectInit();
    /* 800F7274 */ void procCanoeHookshotSubject();
    /* 800F731C */ void procCanoeHookshotMoveInit();
    /* 800F7388 */ void procCanoeHookshotMove();
    /* 800F7404 */ void procCanoeBottleDrinkInit(u16);
    /* 800F7550 */ void procCanoeBottleDrink();
    /* 800F75BC */ void procCanoeKandelaarPourInit();
    /* 800F7684 */ void procCanoeKandelaarPour();
    /* 800F7708 */ void setGroundFishingRodActor();
    /* 800F7760 */ void procFishingCastInit();
    /* 800F7814 */ void procFishingCast();
    /* 800F7988 */ void procFishingFoodInit();
    /* 800F7AA8 */ void procFishingFood();
    /* 800F7C50 */ void getCrawlMoveAnmSpeed();
    /* 800F7C74 */ void getCrawlMoveSpeed();
    /* 800F7CE8 */ void setCrawlMoveDirectionArrow();
    /* 800F7E48 */ void changeCrawlAutoMoveProc(cXyz*);
    /* 800F81C0 */ void getCrawlMoveVec(cXyz*, cXyz*, cXyz*, int, int, u8*);
    /* 800F85C0 */ void crawlBgCheck(cXyz*, cXyz*, int);
    /* 800F8700 */ void checkCrawlSideWall(cXyz*, cXyz*, cXyz*, cXyz*, s16*, s16*);
    /* 800F88F8 */ void decideCrawlDoStatus();
    /* 800F89E0 */ void checkNotCrawlStand(cXyz*);
    /* 800F8A50 */ void checkNotCrawlStand(cXyz*, cXyz*);
    /* 800F8B00 */ void checkCrawlInHoll(cXyz*, cXyz*, cXyz*, int);
    /* 800F8D04 */ void setCrawlMoveHoll();
    /* 800F8DBC */ void setCrawlMoveAngle();
    /* 800F8F08 */ void stopHalfMoveAnime(f32);
    /* 800F8F84 */ void setCrawlAutoMoveAimPos();
    /* 800F9210 */ void procCrawlStartInit();
    /* 800F9384 */ void procCrawlStart();
    /* 800F9474 */ void procCrawlMoveInit(s16, s16);
    /* 800F95B8 */ void procCrawlMove();
    /* 800F99FC */ void procCrawlAutoMoveInit(int, cXyz*);
    /* 800F9ABC */ void procCrawlAutoMove();
    /* 800F9D7C */ void procCrawlEndInit(int, s16, s16);
    /* 800F9F30 */ void procCrawlEnd();
    /* 800F9FDC */ void getHangMoveAnmSpeed();
    /* 800F9FFC */ void getHangDirectionFromAngle();
    /* 800FA070 */ void hangMoveBgCheck(s16, cXyz*);
    /* 800FA338 */ void changeHangMoveProc(int);
    /* 800FA5C8 */ void checkHangFootWall();
    /* 800FA6E4 */ void setHangGroundY();
    /* 800FA78C */ void changeHangEndProc();
    /* 800FA85C */ void checkHangStartSideWall(s16);
    /* 800FAA7C */ void procHangStartInit();
    /* 800FAE14 */ void procHangStart();
    /* 800FAECC */ void procHangFallStartInit(cM3dGPla*);
    /* 800FB1A4 */ void procHangFallStart();
    /* 800FB2A0 */ void procHangUpInit(int);
    /* 800FB328 */ void procHangUp();
    /* 800FB43C */ void procHangWaitInit();
    /* 800FB544 */ void procHangWait();
    /* 800FB650 */ void procHangMoveInit(int);
    /* 800FB790 */ void procHangMove();
    /* 800FBBC8 */ void procHangClimbInit(f32);
    /* 800FBCD4 */ void procHangClimb();
    /* 800FBE04 */ void procHangWallCatchInit();
    /* 800FC0D8 */ void procHangWallCatch();
    /* 800FC178 */ void procHangReadyInit();
    /* 800FC240 */ void procHangReady();
    /* 800FC2F4 */ void procHangLeverDownInit();
    /* 800FC390 */ void procHangLeverDown();
    /* 800FC568 */ void changeDragonActor(fopAc_ac_c*);
    /* 800FC5A4 */ void setDragonHangPos();
    /* 800FC6B4 */ void setOctaIealHangPos();
    /* 800FC748 */ void setBossBodyHangPos();
    /* 800FC77C */ void procBossBodyHangInit(fopAc_ac_c*);
    /* 800FC870 */ void procBossBodyHang();
    /* 800FCF58 */ void getLadderUnitCount() const;
    /* 800FCF84 */ void setLadderInit();
    /* 800FD048 */ void setLadderPosInit();
    /* 800FD1F0 */ void setLadderPos(int);
    /* 800FD288 */ void getLadderMoveAnmSpeed();
    /* 800FD2AC */ void changeLadderMoveProc(int);
    /* 800FD4A8 */ void setMoveBGLadderCorrect();
    /* 800FD5E4 */ void checkLadderFall();
    /* 800FD648 */ void procLadderUpStartInit();
    /* 800FD7B0 */ void procLadderUpStart();
    /* 800FD824 */ void procLadderUpEndInit(int);
    /* 800FD8E8 */ void procLadderUpEnd();
    /* 800FD9CC */ void procLadderDownStartInit();
    /* 800FDB74 */ void procLadderDownStart();
    /* 800FDC18 */ void procLadderDownEndInit(int);
    /* 800FDCCC */ void procLadderDownEnd();
    /* 800FDD90 */ void procLadderMoveInit(int, int, cXyz*);
    /* 800FDF50 */ void procLadderMove();
    /* 800FE010 */ void getClimbMoveUpDownAnmSpeed();
    /* 800FE034 */ void getClimbMoveSideAnmSpeed();
    /* 800FE058 */ void checkClimbCode(cBgS_PolyInfo&);
    /* 800FE114 */ void setClimbInit();
    /* 800FE174 */ void setClimbShapeOffset();
    /* 800FE3C4 */ void getClimbDirectionFromAngle();
    /* 800FE438 */ void changeClimbMoveProc(int);
    /* 800FE5A0 */ void checkClimbMoveUpDownProc(int);
    /* 800FE6E8 */ void checkClimbMoveSideProc(int);
    /* 800FE868 */ void setMoveBGClimbCorrect();
    /* 800FEB90 */ void checkBgCorrectClimbMove(cXyz*, cXyz*);
    /* 800FEC70 */ void checkClimbRoof(f32);
    /* 800FED50 */ void checkClimbGround(cXyz*, f32);
    /* 800FEEC0 */ void checkBgClimbMove(int);
    /* 800FF28C */ void setClimbStartNotGround();
    /* 800FF450 */ void procClimbUpStartInit(int);
    /* 800FF704 */ void procClimbUpStart();
    /* 800FF818 */ void procClimbDownStartInit(s16);
    /* 800FF9A8 */ void procClimbDownStart();
    /* 800FFAB0 */ void procClimbMoveUpDownInit(int);
    /* 800FFC58 */ void procClimbMoveUpDown();
    /* 800FFDB0 */ void procClimbMoveSideInit();
    /* 800FFF4C */ void procClimbMoveSide();
    /* 801000F8 */ void procClimbWaitInit(int, int);
    /* 80100258 */ void procClimbWait();
    /* 801003E4 */ void procClimbToRoofInit();
    /* 80100464 */ void procClimbToRoof();
    /* 801005CC */ void getRoofHangFMoveAnmSpeed() const;
    /* 801005F0 */ void getRoofHangSMoveAnmSpeed() const;
    /* 80100614 */ void setRoofHangHandOnSE(cBgS_PolyInfo*);
    /* 80100668 */ void checkRoofHangMovePos();
    /* 80100770 */ void commonRoofHangProc();
    /* 801008EC */ void checkNextActionRoofHang();
    /* 80100A10 */ void procRoofHangStartInit(cBgS_PolyInfo const&, cXyz const&, int);
    /* 80100AE4 */ void procRoofHangStart();
    /* 80100BB4 */ void procRoofHangWaitInit(int);
    /* 80100D38 */ void procRoofHangWait();
    /* 80100DA4 */ void procRoofHangFrontMoveInit();
    /* 80100EEC */ void procRoofHangFrontMove();
    /* 8010121C */ void procRoofHangSideMoveInit();
    /* 80101308 */ void procRoofHangSideMove();
    /* 801013B8 */ void procRoofHangTurnInit();
    /* 80101534 */ void procRoofHangTurn();
    /* 8010163C */ void setRoofHangSwitch();
    /* 801016AC */ void procRoofSwitchHangInit(fopAc_ac_c*);
    /* 801017AC */ void procRoofSwitchHang();
    /* 80101890 */ void checkZoraWearMaskDraw();
    /* 801018E4 */ void checkAcceptUseItemInWater(u16) const;
    /* 80101934 */ void swimDeleteItem();
    /* 801019B8 */ void getZoraSwim() const;
    /* 80101A18 */ void getSwimFrontMaxSpeed() const;
    /* 80101AA8 */ void getSwimMaxFallSpeed() const;
    /* 80101B44 */ void checkOxygenTimer();
    /* 80101C94 */ void offOxygenTimer();
    /* 80101CB8 */ void checkPossibleWaterInMode() const;
    /* 80101CF4 */ void setWaterInAnmRate(daPy_frameCtrl_c*, f32);
    /* 80101D70 */ void swimBgCheck(f32);
    /* 801023E4 */ void setSpeedAndAngleSwim();
    /* 801029C8 */ void checkNextActionSwim();
    /* 80102B1C */ void checkSwimAction(int);
    /* 80103058 */ void checkSwimUpAction();
    /* 801032C8 */ void swimOutAfter(int);
    /* 80103398 */ void checkSwimFall();
    /* 801033CC */ void checkSwimOutAction();
    /* 80103698 */ void setSwimMoveAnime();
    /* 80103EE0 */ void checkSwimButtonAccept();
    /* 80103F08 */ void checkUpSwimButtonAccept();
    /* 80103F24 */ void checkSwimButtonMove();
    /* 80103F94 */ void checkZoraSwimMove();
    /* 80103FE8 */ void checkSwimNeckUpDown() const;
    /* 80104034 */ void setSwimUpDownOffset();
    /* 801040F8 */ void procSwimUpInit();
    /* 801041E8 */ void procSwimUp();
    /* 801042F8 */ void procSwimWaitInit(int);
    /* 801044B4 */ void procSwimWait();
    /* 80104670 */ void procSwimMoveInit();
    /* 801047B8 */ void procSwimMove();
    /* 80104958 */ void procSwimDiveInit();
    /* 80104AA0 */ void procSwimDive();
    /* 80104C50 */ void procSwimHookshotSubjectInit();
    /* 80104D7C */ void procSwimHookshotSubject();
    /* 80104EB8 */ void procSwimHookshotMoveInit();
    /* 80104FC4 */ void procSwimHookshotMove();
    /* 8010519C */ void procSwimDamageInit(dCcD_GObjInf*);
    /* 80105728 */ void procSwimDamage();
    /* 801058A0 */ void procOctaIealSpitInit();
    /* 80105A00 */ void procOctaIealSpit();
    /* 80105A98 */ void checkSnowCode() const;
    /* 80105ABC */ void checkSnowCodePolygon(cBgS_PolyInfo&);
    /* 80105B10 */ void checkBoardRestart();
    /* 80105B58 */ void boardCommon(int);
    /* 80106534 */ void setCommonBoardAnime(int);
    /* 8010658C */ void checkNextActionBoard();
    /* 80106618 */ void checkBoardSwordTriggerAction();
    /* 80106650 */ void commonProcBoardInit(daAlink_c::daAlink_PROC);
    /* 801066B8 */ void getBoardRowAnmSpeed();
    /* 801066EC */ void setBoardLandAnime();
    /* 80106774 */ void procBoardRideInit();
    /* 801069D0 */ void procBoardRide();
    /* 80106A38 */ void procBoardWaitInit(fopAc_ac_c*);
    /* 80106BCC */ void procBoardWait();
    /* 80106E88 */ void procBoardRowInit();
    /* 80106F00 */ void procBoardRow();
    /* 80107060 */ void procBoardTurnInit();
    /* 801070DC */ void procBoardTurn();
    /* 80107218 */ void procBoardJumpInit(f32, int);
    /* 80107300 */ void procBoardJump();
    /* 801073D0 */ void procBoardSubjectivityInit();
    /* 80107418 */ void procBoardSubjectivity();
    /* 801074AC */ void procBoardCutInit();
    /* 8010755C */ void procBoardCut();
    /* 801075D4 */ void procBoardCutTurnInit();
    /* 80107744 */ void procBoardCutTurn();
    /* 801083C8 */ void hookshotAtHitCallBack(dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
    /* 801085BC */ void getHookshotTopPos();
    /* 80108600 */ void checkHookshotReturnMode() const;
    /* 80108668 */ void checkHookshotShootReturnMode() const;
    /* 801086DC */ void resetHookshotMode();
    /* 8010871C */ void setEnemyBombHookshot(fopAc_ac_c*);
    /* 80108784 */ void checkLv7BossRoom();
    /* 801087B0 */ void checkHookshotStickBG(cBgS_PolyInfo&);
    /* 80108828 */ void cancelHookshotCarry();
    /* 80108864 */ void changeHookshotDrawModel();
    /* 801088A0 */ void checkHookshotRoofLv7Boss();
    /* 801088C8 */ void checkChaseHookshot();
    /* 80108980 */ void checkOctaIealSpecialCollect();
    /* 801089E8 */ void checkBossOctaIealRoom();
    /* 80108A18 */ void checkHookshotWait() const;
    /* 80108A3C */ void setHookshotCatchNow();
    /* 80108A90 */ void setHookshotCarryOffset(unsigned int, cXyz const*);
    /* 80108B34 */ void setHookshotModel();
    /* 80108DB4 */ void setHookshotSight();
    /* 80108EEC */ void cancelHookshotShot();
    /* 80108F64 */ void cancelHookshotMove();
    /* 8010903C */ void checkHookshotReadyMaterialOffMode() const;
    /* 80109070 */ void setHookshotReadyMaterial();
    /* 801090EC */ void initHookshotUpperAnimeSpeed(int);
    /* 80109170 */ void initHookshotReady();
    /* 801091E4 */ void setHookshotReadyAnime();
    /* 80109284 */ void checkUpperItemActionHookshot();
    /* 801095C8 */ void checkNextActionHookshot();
    /* 801097A0 */ void setHookshotReturnEnd();
    /* 80109890 */ void setHookshotHangMoveBGCollect();
    /* 80109AAC */ void setHookshotTopPosFly();
    /* 80109BDC */ void setHookshotPos();
    /* 8010B2DC */ void setHookshotRoofWaitAnime();
    /* 8010B35C */ void setHookshotWallWaitAnime();
    /* 8010B3AC */ void hookshotRoofTurn();
    /* 8010B644 */ void initHookshotRoofWaitActor(fopAc_ac_c*);
    /* 8010B720 */ void checkNextHookPoint();
    /* 8010B84C */ void checkLandHookshotHang();
    /* 8010B96C */ void commonHookshotRoofWait();
    /* 8010BA6C */ void commonHookshotWallWait();
    /* 8010BAA8 */ void procHookshotSubjectInit();
    /* 8010BB48 */ void procHookshotSubject();
    /* 8010BC08 */ void procHookshotMoveInit();
    /* 8010BCA4 */ void procHookshotMove();
    /* 8010BD90 */ void procHookshotFlyInit();
    /* 8010BEF0 */ void procHookshotFly();
    /* 8010C830 */ void procHookshotRoofWaitInit(int, fopAc_ac_c*, int);
    /* 8010C9F4 */ void procHookshotRoofWait();
    /* 8010CC80 */ void procHookshotRoofShootInit(fopAc_ac_c*);
    /* 8010CD60 */ void procHookshotRoofShoot();
    /* 8010CF6C */ void procHookshotRoofBootsInit(fopAc_ac_c*);
    /* 8010D034 */ void procHookshotRoofBoots();
    /* 8010D174 */ void procHookshotWallWaitInit(int, s16, int);
    /* 8010D38C */ void procHookshotWallWait();
    /* 8010D5F4 */ void procHookshotWallShootInit();
    /* 8010D6CC */ void procHookshotWallShoot();
    /* 8010D93C */ void getSpinnerGravity() const;
    /* 8010D94C */ void getSpinnerMaxFallSpeed() const;
    /* 8010D95C */ void getSpinnerJumpRate() const;
    /* 8010D96C */ void getSpinnerRideMoveTime();
    /* 8010D9B0 */ void getSpinnerRideSpeedF();
    /* 8010D9F4 */ void getSpinnerRideDecSpeedMax() const;
    /* 8010DA04 */ void getSpinnerRideDecSpeedMin() const;
    /* 8010DA14 */ void getSpinnerRideDecSpeedRate() const;
    /* 8010DA24 */ void getSpinnerRideRotAngleMax() const;
    /* 8010DA34 */ void getSpinnerRideRotAngleMin() const;
    /* 8010DA44 */ void onSpinnerPathForceRemove();
    /* 8010DA98 */ void checkSpinnerPathMove();
    /* 8010DAFC */ void checkLv4BossRoom();
    /* 8010DB28 */ void checkSpinnerTriggerAttack();
    /* 8010DBC8 */ void setSpinnerSyncPos();
    /* 8010DC64 */ void procSpinnerReadyInit();
    /* 8010DDCC */ void procSpinnerReady();
    /* 8010DE64 */ void setSpinnerStatus(u8, u8);
    /* 8010DE78 */ void procSpinnerWaitInit();
    /* 8010DF4C */ void procSpinnerWait();
    /* 8010E48C */ void bottleModelCallBack();
    /* 8010E568 */ void getBottleOpenAppearItem() const;
    /* 8010E584 */ void checkOilBottleItemNotGet(u16);
    /* 8010E5D8 */ void setBottleModel(u16);
    /* 8010EAC4 */ void commonBottleDrink(int);
    /* 8010F45C */ void makeFairy(cXyz*, u32);
    /* 8010F54C */ void procBottleDrinkInit(u16);
    /* 8010F698 */ void procBottleDrink();
    /* 8010F6F4 */ void procBottleOpenInit(u16);
    /* 8010F8E4 */ void procBottleOpen();
    /* 8010FC38 */ void procBottleSwingInit(fopAc_ac_c*, int);
    /* 8010FF58 */ void procBottleSwing();
    /* 801102D0 */ void procBottleGetInit(int);
    /* 80110518 */ void procBottleGet();
    /* 801106E8 */ void setKandelaarMtx(f32 (*)[4], int, int);
    /* 8011078C */ void checkWaterInKandelaarOffset(f32);
    /* 801107BC */ void checkWaterInKandelaar(f32);
    /* 80110840 */ void offKandelaarModel();
    /* 8011087C */ void checkUseKandelaar(int);
    /* 801108B4 */ void checkKandelaarSwing(int) const;
    /* 801108EC */ void kandelaarModelCallBack();
    /* 80110C28 */ void getKandelaarFlamePos();
    /* 80110C6C */ void checkKandelaarEquipAnime() const;
    /* 80110C94 */ void preKandelaarDraw();
    /* 80110E84 */ void setKandelaarModel();
    /* 80110F88 */ void resetOilBottleModel();
    /* 80110FE0 */ void commonKandelaarPourInit();
    /* 801110B8 */ void commonKandelaarPour(int);
    /* 8011130C */ void initKandelaarSwing();
    /* 80111440 */ void procKandelaarSwingInit();
    /* 801115CC */ void procKandelaarSwing();
    /* 8011167C */ void procKandelaarPourInit();
    /* 80111724 */ void procKandelaarPour();
    /* 80111784 */ void setGrassWhistleModel(int);
    /* 8011181C */ void setHorseWhistleModel();
    /* 80111894 */ void procGrassWhistleGetInit();
    /* 801119D8 */ void procGrassWhistleGet();
    /* 80111A9C */ void procGrassWhistleWaitInit(int, int, int, s16, cXyz*);
    /* 80111CA4 */ void procGrassWhistleWait();
    /* 80111FF0 */ void procCoHorseCallWaitInit(int);
    /* 801120C8 */ void procCoHorseCallWait();
    /* 801121B4 */ void procHawkCatchInit();
    /* 80112220 */ void procHawkCatch();
    /* 80112278 */ void procHawkSubjectInit();
    /* 80112304 */ void procHawkSubject();
    /* 8011243C */ void getIronBallCenterPos();
    /* 80112458 */ void getIronBallBgHit() const;
    /* 80112474 */ void checkIronBallThrowMode() const;
    /* 801124B4 */ void checkIronBallThrowReturnMode() const;
    /* 801124FC */ void checkIronBallReturn() const;
    /* 80112524 */ void checkIronBallGroundStop() const;
    /* 80112568 */ void setIronBallWaitUpperAnime(int);
    /* 80112628 */ void checkIronBallDelete();
    /* 801126F8 */ void setIronBallReturn(int);
    /* 80112768 */ void setIronBallBgCheckPos();
    /* 801127F0 */ void setIronBallModel();
    /* 80112C84 */ void setIronBallGroundVec(cXyz const*, cXyz*);
    /* 80112E7C */ void setIronBallChainPos();
    /* 80113CA0 */ void checkIronBallReturnChange();
    /* 80113D58 */ void setIronBallPos();
    /* 801150E4 */ void checkIronBallAnime() const;
    /* 8011510C */ void setIronBallReadyAnime();
    /* 801151E0 */ void setIronBallBaseAnime();
    /* 80115254 */ void checkUpperItemActionIronBall();
    /* 801153F8 */ void checkNextActionIronBall();
    /* 801154E4 */ void procIronBallSubjectInit();
    /* 80115564 */ void procIronBallSubject();
    /* 801155EC */ void procIronBallMoveInit();
    /* 80115674 */ void procIronBallMove();
    /* 8011577C */ void procIronBallThrowInit();
    /* 80115860 */ void procIronBallThrow();
    /* 801159F0 */ void procIronBallReturnInit();
    /* 80115AA0 */ void procIronBallReturn();
    /* 80115C20 */ void checkEventRun() const;
    /* 80115C50 */ void createNpcTks(cXyz*, int, u32);
    /* 80115D08 */ void checkSetNpcTks(cXyz*, int, int);
    /* 80115EC0 */ void checkDemoAction();
    /* 80116E60 */ void checkDemoMoveMode(u32) const;
    /* 80116E9C */ void setDemoMoveData(u32*, cXyz const*);
    /* 80117064 */ void setNoDrawSwordShield(int, u16);
    /* 801171F4 */ void setDemoData();
    /* 80117B90 */ void resetDemoBck();
    /* 80117C34 */ void endHighModel();
    /* 80117C90 */ void resetSpecialEvent();
    /* 80117CF8 */ void endDemoMode();
    /* 801180EC */ void getDemoLookActor();
    /* 80118170 */ void checkFlyAtnWait();
    /* 801181A0 */ void setGetItemFace(u16);
    /* 801182D4 */ void checkGrabTalkActor(fopAc_ac_c*);
    /* 80118308 */ void setTalkStartBack(cXyz*);
    /* 8011856C */ void setShapeAngleToTalkActor();
    /* 80118654 */ void setTalkAnime();
    /* 801186D4 */ void setTradeItemAnime();
    /* 80118778 */ void setTradeItemOutHand();
    /* 801187B4 */ void checkEndMessage(u32);
    /* 80118840 */ void setDemoRightHandIndex(u16);
    /* 801188B0 */ void setDemoLeftHandIndex(u16);
    /* 8011894C */ void setDemoRide(u16);
    /* 801189F8 */ void setDemoBodyBck(dDemo_actor_c*, u16);
    /* 80118AD0 */ void checkFinalBattle();
    /* 80118B34 */ void checkRestartDead(int, int);
    /* 80118BF4 */ void setDeadRideSyncPos();
    /* 80118C98 */ void checkDeadHP();
    /* 80118D7C */ void checkDeadAction(int);
    /* 80118FF8 */ void setHighModelBck(mDoExt_bckAnm*, u16);
    /* 801190A4 */ void setHighModelFaceBtk(u16);
    /* 80119134 */ void setDemoBrk(J3DAnmTevRegKey**, J3DModel*, u16);
    /* 801191C4 */ void setStickAnmData(J3DAnmBase*, int, int, u16, int);
    /* 801195C0 */ void procDemoCommon();
    /* 801195F8 */ void procCoToolDemoInit();
    /* 801196D8 */ void procCoToolDemo();
    /* 80119D98 */ void procCoTalkInit();
    /* 80119F64 */ void procCoTalk();
    /* 8011A214 */ void procCoOpenTreasureInit();
    /* 8011A42C */ void procCoOpenTreasure();
    /* 8011A4C0 */ void procCoUnequipInit();
    /* 8011A5CC */ void procCoUnequip();
    /* 8011A688 */ void setGetSubBgm(int);
    /* 8011A6FC */ void checkTreasureRupeeReturn(int) const;
    /* 8011A798 */ void procCoGetItemInit();
    /* 8011AC28 */ void procCoGetItem();
    /* 8011B3F0 */ void procCoTurnBackInit();
    /* 8011B46C */ void procCoTurnBack();
    /* 8011B57C */ void procDoorOpenInit();
    /* 8011B71C */ void procDoorOpen();
    /* 8011B914 */ void procCoLookWaitInit();
    /* 8011BA20 */ void procCoLookWait();
    /* 8011BABC */ void procCoDemoPushPullWaitInit();
    /* 8011BB40 */ void procCoDemoPushMoveInit();
    /* 8011BC14 */ void setMonkeyMoveAnime();
    /* 8011BC74 */ void procMonkeyMoveInit();
    /* 8011BD18 */ void procMonkeyMove();
    /* 8011BD6C */ void procDemoBoomerangCatchInit();
    /* 8011BDF0 */ void procDemoBoomerangCatch();
    /* 8011BE54 */ void procCoDeadInit(int);
    /* 8011C1B4 */ void procCoDead();
    /* 8011C62C */ void procCoLookAroundInit();
    /* 8011C760 */ void procCoLookAround();
    /* 8011C81C */ void procBossAtnWaitInit();
    /* 8011C890 */ void procCoQuakeWaitInit();
    /* 8011C904 */ void procCoCaughtInit();
    /* 8011C9D0 */ void procLookUpInit();
    /* 8011CA4C */ void procLookUp();
    /* 8011CA98 */ void procLookUpToGetItemInit();
    /* 8011CB20 */ void procLookUpToGetItem();
    /* 8011CBD4 */ void procHandPatInit();
    /* 8011CCA8 */ void procHandPat();
    /* 8011CDE0 */ void procCoFogDeadInit();
    /* 8011CF60 */ void procCoFogDead();
    /* 8011D0A0 */ void procWolfSmellWaitInit();
    /* 8011D110 */ void procCoNodInit();
    /* 8011D1F4 */ void procCoNod();
    /* 8011D268 */ void procCoEyeAwayInit();
    /* 8011D304 */ void procCoGlareInit();
    /* 8011D3CC */ void procCoGlare();
    /* 8011D474 */ void procGoatStopReadyInit();
    /* 8011D4D4 */ void procGoatStopReady();
    /* 8011D544 */ void procCoGetReadySitInit();
    /* 8011D64C */ void procCoGetReadySit();
    /* 8011D6D0 */ void procCoTwGateInit();
    /* 8011D7D4 */ void procCoTwGate();
    /* 8011D82C */ void procWolfSnowEscapeInit();
    /* 8011D8F8 */ void procWolfSnowEscape();
    /* 8011DB04 */ void procZoraMoveInit();
    /* 8011DB9C */ void procZoraMove();
    /* 8011DDD4 */ void procLookAroundTurnInit();
    /* 8011DED8 */ void procLookAroundTurn();
    /* 8011DF68 */ void procTradeItemOutInit();
    /* 8011E060 */ void procTradeItemOut();
    /* 8011E3D8 */ void checkLetterItem(int);
    /* 8011E448 */ void procNotUseItemInit(int);
    /* 8011E57C */ void procNotUseItem();
    /* 8011E6E0 */ void procSwordReadyInit();
    /* 8011E748 */ void procSwordReady();
    /* 8011E83C */ void setSwordPushAnime();
    /* 8011E8E0 */ void procSwordPushInit();
    /* 8011E960 */ void procSwordPush();
    /* 8011E9F8 */ void procGanonFinishInit();
    /* 8011EA78 */ void procGanonFinish();
    /* 8011EAE8 */ void procCutFastReadyInit();
    /* 8011EB8C */ void procCutFastReady();
    /* 8011EBDC */ void procMasterSwordStickInit();
    /* 8011EC60 */ void procMasterSwordStick();
    /* 8011ED18 */ void procMasterSwordPullInit();
    /* 8011ED8C */ void procMasterSwordPull();
    /* 8011EE40 */ void checkLv7DungeonShop();
    /* 8011EE94 */ void procDungeonWarpReadyInit();
    /* 8011EFB8 */ void procDungeonWarpReady();
    /* 8011F084 */ void procDungeonWarpInit();
    /* 8011F0F4 */ void procDungeonWarp();
    /* 8011F360 */ void procDungeonWarpSceneStartInit();
    /* 8011F460 */ void procDungeonWarpSceneStart();
    /* 8011F658 */ void checkAcceptWarp();
    /* 8011F7D8 */ void dungeonReturnWarp();
    /* 8011F8B8 */ void skipPortalObjWarp();
    /* 8011F9EC */ void checkWarpStart();
    /* 8011FBC0 */ void warpModelTexScroll();
    /* 8011FD4C */ void procCoWarpInit(int, int);
    /* 80120124 */ void procCoWarp();
    /* 80120440 */ void commonWaitTurnInit();
    /* 80120474 */ void commonGrabPutInit();
    /* 80120500 */ void commonLargeDamageUpInit(int, int, s16, s16);
    /* 80120534 */ void commonFallInit(int);
    /* 80120580 */ void setEmitter(u32*, u16, cXyz const*, csXyz const*);
    /* 80120634 */ void setEmitterPolyColor(u32*, u16, cBgS_PolyInfo&, cXyz const*, csXyz const*);
    /* 801206C4 */ void setEmitterColor(u32*, u16, cXyz const*, csXyz const*);
    /* 80120778 */ void stopDrawParticle(u32);
    /* 801207BC */ void setEffectFrontRollParam();
    /* 80120880 */ void setEffectSlipParam();
    /* 80120B00 */ void setEffectRunParam();
    /* 80120DB0 */ void setEffectSmallLandParam();
    /* 80121000 */ void setEffectLandParam();
    /* 80121004 */ void setEffectSumouParam();
    /* 801211C0 */ void setFootEffectProcType(int);
    /* 80121214 */ void setWolfFootOn(int);
    /* 80121304 */ void setFootMark(cXyz*, u16, int);
    /* 80121388 */ void setEffect();
    /* 801221F0 */ void setSumouEffect();
    /* 801225E8 */ void setWaterfallEffect(cXyz const*, u32*);
    /* 80122654 */ void setWaterfallEffect();
    /* 8012277C */ void setMagneBootsEffect();
    /* 801228F4 */ void setSwordChargeEffect();
    /* 80122BBC */ void setElecDamageEffect();
    /* 80122F18 */ void clearCutTurnEffectID();
    /* 80122F78 */ void setCutTurnEffect();
    /* 801233A4 */ void setHorseCutTurnEffect();
    /* 80123434 */ void setCutLargeJumpLandEffect();
    /* 801236BC */ void setBootsLightEffect();
    /* 801237A8 */ void setLightningSwordEffect();
    /* 801238FC */ void setWolfRollAttackEffect();
    /* 801239B0 */ void setWolfDigEffect();
    /* 80123BF0 */ void setWolfSwimEndEffect(JPABaseEmitter**, JPABaseEmitter**);
    /* 80123C8C */ void setWolfLockAttackEffect();
    /* 80123D88 */ void setWolfJumpAttackEffect();
    /* 80123ED0 */ void setWolfBarrierHitEffect(dBgS_LinChk&);
    /* 80124144 */ void setCutWaterDropEffect();
    /* 801241E0 */ void setWaterDropEffect();
    /* 801244E4 */ void setSwordUpColorEffect();
    /* 801245EC */ void setSwordCutSplash();
    /* 80124738 */ void setMetamorphoseEffectStartLink();
    /* 801247A8 */ void setMetamorphoseEffect();
    /* 801248A8 */ void setRunSplash();
    /* 80124B68 */ void resetFairyEffect();
    /* 80124BA4 */ void setBottleEffect();
    /* 80124E28 */ void clearFirePointDamageEffect(int);
    /* 80124EA8 */ void initFirePointDamageEffectAll();
    /* 80124FA4 */ void initFirePointDamageEffect(cXyz const*, dCcD_GObjInf*);
    /* 80125128 */ void setFirePointDamageEffect();
    /* 80125338 */ void setFreezeEffect();
    /* 80125524 */ void setWoodShieldBurnEffect();
    /* 801255BC */ void clearWoodShieldBurnEffect();
    /* 80125628 */ void setWoodShieldBurnOutEffect();
    /* 80126740 */ void changeCommon();
    /* 80126928 */ void changeWolf();
    /* 80126F3C */ void changeLink(int);
    /* 80127C54 */ void onWolfEyeUp();
    /* 80127CAC */ void offWolfEyeUp();
    /* 80127CF0 */ void wolfSenseTrigger();
    /* 80127D14 */ void setWolfSenceStatus(u8);
    /* 80127D2C */ void wolfClawTrigger();
    /* 80127D50 */ void setWolfDigStatus(u8);
    /* 80127D68 */ void checkWolfShapeReverse() const;
    /* 80127DC4 */ void checkWolfSideStep() const;
    /* 80127E08 */ void setWolfTailAngle();
    /* 80127F20 */ void checkWolfSlowDash();
    /* 80127F50 */ void setSpeedAndAngleWolf();
    /* 80128478 */ void setSpeedAndAngleWolfAtn();
    /* 80128798 */ void checkWolfAtnWait();
    /* 8012880C */ void checkUnderMove0BckNoArcWolf(daAlink_c::daAlink_WANM) const;
    /* 80128844 */ void setBlendWolfMoveAnime(f32);
    /* 80128F0C */ void checkWolfAtnMoveBack(s16);
    /* 80128F5C */ void setWolfAtnMoveDirection();
    /* 80129114 */ void setBlendWolfAtnMoveAnime(f32);
    /* 8012933C */ void setBlendWolfAtnBackMoveAnime(f32);
    /* 8012948C */ void setDoubleAnimeWolf(f32, f32, f32, daAlink_c::daAlink_WANM,
                                           daAlink_c::daAlink_WANM, int, f32);
    /* 80129678 */ void setSingleAnimeWolfBase(daAlink_c::daAlink_WANM);
    /* 801296A8 */ void setSingleAnimeWolfBaseMorf(daAlink_c::daAlink_WANM, f32);
    /* 801296D8 */ void setSingleAnimeWolfBaseSpeed(daAlink_c::daAlink_WANM, f32, f32);
    /* 80129704 */ void setSingleAnimeWolf(daAlink_c::daAlink_WANM, f32, f32, s16, f32);
    /* 80129848 */ void setSingleAnimeWolfParam(daAlink_c::daAlink_WANM, daAlinkHIO_anm_c const*);
    /* 8012987C */ void checkWolfLandAction(int);
    /* 80129958 */ void checkMidnaUseAbility() const;
    /* 801299A8 */ void checkWolfUseAbility();
    /* 80129A80 */ void checkWolfGroundSpecialMode();
    /* 80129B44 */ void checkNextActionWolf(int);
    /* 8012A02C */ void wolfSideBgCheck(s16);
    /* 8012A228 */ void checkWolfAttackReverse(int);
    /* 8012A330 */ void checkWolfBarrierHitReverse();
    /* 8012A41C */ void checkWolfBarrierWallHit(cBgS_PolyInfo&);
    /* 8012A498 */ void wolfBgCheck();
    /* 8012ACCC */ void changeWolfBlendRate(int);
    /* 8012AD1C */ void setWolfFootMatrix();
    /* 8012B724 */ void wolfFootBgCheck();
    /* 8012BFA8 */ void checkWolfWaitSlipPolygon();
    /* 8012C1F4 */ void setWolfWaitSlip();
    /* 8012C308 */ void checkWolfAtnDoCharge();
    /* 8012C30C */ void setWolfChainPos();
    /* 8012CB0C */ void setWolfAnmVoice();
    /* 8012CBE4 */ void procWolfServiceWaitInit(int);
    /* 8012CD28 */ void procWolfServiceWait();
    /* 8012CF68 */ void procWolfTiredWaitInit();
    /* 8012CFEC */ void procWolfTiredWait();
    /* 8012D050 */ void procWolfMidnaRideShockInit();
    /* 8012D104 */ void procWolfMidnaRideShock();
    /* 8012D1A8 */ void procWolfWaitInit();
    /* 8012D2A8 */ void procWolfWait();
    /* 8012D380 */ void procWolfMoveInit();
    /* 8012D3E4 */ void procWolfMove();
    /* 8012D474 */ void procWolfDashInit();
    /* 8012D590 */ void procWolfDash();
    /* 8012D8C0 */ void procWolfDashReverseInit(int);
    /* 8012DA5C */ void procWolfDashReverse();
    /* 8012DBA8 */ void procWolfAtnActorMoveInit();
    /* 8012DC44 */ void procWolfAtnActorMove();
    /* 8012DD08 */ void procWolfWaitTurnInit();
    /* 8012DDB4 */ void procWolfWaitTurn();
    /* 8012DEC8 */ void procWolfSideStepInit(int);
    /* 8012E0AC */ void procWolfSideStep();
    /* 8012E1E8 */ void procWolfSideStepLandInit(s16);
    /* 8012E2DC */ void procWolfSideStepLand();
    /* 8012E398 */ void procWolfBackJumpInit(int);
    /* 8012E508 */ void procWolfBackJump();
    /* 8012E5F4 */ void procWolfBackJumpLandInit(s16, s16);
    /* 8012E684 */ void procWolfBackJumpLand();
    /* 8012E754 */ void procWolfHowlInit(int);
    /* 8012E83C */ void procWolfHowl();
    /* 8012E9C8 */ void procWolfAutoJumpInit(int);
    /* 8012EB94 */ void procWolfAutoJump();
    /* 8012EDD0 */ void procWolfFallInit(int, f32);
    /* 8012EFB8 */ void procWolfFall();
    /* 8012F138 */ void procWolfLandInit();
    /* 8012F1F0 */ void procWolfLand();
    /* 8012F278 */ void procWolfSitInit(int);
    /* 8012F358 */ void procWolfSit();
    /* 8012F41C */ void procWolfStepMoveInit();
    /* 8012F500 */ void procWolfStepMove();
    /* 8012F634 */ void procWolfSlipInit();
    /* 8012F6EC */ void procWolfSlip();
    /* 8012F840 */ void procWolfSlipTurnInit(int);
    /* 8012F9C0 */ void procWolfSlipTurn();
    /* 8012FB18 */ void procWolfSlipTurnLandInit();
    /* 8012FBB4 */ void procWolfSlipTurnLand();
    /* 8012FC38 */ void procWolfSlideReadyInit(s16, int);
    /* 8012FD2C */ void procWolfSlideReady();
    /* 8012FE80 */ void procWolfSlideInit(s16, int);
    /* 8012FFA4 */ void procWolfSlide();
    /* 801300D4 */ void procWolfSlideLandInit();
    /* 80130138 */ void procWolfSlideLand();
    /* 801301E4 */ void procWolfWaitSlipInit();
    /* 80130268 */ void procWolfWaitSlip();
    /* 80130440 */ void procWolfSlopeStartInit(int);
    /* 801304D4 */ void procWolfSlopeStart();
    /* 80130654 */ void setWolfHowlNotHappen(int);
    /* 80130700 */ void procWolfHowlDemoInit();
    /* 80130BC4 */ void procWolfHowlDemo();
    /* 80131408 */ void checkWolfRope();
    /* 80131450 */ void checkWolfRopeHit(dCcD_GObjInf*, cXyz const*, int) const;
    /* 80131628 */ void checkWolfRopeJumpHang();
    /* 801316A4 */ void getWolfRopeMoveSpeed();
    /* 80131718 */ void setWolfRopePosY();
    /* 801319F0 */ void initWolfRopeShapeAngle();
    /* 80131A6C */ void wolfRopeSwingInc(f32);
    /* 80131AFC */ void setWolfRopeOffsetY(int);
    /* 80131C00 */ void getDirectionRopeMove() const;
    /* 80131C74 */ void procWolfRopeMoveInit(int, int);
    /* 80131DA0 */ void procWolfRopeMove();
    /* 80132738 */ void procWolfRopeHangInit(int);
    /* 80132914 */ void procWolfRopeHang();
    /* 80132D68 */ void procWolfRopeTurnInit();
    /* 80132E88 */ void procWolfRopeTurn();
    /* 80133054 */ void procWolfRopeStaggerInit(int);
    /* 80133164 */ void procWolfRopeStagger();
    /* 8013384C */ void procWolfRopeSubjectivityInit();
    /* 80133930 */ void procWolfRopeSubjectivity();
    /* 80133D6C */ void getWolfTagJumpTime() const;
    /* 80133EF0 */ void checkMidnaLockJumpPoint() const;
    /* 80134000 */ void procWolfTagJumpInit(fopAc_ac_c*);
    /* 80134838 */ void procWolfTagJump();
    /* 80134DB8 */ void procWolfTagJumpLandInit(fopAc_ac_c*);
    /* 80134EBC */ void procWolfTagJumpLand();
    /* 80135160 */ void procWolfGiantPuzzleInit();
    /* 801351F8 */ void procWolfGiantPuzzle();
    /* 80135458 */ void setWolfHangGroundY();
    /* 801354C8 */ void changeWolfHangEndProc();
    /* 801355EC */ void procWolfHangReadyInit();
    /* 80135668 */ void procWolfHangReady();
    /* 801356F0 */ void procWolfHangWallCatchInit(int);
    /* 80135AF4 */ void procWolfHangWallCatch();
    /* 80135CD8 */ void procWolfHangFallStartInit(cM3dGPla*);
    /* 80135F00 */ void procWolfHangFallStart();
    /* 80136064 */ void setWolfHeadDamage();
    /* 801360EC */ void procWolfDamageInit(dCcD_GObjInf*);
    /* 80136508 */ void procWolfDamage();
    /* 80136624 */ void procWolfLargeDamageUpInit(int, int, s16, s16);
    /* 801369E4 */ void procWolfLargeDamageUp();
    /* 80136C18 */ void procWolfLandDamageInit(int);
    /* 80136DE4 */ void procWolfLandDamage();
    /* 80136EC4 */ void setWolfScreamWaitAnime();
    /* 80136F54 */ void procWolfScreamWaitInit();
    /* 80136FF8 */ void procWolfScreamWait();
    /* 801370E4 */ void getWolfLieMoveAnmSpeed();
    /* 8013712C */ void getWolfLieMoveSpeed();
    /* 801371A0 */ void checkMidnaDisappearMode() const;
    /* 801371FC */ void checkWolfLieContinue(int);
    /* 801372B4 */ void checkNextActionWolfFromLie();
    /* 80137330 */ void setWolfLieMoveVoice(int);
    /* 801373F8 */ void checkWolfLieCode();
    /* 80137420 */ void procWolfLieStartInit(int);
    /* 8013753C */ void procWolfLieStart();
    /* 80137634 */ void procWolfLieMoveInit(int);
    /* 801377F0 */ void procWolfLieMove();
    /* 80137C90 */ void procWolfLieAutoMoveInit(int, cXyz*);
    /* 80137D4C */ void procWolfLieAutoMove();
    /* 80138000 */ void setSpeedAndAngleSwimWolf();
    /* 80138188 */ void getWolfSwimMoveAnmSpeed();
    /* 801381F8 */ void decideDoStatusSwimWolf();
    /* 801383D8 */ void procWolfSwimUpInit();
    /* 80138484 */ void procWolfSwimUp();
    /* 8013852C */ void procWolfSwimWaitInit(int);
    /* 80138644 */ void procWolfSwimWait();
    /* 8013871C */ void procWolfSwimMoveInit();
    /* 801387A0 */ void procWolfSwimMove();
    /* 8013890C */ void procWolfSwimEndWaitInit(int);
    /* 80138A18 */ void procWolfSwimEndWait();
    /* 80138B6C */ void onWolfEnemyBiteAll(fopAc_ac_c*, daPy_py_c::daPy_FLG2);
    /* 80138C04 */ void resetWolfEnemyBiteAll();
    /* 80138C44 */ void checkWolfEnemyThrowAction();
    /* 80138CB8 */ void setWolfLockDomeModel();
    /* 80138DC0 */ void setWolfBallModel();
    /* 80138F18 */ void resetWolfBallGrab();
    /* 80139048 */ void checkWolfLockData();
    /* 8013911C */ void checkWolfLock(fopAc_ac_c*) const;
    /* 8013916C */ void cancelWolfLock(fopAc_ac_c*);
    /* 801391DC */ void getWolfLockActorEnd();
    /* 801391E4 */ void searchWolfLockEnemy(fopAc_ac_c*, void*);
    /* 801392E4 */ void checkWolfComboCnt();
    /* 801393A4 */ void checkWolfAttackAction();
    /* 801395B4 */ void setWolfEnemyThrowUpperAnime(daAlink_c::daAlink_WANM, f32);
    /* 80139600 */ void setWolfEnemyHangBitePos(fopEn_enemy_c*);
    /* 801396F8 */ void setWolfBiteDamage(fopEn_enemy_c*);
    /* 801397A4 */ void checkWolfLockAttackChargeState();
    /* 801398A8 */ void procWolfRollAttackChargeInit();
    /* 80139908 */ void procWolfRollAttackCharge();
    /* 801399C4 */ void procWolfRollAttackMoveInit();
    /* 80139A70 */ void procWolfRollAttackMove();
    /* 80139DE0 */ void procWolfJumpAttackInit(int);
    /* 8013A4F8 */ void procWolfJumpAttack();
    /* 8013A7EC */ void procWolfJumpAttackKickInit();
    /* 8013A8A0 */ void procWolfJumpAttackKick();
    /* 8013A8FC */ void procWolfJumpAttackSlideLandInit(int, int, int);
    /* 8013AAC4 */ void procWolfJumpAttackSlideLand();
    /* 8013AC44 */ void procWolfJumpAttackNormalLandInit(int);
    /* 8013ACF4 */ void procWolfJumpAttackNormalLand();
    /* 8013ADF0 */ void procWolfWaitAttackInit(int);
    /* 8013AFC0 */ void procWolfWaitAttack();
    /* 8013B2A0 */ void procWolfRollAttackInit(int, int);
    /* 8013B424 */ void procWolfRollAttack();
    /* 8013B528 */ void procWolfDownAttackInit();
    /* 8013B808 */ void procWolfDownAttack();
    /* 8013B964 */ void procWolfDownAtLandInit(fopEn_enemy_c*);
    /* 8013BA44 */ void procWolfDownAtLand();
    /* 8013BC94 */ void procWolfDownAtMissLandInit();
    /* 8013BD54 */ void procWolfDownAtMissLand();
    /* 8013BE24 */ void procWolfLockAttackInit(int);
    /* 8013C3E4 */ void procWolfLockAttack();
    /* 8013C630 */ void procWolfLockAttackTurnInit(int);
    /* 8013C7A4 */ void procWolfLockAttackTurn();
    /* 8013C8C8 */ void procWolfAttackReverseInit();
    /* 8013C9EC */ void procWolfAttackReverse();
    /* 8013CB48 */ void procWolfEnemyThrowInit(int);
    /* 8013CC5C */ void procWolfEnemyThrow();
    /* 8013CCF4 */ void procWolfEnemyHangBiteInit();
    /* 8013CDEC */ void procWolfEnemyHangBite();
    /* 8013D0D4 */ void procWolfGrabUpInit();
    /* 8013D3FC */ void procWolfGrabUp();
    /* 8013D588 */ void procWolfGrabPutInit();
    /* 8013D65C */ void procWolfGrabPut();
    /* 8013D818 */ void procWolfGrabThrowInit();
    /* 8013D86C */ void procWolfGrabThrow();
    /* 8013D930 */ void procWolfPushInit();
    /* 8013DA8C */ void procWolfPush();
    /* 8013DB6C */ void procWolfCargoCarryInit();
    /* 8013DC5C */ void procWolfCargoCarry();
    /* 8013DDF8 */ void procWolfChainUpInit();
    /* 8013DE70 */ void procWolfChainUp();
    /* 8013DF30 */ void procWolfGanonCatchInit();
    /* 8013E034 */ void procWolfGanonCatch();
    /* 8013E240 */ void procWolfChainReadyInit();
    /* 8013E2A8 */ void procWolfChainReady();
    /* 8013E6C0 */ void procWolfChainWaitInit();
    /* 8013E80C */ void procWolfChainWait();
    /* 8013ED44 */ void procWolfDigInit();
    /* 8013F1F0 */ void procWolfDig();
    /* 8013F4A8 */ void procWolfDigThroughInit(int);
    /* 8013F7C4 */ void procWolfDigThrough();
    /* 8013F90C */ void setSmellSave();
    /* 8013FA14 */ void procWolfGetSmellInit();
    /* 8013FC24 */ void procWolfGetSmell();
    /* 8013FF28 */ void setArcName(int);
    /* 8013FF90 */ void setShieldArcName();
    /* 8013FFD8 */ void setOriginalHeap(JKRExpHeap**, u32);
    /* 80140038 */ void setClothesChange(int);
    /* 80140064 */ void setShieldChange();
    /* 80140070 */ void loadModelDVD();
    /* 801401F8 */ void setShieldModel();
    /* 80140274 */ void loadShieldModelDVD();
    /* 80140338 */ void changeModelDataDirect(int);
    /* 80140550 */ void changeModelDataDirectWolf(int);
    /* 801406A8 */ void initStatusWindow();
    /* 80140888 */ void statusWindowExecute(cXyz const*, s16);
    /* 80140984 */ void statusWindowDraw();
    /* 80140AC8 */ void resetStatusWindow();
};

struct daAlink_blur_c {
    /* 800CFD58 */ ~daAlink_blur_c();
    /* 801256EC */ void initBlur(f32, int, cXyz const*, cXyz const*, cXyz const*);
    /* 8012589C */ void copyBlur(cXyz const*, cXyz const*, cXyz const*);
    /* 80125B0C */ void traceBlur(cXyz const*, cXyz const*, s16);
    /* 80125BF4 */ void draw();
};

struct daAlinkHIO_wolf_c {
    /* 80140B98 */ ~daAlinkHIO_wolf_c();
};

struct daAlinkHIO_cut_c {
    /* 80140BD4 */ ~daAlinkHIO_cut_c();
};

struct daAlinkHIO_c {
    /* 80140B88 */ daAlinkHIO_c();
    /* 80140C10 */ ~daAlinkHIO_c();
};

struct dVibration_c {
    /* 8006FA24 */ void StartShock(int, int, cXyz);
    /* 8006FB10 */ void StartQuake(int, int, cXyz);
    /* 8006FD94 */ void StopQuake(int);
};

struct dSv_turnRestart_c {
    /* 80034FA4 */ void set(cXyz const&, s16, s8, u32);
};

struct dSv_restart_c {
    /* 80034F80 */ void setRoom(cXyz const&, s16, s8);
};

struct dSv_player_status_b_c {
    /* 80032BEC */ void isTransformLV(int) const;
};

struct dSv_player_status_a_c {
    /* 80032AA8 */ void getRupeeMax() const;
};

struct dSv_player_item_c {
    /* 80032FB8 */ void setItem(int, u8);
    /* 80033370 */ void setBottleItemIn(u8, u8);
    /* 80033598 */ void setEquipBottleItemIn(u8, u8);
    /* 800336BC */ void setEquipBottleItemEmpty(u8);
    /* 800336E0 */ void checkBottle(u8);
    /* 80033D40 */ void setBaitItem(u8);
};

struct dSv_player_get_item_c {
    /* 80033EC8 */ void isFirstBit(u8) const;
};

struct dSv_memBit_c {
    /* 80034934 */ void isDungeonItem(int) const;
};

struct dSv_light_drop_c {
    /* 80034340 */ void getLightDropNum(u8) const;
};

struct dSv_info_c {
    /* 80035200 */ void onSwitch(int, int);
    /* 800352B0 */ void offSwitch(int, int);
    /* 80035360 */ void isSwitch(int, int) const;
};

struct dSv_event_c {
    /* 8003498C */ void onEventBit(u16);
    /* 800349A4 */ void offEventBit(u16);
    /* 800349BC */ void isEventBit(u16) const;
};

struct dSv_danBit_c {
    /* 80034BE8 */ void isSwitch(int) const;
};

struct dKy_tevstr_c {};

struct dScnKy_env_light_c {
    /* 801A37C4 */ void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
    /* 801A4DA0 */ void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
    /* 8003AB30 */ void onWarpMaterial(J3DModelData*);
    /* 8003AC1C */ void offWarpMaterial(J3DModelData*);
    /* 8003AD08 */ void setWarpSRT(J3DModelData*, cXyz const&, f32, f32);
    /* 8003AE14 */ void loaderBasicBmd(u32, void*);
};

struct dRes_control_c {
    /* 8003C1E4 */ void getResInfo(char const*, dRes_info_c*, int);
    /* 8003C37C */ void getRes(char const*, char const*, dRes_info_c*, int);
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
    /* 8003C400 */ void getIDRes(char const*, u16, dRes_info_c*, int);
};

struct dPa_levelEcallBack {};

struct dPa_hermiteEcallBack_c {
    /* 8004F6B8 */ void setOldPosP(cXyz const*, cXyz const*);
};

struct _GXColor {};

struct dPa_control_c {
    struct level_c {
        /* 8004B8B4 */ void forceOnEventMove(u32);
        /* 8004B918 */ void getEmitter(u32);
    };

    /* 8004C218 */ void setHitMark(u16, fopAc_ac_c*, cXyz const*, csXyz const*, cXyz const*, u32);
    /* 8004C838 */ void setWaterRipple(u32*, cBgS_PolyInfo&, cXyz const*, f32, dKy_tevstr_c const*,
                                       cXyz const*, s8);
    /* 8004D4CC */ void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*,
                            cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*,
                            _GXColor const*, cXyz const*, f32);
    /* 8004CA90 */ void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*,
                            u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*,
                            cXyz const*, f32);
    /* 8004CF90 */ void getPolyColor(cBgS_PolyInfo&, int, _GXColor*, _GXColor*, u8*, f32*);
    /* 8004D6A4 */ void setPoly(u32, u16, cBgS_PolyInfo&, cXyz const*, dKy_tevstr_c const*,
                                csXyz const*, cXyz const*, int, dPa_levelEcallBack*, s8,
                                cXyz const*);
    /* 8004D068 */ void setPoly(u16, cBgS_PolyInfo&, cXyz const*, dKy_tevstr_c const*, csXyz const*,
                                cXyz const*, int, dPa_levelEcallBack*, s8, cXyz const*);
};

struct dBgS_AcchCir {
    /* 80075EAC */ dBgS_AcchCir();
    /* 80075F40 */ void SetWallR(f32);
    /* 80075F58 */ void SetWall(f32, f32);
    /* 80077414 */ ~dBgS_AcchCir();
};

struct dBgS_RoofChk {
    /* 80078FF4 */ dBgS_RoofChk();
    /* 80079090 */ ~dBgS_RoofChk();
    /* 800B146C */ void SetPos(cXyz const&);
};

struct dBgS {
    /* 80074ABC */ void ChkMoveBG(cBgS_PolyInfo const&);
    /* 80074B40 */ void ChkMoveBG_NoDABg(cBgS_PolyInfo const&);
    /* 80074B98 */ void GetExitId(cBgS_PolyInfo const&);
    /* 80074BE8 */ void GetPolyColor(cBgS_PolyInfo const&);
    /* 80074C6C */ void GetHorseNoEntry(cBgS_PolyInfo const&);
    /* 80074CBC */ void GetSpecialCode(cBgS_PolyInfo const&);
    /* 80074D0C */ void GetMagnetCode(cBgS_PolyInfo const&);
    /* 80074D5C */ void GetMonkeyBarsCode(cBgS_PolyInfo const&);
    /* 80074E00 */ void GetWallCode(cBgS_PolyInfo const&);
    /* 80074E50 */ void GetPolyAtt0(cBgS_PolyInfo const&);
    /* 80074EA0 */ void GetPolyAtt1(cBgS_PolyInfo const&);
    /* 80074EF0 */ void GetGroundCode(cBgS_PolyInfo const&);
    /* 80074FE0 */ void GetRoomPathId(cBgS_PolyInfo const&);
    /* 80075080 */ void GetGrpSoundId(cBgS_PolyInfo const&);
    /* 80075100 */ void GetRoomId(cBgS_PolyInfo const&);
    /* 8007519C */ void GetPolyAttackThrough(cBgS_PolyInfo const&);
    /* 800751F8 */ void ChkPolyHSStick(cBgS_PolyInfo const&);
    /* 8007549C */ void RoofChk(dBgS_RoofChk*);
    /* 80075774 */ void MoveBgCrrPos(cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*, bool, bool);
    /* 80075880 */ void MoveBgTransPos(cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
    /* 80075C6C */ void PushPullCallBack(cBgS_PolyInfo const&, fopAc_ac_c*, s16,
                                         dBgW_Base::PushPullLabel);
};

struct dBgS_Acch {
    /* 80075F94 */ ~dBgS_Acch();
    /* 800760A0 */ dBgS_Acch();
    /* 80076248 */ void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
    /* 80076288 */ void Set(fopAc_ac_c*, int, dBgS_AcchCir*);
    /* 80076AAC */ void CrrPos(dBgS&);
    /* 800773C0 */ void SetGndThinCellingOff();
    /* 800773D0 */ void ClrGndThinCellingOff();
    /* 800773EC */ void OnWallSort();
    /* 800D00D0 */ void ChkRoofHit() const;
    /* 800D00DC */ void ClrGroundHit();
    /* 80141404 */ void ChkGroundHit() const;
};

struct dPaPo_c {
    /* 80050C9C */ void init(dBgS_Acch*, f32, f32);
    /* 80051008 */ void setEffectCenter(dKy_tevstr_c const*, cXyz const*, u32, u32, cXyz const*,
                                        csXyz const*, cXyz const*, s8, f32, f32);
};

struct dPaPoF_c {
    /* 800512E8 */ void setEffectFour(dKy_tevstr_c const*, cXyz const*, u32, u32, cXyz const*,
                                      cXyz const*, cXyz const*, cXyz const*, cXyz const*,
                                      csXyz const*, cXyz const*, s8, f32, f32);
    /* 80051424 */ void clearFourAllID();
};

struct dMsgObject_c {
    /* 8023822C */ void getStatus();
    /* 80238320 */ void onMsgSend();
    /* 80238410 */ void setSmellType(u8);
    /* 80238588 */ void isHowlHearingMode();
};

struct dMsgFlow_c {
    /* 80249F00 */ dMsgFlow_c();
    /* 80249F48 */ ~dMsgFlow_c();
    /* 80249F90 */ void init(fopAc_ac_c*, int, int, fopAc_ac_c**);
    /* 8024A2D8 */ void doFlow(fopAc_ac_c*, fopAc_ac_c**, int);
};

struct dMeter2Info_c {
    /* 8021C0E0 */ void setFloatingMessage(u16, s16, bool);
    /* 8021C934 */ void onDirectUseItem(int);
    /* 8021C9DC */ void resetWarpStatus();
    /* 8021CA04 */ void warpInProc();
    /* 8021CA70 */ void warpOutProc();
};

struct dJntColData_c {};

struct dJntCol_c {
    /* 80035C8C */ dJntCol_c();
    /* 80035CA0 */ void init(fopAc_ac_c*, dJntColData_c const*, J3DModel*, int);
    /* 80036C44 */ void getHitmarkPosAndAngle(cXyz const*, csXyz const*, cXyz*, csXyz*, int) const;
};

struct dInsect_c {
    /* 80110648 */ void Insect_Release();
};

struct dEyeHL_c {
    /* 8009C964 */ void entry(J3DModelData*, char const*);
    /* 8009CA28 */ void remove();
    /* 80140C80 */ ~dEyeHL_c();
};

struct dEvt_info_c {
    /* 801411E0 */ void onCondition(u16);
    /* 80141200 */ void offCondition(u16);
    /* 80141388 */ void checkCommandCatch();
    /* 80141450 */ void checkCommandDoor();
};

struct dEvt_control_c {
    /* 80042468 */ void reset();
    /* 80042518 */ void reset(void*);
    /* 80042914 */ void setSkipProc(void*, int (*)(void*, int), int);
    /* 8004316C */ void compulsory(void*, char const*, u16);
    /* 800432EC */ void convPId(unsigned int);
    /* 800436EC */ void setPtI_Id(unsigned int);
    /* 800436F4 */ void setPtD(void*);
    /* 801412D4 */ void isOrderOK();
};

struct dEvent_manager_c {
    /* 80046800 */ void setObjectArchive(char*);
    /* 80046A58 */ void orderStartDemo();
    /* 80047758 */ void getEventIdx(fopAc_ac_c*, char const*, u8);
    /* 80047A38 */ void startCheckOld(char const*);
    /* 80047B1C */ void getMyStaffId(char const*, fopAc_ac_c*, int);
    /* 80047F5C */ void getMyNowCutName(int);
    /* 800480EC */ void getMySubstanceP(int, char const*, int);
    /* 8004817C */ void cutEnd(int);
    /* 800483C4 */ void setGoal(cXyz*);
    /* 800483E0 */ void getGoal();
    /* 800483E8 */ void getRunEventName();
    /* 8004882C */ void checkStartDemo();
};

struct dEvent_exception_c {
    /* 800463F0 */ void setStartDemo(int);
};

struct dDlst_shadowControl_c {
    /* 80055F1C */ void addReal(u32, J3DModel*);
};

struct dDlst_peekZ_c {
    /* 80056018 */ void newData(s16, s16, u32*);
};

struct J3DPacket;
struct J3DDrawBuffer {
    /* 8032548C */ void entryImm(J3DPacket*, u16);
};

struct J3DPacket {
    /* 80312750 */ bool entry(J3DDrawBuffer*);
};

struct dDlst_list_c {
    /* 800565EC */ void entryZSortXluDrawList(J3DDrawBuffer*, J3DPacket*, cXyz&);
};

struct dDemo_object_c {
    /* 80039088 */ void getActor(u8);
};

struct dDemo_c {
    /* 80039EEC */ void setBranchId(u16, s16);
};

struct dComIfG_play_c {
    /* 8002C97C */ void getLayerNo(int);
};

struct cCcD_Obj {};

struct dCcMassS_Mng {
    /* 80085D98 */ void Set(cCcD_Obj*, u8);
};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {};

struct dCcD_SrcCyl {};

struct dCcD_SrcCps {};

struct dCcD_Sph {
    /* 80084A34 */ void Set(dCcD_SrcSph const&);
    /* 80084A78 */ void StartCAt(cXyz&);
    /* 80084AC4 */ void MoveCAt(cXyz&);
};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
    /* 80083830 */ void Move();
};

struct dCcD_GAtTgCoCommonBase {
    /* 80083688 */ void GetAc();
};

struct dCcD_Cyl {
    /* 800848B4 */ void Set(dCcD_SrcCyl const&);
    /* 80084908 */ void StartCAt(cXyz&);
    /* 80084954 */ void MoveCAt(cXyz&);
    /* 80084D60 */ ~dCcD_Cyl();
    /* 80141020 */ dCcD_Cyl();
};

struct dCcD_Cps {
    /* 800847D0 */ void Set(dCcD_SrcCps const&);
    /* 8008506C */ ~dCcD_Cps();
    /* 80140FA0 */ dCcD_Cps();
};

struct dCamera_c {
    /* 80088A7C */ void StartEventCamera(int, int, ...);
    /* 80088BBC */ void EndEventCamera(int);
    /* 801614AC */ void Start();
    /* 801614D0 */ void Stop();
    /* 801614F4 */ void ChangeModeOK(s32);
    /* 80163028 */ void SetTrimTypeForce(s32);
    /* 80164B64 */ void GetCameraTypeFromCameraName(char const*);
    /* 80181500 */ void GetForceLockOnActor();
};

struct dBgS_RopeLinChk {
    /* 8007838C */ dBgS_RopeLinChk();
    /* 800783E8 */ ~dBgS_RopeLinChk();
};

struct dBgS_PolyPassChk {
    /* 80078E68 */ void SetObj();
    /* 80078E74 */ void ClrObj();
    /* 80078E98 */ void SetLink();
    /* 80078EA4 */ void ClrLink();
    /* 80078EBC */ void SetBomb();
    /* 80078EC8 */ void ClrBomb();
    /* 80078F7C */ void SetStatue();
    /* 80078F88 */ void ClrStatue();
    /* 80078F94 */ void SetIronBall();
};

struct dBgS_ObjLinChk {
    /* 80077F5C */ dBgS_ObjLinChk();
    /* 80077FB8 */ ~dBgS_ObjLinChk();
};

struct dBgS_ObjAcch {
    /* 800D0C6C */ ~dBgS_ObjAcch();
};

struct dBgS_LinkRoofChk {
    /* 80140E40 */ ~dBgS_LinkRoofChk();
};

struct dBgS_LinkLinChk {
    /* 80078030 */ dBgS_LinkLinChk();
    /* 8007808C */ ~dBgS_LinkLinChk();
};

struct dBgS_LinkGndChk {
    /* 80140EB8 */ ~dBgS_LinkGndChk();
};

struct dBgS_LinkAcch {
    /* 80140F30 */ ~dBgS_LinkAcch();
};

struct dBgS_GndChk {
    /* 8007757C */ dBgS_GndChk();
    /* 800775F0 */ ~dBgS_GndChk();
};

struct dBgS_BoomerangLinChk {
    /* 800782B8 */ dBgS_BoomerangLinChk();
    /* 80078314 */ ~dBgS_BoomerangLinChk();
};

struct dBgS_ArrowLinChk {
    /* 800781D8 */ dBgS_ArrowLinChk();
    /* 80078240 */ ~dBgS_ArrowLinChk();
};

struct dAttention_c {
    /* 80070844 */ void GetLockonList(s32);
    /* 80070880 */ void getActionBtnB();
    /* 80070974 */ void getActionBtnXY();
    /* 8007353C */ void LockonTarget(s32);
    /* 800737E4 */ void LockonTruth();
};

struct dAttLook_c {
    /* 80073CA4 */ void convPId(unsigned int);
};

struct dAttHint_c {
    /* 800738CC */ void convPId(unsigned int);
};

struct dAttCatch_c {
    /* 8007398C */ void convPId(unsigned int);
};

struct JPABaseParticle {};

struct dAlink_bottleWaterPcallBack_c {
    /* 800CFCF8 */ ~dAlink_bottleWaterPcallBack_c();
    /* 80124A2C */ void execute(JPABaseEmitter*, JPABaseParticle*);
};

struct camera_class {};

struct cM3dGSph {
    /* 8026F648 */ void SetC(cXyz const&);
    /* 8026F708 */ void SetR(f32);
};

struct cM3dGLin {
    /* 8026F2E8 */ void SetStartEnd(cXyz const&, cXyz const&);
};

struct cM3dGCyl {
    /* 8026F1DC */ void SetC(cXyz const&);
    /* 8026F1F8 */ void SetH(f32);
    /* 8026F200 */ void SetR(f32);
};

struct cM3dGCps {
    /* 8026EF88 */ cM3dGCps();
    /* 8026EFA4 */ ~cM3dGCps();
};

struct cCcS {
    /* 80264BA8 */ void Set(cCcD_Obj*);
};

struct cCcD_Stts {
    /* 801410A4 */ ~cCcD_Stts();
    /* 8026395C */ void ClrCcMove();
};

struct cCcD_ObjCo {
    /* 80264900 */ void SetIGrp(u32);
    /* 8026491C */ void SetVsGrp(u32);
};

struct cBgS_LinChk {};

struct cBgS_GndChk {
    /* 80267D28 */ void SetPos(cXyz const*);
};

struct cBgS {
    /* 800743B4 */ void LineCross(cBgS_LinChk*);
    /* 800744A0 */ void GroundCross(cBgS_GndChk*);
    /* 80074618 */ void GetActorPointer(int) const;
    /* 80074628 */ void GetBgWBasePointer(cBgS_PolyInfo const&) const;
    /* 80074660 */ void ChkPolySafe(cBgS_PolyInfo const&);
    /* 80074744 */ void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
    /* 800747F0 */ void GetTriPnt(cBgS_PolyInfo const&, cXyz*, cXyz*, cXyz*) const;
};

struct _GXTexObj {};

struct Z2WolfHowlData {};

struct Z2WolfHowlMgr {
    /* 802CAAC0 */ Z2WolfHowlMgr();
    /* 802CAED4 */ void startWolfHowlSound(f32, f32, bool, f32);
    /* 802CB100 */ void setCorrectData(s8, Z2WolfHowlData*);
    /* 802CBB58 */ void skipCorrectDemo();
};

struct Z2SoundObjSimple {
    /* 802BE844 */ Z2SoundObjSimple();
};

struct Z2SoundObjBase {
    /* 802BDFF8 */ void deleteObject();
};

struct Z2SeqMgr {
    /* 802AF010 */ void bgmStart(u32, u32, s32);
    /* 802AF49C */ void subBgmStart(u32);
    /* 802AF884 */ void subBgmStop();
    /* 802AFF8C */ void changeBgmStatus(s32);
    /* 802B1DF4 */ void changeSubBgmStatus(s32);
    /* 802B5E84 */ void bgmSetSwordUsing(s32);
    /* 802B5E8C */ void taktModeMute();
    /* 802B5ED4 */ void taktModeMuteOff();
};

struct JAISoundID {};

struct Z2SeMgr {
    /* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
    /* 802AC50C */ void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2CreatureLink {
    /* 80141988 */ void setLinkState(u8);
    /* 802C321C */ void setLinkGroupInfo(u8);
    /* 802C3220 */ void setLinkHp(s32, s32);
    /* 802C3228 */ void setLinkSwordType(s32, s32);
    /* 802C328C */ void setLinkShieldType(s32, s32);
    /* 802C32F0 */ void setLinkBootsType(s32);
    /* 802C333C */ Z2CreatureLink();
    /* 802C3500 */ ~Z2CreatureLink();
    /* 802C3638 */ void init(Vec*, Vec*, Vec*);
    /* 802C3710 */ void initKantera(Vec*);
    /* 802C374C */ void deleteKantera();
    /* 802C3778 */ void setKanteraState(u8);
    /* 802C3A64 */ void setSinkDepth(s8);
    /* 802C3A6C */ void setRiding(bool);
    /* 802C3AEC */ void setMagnetized(bool);
    /* 802C3AFC */ void setWolfEyeOpen(bool);
    /* 802C3BD4 */ void startLinkSound(JAISoundID, u32, s8);
    /* 802C3E68 */ void startLinkSoundLevel(JAISoundID, u32, s8);
    /* 802C4320 */ void startLinkVoice(JAISoundID, s8);
    /* 802C45B0 */ void startLinkVoiceLevel(JAISoundID, s8);
    /* 802C46F0 */ void startLinkSwordSound(JAISoundID, u32, s8);
    /* 802C4814 */ void startHitItemSE(u32, u32, Z2SoundObjBase*, f32);
    /* 802C48D8 */ void setResumeAttack(bool);
};

struct Z2Creature {
    /* 802C0628 */ void initAnime(void*, bool, f32, f32);
    /* 802C06D0 */ void updateAnime(f32, f32);
    /* 802C0BE8 */ void startCollisionSE(u32, u32);
};

struct LIGHT_INFLUENCE {
    /* 800CFC7C */ ~LIGHT_INFLUENCE();
};

namespace JStudio {
namespace stb {
struct data {
    struct TParse_TParagraph_data {
        struct TData {};

        /* 80289A80 */ void getData(JStudio::stb::data::TParse_TParagraph_data::TData*) const;
    };
};

};  // namespace stb

};  // namespace JStudio

struct JPAParticleCallBack {
    /* 800183D8 */ void draw(JPABaseEmitter*, JPABaseParticle*);
    /* 8027EFA4 */ ~JPAParticleCallBack();
};

struct JPAEmitterCallBack {
    /* 8027E6A4 */ ~JPAEmitterCallBack();
};

struct JKRFileLoader {
    /* 802D4270 */ void getGlbResource(char const*, JKRFileLoader*);
};

struct JKRArchive {
    /* 802D5ECC */ void readIdxResource(void*, u32, u32);
};

struct JGeometry {
    template <typename A1>
    struct TVec3 {};
    /* TVec3<f32> */
    struct TVec3__template0 {};
};

struct JASKernel {
    /* 80290B08 */ void getAramHeap();
};

template <typename A0>
struct JAISoundStrategyMgr {};
/* JAISoundStrategyMgr<JAISeq> */
struct JAISoundStrategyMgr__template1 {};

struct JAISoundHandle {
    /* 802A2184 */ void releaseSound();
};

struct JAISeqMgr {};

struct JAISeq {
    /* 802A0A8C */ JAISeq(JAISeqMgr*, JAISoundStrategyMgr<JAISeq>*);
};

struct J3DTexNoAnm {
    /* 8003B1F8 */ ~J3DTexNoAnm();
    /* 8003B240 */ J3DTexNoAnm();
};

struct J3DTexMtxAnm {
    /* 8003B264 */ ~J3DTexMtxAnm();
    /* 8003B2A0 */ J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
    /* 8003B150 */ ~J3DTevKColorAnm();
    /* 8003B18C */ J3DTevKColorAnm();
};

struct J3DTevColorAnm {
    /* 8003B1A4 */ ~J3DTevColorAnm();
    /* 8003B1E0 */ J3DTevColorAnm();
};

struct J3DTevBlock {
    /* 80110E80 */ void setTevColor(u32, J3DGXColorS10 const*);
};

struct J3DSys {
    /* 8031073C */ void reinitGX();
};

struct J3DShape {
    /* 80315300 */ void loadPreDrawSetting() const;
};

struct J3DAnmTextureSRTKey {
    /* 8032B1D4 */ void searchUpdateMaterialID(J3DModelData*);
};

struct J3DAnmTexPattern {
    /* 8032B09C */ void searchUpdateMaterialID(J3DModelData*);
};

struct J3DMaterialTable {
    /* 8032F7B4 */ void removeTexMtxAnimator(J3DAnmTextureSRTKey*);
    /* 8032F880 */ void removeTevRegAnimator(J3DAnmTevRegKey*);
    /* 8032FBC8 */ void entryTexNoAnimator(J3DAnmTexPattern*);
    /* 8032FCC4 */ void entryTexMtxAnimator(J3DAnmTextureSRTKey*);
    /* 8032FE70 */ void entryTevRegAnimator(J3DAnmTevRegKey*);
};

struct J3DMaterialAnm {
    /* 800A4820 */ ~J3DMaterialAnm();
    /* 8032C320 */ void initialize();
    /* 8032C3C4 */ void calc(J3DMaterial*) const;
};

struct J3DMatColorAnm {
    /* 8003B2B8 */ ~J3DMatColorAnm();
    /* 8003B2F4 */ J3DMatColorAnm();
};

struct J3DJoint {};

struct J3DFrameCtrl {
    /* 803283FC */ void init(s16);
    /* 8032842C */ void checkPass(f32);
};

struct J3DAnmLoaderDataBaseFlag {};

struct J3DAnmLoaderDataBase {
    /* 80337B40 */ void load(void const*, J3DAnmLoaderDataBaseFlag);
};

struct J2DGrafContext {};

struct J2DScreen {
    /* 802F8498 */ J2DScreen();
    /* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
    /* 802F8ED4 */ void draw(f32, f32, J2DGrafContext const*);
    /* 802F9690 */ void animation();
};

struct J2DAnmTevRegKey {};

struct J2DAnmColor {};

struct J2DPane {
    /* 80126350 */ void setAnimation(J2DAnmTevRegKey*);
    /* 80126354 */ void setAnimation(J2DAnmColor*);
};

struct J2DAnmLoaderDataBase {
    /* 80308A6C */ void load(void const*);
};

//
// Forward References:
//

static void daAlink_tgHitCallback(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
static void daAlink_coHitCallback(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
static void daAlink_modelCallBack(J3DJoint*, int);
static void daAlink_headModelCallBack(J3DJoint*, int);
static void daAlink_wolfModelCallBack(J3DJoint*, int);
static void daAlink_createHeap(fopAc_ac_c*);
static void daAlink_Create(fopAc_ac_c*);
static void daAlink_searchBouDoor(fopAc_ac_c*, void*);
static void daAlink_searchKolin(fopAc_ac_c*, void*);
static void daAlink_Execute(daAlink_c*);
static void daAlink_Draw(daAlink_c*);
static void daAlink_Delete(daAlink_c*);
static void daAlink_searchPeepObj(fopAc_ac_c*, void*);
static void dComIfGp_att_getCatghTarget();
static void mDoAud_setLinkHp(s32, s32);
static void dComIfGs_getLife();
static void dComIfGp_getRStatus();
static void dComIfGp_setItemLifeCount(f32, u8);
static void cMtx_multVec(f32 const (*)[4], Vec const*, Vec*);
static void dComIfGp_evmng_startCheck(char const*);
static void mDoAud_setLinkGroupInfo(u8);
static void daAlink_searchNightStalker(fopAc_ac_c*, void*);
static void daAlink_checkLightBallA(fopAc_ac_c*);
static void daAlink_checkLightBallB(fopAc_ac_c*);
static void daAlink_searchLightBall(fopAc_ac_c*, void*);
static void daAlink_searchGoat(fopAc_ac_c*, void*);
static void daAlink_searchBoar(fopAc_ac_c*, void*);
static void daAlink_searchCoach(fopAc_ac_c*, void*);
static void daAlink_searchCanoe(fopAc_ac_c*, void*);
static void daAlink_searchIceLeaf(fopAc_ac_c*, void*);
static void daAlink_hookshotAtHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
static void daAlink_bottleModelCallBack(J3DJoint*, int);
static void daAlink_searchTagKandelaar(fopAc_ac_c*, void*);
static void daAlink_searchTagKtOnFire(fopAc_ac_c*, void*);
static void daAlink_kandelaarModelCallBack(J3DJoint*, int);
static void daAlink_searchWhistle(fopAc_ac_c*, void*);
static void daAlink_searchHawk(fopAc_ac_c*, void*);
static void daAlink_c_getDemoIDData(dDemo_actor_c*, int*, int*, int*, u16*, int*, int*);
static void daAlink_searchPortal(fopAc_ac_c*, void*);
static void setBezierPos(cXyz const*, cXyz const*, cXyz const*, cXyz const*, f32, cXyz*);
static void daAlink_searchGoldWolf(fopAc_ac_c*, void*);
static void daAlink_searchWolfHowl(fopAc_ac_c*, void*);
static void daAlink_searchGiant(fopAc_ac_c*, void*);
static void daAlink_searchGiantTalk(fopAc_ac_c*, void*);
static void daAlink_searchWolfLockEnemy(fopAc_ac_c*, void*);
static void daAlink_searchEnemyCargo(fopAc_ac_c*, void*);
static void mDoAud_seStartLevel(u32, Vec const*, u32, s8);
static void dComIfGp_setBottleStatus(u8, u8);
static void fopAcM_onSwitch(fopAc_ac_c const*, int);
static void dComIfGs_isItemFirstBit(u8);
static void dStage_stagInfo_GetSaveTbl(stage_stag_info_class*);
static void dComIfGp_getStage();
void fopAcM_GetName(void*);
static void dComIfGp_getEvent();
static void dComIfGp_checkPlayerStatus0(int, u32);
static void dComIfGp_checkPlayerStatus1(int, u32);
static void dComIfGp_getEventManager();
void dComIfGs_isEventBit(u16);
static void dComIfGp_getPlayerCameraID(int);
static void dComIfGp_event_chkEventFlag(u16);
static void dComIfGp_evmng_getMyStaffId(char const*, fopAc_ac_c*, int);
static void dComIfGp_event_runCheck();
void dComIfGp_getHorseActor();
static void dComIfGp_getDoStatus();
static void dMeter2Info_offUseButton(int);
static void dComIfGs_getRupee();
static void dComIfGp_setItemRupeeCount(s32);
static void dMeter2Info_setFloatingMessage(u16, s16, bool);
void cLib_calcTimer__template0(u8*);

extern "C" bool getE3Zhint__9daAlink_cFv();
extern "C" void getAlinkArcName__9daAlink_cFv();
extern "C" static void
daAlink_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" static void
daAlink_coHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" void init__16daAlink_matAnm_cFv();
extern "C" void calc__16daAlink_matAnm_cCFP11J3DMaterial();
extern "C" void checkStageName__9daAlink_cFPCc();
extern "C" void tgHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfP12dCcD_GObjInf();
extern "C" void coHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" void setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz();
extern "C" void jointControll__9daAlink_cFi();
extern "C" void setUpperFront__9daAlink_cFv();
extern "C" void changeBlendRate__9daAlink_cFi();
extern "C" void resetRootMtx__9daAlink_cFv();
extern "C" void modelCallBack__9daAlink_cFi();
extern "C" static void daAlink_modelCallBack__FP8J3DJointi();
extern "C" void headModelCallBack__9daAlink_cFi();
extern "C" static void daAlink_headModelCallBack__FP8J3DJointi();
extern "C" void wolfModelCallBack__9daAlink_cFi();
extern "C" static void daAlink_wolfModelCallBack__FP8J3DJointi();
extern "C" void setHatAngle__9daAlink_cFv();
extern "C" void calcHairAngle__9daAlink_cFPs();
extern "C" void setHairAngle__9daAlink_cFP4cXyzff();
extern "C" void setLookPosFromOut__9daAlink_cFP4cXyz();
extern "C" void checkAttentionPosAngle__9daAlink_cFP4cXyz();
extern "C" void checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz();
extern "C" void getNeckAimPos__9daAlink_cFP4cXyzPii();
extern "C" void getNeckAimAngle__9daAlink_cFP4cXyzPsPsPsPs();
extern "C" void setEyeMove__9daAlink_cFP4cXyzss();
extern "C" void setNeckAngle__9daAlink_cFv();
extern "C" void getStickAngleFromPlayerShape__9daAlink_cCFPs();
extern "C" void commonLineCheck__9daAlink_cFP4cXyzP4cXyz();
extern "C" void getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi();
extern "C" void checkGoronRide__9daAlink_cFv();
extern "C" void setMoveSlantAngle__9daAlink_cFv();
extern "C" void setArmMatrix__9daAlink_cFv();
extern "C" void setFootMatrix__9daAlink_cFv();
extern "C" void setMatrixOffset__9daAlink_cFPff();
extern "C" void setLegAngle__9daAlink_cFfP18daAlink_footData_cPsPsi();
extern "C" void footBgCheck__9daAlink_cFv();
extern "C" void handBgCheck__9daAlink_cFv();
extern "C" void setItemHeap__9daAlink_cFv();
extern "C" void setIdxMask__9daAlink_cFPUsPUs();
extern "C" void getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl();
extern "C" void initModel__9daAlink_cFP12J3DModelDataUlUl();
extern "C" void initModel__9daAlink_cFUsUl();
extern "C" void initModelEnv__9daAlink_cFUsUl();
extern "C" void initDemoModel__9daAlink_cFPP8J3DModelPCcUl();
extern "C" void initDemoBck__9daAlink_cFPP13mDoExt_bckAnmPCc();
extern "C" void createHeap__9daAlink_cFv();
extern "C" void __dt__14J3DMaterialAnmFv();
extern "C" static void daAlink_createHeap__FP10fopAc_ac_c();
extern "C" void setSelectEquipItem__9daAlink_cFi();
extern "C" void checkBoarStart__9daAlink_cFv();
extern "C" void checkCanoeStart__9daAlink_cFv();
extern "C" void playerInit__9daAlink_cFv();
extern "C" void checkHorseStart__9daAlink_cFUli();
extern "C" void setStartProcInit__9daAlink_cFv();
extern "C" void create__9daAlink_cFv();
extern "C" static void daAlink_Create__FP10fopAc_ac_c();
extern "C" void setRoomInfo__9daAlink_cFv();
extern "C" void setShapeAngleOnGround__9daAlink_cFv();
extern "C" void setStepsOffset__9daAlink_cFv();
extern "C" void iceSlipBgCheck__9daAlink_cFv();
extern "C" void setIceSlipSpeed__9daAlink_cFv();
extern "C" void setPolygonSpeed__9daAlink_cFv();
extern "C" void checkWindSpeedOnAngle__9daAlink_cCFv();
extern "C" void checkWindSpeedOnAngleAnime__9daAlink_cCFi();
extern "C" void checkDashAnime__9daAlink_cCFv();
extern "C" void checkWindWallRate__9daAlink_cFRC4cXyz();
extern "C" void setWindSpeed__9daAlink_cFv();
extern "C" void setBodyPartPos__9daAlink_cFv();
extern "C" void setRollJump__9daAlink_cFffs();
extern "C" void setAttentionPos__9daAlink_cFv();
extern "C" void setMatrix__9daAlink_cFv();
extern "C" void simpleAnmPlay__9daAlink_cFP10J3DAnmBase();
extern "C" void setSwordPos__9daAlink_cFv();
extern "C" void setItemMatrix__9daAlink_cFi();
extern "C" void setWolfItemMatrix__9daAlink_cFv();
extern "C" void setHandIndex__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void setSwordAtCollision__9daAlink_cFi();
extern "C" void checkNoCollisionCorret__9daAlink_cFv();
extern "C" void decSwordBlur__9daAlink_cFv();
extern "C" void resetWolfAtCollision__9daAlink_cFv();
extern "C" void setWolfAtCollision__9daAlink_cFv();
extern "C" void resetAtCollision__9daAlink_cFi();
extern "C" void setAtCollision__9daAlink_cFv();
extern "C" void setWolfCollisionPos__9daAlink_cFv();
extern "C" void initLockAt__9daAlink_cFv();
extern "C" void cancelLockAt__9daAlink_cFv();
extern "C" void setCollisionPos__9daAlink_cFv();
extern "C" void setCollision__9daAlink_cFv();
extern "C" void getBaseAnimeFrame__9daAlink_cCFv();
extern "C" void setAnimeFrame__9daAlink_cFf();
extern "C" void setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff();
extern "C" void getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM();
extern "C" void checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM();
extern "C" void checkUnderMove1BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM();
extern "C" void
getUnderUpperAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMPP15J3DAnmTransformPP15J3DAnmTransformiUl();
extern "C" void setDoubleAnimeBlendRatio__9daAlink_cFf();
extern "C" void
commonDoubleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformfffi();
extern "C" void
setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif();
extern "C" void commonSingleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformffs();
extern "C" void setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf();
extern "C" void setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff();
extern "C" void setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf();
extern "C" void setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c();
extern "C" void animePlay__9daAlink_cFP15J3DAnmTransformP16daPy_frameCtrl_c();
extern "C" void allAnimePlay__9daAlink_cFv();
extern "C" void setUpperAnimeMorf__9daAlink_cFf();
extern "C" void setUpperAnimeBase__9daAlink_cFUs();
extern "C" void setUpperAnimeBaseMorf__9daAlink_cFUsf();
extern "C" void setUpperAnimeBaseSpeed__9daAlink_cFUsff();
extern "C" void setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf();
extern "C" void setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c();
extern "C" void resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf();
extern "C" void setUnderAnimeMorf__9daAlink_cFf();
extern "C" void setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf();
extern "C" void setUnderAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERPC16daAlinkHIO_anm_c();
extern "C" void resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf();
extern "C" void setOldRootQuaternion__9daAlink_cFsss();
extern "C" void checkAtnLeftAnime__9daAlink_cFv();
extern "C" void checkAtnRightAnime__9daAlink_cFv();
extern "C" void getMoveGroundAngleSpeedRate__9daAlink_cFv();
extern "C" void setBlendMoveAnime__9daAlink_cFf();
extern "C" void setBlendAtnMoveAnime__9daAlink_cFf();
extern "C" void setBlendAtnBackMoveAnime__9daAlink_cFf();
extern "C" void setFaceBck__9daAlink_cFUsiUs();
extern "C" void setFaceBtp__9daAlink_cFUsiUs();
extern "C" void setFaceBtk__9daAlink_cFUsiUs();
extern "C" void setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM();
extern "C" void setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM();
extern "C" void setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void resetFacePriBck__9daAlink_cFv();
extern "C" void resetFacePriBtp__9daAlink_cFv();
extern "C" void resetFacePriBtk__9daAlink_cFv();
extern "C" void resetFacePriTexture__9daAlink_cFv();
extern "C" void resetFacePriAnime__9daAlink_cFv();
extern "C" void playFaceTextureAnime__9daAlink_cFv();
extern "C" void getGroundAngle__9daAlink_cFP13cBgS_PolyInfos();
extern "C" void getRoofAngle__9daAlink_cFP13cBgS_PolyInfos();
extern "C" void getWallEdgePos__9daAlink_cFRC4cXyzP8cM3dGPlaP8cM3dGPlaP4cXyzi();
extern "C" void setFrontWallType__9daAlink_cFv();
extern "C" void SetPos__12dBgS_RoofChkFRC4cXyz();
extern "C" void checkWaterPolygonUnder__9daAlink_cFv();
extern "C" void setWaterY__9daAlink_cFv();
extern "C" void setHangWaterY__9daAlink_cFv();
extern "C" void setSandDownBgCheckWallH__9daAlink_cFv();
extern "C" void setBgCheckParam__9daAlink_cFv();
extern "C" void checkNotJumpSinkLimit__9daAlink_cFv();
extern "C" void checkNotItemSinkLimit__9daAlink_cFv();
extern "C" void setSandShapeOffset__9daAlink_cFv();
extern "C" void checkLv2MiddleBossBgRide__9daAlink_cFs();
extern "C" void getSlidePolygon__9daAlink_cFP8cM3dGPla();
extern "C" void checkSlope__9daAlink_cCFv();
extern "C" void setPlayerPosAndAngle__9daAlink_cFPC4cXyzsi();
extern "C" void setPlayerPosAndAngle__9daAlink_cFPC4cXyzPC5csXyz();
extern "C" void setPlayerPosAndAngle__9daAlink_cFPA4_f();
extern "C" void itemTriggerCheck__9daAlink_cFUc();
extern "C" void itemButtonCheck__9daAlink_cFUc();
extern "C" void itemButton__9daAlink_cFv();
extern "C" void itemTrigger__9daAlink_cFv();
extern "C" void spActionButton__9daAlink_cFv();
extern "C" void spActionTrigger__9daAlink_cFv();
extern "C" void midnaTalkTrigger__9daAlink_cCFv();
extern "C" void swordSwingTrigger__9daAlink_cFv();
extern "C" void setItemActionButtonStatus__9daAlink_cFUc();
extern "C" void itemActionTrigger__9daAlink_cFv();
extern "C" void setStickData__9daAlink_cFv();
extern "C" void setAtnList__9daAlink_cFv();
extern "C" void setRStatus__9daAlink_cFUc();
extern "C" void setRStatusEmphasys__9daAlink_cFUc();
extern "C" void setDoStatus__9daAlink_cFUc();
extern "C" void setDoStatusEmphasys__9daAlink_cFUc();
extern "C" void setDoStatusContinuation__9daAlink_cFUc();
extern "C" void setBStatus__9daAlink_cFUc();
extern "C" void checkAtnWaitAnime__9daAlink_cFv();
extern "C" void setTiredVoice__9daAlink_cFP16daPy_frameCtrl_c();
extern "C" void checkRestHPAnime__9daAlink_cFv();
extern "C" void getDirectionFromAngle__9daAlink_cFs();
extern "C" void checkAttentionState__9daAlink_cFv();
extern "C" void getShapeAngleYAtnActor__9daAlink_cFv();
extern "C" void setShapeAngleToAtnActor__9daAlink_cFi();
extern "C" void initServiceWaitTime__9daAlink_cFv();
extern "C" void checkZeroSpeedF__9daAlink_cCFv();
extern "C" void setNormalSpeedF__9daAlink_cFff();
extern "C" void getStickAngleDistanceRate__9daAlink_cFv();
extern "C" void setSpeedAndAngleNormal__9daAlink_cFv();
extern "C" void setSpeedAndAngleAtn__9daAlink_cFv();
extern "C" void checkRequestTalkActor__9daAlink_cFP10dAttList_cP10fopAc_ac_c();
extern "C" void checkServiceWaitMode__9daAlink_cFv();
extern "C" void setJumpMode__9daAlink_cFv();
extern "C" void getMetamorphoseNearDis__9daAlink_cCFv();
extern "C" void getMetamorphoseFarDis__9daAlink_cCFv();
extern "C" void getMetamorphoseFarAngle__9daAlink_cCFv();
extern "C" void setMidnaMsg__9daAlink_cFv();
extern "C" void notTalk__9daAlink_cFv();
extern "C" void setTalkStatus__9daAlink_cFv();
extern "C" void getFrontRollRate__9daAlink_cFv();
extern "C" void decideCommonDoStatus__9daAlink_cFv();
extern "C" void decideDoStatus__9daAlink_cFv();
extern "C" void checkWaitAction__9daAlink_cFv();
extern "C" void setFallVoice__9daAlink_cFv();
extern "C" void setLandPassiveData__9daAlink_cFv();
extern "C" void setStepLandVibration__9daAlink_cFv();
extern "C" void checkLandAction__9daAlink_cFi();
extern "C" void checkSlideAction__9daAlink_cFv();
extern "C" void checkAutoJumpAction__9daAlink_cFv();
extern "C" void checkCutJumpInFly__9daAlink_cFv();
extern "C" void checkFrontWallTypeAction__9daAlink_cFv();
extern "C" void checkItemActionInitStart__9daAlink_cFv();
extern "C" void checkItemChangeAutoAction__9daAlink_cFv();
extern "C" void setFastShotTimer__9daAlink_cFv();
extern "C" void cancelItemUseQuake__9daAlink_cFi();
extern "C" void cancelUpperItemReadyAnime__9daAlink_cFi();
extern "C" void checkItemActorPointer__9daAlink_cFv();
extern "C" void checkSwordTwirlAction__9daAlink_cFv();
extern "C" void checkUpperItemActionFly__9daAlink_cFv();
extern "C" void checkItemButtonChange__9daAlink_cFv();
extern "C" void checkUpperItemAction__9daAlink_cFv();
extern "C" void orderPeep__9daAlink_cFv();
extern "C" void orderTalk__9daAlink_cFi();
extern "C" static void daAlink_searchBouDoor__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchKolin__FP10fopAc_ac_cPv();
extern "C" void orderZTalk__9daAlink_cFv();
extern "C" void checkNormalAction__9daAlink_cFv();
extern "C" void checkReadyItem__9daAlink_cFv();
extern "C" void checkItemAction__9daAlink_cFv();
extern "C" bool checkRAction__9daAlink_cFv();
extern "C" void checkMoveDoAction__9daAlink_cFv();
extern "C" void checkSideRollAction__9daAlink_cFi();
extern "C" void checkNoUpperAnime__9daAlink_cCFv();
extern "C" void checkOneHandItemEquipAnime__9daAlink_cCFv();
extern "C" void checkItemEquipAnime__9daAlink_cCFv();
extern "C" void checkEquipAnime__9daAlink_cCFv();
extern "C" void checkWindDashAnime__9daAlink_cCFv();
extern "C" void checkSwordTwirlAnime__9daAlink_cCFv();
extern "C" void swordEquip__9daAlink_cFi();
extern "C" void swordUnequip__9daAlink_cFv();
extern "C" void itemEquip__9daAlink_cFUs();
extern "C" void itemUnequip__9daAlink_cFUsf();
extern "C" void checkFastUnequip__9daAlink_cFv();
extern "C" void allUnequip__9daAlink_cFi();
extern "C" void checkItemChangeFromButton__9daAlink_cFv();
extern "C" void checkNextActionFromButton__9daAlink_cFv();
extern "C" void checkGroundSpecialMode__9daAlink_cFv();
extern "C" void commonCheckNextAction__9daAlink_cFi();
extern "C" void checkNextAction__9daAlink_cFi();
extern "C" void commonChangeItem__9daAlink_cFv();
extern "C" void setItemAction__9daAlink_cFv();
extern "C" void checkNextActionFromCrouch__9daAlink_cFi();
extern "C" void checkUpperReadyThrowAnime__9daAlink_cCFv();
extern "C" void getBodyAngleXBasePos__9daAlink_cFP4cXyz();
extern "C" void getBodyAngleXAtnActor__9daAlink_cFi();
extern "C" void setBodyAngleXReadyAnime__9daAlink_cFi();
extern "C" void setMagicArmorBrk__9daAlink_cFi();
extern "C" void checkMagicArmorHeavy__9daAlink_cCFv();
extern "C" void checkBootsOrArmorHeavy__9daAlink_cCFv();
extern "C" void checkHeavyStateOn__9daAlink_cFii();
extern "C" void setOutPower__9daAlink_cFfsi();
extern "C" void initGravity__9daAlink_cFv();
extern "C" void setSpecialGravity__9daAlink_cFffi();
extern "C" void transAnimeProc__9daAlink_cFP4cXyzff();
extern "C" void setFootSpeed__9daAlink_cFv();
extern "C" void posMove__9daAlink_cFv();
extern "C" void autoGroundHit__9daAlink_cFv();
extern "C" void startPeepChange__9daAlink_cFv();
extern "C" void setLastSceneDamage__9daAlink_cFiPUl();
extern "C" void setLastSceneMode__9daAlink_cFPUl();
extern "C" void startRestartRoom__9daAlink_cFUliii();
extern "C" void checkCoachGuardGame__9daAlink_cFv();
extern "C" void checkRoofRestart__9daAlink_cFv();
extern "C" void checkRestartRoom__9daAlink_cFv();
extern "C" void getSceneExitMoveAngle__9daAlink_cFv();
extern "C" void checkSceneChange__9daAlink_cFi();
extern "C" void voiceStart__9daAlink_cFUl();
extern "C" void voiceStartLevel__9daAlink_cFUl();
extern "C" void seStartSwordCut__9daAlink_cFUl();
extern "C" void seStartOnlyReverb__9daAlink_cFUl();
extern "C" void seStartOnlyReverbLevel__9daAlink_cFUl();
extern "C" void seStartMapInfo__9daAlink_cFUl();
extern "C" void seStartMapInfoLevel__9daAlink_cFUl();
extern "C" void setBasAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDER();
extern "C" void initBasAnime__9daAlink_cFv();
extern "C" void resetBasAnime__9daAlink_cFv();
extern "C" void checkSightLine__9daAlink_cFfP4cXyz();
extern "C" void setMetamorphoseModel__9daAlink_cFi();
extern "C" void keepItemData__9daAlink_cFv();
extern "C" void returnKeepItemData__9daAlink_cFv();
extern "C" void setItemModel__9daAlink_cFv();
extern "C" void setItemActor__9daAlink_cFv();
extern "C" void makeItemType__9daAlink_cFv();
extern "C" void checkZoraWearAbility__9daAlink_cCFv();
extern "C" void checkMagicArmorWearAbility__9daAlink_cCFv();
extern "C" void loadAramBmd__9daAlink_cFUsUl();
extern "C" void loadAram__9daAlink_cFUsUl();
extern "C" void loadAramItemBrk__9daAlink_cFUsP8J3DModel();
extern "C" void loadAramItemBtk__9daAlink_cFUsP8J3DModel();
extern "C" void loadAramItemBtp__9daAlink_cFUsP8J3DModel();
extern "C" void changeItemBck__9daAlink_cFUsf();
extern "C" void checkGroupItem__9daAlink_cCFii();
extern "C" void checkSetItemTrigger__9daAlink_cFi();
extern "C" void checkItemSetButton__9daAlink_cFi();
extern "C" void checkField__9daAlink_cFv();
extern "C" void checkBossRoom__9daAlink_cFv();
extern "C" void checkDungeon__9daAlink_cFv();
extern "C" void checkCastleTown__9daAlink_cFv();
extern "C" void checkCloudSea__9daAlink_cFv();
extern "C" void checkRoomOnly__9daAlink_cFv();
extern "C" void checkLv2DungeonRoomSpecial__9daAlink_cFv();
extern "C" void checkRoomSpecial__9daAlink_cFv();
extern "C" void checkRoom__9daAlink_cFv();
extern "C" void checkNotBattleStage__9daAlink_cFv();
extern "C" void checkNotHeavyBootsStage__9daAlink_cFv();
extern "C" void checkNotAutoJumpStage__9daAlink_cFv();
extern "C" void checkCastleTownUseItem__9daAlink_cFUs();
extern "C" void changeItemTriggerKeepProc__9daAlink_cFUci();
extern "C" void checkNewItemChange__9daAlink_cFUc();
extern "C" void deleteEquipItem__9daAlink_cFii();
extern "C" void setLight__9daAlink_cFv();
extern "C" void setFrontRollCrashShock__9daAlink_cFUc();
extern "C" void getModelJointMtx__9daAlink_cFUs();
extern "C" void onFrollCrashFlg__9daAlink_cFUci();
extern "C" void changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE();
extern "C" void commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC();
extern "C" void commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC();
extern "C" void procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c();
extern "C" void procPreActionUnequip__9daAlink_cFv();
extern "C" void procServiceWaitInit__9daAlink_cFv();
extern "C" void procServiceWait__9daAlink_cFv();
extern "C" void procTiredWaitInit__9daAlink_cFv();
extern "C" void procTiredWait__9daAlink_cFv();
extern "C" void procWaitInit__9daAlink_cFv();
extern "C" void procWait__9daAlink_cFv();
extern "C" void procMoveInit__9daAlink_cFv();
extern "C" void procMove__9daAlink_cFv();
extern "C" void procAtnMoveInit__9daAlink_cFv();
extern "C" void procAtnMove__9daAlink_cFv();
extern "C" void procAtnActorWaitInit__9daAlink_cFv();
extern "C" void procAtnActorWait__9daAlink_cFv();
extern "C" void procAtnActorMoveInit__9daAlink_cFv();
extern "C" void procAtnActorMove__9daAlink_cFv();
extern "C" void procWaitTurnInit__9daAlink_cFv();
extern "C" void procWaitTurn__9daAlink_cFv();
extern "C" void procMoveTurnInit__9daAlink_cFi();
extern "C" void procMoveTurn__9daAlink_cFv();
extern "C" void procSideStepInit__9daAlink_cFi();
extern "C" void procSideStep__9daAlink_cFv();
extern "C" void procSideStepLandInit__9daAlink_cFv();
extern "C" void procSideStepLand__9daAlink_cFv();
extern "C" void procSlideInit__9daAlink_cFs();
extern "C" void procSlide__9daAlink_cFv();
extern "C" void procSlideLandInit__9daAlink_cFi();
extern "C" void procSlideLand__9daAlink_cFv();
extern "C" void procFrontRollInit__9daAlink_cFv();
extern "C" void procFrontRoll__9daAlink_cFv();
extern "C" void procFrontRollCrashInit__9daAlink_cFv();
extern "C" void procFrontRollCrash__9daAlink_cFv();
extern "C" void procFrontRollSuccessInit__9daAlink_cFv();
extern "C" void procFrontRollSuccess__9daAlink_cFv();
extern "C" void procSideRollInit__9daAlink_cFi();
extern "C" void procSideRoll__9daAlink_cFv();
extern "C" void backJumpSpeedDec__9daAlink_cFv();
extern "C" void procBackJumpInit__9daAlink_cFi();
extern "C" void procBackJump__9daAlink_cFv();
extern "C" void procBackJumpLandInit__9daAlink_cFi();
extern "C" void procBackJumpLand__9daAlink_cFv();
extern "C" void procSlipInit__9daAlink_cFv();
extern "C" void procSlip__9daAlink_cFv();
extern "C" void procAutoJumpInit__9daAlink_cFi();
extern "C" void procAutoJump__9daAlink_cFv();
extern "C" void procDiveJumpInit__9daAlink_cFv();
extern "C" void procDiveJump__9daAlink_cFv();
extern "C" void procRollJumpInit__9daAlink_cFv();
extern "C" void procRollJump__9daAlink_cFv();
extern "C" void procFallInit__9daAlink_cFif();
extern "C" void procFall__9daAlink_cFv();
extern "C" void procLandInit__9daAlink_cFf();
extern "C" void procLand__9daAlink_cFv();
extern "C" void procSmallJumpInit__9daAlink_cFi();
extern "C" void procSmallJump__9daAlink_cFv();
extern "C" void procStepMoveInit__9daAlink_cFv();
extern "C" void procStepMove__9daAlink_cFv();
extern "C" void procCrouchInit__9daAlink_cFv();
extern "C" void procCrouch__9daAlink_cFv();
extern "C" void procCoMetamorphoseInit__9daAlink_cFv();
extern "C" void procCoMetamorphose__9daAlink_cFv();
extern "C" void procCoMetamorphoseOnlyInit__9daAlink_cFv();
extern "C" void procCoMetamorphoseOnly__9daAlink_cFv();
extern "C" void procFloorDownReboundInit__9daAlink_cFv();
extern "C" void procFloorDownRebound__9daAlink_cFv();
extern "C" void procGoronRideWaitInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procGoronRideWait__9daAlink_cFv();
extern "C" void execute__9daAlink_cFv();
extern "C" static void daAlink_Execute__FP9daAlink_c();
extern "C" void setDrawHand__9daAlink_cFv();
extern "C" void checkSwordDraw__9daAlink_cFv();
extern "C" void checkShieldDraw__9daAlink_cFv();
extern "C" void checkItemDraw__9daAlink_cFv();
extern "C" void initShadowScaleLight__9daAlink_cFv();
extern "C" void moveShadowScaleLight__9daAlink_cFv();
extern "C" void shadowDraw__9daAlink_cFv();
extern "C" void modelCalc__9daAlink_cFP8J3DModel();
extern "C" void basicModelDraw__9daAlink_cFP8J3DModel();
extern "C" void modelDraw__9daAlink_cFP8J3DModeli();
extern "C" void setWaterDropColor__9daAlink_cFPC13J3DGXColorS10();
extern "C" void initTevCustomColor__9daAlink_cFv();
extern "C" void draw__9daAlink_cFv();
extern "C" static void daAlink_Draw__FP9daAlink_c();
extern "C" void __dt__9daAlink_cFv();
extern "C" static void daAlink_Delete__FP9daAlink_c();
extern "C" void checkNoSubjectModeCamera__9daAlink_cFv();
extern "C" void acceptSubjectModeChange__9daAlink_cFv();
extern "C" void checkSubjectAction__9daAlink_cFv();
extern "C" void checkBodyAngleX__9daAlink_cFs();
extern "C" void setBodyAngleToCamera__9daAlink_cFv();
extern "C" void setSubjectMode__9daAlink_cFv();
extern "C" void subjectCancelTrigger__9daAlink_cFv();
extern "C" void checkSubjectEnd__9daAlink_cFi();
extern "C" void searchPeepObj__9daAlink_cFP10fopAc_ac_cPv();
extern "C" static void daAlink_searchPeepObj__FP10fopAc_ac_cPv();
extern "C" void procCoSubjectivityInit__9daAlink_cFv();
extern "C" void procCoSubjectivity__9daAlink_cFv();
extern "C" void procCoSwimSubjectivityInit__9daAlink_cFv();
extern "C" void procCoSwimSubjectivity__9daAlink_cFv();
extern "C" void procCoPeepSubjectivityInit__9daAlink_cFv();
extern "C" void procCoPeepSubjectivity__9daAlink_cFv();
extern "C" void checkBoardRide__9daAlink_cCFv();
extern "C" void checkCanoeRide__9daAlink_cCFv();
extern "C" void checkHorseRide__9daAlink_cCFv();
extern "C" void getLeftItemMatrix__9daAlink_cFv();
extern "C" void checkBoarRide__9daAlink_cCFv();
extern "C" void checkSpinnerRide__9daAlink_cCFv();
extern "C" void getLeftHandMatrix__9daAlink_cFv();
extern "C" void getRightHandMatrix__9daAlink_cFv();
extern "C" void onSceneChangeArea__9daAlink_cFUcUcP10fopAc_ac_c();
extern "C" void getRightItemMatrix__9daAlink_cFv();
extern "C" void checkPlayerNoDraw__9daAlink_cFv();
extern "C" void __ct__9daAlink_cFv();
extern "C" void __dt__Q29daAlink_c14firePointEff_cFv();
extern "C" void __ct__Q29daAlink_c14firePointEff_cFv();
extern "C" void __dt__15LIGHT_INFLUENCEFv();
extern "C" void __dt__18daAlink_footData_cFv();
extern "C" void __ct__18daAlink_footData_cFv();
extern "C" void __dt__29dAlink_bottleWaterPcallBack_cFv();
extern "C" void __dt__14daAlink_blur_cFv();
extern "C" void __dt__15daAlink_sight_cFv();
extern "C" void __dt__20daAlink_lockCursor_cFv();
extern "C" void checkRideOn__9daAlink_cCFv();
extern "C" static void dComIfGp_att_getCatghTarget__Fv();
extern "C" static void mDoAud_setLinkHp__Fll();
extern "C" static void dComIfGs_getLife__Fv();
extern "C" static void dComIfGp_getRStatus__Fv();
extern "C" void checkAttentionLock__9daAlink_cFv();
extern "C" static void dComIfGp_setItemLifeCount__FfUc();
extern "C" static void cMtx_multVec__FPA4_CfPC3VecP3Vec();
extern "C" void getAnmMtx__8J3DModelFi();
extern "C" void setBaseTRMtx__8J3DModelFPA4_f();
extern "C" void checkFmChainGrabAnime__9daAlink_cCFv();
extern "C" void checkSmallUpperGuardAnime__9daAlink_cCFv();
extern "C" static void dComIfGp_evmng_startCheck__FPCc();
extern "C" static void mDoAud_setLinkGroupInfo__FUc();
extern "C" void getAnm__25mDoExt_MtxCalcAnmBlendTblFi();
extern "C" void ChkRoofHit__9dBgS_AcchCFv();
extern "C" void ClrGroundHit__9dBgS_AcchFv();
extern "C" void checkReinRide__9daAlink_cCFv();
extern "C" void checkWolfEnemyThrowAnime__9daAlink_cCFv();
extern "C" void checkSpecialDemoMode__9daAlink_cCFv();
extern "C" void setMidnaTalkStatus__9daAlink_cFUc();
extern "C" void set3DStatus__9daAlink_cFUcUc();
extern "C" void offSetFlg__16daAlink_matAnm_cFv();
extern "C" void checkModeFlg__9daAlink_cCFUl();
extern "C" void getShieldChangeWaitTimer__9daAlink_cCFv();
extern "C" void getClothesChangeWaitTimer__9daAlink_cCFv();
extern "C" void checkHorseStart__9daAlink_cFv();
extern "C" void checkCutTurnCharge__9daAlink_cCFv();
extern "C" void checkAcceptDungeonWarpAlink__9daAlink_cFi();
extern "C" void getSpinnerActor__9daAlink_cFv();
extern "C" void getSumouCounter__9daAlink_cCFv();
extern "C" void checkSumouWithstand__9daAlink_cCFv();
extern "C" void setMidnaMsgNum__9daAlink_cFP10fopAc_ac_cUs();
extern "C" void getModelMtx__9daAlink_cFv();
extern "C" void getInvMtx__9daAlink_cFv();
extern "C" void getLinkBackBone1Matrix__9daAlink_cFv();
extern "C" void getWolfMouthMatrix__9daAlink_cFv();
extern "C" void getWolfBackbone2Matrix__9daAlink_cFv();
extern "C" void getBottleMtx__9daAlink_cFv();
extern "C" void getHeadMtx__9daAlink_cFv();
extern "C" void getGroundY__9daAlink_cFv();
extern "C" void getBaseAnimeFrameRate__9daAlink_cCFv();
extern "C" void getAtnActorID__9daAlink_cCFv();
extern "C" void getItemID__9daAlink_cCFv();
extern "C" void getGrabActorID__9daAlink_cCFv();
extern "C" void setForcePutPos__9daAlink_cFRC4cXyz();
extern "C" void checkPlayerFly__9daAlink_cCFv();
extern "C" void checkFrontRoll__9daAlink_cCFv();
extern "C" void checkWolfDash__9daAlink_cCFv();
extern "C" void checkAutoJump__9daAlink_cCFv();
extern "C" void checkSideStep__9daAlink_cCFv();
extern "C" void checkWolfTriggerJump__9daAlink_cCFv();
extern "C" void checkGuardBreakMode__9daAlink_cCFv();
extern "C" void checkLv3Slide__9daAlink_cCFv();
extern "C" void checkWolfHowlDemoMode__9daAlink_cCFv();
extern "C" void checkElecDamage__9daAlink_cCFv();
extern "C" void checkEmptyBottleSwing__9daAlink_cCFv();
extern "C" void checkBottleSwingMode__9daAlink_cCFv();
extern "C" void checkHawkWait__9daAlink_cCFv();
extern "C" void checkGoatThrow__9daAlink_cCFv();
extern "C" void checkGoatThrowAfter__9daAlink_cCFv();
extern "C" void checkWolfTagLockJump__9daAlink_cCFv();
extern "C" void checkWolfTagLockJumpLand__9daAlink_cCFv();
extern "C" void checkWolfRopeHang__9daAlink_cCFv();
extern "C" void checkRollJump__9daAlink_cCFv();
extern "C" void checkGoronRideWait__9daAlink_cCFv();
extern "C" void checkWolfChain__9daAlink_cCFv();
extern "C" void checkWolfWait__9daAlink_cCFv();
extern "C" void checkWolfJumpAttack__9daAlink_cCFv();
extern "C" void checkWolfRSit__9daAlink_cCFv();
extern "C" void checkBottleDrinkEnd__9daAlink_cCFv();
extern "C" void checkWolfDig__9daAlink_cCFv();
extern "C" void checkCutCharge__9daAlink_cCFv();
extern "C" void checkCutLargeJumpCharge__9daAlink_cCFv();
extern "C" void checkComboCutTurn__9daAlink_cCFv();
extern "C" void checkClimbMove__9daAlink_cCFv();
extern "C" void checkGrassWhistle__9daAlink_cCFv();
extern "C" void checkBoarRun__9daAlink_cCFv();
extern "C" void checkHorseRideNotReady__9daAlink_cCFv();
extern "C" void getSearchBallScale__9daAlink_cCFv();
extern "C" void checkFastShotTime__9daAlink_cFv();
extern "C" void checkCutJumpCancelTurn__9daAlink_cCFv();
extern "C" void checkSingleBoarBattleSecondBowReady__9daAlink_cCFv();
extern "C" void cancelDungeonWarpReadyNeck__9daAlink_cFv();
extern "C" void onSceneChangeAreaJump__9daAlink_cFUcUcP10fopAc_ac_c();
extern "C" void onSceneChangeDead__9daAlink_cFUci();
extern "C" void checkNoEquipItem__9daAlink_cCFv();
extern "C" void getBoardCutTurnOffsetAngleY__9daAlink_cCFv();
extern "C" void getMagneBootsTopVec__9daAlink_cFv();
extern "C" void setCargoCarry__9daAlink_cFP10fopAc_ac_c();
extern "C" void setGoronSideMove__9daAlink_cFP10fopAc_ac_c();
extern "C" void setSumouReady__9daAlink_cFP10fopAc_ac_c();
extern "C" void setSumouPushBackDirection__9daAlink_cFs();
extern "C" void setSumouLoseHeadUp__9daAlink_cFv();
extern "C" void checkPriActorOwn__9daAlink_cCFPC10fopAc_ac_c();
extern "C" void checkWolfEnemyBiteAllOwn__9daAlink_cCFPC10fopAc_ac_c();
extern "C" void setWolfEnemyHangBiteAngle__9daAlink_cFs();
extern "C" void setSumouGraspCancelCount__9daAlink_cFi();
extern "C" void checkItemSwordEquip__9daAlink_cCFv();
extern "C" void getSinkShapeOffset__9daAlink_cCFv();
extern "C" void checkSinkDead__9daAlink_cCFv();
extern "C" void checkCutJumpMode__9daAlink_cCFv();
extern "C" void getGiantPuzzleAimAngle__9daAlink_cCFv();
extern "C" void getSwordChangeWaitTimer__9daAlink_cCFv();
extern "C" void checkMetamorphose__9daAlink_cCFv();
extern "C" void checkWolfDownAttackPullOut__9daAlink_cCFv();
extern "C" void getMidnaAtnPos__9daAlink_cCFv();
extern "C" void checkCopyRodEquip__9daAlink_cCFv();
extern "C" void checkCanoeFishingGetLeft__9daAlink_cCFv();
extern "C" void checkCanoeFishingGetRight__9daAlink_cCFv();
extern "C" void checkBeeChildDrink__9daAlink_cCFv();
extern "C" void getWolfHowlMgrP__9daAlink_cFv();
extern "C" void checkWolfHowlSuccessAnime__9daAlink_cCFv();
extern "C" void checkOctaIealHang__9daAlink_cCFv();
extern "C" void cancelOctaIealHang__9daAlink_cFv();
extern "C" void cancelDragonHangBackJump__9daAlink_cFv();
extern "C" void setOctaIealWildHang__9daAlink_cFv();
extern "C" void checkDragonHangRide__9daAlink_cCFv();
extern "C" void playerStartCollisionSE__9daAlink_cFUlUl();
extern "C" void __dt__16daAlink_matAnm_cFv();
extern "C" void __dt__12dBgS_ObjAcchFv();
extern "C" void __dt__Q29daAlink_c14hsChainShape_cFv();
extern "C" static void daAlink_searchNightStalker__FP10fopAc_ac_cPv();
extern "C" void checkLightSwordMtrl__9daAlink_cFv();
extern "C" void checkSwordEquipAnime__9daAlink_cCFv();
extern "C" void checkCutDashAnime__9daAlink_cCFv();
extern "C" void checkCutDashEnemyHit__9daAlink_cFR12dCcD_GObjInf();
extern "C" void getSwordAtType__9daAlink_cFv();
extern "C" void initCutTurnAt__9daAlink_cFfi();
extern "C" void checkCutFinishJumpUp__9daAlink_cFv();
extern "C" void changeCutFast__9daAlink_cFv();
extern "C" void checkCutFastReady__9daAlink_cFv();
extern "C" void setSwordModel__9daAlink_cFv();
extern "C" void offSwordModel__9daAlink_cFv();
extern "C" void checkCutTypeNoBlur__9daAlink_cCFv();
extern "C" void checkCutTurnInput__9daAlink_cCFv();
extern "C" void getCutTurnDirection__9daAlink_cCFv();
extern "C" void resetCombo__9daAlink_cFi();
extern "C" void checkComboCnt__9daAlink_cFv();
extern "C" void setCutType__9daAlink_cFUc();
extern "C" void setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff();
extern "C" void setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff();
extern "C" void notSwordHitVibActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf();
extern "C" void checkAtShieldHit__9daAlink_cFR12dCcD_GObjInf();
extern "C" void checkCutReverseAt__9daAlink_cFP12dCcD_GObjInf();
extern "C" void changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void setCutDash__9daAlink_cFii();
extern "C" void checkForceSwordSwing__9daAlink_cFv();
extern "C" void setComboReserb__9daAlink_cFv();
extern "C" void checkComboReserb__9daAlink_cFv();
extern "C" void commonCutAction__9daAlink_cFv();
extern "C" void setSwordVoiceSe__9daAlink_cFUl();
extern "C" void setSwordChargeVoiceSe__9daAlink_cFv();
extern "C" void setSwordComboVoice__9daAlink_cFv();
extern "C" void checkCutTurnInputTrigger__9daAlink_cFv();
extern "C" void checkCutAction__9daAlink_cFv();
extern "C" void checkCutTurnCharge__9daAlink_cFv();
extern "C" void getCutDirection__9daAlink_cFv();
extern "C" void checkCutCancelNextMode__9daAlink_cFi();
extern "C" void checkDoCutAction__9daAlink_cFv();
extern "C" void checkCutBackState__9daAlink_cFv();
extern "C" void checkCutHeadState__9daAlink_cFv();
extern "C" void checkDownAttackState__9daAlink_cFv();
extern "C" void checkCutLargeTurnState__9daAlink_cCFv();
extern "C" void cancelCutCharge__9daAlink_cFv();
extern "C" void initCutAtnActorSearch__9daAlink_cFv();
extern "C" void checkCutAtnActorChange__9daAlink_cFv();
extern "C" void setCutJumpSpeed__9daAlink_cFi();
extern "C" void procCutNormalInit__9daAlink_cFi();
extern "C" void procCutNormal__9daAlink_cFv();
extern "C" void procCutFinishInit__9daAlink_cFi();
extern "C" void procCutFinish__9daAlink_cFv();
extern "C" void procCutFinishJumpUpInit__9daAlink_cFv();
extern "C" void procCutFinishJumpUp__9daAlink_cFv();
extern "C" void procCutFinishJumpUpLandInit__9daAlink_cFv();
extern "C" void procCutFinishJumpUpLand__9daAlink_cFv();
extern "C" void procCutReverseInit__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void procCutReverse__9daAlink_cFv();
extern "C" void procCutJumpInit__9daAlink_cFi();
extern "C" void procCutJump__9daAlink_cFv();
extern "C" void procCutJumpLandInit__9daAlink_cFi();
extern "C" void procCutJumpLand__9daAlink_cFv();
extern "C" void procCutTurnInit__9daAlink_cFii();
extern "C" void procCutTurn__9daAlink_cFv();
extern "C" void procCutTurnChargeInit__9daAlink_cFv();
extern "C" void procCutTurnCharge__9daAlink_cFv();
extern "C" void procCutTurnMoveInit__9daAlink_cFi();
extern "C" void procCutTurnMove__9daAlink_cFv();
extern "C" void procCutDownInit__9daAlink_cFv();
extern "C" void procCutDown__9daAlink_cFv();
extern "C" void procCutDownLandInit__9daAlink_cFP13fopEn_enemy_c();
extern "C" void procCutDownLand__9daAlink_cFv();
extern "C" void procCutHeadInit__9daAlink_cFv();
extern "C" void procCutHead__9daAlink_cFv();
extern "C" void procCutHeadLandInit__9daAlink_cFv();
extern "C" void procCutHeadLand__9daAlink_cFv();
extern "C" void procCutLargeJumpChargeInit__9daAlink_cFv();
extern "C" void procCutLargeJumpCharge__9daAlink_cFv();
extern "C" void procCutLargeJumpInit__9daAlink_cFv();
extern "C" void procCutLargeJump__9daAlink_cFv();
extern "C" void procCutLargeJumpLandInit__9daAlink_cFi();
extern "C" void procCutLargeJumpLand__9daAlink_cFv();
extern "C" void procSwordUnequipSpInit__9daAlink_cFv();
extern "C" void procSwordUnequipSp__9daAlink_cFv();
extern "C" void getFreezeR__9daAlink_cCFv();
extern "C" void getFreezeG__9daAlink_cCFv();
extern "C" void getFreezeB__9daAlink_cCFv();
extern "C" void checkMiddleBossGoronRoom__9daAlink_cFv();
extern "C" void setDkCaught__9daAlink_cFP10fopAc_ac_c();
extern "C" void freezeTimerDamage__9daAlink_cFv();
extern "C" void onPressedDamage__9daAlink_cFRC4cXyzs();
extern "C" void checkNoLandDamageSlidePolygon__9daAlink_cFv();
extern "C" void checkCutLandDamage__9daAlink_cFv();
extern "C" void checkCaughtEscapeCutTurn__9daAlink_cFv();
extern "C" void setThrowDamage__9daAlink_cFsffiii();
extern "C" void damageMagnification__9daAlink_cFii();
extern "C" void setDamagePoint__9daAlink_cFiiii();
extern "C" void setDamagePointNormal__9daAlink_cFi();
extern "C" void setLandDamagePoint__9daAlink_cFi();
extern "C" void getDamageVec__9daAlink_cFP12dCcD_GObjInf();
extern "C" void setDashDamage__9daAlink_cFv();
extern "C" void checkIcePolygonDamage__9daAlink_cFP13cBgS_PolyInfo();
extern "C" void checkMagicArmorNoDamage__9daAlink_cFv();
extern "C" void checkPolyDamage__9daAlink_cFv();
extern "C" void checkElecReturnDamage__9daAlink_cFR12dCcD_GObjInfPP10fopAc_ac_c();
extern "C" void damageTimerCount__9daAlink_cFv();
extern "C" void checkHugeAttack__9daAlink_cCFi();
extern "C" void checkLargeAttack__9daAlink_cCFi();
extern "C" void checkDamageAction__9daAlink_cFv();
extern "C" void procDamageInit__9daAlink_cFP12dCcD_GObjInfi();
extern "C" void procDamage__9daAlink_cFv();
extern "C" void procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi();
extern "C" void procCoLargeDamage__9daAlink_cFv();
extern "C" void procLargeDamageUpInit__9daAlink_cFiiss();
extern "C" void procLargeDamageUp__9daAlink_cFv();
extern "C" void procCoLargeDamageWallInit__9daAlink_cFiiss();
extern "C" void procCoLargeDamageWall__9daAlink_cFv();
extern "C" void procCoPolyDamageInit__9daAlink_cFv();
extern "C" void procCoPolyDamage__9daAlink_cFv();
extern "C" void procLandDamageInit__9daAlink_cFi();
extern "C" void procLandDamage__9daAlink_cFv();
extern "C" void procCoElecDamageInit__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfi();
extern "C" void procCoElecDamage__9daAlink_cFv();
extern "C" void procStEscapeInit__9daAlink_cFv();
extern "C" void procStEscape__9daAlink_cFv();
extern "C" void procDkCaughtInit__9daAlink_cFUi();
extern "C" void procDkCaught__9daAlink_cFv();
extern "C" void setScreamWaitAnime__9daAlink_cFv();
extern "C" void procScreamWaitInit__9daAlink_cFv();
extern "C" void procScreamWait__9daAlink_cFv();
extern "C" void procCoSandWallHitInit__9daAlink_cFv();
extern "C" void procCoSandWallHit__9daAlink_cFv();
extern "C" void procCoLavaReturnInit__9daAlink_cFi();
extern "C" void procCoLavaReturn__9daAlink_cFv();
extern "C" void procCoSwimFreezeReturnInit__9daAlink_cFv();
extern "C" void procCoSwimFreezeReturn__9daAlink_cFv();
extern "C" void checkEnemyGroup__9daAlink_cFP10fopAc_ac_c();
extern "C" void checkSpecialNpc__9daAlink_cFP10fopAc_ac_c();
extern "C" void checkShieldAttackEmphasys__9daAlink_cFv();
extern "C" void checkGuardActionChange__9daAlink_cFv();
extern "C" void stickArrowIncrement__9daAlink_cFi();
extern "C" void setArrowShieldActor__9daAlink_cFP10fopAc_ac_ci();
extern "C" void checkWoodShieldEquipNotIronBall__9daAlink_cCFv();
extern "C" void getArrowShieldOffset__9daAlink_cCFPC4cXyzPC5csXyzP4cXyzP4cXyz();
extern "C" void setArrowShieldPos__9daAlink_cCFP4cXyzP5csXyzPC4cXyzPC4cXyz();
extern "C" void checkUpperGuardAnime__9daAlink_cCFv();
extern "C" void checkPlayerGuard__9daAlink_cCFv();
extern "C" void checkPlayerGuardAndAttack__9daAlink_cCFv();
extern "C" void checkGuardAccept__9daAlink_cFv();
extern "C" void setUpperGuardAnime__9daAlink_cFf();
extern "C" void setShieldGuard__9daAlink_cFv();
extern "C" void setGuardSe__9daAlink_cFP12dCcD_GObjInf();
extern "C" void setSmallGuard__9daAlink_cFP12dCcD_GObjInf();
extern "C" void procGuardSlipInit__9daAlink_cFiP12dCcD_GObjInf();
extern "C" void procGuardSlip__9daAlink_cFv();
extern "C" void procGuardAttackInit__9daAlink_cFv();
extern "C" void procGuardAttack__9daAlink_cFv();
extern "C" void procGuardBreakInit__9daAlink_cFv();
extern "C" void procGuardBreak__9daAlink_cFv();
extern "C" void procTurnMoveInit__9daAlink_cFi();
extern "C" void procTurnMove__9daAlink_cFv();
extern "C" void getArrowFlyData__9daAlink_cCFPfPfi();
extern "C" void getArrowIncAtR__9daAlink_cCFv();
extern "C" void getBombArrowFlyExplodeTime__9daAlink_cCFv();
extern "C" void getArrowIncAtMaxStart__9daAlink_cCFv();
extern "C" void getArrowIncAtMax__9daAlink_cCFv();
extern "C" void checkBowAndSlingItem__9daAlink_cFi();
extern "C" void setSlingModel__9daAlink_cFv();
extern "C" void checkBowCameraArrowPosP__9daAlink_cFPsPs();
extern "C" void checkArrowChargeEnd__9daAlink_cCFv();
extern "C" void checkBowReadyAnime__9daAlink_cCFv();
extern "C" void checkBowAnime__9daAlink_cCFv();
extern "C" void makeArrow__9daAlink_cFv();
extern "C" void deleteArrow__9daAlink_cFv();
extern "C" void setBowOrSlingStatus__9daAlink_cFv();
extern "C" void changeArrowType__9daAlink_cFv();
extern "C" void cancelBowMoveRideNotAtn__9daAlink_cFv();
extern "C" void cancelBowMove__9daAlink_cFv();
extern "C" void setBowReadyAnime__9daAlink_cFv();
extern "C" void setBowReloadAnime__9daAlink_cFv();
extern "C" void checkUpperItemActionBow__9daAlink_cFv();
extern "C" void checkUpperItemActionBowFly__9daAlink_cFv();
extern "C" void checkNextActionBow__9daAlink_cFv();
extern "C" void setBowModel__9daAlink_cFv();
extern "C" void checkBowGrabLeftHand__9daAlink_cCFv();
extern "C" void setBowHangAnime__9daAlink_cFv();
extern "C" void setBowNormalAnime__9daAlink_cFv();
extern "C" void setBowSight__9daAlink_cFv();
extern "C" void procBowSubjectInit__9daAlink_cFv();
extern "C" void procBowSubject__9daAlink_cFv();
extern "C" void procBowMoveInit__9daAlink_cFv();
extern "C" void procBowMove__9daAlink_cFv();
extern "C" void checkBoomerangLockAccept__9daAlink_cFv();
extern "C" void getBoomSpeed__9daAlink_cFv();
extern "C" void getBoomCatchSpeed__9daAlink_cCFv();
extern "C" void getBoomFlyMax__9daAlink_cCFv();
extern "C" void getBoomLockMax__9daAlink_cFv();
extern "C" void getBoomBgThroughTime__9daAlink_cCFv();
extern "C" void checkBossBabaRoom__9daAlink_cFv();
extern "C" void cancelBoomerangLock__9daAlink_cFP10fopAc_ac_c();
extern "C" void getBoomerangActor__9daAlink_cFv();
extern "C" void checkBoomerangChargeEnd__9daAlink_cFv();
extern "C" void checkBoomerangCarry__9daAlink_cFP10fopAc_ac_c();
extern "C" void initBoomerangUpperAnimeSpeed__9daAlink_cFi();
extern "C" void checkBoomerangAnime__9daAlink_cCFv();
extern "C" void checkBoomerangThrowAnime__9daAlink_cCFv();
extern "C" void setBoomerangReadyQuake__9daAlink_cFv();
extern "C" void setBoomerangReadyAnime__9daAlink_cFv();
extern "C" void setThrowBoomerangAnime__9daAlink_cFv();
extern "C" void setBoomerangCatchAnime__9daAlink_cFv();
extern "C" void throwBoomerang__9daAlink_cFv();
extern "C" void returnBoomerang__9daAlink_cFi();
extern "C" void checkUpperItemActionBoomerang__9daAlink_cFv();
extern "C" void checkUpperItemActionBoomerangFly__9daAlink_cFv();
extern "C" void checkNextActionBoomerang__9daAlink_cFv();
extern "C" void checkBoomerangCatchAction__9daAlink_cFv();
extern "C" void setBoomerangSight__9daAlink_cFv();
extern "C" void procBoomerangSubjectInit__9daAlink_cFv();
extern "C" void procBoomerangSubject__9daAlink_cFv();
extern "C" void procBoomerangMoveInit__9daAlink_cFv();
extern "C" void procBoomerangMove__9daAlink_cFv();
extern "C" void procBoomerangCatchInit__9daAlink_cFv();
extern "C" void procBoomerangCatch__9daAlink_cFv();
extern "C" void checkLv6BossRoom__9daAlink_cFv();
extern "C" void getCopyRodBallSpeed__9daAlink_cCFv();
extern "C" void getCopyRodBallReturnSpeed__9daAlink_cCFv();
extern "C" void getCopyRodBallDisMax__9daAlink_cCFv();
extern "C" void getCopyRodControllActor__9daAlink_cFv();
extern "C" void getCopyRodCameraActor__9daAlink_cFv();
extern "C" void initCopyRodUpperAnimeSpeed__9daAlink_cFi();
extern "C" void checkForestOldCentury__9daAlink_cFv();
extern "C" void checkCopyRodTopUse__9daAlink_cFv();
extern "C" void checkCopyRodAnime__9daAlink_cCFv();
extern "C" void setCopyRodControllAnime__9daAlink_cFv();
extern "C" void setCopyRodControllUpperSpeedRate__9daAlink_cFv();
extern "C" void setCopyRodModel__9daAlink_cFv();
extern "C" void setCopyRodReadyAnime__9daAlink_cFv();
extern "C" void throwCopyRod__9daAlink_cFv();
extern "C" void returnCopyRod__9daAlink_cFv();
extern "C" void checkUpperItemActionCopyRod__9daAlink_cFv();
extern "C" void checkUpperItemActionCopyRodFly__9daAlink_cFv();
extern "C" void checkNextActionCopyRod__9daAlink_cFv();
extern "C" void setCopyRodSight__9daAlink_cFv();
extern "C" void procCopyRodSubjectInit__9daAlink_cFv();
extern "C" void procCopyRodSubject__9daAlink_cFv();
extern "C" void procCopyRodMoveInit__9daAlink_cFv();
extern "C" void procCopyRodMove__9daAlink_cFv();
extern "C" void procCopyRodSwingInit__9daAlink_cFv();
extern "C" void procCopyRodSwing__9daAlink_cFv();
extern "C" void procCopyRodReviveInit__9daAlink_cFv();
extern "C" void procCopyRodRevive__9daAlink_cFv();
extern "C" void concatMagneBootMtx__9daAlink_cFv();
extern "C" void concatMagneBootInvMtx__9daAlink_cFv();
extern "C" void multVecMagneBootInvMtx__9daAlink_cFP4cXyz();
extern "C" void commonMagneLineCheck__9daAlink_cFP4cXyzP4cXyz();
extern "C" void checkBootsMoveAnime__9daAlink_cFi();
extern "C" void setHeavyBoots__9daAlink_cFi();
extern "C" void getMagneBootsLocalAngleY__9daAlink_cFsi();
extern "C" void setMagneBootsMtx__9daAlink_cFP13cBgS_PolyInfoi();
extern "C" void cancelMagneBootsOn__9daAlink_cFv();
extern "C" void checkMagneBootsFly__9daAlink_cFv();
extern "C" void procBootsEquipInit__9daAlink_cFv();
extern "C" void procBootsEquip__9daAlink_cFv();
extern "C" void procMagneBootsFlyInit__9daAlink_cFv();
extern "C" void procMagneBootsFly__9daAlink_cFv();
extern "C" void getBombExplodeTime__9daAlink_cCFv();
extern "C" void getBombGravity__9daAlink_cCFv();
extern "C" void getBombMaxFallSpeed__9daAlink_cCFv();
extern "C" void getBombBoundRate__9daAlink_cCFv();
extern "C" void getBombStopSpeedY__9daAlink_cCFv();
extern "C" void getBombMaxSpeedY__9daAlink_cCFv();
extern "C" void getBombEffScale__9daAlink_cCFv();
extern "C" void getBombAtR__9daAlink_cCFv();
extern "C" void getEnemyBombColorR__9daAlink_cCFv();
extern "C" void getBombWaterGravity__9daAlink_cCFv();
extern "C" void getBombWaterMaxFallSpeed__9daAlink_cCFv();
extern "C" void getBombExplodeWaterEffectLimit__9daAlink_cCFv();
extern "C" void getBombInsectLimitAngle__9daAlink_cCFv();
extern "C" static void daAlink_checkLightBallA__FP10fopAc_ac_c();
extern "C" static void daAlink_checkLightBallB__FP10fopAc_ac_c();
extern "C" static void daAlink_searchLightBall__FP10fopAc_ac_cPv();
extern "C" void checkGrabLineCheck__9daAlink_cFv();
extern "C" void setGrabCollisionOffset__9daAlink_cFffP13cBgS_PolyInfo();
extern "C" void exchangeGrabActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void setForceGrab__9daAlink_cFP10fopAc_ac_cii();
extern "C" void getGrabThrowRate__9daAlink_cFv();
extern "C" void checkGrabThrowAnime__9daAlink_cCFv();
extern "C" void checkGrabAnime__9daAlink_cCFv();
extern "C" void checkGrabAnimeAndThrow__9daAlink_cCFv();
extern "C" void checkGrabCarryActor__9daAlink_cFv();
extern "C" void checkGrabSlowMoveActor__9daAlink_cFv();
extern "C" void checkGrabHeavyActor__9daAlink_cFv();
extern "C" void checkGrabSideActor__9daAlink_cFv();
extern "C" void setGrabUpperAnime__9daAlink_cFf();
extern "C" void checkGrabRooster__9daAlink_cFv();
extern "C" void setGrabItemPos__9daAlink_cFv();
extern "C" void freeGrabItem__9daAlink_cFv();
extern "C" void setGrabUpperSpeedRate__9daAlink_cFv();
extern "C" void setCarryArmAngle__9daAlink_cFff();
extern "C" void checkGrabNotThrow__9daAlink_cFv();
extern "C" void checkNextActionGrab__9daAlink_cFv();
extern "C" void initGrabNextMode__9daAlink_cFv();
extern "C" void setGrabItemThrow__9daAlink_cFv();
extern "C" void checkUpperGrabItemThrow__9daAlink_cFf();
extern "C" void putObjLineCheck__9daAlink_cFR11dBgS_LinChkP4cXyzP10fopAc_ac_c();
extern "C" void grabLineCheck__9daAlink_cFP4cXyzP4cXyz();
extern "C" void setGrabItemActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void procGrabReadyInit__9daAlink_cFv();
extern "C" void procGrabReady__9daAlink_cFv();
extern "C" void procGrabUpInit__9daAlink_cFv();
extern "C" void procGrabUp__9daAlink_cFv();
extern "C" void procGrabMiss__9daAlink_cFv();
extern "C" void procGrabThrowInit__9daAlink_cFi();
extern "C" void procGrabThrow__9daAlink_cFv();
extern "C" void procGrabPutInit__9daAlink_cFv();
extern "C" void procGrabPut__9daAlink_cFv();
extern "C" void procGrabWaitInit__9daAlink_cFv();
extern "C" void procGrabWait__9daAlink_cFv();
extern "C" void procGrabReboundInit__9daAlink_cFi();
extern "C" void procGrabRebound__9daAlink_cFv();
extern "C" void procGrabStandInit__9daAlink_cFv();
extern "C" void procGrabStand__9daAlink_cFv();
extern "C" void checkInsectActorName__9daAlink_cFP10fopAc_ac_c();
extern "C" void procInsectCatchInit__9daAlink_cFv();
extern "C" void procInsectCatch__9daAlink_cFv();
extern "C" void procPickUpInit__9daAlink_cFv();
extern "C" void procPickUp__9daAlink_cFv();
extern "C" void procPickPutInit__9daAlink_cFi();
extern "C" void procPickPut__9daAlink_cFv();
extern "C" void checkSetChainPullAnime__9daAlink_cFs();
extern "C" void getChainStickAngleY__9daAlink_cCFs();
extern "C" void checkChainEmphasys__9daAlink_cFv();
extern "C" void searchFmChainPos__9daAlink_cFv();
extern "C" void setFmChainPosFromOut__9daAlink_cFP10fopAc_ac_cP4cXyzi();
extern "C" void checkChainBlockPushPull__9daAlink_cFv();
extern "C" void procFmChainUpInit__9daAlink_cFv();
extern "C" void procFmChainUp__9daAlink_cFv();
extern "C" void procFmChainStrongPullInit__9daAlink_cFv();
extern "C" void procFmChainStrongPull__9daAlink_cFv();
extern "C" void setWallGrabStatus__9daAlink_cFUcUc();
extern "C" void getWallGrabStatus__9daAlink_cFv();
extern "C" void wallGrabTrigger__9daAlink_cFv();
extern "C" void wallGrabButton__9daAlink_cFv();
extern "C" void setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli();
extern "C" void checkPushPullTurnBlock__9daAlink_cFv();
extern "C" void checkPullBehindWall__9daAlink_cFv();
extern "C" void offGoatStopGame__9daAlink_cFv();
extern "C" void checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void getGoatCatchDistance2__9daAlink_cFv();
extern "C" void endPushPull__9daAlink_cFv();
extern "C" void getPushPullAnimeSpeed__9daAlink_cFv();
extern "C" void procCoPushPullWaitInit__9daAlink_cFi();
extern "C" void procCoPushPullWait__9daAlink_cFv();
extern "C" void procCoPushMoveInit__9daAlink_cFii();
extern "C" void procCoPushMove__9daAlink_cFv();
extern "C" void procPullMoveInit__9daAlink_cFi();
extern "C" void procPullMove__9daAlink_cFv();
extern "C" static void daAlink_searchGoat__FP10fopAc_ac_cPv();
extern "C" void cancelGoronThrowEvent__9daAlink_cFv();
extern "C" void setGoatStopGameFail__9daAlink_cFP10fopAc_ac_c();
extern "C" void procGoatMoveInit__9daAlink_cFv();
extern "C" void procGoatMove__9daAlink_cFv();
extern "C" void procGoatCatchInit__9daAlink_cFP10fopAc_ac_cf();
extern "C" void procGoatCatch__9daAlink_cFv();
extern "C" void procGoatStrokeInit__9daAlink_cFv();
extern "C" void procGoatStroke__9daAlink_cFv();
extern "C" void procGoronMoveInit__9daAlink_cFv();
extern "C" void procGoronMove__9daAlink_cFv();
extern "C" void checkSumouVsActor__9daAlink_cFv();
extern "C" void cancelSumouMode__9daAlink_cFv();
extern "C" void sumouPunchTrigger__9daAlink_cFv();
extern "C" void setSumouPunchStatus__9daAlink_cFv();
extern "C" void procSumouReadyInit__9daAlink_cFv();
extern "C" void procSumouReady__9daAlink_cFv();
extern "C" void procSumouMoveInit__9daAlink_cFv();
extern "C" void procSumouMove__9daAlink_cFv();
extern "C" void procSumouSideMoveInit__9daAlink_cFv();
extern "C" void procSumouSideMove__9daAlink_cFv();
extern "C" void procSumouActionInit__9daAlink_cFiii();
extern "C" void procSumouAction__9daAlink_cFv();
extern "C" void procSumouStaggerInit__9daAlink_cFv();
extern "C" void procSumouStagger__9daAlink_cFv();
extern "C" void procSumouWinLoseInit__9daAlink_cFv();
extern "C" void procSumouWinLose__9daAlink_cFv();
extern "C" void procSumouShikoInit__9daAlink_cFv();
extern "C" void procSumouShiko__9daAlink_cFv();
extern "C" static void daAlink_searchBoar__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchCoach__FP10fopAc_ac_cPv();
extern "C" void checkHorseZeldaBowMode__9daAlink_cFv();
extern "C" void setHorseZeldaDamage__9daAlink_cFv();
extern "C" void checkHorseDashAccept__9daAlink_cFv();
extern "C" void checkCowGame__9daAlink_cFv();
extern "C" void getReinRideDirection__9daAlink_cFv();
extern "C" void checkReinRideBgCheck__9daAlink_cFv();
extern "C" void commonInitForceRideRein__9daAlink_cFv();
extern "C" void initForceRideBoar__9daAlink_cFv();
extern "C" void initForceRideHorse__9daAlink_cFv();
extern "C" void rideGetOff__9daAlink_cFv();
extern "C" void checkHorseNotDamageReaction__9daAlink_cCFv();
extern "C" void checkHorseWaitLashAnime__9daAlink_cCFv();
extern "C" void checkHorseReinLeftOnly__9daAlink_cCFv();
extern "C" void getReinHandType__9daAlink_cCFv();
extern "C" void checkHorseLieAnime__9daAlink_cCFv();
extern "C" void checkHorseSubjectivity__9daAlink_cCFv();
extern "C" void setHorseSwordUpAnime__9daAlink_cFv();
extern "C" void setHorseTurnUpperAnime__9daAlink_cFi();
extern "C" void checkHorseNoUpperAnime__9daAlink_cCFv();
extern "C" void getHorseReinHandPos__9daAlink_cFP4cXyzP4cXyz();
extern "C" void checkHorseNotGrab__9daAlink_cCFv();
extern "C" void setHorseStirrup__9daAlink_cFv();
extern "C" void changeBoarRunRide__9daAlink_cFv();
extern "C" void setSyncHorsePos__9daAlink_cFv();
extern "C" void setSyncBoarPos__9daAlink_cFv();
extern "C" void setSyncBoarRunPos__9daAlink_cFv();
extern "C" void setSyncRidePos__9daAlink_cFv();
extern "C" void setHorseTurnAnime__9daAlink_cFv();
extern "C" void getBaseHorseAnime__9daAlink_cFPQ29daAlink_c11daAlink_ANM();
extern "C" void checkHorseSpecialProc__9daAlink_cFv();
extern "C" void checkHorseServiceWaitAnime__9daAlink_cFv();
extern "C" void setSyncHorse__9daAlink_cFi();
extern "C" void setSyncBoar__9daAlink_cFi();
extern "C" void setSyncRide__9daAlink_cFi();
extern "C" void setBaseHorseAnimeFrame__9daAlink_cFv();
extern "C" void setBaseBoarAnime__9daAlink_cFv();
extern "C" void setBaseRideAnime__9daAlink_cFv();
extern "C" void checkHorseSwordUpSpped__9daAlink_cFv();
extern "C" void setHorseSwordUp__9daAlink_cFi();
extern "C" void setRideSubjectAngle__9daAlink_cFs();
extern "C" void setBodyAngleRideReadyAnime__9daAlink_cFv();
extern "C" void checkHorseGetOffWallCheck__9daAlink_cFP4cXyzP4cXyzs();
extern "C" void checkHorseGetOffDirection__9daAlink_cFv();
extern "C" void boarForceGetOff__9daAlink_cFv();
extern "C" void horseGetOffEnd__9daAlink_cFv();
extern "C" void checkNextActionHorse__9daAlink_cFv();
extern "C" void checkHorseGetOff__9daAlink_cFv();
extern "C" void checkHorseGetOffAndSetDoStatus__9daAlink_cFv();
extern "C" void setHorseGetOff__9daAlink_cFi();
extern "C" void procHorseRideInit__9daAlink_cFv();
extern "C" void procHorseRide__9daAlink_cFv();
extern "C" void procHorseGetOffInit__9daAlink_cFi();
extern "C" void procHorseGetOff__9daAlink_cFv();
extern "C" void procHorseWaitInit__9daAlink_cFv();
extern "C" void procHorseWait__9daAlink_cFv();
extern "C" void procHorseTurnInit__9daAlink_cFv();
extern "C" void procHorseTurn__9daAlink_cFv();
extern "C" void procHorseJumpInit__9daAlink_cFv();
extern "C" void procHorseJump__9daAlink_cFv();
extern "C" void procHorseLandInit__9daAlink_cFv();
extern "C" void procHorseLand__9daAlink_cFv();
extern "C" void procHorseSubjectivityInit__9daAlink_cFv();
extern "C" void procHorseSubjectivity__9daAlink_cFv();
extern "C" void procHorseCutInit__9daAlink_cFv();
extern "C" void procHorseCut__9daAlink_cFv();
extern "C" void procHorseCutChargeReadyInit__9daAlink_cFv();
extern "C" void procHorseCutChargeReady__9daAlink_cFv();
extern "C" void procHorseCutTurnInit__9daAlink_cFv();
extern "C" void procHorseCutTurn__9daAlink_cFv();
extern "C" void procHorseDamageInit__9daAlink_cFP12dCcD_GObjInf();
extern "C" void procHorseDamage__9daAlink_cFv();
extern "C" void procHorseBowSubjectInit__9daAlink_cFv();
extern "C" void procHorseBowSubject__9daAlink_cFv();
extern "C" void procHorseBowMoveInit__9daAlink_cFv();
extern "C" void procHorseBowMove__9daAlink_cFv();
extern "C" void procHorseGrabMoveInit__9daAlink_cFv();
extern "C" void procHorseGrabMove__9daAlink_cFv();
extern "C" void procHorseBoomerangSubjectInit__9daAlink_cFv();
extern "C" void procHorseBoomerangSubject__9daAlink_cFv();
extern "C" void procHorseBoomerangMoveInit__9daAlink_cFv();
extern "C" void procHorseBoomerangMove__9daAlink_cFv();
extern "C" void procHorseHookshotSubjectInit__9daAlink_cFv();
extern "C" void procHorseHookshotSubject__9daAlink_cFv();
extern "C" void procHorseHookshotMoveInit__9daAlink_cFv();
extern "C" void procHorseHookshotMove__9daAlink_cFv();
extern "C" void procHorseBottleDrinkInit__9daAlink_cFUs();
extern "C" void procHorseBottleDrink__9daAlink_cFv();
extern "C" void procHorseKandelaarPourInit__9daAlink_cFv();
extern "C" void procHorseKandelaarPour__9daAlink_cFv();
extern "C" void procHorseComebackInit__9daAlink_cFv();
extern "C" void procHorseComeback__9daAlink_cFv();
extern "C" void procHorseRunInit__9daAlink_cFv();
extern "C" void procHorseRun__9daAlink_cFv();
extern "C" void procHorseHangInit__9daAlink_cFP12dCcD_GObjInfi();
extern "C" void procHorseHang__9daAlink_cFv();
extern "C" void procHorseGetKeyInit__9daAlink_cFv();
extern "C" void procHorseGetKey__9daAlink_cFv();
extern "C" void procHorseLookDownInit__9daAlink_cFv();
extern "C" void procHorseLookDown__9daAlink_cFv();
extern "C" void procBoarRunInit__9daAlink_cFv();
extern "C" void procBoarRun__9daAlink_cFv();
extern "C" void getCanoeMaxSpeed__9daAlink_cCFv();
extern "C" void getCanoeBackMaxSpeed__9daAlink_cCFv();
extern "C" void getCanoeCres__9daAlink_cCFv();
extern "C" void getCanoeSpeedRate__9daAlink_cCFv();
extern "C" void getCanoeMaxRotSpeed__9daAlink_cCFv();
extern "C" void getCanoeLocalPaddleTop__9daAlink_cFv();
extern "C" static void daAlink_searchCanoe__FP10fopAc_ac_cPv();
extern "C" void checkCanoeRideTandem__9daAlink_cFv();
extern "C" void checkFishingRodAndLureItem__9daAlink_cCFv();
extern "C" void initFishingRodHand__9daAlink_cFv();
extern "C" void getCanoePaddleMatrix__9daAlink_cFv();
extern "C" void checkFishingRodGrab__9daAlink_cCFP10fopAc_ac_c();
extern "C" void checkCanoePaddleGrab__9daAlink_cCFP10fopAc_ac_c();
extern "C" void checkCanoeFishingRodGrabOrPut__9daAlink_cCFv();
extern "C" void initCanoeRide__9daAlink_cFv();
extern "C" void checkCanoeJumpRide__9daAlink_cFv();
extern "C" void setArmReelAnime__9daAlink_cFv();
extern "C" void setFishingWaitAction__9daAlink_cFv();
extern "C" void setFishGetFace__9daAlink_cFv();
extern "C" void setRideCanoeBasePos__9daAlink_cFP10fopAc_ac_c();
extern "C" void setSyncCanoePos__9daAlink_cFv();
extern "C" void canoeCommon__9daAlink_cFv();
extern "C" void checkNextActionCanoe__9daAlink_cFv();
extern "C" void procCanoeRideInit__9daAlink_cFv();
extern "C" void procCanoeRide__9daAlink_cFv();
extern "C" void procCanoeJumpRideInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procCanoeJumpRide__9daAlink_cFv();
extern "C" void procCanoeGetOffInit__9daAlink_cFv();
extern "C" void procCanoeGetOff__9daAlink_cFv();
extern "C" void procCanoeWaitInit__9daAlink_cFi();
extern "C" void procCanoeWait__9daAlink_cFv();
extern "C" void procCanoeRowInit__9daAlink_cFi();
extern "C" void procCanoeRow__9daAlink_cFv();
extern "C" void procCanoePaddleShiftInit__9daAlink_cFi();
extern "C" void procCanoePaddleShift__9daAlink_cFv();
extern "C" void procCanoePaddlePutInit__9daAlink_cFi();
extern "C" void procCanoePaddlePut__9daAlink_cFv();
extern "C" void procCanoePaddleGrabInit__9daAlink_cFv();
extern "C" void procCanoePaddleGrab__9daAlink_cFv();
extern "C" void procCanoeRodGrabInit__9daAlink_cFv();
extern "C" void procCanoeRodGrab__9daAlink_cFv();
extern "C" void procCanoeFishingWaitInit__9daAlink_cFv();
extern "C" void procCanoeFishingWait__9daAlink_cFv();
extern "C" void procCanoeFishingReelInit__9daAlink_cFv();
extern "C" void procCanoeFishingReel__9daAlink_cFv();
extern "C" void procCanoeFishingGetInit__9daAlink_cFv();
extern "C" void procCanoeFishingGet__9daAlink_cFv();
extern "C" void procCanoeSubjectivityInit__9daAlink_cFv();
extern "C" void procCanoeSubjectivity__9daAlink_cFv();
extern "C" void procCanoeBowSubjectInit__9daAlink_cFv();
extern "C" void procCanoeBowSubject__9daAlink_cFv();
extern "C" void procCanoeBowMoveInit__9daAlink_cFv();
extern "C" void procCanoeBowMove__9daAlink_cFv();
extern "C" void procCanoeGrabMoveInit__9daAlink_cFv();
extern "C" void procCanoeGrabMove__9daAlink_cFv();
extern "C" void procCanoeBoomerangSubjectInit__9daAlink_cFv();
extern "C" void procCanoeBoomerangSubject__9daAlink_cFv();
extern "C" void procCanoeBoomerangMoveInit__9daAlink_cFv();
extern "C" void procCanoeBoomerangMove__9daAlink_cFv();
extern "C" void procCanoeHookshotSubjectInit__9daAlink_cFv();
extern "C" void procCanoeHookshotSubject__9daAlink_cFv();
extern "C" void procCanoeHookshotMoveInit__9daAlink_cFv();
extern "C" void procCanoeHookshotMove__9daAlink_cFv();
extern "C" void procCanoeBottleDrinkInit__9daAlink_cFUs();
extern "C" void procCanoeBottleDrink__9daAlink_cFv();
extern "C" void procCanoeKandelaarPourInit__9daAlink_cFv();
extern "C" void procCanoeKandelaarPour__9daAlink_cFv();
extern "C" void setGroundFishingRodActor__9daAlink_cFv();
extern "C" void procFishingCastInit__9daAlink_cFv();
extern "C" void procFishingCast__9daAlink_cFv();
extern "C" void procFishingFoodInit__9daAlink_cFv();
extern "C" void procFishingFood__9daAlink_cFv();
extern "C" void getCrawlMoveAnmSpeed__9daAlink_cFv();
extern "C" void getCrawlMoveSpeed__9daAlink_cFv();
extern "C" void setCrawlMoveDirectionArrow__9daAlink_cFv();
extern "C" void changeCrawlAutoMoveProc__9daAlink_cFP4cXyz();
extern "C" void getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc();
extern "C" void crawlBgCheck__9daAlink_cFP4cXyzP4cXyzi();
extern "C" void checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs();
extern "C" void decideCrawlDoStatus__9daAlink_cFv();
extern "C" void checkNotCrawlStand__9daAlink_cFP4cXyz();
extern "C" void checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz();
extern "C" void checkCrawlInHoll__9daAlink_cFP4cXyzP4cXyzP4cXyzi();
extern "C" void setCrawlMoveHoll__9daAlink_cFv();
extern "C" void setCrawlMoveAngle__9daAlink_cFv();
extern "C" void stopHalfMoveAnime__9daAlink_cFf();
extern "C" void setCrawlAutoMoveAimPos__9daAlink_cFv();
extern "C" void procCrawlStartInit__9daAlink_cFv();
extern "C" void procCrawlStart__9daAlink_cFv();
extern "C" void procCrawlMoveInit__9daAlink_cFss();
extern "C" void procCrawlMove__9daAlink_cFv();
extern "C" void procCrawlAutoMoveInit__9daAlink_cFiP4cXyz();
extern "C" void procCrawlAutoMove__9daAlink_cFv();
extern "C" void procCrawlEndInit__9daAlink_cFiss();
extern "C" void procCrawlEnd__9daAlink_cFv();
extern "C" void getHangMoveAnmSpeed__9daAlink_cFv();
extern "C" void getHangDirectionFromAngle__9daAlink_cFv();
extern "C" void hangMoveBgCheck__9daAlink_cFsP4cXyz();
extern "C" void changeHangMoveProc__9daAlink_cFi();
extern "C" void checkHangFootWall__9daAlink_cFv();
extern "C" void setHangGroundY__9daAlink_cFv();
extern "C" void changeHangEndProc__9daAlink_cFv();
extern "C" void checkHangStartSideWall__9daAlink_cFs();
extern "C" void procHangStartInit__9daAlink_cFv();
extern "C" void procHangStart__9daAlink_cFv();
extern "C" void procHangFallStartInit__9daAlink_cFP8cM3dGPla();
extern "C" void procHangFallStart__9daAlink_cFv();
extern "C" void procHangUpInit__9daAlink_cFi();
extern "C" void procHangUp__9daAlink_cFv();
extern "C" void procHangWaitInit__9daAlink_cFv();
extern "C" void procHangWait__9daAlink_cFv();
extern "C" void procHangMoveInit__9daAlink_cFi();
extern "C" void procHangMove__9daAlink_cFv();
extern "C" void procHangClimbInit__9daAlink_cFf();
extern "C" void procHangClimb__9daAlink_cFv();
extern "C" void procHangWallCatchInit__9daAlink_cFv();
extern "C" void procHangWallCatch__9daAlink_cFv();
extern "C" void procHangReadyInit__9daAlink_cFv();
extern "C" void procHangReady__9daAlink_cFv();
extern "C" void procHangLeverDownInit__9daAlink_cFv();
extern "C" void procHangLeverDown__9daAlink_cFv();
extern "C" void changeDragonActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void setDragonHangPos__9daAlink_cFv();
extern "C" void setOctaIealHangPos__9daAlink_cFv();
extern "C" void setBossBodyHangPos__9daAlink_cFv();
extern "C" void procBossBodyHangInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procBossBodyHang__9daAlink_cFv();
extern "C" void getLadderUnitCount__9daAlink_cCFv();
extern "C" void setLadderInit__9daAlink_cFv();
extern "C" void setLadderPosInit__9daAlink_cFv();
extern "C" void setLadderPos__9daAlink_cFi();
extern "C" void getLadderMoveAnmSpeed__9daAlink_cFv();
extern "C" void changeLadderMoveProc__9daAlink_cFi();
extern "C" void setMoveBGLadderCorrect__9daAlink_cFv();
extern "C" void checkLadderFall__9daAlink_cFv();
extern "C" void procLadderUpStartInit__9daAlink_cFv();
extern "C" void procLadderUpStart__9daAlink_cFv();
extern "C" void procLadderUpEndInit__9daAlink_cFi();
extern "C" void procLadderUpEnd__9daAlink_cFv();
extern "C" void procLadderDownStartInit__9daAlink_cFv();
extern "C" void procLadderDownStart__9daAlink_cFv();
extern "C" void procLadderDownEndInit__9daAlink_cFi();
extern "C" void procLadderDownEnd__9daAlink_cFv();
extern "C" void procLadderMoveInit__9daAlink_cFiiP4cXyz();
extern "C" void procLadderMove__9daAlink_cFv();
extern "C" void getClimbMoveUpDownAnmSpeed__9daAlink_cFv();
extern "C" void getClimbMoveSideAnmSpeed__9daAlink_cFv();
extern "C" void checkClimbCode__9daAlink_cFR13cBgS_PolyInfo();
extern "C" void setClimbInit__9daAlink_cFv();
extern "C" void setClimbShapeOffset__9daAlink_cFv();
extern "C" void getClimbDirectionFromAngle__9daAlink_cFv();
extern "C" void changeClimbMoveProc__9daAlink_cFi();
extern "C" void checkClimbMoveUpDownProc__9daAlink_cFi();
extern "C" void checkClimbMoveSideProc__9daAlink_cFi();
extern "C" void setMoveBGClimbCorrect__9daAlink_cFv();
extern "C" void checkBgCorrectClimbMove__9daAlink_cFP4cXyzP4cXyz();
extern "C" void checkClimbRoof__9daAlink_cFf();
extern "C" void checkClimbGround__9daAlink_cFP4cXyzf();
extern "C" void checkBgClimbMove__9daAlink_cFi();
extern "C" void setClimbStartNotGround__9daAlink_cFv();
extern "C" void procClimbUpStartInit__9daAlink_cFi();
extern "C" void procClimbUpStart__9daAlink_cFv();
extern "C" void procClimbDownStartInit__9daAlink_cFs();
extern "C" void procClimbDownStart__9daAlink_cFv();
extern "C" void procClimbMoveUpDownInit__9daAlink_cFi();
extern "C" void procClimbMoveUpDown__9daAlink_cFv();
extern "C" void procClimbMoveSideInit__9daAlink_cFv();
extern "C" void procClimbMoveSide__9daAlink_cFv();
extern "C" void procClimbWaitInit__9daAlink_cFii();
extern "C" void procClimbWait__9daAlink_cFv();
extern "C" void procClimbToRoofInit__9daAlink_cFv();
extern "C" void procClimbToRoof__9daAlink_cFv();
extern "C" void getRoofHangFMoveAnmSpeed__9daAlink_cCFv();
extern "C" void getRoofHangSMoveAnmSpeed__9daAlink_cCFv();
extern "C" void setRoofHangHandOnSE__9daAlink_cFP13cBgS_PolyInfo();
extern "C" void checkRoofHangMovePos__9daAlink_cFv();
extern "C" void commonRoofHangProc__9daAlink_cFv();
extern "C" void checkNextActionRoofHang__9daAlink_cFv();
extern "C" void procRoofHangStartInit__9daAlink_cFRC13cBgS_PolyInfoRC4cXyzi();
extern "C" void procRoofHangStart__9daAlink_cFv();
extern "C" void procRoofHangWaitInit__9daAlink_cFi();
extern "C" void procRoofHangWait__9daAlink_cFv();
extern "C" void procRoofHangFrontMoveInit__9daAlink_cFv();
extern "C" void procRoofHangFrontMove__9daAlink_cFv();
extern "C" void procRoofHangSideMoveInit__9daAlink_cFv();
extern "C" void procRoofHangSideMove__9daAlink_cFv();
extern "C" void procRoofHangTurnInit__9daAlink_cFv();
extern "C" void procRoofHangTurn__9daAlink_cFv();
extern "C" void setRoofHangSwitch__9daAlink_cFv();
extern "C" void procRoofSwitchHangInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procRoofSwitchHang__9daAlink_cFv();
extern "C" void getHangPos__13daObjSwHang_cFv();
extern "C" void checkZoraWearMaskDraw__9daAlink_cFv();
extern "C" void checkAcceptUseItemInWater__9daAlink_cCFUs();
extern "C" void swimDeleteItem__9daAlink_cFv();
extern "C" void getZoraSwim__9daAlink_cCFv();
extern "C" void getSwimFrontMaxSpeed__9daAlink_cCFv();
extern "C" void getSwimMaxFallSpeed__9daAlink_cCFv();
extern "C" void checkOxygenTimer__9daAlink_cFv();
extern "C" void offOxygenTimer__9daAlink_cFv();
extern "C" void checkPossibleWaterInMode__9daAlink_cCFv();
extern "C" void setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf();
extern "C" void swimBgCheck__9daAlink_cFf();
extern "C" void setSpeedAndAngleSwim__9daAlink_cFv();
extern "C" void checkNextActionSwim__9daAlink_cFv();
extern "C" void checkSwimAction__9daAlink_cFi();
extern "C" void checkSwimUpAction__9daAlink_cFv();
extern "C" void swimOutAfter__9daAlink_cFi();
extern "C" void checkSwimFall__9daAlink_cFv();
extern "C" void checkSwimOutAction__9daAlink_cFv();
extern "C" void setSwimMoveAnime__9daAlink_cFv();
extern "C" void checkSwimButtonAccept__9daAlink_cFv();
extern "C" void checkUpSwimButtonAccept__9daAlink_cFv();
extern "C" void checkSwimButtonMove__9daAlink_cFv();
extern "C" void checkZoraSwimMove__9daAlink_cFv();
extern "C" void checkSwimNeckUpDown__9daAlink_cCFv();
extern "C" void setSwimUpDownOffset__9daAlink_cFv();
extern "C" void procSwimUpInit__9daAlink_cFv();
extern "C" void procSwimUp__9daAlink_cFv();
extern "C" void procSwimWaitInit__9daAlink_cFi();
extern "C" void procSwimWait__9daAlink_cFv();
extern "C" void procSwimMoveInit__9daAlink_cFv();
extern "C" void procSwimMove__9daAlink_cFv();
extern "C" void procSwimDiveInit__9daAlink_cFv();
extern "C" void procSwimDive__9daAlink_cFv();
extern "C" void procSwimHookshotSubjectInit__9daAlink_cFv();
extern "C" void procSwimHookshotSubject__9daAlink_cFv();
extern "C" void procSwimHookshotMoveInit__9daAlink_cFv();
extern "C" void procSwimHookshotMove__9daAlink_cFv();
extern "C" void procSwimDamageInit__9daAlink_cFP12dCcD_GObjInf();
extern "C" void procSwimDamage__9daAlink_cFv();
extern "C" void procOctaIealSpitInit__9daAlink_cFv();
extern "C" void procOctaIealSpit__9daAlink_cFv();
extern "C" static void daAlink_searchIceLeaf__FP10fopAc_ac_cPv();
extern "C" void checkSnowCode__9daAlink_cCFv();
extern "C" void checkSnowCodePolygon__9daAlink_cFR13cBgS_PolyInfo();
extern "C" void checkBoardRestart__9daAlink_cFv();
extern "C" void boardCommon__9daAlink_cFi();
extern "C" void setCommonBoardAnime__9daAlink_cFi();
extern "C" void checkNextActionBoard__9daAlink_cFv();
extern "C" void checkBoardSwordTriggerAction__9daAlink_cFv();
extern "C" void commonProcBoardInit__9daAlink_cFQ29daAlink_c12daAlink_PROC();
extern "C" void getBoardRowAnmSpeed__9daAlink_cFv();
extern "C" void setBoardLandAnime__9daAlink_cFv();
extern "C" void procBoardRideInit__9daAlink_cFv();
extern "C" void procBoardRide__9daAlink_cFv();
extern "C" void procBoardWaitInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procBoardWait__9daAlink_cFv();
extern "C" void procBoardRowInit__9daAlink_cFv();
extern "C" void procBoardRow__9daAlink_cFv();
extern "C" void procBoardTurnInit__9daAlink_cFv();
extern "C" void procBoardTurn__9daAlink_cFv();
extern "C" void procBoardJumpInit__9daAlink_cFfi();
extern "C" void procBoardJump__9daAlink_cFv();
extern "C" void procBoardSubjectivityInit__9daAlink_cFv();
extern "C" void procBoardSubjectivity__9daAlink_cFv();
extern "C" void procBoardCutInit__9daAlink_cFv();
extern "C" void procBoardCut__9daAlink_cFv();
extern "C" void procBoardCutTurnInit__9daAlink_cFv();
extern "C" void procBoardCutTurn__9daAlink_cFv();
extern "C" void draw__Q29daAlink_c14hsChainShape_cFv();
extern "C" void hookshotAtHitCallBack__9daAlink_cFP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" static void
daAlink_hookshotAtHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" void getHookshotTopPos__9daAlink_cFv();
extern "C" void checkHookshotReturnMode__9daAlink_cCFv();
extern "C" void checkHookshotShootReturnMode__9daAlink_cCFv();
extern "C" void resetHookshotMode__9daAlink_cFv();
extern "C" void setEnemyBombHookshot__9daAlink_cFP10fopAc_ac_c();
extern "C" void checkLv7BossRoom__9daAlink_cFv();
extern "C" void checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo();
extern "C" void cancelHookshotCarry__9daAlink_cFv();
extern "C" void changeHookshotDrawModel__9daAlink_cFv();
extern "C" void checkHookshotRoofLv7Boss__9daAlink_cFv();
extern "C" void checkChaseHookshot__9daAlink_cFv();
extern "C" void checkOctaIealSpecialCollect__9daAlink_cFv();
extern "C" void checkBossOctaIealRoom__9daAlink_cFv();
extern "C" void checkHookshotWait__9daAlink_cCFv();
extern "C" void setHookshotCatchNow__9daAlink_cFv();
extern "C" void setHookshotCarryOffset__9daAlink_cFUiPC4cXyz();
extern "C" void setHookshotModel__9daAlink_cFv();
extern "C" void setHookshotSight__9daAlink_cFv();
extern "C" void cancelHookshotShot__9daAlink_cFv();
extern "C" void cancelHookshotMove__9daAlink_cFv();
extern "C" void checkHookshotReadyMaterialOffMode__9daAlink_cCFv();
extern "C" void setHookshotReadyMaterial__9daAlink_cFv();
extern "C" void initHookshotUpperAnimeSpeed__9daAlink_cFi();
extern "C" void initHookshotReady__9daAlink_cFv();
extern "C" void setHookshotReadyAnime__9daAlink_cFv();
extern "C" void checkUpperItemActionHookshot__9daAlink_cFv();
extern "C" void checkNextActionHookshot__9daAlink_cFv();
extern "C" void setHookshotReturnEnd__9daAlink_cFv();
extern "C" void setHookshotHangMoveBGCollect__9daAlink_cFv();
extern "C" void setHookshotTopPosFly__9daAlink_cFv();
extern "C" void setHookshotPos__9daAlink_cFv();
extern "C" void setHookshotRoofWaitAnime__9daAlink_cFv();
extern "C" void setHookshotWallWaitAnime__9daAlink_cFv();
extern "C" void hookshotRoofTurn__9daAlink_cFv();
extern "C" void initHookshotRoofWaitActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void checkNextHookPoint__9daAlink_cFv();
extern "C" void checkLandHookshotHang__9daAlink_cFv();
extern "C" void commonHookshotRoofWait__9daAlink_cFv();
extern "C" void commonHookshotWallWait__9daAlink_cFv();
extern "C" void procHookshotSubjectInit__9daAlink_cFv();
extern "C" void procHookshotSubject__9daAlink_cFv();
extern "C" void procHookshotMoveInit__9daAlink_cFv();
extern "C" void procHookshotMove__9daAlink_cFv();
extern "C" void procHookshotFlyInit__9daAlink_cFv();
extern "C" void procHookshotFly__9daAlink_cFv();
extern "C" void procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci();
extern "C" void procHookshotRoofWait__9daAlink_cFv();
extern "C" void procHookshotRoofShootInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procHookshotRoofShoot__9daAlink_cFv();
extern "C" void procHookshotRoofBootsInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procHookshotRoofBoots__9daAlink_cFv();
extern "C" void procHookshotWallWaitInit__9daAlink_cFisi();
extern "C" void procHookshotWallWait__9daAlink_cFv();
extern "C" void procHookshotWallShootInit__9daAlink_cFv();
extern "C" void procHookshotWallShoot__9daAlink_cFv();
extern "C" void getSpinnerGravity__9daAlink_cCFv();
extern "C" void getSpinnerMaxFallSpeed__9daAlink_cCFv();
extern "C" void getSpinnerJumpRate__9daAlink_cCFv();
extern "C" void getSpinnerRideMoveTime__9daAlink_cFv();
extern "C" void getSpinnerRideSpeedF__9daAlink_cFv();
extern "C" void getSpinnerRideDecSpeedMax__9daAlink_cCFv();
extern "C" void getSpinnerRideDecSpeedMin__9daAlink_cCFv();
extern "C" void getSpinnerRideDecSpeedRate__9daAlink_cCFv();
extern "C" void getSpinnerRideRotAngleMax__9daAlink_cCFv();
extern "C" void getSpinnerRideRotAngleMin__9daAlink_cCFv();
extern "C" void onSpinnerPathForceRemove__9daAlink_cFv();
extern "C" void checkSpinnerPathMove__9daAlink_cFv();
extern "C" void checkLv4BossRoom__9daAlink_cFv();
extern "C" void checkSpinnerTriggerAttack__9daAlink_cFv();
extern "C" void setSpinnerSyncPos__9daAlink_cFv();
extern "C" void procSpinnerReadyInit__9daAlink_cFv();
extern "C" void procSpinnerReady__9daAlink_cFv();
extern "C" void setSpinnerStatus__9daAlink_cFUcUc();
extern "C" void procSpinnerWaitInit__9daAlink_cFv();
extern "C" void procSpinnerWait__9daAlink_cFv();
extern "C" void bottleModelCallBack__9daAlink_cFv();
extern "C" static void daAlink_bottleModelCallBack__FP8J3DJointi();
extern "C" void getBottleOpenAppearItem__9daAlink_cCFv();
extern "C" void checkOilBottleItemNotGet__9daAlink_cFUs();
extern "C" void setBottleModel__9daAlink_cFUs();
extern "C" void commonBottleDrink__9daAlink_cFi();
extern "C" void makeFairy__9daAlink_cFP4cXyzUl();
extern "C" void procBottleDrinkInit__9daAlink_cFUs();
extern "C" void procBottleDrink__9daAlink_cFv();
extern "C" void procBottleOpenInit__9daAlink_cFUs();
extern "C" void procBottleOpen__9daAlink_cFv();
extern "C" void procBottleSwingInit__9daAlink_cFP10fopAc_ac_ci();
extern "C" void procBottleSwing__9daAlink_cFv();
extern "C" void procBottleGetInit__9daAlink_cFi();
extern "C" void procBottleGet__9daAlink_cFv();
extern "C" void Insect_Release__9dInsect_cFv();
extern "C" static void daAlink_searchTagKandelaar__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchTagKtOnFire__FP10fopAc_ac_cPv();
extern "C" void setKandelaarMtx__9daAlink_cFPA4_fii();
extern "C" void checkWaterInKandelaarOffset__9daAlink_cFf();
extern "C" void checkWaterInKandelaar__9daAlink_cFf();
extern "C" void offKandelaarModel__9daAlink_cFv();
extern "C" void checkUseKandelaar__9daAlink_cFi();
extern "C" void checkKandelaarSwing__9daAlink_cCFi();
extern "C" void kandelaarModelCallBack__9daAlink_cFv();
extern "C" static void daAlink_kandelaarModelCallBack__FP8J3DJointi();
extern "C" void getKandelaarFlamePos__9daAlink_cFv();
extern "C" void checkKandelaarEquipAnime__9daAlink_cCFv();
extern "C" void preKandelaarDraw__9daAlink_cFv();
extern "C" void setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10();
extern "C" void setKandelaarModel__9daAlink_cFv();
extern "C" void resetOilBottleModel__9daAlink_cFv();
extern "C" void commonKandelaarPourInit__9daAlink_cFv();
extern "C" void commonKandelaarPour__9daAlink_cFi();
extern "C" void initKandelaarSwing__9daAlink_cFv();
extern "C" void procKandelaarSwingInit__9daAlink_cFv();
extern "C" void procKandelaarSwing__9daAlink_cFv();
extern "C" void procKandelaarPourInit__9daAlink_cFv();
extern "C" void procKandelaarPour__9daAlink_cFv();
extern "C" static void daAlink_searchWhistle__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchHawk__FP10fopAc_ac_cPv();
extern "C" void setGrassWhistleModel__9daAlink_cFi();
extern "C" void setHorseWhistleModel__9daAlink_cFv();
extern "C" void procGrassWhistleGetInit__9daAlink_cFv();
extern "C" void procGrassWhistleGet__9daAlink_cFv();
extern "C" void procGrassWhistleWaitInit__9daAlink_cFiiisP4cXyz();
extern "C" void procGrassWhistleWait__9daAlink_cFv();
extern "C" void procCoHorseCallWaitInit__9daAlink_cFi();
extern "C" void procCoHorseCallWait__9daAlink_cFv();
extern "C" void procHawkCatchInit__9daAlink_cFv();
extern "C" void procHawkCatch__9daAlink_cFv();
extern "C" void procHawkSubjectInit__9daAlink_cFv();
extern "C" void procHawkSubject__9daAlink_cFv();
extern "C" void getIronBallCenterPos__9daAlink_cFv();
extern "C" void getIronBallBgHit__9daAlink_cCFv();
extern "C" void checkIronBallThrowMode__9daAlink_cCFv();
extern "C" void checkIronBallThrowReturnMode__9daAlink_cCFv();
extern "C" void checkIronBallReturn__9daAlink_cCFv();
extern "C" void checkIronBallGroundStop__9daAlink_cCFv();
extern "C" void setIronBallWaitUpperAnime__9daAlink_cFi();
extern "C" void checkIronBallDelete__9daAlink_cFv();
extern "C" void setIronBallReturn__9daAlink_cFi();
extern "C" void setIronBallBgCheckPos__9daAlink_cFv();
extern "C" void setIronBallModel__9daAlink_cFv();
extern "C" void __ct__5csXyzFv();
extern "C" void setIronBallGroundVec__9daAlink_cFPC4cXyzP4cXyz();
extern "C" void setIronBallChainPos__9daAlink_cFv();
extern "C" void checkIronBallReturnChange__9daAlink_cFv();
extern "C" void setIronBallPos__9daAlink_cFv();
extern "C" void checkIronBallAnime__9daAlink_cCFv();
extern "C" void setIronBallReadyAnime__9daAlink_cFv();
extern "C" void setIronBallBaseAnime__9daAlink_cFv();
extern "C" void checkUpperItemActionIronBall__9daAlink_cFv();
extern "C" void checkNextActionIronBall__9daAlink_cFv();
extern "C" void procIronBallSubjectInit__9daAlink_cFv();
extern "C" void procIronBallSubject__9daAlink_cFv();
extern "C" void procIronBallMoveInit__9daAlink_cFv();
extern "C" void procIronBallMove__9daAlink_cFv();
extern "C" void procIronBallThrowInit__9daAlink_cFv();
extern "C" void procIronBallThrow__9daAlink_cFv();
extern "C" void procIronBallReturnInit__9daAlink_cFv();
extern "C" void procIronBallReturn__9daAlink_cFv();
extern "C" void checkEventRun__9daAlink_cCFv();
extern "C" void createNpcTks__9daAlink_cFP4cXyziUl();
extern "C" void checkSetNpcTks__9daAlink_cFP4cXyzii();
extern "C" void checkDemoAction__9daAlink_cFv();
extern "C" void checkDemoMoveMode__9daAlink_cCFUl();
extern "C" void setDemoMoveData__9daAlink_cFPUlPC4cXyz();
extern "C" void setNoDrawSwordShield__9daAlink_cFiUs();
extern "C" void setDemoData__9daAlink_cFv();
extern "C" void resetDemoBck__9daAlink_cFv();
extern "C" void endHighModel__9daAlink_cFv();
extern "C" void resetSpecialEvent__9daAlink_cFv();
extern "C" void endDemoMode__9daAlink_cFv();
extern "C" void getDemoLookActor__9daAlink_cFv();
extern "C" void checkFlyAtnWait__9daAlink_cFv();
extern "C" void setGetItemFace__9daAlink_cFUs();
extern "C" void checkGrabTalkActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void setTalkStartBack__9daAlink_cFP4cXyz();
extern "C" void setShapeAngleToTalkActor__9daAlink_cFv();
extern "C" void setTalkAnime__9daAlink_cFv();
extern "C" void setTradeItemAnime__9daAlink_cFv();
extern "C" void setTradeItemOutHand__9daAlink_cFv();
extern "C" void checkEndMessage__9daAlink_cFUl();
extern "C" void setDemoRightHandIndex__9daAlink_cFUs();
extern "C" void setDemoLeftHandIndex__9daAlink_cFUs();
extern "C" void setDemoRide__9daAlink_cFUs();
extern "C" void setDemoBodyBck__9daAlink_cFP13dDemo_actor_cUs();
extern "C" void checkFinalBattle__9daAlink_cFv();
extern "C" void checkRestartDead__9daAlink_cFii();
extern "C" void setDeadRideSyncPos__9daAlink_cFv();
extern "C" void checkDeadHP__9daAlink_cFv();
extern "C" void checkDeadAction__9daAlink_cFi();
extern "C" void setHighModelBck__9daAlink_cFP13mDoExt_bckAnmUs();
extern "C" void setHighModelFaceBtk__9daAlink_cFUs();
extern "C" void setDemoBrk__9daAlink_cFPP15J3DAnmTevRegKeyP8J3DModelUs();
extern "C" void setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi();
extern "C" static void daAlink_c_getDemoIDData__FP13dDemo_actor_cPiPiPiPUsPiPi();
extern "C" void procDemoCommon__9daAlink_cFv();
extern "C" void procCoToolDemoInit__9daAlink_cFv();
extern "C" void procCoToolDemo__9daAlink_cFv();
extern "C" void procCoTalkInit__9daAlink_cFv();
extern "C" void procCoTalk__9daAlink_cFv();
extern "C" void procCoOpenTreasureInit__9daAlink_cFv();
extern "C" void procCoOpenTreasure__9daAlink_cFv();
extern "C" void procCoUnequipInit__9daAlink_cFv();
extern "C" void procCoUnequip__9daAlink_cFv();
extern "C" void setGetSubBgm__9daAlink_cFi();
extern "C" void checkTreasureRupeeReturn__9daAlink_cCFi();
extern "C" void procCoGetItemInit__9daAlink_cFv();
extern "C" void procCoGetItem__9daAlink_cFv();
extern "C" void procCoTurnBackInit__9daAlink_cFv();
extern "C" void procCoTurnBack__9daAlink_cFv();
extern "C" void procDoorOpenInit__9daAlink_cFv();
extern "C" void procDoorOpen__9daAlink_cFv();
extern "C" void procCoLookWaitInit__9daAlink_cFv();
extern "C" void procCoLookWait__9daAlink_cFv();
extern "C" void procCoDemoPushPullWaitInit__9daAlink_cFv();
extern "C" void procCoDemoPushMoveInit__9daAlink_cFv();
extern "C" void setMonkeyMoveAnime__9daAlink_cFv();
extern "C" void procMonkeyMoveInit__9daAlink_cFv();
extern "C" void procMonkeyMove__9daAlink_cFv();
extern "C" void procDemoBoomerangCatchInit__9daAlink_cFv();
extern "C" void procDemoBoomerangCatch__9daAlink_cFv();
extern "C" void procCoDeadInit__9daAlink_cFi();
extern "C" void procCoDead__9daAlink_cFv();
extern "C" void procCoLookAroundInit__9daAlink_cFv();
extern "C" void procCoLookAround__9daAlink_cFv();
extern "C" void procBossAtnWaitInit__9daAlink_cFv();
extern "C" void procCoQuakeWaitInit__9daAlink_cFv();
extern "C" void procCoCaughtInit__9daAlink_cFv();
extern "C" void procLookUpInit__9daAlink_cFv();
extern "C" void procLookUp__9daAlink_cFv();
extern "C" void procLookUpToGetItemInit__9daAlink_cFv();
extern "C" void procLookUpToGetItem__9daAlink_cFv();
extern "C" void procHandPatInit__9daAlink_cFv();
extern "C" void procHandPat__9daAlink_cFv();
extern "C" void procCoFogDeadInit__9daAlink_cFv();
extern "C" void procCoFogDead__9daAlink_cFv();
extern "C" void procWolfSmellWaitInit__9daAlink_cFv();
extern "C" void procCoNodInit__9daAlink_cFv();
extern "C" void procCoNod__9daAlink_cFv();
extern "C" void procCoEyeAwayInit__9daAlink_cFv();
extern "C" void procCoGlareInit__9daAlink_cFv();
extern "C" void procCoGlare__9daAlink_cFv();
extern "C" void procGoatStopReadyInit__9daAlink_cFv();
extern "C" void procGoatStopReady__9daAlink_cFv();
extern "C" void procCoGetReadySitInit__9daAlink_cFv();
extern "C" void procCoGetReadySit__9daAlink_cFv();
extern "C" void procCoTwGateInit__9daAlink_cFv();
extern "C" void procCoTwGate__9daAlink_cFv();
extern "C" void procWolfSnowEscapeInit__9daAlink_cFv();
extern "C" void procWolfSnowEscape__9daAlink_cFv();
extern "C" void procZoraMoveInit__9daAlink_cFv();
extern "C" void procZoraMove__9daAlink_cFv();
extern "C" void procLookAroundTurnInit__9daAlink_cFv();
extern "C" void procLookAroundTurn__9daAlink_cFv();
extern "C" void procTradeItemOutInit__9daAlink_cFv();
extern "C" void procTradeItemOut__9daAlink_cFv();
extern "C" void checkLetterItem__9daAlink_cFi();
extern "C" void procNotUseItemInit__9daAlink_cFi();
extern "C" void procNotUseItem__9daAlink_cFv();
extern "C" void procSwordReadyInit__9daAlink_cFv();
extern "C" void procSwordReady__9daAlink_cFv();
extern "C" void setSwordPushAnime__9daAlink_cFv();
extern "C" void procSwordPushInit__9daAlink_cFv();
extern "C" void procSwordPush__9daAlink_cFv();
extern "C" void procGanonFinishInit__9daAlink_cFv();
extern "C" void procGanonFinish__9daAlink_cFv();
extern "C" void procCutFastReadyInit__9daAlink_cFv();
extern "C" void procCutFastReady__9daAlink_cFv();
extern "C" void procMasterSwordStickInit__9daAlink_cFv();
extern "C" void procMasterSwordStick__9daAlink_cFv();
extern "C" void procMasterSwordPullInit__9daAlink_cFv();
extern "C" void procMasterSwordPull__9daAlink_cFv();
extern "C" void checkLv7DungeonShop__9daAlink_cFv();
extern "C" void procDungeonWarpReadyInit__9daAlink_cFv();
extern "C" void procDungeonWarpReady__9daAlink_cFv();
extern "C" void procDungeonWarpInit__9daAlink_cFv();
extern "C" void procDungeonWarp__9daAlink_cFv();
extern "C" void procDungeonWarpSceneStartInit__9daAlink_cFv();
extern "C" void procDungeonWarpSceneStart__9daAlink_cFv();
extern "C" static void daAlink_searchPortal__FP10fopAc_ac_cPv();
extern "C" void checkAcceptWarp__9daAlink_cFv();
extern "C" void dungeonReturnWarp__9daAlink_cFv();
extern "C" void skipPortalObjWarp__9daAlink_cFv();
extern "C" void checkWarpStart__9daAlink_cFv();
extern "C" void warpModelTexScroll__9daAlink_cFv();
extern "C" void procCoWarpInit__9daAlink_cFii();
extern "C" void procCoWarp__9daAlink_cFv();
extern "C" void commonWaitTurnInit__9daAlink_cFv();
extern "C" void commonGrabPutInit__9daAlink_cFv();
extern "C" void commonLargeDamageUpInit__9daAlink_cFiiss();
extern "C" void commonFallInit__9daAlink_cFi();
extern "C" void setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz();
extern "C" void setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz();
extern "C" void setEmitterColor__9daAlink_cFPUlUsPC4cXyzPC5csXyz();
extern "C" void stopDrawParticle__9daAlink_cFUl();
extern "C" void setEffectFrontRollParam__9daAlink_cFv();
extern "C" void setEffectSlipParam__9daAlink_cFv();
extern "C" void setEffectRunParam__9daAlink_cFv();
extern "C" void setEffectSmallLandParam__9daAlink_cFv();
extern "C" void setEffectLandParam__9daAlink_cFv();
extern "C" void setEffectSumouParam__9daAlink_cFv();
extern "C" void setFootEffectProcType__9daAlink_cFi();
extern "C" void setWolfFootOn__9daAlink_cFi();
extern "C" void setFootMark__9daAlink_cFP4cXyzUsi();
extern "C" void setEffect__9daAlink_cFv();
extern "C" void setSumouEffect__9daAlink_cFv();
extern "C" void setWaterfallEffect__9daAlink_cFPC4cXyzPUl();
extern "C" void setWaterfallEffect__9daAlink_cFv();
extern "C" void setMagneBootsEffect__9daAlink_cFv();
extern "C" void setSwordChargeEffect__9daAlink_cFv();
extern "C" void setElecDamageEffect__9daAlink_cFv();
extern "C" void clearCutTurnEffectID__9daAlink_cFv();
extern "C" void setCutTurnEffect__9daAlink_cFv();
extern "C" void setHorseCutTurnEffect__9daAlink_cFv();
extern "C" void setCutLargeJumpLandEffect__9daAlink_cFv();
extern "C" void setBootsLightEffect__9daAlink_cFv();
extern "C" void setLightningSwordEffect__9daAlink_cFv();
extern "C" void setWolfRollAttackEffect__9daAlink_cFv();
extern "C" void setWolfDigEffect__9daAlink_cFv();
extern "C" void setWolfSwimEndEffect__9daAlink_cFPP14JPABaseEmitterPP14JPABaseEmitter();
extern "C" void setWolfLockAttackEffect__9daAlink_cFv();
extern "C" void setWolfJumpAttackEffect__9daAlink_cFv();
extern "C" void setWolfBarrierHitEffect__9daAlink_cFR11dBgS_LinChk();
extern "C" void setCutWaterDropEffect__9daAlink_cFv();
extern "C" void setWaterDropEffect__9daAlink_cFv();
extern "C" void setSwordUpColorEffect__9daAlink_cFv();
extern "C" void setSwordCutSplash__9daAlink_cFv();
extern "C" void setMetamorphoseEffectStartLink__9daAlink_cFv();
extern "C" void setMetamorphoseEffect__9daAlink_cFv();
extern "C" void setRunSplash__9daAlink_cFv();
extern "C" void execute__29dAlink_bottleWaterPcallBack_cFP14JPABaseEmitterP15JPABaseParticle();
extern "C" void resetFairyEffect__9daAlink_cFv();
extern "C" void setBottleEffect__9daAlink_cFv();
extern "C" void clearFirePointDamageEffect__9daAlink_cFi();
extern "C" void initFirePointDamageEffectAll__9daAlink_cFv();
extern "C" void initFirePointDamageEffect__9daAlink_cFPC4cXyzP12dCcD_GObjInf();
extern "C" void setFirePointDamageEffect__9daAlink_cFv();
extern "C" void setFreezeEffect__9daAlink_cFv();
extern "C" void setWoodShieldBurnEffect__9daAlink_cFv();
extern "C" void clearWoodShieldBurnEffect__9daAlink_cFv();
extern "C" void setWoodShieldBurnOutEffect__9daAlink_cFv();
extern "C" void initBlur__14daAlink_blur_cFfiPC4cXyzPC4cXyzPC4cXyz();
extern "C" static void setBezierPos__FPC4cXyzPC4cXyzPC4cXyzPC4cXyzfP4cXyz();
extern "C" void copyBlur__14daAlink_blur_cFPC4cXyzPC4cXyzPC4cXyz();
extern "C" void traceBlur__14daAlink_blur_cFPC4cXyzPC4cXyzs();
extern "C" void draw__14daAlink_blur_cFv();
extern "C" void create__20daAlink_lockCursor_cFv();
extern "C" void setAnimation__7J2DPaneFP15J2DAnmTevRegKey();
extern "C" void setAnimation__7J2DPaneFP11J2DAnmColor();
extern "C" void update__20daAlink_lockCursor_cFv();
extern "C" void draw__20daAlink_lockCursor_cFv();
extern "C" void create__15daAlink_sight_cFv();
extern "C" void draw__15daAlink_sight_cFv();
extern "C" void onLockFlg__15daAlink_sight_cFv();
extern "C" void changeCommon__9daAlink_cFv();
extern "C" void changeWolf__9daAlink_cFv();
extern "C" void changeLink__9daAlink_cFi();
extern "C" void onWolfEyeUp__9daAlink_cFv();
extern "C" void offWolfEyeUp__9daAlink_cFv();
extern "C" void wolfSenseTrigger__9daAlink_cFv();
extern "C" void setWolfSenceStatus__9daAlink_cFUc();
extern "C" void wolfClawTrigger__9daAlink_cFv();
extern "C" void setWolfDigStatus__9daAlink_cFUc();
extern "C" void checkWolfShapeReverse__9daAlink_cCFv();
extern "C" void checkWolfSideStep__9daAlink_cCFv();
extern "C" void setWolfTailAngle__9daAlink_cFv();
extern "C" void checkWolfSlowDash__9daAlink_cFv();
extern "C" void setSpeedAndAngleWolf__9daAlink_cFv();
extern "C" void setSpeedAndAngleWolfAtn__9daAlink_cFv();
extern "C" void checkWolfAtnWait__9daAlink_cFv();
extern "C" void checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM();
extern "C" void setBlendWolfMoveAnime__9daAlink_cFf();
extern "C" void checkWolfAtnMoveBack__9daAlink_cFs();
extern "C" void setWolfAtnMoveDirection__9daAlink_cFv();
extern "C" void setBlendWolfAtnMoveAnime__9daAlink_cFf();
extern "C" void setBlendWolfAtnBackMoveAnime__9daAlink_cFf();
extern "C" void
setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif();
extern "C" void setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM();
extern "C" void setSingleAnimeWolfBaseMorf__9daAlink_cFQ29daAlink_c12daAlink_WANMf();
extern "C" void setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff();
extern "C" void setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf();
extern "C" void
setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c();
extern "C" void checkWolfLandAction__9daAlink_cFi();
extern "C" void checkMidnaUseAbility__9daAlink_cCFv();
extern "C" void checkWolfUseAbility__9daAlink_cFv();
extern "C" void checkWolfGroundSpecialMode__9daAlink_cFv();
extern "C" void checkNextActionWolf__9daAlink_cFi();
extern "C" void wolfSideBgCheck__9daAlink_cFs();
extern "C" void checkWolfAttackReverse__9daAlink_cFi();
extern "C" void checkWolfBarrierHitReverse__9daAlink_cFv();
extern "C" void checkWolfBarrierWallHit__9daAlink_cFR13cBgS_PolyInfo();
extern "C" void wolfBgCheck__9daAlink_cFv();
extern "C" void changeWolfBlendRate__9daAlink_cFi();
extern "C" void setWolfFootMatrix__9daAlink_cFv();
extern "C" void wolfFootBgCheck__9daAlink_cFv();
extern "C" void checkWolfWaitSlipPolygon__9daAlink_cFv();
extern "C" void setWolfWaitSlip__9daAlink_cFv();
extern "C" void checkWolfAtnDoCharge__9daAlink_cFv();
extern "C" void setWolfChainPos__9daAlink_cFv();
extern "C" void setWolfAnmVoice__9daAlink_cFv();
extern "C" void procWolfServiceWaitInit__9daAlink_cFi();
extern "C" void procWolfServiceWait__9daAlink_cFv();
extern "C" void procWolfTiredWaitInit__9daAlink_cFv();
extern "C" void procWolfTiredWait__9daAlink_cFv();
extern "C" void procWolfMidnaRideShockInit__9daAlink_cFv();
extern "C" void procWolfMidnaRideShock__9daAlink_cFv();
extern "C" void procWolfWaitInit__9daAlink_cFv();
extern "C" void procWolfWait__9daAlink_cFv();
extern "C" void procWolfMoveInit__9daAlink_cFv();
extern "C" void procWolfMove__9daAlink_cFv();
extern "C" void procWolfDashInit__9daAlink_cFv();
extern "C" void procWolfDash__9daAlink_cFv();
extern "C" void procWolfDashReverseInit__9daAlink_cFi();
extern "C" void procWolfDashReverse__9daAlink_cFv();
extern "C" void procWolfAtnActorMoveInit__9daAlink_cFv();
extern "C" void procWolfAtnActorMove__9daAlink_cFv();
extern "C" void procWolfWaitTurnInit__9daAlink_cFv();
extern "C" void procWolfWaitTurn__9daAlink_cFv();
extern "C" void procWolfSideStepInit__9daAlink_cFi();
extern "C" void procWolfSideStep__9daAlink_cFv();
extern "C" void procWolfSideStepLandInit__9daAlink_cFs();
extern "C" void procWolfSideStepLand__9daAlink_cFv();
extern "C" void procWolfBackJumpInit__9daAlink_cFi();
extern "C" void procWolfBackJump__9daAlink_cFv();
extern "C" void procWolfBackJumpLandInit__9daAlink_cFss();
extern "C" void procWolfBackJumpLand__9daAlink_cFv();
extern "C" void procWolfHowlInit__9daAlink_cFi();
extern "C" void procWolfHowl__9daAlink_cFv();
extern "C" void procWolfAutoJumpInit__9daAlink_cFi();
extern "C" void procWolfAutoJump__9daAlink_cFv();
extern "C" void procWolfFallInit__9daAlink_cFif();
extern "C" void procWolfFall__9daAlink_cFv();
extern "C" void procWolfLandInit__9daAlink_cFv();
extern "C" void procWolfLand__9daAlink_cFv();
extern "C" void procWolfSitInit__9daAlink_cFi();
extern "C" void procWolfSit__9daAlink_cFv();
extern "C" void procWolfStepMoveInit__9daAlink_cFv();
extern "C" void procWolfStepMove__9daAlink_cFv();
extern "C" void procWolfSlipInit__9daAlink_cFv();
extern "C" void procWolfSlip__9daAlink_cFv();
extern "C" void procWolfSlipTurnInit__9daAlink_cFi();
extern "C" void procWolfSlipTurn__9daAlink_cFv();
extern "C" void procWolfSlipTurnLandInit__9daAlink_cFv();
extern "C" void procWolfSlipTurnLand__9daAlink_cFv();
extern "C" void procWolfSlideReadyInit__9daAlink_cFsi();
extern "C" void procWolfSlideReady__9daAlink_cFv();
extern "C" void procWolfSlideInit__9daAlink_cFsi();
extern "C" void procWolfSlide__9daAlink_cFv();
extern "C" void procWolfSlideLandInit__9daAlink_cFv();
extern "C" void procWolfSlideLand__9daAlink_cFv();
extern "C" void procWolfWaitSlipInit__9daAlink_cFv();
extern "C" void procWolfWaitSlip__9daAlink_cFv();
extern "C" void procWolfSlopeStartInit__9daAlink_cFi();
extern "C" void procWolfSlopeStart__9daAlink_cFv();
extern "C" static void daAlink_searchGoldWolf__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchWolfHowl__FP10fopAc_ac_cPv();
extern "C" void setWolfHowlNotHappen__9daAlink_cFi();
extern "C" void procWolfHowlDemoInit__9daAlink_cFv();
extern "C" void procWolfHowlDemo__9daAlink_cFv();
extern "C" void setWolfHowling__15daObj_Sekizoa_cFv();
extern "C" void checkWolfRope__9daAlink_cFv();
extern "C" void checkWolfRopeHit__9daAlink_cCFP12dCcD_GObjInfPC4cXyzi();
extern "C" void checkWolfRopeJumpHang__9daAlink_cFv();
extern "C" void getWolfRopeMoveSpeed__9daAlink_cFv();
extern "C" void setWolfRopePosY__9daAlink_cFv();
extern "C" void initWolfRopeShapeAngle__9daAlink_cFv();
extern "C" void wolfRopeSwingInc__9daAlink_cFf();
extern "C" void setWolfRopeOffsetY__9daAlink_cFi();
extern "C" void getDirectionRopeMove__9daAlink_cCFv();
extern "C" void procWolfRopeMoveInit__9daAlink_cFii();
extern "C" void procWolfRopeMove__9daAlink_cFv();
extern "C" void procWolfRopeHangInit__9daAlink_cFi();
extern "C" void procWolfRopeHang__9daAlink_cFv();
extern "C" void procWolfRopeTurnInit__9daAlink_cFv();
extern "C" void procWolfRopeTurn__9daAlink_cFv();
extern "C" void procWolfRopeStaggerInit__9daAlink_cFi();
extern "C" void procWolfRopeStagger__9daAlink_cFv();
extern "C" void procWolfRopeSubjectivityInit__9daAlink_cFv();
extern "C" void procWolfRopeSubjectivity__9daAlink_cFv();
extern "C" void getWolfTagJumpTime__9daAlink_cCFv();
extern "C" void checkMidnaLockJumpPoint__9daAlink_cCFv();
extern "C" void procWolfTagJumpInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procWolfTagJump__9daAlink_cFv();
extern "C" void procWolfTagJumpLandInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procWolfTagJumpLand__9daAlink_cFv();
extern "C" static void daAlink_searchGiant__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchGiantTalk__FP10fopAc_ac_cPv();
extern "C" void procWolfGiantPuzzleInit__9daAlink_cFv();
extern "C" void procWolfGiantPuzzle__9daAlink_cFv();
extern "C" void setWolfHangGroundY__9daAlink_cFv();
extern "C" void changeWolfHangEndProc__9daAlink_cFv();
extern "C" void procWolfHangReadyInit__9daAlink_cFv();
extern "C" void procWolfHangReady__9daAlink_cFv();
extern "C" void procWolfHangWallCatchInit__9daAlink_cFi();
extern "C" void procWolfHangWallCatch__9daAlink_cFv();
extern "C" void procWolfHangFallStartInit__9daAlink_cFP8cM3dGPla();
extern "C" void procWolfHangFallStart__9daAlink_cFv();
extern "C" void setWolfHeadDamage__9daAlink_cFv();
extern "C" void procWolfDamageInit__9daAlink_cFP12dCcD_GObjInf();
extern "C" void procWolfDamage__9daAlink_cFv();
extern "C" void procWolfLargeDamageUpInit__9daAlink_cFiiss();
extern "C" void procWolfLargeDamageUp__9daAlink_cFv();
extern "C" void procWolfLandDamageInit__9daAlink_cFi();
extern "C" void procWolfLandDamage__9daAlink_cFv();
extern "C" void setWolfScreamWaitAnime__9daAlink_cFv();
extern "C" void procWolfScreamWaitInit__9daAlink_cFv();
extern "C" void procWolfScreamWait__9daAlink_cFv();
extern "C" void getWolfLieMoveAnmSpeed__9daAlink_cFv();
extern "C" void getWolfLieMoveSpeed__9daAlink_cFv();
extern "C" void checkMidnaDisappearMode__9daAlink_cCFv();
extern "C" void checkWolfLieContinue__9daAlink_cFi();
extern "C" void checkNextActionWolfFromLie__9daAlink_cFv();
extern "C" void setWolfLieMoveVoice__9daAlink_cFi();
extern "C" void checkWolfLieCode__9daAlink_cFv();
extern "C" void procWolfLieStartInit__9daAlink_cFi();
extern "C" void procWolfLieStart__9daAlink_cFv();
extern "C" void procWolfLieMoveInit__9daAlink_cFi();
extern "C" void procWolfLieMove__9daAlink_cFv();
extern "C" void procWolfLieAutoMoveInit__9daAlink_cFiP4cXyz();
extern "C" void procWolfLieAutoMove__9daAlink_cFv();
extern "C" void setSpeedAndAngleSwimWolf__9daAlink_cFv();
extern "C" void getWolfSwimMoveAnmSpeed__9daAlink_cFv();
extern "C" void decideDoStatusSwimWolf__9daAlink_cFv();
extern "C" void procWolfSwimUpInit__9daAlink_cFv();
extern "C" void procWolfSwimUp__9daAlink_cFv();
extern "C" void procWolfSwimWaitInit__9daAlink_cFi();
extern "C" void procWolfSwimWait__9daAlink_cFv();
extern "C" void procWolfSwimMoveInit__9daAlink_cFv();
extern "C" void procWolfSwimMove__9daAlink_cFv();
extern "C" void procWolfSwimEndWaitInit__9daAlink_cFi();
extern "C" void procWolfSwimEndWait__9daAlink_cFv();
extern "C" void onWolfEnemyBiteAll__9daAlink_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2();
extern "C" void resetWolfEnemyBiteAll__9daAlink_cFv();
extern "C" void checkWolfEnemyThrowAction__9daAlink_cFv();
extern "C" void setWolfLockDomeModel__9daAlink_cFv();
extern "C" void setWolfBallModel__9daAlink_cFv();
extern "C" void resetWolfBallGrab__9daAlink_cFv();
extern "C" void checkWolfLockData__9daAlink_cFv();
extern "C" void checkWolfLock__9daAlink_cCFP10fopAc_ac_c();
extern "C" void cancelWolfLock__9daAlink_cFP10fopAc_ac_c();
extern "C" void getWolfLockActorEnd__9daAlink_cFv();
extern "C" void searchWolfLockEnemy__9daAlink_cFP10fopAc_ac_cPv();
extern "C" static void daAlink_searchWolfLockEnemy__FP10fopAc_ac_cPv();
extern "C" void checkWolfComboCnt__9daAlink_cFv();
extern "C" void checkWolfAttackAction__9daAlink_cFv();
extern "C" void setWolfEnemyThrowUpperAnime__9daAlink_cFQ29daAlink_c12daAlink_WANMf();
extern "C" void setWolfEnemyHangBitePos__9daAlink_cFP13fopEn_enemy_c();
extern "C" void setWolfBiteDamage__9daAlink_cFP13fopEn_enemy_c();
extern "C" void checkWolfLockAttackChargeState__9daAlink_cFv();
extern "C" void procWolfRollAttackChargeInit__9daAlink_cFv();
extern "C" void procWolfRollAttackCharge__9daAlink_cFv();
extern "C" void procWolfRollAttackMoveInit__9daAlink_cFv();
extern "C" void procWolfRollAttackMove__9daAlink_cFv();
extern "C" void procWolfJumpAttackInit__9daAlink_cFi();
extern "C" void procWolfJumpAttack__9daAlink_cFv();
extern "C" void procWolfJumpAttackKickInit__9daAlink_cFv();
extern "C" void procWolfJumpAttackKick__9daAlink_cFv();
extern "C" void procWolfJumpAttackSlideLandInit__9daAlink_cFiii();
extern "C" void procWolfJumpAttackSlideLand__9daAlink_cFv();
extern "C" void procWolfJumpAttackNormalLandInit__9daAlink_cFi();
extern "C" void procWolfJumpAttackNormalLand__9daAlink_cFv();
extern "C" void procWolfWaitAttackInit__9daAlink_cFi();
extern "C" void procWolfWaitAttack__9daAlink_cFv();
extern "C" void procWolfRollAttackInit__9daAlink_cFii();
extern "C" void procWolfRollAttack__9daAlink_cFv();
extern "C" void procWolfDownAttackInit__9daAlink_cFv();
extern "C" void procWolfDownAttack__9daAlink_cFv();
extern "C" void procWolfDownAtLandInit__9daAlink_cFP13fopEn_enemy_c();
extern "C" void procWolfDownAtLand__9daAlink_cFv();
extern "C" void procWolfDownAtMissLandInit__9daAlink_cFv();
extern "C" void procWolfDownAtMissLand__9daAlink_cFv();
extern "C" void procWolfLockAttackInit__9daAlink_cFi();
extern "C" void procWolfLockAttack__9daAlink_cFv();
extern "C" void procWolfLockAttackTurnInit__9daAlink_cFi();
extern "C" void procWolfLockAttackTurn__9daAlink_cFv();
extern "C" void procWolfAttackReverseInit__9daAlink_cFv();
extern "C" void procWolfAttackReverse__9daAlink_cFv();
extern "C" void procWolfEnemyThrowInit__9daAlink_cFi();
extern "C" void procWolfEnemyThrow__9daAlink_cFv();
extern "C" void procWolfEnemyHangBiteInit__9daAlink_cFv();
extern "C" void procWolfEnemyHangBite__9daAlink_cFv();
extern "C" void procWolfGrabUpInit__9daAlink_cFv();
extern "C" void procWolfGrabUp__9daAlink_cFv();
extern "C" void procWolfGrabPutInit__9daAlink_cFv();
extern "C" void procWolfGrabPut__9daAlink_cFv();
extern "C" void procWolfGrabThrowInit__9daAlink_cFv();
extern "C" void procWolfGrabThrow__9daAlink_cFv();
extern "C" void procWolfPushInit__9daAlink_cFv();
extern "C" void procWolfPush__9daAlink_cFv();
extern "C" static void daAlink_searchEnemyCargo__FP10fopAc_ac_cPv();
extern "C" void procWolfCargoCarryInit__9daAlink_cFv();
extern "C" void procWolfCargoCarry__9daAlink_cFv();
extern "C" void procWolfChainUpInit__9daAlink_cFv();
extern "C" void procWolfChainUp__9daAlink_cFv();
extern "C" void procWolfGanonCatchInit__9daAlink_cFv();
extern "C" void procWolfGanonCatch__9daAlink_cFv();
extern "C" void procWolfChainReadyInit__9daAlink_cFv();
extern "C" void procWolfChainReady__9daAlink_cFv();
extern "C" void procWolfChainWaitInit__9daAlink_cFv();
extern "C" void procWolfChainWait__9daAlink_cFv();
extern "C" void procWolfDigInit__9daAlink_cFv();
extern "C" void procWolfDig__9daAlink_cFv();
extern "C" void procWolfDigThroughInit__9daAlink_cFi();
extern "C" void procWolfDigThrough__9daAlink_cFv();
extern "C" void setSmellSave__9daAlink_cFv();
extern "C" void procWolfGetSmellInit__9daAlink_cFv();
extern "C" void procWolfGetSmell__9daAlink_cFv();
extern "C" void setArcName__9daAlink_cFi();
extern "C" void setShieldArcName__9daAlink_cFv();
extern "C" void setOriginalHeap__9daAlink_cFPP10JKRExpHeapUl();
extern "C" void setClothesChange__9daAlink_cFi();
extern "C" void setShieldChange__9daAlink_cFv();
extern "C" void loadModelDVD__9daAlink_cFv();
extern "C" void setShieldModel__9daAlink_cFv();
extern "C" void loadShieldModelDVD__9daAlink_cFv();
extern "C" void changeModelDataDirect__9daAlink_cFi();
extern "C" void changeModelDataDirectWolf__9daAlink_cFi();
extern "C" void initStatusWindow__9daAlink_cFv();
extern "C" void statusWindowExecute__9daAlink_cFPC4cXyzs();
extern "C" void statusWindowDraw__9daAlink_cFv();
extern "C" void resetStatusWindow__9daAlink_cFv();
extern "C" void __ct__12daAlinkHIO_cFv();
extern "C" void __dt__17daAlinkHIO_wolf_cFv();
extern "C" void __dt__16daAlinkHIO_cut_cFv();
extern "C" void __dt__12daAlinkHIO_cFv();
extern "C" void __dt__8dEyeHL_cFv();
extern "C" void __dt__18daPy_sightPacket_cFv();
extern "C" void __dt__16daPy_frameCtrl_cFv();
extern "C" void __ct__16daPy_frameCtrl_cFv();
extern "C" void __defctor__14daPy_anmHeap_cFv();
extern "C" void __dt__19mDoExt_AnmRatioPackFv();
extern "C" void __ct__19mDoExt_AnmRatioPackFv();
extern "C" void __dt__16dBgS_LinkRoofChkFv();
extern "C" void __dt__15dBgS_LinkGndChkFv();
extern "C" void __dt__13dBgS_LinkAcchFv();
extern "C" void __ct__8dCcD_CpsFv();
extern "C" void __ct__8dCcD_CylFv();
extern "C" void __dt__9cCcD_SttsFv();
extern "C" void __ct__16daPy_actorKeep_cFv();
extern "C" void onNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2();
extern "C" void offNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0();
extern "C" static void mDoAud_seStartLevel__FUlPC3VecUlSc();
extern "C" void checkEndResetFlg2__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG2();
extern "C" static void dComIfGp_setBottleStatus__FUcUc();
extern "C" void getSumouMode__9daPy_py_cCFv();
extern "C" void checkNoResetFlg3__9daPy_py_cCFQ29daPy_py_c9daPy_FLG3();
extern "C" void onCondition__11dEvt_info_cFUs();
extern "C" void __ct__8cM3dGPlaFv();
extern "C" void offCondition__11dEvt_info_cFUs();
extern "C" void checkShieldGet__9daPy_py_cFv();
extern "C" static void fopAcM_onSwitch__FPC10fopAc_ac_ci();
extern "C" static void dComIfGs_isItemFirstBit__FUc();
extern "C" static void dStage_stagInfo_GetSaveTbl__FP21stage_stag_info_class();
extern "C" static void dComIfGp_getStage__Fv();
extern "C" void checkEquipHeavyBoots__9daPy_py_cCFv();
extern "C" void fopAcM_GetName__FPv();
extern "C" void onNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0();
extern "C" void isOrderOK__14dEvt_control_cFv();
extern "C" static void dComIfGp_getEvent__Fv();
extern "C" static void dComIfGp_checkPlayerStatus0__FiUl();
extern "C" static void dComIfGp_checkPlayerStatus1__FiUl();
extern "C" void checkEndResetFlg1__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG1();
extern "C" static void dComIfGp_getEventManager__Fv();
extern "C" void offNoResetFlg1__9daPy_py_cFQ29daPy_py_c9daPy_FLG1();
extern "C" void offNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2();
extern "C" void setSpecialDemoType__11daPy_demo_cFv();
extern "C" void checkCommandCatch__11dEvt_info_cFv();
extern "C" void dComIfGs_isEventBit__FUs();
extern "C" void checkWolf__9daPy_py_cCFv();
extern "C" void checkSwordGet__9daPy_py_cFv();
extern "C" void checkResetFlg0__9daPy_py_cCFQ29daPy_py_c10daPy_RFLG0();
extern "C" void ChkGroundHit__9dBgS_AcchCFv();
extern "C" void checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0();
extern "C" static void dComIfGp_getPlayerCameraID__Fi();
extern "C" static void dComIfGp_event_chkEventFlag__FUs();
extern "C" void checkCommandDoor__11dEvt_info_cFv();
extern "C" static void dComIfGp_evmng_getMyStaffId__FPCcP10fopAc_ac_ci();
extern "C" static void dComIfGp_event_runCheck__Fv();
extern "C" void checkNoResetFlg2__9daPy_py_cCFQ29daPy_py_c9daPy_FLG2();
extern "C" void checkMagneBootsOn__9daPy_py_cCFv();
extern "C" void dComIfGp_getHorseActor__Fv();
extern "C" void checkBoarSingleBattle__9daPy_py_cCFv();
extern "C" void checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0();
extern "C" bool getMidnaAtnPos__9daPy_py_cCFv();
extern "C" void setMidnaMsgNum__9daPy_py_cFP10fopAc_ac_cUs();
extern "C" void getModelMtx__9daPy_py_cFv();
extern "C" void getInvMtx__9daPy_py_cFv();
extern "C" void getShadowTalkAtnPos__9daPy_py_cFv();
extern "C" void getLeftItemMatrix__9daPy_py_cFv();
extern "C" void getRightItemMatrix__9daPy_py_cFv();
extern "C" void getLeftHandMatrix__9daPy_py_cFv();
extern "C" void getRightHandMatrix__9daPy_py_cFv();
extern "C" void getLinkBackBone1Matrix__9daPy_py_cFv();
extern "C" void getWolfMouthMatrix__9daPy_py_cFv();
extern "C" void getWolfBackbone2Matrix__9daPy_py_cFv();
extern "C" bool getBottleMtx__9daPy_py_cFv();
extern "C" bool checkPlayerGuard__9daPy_py_cCFv();
extern "C" bool checkAutoJump__9daPy_py_cCFv();
extern "C" bool checkSideStep__9daPy_py_cCFv();
extern "C" bool checkWolfTriggerJump__9daPy_py_cCFv();
extern "C" bool checkGuardBreakMode__9daPy_py_cCFv();
extern "C" bool checkLv3Slide__9daPy_py_cCFv();
extern "C" bool checkWolfHowlDemoMode__9daPy_py_cCFv();
extern "C" bool checkChainBlockPushPull__9daPy_py_cFv();
extern "C" bool checkElecDamage__9daPy_py_cCFv();
extern "C" bool checkEmptyBottleSwing__9daPy_py_cCFv();
extern "C" bool checkBottleSwingMode__9daPy_py_cCFv();
extern "C" bool checkHawkWait__9daPy_py_cCFv();
extern "C" bool checkGoatThrow__9daPy_py_cCFv();
extern "C" bool checkGoatThrowAfter__9daPy_py_cCFv();
extern "C" bool checkWolfTagLockJump__9daPy_py_cCFv();
extern "C" bool checkWolfTagLockJumpLand__9daPy_py_cCFv();
extern "C" bool checkWolfRope__9daPy_py_cFv();
extern "C" bool checkWolfRopeHang__9daPy_py_cCFv();
extern "C" bool checkRollJump__9daPy_py_cCFv();
extern "C" bool checkGoronRideWait__9daPy_py_cCFv();
extern "C" bool checkWolfChain__9daPy_py_cCFv();
extern "C" bool checkWolfWait__9daPy_py_cCFv();
extern "C" bool checkWolfJumpAttack__9daPy_py_cCFv();
extern "C" bool checkWolfRSit__9daPy_py_cCFv();
extern "C" bool checkBubbleFly__9daPy_py_cCFv();
extern "C" bool checkBottleDrinkEnd__9daPy_py_cCFv();
extern "C" bool checkWolfDig__9daPy_py_cCFv();
extern "C" bool checkCutCharge__9daPy_py_cCFv();
extern "C" bool checkCutTurnCharge__9daPy_py_cCFv();
extern "C" bool checkCutLargeJumpCharge__9daPy_py_cCFv();
extern "C" bool getBokoFlamePos__9daPy_py_cFP4cXyz();
extern "C" bool checkComboCutTurn__9daPy_py_cCFv();
extern "C" bool checkClimbMove__9daPy_py_cCFv();
extern "C" bool checkGrassWhistle__9daPy_py_cCFv();
extern "C" bool checkBoarRun__9daPy_py_cCFv();
extern "C" bool checkFmChainPut__9daPy_py_cCFv();
extern "C" bool checkHorseElecDamage__9daPy_py_cCFv();
extern "C" void getBaseAnimeFrameRate__9daPy_py_cCFv();
extern "C" void getBaseAnimeFrame__9daPy_py_cCFv();
extern "C" void setAnimeFrame__9daPy_py_cFf();
extern "C" bool checkWolfLock__9daPy_py_cCFP10fopAc_ac_c();
extern "C" bool cancelWolfLock__9daPy_py_cFP10fopAc_ac_c();
extern "C" s32 getItemID__9daPy_py_cCFv();
extern "C" bool exchangeGrabActor__9daPy_py_cFP10fopAc_ac_c();
extern "C" bool setForceGrab__9daPy_py_cFP10fopAc_ac_cii();
extern "C" void setForcePutPos__9daPy_py_cFRC4cXyz();
extern "C" bool checkPlayerNoDraw__9daPy_py_cFv();
extern "C" bool checkRopeTag__9daPy_py_cFv();
extern "C" void voiceStart__9daPy_py_cFUl();
extern "C" void seStartOnlyReverb__9daPy_py_cFUl();
extern "C" void seStartOnlyReverbLevel__9daPy_py_cFUl();
extern "C" void setOutPower__9daPy_py_cFfsi();
extern "C" void setGrabCollisionOffset__9daPy_py_cFffP13cBgS_PolyInfo();
extern "C" void onMagneGrab__9daPy_py_cFff();
extern "C" bool getModelJointMtx__9daPy_py_cFUs();
extern "C" bool getHeadMtx__9daPy_py_cFv();
extern "C" bool setHookshotCarryOffset__9daPy_py_cFUiPC4cXyz();
extern "C" bool checkIronBallReturn__9daPy_py_cCFv();
extern "C" bool checkIronBallGroundStop__9daPy_py_cCFv();
extern "C" bool checkSingleBoarBattleSecondBowReady__9daPy_py_cCFv();
extern "C" bool checkPointSubWindowMode__9daPy_py_cCFv();
extern "C" void setClothesChange__9daPy_py_cFi();
extern "C" void setPlayerPosAndAngle__9daPy_py_cFPA4_f();
extern "C" void setPlayerPosAndAngle__9daPy_py_cFPC4cXyzPC5csXyz();
extern "C" void setPlayerPosAndAngle__9daPy_py_cFPC4cXyzsi();
extern "C" bool setThrowDamage__9daPy_py_cFsffiii();
extern "C" bool checkSetNpcTks__9daPy_py_cFP4cXyzii();
extern "C" bool setRollJump__9daPy_py_cFffs();
extern "C" void playerStartCollisionSE__9daPy_py_cFUlUl();
extern "C" void changeTextureAnime__9daPy_py_cFUsUsi();
extern "C" void cancelChangeTextureAnime__9daPy_py_cFv();
extern "C" void cancelDungeonWarpReadyNeck__9daPy_py_cFv();
extern "C" void onSceneChangeArea__9daPy_py_cFUcUcP10fopAc_ac_c();
extern "C" void onSceneChangeAreaJump__9daPy_py_cFUcUcP10fopAc_ac_c();
extern "C" void onSceneChangeDead__9daPy_py_cFUci();
extern "C" bool getSpinnerActor__9daPy_py_cFv();
extern "C" bool checkHorseRideNotReady__9daPy_py_cCFv();
extern "C" bool checkArrowChargeEnd__9daPy_py_cCFv();
extern "C" void getSearchBallScale__9daPy_py_cCFv();
extern "C" bool checkFastShotTime__9daPy_py_cFv();
extern "C" bool checkNoEquipItem__9daPy_py_cCFv();
extern "C" bool checkFireMaterial__9daPy_py_cCFv();
extern "C" bool checkKandelaarSwing__9daPy_py_cCFi();
extern "C" bool getBoardCutTurnOffsetAngleY__9daPy_py_cCFv();
extern "C" void getMagneHitPos__9daPy_py_cFv();
extern "C" void getMagneBootsTopVec__9daPy_py_cFv();
extern "C" bool checkUseKandelaar__9daPy_py_cFi();
extern "C" void setDkCaught__9daPy_py_cFP10fopAc_ac_c();
extern "C" void onPressedDamage__9daPy_py_cFRC4cXyzs();
extern "C" bool checkPriActorOwn__9daPy_py_cCFPC10fopAc_ac_c();
extern "C" bool onWolfEnemyBiteAll__9daPy_py_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2();
extern "C" bool checkWolfEnemyBiteAllOwn__9daPy_py_cCFPC10fopAc_ac_c();
extern "C" void setWolfEnemyHangBiteAngle__9daPy_py_cFs();
extern "C" void setKandelaarMtx__9daPy_py_cFPA4_fii();
extern "C" bool getStickAngleFromPlayerShape__9daPy_py_cCFPs();
extern "C" bool checkSpinnerPathMove__9daPy_py_cFv();
extern "C" bool checkSpinnerTriggerAttack__9daPy_py_cFv();
extern "C" void onSpinnerPathForceRemove__9daPy_py_cFv();
extern "C" bool getIronBallBgHit__9daPy_py_cCFv();
extern "C" bool getIronBallCenterPos__9daPy_py_cFv();
extern "C" bool checkCanoeFishingGetLeft__9daPy_py_cCFv();
extern "C" bool checkCanoeFishingGetRight__9daPy_py_cCFv();
extern "C" bool checkBeeChildDrink__9daPy_py_cCFv();
extern "C" void skipPortalObjWarp__9daPy_py_cFv();
extern "C" bool checkTreasureRupeeReturn__9daPy_py_cCFi();
extern "C" void setSumouReady__9daPy_py_cFP10fopAc_ac_c();
extern "C" bool checkAcceptDungeonWarpAlink__9daPy_py_cFi();
extern "C" bool getSumouCounter__9daPy_py_cCFv();
extern "C" bool checkSumouWithstand__9daPy_py_cCFv();
extern "C" void cancelGoronThrowEvent__9daPy_py_cFv();
extern "C" void setSumouGraspCancelCount__9daPy_py_cFi();
extern "C" void setSumouPushBackDirection__9daPy_py_cFs();
extern "C" void setSumouLoseHeadUp__9daPy_py_cFv();
extern "C" void getGiantPuzzleAimAngle__9daPy_py_cCFv();
extern "C" void setGoronSideMove__9daPy_py_cFP10fopAc_ac_c();
extern "C" void setCargoCarry__9daPy_py_cFP10fopAc_ac_c();
extern "C" bool getDpdFarFlg__9daPy_py_cCFv();
extern "C" bool getHookshotTopPos__9daPy_py_cFv();
extern "C" bool checkHookshotReturnMode__9daPy_py_cCFv();
extern "C" bool checkHookshotShootReturnMode__9daPy_py_cCFv();
extern "C" bool checkOctaIealHang__9daPy_py_cCFv();
extern "C" void cancelOctaIealHang__9daPy_py_cFv();
extern "C" void cancelDragonHangBackJump__9daPy_py_cFv();
extern "C" void setOctaIealWildHang__9daPy_py_cFv();
extern "C" bool checkDragonHangRide__9daPy_py_cCFv();
extern "C" void changeDragonActor__9daPy_py_cFP10fopAc_ac_c();
extern "C" bool getClothesChangeWaitTimer__9daPy_py_cCFv();
extern "C" bool getShieldChangeWaitTimer__9daPy_py_cCFv();
extern "C" bool getSwordChangeWaitTimer__9daPy_py_cCFv();
extern "C" bool checkMetamorphose__9daPy_py_cCFv();
extern "C" bool checkWolfDownAttackPullOut__9daPy_py_cCFv();
extern "C" bool checkBootsOrArmorHeavy__9daPy_py_cCFv();
extern "C" s32 getBottleOpenAppearItem__9daPy_py_cCFv();
extern "C" bool checkItemSwordEquip__9daPy_py_cCFv();
extern "C" void getSinkShapeOffset__9daPy_py_cCFv();
extern "C" bool checkSinkDead__9daPy_py_cCFv();
extern "C" bool checkHorseStart__9daPy_py_cFv();
extern "C" bool getWolfHowlMgrP__9daPy_py_cFv();
extern "C" bool checkWolfHowlSuccessAnime__9daPy_py_cCFv();
extern "C" bool checkCopyRodTopUse__9daPy_py_cFv();
extern "C" bool checkCopyRodEquip__9daPy_py_cCFv();
extern "C" bool checkCutJumpMode__9daPy_py_cCFv();
extern "C" void getZeldaActor__9daHorse_cFv();
extern "C" static void dComIfGp_getDoStatus__Fv();
extern "C" void __ct__4cXyzFfff();
extern "C" static void dMeter2Info_offUseButton__Fi();
extern "C" void setLinkState__14Z2CreatureLinkFUc();
extern "C" static void dComIfGs_getRupee__Fv();
extern "C" static void dComIfGp_setItemRupeeCount__Fl();
extern "C" static void dMeter2Info_setFloatingMessage__FUssb();
extern "C" void onForcePanic__9daMidna_cFv();
extern "C" void checkForceNormalColor__9daMidna_cCFv();
extern "C" void checkForceTiredColor__9daMidna_cCFv();
extern "C" void checkMidnaTired__9daMidna_cFv();
extern "C" void onNoServiceWait__9daMidna_cFv();
extern "C" void setControllActorData__8daCrod_cFv();
extern "C" void func_80141ACC();
extern "C" void func_80141AE8();
extern "C" void __sinit_d_a_alink_cpp();
extern "C" static void func_801446D4();
extern "C" static void func_801446DC();
extern "C" static void func_801446E4();
extern "C" static void func_801446EC();
extern "C" static void func_801446F4();
extern "C" static void func_801446FC();
extern "C" static void func_80144704();
extern "C" static void func_8014470C();
extern "C" static void func_80144714();
extern "C" static void func_8014471C();
extern "C" extern u8 const m__20daAlinkHIO_cutNmV_c0[32];
extern "C" extern u8 const m__20daAlinkHIO_cutNmL_c0[32];
extern "C" extern u8 const m__20daAlinkHIO_cutNmR_c0[32];
extern "C" extern u8 const m__21daAlinkHIO_cutNmSL_c0[32];
extern "C" extern u8 const m__21daAlinkHIO_cutNmSR_c0[32];
extern "C" extern u8 const m__20daAlinkHIO_cutFnL_c0[44];
extern "C" extern u8 const m__20daAlinkHIO_cutFnV_c0[44];
extern "C" extern u8 const m__20daAlinkHIO_cutFnS_c0[44];
extern "C" extern u8 const m__21daAlinkHIO_cutFnSl_c0[44];
extern "C" extern u8 const m__21daAlinkHIO_cutFnSm_c0[44];
extern "C" extern u8 const m__20daAlinkHIO_cutFnR_c0[44];
extern "C" extern u8 const m__21daAlinkHIO_hoCutLA_c0[32];
extern "C" extern u8 const m__21daAlinkHIO_hoCutLB_c0[32];
extern "C" extern u8 const m__21daAlinkHIO_hoCutRA_c0[32];
extern "C" extern u8 const m__21daAlinkHIO_hoCutRB_c0[32];
extern "C" extern u8 const m__20daAlinkHIO_cutDaL_c0[28];
extern "C" extern u8 const m__20daAlinkHIO_cutDaR_c0[28];
extern "C" extern u8 const m__25daAlinkHIO_cutDaCharge_c0[28];
extern "C" extern u8 const m__21daAlinkHIO_gAtKick_c0[36];
extern "C" extern u8 const m__21daAlinkHIO_huLight_c0[28];
extern "C" extern u8 const m__21daAlinkHIO_zwLight_c0[28];
extern "C" extern u8 const m__21daAlinkHIO_wlLight_c0[28];
extern "C" extern u8 const m__23daAlinkHIO_wlDamHuge_c0[108];
extern "C" extern u8 const m__22daAlinkHIO_wlAtWaLr_c0[60];
extern "C" extern u8 const m__22daAlinkHIO_wlAtWaSc_c0[60];
extern "C" extern u8 const m__22daAlinkHIO_wlAtWaTl_c0[60];
extern "C" extern u8 const m__20daAlinkHIO_wlBall_c0[56];
extern "C" extern u8 const l_worldChangeEventName[16];
extern "C" extern u8 const l_wolfWorldChangeEventName[21 + 3 /* padding */];
extern "C" extern u8 const l_defaultGetEventName[16];
extern "C" extern u8 const l_crawlStartFrontOffset[12];
extern "C" extern u8 const l_crawlBackOffset[12];
extern "C" extern u8 const l_wolfLieFrontUpOffset[12];
extern "C" extern u8 const l_wolfLieBackUpOffset[12];
extern "C" extern u8 const l_crawlStandUpOffset[12];
extern "C" extern u8 const l_wolfLieStandUpOffset[12];
extern "C" extern u8 const l_wolfLieTopUpOffset[12];
extern "C" extern u8 const l_crawlSideOffset[12];
extern "C" extern u8 const l_wolfLieSideOffset[12];
extern "C" extern u8 const l_crawlLSideOffset[12];
extern "C" extern u8 const l_crawlRSideOffset[12];
extern "C" extern u8 const l_crawlLSideFrontOffset[12];
extern "C" extern u8 const l_crawlRSideFrontOffset[12];
extern "C" extern u8 const l_crawlMinSideOffset[12];
extern "C" extern u8 const l_swordTopLocalN[12];
extern "C" extern u8 const l_swordTopLocalM[12];
extern "C" extern u8 const m_mainBckShield__9daAlink_c[80];
extern "C" extern u8 const m_mainBckSword__9daAlink_c[20];
extern "C" extern u8 const m_mainBckFishing__9daAlink_c[112];
extern "C" extern u8 const data_80391740[20];
extern "C" extern u8 const data_80391754[20];
extern "C" extern u8 const data_80391768[20];
extern "C" extern u8 const data_8039177C[20];
extern "C" extern u8 const data_80391790[20];
extern "C" extern u8 const data_803917A4[20];
extern "C" extern u8 const data_803917B8[20];
extern "C" extern u8 const data_803917CC[20];
extern "C" extern u8 const data_803917E0[20];
extern "C" extern u8 const data_803917F4[20];
extern "C" extern u8 const data_80391808[80];
extern "C" extern u8 const data_80391858[96];
extern "C" extern u8 const m_handLeftOutSidePos__9daAlink_c[12];
extern "C" extern u8 const m_handRightOutSidePos__9daAlink_c[12];
extern "C" extern u8 const m_handLeftInSidePos__9daAlink_c[12];
extern "C" extern u8 const m_handRightInSidePos__9daAlink_c[12];
extern "C" extern u8 const data_80391918[12];
extern "C" extern u8 const data_80391924[12];
extern "C" extern u8 const data_80391930[12];
extern "C" extern u8 const data_8039193C[12];
extern "C" extern u8 const data_80391948[12];
extern "C" extern u8 const data_803919A8[48];
extern "C" extern u8 const data_80391A38[12];
extern "C" extern u8 const data_80391A44[12];
extern "C" extern u8 const data_80391B8C[20];
extern "C" extern u8 const data_80391BA0[12];
extern "C" extern u8 const data_80391BC4[12];
extern "C" extern u8 const data_80391BD0[12];
extern "C" extern u8 const data_80391BDC[12];
extern "C" extern u8 const data_80391BE8[12];
extern "C" extern u8 const data_80391BF4[12];
extern "C" extern u8 const data_80391C00[12];
extern "C" extern u8 const data_80391C0C[12];
extern "C" extern u8 const data_80391C18[12];
extern "C" extern u8 const data_80391C24[12];
extern "C" extern u8 const data_80391C3C[12];
extern "C" extern u8 const data_80391C48[12];
extern "C" extern u8 const data_80391C54[12];
extern "C" extern u8 const data_80391C60[12];
extern "C" extern u8 const data_80391C6C[12];
extern "C" extern u8 const data_80391C78[12];
extern "C" extern u8 const data_80391C84[24];
extern "C" extern u8 const data_80391C9C[48];
extern "C" extern u8 const data_80391CCC[12];
extern "C" extern u8 const data_80391CD8[72];
extern "C" extern u8 const data_80391D20[24];
extern "C" extern u8 const data_80391D60[12];
extern "C" extern u8 const data_80391D6C[12];
extern "C" extern u8 const data_80391D78[12];
extern "C" extern u8 const data_80391DF4[12];
extern "C" extern u8 const data_80391E00[12];
extern "C" extern u8 const data_80391E0C[12];
extern "C" extern u8 const data_80391EA0[32];
extern "C" extern u8 const data_80391ED8[12];
extern "C" extern u8 const data_80391EE4[12];
extern "C" extern u8 const data_80391EF0[12];
extern "C" extern u8 const data_80391EFC[12];
extern "C" extern u8 const data_80391F08[12];
extern "C" extern u8 const data_80391F14[12];
extern "C" extern u8 const data_80391F20[12];
extern "C" extern u8 const data_80391F44[12];
extern "C" extern u8 const data_80391F50[12];
extern "C" extern u8 const data_80391F5C[12];
extern "C" extern u8 const data_80391F68[12];
extern "C" extern u8 const data_80391F74[12];
extern "C" extern u8 const data_80391F80[12];
extern "C" extern u8 const data_80391F8C[12];
extern "C" extern u8 const data_80391F98[12];
extern "C" extern u8 const data_80391FA4[12];
extern "C" extern u8 const data_80391FB0[12];
extern "C" extern u8 const data_80391FBC[12];
extern "C" extern u8 const data_80391FC8[12];
extern "C" extern u8 const data_80391FD4[12];
extern "C" extern u8 const data_80391FE0[12];
extern "C" extern u8 const data_80391FEC[12];
extern "C" extern u8 const data_80391FF8[12];
extern "C" extern u8 const data_80392004[12];
extern "C" extern u8 const data_80392010[12];
extern "C" extern u8 const data_80392028[12];
extern "C" extern u8 const lit_69600[12];
extern "C" extern u8 const lit_69683[12];
extern "C" extern u8 const lit_71887[12];
extern "C" extern u8 const lit_71911[12];
extern "C" extern u8 const lit_74273[12];
extern "C" extern u8 const lit_74748[12];
extern "C" extern u8 const data_80392088[12];
extern "C" extern char const* const d_a_d_a_alink__stringBase0;
extern "C" extern void* d_a_d_a_alink__lit_4422[3];
extern "C" extern void* d_a_d_a_alink__lit_4423[3];
extern "C" extern void* d_a_d_a_alink__lit_4424[3];
extern "C" extern void* d_a_d_a_alink__lit_4425[3];
extern "C" extern void* d_a_d_a_alink__lit_4426[3];
extern "C" extern void* d_a_d_a_alink__lit_4427[3];
extern "C" extern void* d_a_d_a_alink__lit_4428[3];
extern "C" extern void* d_a_d_a_alink__lit_4429[3];
extern "C" extern void* d_a_d_a_alink__lit_4430[3];
extern "C" extern void* d_a_d_a_alink__lit_4431[3];
extern "C" extern void* d_a_d_a_alink__lit_4432[3];
extern "C" extern void* d_a_d_a_alink__lit_4433[3];
extern "C" extern void* d_a_d_a_alink__lit_4434[3];
extern "C" extern void* d_a_d_a_alink__lit_4435[3];
extern "C" extern void* d_a_d_a_alink__lit_4436[3];
extern "C" extern void* d_a_d_a_alink__lit_4437[3];
extern "C" extern void* d_a_d_a_alink__lit_4438[3];
extern "C" extern void* d_a_d_a_alink__lit_4439[3];
extern "C" extern void* d_a_d_a_alink__lit_4440[3];
extern "C" extern void* d_a_d_a_alink__lit_4441[3];
extern "C" extern void* d_a_d_a_alink__lit_4442[3];
extern "C" extern void* d_a_d_a_alink__lit_4443[3];
extern "C" extern void* d_a_d_a_alink__lit_4444[3];
extern "C" extern void* d_a_d_a_alink__lit_4445[3];
extern "C" extern void* d_a_d_a_alink__lit_4446[3];
extern "C" extern void* d_a_d_a_alink__lit_4447[3];
extern "C" extern void* d_a_d_a_alink__lit_4448[3];
extern "C" extern void* d_a_d_a_alink__lit_4449[3];
extern "C" extern void* d_a_d_a_alink__lit_4450[3];
extern "C" extern void* d_a_d_a_alink__lit_4451[3];
extern "C" extern void* d_a_d_a_alink__lit_4452[3];
extern "C" extern void* d_a_d_a_alink__lit_4453[3];
extern "C" extern void* d_a_d_a_alink__lit_4454[3];
extern "C" extern void* d_a_d_a_alink__lit_4455[3];
extern "C" extern void* d_a_d_a_alink__lit_4456[3];
extern "C" extern void* d_a_d_a_alink__lit_4457[3];
extern "C" extern void* d_a_d_a_alink__lit_4458[3];
extern "C" extern void* d_a_d_a_alink__lit_4459[3];
extern "C" extern void* lit_4460[3];
extern "C" extern void* lit_4461[3];
extern "C" extern void* lit_4462[3];
extern "C" extern void* lit_4463[3];
extern "C" extern void* lit_4464[3];
extern "C" extern void* lit_4465[3];
extern "C" extern void* lit_4466[3];
extern "C" extern void* lit_4467[3];
extern "C" extern void* lit_4468[3];
extern "C" extern void* lit_4469[3];
extern "C" extern void* lit_4470[3];
extern "C" extern void* lit_4471[3];
extern "C" extern void* lit_4472[3];
extern "C" extern void* lit_4473[3];
extern "C" extern void* lit_4474[3];
extern "C" extern void* lit_4475[3];
extern "C" extern void* lit_4476[3];
extern "C" extern void* lit_4477[3];
extern "C" extern void* d_a_d_a_alink__lit_4478[3];
extern "C" extern void* d_a_d_a_alink__lit_4479[3];
extern "C" extern void* d_a_d_a_alink__lit_4480[3];
extern "C" extern void* d_a_d_a_alink__lit_4481[3];
extern "C" extern void* d_a_d_a_alink__lit_4482[3];
extern "C" extern void* d_a_d_a_alink__lit_4483[3];
extern "C" extern void* d_a_d_a_alink__lit_4484[3];
extern "C" extern void* d_a_d_a_alink__lit_4485[3];
extern "C" extern void* d_a_d_a_alink__lit_4486[3];
extern "C" extern void* d_a_d_a_alink__lit_4487[3];
extern "C" extern void* d_a_d_a_alink__lit_4488[3];
extern "C" extern void* d_a_d_a_alink__lit_4489[3];
extern "C" extern void* d_a_d_a_alink__lit_4490[3];
extern "C" extern void* d_a_d_a_alink__lit_4491[3];
extern "C" extern void* d_a_d_a_alink__lit_4492[3];
extern "C" extern void* d_a_d_a_alink__lit_4493[3];
extern "C" extern void* d_a_d_a_alink__lit_4494[3];
extern "C" extern void* d_a_d_a_alink__lit_4495[3];
extern "C" extern void* d_a_d_a_alink__lit_4496[3];
extern "C" extern void* d_a_d_a_alink__lit_4497[3];
extern "C" extern void* d_a_d_a_alink__lit_4498[3];
extern "C" extern void* d_a_d_a_alink__lit_4499[3];
extern "C" extern void* d_a_d_a_alink__lit_4500[3];
extern "C" extern void* d_a_d_a_alink__lit_4501[3];
extern "C" extern void* d_a_d_a_alink__lit_4502[3];
extern "C" extern void* d_a_d_a_alink__lit_4503[3];
extern "C" extern void* d_a_d_a_alink__lit_4504[3];
extern "C" extern void* d_a_d_a_alink__lit_4505[3];
extern "C" extern void* d_a_d_a_alink__lit_4506[3];
extern "C" extern void* d_a_d_a_alink__lit_4507[3];
extern "C" extern void* d_a_d_a_alink__lit_4508[3];
extern "C" extern void* d_a_d_a_alink__lit_4509[3];
extern "C" extern void* d_a_d_a_alink__lit_4510[3];
extern "C" extern void* d_a_d_a_alink__lit_4511[3];
extern "C" extern void* d_a_d_a_alink__lit_4512[3];
extern "C" extern void* d_a_d_a_alink__lit_4513[3];
extern "C" extern void* d_a_d_a_alink__lit_4514[3];
extern "C" extern void* d_a_d_a_alink__lit_4515[3];
extern "C" extern void* d_a_d_a_alink__lit_4516[3];
extern "C" extern void* d_a_d_a_alink__lit_4517[3];
extern "C" extern void* d_a_d_a_alink__lit_4518[3];
extern "C" extern void* d_a_d_a_alink__lit_4519[3];
extern "C" extern void* d_a_d_a_alink__lit_4520[3];
extern "C" extern void* d_a_d_a_alink__lit_4521[3];
extern "C" extern void* d_a_d_a_alink__lit_4522[3];
extern "C" extern void* d_a_d_a_alink__lit_4523[3];
extern "C" extern void* d_a_d_a_alink__lit_4524[3];
extern "C" extern void* d_a_d_a_alink__lit_4525[3];
extern "C" extern void* d_a_d_a_alink__lit_4526[3];
extern "C" extern void* d_a_d_a_alink__lit_4527[3];
extern "C" extern void* d_a_d_a_alink__lit_4528[3];
extern "C" extern void* d_a_d_a_alink__lit_4529[3];
extern "C" extern void* d_a_d_a_alink__lit_4530[3];
extern "C" extern void* d_a_d_a_alink__lit_4531[3];
extern "C" extern void* d_a_d_a_alink__lit_4532[3];
extern "C" extern void* d_a_d_a_alink__lit_4533[3];
extern "C" extern void* d_a_d_a_alink__lit_4534[3];
extern "C" extern void* d_a_d_a_alink__lit_4535[3];
extern "C" extern void* d_a_d_a_alink__lit_4536[3];
extern "C" extern void* d_a_d_a_alink__lit_4537[3];
extern "C" extern void* d_a_d_a_alink__lit_4538[3];
extern "C" extern void* d_a_d_a_alink__lit_4539[3];
extern "C" extern void* lit_4540[3];
extern "C" extern void* lit_4541[3];
extern "C" extern void* lit_4542[3];
extern "C" extern void* lit_4543[3];
extern "C" extern void* lit_4544[3];
extern "C" extern void* lit_4545[3];
extern "C" extern void* lit_4546[3];
extern "C" extern void* lit_4547[3];
extern "C" extern void* lit_4548[3];
extern "C" extern void* lit_4549[3];
extern "C" extern void* lit_4550[3];
extern "C" extern void* lit_4551[3];
extern "C" extern void* lit_4552[3];
extern "C" extern void* lit_4553[3];
extern "C" extern void* lit_4554[3];
extern "C" extern void* lit_4555[3];
extern "C" extern void* lit_4556[3];
extern "C" extern void* lit_4557[3];
extern "C" extern void* lit_4558[3];
extern "C" extern void* lit_4559[3];
extern "C" extern void* lit_4560[3];
extern "C" extern void* lit_4561[3];
extern "C" extern void* lit_4562[3];
extern "C" extern void* lit_4563[3];
extern "C" extern void* lit_4564[3];
extern "C" extern void* lit_4565[3];
extern "C" extern void* lit_4566[3];
extern "C" extern void* lit_4567[3];
extern "C" extern void* lit_4568[3];
extern "C" extern void* lit_4569[3];
extern "C" extern void* lit_4570[3];
extern "C" extern void* lit_4571[3];
extern "C" extern void* lit_4572[3];
extern "C" extern void* lit_4573[3];
extern "C" extern void* lit_4574[3];
extern "C" extern void* lit_4575[3];
extern "C" extern void* lit_4576[3];
extern "C" extern void* lit_4577[3];
extern "C" extern void* lit_4578[3];
extern "C" extern void* lit_4579[3];
extern "C" extern void* lit_4580[3];
extern "C" extern void* lit_4581[3];
extern "C" extern void* lit_4582[3];
extern "C" extern void* lit_4583[3];
extern "C" extern void* lit_4584[3];
extern "C" extern void* lit_4585[3];
extern "C" extern void* lit_4586[3];
extern "C" extern void* lit_4587[3];
extern "C" extern void* lit_4588[3];
extern "C" extern void* lit_4589[3];
extern "C" extern void* lit_4590[3];
extern "C" extern void* lit_4591[3];
extern "C" extern void* lit_4592[3];
extern "C" extern void* lit_4593[3];
extern "C" extern void* lit_4594[3];
extern "C" extern void* lit_4595[3];
extern "C" extern void* lit_4596[3];
extern "C" extern void* lit_4597[3];
extern "C" extern void* lit_4598[3];
extern "C" extern void* lit_4599[3];
extern "C" extern void* lit_4600[3];
extern "C" extern void* lit_4601[3];
extern "C" extern void* lit_4602[3];
extern "C" extern void* lit_4603[3];
extern "C" extern void* lit_4604[3];
extern "C" extern void* lit_4605[3];
extern "C" extern void* lit_4606[3];
extern "C" extern void* lit_4607[3];
extern "C" extern void* lit_4608[3];
extern "C" extern void* lit_4609[3];
extern "C" extern void* lit_4610[3];
extern "C" extern void* lit_4611[3];
extern "C" extern void* lit_4612[3];
extern "C" extern void* lit_4613[3];
extern "C" extern void* lit_4614[3];
extern "C" extern void* lit_4615[3];
extern "C" extern void* lit_4616[3];
extern "C" extern void* lit_4617[3];
extern "C" extern void* lit_4618[3];
extern "C" extern void* lit_4619[3];
extern "C" extern void* lit_4620[3];
extern "C" extern void* lit_4621[3];
extern "C" extern void* lit_4622[3];
extern "C" extern void* lit_4623[3];
extern "C" extern void* lit_4624[3];
extern "C" extern void* lit_4625[3];
extern "C" extern void* lit_4626[3];
extern "C" extern void* lit_4627[3];
extern "C" extern void* lit_4628[3];
extern "C" extern void* lit_4629[3];
extern "C" extern void* lit_4630[3];
extern "C" extern void* lit_4631[3];
extern "C" extern void* lit_4632[3];
extern "C" extern void* lit_4633[3];
extern "C" extern void* lit_4634[3];
extern "C" extern void* lit_4635[3];
extern "C" extern void* lit_4636[3];
extern "C" extern void* lit_4637[3];
extern "C" extern void* lit_4638[3];
extern "C" extern void* lit_4639[3];
extern "C" extern void* lit_4640[3];
extern "C" extern void* lit_4641[3];
extern "C" extern void* lit_4642[3];
extern "C" extern void* lit_4643[3];
extern "C" extern void* lit_4644[3];
extern "C" extern void* lit_4645[3];
extern "C" extern void* lit_4646[3];
extern "C" extern void* lit_4647[3];
extern "C" extern void* lit_4648[3];
extern "C" extern void* lit_4649[3];
extern "C" extern void* lit_4650[3];
extern "C" extern void* lit_4651[3];
extern "C" extern void* lit_4652[3];
extern "C" extern void* lit_4653[3];
extern "C" extern void* lit_4654[3];
extern "C" extern void* lit_4655[3];
extern "C" extern void* lit_4656[3];
extern "C" extern void* lit_4657[3];
extern "C" extern void* lit_4658[3];
extern "C" extern void* lit_4659[3];
extern "C" extern void* lit_4660[3];
extern "C" extern void* lit_4661[3];
extern "C" extern void* lit_4662[3];
extern "C" extern void* lit_4663[3];
extern "C" extern void* lit_4664[3];
extern "C" extern void* lit_4665[3];
extern "C" extern void* lit_4666[3];
extern "C" extern void* lit_4667[3];
extern "C" extern void* lit_4668[3];
extern "C" extern void* lit_4669[3];
extern "C" extern void* lit_4670[3];
extern "C" extern void* lit_4671[3];
extern "C" extern void* lit_4672[3];
extern "C" extern void* lit_4673[3];
extern "C" extern void* lit_4674[3];
extern "C" extern void* lit_4675[3];
extern "C" extern void* lit_4676[3];
extern "C" extern void* lit_4677[3];
extern "C" extern void* lit_4678[3];
extern "C" extern void* d_a_d_a_alink__lit_4679[3];
extern "C" extern void* d_a_d_a_alink__lit_4680[3];
extern "C" extern void* lit_4681[3];
extern "C" extern void* lit_4682[3];
extern "C" extern void* lit_4683[3];
extern "C" extern void* lit_4684[3];
extern "C" extern void* lit_4685[3];
extern "C" extern void* lit_4686[3];
extern "C" extern void* lit_4687[3];
extern "C" extern void* lit_4688[3];
extern "C" extern void* lit_4689[3];
extern "C" extern void* lit_4690[3];
extern "C" extern void* lit_4691[3];
extern "C" extern void* lit_4692[3];
extern "C" extern void* lit_4693[3];
extern "C" extern void* lit_4694[3];
extern "C" extern void* lit_4695[3];
extern "C" extern void* lit_4696[3];
extern "C" extern void* lit_4697[3];
extern "C" extern void* lit_4698[3];
extern "C" extern void* lit_4699[3];
extern "C" extern void* lit_4700[3];
extern "C" extern void* lit_4701[3];
extern "C" extern void* lit_4702[3];
extern "C" extern void* lit_4703[3];
extern "C" extern void* lit_4704[3];
extern "C" extern void* lit_4705[3];
extern "C" extern void* lit_4706[3];
extern "C" extern void* lit_4707[3];
extern "C" extern void* lit_4708[3];
extern "C" extern void* lit_4709[3];
extern "C" extern void* lit_4710[3];
extern "C" extern void* lit_4711[3];
extern "C" extern void* lit_4712[3];
extern "C" extern void* lit_4713[3];
extern "C" extern void* lit_4714[3];
extern "C" extern void* lit_4715[3];
extern "C" extern void* lit_4716[3];
extern "C" extern void* lit_4717[3];
extern "C" extern void* lit_4718[3];
extern "C" extern void* lit_4719[3];
extern "C" extern void* lit_4720[3];
extern "C" extern void* lit_4721[3];
extern "C" extern void* lit_4722[3];
extern "C" extern void* d_a_d_a_alink__lit_4723[3];
extern "C" extern void* d_a_d_a_alink__lit_4724[3];
extern "C" extern void* d_a_d_a_alink__lit_4725[3];
extern "C" extern void* d_a_d_a_alink__lit_4726[3];
extern "C" extern void* d_a_d_a_alink__lit_4727[3];
extern "C" extern void* d_a_d_a_alink__lit_4728[3];
extern "C" extern void* d_a_d_a_alink__lit_4729[3];
extern "C" extern void* d_a_d_a_alink__lit_4730[3];
extern "C" extern void* d_a_d_a_alink__lit_4731[3];
extern "C" extern void* d_a_d_a_alink__lit_4732[3];
extern "C" extern void* d_a_d_a_alink__lit_4733[3];
extern "C" extern void* d_a_d_a_alink__lit_4734[3];
extern "C" extern void* d_a_d_a_alink__lit_4735[3];
extern "C" extern void* d_a_d_a_alink__lit_4736[3];
extern "C" extern void* d_a_d_a_alink__lit_4737[3];
extern "C" extern void* d_a_d_a_alink__lit_4738[3];
extern "C" extern void* d_a_d_a_alink__lit_4739[3];
extern "C" extern void* d_a_d_a_alink__lit_4740[3];
extern "C" extern void* d_a_d_a_alink__lit_4741[3];
extern "C" extern void* d_a_d_a_alink__lit_4742[3];
extern "C" extern void* lit_4743[3];
extern "C" extern void* lit_4744[3];
extern "C" extern void* lit_4745[3];
extern "C" extern void* lit_4746[3];
extern "C" extern void* lit_4747[3];
extern "C" extern void* lit_4748[3];
extern "C" extern void* lit_4749[3];
extern "C" extern void* lit_4750[3];
extern "C" extern void* lit_4751[3];
extern "C" extern void* lit_4752[3];
extern "C" extern void* lit_4753[3];
extern "C" extern void* lit_4754[3];
extern "C" extern void* lit_4755[3];
extern "C" extern void* lit_4756[3];
extern "C" extern void* lit_4757[3];
extern "C" extern void* lit_4758[3];
extern "C" extern void* lit_4759[3];
extern "C" extern void* lit_4760[3];
extern "C" extern void* lit_4761[3];
extern "C" extern void* lit_4762[3];
extern "C" extern void* lit_4763[3];
extern "C" extern void* lit_4764[3];
extern "C" extern void* lit_4765[3];
extern "C" extern void* lit_4766[3];
extern "C" extern void* lit_4767[3];
extern "C" extern void* lit_4768[3];
extern "C" extern void* lit_4769[3];
extern "C" extern void* lit_4770[3];
extern "C" extern void* lit_4771[3];
extern "C" extern void* lit_4772[3];
extern "C" extern void* lit_4773[3];
extern "C" extern void* lit_4774[3];
extern "C" extern void* lit_4775[3];
extern "C" extern void* lit_4776[3];
extern "C" extern void* lit_4777[3];
extern "C" extern void* lit_4778[3];
extern "C" extern void* lit_4779[3];
extern "C" extern void* lit_4780[3];
extern "C" extern void* lit_4781[3];
extern "C" extern void* lit_4782[3];
extern "C" extern void* lit_4783[3];
extern "C" extern void* lit_4784[3];
extern "C" extern void* lit_4785[3];
extern "C" extern void* lit_4786[3];
extern "C" extern void* lit_4787[3];
extern "C" extern void* lit_4788[3];
extern "C" extern void* lit_4789[3];
extern "C" extern void* lit_4790[3];
extern "C" extern void* lit_4791[3];
extern "C" extern void* lit_4792[3];
extern "C" extern void* lit_4793[3];
extern "C" extern void* lit_4794[3];
extern "C" extern void* lit_4795[3];
extern "C" extern void* lit_4796[3];
extern "C" extern void* lit_4797[3];
extern "C" extern void* lit_4798[3];
extern "C" extern void* lit_4799[3];
extern "C" extern void* lit_4800[3];
extern "C" extern void* lit_4801[3];
extern "C" extern void* lit_4802[3];
extern "C" extern void* lit_4803[3];
extern "C" extern void* lit_4804[3];
extern "C" extern void* lit_4805[3];
extern "C" extern void* lit_4806[3];
extern "C" extern void* lit_4807[3];
extern "C" extern void* lit_4808[3];
extern "C" extern void* lit_4809[3];
extern "C" extern void* lit_4810[3];
extern "C" extern void* lit_4811[3];
extern "C" extern void* lit_4812[3];
extern "C" extern void* lit_4813[3];
extern "C" extern void* lit_4814[3];
extern "C" extern void* lit_4815[3];
extern "C" extern void* lit_4816[3];
extern "C" extern void* lit_4817[3];
extern "C" extern void* lit_4818[3];
extern "C" extern void* lit_4819[3];
extern "C" extern void* lit_4820[3];
extern "C" extern void* lit_4821[3];
extern "C" extern void* lit_4822[3];
extern "C" extern void* lit_4823[3];
extern "C" extern void* lit_4824[3];
extern "C" extern void* lit_4825[3];
extern "C" extern void* lit_4826[3];
extern "C" extern void* lit_4827[3];
extern "C" extern void* lit_4828[3];
extern "C" extern void* lit_4829[3];
extern "C" extern void* lit_4830[3];
extern "C" extern void* lit_4831[3];
extern "C" extern u8 l_cylSrc[68];
extern "C" extern u8 l_atCylSrc[68];
extern "C" extern u8 l_atCpsSrc[76];
extern "C" extern u8 data_803B2C40[13 + 3 /* padding */];
extern "C" extern u8 data_803B2C50[20];
extern "C" extern u8 data_803B2C64[20];
extern "C" extern u8 data_803B2C78[20];
extern "C" extern u8 data_803B2C8C[22 + 2 /* padding */];
extern "C" extern void* lit_39610[3];
extern "C" extern void* lit_39611[3];
extern "C" extern void* lit_39612[3];
extern "C" extern void* lit_39613[3];
extern "C" extern void* lit_39614[3];
extern "C" extern void* lit_39615[3];
extern "C" extern u8 data_803B2D34[12];
extern "C" extern u8 data_803B2D40[24];
extern "C" extern u8 data_803B2D58[36];
extern "C" extern u8 data_803B2D7C[12];
extern "C" extern void* g_profile_ALINK[12 + 9 /* padding */];
extern "C" extern void* __vt__16daPy_frameCtrl_c[3 + 21 /* padding */];
extern "C" extern void* __vt__8dEyeHL_c[3 + 15 /* padding */];
extern "C" extern void* __vt__16dBgS_LinkRoofChk[12];
extern "C" extern void* __vt__15dBgS_LinkGndChk[12];
extern "C" extern void* __vt__13dBgS_LinkAcch[9 + 9 /* padding */];
extern "C" extern void* __vt__9daPy_py_c[171];
extern "C" extern void* __vt__12daAlinkHIO_c[3 + 36 /* padding */];
extern "C" extern void* __vt__9daAlink_c[171];
extern "C" extern void* __vt__16daAlink_matAnm_c[4 + 3 /* padding */];
extern "C" extern void* __vt__15daAlink_sight_c[4];
extern "C" extern void* __vt__20daAlink_lockCursor_c[4];
extern "C" extern void* __vt__14daAlink_blur_c[5];
extern "C" extern void* __vt__29dAlink_bottleWaterPcallBack_c[5];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__Q29daAlink_c14hsChainShape_c[5 + 4 /* padding */];
extern "C" extern u8 lit_4410[12];
extern "C" extern u8 lit_4411[12];
extern "C" extern u8 lit_4412[12];
extern "C" extern u8 lit_4413[12];
extern "C" extern u8 l_lWaitBaseAnime[12];
extern "C" extern u8 lit_4414[12];
extern "C" extern u8 lit_4415[12];
extern "C" extern u8 lit_4416[12];
extern "C" extern u8 lit_4417[12];
extern "C" extern u8 lit_4418[12];
extern "C" extern u8 lit_4419[12];
extern "C" extern u8 l_sumouBaseAnimeSp[12];
extern "C" extern u8 lit_4420[12];
extern "C" extern u8 lit_4421[12];
extern "C" extern u8 lit_14255[12];
extern "C" extern u8 data_8042564C[12];
extern "C" extern u8 lit_14259[12];
extern "C" extern u8 data_80425664[12];
extern "C" extern u8 lit_14263[12];
extern "C" extern u8 data_8042567C[12];
extern "C" extern u8 lit_14267[12];
extern "C" extern u8 data_80425694[12];
extern "C" extern u8 lit_29722[12];
extern "C" extern u8 lit_50952[12];

//
// External References:
//

void mDoMtx_XYZrotM(f32 (*)[4], s16, s16, s16);
void mDoMtx_ZXYrotS(f32 (*)[4], s16, s16, s16);
void mDoMtx_ZXYrotM(f32 (*)[4], s16, s16, s16);
void mDoMtx_XrotS(f32 (*)[4], s16);
void mDoMtx_XrotM(f32 (*)[4], s16);
void mDoMtx_YrotS(f32 (*)[4], s16);
void mDoMtx_YrotM(f32 (*)[4], s16);
void mDoMtx_ZrotS(f32 (*)[4], s16);
void mDoMtx_ZrotM(f32 (*)[4], s16);
void mDoMtx_QuatConcat(Quaternion const*, Quaternion const*, Quaternion*);
void mDoMtx_MtxToRot(f32 const (*)[4], csXyz*);
void mDoExt_modelEntryDL(J3DModel*);
void mDoExt_getGameHeap();
void mDoExt_destroyExpHeap(JKRExpHeap*);
void mDoExt_setCurrentHeap(JKRHeap*);
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
void mDoLib_project(Vec*, Vec*);
void mDoLib_pos2camera(Vec*, Vec*);
void fopAc_IsActor(void*);
void fopAcIt_Executor(int (*)(void*, void*), void*);
void fopAcIt_Judge(void* (*)(void*, void*), void*);
void fopAcM_setStageLayer(void*);
void fopAcM_delete(fopAc_ac_c*);
void fopAcM_create(s16, u32, cXyz const*, int, csXyz const*, cXyz const*, s8);
void fopAcM_fastCreate(s16, u32, cXyz const*, int, csXyz const*, cXyz const*, s8, int (*)(void*),
                       void*);
void fopAcM_createChild(s16, unsigned int, u32, cXyz const*, int, csXyz const*, cXyz const*, s8,
                        int (*)(void*));
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
void fopAcM_seenActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);
void fopAcM_searchActorDistanceXZ2(fopAc_ac_c const*, fopAc_ac_c const*);
void fopAcM_orderTalkEvent(fopAc_ac_c*, fopAc_ac_c*, u16, u16);
void fopAcM_orderTalkItemBtnEvent(u16, fopAc_ac_c*, fopAc_ac_c*, u16, u16);
void fopAcM_orderDoorEvent(fopAc_ac_c*, fopAc_ac_c*, u16, u16);
void fopAcM_orderCatchEvent(fopAc_ac_c*, fopAc_ac_c*, u16, u16);
void fopAcM_orderOtherEvent(fopAc_ac_c*, char const*, u16, u16, u16);
void fopAcM_orderOtherEvent(fopAc_ac_c*, fopAc_ac_c*, char const*, u16, u16, u16);
void fopAcM_orderOtherEventId(fopAc_ac_c*, s16, u8, u16, u16, u16);
void fopAcM_orderTreasureEvent(fopAc_ac_c*, fopAc_ac_c*, u16, u16);
void fopAcM_getTalkEventPartner(fopAc_ac_c const*);
void fopAcM_getItemEventPartner(fopAc_ac_c const*);
void fopAcM_getEventPartner(fopAc_ac_c const*);
void fopAcM_createItemForPresentDemo(cXyz const*, int, u8, int, int, csXyz const*, cXyz const*);
void fopAcM_createItemForSimpleDemo(cXyz const*, int, int, csXyz const*, cXyz const*, f32, f32);
void fopAcM_setCarryNow(fopAc_ac_c*, int);
void fopAcM_cancelCarryNow(fopAc_ac_c*);
void fopAcM_getWaterY(cXyz const*, f32*);
void fpoAcM_relativePos(fopAc_ac_c const*, cXyz const*, cXyz*);
void fopAcM_getWaterStream(cXyz const*, cBgS_PolyInfo const&, cXyz*, int*, int);
void fopAcM_getPolygonAngle(cM3dGPla const*, s16);
void fopOvlpM_IsPeek();
void fopKyM_create(s16, int, cXyz*, cXyz*, int (*)(void*));
void fopKyM_createWpillar(cXyz const*, f32, int);
void fopMsgM_SearchByID(unsigned int);
void fopMsgM_messageSet(u32, u32);
void fpcM_IsCreating(unsigned int);
void fpcSch_JudgeByID(void*, void*);
void dStage_RoomCheck(cBgS_GndChk*);
void dStage_changeSceneExitId(cBgS_PolyInfo&, f32, u32, s8, s16);
void dStage_changeScene(int, f32, u32, s8, s16, int);
void dStage_restartRoom(u32, u32, int);
void dComIfGp_checkItemGet(u8, int);
void dComIfG_resLoad(request_of_phase_process_class*, char const*, JKRHeap*);
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
void dComIfGp_getReverb(int);
void dComIfGp_setNextStage(char const*, s16, s8, s8, f32, u32, int, s8, s16, int, int);
void dComIfGs_isOneZoneSwitch(int, int);
void dComIfGs_getMaxLifeGauge();
void dComIfGp_getSelectItem(int);
s32 dComIfGs_getBottleMax();
void dComIfGp_getSelectItemNum(int);
void dComIfGp_setSelectItemNum(int, s16);
void dComIfGp_addSelectItemNum(int, s16);
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&,
                        dKy_tevstr_c*, s16, f32, _GXTexObj*);
void dComIfGs_setSelectEquipClothes(u8);
void dComIfGs_getWarpStageName();
void dComIfGs_getWarpPlayerPos();
void dComIfGs_getWarpPlayerAngleY();
void dComIfGs_getWarpRoomNo();
void dComIfGs_Wolf_Change_Check();
void dComIfGs_PolyDamageOff_Check();
void dComIfGp_TargetWarpPt_set(u8);
void dComIfGp_TargetWarpPt_get();
void dComIfGp_TransportWarp_check();
void dEv_noFinishSkipProc(void*, int);
void dPath_GetRoomPath(int, int);
void dKyw_get_AllWind_vec(cXyz*, cXyz*, f32*);
void dBgS_CheckBWallPoly(cBgS_PolyInfo const&);
void dBgS_CheckBGroundPoly(cBgS_PolyInfo const&);
void dBgS_GetNY(cBgS_PolyInfo const&);
void execItemGet(u8);
void checkItemGet(u8, int);
void daNpcF_getPlayerInfoFromPlayerList(int, int, cXyz&, csXyz&);
void daPy_addCalcShort(s16*, s16, s16, s16, s16);
void dCam_getControledAngleY(camera_class*);
void dCam_getBody();
void d_GameOver_Create(u8);
void dKy_setLight_again();
void dKy_plight_set(LIGHT_INFLUENCE*);
void dKy_plight_cut(LIGHT_INFLUENCE*);
void dKy_Itemgetcol_chg_on();
void dKy_Sound_set(cXyz, int, unsigned int, int);
void dKy_SordFlush_set(cXyz, int);
void dKy_GxFog_tevstr_set(dKy_tevstr_c*);
void dKy_WolfEyeLight_set(cXyz*, f32, f32, f32, _GXColor*, f32, u8, u8);
void dKy_pol_efftype_get(cBgS_PolyInfo const*);
void dKy_pol_sound_get(cBgS_PolyInfo const*);
void dKy_pol_argument_get(cBgS_PolyInfo const*);
void dKy_TeachWind_existence_chk();
bool dKy_withwarp_capture_check();
void dKy_darkworld_check();
void dKy_shadow_mode_set(u8);
void dKy_shadow_mode_reset(u8);
void dMeter2Info_setShield(u8, bool);
void dPaneClass_showNullPane(J2DScreen*);
void cPhs_Reset(request_of_phase_process_class*);
void cM_rad2s(f32);
void cM_atan2s(f32, f32);
void cM_atan2f(f32, f32);
void cM_rnd();
void cM_rndF(f32);
void cM_rndFX(f32);
void cBgW_CheckBGround(f32);
void cBgW_CheckBRoof(f32);
void cBgW_CheckBWall(f32);
void cM3d_Len2dSqPntAndSegLine(f32, f32, f32, f32, f32, f32, f32*, f32*, f32*);
void cM3d_SignedLenPlaAndPos(cM3dGPla const*, Vec const*);
void cM3d_3PlaneCrossPos(cM3dGPla const&, cM3dGPla const&, cM3dGPla const&, Vec*);
void cLib_memCpy(void*, void const*, u32);
void cLib_addCalc(f32*, f32, f32, f32, f32);
void cLib_addCalcPos(cXyz*, cXyz const&, f32, f32, f32);
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
void cLib_chaseUC(u8*, u8, u8);
void cLib_chaseS(s16*, s16, s16);
void cLib_chaseF(f32*, f32, f32);
void cLib_chasePos(cXyz*, cXyz const&, f32);
void cLib_chasePosXZ(cXyz*, cXyz const&, f32);
void cLib_chaseAngleS(s16*, s16, s16);
void cLib_targetAngleY(Vec const*, Vec const*);
void cLib_distanceAngleS(s16, s16);
void JPASetRMtxTVecfromMtx(f32 const (*)[4], f32 (*)[4], JGeometry::TVec3__template0*);
void JPACalcKeyAnmValue(f32, u16, f32 const*);
void* operator new(u32);
void* operator new[](u32);
void* operator new[](u32, int);
void operator delete(void*);
void JMAEulerToQuat(s16, s16, s16, Quaternion*);

extern "C" void __dt__4cXyzFv();
extern "C" s32 getAtnActorID__9daPy_py_cCFv();
extern "C" void mDoMtx_XYZrotM__FPA4_fsss();
extern "C" void mDoMtx_ZXYrotS__FPA4_fsss();
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
extern "C" void mDoMtx_XrotS__FPA4_fs();
extern "C" void mDoMtx_XrotM__FPA4_fs();
extern "C" void mDoMtx_YrotS__FPA4_fs();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_ZrotS__FPA4_fs();
extern "C" void mDoMtx_ZrotM__FPA4_fs();
extern "C" void mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion();
extern "C" void mDoMtx_MtxToRot__FPA4_CfP5csXyz();
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
extern "C" void transM__14mDoMtx_stack_cFfff();
extern "C" void transM__14mDoMtx_stack_cFRC4cXyz();
extern "C" void scaleM__14mDoMtx_stack_cFfff();
extern "C" void ZXYrotS__14mDoMtx_stack_cFRC5csXyz();
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
extern "C" void quatM__14mDoMtx_stack_cFPC10Quaternion();
extern "C" void play__14mDoExt_baseAnmFv();
extern "C" void init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb();
extern "C" void changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform();
extern "C" void entry__13mDoExt_bckAnmFP12J3DModelDataf();
extern "C" void init__13mDoExt_blkAnmFP13J3DDeformDataP13J3DAnmClusteriifss();
extern "C" void mDoExt_modelEntryDL__FP8J3DModel();
extern "C" void __ct__13J3DGXColorS10Fv();
extern "C" void mDoExt_getGameHeap__Fv();
extern "C" void mDoExt_destroyExpHeap__FP10JKRExpHeap();
extern "C" void mDoExt_setCurrentHeap__FP7JKRHeap();
extern "C" void initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs();
extern "C" void __ct__4cXyzFv();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void mDoLib_project__FP3VecP3Vec();
extern "C" void mDoLib_pos2camera__FP3VecP3Vec();
extern "C" void draw__19JPAParticleCallBackFP14JPABaseEmitterP15JPABaseParticle();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void __dt__5csXyzFv();
extern "C" void __dt__10fopAc_ac_cFv();
extern "C" void fopAc_IsActor__FPv();
extern "C" void fopAcIt_Executor__FPFPvPv_iPv();
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
extern "C" void fopAcM_setStageLayer__FPv();
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
extern "C" void fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc();
extern "C" void fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv();
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_searchActorDistanceXZ2__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_orderTalkEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs();
extern "C" void fopAcM_orderTalkItemBtnEvent__FUsP10fopAc_ac_cP10fopAc_ac_cUsUs();
extern "C" void fopAcM_orderDoorEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs();
extern "C" void fopAcM_orderCatchEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs();
extern "C" void fopAcM_orderOtherEvent__FP10fopAc_ac_cPCcUsUsUs();
extern "C" void fopAcM_orderOtherEvent__FP10fopAc_ac_cP10fopAc_ac_cPCcUsUsUs();
extern "C" void fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs();
extern "C" void fopAcM_orderTreasureEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs();
extern "C" void fopAcM_getTalkEventPartner__FPC10fopAc_ac_c();
extern "C" void fopAcM_getItemEventPartner__FPC10fopAc_ac_c();
extern "C" void fopAcM_getEventPartner__FPC10fopAc_ac_c();
extern "C" void fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz();
extern "C" void fopAcM_createItemForSimpleDemo__FPC4cXyziiPC5csXyzPC4cXyzff();
extern "C" void fopAcM_setCarryNow__FP10fopAc_ac_ci();
extern "C" void fopAcM_cancelCarryNow__FP10fopAc_ac_c();
extern "C" void fopAcM_getWaterY__FPC4cXyzPf();
extern "C" void fpoAcM_relativePos__FPC10fopAc_ac_cPC4cXyzP4cXyz();
extern "C" void fopAcM_getWaterStream__FPC4cXyzRC13cBgS_PolyInfoP4cXyzPii();
extern "C" void __dt__8cM3dGPlaFv();
extern "C" void fopAcM_getPolygonAngle__FPC8cM3dGPlas();
extern "C" void lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c();
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
extern "C" void waterCheck__11fopAcM_wt_cFPC4cXyz();
extern "C" void onFrollCrashFlg__9daPy_py_cFUci();
extern "C" bool checkWolfDash__9daPy_py_cCFv();
extern "C" bool checkFrontRoll__9daPy_py_cCFv();
extern "C" bool checkHorseRide__9daPy_py_cCFv();
extern "C" s32 getGrabActorID__9daPy_py_cCFv();
extern "C" void fopOvlpM_IsPeek__Fv();
extern "C" void fopKyM_create__FsiP4cXyzP4cXyzPFPv_i();
extern "C" void fopKyM_createWpillar__FPC4cXyzfi();
extern "C" void fopMsgM_SearchByID__FUi();
extern "C" void fopMsgM_messageSet__FUlUl();
extern "C" void fpcM_IsCreating__FUi();
extern "C" void fpcSch_JudgeByID__FPvPv();
extern "C" void dStage_RoomCheck__FP11cBgS_GndChk();
extern "C" void dStage_changeSceneExitId__FR13cBgS_PolyInfofUlScs();
extern "C" void dStage_changeScene__FifUlScsi();
extern "C" void dStage_restartRoom__FUlUli();
extern "C" void dComIfGp_checkItemGet__FUci();
extern "C" void getLayerNo__14dComIfG_play_cFi();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCcP7JKRHeap();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void dComIfGp_getReverb__Fi();
extern "C" void dComIfGp_setNextStage__FPCcsScScfUliScsii();
extern "C" void dComIfGs_isOneZoneSwitch__Fii();
extern "C" void dComIfGs_getMaxLifeGauge__Fv();
extern "C" void dComIfGp_getSelectItem__Fi();
extern "C" s32 dComIfGs_getBottleMax__Fv();
extern "C" void dComIfGp_getSelectItemNum__Fi();
extern "C" void dComIfGp_setSelectItemNum__Fis();
extern "C" void dComIfGp_addSelectItemNum__Fis();
extern "C" void
dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
extern "C" void dComIfGs_setSelectEquipClothes__FUc();
extern "C" void dComIfGs_getWarpStageName__Fv();
extern "C" void dComIfGs_getWarpPlayerPos__Fv();
extern "C" void dComIfGs_getWarpPlayerAngleY__Fv();
extern "C" void dComIfGs_getWarpRoomNo__Fv();
extern "C" void dComIfGs_Wolf_Change_Check__Fv();
extern "C" void dComIfGs_PolyDamageOff_Check__Fv();
extern "C" void dComIfGp_TargetWarpPt_set__FUc();
extern "C" void dComIfGp_TargetWarpPt_get__Fv();
extern "C" void dComIfGp_TransportWarp_check__Fv();
extern "C" void entry__10daMirror_cFP8J3DModel();
extern "C" void checkMagnetCode__12daTagMagne_cFR13cBgS_PolyInfo();
extern "C" void getPlayerNo__11daTagMist_cFv();
extern "C" void getRupeeMax__21dSv_player_status_a_cCFv();
extern "C" void isTransformLV__21dSv_player_status_b_cCFi();
extern "C" void setItem__17dSv_player_item_cFiUc();
extern "C" void setBottleItemIn__17dSv_player_item_cFUcUc();
extern "C" void setEquipBottleItemIn__17dSv_player_item_cFUcUc();
extern "C" void setEquipBottleItemEmpty__17dSv_player_item_cFUc();
extern "C" void checkBottle__17dSv_player_item_cFUc();
extern "C" void setBaitItem__17dSv_player_item_cFUc();
extern "C" void isFirstBit__21dSv_player_get_item_cCFUc();
extern "C" void getLightDropNum__16dSv_light_drop_cCFUc();
extern "C" void isDungeonItem__12dSv_memBit_cCFi();
extern "C" void onEventBit__11dSv_event_cFUs();
extern "C" void offEventBit__11dSv_event_cFUs();
extern "C" void isEventBit__11dSv_event_cCFUs();
extern "C" void isSwitch__12dSv_danBit_cCFi();
extern "C" void setRoom__13dSv_restart_cFRC4cXyzsSc();
extern "C" void set__17dSv_turnRestart_cFRC4cXyzsScUl();
extern "C" void onSwitch__10dSv_info_cFii();
extern "C" void offSwitch__10dSv_info_cFii();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void __ct__9dJntCol_cFv();
extern "C" void init__9dJntCol_cFP10fopAc_ac_cPC13dJntColData_cP8J3DModeli();
extern "C" void getHitmarkPosAndAngle__9dJntCol_cCFPC4cXyzPC5csXyzP4cXyzP5csXyzi();
extern "C" void getItemNo__12daItemBase_cFv();
extern "C" void hide__12daItemBase_cFv();
extern "C" void show__12daItemBase_cFv();
extern "C" void dead__12daItemBase_cFv();
extern "C" void checkWait__10e_wb_classFv();
extern "C" void setPlayerRideNow__10e_wb_classFv();
extern "C" void setPlayerRide__10e_wb_classFv();
extern "C" void getOff__10e_wb_classFv();
extern "C" void checkDownDamage__10e_wb_classFv();
extern "C" void checkNormalRideMode__10e_wb_classCFv();
extern "C" void setRunRideMode__10e_wb_classFv();
extern "C" void getPrm_Morf__13dDemo_actor_cFv();
extern "C" void getDemoIDData__13dDemo_actor_cFPiPiPiPUsPUc();
extern "C" void getActor__14dDemo_object_cFUc();
extern "C" void setBranchId__7dDemo_cFUss();
extern "C" void onWarpMaterial__11dRes_info_cFP12J3DModelData();
extern "C" void offWarpMaterial__11dRes_info_cFP12J3DModelData();
extern "C" void setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff();
extern "C" void loaderBasicBmd__11dRes_info_cFUlPv();
extern "C" void __dt__15J3DTevKColorAnmFv();
extern "C" void __ct__15J3DTevKColorAnmFv();
extern "C" void __dt__14J3DTevColorAnmFv();
extern "C" void __ct__14J3DTevColorAnmFv();
extern "C" void __dt__11J3DTexNoAnmFv();
extern "C" void __ct__11J3DTexNoAnmFv();
extern "C" void __dt__12J3DTexMtxAnmFv();
extern "C" void __ct__12J3DTexMtxAnmFv();
extern "C" void __dt__14J3DMatColorAnmFv();
extern "C" void __ct__14J3DMatColorAnmFv();
extern "C" void getResInfo__14dRes_control_cFPCcP11dRes_info_ci();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
extern "C" void getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci();
extern "C" void reset__14dEvt_control_cFv();
extern "C" void reset__14dEvt_control_cFPv();
extern "C" void dEv_noFinishSkipProc__FPvi();
extern "C" void setSkipProc__14dEvt_control_cFPvPFPvi_ii();
extern "C" void compulsory__14dEvt_control_cFPvPCcUs();
extern "C" void convPId__14dEvt_control_cFUi();
extern "C" void setPtI_Id__14dEvt_control_cFUi();
extern "C" void setPtD__14dEvt_control_cFPv();
extern "C" void setStartDemo__18dEvent_exception_cFi();
extern "C" void setObjectArchive__16dEvent_manager_cFPc();
extern "C" void orderStartDemo__16dEvent_manager_cFv();
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
extern "C" void startCheckOld__16dEvent_manager_cFPCc();
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
extern "C" void getMyNowCutName__16dEvent_manager_cFi();
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
extern "C" void cutEnd__16dEvent_manager_cFi();
extern "C" void setGoal__16dEvent_manager_cFP4cXyz();
extern "C" void getGoal__16dEvent_manager_cFv();
extern "C" void getRunEventName__16dEvent_manager_cFv();
extern "C" void checkStartDemo__16dEvent_manager_cFv();
extern "C" void forceOnEventMove__Q213dPa_control_c7level_cFUl();
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
extern "C" void setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl();
extern "C" void
setWaterRipple__13dPa_control_cFPUlR13cBgS_PolyInfoPC4cXyzfPC12dKy_tevstr_cPC4cXyzSc();
extern "C" void
set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void getPolyColor__13dPa_control_cFR13cBgS_PolyInfoiP8_GXColorP8_GXColorPUcPf();
extern "C" void
setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz();
extern "C" void
set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void
setPoly__13dPa_control_cFUlUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz();
extern "C" void setOldPosP__22dPa_hermiteEcallBack_cFPC4cXyzPC4cXyz();
extern "C" void init__7dPaPo_cFP9dBgS_Acchff();
extern "C" void setEffectCenter__7dPaPo_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC5csXyzPC4cXyzScff();
extern "C" void
setEffectFour__8dPaPoF_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC5csXyzPC4cXyzScff();
extern "C" void clearFourAllID__8dPaPoF_cFv();
extern "C" void dPath_GetRoomPath__Fii();
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
extern "C" void newData__13dDlst_peekZ_cFssPUl();
extern "C" void entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz();
extern "C" void dKyw_get_AllWind_vec__FP4cXyzP4cXyzPf();
extern "C" bool getKandelaarFlamePos__9daPy_py_cFv();
extern "C" void StartShock__12dVibration_cFii4cXyz();
extern "C" void StartQuake__12dVibration_cFii4cXyz();
extern "C" void StopQuake__12dVibration_cFi();
extern "C" void GetLockonList__12dAttention_cFl();
extern "C" void getActionBtnB__12dAttention_cFv();
extern "C" void getActionBtnXY__12dAttention_cFv();
extern "C" void LockonTarget__12dAttention_cFl();
extern "C" void LockonTruth__12dAttention_cFv();
extern "C" void getActor__10dAttList_cFv();
extern "C" void convPId__10dAttHint_cFUi();
extern "C" void convPId__11dAttCatch_cFUi();
extern "C" void convPId__10dAttLook_cFUi();
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
extern "C" void GetActorPointer__4cBgSCFi();
extern "C" void GetBgWBasePointer__4cBgSCFRC13cBgS_PolyInfo();
extern "C" void ChkPolySafe__4cBgSFRC13cBgS_PolyInfo();
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
extern "C" void GetTriPnt__4cBgSCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz();
extern "C" void ChkMoveBG__4dBgSFRC13cBgS_PolyInfo();
extern "C" void ChkMoveBG_NoDABg__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetExitId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetPolyColor__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetHorseNoEntry__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetSpecialCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetMagnetCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetMonkeyBarsCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetWallCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetPolyAtt1__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetGroundCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetRoomPathId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetGrpSoundId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetPolyAttackThrough__4dBgSFRC13cBgS_PolyInfo();
extern "C" void ChkPolyHSStick__4dBgSFRC13cBgS_PolyInfo();
extern "C" void RoofChk__4dBgSFP12dBgS_RoofChk();
extern "C" void MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb();
extern "C" void MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
extern "C" void
PushPullCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_csQ29dBgW_Base13PushPullLabel();
extern "C" void dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo();
extern "C" void dBgS_CheckBGroundPoly__FRC13cBgS_PolyInfo();
extern "C" void dBgS_GetNY__FRC13cBgS_PolyInfo();
extern "C" void __ct__12dBgS_AcchCirFv();
extern "C" void SetWallR__12dBgS_AcchCirFf();
extern "C" void SetWall__12dBgS_AcchCirFff();
extern "C" void __dt__9dBgS_AcchFv();
extern "C" void __ct__9dBgS_AcchFv();
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
extern "C" void Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir();
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
extern "C" void SetGndThinCellingOff__9dBgS_AcchFv();
extern "C" void ClrGndThinCellingOff__9dBgS_AcchFv();
extern "C" void OnWallSort__9dBgS_AcchFv();
extern "C" void __dt__12dBgS_AcchCirFv();
extern "C" bool checkPlayerFly__9daPy_py_cCFv();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
extern "C" void __ct__14dBgS_ObjLinChkFv();
extern "C" void __dt__14dBgS_ObjLinChkFv();
extern "C" void __ct__15dBgS_LinkLinChkFv();
extern "C" void __dt__15dBgS_LinkLinChkFv();
extern "C" void __ct__16dBgS_ArrowLinChkFv();
extern "C" void __dt__16dBgS_ArrowLinChkFv();
extern "C" void __ct__20dBgS_BoomerangLinChkFv();
extern "C" void __dt__20dBgS_BoomerangLinChkFv();
extern "C" void __ct__15dBgS_RopeLinChkFv();
extern "C" void __dt__15dBgS_RopeLinChkFv();
extern "C" void SetObj__16dBgS_PolyPassChkFv();
extern "C" void ClrObj__16dBgS_PolyPassChkFv();
extern "C" void SetLink__16dBgS_PolyPassChkFv();
extern "C" void ClrLink__16dBgS_PolyPassChkFv();
extern "C" void SetBomb__16dBgS_PolyPassChkFv();
extern "C" void ClrBomb__16dBgS_PolyPassChkFv();
extern "C" void SetStatue__16dBgS_PolyPassChkFv();
extern "C" void ClrStatue__16dBgS_PolyPassChkFv();
extern "C" void SetIronBall__16dBgS_PolyPassChkFv();
extern "C" void __ct__12dBgS_RoofChkFv();
extern "C" void __dt__12dBgS_RoofChkFv();
extern "C" void GetAc__22dCcD_GAtTgCoCommonBaseFv();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Move__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void __ct__12dCcD_GObjInfFv();
extern "C" void __dt__12dCcD_GObjInfFv();
extern "C" void ChkAtHit__12dCcD_GObjInfFv();
extern "C" void ResetAtHit__12dCcD_GObjInfFv();
extern "C" void GetAtHitGObj__12dCcD_GObjInfFv();
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
extern "C" void ResetTgHit__12dCcD_GObjInfFv();
extern "C" void GetTgHitGObj__12dCcD_GObjInfFv();
extern "C" void GetTgHitObjSe__12dCcD_GObjInfFv();
extern "C" void getHitSeID__12dCcD_GObjInfFUci();
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
extern "C" void ResetCoHit__12dCcD_GObjInfFv();
extern "C" void Set__8dCcD_CpsFRC11dCcD_SrcCps();
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
extern "C" void StartCAt__8dCcD_CylFR4cXyz();
extern "C" void MoveCAt__8dCcD_CylFR4cXyz();
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
extern "C" void StartCAt__8dCcD_SphFR4cXyz();
extern "C" void MoveCAt__8dCcD_SphFR4cXyz();
extern "C" void __dt__8dCcD_CylFv();
extern "C" void __dt__8dCcD_CpsFv();
extern "C" void Set__12dCcMassS_MngFP8cCcD_ObjUc();
extern "C" bool checkCutJumpCancelTurn__9daPy_py_cCFv();
extern "C" void StartEventCamera__9dCamera_cFiie();
extern "C" void EndEventCamera__9dCamera_cFi();
extern "C" void abs__4cXyzCFv();
extern "C" void checkMidnaRide__9daPy_py_cCFv();
extern "C" void __as__4cXyzFRC4cXyz();
extern "C" void __ct__4cXyzFRC4cXyz();
extern "C" bool checkCanoeRide__9daPy_py_cCFv();
extern "C" bool checkBoardRide__9daPy_py_cCFv();
extern "C" bool checkSpinnerRide__9daPy_py_cCFv();
extern "C" bool checkBoarRide__9daPy_py_cCFv();
extern "C" void getShadowTalkAtnPos__9daAlink_cFv();
extern "C" void execItemGet__FUc();
extern "C" void checkItemGet__FUci();
extern "C" void entry__8dEyeHL_cFP12J3DModelDataPCc();
extern "C" void remove__8dEyeHL_cFv();
extern "C" void getActorP__18daNpcT_ActorMngr_cFv();
extern "C" void daNpcF_getPlayerInfoFromPlayerList__FiiR4cXyzR5csXyz();
extern "C" void checkAnmEnd__16daPy_frameCtrl_cFv();
extern "C" void updateFrame__16daPy_frameCtrl_cFv();
extern "C" void setFrameCtrl__16daPy_frameCtrl_cFUcssff();
extern "C" void setParamData__9daPy_py_cFiiii();
extern "C" void checkFishingRodItem__9daPy_py_cFi();
extern "C" void checkBombItem__9daPy_py_cFi();
extern "C" void checkBottleItem__9daPy_py_cFi();
extern "C" void checkDrinkBottleItem__9daPy_py_cFi();
extern "C" void checkOilBottleItem__9daPy_py_cFi();
extern "C" void checkOpenBottleItem__9daPy_py_cFi();
extern "C" void checkBowItem__9daPy_py_cFi();
extern "C" void checkHookshotItem__9daPy_py_cFi();
extern "C" void checkTradeItem__9daPy_py_cFi();
extern "C" void checkDungeonWarpItem__9daPy_py_cFi();
extern "C" void setActor__16daPy_actorKeep_cFv();
extern "C" void setData__16daPy_actorKeep_cFP10fopAc_ac_c();
extern "C" void clearData__16daPy_actorKeep_cFv();
extern "C" void __ct__14daPy_anmHeap_cFUl();
extern "C" void __dt__14daPy_anmHeap_cFv();
extern "C" void mallocBuffer__14daPy_anmHeap_cFv();
extern "C" void createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE();
extern "C" void loadDataIdx__14daPy_anmHeap_cFUs();
extern "C" void loadDataPriIdx__14daPy_anmHeap_cFUs();
extern "C" void loadDataDemoRID__14daPy_anmHeap_cFUsUs();
extern "C" void setAnimeHeap__14daPy_anmHeap_cFv();
extern "C" void draw__18daPy_sightPacket_cFv();
extern "C" void setSight__18daPy_sightPacket_cFv();
extern "C" void setSightImage__18daPy_sightPacket_cFP7ResTIMG();
extern "C" void checkMasterSwordEquip__9daPy_py_cFv();
extern "C" void checkWoodShieldEquip__9daPy_py_cFv();
extern "C" void checkCarryStartLightBallA__9daPy_py_cFv();
extern "C" void checkCarryStartLightBallB__9daPy_py_cFv();
extern "C" void daPy_addCalcShort__FPsssss();
extern "C" void Start__9dCamera_cFv();
extern "C" void Stop__9dCamera_cFv();
extern "C" void ChangeModeOK__9dCamera_cFl();
extern "C" void SetTrimTypeForce__9dCamera_cFl();
extern "C" void GetCameraTypeFromCameraName__9dCamera_cFPCc();
extern "C" void GetForceLockOnActor__9dCamera_cFv();
extern "C" void dCam_getControledAngleY__FP12camera_class();
extern "C" void dCam_getBody__Fv();
extern "C" void d_GameOver_Create__FUc();
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
extern "C" void dKy_setLight_again__Fv();
extern "C" void dKy_plight_set__FP15LIGHT_INFLUENCE();
extern "C" void dKy_plight_cut__FP15LIGHT_INFLUENCE();
extern "C" void dKy_Itemgetcol_chg_on__Fv();
extern "C" void dKy_Sound_set__F4cXyziUii();
extern "C" void dKy_SordFlush_set__F4cXyzi();
extern "C" void dKy_GxFog_tevstr_set__FP12dKy_tevstr_c();
extern "C" void dKy_WolfEyeLight_set__FP4cXyzfffP8_GXColorfUcUc();
extern "C" void dKy_pol_efftype_get__FPC13cBgS_PolyInfo();
extern "C" void dKy_pol_sound_get__FPC13cBgS_PolyInfo();
extern "C" void dKy_pol_argument_get__FPC13cBgS_PolyInfo();
extern "C" void dKy_TeachWind_existence_chk__Fv();
extern "C" bool dKy_withwarp_capture_check__Fv();
extern "C" void dKy_darkworld_check__Fv();
extern "C" void dKy_shadow_mode_set__FUc();
extern "C" void dKy_shadow_mode_reset__FUc();
extern "C" void setFloatingMessage__13dMeter2Info_cFUssb();
extern "C" void onDirectUseItem__13dMeter2Info_cFi();
extern "C" void resetWarpStatus__13dMeter2Info_cFv();
extern "C" void warpInProc__13dMeter2Info_cFv();
extern "C" void warpOutProc__13dMeter2Info_cFv();
extern "C" void dMeter2Info_setShield__FUcb();
extern "C" void getStatus__12dMsgObject_cFv();
extern "C" void onMsgSend__12dMsgObject_cFv();
extern "C" void setSmellType__12dMsgObject_cFUc();
extern "C" void isHowlHearingMode__12dMsgObject_cFv();
extern "C" void __ct__10dMsgFlow_cFv();
extern "C" void __dt__10dMsgFlow_cFv();
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
extern "C" void dPaneClass_showNullPane__FP9J2DScreen();
extern "C" void ClrCcMove__9cCcD_SttsFv();
extern "C" void SetIGrp__10cCcD_ObjCoFUl();
extern "C" void SetVsGrp__10cCcD_ObjCoFUl();
extern "C" void Set__4cCcSFP8cCcD_Obj();
extern "C" void cPhs_Reset__FP30request_of_phase_process_class();
extern "C" void __pl__4cXyzCFRC3Vec();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void __ml__4cXyzCFf();
extern "C" void __dv__4cXyzCFf();
extern "C" void outprod__4cXyzCFRC3Vec();
extern "C" void normZP__4cXyzCFv();
extern "C" void normalize__4cXyzFv();
extern "C" void normalizeZP__4cXyzFv();
extern "C" void atan2sX_Z__4cXyzCFv();
extern "C" void atan2sY_XZ__4cXyzCFv();
extern "C" void __ct__5csXyzFsss();
extern "C" void cM_rad2s__Ff();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_atan2f__Fff();
extern "C" void cM_rnd__Fv();
extern "C" void cM_rndF__Ff();
extern "C" void cM_rndFX__Ff();
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
extern "C" void __ct__13cBgS_PolyInfoFv();
extern "C" void __dt__13cBgS_PolyInfoFv();
extern "C" void ClearPi__13cBgS_PolyInfoFv();
extern "C" void SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo();
extern "C" void cBgW_CheckBGround__Ff();
extern "C" void cBgW_CheckBRoof__Ff();
extern "C" void cBgW_CheckBWall__Ff();
extern "C" void cM3d_Len2dSqPntAndSegLine__FffffffPfPfPf();
extern "C" void cM3d_SignedLenPlaAndPos__FPC8cM3dGPlaPC3Vec();
extern "C" void cM3d_3PlaneCrossPos__FRC8cM3dGPlaRC8cM3dGPlaRC8cM3dGPlaP3Vec();
extern "C" void __ct__8cM3dGCpsFv();
extern "C" void __dt__8cM3dGCpsFv();
extern "C" void SetC__8cM3dGCylFRC4cXyz();
extern "C" void SetH__8cM3dGCylFf();
extern "C" void SetR__8cM3dGCylFf();
extern "C" void SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz();
extern "C" void __ct__8cM3dGPlaFPC4cXyzf();
extern "C" void crossInfLin__8cM3dGPlaCFRC4cXyzRC4cXyzR4cXyz();
extern "C" void SetC__8cM3dGSphFRC4cXyz();
extern "C" void SetR__8cM3dGSphFf();
extern "C" void cLib_memCpy__FPvPCvUl();
extern "C" void cLib_addCalc__FPfffff();
extern "C" void cLib_addCalcPos__FP4cXyzRC4cXyzfff();
extern "C" void cLib_addCalcAngleS__FPsssss();
extern "C" void cLib_addCalcAngleS2__FPssss();
extern "C" void cLib_chaseUC__FPUcUcUc();
extern "C" void cLib_chaseS__FPsss();
extern "C" void cLib_chaseF__FPfff();
extern "C" void cLib_chasePos__FP4cXyzRC4cXyzf();
extern "C" void cLib_chasePosXZ__FP4cXyzRC4cXyzf();
extern "C" void cLib_chaseAngleS__FPsss();
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
extern "C" void cLib_distanceAngleS__Fss();
extern "C" void __dt__18JPAEmitterCallBackFv();
extern "C" void __dt__19JPAParticleCallBackFv();
extern "C" void func_802807E0();
extern "C" void JPACalcKeyAnmValue__FfUsPCf();
extern "C" void
getData__Q47JStudio3stb4data22TParse_TParagraph_dataCFPQ57JStudio3stb4data22TParse_TParagraph_data5TData();
extern "C" void getAramHeap__9JASKernelFv();
extern "C" void func_802A0A8C();
extern "C" void releaseSound__14JAISoundHandleFv();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void bgmStart__8Z2SeqMgrFUlUll();
extern "C" void subBgmStart__8Z2SeqMgrFUl();
extern "C" void subBgmStop__8Z2SeqMgrFv();
extern "C" void changeBgmStatus__8Z2SeqMgrFl();
extern "C" void changeSubBgmStatus__8Z2SeqMgrFl();
extern "C" void bgmSetSwordUsing__8Z2SeqMgrFl();
extern "C" void taktModeMute__8Z2SeqMgrFv();
extern "C" void taktModeMuteOff__8Z2SeqMgrFv();
extern "C" void deleteObject__14Z2SoundObjBaseFv();
extern "C" void __ct__16Z2SoundObjSimpleFv();
extern "C" void initAnime__10Z2CreatureFPvbff();
extern "C" void updateAnime__10Z2CreatureFff();
extern "C" void startCollisionSE__10Z2CreatureFUlUl();
extern "C" void setLinkGroupInfo__14Z2CreatureLinkFUc();
extern "C" void setLinkHp__14Z2CreatureLinkFll();
extern "C" void setLinkSwordType__14Z2CreatureLinkFll();
extern "C" void setLinkShieldType__14Z2CreatureLinkFll();
extern "C" void setLinkBootsType__14Z2CreatureLinkFl();
extern "C" void __ct__14Z2CreatureLinkFv();
extern "C" void __dt__14Z2CreatureLinkFv();
extern "C" void init__14Z2CreatureLinkFP3VecP3VecP3Vec();
extern "C" void initKantera__14Z2CreatureLinkFP3Vec();
extern "C" void deleteKantera__14Z2CreatureLinkFv();
extern "C" void setKanteraState__14Z2CreatureLinkFUc();
extern "C" void setSinkDepth__14Z2CreatureLinkFSc();
extern "C" void setRiding__14Z2CreatureLinkFb();
extern "C" void setMagnetized__14Z2CreatureLinkFb();
extern "C" void setWolfEyeOpen__14Z2CreatureLinkFb();
extern "C" void startLinkSound__14Z2CreatureLinkF10JAISoundIDUlSc();
extern "C" void startLinkSoundLevel__14Z2CreatureLinkF10JAISoundIDUlSc();
extern "C" void startLinkVoice__14Z2CreatureLinkF10JAISoundIDSc();
extern "C" void startLinkVoiceLevel__14Z2CreatureLinkF10JAISoundIDSc();
extern "C" void startLinkSwordSound__14Z2CreatureLinkF10JAISoundIDUlSc();
extern "C" void startHitItemSE__14Z2CreatureLinkFUlUlP14Z2SoundObjBasef();
extern "C" void setResumeAttack__14Z2CreatureLinkFb();
extern "C" void __ct__13Z2WolfHowlMgrFv();
extern "C" void startWolfHowlSound__13Z2WolfHowlMgrFffbf();
extern "C" void setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData();
extern "C" void skipCorrectDemo__13Z2WolfHowlMgrFv();
extern "C" void freeAll__7JKRHeapFv();
extern "C" void* __nw__FUl();
extern "C" void* __nwa__FUl();
extern "C" void* __nwa__FUli();
extern "C" void __dl__FPv();
extern "C" void create__10JKRExpHeapFUlP7JKRHeapb();
extern "C" void getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader();
extern "C" void readIdxResource__10JKRArchiveFPvUlUl();
extern "C" void __ct__9J2DScreenFv();
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive();
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext();
extern "C" void animation__9J2DScreenFv();
extern "C" void load__20J2DAnmLoaderDataBaseFPCv();
extern "C" void reinitGX__6J3DSysFv();
extern "C" bool entry__9J3DPacketFP13J3DDrawBuffer();
extern "C" void loadPreDrawSetting__8J3DShapeCFv();
extern "C" void entryImm__13J3DDrawBufferFP9J3DPacketUs();
extern "C" void diff__8J3DModelFv();
extern "C" void setDeformData__8J3DModelFP13J3DDeformDataUl();
extern "C" void calcWeightEnvelopeMtx__8J3DModelFv();
extern "C" void init__12J3DFrameCtrlFs();
extern "C" void checkPass__12J3DFrameCtrlFf();
extern "C" void searchUpdateMaterialID__16J3DAnmTexPatternFP12J3DModelData();
extern "C" void searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP12J3DModelData();
extern "C" void getTevColorReg__15J3DAnmTevRegKeyCFUsP11_GXColorS10();
extern "C" void searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData();
extern "C" void initialize__14J3DMaterialAnmFv();
extern "C" void calc__14J3DMaterialAnmCFP11J3DMaterial();
extern "C" void removeTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey();
extern "C" void removeTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey();
extern "C" void entryTexNoAnimator__16J3DMaterialTableFP16J3DAnmTexPattern();
extern "C" void entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey();
extern "C" void entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey();
extern "C" void load__20J3DAnmLoaderDataBaseFPCv24J3DAnmLoaderDataBaseFlag();
extern "C" void JMAEulerToQuat__FsssP10Quaternion();
extern "C" void PSMTXCopy();
extern "C" void PSMTXConcat();
extern "C" void PSMTXInverse();
extern "C" void PSMTXRotAxisRad();
extern "C" void PSMTXTrans();
extern "C" void PSMTXQuat();
extern "C" void PSMTXMultVec();
extern "C" void PSMTXMultVecSR();
extern "C" void PSVECAdd();
extern "C" void PSVECSubtract();
extern "C" void PSVECScale();
extern "C" void PSVECSquareMag();
extern "C" void PSVECDotProduct();
extern "C" void PSVECSquareDistance();
extern "C" void GXSetVtxDesc();
extern "C" void GXClearVtxDesc();
extern "C" void GXSetVtxAttrFmt();
extern "C" void GXSetTexCoordGen2();
extern "C" void GXSetNumTexGens();
extern "C" void GXBegin();
extern "C" void GXSetCullMode();
extern "C" void GXLoadLightObjImm();
extern "C" void GXSetChanAmbColor();
extern "C" void GXSetChanMatColor();
extern "C" void GXSetNumChans();
extern "C" void GXInitTexObj();
extern "C" void GXInitTexObjLOD();
extern "C" void GXLoadTexObj();
extern "C" void GXSetNumIndStages();
extern "C" void GXSetTevColorIn();
extern "C" void GXSetTevAlphaIn();
extern "C" void GXSetTevColorOp();
extern "C" void GXSetTevAlphaOp();
extern "C" void GXSetTevColor();
extern "C" void GXSetAlphaCompare();
extern "C" void GXSetTevOrder();
extern "C" void GXSetNumTevStages();
extern "C" void GXSetBlendMode();
extern "C" void GXSetZMode();
extern "C" void GXLoadPosMtxImm();
extern "C" void GXLoadNrmMtxImm();
extern "C" void GXSetCurrentMtx();
extern "C" void __register_global_object();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void __construct_new_array();
extern "C" void __ptmf_test();
extern "C" void __ptmf_scall();
extern "C" void __cvt_fp2unsigned();
extern "C" void __save_gpr();
extern "C" void _savegpr_15();
extern "C" void _savegpr_16();
extern "C" void _savegpr_20();
extern "C" void _savegpr_21();
extern "C" void _savegpr_22();
extern "C" void _savegpr_23();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void __restore_gpr();
extern "C" void _restgpr_15();
extern "C" void _restgpr_16();
extern "C" void _restgpr_20();
extern "C" void _restgpr_21();
extern "C" void _restgpr_22();
extern "C" void _restgpr_23();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void abs();
extern "C" void strcmp();
extern "C" void strcpy();
extern "C" void strlen();
extern "C" extern u8 const tempBitLabels__20dSv_event_tmp_flag_c[370 + 2 /* padding */];
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* data_803A3360[11];
extern "C" extern void* __vt__19J3DMtxCalcNoAnmBase[11];
extern "C" extern void* __vt__28mDoExt_MtxCalcAnmBlendTblOld[11];
extern "C" extern void* __vt__25mDoExt_MtxCalcAnmBlendTbl[11];
extern "C" extern void* __vt__10J3DMtxCalc[11 + 1 /* padding */];
extern "C" extern void* __vt__19JPAParticleCallBack[5];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__14dBgS_ObjGndChk[12 + 1 /* padding */];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__22dPa_hermiteEcallBack_c[9];
extern "C" extern void* __vt__18dPa_levelEcallBack[9];
extern "C" extern void* __vt__18JPAEmitterCallBack[7];
extern "C" extern u8 m_typeFourData__8dPaPoF_c[60];
extern "C" extern u8 m_emitterFourData__8dPaPoF_c[60 + 28 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__8dCcD_Cps[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__18daPy_sightPacket_c[4 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__12cCcD_CpsAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mLineCheck__11fopAcM_lc_c[112];
extern "C" extern u8 mGndCheck__11fopAcM_gc_c[84];
extern "C" extern u8 mWaterCheck__11fopAcM_wt_c[84 + 4 /* padding */];
extern "C" extern u8 mDemoArcName__20dStage_roomControl_c[10 + 2 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern f32 Zero__4cXyz[3];
extern "C" extern u8 BaseX__4cXyz[12];
extern "C" extern u8 BaseY__4cXyz[12];
extern "C" extern u8 BaseZ__4cXyz[12];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 g_whiteColor;
extern "C" extern u16 m_branchId__7dDemo_c[1 + 3 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern u32 __float_max;
extern "C" extern u8 data_80450B38[4];
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern f32 mWaterY__11fopAcM_wt_c[1 + 1 /* padding */];
extern "C" extern u8 struct_80450D64[4];
extern "C" extern u8 m_top__12daTagHstop_c[4 + 4 /* padding */];
extern "C" extern u8 m_object__7dDemo_c[4];
extern "C" extern u8 mWaterBubblePcallBack__13dPa_control_c[4];
extern "C" extern u8 mParticleTracePCB__13dPa_control_c[4 + 4 /* padding */];
extern "C" extern u8 struct_80450FB8[4];
extern "C" extern u8 struct_80450FBC[4];
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
extern "C" extern u8 struct_8045101C[4];
extern "C" extern u8 Zero__5csXyz[4];
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];
extern "C" extern u8 mLinkPtr__14Z2CreatureLink[4 + 4 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 sOldVcdVatCmd__8J3DShape[4];

//
// Declarations:
//

/* 8009D87C-8009D884 0008+00 s=0 e=1 z=0  None .text      getE3Zhint__9daAlink_cFv */
bool daAlink_c::getE3Zhint() {
    return false;
}

/* ############################################################################################## */
/* 80452C50-80452C58 0005+03 s=2 e=0 z=0  None .sdata2    l_wArcName */
SECTION_SDATA2 static u8 l_wArcName[5 + 3 /* padding */] = {
    0x57,
    0x6D,
    0x64,
    0x6C,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 80452C58-80452C60 0005+03 s=2 e=0 z=0  None .sdata2    l_bArcName */
SECTION_SDATA2 static u8 l_bArcName[5 + 3 /* padding */] = {
    0x42,
    0x6D,
    0x64,
    0x6C,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 80452C60-80452C68 0005+03 s=2 e=0 z=0  None .sdata2    l_kArcName */
SECTION_SDATA2 static u8 l_kArcName[5 + 3 /* padding */] = {
    0x4B,
    0x6D,
    0x64,
    0x6C,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 80452C68-80452C70 0005+03 s=2 e=0 z=0  None .sdata2    l_zArcName */
SECTION_SDATA2 static u8 l_zArcName[5 + 3 /* padding */] = {
    0x5A,
    0x6D,
    0x64,
    0x6C,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 80452C70-80452C78 0005+03 s=3 e=0 z=0  None .sdata2    l_mArcName */
SECTION_SDATA2 static u8 l_mArcName[5 + 3 /* padding */] = {
    0x4D,
    0x6D,
    0x64,
    0x6C,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 80452C78-80452C80 0006+02 s=1 e=0 z=0  None .sdata2    l_hyShdArcName */
SECTION_SDATA2 static u8 l_hyShdArcName[6 + 2 /* padding */] = {
    0x48,
    0x79,
    0x53,
    0x68,
    0x64,
    0x00,
    /* padding */
    0x00,
    0x00,
};

/* 80452C80-80452C88 0006+02 s=1 e=0 z=0  None .sdata2    l_cWShdArcName */
SECTION_SDATA2 static u8 l_cWShdArcName[6 + 2 /* padding */] = {
    0x43,
    0x57,
    0x53,
    0x68,
    0x64,
    0x00,
    /* padding */
    0x00,
    0x00,
};

/* 80452C88-80452C90 0006+02 s=1 e=0 z=0  None .sdata2    l_sWShdArcName */
SECTION_SDATA2 static u8 l_sWShdArcName[6 + 2 /* padding */] = {
    0x53,
    0x57,
    0x53,
    0x68,
    0x64,
    0x00,
    /* padding */
    0x00,
    0x00,
};

/* 80452C90-80452C98 0006+02 s=7 e=0 z=0  None .sdata2    l_arcName */
SECTION_SDATA2 static u8 l_arcName[6 + 2 /* padding */] = {
    0x41,
    0x6C,
    0x69,
    0x6E,
    0x6B,
    0x00,
    /* padding */
    0x00,
    0x00,
};

/* 8009D884-8009D88C 0008+00 s=0 e=0 z=13  None .text      getAlinkArcName__9daAlink_cFv */
//	8009D884: 80452C90 (l_arcName)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getAlinkArcName() {
    nofralloc
#include "asm/d/a/d_a_alink/getAlinkArcName__9daAlink_cFv.s"
}
#pragma pop

/* 8009D88C-8009D8B8 002C+00 s=1 e=0 z=0  None .text
 * daAlink_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	8009D8A4: 8009DA98 (tgHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfP12dCcD_GObjInf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_tgHitCallback(fopAc_ac_c* param_0, dCcD_GObjInf* param_1,
                                      fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop

/* 8009D8B8-8009D8E4 002C+00 s=1 e=0 z=0  None .text
 * daAlink_coHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	8009D8D0: 8009DB64 (coHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_coHitCallback(fopAc_ac_c* param_0, dCcD_GObjInf* param_1,
                                      fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_coHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450FC0-80450FC4 0004+00 s=1 e=0 z=0  None .sbss      it$36766 */
static u8 it[4];

/* 80450FC4-80450FC8 0004+00 s=1 e=0 z=0  None .sbss      None */
static u8 struct_80450FC4[4];

/* 80450FC8-80450FCC 0004+00 s=5 e=0 z=0  None .sbss      None */
static u8 struct_80450FC8[4];

/* 80452C98-80452C9C 0004+00 s=102 e=0 z=0  None .sdata2    @5943 */
SECTION_SDATA2 static f32 lit_5943 = 0.5f;

/* 80452C9C-80452CA0 0004+00 s=23 e=0 z=0  None .sdata2    @5944 */
SECTION_SDATA2 static f32 lit_5944 = 25.0f;

/* 80452CA0-80452CA4 0004+00 s=3 e=0 z=0  None .sdata2    @5945 */
SECTION_SDATA2 static f32 lit_5945 = -25.0f;

/* 80452CA4-80452CA8 0004+00 s=121 e=0 z=0  None .sdata2    @6021 */
SECTION_SDATA2 static f32 lit_6021 = 1.0f / 20.0f;

/* 80452CA8-80452CAC 0004+00 s=1 e=0 z=0  None .sdata2    @6022 */
SECTION_SDATA2 static f32 lit_6022 = 512.0f;

/* 80452CAC-80452CB0 0004+00 s=6 e=0 z=0  None .sdata2    @6023 */
SECTION_SDATA2 static f32 lit_6023 = 3.0f / 5.0f;

/* 80452CB0-80452CB8 0008+00 s=117 e=0 z=0  None .sdata2    @6025 */
SECTION_SDATA2 static f64 lit_6025 = 4503601774854144.0 /* cast s32 to float */;

/* 80452CB8-80452CBC 0004+00 s=327 e=0 z=0  None .sdata2    @6040 */
SECTION_SDATA2 static f32 lit_6040 = 1.0f;

/* 80452CBC-80452CC0 0004+00 s=182 e=0 z=0  None .sdata2    @6041 */
SECTION_SDATA2 static f32 lit_6041 = -1.0f;

/* 80452CC0-80452CC4 0004+00 s=674 e=0 z=0  None .sdata2    @6108 */
SECTION_SDATA2 static u8 lit_6108[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 8009D8E4-8009D90C 0028+00 s=2 e=0 z=0  None .text      init__16daAlink_matAnm_cFv */
//	8009D8E4: 80452CC0 (lit_6108)
//	8009D8FC: 80450FC8 (struct_80450FC8)
//	8009D900: 80450FC9 (struct_80450FC8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_matAnm_c::init() {
    nofralloc
#include "asm/d/a/d_a_alink/init__16daAlink_matAnm_cFv.s"
}
#pragma pop

/* 8009D90C-8009DA60 0154+00 s=1 e=0 z=0  None .text      calc__16daAlink_matAnm_cCFP11J3DMaterial
 */
//	8009D91C: 803621D8 (_savegpr_28)
//	8009D928: 8032C3C4 (calc__14J3DMaterialAnmCFP11J3DMaterial)
//	8009D92C: 804061C0 (g_dComIfG_gameInfo)
//	8009D930: 804061C0 (g_dComIfG_gameInfo)
//	8009D978: 80450FC9 (struct_80450FC8)
//	8009D990: 80452CB8 (lit_6040)
//	8009D998: 80452CB0 (lit_6025)
//	8009DA0C: 80450FC8 (struct_80450FC8)
//	8009DA4C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_matAnm_c::calc(J3DMaterial* param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/calc__16daAlink_matAnm_cCFP11J3DMaterial.s"
}
#pragma pop

/* 8009DA60-8009DA98 0038+00 s=48 e=0 z=5  None .text      checkStageName__9daAlink_cFPCc */
//	8009DA70: 804061C0 (g_dComIfG_gameInfo)
//	8009DA74: 804061C0 (g_dComIfG_gameInfo)
//	8009DA7C: 80368994 (strcmp)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkStageName(char const* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkStageName__9daAlink_cFPCc.s"
}
#pragma pop

/* 8009DA98-8009DB64 00CC+00 s=1 e=0 z=0  None .text
 * tgHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfP12dCcD_GObjInf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::tgHitCallback(fopAc_ac_c* param_0, dCcD_GObjInf* param_1,
                                  dCcD_GObjInf* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/tgHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfP12dCcD_GObjInf.s"
}
#pragma pop

/* 8009DB64-8009DC6C 0108+00 s=1 e=0 z=0  None .text
 * coHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInf       */
//	8009DB74: 803621DC (_savegpr_29)
//	8009DBE8: 80347090 (PSVECAdd)
//	8009DC58: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::coHitCallback(fopAc_ac_c* param_0, dCcD_GObjInf* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/coHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop

/* 8009DC6C-8009DD90 0124+00 s=5 e=0 z=0  None .text
 * setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz           */
//	8009DC7C: 803621D0 (_savegpr_26)
//	8009DCBC: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8009DCC8: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8009DCD0: 800E23FC (concatMagneBootMtx__9daAlink_cFv)
//	8009DCD4: 803DD470 (now__14mDoMtx_stack_c)
//	8009DCD8: 803DD470 (now__14mDoMtx_stack_c)
//	8009DCE0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8009DCE4: 803DD470 (now__14mDoMtx_stack_c)
//	8009DCE8: 803DD470 (now__14mDoMtx_stack_c)
//	8009DCF8: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8009DCFC: 803DD470 (now__14mDoMtx_stack_c)
//	8009DD00: 803DD470 (now__14mDoMtx_stack_c)
//	8009DD10: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8009DD18: 800E243C (concatMagneBootInvMtx__9daAlink_cFv)
//	8009DD34: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8009DD38: 803DD470 (now__14mDoMtx_stack_c)
//	8009DD3C: 803DD470 (now__14mDoMtx_stack_c)
//	8009DD48: 803464E4 (PSMTXConcat)
//	8009DD4C: 803DD470 (now__14mDoMtx_stack_c)
//	8009DD50: 803DD470 (now__14mDoMtx_stack_c)
//	8009DD58: 803464B0 (PSMTXCopy)
//	8009DD64: 803DD470 (now__14mDoMtx_stack_c)
//	8009DD68: 803DD470 (now__14mDoMtx_stack_c)
//	8009DD6C: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009DD70: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009DD74: 803464B0 (PSMTXCopy)
//	8009DD7C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMatrixWorldAxisRot(f32 (*param_0)[4], s16 param_1, s16 param_2, s16 param_3,
                                          int param_4, cXyz const* param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz.s"
}
#pragma pop

/* 8009DD90-8009E7B8 0A28+00 s=2 e=0 z=0  None .text      jointControll__9daAlink_cFi */
//	8009DDA0: 803621D4 (_savegpr_27)
//	8009DDBC: 802673F4 (__ct__5csXyzFsss)
//	8009DE34: 802673F4 (__ct__5csXyzFsss)
//	8009DE60: 80452CC0 (lit_6108)
//	8009E108: 800ECF04 (checkHorseLieAnime__9daAlink_cCFv)
//	8009E184: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8009E1C4: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8009E1F0: 80452CC0 (lit_6108)
//	8009E328: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8009E364: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8009E39C: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	8009E3E8: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E3F8: 8000CB5C (mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion)
//	8009E440: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8009E454: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8009E518: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E538: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E54C: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E55C: 8000CB5C (mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion)
//	8009E5D8: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E5F8: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E60C: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E61C: 8000CB5C (mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion)
//	8009E668: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E688: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E69C: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E6AC: 8000CB5C (mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion)
//	8009E70C: 803DD470 (now__14mDoMtx_stack_c)
//	8009E710: 803DD470 (now__14mDoMtx_stack_c)
//	8009E720: 803468E8 (PSMTXTrans)
//	8009E728: 8000CF7C (quatM__14mDoMtx_stack_cFPC10Quaternion)
//	8009E72C: 803DD470 (now__14mDoMtx_stack_c)
//	8009E730: 803DD470 (now__14mDoMtx_stack_c)
//	8009E738: 803465B0 (PSMTXInverse)
//	8009E740: 803DD470 (now__14mDoMtx_stack_c)
//	8009E744: 803DD470 (now__14mDoMtx_stack_c)
//	8009E748: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E74C: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E750: 803464E4 (PSMTXConcat)
//	8009E75C: 803469E8 (PSMTXQuat)
//	8009E778: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E77C: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E788: 803464E4 (PSMTXConcat)
//	8009E78C: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E790: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E798: 803464B0 (PSMTXCopy)
//	8009E7A4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::jointControll(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/jointControll__9daAlink_cFi.s"
}
#pragma pop

/* 8009E7B8-8009E91C 0164+00 s=1 e=0 z=0  None .text      setUpperFront__9daAlink_cFv */
//	8009E7F4: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	8009E820: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	8009E82C: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E830: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E838: 803464B0 (PSMTXCopy)
//	8009E870: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	8009E874: 803DD470 (now__14mDoMtx_stack_c)
//	8009E878: 803DD470 (now__14mDoMtx_stack_c)
//	8009E880: 803469E8 (PSMTXQuat)
//	8009E88C: 803DD470 (now__14mDoMtx_stack_c)
//	8009E890: 803DD470 (now__14mDoMtx_stack_c)
//	8009E894: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E898: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E89C: 803464E4 (PSMTXConcat)
//	8009E8A4: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E8A8: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E8CC: 803DD470 (now__14mDoMtx_stack_c)
//	8009E8D0: 803DD470 (now__14mDoMtx_stack_c)
//	8009E8D4: 803469E8 (PSMTXQuat)
//	8009E8D8: 803DD470 (now__14mDoMtx_stack_c)
//	8009E8DC: 803DD470 (now__14mDoMtx_stack_c)
//	8009E8E4: 803465B0 (PSMTXInverse)
//	8009E8E8: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E8EC: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009E8F0: 803DD470 (now__14mDoMtx_stack_c)
//	8009E8F4: 803DD470 (now__14mDoMtx_stack_c)
//	8009E8FC: 803464E4 (PSMTXConcat)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperFront() {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperFront__9daAlink_cFv.s"
}
#pragma pop

/* 8009E91C-8009EB18 01FC+00 s=1 e=0 z=0  None .text      changeBlendRate__9daAlink_cFi */
//	8009E93C: 80452CC0 (lit_6108)
//	8009E964: 80452CC0 (lit_6108)
//	8009E994: 80452CC0 (lit_6108)
//	8009E9C4: 80452CC0 (lit_6108)
//	8009E9F4: 80452CC0 (lit_6108)
//	8009EA24: 80452CC0 (lit_6108)
//	8009EA38: 80452CB8 (lit_6040)
//	8009EA4C: 80452CC0 (lit_6108)
//	8009EA60: 80452CB8 (lit_6040)
//	8009EA7C: 80452CB8 (lit_6040)
//	8009EA80: 800AC738 (setDoubleAnimeBlendRatio__9daAlink_cFf)
//	8009EA90: 80452CC0 (lit_6108)
//	8009EA94: 800AC738 (setDoubleAnimeBlendRatio__9daAlink_cFf)
//	8009EAAC: 80452CC0 (lit_6108)
//	8009EAB4: 80452CB8 (lit_6040)
//	8009EAD0: 80452CC0 (lit_6108)
//	8009EAEC: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeBlendRate(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeBlendRate__9daAlink_cFi.s"
}
#pragma pop

/* 8009EB18-8009EB58 0040+00 s=1 e=0 z=0  None .text      resetRootMtx__9daAlink_cFv */
//	8009EB30: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009EB34: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009EB38: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetRootMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/resetRootMtx__9daAlink_cFv.s"
}
#pragma pop

/* 8009EB58-8009EC28 00D0+00 s=1 e=0 z=0  None .text      modelCallBack__9daAlink_cFi */
//	8009EB74: 8009DD90 (jointControll__9daAlink_cFi)
//	8009EB84: 8009E7B8 (setUpperFront__9daAlink_cFv)
//	8009EBBC: 800A29DC (setFootMatrix__9daAlink_cFv)
//	8009EBC4: 800A2710 (setArmMatrix__9daAlink_cFv)
//	8009EC08: 8009E91C (changeBlendRate__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::modelCallBack(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/modelCallBack__9daAlink_cFi.s"
}
#pragma pop

/* 8009EC28-8009ECA0 0078+00 s=1 e=0 z=0  None .text      daAlink_modelCallBack__FP8J3DJointi */
//	8009EC38: 80434AC8 (j3dSys)
//	8009EC3C: 80434AC8 (j3dSys)
//	8009EC54: 8009EB58 (modelCallBack__9daAlink_cFi)
//	8009EC88: 8009EB18 (resetRootMtx__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_modelCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_modelCallBack__FP8J3DJointi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452CC4-80452CC8 0004+00 s=137 e=0 z=0  None .sdata2    @6109 */
SECTION_SDATA2 static f32 lit_6109 = 3.0f;

/* 80452CC8-80452CCC 0004+00 s=1 e=0 z=0  None .sdata2    @6183 */
SECTION_SDATA2 static f32 lit_6183 = 10000000.0f;

/* 80452CCC-80452CD0 0004+00 s=2 e=0 z=0  None .sdata2    @6237 */
SECTION_SDATA2 static f32 lit_6237 = 250000.0f;

/* 80452CD0-80452CD4 0004+00 s=6 e=0 z=0  None .sdata2    @6238 */
SECTION_SDATA2 static f32 lit_6238 = 300.0f;

/* 80452CD4-80452CD8 0004+00 s=1 e=0 z=0  None .sdata2    @6398 */
SECTION_SDATA2 static f32 lit_6398 = 160000.0f;

/* 80452CD8-80452CDC 0004+00 s=1 e=0 z=0  None .sdata2    @6399 */
SECTION_SDATA2 static f32 lit_6399 = 202500.0f;

/* 80452CDC-80452CE0 0004+00 s=1 e=0 z=0  None .sdata2    @6400 */
SECTION_SDATA2 static f32 lit_6400 = 350.0f;

/* 80452CE0-80452CE8 0004+04 s=59 e=0 z=0  None .sdata2    @6845 */
SECTION_SDATA2 static f32 lit_6845[1 + 1 /* padding */] = {
    30.0f,
    /* padding */
    0.0f,
};

/* 80452CE8-80452CF0 0008+00 s=84 e=0 z=0  None .sdata2    @6846 */
SECTION_SDATA2 static f64 lit_6846 = 0.5;

/* 80452CF0-80452CF8 0008+00 s=84 e=0 z=0  None .sdata2    @6847 */
SECTION_SDATA2 static f64 lit_6847 = 3.0;

/* 80452CF8-80452D00 0008+00 s=84 e=0 z=0  None .sdata2    @6848 */
SECTION_SDATA2 static u8 lit_6848[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80452D00-80452D04 0004+00 s=47 e=0 z=0  None .sdata2    @6895 */
SECTION_SDATA2 static f32 lit_6895 = 50.0f;

/* 80452D04-80452D08 0004+00 s=6 e=0 z=0  None .sdata2    @6896 */
SECTION_SDATA2 static f32 lit_6896 = 130.0f;

/* 80452D08-80452D0C 0004+00 s=1 e=0 z=0  None .sdata2    @7174 */
SECTION_SDATA2 static f32 lit_7174 = 640000.0f;

/* 80452D0C-80452D10 0004+00 s=1 e=0 z=0  None .sdata2    @7305 */
SECTION_SDATA2 static f32 lit_7305 = 27.0f / 20.0f;

/* 80452D10-80452D14 0004+00 s=15 e=0 z=0  None .sdata2    @7306 */
SECTION_SDATA2 static f32 lit_7306 = 70.0f;

/* 80452D14-80452D18 0004+00 s=57 e=0 z=0  None .sdata2    @7307 */
SECTION_SDATA2 static f32 lit_7307 = 2.0f;

/* 80452D18-80452D1C 0004+00 s=9 e=0 z=0  None .sdata2    @7308 */
SECTION_SDATA2 static f32 lit_7308 = 500.0f;

/* 80452D1C-80452D20 0004+00 s=23 e=0 z=0  None .sdata2    @7448 */
SECTION_SDATA2 static f32 lit_7448 = 12.0f;

/* 80452D20-80452D24 0004+00 s=11 e=0 z=0  None .sdata2    @7449 */
SECTION_SDATA2 static f32 lit_7449 = 24.0f;

/* 80452D24-80452D28 0004+00 s=38 e=0 z=0  None .sdata2    @7450 */
SECTION_SDATA2 static f32 lit_7450 = 4.0f;

/* 80452D28-80452D2C 0004+00 s=7 e=0 z=0  None .sdata2    @7451 */
SECTION_SDATA2 static f32 lit_7451 = 26.0f;

/* 80452D2C-80452D30 0004+00 s=28 e=0 z=0  None .sdata2    @7624 */
SECTION_SDATA2 static f32 lit_7624 = 1.5f;

/* 80452D30-80452D34 0004+00 s=67 e=0 z=0  None .sdata2    @7625 */
SECTION_SDATA2 static f32 lit_7625 = 10.0f;

/* 80452D34-80452D38 0004+00 s=36 e=0 z=0  None .sdata2    @7710 */
SECTION_SDATA2 static f32 lit_7710 = 9.0f;

/* 80452D38-80452D3C 0004+00 s=5 e=0 z=0  None .sdata2    @7807 */
SECTION_SDATA2 static f32 lit_7807 = 27.0f;

/* 80452D3C-80452D40 0004+00 s=82 e=0 z=0  None .sdata2    @7808 */
SECTION_SDATA2 static f32 lit_7808 = 5.0f;

/* 80452D40-80452D44 0004+00 s=1 e=0 z=0  None .sdata2    @7945 */
SECTION_SDATA2 static f32 lit_7945 = 44.0f;

/* 80452D44-80452D48 0004+00 s=27 e=0 z=0  None .sdata2    @7977 */
SECTION_SDATA2 static f32 lit_7977 = 6.0f;

/* 80452D48-80452D4C 0004+00 s=21 e=0 z=0  None .sdata2    @8130 */
SECTION_SDATA2 static f32 lit_8130 = 14.0f;

/* 80452D4C-80452D50 0004+00 s=8 e=0 z=0  None .sdata2    @8131 */
SECTION_SDATA2 static f32 lit_8131 = -0.5f;

/* 80452D50-80452D54 0004+00 s=39 e=0 z=0  None .sdata2    @8247 */
SECTION_SDATA2 static f32 lit_8247 = 100.0f;

/* 80452D54-80452D58 0004+00 s=6 e=0 z=0  None .sdata2    @8248 */
SECTION_SDATA2 static f32 lit_8248 = 95.0f;

/* 80452D58-80452D5C 0004+00 s=3 e=0 z=0  None .sdata2    @8249 */
SECTION_SDATA2 static f32 lit_8249 = 800.0f;

/* 80452D5C-80452D60 0004+00 s=9 e=0 z=0  None .sdata2    @8322 */
SECTION_SDATA2 static f32 lit_8322 = 10000.0f;

/* 80452D60-80452D64 0004+00 s=3 e=0 z=0  None .sdata2    @8369 */
SECTION_SDATA2 static f32 lit_8369 = 37.0f;

/* 80452D64-80452D68 0004+00 s=1 e=0 z=0  None .sdata2    @8370 */
SECTION_SDATA2 static f32 lit_8370 = 54.0f;

/* 80452D68-80452D6C 0004+00 s=13 e=0 z=0  None .sdata2    @8472 */
SECTION_SDATA2 static f32 lit_8472 = 200.0f;

/* 80452D6C-80452D70 0004+00 s=9 e=0 z=0  None .sdata2    @8473 */
SECTION_SDATA2 static f32 lit_8473 = -2.0f;

/* 80452D70-80452D74 0004+00 s=3 e=0 z=0  None .sdata2    @8501 */
SECTION_SDATA2 static f32 lit_8501 = 99.0f / 100.0f;

/* 80452D74-80452D78 0004+00 s=21 e=0 z=0  None .sdata2    @8502 */
SECTION_SDATA2 static f32 lit_8502 = 7.0f;

/* 80452D78-80452D7C 0004+00 s=31 e=0 z=0  None .sdata2    @8676 */
SECTION_SDATA2 static f32 lit_8676 = 20.0f;

/* 80452D7C-80452D80 0004+00 s=5 e=0 z=0  None .sdata2    @8779 */
SECTION_SDATA2 static f32 lit_8779 = 39.0f;

/* 80452D80-80452D84 0004+00 s=7 e=0 z=0  None .sdata2    @8780 */
SECTION_SDATA2 static f32 lit_8780 = 36.0f;

/* 80452D84-80452D88 0004+00 s=19 e=0 z=0  None .sdata2    @8781 */
SECTION_SDATA2 static f32 lit_8781 = 13.0f;

/* 80452D88-80452D8C 0004+00 s=29 e=0 z=0  None .sdata2    @8782 */
SECTION_SDATA2 static f32 lit_8782 = 1.0f / 100.0f;

/* 80452D8C-80452D90 0004+00 s=23 e=0 z=0  None .sdata2    @8783 */
SECTION_SDATA2 static f32 lit_8783 = 8.0f;

/* 80452D90-80452D94 0004+00 s=4 e=0 z=0  None .sdata2    @8784 */
SECTION_SDATA2 static f32 lit_8784 = 28.0f;

/* 80452D94-80452D98 0004+00 s=10 e=0 z=0  None .sdata2    @8785 */
SECTION_SDATA2 static f32 lit_8785 = 38.0f;

/* 80452D98-80452D9C 0004+00 s=4 e=0 z=0  None .sdata2    @8786 */
SECTION_SDATA2 static f32 lit_8786 = 48.0f;

/* 80452D9C-80452DA0 0004+00 s=4 e=0 z=0  None .sdata2    @9053 */
SECTION_SDATA2 static f32 lit_9053 = -10.0f;

/* 80452DA0-80452DA4 0004+00 s=43 e=0 z=0  None .sdata2    @9054 */
SECTION_SDATA2 static f32 lit_9054 = 1.0f / 10.0f;

/* 80452DA4-80452DA8 0004+00 s=19 e=0 z=0  None .sdata2    @9138 */
SECTION_SDATA2 static f32 lit_9138 = -1000000000.0f;

/* 80452DA8-80452DAC 0004+00 s=15 e=0 z=0  None .sdata2    @9652 */
SECTION_SDATA2 static f32 lit_9652 = 7.0f / 10.0f;

/* 80452DAC-80452DB0 0004+00 s=8 e=0 z=0  None .sdata2    @9828 */
SECTION_SDATA2 static f32 lit_9828 = 3.1415927410125732f;

/* 80452DB0-80452DB4 0004+00 s=13 e=0 z=0  None .sdata2    @10039 */
SECTION_SDATA2 static f32 lit_10039 = 80.0f;

/* 80452DB4-80452DB8 0004+00 s=14 e=0 z=0  None .sdata2    @10040 */
SECTION_SDATA2 static f32 lit_10040 = 60.0f;

/* 80452DB8-80452DBC 0004+00 s=15 e=0 z=0  None .sdata2    @10041 */
SECTION_SDATA2 static f32 lit_10041 = 1000.0f;

/* 80452DBC-80452DC0 0004+00 s=15 e=0 z=0  None .sdata2    @10042 */
SECTION_SDATA2 static f32 lit_10042 = 35.0f;

/* 80452DC0-80452DC4 0004+00 s=12 e=0 z=0  None .sdata2    @10193 */
SECTION_SDATA2 static f32 lit_10193 = 18.0f;

/* 80452DC4-80452DC8 0004+00 s=6 e=0 z=0  None .sdata2    @10194 */
SECTION_SDATA2 static f32 lit_10194 = 29.0f;

/* 80452DC8-80452DCC 0004+00 s=11 e=0 z=0  None .sdata2    @10286 */
SECTION_SDATA2 static f32 lit_10286 = 19.0f;

/* 80452DCC-80452DD0 0004+00 s=6 e=0 z=0  None .sdata2    @10532 */
SECTION_SDATA2 static f32 lit_10532 = -50.0f;

/* 80452DD0-80452DD4 0004+00 s=1 e=0 z=0  None .sdata2    @11122 */
SECTION_SDATA2 static f32 lit_11122 = 4096.0f;

/* 80452DD4-80452DD8 0004+00 s=23 e=0 z=0  None .sdata2    @11442 */
SECTION_SDATA2 static f32 lit_11442 = 40.0f;

/* 80452DD8-80452DDC 0004+00 s=10 e=0 z=0  None .sdata2    @11470 */
SECTION_SDATA2 static f32 lit_11470 = 2.5f;

/* 80452DDC-80452DE0 0004+00 s=3 e=0 z=0  None .sdata2    @11471 */
SECTION_SDATA2 static f32 lit_11471 = 1.25f;

/* 80452DE0-80452DE4 0004+00 s=17 e=0 z=0  None .sdata2    @11673 */
SECTION_SDATA2 static f32 lit_11673 = 150.0f;

/* 80452DE4-80452DE8 0004+00 s=16 e=0 z=0  None .sdata2    @12328 */
SECTION_SDATA2 static f32 lit_12328 = 0.0010000000474974513f;

/* 80452DE8-80452DEC 0004+00 s=1 e=0 z=0  None .sdata2    @12475 */
SECTION_SDATA2 static f32 lit_12475 = 2600.0f;

/* 80452DEC-80452DF0 0004+00 s=6 e=0 z=0  None .sdata2    @13119 */
SECTION_SDATA2 static f32 lit_13119 = 3.0f / 20.0f;

/* 80452DF0-80452DF4 0004+00 s=7 e=0 z=0  None .sdata2    @13382 */
SECTION_SDATA2 static f32 lit_13382 = 21.0f;

/* 80452DF4-80452DF8 0004+00 s=1 e=0 z=0  None .sdata2    @13699 */
SECTION_SDATA2 static f32 lit_13699 = 0.9998999834060669f;

/* 80452DF8-80452DFC 0004+00 s=19 e=0 z=0  None .sdata2    @13700 */
SECTION_SDATA2 static f32 lit_13700 = 1.0f / 5.0f;

/* 80452DFC-80452E00 0004+00 s=6 e=0 z=0  None .sdata2    @13701 */
SECTION_SDATA2 static f32 lit_13701 = 2.0f / 5.0f;

/* 80452E00-80452E04 0004+00 s=2 e=0 z=0  None .sdata2    @13702 */
SECTION_SDATA2 static f32 lit_13702 = 1.0f / 40.0f;

/* 80452E04-80452E08 0004+00 s=10 e=0 z=0  None .sdata2    @13794 */
SECTION_SDATA2 static f32 lit_13794 = 16.0f;

/* 80452E08-80452E0C 0004+00 s=10 e=0 z=0  None .sdata2    @14064 */
SECTION_SDATA2 static f32 lit_14064 = 4.0f / 5.0f;

/* 80452E0C-80452E10 0004+00 s=12 e=0 z=0  None .sdata2    @14614 */
SECTION_SDATA2 static f32 lit_14614 = -30.0f;

/* 80452E10-80452E14 0004+00 s=2 e=0 z=0  None .sdata2    @14615 */
SECTION_SDATA2 static f32 lit_14615 = -5.0f;

/* 80452E14-80452E18 0004+00 s=4 e=0 z=0  None .sdata2    @14616 */
SECTION_SDATA2 static f32 lit_14616 = -3.0f;

/* 80452E18-80452E1C 0004+00 s=1 e=0 z=0  None .sdata2    @14617 */
SECTION_SDATA2 static f32 lit_14617 = -4.5f;

/* 80452E1C-80452E20 0004+00 s=1 e=0 z=0  None .sdata2    @14618 */
SECTION_SDATA2 static f32 lit_14618 = -33.0f;

/* 80452E20-80452E24 0004+00 s=2 e=0 z=0  None .sdata2    @14619 */
SECTION_SDATA2 static f32 lit_14619 = 78.0f;

/* 80452E24-80452E28 0004+00 s=3 e=0 z=0  None .sdata2    @14620 */
SECTION_SDATA2 static f32 lit_14620 = 42.0f;

/* 80452E28-80452E2C 0004+00 s=16 e=0 z=0  None .sdata2    @14621 */
SECTION_SDATA2 static f32 lit_14621 = 32.0f;

/* 80452E2C-80452E30 0004+00 s=1 e=0 z=0  None .sdata2    @14622 */
SECTION_SDATA2 static f32 lit_14622 = 5461.0f;

/* 80452E30-80452E34 0004+00 s=2 e=0 z=0  None .sdata2    @14623 */
SECTION_SDATA2 static f32 lit_14623 = -8.0f;

/* 80452E34-80452E38 0004+00 s=5 e=0 z=0  None .sdata2    @14624 */
SECTION_SDATA2 static f32 lit_14624 = -15.0f;

/* 80452E38-80452E3C 0004+00 s=2 e=0 z=0  None .sdata2    @14625 */
SECTION_SDATA2 static f32 lit_14625 = -18.0f;

/* 80452E3C-80452E40 0004+00 s=1 e=0 z=0  None .sdata2    @14626 */
SECTION_SDATA2 static f32 lit_14626 = -13.789082527160645f;

/* 80452E40-80452E44 0004+00 s=1 e=0 z=0  None .sdata2    @14627 */
SECTION_SDATA2 static f32 lit_14627 = -13.825372695922852f;

/* 80452E44-80452E48 0004+00 s=5 e=0 z=0  None .sdata2    @14760 */
SECTION_SDATA2 static f32 lit_14760 = 1.0f / 50.0f;

/* 80452E48-80452E4C 0004+00 s=1 e=0 z=0  None .sdata2    @14781 */
SECTION_SDATA2 static f32 lit_14781 = -1500.0f;

/* 80452E4C-80452E50 0004+00 s=5 e=0 z=0  None .sdata2    @14782 */
SECTION_SDATA2 static f32 lit_14782 = 2000.0f;

/* 80452E50-80452E54 0004+00 s=1 e=0 z=0  None .sdata2    @14783 */
SECTION_SDATA2 static f32 lit_14783 = 3500.0f;

/* 80452E54-80452E58 0004+00 s=4 e=0 z=0  None .sdata2    @14784 */
SECTION_SDATA2 static f32 lit_14784 = 2500.0f;

/* 80452E58-80452E5C 0004+00 s=2 e=0 z=0  None .sdata2    @14785 */
SECTION_SDATA2 static f32 lit_14785 = 4000.0f;

/* 80452E5C-80452E60 0004+00 s=2 e=0 z=0  None .sdata2    @14786 */
SECTION_SDATA2 static f32 lit_14786 = -5000.0f;

/* 80452E60-80452E64 0004+00 s=2 e=0 z=0  None .sdata2    @14787 */
SECTION_SDATA2 static f32 lit_14787 = 5000.0f;

/* 80452E64-80452E68 0004+00 s=47 e=0 z=0  None .sdata2    @14954 */
SECTION_SDATA2 static f32 lit_14954 = 15.0f;

/* 80452E68-80452E6C 0004+00 s=7 e=0 z=0  None .sdata2    @14955 */
SECTION_SDATA2 static f32 lit_14955 = 90.0f;

/* 80452E6C-80452E70 0004+00 s=1 e=0 z=0  None .sdata2    @15106 */
SECTION_SDATA2 static f32 lit_15106 = 93.0f / 100.0f;

/* 80452E70-80452E74 0004+00 s=1 e=0 z=0  None .sdata2    @15188 */
SECTION_SDATA2 static f32 lit_15188 = 46.051204681396484f;

/* 80452E74-80452E78 0004+00 s=5 e=0 z=0  None .sdata2    @15341 */
SECTION_SDATA2 static f32 lit_15341 = 23.0f;

/* 80452E78-80452E7C 0004+00 s=5 e=0 z=0  None .sdata2    @15460 */
SECTION_SDATA2 static f32 lit_15460 = 0.004999999888241291f;

/* 80452E7C-80452E80 0004+00 s=2 e=0 z=0  None .sdata2    @15808 */
SECTION_SDATA2 static f32 lit_15808 = 14400.0f;

/* 80452E80-80452E84 0004+00 s=6 e=0 z=0  None .sdata2    @16036 */
SECTION_SDATA2 static f32 lit_16036 = 75.0f;

/* 80452E84-80452E88 0004+00 s=3 e=0 z=0  None .sdata2    @16037 */
SECTION_SDATA2 static f32 lit_16037 = 129.99000549316406f;

/* 80452E88-80452E8C 0004+00 s=2 e=0 z=0  None .sdata2    @16038 */
SECTION_SDATA2 static f32 lit_16038 = 34.0f;

/* 80452E8C-80452E90 0004+00 s=1 e=0 z=0  None .sdata2    @16066 */
SECTION_SDATA2 static f32 lit_16066 = 1000000.0f;

/* 80452E90-80452E94 0004+00 s=2 e=0 z=0  None .sdata2    @16067 */
SECTION_SDATA2 static f32 lit_16067 = 90000.0f;

/* 80452E94-80452E98 0004+00 s=12 e=0 z=0  None .sdata2    @16210 */
SECTION_SDATA2 static f32 lit_16210 = 17.0f;

/* 80452E98-80452E9C 0004+00 s=1 e=0 z=0  None .sdata2    @16566 */
SECTION_SDATA2 static f32 lit_16566 = 700.0f;

/* 80452E9C-80452EA0 0004+00 s=4 e=0 z=0  None .sdata2    @16567 */
SECTION_SDATA2 static f32 lit_16567 = 600.0f;

/* 80452EA0-80452EA4 0004+00 s=3 e=0 z=0  None .sdata2    @16568 */
SECTION_SDATA2 static f32 lit_16568 = -100.0f;

/* 80452EA4-80452EA8 0004+00 s=1 e=0 z=0  None .sdata2    @16569 */
SECTION_SDATA2 static f32 lit_16569 = 250.0f;

/* 80452EA8-80452EAC 0004+00 s=20 e=0 z=0  None .sdata2    @16570 */
SECTION_SDATA2 static f32 lit_16570 = 3.0f / 10.0f;

/* 80452EAC-80452EB0 0004+00 s=11 e=0 z=0  None .sdata2    @16641 */
SECTION_SDATA2 static f32 lit_16641 = 0.75f;

/* 80452EB0-80452EB4 0004+00 s=2 e=0 z=0  None .sdata2    @16790 */
SECTION_SDATA2 static f32 lit_16790 = 81.0f;

/* 80452EB4-80452EB8 0004+00 s=22 e=0 z=0  None .sdata2    @17382 */
SECTION_SDATA2 static f32 lit_17382 = 11.0f;

/* 80452EB8-80452EBC 0004+00 s=3 e=0 z=0  None .sdata2    @17592 */
SECTION_SDATA2 static f32 lit_17592 = 127.0f;

/* 80452EBC-80452EC0 0004+00 s=6 e=0 z=0  None .sdata2    @17593 */
SECTION_SDATA2 static f32 lit_17593 = 65.0f;

/* 80452EC0-80452EC4 0004+00 s=1 e=0 z=0  None .sdata2    @18068 */
SECTION_SDATA2 static f32 lit_18068 = -11.0f;

/* 80452EC4-80452EC8 0004+00 s=2 e=0 z=0  None .sdata2    @18176 */
SECTION_SDATA2 static f32 lit_18176 = 230.0f;

/* 80452EC8-80452ECC 0004+00 s=2 e=0 z=0  None .sdata2    @18706 */
SECTION_SDATA2 static f32 lit_18706 = 0.0020000000949949026f;

/* 80452ECC-80452ED0 0004+00 s=1 e=0 z=0  None .sdata2    @18830 */
SECTION_SDATA2 static f32 lit_18830 = 10.0f / 3.0f;

/* 80452ED0-80452ED4 0004+00 s=6 e=0 z=0  None .sdata2    @18847 */
SECTION_SDATA2 static f32 lit_18847 = 9.0f / 10.0f;

/* 80452ED4-80452ED8 0004+00 s=7 e=0 z=0  None .sdata2    @18929 */
SECTION_SDATA2 static f32 lit_18929 = 182.04444885253906f;

/* 80452ED8-80452EDC 0004+00 s=1 e=0 z=0  None .sdata2    @18997 */
SECTION_SDATA2 static f32 lit_18997 = 125.0f;

/* 80452EDC-80452EE0 0004+00 s=3 e=0 z=0  None .sdata2    @19240 */
SECTION_SDATA2 static f32 lit_19240 = 6.0f / 5.0f;

/* 8009ECA0-8009EF38 0298+00 s=1 e=0 z=0  None .text      headModelCallBack__9daAlink_cFi */
//	8009ECB0: 803621DC (_savegpr_29)
//	8009ECF4: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009ECF8: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009ECFC: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED00: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED04: 803464B0 (PSMTXCopy)
//	8009ED08: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED0C: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED14: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	8009ED18: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED1C: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED34: 803464B0 (PSMTXCopy)
//	8009ED38: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED3C: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED40: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009ED44: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009ED48: 803464B0 (PSMTXCopy)
//	8009ED58: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009ED5C: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009ED60: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED64: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED68: 803464B0 (PSMTXCopy)
//	8009ED74: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED78: 803DD470 (now__14mDoMtx_stack_c)
//	8009ED98: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	8009EDA8: 803DD470 (now__14mDoMtx_stack_c)
//	8009EDAC: 803DD470 (now__14mDoMtx_stack_c)
//	8009EDD4: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	8009EDE0: 803DD470 (now__14mDoMtx_stack_c)
//	8009EDE4: 803DD470 (now__14mDoMtx_stack_c)
//	8009EE0C: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	8009EE20: 80452CB8 (lit_6040)
//	8009EE28: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	8009EE2C: 803DD470 (now__14mDoMtx_stack_c)
//	8009EE30: 803DD470 (now__14mDoMtx_stack_c)
//	8009EE48: 803464B0 (PSMTXCopy)
//	8009EE4C: 803DD470 (now__14mDoMtx_stack_c)
//	8009EE50: 803DD470 (now__14mDoMtx_stack_c)
//	8009EE54: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009EE58: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009EE5C: 803464B0 (PSMTXCopy)
//	8009EEA4: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8009EEB0: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	8009EEC4: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009EEC8: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009EECC: 803DD470 (now__14mDoMtx_stack_c)
//	8009EED0: 803DD470 (now__14mDoMtx_stack_c)
//	8009EED4: 803464B0 (PSMTXCopy)
//	8009EED8: 80452EDC (lit_19240)
//	8009EEDC: 80452CB8 (lit_6040)
//	8009EEE4: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	8009EEE8: 803DD470 (now__14mDoMtx_stack_c)
//	8009EEEC: 803DD470 (now__14mDoMtx_stack_c)
//	8009EF04: 803464B0 (PSMTXCopy)
//	8009EF08: 803DD470 (now__14mDoMtx_stack_c)
//	8009EF0C: 803DD470 (now__14mDoMtx_stack_c)
//	8009EF10: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009EF14: 80434BE4 (mCurrentMtx__6J3DSys)
//	8009EF18: 803464B0 (PSMTXCopy)
//	8009EF24: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::headModelCallBack(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/headModelCallBack__9daAlink_cFi.s"
}
#pragma pop

/* 8009EF38-8009EF7C 0044+00 s=1 e=0 z=0  None .text      daAlink_headModelCallBack__FP8J3DJointi */
//	8009EF48: 80434AC8 (j3dSys)
//	8009EF4C: 80434AC8 (j3dSys)
//	8009EF64: 8009ECA0 (headModelCallBack__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_headModelCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_headModelCallBack__FP8J3DJointi.s"
}
#pragma pop

/* 8009EF7C-8009EFF0 0074+00 s=1 e=0 z=0  None .text      wolfModelCallBack__9daAlink_cFi */
//	8009EF98: 8009DD90 (jointControll__9daAlink_cFi)
//	8009EFA8: 8012AD1C (setWolfFootMatrix__9daAlink_cFv)
//	8009EFD0: 8012ACCC (changeWolfBlendRate__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfModelCallBack(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/wolfModelCallBack__9daAlink_cFi.s"
}
#pragma pop

/* 8009EFF0-8009F034 0044+00 s=1 e=0 z=0  None .text      daAlink_wolfModelCallBack__FP8J3DJointi */
//	8009F000: 80434AC8 (j3dSys)
//	8009F004: 80434AC8 (j3dSys)
//	8009F01C: 8009EF7C (wolfModelCallBack__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_wolfModelCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_wolfModelCallBack__FP8J3DJointi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452EE0-80452EE4 0004+00 s=6 e=0 z=0  None .sdata2    @19379 */
SECTION_SDATA2 static f32 lit_19379 = 0.25f;

/* 80452EE4-80452EE8 0004+00 s=4 e=0 z=0  None .sdata2    @19380 */
SECTION_SDATA2 static f32 lit_19380 = 46.0f;

/* 80452EE8-80452EEC 0004+00 s=1 e=0 z=0  None .sdata2    @19381 */
SECTION_SDATA2 static f32 lit_19381 = 53.0f;

/* 80452EEC-80452EF0 0004+00 s=3 e=0 z=0  None .sdata2    @19382 */
SECTION_SDATA2 static f32 lit_19382 = 41.0f;

/* 80452EF0-80452EF4 0004+00 s=1 e=0 z=0  None .sdata2    @19428 */
SECTION_SDATA2 static f32 lit_19428 = 102.0f;

/* 80452EF4-80452EF8 0004+00 s=1 e=0 z=0  None .sdata2    @19580 */
SECTION_SDATA2 static f32 lit_19580 = 360000.0f;

/* 80452EF8-80452EFC 0004+00 s=1 e=0 z=0  None .sdata2    @20303 */
SECTION_SDATA2 static f32 lit_20303 = 68.0f;

/* 80452EFC-80452F00 0004+00 s=2 e=0 z=0  None .sdata2    @20400 */
SECTION_SDATA2 static f32 lit_20400 = 256.0f;

/* 80452F00-80452F04 0004+00 s=1 e=0 z=0  None .sdata2    @20401 */
SECTION_SDATA2 static f32 lit_20401 = 9.999999747378752e-05f;

/* 80452F04-80452F08 0004+00 s=2 e=0 z=0  None .sdata2    @20402 */
SECTION_SDATA2 static f32 lit_20402 = 6.2831854820251465f;

/* 80452F08-80452F0C 0004+00 s=4 e=0 z=0  None .sdata2    @20495 */
SECTION_SDATA2 static f32 lit_20495 = 3000.0f;

/* 80452F0C-80452F10 0004+00 s=5 e=0 z=0  None .sdata2    @20496 */
SECTION_SDATA2 static f32 lit_20496 = 1500.0f;

/* 80452F10-80452F14 0004+00 s=1 e=0 z=0  None .sdata2    @20790 */
SECTION_SDATA2 static f32 lit_20790 = 6.103515625e-05f;

/* 80452F14-80452F18 0004+00 s=3 e=0 z=0  None .sdata2    @20823 */
SECTION_SDATA2 static f32 lit_20823 = -35.0f;

/* 80452F18-80452F1C 0004+00 s=5 e=0 z=0  None .sdata2    @20824 */
SECTION_SDATA2 static f32 lit_20824 = 175.0f;

/* 80452F1C-80452F20 0004+00 s=6 e=0 z=0  None .sdata2    @20991 */
SECTION_SDATA2 static f32 lit_20991 = 55.0f;

/* 80452F20-80452F24 0004+00 s=1 e=0 z=0  None .sdata2    @20992 */
SECTION_SDATA2 static f32 lit_20992 = -55.0f;

/* 80452F24-80452F28 0004+00 s=1 e=0 z=0  None .sdata2    @21021 */
SECTION_SDATA2 static f32 lit_21021 = -4.0f;

/* 80452F28-80452F2C 0004+00 s=3 e=0 z=0  None .sdata2    @21624 */
SECTION_SDATA2 static f32 lit_21624 = 32768.0f;

/* 80452F2C-80452F30 0004+00 s=3 e=0 z=0  None .sdata2    @21680 */
SECTION_SDATA2 static f32 lit_21680 = 1024.0f;

/* 80452F30-80452F34 0004+00 s=4 e=0 z=0  None .sdata2    @21736 */
SECTION_SDATA2 static f32 lit_21736 = 45.0f;

/* 80452F34-80452F38 0004+00 s=1 e=0 z=0  None .sdata2    @22146 */
SECTION_SDATA2 static f32 lit_22146 = 0.18479956686496735f;

/* 80452F38-80452F3C 0004+00 s=1 e=0 z=0  None .sdata2    None */
SECTION_SDATA2 static u8 struct_80452F38[4] = {
    /* 80452F38 0001 data_80452F38 None */
    0x01,
    /* 80452F39 0003 data_80452F39 None */
    0x04,
    0x00,
    0x00,
};

/* 80452F3C-80452F40 0004+00 s=1 e=0 z=0  None .sdata2    @22608 */
SECTION_SDATA2 static f32 lit_22608 = 9025.0f;

/* 80452F40-80452F44 0004+00 s=1 e=0 z=0  None .sdata2    @22609 */
SECTION_SDATA2 static f32 lit_22609 = 4900.0f;

/* 80452F44-80452F48 0004+00 s=1 e=0 z=0  None .sdata2    @23155 */
SECTION_SDATA2 static f32 lit_23155 = 15.5f;

/* 80452F48-80452F4C 0004+00 s=6 e=0 z=0  None .sdata2    @23416 */
SECTION_SDATA2 static f32 lit_23416 = 4.5f;

/* 80452F4C-80452F50 0004+00 s=1 e=0 z=0  None .sdata2    @23542 */
SECTION_SDATA2 static f32 lit_23542 = 0.9986000061035156f;

/* 80452F50-80452F54 0004+00 s=10 e=0 z=0  None .sdata2    @23595 */
SECTION_SDATA2 static f32 lit_23595 = 120.0f;

/* 80452F54-80452F58 0004+00 s=2 e=0 z=0  None .sdata2    @24322 */
SECTION_SDATA2 static f32 lit_24322 = 33.0f;

/* 80452F58-80452F5C 0004+00 s=4 e=0 z=0  None .sdata2    @24323 */
SECTION_SDATA2 static f32 lit_24323 = 31.0f;

/* 80452F5C-80452F60 0004+00 s=1 e=0 z=0  None .sdata2    @24400 */
SECTION_SDATA2 static f32 lit_24400 = 424.8800048828125f;

/* 80452F60-80452F64 0004+00 s=1 e=0 z=0  None .sdata2    @24401 */
SECTION_SDATA2 static f32 lit_24401 = 347.0299987792969f;

/* 80452F64-80452F68 0004+00 s=2 e=0 z=0  None .sdata2    @24589 */
SECTION_SDATA2 static f32 lit_24589 = 61.0f;

/* 80452F68-80452F6C 0004+00 s=2 e=0 z=0  None .sdata2    @24590 */
SECTION_SDATA2 static f32 lit_24590 = 59.0f;

/* 80452F6C-80452F70 0004+00 s=4 e=0 z=0  None .sdata2    @24591 */
SECTION_SDATA2 static f32 lit_24591 = 51.0f;

/* 80452F70-80452F74 0004+00 s=1 e=0 z=0  None .sdata2    @24592 */
SECTION_SDATA2 static f32 lit_24592 = 148.0f;

/* 80452F74-80452F78 0004+00 s=1 e=0 z=0  None .sdata2    @24593 */
SECTION_SDATA2 static f32 lit_24593 = 136.0f;

/* 80452F78-80452F7C 0004+00 s=1 e=0 z=0  None .sdata2    @24594 */
SECTION_SDATA2 static f32 lit_24594 = 117.0f;

/* 80452F7C-80452F80 0004+00 s=1 e=0 z=0  None .sdata2    @24595 */
SECTION_SDATA2 static f32 lit_24595 = 105.0f;

/* 80452F80-80452F84 0004+00 s=1 e=0 z=0  None .sdata2    @24600 */
SECTION_SDATA2 static f32 lit_24600 = 2.0f / 75.0f;

/* 80452F84-80452F88 0004+00 s=4 e=0 z=0  None .sdata2    @24618 */
SECTION_SDATA2 static f32 lit_24618 = 37.5f;

/* 80452F88-80452F8C 0004+00 s=4 e=0 z=0  None .sdata2    @24680 */
SECTION_SDATA2 static f32 lit_24680 = 5.5f;

/* 80452F8C-80452F90 0004+00 s=1 e=0 z=0  None .sdata2    @24852 */
SECTION_SDATA2 static f32 lit_24852 = 187.5f;

/* 80452F90-80452F94 0004+00 s=5 e=0 z=0  None .sdata2    @25059 */
SECTION_SDATA2 static f32 lit_25059 = -20.0f;

/* 80452F94-80452F98 0004+00 s=2 e=0 z=0  None .sdata2    @25113 */
SECTION_SDATA2 static f32 lit_25113 = 110.0f;

/* 80452F98-80452F9C 0004+00 s=2 e=0 z=0  None .sdata2    @25684 */
SECTION_SDATA2 static f32 lit_25684 = 190.0f;

/* 80452F9C-80452FA0 0004+00 s=1 e=0 z=0  None .sdata2    @25873 */
SECTION_SDATA2 static f32 lit_25873 = 0.00016276042151730508f;

/* 80452FA0-80452FA4 0004+00 s=1 e=0 z=0  None .sdata2    @25874 */
SECTION_SDATA2 static f32 lit_25874 = -0.00016276042151730508f;

/* 80452FA4-80452FA8 0004+00 s=6 e=0 z=0  None .sdata2    @25916 */
SECTION_SDATA2 static f32 lit_25916 = 214.0f;

/* 80452FA8-80452FB0 0008+00 s=1 e=0 z=0  None .sdata2    offsetAngle$25945 */
SECTION_SDATA2 static u8 offsetAngle[8] = {
    0x00, 0x00, 0x80, 0x00, 0x40, 0x00, 0xC0, 0x00,
};

/* 80452FB0-80452FB4 0004+00 s=1 e=0 z=0  None .sdata2    @26233 */
SECTION_SDATA2 static f32 lit_26233 = 1.0f / 12.0f;

/* 80452FB4-80452FB8 0004+00 s=1 e=0 z=0  None .sdata2    @26275 */
SECTION_SDATA2 static f32 lit_26275 = -8.899365425109863f;

/* 80452FB8-80452FBC 0004+00 s=1 e=0 z=0  None .sdata2    @26276 */
SECTION_SDATA2 static f32 lit_26276 = 18.5f;

/* 80452FBC-80452FC0 0004+00 s=1 e=0 z=0  None .sdata2    @26297 */
SECTION_SDATA2 static f32 lit_26297 = 17.798730850219727f;

/* 80452FC0-80452FC4 0004+00 s=2 e=0 z=0  None .sdata2    @26816 */
SECTION_SDATA2 static f32 lit_26816 = 22500.0f;

/* 80452FC4-80452FC8 0004+00 s=1 e=0 z=0  None .sdata2    @26817 */
SECTION_SDATA2 static f32 lit_26817 = 16384.0f;

/* 80452FC8-80452FCC 0004+00 s=1 e=0 z=0  None .sdata2    @26818 */
SECTION_SDATA2 static f32 lit_26818 = 6144.0f;

/* 80452FCC-80452FD0 0004+00 s=1 e=0 z=0  None .sdata2    @26819 */
SECTION_SDATA2 static f32 lit_26819 = 8192.0f;

/* 80452FD0-80452FD4 0004+00 s=2 e=0 z=0  None .sdata2    @27005 */
SECTION_SDATA2 static f32 lit_27005 = -65.0f;

/* 80452FD4-80452FD8 0004+00 s=1 e=0 z=0  None .sdata2    @27418 */
SECTION_SDATA2 static f32 lit_27418 = 13653.0f;

/* 80452FD8-80452FDC 0004+00 s=1 e=0 z=0  None .sdata2    @27476 */
SECTION_SDATA2 static f32 lit_27476 = 2330.0f;

/* 80452FDC-80452FE0 0004+00 s=7 e=0 z=0  None .sdata2    @27477 */
SECTION_SDATA2 static f32 lit_27477 = 17.0f / 20.0f;

/* 80452FE0-80452FE4 0004+00 s=2 e=0 z=0  None .sdata2    @28016 */
SECTION_SDATA2 static f32 lit_28016 = -45.0f;

/* 80452FE4-80452FE8 0004+00 s=1 e=0 z=0  None .sdata2    @28017 */
SECTION_SDATA2 static f32 lit_28017 = 145.0f;

/* 80452FE8-80452FEC 0004+00 s=1 e=0 z=0  None .sdata2    @28045 */
SECTION_SDATA2 static f32 lit_28045 = -34.0f;

/* 80452FEC-80452FF0 0004+00 s=1 e=0 z=0  None .sdata2    @28285 */
SECTION_SDATA2 static f32 lit_28285 = 910.0f;

/* 80452FF0-80452FF4 0004+00 s=2 e=0 z=0  None .sdata2    @28286 */
SECTION_SDATA2 static f32 lit_28286 = 7.0f / 20.0f;

/* 80452FF4-80452FF8 0004+00 s=1 e=0 z=0  None .sdata2    @28287 */
SECTION_SDATA2 static f32 lit_28287 = 1.5707963705062866f;

/* 80452FF8-80452FFC 0004+00 s=1 e=0 z=0  None .sdata2    @28405 */
SECTION_SDATA2 static f32 lit_28405 = 1.0f / 48.0f;

/* 80452FFC-80453000 0004+00 s=2 e=0 z=0  None .sdata2    @30372 */
SECTION_SDATA2 static f32 lit_30372 = 400.0f;

/* 80453000-80453004 0004+00 s=4 e=0 z=0  None .sdata2    @30895 */
SECTION_SDATA2 static f32 lit_30895 = 6.5f;

/* 80453004-80453008 0004+00 s=1 e=0 z=0  None .sdata2    @31530 */
SECTION_SDATA2 static f32 lit_31530 = 384.0f;

/* 80453008-80453010 0008+00 s=5 e=0 z=0  None .sdata2    @32072 */
SECTION_SDATA2 static f64 lit_32072 = 4503599627370496.0 /* cast u32 to float */;

/* 80453010-80453014 0004+00 s=1 e=0 z=0  None .sdata2    @32830 */
SECTION_SDATA2 static f32 lit_32830 = 608.0f;

/* 80453014-80453018 0004+00 s=1 e=0 z=0  None .sdata2    @32831 */
SECTION_SDATA2 static f32 lit_32831 = 448.0f;

/* 80453018-8045301C 0004+00 s=1 e=0 z=0  None .sdata2    @32832 */
SECTION_SDATA2 static f32 lit_32832 = -1.0f / 100.0f;

/* 8045301C-80453020 0004+00 s=1 e=0 z=0  None .sdata2    @32833 */
SECTION_SDATA2 static f32 lit_32833 = 16777215.0f;

/* 80453020-80453024 0004+00 s=1 e=0 z=0  None .sdata2    grassWhistleIdx$33097 */
SECTION_SDATA2 static u8 grassWhistleIdx[4] = {
    0x00,
    0x03,
    0x00,
    0x03,
};

/* 80453024-80453028 0004+00 s=1 e=0 z=0  None .sdata2    @33587 */
SECTION_SDATA2 static f32 lit_33587 = 64.0f;

/* 80453028-8045302C 0004+00 s=1 e=0 z=0  None .sdata2    @34189 */
SECTION_SDATA2 static f32 lit_34189 = -16384.0f;

/* 8045302C-80453030 0004+00 s=3 e=0 z=0  None .sdata2    @34190 */
SECTION_SDATA2 static f32 lit_34190 = 14336.0f;

/* 80453030-80453034 0004+00 s=1 e=0 z=0  None .sdata2    @34772 */
SECTION_SDATA2 static f32 lit_34772 = -6.0f;

/* 80453034-80453038 0004+00 s=1 e=0 z=0  None .sdata2    @34773 */
SECTION_SDATA2 static f32 lit_34773 = -18.0f / 5.0f;

/* 80453038-8045303C 0004+00 s=1 e=0 z=0  None .sdata2    @34774 */
SECTION_SDATA2 static f32 lit_34774 = -35.29999923706055f;

/* 8045303C-80453040 0004+00 s=1 e=0 z=0  None .sdata2    @34775 */
SECTION_SDATA2 static f32 lit_34775 = -9.5f;

/* 80453040-80453044 0004+00 s=1 e=0 z=0  None .sdata2    @34776 */
SECTION_SDATA2 static f32 lit_34776 = -16.0f;

/* 80453044-80453048 0004+00 s=1 e=0 z=0  None .sdata2    @34777 */
SECTION_SDATA2 static f32 lit_34777 = 65536.0f;

/* 80453048-8045304C 0004+00 s=1 e=0 z=0  None .sdata2    @34778 */
SECTION_SDATA2 static f32 lit_34778 = 5.0f / 3.0f;

/* 8045304C-80453050 0004+00 s=1 e=0 z=0  None .sdata2    @34779 */
SECTION_SDATA2 static f32 lit_34779 = -1.0f / 5.0f;

/* 80453050-80453054 0004+00 s=3 e=0 z=0  None .sdata2    @34957 */
SECTION_SDATA2 static f32 lit_34957 = 22.0f;

/* 80453054-80453058 0004+00 s=1 e=0 z=0  None .sdata2    @35610 */
SECTION_SDATA2 static f32 lit_35610 = 0.3500000238418579f;

/* 80453058-8045305C 0004+00 s=4 e=0 z=0  None .sdata2    @37152 */
SECTION_SDATA2 static f32 lit_37152 = 3.5f;

/* 8045305C-80453060 0004+00 s=1 e=0 z=0  None .sdata2    @37322 */
SECTION_SDATA2 static f32 lit_37322 = 111.0f;

/* 80453060-80453064 0004+00 s=1 e=0 z=0  None .sdata2    @37323 */
SECTION_SDATA2 static f32 lit_37323 = 88.0f;

/* 80453064-80453068 0004+00 s=1 e=0 z=0  None .sdata2    @37527 */
SECTION_SDATA2 static f32 lit_37527 = 1.0f / 9.0f;

/* 80453068-8045306C 0004+00 s=3 e=0 z=0  None .sdata2    @37528 */
SECTION_SDATA2 static f32 lit_37528 = 1.0f / 7.0f;

/* 8045306C-80453070 0004+00 s=1 e=0 z=0  None .sdata2    @37749 */
SECTION_SDATA2 static f32 lit_37749 = 35.0f / 9.0f;

/* 80453070-80453074 0004+00 s=2 e=0 z=0  None .sdata2    @38059 */
SECTION_SDATA2 static f32 lit_38059 = 19.0f / 50.0f;

/* 80453074-80453078 0004+00 s=1 e=0 z=0  None .sdata2    @38175 */
SECTION_SDATA2 static f32 lit_38175 = 101.0f;

/* 80453078-8045307C 0004+00 s=1 e=0 z=0  None .sdata2    @38176 */
SECTION_SDATA2 static f32 lit_38176 = 122.0f;

/* 8045307C-80453080 0004+00 s=1 e=0 z=0  None .sdata2    @38177 */
SECTION_SDATA2 static f32 lit_38177 = 114.0f;

/* 80453080-80453084 0004+00 s=1 e=0 z=0  None .sdata2    @38624 */
SECTION_SDATA2 static f32 lit_38624 = -90.0f;

/* 80453084-80453088 0004+00 s=1 e=0 z=0  None .sdata2    @39330 */
SECTION_SDATA2 static f32 lit_39330 = 3.0f / 50.0f;

/* 80453088-8045308C 0004+00 s=1 e=0 z=0  None .sdata2    @40561 */
SECTION_SDATA2 static f32 lit_40561 = 0.0625f;

/* 8045308C-80453090 0004+00 s=1 e=0 z=0  None .sdata2    @40562 */
SECTION_SDATA2 static f32 lit_40562 = 205.0f;

/* 80453090-80453094 0004+00 s=1 e=0 z=0  None .sdata2    @40716 */
SECTION_SDATA2 static f32 lit_40716 = 84.0f;

/* 80453094-8045309C 0006+02 s=1 e=0 z=0  None .sdata2    effName$40765 */
SECTION_SDATA2 static u8 effName_40765[6 + 2 /* padding */] = {
    0x04,
    0x07,
    0x04,
    0x08,
    0x04,
    0x09,
    /* padding */
    0x00,
    0x00,
};

/* 8045309C-804530A4 0006+02 s=1 e=0 z=0  None .sdata2    effName0$40950 */
SECTION_SDATA2 static u8 effName0[6 + 2 /* padding */] = {
    0x86,
    0x7D,
    0x86,
    0x7E,
    0x86,
    0x7F,
    /* padding */
    0x00,
    0x00,
};

/* 804530A4-804530AC 0006+02 s=1 e=0 z=0  None .sdata2    effName1$40951 */
SECTION_SDATA2 static u8 effName1[6 + 2 /* padding */] = {
    0x89,
    0x81,
    0x89,
    0x82,
    0x89,
    0x83,
    /* padding */
    0x00,
    0x00,
};

/* 804530AC-804530B0 0004+00 s=1 e=0 z=0  None .sdata2    effNameNormal$41086 */
SECTION_SDATA2 static u8 effNameNormal[4] = {
    0x01,
    0x59,
    0x01,
    0x5A,
};

/* 804530B0-804530B8 0008+00 s=1 e=0 z=0  None .sdata2    effNameLight$41091 */
SECTION_SDATA2 static u8 effNameLight[8] = {
    0x0A, 0x28, 0x0A, 0x29, 0x0A, 0x2A, 0x0A, 0x2B,
};

/* 804530B8-804530BC 0004+00 s=1 e=0 z=0  None .sdata2    effNameWater$41101 */
SECTION_SDATA2 static u8 effNameWater[4] = {
    0x0C,
    0x52,
    0x0C,
    0x53,
};

/* 804530BC-804530C0 0004+00 s=1 e=0 z=0  None .sdata2    @41180 */
SECTION_SDATA2 static f32 lit_41180 = 0.005493247881531715f;

/* 804530C0-804530C8 0008+00 s=1 e=0 z=0  None .sdata2    jointID$41285 */
SECTION_SDATA2 static u8 jointID[8] = {
    0x00, 0x14, 0x00, 0x13, 0x00, 0x18, 0x00, 0x19,
};

/* 804530C8-804530D0 0008+00 s=1 e=0 z=0  None .sdata2    effName$41286 */
SECTION_SDATA2 static u8 effName_41286[8] = {
    0x88, 0xE1, 0x88, 0xE2, 0x88, 0xE3, 0x88, 0xE4,
};

/* 804530D0-804530D8 0006+02 s=1 e=0 z=0  None .sdata2    effName$41312 */
SECTION_SDATA2 static u8 effName_41312[6 + 2 /* padding */] = {
    0x0A,
    0x58,
    0x0A,
    0x59,
    0x0B,
    0x9D,
    /* padding */
    0x00,
    0x00,
};

/* 804530D8-804530E0 0006+02 s=1 e=0 z=0  None .sdata2    name0$41422 */
SECTION_SDATA2 static u8 name0[6 + 2 /* padding */] = {
    0x02,
    0xA3,
    0x83,
    0xA2,
    0x88,
    0x4F,
    /* padding */
    0x00,
    0x00,
};

/* 804530E0-804530E8 0006+02 s=1 e=0 z=0  None .sdata2    name1$41423 */
SECTION_SDATA2 static u8 name1[6 + 2 /* padding */] = {
    0x02,
    0xA3,
    0x83,
    0xA3,
    0x88,
    0x50,
    /* padding */
    0x00,
    0x00,
};

/* 804530E8-804530F0 0006+02 s=1 e=0 z=0  None .sdata2    effID$41443 */
SECTION_SDATA2 static u8 effID[6 + 2 /* padding */] = {
    0x02,
    0x44,
    0x02,
    0x45,
    0x02,
    0x46,
    /* padding */
    0x00,
    0x00,
};

/* 804530F0-804530F4 0004+00 s=1 e=0 z=0  None .sdata2    normalNameID$41521 */
SECTION_SDATA2 static u8 normalNameID[4] = {
    0x83,
    0x90,
    0x83,
    0x91,
};

/* 804530F4-804530F8 0004+00 s=1 e=0 z=0  None .sdata2    ganonNameID$41522 */
SECTION_SDATA2 static u8 ganonNameID[4] = {
    0x8C,
    0x2A,
    0x8C,
    0x2B,
};

/* 804530F8-80453100 0008+00 s=1 e=0 z=0  None .sdata2    effDataTable$41650 */
SECTION_SDATA2 static u8 effDataTable[8] = {
    0x02, 0xA5, 0x02, 0xA6, 0x02, 0xA7, 0x02, 0xA8,
};

/* 80453100-80453104 0004+00 s=4 e=0 z=0  None .sdata2    @41718 */
SECTION_SDATA2 static f32 lit_41718 = 13.0f / 20.0f;

/* 80453104-8045310C 0008+00 s=1 e=0 z=0  None .sdata2    cutSplashName$41756 */
SECTION_SDATA2 static u8 cutSplashName[8] = {
    0x01, 0xB8, 0x01, 0xB9, 0x01, 0xBA, 0x01, 0xBB,
};

/* 8045310C-80453110 0004+00 s=1 e=0 z=0  None .sdata2    effName$42224 */
SECTION_SDATA2 static u8 effName_42224[4] = {
    0x88,
    0x18,
    0x88,
    0x19,
};

/* 80453110-80453114 0004+00 s=1 e=0 z=0  None .sdata2    effName$42309 */
SECTION_SDATA2 static u8 effName_42309[4] = {
    0x08,
    0x14,
    0x08,
    0x15,
};

/* 80453114-80453118 0004+00 s=1 e=0 z=0  None .sdata2    effName$42340 */
SECTION_SDATA2 static u8 effName_42340[4] = {
    0x08,
    0x16,
    0x08,
    0x17,
};

/* 80453118-8045311C 0004+00 s=4 e=0 z=0  None .sdata2    @42493 */
SECTION_SDATA2 static f32 lit_42493 = -60.0f;

/* 8045311C-80453120 0004+00 s=2 e=0 z=0  None .sdata2    @42622 */
SECTION_SDATA2 static f32 lit_42622 = -29.0f;

/* 80453120-80453124 0004+00 s=1 e=0 z=0  None .sdata2    @42685 */
SECTION_SDATA2 static f32 lit_42685 = 1.0f / 6.0f;

/* 80453124-80453128 0004+00 s=1 e=0 z=0  None .sdata2    @42686 */
SECTION_SDATA2 static f32 lit_42686 = 0.00390625f;

/* 80453128-8045312C 0004+00 s=1 e=0 z=0  None .sdata2    @42687 */
SECTION_SDATA2 static f32 lit_42687 = 2.6179938316345215f;

/* 8045312C-80453130 0004+00 s=1 e=0 z=0  None .sdata2    @42688 */
SECTION_SDATA2 static f32 lit_42688 = 0.5235987901687622f;

/* 80453130-80453134 0004+00 s=1 e=0 z=0  None .sdata2    @42933 */
SECTION_SDATA2 static f32 lit_42933 = 115.0f;

/* 80453134-80453138 0004+00 s=1 e=0 z=0  None .sdata2    @42934 */
SECTION_SDATA2 static f32 lit_42934 = -130.0f;

/* 80453138-8045313C 0004+00 s=1 e=0 z=0  None .sdata2    @43529 */
SECTION_SDATA2 static f32 lit_43529 = 180.0f;

/* 8045313C-80453140 0004+00 s=2 e=0 z=0  None .sdata2    @43530 */
SECTION_SDATA2 static f32 lit_43530 = -120.0f;

/* 80453140-80453144 0004+00 s=2 e=0 z=0  None .sdata2    @43531 */
SECTION_SDATA2 static f32 lit_43531 = -200.0f;

/* 80453144-80453148 0004+00 s=1 e=0 z=0  None .sdata2    @44003 */
SECTION_SDATA2 static f32 lit_44003 = -0.3826834261417389f;

/* 80453148-8045314C 0004+00 s=1 e=0 z=0  None .sdata2    @44004 */
SECTION_SDATA2 static f32 lit_44004 = -0.1736481785774231f;

/* 8045314C-80453150 0004+00 s=1 e=0 z=0  None .sdata2    fFootJoint$44785 */
SECTION_SDATA2 static u8 fFootJoint[4] = {
    0x00,
    0x10,
    0x00,
    0x15,
};

/* 80453150-80453154 0004+00 s=1 e=0 z=0  None .sdata2    bFootJoint$44786 */
SECTION_SDATA2 static u8 bFootJoint[4] = {
    0x00,
    0x1C,
    0x00,
    0x21,
};

/* 80453154-80453158 0004+00 s=1 e=0 z=0  None .sdata2    @45401 */
SECTION_SDATA2 static f32 lit_45401 = 165.0f;

/* 80453158-8045315C 0004+00 s=2 e=0 z=0  None .sdata2    @45501 */
SECTION_SDATA2 static f32 lit_45501 = -1000.0f;

/* 8045315C-80453160 0004+00 s=1 e=0 z=0  None .sdata2    @45756 */
SECTION_SDATA2 static f32 lit_45756 = -1.5f;

/* 80453160-80453164 0004+00 s=1 e=0 z=0  None .sdata2    @46081 */
SECTION_SDATA2 static f32 lit_46081 = 16.5f;

/* 80453164-80453168 0004+00 s=3 e=0 z=0  None .sdata2    @46462 */
SECTION_SDATA2 static f32 lit_46462 = 56.0f;

/* 80453168-8045316C 0004+00 s=1 e=0 z=0  None .sdata2    @47052 */
SECTION_SDATA2 static f32 lit_47052 = 9000000.0f;

/* 8045316C-80453170 0004+00 s=1 e=0 z=0  None .sdata2    @47417 */
SECTION_SDATA2 static f32 lit_47417 = -6144.0f;

/* 80453170-80453174 0004+00 s=3 e=0 z=0  None .sdata2    @47597 */
SECTION_SDATA2 static f32 lit_47597 = 13.5f;

/* 80453174-80453178 0004+00 s=1 e=0 z=0  None .sdata2    @47598 */
SECTION_SDATA2 static f32 lit_47598 = 0.2327105700969696f;

/* 80453178-8045317C 0004+00 s=1 e=0 z=0  None .sdata2    @47725 */
SECTION_SDATA2 static f32 lit_47725 = 3072.0f;

/* 8045317C-80453180 0004+00 s=1 e=0 z=0  None .sdata2    @47726 */
SECTION_SDATA2 static f32 lit_47726 = 1536.0f;

/* 80453180-80453184 0004+00 s=2 e=0 z=0  None .sdata2    @48076 */
SECTION_SDATA2 static f32 lit_48076 = 85.0f;

/* 80453184-80453188 0004+00 s=2 e=0 z=0  None .sdata2    @48077 */
SECTION_SDATA2 static f32 lit_48077 = 12.5f;

/* 80453188-8045318C 0004+00 s=2 e=0 z=0  None .sdata2    @48078 */
SECTION_SDATA2 static f32 lit_48078 = 14.5f;

/* 8045318C-80453190 0004+00 s=1 e=0 z=0  None .sdata2    @48504 */
SECTION_SDATA2 static f32 lit_48504 = 86.0f;

/* 80453190-80453194 0004+00 s=1 e=0 z=0  None .sdata2    @48505 */
SECTION_SDATA2 static f32 lit_48505 = 71.0f;

/* 80453194-80453198 0004+00 s=1 e=0 z=0  None .sdata2    @48506 */
SECTION_SDATA2 static f32 lit_48506 = 63.0f;

/* 80453198-8045319C 0004+00 s=1 e=0 z=0  None .sdata2    @49124 */
SECTION_SDATA2 static f32 lit_49124 = 40000.0f;

/* 8045319C-804531A0 0004+00 s=1 e=0 z=0  None .sdata2    @49395 */
SECTION_SDATA2 static f32 lit_49395 = 0.33864477276802063f;

/* 804531A0-804531A4 0004+00 s=1 e=0 z=0  None .sdata2    @49396 */
SECTION_SDATA2 static f32 lit_49396 = -29.525135040283203f;

/* 804531A4-804531A8 0004+00 s=1 e=0 z=0  None .sdata2    @49938 */
SECTION_SDATA2 static f32 lit_49938 = 0.20943951606750488f;

/* 804531A8-804531AC 0004+00 s=1 e=0 z=0  None .sdata2    @49992 */
SECTION_SDATA2 static f32 lit_49992 = 20.5f;

/* 804531AC-804531B0 0004+00 s=1 e=0 z=0  None .sdata2    @50951 */
SECTION_SDATA2 static f32 lit_50951 = 135.0f;

/* 804531B0-804531B4 0004+00 s=1 e=0 z=0  None .sdata2    @51575 */
SECTION_SDATA2 static f32 lit_51575 = 155.0f;

/* 804531B4-804531B8 0004+00 s=4 e=0 z=0  None .sdata2    @52234 */
SECTION_SDATA2 static f32 lit_52234 = 7.5f;

/* 804531B8-804531BC 0004+00 s=1 e=0 z=0  None .sdata2    @52470 */
SECTION_SDATA2 static f32 lit_52470 = 17.5f;

/* 804531BC-804531C0 0004+00 s=1 e=0 z=0  None .sdata2    @52534 */
SECTION_SDATA2 static f32 lit_52534 = -9.0f;

/* 804531C0-804531C4 0004+00 s=1 e=0 z=0  None .sdata2    @52535 */
SECTION_SDATA2 static f32 lit_52535 = -17.0f;

/* 804531C4-804531C8 0004+00 s=2 e=0 z=0  None .sdata2    @52536 */
SECTION_SDATA2 static f32 lit_52536 = -7.0f;

/* 804531C8-804531CC 0004+00 s=1 e=0 z=0  None .sdata2    @52882 */
SECTION_SDATA2 static f32 lit_52882 = 94.0f;

/* 804531CC-804531D0 0004+00 s=2 e=0 z=0  None .sdata2    @52883 */
SECTION_SDATA2 static f32 lit_52883 = 97.0f;

/* 804531D0-804531D4 0004+00 s=1 e=0 z=0  None .sdata2    @52884 */
SECTION_SDATA2 static f32 lit_52884 = 19.0f / 20.0f;

/* 804531D4-804531D8 0004+00 s=1 e=0 z=0  None .sdata2    @53012 */
SECTION_SDATA2 static f32 lit_53012 = 66.0f;

/* 804531D8-804531E0 0008+00 s=1 e=0 z=0  None .sdata2    snowID$53110 */
SECTION_SDATA2 static u8 snowID[8] = {
    0x88, 0x4D, 0x88, 0x4E, 0x88, 0x51, 0x88, 0x52,
};

/* 804531E0-804531E8 0008+00 s=1 e=0 z=0  None .sdata2    smokeID$53111 */
SECTION_SDATA2 static u8 smokeID[8] = {
    0x83, 0xA0, 0x83, 0xA1, 0x83, 0xA4, 0x83, 0xA5,
};

/* 804531E8-804531F0 0008+00 s=1 e=0 z=0  None .sdata2    waterColor$53845 */
SECTION_SDATA2 static u8 waterColor[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804531F0-804531F4 0004+00 s=1 e=0 z=0  None .sdata2    @55047 */
SECTION_SDATA2 static f32 lit_55047 = 77.0f;

/* 804531F4-804531F8 0004+00 s=1 e=0 z=0  None .sdata2    @55048 */
SECTION_SDATA2 static f32 lit_55048 = 4060.0f;

/* 8009F034-8009FFF8 0FC4+00 s=1 e=0 z=0  None .text      setHatAngle__9daAlink_cFv */
//	8009F06C: 803621B8 (_savegpr_20)
//	8009F10C: 80347138 (PSVECSquareMag)
//	8009F110: 80452D50 (lit_8247)
//	8009F15C: 8005B2F8 (dKyw_get_AllWind_vec__FP4cXyzP4cXyzPf)
//	8009F178: 80452CC0 (lit_6108)
//	8009F18C: 80452CB8 (lit_6040)
//	8009F194: 80452C9C (lit_5944)
//	8009F1B8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8009F1EC: 80346E4C (PSMTXMultVecSR)
//	8009F220: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8009F248: 80346E4C (PSMTXMultVecSR)
//	8009F250: 80267128 (atan2sX_Z__4cXyzCFv)
//	8009F274: 80430D24 (BaseY__4cXyz)
//	8009F278: 80430D24 (BaseY__4cXyz)
//	8009F280: 80346E4C (PSMTXMultVecSR)
//	8009F288: 80267128 (atan2sX_Z__4cXyzCFv)
//	8009F29C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8009F2AC: 804531F0 (lit_55047)
//	8009F2C8: 80430D0C (BaseX__4cXyz)
//	8009F2CC: 80430D0C (BaseX__4cXyz)
//	8009F2D4: 80346E4C (PSMTXMultVecSR)
//	8009F2DC: 80267128 (atan2sX_Z__4cXyzCFv)
//	8009F334: 80270E24 (cLib_distanceAngleS__Fss)
//	8009F348: 80452CC0 (lit_6108)
//	8009F35C: 80347138 (PSVECSquareMag)
//	8009F360: 80452CC0 (lit_6108)
//	8009F370: 80452CE8 (lit_6846)
//	8009F378: 80452CF0 (lit_6847)
//	8009F3C0: 80452CF8 (lit_6848)
//	8009F3CC: 80450AE0 (__float_nan)
//	8009F3D0: 80450AE0 (__float_nan)
//	8009F43C: 80450AE0 (__float_nan)
//	8009F440: 80450AE0 (__float_nan)
//	8009F458: 80267674 (cM_atan2s__Fff)
//	8009F468: 80267150 (atan2sY_XZ__4cXyzCFv)
//	8009F478: 80452CC0 (lit_6108)
//	8009F48C: 80347138 (PSVECSquareMag)
//	8009F490: 80452CC0 (lit_6108)
//	8009F4A0: 80452CE8 (lit_6846)
//	8009F4A8: 80452CF0 (lit_6847)
//	8009F4F0: 80452CF8 (lit_6848)
//	8009F4FC: 80450AE0 (__float_nan)
//	8009F500: 80450AE0 (__float_nan)
//	8009F56C: 80450AE0 (__float_nan)
//	8009F570: 80450AE0 (__float_nan)
//	8009F574: 80452D88 (lit_8782)
//	8009F584: 80439A20 (sincosTable___5JMath)
//	8009F588: 80439A20 (sincosTable___5JMath)
//	8009F59C: 80452CB8 (lit_6040)
//	8009F5C0: 80430CF4 (Zero__4cXyz)
//	8009F5C4: 80430CF4 (Zero__4cXyz)
//	8009F5FC: 803650D0 (abs)
//	8009F60C: 803650D0 (abs)
//	8009F640: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8009F674: 80266B84 (__ml__4cXyzCFf)
//	8009F684: 80347090 (PSVECAdd)
//	8009F698: 80452CC0 (lit_6108)
//	8009F6C0: 8034739C (PSVECSquareDistance)
//	8009F6C4: 80452CB8 (lit_6040)
//	8009F6D0: 80452CC0 (lit_6108)
//	8009F6E8: 80347090 (PSVECAdd)
//	8009F720: 800E247C (multVecMagneBootInvMtx__9daAlink_cFP4cXyz)
//	8009F734: 80452D14 (lit_7307)
//	8009F754: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	8009F768: 80452D3C (lit_7808)
//	8009F77C: 80452D3C (lit_7808)
//	8009F794: 80452D88 (lit_8782)
//	8009F7A0: 80452CC0 (lit_6108)
//	8009F7B4: 80452D88 (lit_8782)
//	8009F7C0: 80452CC0 (lit_6108)
//	8009F7D8: 803DD470 (now__14mDoMtx_stack_c)
//	8009F7DC: 803DD470 (now__14mDoMtx_stack_c)
//	8009F7E0: 803464B0 (PSMTXCopy)
//	8009F7F4: 803DD470 (now__14mDoMtx_stack_c)
//	8009F7F8: 803DD470 (now__14mDoMtx_stack_c)
//	8009F800: 803464E4 (PSMTXConcat)
//	8009F818: 803DD470 (now__14mDoMtx_stack_c)
//	8009F81C: 803DD470 (now__14mDoMtx_stack_c)
//	8009F820: 803464B0 (PSMTXCopy)
//	8009F824: 803DD470 (now__14mDoMtx_stack_c)
//	8009F828: 803DD470 (now__14mDoMtx_stack_c)
//	8009F82C: 80430D24 (BaseY__4cXyz)
//	8009F830: 80430D24 (BaseY__4cXyz)
//	8009F838: 80346E4C (PSMTXMultVecSR)
//	8009F83C: 803DD470 (now__14mDoMtx_stack_c)
//	8009F840: 803DD470 (now__14mDoMtx_stack_c)
//	8009F844: 80430D0C (BaseX__4cXyz)
//	8009F848: 80430D0C (BaseX__4cXyz)
//	8009F850: 80346D6C (PSMTXMultVec)
//	8009F858: 803DD470 (now__14mDoMtx_stack_c)
//	8009F85C: 803DD470 (now__14mDoMtx_stack_c)
//	8009F874: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8009F888: 80452CC0 (lit_6108)
//	8009F89C: 80347138 (PSVECSquareMag)
//	8009F8A0: 80452CC0 (lit_6108)
//	8009F8B0: 80452CE8 (lit_6846)
//	8009F8B8: 80452CF0 (lit_6847)
//	8009F900: 80452CF8 (lit_6848)
//	8009F90C: 80450AE0 (__float_nan)
//	8009F910: 80450AE0 (__float_nan)
//	8009F97C: 80450AE0 (__float_nan)
//	8009F980: 80450AE0 (__float_nan)
//	8009F998: 80267674 (cM_atan2s__Fff)
//	8009F9A8: 80267150 (atan2sY_XZ__4cXyzCFv)
//	8009F9F4: 80267674 (cM_atan2s__Fff)
//	8009FA68: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8009FAB0: 80452CC0 (lit_6108)
//	8009FADC: 80267674 (cM_atan2s__Fff)
//	8009FB28: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8009FB60: 80452DF8 (lit_13700)
//	8009FB6C: 80452CB0 (lit_6025)
//	8009FC60: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8009FC74: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8009FD88: 8034739C (PSVECSquareDistance)
//	8009FD8C: 80452CC0 (lit_6108)
//	8009FD9C: 80452CE8 (lit_6846)
//	8009FDA4: 80452CF0 (lit_6847)
//	8009FDEC: 80452CF8 (lit_6848)
//	8009FDF8: 80450AE0 (__float_nan)
//	8009FDFC: 80450AE0 (__float_nan)
//	8009FE68: 80450AE0 (__float_nan)
//	8009FE6C: 80450AE0 (__float_nan)
//	8009FE70: 80453100 (lit_41718)
//	8009FE7C: 80452CE0 (lit_6845)
//	8009FE84: 80452CB8 (lit_6040)
//	8009FEAC: 80453058 (lit_37152)
//	8009FEB0: 80452CB8 (lit_6040)
//	8009FEB4: 80452F0C (lit_20496)
//	8009FEB8: 804531F4 (lit_55048)
//	8009FEE8: 80439A20 (sincosTable___5JMath)
//	8009FEEC: 80439A20 (sincosTable___5JMath)
//	8009FEF0: 80452ED4 (lit_18929)
//	8009FEF4: 80452CB0 (lit_6025)
//	8009FFB4: 800A002C (setHairAngle__9daAlink_cFP4cXyzff)
//	8009FFE4: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHatAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/setHatAngle__9daAlink_cFv.s"
}
#pragma pop

/* 8009FFF8-800A002C 0034+00 s=1 e=0 z=0  None .text      calcHairAngle__9daAlink_cFPs */
//	800A0018: 80270540 (cLib_addCalcAngleS__FPsssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::calcHairAngle(s16* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/calcHairAngle__9daAlink_cFPs.s"
}
#pragma pop

/* ############################################################################################## */
/* 804531F8-804531FC 0004+00 s=2 e=0 z=0  None .sdata2    @55145 */
SECTION_SDATA2 static f32 lit_55145 = 1.0f / 30.0f;

/* 804531FC-80453200 0004+00 s=1 e=0 z=0  None .sdata2    @55146 */
SECTION_SDATA2 static f32 lit_55146 = 6000.0f;

/* 80453200-80453204 0004+00 s=1 e=0 z=0  None .sdata2    @55147 */
SECTION_SDATA2 static f32 lit_55147 = 8000.0f;

/* 80453204-80453208 0004+00 s=1 e=0 z=0  None .sdata2    @55148 */
SECTION_SDATA2 static f32 lit_55148 = 7000.0f;

/* 80453208-8045320C 0004+00 s=1 e=0 z=0  None .sdata2    @55149 */
SECTION_SDATA2 static f32 lit_55149 = -9000.0f;

/* 8045320C-80453210 0004+00 s=1 e=0 z=0  None .sdata2    @55150 */
SECTION_SDATA2 static f32 lit_55150 = -15000.0f;

/* 80453210-80453214 0004+00 s=1 e=0 z=0  None .sdata2    @55151 */
SECTION_SDATA2 static f32 lit_55151 = -7000.0f;

/* 800A002C-800A0744 0718+00 s=1 e=0 z=0  None .text      setHairAngle__9daAlink_cFP4cXyzff */
//	800A007C: 80347138 (PSVECSquareMag)
//	800A0080: 80452CC0 (lit_6108)
//	800A0090: 80452CE8 (lit_6846)
//	800A0098: 80452CF0 (lit_6847)
//	800A00E0: 80452CF8 (lit_6848)
//	800A00EC: 80450AE0 (__float_nan)
//	800A00F0: 80450AE0 (__float_nan)
//	800A015C: 80450AE0 (__float_nan)
//	800A0160: 80450AE0 (__float_nan)
//	800A0178: 80452CC0 (lit_6108)
//	800A0188: 80347138 (PSVECSquareMag)
//	800A018C: 80452CC0 (lit_6108)
//	800A019C: 80452CE8 (lit_6846)
//	800A01A4: 80452CF0 (lit_6847)
//	800A01EC: 80452CF8 (lit_6848)
//	800A01F8: 80450AE0 (__float_nan)
//	800A01FC: 80450AE0 (__float_nan)
//	800A0268: 80450AE0 (__float_nan)
//	800A026C: 80450AE0 (__float_nan)
//	800A0278: 80452CB8 (lit_6040)
//	800A0294: 8009FFF8 (calcHairAngle__9daAlink_cFPs)
//	800A02A0: 8009FFF8 (calcHairAngle__9daAlink_cFPs)
//	800A02AC: 8009FFF8 (calcHairAngle__9daAlink_cFPs)
//	800A02B8: 8009FFF8 (calcHairAngle__9daAlink_cFPs)
//	800A02C4: 8009FFF8 (calcHairAngle__9daAlink_cFPs)
//	800A02D0: 8009FFF8 (calcHairAngle__9daAlink_cFPs)
//	800A02DC: 8009FFF8 (calcHairAngle__9daAlink_cFPs)
//	800A02E8: 8009FFF8 (calcHairAngle__9daAlink_cFPs)
//	800A02F4: 8009FFF8 (calcHairAngle__9daAlink_cFPs)
//	800A0300: 8009FFF8 (calcHairAngle__9daAlink_cFPs)
//	800A031C: 804531F8 (lit_55145)
//	800A0330: 80452DEC (lit_13119)
//	800A0334: 80452FDC (lit_27477)
//	800A0340: 80452DB8 (lit_10041)
//	800A0344: 80267954 (cM_rndF__Ff)
//	800A0348: 80452F08 (lit_20495)
//	800A0354: 80452D18 (lit_7308)
//	800A0358: 80267954 (cM_rndF__Ff)
//	800A035C: 80452DB8 (lit_10041)
//	800A0384: 80267954 (cM_rndF__Ff)
//	800A0388: 80452F08 (lit_20495)
//	800A0394: 80452D18 (lit_7308)
//	800A0398: 80267954 (cM_rndF__Ff)
//	800A039C: 80452DB8 (lit_10041)
//	800A03C0: 80452F0C (lit_20496)
//	800A03C4: 80267954 (cM_rndF__Ff)
//	800A03C8: 80452E60 (lit_14787)
//	800A03D4: 80452D18 (lit_7308)
//	800A03D8: 80267954 (cM_rndF__Ff)
//	800A03DC: 80452DB8 (lit_10041)
//	800A0400: 80452F0C (lit_20496)
//	800A0404: 80267954 (cM_rndF__Ff)
//	800A0408: 80452E60 (lit_14787)
//	800A0414: 80452D18 (lit_7308)
//	800A0418: 80267954 (cM_rndF__Ff)
//	800A041C: 80452DB8 (lit_10041)
//	800A0440: 80452CB8 (lit_6040)
//	800A0480: 80439A20 (sincosTable___5JMath)
//	800A0484: 80439A20 (sincosTable___5JMath)
//	800A04A0: 80452C98 (lit_5943)
//	800A04F8: 80452CC0 (lit_6108)
//	800A0504: 804531FC (lit_55146)
//	800A0520: 80453200 (lit_55147)
//	800A053C: 80452E4C (lit_14782)
//	800A0558: 80453204 (lit_55148)
//	800A0574: 80452E54 (lit_14784)
//	800A0594: 80452D5C (lit_8322)
//	800A05B0: 80452E4C (lit_14782)
//	800A05CC: 80453200 (lit_55147)
//	800A05E8: 80452E54 (lit_14784)
//	800A0604: 80453204 (lit_55148)
//	800A0620: 80452CC0 (lit_6108)
//	800A062C: 80453208 (lit_55149)
//	800A0648: 8045320C (lit_55150)
//	800A0680: 80453158 (lit_45501)
//	800A069C: 80452E5C (lit_14786)
//	800A06D0: 80453210 (lit_55151)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHairAngle(cXyz* param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setHairAngle__9daAlink_cFP4cXyzff.s"
}
#pragma pop

/* 800A0744-800A07D8 0094+00 s=0 e=1 z=0  None .text      setLookPosFromOut__9daAlink_cFP4cXyz */
//	800A0778: 8034739C (PSVECSquareDistance)
//	800A0788: 8034739C (PSVECSquareDistance)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLookPosFromOut(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setLookPosFromOut__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* ############################################################################################## */
/* 8038D658-8038D664 000C+00 s=69 e=0 z=0  None .rodata    @3757 */
SECTION_RODATA static u8 const lit_3757[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038D664-8038D6BC 0058+00 s=41 e=0 z=0  None .rodata    m__19daAlinkHIO_basic_c0 */
SECTION_RODATA static u8 const m__19daAlinkHIO_basic_c0[88] = {
    0x00, 0x00, 0x4E, 0x20, 0xD8, 0xF0, 0x1F, 0x40, 0x00, 0x01, 0x00, 0x1E, 0x01, 0x90, 0x02,
    0x58, 0x40, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x3F, 0x33,
    0x33, 0x33, 0x40, 0x40, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x42, 0xAA, 0x00, 0x00, 0x43,
    0x96, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
    0x41, 0xB8, 0x00, 0x00, 0x42, 0x24, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33, 0x3F, 0x00, 0x00,
    0x00, 0x3F, 0x33, 0x33, 0x33, 0x43, 0xC8, 0x00, 0x00, 0x45, 0x9C, 0x40, 0x00,
};

/* 8038D6BC-8038D714 0058+00 s=34 e=0 z=0  None .rodata    m__18daAlinkHIO_move_c0 */
SECTION_RODATA static u8 const m__18daAlinkHIO_move_c0[88] = {
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33, 0x40, 0x40, 0x00, 0x00, 0x40, 0x80, 0x00,
    0x00, 0x41, 0x40, 0x00, 0x00, 0x11, 0x94, 0x00, 0x64, 0x00, 0x05, 0x00, 0x00, 0x3F, 0x80,
    0x00, 0x00, 0x3F, 0x40, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x3E, 0xCC, 0xCC, 0xCD, 0x3F,
    0x4C, 0xCC, 0xCD, 0x41, 0xB8, 0x00, 0x00, 0x3F, 0xF3, 0x33, 0x33, 0x40, 0x0C, 0xCC, 0xCD,
    0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x8C, 0xCC, 0xCD, 0x3F, 0xC0, 0x00, 0x00, 0x3F, 0x7D, 0x70,
    0xA4, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33, 0x3E, 0xCC, 0xCC, 0xCD,
};

/* 8038D714-8038D768 0054+00 s=10 e=0 z=0  None .rodata    m__21daAlinkHIO_atnMove_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_atnMove_c0[84] = {
    0x0B, 0xB8, 0x07, 0xD0, 0x00, 0x06, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x8C,
    0xCC, 0xCD, 0x3F, 0xC0, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A,
    0x41, 0x50, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x40, 0xF0, 0x00, 0x00, 0x3F, 0x33,
    0x33, 0x33, 0x3F, 0xB3, 0x33, 0x33, 0x3E, 0x80, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33,
    0x41, 0x70, 0x00, 0x00, 0x40, 0x20, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x3F, 0x00,
    0x00, 0x00, 0x3E, 0xCC, 0xCC, 0xCD, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66,
};

/* 8038D768-8038D7BC 0054+00 s=3 e=0 z=0  None .rodata    m__26daAlinkHIO_noActAtnMove_c0 */
SECTION_RODATA static u8 const m__26daAlinkHIO_noActAtnMove_c0[84] = {
    0x0B, 0xB8, 0x07, 0xD0, 0x00, 0x06, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x3F, 0x8C,
    0xCC, 0xCD, 0x3F, 0xA6, 0x66, 0x66, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A,
    0x41, 0x50, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x40, 0xF0, 0x00, 0x00, 0x3F, 0x33,
    0x33, 0x33, 0x3F, 0xA6, 0x66, 0x66, 0x3E, 0x80, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33,
    0x41, 0x50, 0x00, 0x00, 0x40, 0x20, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x3E, 0xB3,
    0x33, 0x33, 0x3E, 0xCC, 0xCC, 0xCD, 0x3D, 0xCC, 0xCC, 0xCD, 0x40, 0x13, 0x33, 0x33,
};

/* 8038D7BC-8038D82C 0070+00 s=5 e=0 z=0  None .rodata    m__23daAlinkHIO_frontRoll_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_frontRoll_c0[112] = {
    0x00, 0x1D, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xB0, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x40, 0x40, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x27, 0x10, 0x00, 0x05,
    0x03, 0xE8, 0x00, 0x64, 0x40, 0x40, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66, 0x41, 0xC8, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
    0x41, 0x40, 0x00, 0x00, 0x41, 0x10, 0x00, 0x00, 0x41, 0x98, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00,
};

/* 8038D82C-8038D864 0038+00 s=5 e=0 z=0  None .rodata    m__22daAlinkHIO_backJump_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_backJump_c0[56] = {
    0x00, 0x09, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xC0,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038D864-8038D8CC 0068+00 s=3 e=0 z=0  None .rodata    m__22daAlinkHIO_sideStep_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_sideStep_c0[104] = {
    0x00, 0x05, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x3F,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00,
    0x00, 0x09, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x40, 0x80, 0x00, 0x00, 0x41, 0xE0, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x41, 0xC8,
    0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038D8CC-8038D944 0078+00 s=5 e=0 z=0  None .rodata    m__19daAlinkHIO_slide_c0 */
SECTION_RODATA static u8 const m__19daAlinkHIO_slide_c0[120] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00,
    0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x3F,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x10, 0x00, 0x00,
    0x00, 0x14, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x48,
    0x00, 0x00, 0x41, 0xD8, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD, 0x41, 0x40, 0x00, 0x00, 0x42,
    0x48, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A,
};

/* 8038D944-8038D964 0020+00 s=0 e=0 z=0  None .rodata    m__20daAlinkHIO_cutNmV_c0 */
SECTION_RODATA u8 const m__20daAlinkHIO_cutNmV_c0[32] = {
    0x00, 0x1B, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038D964-8038D984 0020+00 s=0 e=0 z=0  None .rodata    m__20daAlinkHIO_cutNmL_c0 */
SECTION_RODATA u8 const m__20daAlinkHIO_cutNmL_c0[32] = {
    0x00, 0x1B, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00,
};

/* 8038D984-8038D9A4 0020+00 s=0 e=0 z=0  None .rodata    m__20daAlinkHIO_cutNmR_c0 */
SECTION_RODATA u8 const m__20daAlinkHIO_cutNmR_c0[32] = {
    0x00, 0x1B, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x41, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x41, 0x48, 0x00, 0x00,
};

/* 8038D9A4-8038D9C4 0020+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_cutNmSL_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_cutNmSL_c0[32] = {
    0x00, 0x1F, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x88, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038D9C4-8038D9E4 0020+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_cutNmSR_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_cutNmSR_c0[32] = {
    0x00, 0x1B, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x88, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038D9E4-8038DA10 002C+00 s=0 e=0 z=0  None .rodata    m__20daAlinkHIO_cutFnL_c0 */
SECTION_RODATA u8 const m__20daAlinkHIO_cutFnL_c0[44] = {
    0x00, 0x1D, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xE0,
    0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x41, 0xA8, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
};

/* 8038DA10-8038DA3C 002C+00 s=0 e=0 z=0  None .rodata    m__20daAlinkHIO_cutFnV_c0 */
SECTION_RODATA u8 const m__20daAlinkHIO_cutFnV_c0[44] = {
    0x00, 0x21, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xA0,
    0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};

/* 8038DA3C-8038DA68 002C+00 s=0 e=0 z=0  None .rodata    m__20daAlinkHIO_cutFnS_c0 */
SECTION_RODATA u8 const m__20daAlinkHIO_cutFnS_c0[44] = {
    0x00, 0x1F, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x20, 0x00, 0x00, 0x41, 0x20,
    0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x41, 0xB8, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
};

/* 8038DA68-8038DA94 002C+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_cutFnSl_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_cutFnSl_c0[44] = {
    0x00, 0x21, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x70, 0x00, 0x00, 0x40, 0xC0,
    0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x41, 0xA8, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 8038DA94-8038DAC0 002C+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_cutFnSm_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_cutFnSm_c0[44] = {
    0x00, 0x1F, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x20,
    0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 8038DAC0-8038DAEC 002C+00 s=0 e=0 z=0  None .rodata    m__20daAlinkHIO_cutFnR_c0 */
SECTION_RODATA u8 const m__20daAlinkHIO_cutFnR_c0[44] = {
    0x00, 0x22, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x00,
    0x00, 0x00, 0x41, 0x60, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};

/* 8038DAEC-8038DB40 0054+00 s=3 e=0 z=0  None .rodata    m__21daAlinkHIO_cutFnJU_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_cutFnJU_c0[84] = {
    0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD,
    0x40, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x60, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x43, 0x48,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};

/* 8038DB40-8038DB84 0044+00 s=4 e=0 z=0  None .rodata    m__21daAlinkHIO_cutJump_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_cutJump_c0[68] = {
    0x00, 0x11, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x00, 0x41, 0x90, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x10, 0x00, 0x00, 0x41, 0xC8,
    0x00, 0x00, 0x41, 0xD8, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00,
    0x41, 0x50, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
};

/* 8038DB84-8038DC1C 0098+00 s=5 e=0 z=0  None .rodata    m__21daAlinkHIO_cutTurn_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_cutTurn_c0[152] = {
    0x00, 0x2F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xE0, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x0C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x2A, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0xE0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A,
    0x40, 0x40, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x80, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x43, 0x82, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
    0x43, 0xC8, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
};

/* 8038DC1C-8038DC3C 0020+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_hoCutLA_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_hoCutLA_c0[32] = {
    0x00, 0x15, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x60, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};

/* 8038DC3C-8038DC5C 0020+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_hoCutLB_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_hoCutLB_c0[32] = {
    0x00, 0x18, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x80, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};

/* 8038DC5C-8038DC7C 0020+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_hoCutRA_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_hoCutRA_c0[32] = {
    0x00, 0x18, 0x00, 0x00, 0x3F, 0x73, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x50, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};

/* 8038DC7C-8038DC9C 0020+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_hoCutRB_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_hoCutRB_c0[32] = {
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};

/* 8038DC9C-8038DCF0 0054+00 s=3 e=0 z=0  None .rodata    m__25daAlinkHIO_hoCutCharge_c0 */
SECTION_RODATA static u8 const m__25daAlinkHIO_hoCutCharge_c0[84] = {
    0x00, 0x06, 0x00, 0x00, 0x3E, 0xE6, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x00, 0x31,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0xD8, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0x41, 0x00, 0x00, 0x00, 0x41, 0x70,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00,
};

/* 8038DCF0-8038DD0C 001C+00 s=0 e=0 z=0  None .rodata    m__20daAlinkHIO_cutDaL_c0 */
SECTION_RODATA u8 const m__20daAlinkHIO_cutDaL_c0[28] = {
    0x00, 0x0C, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};

/* 8038DD0C-8038DD28 001C+00 s=0 e=0 z=0  None .rodata    m__20daAlinkHIO_cutDaR_c0 */
SECTION_RODATA u8 const m__20daAlinkHIO_cutDaR_c0[28] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0,
    0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};

/* 8038DD28-8038DD44 001C+00 s=0 e=0 z=0  None .rodata    m__25daAlinkHIO_cutDaCharge_c0 */
SECTION_RODATA u8 const m__25daAlinkHIO_cutDaCharge_c0[28] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
};

/* 8038DD44-8038DDB8 0074+00 s=5 e=0 z=0  None .rodata    m__21daAlinkHIO_cutDown_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_cutDown_c0[116] = {
    0x00, 0x08, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x10, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x3F,
    0xA6, 0x66, 0x66, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00,
    0x00, 0x49, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x42, 0x8C, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x59, 0x99, 0x9A, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x06, 0x42,
    0x20, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038DDB8-8038DE18 0060+00 s=4 e=0 z=0  None .rodata    m__21daAlinkHIO_cutHead_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_cutHead_c0[96] = {
    0x00, 0x08, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x41, 0x10, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC0, 0x80, 0x00, 0x00,
    0x43, 0x96, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x3F, 0xCC, 0xCC, 0xCD,
};

/* 8038DE18-8038DE8C 0074+00 s=5 e=0 z=0  None .rodata    m__26daAlinkHIO_cutLargeJump_c0 */
SECTION_RODATA static u8 const m__26daAlinkHIO_cutLargeJump_c0[116] = {
    0x00, 0x1D, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xF0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x3F,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00,
    0x00, 0x23, 0x00, 0x00, 0x3F, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x41, 0xB0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41,
    0x20, 0x00, 0x00, 0x43, 0x7A, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 8038DE8C-8038DF28 009C+00 s=21 e=0 z=0  None .rodata    m__17daAlinkHIO_cut_c0 */
SECTION_RODATA static u8 const m__17daAlinkHIO_cut_c0[156] = {
    0x00, 0x12, 0x00, 0x00, 0xBF, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0xBF, 0x80, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0xB8, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0xD8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x0F, 0x00, 0x08, 0x00, 0x0A, 0x00, 0x5A, 0x00, 0x4B, 0x0F, 0xA0,
    0xF0, 0x60, 0x00, 0x1E, 0x41, 0x40, 0x00, 0x00, 0x3F, 0xA0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0xCC, 0xCC, 0xCD, 0x42, 0x34, 0x00, 0x00, 0x3F, 0xD3, 0x33, 0x33,
    0x42, 0x82, 0x00, 0x00, 0x3F, 0x9A, 0xE1, 0x48, 0x42, 0x0C, 0x00, 0x00, 0x40, 0x13, 0x33, 0x33,
    0x40, 0x0C, 0xCC, 0xCD, 0x42, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038DF28-8038DF4C 0024+00 s=1 e=0 z=0  None .rodata    m__21daAlinkHIO_gAtPush_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_gAtPush_c0[36] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00,
};

/* 8038DF4C-8038DF70 0024+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_gAtKick_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_gAtKick_c0[36] = {
    0x00, 0x15, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
    0x40, 0xC0, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00,
};

/* 8038DF70-8038DF9C 002C+00 s=4 e=0 z=0  None .rodata    m__22daAlinkHIO_turnMove_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_turnMove_c0[44] = {
    0x00, 0x1B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xB0, 0x00, 0x00, 0x00, 0x05, 0x09, 0xC4, 0x00, 0xC8, 0x03, 0xE8, 0x3F, 0x8C,
    0xCC, 0xCD, 0x41, 0x98, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00,
};

/* 8038DF9C-8038E01C 0080+00 s=6 e=0 z=0  None .rodata    m__19daAlinkHIO_guard_c0 */
SECTION_RODATA static u8 const m__19daAlinkHIO_guard_c0[128] = {
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x40, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xE0, 0x00, 0x00,
    0x1F, 0x40, 0x13, 0x88, 0x00, 0x00, 0x1F, 0x40, 0x0F, 0xA0, 0x00, 0x00, 0x40, 0x20, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00,
    0x42, 0xA0, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00,
};

/* 8038E01C-8038E068 004C+00 s=8 e=0 z=0  None .rodata    m__20daAlinkHIO_crouch_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_crouch_c0[76] = {
    0x00, 0x09, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x05, 0x01, 0xF4, 0x00, 0x32, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 8038E068-8038E11C 00B4+00 s=26 e=0 z=0  None .rodata    m__22daAlinkHIO_autoJump_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_autoJump_c0[180] = {
    0x00, 0x06, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x40, 0xC0, 0x00,
    0x00, 0x40, 0xE0, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x3F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x3F,
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x00, 0x0A, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x41, 0x30, 0x00, 0x00, 0x01, 0x00, 0x23, 0xC6, 0x2F, 0xFF, 0x00, 0x08, 0x40, 0x00,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66, 0x40,
    0xA0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0xC0, 0x59, 0x99, 0x9A,
    0xC3, 0x48, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x80, 0x00,
    0x00, 0x41, 0x20, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0x2A, 0x00, 0x00, 0x42, 0xC8,
    0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0xC0,
    0x59, 0x99, 0x9A, 0x41, 0x60, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x41, 0xB8, 0x00, 0x00,
};

/* 8038E11C-8038E164 0048+00 s=7 e=0 z=0  None .rodata    m__23daAlinkHIO_smallJump_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_smallJump_c0[72] = {
    0x00, 0x08, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x10, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x3F,
    0x59, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x40, 0xC0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00,
};

/* 8038E164-8038E1B8 0054+00 s=15 e=0 z=0  None .rodata    m__23daAlinkHIO_wallCatch_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_wallCatch_c0[84] = {
    0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x1D,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xD0, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80,
    0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
};

/* 8038E1B8-8038E1E0 0028+00 s=4 e=0 z=0  None .rodata    m__22daAlinkHIO_wallFall_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_wallFall_c0[40] = {
    0x00, 0x16, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0xB8, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00,
};

/* 8038E1E0-8038E1F4 0014+00 s=2 e=0 z=0  None .rodata    m__22daAlinkHIO_wallMove_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_wallMove_c0[20] = {
    0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0x40,
    0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
};

/* 8038E1F4-8038E210 001C+00 s=2 e=0 z=0  None .rodata    m__22daAlinkHIO_wallHang_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_wallHang_c0[28] = {
    0x00, 0x02, 0x00, 0x03, 0x42, 0x48, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x43, 0x16,
    0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x43, 0x7A, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00,
};

/* 8038E210-8038E24C 003C+00 s=7 e=0 z=0  None .rodata    m__22daAlinkHIO_pushpull_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_pushpull_c0[60] = {
    0x00, 0x00, 0x00, 0x78, 0x00, 0x07, 0x00, 0x3C, 0x00, 0x50, 0x00, 0x28, 0x00, 0x02, 0x00,
    0x40, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3E,
    0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3E, 0x19, 0x99, 0x9A, 0x3F, 0x40, 0x00, 0x00,
};

/* 8038E24C-8038E2B0 0064+00 s=1 e=0 z=0  None .rodata    m__23daAlinkHIO_damNormal_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_damNormal_c0[100] = {
    0x00, 0x16, 0x00, 0x00, 0x40, 0x13, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x40, 0x13, 0x33, 0x33, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x40,
    0x13, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00,
    0x00, 0x13, 0x00, 0x00, 0x40, 0x13, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x88, 0x00, 0x00, 0x07, 0xD0, 0x13, 0x88, 0x41, 0x20, 0x00, 0x00, 0x3C, 0xA3,
    0xD7, 0x0A, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};

/* 8038E2B0-8038E36C 00BC+00 s=2 e=0 z=0  None .rodata    m__22daAlinkHIO_damLarge_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_damLarge_c0[188] = {
    0x00, 0x31, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00,
    0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x42, 0x48, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
    0x05, 0x14, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
    0x41, 0xF0, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};

/* 8038E36C-8038E428 00BC+00 s=1 e=0 z=0  None .rodata    m__21daAlinkHIO_damHuge_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_damHuge_c0[188] = {
    0x00, 0x31, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00,
    0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x42, 0x48, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
    0x07, 0xD0, 0x00, 0x00, 0xC0, 0xF0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};

/* 8038E428-8038E454 002C+00 s=1 e=0 z=0  None .rodata    m__22daAlinkHIO_damHorse_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_damHorse_c0[44] = {
    0x00, 0x09, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x09, 0xC4, 0x13, 0x88,
};

/* 8038E454-8038E49C 0048+00 s=9 e=0 z=0  None .rodata    m__21daAlinkHIO_damFall_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_damFall_c0[72] = {
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x19, 0x40,
    0x80, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00,
    0x40, 0x80, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};

/* 8038E49C-8038E4C0 0024+00 s=6 e=0 z=0  None .rodata    m__23daAlinkHIO_damCaught_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_damCaught_c0[36] = {
    0x00, 0x3B, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x01, 0x2C, 0x00, 0x05,
    0x3F, 0x33, 0x33, 0x33, 0x40, 0x40, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66,
};

/* 8038E4C0-8038E54C 008C+00 s=1 e=0 z=0  None .rodata    m__21daAlinkHIO_damSwim_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_damSwim_c0[140] = {
    0x00, 0x16, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x90, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00,
    0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
    0x00, 0x0A, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x30, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x05, 0xDC, 0x0F, 0xA0, 0x41, 0x00, 0x00, 0x00,
    0x3C, 0xA3, 0xD7, 0x0A, 0x3E, 0x80, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};

/* 8038E54C-8038E5A4 0058+00 s=10 e=0 z=0  None .rodata    m__20daAlinkHIO_damage_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_damage_c0[88] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x1E, 0x00, 0x0A, 0x00, 0x03, 0x00, 0x07, 0x00, 0x0A, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00,
    0x1E, 0x00, 0x28, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33, 0x42, 0x0C, 0x00, 0x00,
};

/* 8038E5A4-8038E610 006C+00 s=7 e=0 z=0  None .rodata    m__19daAlinkHIO_horse_c0 */
SECTION_RODATA static u8 const m__19daAlinkHIO_horse_c0[108] = {
    0x00, 0x12, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x41, 0x98, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0xB8, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x3F, 0xB9, 0x99, 0x9A,
    0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x30, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00,
    0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xB8, 0x00, 0x00,
    0x00, 0x64, 0x7F, 0xFF, 0x00, 0x1E, 0x00, 0x19, 0x15, 0x7C, 0xCD, 0x38, 0x3F, 0x99, 0x99, 0x9A,
    0x41, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 800A07D8-800A0868 0090+00 s=2 e=0 z=0  None .text      checkAttentionPosAngle__9daAlink_cFP4cXyz
 */
//	800A081C: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800A0820: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800A0834: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800A083C: 80270E24 (cLib_distanceAngleS__Fss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAttentionPosAngle(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkAttentionPosAngle__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 800A0868-800A093C 00D4+00 s=1 e=0 z=0  None .text
 * checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz          */
//	800A0878: 803621D8 (_savegpr_28)
//	800A0890: 800A07D8 (checkAttentionPosAngle__9daAlink_cFP4cXyz)
//	800A08A4: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800A0928: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkActorPosAngle(fopAc_ac_c* param_0, cXyz** param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz.s"
}
#pragma pop

/* 800A093C-800A142C 0AF0+00 s=1 e=0 z=0  None .text      getNeckAimPos__9daAlink_cFP4cXyzPii */
//	800A094C: 803621C8 (_savegpr_24)
//	800A09AC: 804061C0 (g_dComIfG_gameInfo)
//	800A09B0: 804061C0 (g_dComIfG_gameInfo)
//	800A09D8: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	800A09E4: 80451018 (m_midnaActor__9daPy_py_c)
//	800A0A2C: 804061C0 (g_dComIfG_gameInfo)
//	800A0A30: 804061C0 (g_dComIfG_gameInfo)
//	800A0A40: 80035360 (isSwitch__10dSv_info_cCFii)
//	800A0AE0: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800A0AF4: 80070844 (GetLockonList__12dAttention_cFl)
//	800A0B08: 80070844 (GetLockonList__12dAttention_cFl)
//	800A0B0C: 80073864 (getActor__10dAttList_cFv)
//	800A0B30: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800A0B34: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800A0B3C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800A0B88: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800A0BA0: 8026786C (cM_rnd__Fv)
//	800A0BA4: 80452E44 (lit_14760)
//	800A0BB0: 80452CE0 (lit_6845)
//	800A0BB4: 80267954 (cM_rndF__Ff)
//	800A0BB8: 80452CE0 (lit_6845)
//	800A0C14: 8007353C (LockonTarget__12dAttention_cFl)
//	800A0C24: 80181640 (dCam_getBody__Fv)
//	800A0C28: 80181500 (GetForceLockOnActor__9dCamera_cFv)
//	800A0C3C: 800A0868 (checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz)
//	800A0C88: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800A0C94: 804061C0 (g_dComIfG_gameInfo)
//	800A0C98: 804061C0 (g_dComIfG_gameInfo)
//	800A0CCC: 80073CA4 (convPId__10dAttLook_cFUi)
//	800A0CE0: 80073CA4 (convPId__10dAttLook_cFUi)
//	800A0D00: 80073CA4 (convPId__10dAttLook_cFUi)
//	800A0D18: 800A0868 (checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz)
//	800A0D48: 800A0868 (checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz)
//	800A0D60: 800A0868 (checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz)
//	800A0D80: 800A0868 (checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz)
//	800A0DA0: 800A0868 (checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz)
//	800A0DC8: 800A07D8 (checkAttentionPosAngle__9daAlink_cFP4cXyz)
//	800A0DE8: 800A0868 (checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz)
//	800A0E0C: 80452CC0 (lit_6108)
//	800A0E18: 80439A20 (sincosTable___5JMath)
//	800A0E1C: 80439A20 (sincosTable___5JMath)
//	800A0E34: 80452D68 (lit_8472)
//	800A0E40: 80452D50 (lit_8247)
//	800A0E8C: 800E1374 (getCopyRodControllActor__9daAlink_cFv)
//	800A0E9C: 800A0868 (checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz)
//	800A0EB8: 800A79EC (checkWindSpeedOnAngleAnime__9daAlink_cCFi)
//	800A0EEC: 80452D50 (lit_8247)
//	800A0EF0: 80439A20 (sincosTable___5JMath)
//	800A0EF4: 80439A20 (sincosTable___5JMath)
//	800A0F28: 80452D50 (lit_8247)
//	800A0F2C: 80439A20 (sincosTable___5JMath)
//	800A0F30: 80439A20 (sincosTable___5JMath)
//	800A0F54: 80452D50 (lit_8247)
//	800A0F64: 80452DE0 (lit_11673)
//	800A0F94: 800A07D8 (checkAttentionPosAngle__9daAlink_cFP4cXyz)
//	800A0FD4: 80452CC0 (lit_6108)
//	800A0FE4: 80347138 (PSVECSquareMag)
//	800A0FE8: 80452CB8 (lit_6040)
//	800A100C: 80452DB0 (lit_10039)
//	800A1014: 80452DE0 (lit_11673)
//	800A101C: 80452D50 (lit_8247)
//	800A1064: 80452CC0 (lit_6108)
//	800A1074: 80347138 (PSVECSquareMag)
//	800A1078: 80452CC0 (lit_6108)
//	800A1088: 80452CE8 (lit_6846)
//	800A1090: 80452CF0 (lit_6847)
//	800A10D8: 80452CF8 (lit_6848)
//	800A10E4: 80450AE0 (__float_nan)
//	800A10E8: 80450AE0 (__float_nan)
//	800A1154: 80450AE0 (__float_nan)
//	800A1158: 80450AE0 (__float_nan)
//	800A115C: 80452CB8 (lit_6040)
//	800A1170: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A1184: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	800A1194: 80452D50 (lit_8247)
//	800A11A4: 80452CE0 (lit_6845)
//	800A11F4: 800A07D8 (checkAttentionPosAngle__9daAlink_cFP4cXyz)
//	800A1220: 800B3500 (checkAttentionState__9daAlink_cFv)
//	800A1244: 80439A20 (sincosTable___5JMath)
//	800A1248: 80439A20 (sincosTable___5JMath)
//	800A1260: 80452DB8 (lit_10041)
//	800A1294: 800A07D8 (checkAttentionPosAngle__9daAlink_cFP4cXyz)
//	800A12C8: 801AC57C (dKy_darkworld_check__Fv)
//	800A12D8: 804061C0 (g_dComIfG_gameInfo)
//	800A12DC: 804061C0 (g_dComIfG_gameInfo)
//	800A12E8: 80032BEC (isTransformLV__21dSv_player_status_b_cCFi)
//	800A1314: 80451018 (m_midnaActor__9daPy_py_c)
//	800A133C: 80116E60 (checkDemoMoveMode__9daAlink_cCFUl)
//	800A1378: 801180EC (getDemoLookActor__9daAlink_cFv)
//	800A13A0: 800A0868 (checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz)
//	800A13C0: 800A0868 (checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz)
//	800A13FC: 800A07D8 (checkAttentionPosAngle__9daAlink_cFP4cXyz)
//	800A1418: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getNeckAimPos(cXyz* param_0, int* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/getNeckAimPos__9daAlink_cFP4cXyzPii.s"
}
#pragma pop

/* ############################################################################################## */
/* 8038E610-8038E658 0048+00 s=11 e=0 z=0  None .rodata    m__19daAlinkHIO_canoe_c0 */
SECTION_RODATA static u8 const m__19daAlinkHIO_canoe_c0[72] = {
    0x00, 0x17, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xC0, 0x00, 0x00, 0x00, 0x96, 0x01, 0x68, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x00, 0x41, 0x10, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD, 0x3F,
    0xC0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD,
};

/* 8038E658-8038E6C8 0070+00 s=9 e=0 z=0  None .rodata    m__17daAlinkHIO_bow_c0 */
SECTION_RODATA static u8 const m__17daAlinkHIO_bow_c0[112] = {
    0x00, 0x09, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x1E, 0x00, 0x46, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00, 0x45, 0x9C, 0x40, 0x00, 0x44, 0x48, 0x00, 0x00,
    0x46, 0x0C, 0xA0, 0x00, 0x42, 0x48, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x45, 0x3B, 0x80, 0x00,
    0x43, 0x66, 0x00, 0x00, 0x45, 0x5A, 0xC0, 0x00, 0x44, 0x16, 0x00, 0x00, 0x46, 0x0C, 0xA0, 0x00,
    0x44, 0x7A, 0x00, 0x00, 0x45, 0x7A, 0x00, 0x00, 0x43, 0x7A, 0x00, 0x00, 0x44, 0x48, 0x00, 0x00,
};

/* 8038E6C8-8038E714 004C+00 s=22 e=0 z=0  None .rodata    m__18daAlinkHIO_boom_c0 */
SECTION_RODATA static u8 const m__18daAlinkHIO_boom_c0[76] = {
    0x00, 0x15, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0xB0, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x44, 0xFA, 0x00, 0x00,
    0x45, 0x3B, 0x80, 0x00, 0x45, 0x3B, 0x80, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 8038E714-8038E760 004C+00 s=14 e=0 z=0  None .rodata    m__18daAlinkHIO_bomb_c0 */
SECTION_RODATA static u8 const m__18daAlinkHIO_bomb_c0[76] = {
    0x00, 0xA0, 0x00, 0x32, 0x00, 0x32, 0x00, 0x00, 0xC0, 0x86, 0x66, 0x66, 0xC2, 0xC8, 0x00, 0x00,
    0x3E, 0xB3, 0x33, 0x33, 0x40, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66,
    0x43, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x4C, 0xCC, 0xCD, 0xC0, 0xE0, 0x00, 0x00,
    0x41, 0xD0, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00,
};

/* 8038E760-8038E77C 001C+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_huLight_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_huLight_c0[28] = {
    0x00, 0x03, 0x00, 0x00, 0x00, 0xB5, 0x00, 0x70, 0x00, 0x28, 0xFF, 0xBA, 0x3F, 0x80,
    0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x43, 0xAF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038E77C-8038E7CC 0050+00 s=7 e=0 z=0  None .rodata    m__23daAlinkHIO_kandelaar_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_kandelaar_c0[80] = {
    0x00, 0x1E, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x88, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00, 0x00, 0x50, 0x00, 0x28,
    0x00, 0x14, 0x00, 0x28, 0x00, 0x1E, 0x00, 0x0A, 0x00, 0x03, 0x00, 0xC8, 0x3F, 0x00, 0x00, 0x00,
};

/* 8038E7CC-8038E7F4 0028+00 s=2 e=0 z=0  None .rodata    m__21daAlinkHIO_fmChain_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_fmChain_c0[40] = {
    0x00, 0x14, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x80, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0xBF, 0x8C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 8038E7F4-8038E840 004C+00 s=17 e=0 z=0  None .rodata    m__24daAlinkHIO_magneBoots_c0 */
SECTION_RODATA static u8 const m__24daAlinkHIO_magneBoots_c0[76] = {
    0x00, 0x1D, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xB8, 0x00, 0x00, 0x3E, 0xCC, 0xCC, 0xCD, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xE6, 0x66, 0x66,
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x40, 0x00, 0x00, 0x3E, 0xE6, 0x66, 0x66, 0x3F, 0x19, 0x99, 0x9A,
    0x42, 0x48, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x3E, 0xB3, 0x33, 0x33, 0x3E, 0x99, 0x99, 0x9A,
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x33, 0x33, 0x33,
};

/* 8038E840-8038E870 0030+00 s=6 e=0 z=0  None .rodata    m__20daAlinkHIO_pickUp_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_pickUp_c0[48] = {
    0x00, 0x12, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x50, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
};

/* 8038E870-8038E90C 009C+00 s=16 e=0 z=0  None .rodata    m__19daAlinkHIO_board_c0 */
SECTION_RODATA static u8 const m__19daAlinkHIO_board_c0[156] = {
    0x00, 0x09, 0x00, 0x00, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x00, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3F, 0xCC, 0xCC, 0xCD,
    0x40, 0xA0, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
    0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00,
    0x42, 0x8C, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x42, 0x5C, 0x00, 0x00,
    0x40, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
    0x41, 0xC0, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
};

/* 8038E90C-8038E9C0 00B4+00 s=12 e=0 z=0  None .rodata    m__20daAlinkHIO_bottle_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_bottle_c0[180] = {
    0x00, 0x38, 0x00, 0x00, 0x3F, 0x93, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x42, 0x64, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x3F,
    0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
    0x00, 0x36, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x42, 0x5C, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x3F,
    0x19, 0x99, 0x9A, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
    0x00, 0x2F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x42, 0x40, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0xAE, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x3F,
    0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
};

/* 8038E9C0-8038EA30 0070+00 s=15 e=0 z=0  None .rodata    m__22daAlinkHIO_hookshot_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_hookshot_c0[112] = {
    0x00, 0x0C, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x50, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x44, 0xFA, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
    0x43, 0x16, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00,
    0x45, 0x3B, 0x80, 0x00, 0x43, 0x16, 0x00, 0x00, 0x43, 0x61, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00,
};

/* 8038EA30-8038EA70 0040+00 s=10 e=0 z=0  None .rodata    m__21daAlinkHIO_spinner_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_spinner_c0[64] = {
    0x00, 0x15, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x50, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x0F, 0x01, 0x68, 0x01, 0x68, 0x00, 0x96, 0x00, 0x00,
    0xC0, 0x6C, 0xCC, 0xCD, 0xC2, 0x48, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x41, 0xD0, 0x00, 0x00,
    0x3F, 0x00, 0x00, 0x00, 0x3D, 0xCC, 0xCC, 0xCD, 0x3C, 0x23, 0xD7, 0x0A, 0x42, 0x70, 0x00, 0x00,
};

/* 8038EA70-8038EAFC 008C+00 s=10 e=0 z=0  None .rodata    m__22daAlinkHIO_ironBall_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_ironBall_c0[140] = {
    0x00, 0x13, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0xA0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xD9, 0x99, 0x9A,
    0x40, 0x40, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0xCC, 0xCC, 0xCD,
    0x40, 0x40, 0x00, 0x00, 0x3F, 0xD9, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00,
    0x3F, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00,
    0xC0, 0xB0, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0xC3, 0x16, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x42, 0x70, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};

/* 8038EAFC-8038EB34 0038+00 s=4 e=0 z=0  None .rodata    m__21daAlinkHIO_copyRod_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_copyRod_c0[56] = {
    0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x60, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x42, 0xA0,
    0x00, 0x00, 0x44, 0xBB, 0x80, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x44, 0xFA, 0x00, 0x00,
};

/* 8038EB34-8038EB50 001C+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_zwLight_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_zwLight_c0[28] = {
    0x03, 0x03, 0x00, 0x00, 0x00, 0xB6, 0x00, 0xE1, 0x00, 0xF3, 0xFF, 0xA9, 0x3F, 0x80,
    0x00, 0x00, 0x42, 0x8D, 0x81, 0x00, 0x43, 0x03, 0xD6, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038EB50-8038EB8C 003C+00 s=3 e=0 z=0  None .rodata    m__18daAlinkHIO_item_c0 */
SECTION_RODATA static u8 const m__18daAlinkHIO_item_c0[60] = {
    0x00, 0x0C, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x50, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x0F, 0x27, 0x10, 0xCD,
    0x38, 0x17, 0x70, 0xDC, 0xD8, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66, 0x3F, 0xA6, 0x66, 0x66,
};

/* 8038EB8C-8038EBFC 0070+00 s=14 e=0 z=0  None .rodata    m__20daAlinkHIO_ladder_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_ladder_c0[112] = {
    0x00, 0x0D, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x3F, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x42, 0x40, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x40, 0xA0, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x3E, 0xCC, 0xCC, 0xCD, 0x3F, 0x66, 0x66, 0x66,
    0x40, 0x00, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD,
    0x3F, 0x93, 0x33, 0x33, 0x3F, 0x66, 0x66, 0x66, 0x3F, 0xAC, 0xCC, 0xCD, 0x42, 0xA0, 0x00, 0x00,
};

/* 8038EBFC-8038EC48 004C+00 s=11 e=0 z=0  None .rodata    m__22daAlinkHIO_roofHang_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_roofHang_c0[76] = {
    0x00, 0x22, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xA0, 0x00, 0x00, 0x00, 0x04, 0x00, 0x64, 0x09, 0x60, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD,
    0x40, 0x40, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x40, 0x00, 0x00,
};

/* 8038EC48-8038ED2C 00E4+00 s=10 e=0 z=0  None .rodata    m__18daAlinkHIO_grab_c0 */
SECTION_RODATA static u8 const m__18daAlinkHIO_grab_c0[228] = {
    0x00, 0x04, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x26, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xBF, 0x4C, 0xCC, 0xCD,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00,
    0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00,
    0x00, 0x09, 0x00, 0x00, 0xBF, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0xBF, 0x80, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66,
    0x40, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00,
    0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
    0x00, 0x1E, 0x00, 0x00, 0xBF, 0xA6, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x3F, 0x0C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0x3F, 0x0C, 0xCC, 0xCD,
};

/* 8038ED2C-8038EE28 00FC+00 s=21 e=0 z=0  None .rodata    m__18daAlinkHIO_swim_c0 */
SECTION_RODATA static u8 const m__18daAlinkHIO_swim_c0[252] = {
    0x00, 0x19, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0xBF, 0x80, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x42, 0x18, 0x00, 0x00,
    0x00, 0x0F, 0x03, 0x20, 0x13, 0x88, 0x00, 0x0F, 0x00, 0xC8, 0x13, 0x88, 0x00, 0x5A, 0x00, 0x32,
    0x43, 0x0C, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
    0x40, 0xC0, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x3F, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD,
    0x3F, 0x4C, 0xCC, 0xCD, 0x41, 0x70, 0x00, 0x00, 0x40, 0x60, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66, 0x3F, 0x00, 0x00, 0x00,
    0x3F, 0xA6, 0x66, 0x66, 0x3E, 0xCC, 0xCC, 0xCD, 0x3F, 0x19, 0x99, 0x9A, 0x41, 0x70, 0x00, 0x00,
    0x42, 0x16, 0x00, 0x00, 0xC2, 0x16, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0xC0, 0x80, 0x00, 0x00,
    0xC1, 0xA0, 0x00, 0x00, 0x43, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
    0x3F, 0x66, 0x66, 0x66, 0xBF, 0x33, 0x33, 0x33, 0x3F, 0x19, 0x99, 0x9A, 0x41, 0x50, 0x00, 0x00,
    0x3E, 0x99, 0x99, 0x9A, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66,
};

/* 8038EE28-8038EF28 0100+00 s=32 e=0 z=0  None .rodata    m__20daAlinkHIO_wlMove_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_wlMove_c0[256] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
    0x23, 0x28, 0x00, 0x64, 0x00, 0x05, 0x00, 0x5A, 0x00, 0x32, 0x00, 0x3C, 0x00, 0x32, 0x00, 0x2D,
    0x00, 0x32, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x3F, 0xCC, 0xCC, 0xCD, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0x0C, 0xCC, 0xCD, 0x3F, 0x99, 0x99, 0x9A,
    0x3F, 0xA6, 0x66, 0x66, 0x3D, 0xCC, 0xCC, 0xCD, 0x3E, 0xCC, 0xCC, 0xCD, 0x3E, 0xCC, 0xCC, 0xCD,
    0x3F, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x3E, 0x99, 0x99, 0x9A,
    0x3F, 0x59, 0x99, 0x9A, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x20, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x42, 0xC8, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66,
    0x40, 0xC0, 0x00, 0x00, 0x42, 0x82, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
    0x42, 0x04, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xC8, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x3F, 0x00, 0x00, 0x00,
};

/* 8038EF28-8038EF70 0048+00 s=19 e=0 z=0  None .rodata    m__23daAlinkHIO_wlMoveNoP_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_wlMoveNoP_c0[72] = {
    0x23, 0x28, 0x00, 0x64, 0x00, 0x05, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x3F, 0xE6, 0x66, 0x66, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x40, 0x0C,
    0xCC, 0xCD, 0x3F, 0x8C, 0xCC, 0xCD, 0x3D, 0xCC, 0xCC, 0xCD, 0x3F, 0x19, 0x99, 0x9A, 0x3F,
    0x19, 0x99, 0x9A, 0x40, 0xA0, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x59, 0x99, 0x9A,
    0x3F, 0x66, 0x66, 0x66, 0x40, 0x20, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
};

/* 8038EF70-8038EFA8 0038+00 s=3 e=0 z=0  None .rodata    m__23daAlinkHIO_wlAtnMove_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_wlAtnMove_c0[56] = {
    0x23, 0x28, 0x00, 0x64, 0x00, 0x03, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0xE6,
    0x66, 0x66, 0x3E, 0x4C, 0xCC, 0xCD, 0x3F, 0x19, 0x99, 0x9A, 0x41, 0x90, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x3F, 0xD9, 0x99, 0x9A, 0x3E, 0xCC,
    0xCC, 0xCD, 0x41, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
};

/* 8038EFA8-8038F010 0068+00 s=3 e=0 z=0  None .rodata    m__24daAlinkHIO_wlSideStep_c0 */
SECTION_RODATA static u8 const m__24daAlinkHIO_wlSideStep_c0[104] = {
    0x00, 0x05, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80,
    0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x3F,
    0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x00, 0x17, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x41, 0xB8, 0x00, 0x00, 0x41, 0xF0,
    0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038F010-8038F048 0038+00 s=3 e=0 z=0  None .rodata    m__24daAlinkHIO_wlBackJump_c0 */
SECTION_RODATA static u8 const m__24daAlinkHIO_wlBackJump_c0[56] = {
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x41, 0xF0,
    0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038F048-8038F0A8 0060+00 s=2 e=0 z=0  None .rodata    m__20daAlinkHIO_wlHowl_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_wlHowl_c0[96] = {
    0x00, 0x31, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x90, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
    0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x3F, 0xD9, 0x99, 0x9A, 0x3F, 0x33, 0x33, 0x33,
};

/* 8038F0A8-8038F124 007C+00 s=8 e=0 z=0  None .rodata    m__24daAlinkHIO_wlAutoJump_c0 */
SECTION_RODATA static u8 const m__24daAlinkHIO_wlAutoJump_c0[124] = {
    0x00, 0x03, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x40, 0x80, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x1D, 0x4C, 0x20, 0x08, 0x41, 0x20, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD,
    0x41, 0x20, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0xC0, 0x66, 0x66, 0x66, 0xC2, 0xC8, 0x00, 0x00,
    0x3F, 0x99, 0x99, 0x9A, 0x41, 0x20, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x3F, 0x82, 0x8F, 0x5C,
    0x42, 0x18, 0x00, 0x00, 0x41, 0xF8, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
};

/* 8038F124-8038F138 0014+00 s=4 e=0 z=0  None .rodata    m__20daAlinkHIO_wlPush_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_wlPush_c0[20] = {
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x40, 0x00, 0x00,
};

/* 8038F138-8038F184 004C+00 s=13 e=0 z=0  None .rodata    m__19daAlinkHIO_wlLie_c0 */
SECTION_RODATA static u8 const m__19daAlinkHIO_wlLie_c0[76] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x05, 0x01, 0xF4, 0x00, 0x32, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x3F, 0xD9, 0x99, 0x9A, 0x3F, 0x33, 0x33, 0x33,
    0x40, 0xA0, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x40, 0x40, 0x00, 0x00,
};

/* 8038F184-8038F1A0 001C+00 s=0 e=0 z=0  None .rodata    m__21daAlinkHIO_wlLight_c0 */
SECTION_RODATA u8 const m__21daAlinkHIO_wlLight_c0[28] = {
    0x02, 0x03, 0x00, 0x00, 0x00, 0x78, 0x00, 0x78, 0x00, 0x78, 0xFF, 0xE2, 0x40, 0x40,
    0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0xC4, 0x1F, 0x80, 0x00,
};

/* 8038F1A0-8038F23C 009C+00 s=9 e=0 z=0  None .rodata    m__24daAlinkHIO_wlWallHang_c0 */
SECTION_RODATA static u8 const m__24daAlinkHIO_wlWallHang_c0[156] = {
    0x00, 0x0D, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x41, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x60, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0xF8, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x00, 0x06, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x40, 0xE0, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
    0x43, 0x48, 0x00, 0x00, 0x43, 0x7A, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038F23C-8038F29C 0060+00 s=2 e=0 z=0  None .rodata    m__25daAlinkHIO_wlDamNormal_c0 */
SECTION_RODATA static u8 const m__25daAlinkHIO_wlDamNormal_c0[96] = {
    0x00, 0x09, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x3C, 0x23, 0xD7, 0x0A, 0x3F, 0x80, 0x00, 0x00, 0x3E, 0x80, 0x00, 0x00,
};

/* 8038F29C-8038F308 006C+00 s=2 e=0 z=0  None .rodata    m__24daAlinkHIO_wlDamLarge_c0 */
SECTION_RODATA static u8 const m__24daAlinkHIO_wlDamLarge_c0[108] = {
    0x00, 0x31, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00,
    0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00,
    0x05, 0x14, 0x00, 0x00, 0xC0, 0xA6, 0x66, 0x66, 0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};

/* 8038F308-8038F374 006C+00 s=0 e=0 z=0  None .rodata    m__23daAlinkHIO_wlDamHuge_c0 */
SECTION_RODATA u8 const m__23daAlinkHIO_wlDamHuge_c0[108] = {
    0x00, 0x31, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00,
    0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
    0x07, 0xD0, 0x00, 0x00, 0xC0, 0xF0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0xAA, 0x00, 0x00,
    0x42, 0x34, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};

/* 8038F374-8038F3B4 0040+00 s=6 e=0 z=0  None .rodata    m__23daAlinkHIO_wlDamFall_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_wlDamFall_c0[64] = {
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x40, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x23, 0x42, 0x20, 0x00, 0x00,
    0x42, 0x70, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};

/* 8038F3B4-8038F3C4 0010+00 s=1 e=0 z=0  None .rodata    m__25daAlinkHIO_wlDamCaught_c0 */
SECTION_RODATA static u8 const m__25daAlinkHIO_wlDamCaught_c0[16] = {
    0x01, 0x2C, 0x00, 0x05, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00,
};

/* 8038F3C4-8038F3F0 002C+00 s=3 e=0 z=0  None .rodata    m__22daAlinkHIO_wlDamage_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_wlDamage_c0[44] = {
    0x00, 0x09, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33,
};

/* 8038F3F0-8038F46C 007C+00 s=10 e=0 z=0  None .rodata    m__21daAlinkHIO_wlSlide_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_wlSlide_c0[124] = {
    0x00, 0x14, 0x00, 0x00, 0x3F, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xC8, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xD8, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x40, 0x42, 0x0C, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
    0x42, 0x0C, 0x00, 0x00, 0x40, 0x26, 0x66, 0x66, 0x41, 0x90, 0x00, 0x00, 0x40, 0x06, 0x66, 0x66,
    0x41, 0x20, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33, 0x41, 0xF0, 0x00, 0x00,
};

/* 8038F46C-8038F4A4 0038+00 s=7 e=0 z=0  None .rodata    m__20daAlinkHIO_wlRope_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_wlRope_c0[56] = {
    0x00, 0x10, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x00, 0x5A, 0x00, 0x1E, 0x3F, 0x00, 0x00, 0x00,
    0x3F, 0x99, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x3F, 0x80,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD,
};

/* 8038F4A4-8038F4E0 003C+00 s=0 e=0 z=0  None .rodata    m__22daAlinkHIO_wlAtWaLr_c0 */
SECTION_RODATA u8 const m__22daAlinkHIO_wlAtWaLr_c0[60] = {
    0x00, 0x29, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x80, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20,
    0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00, 0x40,
    0xA0, 0x00, 0x00, 0x42, 0x8C, 0x00, 0x00, 0x42, 0x8C, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00,
};

/* 8038F4E0-8038F51C 003C+00 s=0 e=0 z=0  None .rodata    m__22daAlinkHIO_wlAtWaSc_c0 */
SECTION_RODATA u8 const m__22daAlinkHIO_wlAtWaSc_c0[60] = {
    0x00, 0x0F, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x41, 0x20, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x42, 0xAA, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00,
};

/* 8038F51C-8038F558 003C+00 s=0 e=0 z=0  None .rodata    m__22daAlinkHIO_wlAtWaTl_c0 */
SECTION_RODATA u8 const m__22daAlinkHIO_wlAtWaTl_c0[60] = {
    0x00, 0x2A, 0x00, 0x00, 0x3F, 0x86, 0x66, 0x66, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x41, 0x20, 0x00, 0x00, 0x40, 0xA0,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
};

/* 8038F558-8038F578 0020+00 s=2 e=0 z=0  None .rodata    m__22daAlinkHIO_wlAtRoll_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_wlAtRoll_c0[32] = {
    0x00, 0x28, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xB8, 0x00, 0x00, 0x43, 0x7A, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038F578-8038F5B4 003C+00 s=3 e=0 z=0  None .rodata    m__23daAlinkHIO_wlAtNjump_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_wlAtNjump_c0[60] = {
    0x00, 0x06, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x40, 0xE0, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x41, 0xB8,
    0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x40, 0x00, 0x00, 0x00, 0x42,
    0xA0, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x42, 0xF0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038F5B4-8038F618 0064+00 s=1 e=0 z=0  None .rodata    m__23daAlinkHIO_wlAtCjump_c0 */
SECTION_RODATA static u8 const m__23daAlinkHIO_wlAtCjump_c0[100] = {
    0x00, 0x03, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x00,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00, 0x42,
    0x34, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x42, 0xA0, 0x00,
    0x00, 0x42, 0x70, 0x00, 0x00, 0x42, 0xF0, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00, 0x3F, 0x00,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x3D, 0xCC, 0xCC, 0xCD,
};

/* 8038F618-8038F658 0040+00 s=4 e=0 z=0  None .rodata    m__22daAlinkHIO_wlAtLand_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_wlAtLand_c0[64] = {
    0x00, 0x13, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
};

/* 8038F658-8038F6F4 009C+00 s=6 e=0 z=0  None .rodata    m__22daAlinkHIO_wlAtDown_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_wlAtDown_c0[156] = {
    0x00, 0x03, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x40, 0x80, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x40, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x3F, 0x59, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x10, 0x00, 0x00, 0x00, 0x28, 0x00, 0x03,
    0x42, 0x34, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00,
};

/* 8038F6F4-8038F748 0054+00 s=6 e=0 z=0  None .rodata    m__22daAlinkHIO_wlAtLock_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_wlAtLock_c0[84] = {
    0x00, 0x06, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x78,
    0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x44, 0x09, 0x80, 0x00, 0x41, 0xC8, 0x00, 0x00,
    0x42, 0xAA, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x42, 0xF0,
    0x00, 0x00, 0xC1, 0x00, 0x00, 0x00, 0x44, 0x2F, 0x00, 0x00, 0x44, 0x7A, 0x00, 0x00,
};

/* 8038F748-8038F7A4 005C+00 s=5 e=0 z=0  None .rodata    m__22daAlinkHIO_wlAtBite_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_wlAtBite_c0[92] = {
    0x00, 0x05, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0xC0, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x3F, 0xCC, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x0F, 0x3F, 0x99, 0x99, 0x9A,
    0x40, 0x40, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66,
    0x3F, 0xA6, 0x66, 0x66, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x3E, 0x42, 0x8F, 0x5C,
    0x3E, 0x42, 0x8F, 0x5C, 0x3C, 0xA3, 0xD7, 0x0A, 0x3C, 0xA3, 0xD7, 0x0A,
};

/* 8038F7A4-8038F7DC 0038+00 s=7 e=0 z=0  None .rodata    m__22daAlinkHIO_wlAttack_c0 */
SECTION_RODATA static u8 const m__22daAlinkHIO_wlAttack_c0[56] = {
    0x00, 0x3B, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x05, 0x42, 0xC8, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x43, 0x66, 0x00, 0x00, 0x41, 0x20,
    0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
};

/* 8038F7DC-8038F858 007C+00 s=5 e=0 z=0  None .rodata    m__21daAlinkHIO_wlPoint_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_wlPoint_c0[124] = {
    0x00, 0x06, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x40, 0xE0, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x3F, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x00, 0x14, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x42, 0x48, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0x42, 0x82, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
    0x3F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD,
};

/* 8038F858-8038F8B4 005C+00 s=6 e=0 z=0  None .rodata    m__21daAlinkHIO_wlChain_c0 */
SECTION_RODATA static u8 const m__21daAlinkHIO_wlChain_c0[92] = {
    0x00, 0x27, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0xA4, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x40, 0x00, 0x00, 0x00, 0x14, 0x00, 0x05,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x71, 0x99, 0x9A, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 8038F8B4-8038F95C 00A8+00 s=16 e=0 z=0  None .rodata    m__20daAlinkHIO_wlSwim_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_wlSwim_c0[168] = {
    0x00, 0x19, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0xBF, 0x80, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x05, 0x03, 0xE8,
    0x06, 0x40, 0x00, 0x05, 0x09, 0xC4, 0x04, 0x00, 0x42, 0xB4, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
    0x41, 0xA0, 0x00, 0x00, 0x3E, 0xB3, 0x33, 0x33, 0xC1, 0x20, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
    0x3F, 0xC0, 0x00, 0x00, 0x3F, 0xB3, 0x33, 0x33, 0x41, 0x20, 0x00, 0x00, 0x40, 0x60, 0x00, 0x00,
    0x3F, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x42, 0x16, 0x00, 0x00,
    0x41, 0x10, 0x00, 0x00, 0x3E, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3E, 0xCC, 0xCC, 0xCD,
    0x3F, 0x99, 0x99, 0x9A, 0xC2, 0x16, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD,
    0xC0, 0xE0, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00,
};

/* 8038F95C-8038F9C0 0064+00 s=6 e=0 z=0  None .rodata    m__20daAlinkHIO_wlGrab_c0 */
SECTION_RODATA static u8 const m__20daAlinkHIO_wlGrab_c0[100] = {
    0x00, 0x14, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0xBF, 0xA6, 0x66, 0x66, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x3F,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
    0x00, 0x0E, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66, 0x40, 0x80,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};

/* 8038F9C0-8038F9F8 0038+00 s=0 e=0 z=0  None .rodata    m__20daAlinkHIO_wlBall_c0 */
SECTION_RODATA u8 const m__20daAlinkHIO_wlBall_c0[56] = {
    0x00, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x5C, 0x00, 0x00, 0x00, 0x3C,
    0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
};

/* 8038F9F8-8038FA10 0018+00 s=5 e=0 z=0  None .rodata    m__18daAlinkHIO_wolf_c0 */
SECTION_RODATA static u8 const m__18daAlinkHIO_wolf_c0[24] = {
    0x32, 0xC8, 0xD8, 0xF0, 0x1F, 0x40, 0x0F, 0xA0, 0xF8, 0x30, 0x1F, 0x40,
    0x00, 0x96, 0x00, 0x05, 0x00, 0x23, 0x00, 0x3C, 0x3F, 0x33, 0x33, 0x33,
};

/* 800A142C-800A1AEC 06C0+00 s=1 e=0 z=0  None .text      getNeckAimAngle__9daAlink_cFP4cXyzPsPsPsPs
 */
//	800A143C: 803621B8 (_savegpr_20)
//	800A14A8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A14CC: 800E247C (multVecMagneBootInvMtx__9daAlink_cFP4cXyz)
//	800A14D4: 80267150 (atan2sY_XZ__4cXyzCFv)
//	800A14E0: 80267128 (atan2sX_Z__4cXyzCFv)
//	800A154C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A1570: 800E247C (multVecMagneBootInvMtx__9daAlink_cFP4cXyz)
//	800A1578: 80267150 (atan2sY_XZ__4cXyzCFv)
//	800A1584: 80267128 (atan2sX_Z__4cXyzCFv)
//	800A15CC: 80452CC0 (lit_6108)
//	800A15E0: 80347138 (PSVECSquareMag)
//	800A15E4: 80452CC0 (lit_6108)
//	800A15F4: 80452CE8 (lit_6846)
//	800A15FC: 80452CF0 (lit_6847)
//	800A1644: 80452CF8 (lit_6848)
//	800A1650: 80450AE0 (__float_nan)
//	800A1654: 80450AE0 (__float_nan)
//	800A16C0: 80450AE0 (__float_nan)
//	800A16C4: 80450AE0 (__float_nan)
//	800A16C8: 80452CE0 (lit_6845)
//	800A16F0: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	800A16F4: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	800A1728: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	800A172C: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	800A1768: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	800A176C: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	800A17A0: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	800A17A4: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	800A17DC: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A17E0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A1814: 804061C0 (g_dComIfG_gameInfo)
//	800A1818: 804061C0 (g_dComIfG_gameInfo)
//	800A1838: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A183C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A1848: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A184C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A1878: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A187C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A188C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A1890: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A18F0: 80452ED0 (lit_18847)
//	800A18F4: 80452CB0 (lit_6025)
//	800A1974: 80452EE0 (lit_19379)
//	800A1978: 80452CB0 (lit_6025)
//	800A19A8: 80452C98 (lit_5943)
//	800A1AD8: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getNeckAimAngle(cXyz* param_0, s16* param_1, s16* param_2, s16* param_3,
                                    s16* param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/getNeckAimAngle__9daAlink_cFP4cXyzPsPsPsPs.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453214-80453218 0004+00 s=1 e=0 z=0  None .sdata2    @55845 */
SECTION_SDATA2 static f32 lit_55845 = 0.0001220703125f;

/* 80453218-8045321C 0004+00 s=1 e=0 z=0  None .sdata2    @55846 */
SECTION_SDATA2 static f32 lit_55846 = 0.000244140625f;

/* 8045321C-80453220 0004+00 s=2 e=0 z=0  None .sdata2    @55847 */
SECTION_SDATA2 static f32 lit_55847 = 3.0f / 100.0f;

/* 80453220-80453224 0004+00 s=1 e=0 z=0  None .sdata2    @55848 */
SECTION_SDATA2 static f32 lit_55848 = 2.0f / 25.0f;

/* 800A1AEC-800A1F90 04A4+00 s=1 e=0 z=0  None .text      setEyeMove__9daAlink_cFP4cXyzss */
//	800A1B0C: 803621D4 (_savegpr_27)
//	800A1B2C: 80452CE0 (lit_6845)
//	800A1B30: 80267954 (cM_rndF__Ff)
//	800A1B34: 80452E80 (lit_16036)
//	800A1B4C: 80452CC0 (lit_6108)
//	800A1B64: 80453214 (lit_55845)
//	800A1B6C: 80452CB0 (lit_6025)
//	800A1C00: 80452CC0 (lit_6108)
//	800A1C04: 80453218 (lit_55846)
//	800A1C0C: 80452CB0 (lit_6025)
//	800A1C38: 80103FE8 (checkSwimNeckUpDown__9daAlink_cCFv)
//	800A1C50: 80452C98 (lit_5943)
//	800A1C60: 80452D4C (lit_8131)
//	800A1C68: 80452CC0 (lit_6108)
//	800A1C6C: 80452CC0 (lit_6108)
//	800A1C78: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800A1CA0: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800A1CB0: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800A1D04: 80452CC0 (lit_6108)
//	800A1D24: 8026786C (cM_rnd__Fv)
//	800A1D28: 80452C98 (lit_5943)
//	800A1D34: 80452CC0 (lit_6108)
//	800A1D4C: 80267674 (cM_atan2s__Fff)
//	800A1D54: 80452CC4 (lit_6109)
//	800A1D58: 80267954 (cM_rndF__Ff)
//	800A1D7C: 80439A20 (sincosTable___5JMath)
//	800A1D80: 80439A20 (sincosTable___5JMath)
//	800A1DB4: 80452CBC (lit_6041)
//	800A1DC0: 80452D8C (lit_8783)
//	800A1DC4: 80267954 (cM_rndF__Ff)
//	800A1DD8: 80439A20 (sincosTable___5JMath)
//	800A1DDC: 80439A20 (sincosTable___5JMath)
//	800A1E00: 80452CC0 (lit_6108)
//	800A1E24: 80450FC8 (struct_80450FC8)
//	800A1E34: 80450FC8 (struct_80450FC8)
//	800A1E3C: 80450FC9 (struct_80450FC8)
//	800A1E44: 80450FC9 (struct_80450FC8)
//	800A1E50: 80452CBC (lit_6041)
//	800A1E60: 80452CB8 (lit_6040)
//	800A1E74: 80452CBC (lit_6041)
//	800A1E84: 80452CB8 (lit_6040)
//	800A1E98: 80452CC0 (lit_6108)
//	800A1EA4: 80452EE0 (lit_19379)
//	800A1EAC: 80452DEC (lit_13119)
//	800A1EB8: 80452DEC (lit_13119)
//	800A1EC0: 80452EE0 (lit_19379)
//	800A1EC8: 80452CC0 (lit_6108)
//	800A1ED4: 80452DF8 (lit_13700)
//	800A1EE0: 80452DA0 (lit_9054)
//	800A1EF4: 80452CBC (lit_6041)
//	800A1F04: 80450FC8 (struct_80450FC8)
//	800A1F10: 80452C98 (lit_5943)
//	800A1F14: 80452DA0 (lit_9054)
//	800A1F18: 8045321C (lit_55847)
//	800A1F1C: 8026F97C (cLib_addCalc__FPfffff)
//	800A1F2C: 80452C98 (lit_5943)
//	800A1F30: 80452DA0 (lit_9054)
//	800A1F34: 8045321C (lit_55847)
//	800A1F38: 8026F97C (cLib_addCalc__FPfffff)
//	800A1F48: 80452C98 (lit_5943)
//	800A1F4C: 80453220 (lit_55848)
//	800A1F50: 80452E44 (lit_14760)
//	800A1F54: 8026F97C (cLib_addCalc__FPfffff)
//	800A1F7C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEyeMove(cXyz* param_0, s16 param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setEyeMove__9daAlink_cFP4cXyzss.s"
}
#pragma pop

/* 800A1F90-800A2160 01D0+00 s=1 e=0 z=0  None .text      setNeckAngle__9daAlink_cFv */
//	800A1FDC: 800A093C (getNeckAimPos__9daAlink_cFP4cXyzPii)
//	800A2088: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	800A209C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A20B0: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A20C4: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A20D8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A2100: 800A142C (getNeckAimAngle__9daAlink_cFP4cXyzPsPsPsPs)
//	800A2118: 8015F97C (daPy_addCalcShort__FPsssss)
//	800A2130: 8015F97C (daPy_addCalcShort__FPsssss)
//	800A2144: 800A1AEC (setEyeMove__9daAlink_cFP4cXyzss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setNeckAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/setNeckAngle__9daAlink_cFv.s"
}
#pragma pop

/* 800A2160-800A2198 0038+00 s=1 e=0 z=0  None .text getStickAngleFromPlayerShape__9daAlink_cCFPs
 */
//	800A2164: 80452CA4 (lit_6021)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getStickAngleFromPlayerShape(s16* param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/getStickAngleFromPlayerShape__9daAlink_cCFPs.s"
}
#pragma pop

/* 800A2198-800A21E0 0048+00 s=42 e=0 z=0  None .text      commonLineCheck__9daAlink_cFP4cXyzP4cXyz
 */
//	800A21B4: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800A21B8: 804061C0 (g_dComIfG_gameInfo)
//	800A21BC: 804061C0 (g_dComIfG_gameInfo)
//	800A21C8: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonLineCheck(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/commonLineCheck__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800A21E0-800A2280 00A0+00 s=18 e=0 z=2  None .text
 * getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi             */
//	800A2200: 804061C0 (g_dComIfG_gameInfo)
//	800A2204: 804061C0 (g_dComIfG_gameInfo)
//	800A2210: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800A221C: 804061C0 (g_dComIfG_gameInfo)
//	800A2220: 804061C0 (g_dComIfG_gameInfo)
//	800A2230: 80074B40 (ChkMoveBG_NoDABg__4dBgSFRC13cBgS_PolyInfo)
//	800A2244: 80074618 (GetActorPointer__4cBgSCFi)
//	800A2258: 80074618 (GetActorPointer__4cBgSCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMoveBGActorName(cBgS_PolyInfo& param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi.s"
}
#pragma pop

/* 800A2280-800A22E8 0068+00 s=2 e=0 z=0  None .text      checkGoronRide__9daAlink_cFv */
//	800A22A8: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800A22B8: 804061C0 (g_dComIfG_gameInfo)
//	800A22BC: 804061C0 (g_dComIfG_gameInfo)
//	800A22C8: 80074618 (GetActorPointer__4cBgSCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGoronRide() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGoronRide__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453224-80453228 0004+00 s=1 e=0 z=0  None .sdata2    @56018 */
SECTION_SDATA2 static f32 lit_56018 = -3.8999998569488525f;

/* 800A22E8-800A2710 0428+00 s=1 e=0 z=0  None .text      setMoveSlantAngle__9daAlink_cFv */
//	800A2300: 803621DC (_savegpr_29)
//	800A239C: 80452EAC (lit_16641)
//	800A23A4: 80452CB0 (lit_6025)
//	800A23EC: 80452EE0 (lit_19379)
//	800A2434: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800A2438: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800A2450: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	800A2454: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	800A24A4: 803650D0 (abs)
//	800A24B0: 80453224 (lit_56018)
//	800A24C4: 80452CB0 (lit_6025)
//	800A2508: 800B3500 (checkAttentionState__9daAlink_cFv)
//	800A2514: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	800A2518: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	800A25E0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A2614: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A2630: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A26D4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A26EC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A26FC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMoveSlantAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/setMoveSlantAngle__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8038FA10-8038FA20 0010+00 s=0 e=0 z=0  None .rodata    l_worldChangeEventName */
SECTION_RODATA u8 const l_worldChangeEventName[16] = {
    0x57, 0x4F, 0x52, 0x4C, 0x44, 0x5F, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x5F, 0x49, 0x4E, 0x00,
};

/* 8038FA20-8038FA38 0015+03 s=0 e=0 z=0  None .rodata    l_wolfWorldChangeEventName */
SECTION_RODATA u8 const l_wolfWorldChangeEventName[21 + 3 /* padding */] = {
    0x57,
    0x4F,
    0x4C,
    0x46,
    0x5F,
    0x57,
    0x4F,
    0x52,
    0x4C,
    0x44,
    0x5F,
    0x43,
    0x48,
    0x41,
    0x4E,
    0x47,
    0x45,
    0x5F,
    0x49,
    0x4E,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 8038FA38-8038FA48 0010+00 s=0 e=0 z=0  None .rodata    l_defaultGetEventName */
SECTION_RODATA u8 const l_defaultGetEventName[16] = {
    0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x47, 0x45, 0x54, 0x49, 0x54, 0x45, 0x4D, 0x00,
};

/* 8038FA48-8038FA54 000C+00 s=0 e=0 z=0  None .rodata    l_crawlStartFrontOffset */
SECTION_RODATA u8 const l_crawlStartFrontOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x42, 0xE0, 0x00, 0x00,
};

/* 8038FA54-8038FA60 000C+00 s=1 e=0 z=0  None .rodata    l_crawlFrontOffset */
SECTION_RODATA static u8 const l_crawlFrontOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};

/* 8038FA60-8038FA6C 000C+00 s=0 e=0 z=0  None .rodata    l_crawlBackOffset */
SECTION_RODATA u8 const l_crawlBackOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
};

/* 8038FA6C-8038FA78 000C+00 s=1 e=0 z=0  None .rodata    l_crawlTopOffset */
SECTION_RODATA static u8 const l_crawlTopOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038FA78-8038FA84 000C+00 s=1 e=0 z=0  None .rodata    l_crawlFrontUpOffset */
SECTION_RODATA static u8 const l_crawlFrontUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};

/* 8038FA84-8038FA90 000C+00 s=0 e=0 z=0  None .rodata    l_wolfLieFrontUpOffset */
SECTION_RODATA u8 const l_wolfLieFrontUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
};

/* 8038FA90-8038FA9C 000C+00 s=1 e=0 z=0  None .rodata    l_crawlBackUpOffset */
SECTION_RODATA static u8 const l_crawlBackUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
};

/* 8038FA9C-8038FAA8 000C+00 s=0 e=0 z=0  None .rodata    l_wolfLieBackUpOffset */
SECTION_RODATA u8 const l_wolfLieBackUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00, 0xC2, 0x8C, 0x00, 0x00,
};

/* 8038FAA8-8038FAB4 000C+00 s=0 e=0 z=0  None .rodata    l_crawlStandUpOffset */
SECTION_RODATA u8 const l_crawlStandUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
};

/* 8038FAB4-8038FAC0 000C+00 s=0 e=0 z=0  None .rodata    l_wolfLieStandUpOffset */
SECTION_RODATA u8 const l_wolfLieStandUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0xC2, 0x8C, 0x00, 0x00,
};

/* 8038FAC0-8038FACC 000C+00 s=1 e=0 z=0  None .rodata    l_crawlTopUpOffset */
SECTION_RODATA static u8 const l_crawlTopUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038FACC-8038FAD8 000C+00 s=0 e=0 z=0  None .rodata    l_wolfLieTopUpOffset */
SECTION_RODATA u8 const l_wolfLieTopUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038FAD8-8038FAE4 000C+00 s=0 e=0 z=0  None .rodata    l_crawlSideOffset */
SECTION_RODATA u8 const l_crawlSideOffset[12] = {
    0x42, 0x5C, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038FAE4-8038FAF0 000C+00 s=0 e=0 z=0  None .rodata    l_wolfLieSideOffset */
SECTION_RODATA u8 const l_wolfLieSideOffset[12] = {
    0x42, 0x5C, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038FAF0-8038FAFC 000C+00 s=0 e=0 z=0  None .rodata    l_crawlLSideOffset */
SECTION_RODATA u8 const l_crawlLSideOffset[12] = {
    0x42, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038FAFC-8038FB08 000C+00 s=0 e=0 z=0  None .rodata    l_crawlRSideOffset */
SECTION_RODATA u8 const l_crawlRSideOffset[12] = {
    0xC2, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038FB08-8038FB14 000C+00 s=0 e=0 z=0  None .rodata    l_crawlLSideFrontOffset */
SECTION_RODATA u8 const l_crawlLSideFrontOffset[12] = {
    0x42, 0x5C, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};

/* 8038FB14-8038FB20 000C+00 s=0 e=0 z=0  None .rodata    l_crawlRSideFrontOffset */
SECTION_RODATA u8 const l_crawlRSideFrontOffset[12] = {
    0xC2, 0x5C, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};

/* 8038FB20-8038FB2C 000C+00 s=0 e=0 z=0  None .rodata    l_crawlMinSideOffset */
SECTION_RODATA u8 const l_crawlMinSideOffset[12] = {
    0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038FB2C-8038FB38 000C+00 s=0 e=0 z=0  None .rodata    l_swordTopLocalN */
SECTION_RODATA u8 const l_swordTopLocalN[12] = {
    0x42, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038FB38-8038FB44 000C+00 s=0 e=0 z=0  None .rodata    l_swordTopLocalM */
SECTION_RODATA u8 const l_swordTopLocalM[12] = {
    0x42, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8038FB44-8038FB50 000C+00 s=1 e=0 z=0  None .rodata    l_ironBallChainVec */
SECTION_RODATA static u8 const l_ironBallChainVec[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};

/* 8038FB50-8038FB5C 000C+00 s=1 e=0 z=0  None .rodata    l_ironBallCenterVec */
SECTION_RODATA static u8 const l_ironBallCenterVec[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x28, 0x00, 0x00,
};

/* 8038FB5C-8038FBBC 0060+00 s=1 e=0 z=0  None .rodata    l_wolfFootOnFrame */
SECTION_RODATA static u8 const l_wolfFootOnFrame[96] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0x80, 0x00, 0x00, 0x41, 0x98, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xD8, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
    0x41, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00,
    0x41, 0xC0, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00,
    0x42, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x30, 0x00, 0x00, 0x42, 0x68, 0x00, 0x00,
};

/* 8038FBBC-8038FBD4 0018+00 s=1 e=0 z=0  None .rodata    l_insectNameList */
SECTION_RODATA static u8 const l_insectNameList[24] = {
    0x01, 0x40, 0x01, 0x41, 0x01, 0x42, 0x01, 0x49, 0x01, 0x43, 0x01, 0x44,
    0x01, 0x45, 0x01, 0x46, 0x01, 0x4B, 0x01, 0x4A, 0x01, 0x47, 0x01, 0x48,
};

/* 8038FBD4-8038FC24 0050+00 s=0 e=0 z=0  None .rodata    m_mainBckShield__9daAlink_c */
SECTION_RODATA u8 const m_mainBckShield__9daAlink_c[80] = {
    0x00, 0x25, 0x00, 0x25, 0x00, 0x23, 0x00, 0x23, 0x00, 0x12, 0x00, 0x1B, 0x00, 0x10, 0x00, 0x1B,
    0x00, 0x21, 0x00, 0x21, 0x00, 0x1E, 0x00, 0x1E, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x2C, 0x00, 0x2C,
    0x00, 0x3E, 0x00, 0x3E, 0x00, 0x2E, 0x00, 0x2E, 0x00, 0x30, 0x00, 0x30, 0x00, 0x28, 0x00, 0x28,
    0x00, 0x32, 0x00, 0x32, 0x00, 0x2A, 0x00, 0x2A, 0x02, 0x74, 0x00, 0x1B, 0x00, 0x20, 0x00, 0x1B,
    0x00, 0x1B, 0x00, 0x1B, 0x00, 0x26, 0x00, 0x26, 0x02, 0x77, 0x00, 0x1B, 0x00, 0xCD, 0x00, 0x1B,
};

/* 8038FC24-8038FC38 0014+00 s=0 e=0 z=0  None .rodata    m_mainBckSword__9daAlink_c */
SECTION_RODATA u8 const m_mainBckSword__9daAlink_c[20] = {
    0x00, 0x1A, 0x00, 0x1A, 0x00, 0x1C, 0x00, 0x1C, 0x02, 0x77,
    0x02, 0x77, 0x00, 0xCD, 0x00, 0xCD, 0x02, 0x43, 0x02, 0x44,
};

/* 8038FC38-8038FCA8 0070+00 s=0 e=0 z=0  None .rodata    m_mainBckFishing__9daAlink_c */
SECTION_RODATA u8 const m_mainBckFishing__9daAlink_c[112] = {
    0x00, 0x25, 0x02, 0x73, 0x00, 0x23, 0x00, 0xC8, 0x00, 0x12, 0x02, 0x73, 0x00, 0x10, 0x00, 0xC8,
    0x00, 0x21, 0x02, 0x73, 0x00, 0x1E, 0x00, 0xC8, 0x00, 0x3C, 0x02, 0x73, 0x00, 0x2C, 0x02, 0x73,
    0x00, 0x3E, 0x02, 0x73, 0x00, 0x2E, 0x02, 0x73, 0x00, 0x30, 0x00, 0xC8, 0x00, 0x28, 0x00, 0xC8,
    0x00, 0x32, 0x00, 0xC8, 0x00, 0x2A, 0x00, 0xC8, 0x02, 0x74, 0x02, 0x73, 0x00, 0x20, 0x02, 0x73,
    0x00, 0x1A, 0x02, 0x73, 0x00, 0x1C, 0x02, 0x73, 0x02, 0x77, 0x02, 0x73, 0x00, 0xCD, 0x00, 0xC8,
    0x02, 0x43, 0x02, 0x44, 0x02, 0x33, 0x02, 0x73, 0x02, 0x34, 0x02, 0x73, 0x02, 0x33, 0x02, 0x73,
    0x02, 0x34, 0x02, 0x73, 0x02, 0x6A, 0x02, 0x73, 0x02, 0x56, 0x02, 0x73, 0x02, 0x57, 0x02, 0x73,
};

/* 8038FCA8-80391010 1368+00 s=3 e=0 z=0  None .rodata    m_anmDataTable__9daAlink_c */
SECTION_RODATA static u8 const m_anmDataTable__9daAlink_c[4968] = {
    0x00, 0x25, 0x00, 0x24, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x23, 0x00, 0x22,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x12, 0x00, 0x12, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0x21, 0x00, 0x1F, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x1D,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x3B, 0x04, 0x0A, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x2B, 0x04, 0x0A, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0x3E, 0x00, 0x3D, 0x04, 0x0A, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x2E, 0x00, 0x2D,
    0x04, 0x0A, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x30, 0x00, 0x2F, 0x04, 0x0A, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x28, 0x00, 0x27, 0x04, 0x0A, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0x32, 0x00, 0x31, 0x04, 0x0A, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x2A, 0x00, 0x29,
    0x04, 0x0A, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x74, 0x02, 0x74, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x20, 0x00, 0x1A, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1A, 0x00, 0x0E, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x0E,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x77, 0x02, 0x77, 0x04, 0x0A, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xCD, 0x00, 0xC5, 0x04, 0x0A, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x02, 0x43, 0x02, 0x43, 0xFE, 0xFE, 0x00, 0x00, 0x01, 0x59, 0x00, 0x00, 0x02, 0x33, 0x02, 0x33,
    0x04, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x34, 0x02, 0x34, 0x04, 0x0A, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x33, 0x02, 0x5C, 0x04, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x34, 0x02, 0x5C, 0x04, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x6A, 0x02, 0x6A,
    0x04, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x56, 0x02, 0x56, 0x01, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x02, 0x57, 0x02, 0x57, 0x01, 0x06, 0x00, 0x00, 0x01, 0x5F, 0x00, 0x00,
    0x00, 0xC6, 0x00, 0xC6, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x36, 0x00, 0x36,
    0xFE, 0xFE, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x00, 0x38, 0x00, 0x38, 0xFE, 0xFE, 0x00, 0x00,
    0x01, 0x48, 0x00, 0x00, 0x00, 0x35, 0x00, 0x35, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0x37, 0x00, 0x37, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x34, 0x00, 0x34,
    0xFE, 0xFE, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x00, 0x33, 0x00, 0x33, 0x01, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x02, 0x07, 0x02, 0x07, 0xFE, 0xFE, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00,
    0x02, 0x09, 0x02, 0x09, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x08, 0x02, 0x08,
    0x01, 0x06, 0x00, 0x26, 0x01, 0x4F, 0x00, 0x00, 0x02, 0x06, 0x02, 0x06, 0x04, 0x0A, 0x00, 0x00,
    0x01, 0x48, 0x00, 0x00, 0x02, 0x05, 0x02, 0x05, 0x04, 0x0A, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x02, 0x2F, 0x02, 0x2F, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x7B, 0x00, 0x7B,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x7E, 0xFE, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x13, 0x00, 0x13, 0xFE, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0x15, 0x00, 0x15, 0xFE, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x7C,
    0xFE, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x17, 0x00, 0x17, 0xFE, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0xFE, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0x14, 0x00, 0x14, 0x01, 0x06, 0x00, 0x7D, 0x00, 0xE9, 0x00, 0x00, 0x01, 0xA5, 0x01, 0xA5,
    0xFE, 0xFE, 0x00, 0x00, 0x01, 0x47, 0x00, 0x00, 0x01, 0xA3, 0x01, 0xA3, 0xFE, 0xFE, 0x00, 0x00,
    0x01, 0x47, 0x00, 0x00, 0x01, 0xA4, 0x01, 0xA4, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x01, 0xB4, 0x01, 0xB4, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xB5, 0x01, 0xB5,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x69, 0x02, 0x69, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x01, 0xF7, 0x01, 0xF7, 0xFE, 0xFE, 0x00, 0x0A, 0x01, 0x4D, 0x00, 0x00,
    0x01, 0xF6, 0x01, 0xF6, 0xFE, 0xFE, 0x00, 0x04, 0x00, 0xE8, 0x00, 0x00, 0x01, 0xF5, 0x01, 0xF5,
    0xFE, 0xFE, 0x00, 0x04, 0x00, 0xE8, 0x00, 0x00, 0x01, 0xF4, 0x01, 0xF4, 0x00, 0x05, 0x00, 0x0B,
    0x01, 0x4C, 0x00, 0x00, 0x01, 0xF3, 0x01, 0xF3, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x01, 0xF2, 0x01, 0xF2, 0x00, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0xFE, 0x01, 0xFE,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xFF, 0x01, 0xFF, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x01, 0xFD, 0x01, 0xFD, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x00, 0xE1, 0x00, 0xE1, 0x04, 0x0A, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x00, 0xE2, 0x00, 0xE2,
    0x04, 0x0A, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x35, 0x02, 0x35, 0x04, 0x05, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x02, 0x36, 0x02, 0x36, 0x04, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x02, 0x32, 0x02, 0x32, 0x04, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0xA2, 0x01, 0xA2,
    0x04, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0xA0, 0x01, 0xA0, 0x04, 0x05, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x01, 0xA1, 0x01, 0xA1, 0x04, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x02, 0x66, 0x02, 0x66, 0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x75, 0x02, 0x75,
    0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x76, 0x02, 0x76, 0x04, 0x05, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xCA, 0x00, 0xCA, 0x04, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0xCB, 0x00, 0xCB, 0x04, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x03, 0x0D, 0x02, 0x66,
    0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDD, 0x00, 0xDD, 0x04, 0x05, 0x00, 0x00,
    0x01, 0x02, 0x00, 0x00, 0x01, 0xB3, 0x01, 0xB3, 0x04, 0x05, 0x00, 0x00, 0x01, 0x05, 0x00, 0x00,
    0x00, 0x95, 0x00, 0x95, 0x64, 0x05, 0x00, 0x24, 0x01, 0x10, 0x00, 0x00, 0x02, 0x38, 0x02, 0x38,
    0x04, 0x05, 0x00, 0x37, 0x01, 0x52, 0x00, 0x00, 0x02, 0x39, 0x02, 0x39, 0x04, 0x05, 0x00, 0x38,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xD6, 0x00, 0xD6, 0x04, 0x0A, 0x00, 0x58, 0x01, 0x2C, 0x00, 0x00,
    0x02, 0x4B, 0x02, 0x4B, 0x04, 0x05, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x02, 0x65, 0x02, 0x65,
    0x04, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x30, 0x02, 0x30, 0x04, 0x05, 0x00, 0x6D,
    0x01, 0x50, 0x00, 0x00, 0x02, 0x31, 0x02, 0x31, 0x04, 0x05, 0x00, 0x6D, 0x01, 0x50, 0x00, 0x00,
    0x01, 0x75, 0x01, 0x75, 0x04, 0x05, 0x00, 0x6E, 0x01, 0x41, 0x00, 0x00, 0x01, 0x76, 0x01, 0x76,
    0x04, 0x05, 0x00, 0x6E, 0x01, 0x41, 0x00, 0x00, 0x02, 0x4C, 0x02, 0x4C, 0x04, 0x05, 0x00, 0x72,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x4D, 0x02, 0x4D, 0x04, 0x05, 0x00, 0x73, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x02, 0x00, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x01, 0x02, 0x01,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x00, 0xE3, 0x00, 0xE3, 0x04, 0x0A, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x00, 0xE4, 0x00, 0xE4, 0x04, 0x0A, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x02, 0x70, 0x02, 0x70, 0xFE, 0xFE, 0x00, 0x10, 0x01, 0x65, 0x00, 0x00, 0x02, 0x6F, 0x02, 0x6F,
    0x04, 0x05, 0x00, 0x11, 0x01, 0x64, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x7F, 0x64, 0x06, 0x00, 0x2E,
    0x01, 0x03, 0x00, 0x00, 0x00, 0x99, 0x00, 0x99, 0x00, 0x06, 0x00, 0x2F, 0x01, 0x13, 0x00, 0x00,
    0x00, 0x9A, 0x00, 0x9A, 0x00, 0x06, 0x00, 0x30, 0x01, 0x14, 0x00, 0x00, 0x00, 0x8F, 0x00, 0x8F,
    0x64, 0x06, 0x00, 0x31, 0x01, 0x0B, 0x00, 0x00, 0x00, 0x90, 0x00, 0x90, 0x64, 0x06, 0x00, 0x31,
    0x01, 0x0B, 0x00, 0x00, 0x00, 0x84, 0x00, 0x84, 0x64, 0x06, 0x00, 0x32, 0x01, 0x06, 0x00, 0x00,
    0x00, 0x85, 0x00, 0x85, 0x64, 0x06, 0x00, 0x33, 0x01, 0x07, 0x00, 0x00, 0x00, 0x86, 0x00, 0x86,
    0x64, 0x05, 0x00, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x8A, 0x00, 0x8A, 0x00, 0x05, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x00, 0x89, 0x00, 0x89, 0x64, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x00, 0x8B, 0x00, 0x8B, 0x64, 0x05, 0x00, 0x34, 0x01, 0x08, 0x00, 0x00, 0x00, 0x88, 0x00, 0x88,
    0x00, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x00, 0x87, 0x00, 0x87, 0x64, 0x05, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x00, 0x9B, 0x00, 0x9B, 0x00, 0x06, 0x00, 0x59, 0x01, 0x15, 0x00, 0x00,
    0x00, 0x9C, 0x00, 0x9C, 0x00, 0x06, 0x00, 0x59, 0x01, 0x15, 0x00, 0x00, 0x00, 0x98, 0x00, 0x98,
    0x64, 0x06, 0x00, 0x3C, 0x01, 0x12, 0x00, 0x00, 0x00, 0x97, 0x00, 0x97, 0x64, 0x06, 0x00, 0x3D,
    0x01, 0x11, 0x00, 0x00, 0x00, 0x9F, 0x00, 0x9F, 0x64, 0x06, 0x00, 0x3A, 0x01, 0x18, 0x00, 0x00,
    0x00, 0x9E, 0x00, 0x9E, 0x64, 0x06, 0x00, 0x3B, 0x01, 0x17, 0x00, 0x00, 0x00, 0xA4, 0x00, 0xA4,
    0x00, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0xA5, 0x00, 0xA5, 0x64, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0xA6, 0x00, 0xA6, 0x64, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0xAA, 0x00, 0xAA, 0x00, 0x05, 0x00, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0xA7, 0x00, 0xA7,
    0x00, 0x05, 0x00, 0x5A, 0x01, 0x1D, 0x00, 0x00, 0x00, 0xA8, 0x00, 0xA8, 0x00, 0x05, 0x00, 0x00,
    0x01, 0x1E, 0x00, 0x00, 0x00, 0xA9, 0x00, 0xA9, 0x64, 0x05, 0x00, 0x12, 0x01, 0x1F, 0x00, 0x00,
    0x00, 0x8E, 0x00, 0x8E, 0x00, 0x06, 0x00, 0x7F, 0x01, 0x0A, 0x00, 0x00, 0x00, 0x8C, 0x00, 0x8C,
    0x00, 0x06, 0x00, 0x80, 0x01, 0x09, 0x00, 0x00, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0xAE, 0x00, 0xAE, 0x01, 0x06, 0x00, 0x27, 0x00, 0xEA, 0x00, 0x00,
    0x00, 0xAC, 0x00, 0xAC, 0x01, 0x06, 0x00, 0x27, 0x00, 0xEA, 0x00, 0x00, 0x00, 0xBD, 0x00, 0xBD,
    0x01, 0x06, 0x00, 0x27, 0x00, 0xEA, 0x00, 0x00, 0x00, 0xBE, 0x00, 0xBE, 0x01, 0x06, 0x00, 0x27,
    0x00, 0xEA, 0x00, 0x00, 0x00, 0xB2, 0x00, 0xB2, 0xFE, 0xFE, 0x00, 0x28, 0x00, 0xF8, 0x00, 0x00,
    0x00, 0xAF, 0x00, 0xAF, 0xFE, 0xFE, 0x00, 0x28, 0x00, 0xF8, 0x00, 0x00, 0x00, 0xB4, 0x00, 0xB4,
    0xFE, 0xFE, 0x00, 0x28, 0x00, 0xF8, 0x00, 0x00, 0x00, 0xB6, 0x00, 0xB6, 0xFE, 0xFE, 0x00, 0x28,
    0x00, 0xF8, 0x00, 0x00, 0x00, 0xB3, 0x00, 0xB3, 0xFE, 0xFE, 0x00, 0x2A, 0x01, 0x24, 0x00, 0x00,
    0x00, 0xB0, 0x00, 0xB0, 0xFE, 0xFE, 0x00, 0x2B, 0x01, 0x22, 0x00, 0x00, 0x00, 0xB5, 0x00, 0xB5,
    0xFE, 0xFE, 0x00, 0x2C, 0x01, 0x25, 0x00, 0x00, 0x00, 0xB7, 0x00, 0xB7, 0xFE, 0xFE, 0x00, 0x2C,
    0x01, 0x25, 0x00, 0x00, 0x00, 0xAB, 0x00, 0xAB, 0x01, 0x06, 0x00, 0x27, 0x00, 0xEA, 0x00, 0x00,
    0x01, 0xAF, 0x01, 0xAF, 0x01, 0x06, 0x00, 0x27, 0x00, 0xEA, 0x00, 0x00, 0x01, 0xB0, 0x01, 0xB0,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0x44, 0x01, 0x44, 0x00, 0x06, 0x00, 0x06,
    0x01, 0x31, 0x00, 0x00, 0x01, 0x45, 0x01, 0x45, 0x00, 0x0A, 0x00, 0x07, 0x01, 0x32, 0x00, 0x00,
    0x02, 0x37, 0x02, 0x37, 0x04, 0x0A, 0x00, 0x1C, 0x01, 0x51, 0x00, 0x00, 0x02, 0x4F, 0x02, 0x4F,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x50, 0x02, 0x50, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x02, 0x51, 0x02, 0x51, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x02, 0x52, 0x02, 0x52, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0x74, 0x01, 0x74,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0x7A, 0x01, 0x7A, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x01, 0x78, 0x01, 0x78, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x01, 0x79, 0x01, 0x79, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xAE, 0x01, 0xAE,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xAC, 0x01, 0xAC, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x01, 0xAD, 0x01, 0xAD, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x01, 0xA9, 0x01, 0xA9, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xA7, 0x01, 0xA7,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xA8, 0x01, 0xA8, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x01, 0xAB, 0x01, 0xAB, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x01, 0xAA, 0x01, 0xAA, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x6A,
    0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x70, 0x00, 0x70, 0x03, 0x09, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x6C, 0x00, 0x6C, 0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0x6D, 0x00, 0x6D, 0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x6E, 0x00, 0x6E,
    0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x6F, 0x00, 0x6F, 0x03, 0x09, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x6B, 0x00, 0x6B, 0x03, 0x09, 0x00, 0x5C, 0x00, 0xFE, 0x00, 0x00,
    0x02, 0x0F, 0x02, 0x0F, 0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x10, 0x02, 0x10,
    0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x0A, 0x02, 0x0A, 0x03, 0x09, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x02, 0x0C, 0x02, 0x0C, 0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x02, 0x0D, 0x02, 0x0D, 0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x0E, 0x02, 0x0E,
    0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x0B, 0x02, 0x0B, 0x03, 0x09, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x01, 0x6E, 0x01, 0x6E, 0xFE, 0xFE, 0x00, 0x18, 0x01, 0x39, 0x00, 0x00,
    0x01, 0x71, 0x01, 0x71, 0xFE, 0xFE, 0x00, 0x19, 0x01, 0x3C, 0x00, 0x00, 0x01, 0x70, 0x01, 0x70,
    0xFE, 0xFE, 0x00, 0x00, 0x01, 0x3B, 0x00, 0x00, 0x01, 0x7B, 0x01, 0x7B, 0xFE, 0xFE, 0x00, 0x1A,
    0x01, 0x42, 0x00, 0x00, 0x01, 0x6D, 0x01, 0x6D, 0xFE, 0xFE, 0x00, 0x1B, 0x01, 0x38, 0x00, 0x00,
    0x01, 0x6F, 0x01, 0x6F, 0xFE, 0xFE, 0x00, 0x00, 0x01, 0x3A, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x5F,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x5C, 0x02, 0x5C, 0x04, 0x0A, 0x00, 0x01,
    0x01, 0x60, 0x00, 0x00, 0x02, 0x54, 0x02, 0x54, 0x04, 0x0A, 0x00, 0x01, 0x01, 0x5D, 0x00, 0x00,
    0x02, 0x49, 0x02, 0x49, 0x04, 0x0A, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x6C, 0x02, 0x6C,
    0x01, 0x06, 0x00, 0x0C, 0x01, 0x63, 0x00, 0x00, 0x00, 0x9D, 0x00, 0x9D, 0x01, 0x06, 0x00, 0x0D,
    0x01, 0x16, 0x00, 0x00, 0x00, 0x52, 0x00, 0x52, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x02, 0x78, 0x02, 0x78, 0x01, 0x06, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x2D, 0x02, 0x2D,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x2B, 0x02, 0x2B, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x02, 0x2E, 0x02, 0x2E, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x02, 0x2C, 0x02, 0x2C, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x3E, 0x02, 0x3E,
    0xFE, 0xFE, 0x00, 0x15, 0x01, 0x56, 0x00, 0x00, 0x02, 0x42, 0x02, 0x42, 0xFE, 0xFE, 0x00, 0x16,
    0x01, 0x58, 0x00, 0x00, 0x00, 0x39, 0x00, 0x39, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0x3A, 0x00, 0x3A, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x11, 0x00, 0x11,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x3A, 0x02, 0x3A, 0xFE, 0xFE, 0x00, 0x03,
    0x00, 0xE8, 0x00, 0x00, 0x02, 0x3D, 0x02, 0x3D, 0xFE, 0xFE, 0x00, 0x17, 0x01, 0x55, 0x00, 0x00,
    0x02, 0x41, 0x02, 0x41, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x40, 0x02, 0x40,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0xC1, 0x00, 0xC1, 0x01, 0x06, 0x00, 0x27,
    0x00, 0xEA, 0x00, 0x00, 0x00, 0xC0, 0x00, 0xC0, 0x01, 0x06, 0x00, 0x27, 0x00, 0xEA, 0x00, 0x00,
    0x00, 0xC2, 0x00, 0xC2, 0x01, 0x06, 0x00, 0x27, 0x00, 0xEA, 0x00, 0x00, 0x00, 0xC3, 0x00, 0xC3,
    0x01, 0x06, 0x00, 0x27, 0x00, 0xEA, 0x00, 0x00, 0x00, 0xC4, 0x00, 0xC4, 0x01, 0x06, 0x00, 0x27,
    0x00, 0xEA, 0x00, 0x00, 0x00, 0x57, 0x00, 0x57, 0xFE, 0xFE, 0x00, 0x4D, 0x00, 0xF7, 0x00, 0x00,
    0x00, 0x56, 0x00, 0x56, 0xFE, 0xFE, 0x00, 0x4E, 0x00, 0xF6, 0x00, 0x00, 0x00, 0x55, 0x00, 0x55,
    0xFE, 0xFE, 0x00, 0x4F, 0x00, 0xF5, 0x00, 0x00, 0x01, 0x69, 0x01, 0x69, 0xFE, 0xFE, 0x00, 0x00,
    0x01, 0x34, 0x00, 0x00, 0x01, 0x6A, 0x01, 0x6A, 0xFE, 0xFE, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00,
    0x01, 0x6A, 0x02, 0x6A, 0xFE, 0xFE, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x01, 0x6A, 0x01, 0x7D,
    0xFE, 0xFE, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x02, 0x4A, 0x02, 0x4A, 0x04, 0x0A, 0x00, 0x29,
    0x01, 0x5A, 0x00, 0x00, 0x02, 0x53, 0x02, 0x53, 0xFE, 0xFE, 0x00, 0x00, 0x01, 0x5C, 0x00, 0x00,
    0x02, 0x6B, 0x02, 0x6B, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x5B, 0x02, 0x5A,
    0xFE, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x5B, 0x02, 0x5B, 0x00, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x02, 0x6B, 0x02, 0x15, 0xFE, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x02, 0x6B, 0x02, 0x16, 0x00, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x6B, 0x02, 0x13,
    0xFE, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x6B, 0x02, 0x14, 0x00, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x02, 0x6B, 0x00, 0x67, 0xFE, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x00, 0x5A, 0x00, 0x5A, 0x02, 0xFE, 0x00, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00, 0x5B, 0x00, 0x5B,
    0x02, 0xFE, 0x00, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00, 0x5C, 0x00, 0x5C, 0x02, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x00, 0x5E, 0x00, 0x5E, 0x02, 0x05, 0x00, 0x78, 0x00, 0xF9, 0x00, 0x00,
    0x01, 0xEB, 0x01, 0xEB, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xFA, 0x01, 0xFA,
    0x02, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xFC, 0x01, 0xFC, 0x02, 0x05, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x01, 0xB2, 0x01, 0xB2, 0x02, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x00, 0xD9, 0x00, 0xD9, 0x04, 0x0A, 0x00, 0x1E, 0x01, 0x2D, 0x00, 0x00, 0x00, 0xDA, 0x00, 0xDA,
    0x04, 0x0A, 0x00, 0x1F, 0x01, 0x2E, 0x00, 0x00, 0x00, 0xD7, 0x00, 0xD7, 0x03, 0x0A, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x00, 0xD8, 0x00, 0xD8, 0x03, 0x0A, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x00, 0xDB, 0x00, 0xDB, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x00, 0xDC, 0x00, 0xDC,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xEC, 0x01, 0xEC, 0xFE, 0xFE, 0x00, 0x1D,
    0x00, 0xDF, 0x00, 0x00, 0x02, 0x11, 0x02, 0x11, 0x01, 0x06, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x01, 0xE4, 0x01, 0xE4, 0x01, 0x06, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xE5, 0x01, 0xE5,
    0x01, 0x06, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x28, 0x02, 0x28, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x02, 0x20, 0x02, 0x20, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x02, 0x1F, 0x02, 0x1F, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x25, 0x02, 0x25,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x23, 0x02, 0x23, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x02, 0x21, 0x02, 0x21, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x02, 0x22, 0x02, 0x22, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x24, 0x02, 0x24,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x02, 0x27, 0x02, 0x27, 0x64, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x02, 0x26, 0x02, 0x26, 0x64, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x02, 0x12, 0x02, 0x12, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x00, 0x66, 0x00, 0x66,
    0xFE, 0xFE, 0x00, 0x35, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x69, 0x00, 0x69, 0xFE, 0xFE, 0x00, 0x36,
    0x00, 0xFD, 0x00, 0x00, 0x02, 0x71, 0x02, 0x71, 0x04, 0x0A, 0x00, 0x00, 0x01, 0x66, 0x00, 0x00,
    0x00, 0x48, 0x00, 0x48, 0x03, 0xFE, 0x00, 0x3E, 0x00, 0xEE, 0x00, 0x00, 0x00, 0x46, 0x00, 0x46,
    0x03, 0xFE, 0x00, 0x3F, 0x00, 0xEC, 0x00, 0x00, 0x00, 0x47, 0x00, 0x47, 0x03, 0xFE, 0x00, 0x40,
    0x00, 0xED, 0x00, 0x00, 0x00, 0x45, 0x00, 0x45, 0x03, 0xFE, 0x00, 0x41, 0x00, 0xEB, 0x00, 0x00,
    0x00, 0x4B, 0x00, 0x4B, 0x03, 0xFE, 0x00, 0x42, 0x00, 0xF1, 0x00, 0x00, 0x00, 0x4C, 0x00, 0x4C,
    0x03, 0x05, 0x00, 0x43, 0x00, 0xF2, 0x00, 0x00, 0x00, 0x49, 0x00, 0x49, 0x03, 0x05, 0x00, 0x44,
    0x00, 0xEF, 0x00, 0x00, 0x00, 0x4E, 0x00, 0x4E, 0x03, 0xFE, 0x00, 0x45, 0x00, 0xF3, 0x00, 0x00,
    0x00, 0x4F, 0x00, 0x4F, 0x03, 0xFE, 0x00, 0x46, 0x00, 0xF4, 0x00, 0x00, 0x00, 0x4A, 0x00, 0x4A,
    0x03, 0xFE, 0x00, 0x47, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x4D, 0x00, 0x4D, 0x03, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x01, 0xB6, 0x01, 0xB6, 0x00, 0x0A, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x01, 0xEF, 0x01, 0xEF, 0x00, 0x09, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xED, 0x01, 0xED,
    0x00, 0x09, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0xEE, 0x01, 0xEE, 0x00, 0x09, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x01, 0x73, 0x01, 0x73, 0x02, 0xFE, 0x00, 0x4A, 0x01, 0x3F, 0x00, 0x00,
    0x01, 0x72, 0x01, 0x72, 0x02, 0xFE, 0x00, 0x4C, 0x01, 0x3E, 0x00, 0x00, 0x00, 0x61, 0x00, 0x61,
    0x02, 0xFE, 0x00, 0x4B, 0x00, 0xFB, 0x00, 0x00, 0x02, 0x6D, 0x02, 0x6D, 0x02, 0xFE, 0x00, 0x4B,
    0x00, 0xFB, 0x00, 0x00, 0x02, 0x5D, 0x02, 0x5D, 0x01, 0x06, 0x00, 0x0E, 0x01, 0x63, 0x00, 0x00,
    0x02, 0x62, 0x02, 0x62, 0x01, 0x06, 0x00, 0x0F, 0x01, 0x61, 0x00, 0x00, 0x01, 0xE3, 0x01, 0xE3,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x00, 0xD4, 0x00, 0xD4, 0x04, 0x0A, 0x00, 0x50,
    0x01, 0x2A, 0x00, 0x00, 0x00, 0xD5, 0x00, 0xD5, 0x04, 0x0A, 0x00, 0x51, 0x01, 0x2B, 0x00, 0x00,
    0x02, 0x3B, 0x02, 0x3B, 0xFE, 0xFE, 0x00, 0x52, 0x01, 0x53, 0x00, 0x00, 0x02, 0x3C, 0x02, 0x3C,
    0xFE, 0xFE, 0x00, 0x53, 0x01, 0x54, 0x00, 0x00, 0x00, 0x72, 0x00, 0x72, 0x03, 0x09, 0x00, 0x00,
    0x00, 0xFF, 0x00, 0x00, 0x00, 0x74, 0x00, 0x74, 0x03, 0x09, 0x00, 0x55, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x73, 0x00, 0x73, 0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x71, 0x00, 0x71,
    0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x75, 0x00, 0x75, 0x03, 0x09, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x77, 0x00, 0x77, 0x03, 0x09, 0x00, 0x56, 0x01, 0x01, 0x00, 0x00,
    0x00, 0x78, 0x00, 0x78, 0x03, 0x09, 0x00, 0x57, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x79,
    0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x7A, 0x00, 0x7A, 0x03, 0x09, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x76, 0x00, 0x76, 0xFE, 0xFE, 0x00, 0x00, 0x01, 0x30, 0x00, 0x00,
    0x00, 0xDE, 0x00, 0xDE, 0x04, 0x0A, 0x00, 0x54, 0x01, 0x2F, 0x00, 0x00, 0x00, 0xE0, 0x00, 0xE0,
    0xFE, 0xFE, 0x00, 0x28, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x05, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x02, 0x2A, 0x02, 0x2A, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x02, 0x29, 0x02, 0x29, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x01, 0x8A, 0x01, 0x8A,
    0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x8B, 0x01, 0x8B, 0x01, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x01, 0x8C, 0x01, 0x8C, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x01, 0x80, 0x01, 0x80, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x81, 0x01, 0x81,
    0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x82, 0x01, 0x82, 0x01, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x01, 0x84, 0x01, 0x84, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x01, 0x88, 0x01, 0x88, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x89, 0x01, 0x89,
    0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x86, 0x01, 0x86, 0x01, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x01, 0x87, 0x01, 0x87, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x01, 0x83, 0x01, 0x83, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x85, 0x01, 0x85,
    0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x8E, 0x01, 0x8E, 0x01, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x01, 0x8F, 0x01, 0x8F, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x01, 0x90, 0x01, 0x90, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x91, 0x01, 0x91,
    0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x94, 0x01, 0x94, 0x01, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x01, 0x95, 0x01, 0x95, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x01, 0x92, 0x01, 0x92, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x93, 0x01, 0x93,
    0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0xF8, 0x01, 0xF8, 0xFE, 0xFE, 0x00, 0x00,
    0x01, 0x4E, 0x00, 0x00, 0x10, 0x2E, 0x10, 0x2E, 0x00, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x10, 0x2D, 0x10, 0x2D, 0x00, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x10, 0x0A, 0x10, 0x0A,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x10, 0x08, 0x10, 0x08, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x10, 0x09, 0x10, 0x09, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x10, 0x07, 0x10, 0x07, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x10, 0x21, 0x10, 0x21,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x10, 0x23, 0x10, 0x23, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x10, 0x22, 0x10, 0x22, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x10, 0x24, 0x10, 0x24, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x10, 0x25, 0x10, 0x25,
    0xFE, 0xFE, 0x00, 0x5E, 0x10, 0x11, 0x00, 0x00, 0x10, 0x28, 0x10, 0x28, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x10, 0x29, 0x10, 0x29, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x10, 0x26, 0x10, 0x26, 0xFE, 0xFE, 0x00, 0x5F, 0x10, 0x12, 0x00, 0x00, 0x10, 0x27, 0x10, 0x27,
    0xFE, 0xFE, 0x00, 0x5F, 0x10, 0x12, 0x00, 0x00, 0x10, 0x2A, 0x10, 0x2A, 0xFE, 0xFE, 0x00, 0x63,
    0x10, 0x13, 0x00, 0x00, 0x10, 0x19, 0x10, 0x19, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x10, 0x1B, 0x10, 0x1B, 0xFE, 0xFE, 0x00, 0x61, 0x10, 0x0E, 0x00, 0x00, 0x10, 0x1C, 0x10, 0x1C,
    0xFE, 0xFE, 0x00, 0x62, 0x10, 0x0F, 0x00, 0x00, 0x10, 0x1A, 0x10, 0x1A, 0xFE, 0xFE, 0x00, 0x60,
    0x10, 0x0D, 0x00, 0x00, 0x10, 0x20, 0x10, 0x20, 0xFE, 0xFE, 0x00, 0x5F, 0x10, 0x12, 0x00, 0x00,
    0x10, 0x1D, 0x10, 0x1D, 0xFE, 0xFE, 0x00, 0x65, 0x10, 0x10, 0x00, 0x00, 0x10, 0x17, 0x10, 0x17,
    0xFE, 0xFE, 0x00, 0x64, 0x10, 0x0C, 0x00, 0x00, 0x10, 0x18, 0x10, 0x18, 0xFE, 0xFE, 0x00, 0x64,
    0x10, 0x0C, 0x00, 0x00, 0x10, 0x2B, 0x10, 0x2B, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x10, 0x2C, 0x10, 0x2C, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x10, 0x15, 0x10, 0x15,
    0xFE, 0xFE, 0x00, 0x66, 0x10, 0x0B, 0x00, 0x00, 0x10, 0x16, 0x10, 0x16, 0xFE, 0xFE, 0x00, 0x66,
    0x10, 0x0B, 0x00, 0x00, 0x10, 0x06, 0x10, 0x06, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x10, 0x14, 0x10, 0x14, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x10, 0x1E, 0x10, 0x1E,
    0x00, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x10, 0x1F, 0x10, 0x1F, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x00, 0xB1, 0x00, 0xB1, 0xFE, 0xFE, 0x00, 0x5D, 0x01, 0x23, 0x00, 0x00,
    0x01, 0x9C, 0x01, 0x9C, 0xFE, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x9D, 0x01, 0x9D,
    0xFE, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x96, 0x01, 0x96, 0x00, 0x05, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x01, 0x9B, 0x01, 0x9B, 0x00, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x01, 0x9A, 0x01, 0x9A, 0x00, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x99, 0x01, 0x99,
    0x00, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x97, 0x01, 0x97, 0xFE, 0x05, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x01, 0x98, 0x01, 0x98, 0xFE, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x20, 0x0C, 0x20, 0x0C, 0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x20, 0x0D, 0x20, 0x0D,
    0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x20, 0x0E, 0x20, 0x0E, 0x03, 0x09, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x20, 0x0F, 0x20, 0x0F, 0x64, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x20, 0x09, 0x20, 0x09, 0x64, 0x09, 0x00, 0x67, 0x00, 0xE8, 0x00, 0x00, 0x20, 0x0A, 0x20, 0x0A,
    0x64, 0x09, 0x00, 0x68, 0x00, 0xE8, 0x00, 0x00, 0x20, 0x0B, 0x20, 0x0B, 0x64, 0x0A, 0x00, 0x69,
    0x20, 0x08, 0x00, 0x00, 0x20, 0x10, 0x20, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x50, 0x0D, 0x50, 0x0D, 0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x50, 0x0E, 0x50, 0x0E,
    0x01, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x50, 0x0A, 0x50, 0x0A, 0x03, 0x09, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x50, 0x0B, 0x50, 0x0B, 0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x50, 0x0C, 0x50, 0x0C, 0x64, 0xFE, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x50, 0x07, 0x50, 0x07,
    0x64, 0x09, 0x00, 0x6A, 0x00, 0xE8, 0x00, 0x00, 0x50, 0x08, 0x50, 0x08, 0x64, 0x09, 0x00, 0x6B,
    0x00, 0xE8, 0x00, 0x00, 0x50, 0x09, 0x50, 0x09, 0x64, 0x0A, 0x00, 0x6C, 0x50, 0x0F, 0x00, 0x00,
    0x02, 0x03, 0x02, 0x03, 0x02, 0x05, 0x00, 0x6F, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x04, 0x02, 0x04,
    0x02, 0x05, 0x00, 0x70, 0x00, 0xE8, 0x00, 0x00, 0x01, 0x6B, 0x01, 0x6B, 0x02, 0x0A, 0x00, 0x71,
    0x01, 0x35, 0x00, 0x00, 0x02, 0x5E, 0x02, 0x5E, 0x03, 0x09, 0x00, 0x27, 0x00, 0xEA, 0x00, 0x00,
    0x01, 0xE6, 0x01, 0xE6, 0x03, 0x09, 0x00, 0x28, 0x00, 0xF8, 0x00, 0x00, 0x01, 0xE7, 0x01, 0xE7,
    0x03, 0x09, 0x00, 0x28, 0x00, 0xF8, 0x00, 0x00, 0x01, 0xA6, 0x01, 0xA6, 0x04, 0x05, 0x00, 0x74,
    0x01, 0x4A, 0x00, 0x00, 0x02, 0x66, 0x01, 0x6A, 0xFE, 0xFE, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00,
    0x30, 0x04, 0x30, 0x04, 0x01, 0x06, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x00, 0x65, 0x00, 0x65,
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00, 0x00, 0x62, 0x00, 0x62, 0x03, 0x09, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x64, 0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x00, 0x63, 0x00, 0x63, 0x03, 0x09, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x02, 0x67, 0x02, 0x67,
    0x04, 0x0A, 0x00, 0x79, 0x01, 0x62, 0x00, 0x00, 0x00, 0xD0, 0x00, 0xD0, 0x04, 0x0A, 0x00, 0x7E,
    0x01, 0x27, 0x00, 0x00, 0x01, 0x77, 0x01, 0x77, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x02, 0x79, 0x02, 0x79, 0x04, 0x0A, 0x00, 0x00, 0x01, 0x67, 0x00, 0x00, 0x02, 0x7A, 0x02, 0x7A,
    0x04, 0x0A, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x00, 0xCF, 0x00, 0xCF, 0x00, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x00, 0xA2, 0x00, 0xA2, 0x64, 0x06, 0x00, 0x81, 0x01, 0x1B, 0x00, 0x00,
    0x00, 0xA3, 0x00, 0xA3, 0x64, 0x06, 0x00, 0x81, 0x00, 0xE8, 0x00, 0x00, 0x00, 0xA0, 0x00, 0xA0,
    0x64, 0x06, 0x00, 0x83, 0x01, 0x19, 0x00, 0x00, 0x00, 0xA1, 0x00, 0xA1, 0x64, 0x06, 0x00, 0x84,
    0x01, 0x1A, 0x00, 0x00, 0x60, 0x0B, 0x60, 0x0B, 0x00, 0x0A, 0x00, 0x85, 0x60, 0x09, 0x00, 0x00,
    0x60, 0x0C, 0x60, 0x0C, 0x00, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x60, 0x0A, 0x60, 0x0A,
    0x64, 0x05, 0x00, 0x00, 0x60, 0x08, 0x00, 0x00, 0x70, 0x0A, 0x70, 0x0A, 0x00, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x70, 0x0B, 0x70, 0x0B, 0x00, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
    0x70, 0x0C, 0x70, 0x0C, 0x00, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x70, 0x0E, 0x70, 0x0E,
    0x00, 0x06, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00, 0x70, 0x0D, 0x70, 0x0D, 0x00, 0x06, 0x00, 0x00,
    0x00, 0xE8, 0x00, 0x00, 0x70, 0x08, 0x70, 0x08, 0x00, 0x05, 0x00, 0x86, 0x70, 0x10, 0x00, 0x00,
    0x70, 0x09, 0x70, 0x09, 0x00, 0x05, 0x00, 0x00, 0x70, 0x11, 0x00, 0x00, 0x02, 0x66, 0x70, 0x0F,
    0x04, 0x05, 0x00, 0x87, 0x70, 0x12, 0x00, 0x00, 0x01, 0x9F, 0x01, 0x9F, 0xFE, 0xFE, 0x00, 0x00,
    0x00, 0xDF, 0x00, 0x00, 0x01, 0x9E, 0x01, 0x9E, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xDF, 0x00, 0x00,
    0x01, 0xEA, 0x01, 0xEA, 0xFE, 0xFE, 0x00, 0x88, 0x01, 0x4B, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x0B,
    0xFE, 0xFE, 0x00, 0x89, 0x00, 0xE7, 0x00, 0x00,
};

/* 80391010-803914A8 0498+00 s=4 e=0 z=0  None .rodata    m_wlAnmDataTable__9daAlink_c */
SECTION_RODATA static void* const m_wlAnmDataTable__9daAlink_c[294] = {
    (void*)0x02FF0001,
    (void*)0x0A28FFFF,
    (void*)0x030A0002,
    (void*)0x010EFFFF,
    (void*)0x030B0002,
    (void*)0x010EFFFF,
    (void*)0x02B4000C,
    (void*)0xFFFFFFFF,
    (void*)0x02CC010C,
    (void*)0xFFFFFFFF,
    (void*)0x02CA010C,
    (void*)0xFFFFFFFF,
    (void*)0x02CB010C,
    (void*)0xFFFFFFFF,
    (void*)0x03050001,
    (void*)0x0FFFFFFF,
    (void*)0x02E00007,
    (void*)0x02FFFFFF,
    (void*)0x02DF0007,
    (void*)0x0620FFFF,
    (void*)0x02DE000C,
    (void*)0xFFFFFFFF,
    (void*)0x02E90100,
    (void*)0x07FFFFFF,
    (void*)0x02D4010C,
    (void*)0xFFFFFFFF,
    (void*)0x02D5020C,
    (void*)0xFFFFFFFF,
    (void*)0x03060100,
    (void*)0x01FFFFFF,
    (void*)0x029A0107,
    (void*)0x09FFFFFF,
    (void*)0x02FE0105,
    (void*)0x09FFFFFF,
    (void*)0x029C0105,
    (void*)0x03FFFFFF,
    (void*)0x029B010C,
    (void*)0xFFFFFFFF,
    (void*)0x02FD0106,
    (void*)0x19FFFFFF,
    (void*)0x02FC010C,
    (void*)0xFFFFFFFF,
    (void*)0x02FB0008,
    (void*)0x03FFFFFF,
    (void*)0x02A7000C,
    (void*)0xFFFFFFFF,
    (void*)0x03030003,
    (void*)0x0A1E32FF,
    (void*)0x03000003,
    (void*)0x06FFFFFF,
    (void*)0x02C20105,
    (void*)0x06FFFFFF,
    (void*)0x02EE010C,
    (void*)0xFFFFFFFF,
    (void*)0x02FA010C,
    (void*)0xFFFFFFFF,
    (void*)0x027E000C,
    (void*)0xFFFFFFFF,
    (void*)0x030C0102,
    (void*)0x0112FFFF,
    (void*)0x02EA010C,
    (void*)0xFFFFFFFF,
    (void*)0x02EB010C,
    (void*)0xFFFFFFFF,
    (void*)0x02EC020C,
    (void*)0xFFFFFFFF,
    (void*)0x02E70002,
    (void*)0x010EFFFF,
    (void*)0x02E30105,
    (void*)0x14FFFFFF,
    (void*)0x02E40105,
    (void*)0x1AFFFFFF,
    (void*)0x02E6000C,
    (void*)0xFFFFFFFF,
    (void*)0x02E80801,
    (void*)0x1932FFFF,
    (void*)0x02E50902,
    (void*)0x010E1E2D,
    (void*)0x02B5010C,
    (void*)0xFFFFFFFF,
    (void*)0x02AC020C,
    (void*)0xFFFFFFFF,
    (void*)0x02AA020C,
    (void*)0xFFFFFFFF,
    (void*)0x02AE020C,
    (void*)0xFFFFFFFF,
    (void*)0x02B0020C,
    (void*)0xFFFFFFFF,
    (void*)0x02AD020A,
    (void*)0x20FFFFFF,
    (void*)0x02AB020B,
    (void*)0x14FFFFFF,
    (void*)0x02AF020C,
    (void*)0xFFFFFFFF,
    (void*)0x02B1020C,
    (void*)0xFFFFFFFF,
    (void*)0x02F0000C,
    (void*)0xFFFFFFFF,
    (void*)0x03020001,
    (void*)0x0A28FFFF,
    (void*)0x02CF000C,
    (void*)0xFFFFFFFF,
    (void*)0x02D0000C,
    (void*)0xFFFFFFFF,
    (void*)0x02CD000C,
    (void*)0xFFFFFFFF,
    (void*)0x02CE000C,
    (void*)0xFFFFFFFF,
    (void*)0x02F7010C,
    (void*)0xFFFFFFFF,
    (void*)0x02F80001,
    (void*)0x0DFFFFFF,
    (void*)0x02F60002,
    (void*)0x01FFFFFF,
    (void*)0x02F30004,
    (void*)0x03FFFFFF,
    (void*)0x02F1010C,
    (void*)0xFFFFFFFF,
    (void*)0x0307000C,
    (void*)0xFFFFFFFF,
    (void*)0x02A9010C,
    (void*)0xFFFFFFFF,
    (void*)0x02A8010C,
    (void*)0xFFFFFFFF,
    (void*)0x02B2010C,
    (void*)0xFFFFFFFF,
    (void*)0x02B3010C,
    (void*)0xFFFFFFFF,
    (void*)0x028D010C,
    (void*)0xFFFFFFFF,
    (void*)0x028E010C,
    (void*)0xFFFFFFFF,
    (void*)0x028F000C,
    (void*)0xFFFFFFFF,
    (void*)0x0290010C,
    (void*)0xFFFFFFFF,
    (void*)0x027F000C,
    (void*)0xFFFFFFFF,
    (void*)0x0281000C,
    (void*)0xFFFFFFFF,
    (void*)0x0280000C,
    (void*)0xFFFFFFFF,
    (void*)0x02DA000C,
    (void*)0xFFFFFFFF,
    (void*)0x0285010C,
    (void*)0xFFFFFFFF,
    (void*)0x0284010C,
    (void*)0xFFFFFFFF,
    (void*)0x0287010C,
    (void*)0xFFFFFFFF,
    (void*)0x0286010C,
    (void*)0xFFFFFFFF,
    (void*)0x0283010C,
    (void*)0xFFFFFFFF,
    (void*)0x0282010C,
    (void*)0xFFFFFFFF,
    (void*)0x02DB000C,
    (void*)0xFFFFFFFF,
    (void*)0x02DC0009,
    (void*)0x07FFFFFF,
    (void*)0x028C010C,
    (void*)0xFFFFFFFF,
    (void*)0x0288010C,
    (void*)0xFFFFFFFF,
    (void*)0x0289010C,
    (void*)0xFFFFFFFF,
    (void*)0x028B010C,
    (void*)0xFFFFFFFF,
    (void*)0x028A010C,
    (void*)0xFFFFFFFF,
    (void*)0x0295020C,
    (void*)0xFFFFFFFF,
    (void*)0x0294020C,
    (void*)0xFFFFFFFF,
    (void*)0x02C3010C,
    (void*)0xFFFFFFFF,
    (void*)0x02C5010C,
    (void*)0xFFFFFFFF,
    (void*)0x02C4010C,
    (void*)0xFFFFFFFF,
    (void*)0x02A4000C,
    (void*)0xFFFFFFFF,
    (void*)0x02A6000C,
    (void*)0xFFFFFFFF,
    (void*)0x02C6000C,
    (void*)0xFFFFFFFF,
    (void*)0x02C7010C,
    (void*)0xFFFFFFFF,
    (void*)0x02C8010C,
    (void*)0xFFFFFFFF,
    (void*)0x02C90001,
    (void*)0x1EFFFFFF,
    (void*)0x02D2010C,
    (void*)0xFFFFFFFF,
    (void*)0x02D3010A,
    (void*)0x04FFFFFF,
    (void*)0x0299000C,
    (void*)0xFFFFFFFF,
    (void*)0x0296010C,
    (void*)0xFFFFFFFF,
    (void*)0x0297010C,
    (void*)0xFFFFFFFF,
    (void*)0x0298010B,
    (void*)0x28FFFFFF,
    (void*)0x02E2010C,
    (void*)0xFFFFFFFF,
    (void*)0x02E1010C,
    (void*)0xFFFFFFFF,
    (void*)0x02B9000B,
    (void*)0x41FFFFFF,
    (void*)0x02BA0D0C,
    (void*)0xFFFFFFFF,
    (void*)0x02F90005,
    (void*)0x394655FF,
    (void*)0x02ED0106,
    (void*)0x01FFFFFF,
    (void*)0x02D1010C,
    (void*)0xFFFFFFFF,
    (void*)0x02DD000C,
    (void*)0xFFFFFFFF,
    (void*)0x02A5000C,
    (void*)0xFFFFFFFF,
    (void*)0x02A2000C,
    (void*)0xFFFFFFFF,
    (void*)0x02A3000C,
    (void*)0xFFFFFFFF,
    (void*)0x0308010C,
    (void*)0xFFFFFFFF,
    (void*)0x02EF000C,
    (void*)0xFFFFFFFF,
    (void*)0x02B60204,
    (void*)0x01FFFFFF,
    (void*)0x0293010C,
    (void*)0xFFFFFFFF,
    (void*)0x0291010C,
    (void*)0xFFFFFFFF,
    (void*)0x02BC000C,
    (void*)0xFFFFFFFF,
    (void*)0x02BF000C,
    (void*)0xFFFFFFFF,
    (void*)0x029E020C,
    (void*)0xFFFFFFFF,
    (void*)0x029D020C,
    (void*)0xFFFFFFFF,
    (void*)0x02920105,
    (void*)0x10FFFFFF,
    (void*)0x02B8060C,
    (void*)0xFFFFFFFF,
    (void*)0x02F4070C,
    (void*)0xFFFFFFFF,
    (void*)0x02F5070C,
    (void*)0xFFFFFFFF,
    (void*)0x0304020C,
    (void*)0xFFFFFFFF,
    (void*)0x03010001,
    (void*)0x0FFFFFFF,
    (void*)0x02F20001,
    (void*)0x0F2DFFFF,
    (void*)0x02D7000C,
    (void*)0xFFFFFFFF,
    (void*)0x02BB030C,
    (void*)0xFFFFFFFF,
    (void*)0x02C1010C,
    (void*)0xFFFFFFFF,
    (void*)0x02C00100,
    (void*)0x05FFFFFF,
    (void*)0x03090001,
    (void*)0x01FFFFFF,
    (void*)0x029F050C,
    (void*)0xFFFFFFFF,
    (void*)0x02D8000C,
    (void*)0xFFFFFFFF,
    (void*)0x02D9020C,
    (void*)0xFFFFFFFF,
    (void*)0x4003000C,
    (void*)0xFFFFFFFF,
    (void*)0x02A0000C,
    (void*)0xFFFFFFFF,
    (void*)0x02A1000C,
    (void*)0xFFFFFFFF,
    (void*)0x02D60100,
    (void*)0x143AFFFF,
    (void*)(((char*)JPACalcKeyAnmValue__FfUsPCf) + 0x88),
    (void*)0xFFFFFFFF,
    (void*)(((char*)cLib_chasePosXZ__FP4cXyzRC4cXyzf) + 0x7C),
    (void*)0xFFFFFFFF,
    (void*)(((char*)func_802A0A8C) + 0x80),
    (void*)0xFFFFFFFF,
    (void*)(((char*)getAramHeap__9JASKernelFv) + 0x4),
    (void*)0xFFFFFFFF,
    (void*)(((char*)startCollisionSE__10Z2CreatureFUlUl) + 0x24),
    (void*)0xFFFFFFFF,
    (void*)(((char*)changeBgmStatus__8Z2SeqMgrFl) + 0xC80),
    (void*)0xFFFFFFFF,
};

/* 803914A8-80391734 028C+00 s=2 e=0 z=0  None .rodata    m_faceTexDataTable__9daAlink_c */
SECTION_RODATA static u8 const m_faceTexDataTable__9daAlink_c[652] = {
    0x03, 0xDF, 0x03, 0x79, 0x03, 0xE0, 0x03, 0x7A, 0x03, 0xE1, 0x03, 0x7B, 0x03, 0xDF, 0x03, 0x78,
    0x03, 0xDF, 0x03, 0x83, 0x03, 0xE2, 0x03, 0x2C, 0x03, 0xC6, 0x03, 0x6A, 0x03, 0xD5, 0x03, 0x6B,
    0x03, 0xB0, 0x03, 0x2D, 0x03, 0xB1, 0x03, 0x2E, 0x03, 0xE6, 0x03, 0x82, 0x03, 0xE5, 0x03, 0x81,
    0x03, 0xF2, 0x03, 0x98, 0x03, 0xC3, 0x03, 0x53, 0x03, 0xAF, 0x03, 0x98, 0x03, 0xF0, 0x03, 0x96,
    0x03, 0xF4, 0x03, 0x2C, 0x03, 0xF3, 0x03, 0x2C, 0x03, 0xC5, 0x03, 0x5C, 0x03, 0xAF, 0x03, 0x42,
    0x03, 0xAF, 0x03, 0x43, 0x03, 0xEE, 0x03, 0x8E, 0x03, 0xEF, 0x03, 0x8F, 0x03, 0xED, 0x03, 0x8D,
    0x03, 0xD8, 0x03, 0x6E, 0x03, 0xD9, 0x03, 0x6F, 0x03, 0xDB, 0x03, 0x73, 0x03, 0xD7, 0x03, 0x6D,
    0x03, 0xE9, 0x03, 0x88, 0x03, 0xE4, 0x03, 0x7D, 0x03, 0xD1, 0x03, 0x67, 0x03, 0xD2, 0x03, 0x68,
    0x03, 0xAF, 0x03, 0x4A, 0x03, 0xAF, 0x03, 0x4B, 0x03, 0xAF, 0x03, 0x4C, 0x03, 0xAF, 0x03, 0x4D,
    0x03, 0xAF, 0x03, 0x4E, 0x03, 0xAF, 0x03, 0x91, 0x03, 0xE7, 0x03, 0x86, 0x03, 0xB4, 0x03, 0x2C,
    0x03, 0xBC, 0x03, 0x2C, 0x03, 0xAF, 0x03, 0x90, 0x03, 0xC9, 0x03, 0x5E, 0x03, 0xC7, 0x03, 0x5D,
    0x03, 0xCA, 0x03, 0x5F, 0x03, 0xAF, 0x03, 0x95, 0x03, 0xAF, 0x03, 0x41, 0x03, 0xAF, 0x03, 0x51,
    0x03, 0xAF, 0x03, 0x52, 0x03, 0xAF, 0x03, 0x49, 0x03, 0xAF, 0x03, 0x44, 0x03, 0xAF, 0x03, 0x45,
    0x03, 0xAF, 0x03, 0x46, 0x03, 0xBD, 0x03, 0x2C, 0x03, 0xBE, 0x03, 0x2C, 0x03, 0xEA, 0x03, 0x89,
    0x03, 0xAF, 0x03, 0x8A, 0x03, 0xCB, 0x03, 0x2C, 0x03, 0xAF, 0x03, 0x55, 0x03, 0xAF, 0x03, 0x54,
    0x03, 0xAF, 0x03, 0x50, 0x03, 0xAF, 0x03, 0x4F, 0x03, 0xB8, 0x03, 0x34, 0x03, 0xB6, 0x03, 0x32,
    0x03, 0xB7, 0x03, 0x33, 0x03, 0xB5, 0x03, 0x31, 0x03, 0xAF, 0x03, 0x36, 0x03, 0xAF, 0x03, 0x37,
    0x03, 0xB9, 0x03, 0x2C, 0x03, 0xAF, 0x03, 0x38, 0x03, 0xAF, 0x03, 0x39, 0x03, 0xAF, 0x03, 0x35,
    0x03, 0xDC, 0x03, 0x35, 0x03, 0xDE, 0x03, 0x35, 0x03, 0xDA, 0x03, 0x70, 0x03, 0xAF, 0x03, 0x3E,
    0x03, 0xD3, 0x03, 0x2C, 0x03, 0xBB, 0x03, 0x3C, 0x03, 0xAF, 0x03, 0x3B, 0x03, 0xBA, 0x03, 0x3A,
    0x03, 0xCE, 0x03, 0x64, 0x03, 0xCF, 0x03, 0x65, 0x03, 0xEB, 0x03, 0x8B, 0x03, 0xEC, 0x03, 0x8C,
    0x03, 0xD4, 0x03, 0x69, 0x03, 0xC0, 0x03, 0x2C, 0x03, 0xC1, 0x03, 0x3F, 0x03, 0xC1, 0x03, 0x40,
    0x03, 0xD0, 0x03, 0x66, 0x03, 0xC2, 0x03, 0x2C, 0x03, 0xAF, 0x03, 0x5A, 0x03, 0xC4, 0x03, 0x5B,
    0x03, 0xBF, 0x03, 0x2C, 0x03, 0xC8, 0x03, 0x2C, 0x10, 0x45, 0x10, 0x3B, 0x10, 0x46, 0x03, 0x2C,
    0x10, 0x41, 0x10, 0x37, 0x10, 0x42, 0x10, 0x38, 0x10, 0x43, 0x10, 0x39, 0x10, 0x47, 0x10, 0x3C,
    0x10, 0x40, 0x10, 0x36, 0x10, 0x44, 0x10, 0x3A, 0x10, 0x3F, 0x03, 0x2C, 0x03, 0xAF, 0x20, 0x32,
    0x03, 0xAF, 0x20, 0x33, 0x20, 0x39, 0x20, 0x34, 0x03, 0xAF, 0x50, 0x54, 0x03, 0xAF, 0x50, 0x55,
    0x50, 0x59, 0x50, 0x56, 0x03, 0xE8, 0x03, 0x87, 0x03, 0xAF, 0x03, 0x72, 0x03, 0xAF, 0x03, 0x84,
    0x03, 0xAF, 0x03, 0x85, 0x03, 0xD6, 0x03, 0x6C, 0x03, 0xAF, 0x03, 0x92, 0x03, 0xAF, 0x03, 0x93,
    0x03, 0xAF, 0x03, 0x77, 0x03, 0xAF, 0x03, 0x61, 0x03, 0xAF, 0x03, 0x62, 0x03, 0xCD, 0x03, 0x63,
    0x03, 0xAF, 0x03, 0x3D, 0x03, 0xF1, 0x03, 0x97, 0x03, 0xDC, 0x03, 0x2C, 0x03, 0xDD, 0x03, 0x2C,
    0x03, 0xDE, 0x03, 0x2C, 0x03, 0xB3, 0x03, 0x30, 0x03, 0xCC, 0x03, 0x60, 0x03, 0xAF, 0x03, 0x48,
    0x03, 0xAF, 0x03, 0x47, 0x03, 0xAF, 0x03, 0x58, 0x03, 0xAF, 0x03, 0x59, 0x03, 0xAF, 0x03, 0x56,
    0x03, 0xAF, 0x03, 0x57, 0x60, 0x18, 0x60, 0x15, 0x03, 0xAF, 0x70, 0x70, 0x03, 0xAF, 0x70, 0x71,
    0x03, 0xE3, 0x03, 0x7C, 0x03, 0xB2, 0x03, 0x2F, 0x03, 0xAF, 0x03, 0x94, 0x04, 0x17, 0x03, 0xA9,
    0x04, 0x18, 0x03, 0xAA, 0x04, 0x1A, 0x03, 0xA7, 0x04, 0x1E, 0x03, 0xA7, 0x04, 0x1B, 0x03, 0xA7,
    0x04, 0x0E, 0x03, 0xA7, 0x04, 0x0C, 0x03, 0xA7, 0x04, 0x0F, 0x03, 0xA7, 0x04, 0x10, 0x03, 0xA7,
    0x04, 0x20, 0x03, 0xA7, 0x04, 0x15, 0x03, 0xA7, 0x04, 0x16, 0x03, 0xA7, 0x04, 0x0B, 0x03, 0xA7,
    0x04, 0x11, 0x03, 0xA7, 0x04, 0x1F, 0x03, 0xA7, 0x04, 0x0A, 0x03, 0xA7, 0x04, 0x09, 0x03, 0xA7,
    0x04, 0x12, 0x03, 0xA7, 0x04, 0x1C, 0x03, 0xA7, 0x04, 0x1D, 0x03, 0xA7, 0x04, 0x19, 0x03, 0xAB,
    0x04, 0x13, 0x03, 0xA8, 0x04, 0x14, 0x03, 0xA7, 0x04, 0x0D, 0x03, 0xA7,
};

/* 80391734-80391740 000C+00 s=1 e=0 z=0  None .rodata    @5908 */
SECTION_RODATA static u8 const lit_5908[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391740-80391754 0014+00 s=0 e=0 z=0  None .rodata    atnNormalType1$6976 */
SECTION_RODATA u8 const data_80391740[20] = {
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
};

/* 80391754-80391768 0014+00 s=0 e=0 z=0  None .rodata    atnNormalType2$6977 */
SECTION_RODATA u8 const data_80391754[20] = {
    0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
};

/* 80391768-8039177C 0014+00 s=0 e=0 z=0  None .rodata    atnNormalType3$6978 */
SECTION_RODATA u8 const data_80391768[20] = {
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8039177C-80391790 0014+00 s=0 e=0 z=0  None .rodata    atnFinishType$6979 */
SECTION_RODATA u8 const data_8039177C[20] = {
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01,
};

/* 80391790-803917A4 0014+00 s=0 e=0 z=0  None .rodata    hitType$6980 */
SECTION_RODATA u8 const data_80391790[20] = {
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 803917A4-803917B8 0014+00 s=0 e=0 z=0  None .rodata    hitFinishType$6981 */
SECTION_RODATA u8 const data_803917A4[20] = {
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00,
};

/* 803917B8-803917CC 0014+00 s=0 e=0 z=0  None .rodata    normalType1$6982 */
SECTION_RODATA u8 const data_803917B8[20] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
};

/* 803917CC-803917E0 0014+00 s=0 e=0 z=0  None .rodata    normalType2$6983 */
SECTION_RODATA u8 const data_803917CC[20] = {
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02,
};

/* 803917E0-803917F4 0014+00 s=0 e=0 z=0  None .rodata    normalType3$6984 */
SECTION_RODATA u8 const data_803917E0[20] = {
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
};

/* 803917F4-80391808 0014+00 s=0 e=0 z=0  None .rodata    finishType$6985 */
SECTION_RODATA u8 const data_803917F4[20] = {
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01,
};

/* 80391808-80391858 0050+00 s=0 e=0 z=0  None .rodata    cutParamTable$7312 */
SECTION_RODATA u8 const data_80391808[80] = {
    0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x6F, 0x01, 0x01, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x6F, 0x04, 0x01, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x6F, 0x03, 0x01, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x6F, 0x21, 0x0E, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x70, 0x02, 0x0E, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};

/* 80391858-803918B8 0060+00 s=0 e=0 z=0  None .rodata    cutParamTable$7455 */
SECTION_RODATA u8 const data_80391858[96] = {
    0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x6F, 0x06, 0x01, 0x64, 0x64, 0x40, 0xA0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x6F, 0x07, 0x01, 0x64, 0x64, 0x41, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x6F, 0x20, 0x0E, 0x64, 0x64, 0x41, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x6A, 0x00, 0x00, 0x00, 0x6F, 0x1A, 0x01, 0x05, 0x0C, 0x41, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x6B, 0x00, 0x00, 0x00, 0x6F, 0x1F, 0x01, 0x07, 0x0E, 0x41, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x6F, 0x15, 0x01, 0x64, 0x64, 0x41, 0x20, 0x00, 0x00,
};

/* 803918B8-803918C4 000C+00 s=1 e=0 z=0  None .rodata    localCenter$11047 */
SECTION_RODATA static u8 const localCenter[12] = {
    0xC1, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00,
};

/* 803918C4-803918D0 000C+00 s=1 e=0 z=0  None .rodata    localPos$11819 */
SECTION_RODATA static u8 const localPos[12] = {
    0x40, 0x5C, 0xCC, 0xCD, 0x42, 0x35, 0x47, 0xAE, 0xC0, 0xE0, 0x00, 0x00,
};

/* 803918D0-803918DC 000C+00 s=1 e=0 z=0  None .rodata    slingLocalPos$12042 */
SECTION_RODATA static u8 const slingLocalPos[12] = {
    0x41, 0x20, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803918DC-803918E8 000C+00 s=1 e=0 z=0  None .rodata    localSidePos$14270 */
SECTION_RODATA static u8 const localSidePos[12] = {
    0x40, 0x13, 0x33, 0x33, 0xC1, 0x78, 0x00, 0x00, 0x41, 0x79, 0x99, 0x9A,
};

/* 803918E8-803918F4 000C+00 s=0 e=0 z=0  None .rodata    m_handLeftOutSidePos__9daAlink_c */
SECTION_RODATA u8 const m_handLeftOutSidePos__9daAlink_c[12] = {
    0x41, 0x10, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
};

/* 803918F4-80391900 000C+00 s=0 e=0 z=0  None .rodata    m_handRightOutSidePos__9daAlink_c */
SECTION_RODATA u8 const m_handRightOutSidePos__9daAlink_c[12] = {
    0x41, 0x10, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00,
};

/* 80391900-8039190C 000C+00 s=0 e=0 z=1  None .rodata    m_handLeftInSidePos__9daAlink_c */
SECTION_RODATA u8 const m_handLeftInSidePos__9daAlink_c[12] = {
    0x41, 0x10, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
};

/* 8039190C-80391918 000C+00 s=0 e=0 z=1  None .rodata    m_handRightInSidePos__9daAlink_c */
SECTION_RODATA u8 const m_handRightInSidePos__9daAlink_c[12] = {
    0x41, 0x10, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00,
};

/* 80391918-80391924 000C+00 s=0 e=0 z=0  None .rodata    horseLocalLeft$17678 */
SECTION_RODATA u8 const data_80391918[12] = {
    0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391924-80391930 000C+00 s=0 e=0 z=0  None .rodata    horseLocalRight$17679 */
SECTION_RODATA u8 const data_80391924[12] = {
    0xC1, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391930-8039193C 000C+00 s=0 e=0 z=0  None .rodata    horseLocalBack$17680 */
SECTION_RODATA u8 const data_80391930[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x48, 0x00, 0x00,
};

/* 8039193C-80391948 000C+00 s=0 e=0 z=0  None .rodata    boarLocalLeft$17681 */
SECTION_RODATA u8 const data_8039193C[12] = {
    0x43, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x90, 0x00, 0x00,
};

/* 80391948-80391954 000C+00 s=0 e=0 z=0  None .rodata    boarLocalRight$17682 */
SECTION_RODATA u8 const data_80391948[12] = {
    0xC3, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x90, 0x00, 0x00,
};

/* 80391954-80391960 000C+00 s=1 e=0 z=0  None .rodata    localHorseRun$18095 */
SECTION_RODATA static u8 const localHorseRun_18095[12] = {
    0x41, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
};

/* 80391960-8039196C 000C+00 s=1 e=0 z=0  None .rodata    localHorseRun$18103 */
SECTION_RODATA static u8 const localHorseRun_18103[12] = {
    0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
};

/* 8039196C-80391978 000C+00 s=1 e=0 z=0  None .rodata    localOffset$18237 */
SECTION_RODATA static u8 const localOffset_18237[12] = {
    0xC1, 0xF0, 0x00, 0x00, 0xC1, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391978-80391984 000C+00 s=1 e=0 z=0  None .rodata    @18938 */
SECTION_RODATA static u8 const lit_18938[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391984-80391990 000C+00 s=1 e=0 z=0  None .rodata    boarRideOffset$19147 */
SECTION_RODATA static u8 const boarRideOffset[12] = {
    0xBF, 0x5E, 0xB8, 0x52, 0x40, 0x55, 0x1E, 0xB8, 0xC1, 0xBE, 0x28, 0xF6,
};

/* 80391990-8039199C 000C+00 s=1 e=0 z=0  None .rodata    leftOffset$19386 */
SECTION_RODATA static u8 const leftOffset[12] = {
    0x42, 0x96, 0x00, 0x00, 0x42, 0xCC, 0x00, 0x00, 0x40, 0xC7, 0x2B, 0x02,
};

/* 8039199C-803919A8 000C+00 s=1 e=0 z=0  None .rodata    rightOffset$19387 */
SECTION_RODATA static u8 const rightOffset[12] = {
    0xC2, 0x96, 0x00, 0x00, 0x42, 0xCC, 0x00, 0x00, 0x40, 0xC7, 0x12, 0x6F,
};

/* 803919A8-803919D8 0030+00 s=0 e=0 z=0  None .rodata    cutParamTable$19765 */
SECTION_RODATA u8 const data_803919A8[48] = {
    0x00, 0x00, 0x00, 0x20, 0x00, 0x91, 0x01, 0x0C, 0x00, 0x0E, 0x22, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x92, 0x01, 0x0D, 0x00, 0x13, 0x23, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x93, 0x01, 0x0E,
    0x00, 0x13, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x94, 0x01, 0x0F, 0x00, 0x00, 0x2A, 0x00,
};

/* 803919D8-803919E4 000A+02 s=1 e=0 z=0  None .rodata    anmIdx$19945 */
SECTION_RODATA static u8 const anmIdx[10 + 2 /* padding */] = {
    0x00,
    0xBA,
    0x00,
    0xB8,
    0x00,
    0xBB,
    0x00,
    0xBC,
    0x00,
    0xB9,
    /* padding */
    0x00,
    0x00,
};

/* 803919E4-803919F0 000C+00 s=1 e=0 z=0  None .rodata    localPaddleTop$20605 */
SECTION_RODATA static u8 const localPaddleTop[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x1E, 0x00, 0x00,
};

/* 803919F0-803919FC 000C+00 s=1 e=0 z=0  None .rodata    underOffsetY$23302 */
SECTION_RODATA static u8 const underOffsetY[12] = {
    0x41, 0x70, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00,
};

/* 803919FC-80391A08 000C+00 s=1 e=0 z=0  None .rodata    hsVec$28749 */
SECTION_RODATA static u8 const hsVec[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 80391A08-80391A14 000C+00 s=1 e=0 z=0  None .rodata    hookRoot$29726 */
SECTION_RODATA static f32 const hookRoot[3] = {
    0.0f,
    0.0f,
    23.5f,
};

/* 80391A14-80391A20 000C+00 s=1 e=0 z=0  None .rodata    bottleTop$32160 */
SECTION_RODATA static u8 const bottleTop[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391A20-80391A2C 000C+00 s=1 e=0 z=0  None .rodata    kandelaarOffset$32655 */
SECTION_RODATA static u8 const kandelaarOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391A2C-80391A38 000C+00 s=1 e=0 z=0  None .rodata    @33690 */
SECTION_RODATA static u8 const lit_33690[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391A38-80391A44 000C+00 s=0 e=0 z=0  None .rodata    ironBallPosVec$34212 */
SECTION_RODATA u8 const data_80391A38[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0x28, 0x00, 0x00,
};

/* 80391A44-80391A50 000C+00 s=0 e=0 z=0  None .rodata    handCenterOffsetVec$34213 */
SECTION_RODATA u8 const data_80391A44[12] = {
    0x40, 0x00, 0x00, 0x00, 0xC1, 0xC8, 0x00, 0x00, 0x41, 0x48, 0x00, 0x00,
};

/* 80391A50-80391A5C 000C+00 s=1 e=0 z=0  None .rodata    @34968 */
SECTION_RODATA static u8 const lit_34968[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391A5C-80391B5C 00FF+01 s=1 e=0 z=0  None .rodata    getSeType$37390 */
SECTION_RODATA static u8 const getSeType[255 + 1 /* padding */] = {
    0x08,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x02,
    0x02,
    0x08,
    0x08,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x08,
    0x08,
    0x08,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x02,
    0x08,
    0x02,
    0x02,
    0x00,
    0x01,
    0x01,
    0x02,
    0x01,
    0x08,
    0x01,
    0x08,
    0x01,
    0x01,
    0x01,
    0x08,
    0x08,
    0x08,
    0x01,
    0x01,
    0x08,
    0x02,
    0x08,
    0x01,
    0x01,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x01,
    0x01,
    0x02,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x08,
    0x08,
    0x01,
    0x01,
    0x01,
    0x08,
    0x08,
    0x08,
    0x01,
    0x01,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x01,
    0x02,
    0x02,
    0x02,
    0x02,
    0x01,
    0x02,
    0x08,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x08,
    0x08,
    0x08,
    0x01,
    0x02,
    0x01,
    0x02,
    0x01,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x02,
    0x02,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x02,
    0x01,
    0x02,
    0x02,
    0x08,
    0x01,
    0x01,
    0x01,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x05,
    0x05,
    0x05,
    0x05,
    0x05,
    0x05,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x06,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x02,
    0x02,
    0x01,
    0x02,
    0x02,
    0x02,
    0x08,
    0x08,
    0x08,
    0x08,
    0x02,
    0x03,
    0x03,
    0x01,
    0x08,
    0x03,
    0x02,
    0x02,
    0x02,
    0x02,
    0x01,
    0x02,
    /* padding */
    0x00,
};

/* 80391B5C-80391B7C 0020+00 s=1 e=0 z=0  None .rodata    bgmLabel$37391 */
SECTION_RODATA static u8 const bgmLabel[32] = {
    0x01, 0x00, 0x00, 0x1C, 0x01, 0x00, 0x00, 0x0A, 0x01, 0x00, 0x00, 0x0B, 0x01, 0x00, 0x00, 0x14,
    0x01, 0x00, 0x00, 0x81, 0x01, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0xA0,
};

/* 80391B7C-80391B8C 0010+00 s=1 e=0 z=0  None .rodata    rupeeCount$37407 */
SECTION_RODATA static u8 const rupeeCount[16] = {
    0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xC8,
};

/* 80391B8C-80391BA0 0014+00 s=0 e=0 z=0  None .rodata    heartPieceMessage$37580 */
SECTION_RODATA u8 const data_80391B8C[20] = {
    0x00, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x9C, 0x00, 0x00,
    0x00, 0x9D, 0x00, 0x00, 0x00, 0x9E, 0x00, 0x00, 0x00, 0x9F,
};

/* 80391BA0-80391BAC 000C+00 s=0 e=0 z=0  None .rodata    effName$39419 */
SECTION_RODATA u8 const data_80391BA0[12] = {
    0x09, 0xF5, 0x09, 0xF6, 0x09, 0xF7, 0x09, 0xF8, 0x09, 0xF9, 0x09, 0xFA,
};

/* 80391BAC-80391BB8 000C+00 s=1 e=0 z=0  None .rodata    smokeParticleScale$39643 */
SECTION_RODATA static u8 const smokeParticleScale_39643[12] = {
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33,
};

/* 80391BB8-80391BC4 000C+00 s=1 e=0 z=0  None .rodata    wolfWaterCenterScale$39644 */
SECTION_RODATA static u8 const wolfWaterCenterScale[12] = {
    0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x99, 0x99, 0x9A,
};

/* 80391BC4-80391BD0 000C+00 s=0 e=0 z=0  None .rodata    waterScale$39762 */
SECTION_RODATA u8 const data_80391BC4[12] = {
    0x3F, 0x14, 0x7A, 0xE1, 0x3F, 0x14, 0x7A, 0xE1, 0x3F, 0x14, 0x7A, 0xE1,
};

/* 80391BD0-80391BDC 000C+00 s=0 e=0 z=0  None .rodata    waterCenterScale$39763 */
SECTION_RODATA u8 const data_80391BD0[12] = {
    0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x99, 0x99, 0x9A,
};

/* 80391BDC-80391BE8 000C+00 s=0 e=0 z=0  None .rodata    waterSmokeScale$39764 */
SECTION_RODATA u8 const data_80391BDC[12] = {
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33,
};

/* 80391BE8-80391BF4 000C+00 s=0 e=0 z=0  None .rodata    smokeParticleScale$39891 */
SECTION_RODATA u8 const data_80391BE8[12] = {
    0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD,
};

/* 80391BF4-80391C00 000C+00 s=0 e=0 z=0  None .rodata    waterScale$39892 */
SECTION_RODATA u8 const data_80391BF4[12] = {
    0x3F, 0xA0, 0x00, 0x00, 0x3F, 0xA0, 0x00, 0x00, 0x3F, 0xA0, 0x00, 0x00,
};

/* 80391C00-80391C0C 000C+00 s=0 e=0 z=0  None .rodata    wolfSmokeScale$39893 */
SECTION_RODATA u8 const data_80391C00[12] = {
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33,
};

/* 80391C0C-80391C18 000C+00 s=0 e=0 z=0  None .rodata    shikoScale$40012 */
SECTION_RODATA u8 const data_80391C0C[12] = {
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33,
};

/* 80391C18-80391C24 000C+00 s=0 e=0 z=0  None .rodata    pushedSlip$40013 */
SECTION_RODATA u8 const data_80391C18[12] = {
    0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD,
};

/* 80391C24-80391C30 000C+00 s=0 e=0 z=0  None .rodata    loseScale$40014 */
SECTION_RODATA u8 const data_80391C24[12] = {
    0x3F, 0x8C, 0xCC, 0xCD, 0x3F, 0x8C, 0xCC, 0xCD, 0x3F, 0x8C, 0xCC, 0xCD,
};

/* 80391C30-80391C3C 000C+00 s=1 e=0 z=0  None .rodata    releaeScale$40567 */
SECTION_RODATA static u8 const releaeScale[12] = {
    0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD,
};

/* 80391C3C-80391C48 000C+00 s=0 e=0 z=0  None .rodata    lightAParticleScale$40829 */
SECTION_RODATA u8 const data_80391C3C[12] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x95, 0xE3, 0x54, 0x3F, 0x80, 0x00, 0x00,
};

/* 80391C48-80391C54 000C+00 s=0 e=0 z=0  None .rodata    lightALocalTrans$40830 */
SECTION_RODATA u8 const data_80391C48[12] = {
    0x42, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391C54-80391C60 000C+00 s=0 e=0 z=0  None .rodata    localOffset$40952 */
SECTION_RODATA u8 const data_80391C54[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
};

/* 80391C60-80391C6C 000C+00 s=0 e=0 z=0  None .rodata    localScale0$40953 */
SECTION_RODATA u8 const data_80391C60[12] = {
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x59, 0x99, 0x9A, 0x3F, 0xC0, 0x00, 0x00,
};

/* 80391C6C-80391C78 000C+00 s=0 e=0 z=0  None .rodata    localScale1$40954 */
SECTION_RODATA u8 const data_80391C6C[12] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x59, 0x99, 0x9A, 0x3F, 0xC0, 0x00, 0x00,
};

/* 80391C78-80391C84 000C+00 s=0 e=0 z=0  None .rodata    waterEffScale$41082 */
SECTION_RODATA u8 const data_80391C78[12] = {
    0x3F, 0xC0, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00,
};

/* 80391C84-80391C9C 0018+00 s=0 e=0 z=0  None .rodata    leftTransNormal$41090 */
SECTION_RODATA u8 const data_80391C84[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391C9C-80391CCC 0030+00 s=0 e=0 z=0  None .rodata    leftTransLight$41095 */
SECTION_RODATA u8 const data_80391C9C[48] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391CCC-80391CD8 000C+00 s=0 e=0 z=0  None .rodata    effNameLarge$41096 */
SECTION_RODATA u8 const data_80391CCC[12] = {
    0x0B, 0xA5, 0x0B, 0xA6, 0x0B, 0xA7, 0x0B, 0xA8, 0x0B, 0xA9, 0x0B, 0xAA,
};

/* 80391CD8-80391D20 0048+00 s=0 e=0 z=0  None .rodata    leftTransLarge$41100 */
SECTION_RODATA u8 const data_80391CD8[72] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391D20-80391D38 0018+00 s=0 e=0 z=0  None .rodata    leftTransWater$41105 */
SECTION_RODATA u8 const data_80391D20[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391D38-80391D44 000C+00 s=1 e=0 z=0  None .rodata    effName$41208 */
SECTION_RODATA static u8 const effName_41208[12] = {
    0x09, 0xD0, 0x09, 0xD1, 0x09, 0xD2, 0x09, 0xD3, 0x09, 0xD4, 0x09, 0xD5,
};

/* 80391D44-80391D54 0010+00 s=1 e=0 z=0  None .rodata    swordUpColor$41733 */
SECTION_RODATA static u8 const swordUpColor[16] = {
    0x00, 0x0D, 0x00, 0x0A, 0x00, 0x02, 0x00, 0xFF, 0x00, 0x1C, 0x00, 0x10, 0x00, 0x04, 0x00, 0xFF,
};

/* 80391D54-80391D60 000C+00 s=1 e=0 z=0  None .rodata    swordCutSplashScale$41755 */
SECTION_RODATA static u8 const swordCutSplashScale[12] = {
    0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x19, 0x99, 0x9A,
};

/* 80391D60-80391D6C 000C+00 s=0 e=0 z=0  None .rodata    fairyScale$41951 */
SECTION_RODATA u8 const data_80391D60[12] = {
    0x3F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};

/* 80391D6C-80391D78 000C+00 s=0 e=0 z=0  None .rodata    chuchuLocalOffset$41952 */
SECTION_RODATA u8 const data_80391D6C[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391D78-80391D84 000C+00 s=0 e=0 z=0  None .rodata    chuchuScale$41953 */
SECTION_RODATA u8 const data_80391D78[12] = {
    0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD,
};

/* 80391D84-80391D94 0010+00 s=1 e=0 z=0  None .rodata    effJoint$42070 */
SECTION_RODATA static u8 const effJoint[16] = {
    0x00, 0x07, 0x00, 0x0C, 0x00, 0x10, 0x00, 0x22, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03,
};

/* 80391D94-80391DF4 0060+00 s=1 e=0 z=0  None .rodata    effOffset$42071 */
SECTION_RODATA static u8 const effOffset[96] = {
    0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0xC0, 0xE0, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0xC1, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC1, 0xC8, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00,
    0x41, 0xA0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0xC8, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
};

/* 80391DF4-80391E00 000C+00 s=0 e=0 z=0  None .rodata    effScale$42225 */
SECTION_RODATA u8 const data_80391DF4[12] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0xE6, 0x66, 0x66, 0x3F, 0x80, 0x00, 0x00,
};

/* 80391E00-80391E0C 000C+00 s=0 e=0 z=0  None .rodata    wolfEffScale$42226 */
SECTION_RODATA u8 const data_80391E00[12] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00,
};

/* 80391E0C-80391E18 000C+00 s=0 e=0 z=0  None .rodata    offsetPos$42227 */
SECTION_RODATA u8 const data_80391E0C[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
};

/* 80391E18-80391E24 000C+00 s=1 e=0 z=0  None .rodata    localFootOffset$45107 */
SECTION_RODATA static u8 const localFootOffset[12] = {
    0x40, 0xC0, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391E24-80391E30 000C+00 s=1 e=0 z=0  None .rodata    frontOffset$45186 */
SECTION_RODATA static u8 const frontOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
};

/* 80391E30-80391E3C 000C+00 s=1 e=0 z=0  None .rodata    wolfChainBaseOffset$45513 */
SECTION_RODATA static u8 const wolfChainBaseOffset[12] = {
    0x41, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x40, 0x00, 0x00,
};

/* 80391E3C-80391E48 000C+00 s=1 e=0 z=0  None .rodata    wolfChainVec$45514 */
SECTION_RODATA static u8 const wolfChainVec[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x10, 0x00, 0x00,
};

/* 80391E48-80391E78 0030+00 s=1 e=0 z=0  None .rodata    label$45760 */
SECTION_RODATA static u8 const label[48] = {
    0x00, 0x01, 0x00, 0x30, 0x00, 0x01, 0x00, 0x2E, 0x00, 0x01, 0x00, 0x31, 0x00, 0x01, 0x00, 0x2F,
    0x00, 0x01, 0x00, 0x3D, 0x00, 0x01, 0x00, 0x33, 0x00, 0x01, 0x00, 0xB1, 0x00, 0x01, 0x00, 0xB5,
    0x00, 0x01, 0x00, 0xB6, 0x00, 0x01, 0x00, 0xB7, 0x00, 0x01, 0x00, 0xB9, 0x00, 0x01, 0x00, 0x3F,
};

/* 80391E78-80391E8C 0014+00 s=1 e=0 z=0  None .rodata    normalType0$50859 */
SECTION_RODATA static u8 const normalType0[20] = {
    0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
    0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391E8C-80391EA0 0014+00 s=1 e=0 z=0  None .rodata    normalType1$50860 */
SECTION_RODATA static u8 const normalType1_50860[20] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03,
};

/* 80391EA0-80391EC0 0020+00 s=0 e=0 z=0  None .rodata    dataTabl$51470 */
SECTION_RODATA u8 const data_80391EA0[32] = {
    0x00, 0x00, 0x00, 0x40, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x2E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x43, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x2D, 0x00, 0x00, 0x00,
};

/* 80391EC0-80391ECC 000C+00 s=1 e=0 z=0  None .rodata    arm1Vec$56040 */
SECTION_RODATA static u8 const arm1Vec[12] = {
    0x41, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391ECC-80391ED8 000C+00 s=1 e=0 z=0  None .rodata    arm2Vec$56041 */
SECTION_RODATA static u8 const arm2Vec[12] = {
    0x41, 0xD4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80453228-8045322C 0004+00 s=1 e=0 z=0  None .sdata2    armJointTable$56027 */
SECTION_SDATA2 static u8 armJointTable[4] = {
    0x00,
    0x07,
    0x00,
    0x0C,
};

/* 800A2710-800A29DC 02CC+00 s=1 e=0 z=0  None .text      setArmMatrix__9daAlink_cFv */
//	800A2720: 803621A8 (_savegpr_16)
//	800A2734: 80453228 (armJointTable)
//	800A2764: 803464B0 (PSMTXCopy)
//	800A27B8: 803DD470 (now__14mDoMtx_stack_c)
//	800A27BC: 803DD470 (now__14mDoMtx_stack_c)
//	800A27C0: 80391EC0 (arm1Vec)
//	800A27C4: 80391EC0 (arm1Vec)
//	800A27D0: 80391ECC (arm2Vec)
//	800A27D4: 80391ECC (arm2Vec)
//	800A27DC: 80453228 (armJointTable)
//	800A285C: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	800A2864: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	800A287C: 803464B0 (PSMTXCopy)
//	800A288C: 80346D6C (PSMTXMultVec)
//	800A28C8: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	800A28D0: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	800A28E8: 803464B0 (PSMTXCopy)
//	800A28F8: 80346D6C (PSMTXMultVec)
//	800A2930: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	800A2970: 80346D6C (PSMTXMultVec)
//	800A29A0: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	800A29C8: 803621F4 (_restgpr_16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setArmMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/setArmMatrix__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045322C-80453230 0004+00 s=1 e=0 z=0  None .sdata2    footJointTable$56137 */
SECTION_SDATA2 static u8 footJointTable[4] = {
    0x00,
    0x12,
    0x00,
    0x17,
};

/* 800A29DC-800A2C24 0248+00 s=1 e=0 z=0  None .text      setFootMatrix__9daAlink_cFv */
//	800A29EC: 803621C8 (_savegpr_24)
//	800A29F4: 8038D658 (lit_3757)
//	800A29F8: 8038D658 (lit_3757)
//	800A2A08: 8045322C (footJointTable)
//	800A2A38: 803464B0 (PSMTXCopy)
//	800A2AC0: 803DD470 (now__14mDoMtx_stack_c)
//	800A2AC4: 803DD470 (now__14mDoMtx_stack_c)
//	800A2ACC: 8045322C (footJointTable)
//	800A2B00: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	800A2B10: 80346D6C (PSMTXMultVec)
//	800A2B4C: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	800A2B5C: 80346D6C (PSMTXMultVec)
//	800A2B94: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	800A2BA4: 80346D6C (PSMTXMultVec)
//	800A2BDC: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	800A2C10: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFootMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/setFootMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800A2C24-800A2CE0 00BC+00 s=3 e=0 z=0  None .text      setMatrixOffset__9daAlink_cFPff */
//	800A2C50: 80452C98 (lit_5943)
//	800A2C54: 804531B4 (lit_52234)
//	800A2C58: 80452DD8 (lit_11470)
//	800A2C5C: 8026F97C (cLib_addCalc__FPfffff)
//	800A2C94: 803DD470 (now__14mDoMtx_stack_c)
//	800A2C98: 803DD470 (now__14mDoMtx_stack_c)
//	800A2CA0: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	800A2CA4: 803DD470 (now__14mDoMtx_stack_c)
//	800A2CA8: 803DD470 (now__14mDoMtx_stack_c)
//	800A2CB4: 803464E4 (PSMTXConcat)
//	800A2CB8: 803DD470 (now__14mDoMtx_stack_c)
//	800A2CBC: 803DD470 (now__14mDoMtx_stack_c)
//	800A2CC4: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMatrixOffset(f32* param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setMatrixOffset__9daAlink_cFPff.s"
}
#pragma pop

/* 800A2CE0-800A3430 0750+00 s=3 e=0 z=0  None .text
 * setLegAngle__9daAlink_cFfP18daAlink_footData_cPsPsi          */
//	800A2D08: 803621D0 (_savegpr_26)
//	800A2D2C: 80452DA0 (lit_9054)
//	800A2D50: 803DD470 (now__14mDoMtx_stack_c)
//	800A2D54: 803DD470 (now__14mDoMtx_stack_c)
//	800A2D58: 803464E4 (PSMTXConcat)
//	800A2D5C: 803DD470 (now__14mDoMtx_stack_c)
//	800A2D60: 803DD470 (now__14mDoMtx_stack_c)
//	800A2D88: 803464E4 (PSMTXConcat)
//	800A2DAC: 803DD470 (now__14mDoMtx_stack_c)
//	800A2DB0: 803DD470 (now__14mDoMtx_stack_c)
//	800A2DB4: 803464E4 (PSMTXConcat)
//	800A2E20: 80452CC0 (lit_6108)
//	800A2E3C: 803DD470 (now__14mDoMtx_stack_c)
//	800A2E40: 803DD470 (now__14mDoMtx_stack_c)
//	800A2E44: 803464E4 (PSMTXConcat)
//	800A2E48: 803DD470 (now__14mDoMtx_stack_c)
//	800A2E4C: 803DD470 (now__14mDoMtx_stack_c)
//	800A2E74: 803464E4 (PSMTXConcat)
//	800A2E98: 803DD470 (now__14mDoMtx_stack_c)
//	800A2E9C: 803DD470 (now__14mDoMtx_stack_c)
//	800A2EA0: 803464E4 (PSMTXConcat)
//	800A2EBC: 80452CC0 (lit_6108)
//	800A2ED8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A2F00: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A2F78: 80452CB8 (lit_6040)
//	800A2F90: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A2FB0: 80347138 (PSVECSquareMag)
//	800A2FC0: 80451180 (G_CM3D_F_ABS_MIN)
//	800A2FD8: 80347138 (PSVECSquareMag)
//	800A2FE4: 80347138 (PSVECSquareMag)
//	800A2FE8: 80452CC0 (lit_6108)
//	800A3004: 80452CC0 (lit_6108)
//	800A3020: 80452CC0 (lit_6108)
//	800A305C: 80452D14 (lit_7307)
//	800A3074: 80266B84 (__ml__4cXyzCFf)
//	800A3084: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800A30AC: 80452CC0 (lit_6108)
//	800A30BC: 80452CC0 (lit_6108)
//	800A30EC: 80452CC0 (lit_6108)
//	800A310C: 80452CC0 (lit_6108)
//	800A314C: 80452CC0 (lit_6108)
//	800A316C: 80452CC0 (lit_6108)
//	800A3178: 80347138 (PSVECSquareMag)
//	800A317C: 80452CC0 (lit_6108)
//	800A318C: 80452CE8 (lit_6846)
//	800A3194: 80452CF0 (lit_6847)
//	800A31DC: 80452CF8 (lit_6848)
//	800A31E8: 80450AE0 (__float_nan)
//	800A31EC: 80450AE0 (__float_nan)
//	800A3258: 80450AE0 (__float_nan)
//	800A325C: 80450AE0 (__float_nan)
//	800A3268: 80451180 (G_CM3D_F_ABS_MIN)
//	800A3288: 80266B84 (__ml__4cXyzCFf)
//	800A3298: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800A32C0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A32E8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A3314: 80267674 (cM_atan2s__Fff)
//	800A3324: 80267674 (cM_atan2s__Fff)
//	800A3390: 80267674 (cM_atan2s__Fff)
//	800A33A4: 80267674 (cM_atan2s__Fff)
//	800A33BC: 80267674 (cM_atan2s__Fff)
//	800A33CC: 80267674 (cM_atan2s__Fff)
//	800A33DC: 80267674 (cM_atan2s__Fff)
//	800A33F0: 80267674 (cM_atan2s__Fff)
//	800A341C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLegAngle(f32 param_0, daAlink_footData_c* param_1, s16* param_2,
                                s16* param_3, int param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/setLegAngle__9daAlink_cFfP18daAlink_footData_cPsPsi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450690-80450694 0004+00 s=20 e=0 z=0  None .sdata     l_autoUpHeight */
SECTION_SDATA static f32 l_autoUpHeight = 30.010000228881836f;

/* 80450694-80450698 0004+00 s=12 e=0 z=0  None .sdata     l_autoDownHeight */
SECTION_SDATA static f32 l_autoDownHeight = -30.010000228881836f;

/* 800A3430-800A39B8 0588+00 s=1 e=0 z=0  None .text      footBgCheck__9daAlink_cFv */
//	800A3458: 803621C4 (_savegpr_23)
//	800A3460: 8038D658 (lit_3757)
//	800A3464: 8038D658 (lit_3757)
//	800A3478: 80452CC0 (lit_6108)
//	800A347C: 803A37C0 (__vt__8cM3dGPla)
//	800A3480: 803A37C0 (__vt__8cM3dGPla)
//	800A34B0: 80346D6C (PSMTXMultVec)
//	800A34CC: 80346D6C (PSMTXMultVec)
//	800A34E8: 80346D6C (PSMTXMultVec)
//	800A3504: 80346D6C (PSMTXMultVec)
//	800A3530: 80452CC0 (lit_6108)
//	800A3564: 804061C0 (g_dComIfG_gameInfo)
//	800A3568: 804061C0 (g_dComIfG_gameInfo)
//	800A3570: 80452DA4 (lit_9138)
//	800A3588: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800A3594: 80452C98 (lit_5943)
//	800A3598: 80266B84 (__ml__4cXyzCFf)
//	800A35D4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A35F4: 80452CC0 (lit_6108)
//	800A3604: 80347138 (PSVECSquareMag)
//	800A3608: 80452D50 (lit_8247)
//	800A3674: 80450690 (l_autoUpHeight)
//	800A3698: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800A36A4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800A36C0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800A36D0: 802681E4 (cBgW_CheckBGround__Ff)
//	800A36E4: 80450690 (l_autoUpHeight)
//	800A36E8: 80450694 (l_autoDownHeight)
//	800A3710: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800A3788: 800B1BAC (setSandShapeOffset__9daAlink_cFv)
//	800A3798: 800A2C24 (setMatrixOffset__9daAlink_cFPff)
//	800A37A0: 800B172C (setSandDownBgCheckWallH__9daAlink_cFv)
//	800A37E4: 80452CB8 (lit_6040)
//	800A37F0: 80452CC0 (lit_6108)
//	800A380C: 800A2C24 (setMatrixOffset__9daAlink_cFPff)
//	800A384C: 80450690 (l_autoUpHeight)
//	800A3864: 80452CC0 (lit_6108)
//	800A388C: 800A2CE0 (setLegAngle__9daAlink_cFfP18daAlink_footData_cPsPsi)
//	800A38B8: 803650D0 (abs)
//	800A3900: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A3918: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A3960: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A397C: 803A37C0 (__vt__8cM3dGPla)
//	800A3980: 803A37C0 (__vt__8cM3dGPla)
//	800A39A4: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::footBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/footBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80391ED8-80391EE4 000C+00 s=0 e=0 z=0  None .rodata    leg1Vec$56150 */
SECTION_RODATA u8 const data_80391ED8[12] = {
    0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391EE4-80391EF0 000C+00 s=0 e=0 z=0  None .rodata    leg2Vec$56151 */
SECTION_RODATA u8 const data_80391EE4[12] = {
    0x42, 0x1D, 0x74, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391EF0-80391EFC 000C+00 s=0 e=0 z=0  None .rodata    footVec$56152 */
SECTION_RODATA u8 const data_80391EF0[12] = {
    0x41, 0x62, 0xE1, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391EFC-80391F08 000C+00 s=0 e=0 z=0  None .rodata    localLeftFootOffset$56542 */
SECTION_RODATA u8 const data_80391EFC[12] = {
    0xC0, 0x40, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391F08-80391F14 000C+00 s=0 e=0 z=0  None .rodata    localRightFootOffset$56543 */
SECTION_RODATA u8 const data_80391F08[12] = {
    0xC0, 0x40, 0x00, 0x00, 0xC1, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391F14-80391F20 000C+00 s=0 e=0 z=0  None .rodata    localLeftToeOffset$56544 */
SECTION_RODATA u8 const data_80391F14[12] = {
    0x41, 0x20, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391F20-80391F2C 000C+00 s=0 e=0 z=0  None .rodata    localRightToeOffset$56545 */
SECTION_RODATA u8 const data_80391F20[12] = {
    0x41, 0x20, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391F2C-80391F44 0018+00 s=1 e=0 z=0  None .rodata    localHandPos$56752 */
SECTION_RODATA static u8 const localHandPos[24] = {
    0x41, 0xB0, 0xC5, 0x60, 0x40, 0xAF, 0xC1, 0x20, 0x00, 0x00, 0x00, 0x00,
    0xC1, 0xAF, 0x33, 0x80, 0x40, 0xB0, 0xCF, 0xDF, 0x00, 0x00, 0x00, 0x00,
};

/* 800A39B8-800A3C8C 02D4+00 s=1 e=0 z=0  None .text      handBgCheck__9daAlink_cFv */
//	800A39D0: 803621C4 (_savegpr_23)
//	800A3A08: 80452D34 (lit_7710)
//	800A3A1C: 80452CC0 (lit_6108)
//	800A3A20: 800A2C24 (setMatrixOffset__9daAlink_cFPff)
//	800A3A38: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800A3A3C: 803DD470 (now__14mDoMtx_stack_c)
//	800A3A40: 803DD470 (now__14mDoMtx_stack_c)
//	800A3A48: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800A3A54: 804061C0 (g_dComIfG_gameInfo)
//	800A3A58: 804061C0 (g_dComIfG_gameInfo)
//	800A3A60: 803DD470 (now__14mDoMtx_stack_c)
//	800A3A64: 803DD470 (now__14mDoMtx_stack_c)
//	800A3A68: 80391F2C (localHandPos)
//	800A3A6C: 80391F2C (localHandPos)
//	800A3A70: 80452DA4 (lit_9138)
//	800A3A80: 80346D6C (PSMTXMultVec)
//	800A3A8C: 80450690 (l_autoUpHeight)
//	800A3AAC: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800A3AB8: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800A3ACC: 80450690 (l_autoUpHeight)
//	800A3AD0: 80450694 (l_autoDownHeight)
//	800A3AEC: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	800A3B0C: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800A3B64: 80452D18 (lit_7308)
//	800A3BAC: 800A2C24 (setMatrixOffset__9daAlink_cFPff)
//	800A3BC4: 80452CBC (lit_6041)
//	800A3BF4: 800A2CE0 (setLegAngle__9daAlink_cFfP18daAlink_footData_cPsPsi)
//	800A3C20: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A3C38: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A3C50: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800A3C78: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::handBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/handBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* 800A3C8C-800A3CE4 0058+00 s=11 e=0 z=0  None .text      setItemHeap__9daAlink_cFv */
//	800A3CD0: 8015F168 (setAnimeHeap__14daPy_anmHeap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setItemHeap() {
    nofralloc
#include "asm/d/a/d_a_alink/setItemHeap__9daAlink_cFv.s"
}
#pragma pop

/* 800A3CE4-800A3D0C 0028+00 s=4 e=0 z=0  None .text      setIdxMask__9daAlink_cFPUsPUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIdxMask(u16* param_0, u16* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setIdxMask__9daAlink_cFPUsPUs.s"
}
#pragma pop

/* 800A3D0C-800A3D7C 0070+00 s=5 e=0 z=0  None .text
 * getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl           */
//	800A3D3C: 800A3CE4 (setIdxMask__9daAlink_cFPUsPUs)
//	800A3D54: 8015F068 (loadDataIdx__14daPy_anmHeap_cFUs)
//	800A3D64: 8015F118 (loadDataDemoRID__14daPy_anmHeap_cFUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getAnimeResource(daPy_anmHeap_c* param_0, u16 param_1, u32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl.s"
}
#pragma pop

/* 800A3D7C-800A3E30 00B4+00 s=16 e=0 z=0  None .text      initModel__9daAlink_cFP12J3DModelDataUlUl
 */
//	800A3D8C: 803621D8 (_savegpr_28)
//	800A3DE0: 8003AB30 (onWarpMaterial__11dRes_info_cFP12J3DModelData)
//	800A3DFC: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	800A3E10: 8003AC1C (offWarpMaterial__11dRes_info_cFP12J3DModelData)
//	800A3E1C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initModel(J3DModelData* param_0, u32 param_1, u32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/initModel__9daAlink_cFP12J3DModelDataUlUl.s"
}
#pragma pop

/* 800A3E30-800A3E98 0068+00 s=1 e=0 z=0  None .text      initModel__9daAlink_cFUsUl */
//	800A3E4C: 80452C90 (l_arcName)
//	800A3E54: 804061C0 (g_dComIfG_gameInfo)
//	800A3E58: 804061C0 (g_dComIfG_gameInfo)
//	800A3E68: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	800A3E7C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initModel(u16 param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/initModel__9daAlink_cFUsUl.s"
}
#pragma pop

/* 800A3E98-800A3F00 0068+00 s=1 e=0 z=0  None .text      initModelEnv__9daAlink_cFUsUl */
//	800A3EB4: 80452C90 (l_arcName)
//	800A3EBC: 804061C0 (g_dComIfG_gameInfo)
//	800A3EC0: 804061C0 (g_dComIfG_gameInfo)
//	800A3ED0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	800A3EE4: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initModelEnv(u16 param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/initModelEnv__9daAlink_cFUsUl.s"
}
#pragma pop

/* 800A3F00-800A3F98 0098+00 s=1 e=0 z=0  None .text      initDemoModel__9daAlink_cFPP8J3DModelPCcUl
 */
//	800A3F10: 803621DC (_savegpr_29)
//	800A3F28: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	800A3F2C: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	800A3F34: 804061C0 (g_dComIfG_gameInfo)
//	800A3F38: 804061C0 (g_dComIfG_gameInfo)
//	800A3F48: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	800A3F60: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	800A3F84: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initDemoModel(J3DModel** param_0, char const* param_1, u32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/initDemoModel__9daAlink_cFPP8J3DModelPCcUl.s"
}
#pragma pop

/* 800A3F98-800A4068 00D0+00 s=1 e=0 z=1  None .text initDemoBck__9daAlink_cFPP13mDoExt_bckAnmPCc
 */
//	800A3FA8: 803621DC (_savegpr_29)
//	800A3FB0: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	800A3FB4: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	800A3FB8: 804061C0 (g_dComIfG_gameInfo)
//	800A3FBC: 804061C0 (g_dComIfG_gameInfo)
//	800A3FCC: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	800A3FDC: 802CEC4C (__nw__FUl)
//	800A3FE8: 803A3354 (__vt__12J3DFrameCtrl)
//	800A3FEC: 803A3354 (__vt__12J3DFrameCtrl)
//	800A3FF8: 803283FC (init__12J3DFrameCtrlFs)
//	800A4028: 80452CB8 (lit_6040)
//	800A4038: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	800A4054: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initDemoBck(mDoExt_bckAnm** param_0, char const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/initDemoBck__9daAlink_cFPP13mDoExt_bckAnmPCc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80391F44-80391F50 000C+00 s=0 e=0 z=0  None .rodata    localHeadCenter$59872 */
SECTION_RODATA u8 const data_80391F44[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391F50-80391F5C 000C+00 s=0 e=0 z=0  None .rodata    localEye$59873 */
SECTION_RODATA u8 const data_80391F50[12] = {
    0x41, 0x40, 0x00, 0x00, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391F5C-80391F68 000C+00 s=0 e=0 z=0  None .rodata    localHeadTop$59874 */
SECTION_RODATA u8 const data_80391F5C[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391F68-80391F74 000C+00 s=0 e=0 z=0  None .rodata    wlLocalHeadCenter$59875 */
SECTION_RODATA u8 const data_80391F68[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391F74-80391F80 000C+00 s=0 e=0 z=0  None .rodata    wlLocalEye$59876 */
SECTION_RODATA u8 const data_80391F74[12] = {
    0x41, 0xF0, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391F80-80391F8C 000C+00 s=0 e=0 z=0  None .rodata    wlLocalHeadTop$59877 */
SECTION_RODATA u8 const data_80391F80[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391F8C-80391F98 000C+00 s=0 e=0 z=0  None .rodata    localEyeFromRoot$59878 */
SECTION_RODATA u8 const data_80391F8C[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x5F, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};

/* 80391F98-80391FA4 000C+00 s=0 e=0 z=0  None .rodata    boardLocalEyeFromRoot$59879 */
SECTION_RODATA u8 const data_80391F98[12] = {
    0x41, 0x18, 0x00, 0x00, 0x42, 0x3C, 0x00, 0x00, 0x41, 0xC4, 0x00, 0x00,
};

/* 80391FA4-80391FB0 000C+00 s=0 e=0 z=0  None .rodata    horseLocalEyeFromRoot$59880 */
SECTION_RODATA u8 const data_80391FA4[12] = {
    0x3F, 0xE0, 0x00, 0x00, 0x42, 0x5C, 0x00, 0x00, 0x41, 0xCC, 0x00, 0x00,
};

/* 80391FB0-80391FBC 000C+00 s=0 e=0 z=0  None .rodata    canoeLocalEyeFromRoot$59881 */
SECTION_RODATA u8 const data_80391FB0[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x5C, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00,
};

/* 80391FBC-80391FC8 000C+00 s=0 e=0 z=0  None .rodata    wlLocalEyeFromRoot$59882 */
SECTION_RODATA u8 const data_80391FBC[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x42, 0xAB, 0x00, 0x00,
};

/* 80391FC8-80391FD4 000C+00 s=0 e=0 z=0  None .rodata    normalOffset$60101 */
SECTION_RODATA u8 const data_80391FC8[12] = {
    0x00, 0x00, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391FD4-80391FE0 000C+00 s=0 e=0 z=0  None .rodata    crawlOffset$60141 */
SECTION_RODATA u8 const data_80391FD4[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
};

/* 80391FE0-80391FEC 000C+00 s=0 e=0 z=0  None .rodata    crouchOffset$60142 */
SECTION_RODATA u8 const data_80391FE0[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xBE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391FEC-80391FF8 000C+00 s=0 e=0 z=0  None .rodata    swimOffset$60143 */
SECTION_RODATA u8 const data_80391FEC[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80391FF8-80392004 000C+00 s=0 e=0 z=0  None .rodata    swordMoveLocal0$60438 */
SECTION_RODATA u8 const data_80391FF8[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
};

/* 80392004-80392010 000C+00 s=0 e=0 z=0  None .rodata    swordMoveLocal1$60439 */
SECTION_RODATA u8 const data_80392004[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};

/* 80392010-8039201C 000C+00 s=0 e=0 z=0  None .rodata    copyRodTop$60447 */
SECTION_RODATA u8 const data_80392010[12] = {
    0x41, 0xDC, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0xC1, 0x48, 0x00, 0x00,
};

/* 8039201C-80392028 000C+00 s=1 e=0 z=0  None .rodata    @61047 */
SECTION_RODATA static u8 const lit_61047[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80392028-80392034 000C+00 s=0 e=0 z=0  None .rodata    bottleTopPos$61387 */
SECTION_RODATA u8 const data_80392028[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80392034-80392040 000C+00 s=1 e=0 z=0  None .rodata    localHead$61779 */
SECTION_RODATA static u8 const localHead[12] = {
    0x41, 0x70, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80392040-8039204C 000C+00 s=0 e=0 z=0  None .rodata    @69600 */
SECTION_RODATA u8 const lit_69600[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8039204C-80392058 000C+00 s=0 e=0 z=0  None .rodata    @69683 */
SECTION_RODATA u8 const lit_69683[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80392058-80392064 000C+00 s=0 e=0 z=0  None .rodata    @71887 */
SECTION_RODATA u8 const lit_71887[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80392064-80392070 000C+00 s=0 e=0 z=0  None .rodata    @71911 */
SECTION_RODATA u8 const lit_71911[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80392070-8039207C 000C+00 s=0 e=0 z=0  None .rodata    @74273 */
SECTION_RODATA u8 const lit_74273[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8039207C-80392088 000C+00 s=0 e=0 z=0  None .rodata    @74748 */
SECTION_RODATA u8 const lit_74748[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80392088-80392094 000C+00 s=0 e=0 z=0  None .rodata    localBoomCatchPos$74910 */
SECTION_RODATA u8 const data_80392088[12] = {
    0x41, 0x95, 0x99, 0x9A, 0x43, 0x12, 0x4C, 0xCD, 0x42, 0x8A, 0x66, 0x66,
};

/* 80392094-80392640 05A8+04 s=71 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80392094 = "Rotary";
SECTION_DEAD char const* const stringBase_8039209B = "Rampart2";
SECTION_DEAD char const* const stringBase_803920A4 = "Allay";
SECTION_DEAD char const* const stringBase_803920AA = "AllayR";
SECTION_DEAD char const* const stringBase_803920B1 = "AllayR2";
SECTION_DEAD char const* const stringBase_803920B9 = "AllayS";
SECTION_DEAD char const* const stringBase_803920C0 = "StreetP";
SECTION_DEAD char const* const stringBase_803920C8 = "Street";
SECTION_DEAD char const* const stringBase_803920CF = "D_MN04B";
SECTION_DEAD char const* const stringBase_803920D7 = "Type";
SECTION_DEAD char const* const stringBase_803920DC = "D_MN07B";
SECTION_DEAD char const* const stringBase_803920E4 = "D_MN05A";
SECTION_DEAD char const* const stringBase_803920EC = "D_MN06A";
SECTION_DEAD char const* const stringBase_803920F4 = "F_SP117";
SECTION_DEAD char const* const stringBase_803920FC = "D_MN54";
SECTION_DEAD char const* const stringBase_80392103 = "F_SP103";
SECTION_DEAD char const* const stringBase_8039210B = "F_SP00";
SECTION_DEAD char const* const stringBase_80392112 = "F_SP127";
SECTION_DEAD char const* const stringBase_8039211A = "D_MN07A";
SECTION_DEAD char const* const stringBase_80392122 = "D_MN01A";
SECTION_DEAD char const* const stringBase_8039212A = "D_MN10";
SECTION_DEAD char const* const stringBase_80392131 = "D_MN10A";
SECTION_DEAD char const* const stringBase_80392139 = "F_SP108";
SECTION_DEAD char const* const stringBase_80392141 = "J_Tobi";
SECTION_DEAD char const* const stringBase_80392148 = "J_Umak";
SECTION_DEAD char const* const stringBase_8039214F = "D_MN01";
SECTION_DEAD char const* const stringBase_80392156 = "D_MN06";
SECTION_DEAD char const* const stringBase_8039215D = "D_MN05";
SECTION_DEAD char const* const stringBase_80392164 = "R22-opening";
SECTION_DEAD char const* const stringBase_80392170 = "pos";
SECTION_DEAD char const* const stringBase_80392174 = "angle";
SECTION_DEAD char const* const stringBase_8039217A = "prm0";
SECTION_DEAD char const* const stringBase_8039217F = "prm1";
SECTION_DEAD char const* const stringBase_80392184 = "stick";
SECTION_DEAD char const* const stringBase_8039218A = "D_MN09B";
SECTION_DEAD char const* const stringBase_80392192 = "D_MN05B";
SECTION_DEAD char const* const stringBase_8039219A = "F_SP115";
SECTION_DEAD char const* const stringBase_803921A2 = "D_MN11";
SECTION_DEAD char const* const stringBase_803921A9 = "D_MN07";
SECTION_DEAD char const* const stringBase_803921B0 = "F_SP102";
SECTION_DEAD char const* const stringBase_803921B8 = "D_MN08D";
SECTION_DEAD char const* const stringBase_803921C0 = "D_MN09A";
SECTION_DEAD char const* const stringBase_803921C8 = "D_MN08C";
SECTION_DEAD char const* const stringBase_803921D0 = "R_SP161";
SECTION_DEAD char const* const stringBase_803921D8 = "Obj_kbrg";
SECTION_DEAD char const* const stringBase_803921E1 = "Obj_obrg";
SECTION_DEAD char const* const stringBase_803921EA = "M_VolcBom";
SECTION_DEAD char const* const stringBase_803921F4 = "SCanCrs";
SECTION_DEAD char const* const stringBase_803921FC = "F_SP125";
SECTION_DEAD char const* const stringBase_80392204 = "D_MN08";
SECTION_DEAD char const* const stringBase_8039220B = "F_SP116";
SECTION_DEAD char const* const stringBase_80392213 = "zelda_v_cursor_new_yellow.blo";
SECTION_DEAD char const* const stringBase_80392231 = "zelda_v_cursor_new_yellow.bpk";
SECTION_DEAD char const* const stringBase_8039224F = "zelda_v_cursor_new_yellow.bck";
SECTION_DEAD char const* const stringBase_8039226D = "zelda_v_cursor_new_yellow_02.brk";
SECTION_DEAD char const* const stringBase_8039228E = "zelda_v_cursor_new_yellow.brk";
SECTION_DEAD char const* const stringBase_803922AC = "wl_eye_Hilight";
SECTION_DEAD char const* const stringBase_803922BB = "midona_eye_Hlight";
SECTION_DEAD char const* const stringBase_803922CD = "alSumou";
SECTION_DEAD char const* const stringBase_803922D5 = "bl.bmd";
SECTION_DEAD char const* const stringBase_803922DC = "bl_head.bmd";
SECTION_DEAD char const* const stringBase_803922E8 = "bl_hands.bmd";
SECTION_DEAD char const* const stringBase_803922F5 = "zl.bmd";
SECTION_DEAD char const* const stringBase_803922FC = "zl_head.bmd";
SECTION_DEAD char const* const stringBase_80392308 = "al_hands.bmd";
SECTION_DEAD char const* const stringBase_80392315 = "ml.bmd";
SECTION_DEAD char const* const stringBase_8039231C = "ml_head.bmd";
SECTION_DEAD char const* const stringBase_80392328 = "al.bmd";
SECTION_DEAD char const* const stringBase_8039232F = "al_head.bmd";
SECTION_DEAD char const* const stringBase_8039233B = "al_face.bmd";
SECTION_DEAD char const* const stringBase_80392347 = "zl_face.bmd";
SECTION_DEAD char const* const stringBase_80392353 = "al_bootsH.bmd";
SECTION_DEAD char const* const stringBase_80392361 = "al_kantera.bmd";
SECTION_DEAD char const* const stringBase_80392370 = "ef_ktGlow.bmd";
SECTION_DEAD char const* const stringBase_8039237E = "ef_ktGlow.btk";
SECTION_DEAD char const* const stringBase_8039238C = "al_SWB.bmd";
SECTION_DEAD char const* const stringBase_80392397 = "highlight02";
SECTION_DEAD char const* const stringBase_803923A3 = "F_SP200";
SECTION_DEAD char const* const stringBase_803923AB = "R_SP30";
SECTION_DEAD char const* const stringBase_803923B2 = "SMELL_1st";
SECTION_DEAD char const* const stringBase_803923BC = "SMELL_Child";
SECTION_DEAD char const* const stringBase_803923C8 = "Always";
SECTION_DEAD char const* const stringBase_803923CF = "demo00_Link_cut00_HL_tmp.bmd";
SECTION_DEAD char const* const stringBase_803923EC = "demo00_Link_cut00_HL_tmp.bck";
SECTION_DEAD char const* const stringBase_80392409 = "demo00_Link_cut00_HR_tmp.bmd";
SECTION_DEAD char const* const stringBase_80392426 = "demo00_Link_cut00_HR_tmp.bck";
SECTION_DEAD char const* const stringBase_80392443 = "demo00_Link_cut00_FC_blend.bmd";
SECTION_DEAD char const* const stringBase_80392462 = "demo00_Link_cut00_FC_tongue.bmd";
SECTION_DEAD char const* const stringBase_80392482 = "demo00_Link_cut00_FC_tmp.bck";
SECTION_DEAD char const* const stringBase_8039249F = "demo00_Link_cut00_HD_tmp.bck";
SECTION_DEAD char const* const stringBase_803924BC = "demo00_Link_cut00_FC_tmp.bls";
SECTION_DEAD char const* const stringBase_803924D9 = "F_SP118";
SECTION_DEAD char const* const stringBase_803924E1 = "D_MN08B";
SECTION_DEAD char const* const stringBase_803924E9 = "F_SP109";
SECTION_DEAD char const* const stringBase_803924F1 = "F_SP123";
SECTION_DEAD char const* const stringBase_803924F9 = "SCENE_EXIT";
SECTION_DEAD char const* const stringBase_80392504 = "R_SP127";
SECTION_DEAD char const* const stringBase_8039250C = "R_SP01";
SECTION_DEAD char const* const stringBase_80392513 = "D_MN08A";
SECTION_DEAD char const* const stringBase_8039251B = "ANGER";
SECTION_DEAD char const* const stringBase_80392521 = "ANGER2";
SECTION_DEAD char const* const stringBase_80392528 = "ml_body_power_down.brk";
SECTION_DEAD char const* const stringBase_8039253F = "ml_body_power_up_a.brk";
SECTION_DEAD char const* const stringBase_80392556 = "ml_body_power_up_b.brk";
SECTION_DEAD char const* const stringBase_8039256D = "ml_head_power_down.brk";
SECTION_DEAD char const* const stringBase_80392584 = "ml_head_power_up_a.brk";
SECTION_DEAD char const* const stringBase_8039259B = "ml_head_power_up_b.brk";
SECTION_DEAD char const* const stringBase_803925B2 = "F_SP113";
SECTION_DEAD char const* const stringBase_803925BA = "F_SP114";
SECTION_DEAD char const* const stringBase_803925C2 = "D_MN04";
SECTION_DEAD char const* const stringBase_803925C9 = "R_SP128";
SECTION_DEAD char const* const stringBase_803925D1 = "Alink";
SECTION_DEAD char const* const stringBase_803925D7 = "kiko_yami";
SECTION_DEAD char const* const stringBase_803925E1 = "fire_insect";
SECTION_DEAD char const* const stringBase_803925ED = "MapToolCamera19";
SECTION_DEAD char const* const stringBase_803925FD = "yami_mog";
SECTION_DEAD char const* const stringBase_80392606 = "R_SP109";
SECTION_DEAD char const* const stringBase_8039260E = "MapToolCamera1";
SECTION_DEAD char const* const stringBase_8039261D = "MapToolCamera2";
SECTION_DEAD char const* const stringBase_8039262C = "MapToolCamera23";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8039263C = "\0\0\0";
#pragma pop

/* 803AF990-803AF99C 000C+00 s=4 e=0 z=0  None .data      cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803AF99C-803AF9A8 000A+02 s=2 e=0 z=0  None .data      l_peepEventName */
SECTION_DATA static u8 l_peepEventName[10 + 2 /* padding */] = {
    0x50,
    0x45,
    0x45,
    0x50,
    0x5F,
    0x48,
    0x4F,
    0x4C,
    0x45,
    0x00,
    /* padding */
    0x00,
    0x00,
};

/* 803AF9A8-803AF9B4 000C+00 s=0 e=0 z=0  None .data      @4422 */
SECTION_DATA void* d_a_d_a_alink__lit_4422[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procPreActionUnequip__9daAlink_cFv,
};

/* 803AF9B4-803AF9C0 000C+00 s=0 e=0 z=0  None .data      @4423 */
SECTION_DATA void* d_a_d_a_alink__lit_4423[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procServiceWait__9daAlink_cFv,
};

/* 803AF9C0-803AF9CC 000C+00 s=0 e=0 z=0  None .data      @4424 */
SECTION_DATA void* d_a_d_a_alink__lit_4424[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procTiredWait__9daAlink_cFv,
};

/* 803AF9CC-803AF9D8 000C+00 s=0 e=0 z=0  None .data      @4425 */
SECTION_DATA void* d_a_d_a_alink__lit_4425[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWait__9daAlink_cFv,
};

/* 803AF9D8-803AF9E4 000C+00 s=0 e=0 z=0  None .data      @4426 */
SECTION_DATA void* d_a_d_a_alink__lit_4426[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMove__9daAlink_cFv,
};

/* 803AF9E4-803AF9F0 000C+00 s=0 e=0 z=0  None .data      @4427 */
SECTION_DATA void* d_a_d_a_alink__lit_4427[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procAtnMove__9daAlink_cFv,
};

/* 803AF9F0-803AF9FC 000C+00 s=0 e=0 z=0  None .data      @4428 */
SECTION_DATA void* d_a_d_a_alink__lit_4428[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procAtnActorWait__9daAlink_cFv,
};

/* 803AF9FC-803AFA08 000C+00 s=0 e=0 z=0  None .data      @4429 */
SECTION_DATA void* d_a_d_a_alink__lit_4429[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procAtnActorMove__9daAlink_cFv,
};

/* 803AFA08-803AFA14 000C+00 s=0 e=0 z=0  None .data      @4430 */
SECTION_DATA void* d_a_d_a_alink__lit_4430[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWaitTurn__9daAlink_cFv,
};

/* 803AFA14-803AFA20 000C+00 s=0 e=0 z=0  None .data      @4431 */
SECTION_DATA void* d_a_d_a_alink__lit_4431[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMoveTurn__9daAlink_cFv,
};

/* 803AFA20-803AFA2C 000C+00 s=0 e=0 z=0  None .data      @4432 */
SECTION_DATA void* d_a_d_a_alink__lit_4432[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSideStep__9daAlink_cFv,
};

/* 803AFA2C-803AFA38 000C+00 s=0 e=0 z=0  None .data      @4433 */
SECTION_DATA void* d_a_d_a_alink__lit_4433[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSideStepLand__9daAlink_cFv,
};

/* 803AFA38-803AFA44 000C+00 s=0 e=0 z=0  None .data      @4434 */
SECTION_DATA void* d_a_d_a_alink__lit_4434[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSlide__9daAlink_cFv,
};

/* 803AFA44-803AFA50 000C+00 s=0 e=0 z=0  None .data      @4435 */
SECTION_DATA void* d_a_d_a_alink__lit_4435[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSlideLand__9daAlink_cFv,
};

/* 803AFA50-803AFA5C 000C+00 s=0 e=0 z=0  None .data      @4436 */
SECTION_DATA void* d_a_d_a_alink__lit_4436[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFrontRoll__9daAlink_cFv,
};

/* 803AFA5C-803AFA68 000C+00 s=0 e=0 z=0  None .data      @4437 */
SECTION_DATA void* d_a_d_a_alink__lit_4437[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFrontRollCrash__9daAlink_cFv,
};

/* 803AFA68-803AFA74 000C+00 s=0 e=0 z=0  None .data      @4438 */
SECTION_DATA void* d_a_d_a_alink__lit_4438[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFrontRollSuccess__9daAlink_cFv,
};

/* 803AFA74-803AFA80 000C+00 s=0 e=0 z=0  None .data      @4439 */
SECTION_DATA void* d_a_d_a_alink__lit_4439[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSideRoll__9daAlink_cFv,
};

/* 803AFA80-803AFA8C 000C+00 s=0 e=0 z=0  None .data      @4440 */
SECTION_DATA void* d_a_d_a_alink__lit_4440[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBackJump__9daAlink_cFv,
};

/* 803AFA8C-803AFA98 000C+00 s=0 e=0 z=0  None .data      @4441 */
SECTION_DATA void* d_a_d_a_alink__lit_4441[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBackJumpLand__9daAlink_cFv,
};

/* 803AFA98-803AFAA4 000C+00 s=0 e=0 z=0  None .data      @4442 */
SECTION_DATA void* d_a_d_a_alink__lit_4442[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSlip__9daAlink_cFv,
};

/* 803AFAA4-803AFAB0 000C+00 s=0 e=0 z=0  None .data      @4443 */
SECTION_DATA void* d_a_d_a_alink__lit_4443[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procAutoJump__9daAlink_cFv,
};

/* 803AFAB0-803AFABC 000C+00 s=0 e=0 z=0  None .data      @4444 */
SECTION_DATA void* d_a_d_a_alink__lit_4444[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDiveJump__9daAlink_cFv,
};

/* 803AFABC-803AFAC8 000C+00 s=0 e=0 z=0  None .data      @4445 */
SECTION_DATA void* d_a_d_a_alink__lit_4445[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRollJump__9daAlink_cFv,
};

/* 803AFAC8-803AFAD4 000C+00 s=0 e=0 z=0  None .data      @4446 */
SECTION_DATA void* d_a_d_a_alink__lit_4446[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFall__9daAlink_cFv,
};

/* 803AFAD4-803AFAE0 000C+00 s=0 e=0 z=0  None .data      @4447 */
SECTION_DATA void* d_a_d_a_alink__lit_4447[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLand__9daAlink_cFv,
};

/* 803AFAE0-803AFAEC 000C+00 s=0 e=0 z=0  None .data      @4448 */
SECTION_DATA void* d_a_d_a_alink__lit_4448[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSmallJump__9daAlink_cFv,
};

/* 803AFAEC-803AFAF8 000C+00 s=0 e=0 z=0  None .data      @4449 */
SECTION_DATA void* d_a_d_a_alink__lit_4449[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procStepMove__9daAlink_cFv,
};

/* 803AFAF8-803AFB04 000C+00 s=0 e=0 z=0  None .data      @4450 */
SECTION_DATA void* d_a_d_a_alink__lit_4450[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrouch__9daAlink_cFv,
};

/* 803AFB04-803AFB10 000C+00 s=0 e=0 z=0  None .data      @4451 */
SECTION_DATA void* d_a_d_a_alink__lit_4451[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGuardSlip__9daAlink_cFv,
};

/* 803AFB10-803AFB1C 000C+00 s=0 e=0 z=0  None .data      @4452 */
SECTION_DATA void* d_a_d_a_alink__lit_4452[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGuardAttack__9daAlink_cFv,
};

/* 803AFB1C-803AFB28 000C+00 s=0 e=0 z=0  None .data      @4453 */
SECTION_DATA void* d_a_d_a_alink__lit_4453[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGuardBreak__9daAlink_cFv,
};

/* 803AFB28-803AFB34 000C+00 s=0 e=0 z=0  None .data      @4454 */
SECTION_DATA void* d_a_d_a_alink__lit_4454[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procTurnMove__9daAlink_cFv,
};

/* 803AFB34-803AFB40 000C+00 s=0 e=0 z=0  None .data      @4455 */
SECTION_DATA void* d_a_d_a_alink__lit_4455[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutNormal__9daAlink_cFv,
};

/* 803AFB40-803AFB4C 000C+00 s=0 e=0 z=0  None .data      @4456 */
SECTION_DATA void* d_a_d_a_alink__lit_4456[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutFinish__9daAlink_cFv,
};

/* 803AFB4C-803AFB58 000C+00 s=0 e=0 z=0  None .data      @4457 */
SECTION_DATA void* d_a_d_a_alink__lit_4457[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutFinishJumpUp__9daAlink_cFv,
};

/* 803AFB58-803AFB64 000C+00 s=0 e=0 z=0  None .data      @4458 */
SECTION_DATA void* d_a_d_a_alink__lit_4458[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutFinishJumpUpLand__9daAlink_cFv,
};

/* 803AFB64-803AFB70 000C+00 s=0 e=0 z=0  None .data      @4459 */
SECTION_DATA void* d_a_d_a_alink__lit_4459[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutReverse__9daAlink_cFv,
};

/* 803AFB70-803AFB7C 000C+00 s=0 e=0 z=0  None .data      @4460 */
SECTION_DATA void* lit_4460[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutJump__9daAlink_cFv,
};

/* 803AFB7C-803AFB88 000C+00 s=0 e=0 z=0  None .data      @4461 */
SECTION_DATA void* lit_4461[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutJumpLand__9daAlink_cFv,
};

/* 803AFB88-803AFB94 000C+00 s=0 e=0 z=0  None .data      @4462 */
SECTION_DATA void* lit_4462[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutTurn__9daAlink_cFv,
};

/* 803AFB94-803AFBA0 000C+00 s=0 e=0 z=0  None .data      @4463 */
SECTION_DATA void* lit_4463[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutTurnCharge__9daAlink_cFv,
};

/* 803AFBA0-803AFBAC 000C+00 s=0 e=0 z=0  None .data      @4464 */
SECTION_DATA void* lit_4464[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutTurnMove__9daAlink_cFv,
};

/* 803AFBAC-803AFBB8 000C+00 s=0 e=0 z=0  None .data      @4465 */
SECTION_DATA void* lit_4465[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutDown__9daAlink_cFv,
};

/* 803AFBB8-803AFBC4 000C+00 s=0 e=0 z=0  None .data      @4466 */
SECTION_DATA void* lit_4466[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutDownLand__9daAlink_cFv,
};

/* 803AFBC4-803AFBD0 000C+00 s=0 e=0 z=0  None .data      @4467 */
SECTION_DATA void* lit_4467[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutHead__9daAlink_cFv,
};

/* 803AFBD0-803AFBDC 000C+00 s=0 e=0 z=0  None .data      @4468 */
SECTION_DATA void* lit_4468[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutHeadLand__9daAlink_cFv,
};

/* 803AFBDC-803AFBE8 000C+00 s=0 e=0 z=0  None .data      @4469 */
SECTION_DATA void* lit_4469[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutLargeJumpCharge__9daAlink_cFv,
};

/* 803AFBE8-803AFBF4 000C+00 s=0 e=0 z=0  None .data      @4470 */
SECTION_DATA void* lit_4470[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutLargeJump__9daAlink_cFv,
};

/* 803AFBF4-803AFC00 000C+00 s=0 e=0 z=0  None .data      @4471 */
SECTION_DATA void* lit_4471[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutLargeJumpLand__9daAlink_cFv,
};

/* 803AFC00-803AFC0C 000C+00 s=0 e=0 z=0  None .data      @4472 */
SECTION_DATA void* lit_4472[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDamage__9daAlink_cFv,
};

/* 803AFC0C-803AFC18 000C+00 s=0 e=0 z=0  None .data      @4473 */
SECTION_DATA void* lit_4473[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLargeDamageUp__9daAlink_cFv,
};

/* 803AFC18-803AFC24 000C+00 s=0 e=0 z=0  None .data      @4474 */
SECTION_DATA void* lit_4474[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLandDamage__9daAlink_cFv,
};

/* 803AFC24-803AFC30 000C+00 s=0 e=0 z=0  None .data      @4475 */
SECTION_DATA void* lit_4475[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrawlStart__9daAlink_cFv,
};

/* 803AFC30-803AFC3C 000C+00 s=0 e=0 z=0  None .data      @4476 */
SECTION_DATA void* lit_4476[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrawlMove__9daAlink_cFv,
};

/* 803AFC3C-803AFC48 000C+00 s=0 e=0 z=0  None .data      @4477 */
SECTION_DATA void* lit_4477[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrawlAutoMove__9daAlink_cFv,
};

/* 803AFC48-803AFC54 000C+00 s=0 e=0 z=0  None .data      @4478 */
SECTION_DATA void* d_a_d_a_alink__lit_4478[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrawlEnd__9daAlink_cFv,
};

/* 803AFC54-803AFC60 000C+00 s=0 e=0 z=0  None .data      @4479 */
SECTION_DATA void* d_a_d_a_alink__lit_4479[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procPullMove__9daAlink_cFv,
};

/* 803AFC60-803AFC6C 000C+00 s=0 e=0 z=0  None .data      @4480 */
SECTION_DATA void* d_a_d_a_alink__lit_4480[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseRide__9daAlink_cFv,
};

/* 803AFC6C-803AFC78 000C+00 s=0 e=0 z=0  None .data      @4481 */
SECTION_DATA void* d_a_d_a_alink__lit_4481[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseGetOff__9daAlink_cFv,
};

/* 803AFC78-803AFC84 000C+00 s=0 e=0 z=0  None .data      @4482 */
SECTION_DATA void* d_a_d_a_alink__lit_4482[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseWait__9daAlink_cFv,
};

/* 803AFC84-803AFC90 000C+00 s=0 e=0 z=0  None .data      @4483 */
SECTION_DATA void* d_a_d_a_alink__lit_4483[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseTurn__9daAlink_cFv,
};

/* 803AFC90-803AFC9C 000C+00 s=0 e=0 z=0  None .data      @4484 */
SECTION_DATA void* d_a_d_a_alink__lit_4484[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseJump__9daAlink_cFv,
};

/* 803AFC9C-803AFCA8 000C+00 s=0 e=0 z=0  None .data      @4485 */
SECTION_DATA void* d_a_d_a_alink__lit_4485[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseLand__9daAlink_cFv,
};

/* 803AFCA8-803AFCB4 000C+00 s=0 e=0 z=0  None .data      @4486 */
SECTION_DATA void* d_a_d_a_alink__lit_4486[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseSubjectivity__9daAlink_cFv,
};

/* 803AFCB4-803AFCC0 000C+00 s=0 e=0 z=0  None .data      @4487 */
SECTION_DATA void* d_a_d_a_alink__lit_4487[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseCut__9daAlink_cFv,
};

/* 803AFCC0-803AFCCC 000C+00 s=0 e=0 z=0  None .data      @4488 */
SECTION_DATA void* d_a_d_a_alink__lit_4488[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseCutChargeReady__9daAlink_cFv,
};

/* 803AFCCC-803AFCD8 000C+00 s=0 e=0 z=0  None .data      @4489 */
SECTION_DATA void* d_a_d_a_alink__lit_4489[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseCutTurn__9daAlink_cFv,
};

/* 803AFCD8-803AFCE4 000C+00 s=0 e=0 z=0  None .data      @4490 */
SECTION_DATA void* d_a_d_a_alink__lit_4490[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseDamage__9daAlink_cFv,
};

/* 803AFCE4-803AFCF0 000C+00 s=0 e=0 z=0  None .data      @4491 */
SECTION_DATA void* d_a_d_a_alink__lit_4491[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseBowSubject__9daAlink_cFv,
};

/* 803AFCF0-803AFCFC 000C+00 s=0 e=0 z=0  None .data      @4492 */
SECTION_DATA void* d_a_d_a_alink__lit_4492[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseBowMove__9daAlink_cFv,
};

/* 803AFCFC-803AFD08 000C+00 s=0 e=0 z=0  None .data      @4493 */
SECTION_DATA void* d_a_d_a_alink__lit_4493[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseGrabMove__9daAlink_cFv,
};

/* 803AFD08-803AFD14 000C+00 s=0 e=0 z=0  None .data      @4494 */
SECTION_DATA void* d_a_d_a_alink__lit_4494[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseBoomerangSubject__9daAlink_cFv,
};

/* 803AFD14-803AFD20 000C+00 s=0 e=0 z=0  None .data      @4495 */
SECTION_DATA void* d_a_d_a_alink__lit_4495[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseBoomerangMove__9daAlink_cFv,
};

/* 803AFD20-803AFD2C 000C+00 s=0 e=0 z=0  None .data      @4496 */
SECTION_DATA void* d_a_d_a_alink__lit_4496[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseHookshotSubject__9daAlink_cFv,
};

/* 803AFD2C-803AFD38 000C+00 s=0 e=0 z=0  None .data      @4497 */
SECTION_DATA void* d_a_d_a_alink__lit_4497[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseHookshotMove__9daAlink_cFv,
};

/* 803AFD38-803AFD44 000C+00 s=0 e=0 z=0  None .data      @4498 */
SECTION_DATA void* d_a_d_a_alink__lit_4498[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseBottleDrink__9daAlink_cFv,
};

/* 803AFD44-803AFD50 000C+00 s=0 e=0 z=0  None .data      @4499 */
SECTION_DATA void* d_a_d_a_alink__lit_4499[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseComeback__9daAlink_cFv,
};

/* 803AFD50-803AFD5C 000C+00 s=0 e=0 z=0  None .data      @4500 */
SECTION_DATA void* d_a_d_a_alink__lit_4500[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseKandelaarPour__9daAlink_cFv,
};

/* 803AFD5C-803AFD68 000C+00 s=0 e=0 z=0  None .data      @4501 */
SECTION_DATA void* d_a_d_a_alink__lit_4501[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseRun__9daAlink_cFv,
};

/* 803AFD68-803AFD74 000C+00 s=0 e=0 z=0  None .data      @4502 */
SECTION_DATA void* d_a_d_a_alink__lit_4502[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseHang__9daAlink_cFv,
};

/* 803AFD74-803AFD80 000C+00 s=0 e=0 z=0  None .data      @4503 */
SECTION_DATA void* d_a_d_a_alink__lit_4503[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseGetKey__9daAlink_cFv,
};

/* 803AFD80-803AFD8C 000C+00 s=0 e=0 z=0  None .data      @4504 */
SECTION_DATA void* d_a_d_a_alink__lit_4504[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseLookDown__9daAlink_cFv,
};

/* 803AFD8C-803AFD98 000C+00 s=0 e=0 z=0  None .data      @4505 */
SECTION_DATA void* d_a_d_a_alink__lit_4505[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoarRun__9daAlink_cFv,
};

/* 803AFD98-803AFDA4 000C+00 s=0 e=0 z=0  None .data      @4506 */
SECTION_DATA void* d_a_d_a_alink__lit_4506[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordUnequipSp__9daAlink_cFv,
};

/* 803AFDA4-803AFDB0 000C+00 s=0 e=0 z=0  None .data      @4507 */
SECTION_DATA void* d_a_d_a_alink__lit_4507[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangStart__9daAlink_cFv,
};

/* 803AFDB0-803AFDBC 000C+00 s=0 e=0 z=0  None .data      @4508 */
SECTION_DATA void* d_a_d_a_alink__lit_4508[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangFallStart__9daAlink_cFv,
};

/* 803AFDBC-803AFDC8 000C+00 s=0 e=0 z=0  None .data      @4509 */
SECTION_DATA void* d_a_d_a_alink__lit_4509[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangUp__9daAlink_cFv,
};

/* 803AFDC8-803AFDD4 000C+00 s=0 e=0 z=0  None .data      @4510 */
SECTION_DATA void* d_a_d_a_alink__lit_4510[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangWait__9daAlink_cFv,
};

/* 803AFDD4-803AFDE0 000C+00 s=0 e=0 z=0  None .data      @4511 */
SECTION_DATA void* d_a_d_a_alink__lit_4511[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangMove__9daAlink_cFv,
};

/* 803AFDE0-803AFDEC 000C+00 s=0 e=0 z=0  None .data      @4512 */
SECTION_DATA void* d_a_d_a_alink__lit_4512[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangClimb__9daAlink_cFv,
};

/* 803AFDEC-803AFDF8 000C+00 s=0 e=0 z=0  None .data      @4513 */
SECTION_DATA void* d_a_d_a_alink__lit_4513[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangWallCatch__9daAlink_cFv,
};

/* 803AFDF8-803AFE04 000C+00 s=0 e=0 z=0  None .data      @4514 */
SECTION_DATA void* d_a_d_a_alink__lit_4514[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangReady__9daAlink_cFv,
};

/* 803AFE04-803AFE10 000C+00 s=0 e=0 z=0  None .data      @4515 */
SECTION_DATA void* d_a_d_a_alink__lit_4515[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangLeverDown__9daAlink_cFv,
};

/* 803AFE10-803AFE1C 000C+00 s=0 e=0 z=0  None .data      @4516 */
SECTION_DATA void* d_a_d_a_alink__lit_4516[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBowSubject__9daAlink_cFv,
};

/* 803AFE1C-803AFE28 000C+00 s=0 e=0 z=0  None .data      @4517 */
SECTION_DATA void* d_a_d_a_alink__lit_4517[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBowMove__9daAlink_cFv,
};

/* 803AFE28-803AFE34 000C+00 s=0 e=0 z=0  None .data      @4518 */
SECTION_DATA void* d_a_d_a_alink__lit_4518[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoomerangSubject__9daAlink_cFv,
};

/* 803AFE34-803AFE40 000C+00 s=0 e=0 z=0  None .data      @4519 */
SECTION_DATA void* d_a_d_a_alink__lit_4519[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoomerangMove__9daAlink_cFv,
};

/* 803AFE40-803AFE4C 000C+00 s=0 e=0 z=0  None .data      @4520 */
SECTION_DATA void* d_a_d_a_alink__lit_4520[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoomerangCatch__9daAlink_cFv,
};

/* 803AFE4C-803AFE58 000C+00 s=0 e=0 z=0  None .data      @4521 */
SECTION_DATA void* d_a_d_a_alink__lit_4521[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCopyRodSubject__9daAlink_cFv,
};

/* 803AFE58-803AFE64 000C+00 s=0 e=0 z=0  None .data      @4522 */
SECTION_DATA void* d_a_d_a_alink__lit_4522[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCopyRodMove__9daAlink_cFv,
};

/* 803AFE64-803AFE70 000C+00 s=0 e=0 z=0  None .data      @4523 */
SECTION_DATA void* d_a_d_a_alink__lit_4523[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCopyRodSwing__9daAlink_cFv,
};

/* 803AFE70-803AFE7C 000C+00 s=0 e=0 z=0  None .data      @4524 */
SECTION_DATA void* d_a_d_a_alink__lit_4524[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCopyRodRevive__9daAlink_cFv,
};

/* 803AFE7C-803AFE88 000C+00 s=0 e=0 z=0  None .data      @4525 */
SECTION_DATA void* d_a_d_a_alink__lit_4525[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLadderUpStart__9daAlink_cFv,
};

/* 803AFE88-803AFE94 000C+00 s=0 e=0 z=0  None .data      @4526 */
SECTION_DATA void* d_a_d_a_alink__lit_4526[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLadderUpEnd__9daAlink_cFv,
};

/* 803AFE94-803AFEA0 000C+00 s=0 e=0 z=0  None .data      @4527 */
SECTION_DATA void* d_a_d_a_alink__lit_4527[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLadderDownStart__9daAlink_cFv,
};

/* 803AFEA0-803AFEAC 000C+00 s=0 e=0 z=0  None .data      @4528 */
SECTION_DATA void* d_a_d_a_alink__lit_4528[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLadderDownEnd__9daAlink_cFv,
};

/* 803AFEAC-803AFEB8 000C+00 s=0 e=0 z=0  None .data      @4529 */
SECTION_DATA void* d_a_d_a_alink__lit_4529[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLadderMove__9daAlink_cFv,
};

/* 803AFEB8-803AFEC4 000C+00 s=0 e=0 z=0  None .data      @4530 */
SECTION_DATA void* d_a_d_a_alink__lit_4530[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabReady__9daAlink_cFv,
};

/* 803AFEC4-803AFED0 000C+00 s=0 e=0 z=0  None .data      @4531 */
SECTION_DATA void* d_a_d_a_alink__lit_4531[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabUp__9daAlink_cFv,
};

/* 803AFED0-803AFEDC 000C+00 s=0 e=0 z=0  None .data      @4532 */
SECTION_DATA void* d_a_d_a_alink__lit_4532[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabMiss__9daAlink_cFv,
};

/* 803AFEDC-803AFEE8 000C+00 s=0 e=0 z=0  None .data      @4533 */
SECTION_DATA void* d_a_d_a_alink__lit_4533[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabThrow__9daAlink_cFv,
};

/* 803AFEE8-803AFEF4 000C+00 s=0 e=0 z=0  None .data      @4534 */
SECTION_DATA void* d_a_d_a_alink__lit_4534[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabPut__9daAlink_cFv,
};

/* 803AFEF4-803AFF00 000C+00 s=0 e=0 z=0  None .data      @4535 */
SECTION_DATA void* d_a_d_a_alink__lit_4535[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabWait__9daAlink_cFv,
};

/* 803AFF00-803AFF0C 000C+00 s=0 e=0 z=0  None .data      @4536 */
SECTION_DATA void* d_a_d_a_alink__lit_4536[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabRebound__9daAlink_cFv,
};

/* 803AFF0C-803AFF18 000C+00 s=0 e=0 z=0  None .data      @4537 */
SECTION_DATA void* d_a_d_a_alink__lit_4537[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabStand__9daAlink_cFv,
};

/* 803AFF18-803AFF24 000C+00 s=0 e=0 z=0  None .data      @4538 */
SECTION_DATA void* d_a_d_a_alink__lit_4538[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procInsectCatch__9daAlink_cFv,
};

/* 803AFF24-803AFF30 000C+00 s=0 e=0 z=0  None .data      @4539 */
SECTION_DATA void* d_a_d_a_alink__lit_4539[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procPickUp__9daAlink_cFv,
};

/* 803AFF30-803AFF3C 000C+00 s=0 e=0 z=0  None .data      @4540 */
SECTION_DATA void* lit_4540[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procPickPut__9daAlink_cFv,
};

/* 803AFF3C-803AFF48 000C+00 s=0 e=0 z=0  None .data      @4541 */
SECTION_DATA void* lit_4541[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procStEscape__9daAlink_cFv,
};

/* 803AFF48-803AFF54 000C+00 s=0 e=0 z=0  None .data      @4542 */
SECTION_DATA void* lit_4542[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDkCaught__9daAlink_cFv,
};

/* 803AFF54-803AFF60 000C+00 s=0 e=0 z=0  None .data      @4543 */
SECTION_DATA void* lit_4543[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimUp__9daAlink_cFv,
};

/* 803AFF60-803AFF6C 000C+00 s=0 e=0 z=0  None .data      @4544 */
SECTION_DATA void* lit_4544[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimWait__9daAlink_cFv,
};

/* 803AFF6C-803AFF78 000C+00 s=0 e=0 z=0  None .data      @4545 */
SECTION_DATA void* lit_4545[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimMove__9daAlink_cFv,
};

/* 803AFF78-803AFF84 000C+00 s=0 e=0 z=0  None .data      @4546 */
SECTION_DATA void* lit_4546[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimDive__9daAlink_cFv,
};

/* 803AFF84-803AFF90 000C+00 s=0 e=0 z=0  None .data      @4547 */
SECTION_DATA void* lit_4547[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimHookshotSubject__9daAlink_cFv,
};

/* 803AFF90-803AFF9C 000C+00 s=0 e=0 z=0  None .data      @4548 */
SECTION_DATA void* lit_4548[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimHookshotMove__9daAlink_cFv,
};

/* 803AFF9C-803AFFA8 000C+00 s=0 e=0 z=0  None .data      @4549 */
SECTION_DATA void* lit_4549[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimDamage__9daAlink_cFv,
};

/* 803AFFA8-803AFFB4 000C+00 s=0 e=0 z=0  None .data      @4550 */
SECTION_DATA void* lit_4550[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbUpStart__9daAlink_cFv,
};

/* 803AFFB4-803AFFC0 000C+00 s=0 e=0 z=0  None .data      @4551 */
SECTION_DATA void* lit_4551[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbDownStart__9daAlink_cFv,
};

/* 803AFFC0-803AFFCC 000C+00 s=0 e=0 z=0  None .data      @4552 */
SECTION_DATA void* lit_4552[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbMoveUpDown__9daAlink_cFv,
};

/* 803AFFCC-803AFFD8 000C+00 s=0 e=0 z=0  None .data      @4553 */
SECTION_DATA void* lit_4553[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbMoveSide__9daAlink_cFv,
};

/* 803AFFD8-803AFFE4 000C+00 s=0 e=0 z=0  None .data      @4554 */
SECTION_DATA void* lit_4554[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbWait__9daAlink_cFv,
};

/* 803AFFE4-803AFFF0 000C+00 s=0 e=0 z=0  None .data      @4555 */
SECTION_DATA void* lit_4555[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbToRoof__9daAlink_cFv,
};

/* 803AFFF0-803AFFFC 000C+00 s=0 e=0 z=0  None .data      @4556 */
SECTION_DATA void* lit_4556[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofHangStart__9daAlink_cFv,
};

/* 803AFFFC-803B0008 000C+00 s=0 e=0 z=0  None .data      @4557 */
SECTION_DATA void* lit_4557[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofHangWait__9daAlink_cFv,
};

/* 803B0008-803B0014 000C+00 s=0 e=0 z=0  None .data      @4558 */
SECTION_DATA void* lit_4558[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofHangFrontMove__9daAlink_cFv,
};

/* 803B0014-803B0020 000C+00 s=0 e=0 z=0  None .data      @4559 */
SECTION_DATA void* lit_4559[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofHangSideMove__9daAlink_cFv,
};

/* 803B0020-803B002C 000C+00 s=0 e=0 z=0  None .data      @4560 */
SECTION_DATA void* lit_4560[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofHangTurn__9daAlink_cFv,
};

/* 803B002C-803B0038 000C+00 s=0 e=0 z=0  None .data      @4561 */
SECTION_DATA void* lit_4561[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofSwitchHang__9daAlink_cFv,
};

/* 803B0038-803B0044 000C+00 s=0 e=0 z=0  None .data      @4562 */
SECTION_DATA void* lit_4562[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeRide__9daAlink_cFv,
};

/* 803B0044-803B0050 000C+00 s=0 e=0 z=0  None .data      @4563 */
SECTION_DATA void* lit_4563[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeJumpRide__9daAlink_cFv,
};

/* 803B0050-803B005C 000C+00 s=0 e=0 z=0  None .data      @4564 */
SECTION_DATA void* lit_4564[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeGetOff__9daAlink_cFv,
};

/* 803B005C-803B0068 000C+00 s=0 e=0 z=0  None .data      @4565 */
SECTION_DATA void* lit_4565[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeWait__9daAlink_cFv,
};

/* 803B0068-803B0074 000C+00 s=0 e=0 z=0  None .data      @4566 */
SECTION_DATA void* lit_4566[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeRow__9daAlink_cFv,
};

/* 803B0074-803B0080 000C+00 s=0 e=0 z=0  None .data      @4567 */
SECTION_DATA void* lit_4567[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoePaddleShift__9daAlink_cFv,
};

/* 803B0080-803B008C 000C+00 s=0 e=0 z=0  None .data      @4568 */
SECTION_DATA void* lit_4568[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoePaddlePut__9daAlink_cFv,
};

/* 803B008C-803B0098 000C+00 s=0 e=0 z=0  None .data      @4569 */
SECTION_DATA void* lit_4569[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoePaddleGrab__9daAlink_cFv,
};

/* 803B0098-803B00A4 000C+00 s=0 e=0 z=0  None .data      @4570 */
SECTION_DATA void* lit_4570[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeRodGrab__9daAlink_cFv,
};

/* 803B00A4-803B00B0 000C+00 s=0 e=0 z=0  None .data      @4571 */
SECTION_DATA void* lit_4571[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeFishingWait__9daAlink_cFv,
};

/* 803B00B0-803B00BC 000C+00 s=0 e=0 z=0  None .data      @4572 */
SECTION_DATA void* lit_4572[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeFishingReel__9daAlink_cFv,
};

/* 803B00BC-803B00C8 000C+00 s=0 e=0 z=0  None .data      @4573 */
SECTION_DATA void* lit_4573[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeFishingGet__9daAlink_cFv,
};

/* 803B00C8-803B00D4 000C+00 s=0 e=0 z=0  None .data      @4574 */
SECTION_DATA void* lit_4574[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeSubjectivity__9daAlink_cFv,
};

/* 803B00D4-803B00E0 000C+00 s=0 e=0 z=0  None .data      @4575 */
SECTION_DATA void* lit_4575[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeBowSubject__9daAlink_cFv,
};

/* 803B00E0-803B00EC 000C+00 s=0 e=0 z=0  None .data      @4576 */
SECTION_DATA void* lit_4576[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeBowMove__9daAlink_cFv,
};

/* 803B00EC-803B00F8 000C+00 s=0 e=0 z=0  None .data      @4577 */
SECTION_DATA void* lit_4577[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeGrabMove__9daAlink_cFv,
};

/* 803B00F8-803B0104 000C+00 s=0 e=0 z=0  None .data      @4578 */
SECTION_DATA void* lit_4578[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeBoomerangSubject__9daAlink_cFv,
};

/* 803B0104-803B0110 000C+00 s=0 e=0 z=0  None .data      @4579 */
SECTION_DATA void* lit_4579[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeBoomerangMove__9daAlink_cFv,
};

/* 803B0110-803B011C 000C+00 s=0 e=0 z=0  None .data      @4580 */
SECTION_DATA void* lit_4580[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeHookshotSubject__9daAlink_cFv,
};

/* 803B011C-803B0128 000C+00 s=0 e=0 z=0  None .data      @4581 */
SECTION_DATA void* lit_4581[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeHookshotMove__9daAlink_cFv,
};

/* 803B0128-803B0134 000C+00 s=0 e=0 z=0  None .data      @4582 */
SECTION_DATA void* lit_4582[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeBottleDrink__9daAlink_cFv,
};

/* 803B0134-803B0140 000C+00 s=0 e=0 z=0  None .data      @4583 */
SECTION_DATA void* lit_4583[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeKandelaarPour__9daAlink_cFv,
};

/* 803B0140-803B014C 000C+00 s=0 e=0 z=0  None .data      @4584 */
SECTION_DATA void* lit_4584[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFishingCast__9daAlink_cFv,
};

/* 803B014C-803B0158 000C+00 s=0 e=0 z=0  None .data      @4585 */
SECTION_DATA void* lit_4585[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFishingFood__9daAlink_cFv,
};

/* 803B0158-803B0164 000C+00 s=0 e=0 z=0  None .data      @4586 */
SECTION_DATA void* lit_4586[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSpinnerReady__9daAlink_cFv,
};

/* 803B0164-803B0170 000C+00 s=0 e=0 z=0  None .data      @4587 */
SECTION_DATA void* lit_4587[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSpinnerWait__9daAlink_cFv,
};

/* 803B0170-803B017C 000C+00 s=0 e=0 z=0  None .data      @4588 */
SECTION_DATA void* lit_4588[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardRide__9daAlink_cFv,
};

/* 803B017C-803B0188 000C+00 s=0 e=0 z=0  None .data      @4589 */
SECTION_DATA void* lit_4589[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardWait__9daAlink_cFv,
};

/* 803B0188-803B0194 000C+00 s=0 e=0 z=0  None .data      @4590 */
SECTION_DATA void* lit_4590[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardRow__9daAlink_cFv,
};

/* 803B0194-803B01A0 000C+00 s=0 e=0 z=0  None .data      @4591 */
SECTION_DATA void* lit_4591[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardTurn__9daAlink_cFv,
};

/* 803B01A0-803B01AC 000C+00 s=0 e=0 z=0  None .data      @4592 */
SECTION_DATA void* lit_4592[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardJump__9daAlink_cFv,
};

/* 803B01AC-803B01B8 000C+00 s=0 e=0 z=0  None .data      @4593 */
SECTION_DATA void* lit_4593[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardSubjectivity__9daAlink_cFv,
};

/* 803B01B8-803B01C4 000C+00 s=0 e=0 z=0  None .data      @4594 */
SECTION_DATA void* lit_4594[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardCut__9daAlink_cFv,
};

/* 803B01C4-803B01D0 000C+00 s=0 e=0 z=0  None .data      @4595 */
SECTION_DATA void* lit_4595[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardCutTurn__9daAlink_cFv,
};

/* 803B01D0-803B01DC 000C+00 s=0 e=0 z=0  None .data      @4596 */
SECTION_DATA void* lit_4596[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFmChainUp__9daAlink_cFv,
};

/* 803B01DC-803B01E8 000C+00 s=0 e=0 z=0  None .data      @4597 */
SECTION_DATA void* lit_4597[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFmChainStrongPull__9daAlink_cFv,
};

/* 803B01E8-803B01F4 000C+00 s=0 e=0 z=0  None .data      @4598 */
SECTION_DATA void* lit_4598[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDoorOpen__9daAlink_cFv,
};

/* 803B01F4-803B0200 000C+00 s=0 e=0 z=0  None .data      @4599 */
SECTION_DATA void* lit_4599[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMonkeyMove__9daAlink_cFv,
};

/* 803B0200-803B020C 000C+00 s=0 e=0 z=0  None .data      @4600 */
SECTION_DATA void* lit_4600[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoBoomerangCatch__9daAlink_cFv,
};

/* 803B020C-803B0218 000C+00 s=0 e=0 z=0  None .data      @4601 */
SECTION_DATA void* lit_4601[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBottleDrink__9daAlink_cFv,
};

/* 803B0218-803B0224 000C+00 s=0 e=0 z=0  None .data      @4602 */
SECTION_DATA void* lit_4602[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBottleOpen__9daAlink_cFv,
};

/* 803B0224-803B0230 000C+00 s=0 e=0 z=0  None .data      @4603 */
SECTION_DATA void* lit_4603[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBottleSwing__9daAlink_cFv,
};

/* 803B0230-803B023C 000C+00 s=0 e=0 z=0  None .data      @4604 */
SECTION_DATA void* lit_4604[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBottleGet__9daAlink_cFv,
};

/* 803B023C-803B0248 000C+00 s=0 e=0 z=0  None .data      @4605 */
SECTION_DATA void* lit_4605[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procKandelaarSwing__9daAlink_cFv,
};

/* 803B0248-803B0254 000C+00 s=0 e=0 z=0  None .data      @4606 */
SECTION_DATA void* lit_4606[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procKandelaarPour__9daAlink_cFv,
};

/* 803B0254-803B0260 000C+00 s=0 e=0 z=0  None .data      @4607 */
SECTION_DATA void* lit_4607[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrassWhistleGet__9daAlink_cFv,
};

/* 803B0260-803B026C 000C+00 s=0 e=0 z=0  None .data      @4608 */
SECTION_DATA void* lit_4608[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrassWhistleWait__9daAlink_cFv,
};

/* 803B026C-803B0278 000C+00 s=0 e=0 z=0  None .data      @4609 */
SECTION_DATA void* lit_4609[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHawkCatch__9daAlink_cFv,
};

/* 803B0278-803B0284 000C+00 s=0 e=0 z=0  None .data      @4610 */
SECTION_DATA void* lit_4610[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHawkSubject__9daAlink_cFv,
};

/* 803B0284-803B0290 000C+00 s=0 e=0 z=0  None .data      @4611 */
SECTION_DATA void* lit_4611[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFloorDownRebound__9daAlink_cFv,
};

/* 803B0290-803B029C 000C+00 s=0 e=0 z=0  None .data      @4612 */
SECTION_DATA void* lit_4612[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoronRideWait__9daAlink_cFv,
};

/* 803B029C-803B02A8 000C+00 s=0 e=0 z=0  None .data      @4613 */
SECTION_DATA void* lit_4613[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoatMove__9daAlink_cFv,
};

/* 803B02A8-803B02B4 000C+00 s=0 e=0 z=0  None .data      @4614 */
SECTION_DATA void* lit_4614[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoatCatch__9daAlink_cFv,
};

/* 803B02B4-803B02C0 000C+00 s=0 e=0 z=0  None .data      @4615 */
SECTION_DATA void* lit_4615[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoatStroke__9daAlink_cFv,
};

/* 803B02C0-803B02CC 000C+00 s=0 e=0 z=0  None .data      @4616 */
SECTION_DATA void* lit_4616[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoronMove__9daAlink_cFv,
};

/* 803B02CC-803B02D8 000C+00 s=0 e=0 z=0  None .data      @4617 */
SECTION_DATA void* lit_4617[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};

/* 803B02D8-803B02E4 000C+00 s=0 e=0 z=0  None .data      @4618 */
SECTION_DATA void* lit_4618[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotSubject__9daAlink_cFv,
};

/* 803B02E4-803B02F0 000C+00 s=0 e=0 z=0  None .data      @4619 */
SECTION_DATA void* lit_4619[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotMove__9daAlink_cFv,
};

/* 803B02F0-803B02FC 000C+00 s=0 e=0 z=0  None .data      @4620 */
SECTION_DATA void* lit_4620[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotFly__9daAlink_cFv,
};

/* 803B02FC-803B0308 000C+00 s=0 e=0 z=0  None .data      @4621 */
SECTION_DATA void* lit_4621[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotRoofWait__9daAlink_cFv,
};

/* 803B0308-803B0314 000C+00 s=0 e=0 z=0  None .data      @4622 */
SECTION_DATA void* lit_4622[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotRoofShoot__9daAlink_cFv,
};

/* 803B0314-803B0320 000C+00 s=0 e=0 z=0  None .data      @4623 */
SECTION_DATA void* lit_4623[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotRoofBoots__9daAlink_cFv,
};

/* 803B0320-803B032C 000C+00 s=0 e=0 z=0  None .data      @4624 */
SECTION_DATA void* lit_4624[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotWallWait__9daAlink_cFv,
};

/* 803B032C-803B0338 000C+00 s=0 e=0 z=0  None .data      @4625 */
SECTION_DATA void* lit_4625[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotWallShoot__9daAlink_cFv,
};

/* 803B0338-803B0344 000C+00 s=0 e=0 z=0  None .data      @4626 */
SECTION_DATA void* lit_4626[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMagneBootsFly__9daAlink_cFv,
};

/* 803B0344-803B0350 000C+00 s=0 e=0 z=0  None .data      @4627 */
SECTION_DATA void* lit_4627[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBootsEquip__9daAlink_cFv,
};

/* 803B0350-803B035C 000C+00 s=0 e=0 z=0  None .data      @4628 */
SECTION_DATA void* lit_4628[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouReady__9daAlink_cFv,
};

/* 803B035C-803B0368 000C+00 s=0 e=0 z=0  None .data      @4629 */
SECTION_DATA void* lit_4629[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouMove__9daAlink_cFv,
};

/* 803B0368-803B0374 000C+00 s=0 e=0 z=0  None .data      @4630 */
SECTION_DATA void* lit_4630[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouSideMove__9daAlink_cFv,
};

/* 803B0374-803B0380 000C+00 s=0 e=0 z=0  None .data      @4631 */
SECTION_DATA void* lit_4631[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouAction__9daAlink_cFv,
};

/* 803B0380-803B038C 000C+00 s=0 e=0 z=0  None .data      @4632 */
SECTION_DATA void* lit_4632[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouStagger__9daAlink_cFv,
};

/* 803B038C-803B0398 000C+00 s=0 e=0 z=0  None .data      @4633 */
SECTION_DATA void* lit_4633[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouWinLose__9daAlink_cFv,
};

/* 803B0398-803B03A4 000C+00 s=0 e=0 z=0  None .data      @4634 */
SECTION_DATA void* lit_4634[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouShiko__9daAlink_cFv,
};

/* 803B03A4-803B03B0 000C+00 s=0 e=0 z=0  None .data      @4635 */
SECTION_DATA void* lit_4635[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookUp__9daAlink_cFv,
};

/* 803B03B0-803B03BC 000C+00 s=0 e=0 z=0  None .data      @4636 */
SECTION_DATA void* lit_4636[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookUpToGetItem__9daAlink_cFv,
};

/* 803B03BC-803B03C8 000C+00 s=0 e=0 z=0  None .data      @4637 */
SECTION_DATA void* lit_4637[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHandPat__9daAlink_cFv,
};

/* 803B03C8-803B03D4 000C+00 s=0 e=0 z=0  None .data      @4638 */
SECTION_DATA void* lit_4638[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procIronBallSubject__9daAlink_cFv,
};

/* 803B03D4-803B03E0 000C+00 s=0 e=0 z=0  None .data      @4639 */
SECTION_DATA void* lit_4639[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procIronBallMove__9daAlink_cFv,
};

/* 803B03E0-803B03EC 000C+00 s=0 e=0 z=0  None .data      @4640 */
SECTION_DATA void* lit_4640[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procIronBallThrow__9daAlink_cFv,
};

/* 803B03EC-803B03F8 000C+00 s=0 e=0 z=0  None .data      @4641 */
SECTION_DATA void* lit_4641[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procIronBallReturn__9daAlink_cFv,
};

/* 803B03F8-803B0404 000C+00 s=0 e=0 z=0  None .data      @4642 */
SECTION_DATA void* lit_4642[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBossBodyHang__9daAlink_cFv,
};

/* 803B0404-803B0410 000C+00 s=0 e=0 z=0  None .data      @4643 */
SECTION_DATA void* lit_4643[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procOctaIealSpit__9daAlink_cFv,
};

/* 803B0410-803B041C 000C+00 s=0 e=0 z=0  None .data      @4644 */
SECTION_DATA void* lit_4644[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procScreamWait__9daAlink_cFv,
};

/* 803B041C-803B0428 000C+00 s=0 e=0 z=0  None .data      @4645 */
SECTION_DATA void* lit_4645[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoatStopReady__9daAlink_cFv,
};

/* 803B0428-803B0434 000C+00 s=0 e=0 z=0  None .data      @4646 */
SECTION_DATA void* lit_4646[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procZoraMove__9daAlink_cFv,
};

/* 803B0434-803B0440 000C+00 s=0 e=0 z=0  None .data      @4647 */
SECTION_DATA void* lit_4647[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookAroundTurn__9daAlink_cFv,
};

/* 803B0440-803B044C 000C+00 s=0 e=0 z=0  None .data      @4648 */
SECTION_DATA void* lit_4648[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procTradeItemOut__9daAlink_cFv,
};

/* 803B044C-803B0458 000C+00 s=0 e=0 z=0  None .data      @4649 */
SECTION_DATA void* lit_4649[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procNotUseItem__9daAlink_cFv,
};

/* 803B0458-803B0464 000C+00 s=0 e=0 z=0  None .data      @4650 */
SECTION_DATA void* lit_4650[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordReady__9daAlink_cFv,
};

/* 803B0464-803B0470 000C+00 s=0 e=0 z=0  None .data      @4651 */
SECTION_DATA void* lit_4651[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordPush__9daAlink_cFv,
};

/* 803B0470-803B047C 000C+00 s=0 e=0 z=0  None .data      @4652 */
SECTION_DATA void* lit_4652[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGanonFinish__9daAlink_cFv,
};

/* 803B047C-803B0488 000C+00 s=0 e=0 z=0  None .data      @4653 */
SECTION_DATA void* lit_4653[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutFastReady__9daAlink_cFv,
};

/* 803B0488-803B0494 000C+00 s=0 e=0 z=0  None .data      @4654 */
SECTION_DATA void* lit_4654[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMasterSwordStick__9daAlink_cFv,
};

/* 803B0494-803B04A0 000C+00 s=0 e=0 z=0  None .data      @4655 */
SECTION_DATA void* lit_4655[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMasterSwordPull__9daAlink_cFv,
};

/* 803B04A0-803B04AC 000C+00 s=0 e=0 z=0  None .data      @4656 */
SECTION_DATA void* lit_4656[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDungeonWarpReady__9daAlink_cFv,
};

/* 803B04AC-803B04B8 000C+00 s=0 e=0 z=0  None .data      @4657 */
SECTION_DATA void* lit_4657[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDungeonWarp__9daAlink_cFv,
};

/* 803B04B8-803B04C4 000C+00 s=0 e=0 z=0  None .data      @4658 */
SECTION_DATA void* lit_4658[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDungeonWarpSceneStart__9daAlink_cFv,
};

/* 803B04C4-803B04D0 000C+00 s=0 e=0 z=0  None .data      @4659 */
SECTION_DATA void* lit_4659[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfHowlDemo__9daAlink_cFv,
};

/* 803B04D0-803B04DC 000C+00 s=0 e=0 z=0  None .data      @4660 */
SECTION_DATA void* lit_4660[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfServiceWait__9daAlink_cFv,
};

/* 803B04DC-803B04E8 000C+00 s=0 e=0 z=0  None .data      @4661 */
SECTION_DATA void* lit_4661[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfTiredWait__9daAlink_cFv,
};

/* 803B04E8-803B04F4 000C+00 s=0 e=0 z=0  None .data      @4662 */
SECTION_DATA void* lit_4662[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfMidnaRideShock__9daAlink_cFv,
};

/* 803B04F4-803B0500 000C+00 s=0 e=0 z=0  None .data      @4663 */
SECTION_DATA void* lit_4663[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfWait__9daAlink_cFv,
};

/* 803B0500-803B050C 000C+00 s=0 e=0 z=0  None .data      @4664 */
SECTION_DATA void* lit_4664[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfMove__9daAlink_cFv,
};

/* 803B050C-803B0518 000C+00 s=0 e=0 z=0  None .data      @4665 */
SECTION_DATA void* lit_4665[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDash__9daAlink_cFv,
};

/* 803B0518-803B0524 000C+00 s=0 e=0 z=0  None .data      @4666 */
SECTION_DATA void* lit_4666[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDashReverse__9daAlink_cFv,
};

/* 803B0524-803B0530 000C+00 s=0 e=0 z=0  None .data      @4667 */
SECTION_DATA void* lit_4667[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfWaitTurn__9daAlink_cFv,
};

/* 803B0530-803B053C 000C+00 s=0 e=0 z=0  None .data      @4668 */
SECTION_DATA void* lit_4668[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfAtnActorMove__9daAlink_cFv,
};

/* 803B053C-803B0548 000C+00 s=0 e=0 z=0  None .data      @4669 */
SECTION_DATA void* lit_4669[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSideStep__9daAlink_cFv,
};

/* 803B0548-803B0554 000C+00 s=0 e=0 z=0  None .data      @4670 */
SECTION_DATA void* lit_4670[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSideStepLand__9daAlink_cFv,
};

/* 803B0554-803B0560 000C+00 s=0 e=0 z=0  None .data      @4671 */
SECTION_DATA void* lit_4671[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfBackJump__9daAlink_cFv,
};

/* 803B0560-803B056C 000C+00 s=0 e=0 z=0  None .data      @4672 */
SECTION_DATA void* lit_4672[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfBackJumpLand__9daAlink_cFv,
};

/* 803B056C-803B0578 000C+00 s=0 e=0 z=0  None .data      @4673 */
SECTION_DATA void* lit_4673[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfHowl__9daAlink_cFv,
};

/* 803B0578-803B0584 000C+00 s=0 e=0 z=0  None .data      @4674 */
SECTION_DATA void* lit_4674[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfAutoJump__9daAlink_cFv,
};

/* 803B0584-803B0590 000C+00 s=0 e=0 z=0  None .data      @4675 */
SECTION_DATA void* lit_4675[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfFall__9daAlink_cFv,
};

/* 803B0590-803B059C 000C+00 s=0 e=0 z=0  None .data      @4676 */
SECTION_DATA void* lit_4676[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLand__9daAlink_cFv,
};

/* 803B059C-803B05A8 000C+00 s=0 e=0 z=0  None .data      @4677 */
SECTION_DATA void* lit_4677[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSit__9daAlink_cFv,
};

/* 803B05A8-803B05B4 000C+00 s=0 e=0 z=0  None .data      @4678 */
SECTION_DATA void* lit_4678[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLieStart__9daAlink_cFv,
};

/* 803B05B4-803B05C0 000C+00 s=0 e=0 z=0  None .data      @4679 */
SECTION_DATA void* d_a_d_a_alink__lit_4679[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLieMove__9daAlink_cFv,
};

/* 803B05C0-803B05CC 000C+00 s=0 e=0 z=0  None .data      @4680 */
SECTION_DATA void* d_a_d_a_alink__lit_4680[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLieAutoMove__9daAlink_cFv,
};

/* 803B05CC-803B05D8 000C+00 s=0 e=0 z=0  None .data      @4681 */
SECTION_DATA void* lit_4681[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfHangReady__9daAlink_cFv,
};

/* 803B05D8-803B05E4 000C+00 s=0 e=0 z=0  None .data      @4682 */
SECTION_DATA void* lit_4682[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfStepMove__9daAlink_cFv,
};

/* 803B05E4-803B05F0 000C+00 s=0 e=0 z=0  None .data      @4683 */
SECTION_DATA void* lit_4683[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfHangWallCatch__9daAlink_cFv,
};

/* 803B05F0-803B05FC 000C+00 s=0 e=0 z=0  None .data      @4684 */
SECTION_DATA void* lit_4684[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfHangFallStart__9daAlink_cFv,
};

/* 803B05FC-803B0608 000C+00 s=0 e=0 z=0  None .data      @4685 */
SECTION_DATA void* lit_4685[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDamage__9daAlink_cFv,
};

/* 803B0608-803B0614 000C+00 s=0 e=0 z=0  None .data      @4686 */
SECTION_DATA void* lit_4686[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLargeDamageUp__9daAlink_cFv,
};

/* 803B0614-803B0620 000C+00 s=0 e=0 z=0  None .data      @4687 */
SECTION_DATA void* lit_4687[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLandDamage__9daAlink_cFv,
};

/* 803B0620-803B062C 000C+00 s=0 e=0 z=0  None .data      @4688 */
SECTION_DATA void* lit_4688[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfScreamWait__9daAlink_cFv,
};

/* 803B062C-803B0638 000C+00 s=0 e=0 z=0  None .data      @4689 */
SECTION_DATA void* lit_4689[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlip__9daAlink_cFv,
};

/* 803B0638-803B0644 000C+00 s=0 e=0 z=0  None .data      @4690 */
SECTION_DATA void* lit_4690[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlipTurn__9daAlink_cFv,
};

/* 803B0644-803B0650 000C+00 s=0 e=0 z=0  None .data      @4691 */
SECTION_DATA void* lit_4691[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlipTurnLand__9daAlink_cFv,
};

/* 803B0650-803B065C 000C+00 s=0 e=0 z=0  None .data      @4692 */
SECTION_DATA void* lit_4692[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlideReady__9daAlink_cFv,
};

/* 803B065C-803B0668 000C+00 s=0 e=0 z=0  None .data      @4693 */
SECTION_DATA void* lit_4693[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlide__9daAlink_cFv,
};

/* 803B0668-803B0674 000C+00 s=0 e=0 z=0  None .data      @4694 */
SECTION_DATA void* lit_4694[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlideLand__9daAlink_cFv,
};

/* 803B0674-803B0680 000C+00 s=0 e=0 z=0  None .data      @4695 */
SECTION_DATA void* lit_4695[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfWaitSlip__9daAlink_cFv,
};

/* 803B0680-803B068C 000C+00 s=0 e=0 z=0  None .data      @4696 */
SECTION_DATA void* lit_4696[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlopeStart__9daAlink_cFv,
};

/* 803B068C-803B0698 000C+00 s=0 e=0 z=0  None .data      @4697 */
SECTION_DATA void* lit_4697[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRopeMove__9daAlink_cFv,
};

/* 803B0698-803B06A4 000C+00 s=0 e=0 z=0  None .data      @4698 */
SECTION_DATA void* lit_4698[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRopeHang__9daAlink_cFv,
};

/* 803B06A4-803B06B0 000C+00 s=0 e=0 z=0  None .data      @4699 */
SECTION_DATA void* lit_4699[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRopeTurn__9daAlink_cFv,
};

/* 803B06B0-803B06BC 000C+00 s=0 e=0 z=0  None .data      @4700 */
SECTION_DATA void* lit_4700[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRopeStagger__9daAlink_cFv,
};

/* 803B06BC-803B06C8 000C+00 s=0 e=0 z=0  None .data      @4701 */
SECTION_DATA void* lit_4701[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRopeSubjectivity__9daAlink_cFv,
};

/* 803B06C8-803B06D4 000C+00 s=0 e=0 z=0  None .data      @4702 */
SECTION_DATA void* lit_4702[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfTagJump__9daAlink_cFv,
};

/* 803B06D4-803B06E0 000C+00 s=0 e=0 z=0  None .data      @4703 */
SECTION_DATA void* lit_4703[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfTagJumpLand__9daAlink_cFv,
};

/* 803B06E0-803B06EC 000C+00 s=0 e=0 z=0  None .data      @4704 */
SECTION_DATA void* lit_4704[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRollAttackCharge__9daAlink_cFv,
};

/* 803B06EC-803B06F8 000C+00 s=0 e=0 z=0  None .data      @4705 */
SECTION_DATA void* lit_4705[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRollAttackMove__9daAlink_cFv,
};

/* 803B06F8-803B0704 000C+00 s=0 e=0 z=0  None .data      @4706 */
SECTION_DATA void* lit_4706[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfJumpAttack__9daAlink_cFv,
};

/* 803B0704-803B0710 000C+00 s=0 e=0 z=0  None .data      @4707 */
SECTION_DATA void* lit_4707[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfJumpAttackKick__9daAlink_cFv,
};

/* 803B0710-803B071C 000C+00 s=0 e=0 z=0  None .data      @4708 */
SECTION_DATA void* lit_4708[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfJumpAttackSlideLand__9daAlink_cFv,
};

/* 803B071C-803B0728 000C+00 s=0 e=0 z=0  None .data      @4709 */
SECTION_DATA void* lit_4709[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfJumpAttackNormalLand__9daAlink_cFv,
};

/* 803B0728-803B0734 000C+00 s=0 e=0 z=0  None .data      @4710 */
SECTION_DATA void* lit_4710[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfWaitAttack__9daAlink_cFv,
};

/* 803B0734-803B0740 000C+00 s=0 e=0 z=0  None .data      @4711 */
SECTION_DATA void* lit_4711[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRollAttack__9daAlink_cFv,
};

/* 803B0740-803B074C 000C+00 s=0 e=0 z=0  None .data      @4712 */
SECTION_DATA void* lit_4712[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDownAttack__9daAlink_cFv,
};

/* 803B074C-803B0758 000C+00 s=0 e=0 z=0  None .data      @4713 */
SECTION_DATA void* lit_4713[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDownAtLand__9daAlink_cFv,
};

/* 803B0758-803B0764 000C+00 s=0 e=0 z=0  None .data      @4714 */
SECTION_DATA void* lit_4714[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDownAtMissLand__9daAlink_cFv,
};

/* 803B0764-803B0770 000C+00 s=0 e=0 z=0  None .data      @4715 */
SECTION_DATA void* lit_4715[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLockAttack__9daAlink_cFv,
};

/* 803B0770-803B077C 000C+00 s=0 e=0 z=0  None .data      @4716 */
SECTION_DATA void* lit_4716[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLockAttackTurn__9daAlink_cFv,
};

/* 803B077C-803B0788 000C+00 s=0 e=0 z=0  None .data      @4717 */
SECTION_DATA void* lit_4717[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSwimUp__9daAlink_cFv,
};

/* 803B0788-803B0794 000C+00 s=0 e=0 z=0  None .data      @4718 */
SECTION_DATA void* lit_4718[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSwimWait__9daAlink_cFv,
};

/* 803B0794-803B07A0 000C+00 s=0 e=0 z=0  None .data      @4719 */
SECTION_DATA void* lit_4719[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSwimMove__9daAlink_cFv,
};

/* 803B07A0-803B07AC 000C+00 s=0 e=0 z=0  None .data      @4720 */
SECTION_DATA void* lit_4720[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSwimEndWait__9daAlink_cFv,
};

/* 803B07AC-803B07B8 000C+00 s=0 e=0 z=0  None .data      @4721 */
SECTION_DATA void* lit_4721[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGrabUp__9daAlink_cFv,
};

/* 803B07B8-803B07C4 000C+00 s=0 e=0 z=0  None .data      @4722 */
SECTION_DATA void* lit_4722[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGrabPut__9daAlink_cFv,
};

/* 803B07C4-803B07D0 000C+00 s=0 e=0 z=0  None .data      @4723 */
SECTION_DATA void* d_a_d_a_alink__lit_4723[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGrabThrow__9daAlink_cFv,
};

/* 803B07D0-803B07DC 000C+00 s=0 e=0 z=0  None .data      @4724 */
SECTION_DATA void* d_a_d_a_alink__lit_4724[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfChainUp__9daAlink_cFv,
};

/* 803B07DC-803B07E8 000C+00 s=0 e=0 z=0  None .data      @4725 */
SECTION_DATA void* d_a_d_a_alink__lit_4725[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfPush__9daAlink_cFv,
};

/* 803B07E8-803B07F4 000C+00 s=0 e=0 z=0  None .data      @4726 */
SECTION_DATA void* d_a_d_a_alink__lit_4726[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfChainReady__9daAlink_cFv,
};

/* 803B07F4-803B0800 000C+00 s=0 e=0 z=0  None .data      @4727 */
SECTION_DATA void* d_a_d_a_alink__lit_4727[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfChainWait__9daAlink_cFv,
};

/* 803B0800-803B080C 000C+00 s=0 e=0 z=0  None .data      @4728 */
SECTION_DATA void* d_a_d_a_alink__lit_4728[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDig__9daAlink_cFv,
};

/* 803B080C-803B0818 000C+00 s=0 e=0 z=0  None .data      @4729 */
SECTION_DATA void* d_a_d_a_alink__lit_4729[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDigThrough__9daAlink_cFv,
};

/* 803B0818-803B0824 000C+00 s=0 e=0 z=0  None .data      @4730 */
SECTION_DATA void* d_a_d_a_alink__lit_4730[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfAttackReverse__9daAlink_cFv,
};

/* 803B0824-803B0830 000C+00 s=0 e=0 z=0  None .data      @4731 */
SECTION_DATA void* d_a_d_a_alink__lit_4731[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfEnemyThrow__9daAlink_cFv,
};

/* 803B0830-803B083C 000C+00 s=0 e=0 z=0  None .data      @4732 */
SECTION_DATA void* d_a_d_a_alink__lit_4732[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfEnemyHangBite__9daAlink_cFv,
};

/* 803B083C-803B0848 000C+00 s=0 e=0 z=0  None .data      @4733 */
SECTION_DATA void* d_a_d_a_alink__lit_4733[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGiantPuzzle__9daAlink_cFv,
};

/* 803B0848-803B0854 000C+00 s=0 e=0 z=0  None .data      @4734 */
SECTION_DATA void* d_a_d_a_alink__lit_4734[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfCargoCarry__9daAlink_cFv,
};

/* 803B0854-803B0860 000C+00 s=0 e=0 z=0  None .data      @4735 */
SECTION_DATA void* d_a_d_a_alink__lit_4735[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGetSmell__9daAlink_cFv,
};

/* 803B0860-803B086C 000C+00 s=0 e=0 z=0  None .data      @4736 */
SECTION_DATA void* d_a_d_a_alink__lit_4736[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};

/* 803B086C-803B0878 000C+00 s=0 e=0 z=0  None .data      @4737 */
SECTION_DATA void* d_a_d_a_alink__lit_4737[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSnowEscape__9daAlink_cFv,
};

/* 803B0878-803B0884 000C+00 s=0 e=0 z=0  None .data      @4738 */
SECTION_DATA void* d_a_d_a_alink__lit_4738[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGanonCatch__9daAlink_cFv,
};

/* 803B0884-803B0890 000C+00 s=0 e=0 z=0  None .data      @4739 */
SECTION_DATA void* d_a_d_a_alink__lit_4739[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoToolDemo__9daAlink_cFv,
};

/* 803B0890-803B089C 000C+00 s=0 e=0 z=0  None .data      @4740 */
SECTION_DATA void* d_a_d_a_alink__lit_4740[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoSubjectivity__9daAlink_cFv,
};

/* 803B089C-803B08A8 000C+00 s=0 e=0 z=0  None .data      @4741 */
SECTION_DATA void* d_a_d_a_alink__lit_4741[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoSwimSubjectivity__9daAlink_cFv,
};

/* 803B08A8-803B08B4 000C+00 s=0 e=0 z=0  None .data      @4742 */
SECTION_DATA void* d_a_d_a_alink__lit_4742[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoPeepSubjectivity__9daAlink_cFv,
};

/* 803B08B4-803B08C0 000C+00 s=0 e=0 z=0  None .data      @4743 */
SECTION_DATA void* lit_4743[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoPolyDamage__9daAlink_cFv,
};

/* 803B08C0-803B08CC 000C+00 s=0 e=0 z=0  None .data      @4744 */
SECTION_DATA void* lit_4744[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoElecDamage__9daAlink_cFv,
};

/* 803B08CC-803B08D8 000C+00 s=0 e=0 z=0  None .data      @4745 */
SECTION_DATA void* lit_4745[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoPushPullWait__9daAlink_cFv,
};

/* 803B08D8-803B08E4 000C+00 s=0 e=0 z=0  None .data      @4746 */
SECTION_DATA void* lit_4746[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoPushMove__9daAlink_cFv,
};

/* 803B08E4-803B08F0 000C+00 s=0 e=0 z=0  None .data      @4747 */
SECTION_DATA void* lit_4747[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoTalk__9daAlink_cFv,
};

/* 803B08F0-803B08FC 000C+00 s=0 e=0 z=0  None .data      @4748 */
SECTION_DATA void* lit_4748[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoOpenTreasure__9daAlink_cFv,
};

/* 803B08FC-803B0908 000C+00 s=0 e=0 z=0  None .data      @4749 */
SECTION_DATA void* lit_4749[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoUnequip__9daAlink_cFv,
};

/* 803B0908-803B0914 000C+00 s=0 e=0 z=0  None .data      @4750 */
SECTION_DATA void* lit_4750[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGetItem__9daAlink_cFv,
};

/* 803B0914-803B0920 000C+00 s=0 e=0 z=0  None .data      @4751 */
SECTION_DATA void* lit_4751[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoTurnBack__9daAlink_cFv,
};

/* 803B0920-803B092C 000C+00 s=0 e=0 z=0  None .data      @4752 */
SECTION_DATA void* lit_4752[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLookWait__9daAlink_cFv,
};

/* 803B092C-803B0938 000C+00 s=0 e=0 z=0  None .data      @4753 */
SECTION_DATA void* lit_4753[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};

/* 803B0938-803B0944 000C+00 s=0 e=0 z=0  None .data      @4754 */
SECTION_DATA void* lit_4754[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};

/* 803B0944-803B0950 000C+00 s=0 e=0 z=0  None .data      @4755 */
SECTION_DATA void* lit_4755[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphose__9daAlink_cFv,
};

/* 803B0950-803B095C 000C+00 s=0 e=0 z=0  None .data      @4756 */
SECTION_DATA void* lit_4756[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphoseOnly__9daAlink_cFv,
};

/* 803B095C-803B0968 000C+00 s=0 e=0 z=0  None .data      @4757 */
SECTION_DATA void* lit_4757[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoWarp__9daAlink_cFv,
};

/* 803B0968-803B0974 000C+00 s=0 e=0 z=0  None .data      @4758 */
SECTION_DATA void* lit_4758[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoDead__9daAlink_cFv,
};

/* 803B0974-803B0980 000C+00 s=0 e=0 z=0  None .data      @4759 */
SECTION_DATA void* lit_4759[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoFogDead__9daAlink_cFv,
};

/* 803B0980-803B098C 000C+00 s=0 e=0 z=0  None .data      @4760 */
SECTION_DATA void* lit_4760[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLookAround__9daAlink_cFv,
};

/* 803B098C-803B0998 000C+00 s=0 e=0 z=0  None .data      @4761 */
SECTION_DATA void* lit_4761[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};

/* 803B0998-803B09A4 000C+00 s=0 e=0 z=0  None .data      @4762 */
SECTION_DATA void* lit_4762[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoSandWallHit__9daAlink_cFv,
};

/* 803B09A4-803B09B0 000C+00 s=0 e=0 z=0  None .data      @4763 */
SECTION_DATA void* lit_4763[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLavaReturn__9daAlink_cFv,
};

/* 803B09B0-803B09BC 000C+00 s=0 e=0 z=0  None .data      @4764 */
SECTION_DATA void* lit_4764[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoSwimFreezeReturn__9daAlink_cFv,
};

/* 803B09BC-803B09C8 000C+00 s=0 e=0 z=0  None .data      @4765 */
SECTION_DATA void* lit_4765[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGetReadySit__9daAlink_cFv,
};

/* 803B09C8-803B09D4 000C+00 s=0 e=0 z=0  None .data      @4766 */
SECTION_DATA void* lit_4766[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoTwGate__9daAlink_cFv,
};

/* 803B09D4-803B09E0 000C+00 s=0 e=0 z=0  None .data      @4767 */
SECTION_DATA void* lit_4767[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLargeDamage__9daAlink_cFv,
};

/* 803B09E0-803B09EC 000C+00 s=0 e=0 z=0  None .data      @4768 */
SECTION_DATA void* lit_4768[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLargeDamageWall__9daAlink_cFv,
};

/* 803B09EC-803B09F8 000C+00 s=0 e=0 z=0  None .data      @4769 */
SECTION_DATA void* lit_4769[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoNod__9daAlink_cFv,
};

/* 803B09F8-803B0A04 000C+00 s=0 e=0 z=0  None .data      @4770 */
SECTION_DATA void* lit_4770[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};

/* 803B0A04-803B0A10 000C+00 s=0 e=0 z=0  None .data      @4771 */
SECTION_DATA void* lit_4771[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGlare__9daAlink_cFv,
};

/* 803B0A10-803B0A1C 000C+00 s=0 e=0 z=0  None .data      @4772 */
SECTION_DATA void* lit_4772[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoHorseCallWait__9daAlink_cFv,
};

/* 803B0A1C-803B0A28 000C+00 s=0 e=0 z=0  None .data      @4773 */
SECTION_DATA void* lit_4773[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};

/* 803B0A28-803B2028 1600+00 s=1 e=0 z=0  None .data      m_procInitTable__9daAlink_c */
SECTION_DATA static u8 m_procInitTable__9daAlink_c[5632] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x84,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x84,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x84,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x84,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x86,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x10, 0x86,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x06,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x06,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x84,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x03, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x03, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x80, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x35, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x30,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x35, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x25, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x25, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x24, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x24, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x10, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x15, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x06,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x04, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x21, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0xA0, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x29,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x50, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x50, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x80, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x31, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x30, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x30, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x30, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x30, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0xE0, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x20, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20, 0x0B,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xE0, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 803B2028-803B2034 000C+00 s=0 e=0 z=0  None .data      @4774 */
SECTION_DATA void* lit_4774[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)commonWaitTurnInit__9daAlink_cFv,
};

/* 803B2034-803B2040 000C+00 s=0 e=0 z=0  None .data      @4775 */
SECTION_DATA void* lit_4775[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoOpenTreasureInit__9daAlink_cFv,
};

/* 803B2040-803B204C 000C+00 s=0 e=0 z=0  None .data      @4776 */
SECTION_DATA void* lit_4776[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGetItemInit__9daAlink_cFv,
};

/* 803B204C-803B2058 000C+00 s=0 e=0 z=0  None .data      @4777 */
SECTION_DATA void* lit_4777[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoUnequipInit__9daAlink_cFv,
};

/* 803B2058-803B2064 000C+00 s=0 e=0 z=0  None .data      @4778 */
SECTION_DATA void* lit_4778[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)commonGrabPutInit__9daAlink_cFv,
};

/* 803B2064-803B2070 000C+00 s=0 e=0 z=0  None .data      @4779 */
SECTION_DATA void* lit_4779[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMonkeyMoveInit__9daAlink_cFv,
};

/* 803B2070-803B207C 000C+00 s=0 e=0 z=0  None .data      @4780 */
SECTION_DATA void* lit_4780[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLookAroundInit__9daAlink_cFv,
};

/* 803B207C-803B2088 000C+00 s=0 e=0 z=0  None .data      @4781 */
SECTION_DATA void* lit_4781[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoTurnBackInit__9daAlink_cFv,
};

/* 803B2088-803B2094 000C+00 s=0 e=0 z=0  None .data      @4782 */
SECTION_DATA void* lit_4782[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoBoomerangCatchInit__9daAlink_cFv,
};

/* 803B2094-803B20A0 000C+00 s=0 e=0 z=0  None .data      @4783 */
SECTION_DATA void* lit_4783[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHawkCatchInit__9daAlink_cFv,
};

/* 803B20A0-803B20AC 000C+00 s=0 e=0 z=0  None .data      @4784 */
SECTION_DATA void* lit_4784[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordUnequipSpInit__9daAlink_cFv,
};

/* 803B20AC-803B20B8 000C+00 s=0 e=0 z=0  None .data      @4785 */
SECTION_DATA void* lit_4785[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoDemoPushPullWaitInit__9daAlink_cFv,
};

/* 803B20B8-803B20C4 000C+00 s=0 e=0 z=0  None .data      @4786 */
SECTION_DATA void* lit_4786[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoDemoPushMoveInit__9daAlink_cFv,
};

/* 803B20C4-803B20D0 000C+00 s=0 e=0 z=0  None .data      @4787 */
SECTION_DATA void* lit_4787[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBossAtnWaitInit__9daAlink_cFv,
};

/* 803B20D0-803B20DC 000C+00 s=0 e=0 z=0  None .data      @4788 */
SECTION_DATA void* lit_4788[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDoorOpenInit__9daAlink_cFv,
};

/* 803B20DC-803B20E8 000C+00 s=0 e=0 z=0  None .data      @4789 */
SECTION_DATA void* lit_4789[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procTradeItemOutInit__9daAlink_cFv,
};

/* 803B20E8-803B20F4 000C+00 s=0 e=0 z=0  None .data      @4790 */
SECTION_DATA void* lit_4790[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procKandelaarSwingInit__9daAlink_cFv,
};

/* 803B20F4-803B2100 000C+00 s=0 e=0 z=0  None .data      @4791 */
SECTION_DATA void* lit_4791[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFrontRollInit__9daAlink_cFv,
};

/* 803B2100-803B210C 000C+00 s=0 e=0 z=0  None .data      @4792 */
SECTION_DATA void* lit_4792[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrouchInit__9daAlink_cFv,
};

/* 803B210C-803B2118 000C+00 s=0 e=0 z=0  None .data      @4793 */
SECTION_DATA void* lit_4793[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoCaughtInit__9daAlink_cFv,
};

/* 803B2118-803B2124 000C+00 s=0 e=0 z=0  None .data      @4794 */
SECTION_DATA void* lit_4794[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookUpInit__9daAlink_cFv,
};

/* 803B2124-803B2130 000C+00 s=0 e=0 z=0  None .data      @4795 */
SECTION_DATA void* lit_4795[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookUpToGetItemInit__9daAlink_cFv,
};

/* 803B2130-803B213C 000C+00 s=0 e=0 z=0  None .data      @4796 */
SECTION_DATA void* lit_4796[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHandPatInit__9daAlink_cFv,
};

/* 803B213C-803B2148 000C+00 s=0 e=0 z=0  None .data      @4797 */
SECTION_DATA void* lit_4797[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfMidnaRideShockInit__9daAlink_cFv,
};

/* 803B2148-803B2154 000C+00 s=0 e=0 z=0  None .data      @4798 */
SECTION_DATA void* lit_4798[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouShikoInit__9daAlink_cFv,
};

/* 803B2154-803B2160 000C+00 s=0 e=0 z=0  None .data      @4799 */
SECTION_DATA void* lit_4799[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoFogDeadInit__9daAlink_cFv,
};

/* 803B2160-803B216C 000C+00 s=0 e=0 z=0  None .data      @4800 */
SECTION_DATA void* lit_4800[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSmellWaitInit__9daAlink_cFv,
};

/* 803B216C-803B2178 000C+00 s=0 e=0 z=0  None .data      @4801 */
SECTION_DATA void* lit_4801[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfCargoCarryInit__9daAlink_cFv,
};

/* 803B2178-803B2184 000C+00 s=0 e=0 z=0  None .data      @4802 */
SECTION_DATA void* lit_4802[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphoseInit__9daAlink_cFv,
};

/* 803B2184-803B2190 000C+00 s=0 e=0 z=0  None .data      @4803 */
SECTION_DATA void* lit_4803[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphoseInit__9daAlink_cFv,
};

/* 803B2190-803B219C 000C+00 s=0 e=0 z=0  None .data      @4804 */
SECTION_DATA void* lit_4804[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseGetKeyInit__9daAlink_cFv,
};

/* 803B219C-803B21A8 000C+00 s=0 e=0 z=0  None .data      @4805 */
SECTION_DATA void* lit_4805[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoNodInit__9daAlink_cFv,
};

/* 803B21A8-803B21B4 000C+00 s=0 e=0 z=0  None .data      @4806 */
SECTION_DATA void* lit_4806[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGlareInit__9daAlink_cFv,
};

/* 803B21B4-803B21C0 000C+00 s=0 e=0 z=0  None .data      @4807 */
SECTION_DATA void* lit_4807[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoEyeAwayInit__9daAlink_cFv,
};

/* 803B21C0-803B21CC 000C+00 s=0 e=0 z=0  None .data      @4808 */
SECTION_DATA void* lit_4808[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoatStopReadyInit__9daAlink_cFv,
};

/* 803B21CC-803B21D8 000C+00 s=0 e=0 z=0  None .data      @4809 */
SECTION_DATA void* lit_4809[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGetReadySitInit__9daAlink_cFv,
};

/* 803B21D8-803B21E4 000C+00 s=0 e=0 z=0  None .data      @4810 */
SECTION_DATA void* lit_4810[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoTwGateInit__9daAlink_cFv,
};

/* 803B21E4-803B21F0 000C+00 s=0 e=0 z=0  None .data      @4811 */
SECTION_DATA void* lit_4811[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFmChainStrongPullInit__9daAlink_cFv,
};

/* 803B21F0-803B21FC 000C+00 s=0 e=0 z=0  None .data      @4812 */
SECTION_DATA void* lit_4812[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSnowEscapeInit__9daAlink_cFv,
};

/* 803B21FC-803B2208 000C+00 s=0 e=0 z=0  None .data      @4813 */
SECTION_DATA void* lit_4813[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procZoraMoveInit__9daAlink_cFv,
};

/* 803B2208-803B2214 000C+00 s=0 e=0 z=0  None .data      @4814 */
SECTION_DATA void* lit_4814[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphoseOnlyInit__9daAlink_cFv,
};

/* 803B2214-803B2220 000C+00 s=0 e=0 z=0  None .data      @4815 */
SECTION_DATA void* lit_4815[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphoseOnlyInit__9daAlink_cFv,
};

/* 803B2220-803B222C 000C+00 s=0 e=0 z=0  None .data      @4816 */
SECTION_DATA void* lit_4816[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookAroundTurnInit__9daAlink_cFv,
};

/* 803B222C-803B2238 000C+00 s=0 e=0 z=0  None .data      @4817 */
SECTION_DATA void* lit_4817[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoQuakeWaitInit__9daAlink_cFv,
};

/* 803B2238-803B2244 000C+00 s=0 e=0 z=0  None .data      @4818 */
SECTION_DATA void* lit_4818[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGuardAttackInit__9daAlink_cFv,
};

/* 803B2244-803B2250 000C+00 s=0 e=0 z=0  None .data      @4819 */
SECTION_DATA void* lit_4819[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordReadyInit__9daAlink_cFv,
};

/* 803B2250-803B225C 000C+00 s=0 e=0 z=0  None .data      @4820 */
SECTION_DATA void* lit_4820[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDungeonWarpInit__9daAlink_cFv,
};

/* 803B225C-803B2268 000C+00 s=0 e=0 z=0  None .data      @4821 */
SECTION_DATA void* lit_4821[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDungeonWarpSceneStartInit__9daAlink_cFv,
};

/* 803B2268-803B2274 000C+00 s=0 e=0 z=0  None .data      @4822 */
SECTION_DATA void* lit_4822[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMasterSwordStickInit__9daAlink_cFv,
};

/* 803B2274-803B2280 000C+00 s=0 e=0 z=0  None .data      @4823 */
SECTION_DATA void* lit_4823[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMasterSwordPullInit__9daAlink_cFv,
};

/* 803B2280-803B228C 000C+00 s=0 e=0 z=0  None .data      @4824 */
SECTION_DATA void* lit_4824[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutDownInit__9daAlink_cFv,
};

/* 803B228C-803B2298 000C+00 s=0 e=0 z=0  None .data      @4825 */
SECTION_DATA void* lit_4825[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutHeadInit__9daAlink_cFv,
};

/* 803B2298-803B22A4 000C+00 s=0 e=0 z=0  None .data      @4826 */
SECTION_DATA void* lit_4826[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutLargeJumpInit__9daAlink_cFv,
};

/* 803B22A4-803B22B0 000C+00 s=0 e=0 z=0  None .data      @4827 */
SECTION_DATA void* lit_4827[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutFastReadyInit__9daAlink_cFv,
};

/* 803B22B0-803B22BC 000C+00 s=0 e=0 z=0  None .data      @4828 */
SECTION_DATA void* lit_4828[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCopyRodReviveInit__9daAlink_cFv,
};

/* 803B22BC-803B22C8 000C+00 s=0 e=0 z=0  None .data      @4829 */
SECTION_DATA void* lit_4829[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordPushInit__9daAlink_cFv,
};

/* 803B22C8-803B22D4 000C+00 s=0 e=0 z=0  None .data      @4830 */
SECTION_DATA void* lit_4830[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGanonFinishInit__9daAlink_cFv,
};

/* 803B22D4-803B22E0 000C+00 s=0 e=0 z=0  None .data      @4831 */
SECTION_DATA void* lit_4831[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseLookDownInit__9daAlink_cFv,
};

/* 803B22E0-803B2754 0474+00 s=1 e=0 z=0  None .data      m_demoInitTable__9daAlink_c */
SECTION_DATA static u8 m_demoInitTable__9daAlink_c[1140] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
};

/* 803B2754-803B2798 0044+00 s=0 e=0 z=0  None .data      l_cylSrc */
SECTION_DATA u8 l_cylSrc[68] = {
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1A, 0xD8, 0xFF, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x73,
    0x04, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x43, 0x34, 0x00, 0x00,
};

/* 803B2798-803B27D8 0040+00 s=1 e=0 z=0  None .data      l_sphSrc */
SECTION_DATA static u8 l_sphSrc[64] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A,
    0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x73, 0x01, 0x03, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 803B27D8-803B281C 0044+00 s=0 e=0 z=0  None .data      l_atCylSrc */
SECTION_DATA u8 l_atCylSrc[68] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x43, 0x34, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00,
};

/* 803B281C-803B2868 004C+00 s=0 e=0 z=0  None .data      l_atCpsSrc */
SECTION_DATA u8 l_atCpsSrc[76] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
};

/* 803B2868-803B2880 0018+00 s=1 e=0 z=0  None .data      l_jntColPos0 */
SECTION_DATA static u8 l_jntColPos0[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2880-803B288C 000C+00 s=1 e=0 z=0  None .data      l_jntColPos1 */
SECTION_DATA static u8 l_jntColPos1[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B288C-803B28A4 0018+00 s=1 e=0 z=0  None .data      l_jntColPos2 */
SECTION_DATA static u8 l_jntColPos2[24] = {
    0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B28A4-803B28BC 0018+00 s=1 e=0 z=0  None .data      l_jntColPos4 */
SECTION_DATA static u8 l_jntColPos4[24] = {
    0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B28BC-803B28C8 000C+00 s=1 e=0 z=0  None .data      l_jntColPos6 */
SECTION_DATA static u8 l_jntColPos6[12] = {
    0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B28C8-803B28E0 0018+00 s=1 e=0 z=0  None .data      l_jntColPos8 */
SECTION_DATA static u8 l_jntColPos8[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B28E0-803B28F8 0018+00 s=1 e=0 z=0  None .data      l_jntColPos9 */
SECTION_DATA static u8 l_jntColPos9[24] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B28F8-803B2910 0018+00 s=1 e=0 z=0  None .data      l_jntColPos10 */
SECTION_DATA static u8 l_jntColPos10[24] = {
    0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2910-803B2928 0018+00 s=1 e=0 z=0  None .data      l_jntColPos11 */
SECTION_DATA static u8 l_jntColPos11[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2928-803B2940 0018+00 s=1 e=0 z=0  None .data      l_jntColPos12 */
SECTION_DATA static u8 l_jntColPos12[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x40, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2940-803B2958 0018+00 s=1 e=0 z=0  None .data      l_jntColPos13 */
SECTION_DATA static u8 l_jntColPos13[24] = {
    0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2958-803B2970 0018+00 s=1 e=0 z=0  None .data      l_jntColPos14 */
SECTION_DATA static u8 l_jntColPos14[24] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2970-803B2988 0018+00 s=1 e=0 z=0  None .data      l_jntColPos15 */
SECTION_DATA static u8 l_jntColPos15[24] = {
    0xC1, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};

/* 803B2988-803B29A0 0018+00 s=1 e=0 z=0  None .data      l_jntColPos16 */
SECTION_DATA static u8 l_jntColPos16[24] = {
    0x41, 0x50, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0xC1, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B29A0-803B29AC 000C+00 s=1 e=0 z=0  None .data      l_jntColPos17 */
SECTION_DATA static u8 l_jntColPos17[12] = {
    0xC1, 0x70, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
};

/* 803B29AC-803B2A84 00D8+00 s=1 e=0 z=0  None .data      l_jntColData */
SECTION_DATA static void* l_jntColData[54] = {
    (void*)0x01000001,     (void*)0x41900000,     (void*)&l_jntColPos0,  (void*)0x00000004,
    (void*)0x41800000,     (void*)&l_jntColPos1,  (void*)0x01000007,     (void*)0x40E00000,
    (void*)&l_jntColPos2,  (void*)0x0100000C,     (void*)0x40E00000,     (void*)&l_jntColPos2,
    (void*)0x01000008,     (void*)0x40C00000,     (void*)&l_jntColPos4,  (void*)0x0100000D,
    (void*)0x40C00000,     (void*)&l_jntColPos4,  (void*)0x00000009,     (void*)0x40C00000,
    (void*)&l_jntColPos6,  (void*)0x0000000E,     (void*)0x40C00000,     (void*)&l_jntColPos6,
    (void*)0x01000010,     (void*)0x41900000,     (void*)&l_jntColPos8,  (void*)0x01000012,
    (void*)0x41000000,     (void*)&l_jntColPos9,  (void*)0x01000017,     (void*)0x41000000,
    (void*)&l_jntColPos10, (void*)0x01000013,     (void*)0x40E00000,     (void*)&l_jntColPos11,
    (void*)0x01000018,     (void*)0x40E00000,     (void*)&l_jntColPos12, (void*)0x01000014,
    (void*)0x40C00000,     (void*)&l_jntColPos13, (void*)0x01000019,     (void*)0x40C00000,
    (void*)&l_jntColPos14, (void*)0x0203000F,     (void*)0x42200000,     (void*)&l_jntColPos15,
    (void*)0x02030005,     (void*)0x42200000,     (void*)&l_jntColPos16, (void*)0x0003000F,
    (void*)0x42340000,     (void*)&l_jntColPos17,
};

/* 803B2A84-803B2A9C 0018+00 s=1 e=0 z=0  None .data      l_wolfJntColPos0 */
SECTION_DATA static u8 l_wolfJntColPos0[24] = {
    0xC1, 0xC8, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2A9C-803B2AA8 000C+00 s=1 e=0 z=0  None .data      l_wolfJntColPos1 */
SECTION_DATA static u8 l_wolfJntColPos1[12] = {
    0x40, 0xA0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2AA8-803B2AC0 0018+00 s=1 e=0 z=0  None .data      l_wolfJntColPos2 */
SECTION_DATA static u8 l_wolfJntColPos2[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x0C, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2AC0-803B2AD8 0018+00 s=1 e=0 z=0  None .data      l_wolfJntColPos4 */
SECTION_DATA static u8 l_wolfJntColPos4[24] = {
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2AD8-803B2AF0 0018+00 s=1 e=0 z=0  None .data      l_wolfJntColPos6 */
SECTION_DATA static u8 l_wolfJntColPos6[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2AF0-803B2B08 0018+00 s=1 e=0 z=0  None .data      l_wolfJntColPos8 */
SECTION_DATA static u8 l_wolfJntColPos8[24] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x40, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2B08-803B2B20 0018+00 s=1 e=0 z=0  None .data      l_wolfJntColPos10 */
SECTION_DATA static u8 l_wolfJntColPos10[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x04, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2B20-803B2B38 0018+00 s=1 e=0 z=0  None .data      l_wolfJntColPos12 */
SECTION_DATA static u8 l_wolfJntColPos12[24] = {
    0xC0, 0xA0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2B38-803B2B50 0018+00 s=1 e=0 z=0  None .data      l_wolfJntColPos14 */
SECTION_DATA static u8 l_wolfJntColPos14[24] = {
    0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2B50-803B2B68 0018+00 s=1 e=0 z=0  None .data      l_wolfJntColPos16 */
SECTION_DATA static u8 l_wolfJntColPos16[24] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x50, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2B68-803B2C40 00D8+00 s=1 e=0 z=0  None .data      l_wolfJntColData */
SECTION_DATA static void* l_wolfJntColData[54] = {
    (void*)0x01000001, (void*)0x41E00000, (void*)&l_wolfJntColPos0,
    (void*)0x00000004, (void*)0x41C80000, (void*)&l_wolfJntColPos1,
    (void*)0x01000010, (void*)0x41200000, (void*)&l_wolfJntColPos2,
    (void*)0x01000015, (void*)0x41200000, (void*)&l_wolfJntColPos2,
    (void*)0x01000011, (void*)0x40C00000, (void*)&l_wolfJntColPos4,
    (void*)0x01000016, (void*)0x40C00000, (void*)&l_wolfJntColPos4,
    (void*)0x01000012, (void*)0x40800000, (void*)&l_wolfJntColPos6,
    (void*)0x01000017, (void*)0x40800000, (void*)&l_wolfJntColPos6,
    (void*)0x01000013, (void*)0x40800000, (void*)&l_wolfJntColPos8,
    (void*)0x01000018, (void*)0x40800000, (void*)&l_wolfJntColPos8,
    (void*)0x0100001C, (void*)0x41300000, (void*)&l_wolfJntColPos10,
    (void*)0x01000021, (void*)0x41300000, (void*)&l_wolfJntColPos10,
    (void*)0x0100001D, (void*)0x40E00000, (void*)&l_wolfJntColPos12,
    (void*)0x01000022, (void*)0x40E00000, (void*)&l_wolfJntColPos12,
    (void*)0x0100001E, (void*)0x40A00000, (void*)&l_wolfJntColPos14,
    (void*)0x01000023, (void*)0x40A00000, (void*)&l_wolfJntColPos14,
    (void*)0x0100001F, (void*)0x40C00000, (void*)&l_wolfJntColPos16,
    (void*)0x01000024, (void*)0x40A00000, (void*)&l_wolfJntColPos16,
};

/* 803B2C40-803B2C50 000D+03 s=0 e=0 z=0  None .data      defaultPortal$39238 */
SECTION_DATA u8 data_803B2C40[13 + 3 /* padding */] = {
    0x50,
    0x4F,
    0x54,
    0x41,
    0x4C,
    0x5F,
    0x57,
    0x41,
    0x52,
    0x50,
    0x49,
    0x4E,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 803B2C50-803B2C64 0014+00 s=0 e=0 z=0  None .data      kBridgePortal$39239 */
SECTION_DATA u8 data_803B2C50[20] = {
    0x50, 0x4F, 0x52, 0x54, 0x41, 0x4C, 0x5F, 0x57, 0x41, 0x52,
    0x50, 0x5F, 0x4B, 0x42, 0x52, 0x49, 0x44, 0x47, 0x45, 0x00,
};

/* 803B2C64-803B2C78 0014+00 s=0 e=0 z=0  None .data      oBridgePortal$39240 */
SECTION_DATA u8 data_803B2C64[20] = {
    0x50, 0x4F, 0x52, 0x54, 0x41, 0x4C, 0x5F, 0x57, 0x41, 0x52,
    0x50, 0x5F, 0x4F, 0x42, 0x52, 0x49, 0x44, 0x47, 0x45, 0x00,
};

/* 803B2C78-803B2C8C 0014+00 s=0 e=0 z=0  None .data      volcBomPortal$39241 */
SECTION_DATA u8 data_803B2C78[20] = {
    0x50, 0x4F, 0x52, 0x54, 0x41, 0x4C, 0x5F, 0x57, 0x41, 0x52,
    0x50, 0x5F, 0x42, 0x49, 0x47, 0x56, 0x4F, 0x4C, 0x43, 0x00,
};

/* 803B2C8C-803B2CA4 0016+02 s=0 e=0 z=0  None .data      cannonPortal$39242 */
SECTION_DATA u8 data_803B2C8C[22 + 2 /* padding */] = {
    0x53,
    0x4B,
    0x59,
    0x5F,
    0x43,
    0x41,
    0x4E,
    0x4E,
    0x4F,
    0x4E,
    0x5F,
    0x57,
    0x41,
    0x52,
    0x50,
    0x5F,
    0x53,
    0x54,
    0x41,
    0x52,
    0x54,
    0x00,
    /* padding */
    0x00,
    0x00,
};

/* 803B2CA4-803B2CB0 000C+00 s=0 e=0 z=0  None .data      @39610 */
SECTION_DATA void* lit_39610[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectFrontRollParam__9daAlink_cFv,
};

/* 803B2CB0-803B2CBC 000C+00 s=0 e=0 z=0  None .data      @39611 */
SECTION_DATA void* lit_39611[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectSlipParam__9daAlink_cFv,
};

/* 803B2CBC-803B2CC8 000C+00 s=0 e=0 z=0  None .data      @39612 */
SECTION_DATA void* lit_39612[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectSmallLandParam__9daAlink_cFv,
};

/* 803B2CC8-803B2CD4 000C+00 s=0 e=0 z=0  None .data      @39613 */
SECTION_DATA void* lit_39613[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectRunParam__9daAlink_cFv,
};

/* 803B2CD4-803B2CE0 000C+00 s=0 e=0 z=0  None .data      @39614 */
SECTION_DATA void* lit_39614[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectLandParam__9daAlink_cFv,
};

/* 803B2CE0-803B2CEC 000C+00 s=0 e=0 z=0  None .data      @39615 */
SECTION_DATA void* lit_39615[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectSumouParam__9daAlink_cFv,
};

/* 803B2CEC-803B2D34 0048+00 s=1 e=0 z=0  None .data      m_fEffParamProc__9daAlink_c */
SECTION_DATA static u8 m_fEffParamProc__9daAlink_c[72] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2D34-803B2D40 000C+00 s=0 e=0 z=0  None .data      leftRotNormal$41087 */
SECTION_DATA u8 data_803B2D34[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2D40-803B2D58 0018+00 s=0 e=0 z=0  None .data      leftRotLight$41092 */
SECTION_DATA u8 data_803B2D40[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2D58-803B2D7C 0024+00 s=0 e=0 z=0  None .data      leftRotLarge$41097 */
SECTION_DATA u8 data_803B2D58[36] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2D7C-803B2D88 000C+00 s=0 e=0 z=0  None .data      leftRotWater$41102 */
SECTION_DATA u8 data_803B2D7C[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2D88-803B2D94 000C+00 s=1 e=0 z=0  None .data      rodTopOffset$61388 */
SECTION_DATA static u8 rodTopOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2D94-803B2DA0 000C+00 s=1 e=0 z=0  None .data      bodyBrkName$69118 */
SECTION_DATA static void* bodyBrkName[3] = {
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x494),
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x4AB),
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x4C2),
};

/* 803B2DA0-803B2DAC 000C+00 s=1 e=0 z=0  None .data      headBrkName$69119 */
SECTION_DATA static void* headBrkName[3] = {
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x4D9),
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x4F0),
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x507),
};

/* 803B2DAC-803B2DCC 0020+00 s=1 e=0 z=0  None .data      l_daAlink_Method */
SECTION_DATA static void* l_daAlink_Method[8] = {
    (void*)daAlink_Create__FP10fopAc_ac_c,
    (void*)daAlink_Delete__FP9daAlink_c,
    (void*)daAlink_Execute__FP9daAlink_c,
    (void*)NULL,
    (void*)daAlink_Draw__FP9daAlink_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 803B2DCC-803B2E20 0030+24 s=0 e=0 z=1  None .data      g_profile_ALINK */
SECTION_DATA void* g_profile_ALINK[12 + 9 /* padding */] = {
    (void*)0xFFFFFFFD,
    (void*)0x0005FFFD,
    (void*)0x00FD0000,
    (void*)&g_fpcLf_Method,
    (void*)0x0000385C,
    (void*)NULL,
    (void*)NULL,
    (void*)&g_fopAc_Method,
    (void*)0x005B0000,
    (void*)&l_daAlink_Method,
    (void*)0x00060400,
    (void*)0x01000000,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803B2E20-803B2E80 000C+54 s=2 e=0 z=0  None .data      __vt__16daPy_frameCtrl_c */
SECTION_DATA void* __vt__16daPy_frameCtrl_c[3 + 21 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__16daPy_frameCtrl_cFv,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803B2E80-803B2EC8 000C+3C s=3 e=0 z=0  None .data      __vt__8dEyeHL_c */
SECTION_DATA void* __vt__8dEyeHL_c[3 + 15 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8dEyeHL_cFv,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803B2EC8-803B2EF8 0030+00 s=3 e=0 z=0  None .data      __vt__16dBgS_LinkRoofChk */
SECTION_DATA void* __vt__16dBgS_LinkRoofChk[12] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__16dBgS_LinkRoofChkFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_8014470C,
    (void*)NULL,
    (void*)NULL,
    (void*)func_8014471C,
    (void*)NULL,
    (void*)NULL,
    (void*)func_80144714,
};

/* 803B2EF8-803B2F28 0030+00 s=3 e=0 z=0  None .data      __vt__15dBgS_LinkGndChk */
SECTION_DATA void* __vt__15dBgS_LinkGndChk[12] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__15dBgS_LinkGndChkFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446F4,
    (void*)NULL,
    (void*)NULL,
    (void*)func_80144704,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446FC,
};

/* 803B2F28-803B2F70 0024+24 s=3 e=0 z=0  None .data      __vt__13dBgS_LinkAcch */
SECTION_DATA void* __vt__13dBgS_LinkAcch[9 + 9 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__13dBgS_LinkAcchFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446EC,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446E4,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803B2F70-803B321C 02AC+00 s=2 e=0 z=0  None .data      __vt__9daPy_py_c */
SECTION_DATA void* __vt__9daPy_py_c[171] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)getMidnaAtnPos__9daPy_py_cCFv,
    (void*)setMidnaMsgNum__9daPy_py_cFP10fopAc_ac_cUs,
    (void*)getModelMtx__9daPy_py_cFv,
    (void*)getInvMtx__9daPy_py_cFv,
    (void*)getShadowTalkAtnPos__9daPy_py_cFv,
    (void*)NULL,
    (void*)getLeftItemMatrix__9daPy_py_cFv,
    (void*)getRightItemMatrix__9daPy_py_cFv,
    (void*)getLeftHandMatrix__9daPy_py_cFv,
    (void*)getRightHandMatrix__9daPy_py_cFv,
    (void*)getLinkBackBone1Matrix__9daPy_py_cFv,
    (void*)getWolfMouthMatrix__9daPy_py_cFv,
    (void*)getWolfBackbone2Matrix__9daPy_py_cFv,
    (void*)getBottleMtx__9daPy_py_cFv,
    (void*)checkPlayerGuard__9daPy_py_cCFv,
    (void*)checkPlayerFly__9daPy_py_cCFv,
    (void*)checkFrontRoll__9daPy_py_cCFv,
    (void*)checkWolfDash__9daPy_py_cCFv,
    (void*)checkAutoJump__9daPy_py_cCFv,
    (void*)checkSideStep__9daPy_py_cCFv,
    (void*)checkWolfTriggerJump__9daPy_py_cCFv,
    (void*)checkGuardBreakMode__9daPy_py_cCFv,
    (void*)checkLv3Slide__9daPy_py_cCFv,
    (void*)checkWolfHowlDemoMode__9daPy_py_cCFv,
    (void*)checkChainBlockPushPull__9daPy_py_cFv,
    (void*)checkElecDamage__9daPy_py_cCFv,
    (void*)checkEmptyBottleSwing__9daPy_py_cCFv,
    (void*)checkBottleSwingMode__9daPy_py_cCFv,
    (void*)checkHawkWait__9daPy_py_cCFv,
    (void*)checkGoatThrow__9daPy_py_cCFv,
    (void*)checkGoatThrowAfter__9daPy_py_cCFv,
    (void*)checkWolfTagLockJump__9daPy_py_cCFv,
    (void*)checkWolfTagLockJumpLand__9daPy_py_cCFv,
    (void*)checkWolfRope__9daPy_py_cFv,
    (void*)checkWolfRopeHang__9daPy_py_cCFv,
    (void*)checkRollJump__9daPy_py_cCFv,
    (void*)checkGoronRideWait__9daPy_py_cCFv,
    (void*)checkWolfChain__9daPy_py_cCFv,
    (void*)checkWolfWait__9daPy_py_cCFv,
    (void*)checkWolfJumpAttack__9daPy_py_cCFv,
    (void*)checkWolfRSit__9daPy_py_cCFv,
    (void*)checkBubbleFly__9daPy_py_cCFv,
    (void*)checkBottleDrinkEnd__9daPy_py_cCFv,
    (void*)checkWolfDig__9daPy_py_cCFv,
    (void*)checkCutCharge__9daPy_py_cCFv,
    (void*)checkCutTurnCharge__9daPy_py_cCFv,
    (void*)checkCutLargeJumpCharge__9daPy_py_cCFv,
    (void*)getBokoFlamePos__9daPy_py_cFP4cXyz,
    (void*)checkComboCutTurn__9daPy_py_cCFv,
    (void*)checkClimbMove__9daPy_py_cCFv,
    (void*)checkGrassWhistle__9daPy_py_cCFv,
    (void*)checkBoarRun__9daPy_py_cCFv,
    (void*)checkFmChainPut__9daPy_py_cCFv,
    (void*)checkHorseElecDamage__9daPy_py_cCFv,
    (void*)getBaseAnimeFrameRate__9daPy_py_cCFv,
    (void*)getBaseAnimeFrame__9daPy_py_cCFv,
    (void*)setAnimeFrame__9daPy_py_cFf,
    (void*)checkWolfLock__9daPy_py_cCFP10fopAc_ac_c,
    (void*)cancelWolfLock__9daPy_py_cFP10fopAc_ac_c,
    (void*)getAtnActorID__9daPy_py_cCFv,
    (void*)getItemID__9daPy_py_cCFv,
    (void*)getGrabActorID__9daPy_py_cCFv,
    (void*)exchangeGrabActor__9daPy_py_cFP10fopAc_ac_c,
    (void*)setForceGrab__9daPy_py_cFP10fopAc_ac_cii,
    (void*)setForcePutPos__9daPy_py_cFRC4cXyz,
    (void*)checkPlayerNoDraw__9daPy_py_cFv,
    (void*)checkRopeTag__9daPy_py_cFv,
    (void*)voiceStart__9daPy_py_cFUl,
    (void*)seStartOnlyReverb__9daPy_py_cFUl,
    (void*)seStartOnlyReverbLevel__9daPy_py_cFUl,
    (void*)setOutPower__9daPy_py_cFfsi,
    (void*)setGrabCollisionOffset__9daPy_py_cFffP13cBgS_PolyInfo,
    (void*)onMagneGrab__9daPy_py_cFff,
    (void*)onFrollCrashFlg__9daPy_py_cFUci,
    (void*)getModelJointMtx__9daPy_py_cFUs,
    (void*)getHeadMtx__9daPy_py_cFv,
    (void*)setHookshotCarryOffset__9daPy_py_cFUiPC4cXyz,
    (void*)checkCutJumpCancelTurn__9daPy_py_cCFv,
    (void*)checkIronBallReturn__9daPy_py_cCFv,
    (void*)checkIronBallGroundStop__9daPy_py_cCFv,
    (void*)checkSingleBoarBattleSecondBowReady__9daPy_py_cCFv,
    (void*)checkPointSubWindowMode__9daPy_py_cCFv,
    (void*)setClothesChange__9daPy_py_cFi,
    (void*)setPlayerPosAndAngle__9daPy_py_cFPC4cXyzsi,
    (void*)setPlayerPosAndAngle__9daPy_py_cFPC4cXyzPC5csXyz,
    (void*)setPlayerPosAndAngle__9daPy_py_cFPA4_f,
    (void*)setThrowDamage__9daPy_py_cFsffiii,
    (void*)checkSetNpcTks__9daPy_py_cFP4cXyzii,
    (void*)setRollJump__9daPy_py_cFffs,
    (void*)playerStartCollisionSE__9daPy_py_cFUlUl,
    (void*)changeTextureAnime__9daPy_py_cFUsUsi,
    (void*)cancelChangeTextureAnime__9daPy_py_cFv,
    (void*)cancelDungeonWarpReadyNeck__9daPy_py_cFv,
    (void*)onSceneChangeArea__9daPy_py_cFUcUcP10fopAc_ac_c,
    (void*)onSceneChangeAreaJump__9daPy_py_cFUcUcP10fopAc_ac_c,
    (void*)onSceneChangeDead__9daPy_py_cFUci,
    (void*)checkHorseRide__9daPy_py_cCFv,
    (void*)checkBoarRide__9daPy_py_cCFv,
    (void*)checkCanoeRide__9daPy_py_cCFv,
    (void*)checkBoardRide__9daPy_py_cCFv,
    (void*)checkSpinnerRide__9daPy_py_cCFv,
    (void*)getSpinnerActor__9daPy_py_cFv,
    (void*)checkHorseRideNotReady__9daPy_py_cCFv,
    (void*)checkArrowChargeEnd__9daPy_py_cCFv,
    (void*)getSearchBallScale__9daPy_py_cCFv,
    (void*)checkFastShotTime__9daPy_py_cFv,
    (void*)checkNoEquipItem__9daPy_py_cCFv,
    (void*)checkFireMaterial__9daPy_py_cCFv,
    (void*)checkKandelaarSwing__9daPy_py_cCFi,
    (void*)getBoardCutTurnOffsetAngleY__9daPy_py_cCFv,
    (void*)getMagneHitPos__9daPy_py_cFv,
    (void*)getMagneBootsTopVec__9daPy_py_cFv,
    (void*)getKandelaarFlamePos__9daPy_py_cFv,
    (void*)checkUseKandelaar__9daPy_py_cFi,
    (void*)setDkCaught__9daPy_py_cFP10fopAc_ac_c,
    (void*)onPressedDamage__9daPy_py_cFRC4cXyzs,
    (void*)checkPriActorOwn__9daPy_py_cCFPC10fopAc_ac_c,
    (void*)onWolfEnemyBiteAll__9daPy_py_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2,
    (void*)checkWolfEnemyBiteAllOwn__9daPy_py_cCFPC10fopAc_ac_c,
    (void*)setWolfEnemyHangBiteAngle__9daPy_py_cFs,
    (void*)setKandelaarMtx__9daPy_py_cFPA4_fii,
    (void*)getStickAngleFromPlayerShape__9daPy_py_cCFPs,
    (void*)checkSpinnerPathMove__9daPy_py_cFv,
    (void*)checkSpinnerTriggerAttack__9daPy_py_cFv,
    (void*)onSpinnerPathForceRemove__9daPy_py_cFv,
    (void*)getIronBallBgHit__9daPy_py_cCFv,
    (void*)getIronBallCenterPos__9daPy_py_cFv,
    (void*)checkCanoeFishingGetLeft__9daPy_py_cCFv,
    (void*)checkCanoeFishingGetRight__9daPy_py_cCFv,
    (void*)checkBeeChildDrink__9daPy_py_cCFv,
    (void*)skipPortalObjWarp__9daPy_py_cFv,
    (void*)checkTreasureRupeeReturn__9daPy_py_cCFi,
    (void*)setSumouReady__9daPy_py_cFP10fopAc_ac_c,
    (void*)checkAcceptDungeonWarpAlink__9daPy_py_cFi,
    (void*)getSumouCounter__9daPy_py_cCFv,
    (void*)checkSumouWithstand__9daPy_py_cCFv,
    (void*)cancelGoronThrowEvent__9daPy_py_cFv,
    (void*)setSumouGraspCancelCount__9daPy_py_cFi,
    (void*)setSumouPushBackDirection__9daPy_py_cFs,
    (void*)setSumouLoseHeadUp__9daPy_py_cFv,
    (void*)getGiantPuzzleAimAngle__9daPy_py_cCFv,
    (void*)setGoronSideMove__9daPy_py_cFP10fopAc_ac_c,
    (void*)setCargoCarry__9daPy_py_cFP10fopAc_ac_c,
    (void*)getDpdFarFlg__9daPy_py_cCFv,
    (void*)getHookshotTopPos__9daPy_py_cFv,
    (void*)checkHookshotReturnMode__9daPy_py_cCFv,
    (void*)checkHookshotShootReturnMode__9daPy_py_cCFv,
    (void*)checkOctaIealHang__9daPy_py_cCFv,
    (void*)cancelOctaIealHang__9daPy_py_cFv,
    (void*)cancelDragonHangBackJump__9daPy_py_cFv,
    (void*)setOctaIealWildHang__9daPy_py_cFv,
    (void*)checkDragonHangRide__9daPy_py_cCFv,
    (void*)changeDragonActor__9daPy_py_cFP10fopAc_ac_c,
    (void*)getClothesChangeWaitTimer__9daPy_py_cCFv,
    (void*)getShieldChangeWaitTimer__9daPy_py_cCFv,
    (void*)getSwordChangeWaitTimer__9daPy_py_cCFv,
    (void*)checkMetamorphose__9daPy_py_cCFv,
    (void*)checkWolfDownAttackPullOut__9daPy_py_cCFv,
    (void*)checkBootsOrArmorHeavy__9daPy_py_cCFv,
    (void*)getBottleOpenAppearItem__9daPy_py_cCFv,
    (void*)checkItemSwordEquip__9daPy_py_cCFv,
    (void*)getSinkShapeOffset__9daPy_py_cCFv,
    (void*)checkSinkDead__9daPy_py_cCFv,
    (void*)checkHorseStart__9daPy_py_cFv,
    (void*)getWolfHowlMgrP__9daPy_py_cFv,
    (void*)checkWolfHowlSuccessAnime__9daPy_py_cCFv,
    (void*)checkCopyRodTopUse__9daPy_py_cFv,
    (void*)checkCopyRodEquip__9daPy_py_cCFv,
    (void*)checkCutJumpMode__9daPy_py_cCFv,
};

/* 803B321C-803B32B8 000C+90 s=2 e=0 z=0  None .data      __vt__12daAlinkHIO_c */
SECTION_DATA void* __vt__12daAlinkHIO_c[3 + 36 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12daAlinkHIO_cFv,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803B32B8-803B3564 02AC+00 s=2 e=0 z=0  None .data      __vt__9daAlink_c */
SECTION_DATA void* __vt__9daAlink_c[171] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)getMidnaAtnPos__9daAlink_cCFv,
    (void*)setMidnaMsgNum__9daAlink_cFP10fopAc_ac_cUs,
    (void*)getModelMtx__9daAlink_cFv,
    (void*)getInvMtx__9daAlink_cFv,
    (void*)getShadowTalkAtnPos__9daAlink_cFv,
    (void*)getGroundY__9daAlink_cFv,
    (void*)getLeftItemMatrix__9daAlink_cFv,
    (void*)getRightItemMatrix__9daAlink_cFv,
    (void*)getLeftHandMatrix__9daAlink_cFv,
    (void*)getRightHandMatrix__9daAlink_cFv,
    (void*)getLinkBackBone1Matrix__9daAlink_cFv,
    (void*)getWolfMouthMatrix__9daAlink_cFv,
    (void*)getWolfBackbone2Matrix__9daAlink_cFv,
    (void*)getBottleMtx__9daAlink_cFv,
    (void*)checkPlayerGuard__9daAlink_cCFv,
    (void*)checkPlayerFly__9daAlink_cCFv,
    (void*)checkFrontRoll__9daAlink_cCFv,
    (void*)checkWolfDash__9daAlink_cCFv,
    (void*)checkAutoJump__9daAlink_cCFv,
    (void*)checkSideStep__9daAlink_cCFv,
    (void*)checkWolfTriggerJump__9daAlink_cCFv,
    (void*)checkGuardBreakMode__9daAlink_cCFv,
    (void*)checkLv3Slide__9daAlink_cCFv,
    (void*)checkWolfHowlDemoMode__9daAlink_cCFv,
    (void*)checkChainBlockPushPull__9daAlink_cFv,
    (void*)checkElecDamage__9daAlink_cCFv,
    (void*)checkEmptyBottleSwing__9daAlink_cCFv,
    (void*)checkBottleSwingMode__9daAlink_cCFv,
    (void*)checkHawkWait__9daAlink_cCFv,
    (void*)checkGoatThrow__9daAlink_cCFv,
    (void*)checkGoatThrowAfter__9daAlink_cCFv,
    (void*)checkWolfTagLockJump__9daAlink_cCFv,
    (void*)checkWolfTagLockJumpLand__9daAlink_cCFv,
    (void*)checkWolfRope__9daAlink_cFv,
    (void*)checkWolfRopeHang__9daAlink_cCFv,
    (void*)checkRollJump__9daAlink_cCFv,
    (void*)checkGoronRideWait__9daAlink_cCFv,
    (void*)checkWolfChain__9daAlink_cCFv,
    (void*)checkWolfWait__9daAlink_cCFv,
    (void*)checkWolfJumpAttack__9daAlink_cCFv,
    (void*)checkWolfRSit__9daAlink_cCFv,
    (void*)checkBubbleFly__9daPy_py_cCFv,
    (void*)checkBottleDrinkEnd__9daAlink_cCFv,
    (void*)checkWolfDig__9daAlink_cCFv,
    (void*)checkCutCharge__9daAlink_cCFv,
    (void*)checkCutTurnCharge__9daAlink_cCFv,
    (void*)checkCutLargeJumpCharge__9daAlink_cCFv,
    (void*)getBokoFlamePos__9daPy_py_cFP4cXyz,
    (void*)checkComboCutTurn__9daAlink_cCFv,
    (void*)checkClimbMove__9daAlink_cCFv,
    (void*)checkGrassWhistle__9daAlink_cCFv,
    (void*)checkBoarRun__9daAlink_cCFv,
    (void*)checkFmChainPut__9daPy_py_cCFv,
    (void*)checkHorseElecDamage__9daPy_py_cCFv,
    (void*)getBaseAnimeFrameRate__9daAlink_cCFv,
    (void*)getBaseAnimeFrame__9daAlink_cCFv,
    (void*)setAnimeFrame__9daAlink_cFf,
    (void*)checkWolfLock__9daAlink_cCFP10fopAc_ac_c,
    (void*)cancelWolfLock__9daAlink_cFP10fopAc_ac_c,
    (void*)getAtnActorID__9daAlink_cCFv,
    (void*)getItemID__9daAlink_cCFv,
    (void*)getGrabActorID__9daAlink_cCFv,
    (void*)exchangeGrabActor__9daAlink_cFP10fopAc_ac_c,
    (void*)setForceGrab__9daAlink_cFP10fopAc_ac_cii,
    (void*)setForcePutPos__9daAlink_cFRC4cXyz,
    (void*)checkPlayerNoDraw__9daAlink_cFv,
    (void*)checkRopeTag__9daPy_py_cFv,
    (void*)voiceStart__9daAlink_cFUl,
    (void*)seStartOnlyReverb__9daAlink_cFUl,
    (void*)seStartOnlyReverbLevel__9daAlink_cFUl,
    (void*)setOutPower__9daAlink_cFfsi,
    (void*)setGrabCollisionOffset__9daAlink_cFffP13cBgS_PolyInfo,
    (void*)onMagneGrab__9daPy_py_cFff,
    (void*)onFrollCrashFlg__9daAlink_cFUci,
    (void*)getModelJointMtx__9daAlink_cFUs,
    (void*)getHeadMtx__9daAlink_cFv,
    (void*)setHookshotCarryOffset__9daAlink_cFUiPC4cXyz,
    (void*)checkCutJumpCancelTurn__9daAlink_cCFv,
    (void*)checkIronBallReturn__9daAlink_cCFv,
    (void*)checkIronBallGroundStop__9daAlink_cCFv,
    (void*)checkSingleBoarBattleSecondBowReady__9daAlink_cCFv,
    (void*)checkPointSubWindowMode__9daPy_py_cCFv,
    (void*)setClothesChange__9daAlink_cFi,
    (void*)setPlayerPosAndAngle__9daAlink_cFPC4cXyzsi,
    (void*)setPlayerPosAndAngle__9daAlink_cFPC4cXyzPC5csXyz,
    (void*)setPlayerPosAndAngle__9daAlink_cFPA4_f,
    (void*)setThrowDamage__9daAlink_cFsffiii,
    (void*)checkSetNpcTks__9daAlink_cFP4cXyzii,
    (void*)setRollJump__9daAlink_cFffs,
    (void*)playerStartCollisionSE__9daAlink_cFUlUl,
    (void*)changeTextureAnime__9daPy_py_cFUsUsi,
    (void*)cancelChangeTextureAnime__9daPy_py_cFv,
    (void*)cancelDungeonWarpReadyNeck__9daAlink_cFv,
    (void*)onSceneChangeArea__9daAlink_cFUcUcP10fopAc_ac_c,
    (void*)onSceneChangeAreaJump__9daAlink_cFUcUcP10fopAc_ac_c,
    (void*)onSceneChangeDead__9daAlink_cFUci,
    (void*)checkHorseRide__9daAlink_cCFv,
    (void*)checkBoarRide__9daAlink_cCFv,
    (void*)checkCanoeRide__9daAlink_cCFv,
    (void*)checkBoardRide__9daAlink_cCFv,
    (void*)checkSpinnerRide__9daAlink_cCFv,
    (void*)getSpinnerActor__9daAlink_cFv,
    (void*)checkHorseRideNotReady__9daAlink_cCFv,
    (void*)checkArrowChargeEnd__9daAlink_cCFv,
    (void*)getSearchBallScale__9daAlink_cCFv,
    (void*)checkFastShotTime__9daAlink_cFv,
    (void*)checkNoEquipItem__9daAlink_cCFv,
    (void*)checkFireMaterial__9daPy_py_cCFv,
    (void*)checkKandelaarSwing__9daAlink_cCFi,
    (void*)getBoardCutTurnOffsetAngleY__9daAlink_cCFv,
    (void*)getMagneHitPos__9daPy_py_cFv,
    (void*)getMagneBootsTopVec__9daAlink_cFv,
    (void*)getKandelaarFlamePos__9daAlink_cFv,
    (void*)checkUseKandelaar__9daAlink_cFi,
    (void*)setDkCaught__9daAlink_cFP10fopAc_ac_c,
    (void*)onPressedDamage__9daAlink_cFRC4cXyzs,
    (void*)checkPriActorOwn__9daAlink_cCFPC10fopAc_ac_c,
    (void*)onWolfEnemyBiteAll__9daAlink_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2,
    (void*)checkWolfEnemyBiteAllOwn__9daAlink_cCFPC10fopAc_ac_c,
    (void*)setWolfEnemyHangBiteAngle__9daAlink_cFs,
    (void*)setKandelaarMtx__9daAlink_cFPA4_fii,
    (void*)getStickAngleFromPlayerShape__9daAlink_cCFPs,
    (void*)checkSpinnerPathMove__9daAlink_cFv,
    (void*)checkSpinnerTriggerAttack__9daAlink_cFv,
    (void*)onSpinnerPathForceRemove__9daAlink_cFv,
    (void*)getIronBallBgHit__9daAlink_cCFv,
    (void*)getIronBallCenterPos__9daAlink_cFv,
    (void*)checkCanoeFishingGetLeft__9daAlink_cCFv,
    (void*)checkCanoeFishingGetRight__9daAlink_cCFv,
    (void*)checkBeeChildDrink__9daAlink_cCFv,
    (void*)skipPortalObjWarp__9daAlink_cFv,
    (void*)checkTreasureRupeeReturn__9daAlink_cCFi,
    (void*)setSumouReady__9daAlink_cFP10fopAc_ac_c,
    (void*)checkAcceptDungeonWarpAlink__9daAlink_cFi,
    (void*)getSumouCounter__9daAlink_cCFv,
    (void*)checkSumouWithstand__9daAlink_cCFv,
    (void*)cancelGoronThrowEvent__9daAlink_cFv,
    (void*)setSumouGraspCancelCount__9daAlink_cFi,
    (void*)setSumouPushBackDirection__9daAlink_cFs,
    (void*)setSumouLoseHeadUp__9daAlink_cFv,
    (void*)getGiantPuzzleAimAngle__9daAlink_cCFv,
    (void*)setGoronSideMove__9daAlink_cFP10fopAc_ac_c,
    (void*)setCargoCarry__9daAlink_cFP10fopAc_ac_c,
    (void*)getDpdFarFlg__9daPy_py_cCFv,
    (void*)getHookshotTopPos__9daAlink_cFv,
    (void*)checkHookshotReturnMode__9daAlink_cCFv,
    (void*)checkHookshotShootReturnMode__9daAlink_cCFv,
    (void*)checkOctaIealHang__9daAlink_cCFv,
    (void*)cancelOctaIealHang__9daAlink_cFv,
    (void*)cancelDragonHangBackJump__9daAlink_cFv,
    (void*)setOctaIealWildHang__9daAlink_cFv,
    (void*)checkDragonHangRide__9daAlink_cCFv,
    (void*)changeDragonActor__9daAlink_cFP10fopAc_ac_c,
    (void*)getClothesChangeWaitTimer__9daAlink_cCFv,
    (void*)getShieldChangeWaitTimer__9daAlink_cCFv,
    (void*)getSwordChangeWaitTimer__9daAlink_cCFv,
    (void*)checkMetamorphose__9daAlink_cCFv,
    (void*)checkWolfDownAttackPullOut__9daAlink_cCFv,
    (void*)checkBootsOrArmorHeavy__9daAlink_cCFv,
    (void*)getBottleOpenAppearItem__9daAlink_cCFv,
    (void*)checkItemSwordEquip__9daAlink_cCFv,
    (void*)getSinkShapeOffset__9daAlink_cCFv,
    (void*)checkSinkDead__9daAlink_cCFv,
    (void*)checkHorseStart__9daAlink_cFv,
    (void*)getWolfHowlMgrP__9daAlink_cFv,
    (void*)checkWolfHowlSuccessAnime__9daAlink_cCFv,
    (void*)checkCopyRodTopUse__9daAlink_cFv,
    (void*)checkCopyRodEquip__9daAlink_cCFv,
    (void*)checkCutJumpMode__9daAlink_cCFv,
};

/* 803B3564-803B3580 0010+0C s=2 e=0 z=0  None .data      __vt__16daAlink_matAnm_c */
SECTION_DATA void* __vt__16daAlink_matAnm_c[4 + 3 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__16daAlink_matAnm_cFv,
    (void*)calc__16daAlink_matAnm_cCFP11J3DMaterial,
    /* padding */
    NULL,
    NULL,
    NULL,
};

/* 800A4068-800A4820 07B8+00 s=1 e=0 z=0  None .text      createHeap__9daAlink_cFv */
//	800A4078: 803621D4 (_savegpr_27)
//	800A4080: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4084: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4090: 804061C0 (g_dComIfG_gameInfo)
//	800A4094: 804061C0 (g_dComIfG_gameInfo)
//	800A40A8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	800A40B8: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	800A40BC: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	800A40D0: 80392094 (d_a_d_a_alink__stringBase0)
//	800A40D4: 80392094 (d_a_d_a_alink__stringBase0)
//	800A40E0: 800A3F00 (initDemoModel__9daAlink_cFPP8J3DModelPCcUl)
//	800A4104: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4108: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4110: 800A3F98 (initDemoBck__9daAlink_cFPP13mDoExt_bckAnmPCc)
//	800A412C: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4130: 80392094 (d_a_d_a_alink__stringBase0)
//	800A413C: 800A3F00 (initDemoModel__9daAlink_cFPP8J3DModelPCcUl)
//	800A4160: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4164: 80392094 (d_a_d_a_alink__stringBase0)
//	800A416C: 800A3F98 (initDemoBck__9daAlink_cFPP13mDoExt_bckAnmPCc)
//	800A4188: 80392094 (d_a_d_a_alink__stringBase0)
//	800A418C: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4198: 800A3F00 (initDemoModel__9daAlink_cFPP8J3DModelPCcUl)
//	800A41B4: 80392094 (d_a_d_a_alink__stringBase0)
//	800A41B8: 80392094 (d_a_d_a_alink__stringBase0)
//	800A41C4: 800A3F00 (initDemoModel__9daAlink_cFPP8J3DModelPCcUl)
//	800A41E8: 80392094 (d_a_d_a_alink__stringBase0)
//	800A41EC: 80392094 (d_a_d_a_alink__stringBase0)
//	800A41F4: 800A3F98 (initDemoBck__9daAlink_cFPP13mDoExt_bckAnmPCc)
//	800A420C: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4210: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4218: 800A3F98 (initDemoBck__9daAlink_cFPP13mDoExt_bckAnmPCc)
//	800A4248: 8000D990 (changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform)
//	800A4250: 80126650 (create__15daAlink_sight_cFv)
//	800A4268: 802CEC4C (__nw__FUl)
//	800A4274: 80140B88 (__ct__12daAlinkHIO_cFv)
//	800A42A0: 800A3E30 (initModel__9daAlink_cFUsUl)
//	800A42C4: 800A3E30 (initModel__9daAlink_cFUsUl)
//	800A42EC: 800A3E98 (initModelEnv__9daAlink_cFUsUl)
//	800A4310: 800A3E30 (initModel__9daAlink_cFUsUl)
//	800A4334: 800A3E98 (initModelEnv__9daAlink_cFUsUl)
//	800A4350: 802CECC4 (__nwa__FUl)
//	800A4364: 80361F14 (__construct_new_array)
//	800A437C: 802CECC4 (__nwa__FUl)
//	800A4394: 802CEC4C (__nw__FUl)
//	800A43A8: 80452CC0 (lit_6108)
//	800A43EC: 802CEC4C (__nw__FUl)
//	800A43FC: 803A3468 (__vt__10J3DMtxCalc)
//	800A4400: 803A3468 (__vt__10J3DMtxCalc)
//	800A4408: 803A338C (__vt__19J3DMtxCalcNoAnmBase)
//	800A440C: 803A338C (__vt__19J3DMtxCalcNoAnmBase)
//	800A4414: 803A3360 (data_803A3360)
//	800A4418: 803A3360 (data_803A3360)
//	800A4420: 803A33E4 (__vt__25mDoExt_MtxCalcAnmBlendTbl)
//	800A4424: 803A33E4 (__vt__25mDoExt_MtxCalcAnmBlendTbl)
//	800A4444: 80452CC0 (lit_6108)
//	800A4478: 803A33B8 (__vt__28mDoExt_MtxCalcAnmBlendTblOld)
//	800A447C: 803A33B8 (__vt__28mDoExt_MtxCalcAnmBlendTblOld)
//	800A44A4: 802CEC4C (__nw__FUl)
//	800A44B4: 803A3468 (__vt__10J3DMtxCalc)
//	800A44B8: 803A3468 (__vt__10J3DMtxCalc)
//	800A44C0: 803A338C (__vt__19J3DMtxCalcNoAnmBase)
//	800A44C4: 803A338C (__vt__19J3DMtxCalcNoAnmBase)
//	800A44CC: 803A3360 (data_803A3360)
//	800A44D0: 803A3360 (data_803A3360)
//	800A44D8: 803A33E4 (__vt__25mDoExt_MtxCalcAnmBlendTbl)
//	800A44DC: 803A33E4 (__vt__25mDoExt_MtxCalcAnmBlendTbl)
//	800A44FC: 80452CC0 (lit_6108)
//	800A4530: 803A33B8 (__vt__28mDoExt_MtxCalcAnmBlendTblOld)
//	800A4534: 803A33B8 (__vt__28mDoExt_MtxCalcAnmBlendTblOld)
//	800A4564: 802CEC4C (__nw__FUl)
//	800A4570: 803CEE60 (__vt__14J3DMaterialAnm)
//	800A4574: 803CEE60 (__vt__14J3DMaterialAnm)
//	800A4580: 8003B2F4 (__ct__14J3DMatColorAnmFv)
//	800A4584: 8003B2F4 (__ct__14J3DMatColorAnmFv)
//	800A4588: 8003B2B8 (__dt__14J3DMatColorAnmFv)
//	800A458C: 8003B2B8 (__dt__14J3DMatColorAnmFv)
//	800A4598: 80361D60 (__construct_array)
//	800A45A0: 8003B2A0 (__ct__12J3DTexMtxAnmFv)
//	800A45A4: 8003B2A0 (__ct__12J3DTexMtxAnmFv)
//	800A45A8: 8003B264 (__dt__12J3DTexMtxAnmFv)
//	800A45AC: 8003B264 (__dt__12J3DTexMtxAnmFv)
//	800A45B8: 80361D60 (__construct_array)
//	800A45C0: 8003B240 (__ct__11J3DTexNoAnmFv)
//	800A45C4: 8003B240 (__ct__11J3DTexNoAnmFv)
//	800A45C8: 8003B1F8 (__dt__11J3DTexNoAnmFv)
//	800A45CC: 8003B1F8 (__dt__11J3DTexNoAnmFv)
//	800A45D8: 80361D60 (__construct_array)
//	800A45E0: 8003B1E0 (__ct__14J3DTevColorAnmFv)
//	800A45E4: 8003B1E0 (__ct__14J3DTevColorAnmFv)
//	800A45E8: 8003B1A4 (__dt__14J3DTevColorAnmFv)
//	800A45EC: 8003B1A4 (__dt__14J3DTevColorAnmFv)
//	800A45F8: 80361D60 (__construct_array)
//	800A4600: 8003B18C (__ct__15J3DTevKColorAnmFv)
//	800A4604: 8003B18C (__ct__15J3DTevKColorAnmFv)
//	800A4608: 8003B150 (__dt__15J3DTevKColorAnmFv)
//	800A460C: 8003B150 (__dt__15J3DTevKColorAnmFv)
//	800A4618: 80361D60 (__construct_array)
//	800A4620: 8032C320 (initialize__14J3DMaterialAnmFv)
//	800A4624: 803B3564 (__vt__16daAlink_matAnm_c)
//	800A4628: 803B3564 (__vt__16daAlink_matAnm_c)
//	800A4634: 8009D8E4 (init__16daAlink_matAnm_cFv)
//	800A4674: 8015EDC4 (mallocBuffer__14daPy_anmHeap_cFv)
//	800A4690: 802CECEC (__nwa__FUli)
//	800A46B0: 8015EDC4 (mallocBuffer__14daPy_anmHeap_cFv)
//	800A46C8: 8015EDC4 (mallocBuffer__14daPy_anmHeap_cFv)
//	800A46E0: 8015EDC4 (mallocBuffer__14daPy_anmHeap_cFv)
//	800A46F4: 804061C0 (g_dComIfG_gameInfo)
//	800A46F8: 804061C0 (g_dComIfG_gameInfo)
//	800A470C: 802D5ECC (readIdxResource__10JKRArchiveFPvUlUl)
//	800A4718: 80337B40 (load__20J3DAnmLoaderDataBaseFPCv24J3DAnmLoaderDataBaseFlag)
//	800A472C: 80452CB8 (lit_6040)
//	800A473C: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	800A4754: 8015EDC4 (mallocBuffer__14daPy_anmHeap_cFv)
//	800A4778: 802CEC4C (__nw__FUl)
//	800A4784: 803A3354 (__vt__12J3DFrameCtrl)
//	800A4788: 803A3354 (__vt__12J3DFrameCtrl)
//	800A4794: 803283FC (init__12J3DFrameCtrlFs)
//	800A47B8: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	800A47BC: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	800A47C0: 80392094 (d_a_d_a_alink__stringBase0)
//	800A47C4: 80392094 (d_a_d_a_alink__stringBase0)
//	800A47D4: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	800A47F0: 80327A2C (setDeformData__8J3DModelFP13J3DDeformDataUl)
//	800A480C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::createHeap() {
    nofralloc
#include "asm/d/a/d_a_alink/createHeap__9daAlink_cFv.s"
}
#pragma pop

/* 800A4820-800A48F0 00D0+00 s=0 e=1 z=0  None .text      __dt__14J3DMaterialAnmFv */
//	800A4840: 803CEE60 (__vt__14J3DMaterialAnm)
//	800A4844: 803CEE60 (__vt__14J3DMaterialAnm)
//	800A4850: 8003B150 (__dt__15J3DTevKColorAnmFv)
//	800A4854: 8003B150 (__dt__15J3DTevKColorAnmFv)
//	800A4860: 80361CE8 (__destroy_arr)
//	800A4868: 8003B1A4 (__dt__14J3DTevColorAnmFv)
//	800A486C: 8003B1A4 (__dt__14J3DTevColorAnmFv)
//	800A4878: 80361CE8 (__destroy_arr)
//	800A4880: 8003B1F8 (__dt__11J3DTexNoAnmFv)
//	800A4884: 8003B1F8 (__dt__11J3DTexNoAnmFv)
//	800A4890: 80361CE8 (__destroy_arr)
//	800A4898: 8003B264 (__dt__12J3DTexMtxAnmFv)
//	800A489C: 8003B264 (__dt__12J3DTexMtxAnmFv)
//	800A48A8: 80361CE8 (__destroy_arr)
//	800A48B0: 8003B2B8 (__dt__14J3DMatColorAnmFv)
//	800A48B4: 8003B2B8 (__dt__14J3DMatColorAnmFv)
//	800A48C0: 80361CE8 (__destroy_arr)
//	800A48D0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMaterialAnm::~J3DMaterialAnm() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__14J3DMaterialAnmFv.s"
}
#pragma pop

/* 800A48F0-800A4910 0020+00 s=1 e=0 z=0  None .text      daAlink_createHeap__FP10fopAc_ac_c */
//	800A48FC: 800A4068 (createHeap__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_createHeap(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_createHeap__FP10fopAc_ac_c.s"
}
#pragma pop

/* 800A4910-800A4BC8 02B8+00 s=5 e=0 z=0  None .text      setSelectEquipItem__9daAlink_cFi */
//	800A4920: 803621D8 (_savegpr_28)
//	800A493C: 804061C0 (g_dComIfG_gameInfo)
//	800A4940: 804061C0 (g_dComIfG_gameInfo)
//	800A4964: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	800A4AF4: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	800A4B34: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800A4B44: 80101890 (checkZoraWearMaskDraw__9daAlink_cFv)
//	800A4BA4: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800A4BAC: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800A4BB4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSelectEquipItem(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSelectEquipItem__9daAlink_cFi.s"
}
#pragma pop

/* 800A4BC8-800A4C40 0078+00 s=2 e=0 z=0  None .text      checkBoarStart__9daAlink_cFv */
//	800A4BE4: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4BE8: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4BF0: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800A4C0C: 804061C0 (g_dComIfG_gameInfo)
//	800A4C10: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoarStart() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoarStart__9daAlink_cFv.s"
}
#pragma pop

/* 800A4C40-800A4CB4 0074+00 s=2 e=0 z=0  None .text      checkCanoeStart__9daAlink_cFv */
//	800A4C5C: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4C60: 80392094 (d_a_d_a_alink__stringBase0)
//	800A4C68: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800A4C80: 804061C0 (g_dComIfG_gameInfo)
//	800A4C84: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoeStart() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoeStart__9daAlink_cFv.s"
}
#pragma pop

/* 800A4CB4-800A54F4 0840+00 s=1 e=0 z=0  None .text      playerInit__9daAlink_cFv */
//	800A4CC4: 803621C0 (_savegpr_22)
//	800A4CCC: 803AF990 (cNullVec__6Z2Calc)
//	800A4CD0: 803AF990 (cNullVec__6Z2Calc)
//	800A4CD4: 80452CB8 (lit_6040)
//	800A4CDC: 800C0310 (checkDungeon__9daAlink_cFv)
//	800A4CE8: 800C02C8 (checkBossRoom__9daAlink_cFv)
//	800A4CFC: 80097EE0 (checkItemGet__FUci)
//	800A4D08: 804061C0 (g_dComIfG_gameInfo)
//	800A4D0C: 804061C0 (g_dComIfG_gameInfo)
//	800A4D1C: 80032FB8 (setItem__17dSv_player_item_cFiUc)
//	800A4D34: 8009D88C
//(daAlink_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf) 	800A4D38:
// 8009D88C (daAlink_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	800A4D3C: 8009D8B8
//(daAlink_coHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf) 	800A4D40:
// 8009D8B8 (daAlink_coHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	800A4D58: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	800A4D80: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	800A4DD4: 80452E68 (lit_14955)
//	800A4DD8: 8026F1F8 (SetH__8cM3dGCylFf)
//	800A4DE0: 80452E68 (lit_14955)
//	800A4DE4: 8026F1F8 (SetH__8cM3dGCylFf)
//	800A4DF0: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	800A4E04: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	800A4E18: 8015EE00 (createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE)
//	800A4E2C: 80126928 (changeWolf__9daAlink_cFv)
//	800A4E3C: 80126F3C (changeLink__9daAlink_cFi)
//	800A4E50: 8015EE00 (createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE)
//	800A4E58: 801401F8 (setShieldModel__9daAlink_cFv)
//	800A4E7C: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	800A4EB0: 800847D0 (Set__8dCcD_CpsFRC11dCcD_SrcCps)
//	800A4ED0: 800847D0 (Set__8dCcD_CpsFRC11dCcD_SrcCps)
//	800A4F04: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	800A4F20: 80076288 (Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir)
//	800A4F30: 80452D5C (lit_8322)
//	800A4F5C: 800773C0 (SetGndThinCellingOff__9dBgS_AcchFv)
//	800A4F6C: 800773EC (OnWallSort__9dBgS_AcchFv)
//	800A4F74: 80450690 (l_autoUpHeight)
//	800A4F78: 80452DBC (lit_10042)
//	800A4F7C: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	800A4F84: 80452E84 (lit_16037)
//	800A4F88: 80452DBC (lit_10042)
//	800A4F8C: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	800A4F98: 80452DBC (lit_10042)
//	800A4F9C: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	800A4FD4: 8015EE00 (createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE)
//	800A5024: 8015EE00 (createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE)
//	800A5040: 8015EE00 (createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE)
//	800A504C: 8015EE00 (createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE)
//	800A5058: 8015EE00 (createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE)
//	800A5084: 8015EE00 (createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE)
//	800A50A0: 8015EE00 (createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE)
//	800A50A8: 800BF4E0 (resetBasAnime__9daAlink_cFv)
//	800A50BC: 802C3638 (init__14Z2CreatureLinkFP3VecP3VecP3Vec)
//	800A50C8: 802C3710 (initKantera__14Z2CreatureLinkFP3Vec)
//	800A50D4: 802C3778 (setKanteraState__14Z2CreatureLinkFUc)
//	800A50E0: 80452C90 (l_arcName)
//	800A50E8: 804061C0 (g_dComIfG_gameInfo)
//	800A50EC: 804061C0 (g_dComIfG_gameInfo)
//	800A5100: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	800A5110: 80452C90 (l_arcName)
//	800A5120: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	800A5130: 8032B1D4 (searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP12J3DModelData)
//	800A513C: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	800A5148: 80452C90 (l_arcName)
//	800A5158: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	800A5168: 8032B1D4 (searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP12J3DModelData)
//	800A5174: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	800A5178: 80452C90 (l_arcName)
//	800A5188: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	800A5198: 8032B87C (searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData)
//	800A51A4: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800A51A8: 80452DA4 (lit_9138)
//	800A51C4: 800D1310 (offSwordModel__9daAlink_cFv)
//	800A51E8: 80101C94 (offOxygenTimer__9daAlink_cFv)
//	800A51F8: 804061C0 (g_dComIfG_gameInfo)
//	800A51FC: 804061C0 (g_dComIfG_gameInfo)
//	800A5218: 804061C0 (g_dComIfG_gameInfo)
//	800A521C: 804061C0 (g_dComIfG_gameInfo)
//	800A5228: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A5244: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A5268: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A5288: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A529C: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A52BC: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A52D0: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A52EC: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A5308: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A5328: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A533C: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A5358: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A5374: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A5390: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A53A0: 800463F0 (setStartDemo__18dEvent_exception_cFi)
//	800A53A8: 804061C0 (g_dComIfG_gameInfo)
//	800A53AC: 804061C0 (g_dComIfG_gameInfo)
//	800A53B4: 80046A58 (orderStartDemo__16dEvent_manager_cFv)
//	800A5408: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A540C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A5418: 80050C9C (init__7dPaPo_cFP9dBgS_Acchff)
//	800A5430: 8004F6B8 (setOldPosP__22dPa_hermiteEcallBack_cFPC4cXyzPC4cXyz)
//	800A5468: 80452CC0 (lit_6108)
//	800A5478: 801A7790 (dKy_plight_set__FP15LIGHT_INFLUENCE)
//	800A5484: 800A4910 (setSelectEquipItem__9daAlink_cFi)
//	800A5488: 80392094 (d_a_d_a_alink__stringBase0)
//	800A548C: 80392094 (d_a_d_a_alink__stringBase0)
//	800A5494: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800A54A0: 80392094 (d_a_d_a_alink__stringBase0)
//	800A54A4: 80392094 (d_a_d_a_alink__stringBase0)
//	800A54AC: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800A54B8: 80392094 (d_a_d_a_alink__stringBase0)
//	800A54BC: 80392094 (d_a_d_a_alink__stringBase0)
//	800A54C4: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800A54E0: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::playerInit() {
    nofralloc
#include "asm/d/a/d_a_alink/playerInit__9daAlink_cFv.s"
}
#pragma pop

/* 800A54F4-800A551C 0028+00 s=3 e=0 z=0  None .text      checkHorseStart__9daAlink_cFUli */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseStart(u32 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseStart__9daAlink_cFUli.s"
}
#pragma pop

/* 800A551C-800A5CC8 07AC+00 s=1 e=0 z=0  None .text      setStartProcInit__9daAlink_cFv */
//	800A552C: 803621C8 (_savegpr_24)
//	800A5534: 8038D658 (lit_3757)
//	800A5538: 8038D658 (lit_3757)
//	800A5548: 804061C0 (g_dComIfG_gameInfo)
//	800A554C: 804061C0 (g_dComIfG_gameInfo)
//	800A5564: 800A54F4 (checkHorseStart__9daAlink_cFUli)
//	800A558C: 800D72BC (setDamagePoint__9daAlink_cFiiii)
//	800A55B0: 800AF9A8 (setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800A55DC: 80392094 (d_a_d_a_alink__stringBase0)
//	800A55E0: 80392094 (d_a_d_a_alink__stringBase0)
//	800A55E8: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800A5618: 800C0678 (checkCastleTownUseItem__9daAlink_cFUs)
//	800A5624: 800C03A0 (checkCloudSea__9daAlink_cFv)
//	800A5640: 800A4C40 (checkCanoeStart__9daAlink_cFv)
//	800A5664: 800DE780 (checkBowAndSlingItem__9daAlink_cFi)
//	800A5684: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800A56A0: 800BF8D0 (setItemModel__9daAlink_cFv)
//	800A56BC: 80362084 (__ptmf_scall)
//	800A56C8: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800A56D0: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	800A56D4: 803DD470 (now__14mDoMtx_stack_c)
//	800A56D8: 803DD470 (now__14mDoMtx_stack_c)
//	800A56E4: 803464B0 (PSMTXCopy)
//	800A5700: 800ECB58 (initForceRideHorse__9daAlink_cFv)
//	800A5710: 800CF100 (procCoPeepSubjectivityInit__9daAlink_cFv)
//	800A5734: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800A5738: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800A5740: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800A574C: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
//	800A5760: 8011F360 (procDungeonWarpSceneStartInit__9daAlink_cFv)
//	800A5768: 804061C0 (g_dComIfG_gameInfo)
//	800A576C: 804061C0 (g_dComIfG_gameInfo)
//	800A5788: 8011FD4C (procCoWarpInit__9daAlink_cFii)
//	800A57B0: 8011FD4C (procCoWarpInit__9daAlink_cFii)
//	800A57F0: 800F2D84 (procHorseComebackInit__9daAlink_cFv)
//	800A580C: 80120500 (commonLargeDamageUpInit__9daAlink_cFiiss)
//	800A5834: 8013F4A8 (procWolfDigThroughInit__9daAlink_cFi)
//	800A5848: 800ECB58 (initForceRideHorse__9daAlink_cFv)
//	800A5850: 800F2D84 (procHorseComebackInit__9daAlink_cFv)
//	800A5864: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800A5888: 80134000 (procWolfTagJumpInit__9daAlink_cFP10fopAc_ac_c)
//	800A5898: 800C5E68 (procAutoJumpInit__9daAlink_cFi)
//	800A58BC: 8012E9C8 (procWolfAutoJumpInit__9daAlink_cFi)
//	800A58CC: 800C5E68 (procAutoJumpInit__9daAlink_cFi)
//	800A58D0: 80452F1C (lit_20991)
//	800A58D8: 80452CC0 (lit_6108)
//	800A58E8: 800A4C40 (checkCanoeStart__9daAlink_cFv)
//	800A58FC: 800F4C78 (procCanoeJumpRideInit__9daAlink_cFP10fopAc_ac_c)
//	800A5908: 800A4BC8 (checkBoarStart__9daAlink_cFv)
//	800A5918: 800ECAAC (initForceRideBoar__9daAlink_cFv)
//	800A5928: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800A5934: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800A596C: 804061C0 (g_dComIfG_gameInfo)
//	800A5970: 804061C0 (g_dComIfG_gameInfo)
//	800A59AC: 804061C0 (g_dComIfG_gameInfo)
//	800A59B0: 804061C0 (g_dComIfG_gameInfo)
//	800A5A10: 80392094 (d_a_d_a_alink__stringBase0)
//	800A5A14: 80392094 (d_a_d_a_alink__stringBase0)
//	800A5A1C: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800A5A34: 804061C0 (g_dComIfG_gameInfo)
//	800A5A38: 804061C0 (g_dComIfG_gameInfo)
//	800A5A54: 80452CC0 (lit_6108)
//	800A5A74: 804061C0 (g_dComIfG_gameInfo)
//	800A5A78: 804061C0 (g_dComIfG_gameInfo)
//	800A5A88: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800A5A98: 80102B1C (checkSwimAction__9daAlink_cFi)
//	800A5AB8: 80452C98 (lit_5943)
//	800A5AD0: 80452C98 (lit_5943)
//	800A5AFC: 8013871C (procWolfSwimMoveInit__9daAlink_cFv)
//	800A5B20: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	800A5B2C: 80104670 (procSwimMoveInit__9daAlink_cFv)
//	800A5B70: 8012D380 (procWolfMoveInit__9daAlink_cFv)
//	800A5B98: 800C36CC (procMoveInit__9daAlink_cFv)
//	800A5BAC: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800A5BC4: 804061C0 (g_dComIfG_gameInfo)
//	800A5BC8: 804061C0 (g_dComIfG_gameInfo)
//	800A5C18: 80137634 (procWolfLieMoveInit__9daAlink_cFi)
//	800A5C2C: 800F9474 (procCrawlMoveInit__9daAlink_cFss)
//	800A5C64: 8012D380 (procWolfMoveInit__9daAlink_cFv)
//	800A5C90: 800C36CC (procMoveInit__9daAlink_cFv)
//	800A5C9C: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800A5CA8: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800A5CB4: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setStartProcInit() {
    nofralloc
#include "asm/d/a/d_a_alink/setStartProcInit__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450FCC-80450FD0 0004+00 s=1 e=0 z=0  None .sbss      bgWaitFlg$58404 */
static u8 bgWaitFlg[4];

/* 80450FD0-80450FD8 0008+00 s=2 e=0 z=0  None .sbss      None */
static u8 struct_80450FD0[8];

/* 80453230-80453234 0004+00 s=1 e=0 z=0  None .sdata2    @58630 */
SECTION_SDATA2 static f32 lit_58630 = 7500.0f;

/* 80453234-80453238 0004+00 s=2 e=0 z=0  None .sdata2    @58631 */
SECTION_SDATA2 static f32 lit_58631 = 275.0f;

/* 800A5CC8-800A660C 0944+00 s=1 e=0 z=0  None .text      create__9daAlink_cFv */
//	800A5CD8: 803621C8 (_savegpr_24)
//	800A5CF4: 800CF380 (__ct__9daAlink_cFv)
//	800A5D04: 80450FD0 (struct_80450FD0)
//	800A5D14: 80450FCC (bgWaitFlg)
//	800A5D1C: 80450FD0 (struct_80450FD0)
//	800A5D20: 804061C0 (g_dComIfG_gameInfo)
//	800A5D24: 804061C0 (g_dComIfG_gameInfo)
//	800A5D48: 800A54F4 (checkHorseStart__9daAlink_cFUli)
//	800A5D54: 80392094 (d_a_d_a_alink__stringBase0)
//	800A5D58: 80392094 (d_a_d_a_alink__stringBase0)
//	800A5D60: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800A5D6C: 80450D64 (struct_80450D64)
//	800A5D7C: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	800A5D8C: 80453230 (lit_58630)
//	800A5DA0: 80450FCC (bgWaitFlg)
//	800A5DAC: 804061C0 (g_dComIfG_gameInfo)
//	800A5DB0: 804061C0 (g_dComIfG_gameInfo)
//	800A5DC4: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	800A5DC8: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	800A5DD0: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800A5DE0: 8002EEB0 (dComIfGs_setSelectEquipClothes__FUc)
//	800A5DF0: 800BB408 (checkMagicArmorHeavy__9daAlink_cCFv)
//	800A5E00: 8002EEB0 (dComIfGs_setSelectEquipClothes__FUc)
//	800A5E04: 804061C0 (g_dComIfG_gameInfo)
//	800A5E08: 804061C0 (g_dComIfG_gameInfo)
//	800A5E18: 800198C4 (fopAcM_setStageLayer__FPv)
//	800A5E24: 804061C0 (g_dComIfG_gameInfo)
//	800A5E28: 804061C0 (g_dComIfG_gameInfo)
//	800A5E58: 801089E8 (checkBossOctaIealRoom__9daAlink_cFv)
//	800A5E64: 8002F810 (dComIfGs_Wolf_Change_Check__Fv)
//	800A5E84: 80439A20 (sincosTable___5JMath)
//	800A5E88: 80439A20 (sincosTable___5JMath)
//	800A5EA0: 80452D10 (lit_7306)
//	800A5EAC: 80452DB0 (lit_10039)
//	800A5EEC: 80453234 (lit_58631)
//	800A5F00: 80452DE0 (lit_11673)
//	800A5F18: 804061C0 (g_dComIfG_gameInfo)
//	800A5F1C: 804061C0 (g_dComIfG_gameInfo)
//	800A5F40: 8013FF28 (setArcName__9daAlink_cFi)
//	800A5F54: 8013FFD8 (setOriginalHeap__9daAlink_cFPP10JKRExpHeapUl)
//	800A5F64: 8002CFC0 (dComIfG_resLoad__FP30request_of_phase_process_classPCcP7JKRHeap)
//	800A5F7C: 8013FF90 (setShieldArcName__9daAlink_cFv)
//	800A5F8C: 8013FFD8 (setOriginalHeap__9daAlink_cFPP10JKRExpHeapUl)
//	800A5F9C: 8002CFC0 (dComIfG_resLoad__FP30request_of_phase_process_classPCcP7JKRHeap)
//	800A5FB4: 800A48F0 (daAlink_createHeap__FP10fopAc_ac_c)
//	800A5FB8: 800A48F0 (daAlink_createHeap__FP10fopAc_ac_c)
//	800A5FC4: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	800A5FE0: 804061C0 (g_dComIfG_gameInfo)
//	800A5FE4: 804061C0 (g_dComIfG_gameInfo)
//	800A5FF8: 800A4CB4 (playerInit__9daAlink_cFv)
//	800A6000: 80450FCC (bgWaitFlg)
//	800A6008: 800A4C40 (checkCanoeStart__9daAlink_cFv)
//	800A6034: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	800A606C: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	800A6084: 804061C0 (g_dComIfG_gameInfo)
//	800A6088: 804061C0 (g_dComIfG_gameInfo)
//	800A6094: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	800A609C: 80452DA4 (lit_9138)
//	800A60BC: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	800A60D4: 8011F5D4 (daAlink_searchPortal__FP10fopAc_ac_cPv)
//	800A60D8: 8011F5D4 (daAlink_searchPortal__FP10fopAc_ac_cPv)
//	800A60E0: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800A6100: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800A6104: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800A610C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800A611C: 800A4C40 (checkCanoeStart__9daAlink_cFv)
//	800A6128: 800F3CD8 (daAlink_searchCanoe__FP10fopAc_ac_cPv)
//	800A612C: 800F3CD8 (daAlink_searchCanoe__FP10fopAc_ac_cPv)
//	800A6134: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800A6144: 800A4BC8 (checkBoarStart__9daAlink_cFv)
//	800A6150: 800EC724 (daAlink_searchBoar__FP10fopAc_ac_cPv)
//	800A6154: 800EC724 (daAlink_searchBoar__FP10fopAc_ac_cPv)
//	800A615C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800A618C: 8015F698 (checkCarryStartLightBallA__9daPy_py_cFv)
//	800A6198: 8015F730 (checkCarryStartLightBallB__9daPy_py_cFv)
//	800A61A4: 800E3880 (daAlink_searchLightBall__FP10fopAc_ac_cPv)
//	800A61A8: 800E3880 (daAlink_searchLightBall__FP10fopAc_ac_cPv)
//	800A61B0: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800A61C4: 804061C0 (g_dComIfG_gameInfo)
//	800A61C8: 804061C0 (g_dComIfG_gameInfo)
//	800A61F0: 800436F4 (setPtD__14dEvt_control_cFPv)
//	800A61F8: 80450FCC (bgWaitFlg)
//	800A61FC: 804061C0 (g_dComIfG_gameInfo)
//	800A6200: 804061C0 (g_dComIfG_gameInfo)
//	800A6218: 80034F80 (setRoom__13dSv_restart_cFRC4cXyzsSc)
//	800A6238: 800773D0 (ClrGndThinCellingOff__9dBgS_AcchFv)
//	800A6244: 80075100 (GetRoomId__4dBgSFRC13cBgS_PolyInfo)
//	800A6254: 800A662C (setRoomInfo__9daAlink_cFv)
//	800A625C: 800B14B4 (setWaterY__9daAlink_cFv)
//	800A6260: 80392094 (d_a_d_a_alink__stringBase0)
//	800A6264: 80392094 (d_a_d_a_alink__stringBase0)
//	800A626C: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800A6288: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	800A62A4: 80392094 (d_a_d_a_alink__stringBase0)
//	800A62A8: 80392094 (d_a_d_a_alink__stringBase0)
//	800A62B0: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800A62CC: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	800A62FC: 800AC610
//(getUnderUpperAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMPP15J3DAnmTransformPP15J3DAnmTransformiUl)
//	800A6328: 800A551C (setStartProcInit__9daAlink_cFv)
//	800A6338: 800A4910 (setSelectEquipItem__9daAlink_cFi)
//	800A6340: 800A8CE4 (setMatrix__9daAlink_cFv)
//	800A6348: 800AD170 (allAnimePlay__9daAlink_cFv)
//	800A6364: 800AFCF0 (playFaceTextureAnime__9daAlink_cFv)
//	800A637C: 800A9450 (setItemMatrix__9daAlink_cFi)
//	800A6388: 800A9F4C (setWolfItemMatrix__9daAlink_cFv)
//	800A6390: 800A8310 (setBodyPartPos__9daAlink_cFv)
//	800A6398: 800B154C (setHangWaterY__9daAlink_cFv)
//	800A63A4: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800A63B4: 800A87F8 (setAttentionPos__9daAlink_cFv)
//	800A63BC: 800BF9F0 (setItemActor__9daAlink_cFv)
//	800A63D8: 800C05DC (checkNotHeavyBootsStage__9daAlink_cFv)
//	800A63FC: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	800A640C: 800C03A0 (checkCloudSea__9daAlink_cFv)
//	800A642C: 802C3778 (setKanteraState__14Z2CreatureLinkFUc)
//	800A6430: 8015F698 (checkCarryStartLightBallA__9daPy_py_cFv)
//	800A643C: 8015F730 (checkCarryStartLightBallB__9daPy_py_cFv)
//	800A6448: 800E3880 (daAlink_searchLightBall__FP10fopAc_ac_cPv)
//	800A644C: 800E3880 (daAlink_searchLightBall__FP10fopAc_ac_cPv)
//	800A6454: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800A6498: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	800A64CC: 8002FAC0 (dComIfGp_TargetWarpPt_get__Fv)
//	800A64DC: 8002FAE8 (dComIfGp_TransportWarp_check__Fv)
//	800A650C: 802673F4 (__ct__5csXyzFsss)
//	800A6520: 800FFFFF (???)
//	800A6524: 800FFFFF (???)
//	800A6528: 804061C0 (g_dComIfG_gameInfo)
//	800A652C: 804061C0 (g_dComIfG_gameInfo)
//	800A6538: 80450D64 (struct_80450D64)
//	800A654C: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	800A6574: 804061C0 (g_dComIfG_gameInfo)
//	800A6578: 804061C0 (g_dComIfG_gameInfo)
//	800A6588: 80033EC8 (isFirstBit__21dSv_player_get_item_cCFUc)
//	800A659C: 80033EC8 (isFirstBit__21dSv_player_get_item_cCFUc)
//	800A65B0: 80033EC8 (isFirstBit__21dSv_player_get_item_cCFUc)
//	800A65BC: 804061C0 (g_dComIfG_gameInfo)
//	800A65C0: 804061C0 (g_dComIfG_gameInfo)
//	800A65D0: 80035200 (onSwitch__10dSv_info_cFii)
//	800A65D8: 804061C0 (g_dComIfG_gameInfo)
//	800A65DC: 804061C0 (g_dComIfG_gameInfo)
//	800A65EC: 800352B0 (offSwitch__10dSv_info_cFii)
//	800A65F8: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::create() {
    nofralloc
#include "asm/d/a/d_a_alink/create__9daAlink_cFv.s"
}
#pragma pop

/* 800A660C-800A662C 0020+00 s=1 e=0 z=0  None .text      daAlink_Create__FP10fopAc_ac_c */
//	800A6618: 800A5CC8 (create__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_Create(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_Create__FP10fopAc_ac_c.s"
}
#pragma pop

/* 800A662C-800A67E0 01B4+00 s=2 e=0 z=0  None .text      setRoomInfo__9daAlink_cFv */
//	800A663C: 803621DC (_savegpr_29)
//	800A6650: 804061C0 (g_dComIfG_gameInfo)
//	800A6654: 804061C0 (g_dComIfG_gameInfo)
//	800A6660: 80075100 (GetRoomId__4dBgSFRC13cBgS_PolyInfo)
//	800A667C: 8002D06C (dComIfGp_getReverb__Fi)
//	800A6690: 80026FE8 (dStage_RoomCheck__FP11cBgS_GndChk)
//	800A66A4: 804061C0 (g_dComIfG_gameInfo)
//	800A66A8: 804061C0 (g_dComIfG_gameInfo)
//	800A66B8: 80074BE8 (GetPolyColor__4dBgSFRC13cBgS_PolyInfo)
//	800A66C8: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	800A66D8: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	800A66E8: 80074CBC (GetSpecialCode__4dBgSFRC13cBgS_PolyInfo)
//	800A6730: 80074EA0 (GetPolyAtt1__4dBgSFRC13cBgS_PolyInfo)
//	800A675C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800A679C: 80452CB8 (lit_6040)
//	800A67CC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRoomInfo() {
    nofralloc
#include "asm/d/a/d_a_alink/setRoomInfo__9daAlink_cFv.s"
}
#pragma pop

/* 800A67E0-800A6B0C 032C+00 s=1 e=0 z=0  None .text      setShapeAngleOnGround__9daAlink_cFv */
//	800A680C: 80452CC0 (lit_6108)
//	800A681C: 80452CB8 (lit_6040)
//	800A6840: 803A37C0 (__vt__8cM3dGPla)
//	800A6844: 803A37C0 (__vt__8cM3dGPla)
//	800A6850: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800A6854: 803DD470 (now__14mDoMtx_stack_c)
//	800A6858: 803DD470 (now__14mDoMtx_stack_c)
//	800A6860: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800A6864: 803DD470 (now__14mDoMtx_stack_c)
//	800A6868: 803DD470 (now__14mDoMtx_stack_c)
//	800A686C: 8038FA78 (l_crawlFrontUpOffset)
//	800A6870: 8038FA78 (l_crawlFrontUpOffset)
//	800A6878: 80346D6C (PSMTXMultVec)
//	800A687C: 803DD470 (now__14mDoMtx_stack_c)
//	800A6880: 803DD470 (now__14mDoMtx_stack_c)
//	800A6884: 8038FA90 (l_crawlBackUpOffset)
//	800A6888: 8038FA90 (l_crawlBackUpOffset)
//	800A6890: 80346D6C (PSMTXMultVec)
//	800A689C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800A68A0: 804061C0 (g_dComIfG_gameInfo)
//	800A68A4: 804061C0 (g_dComIfG_gameInfo)
//	800A68B4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800A68BC: 80452DA4 (lit_9138)
//	800A68D8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800A68F4: 80452CBC (lit_6041)
//	800A6900: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800A690C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800A6914: 80452DA4 (lit_9138)
//	800A6930: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800A694C: 80452CBC (lit_6041)
//	800A695C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A697C: 80267150 (atan2sY_XZ__4cXyzCFv)
//	800A6988: 80270E24 (cLib_distanceAngleS__Fss)
//	800A6994: 80452CC0 (lit_6108)
//	800A69B4: 80452CA4 (lit_6021)
//	800A69C4: 80452CB0 (lit_6025)
//	800A6A00: 80452CB0 (lit_6025)
//	800A6A34: 803A37C0 (__vt__8cM3dGPla)
//	800A6A38: 803A37C0 (__vt__8cM3dGPla)
//	800A6A48: 80452CB0 (lit_6025)
//	800A6A90: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800A6A98: 80452CB0 (lit_6025)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShapeAngleOnGround() {
    nofralloc
#include "asm/d/a/d_a_alink/setShapeAngleOnGround__9daAlink_cFv.s"
}
#pragma pop

/* 800A6B0C-800A6DCC 02C0+00 s=1 e=0 z=0  None .text      setStepsOffset__9daAlink_cFv */
//	800A6B28: 80452CC0 (lit_6108)
//	800A6B34: 80452C98 (lit_5943)
//	800A6B38: 80452C9C (lit_5944)
//	800A6B3C: 80452D3C (lit_7808)
//	800A6B40: 8026F97C (cLib_addCalc__FPfffff)
//	800A6B50: 80452CB8 (lit_6040)
//	800A6B68: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800A6B70: 80439A20 (sincosTable___5JMath)
//	800A6B74: 80439A20 (sincosTable___5JMath)
//	800A6BA8: 80450690 (l_autoUpHeight)
//	800A6BD4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800A6BD8: 804061C0 (g_dComIfG_gameInfo)
//	800A6BDC: 804061C0 (g_dComIfG_gameInfo)
//	800A6BE8: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800A6C04: 80452CB8 (lit_6040)
//	800A6C18: 80452DA8 (lit_9652)
//	800A6C38: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A6C58: 80452CC0 (lit_6108)
//	800A6C68: 80347138 (PSVECSquareMag)
//	800A6C6C: 80452CC0 (lit_6108)
//	800A6C7C: 80452CE8 (lit_6846)
//	800A6C84: 80452CF0 (lit_6847)
//	800A6CCC: 80452CF8 (lit_6848)
//	800A6CD8: 80450AE0 (__float_nan)
//	800A6CDC: 80450AE0 (__float_nan)
//	800A6D48: 80450AE0 (__float_nan)
//	800A6D4C: 80450AE0 (__float_nan)
//	800A6D5C: 80452CC0 (lit_6108)
//	800A6D70: 80452DA8 (lit_9652)
//	800A6D80: 80450690 (l_autoUpHeight)
//	800A6D84: 80450694 (l_autoDownHeight)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setStepsOffset() {
    nofralloc
#include "asm/d/a/d_a_alink/setStepsOffset__9daAlink_cFv.s"
}
#pragma pop

/* 800A6DCC-800A7050 0284+00 s=1 e=0 z=0  None .text      iceSlipBgCheck__9daAlink_cFv */
//	800A6E14: 80452CC0 (lit_6108)
//	800A6E24: 80347138 (PSVECSquareMag)
//	800A6E28: 80452CC0 (lit_6108)
//	800A6E38: 80452CE8 (lit_6846)
//	800A6E40: 80452CF0 (lit_6847)
//	800A6E88: 80452CF8 (lit_6848)
//	800A6E94: 80450AE0 (__float_nan)
//	800A6E98: 80450AE0 (__float_nan)
//	800A6F04: 80450AE0 (__float_nan)
//	800A6F08: 80450AE0 (__float_nan)
//	800A6F14: 80452DA0 (lit_9054)
//	800A6F24: 80452D30 (lit_7625)
//	800A6F70: 80267128 (atan2sX_Z__4cXyzCFv)
//	800A6F7C: 80452E68 (lit_14955)
//	800A6F84: 80439A20 (sincosTable___5JMath)
//	800A6F88: 80439A20 (sincosTable___5JMath)
//	800A6FA8: 80452CB8 (lit_6040)
//	800A6FE8: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800A6FF8: 80075D0C (dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::iceSlipBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/iceSlipBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* 800A7050-800A7358 0308+00 s=1 e=0 z=0  None .text      setIceSlipSpeed__9daAlink_cFv */
//	800A70A8: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800A70C0: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800A70F8: 80452DA0 (lit_9054)
//	800A70FC: 80452CB8 (lit_6040)
//	800A7100: 80452C98 (lit_5943)
//	800A7108: 8045321C (lit_55847)
//	800A710C: 80452C98 (lit_5943)
//	800A7110: 80452EAC (lit_16641)
//	800A7118: 80452CC0 (lit_6108)
//	800A7120: 80452D50 (lit_8247)
//	800A7128: 8026F97C (cLib_addCalc__FPfffff)
//	800A7130: 80452CC0 (lit_6108)
//	800A7138: 80452D50 (lit_8247)
//	800A7140: 8026F97C (cLib_addCalc__FPfffff)
//	800A7150: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A7170: 80452CC0 (lit_6108)
//	800A7180: 80347138 (PSVECSquareMag)
//	800A7184: 80452CC0 (lit_6108)
//	800A7194: 80452CE8 (lit_6846)
//	800A719C: 80452CF0 (lit_6847)
//	800A71E4: 80452CF8 (lit_6848)
//	800A71F0: 80450AE0 (__float_nan)
//	800A71F4: 80450AE0 (__float_nan)
//	800A7260: 80450AE0 (__float_nan)
//	800A7264: 80450AE0 (__float_nan)
//	800A7268: 80452CE0 (lit_6845)
//	800A7280: 803470D8 (PSVECScale)
//	800A7290: 80266B84 (__ml__4cXyzCFf)
//	800A72A0: 80347090 (PSVECAdd)
//	800A72AC: 80452CB8 (lit_6040)
//	800A72B4: 80266B84 (__ml__4cXyzCFf)
//	800A72C4: 80347090 (PSVECAdd)
//	800A72F0: 80266F48 (normalizeZP__4cXyzFv)
//	800A72FC: 80452D78 (lit_8676)
//	800A7300: 80266B84 (__ml__4cXyzCFf)
//	800A7310: 80347090 (PSVECAdd)
//	800A7318: 80452CC0 (lit_6108)
//	800A7324: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIceSlipSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/setIceSlipSpeed__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453238-8045323C 0004+00 s=3 e=0 z=0  None .sdata2    @59593 */
SECTION_SDATA2 static f32 lit_59593 = 0.0054931640625f;

/* 8045323C-80453240 0004+00 s=1 e=0 z=0  None .sdata2    @59594 */
SECTION_SDATA2 static f32 lit_59594 = 29.899999618530273f;

/* 80453240-80453244 0004+00 s=1 e=0 z=0  None .sdata2    @59595 */
SECTION_SDATA2 static f32 lit_59595 = 0.016887418925762177f;

/* 800A7358-800A7950 05F8+00 s=1 e=0 z=0  None .text      setPolygonSpeed__9daAlink_cFv */
//	800A7378: 803621DC (_savegpr_29)
//	800A7380: 8038D658 (lit_3757)
//	800A7384: 8038D658 (lit_3757)
//	800A7394: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800A73C0: 803A37C0 (__vt__8cM3dGPla)
//	800A73C4: 803A37C0 (__vt__8cM3dGPla)
//	800A73FC: 80430CF4 (Zero__4cXyz)
//	800A7400: 80430CF4 (Zero__4cXyz)
//	800A7430: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800A7440: 80452CE0 (lit_6845)
//	800A7474: 8001D9A8 (fopAcM_getWaterStream__FPC4cXyzRC13cBgS_PolyInfoP4cXyzPii)
//	800A7498: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800A74A4: 80430CF4 (Zero__4cXyz)
//	800A74A8: 80430CF4 (Zero__4cXyz)
//	800A74C0: 80452C98 (lit_5943)
//	800A74FC: 80452CB8 (lit_6040)
//	800A7510: 80267128 (atan2sX_Z__4cXyzCFv)
//	800A7524: 80439A20 (sincosTable___5JMath)
//	800A7528: 80439A20 (sincosTable___5JMath)
//	800A753C: 80452CC0 (lit_6108)
//	800A754C: 80452DF8 (lit_13700)
//	800A7554: 80452CB0 (lit_6025)
//	800A7578: 80452C98 (lit_5943)
//	800A7598: 803470D8 (PSVECScale)
//	800A75A0: 80347138 (PSVECSquareMag)
//	800A75AC: 80347138 (PSVECSquareMag)
//	800A75B8: 80452D3C (lit_7808)
//	800A75C0: 80452CC4 (lit_6109)
//	800A75D4: 80452CB0 (lit_6025)
//	800A75F0: 803470D8 (PSVECScale)
//	800A75F8: 80347138 (PSVECSquareMag)
//	800A7604: 80347138 (PSVECSquareMag)
//	800A7610: 80452CC4 (lit_6109)
//	800A7618: 80452CB8 (lit_6040)
//	800A7624: 80452C98 (lit_5943)
//	800A762C: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	800A764C: 804061C0 (g_dComIfG_gameInfo)
//	800A7650: 804061C0 (g_dComIfG_gameInfo)
//	800A7660: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800A7678: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800A7688: 80439A20 (sincosTable___5JMath)
//	800A768C: 80439A20 (sincosTable___5JMath)
//	800A76A8: 80452CC0 (lit_6108)
//	800A76BC: 80347138 (PSVECSquareMag)
//	800A76C0: 80452CC0 (lit_6108)
//	800A76D0: 80452CE8 (lit_6846)
//	800A76D8: 80452CF0 (lit_6847)
//	800A7720: 80452CF8 (lit_6848)
//	800A772C: 80450AE0 (__float_nan)
//	800A7730: 80450AE0 (__float_nan)
//	800A779C: 80450AE0 (__float_nan)
//	800A77A0: 80450AE0 (__float_nan)
//	800A77A8: 80267674 (cM_atan2s__Fff)
//	800A77B0: 80452CB0 (lit_6025)
//	800A77CC: 80453238 (lit_59593)
//	800A77D4: 8045323C (lit_59594)
//	800A77DC: 80452CC0 (lit_6108)
//	800A77EC: 80266F48 (normalizeZP__4cXyzFv)
//	800A77F0: 80452ED4 (lit_18929)
//	800A77F8: 80452CB0 (lit_6025)
//	800A783C: 8045323C (lit_59594)
//	800A7890: 80453240 (lit_59595)
//	800A789C: 80452CB8 (lit_6040)
//	800A78B4: 80452C98 (lit_5943)
//	800A78C0: 803470D8 (PSVECScale)
//	800A78CC: 80452C98 (lit_5943)
//	800A78D0: 80452CB8 (lit_6040)
//	800A78D4: 80452DF8 (lit_13700)
//	800A78D8: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	800A78E0: 80430CF4 (Zero__4cXyz)
//	800A78E4: 80430CF4 (Zero__4cXyz)
//	800A78FC: 803A37C0 (__vt__8cM3dGPla)
//	800A7900: 803A37C0 (__vt__8cM3dGPla)
//	800A790C: 80430CF4 (Zero__4cXyz)
//	800A7910: 80430CF4 (Zero__4cXyz)
//	800A793C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setPolygonSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/setPolygonSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800A7950-800A79EC 009C+00 s=4 e=0 z=0  None .text      checkWindSpeedOnAngle__9daAlink_cCFv */
//	800A7974: 80452CC0 (lit_6108)
//	800A7984: 80347138 (PSVECSquareMag)
//	800A7988: 80452CB8 (lit_6040)
//	800A79A4: 80270E24 (cLib_distanceAngleS__Fss)
//	800A79C0: 800B9398 (checkWindDashAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWindSpeedOnAngle() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWindSpeedOnAngle__9daAlink_cCFv.s"
}
#pragma pop

/* 800A79EC-800A7A5C 0070+00 s=2 e=0 z=0  None .text      checkWindSpeedOnAngleAnime__9daAlink_cCFi
 */
//	800A79FC: 803621DC (_savegpr_29)
//	800A7A0C: 800A7950 (checkWindSpeedOnAngle__9daAlink_cCFv)
//	800A7A48: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWindSpeedOnAngleAnime(int param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWindSpeedOnAngleAnime__9daAlink_cCFi.s"
}
#pragma pop

/* 800A7A5C-800A7ABC 0060+00 s=7 e=0 z=0  None .text      checkDashAnime__9daAlink_cCFv */
//	800A7A7C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A7A90: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDashAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkDashAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800A7ABC-800A7CB0 01F4+00 s=1 e=0 z=0  None .text      checkWindWallRate__9daAlink_cFRC4cXyz */
//	800A7ADC: 80452C98 (lit_5943)
//	800A7B00: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A7B04: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A7B0C: 80266B84 (__ml__4cXyzCFf)
//	800A7B1C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A7B44: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800A7B50: 804061C0 (g_dComIfG_gameInfo)
//	800A7B54: 804061C0 (g_dComIfG_gameInfo)
//	800A7B60: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800A7B74: 8034739C (PSVECSquareDistance)
//	800A7B78: 80452CC0 (lit_6108)
//	800A7B88: 80452CE8 (lit_6846)
//	800A7B90: 80452CF0 (lit_6847)
//	800A7BD8: 80452CF8 (lit_6848)
//	800A7BE4: 80450AE0 (__float_nan)
//	800A7BE8: 80450AE0 (__float_nan)
//	800A7C54: 80450AE0 (__float_nan)
//	800A7C58: 80450AE0 (__float_nan)
//	800A7C5C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A7C60: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A7C68: 80452CB8 (lit_6040)
//	800A7C80: 80452CC0 (lit_6108)
//	800A7C94: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWindWallRate(cXyz const& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWindWallRate__9daAlink_cFRC4cXyz.s"
}
#pragma pop

/* 800A7CB0-800A8310 0660+00 s=1 e=0 z=0  None .text      setWindSpeed__9daAlink_cFv */
//	800A7CC8: 803621DC (_savegpr_29)
//	800A7CEC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	800A7CFC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	800A7D0C: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	800A7D28: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	800A7D70: 80452CC0 (lit_6108)
//	800A7D80: 80347138 (PSVECSquareMag)
//	800A7D84: 80452CC0 (lit_6108)
//	800A7D94: 80452CE8 (lit_6846)
//	800A7D9C: 80452CF0 (lit_6847)
//	800A7DE4: 80452CF8 (lit_6848)
//	800A7DF0: 80450AE0 (__float_nan)
//	800A7DF4: 80450AE0 (__float_nan)
//	800A7E60: 80450AE0 (__float_nan)
//	800A7E64: 80450AE0 (__float_nan)
//	800A7E70: 80452CB8 (lit_6040)
//	800A7E80: 800E3F20 (checkGrabRooster__9daAlink_cFv)
//	800A7E90: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800A7EA0: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800A7EB4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A7EE0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800A7EFC: 80452CC0 (lit_6108)
//	800A7F0C: 80266F48 (normalizeZP__4cXyzFv)
//	800A7F14: 80347138 (PSVECSquareMag)
//	800A7F18: 80452CC0 (lit_6108)
//	800A7F28: 80452CE8 (lit_6846)
//	800A7F30: 80452CF0 (lit_6847)
//	800A7F78: 80452CF8 (lit_6848)
//	800A7F84: 80450AE0 (__float_nan)
//	800A7F88: 80450AE0 (__float_nan)
//	800A7FF4: 80450AE0 (__float_nan)
//	800A7FF8: 80450AE0 (__float_nan)
//	800A8004: 803470D8 (PSVECScale)
//	800A800C: 80347138 (PSVECSquareMag)
//	800A8010: 80452CC0 (lit_6108)
//	800A8020: 80452CE8 (lit_6846)
//	800A8028: 80452CF0 (lit_6847)
//	800A8070: 80452CF8 (lit_6848)
//	800A807C: 80450AE0 (__float_nan)
//	800A8080: 80450AE0 (__float_nan)
//	800A80EC: 80450AE0 (__float_nan)
//	800A80F0: 80450AE0 (__float_nan)
//	800A80F8: 80452CB8 (lit_6040)
//	800A8110: 80266F48 (normalizeZP__4cXyzFv)
//	800A811C: 800A7ABC (checkWindWallRate__9daAlink_cFRC4cXyz)
//	800A8134: 803470D8 (PSVECScale)
//	800A813C: 80347138 (PSVECSquareMag)
//	800A8150: 80452D24 (lit_7450)
//	800A8158: 80452DD8 (lit_11470)
//	800A816C: 8005B2F8 (dKyw_get_AllWind_vec__FP4cXyzP4cXyzPf)
//	800A8170: 801AC140 (dKy_TeachWind_existence_chk__Fv)
//	800A8180: 80452EA8 (lit_16570)
//	800A818C: 80452CC0 (lit_6108)
//	800A8198: 80452CC0 (lit_6108)
//	800A81A4: 801AC140 (dKy_TeachWind_existence_chk__Fv)
//	800A81B8: 800A7ABC (checkWindWallRate__9daAlink_cFRC4cXyz)
//	800A81CC: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A81D0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800A81E8: 803470D8 (PSVECScale)
//	800A81F0: 80347138 (PSVECSquareMag)
//	800A8204: 80452CC4 (lit_6109)
//	800A820C: 80452CB8 (lit_6040)
//	800A8218: 80452C98 (lit_5943)
//	800A8224: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	800A822C: 80267128 (atan2sX_Z__4cXyzCFv)
//	800A8240: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800A8250: 800AA5E8 (checkNoCollisionCorret__9daAlink_cFv)
//	800A8260: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800A8280: 80452C98 (lit_5943)
//	800A828C: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	800A8294: 80430CF4 (Zero__4cXyz)
//	800A8298: 80430CF4 (Zero__4cXyz)
//	800A82B4: 80430CF4 (Zero__4cXyz)
//	800A82B8: 80430CF4 (Zero__4cXyz)
//	800A82FC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWindSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/setWindSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800A8310-800A87D8 04C8+00 s=2 e=0 z=0  None .text      setBodyPartPos__9daAlink_cFv */
//	800A8328: 8038D658 (lit_3757)
//	800A832C: 8038D658 (lit_3757)
//	800A8354: 80346D6C (PSMTXMultVec)
//	800A8388: 80346D6C (PSMTXMultVec)
//	800A83A4: 80346D6C (PSMTXMultVec)
//	800A845C: 80346D6C (PSMTXMultVec)
//	800A8460: 804061C0 (g_dComIfG_gameInfo)
//	800A8464: 804061C0 (g_dComIfG_gameInfo)
//	800A84A0: 803DD470 (now__14mDoMtx_stack_c)
//	800A84A4: 803DD470 (now__14mDoMtx_stack_c)
//	800A84B4: 803468E8 (PSMTXTrans)
//	800A84BC: 800E23FC (concatMagneBootMtx__9daAlink_cFv)
//	800A84C0: 803DD470 (now__14mDoMtx_stack_c)
//	800A84C4: 803DD470 (now__14mDoMtx_stack_c)
//	800A84D4: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	800A84F4: 803DD470 (now__14mDoMtx_stack_c)
//	800A84F8: 803DD470 (now__14mDoMtx_stack_c)
//	800A8504: 80346D6C (PSMTXMultVec)
//	800A8528: 803DD470 (now__14mDoMtx_stack_c)
//	800A852C: 803DD470 (now__14mDoMtx_stack_c)
//	800A8538: 80346D6C (PSMTXMultVec)
//	800A8564: 803DD470 (now__14mDoMtx_stack_c)
//	800A8568: 803DD470 (now__14mDoMtx_stack_c)
//	800A8574: 80346D6C (PSMTXMultVec)
//	800A857C: 803DD470 (now__14mDoMtx_stack_c)
//	800A8580: 803DD470 (now__14mDoMtx_stack_c)
//	800A858C: 80346D6C (PSMTXMultVec)
//	800A85CC: 80346D6C (PSMTXMultVec)
//	800A85F0: 80346D6C (PSMTXMultVec)
//	800A872C: 80452CC0 (lit_6108)
//	800A8748: 80452CC0 (lit_6108)
//	800A8764: 80452CC0 (lit_6108)
//	800A8770: 80439A20 (sincosTable___5JMath)
//	800A8774: 80439A20 (sincosTable___5JMath)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBodyPartPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setBodyPartPos__9daAlink_cFv.s"
}
#pragma pop

/* 800A87D8-800A87F8 0020+00 s=1 e=0 z=0  None .text      setRollJump__9daAlink_cFffs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRollJump(f32 param_0, f32 param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setRollJump__9daAlink_cFffs.s"
}
#pragma pop

/* ############################################################################################## */
/* 80425508-80425514 000C+00 s=4 e=0 z=0  None .bss       @4409 */
static u8 lit_4409[12];

/* 80425514-80425520 000C+00 s=32 e=0 z=0  None .bss       l_waitBaseAnime */
static f32 l_waitBaseAnime[3];

/* 80425520-8042552C 000C+00 s=0 e=0 z=0  None .bss       @4410 */
u8 lit_4410[12];

/* 8042552C-80425538 000C+00 s=2 e=0 z=0  None .bss       l_ironBallBaseAnime */
static f32 l_ironBallBaseAnime[3];

/* 80425538-80425544 000C+00 s=0 e=0 z=0  None .bss       @4411 */
u8 lit_4411[12];

/* 80425544-80425550 000C+00 s=15 e=0 z=0  None .bss       l_halfAtnWaitBaseAnime */
static f32 l_halfAtnWaitBaseAnime[3];

/* 80425550-8042555C 000C+00 s=0 e=0 z=0  None .bss       @4412 */
u8 lit_4412[12];

/* 8042555C-80425568 000C+00 s=1 e=0 z=0  None .bss       l_rWaitBaseAnime */
static f32 l_rWaitBaseAnime[3];

/* 80425568-80425574 000C+00 s=0 e=0 z=0  None .bss       @4413 */
u8 lit_4413[12];

/* 80425574-80425580 000C+00 s=0 e=0 z=0  None .bss       l_lWaitBaseAnime */
u8 l_lWaitBaseAnime[12];

/* 80425580-8042558C 000C+00 s=0 e=0 z=0  None .bss       @4414 */
u8 lit_4414[12];

/* 8042558C-80425598 000C+00 s=3 e=0 z=0  None .bss       l_horseBaseAnime */
static u8 l_horseBaseAnime[12];

/* 80425598-804255A4 000C+00 s=0 e=0 z=0  None .bss       @4415 */
u8 lit_4415[12];

/* 804255A4-804255B0 000C+00 s=3 e=0 z=0  None .bss       l_boarBaseAnime */
static u8 l_boarBaseAnime[12];

/* 804255B0-804255BC 000C+00 s=0 e=0 z=0  None .bss       @4416 */
u8 lit_4416[12];

/* 804255BC-804255C8 000C+00 s=1 e=0 z=0  None .bss       l_localHorseRidePos */
static u8 l_localHorseRidePos[12];

/* 804255C8-804255D4 000C+00 s=0 e=0 z=0  None .bss       @4417 */
u8 lit_4417[12];

/* 804255D4-804255E0 000C+00 s=1 e=0 z=0  None .bss       l_localBoarRidePos */
static u8 l_localBoarRidePos[12];

/* 804255E0-804255EC 000C+00 s=0 e=0 z=0  None .bss       @4418 */
u8 lit_4418[12];

/* 804255EC-804255F8 000C+00 s=2 e=0 z=0  None .bss       l_canoeBaseAnime */
static u8 l_canoeBaseAnime[12];

/* 800A87F8-800A8CE4 04EC+00 s=2 e=0 z=0  None .text      setAttentionPos__9daAlink_cFv */
//	800A8818: 8038D658 (lit_3757)
//	800A881C: 8038D658 (lit_3757)
//	800A88D4: 80452DE0 (lit_11673)
//	800A8918: 804255EC (l_canoeBaseAnime)
//	800A891C: 804255EC (l_canoeBaseAnime)
//	800A8930: 80452F18 (lit_20824)
//	800A8938: 80439A20 (sincosTable___5JMath)
//	800A893C: 80439A20 (sincosTable___5JMath)
//	800A895C: 80452D00 (lit_6895)
//	800A8964: 804255EC (l_canoeBaseAnime)
//	800A8968: 804255EC (l_canoeBaseAnime)
//	800A899C: 80453234 (lit_58631)
//	800A89C0: 80452D00 (lit_6895)
//	800A8A10: 80452CC0 (lit_6108)
//	800A8A18: 80452D10 (lit_7306)
//	800A8A30: 80452D78 (lit_8676)
//	800A8A44: 80452D00 (lit_6895)
//	800A8A50: 80452DB0 (lit_10039)
//	800A8A68: 80346D6C (PSMTXMultVec)
//	800A8AB0: 804061C0 (g_dComIfG_gameInfo)
//	800A8AB4: 804061C0 (g_dComIfG_gameInfo)
//	800A8AC4: 80439A20 (sincosTable___5JMath)
//	800A8AC8: 80439A20 (sincosTable___5JMath)
//	800A8AE0: 80452D50 (lit_8247)
//	800A8AEC: 80452DCC (lit_10532)
//	800A8B24: 80452EA0 (lit_16568)
//	800A8BC0: 80452DE0 (lit_11673)
//	800A8C30: 80346E4C (PSMTXMultVecSR)
//	800A8C90: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setAttentionPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setAttentionPos__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453244-80453248 0004+00 s=1 e=0 z=0  None .sdata2    @60413 */
SECTION_SDATA2 static f32 lit_60413 = -70.0f;

/* 800A8CE4-800A9248 0564+00 s=3 e=0 z=0  None .text      setMatrix__9daAlink_cFv */
//	800A8D24: 80452D78 (lit_8676)
//	800A8D2C: 80452CC0 (lit_6108)
//	800A8D34: 80452C98 (lit_5943)
//	800A8D38: 80452D1C (lit_7448)
//	800A8D3C: 80452CC4 (lit_6109)
//	800A8D40: 8026F97C (cLib_addCalc__FPfffff)
//	800A8D60: 80452D84 (lit_8781)
//	800A8D68: 80452CC0 (lit_6108)
//	800A8D6C: 803DD470 (now__14mDoMtx_stack_c)
//	800A8D70: 803DD470 (now__14mDoMtx_stack_c)
//	800A8D9C: 803468E8 (PSMTXTrans)
//	800A8DA4: 800E23FC (concatMagneBootMtx__9daAlink_cFv)
//	800A8DA8: 803DD470 (now__14mDoMtx_stack_c)
//	800A8DAC: 803DD470 (now__14mDoMtx_stack_c)
//	800A8DC8: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	800A8DE0: 80452CC0 (lit_6108)
//	800A8DE4: 80452D00 (lit_6895)
//	800A8DE8: 80452D50 (lit_8247)
//	800A8DEC: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A8DF4: 803DD470 (now__14mDoMtx_stack_c)
//	800A8DF8: 803DD470 (now__14mDoMtx_stack_c)
//	800A8E00: 80452D2C (lit_7624)
//	800A8E04: 80452CB0 (lit_6025)
//	800A8E30: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	800A8E34: 80452CC0 (lit_6108)
//	800A8E38: 80452DCC (lit_10532)
//	800A8E3C: 80452EA0 (lit_16568)
//	800A8E40: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A8E50: 80452CC0 (lit_6108)
//	800A8E54: 80452D78 (lit_8676)
//	800A8E58: 80452D10 (lit_7306)
//	800A8E5C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A8E64: 803DD470 (now__14mDoMtx_stack_c)
//	800A8E68: 803DD470 (now__14mDoMtx_stack_c)
//	800A8E70: 80452C98 (lit_5943)
//	800A8E74: 80452CB0 (lit_6025)
//	800A8EA0: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	800A8EA4: 80452CC0 (lit_6108)
//	800A8EA8: 80452F90 (lit_25059)
//	800A8EAC: 80453244 (lit_60413)
//	800A8EB0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A8EC0: 80452CC0 (lit_6108)
//	800A8EC4: 80452D3C (lit_7808)
//	800A8EC8: 80452E14 (lit_14616)
//	800A8ECC: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A8EDC: 803DD470 (now__14mDoMtx_stack_c)
//	800A8EE0: 803DD470 (now__14mDoMtx_stack_c)
//	800A8EE8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800A8EEC: 803DD470 (now__14mDoMtx_stack_c)
//	800A8EF0: 803DD470 (now__14mDoMtx_stack_c)
//	800A8EFC: 803464B0 (PSMTXCopy)
//	800A8F00: 803DD470 (now__14mDoMtx_stack_c)
//	800A8F04: 803DD470 (now__14mDoMtx_stack_c)
//	800A8F0C: 803465B0 (PSMTXInverse)
//	800A8F10: 803DD470 (now__14mDoMtx_stack_c)
//	800A8F14: 803DD470 (now__14mDoMtx_stack_c)
//	800A8F1C: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	800A8F20: 803DD470 (now__14mDoMtx_stack_c)
//	800A8F24: 803DD470 (now__14mDoMtx_stack_c)
//	800A8F30: 803464E4 (PSMTXConcat)
//	800A8F34: 803DD470 (now__14mDoMtx_stack_c)
//	800A8F38: 803DD470 (now__14mDoMtx_stack_c)
//	800A8F40: 803464B0 (PSMTXCopy)
//	800A8F5C: 80110C6C (checkKandelaarEquipAnime__9daAlink_cCFv)
//	800A8F6C: 800B93CC (checkSwordTwirlAnime__9daAlink_cCFv)
//	800A8F94: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800A8FC0: 800D0E98 (checkSwordEquipAnime__9daAlink_cCFv)
//	800A8FD0: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800A8FE0: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800A9014: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800A9030: 800D0E98 (checkSwordEquipAnime__9daAlink_cCFv)
//	800A903C: 804061C0 (g_dComIfG_gameInfo)
//	800A9040: 804061C0 (g_dComIfG_gameInfo)
//	800A906C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800A9080: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A9094: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A90A8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A910C: 800B9398 (checkWindDashAnime__9daAlink_cCFv)
//	800A9120: 800AC5B4 (checkUnderMove1BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A913C: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800A9194: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800A91A4: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800A91C0: 800D0E98 (checkSwordEquipAnime__9daAlink_cCFv)
//	800A91CC: 804061C0 (g_dComIfG_gameInfo)
//	800A91D0: 804061C0 (g_dComIfG_gameInfo)
//	800A9200: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800A920C: 80452CC0 (lit_6108)
//	800A9218: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/setMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800A9248-800A92F0 00A8+00 s=15 e=0 z=5  None .text      simpleAnmPlay__9daAlink_cFP10J3DAnmBase
 */
//	800A9260: 80452CB8 (lit_6040)
//	800A9270: 80452CB0 (lit_6025)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::simpleAnmPlay(J3DAnmBase* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/simpleAnmPlay__9daAlink_cFP10J3DAnmBase.s"
}
#pragma pop

/* 800A92F0-800A9450 0160+00 s=2 e=0 z=0  None .text      setSwordPos__9daAlink_cFv */
//	800A9308: 8038D658 (lit_3757)
//	800A930C: 8038D658 (lit_3757)
//	800A9380: 80346E4C (PSMTXMultVecSR)
//	800A9398: 80346E4C (PSMTXMultVecSR)
//	800A939C: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	800A93B8: 80346D6C (PSMTXMultVec)
//	800A93D0: 80346D6C (PSMTXMultVec)
//	800A93E0: 800F3CCC (getCanoeLocalPaddleTop__9daAlink_cFv)
//	800A93EC: 800F3DFC (getCanoePaddleMatrix__9daAlink_cFv)
//	800A93F8: 80346D6C (PSMTXMultVec)
//	800A9418: 80346D6C (PSMTXMultVec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordPos__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453248-8045324C 0004+00 s=1 e=0 z=0  None .sdata2    @61025 */
SECTION_SDATA2 static f32 lit_61025 = -18.5f;

/* 8045324C-80453250 0004+00 s=1 e=0 z=0  None .sdata2    @61026 */
SECTION_SDATA2 static f32 lit_61026 = 7.0f / 50.0f;

/* 80453250-80453254 0004+00 s=1 e=0 z=0  None .sdata2    @61027 */
SECTION_SDATA2 static f32 lit_61027 = 61.0f / 5.0f;

/* 80453254-80453258 0004+00 s=1 e=0 z=0  None .sdata2    @61028 */
SECTION_SDATA2 static f32 lit_61028 = 21.0f / 5.0f;

/* 80453258-8045325C 0004+00 s=1 e=0 z=0  None .sdata2    @61029 */
SECTION_SDATA2 static f32 lit_61029 = -22.0f / 5.0f;

/* 8045325C-80453260 0004+00 s=1 e=0 z=0  None .sdata2    @61030 */
SECTION_SDATA2 static f32 lit_61030 = -7.5f;

/* 80453260-80453264 0004+00 s=1 e=0 z=0  None .sdata2    @61031 */
SECTION_SDATA2 static f32 lit_61031 = -5.5f;

/* 80453264-80453268 0004+00 s=1 e=0 z=0  None .sdata2    @61032 */
SECTION_SDATA2 static f32 lit_61032 = -13.0f / 10.0f;

/* 80453268-8045326C 0004+00 s=1 e=0 z=0  None .sdata2    @61033 */
SECTION_SDATA2 static f32 lit_61033 = -1.0f / 10.0f;

/* 8045326C-80453270 0004+00 s=1 e=0 z=0  None .sdata2    @61034 */
SECTION_SDATA2 static f32 lit_61034 = -7.0f / 10.0f;

/* 800A9450-800A9F4C 0AFC+00 s=4 e=0 z=0  None .text      setItemMatrix__9daAlink_cFi */
//	800A9460: 803621D8 (_savegpr_28)
//	800A948C: 803464B0 (PSMTXCopy)
//	800A9498: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800A94DC: 803464B0 (PSMTXCopy)
//	800A9500: 803DD470 (now__14mDoMtx_stack_c)
//	800A9504: 803DD470 (now__14mDoMtx_stack_c)
//	800A9508: 803464B0 (PSMTXCopy)
//	800A950C: 80453248 (lit_61025)
//	800A9510: 8045324C (lit_61026)
//	800A9514: 80453250 (lit_61027)
//	800A9518: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A951C: 803DD470 (now__14mDoMtx_stack_c)
//	800A9520: 803DD470 (now__14mDoMtx_stack_c)
//	800A9530: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800A9534: 803DD470 (now__14mDoMtx_stack_c)
//	800A9538: 803DD470 (now__14mDoMtx_stack_c)
//	800A9544: 803464B0 (PSMTXCopy)
//	800A9554: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800A9558: 804061C0 (g_dComIfG_gameInfo)
//	800A955C: 804061C0 (g_dComIfG_gameInfo)
//	800A9584: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	800A95A4: 802C3228 (setLinkSwordType__14Z2CreatureLinkFll)
//	800A95C0: 800DCF04 (checkPlayerGuardAndAttack__9daAlink_cCFv)
//	800A9668: 803464B0 (PSMTXCopy)
//	800A966C: 804061C0 (g_dComIfG_gameInfo)
//	800A9670: 804061C0 (g_dComIfG_gameInfo)
//	800A968C: 80451360 (mLinkPtr__14Z2CreatureLink)
//	800A96A0: 802C328C (setLinkShieldType__14Z2CreatureLinkFll)
//	800A96B4: 80451360 (mLinkPtr__14Z2CreatureLink)
//	800A96C8: 802C328C (setLinkShieldType__14Z2CreatureLinkFll)
//	800A9714: 803DD470 (now__14mDoMtx_stack_c)
//	800A9718: 803DD470 (now__14mDoMtx_stack_c)
//	800A971C: 803464B0 (PSMTXCopy)
//	800A9720: 80453254 (lit_61028)
//	800A9724: 80453258 (lit_61029)
//	800A9728: 80452F90 (lit_25059)
//	800A972C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A9730: 803DD470 (now__14mDoMtx_stack_c)
//	800A9734: 803DD470 (now__14mDoMtx_stack_c)
//	800A9744: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800A9748: 803DD470 (now__14mDoMtx_stack_c)
//	800A974C: 803DD470 (now__14mDoMtx_stack_c)
//	800A9758: 803464B0 (PSMTXCopy)
//	800A975C: 804061C0 (g_dComIfG_gameInfo)
//	800A9760: 804061C0 (g_dComIfG_gameInfo)
//	800A9770: 80451360 (mLinkPtr__14Z2CreatureLink)
//	800A9784: 802C328C (setLinkShieldType__14Z2CreatureLinkFll)
//	800A97A4: 80451360 (mLinkPtr__14Z2CreatureLink)
//	800A97B8: 802C328C (setLinkShieldType__14Z2CreatureLinkFll)
//	800A97D0: 800DC79C (stickArrowIncrement__9daAlink_cFi)
//	800A97D8: 801255BC (clearWoodShieldBurnEffect__9daAlink_cFv)
//	800A97E4: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800A9800: 803464B0 (PSMTXCopy)
//	800A980C: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800A9828: 803464B0 (PSMTXCopy)
//	800A9864: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	800A9888: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800A98B4: 803464B0 (PSMTXCopy)
//	800A98C0: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800A98F4: 803464B0 (PSMTXCopy)
//	800A9918: 803464B0 (PSMTXCopy)
//	800A993C: 803464B0 (PSMTXCopy)
//	800A9940: 803DD470 (now__14mDoMtx_stack_c)
//	800A9944: 803DD470 (now__14mDoMtx_stack_c)
//	800A994C: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	800A9970: 803DD470 (now__14mDoMtx_stack_c)
//	800A9974: 803DD470 (now__14mDoMtx_stack_c)
//	800A9978: 803464E4 (PSMTXConcat)
//	800A999C: 803DD470 (now__14mDoMtx_stack_c)
//	800A99A0: 803DD470 (now__14mDoMtx_stack_c)
//	800A99A4: 803464E4 (PSMTXConcat)
//	800A99C8: 803DD470 (now__14mDoMtx_stack_c)
//	800A99CC: 803DD470 (now__14mDoMtx_stack_c)
//	800A99D0: 803464E4 (PSMTXConcat)
//	800A9A00: 803464B0 (PSMTXCopy)
//	800A9A38: 803464B0 (PSMTXCopy)
//	800A9A54: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	800A9A98: 803464B0 (PSMTXCopy)
//	800A9AA4: 8010E584 (checkOilBottleItemNotGet__9daAlink_cFUs)
//	800A9AC8: 803DD470 (now__14mDoMtx_stack_c)
//	800A9ACC: 803DD470 (now__14mDoMtx_stack_c)
//	800A9AD0: 803464B0 (PSMTXCopy)
//	800A9AD4: 80452D2C (lit_7624)
//	800A9AD8: 8045325C (lit_61030)
//	800A9ADC: 80452CBC (lit_6041)
//	800A9AE0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A9AE4: 803DD470 (now__14mDoMtx_stack_c)
//	800A9AE8: 803DD470 (now__14mDoMtx_stack_c)
//	800A9AF8: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800A9AFC: 803DD470 (now__14mDoMtx_stack_c)
//	800A9B00: 803DD470 (now__14mDoMtx_stack_c)
//	800A9B0C: 803464B0 (PSMTXCopy)
//	800A9B18: 8015EA88 (checkBottleItem__9daPy_py_cFi)
//	800A9B3C: 803DD470 (now__14mDoMtx_stack_c)
//	800A9B40: 803DD470 (now__14mDoMtx_stack_c)
//	800A9B44: 803464B0 (PSMTXCopy)
//	800A9B48: 80452D9C (lit_9053)
//	800A9B4C: 80452D4C (lit_8131)
//	800A9B50: 80453260 (lit_61031)
//	800A9B54: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A9B58: 803DD470 (now__14mDoMtx_stack_c)
//	800A9B5C: 803DD470 (now__14mDoMtx_stack_c)
//	800A9B6C: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800A9B70: 803DD470 (now__14mDoMtx_stack_c)
//	800A9B74: 803DD470 (now__14mDoMtx_stack_c)
//	800A9B80: 803464B0 (PSMTXCopy)
//	800A9B94: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800A9B98: 803DD470 (now__14mDoMtx_stack_c)
//	800A9B9C: 803DD470 (now__14mDoMtx_stack_c)
//	800A9BA8: 803464B0 (PSMTXCopy)
//	800A9BCC: 800DE780 (checkBowAndSlingItem__9daAlink_cFi)
//	800A9BDC: 800DFBC8 (checkBowGrabLeftHand__9daAlink_cCFv)
//	800A9C00: 803DD470 (now__14mDoMtx_stack_c)
//	800A9C04: 803DD470 (now__14mDoMtx_stack_c)
//	800A9C08: 803464B0 (PSMTXCopy)
//	800A9C0C: 80453264 (lit_61032)
//	800A9C10: 80452CC0 (lit_6108)
//	800A9C14: 80452E14 (lit_14616)
//	800A9C18: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A9C1C: 803DD470 (now__14mDoMtx_stack_c)
//	800A9C20: 803DD470 (now__14mDoMtx_stack_c)
//	800A9C30: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800A9C34: 803DD470 (now__14mDoMtx_stack_c)
//	800A9C38: 803DD470 (now__14mDoMtx_stack_c)
//	800A9C44: 803464B0 (PSMTXCopy)
//	800A9C6C: 803464B0 (PSMTXCopy)
//	800A9C78: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800A9C88: 80109BDC (setHookshotPos__9daAlink_cFv)
//	800A9CA0: 80113D58 (setIronBallPos__9daAlink_cFv)
//	800A9CE0: 80452CB0 (lit_6025)
//	800A9CFC: 80452DE4 (lit_12328)
//	800A9D0C: 80452CC0 (lit_6108)
//	800A9D38: 803464B0 (PSMTXCopy)
//	800A9D50: 80452CB0 (lit_6025)
//	800A9D88: 80452DE4 (lit_12328)
//	800A9DA4: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	800A9DD8: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800A9E18: 8010E584 (checkOilBottleItemNotGet__9daAlink_cFUs)
//	800A9E3C: 803DD470 (now__14mDoMtx_stack_c)
//	800A9E40: 803DD470 (now__14mDoMtx_stack_c)
//	800A9E44: 803464B0 (PSMTXCopy)
//	800A9E48: 80452D6C (lit_8473)
//	800A9E4C: 80453268 (lit_61033)
//	800A9E50: 8045326C (lit_61034)
//	800A9E54: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A9E58: 803DD470 (now__14mDoMtx_stack_c)
//	800A9E5C: 803DD470 (now__14mDoMtx_stack_c)
//	800A9E6C: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800A9E70: 803DD470 (now__14mDoMtx_stack_c)
//	800A9E74: 803DD470 (now__14mDoMtx_stack_c)
//	800A9E80: 803464B0 (PSMTXCopy)
//	800A9E98: 803DD470 (now__14mDoMtx_stack_c)
//	800A9E9C: 803DD470 (now__14mDoMtx_stack_c)
//	800A9EA0: 803464B0 (PSMTXCopy)
//	800A9EA4: 80452CBC (lit_6041)
//	800A9EA8: 80452F48 (lit_23416)
//	800A9EAC: 80452D34 (lit_7710)
//	800A9EB0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A9EB4: 803DD470 (now__14mDoMtx_stack_c)
//	800A9EB8: 803DD470 (now__14mDoMtx_stack_c)
//	800A9EC8: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800A9ECC: 803DD470 (now__14mDoMtx_stack_c)
//	800A9ED0: 803DD470 (now__14mDoMtx_stack_c)
//	800A9EDC: 803464B0 (PSMTXCopy)
//	800A9EE8: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800A9EF0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800A9EF4: 803DD470 (now__14mDoMtx_stack_c)
//	800A9EF8: 803DD470 (now__14mDoMtx_stack_c)
//	800A9F04: 803464B0 (PSMTXCopy)
//	800A9F10: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800A9F18: 800A92F0 (setSwordPos__9daAlink_cFv)
//	800A9F20: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800A9F28: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800A9F30: 800ED310 (setHorseStirrup__9daAlink_cFv)
//	800A9F38: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setItemMatrix(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setItemMatrix__9daAlink_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453270-80453274 0004+00 s=1 e=0 z=0  None .sdata2    @61141 */
SECTION_SDATA2 static f32 lit_61141 = -21.0f;

/* 80453274-80453278 0004+00 s=1 e=0 z=0  None .sdata2    @61142 */
SECTION_SDATA2 static f32 lit_61142 = -13.0f;

/* 800A9F4C-800AA2BC 0370+00 s=4 e=0 z=0  None .text      setWolfItemMatrix__9daAlink_cFv */
//	800A9F70: 803DD470 (now__14mDoMtx_stack_c)
//	800A9F74: 803DD470 (now__14mDoMtx_stack_c)
//	800A9F78: 803464B0 (PSMTXCopy)
//	800A9F7C: 80452F58 (lit_24323)
//	800A9F80: 8045311C (lit_42622)
//	800A9F84: 80452DC8 (lit_10286)
//	800A9F88: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A9F8C: 803DD470 (now__14mDoMtx_stack_c)
//	800A9F90: 803DD470 (now__14mDoMtx_stack_c)
//	800A9FA0: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800A9FA4: 803DD470 (now__14mDoMtx_stack_c)
//	800A9FA8: 803DD470 (now__14mDoMtx_stack_c)
//	800A9FB4: 803464B0 (PSMTXCopy)
//	800A9FC0: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800A9FD4: 803DD470 (now__14mDoMtx_stack_c)
//	800A9FD8: 803DD470 (now__14mDoMtx_stack_c)
//	800A9FDC: 803464B0 (PSMTXCopy)
//	800A9FE0: 80452D84 (lit_8781)
//	800A9FE4: 80453270 (lit_61141)
//	800A9FE8: 80452D74 (lit_8502)
//	800A9FEC: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800A9FF0: 803DD470 (now__14mDoMtx_stack_c)
//	800A9FF4: 803DD470 (now__14mDoMtx_stack_c)
//	800AA004: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800AA008: 803DD470 (now__14mDoMtx_stack_c)
//	800AA00C: 803DD470 (now__14mDoMtx_stack_c)
//	800AA018: 803464B0 (PSMTXCopy)
//	800AA024: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800AA038: 803DD470 (now__14mDoMtx_stack_c)
//	800AA03C: 803DD470 (now__14mDoMtx_stack_c)
//	800AA040: 803464B0 (PSMTXCopy)
//	800AA044: 80452EB4 (lit_17382)
//	800AA048: 80452E38 (lit_14625)
//	800AA04C: 80453274 (lit_61142)
//	800AA050: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800AA054: 803DD470 (now__14mDoMtx_stack_c)
//	800AA058: 803DD470 (now__14mDoMtx_stack_c)
//	800AA068: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800AA078: 803DD470 (now__14mDoMtx_stack_c)
//	800AA07C: 803DD470 (now__14mDoMtx_stack_c)
//	800AA088: 803464B0 (PSMTXCopy)
//	800AA094: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800AA0A8: 800A92F0 (setSwordPos__9daAlink_cFv)
//	800AA0C4: 80452D88 (lit_8782)
//	800AA0D0: 8039201C (lit_61047)
//	800AA0D4: 8039201C (lit_61047)
//	800AA10C: 803468E8 (PSMTXTrans)
//	800AA138: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800AA150: 803DD470 (now__14mDoMtx_stack_c)
//	800AA154: 803DD470 (now__14mDoMtx_stack_c)
//	800AA158: 803464B0 (PSMTXCopy)
//	800AA15C: 80452D90 (lit_8784)
//	800AA160: 80452D48 (lit_8130)
//	800AA164: 80452CC0 (lit_6108)
//	800AA168: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800AA174: 803DD470 (now__14mDoMtx_stack_c)
//	800AA178: 803DD470 (now__14mDoMtx_stack_c)
//	800AA17C: 803464B0 (PSMTXCopy)
//	800AA1B0: 803DD470 (now__14mDoMtx_stack_c)
//	800AA1B4: 803DD470 (now__14mDoMtx_stack_c)
//	800AA1D4: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800AA22C: 804061C0 (g_dComIfG_gameInfo)
//	800AA230: 804061C0 (g_dComIfG_gameInfo)
//	800AA280: 80452CB8 (lit_6040)
//	800AA284: 8004D4CC
//(set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	800AA2A4: 8012C30C (setWolfChainPos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfItemMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfItemMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800AA2BC-800AA2E0 0024+00 s=3 e=0 z=0  None .text
 * setHandIndex__9daAlink_cFQ29daAlink_c11daAlink_ANM           */
//	800AA2C0: 8038FCA8 (m_anmDataTable__9daAlink_c)
//	800AA2C4: 8038FCA8 (m_anmDataTable__9daAlink_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHandIndex(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHandIndex__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800AA2E0-800AA5E8 0308+00 s=1 e=0 z=0  None .text      setSwordAtCollision__9daAlink_cFi */
//	800AA2F0: 803621D0 (_savegpr_26)
//	800AA2FC: 800D0ECC (checkCutDashAnime__9daAlink_cCFv)
//	800AA310: 800D0EFC (checkCutDashEnemyHit__9daAlink_cFR12dCcD_GObjInf)
//	800AA324: 800D0EFC (checkCutDashEnemyHit__9daAlink_cFR12dCcD_GObjInf)
//	800AA338: 800D0EFC (checkCutDashEnemyHit__9daAlink_cFR12dCcD_GObjInf)
//	800AA35C: 80439A20 (sincosTable___5JMath)
//	800AA360: 80439A20 (sincosTable___5JMath)
//	800AA378: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0)
//	800AA37C: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0)
//	800AA3B4: 80452D30 (lit_7625)
//	800AA3C8: 8026F1F8 (SetH__8cM3dGCylFf)
//	800AA3DC: 80084908 (StartCAt__8dCcD_CylFR4cXyz)
//	800AA3EC: 80084954 (MoveCAt__8dCcD_CylFR4cXyz)
//	800AA3F0: 804061C0 (g_dComIfG_gameInfo)
//	800AA3F4: 804061C0 (g_dComIfG_gameInfo)
//	800AA400: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AA404: 804061C0 (g_dComIfG_gameInfo)
//	800AA408: 804061C0 (g_dComIfG_gameInfo)
//	800AA418: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AA42C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800AA43C: 80266B84 (__ml__4cXyzCFf)
//	800AA44C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800AA474: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800AA484: 80266B84 (__ml__4cXyzCFf)
//	800AA494: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800AA4BC: 8026F2E8 (SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz)
//	800AA4CC: 8026F2E8 (SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz)
//	800AA4DC: 8026F2E8 (SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz)
//	800AA4F4: 80430CF4 (Zero__4cXyz)
//	800AA4F8: 80430CF4 (Zero__4cXyz)
//	800AA520: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800AA58C: 804061C0 (g_dComIfG_gameInfo)
//	800AA590: 804061C0 (g_dComIfG_gameInfo)
//	800AA5AC: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AA5BC: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AA5D4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordAtCollision(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordAtCollision__9daAlink_cFi.s"
}
#pragma pop

/* 800AA5E8-800AA6B4 00CC+00 s=4 e=0 z=0  None .text      checkNoCollisionCorret__9daAlink_cFv */
//	800AA62C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800AA638: 804061C0 (g_dComIfG_gameInfo)
//	800AA63C: 804061C0 (g_dComIfG_gameInfo)
//	800AA644: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	800AA648: 80392094 (d_a_d_a_alink__stringBase0)
//	800AA64C: 80392094 (d_a_d_a_alink__stringBase0)
//	800AA654: 80368994 (strcmp)
//	800AA664: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	800AA670: 80451018 (m_midnaActor__9daPy_py_c)
//	800AA678: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNoCollisionCorret() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoCollisionCorret__9daAlink_cFv.s"
}
#pragma pop

/* 800AA6B4-800AA714 0060+00 s=1 e=0 z=0  None .text      decSwordBlur__9daAlink_cFv */
//	800AA700: 80125B0C (traceBlur__14daAlink_blur_cFPC4cXyzPC4cXyzs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::decSwordBlur() {
    nofralloc
#include "asm/d/a/d_a_alink/decSwordBlur__9daAlink_cFv.s"
}
#pragma pop

/* 800AA714-800AA7EC 00D8+00 s=2 e=0 z=0  None .text      resetWolfAtCollision__9daAlink_cFv */
//	800AA73C: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AA750: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AA764: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AA778: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AA78C: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AA7B4: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetWolfAtCollision() {
    nofralloc
#include "asm/d/a/d_a_alink/resetWolfAtCollision__9daAlink_cFv.s"
}
#pragma pop

/* 800AA7EC-800AA9DC 01F0+00 s=1 e=0 z=0  None .text      setWolfAtCollision__9daAlink_cFv */
//	800AA810: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AA824: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AA838: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AA84C: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AA864: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800AA868: 804061C0 (g_dComIfG_gameInfo)
//	800AA86C: 804061C0 (g_dComIfG_gameInfo)
//	800AA878: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AA87C: 804061C0 (g_dComIfG_gameInfo)
//	800AA880: 804061C0 (g_dComIfG_gameInfo)
//	800AA890: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AA898: 80439A20 (sincosTable___5JMath)
//	800AA89C: 80439A20 (sincosTable___5JMath)
//	800AA8F4: 80084908 (StartCAt__8dCcD_CylFR4cXyz)
//	800AA984: 80084954 (MoveCAt__8dCcD_CylFR4cXyz)
//	800AA988: 804061C0 (g_dComIfG_gameInfo)
//	800AA98C: 804061C0 (g_dComIfG_gameInfo)
//	800AA998: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AA99C: 804061C0 (g_dComIfG_gameInfo)
//	800AA9A0: 804061C0 (g_dComIfG_gameInfo)
//	800AA9B0: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AA9C4: 800AA714 (resetWolfAtCollision__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfAtCollision() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfAtCollision__9daAlink_cFv.s"
}
#pragma pop

/* 800AA9DC-800AAABC 00E0+00 s=3 e=0 z=0  None .text      resetAtCollision__9daAlink_cFi */
//	800AA9EC: 803621D8 (_savegpr_28)
//	800AAA0C: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AAA20: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AAA34: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AAA48: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AAA5C: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AAA7C: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AAAA0: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AAAA8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetAtCollision(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/resetAtCollision__9daAlink_cFi.s"
}
#pragma pop

/* 800AAABC-800AB878 0DBC+00 s=1 e=0 z=0  None .text      setAtCollision__9daAlink_cFv */
//	800AAADC: 803621DC (_savegpr_29)
//	800AAAE4: 8038D658 (lit_3757)
//	800AAAE8: 8038D658 (lit_3757)
//	800AAAEC: 80450FD1 (struct_80450FD0)
//	800AAAF8: 80452DD4 (lit_11442)
//	800AAAFC: 803B2D88 (rodTopOffset)
//	800AAB00: 803B2D88 (rodTopOffset)
//	800AAB0C: 80450FD1 (struct_80450FD0)
//	800AAB50: 8026F2E8 (SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz)
//	800AAB54: 80439A20 (sincosTable___5JMath)
//	800AAB58: 80439A20 (sincosTable___5JMath)
//	800AAB70: 80452D3C (lit_7808)
//	800AAB7C: 80452CC0 (lit_6108)
//	800AABA0: 804061C0 (g_dComIfG_gameInfo)
//	800AABA4: 804061C0 (g_dComIfG_gameInfo)
//	800AABB0: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AABBC: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AABEC: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800AABF0: 803DD470 (now__14mDoMtx_stack_c)
//	800AABF4: 803DD470 (now__14mDoMtx_stack_c)
//	800AAC10: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	800AAC14: 803DD470 (now__14mDoMtx_stack_c)
//	800AAC18: 803DD470 (now__14mDoMtx_stack_c)
//	800AAC1C: 803B2D88 (rodTopOffset)
//	800AAC20: 803B2D88 (rodTopOffset)
//	800AAC28: 80346D6C (PSMTXMultVec)
//	800AAC30: 800E1330 (getCopyRodBallDisMax__9daAlink_cCFv)
//	800AAC34: 80452D00 (lit_6895)
//	800AAC3C: 80452CC0 (lit_6108)
//	800AAC4C: 803DD470 (now__14mDoMtx_stack_c)
//	800AAC50: 803DD470 (now__14mDoMtx_stack_c)
//	800AAC5C: 80346E4C (PSMTXMultVecSR)
//	800AAC6C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800AAC94: 8026F2E8 (SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz)
//	800AACB0: 804061C0 (g_dComIfG_gameInfo)
//	800AACB4: 804061C0 (g_dComIfG_gameInfo)
//	800AACC0: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AACFC: 80346D6C (PSMTXMultVec)
//	800AAD18: 8026F1F8 (SetH__8cM3dGCylFf)
//	800AAD2C: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800AAD30: 804061C0 (g_dComIfG_gameInfo)
//	800AAD34: 804061C0 (g_dComIfG_gameInfo)
//	800AAD40: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AAD4C: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AAD78: 803DD470 (now__14mDoMtx_stack_c)
//	800AAD7C: 803DD470 (now__14mDoMtx_stack_c)
//	800AAD80: 803464B0 (PSMTXCopy)
//	800AAD84: 803DD470 (now__14mDoMtx_stack_c)
//	800AAD88: 803DD470 (now__14mDoMtx_stack_c)
//	800AAD90: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800AAD98: 803DD470 (now__14mDoMtx_stack_c)
//	800AAD9C: 803DD470 (now__14mDoMtx_stack_c)
//	800AADA4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	800AADA8: 803DD470 (now__14mDoMtx_stack_c)
//	800AADAC: 803DD470 (now__14mDoMtx_stack_c)
//	800AADB0: 80430D3C (BaseZ__4cXyz)
//	800AADB4: 80430D3C (BaseZ__4cXyz)
//	800AADBC: 80346E4C (PSMTXMultVecSR)
//	800AADD0: 80266B84 (__ml__4cXyzCFf)
//	800AADE0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800AADFC: 803DD470 (now__14mDoMtx_stack_c)
//	800AAE00: 803DD470 (now__14mDoMtx_stack_c)
//	800AAE04: 80430D24 (BaseY__4cXyz)
//	800AAE08: 80430D24 (BaseY__4cXyz)
//	800AAE10: 80346E4C (PSMTXMultVecSR)
//	800AAE1C: 80452D04 (lit_6896)
//	800AAE20: 80266B84 (__ml__4cXyzCFf)
//	800AAE30: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800AAE58: 8026F2E8 (SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz)
//	800AAE64: 80452D3C (lit_7808)
//	800AAE68: 803470D8 (PSVECScale)
//	800AAE84: 804061C0 (g_dComIfG_gameInfo)
//	800AAE88: 804061C0 (g_dComIfG_gameInfo)
//	800AAE94: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AAE98: 804061C0 (g_dComIfG_gameInfo)
//	800AAE9C: 804061C0 (g_dComIfG_gameInfo)
//	800AAEAC: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AAEB8: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AAF04: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800AAF10: 80452C98 (lit_5943)
//	800AAF14: 80266B84 (__ml__4cXyzCFf)
//	800AAF38: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	800AAF3C: 80439A20 (sincosTable___5JMath)
//	800AAF40: 80439A20 (sincosTable___5JMath)
//	800AAF68: 80452CC0 (lit_6108)
//	800AAF88: 804061C0 (g_dComIfG_gameInfo)
//	800AAF8C: 804061C0 (g_dComIfG_gameInfo)
//	800AAF98: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AAFA4: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AAFB0: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800AAFD4: 80108784 (checkLv7BossRoom__9daAlink_cFv)
//	800AB014: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800AB034: 80347138 (PSVECSquareMag)
//	800AB038: 80452CC0 (lit_6108)
//	800AB048: 80452CE8 (lit_6846)
//	800AB050: 80452CF0 (lit_6847)
//	800AB098: 80452CF8 (lit_6848)
//	800AB0A4: 80450AE0 (__float_nan)
//	800AB0A8: 80450AE0 (__float_nan)
//	800AB114: 80450AE0 (__float_nan)
//	800AB118: 80450AE0 (__float_nan)
//	800AB11C: 80452E64 (lit_14954)
//	800AB138: 80267128 (atan2sX_Z__4cXyzCFv)
//	800AB140: 80270E24 (cLib_distanceAngleS__Fss)
//	800AB14C: 80452CBC (lit_6041)
//	800AB164: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800AB168: 804061C0 (g_dComIfG_gameInfo)
//	800AB16C: 804061C0 (g_dComIfG_gameInfo)
//	800AB178: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	800AB184: 80452CBC (lit_6041)
//	800AB190: 80452CC0 (lit_6108)
//	800AB1C0: 80266B84 (__ml__4cXyzCFf)
//	800AB1D0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800AB1FC: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800AB200: 804061C0 (g_dComIfG_gameInfo)
//	800AB204: 804061C0 (g_dComIfG_gameInfo)
//	800AB210: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	800AB240: 8026F2E8 (SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz)
//	800AB250: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800AB280: 804061C0 (g_dComIfG_gameInfo)
//	800AB284: 804061C0 (g_dComIfG_gameInfo)
//	800AB290: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AB29C: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AB2A8: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AB2D0: 804061C0 (g_dComIfG_gameInfo)
//	800AB2D4: 804061C0 (g_dComIfG_gameInfo)
//	800AB31C: 80084AC4 (MoveCAt__8dCcD_SphFR4cXyz)
//	800AB338: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	800AB33C: 804061C0 (g_dComIfG_gameInfo)
//	800AB340: 804061C0 (g_dComIfG_gameInfo)
//	800AB34C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AB350: 804061C0 (g_dComIfG_gameInfo)
//	800AB354: 804061C0 (g_dComIfG_gameInfo)
//	800AB364: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AB370: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AB3CC: 80084AC4 (MoveCAt__8dCcD_SphFR4cXyz)
//	800AB3DC: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	800AB3EC: 804061C0 (g_dComIfG_gameInfo)
//	800AB3F0: 804061C0 (g_dComIfG_gameInfo)
//	800AB400: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AB404: 804061C0 (g_dComIfG_gameInfo)
//	800AB408: 804061C0 (g_dComIfG_gameInfo)
//	800AB418: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AB440: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	800AB44C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AB458: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AB460: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AB478: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AB48C: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AB4A0: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AB4B4: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AB4C8: 800D17EC (setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf)
//	800AB4D0: 800D0ECC (checkCutDashAnime__9daAlink_cCFv)
//	800AB4E8: 80439A20 (sincosTable___5JMath)
//	800AB4EC: 80439A20 (sincosTable___5JMath)
//	800AB504: 80452D00 (lit_6895)
//	800AB510: 80452D78 (lit_8676)
//	800AB548: 80439A20 (sincosTable___5JMath)
//	800AB54C: 80439A20 (sincosTable___5JMath)
//	800AB564: 80452D00 (lit_6895)
//	800AB5D8: 80452D00 (lit_6895)
//	800AB5DC: 80266B84 (__ml__4cXyzCFf)
//	800AB5EC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800AB610: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	800AB614: 80430CF4 (Zero__4cXyz)
//	800AB618: 80430CF4 (Zero__4cXyz)
//	800AB644: 804061C0 (g_dComIfG_gameInfo)
//	800AB648: 804061C0 (g_dComIfG_gameInfo)
//	800AB654: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AB658: 804061C0 (g_dComIfG_gameInfo)
//	800AB65C: 804061C0 (g_dComIfG_gameInfo)
//	800AB66C: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AB674: 800AA6B4 (decSwordBlur__9daAlink_cFv)
//	800AB69C: 80267674 (cM_atan2s__Fff)
//	800AB6D8: 80452DB0 (lit_10039)
//	800AB6F8: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800AB6FC: 804061C0 (g_dComIfG_gameInfo)
//	800AB700: 804061C0 (g_dComIfG_gameInfo)
//	800AB70C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AB710: 804061C0 (g_dComIfG_gameInfo)
//	800AB714: 804061C0 (g_dComIfG_gameInfo)
//	800AB724: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AB72C: 800AA6B4 (decSwordBlur__9daAlink_cFv)
//	800AB748: 800AA2E0 (setSwordAtCollision__9daAlink_cFi)
//	800AB75C: 800D0ECC (checkCutDashAnime__9daAlink_cCFv)
//	800AB770: 80084908 (StartCAt__8dCcD_CylFR4cXyz)
//	800AB774: 804061C0 (g_dComIfG_gameInfo)
//	800AB778: 804061C0 (g_dComIfG_gameInfo)
//	800AB784: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AB78C: 800D13AC (checkCutTypeNoBlur__9daAlink_cCFv)
//	800AB79C: 80452CC0 (lit_6108)
//	800AB7B0: 801256EC (initBlur__14daAlink_blur_cFfiPC4cXyzPC4cXyzPC4cXyz)
//	800AB7BC: 800AA6B4 (decSwordBlur__9daAlink_cFv)
//	800AB7CC: 800AA2E0 (setSwordAtCollision__9daAlink_cFi)
//	800AB7D4: 800D0ECC (checkCutDashAnime__9daAlink_cCFv)
//	800AB7E8: 80084954 (MoveCAt__8dCcD_CylFR4cXyz)
//	800AB7EC: 804061C0 (g_dComIfG_gameInfo)
//	800AB7F0: 804061C0 (g_dComIfG_gameInfo)
//	800AB7FC: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AB804: 800D13AC (checkCutTypeNoBlur__9daAlink_cCFv)
//	800AB820: 8012589C (copyBlur__14daAlink_blur_cFPC4cXyzPC4cXyzPC4cXyz)
//	800AB82C: 800AA6B4 (decSwordBlur__9daAlink_cFv)
//	800AB838: 800AA6B4 (decSwordBlur__9daAlink_cFv)
//	800AB844: 800AA9DC (resetAtCollision__9daAlink_cFi)
//	800AB84C: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800AB864: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setAtCollision() {
    nofralloc
#include "asm/d/a/d_a_alink/setAtCollision__9daAlink_cFv.s"
}
#pragma pop

/* 800AB878-800ABAE0 0268+00 s=1 e=0 z=0  None .text      setWolfCollisionPos__9daAlink_cFv */
//	800AB890: 803621D4 (_savegpr_27)
//	800AB8A8: 80392034 (localHead)
//	800AB8AC: 80392034 (localHead)
//	800AB8B4: 80346D6C (PSMTXMultVec)
//	800AB8C0: 80084AC4 (MoveCAt__8dCcD_SphFR4cXyz)
//	800AB900: 80452C98 (lit_5943)
//	800AB960: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800AB9A0: 80452C98 (lit_5943)
//	800ABA04: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800ABA14: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800ABA20: 80452C98 (lit_5943)
//	800ABA24: 80266B84 (__ml__4cXyzCFf)
//	800ABA40: 80452C98 (lit_5943)
//	800ABA60: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800ABA70: 80452D78 (lit_8676)
//	800ABA90: 8026F1F8 (SetH__8cM3dGCylFf)
//	800ABAAC: 80452C98 (lit_5943)
//	800ABACC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfCollisionPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfCollisionPos__9daAlink_cFv.s"
}
#pragma pop

/* 800ABAE0-800ABB28 0048+00 s=2 e=0 z=0  None .text      initLockAt__9daAlink_cFv */
//	800ABB14: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initLockAt() {
    nofralloc
#include "asm/d/a/d_a_alink/initLockAt__9daAlink_cFv.s"
}
#pragma pop

/* 800ABB28-800ABB84 005C+00 s=3 e=0 z=0  None .text      cancelLockAt__9daAlink_cFv */
//	800ABB64: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelLockAt() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelLockAt__9daAlink_cFv.s"
}
#pragma pop

/* 800ABB84-800ABDB8 0234+00 s=1 e=0 z=0  None .text      setCollisionPos__9daAlink_cFv */
//	800ABBD0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800ABBDC: 80452C98 (lit_5943)
//	800ABBE0: 80266B84 (__ml__4cXyzCFf)
//	800ABC20: 80452DB4 (lit_10040)
//	800ABC30: 80452C98 (lit_5943)
//	800ABC50: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800ABC5C: 8026F1F8 (SetH__8cM3dGCylFf)
//	800ABC6C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800ABC78: 80452C98 (lit_5943)
//	800ABC7C: 80266B84 (__ml__4cXyzCFf)
//	800ABC8C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800ABC98: 80452C98 (lit_5943)
//	800ABC9C: 80266B84 (__ml__4cXyzCFf)
//	800ABCF0: 80452DB4 (lit_10040)
//	800ABD00: 80452C98 (lit_5943)
//	800ABD20: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800ABD2C: 8026F1F8 (SetH__8cM3dGCylFf)
//	800ABD3C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800ABD48: 80452C98 (lit_5943)
//	800ABD4C: 80266B84 (__ml__4cXyzCFf)
//	800ABD68: 80452C98 (lit_5943)
//	800ABD84: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800ABD90: 8026F1F8 (SetH__8cM3dGCylFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCollisionPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setCollisionPos__9daAlink_cFv.s"
}
#pragma pop

/* 800ABDB8-800AC328 0570+00 s=1 e=0 z=0  None .text      setCollision__9daAlink_cFv */
//	800ABDC8: 803621D0 (_savegpr_26)
//	800ABDD4: 80083830 (Move__10dCcD_GSttsFv)
//	800ABDDC: 80083830 (Move__10dCcD_GSttsFv)
//	800ABDE8: 800D77C8 (checkMagicArmorNoDamage__9daAlink_cFv)
//	800ABE4C: 800DCF04 (checkPlayerGuardAndAttack__9daAlink_cCFv)
//	800ABF64: 800AA5E8 (checkNoCollisionCorret__9daAlink_cFv)
//	800ABF74: 80108980 (checkOctaIealSpecialCollect__9daAlink_cFv)
//	800ABF9C: 800AB878 (setWolfCollisionPos__9daAlink_cFv)
//	800ABFA8: 800ABB84 (setCollisionPos__9daAlink_cFv)
//	800ABFE0: 800844B8 (ResetTgHit__12dCcD_GObjInfFv)
//	800AC010: 800844B8 (ResetTgHit__12dCcD_GObjInfFv)
//	800AC05C: 80430D3C (BaseZ__4cXyz)
//	800AC060: 80430D3C (BaseZ__4cXyz)
//	800AC068: 80346E4C (PSMTXMultVecSR)
//	800AC084: 80452CC0 (lit_6108)
//	800AC094: 80347138 (PSVECSquareMag)
//	800AC098: 80452CC0 (lit_6108)
//	800AC0A8: 80452CE8 (lit_6846)
//	800AC0B0: 80452CF0 (lit_6847)
//	800AC0F8: 80452CF8 (lit_6848)
//	800AC104: 80450AE0 (__float_nan)
//	800AC108: 80450AE0 (__float_nan)
//	800AC174: 80450AE0 (__float_nan)
//	800AC178: 80450AE0 (__float_nan)
//	800AC17C: 80452D88 (lit_8782)
//	800AC18C: 80267128 (atan2sX_Z__4cXyzCFv)
//	800AC1A8: 804061C0 (g_dComIfG_gameInfo)
//	800AC1AC: 804061C0 (g_dComIfG_gameInfo)
//	800AC1BC: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AC1C0: 804061C0 (g_dComIfG_gameInfo)
//	800AC1C4: 804061C0 (g_dComIfG_gameInfo)
//	800AC1D8: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AC1EC: 800AA7EC (setWolfAtCollision__9daAlink_cFv)
//	800AC208: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AC218: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AC248: 800846B0 (ResetCoHit__12dCcD_GObjInfFv)
//	800AC264: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AC274: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AC294: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AC2A4: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	800AC2BC: 800AAABC (setAtCollision__9daAlink_cFv)
//	800AC2D4: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	800AC2E0: 8026F200 (SetR__8cM3dGCylFf)
//	800AC2EC: 8026F1F8 (SetH__8cM3dGCylFf)
//	800AC2F8: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	800AC314: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCollision() {
    nofralloc
#include "asm/d/a/d_a_alink/setCollision__9daAlink_cFv.s"
}
#pragma pop

/* 800AC328-800AC378 0050+00 s=1 e=0 z=0  None .text      getBaseAnimeFrame__9daAlink_cCFv */
//	800AC33C: 80452CC0 (lit_6108)
//	800AC34C: 80452CB0 (lit_6025)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBaseAnimeFrame() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBaseAnimeFrame__9daAlink_cCFv.s"
}
#pragma pop

/* 800AC378-800AC394 001C+00 s=1 e=0 z=0  None .text      setAnimeFrame__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setAnimeFrame(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setAnimeFrame__9daAlink_cFf.s"
}
#pragma pop

/* 800AC394-800AC450 00BC+00 s=6 e=0 z=0  None .text
 * setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff           */
//	800AC3B4: 803621D8 (_savegpr_28)
//	800AC3DC: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800AC3E8: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800AC3EC: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800AC3FC: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800AC400: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800AC424: 8015E544 (setFrameCtrl__16daPy_frameCtrl_cFUcssff)
//	800AC43C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFrameCtrl(daPy_frameCtrl_c* param_0, u8 param_1, s16 param_2, s16 param_3,
                                 f32 param_4, f32 param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453278-80453280 0008+00 s=1 e=0 z=0  None .sdata2    kandelaarAnm$62207 */
SECTION_SDATA2 static u8 kandelaarAnm[8] = {
    0x02, 0x6A, 0x02, 0x68, 0x02, 0x66, 0x02, 0x64,
};

/* 800AC450-800AC558 0108+00 s=23 e=0 z=0  None .text
 * getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM        */
//	800AC460: 803621DC (_savegpr_29)
//	800AC46C: 8038D658 (lit_3757)
//	800AC470: 8038D658 (lit_3757)
//	800AC488: 80453278 (kandelaarAnm)
//	800AC498: 80453278 (kandelaarAnm)
//	800AC4A8: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800AC510: 800F3D58 (checkFishingRodAndLureItem__9daAlink_cCFv)
//	800AC544: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMainBckData(daAlink_c::daAlink_ANM param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800AC558-800AC5B4 005C+00 s=51 e=0 z=2  None .text
 * checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM */
//	800AC580: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUnderMove0BckNoArc(daAlink_c::daAlink_ANM param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800AC5B4-800AC610 005C+00 s=4 e=0 z=0  None .text
 * checkUnderMove1BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM */
//	800AC5DC: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUnderMove1BckNoArc(daAlink_c::daAlink_ANM param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/func_800AC5B4.s"
}
#pragma pop

/* 800AC610-800AC738 0128+00 s=3 e=0 z=0  None .text
 * getUnderUpperAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMPP15J3DAnmTransformPP15J3DAnmTransformiUl
 */
//	800AC620: 803621C8 (_savegpr_24)
//	800AC638: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800AC664: 800A3D0C (getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl)
//	800AC6C4: 800A3D0C (getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl)
//	800AC724: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getUnderUpperAnime(daAlink_c::daAlink_ANM param_0, J3DAnmTransform** param_1,
                                       J3DAnmTransform** param_2, int param_3, u32 param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/getUnderUpperAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMPP15J3DAnmTransformPP15J3DAnmTransformiUl.s"
}
#pragma pop

/* 800AC738-800AC754 001C+00 s=7 e=0 z=0  None .text      setDoubleAnimeBlendRatio__9daAlink_cFf */
//	800AC738: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDoubleAnimeBlendRatio(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDoubleAnimeBlendRatio__9daAlink_cFf.s"
}
#pragma pop

/* 800AC754-800ACA14 02C0+00 s=2 e=0 z=0  None .text
 * commonDoubleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformfffi
 */
//	800AC794: 803621C8 (_savegpr_24)
//	800AC7D0: 80452CC0 (lit_6108)
//	800AC7E0: 80452CB0 (lit_6025)
//	800AC808: 800AC738 (setDoubleAnimeBlendRatio__9daAlink_cFf)
//	800AC810: 80452CB0 (lit_6025)
//	800AC844: 80452CB8 (lit_6040)
//	800AC884: 800AC394 (setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff)
//	800AC8B8: 800AC394 (setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff)
//	800AC8D8: 80452CB0 (lit_6025)
//	800AC920: 800AC394 (setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff)
//	800AC940: 80452CB0 (lit_6025)
//	800AC988: 800AC394 (setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff)
//	800AC9B4: 800BF204 (setBasAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDER)
//	800AC9C4: 800BF204 (setBasAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDER)
//	800ACA00: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonDoubleAnime(J3DAnmTransform* param_0, J3DAnmTransform* param_1,
                                      J3DAnmTransform* param_2, J3DAnmTransform* param_3,
                                      f32 param_4, f32 param_5, f32 param_6, int param_7) {
    nofralloc
#include "asm/d/a/d_a_alink/func_800AC754.s"
}
#pragma pop

/* 800ACA14-800ACD40 032C+00 s=14 e=0 z=0  None .text
 * setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif */
//	800ACA44: 803621D0 (_savegpr_26)
//	800ACA68: 8038D658 (lit_3757)
//	800ACA6C: 8038D658 (lit_3757)
//	800ACA80: 800AC610
//(getUnderUpperAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMPP15J3DAnmTransformPP15J3DAnmTransformiUl)
//	800ACAA0: 800AC610
//(getUnderUpperAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMPP15J3DAnmTransformPP15J3DAnmTransformiUl)
//	800ACAAC: 80452CC0 (lit_6108)
//	800ACAF0: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800ACAFC: 80452CB8 (lit_6040)
//	800ACB14: 80452CB8 (lit_6040)
//	800ACB40: 80452CC0 (lit_6108)
//	800ACB64: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800ACB70: 80452CB8 (lit_6040)
//	800ACB88: 80452CB8 (lit_6040)
//	800ACBC0: 800AC754
//(commonDoubleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformfffi)
//	800ACBC4: 80452CC0 (lit_6108)
//	800ACBE4: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800ACBF0: 800AA2BC (setHandIndex__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800ACC1C: 800B33E4 (checkRestHPAnime__9daAlink_cFv)
//	800ACC30: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ACC44: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ACC58: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ACC68: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800ACC84: 800AD374 (setUpperAnimeBaseMorf__9daAlink_cFUsf)
//	800ACC90: 800AF9A8 (setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800ACC9C: 800B3358 (setTiredVoice__9daAlink_cFP16daPy_frameCtrl_c)
//	800ACCB8: 80452CC4 (lit_6109)
//	800ACCBC: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800ACCC8: 800AF9A8 (setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800ACCF0: 800AF9A8 (setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800ACD00: 800AF9A8 (setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800ACD2C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDoubleAnime(f32 param_0, f32 param_1, f32 param_2,
                                   daAlink_c::daAlink_ANM param_3, daAlink_c::daAlink_ANM param_4,
                                   int param_5, f32 param_6) {
    nofralloc
#include "asm/d/a/d_a_alink/setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif.s"
}
#pragma pop

/* 800ACD40-800ACF80 0240+00 s=2 e=0 z=0  None .text
 * commonSingleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformffs */
//	800ACD68: 803621D4 (_savegpr_27)
//	800ACD94: 80452CC0 (lit_6108)
//	800ACD98: 800AC738 (setDoubleAnimeBlendRatio__9daAlink_cFf)
//	800ACDBC: 80452CC0 (lit_6108)
//	800ACDCC: 80452CB0 (lit_6025)
//	800ACE0C: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800ACE30: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800ACE34: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800ACE3C: 80452CB8 (lit_6040)
//	800ACE58: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800ACE64: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800ACE68: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800ACE70: 80452CB8 (lit_6040)
//	800ACEA8: 800AC394 (setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff)
//	800ACED0: 80452CC0 (lit_6108)
//	800ACEE0: 80452CB0 (lit_6025)
//	800ACF24: 800AC394 (setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff)
//	800ACF44: 800BF204 (setBasAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDER)
//	800ACF6C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonSingleAnime(J3DAnmTransform* param_0, J3DAnmTransform* param_1,
                                      f32 param_2, f32 param_3, s16 param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/commonSingleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformffs.s"
}
#pragma pop

/* 800ACF80-800ACFB0 0030+00 s=88 e=0 z=0  None .text
 * setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM     */
//	800ACF8C: 80452CB8 (lit_6040)
//	800ACF90: 80452CC0 (lit_6108)
//	800ACF98: 80452CC4 (lit_6109)
//	800ACF9C: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeBase(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800ACFB0-800ACFE0 0030+00 s=27 e=0 z=0  None .text
 * setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf */
//	800ACFC0: 80452CB8 (lit_6040)
//	800ACFC4: 80452CC0 (lit_6108)
//	800ACFCC: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeBaseMorf(daAlink_c::daAlink_ANM param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf.s"
}
#pragma pop

/* 800ACFE0-800AD00C 002C+00 s=77 e=0 z=0  None .text
 * setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff */
//	800ACFF0: 80452CC0 (lit_6108)
//	800ACFF8: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeBaseSpeed(daAlink_c::daAlink_ANM param_0, f32 param_1,
                                            f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff.s"
}
#pragma pop

/* 800AD00C-800AD0F4 00E8+00 s=58 e=0 z=0  None .text
 * setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf     */
//	800AD034: 803621DC (_savegpr_29)
//	800AD064: 800AC610
//(getUnderUpperAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMPP15J3DAnmTransformPP15J3DAnmTransformiUl)
//	800AD080: 800ACD40 (commonSingleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformffs)
//	800AD084: 80452CC0 (lit_6108)
//	800AD0A4: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800AD0B0: 800AA2BC (setHandIndex__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800AD0BC: 800AF9A8 (setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800AD0E0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnime(daAlink_c::daAlink_ANM param_0, f32 param_1, f32 param_2,
                                   s16 param_3, f32 param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf.s"
}
#pragma pop

/* 800AD0F4-800AD128 0034+00 s=93 e=0 z=0  None .text
 * setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c */
//	800AD114: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeParam(daAlink_c::daAlink_ANM param_0,
                                        daAlinkHIO_anm_c const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c.s"
}
#pragma pop

/* 800AD128-800AD170 0048+00 s=1 e=0 z=0  None .text
 * animePlay__9daAlink_cFP15J3DAnmTransformP16daPy_frameCtrl_c  */
//	800AD14C: 8015E510 (updateFrame__16daPy_frameCtrl_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::animePlay(J3DAnmTransform* param_0, daPy_frameCtrl_c* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/animePlay__9daAlink_cFP15J3DAnmTransformP16daPy_frameCtrl_c.s"
}
#pragma pop

/* 800AD170-800AD2D8 0168+00 s=2 e=0 z=0  None .text      allAnimePlay__9daAlink_cFv */
//	800AD180: 803621C8 (_savegpr_24)
//	800AD1A4: 8012CB0C (setWolfAnmVoice__9daAlink_cFv)
//	800AD1C8: 800AD128 (animePlay__9daAlink_cFP15J3DAnmTransformP16daPy_frameCtrl_c)
//	800AD1F4: 800AD128 (animePlay__9daAlink_cFP15J3DAnmTransformP16daPy_frameCtrl_c)
//	800AD20C: 800AD128 (animePlay__9daAlink_cFP15J3DAnmTransformP16daPy_frameCtrl_c)
//	800AD21C: 800AD128 (animePlay__9daAlink_cFP15J3DAnmTransformP16daPy_frameCtrl_c)
//	800AD238: 8000D428 (play__14mDoExt_baseAnmFv)
//	800AD254: 8000D428 (play__14mDoExt_baseAnmFv)
//	800AD27C: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800AD28C: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800AD29C: 8000D428 (play__14mDoExt_baseAnmFv)
//	800AD2AC: 8000D428 (play__14mDoExt_baseAnmFv)
//	800AD2B4: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800AD2BC: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800AD2C4: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::allAnimePlay() {
    nofralloc
#include "asm/d/a/d_a_alink/allAnimePlay__9daAlink_cFv.s"
}
#pragma pop

/* 800AD2D8-800AD340 0068+00 s=2 e=0 z=0  None .text      setUpperAnimeMorf__9daAlink_cFf */
//	800AD2E4: 80452CC0 (lit_6108)
//	800AD2FC: 80452DA0 (lit_9054)
//	800AD32C: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnimeMorf(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnimeMorf__9daAlink_cFf.s"
}
#pragma pop

/* 800AD340-800AD374 0034+00 s=15 e=0 z=0  None .text      setUpperAnimeBase__9daAlink_cFUs */
//	800AD350: 80452CB8 (lit_6040)
//	800AD354: 80452CC0 (lit_6108)
//	800AD35C: 80452CC4 (lit_6109)
//	800AD360: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnimeBase(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnimeBase__9daAlink_cFUs.s"
}
#pragma pop

/* 800AD374-800AD3A8 0034+00 s=7 e=0 z=0  None .text      setUpperAnimeBaseMorf__9daAlink_cFUsf */
//	800AD388: 80452CB8 (lit_6040)
//	800AD38C: 80452CC0 (lit_6108)
//	800AD394: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnimeBaseMorf(u16 param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnimeBaseMorf__9daAlink_cFUsf.s"
}
#pragma pop

/* 800AD3A8-800AD3D8 0030+00 s=18 e=0 z=0  None .text      setUpperAnimeBaseSpeed__9daAlink_cFUsff
 */
//	800AD3BC: 80452CC0 (lit_6108)
//	800AD3C4: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnimeBaseSpeed(u16 param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnimeBaseSpeed__9daAlink_cFUsff.s"
}
#pragma pop

/* 800AD3D8-800AD6F0 0318+00 s=13 e=0 z=0  None .text
 * setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf  */
//	800AD408: 803621CC (_savegpr_25)
//	800AD434: 800AFCBC (resetFacePriAnime__9daAlink_cFv)
//	800AD454: 800B7190 (cancelItemUseQuake__9daAlink_cFi)
//	800AD4B4: 800A3D0C (getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl)
//	800AD4D8: 80452CB8 (lit_6040)
//	800AD4F4: 80452CC0 (lit_6108)
//	800AD504: 80452CB0 (lit_6025)
//	800AD52C: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800AD53C: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800AD54C: 800D0ECC (checkCutDashAnime__9daAlink_cCFv)
//	800AD56C: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800AD570: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800AD578: 80452CB8 (lit_6040)
//	800AD5B8: 800AC394 (setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff)
//	800AD5C8: 800AD2D8 (setUpperAnimeMorf__9daAlink_cFf)
//	800AD5D0: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800AD5E0: 800DFC70 (setBowNormalAnime__9daAlink_cFv)
//	800AD5E8: 800DEAE4 (deleteArrow__9daAlink_cFv)
//	800AD5F0: 800E3C9C (checkGrabAnimeAndThrow__9daAlink_cCFv)
//	800AD628: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	800AD664: 80138C04 (resetWolfEnemyBiteAll__9daAlink_cFv)
//	800AD6A4: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800AD6DC: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnime(u16 param_0, daAlink_c::daAlink_UPPER param_1, f32 param_2,
                                  f32 param_3, s16 param_4, f32 param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf.s"
}
#pragma pop

/* 800AD6F0-800AD724 0034+00 s=21 e=0 z=0  None .text
 * setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c */
//	800AD710: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnimeParam(u16 param_0, daAlink_c::daAlink_UPPER param_1,
                                       daAlinkHIO_anm_c const* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c.s"
}
#pragma pop

/* 800AD724-800AD8F4 01D0+00 s=65 e=0 z=0  None .text
 * resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf     */
//	800AD73C: 803621DC (_savegpr_29)
//	800AD784: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800AD79C: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800AD818: 80138C04 (resetWolfEnemyBiteAll__9daAlink_cFv)
//	800AD82C: 80452CC0 (lit_6108)
//	800AD858: 803283FC (init__12J3DFrameCtrlFs)
//	800AD864: 800AD2D8 (setUpperAnimeMorf__9daAlink_cFf)
//	800AD874: 800AFCBC (resetFacePriAnime__9daAlink_cFv)
//	800AD888: 800DEAE4 (deleteArrow__9daAlink_cFv)
//	800AD890: 800DFC70 (setBowNormalAnime__9daAlink_cFv)
//	800AD8B4: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	800AD8CC: 800B7190 (cancelItemUseQuake__9daAlink_cFi)
//	800AD8E0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetUpperAnime(daAlink_c::daAlink_UPPER param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf.s"
}
#pragma pop

/* 800AD8F4-800AD964 0070+00 s=2 e=0 z=0  None .text      setUnderAnimeMorf__9daAlink_cFf */
//	800AD900: 80452CC0 (lit_6108)
//	800AD918: 80452DA0 (lit_9054)
//	800AD940: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800AD950: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUnderAnimeMorf(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setUnderAnimeMorf__9daAlink_cFf.s"
}
#pragma pop

/* 800AD964-800ADAB8 0154+00 s=5 e=0 z=0  None .text
 * setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf  */
//	800AD994: 803621D0 (_savegpr_26)
//	800AD9C8: 800A3D0C (getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl)
//	800AD9EC: 80452CB8 (lit_6040)
//	800ADA08: 80452CC0 (lit_6108)
//	800ADA18: 80452CB0 (lit_6025)
//	800ADA68: 800AC394 (setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff)
//	800ADA78: 800AD8F4 (setUnderAnimeMorf__9daAlink_cFf)
//	800ADAA4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUnderAnime(u16 param_0, daAlink_c::daAlink_UNDER param_1, f32 param_2,
                                  f32 param_3, s16 param_4, f32 param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf.s"
}
#pragma pop

/* 800ADAB8-800ADAEC 0034+00 s=2 e=0 z=0  None .text
 * setUnderAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERPC16daAlinkHIO_anm_c */
//	800ADAD8: 800AD964 (setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUnderAnimeParam(u16 param_0, daAlink_c::daAlink_UNDER param_1,
                                       daAlinkHIO_anm_c const* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setUnderAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERPC16daAlinkHIO_anm_c.s"
}
#pragma pop

/* 800ADAEC-800ADB78 008C+00 s=17 e=0 z=0  None .text
 * resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf     */
//	800ADB1C: 80452CC0 (lit_6108)
//	800ADB48: 803283FC (init__12J3DFrameCtrlFs)
//	800ADB54: 800AD8F4 (setUnderAnimeMorf__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetUnderAnime(daAlink_c::daAlink_UNDER param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf.s"
}
#pragma pop

/* 800ADB78-800ADC50 00D8+00 s=34 e=0 z=0  None .text      setOldRootQuaternion__9daAlink_cFsss */
//	800ADBB8: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	800ADBE8: 8000CB5C (mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion)
//	800ADC04: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	800ADC34: 8000CB5C (mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setOldRootQuaternion(s16 param_0, s16 param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setOldRootQuaternion__9daAlink_cFsss.s"
}
#pragma pop

/* 800ADC50-800ADCEC 009C+00 s=2 e=0 z=0  None .text      checkAtnLeftAnime__9daAlink_cFv */
//	800ADC70: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ADC84: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ADC98: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ADCAC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ADCC0: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAtnLeftAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAtnLeftAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800ADCEC-800ADD88 009C+00 s=1 e=0 z=0  None .text      checkAtnRightAnime__9daAlink_cFv */
//	800ADD0C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ADD20: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ADD34: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ADD48: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ADD5C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAtnRightAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAtnRightAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800ADD88-800ADE14 008C+00 s=3 e=0 z=0  None .text      getMoveGroundAngleSpeedRate__9daAlink_cFv
 */
//	800ADDD0: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800ADDD8: 80439A20 (sincosTable___5JMath)
//	800ADDDC: 80439A20 (sincosTable___5JMath)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMoveGroundAngleSpeedRate() {
    nofralloc
#include "asm/d/a/d_a_alink/getMoveGroundAngleSpeedRate__9daAlink_cFv.s"
}
#pragma pop

/* 800ADE14-800AEA70 0C5C+00 s=20 e=0 z=0  None .text      setBlendMoveAnime__9daAlink_cFf */
//	800ADE64: 803621BC (_savegpr_21)
//	800ADE70: 8038D658 (lit_3757)
//	800ADE74: 8038D658 (lit_3757)
//	800ADE80: 800ADD88 (getMoveGroundAngleSpeedRate__9daAlink_cFv)
//	800ADE94: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800ADEA4: 800E251C (checkBootsMoveAnime__9daAlink_cFi)
//	800ADEB0: 80452CB8 (lit_6040)
//	800ADEE4: 8007353C (LockonTarget__12dAttention_cFl)
//	800ADF10: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800ADF24: 800E82B0 (checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c)
//	800ADFA0: 80452CC0 (lit_6108)
//	800ADFB0: 80347138 (PSVECSquareMag)
//	800ADFB4: 80452CC0 (lit_6108)
//	800ADFC4: 80452CE8 (lit_6846)
//	800ADFCC: 80452CF0 (lit_6847)
//	800AE014: 80452CF8 (lit_6848)
//	800AE020: 80450AE0 (__float_nan)
//	800AE024: 80450AE0 (__float_nan)
//	800AE090: 80450AE0 (__float_nan)
//	800AE094: 80450AE0 (__float_nan)
//	800AE098: 80452CB8 (lit_6040)
//	800AE0AC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800AE0BC: 80452CC0 (lit_6108)
//	800AE0C0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800AE0D8: 800B33E4 (checkRestHPAnime__9daAlink_cFv)
//	800AE0E8: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800AE124: 80452E64 (lit_14954)
//	800AE128: 80452CC4 (lit_6109)
//	800AE13C: 800E251C (checkBootsMoveAnime__9daAlink_cFi)
//	800AE154: 80452CB8 (lit_6040)
//	800AE174: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800AE184: 80452E0C (lit_14614)
//	800AE190: 80452C98 (lit_5943)
//	800AE1C0: 80452CC0 (lit_6108)
//	800AE1C4: 80452E74 (lit_15341)
//	800AE1DC: 80452CB8 (lit_6040)
//	800AE204: 80452DC0 (lit_10193)
//	800AE208: 80452CC4 (lit_6109)
//	800AE224: 80452DE4 (lit_12328)
//	800AE234: 800B21EC (checkSlope__9daAlink_cCFv)
//	800AE288: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800AE294: 80452CC0 (lit_6108)
//	800AE2A0: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800AE2C4: 800737E4 (LockonTruth__12dAttention_cFv)
//	800AE344: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800AE354: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800AE39C: 800737E4 (LockonTruth__12dAttention_cFv)
//	800AE3D0: 800ADC50 (checkAtnLeftAnime__9daAlink_cFv)
//	800AE454: 80452CC0 (lit_6108)
//	800AE460: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800AE480:
// 803650D0 (abs) 	800AE490: 80452EA8 (lit_16570) 	800AE4A0: 80452CA4 (lit_6021) 	800AE4CC:
// 800737E4 (LockonTruth__12dAttention_cFv) 	800AE508: 80452CB8 (lit_6040) 	800AE53C: 80452D8C
//(lit_8783) 	800AE540: 80452DC8 (lit_10286) 	800AE548: 80452D8C (lit_8783) 	800AE54C: 80452DC8
//(lit_10286) 	800AE55C: 803650D0 (abs) 	800AE560: 80452CB0 (lit_6025) 	800AE57C: 80452DE4 (lit_12328)
//	800AE584: 80452FDC (lit_27477)
//	800AE58C: 80452CB8 (lit_6040)
//	800AE5B0: 80452CC0 (lit_6108)
//	800AE5C0: 80347138 (PSVECSquareMag)
//	800AE5C4: 80452CB8 (lit_6040)
//	800AE5F4: 80452CB8 (lit_6040)
//	800AE614: 80105A98 (checkSnowCode__9daAlink_cCFv)
//	800AE624: 80452E0C (lit_14614)
//	800AE640: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
//	800AE644: 80452CB8 (lit_6040)
//	800AE664: 800AC5B4 (checkUnderMove1BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800AE674: 80452CC4 (lit_6109)
//	800AE684: 800AC5B4 (checkUnderMove1BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800AE694: 80452CC4 (lit_6109)
//	800AE6B8: 80452CB8 (lit_6040)
//	800AE708: 80452CB8 (lit_6040)
//	800AE72C: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800AE750:
// 80452CC0 (lit_6108) 	800AE760: 80347138 (PSVECSquareMag) 	800AE764: 80452CB8 (lit_6040)
// 800AE774: 800A7950 (checkWindSpeedOnAngle__9daAlink_cCFv) 	800AE7A0: 800AD340
//(setUpperAnimeBase__9daAlink_cFUs) 	800AE7F0: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800AE7F4:
// 80452CB8 (lit_6040) 	800AE810: 80452C98 (lit_5943) 	800AE824: 8032842C
// (checkPass__12J3DFrameCtrlFf) 	800AE844: 8032842C (checkPass__12J3DFrameCtrlFf) 	800AE860: 80452CB8
//(lit_6040) 	800AE87C: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800AE880:
// 80452CC0 (lit_6108) 	800AE890: 8032842C (checkPass__12J3DFrameCtrlFf) 	800AE8B0: 8032842C
//(checkPass__12J3DFrameCtrlFf) 	800AE8C8: 800A7950 (checkWindSpeedOnAngle__9daAlink_cCFv)
//800AE8F4: 800AD340 (setUpperAnimeBase__9daAlink_cFUs) 	800AE91C: 8032842C
// (checkPass__12J3DFrameCtrlFf) 	800AE950: 80452CC0 (lit_6108) 	800AE958: 80452CB8 (lit_6040)
//	800AE964: 804061C0 (g_dComIfG_gameInfo)
//	800AE968: 804061C0 (g_dComIfG_gameInfo)
//	800AE97C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800AE98C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800AE9C0: 80452CC0 (lit_6108)
//	800AE9C8: 80452CB8 (lit_6040)
//	800AE9D4: 804061C0 (g_dComIfG_gameInfo)
//	800AE9D8: 804061C0 (g_dComIfG_gameInfo)
//	800AE9EC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800AE9F0: 80452DA8 (lit_9652)
//	800AEA04: 800AA2BC (setHandIndex__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800AEA14: 800AA2BC (setHandIndex__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800AEA5C: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453280-80453284 0004+00 s=2 e=0 z=0  None .sdata2    @63332 */
SECTION_SDATA2 static f32 lit_63332 = -99.0f / 100.0f;

/* 80453284-80453288 0004+00 s=1 e=0 z=0  None .sdata2    @63333 */
SECTION_SDATA2 static f32 lit_63333 = 0.8659999966621399f;

/* 80453288-8045328C 0004+00 s=2 e=0 z=0  None .sdata2    @63334 */
SECTION_SDATA2 static f32 lit_63334 = -0.8659999966621399f;

/* 800AEA70-800AF11C 06AC+00 s=17 e=0 z=0  None .text      setBlendAtnMoveAnime__9daAlink_cFf */
//	800AEAB0: 803621D8 (_savegpr_28)
//	800AEABC: 8038D658 (lit_3757)
//	800AEAC0: 8038D658 (lit_3757)
//	800AEAD4: 80439A20 (sincosTable___5JMath)
//	800AEAD8: 80439A20 (sincosTable___5JMath)
//	800AEB28: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800AEB5C: 800B93F4 (swordEquip__9daAlink_cFi)
//	800AEB68: 80452CA4 (lit_6021)
//	800AEB8C: 80453280 (lit_63332)
//	800AEB9C: 80452D70 (lit_8501)
//	800AEBAC: 80453280 (lit_63332)
//	800AEC00: 80452D84 (lit_8781)
//	800AEC3C: 80453284 (lit_63333)
//	800AEC58: 80453288 (lit_63334)
//	800AEC70: 80452CC0 (lit_6108)
//	800AECE0: 800E7894 (checkSetChainPullAnime__9daAlink_cFs)
//	800AED08: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800AED30: 80452DA8 (lit_9652)
//	800AED38: 80452CB8 (lit_6040)
//	800AED44: 80452CC4 (lit_6109)
//	800AED48: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800AED4C: 80452CC0 (lit_6108)
//	800AED6C: 800AF11C (setBlendAtnBackMoveAnime__9daAlink_cFf)
//	800AED90: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	800AED9C: 800ADD88 (getMoveGroundAngleSpeedRate__9daAlink_cFv)
//	800AEE64: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800AEE74: 80452CC0 (lit_6108)
//	800AEE80: 80452CB8 (lit_6040)
//	800AEEB4: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800AEF4C:
// 800ACA14 (setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif)
//	800AEF50: 80452CB8 (lit_6040)
//	800AEFB4: 80452CB8 (lit_6040)
//	800AEFC8: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800AEFCC:
// 80452CC0 (lit_6108) 	800AEFF0: 80452CC0 (lit_6108) 	800AEFF4: 80452EB4 (lit_17382) 	800AF008:
// 80452D44 (lit_7977) 	800AF00C: 80452EB4 (lit_17382) 	800AF014: 80452D34 (lit_7710) 	800AF018:
// 80452CB8 (lit_6040) 	800AF034: 8032842C (checkPass__12J3DFrameCtrlFf) 	800AF058: 8032842C
//(checkPass__12J3DFrameCtrlFf) 	800AF08C: 80452DA0 (lit_9054) 	800AF0A4: 80452CC0 (lit_6108)
//	800AF0AC: 80452CB8 (lit_6040)
//	800AF0B8: 804061C0 (g_dComIfG_gameInfo)
//	800AF0BC: 804061C0 (g_dComIfG_gameInfo)
//	800AF0D0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800AF108: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendAtnMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendAtnMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 800AF11C-800AF4B0 0394+00 s=1 e=0 z=0  None .text      setBlendAtnBackMoveAnime__9daAlink_cFf */
//	800AF16C: 803621D8 (_savegpr_28)
//	800AF178: 8038D658 (lit_3757)
//	800AF17C: 8038D658 (lit_3757)
//	800AF184: 800E251C (checkBootsMoveAnime__9daAlink_cFi)
//	800AF1AC: 80452CB8 (lit_6040)
//	800AF23C: 800ADD88 (getMoveGroundAngleSpeedRate__9daAlink_cFv)
//	800AF260: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800AF270: 80452CC0 (lit_6108)
//	800AF280: 80452CB8 (lit_6040)
//	800AF2B0: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800AF2EC:
// 800ACA14 (setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif)
//	800AF2F0: 80452CB8 (lit_6040)
//	800AF304: 80452CB8 (lit_6040)
//	800AF320: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800AF324:
// 80452CC0 (lit_6108) 	800AF348: 80452EB4 (lit_17382) 	800AF34C: 8032842C
//(checkPass__12J3DFrameCtrlFf) 	800AF36C: 80452D8C (lit_8783) 	800AF370: 8032842C
//(checkPass__12J3DFrameCtrlFf) 	800AF390: 80452CC0 (lit_6108) 	800AF394: 8032842C
//(checkPass__12J3DFrameCtrlFf) 	800AF3B4: 80452C98 (lit_5943) 	800AF3BC: 80452CB0 (lit_6025)
//	800AF3DC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800AF410: 80452DA0 (lit_9054)
//	800AF428: 80452CC0 (lit_6108)
//	800AF430: 80452CB8 (lit_6040)
//	800AF43C: 804061C0 (g_dComIfG_gameInfo)
//	800AF440: 804061C0 (g_dComIfG_gameInfo)
//	800AF454: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800AF49C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendAtnBackMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendAtnBackMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 800AF4B0-800AF61C 016C+00 s=29 e=0 z=0  None .text      setFaceBck__9daAlink_cFUsiUs */
//	800AF4C0: 803621DC (_savegpr_29)
//	800AF50C: 8007353C (LockonTarget__12dAttention_cFl)
//	800AF518: 800B3500 (checkAttentionState__9daAlink_cFv)
//	800AF544: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800AF580: 800A3CE4 (setIdxMask__9daAlink_cFPUsPUs)
//	800AF598: 8015F118 (loadDataDemoRID__14daPy_anmHeap_cFUsUs)
//	800AF5B4: 8015F0D0 (loadDataPriIdx__14daPy_anmHeap_cFUs)
//	800AF5C8: 8015F068 (loadDataIdx__14daPy_anmHeap_cFUs)
//	800AF5E8: 80452CB8 (lit_6040)
//	800AF5F8: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	800AF5FC: 80452CC0 (lit_6108)
//	800AF608: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFaceBck(u16 param_0, int param_1, u16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setFaceBck__9daAlink_cFUsiUs.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045328C-80453290 0004+00 s=2 e=0 z=0  None .sdata2    @63482 */
SECTION_SDATA2 static f32 lit_63482 = 0.012000000104308128f;

/* 800AF61C-800AF7D0 01B4+00 s=7 e=0 z=0  None .text      setFaceBtp__9daAlink_cFUsiUs */
//	800AF648: 800A3CE4 (setIdxMask__9daAlink_cFPUsPUs)
//	800AF660: 8015F118 (loadDataDemoRID__14daPy_anmHeap_cFUsUs)
//	800AF678: 8015F0D0 (loadDataPriIdx__14daPy_anmHeap_cFUs)
//	800AF688: 8015F068 (loadDataIdx__14daPy_anmHeap_cFUs)
//	800AF6A0: 8032B09C (searchUpdateMaterialID__16J3DAnmTexPatternFP12J3DModelData)
//	800AF6B0: 8032FBC8 (entryTexNoAnimator__16J3DMaterialTableFP16J3DAnmTexPattern)
//	800AF6DC: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	800AF6E8: 80452E44 (lit_14760)
//	800AF738: 8045328C (lit_63482)
//	800AF768: 80452CC0 (lit_6108)
//	800AF798: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	800AF7A4: 80452E44 (lit_14760)
//	800AF7B0: 8045328C (lit_63482)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFaceBtp(u16 param_0, int param_1, u16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setFaceBtp__9daAlink_cFUsiUs.s"
}
#pragma pop

/* 800AF7D0-800AF8A0 00D0+00 s=6 e=0 z=0  None .text      setFaceBtk__9daAlink_cFUsiUs */
//	800AF7FC: 800A3CE4 (setIdxMask__9daAlink_cFPUsPUs)
//	800AF814: 8015F118 (loadDataDemoRID__14daPy_anmHeap_cFUsUs)
//	800AF838: 8015F0D0 (loadDataPriIdx__14daPy_anmHeap_cFUs)
//	800AF848: 8015F068 (loadDataIdx__14daPy_anmHeap_cFUs)
//	800AF860: 8032B1D4 (searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP12J3DModelData)
//	800AF870: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	800AF878: 80450FC9 (struct_80450FC8)
//	800AF87C: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFaceBtk(u16 param_0, int param_1, u16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setFaceBtk__9daAlink_cFUsiUs.s"
}
#pragma pop

/* 800AF8A0-800AF9A8 0108+00 s=31 e=0 z=0  None .text
 * setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM  */
//	800AF8B0: 803621DC (_savegpr_29)
//	800AF8C0: 800A79EC (checkWindSpeedOnAngleAnime__9daAlink_cCFi)
//	800AF8F8: 804061C0 (g_dComIfG_gameInfo)
//	800AF8FC: 804061C0 (g_dComIfG_gameInfo)
//	800AF954: 803914A8 (m_faceTexDataTable__9daAlink_c)
//	800AF958: 803914A8 (m_faceTexDataTable__9daAlink_c)
//	800AF970: 800AF61C (setFaceBtp__9daAlink_cFUsiUs)
//	800AF988: 800AF7D0 (setFaceBtk__9daAlink_cFUsiUs)
//	800AF994: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFaceBasicTexture(daAlink_c::daAlink_FTANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM.s"
}
#pragma pop

/* 800AF9A8-800AFAA8 0100+00 s=5 e=0 z=0  None .text
 * setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM      */
//	800AF9C4: 8038FCA8 (m_anmDataTable__9daAlink_c)
//	800AF9C8: 8038FCA8 (m_anmDataTable__9daAlink_c)
//	800AF9D4: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800AFA0C: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800AFA30: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800AFA54: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800AFA70: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800AFA8C: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFaceBasicAnime(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800AFAA8-800AFB14 006C+00 s=16 e=0 z=0  None .text
 * setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM    */
//	800AFAC4: 803914A8 (m_faceTexDataTable__9daAlink_c)
//	800AFAC8: 803914A8 (m_faceTexDataTable__9daAlink_c)
//	800AFAE0: 800AF61C (setFaceBtp__9daAlink_cFUsiUs)
//	800AFAF8: 800AF7D0 (setFaceBtk__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFacePriTexture(daAlink_c::daAlink_FTANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM.s"
}
#pragma pop

/* 800AFB14-800AFB74 0060+00 s=6 e=0 z=0  None .text
 * setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM        */
//	800AFB30: 8038FCA8 (m_anmDataTable__9daAlink_c)
//	800AFB34: 8038FCA8 (m_anmDataTable__9daAlink_c)
//	800AFB40: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800AFB58: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFacePriAnime(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800AFB74-800AFBD0 005C+00 s=1 e=0 z=0  None .text      resetFacePriBck__9daAlink_cFv */
//	800AFBBC: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFacePriBck() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFacePriBck__9daAlink_cFv.s"
}
#pragma pop

/* 800AFBD0-800AFC2C 005C+00 s=1 e=0 z=0  None .text      resetFacePriBtp__9daAlink_cFv */
//	800AFC18: 800AF61C (setFaceBtp__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFacePriBtp() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFacePriBtp__9daAlink_cFv.s"
}
#pragma pop

/* 800AFC2C-800AFC88 005C+00 s=1 e=0 z=0  None .text      resetFacePriBtk__9daAlink_cFv */
//	800AFC74: 800AF7D0 (setFaceBtk__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFacePriBtk() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFacePriBtk__9daAlink_cFv.s"
}
#pragma pop

/* 800AFC88-800AFCBC 0034+00 s=1 e=0 z=0  None .text      resetFacePriTexture__9daAlink_cFv */
//	800AFC9C: 800AFBD0 (resetFacePriBtp__9daAlink_cFv)
//	800AFCA4: 800AFC2C (resetFacePriBtk__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFacePriTexture() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFacePriTexture__9daAlink_cFv.s"
}
#pragma pop

/* 800AFCBC-800AFCF0 0034+00 s=7 e=0 z=0  None .text      resetFacePriAnime__9daAlink_cFv */
//	800AFCD0: 800AFC88 (resetFacePriTexture__9daAlink_cFv)
//	800AFCD8: 800AFB74 (resetFacePriBck__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFacePriAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFacePriAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800AFCF0-800B0098 03A8+00 s=2 e=0 z=0  None .text      playFaceTextureAnime__9daAlink_cFv */
//	800AFD2C: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800AFD34: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800AFD64: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800AFE18: 8026786C (cM_rnd__Fv)
//	800AFE78: 80453008 (lit_32072)
//	800AFED8: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800AFEE8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800AFEF8: 80452CB0 (lit_6025)
//	800AFF40: 80452CB8 (lit_6040)
//	800AFF6C: 80452CB8 (lit_6040)
//	800AFF7C: 80452CB0 (lit_6025)
//	800B000C: 80452CB0 (lit_6025)
//	800B0058: 80101890 (checkZoraWearMaskDraw__9daAlink_cFv)
//	800B0074: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::playFaceTextureAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/playFaceTextureAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800B0098-800B0150 00B8+00 s=14 e=0 z=0  None .text getGroundAngle__9daAlink_cFP13cBgS_PolyInfos
 */
//	800B00A8: 803621DC (_savegpr_29)
//	800B00B4: 804061C0 (g_dComIfG_gameInfo)
//	800B00B8: 804061C0 (g_dComIfG_gameInfo)
//	800B00C4: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800B00D8: 803A37C0 (__vt__8cM3dGPla)
//	800B00DC: 803A37C0 (__vt__8cM3dGPla)
//	800B00F0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B0100: 802681E4 (cBgW_CheckBGround__Ff)
//	800B010C: 803A37C0 (__vt__8cM3dGPla)
//	800B0110: 803A37C0 (__vt__8cM3dGPla)
//	800B0128: 8001DBD8 (fopAcM_getPolygonAngle__FPC8cM3dGPlas)
//	800B012C: 803A37C0 (__vt__8cM3dGPla)
//	800B0130: 803A37C0 (__vt__8cM3dGPla)
//	800B013C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getGroundAngle(cBgS_PolyInfo* param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/getGroundAngle__9daAlink_cFP13cBgS_PolyInfos.s"
}
#pragma pop

/* 800B0150-800B01FC 00AC+00 s=1 e=0 z=0  None .text      getRoofAngle__9daAlink_cFP13cBgS_PolyInfos
 */
//	800B0160: 803621DC (_savegpr_29)
//	800B016C: 803A37C0 (__vt__8cM3dGPla)
//	800B0170: 803A37C0 (__vt__8cM3dGPla)
//	800B0178: 804061C0 (g_dComIfG_gameInfo)
//	800B017C: 804061C0 (g_dComIfG_gameInfo)
//	800B018C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B01A0: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800B01AC: 803A37C0 (__vt__8cM3dGPla)
//	800B01B0: 803A37C0 (__vt__8cM3dGPla)
//	800B01C8: 8001DBD8 (fopAcM_getPolygonAngle__FPC8cM3dGPlas)
//	800B01D8: 803A37C0 (__vt__8cM3dGPla)
//	800B01DC: 803A37C0 (__vt__8cM3dGPla)
//	800B01E8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getRoofAngle(cBgS_PolyInfo* param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/getRoofAngle__9daAlink_cFP13cBgS_PolyInfos.s"
}
#pragma pop

/* 800B01FC-800B02BC 00C0+00 s=2 e=0 z=0  None .text
 * getWallEdgePos__9daAlink_cFRC4cXyzP8cM3dGPlaP8cM3dGPlaP4cXyzi */
//	800B020C: 803621D8 (_savegpr_28)
//	800B0230: 80452CC0 (lit_6108)
//	800B0244: 80266F48 (normalizeZP__4cXyzFv)
//	800B0280: 8026F3DC (__ct__8cM3dGPlaFPC4cXyzf)
//	800B0294: 8026E8A0 (cM3d_3PlaneCrossPos__FRC8cM3dGPlaRC8cM3dGPlaRC8cM3dGPlaP3Vec)
//	800B0298: 803A37C0 (__vt__8cM3dGPla)
//	800B029C: 803A37C0 (__vt__8cM3dGPla)
//	800B02A8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWallEdgePos(cXyz const& param_0, cM3dGPla* param_1, cM3dGPla* param_2,
                                   cXyz* param_3, int param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/getWallEdgePos__9daAlink_cFRC4cXyzP8cM3dGPlaP8cM3dGPlaP4cXyzi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453290-80453294 0004+00 s=1 e=0 z=0  None .sdata2    @64357 */
SECTION_SDATA2 static f32 lit_64357 = 36.5f;

/* 800B02BC-800B146C 11B0+00 s=9 e=0 z=0  None .text      setFrontWallType__9daAlink_cFv */
//	800B0314: 803621C4 (_savegpr_23)
//	800B031C: 8038D658 (lit_3757)
//	800B0320: 8038D658 (lit_3757)
//	800B0330: 80452E68 (lit_14955)
//	800B0344: 80452D00 (lit_6895)
//	800B0358: 80452D00 (lit_6895)
//	800B038C: 80439A20 (sincosTable___5JMath)
//	800B0390: 80439A20 (sincosTable___5JMath)
//	800B03C8: 804061C0 (g_dComIfG_gameInfo)
//	800B03CC: 804061C0 (g_dComIfG_gameInfo)
//	800B03DC: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800B03E8: 803A37C0 (__vt__8cM3dGPla)
//	800B03EC: 803A37C0 (__vt__8cM3dGPla)
//	800B0400: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B0408: 80268210 (cBgW_CheckBWall__Ff)
//	800B0414: 80452CC0 (lit_6108)
//	800B0424: 80266F48 (normalizeZP__4cXyzFv)
//	800B0440: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0464: 80452D14 (lit_7307)
//	800B0488: 80452D30 (lit_7625)
//	800B04A4: 80452C9C (lit_5944)
//	800B04CC: 80452D50 (lit_8247)
//	800B04DC: 804061C0 (g_dComIfG_gameInfo)
//	800B04E0: 804061C0 (g_dComIfG_gameInfo)
//	800B0510: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800B0524: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800B053C: 80392094 (d_a_d_a_alink__stringBase0)
//	800B0540: 80392094 (d_a_d_a_alink__stringBase0)
//	800B0548: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800B05D4: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800B05E8: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	800B066C: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800B0680: 803A37C0 (__vt__8cM3dGPla)
//	800B0684: 803A37C0 (__vt__8cM3dGPla)
//	800B0698: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B06A8: 80452CA4 (lit_6021)
//	800B06BC: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B06C8: 80267128 (atan2sX_Z__4cXyzCFv)
//	800B0730: 80270E24 (cLib_distanceAngleS__Fss)
//	800B074C: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0754: 803A37C0 (__vt__8cM3dGPla)
//	800B0758: 803A37C0 (__vt__8cM3dGPla)
//	800B0774: 800977D8 (__as__4cXyzFRC4cXyz)
//	800B0784: 80268814 (cM3d_SignedLenPlaAndPos__FPC8cM3dGPlaPC3Vec)
//	800B07C8: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800B07EC: 80452D14 (lit_7307)
//	800B085C: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800B0874: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B0884: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800B0890: 800977F4 (__ct__4cXyzFRC4cXyz)
//	800B0898: 8008E790 (abs__4cXyzCFv)
//	800B089C: 80452DE4 (lit_12328)
//	800B08D4: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B08E0: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B08F0: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800B0900: 80074628 (GetBgWBasePointer__4cBgSCFRC13cBgS_PolyInfo)
//	800B0974: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0980: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B09F4: 80452F6C (lit_24591)
//	800B0A30: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0A3C: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0A54: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0A60: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0A78: 80074B40 (ChkMoveBG_NoDABg__4dBgSFRC13cBgS_PolyInfo)
//	800B0A8C: 80074618 (GetActorPointer__4cBgSCFi)
//	800B0ACC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B0AD4: 800FD048 (setLadderPosInit__9daAlink_cFv)
//	800B0AE0: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0AEC: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0B24: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	800B0B3C: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0B48: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0B70: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0B7C: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0BC8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B0BDC: 80452E68 (lit_14955)
//	800B0BF0: 80452E64 (lit_14954)
//	800B0C14: 80452DE0 (lit_11673)
//	800B0C2C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800B0C38: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800B0C50: 80075D7C (dBgS_CheckBGroundPoly__FRC13cBgS_PolyInfo)
//	800B0C5C: 803A37C0 (__vt__8cM3dGPla)
//	800B0C60: 803A37C0 (__vt__8cM3dGPla)
//	800B0C74: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B0C90: 800B01FC (getWallEdgePos__9daAlink_cFRC4cXyzP8cM3dGPlaP8cM3dGPlaP4cXyzi)
//	800B0CA4: 80452DE0 (lit_11673)
//	800B0CC8: 800977D8 (__as__4cXyzFRC4cXyz)
//	800B0CDC: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0CE8: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0CF4: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0D10: 800977D8 (__as__4cXyzFRC4cXyz)
//	800B0D24: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0D30: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0D3C: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0D54: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0D60: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	800B0D74: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0D80: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0DC8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B0DDC: 800FD048 (setLadderPosInit__9daAlink_cFv)
//	800B0DE8: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0DF4: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0DFC: 800C03E8 (checkRoomOnly__9daAlink_cFv)
//	800B0E1C: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0E28: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0EB0: 80452D88 (lit_8782)
//	800B0EC4: 80452D00 (lit_6895)
//	800B0EF4: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800B0F08: 800977D8 (__as__4cXyzFRC4cXyz)
//	800B0F18: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B0F20: 80452C9C (lit_5944)
//	800B0F50: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800B0F5C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800B0F64: 80450690 (l_autoUpHeight)
//	800B0F80: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B0F88: 802681E4 (cBgW_CheckBGround__Ff)
//	800B0FA8: 800B146C (SetPos__12dBgS_RoofChkFRC4cXyz)
//	800B0FB4: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	800B0FBC: 80452D30 (lit_7625)
//	800B0FEC: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B0FF8: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B1000: 803A37C0 (__vt__8cM3dGPla)
//	800B1004: 803A37C0 (__vt__8cM3dGPla)
//	800B1014: 804531B4 (lit_52234)
//	800B1048: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800B1054: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800B1060: 80452D2C (lit_7624)
//	800B1094: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800B10A0: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800B10A8: 80452DA4 (lit_9138)
//	800B10C0: 80450690 (l_autoUpHeight)
//	800B10D8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B1104: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B1110: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B111C: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B1124: 80452DA4 (lit_9138)
//	800B1134: 802681E4 (cBgW_CheckBGround__Ff)
//	800B1148: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B1154: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B1160: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B1180: 800B01FC (getWallEdgePos__9daAlink_cFRC4cXyzP8cM3dGPlaP8cM3dGPlaP4cXyzi)
//	800B1194: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B11A0: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B11AC: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B11BC: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	800B11CC: 80452D30 (lit_7625)
//	800B11E4: 80450690 (l_autoUpHeight)
//	800B1204: 80453290 (lit_64357)
//	800B1230: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800B1244: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B1250: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B125C: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B126C: 800977D8 (__as__4cXyzFRC4cXyz)
//	800B1290: 80452D88 (lit_8782)
//	800B12A8: 80452D88 (lit_8782)
//	800B1360: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800B136C: 80452D88 (lit_8782)
//	800B1380: 80452D88 (lit_8782)
//	800B13F0: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B13FC: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B1408: 8001DB90 (__dt__8cM3dGPlaFv)
//	800B1458: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFrontWallType() {
    nofralloc
#include "asm/d/a/d_a_alink/setFrontWallType__9daAlink_cFv.s"
}
#pragma pop

/* 800B146C-800B1488 001C+00 s=1 e=0 z=0  None .text      SetPos__12dBgS_RoofChkFRC4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgS_RoofChk::SetPos(cXyz const& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/SetPos__12dBgS_RoofChkFRC4cXyz.s"
}
#pragma pop

/* 800B1488-800B14B4 002C+00 s=4 e=0 z=0  None .text      checkWaterPolygonUnder__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWaterPolygonUnder() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWaterPolygonUnder__9daAlink_cFv.s"
}
#pragma pop

/* 800B14B4-800B154C 0098+00 s=2 e=0 z=0  None .text      setWaterY__9daAlink_cFv */
//	800B14E0: 804061C0 (g_dComIfG_gameInfo)
//	800B14E4: 804061C0 (g_dComIfG_gameInfo)
//	800B14F0: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	800B1514: 801107BC (checkWaterInKandelaar__9daAlink_cFf)
//	800B1530: 80452DA4 (lit_9138)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterY() {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterY__9daAlink_cFv.s"
}
#pragma pop

/* 800B154C-800B172C 01E0+00 s=2 e=0 z=0  None .text      setHangWaterY__9daAlink_cFv */
//	800B155C: 803621DC (_savegpr_29)
//	800B15D0: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
//	800B15DC: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	800B15E4: 804061C0 (g_dComIfG_gameInfo)
//	800B15E8: 804061C0 (g_dComIfG_gameInfo)
//	800B15F0: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	800B15F4: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	800B15F8: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	800B1600: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	800B1604: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	800B1608: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
//	800B1664: 800BF194 (seStartMapInfo__9daAlink_cFUl)
//	800B168C: 800BF194 (seStartMapInfo__9daAlink_cFUl)
//	800B169C: 8001F87C (fopKyM_createWpillar__FPC4cXyzfi)
//	800B16B8: 804061C0 (g_dComIfG_gameInfo)
//	800B16BC: 804061C0 (g_dComIfG_gameInfo)
//	800B16C8: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	800B16CC: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	800B16D4: 80452CC0 (lit_6108)
//	800B16E0: 8004C838
//(setWaterRipple__13dPa_control_cFPUlR13cBgS_PolyInfoPC4cXyzfPC12dKy_tevstr_cPC4cXyzSc) 800B16EC:
// 801107BC (checkWaterInKandelaar__9daAlink_cFf) 	800B16F4: 80452DA4 (lit_9138) 	800B1718:
// 80362228
//(_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHangWaterY() {
    nofralloc
#include "asm/d/a/d_a_alink/setHangWaterY__9daAlink_cFv.s"
}
#pragma pop

/* 800B172C-800B1770 0044+00 s=3 e=0 z=0  None .text      setSandDownBgCheckWallH__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSandDownBgCheckWallH() {
    nofralloc
#include "asm/d/a/d_a_alink/setSandDownBgCheckWallH__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453294-80453298 0004+00 s=1 e=0 z=0  None .sdata2    @64592 */
SECTION_SDATA2 static f32 lit_64592 = 11.654999732971191f;

/* 80453298-8045329C 0004+00 s=1 e=0 z=0  None .sdata2    @64593 */
SECTION_SDATA2 static f32 lit_64593 = 140.0f;

/* 8045329C-804532A0 0004+00 s=1 e=0 z=0  None .sdata2    @64594 */
SECTION_SDATA2 static f32 lit_64594 = -260.0f;

/* 804532A0-804532A4 0004+00 s=1 e=0 z=0  None .sdata2    @64595 */
SECTION_SDATA2 static f32 lit_64595 = -140.0f;

/* 804532A4-804532A8 0004+00 s=1 e=0 z=0  None .sdata2    @64596 */
SECTION_SDATA2 static f32 lit_64596 = 49.99000549316406f;

/* 800B1770-800B1B28 03B8+00 s=2 e=0 z=0  None .text      setBgCheckParam__9daAlink_cFv */
//	800B1784: 80450690 (l_autoUpHeight)
//	800B178C: 80452E84 (lit_16037)
//	800B17B4: 80452DB0 (lit_10039)
//	800B17E0: 80452DCC (lit_10532)
//	800B17E8: 80452CA0 (lit_5945)
//	800B17F0: 80452CC0 (lit_6108)
//	800B17FC: 80452DBC (lit_10042)
//	800B1800: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1820: 80453294 (lit_64592)
//	800B1824: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1830: 80452DBC (lit_10042)
//	800B1834: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1838: 80452D30 (lit_7625)
//	800B1840: 80452E80 (lit_16036)
//	800B185C: 80452C98 (lit_5943)
//	800B1864: 80450690 (l_autoUpHeight)
//	800B1874: 80452EAC (lit_16641)
//	800B187C: 80450690 (l_autoUpHeight)
//	800B1890: 80452DBC (lit_10042)
//	800B1894: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B189C: 80452C98 (lit_5943)
//	800B18A4: 80450690 (l_autoUpHeight)
//	800B18B8: 80452DBC (lit_10042)
//	800B18BC: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B18D4: 80452D78 (lit_8676)
//	800B18D8: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B18F8: 80452D3C (lit_7808)
//	800B18FC: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1910: 80452D00 (lit_6895)
//	800B1914: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1928: 80452D00 (lit_6895)
//	800B192C: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1930: 80453118 (lit_42493)
//	800B1938: 80452E0C (lit_14614)
//	800B1940: 80452CC0 (lit_6108)
//	800B1948: 80452DD4 (lit_11442)
//	800B1970: 80453294 (lit_64592)
//	800B1974: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1980: 80452DBC (lit_10042)
//	800B1984: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1988: 80452CE0 (lit_6845)
//	800B1990: 80452DB0 (lit_10039)
//	800B19AC: 80452D10 (lit_7306)
//	800B19B0: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B19C4: 80453298 (lit_64593)
//	800B19C8: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B19CC: 80452CA0 (lit_5945)
//	800B19D4: 80452CC0 (lit_6108)
//	800B19DC: 80452D00 (lit_6895)
//	800B19F8: 8045329C (lit_64594)
//	800B1A00: 804532A0 (lit_64595)
//	800B1A08: 80452F90 (lit_25059)
//	800B1A10: 80452CC0 (lit_6108)
//	800B1A1C: 80452DBC (lit_10042)
//	800B1A20: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1A30: 80452C9C (lit_5944)
//	800B1A98: 80450690 (l_autoUpHeight)
//	800B1A9C: 80452DB0 (lit_10039)
//	800B1AA8: 804532A4 (lit_64596)
//	800B1AC0: 80452DBC (lit_10042)
//	800B1AC4: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1AD0: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1ADC: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	800B1B10: 800B172C (setSandDownBgCheckWallH__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBgCheckParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setBgCheckParam__9daAlink_cFv.s"
}
#pragma pop

/* 800B1B28-800B1B68 0040+00 s=4 e=0 z=0  None .text      checkNotJumpSinkLimit__9daAlink_cFv */
//	800B1B30: 80452E0C (lit_14614)
//	800B1B50: 80452E34 (lit_14624)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNotJumpSinkLimit() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNotJumpSinkLimit__9daAlink_cFv.s"
}
#pragma pop

/* 800B1B68-800B1BAC 0044+00 s=2 e=0 z=0  None .text      checkNotItemSinkLimit__9daAlink_cFv */
//	800B1B70: 80452FE8 (lit_28045)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNotItemSinkLimit() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNotItemSinkLimit__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532A8-804532AC 0004+00 s=1 e=0 z=0  None .sdata2    @64730 */
SECTION_SDATA2 static f32 lit_64730 = 3.0f / 7.0f;

/* 804532AC-804532B0 0004+00 s=1 e=0 z=0  None .sdata2    @64731 */
SECTION_SDATA2 static f32 lit_64731 = 128.0f;

/* 800B1BAC-800B1FB8 040C+00 s=2 e=0 z=0  None .text      setSandShapeOffset__9daAlink_cFv */
//	800B1BDC: 80452CC0 (lit_6108)
//	800B1BE8: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800B1C0C: 80105A98 (checkSnowCode__9daAlink_cCFv)
//	800B1C38: 80105A98 (checkSnowCode__9daAlink_cCFv)
//	800B1C48: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800B1C60: 80452CB8 (lit_6040)
//	800B1C70: 80452E34 (lit_14624)
//	800B1C7C: 80452E34 (lit_14624)
//	800B1C88: 80452D30 (lit_7625)
//	800B1C8C: 80452F14 (lit_20823)
//	800B1CA0: 80452CA0 (lit_5945)
//	800B1CA8: 80452E34 (lit_14624)
//	800B1CB4: 80452D30 (lit_7625)
//	800B1CBC: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1CC0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1CD8: 80452D44 (lit_7977)
//	800B1CF0: 80452E34 (lit_14624)
//	800B1CFC: 80452D30 (lit_7625)
//	800B1D04: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1D08: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1D1C: 804532A8 (lit_64730)
//	800B1D34: 80452D14 (lit_7307)
//	800B1D48: 80452E34 (lit_14624)
//	800B1D54: 80452D30 (lit_7625)
//	800B1D5C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1D60: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1D74: 804532A8 (lit_64730)
//	800B1D80: 80452E34 (lit_14624)
//	800B1D84: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1D88: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1D98: 80452D14 (lit_7307)
//	800B1DA8: 80452E34 (lit_14624)
//	800B1DB4: 80452E34 (lit_14624)
//	800B1DC4: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1DC8: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1DD4: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1DD8: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B1DE4: 80452CC0 (lit_6108)
//	800B1DE8: 80452D30 (lit_7625)
//	800B1DEC: 80452CC0 (lit_6108)
//	800B1E04: 80270740 (cLib_chaseF__FPfff)
//	800B1E0C: 80452E34 (lit_14624)
//	800B1E34: 804532AC (lit_64731)
//	800B1E50: 80452CB8 (lit_6040)
//	800B1E90: 802C3A64 (setSinkDepth__14Z2CreatureLinkFSc)
//	800B1EA4: 80452D88 (lit_8782)
//	800B1F6C: 80452E0C (lit_14614)
//	800B1F78: 80451018 (m_midnaActor__9daPy_py_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSandShapeOffset() {
    nofralloc
#include "asm/d/a/d_a_alink/setSandShapeOffset__9daAlink_cFv.s"
}
#pragma pop

/* 800B1FB8-800B1FD8 0020+00 s=2 e=0 z=0  None .text      checkLv2MiddleBossBgRide__9daAlink_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLv2MiddleBossBgRide(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv2MiddleBossBgRide__9daAlink_cFs.s"
}
#pragma pop

/* 800B1FD8-800B21EC 0214+00 s=11 e=0 z=0  None .text      getSlidePolygon__9daAlink_cFP8cM3dGPla */
//	800B1FE8: 803621D8 (_savegpr_28)
//	800B2024: 804061C0 (g_dComIfG_gameInfo)
//	800B2028: 804061C0 (g_dComIfG_gameInfo)
//	800B2038: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800B2054: 80031B50 (checkMagnetCode__12daTagMagne_cFR13cBgS_PolyInfo)
//	800B207C: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800B2090: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B2118: 80452CA4 (lit_6021)
//	800B2130: 80439A20 (sincosTable___5JMath)
//	800B2134: 80439A20 (sincosTable___5JMath)
//	800B2160: 804061C0 (g_dComIfG_gameInfo)
//	800B2164: 804061C0 (g_dComIfG_gameInfo)
//	800B217C: 800B1FB8 (checkLv2MiddleBossBgRide__9daAlink_cFs)
//	800B2188: 80452ED4 (lit_18929)
//	800B218C: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	800B2190: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	800B21A8: 80439A20 (sincosTable___5JMath)
//	800B21AC: 80439A20 (sincosTable___5JMath)
//	800B21D8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSlidePolygon(cM3dGPla* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getSlidePolygon__9daAlink_cFP8cM3dGPla.s"
}
#pragma pop

/* 800B21EC-800B221C 0030+00 s=4 e=0 z=0  None .text      checkSlope__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSlope() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSlope__9daAlink_cCFv.s"
}
#pragma pop

/* 800B221C-800B23FC 01E0+00 s=1 e=0 z=0  None .text      setPlayerPosAndAngle__9daAlink_cFPC4cXyzsi
 */
//	800B222C: 803621D8 (_savegpr_28)
//	800B2240: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800B22D4: 80452CC0 (lit_6108)
//	800B2338: 802681E4 (cBgW_CheckBGround__Ff)
//	800B2368: 804061C0 (g_dComIfG_gameInfo)
//	800B236C: 804061C0 (g_dComIfG_gameInfo)
//	800B2380: 80362084 (__ptmf_scall)
//	800B23D4: 80452CC0 (lit_6108)
//	800B23E0: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	800B23E8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setPlayerPosAndAngle(cXyz const* param_0, s16 param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setPlayerPosAndAngle__9daAlink_cFPC4cXyzsi.s"
}
#pragma pop

/* 800B23FC-800B24F4 00F8+00 s=1 e=0 z=0  None .text
 * setPlayerPosAndAngle__9daAlink_cFPC4cXyzPC5csXyz             */
//	800B240C: 803621DC (_savegpr_29)
//	800B241C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800B249C: 80452CC0 (lit_6108)
//	800B24D8: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	800B24E0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setPlayerPosAndAngle(cXyz const* param_0, csXyz const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setPlayerPosAndAngle__9daAlink_cFPC4cXyzPC5csXyz.s"
}
#pragma pop

/* 800B24F4-800B25CC 00D8+00 s=1 e=0 z=0  None .text      setPlayerPosAndAngle__9daAlink_cFPA4_f */
//	800B2510: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800B2590: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	800B25A4: 80452CC0 (lit_6108)
//	800B25B0: 8026395C (ClrCcMove__9cCcD_SttsFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setPlayerPosAndAngle(f32 (*param_0)[4]) {
    nofralloc
#include "asm/d/a/d_a_alink/setPlayerPosAndAngle__9daAlink_cFPA4_f.s"
}
#pragma pop

/* 800B25CC-800B25E8 001C+00 s=16 e=0 z=0  None .text      itemTriggerCheck__9daAlink_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::itemTriggerCheck(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/itemTriggerCheck__9daAlink_cFUc.s"
}
#pragma pop

/* 800B25E8-800B2604 001C+00 s=11 e=0 z=0  None .text      itemButtonCheck__9daAlink_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::itemButtonCheck(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/itemButtonCheck__9daAlink_cFUc.s"
}
#pragma pop

/* 800B2604-800B2634 0030+00 s=13 e=0 z=0  None .text      itemButton__9daAlink_cFv */
//	800B2620: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::itemButton() {
    nofralloc
#include "asm/d/a/d_a_alink/itemButton__9daAlink_cFv.s"
}
#pragma pop

/* 800B2634-800B2664 0030+00 s=5 e=0 z=0  None .text      itemTrigger__9daAlink_cFv */
//	800B2650: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::itemTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/itemTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 800B2664-800B2688 0024+00 s=5 e=0 z=0  None .text      spActionButton__9daAlink_cFv */
//	800B2674: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::spActionButton() {
    nofralloc
#include "asm/d/a/d_a_alink/spActionButton__9daAlink_cFv.s"
}
#pragma pop

/* 800B2688-800B26AC 0024+00 s=2 e=0 z=0  None .text      spActionTrigger__9daAlink_cFv */
//	800B2698: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::spActionTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/spActionTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 800B26AC-800B26B8 000C+00 s=1 e=0 z=0  None .text      midnaTalkTrigger__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::midnaTalkTrigger() const {
    nofralloc
#include "asm/d/a/d_a_alink/midnaTalkTrigger__9daAlink_cCFv.s"
}
#pragma pop

/* 800B26B8-800B26DC 0024+00 s=9 e=0 z=0  None .text      swordSwingTrigger__9daAlink_cFv */
//	800B26C8: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swordSwingTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/swordSwingTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 800B26DC-800B26FC 0020+00 s=2 e=0 z=0  None .text      setItemActionButtonStatus__9daAlink_cFUc
 */
//	800B26E8: 800B3238 (setRStatusEmphasys__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setItemActionButtonStatus(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setItemActionButtonStatus__9daAlink_cFUc.s"
}
#pragma pop

/* 800B26FC-800B271C 0020+00 s=2 e=0 z=1  None .text      itemActionTrigger__9daAlink_cFv */
//	800B2708: 800B2688 (spActionTrigger__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::itemActionTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/itemActionTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 800B271C-800B2EA4 0788+00 s=1 e=0 z=0  None .text      setStickData__9daAlink_cFv */
//	800B272C: 803621DC (_savegpr_29)
//	800B274C: 80452CB8 (lit_6040)
//	800B2754: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800B27AC: 80116E60 (checkDemoMoveMode__9daAlink_cCFUl)
//	800B27B8: 80450E20 (m_object__7dDemo_c)
//	800B27C0: 80039088 (getActor__14dDemo_object_cFUc)
//	800B27CC: 80452CB8 (lit_6040)
//	800B2810: 800BE9D4 (getSceneExitMoveAngle__9daAlink_cFv)
//	800B2838: 804061C0 (g_dComIfG_gameInfo)
//	800B283C: 804061C0 (g_dComIfG_gameInfo)
//	800B284C: 80452CC0 (lit_6108)
//	800B2860: 80452CC0 (lit_6108)
//	800B2880: 80118C98 (checkDeadHP__9daAlink_cFv)
//	800B288C: 80430188 (g_meter2_info)
//	800B2890: 80430188 (g_meter2_info)
//	800B28A0: 80452CC0 (lit_6108)
//	800B28C0: 80133EF0 (checkMidnaLockJumpPoint__9daAlink_cCFv)
//	800B28CC: 80451018 (m_midnaActor__9daPy_py_c)
//	800B28DC: 80452CC0 (lit_6108)
//	800B28F0: 804061C0 (g_dComIfG_gameInfo)
//	800B28F4: 804061C0 (g_dComIfG_gameInfo)
//	800B291C: 80452CA4 (lit_6021)
//	800B2938: 800F3D58 (checkFishingRodAndLureItem__9daAlink_cCFv)
//	800B299C: 80452CC0 (lit_6108)
//	800B29C0: 80267674 (cM_atan2s__Fff)
//	800B29CC: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	800B29D0: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	800B29F4: 804061C0 (g_dComIfG_gameInfo)
//	800B29F8: 804061C0 (g_dComIfG_gameInfo)
//	800B2A0C: 80181614 (dCam_getControledAngleY__FP12camera_class)
//	800B2AAC: 800E2738 (getMagneBootsLocalAngleY__9daAlink_cFsi)
//	800B2AC8: 800E2738 (getMagneBootsLocalAngleY__9daAlink_cFsi)
//	800B2ADC: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	800B2AE0: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	800B2B74: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	800B2B78: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	800B2B94: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	800B2B98: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	800B2C2C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	800B2C30: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	800B2C58: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800B2CA4: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800B2CB4: 80452E0C (lit_14614)
//	800B2CC0: 80452DA8 (lit_9652)
//	800B2CC4: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800B2CC8: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800B2CDC: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800B2CE0: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800B2D20: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800B2D2C: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800B2D30: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800B2D40: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800B2D44: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800B2D80: 800B1488 (checkWaterPolygonUnder__9daAlink_cFv)
//	800B2DA8: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	800B2DAC: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	800B2DD4: 803650D0 (abs)
//	800B2E80: 804061C0 (g_dComIfG_gameInfo)
//	800B2E84: 804061C0 (g_dComIfG_gameInfo)
//	800B2E90: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setStickData() {
    nofralloc
#include "asm/d/a/d_a_alink/setStickData__9daAlink_cFv.s"
}
#pragma pop

/* 800B2EA4-800B3220 037C+00 s=1 e=0 z=0  None .text      setAtnList__9daAlink_cFv */
//	800B2EB4: 803621DC (_savegpr_29)
//	800B2ED8: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800B2EF0: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B2F18: 80452CA4 (lit_6021)
//	800B2F24: 804061C0 (g_dComIfG_gameInfo)
//	800B2F28: 804061C0 (g_dComIfG_gameInfo)
//	800B2F54: 804061C0 (g_dComIfG_gameInfo)
//	800B2F58: 804061C0 (g_dComIfG_gameInfo)
//	800B2F78: 800E1374 (getCopyRodControllActor__9daAlink_cFv)
//	800B301C: 804061C0 (g_dComIfG_gameInfo)
//	800B3020: 804061C0 (g_dComIfG_gameInfo)
//	800B3070: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B309C: 80070844 (GetLockonList__12dAttention_cFl)
//	800B30B4: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B30C4: 80073864 (getActor__10dAttList_cFv)
//	800B30E4: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800B3148: 80070880 (getActionBtnB__12dAttention_cFv)
//	800B315C: 80073864 (getActor__10dAttList_cFv)
//	800B3170: 80070974 (getActionBtnXY__12dAttention_cFv)
//	800B3184: 80073864 (getActor__10dAttList_cFv)
//	800B31D4: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B320C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setAtnList() {
    nofralloc
#include "asm/d/a/d_a_alink/setAtnList__9daAlink_cFv.s"
}
#pragma pop

/* 800B3220-800B3238 0018+00 s=5 e=0 z=0  None .text      setRStatus__9daAlink_cFUc */
//	800B3220: 804061C0 (g_dComIfG_gameInfo)
//	800B3224: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRStatus(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setRStatus__9daAlink_cFUc.s"
}
#pragma pop

/* 800B3238-800B3250 0018+00 s=1 e=0 z=0  None .text      setRStatusEmphasys__9daAlink_cFUc */
//	800B3238: 804061C0 (g_dComIfG_gameInfo)
//	800B323C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRStatusEmphasys(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setRStatusEmphasys__9daAlink_cFUc.s"
}
#pragma pop

/* 800B3250-800B3268 0018+00 s=61 e=0 z=0  None .text      setDoStatus__9daAlink_cFUc */
//	800B3250: 804061C0 (g_dComIfG_gameInfo)
//	800B3254: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDoStatus(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDoStatus__9daAlink_cFUc.s"
}
#pragma pop

/* 800B3268-800B3280 0018+00 s=19 e=0 z=0  None .text      setDoStatusEmphasys__9daAlink_cFUc */
//	800B3268: 804061C0 (g_dComIfG_gameInfo)
//	800B326C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDoStatusEmphasys(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDoStatusEmphasys__9daAlink_cFUc.s"
}
#pragma pop

/* 800B3280-800B3298 0018+00 s=2 e=0 z=0  None .text      setDoStatusContinuation__9daAlink_cFUc */
//	800B3280: 804061C0 (g_dComIfG_gameInfo)
//	800B3284: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDoStatusContinuation(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDoStatusContinuation__9daAlink_cFUc.s"
}
#pragma pop

/* 800B3298-800B32B0 0018+00 s=8 e=0 z=0  None .text      setBStatus__9daAlink_cFUc */
//	800B3298: 804061C0 (g_dComIfG_gameInfo)
//	800B329C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBStatus(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBStatus__9daAlink_cFUc.s"
}
#pragma pop

/* 800B32B0-800B3358 00A8+00 s=2 e=0 z=0  None .text      checkAtnWaitAnime__9daAlink_cFv */
//	800B32D0: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800B32E4: 800E82B0 (checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAtnWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAtnWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800B3358-800B33E4 008C+00 s=2 e=0 z=0  None .text setTiredVoice__9daAlink_cFP16daPy_frameCtrl_c
 */
//	800B3370: 80452D1C (lit_7448)
//	800B3374: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800B3380: 804061C0 (g_dComIfG_gameInfo)
//	800B3384: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTiredVoice(daPy_frameCtrl_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setTiredVoice__9daAlink_cFP16daPy_frameCtrl_c.s"
}
#pragma pop

/* 800B33E4-800B3494 00B0+00 s=4 e=0 z=0  None .text      checkRestHPAnime__9daAlink_cFv */
//	800B3414: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800B343C: 800A7950 (checkWindSpeedOnAngle__9daAlink_cCFv)
//	800B3454: 804061C0 (g_dComIfG_gameInfo)
//	800B3458: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRestHPAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRestHPAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800B3494-800B3500 006C+00 s=44 e=0 z=0  None .text      getDirectionFromAngle__9daAlink_cFs */
//	800B34AC: 803650D0 (abs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getDirectionFromAngle(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getDirectionFromAngle__9daAlink_cFs.s"
}
#pragma pop

/* 800B3500-800B3630 0130+00 s=13 e=0 z=0  None .text      checkAttentionState__9daAlink_cFv */
//	800B3510: 803621CC (_savegpr_25)
//	800B3534: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B35D4: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800B361C: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAttentionState() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAttentionState__9daAlink_cFv.s"
}
#pragma pop

/* 800B3630-800B3734 0104+00 s=5 e=0 z=0  None .text      getShapeAngleYAtnActor__9daAlink_cFv */
//	800B36AC: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800B36C4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800B36E8: 800E247C (multVecMagneBootInvMtx__9daAlink_cFP4cXyz)
//	800B36F0: 80267128 (atan2sX_Z__4cXyzCFv)
//	800B36FC: 80127D68 (checkWolfShapeReverse__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getShapeAngleYAtnActor() {
    nofralloc
#include "asm/d/a/d_a_alink/getShapeAngleYAtnActor__9daAlink_cFv.s"
}
#pragma pop

/* 800B3734-800B3844 0110+00 s=26 e=0 z=0  None .text      setShapeAngleToAtnActor__9daAlink_cFi */
//	800B3744: 803621DC (_savegpr_29)
//	800B3768: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800B3778: 80452CA4 (lit_6021)
//	800B37C0: 80452CA4 (lit_6021)
//	800B37D8: 800B3630 (getShapeAngleYAtnActor__9daAlink_cFv)
//	800B37F4: 803650D0 (abs)
//	800B381C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800B3830: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShapeAngleToAtnActor(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setShapeAngleToAtnActor__9daAlink_cFi.s"
}
#pragma pop

/* 800B3844-800B3904 00C0+00 s=9 e=0 z=0  None .text      initServiceWaitTime__9daAlink_cFv */
//	800B3858: 80452DE0 (lit_11673)
//	800B385C: 80267954 (cM_rndF__Ff)
//	800B3860: 80452CD0 (lit_6238)
//	800B38BC: 80452CB0 (lit_6025)
//	800B38D8: 80452EAC (lit_16641)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initServiceWaitTime() {
    nofralloc
#include "asm/d/a/d_a_alink/initServiceWaitTime__9daAlink_cFv.s"
}
#pragma pop

/* 800B3904-800B3924 0020+00 s=50 e=0 z=0  None .text      checkZeroSpeedF__9daAlink_cCFv */
//	800B3910: 80452DE4 (lit_12328)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkZeroSpeedF() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkZeroSpeedF__9daAlink_cCFv.s"
}
#pragma pop

/* 800B3924-800B3F2C 0608+00 s=14 e=0 z=0  None .text      setNormalSpeedF__9daAlink_cFff */
//	800B395C: 8038D658 (lit_3757)
//	800B3960: 8038D658 (lit_3757)
//	800B39B4: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	800B39C8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800B39D8: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	800B39EC: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800B3A10: 800C03E8 (checkRoomOnly__9daAlink_cFv)
//	800B3A2C: 800E3D1C (checkGrabSlowMoveActor__9daAlink_cFv)
//	800B3A3C: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800B3A64: 80452E34 (lit_14624)
//	800B3AD0: 80452E34 (lit_14624)
//	800B3ADC: 80452C98 (lit_5943)
//	800B3B04: 80452CE0 (lit_6845)
//	800B3B34: 80452CE0 (lit_6845)
//	800B3B40: 80452CC0 (lit_6108)
//	800B3B50: 80452CB8 (lit_6040)
//	800B3B68: 80452CB8 (lit_6040)
//	800B3B6C: 80452C98 (lit_5943)
//	800B3B88: 803A37C0 (__vt__8cM3dGPla)
//	800B3B8C: 803A37C0 (__vt__8cM3dGPla)
//	800B3BBC: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	800B3BC8: 803A37C0 (__vt__8cM3dGPla)
//	800B3BCC: 803A37C0 (__vt__8cM3dGPla)
//	800B3C08: 80452CB8 (lit_6040)
//	800B3C38: 803650D0 (abs)
//	800B3C54: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	800B3C64: 803650D0 (abs)
//	800B3CC8: 80452CB8 (lit_6040)
//	800B3CF8: 80267674 (cM_atan2s__Fff)
//	800B3D3C: 8034739C (PSVECSquareDistance)
//	800B3D40: 80452CB8 (lit_6040)
//	800B3D4C: 804061C0 (g_dComIfG_gameInfo)
//	800B3D50: 804061C0 (g_dComIfG_gameInfo)
//	800B3D5C: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800B3D74: 803650D0 (abs)
//	800B3D80: 80452CC0 (lit_6108)
//	800B3D90: 80452CB8 (lit_6040)
//	800B3D94: 80439A20 (sincosTable___5JMath)
//	800B3D98: 80439A20 (sincosTable___5JMath)
//	800B3DD8: 803650D0 (abs)
//	800B3DF0: 80452CB8 (lit_6040)
//	800B3DF4: 80452E08 (lit_14064)
//	800B3DF8: 80439A20 (sincosTable___5JMath)
//	800B3DFC: 80439A20 (sincosTable___5JMath)
//	800B3E24: 80452CC0 (lit_6108)
//	800B3E2C: 80452CB8 (lit_6040)
//	800B3E30: 80439A20 (sincosTable___5JMath)
//	800B3E34: 80439A20 (sincosTable___5JMath)
//	800B3E7C: 80452CC0 (lit_6108)
//	800B3EA0: 80452CC0 (lit_6108)
//	800B3EBC: 80451180 (G_CM3D_F_ABS_MIN)
//	800B3EEC: 80270740 (cLib_chaseF__FPfff)
//	800B3EF0: 803A37C0 (__vt__8cM3dGPla)
//	800B3EF4: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setNormalSpeedF(f32 param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setNormalSpeedF__9daAlink_cFff.s"
}
#pragma pop

/* 800B3F2C-800B3FD4 00A8+00 s=2 e=0 z=0  None .text      getStickAngleDistanceRate__9daAlink_cFv */
//	800B3F50: 803650D0 (abs)
//	800B3F5C: 80439A20 (sincosTable___5JMath)
//	800B3F60: 80439A20 (sincosTable___5JMath)
//	800B3F80: 80452C98 (lit_5943)
//	800B3F94: 80452DA8 (lit_9652)
//	800B3FA8: 80452CC0 (lit_6108)
//	800B3FBC: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getStickAngleDistanceRate() {
    nofralloc
#include "asm/d/a/d_a_alink/getStickAngleDistanceRate__9daAlink_cFv.s"
}
#pragma pop

/* 800B3FD4-800B444C 0478+00 s=3 e=0 z=0  None .text      setSpeedAndAngleNormal__9daAlink_cFv */
//	800B3FFC: 803621D8 (_savegpr_28)
//	800B4060: 803650D0 (abs)
//	800B4094: 803650D0 (abs)
//	800B409C: 80452CA4 (lit_6021)
//	800B40BC: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B40E8: 80270E24 (cLib_distanceAngleS__Fss)
//	800B4110: 80452DE4 (lit_12328)
//	800B4130: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B4134: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B4154: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800B4184: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B4188: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B4198: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800B41B0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B41B4: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B41C4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800B41D0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800B41DC: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B41E0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B41F0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B41F4: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B41FC: 80452CB0 (lit_6025)
//	800B4238: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B423C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B4244: 80452CB0 (lit_6025)
//	800B4288: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B428C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B4294: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800B42A4: 800B3F2C (getStickAngleDistanceRate__9daAlink_cFv)
//	800B42B0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800B42BC: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B42C0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B42EC: 80452EA8 (lit_16570)
//	800B42F0: 80452CB8 (lit_6040)
//	800B4308: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800B4328: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B432C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B4340: 80452CC0 (lit_6108)
//	800B4348: 80452CC0 (lit_6108)
//	800B4350: 80452CC0 (lit_6108)
//	800B4360: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B4394: 80452CA4 (lit_6021)
//	800B43AC: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B43B0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B43D0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800B440C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B4410: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B4418: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	800B4438: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleNormal() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleNormal__9daAlink_cFv.s"
}
#pragma pop

/* 800B444C-800B477C 0330+00 s=1 e=0 z=0  None .text      setSpeedAndAngleAtn__9daAlink_cFv */
//	800B446C: 803621D0 (_savegpr_26)
//	800B447C: 80452CA4 (lit_6021)
//	800B4498: 80439A20 (sincosTable___5JMath)
//	800B449C: 80439A20 (sincosTable___5JMath)
//	800B44C4: 80453280 (lit_63332)
//	800B44D4: 80452D70 (lit_8501)
//	800B44E4: 80453280 (lit_63332)
//	800B4504: 80453288 (lit_63334)
//	800B4518: 80452CC0 (lit_6108)
//	800B4540: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800B4544: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800B457C: 80452CA4 (lit_6021)
//	800B4598: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800B45B8: 80452CBC (lit_6041)
//	800B45C8: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800B45E0: 800B3FD4 (setSpeedAndAngleNormal__9daAlink_cFv)
//	800B45E8: 8038D768 (m__26daAlinkHIO_noActAtnMove_c0)
//	800B45EC: 8038D768 (m__26daAlinkHIO_noActAtnMove_c0)
//	800B4618: 80452CA4 (lit_6021)
//	800B4634: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800B4654: 80452CBC (lit_6041)
//	800B4668: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800B467C: 800E794C (getChainStickAngleY__9daAlink_cCFs)
//	800B4690: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800B46B8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800B46D4: 80452EA8 (lit_16570)
//	800B46D8: 80452CB8 (lit_6040)
//	800B46EC: 80439A20 (sincosTable___5JMath)
//	800B46F0: 80439A20 (sincosTable___5JMath)
//	800B4714: 80452CC0 (lit_6108)
//	800B471C: 80452CC0 (lit_6108)
//	800B4734: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800B4750: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	800B4768: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleAtn() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleAtn__9daAlink_cFv.s"
}
#pragma pop

/* 800B477C-800B47B4 0038+00 s=2 e=0 z=0  None .text
 * checkRequestTalkActor__9daAlink_cFP10dAttList_cP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRequestTalkActor(dAttList_c* param_0, fopAc_ac_c* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkRequestTalkActor__9daAlink_cFP10dAttList_cP10fopAc_ac_c.s"
}
#pragma pop

/* 800B47B4-800B48D0 011C+00 s=4 e=0 z=0  None .text      checkServiceWaitMode__9daAlink_cFv */
//	800B47C8: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800B47F8: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800B481C: 80452CC0 (lit_6108)
//	800B482C: 80347138 (PSVECSquareMag)
//	800B4830: 80452CB8 (lit_6040)
//	800B4890: 800F3D58 (checkFishingRodAndLureItem__9daAlink_cCFv)
//	800B48A8: 80452E0C (lit_14614)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkServiceWaitMode() {
    nofralloc
#include "asm/d/a/d_a_alink/checkServiceWaitMode__9daAlink_cFv.s"
}
#pragma pop

/* 800B48D0-800B4908 0038+00 s=18 e=0 z=0  None .text      setJumpMode__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setJumpMode() {
    nofralloc
#include "asm/d/a/d_a_alink/setJumpMode__9daAlink_cFv.s"
}
#pragma pop

/* 800B4908-800B4918 0010+00 s=0 e=0 z=1  None .text      getMetamorphoseNearDis__9daAlink_cCFv */
//	800B4908: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B490C: 8038D664 (m__19daAlinkHIO_basic_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMetamorphoseNearDis() const {
    nofralloc
#include "asm/d/a/d_a_alink/getMetamorphoseNearDis__9daAlink_cCFv.s"
}
#pragma pop

/* 800B4918-800B4928 0010+00 s=0 e=0 z=1  None .text      getMetamorphoseFarDis__9daAlink_cCFv */
//	800B4918: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B491C: 8038D664 (m__19daAlinkHIO_basic_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMetamorphoseFarDis() const {
    nofralloc
#include "asm/d/a/d_a_alink/getMetamorphoseFarDis__9daAlink_cCFv.s"
}
#pragma pop

/* 800B4928-800B4938 0010+00 s=0 e=0 z=1  None .text      getMetamorphoseFarAngle__9daAlink_cCFv */
//	800B4928: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800B492C: 8038D664 (m__19daAlinkHIO_basic_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMetamorphoseFarAngle() const {
    nofralloc
#include "asm/d/a/d_a_alink/getMetamorphoseFarAngle__9daAlink_cCFv.s"
}
#pragma pop

/* 800B4938-800B4950 0018+00 s=0 e=1 z=0  None .text      setMidnaMsg__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMidnaMsg() {
    nofralloc
#include "asm/d/a/d_a_alink/setMidnaMsg__9daAlink_cFv.s"
}
#pragma pop

/* 800B4950-800B4A08 00B8+00 s=3 e=0 z=0  None .text      notTalk__9daAlink_cFv */
//	800B4968: 804061C0 (g_dComIfG_gameInfo)
//	800B496C: 804061C0 (g_dComIfG_gameInfo)
//	800B4978: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800B4988: 80075D7C (dBgS_CheckBGroundPoly__FRC13cBgS_PolyInfo)
//	800B49BC: 802681E4 (cBgW_CheckBGround__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::notTalk() {
    nofralloc
#include "asm/d/a/d_a_alink/notTalk__9daAlink_cFv.s"
}
#pragma pop

/* 800B4A08-800B4B2C 0124+00 s=11 e=0 z=0  None .text      setTalkStatus__9daAlink_cFv */
//	800B4A40: 800B477C (checkRequestTalkActor__9daAlink_cFP10dAttList_cP10fopAc_ac_c)
//	800B4A50: 800B4950 (notTalk__9daAlink_cFv)
//	800B4A64: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4A94: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4AB8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4AC8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4AE0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4AF8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4B08: 800B3250 (setDoStatus__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTalkStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/setTalkStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800B4B2C-800B4B7C 0050+00 s=1 e=0 z=0  None .text      getFrontRollRate__9daAlink_cFv */
//	800B4B48: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800B4B54: 80452EAC (lit_16641)
//	800B4B64: 80452EAC (lit_16641)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getFrontRollRate() {
    nofralloc
#include "asm/d/a/d_a_alink/getFrontRollRate__9daAlink_cFv.s"
}
#pragma pop

/* 800B4B7C-800B5284 0708+00 s=2 e=0 z=0  None .text      decideCommonDoStatus__9daAlink_cFv */
//	800B4B94: 803621D0 (_savegpr_26)
//	800B4BC4: 804061C0 (g_dComIfG_gameInfo)
//	800B4BC8: 804061C0 (g_dComIfG_gameInfo)
//	800B4BD8: 80392094 (d_a_d_a_alink__stringBase0)
//	800B4BDC: 80392094 (d_a_d_a_alink__stringBase0)
//	800B4BE4: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800B4BEC: 800C03E8 (checkRoomOnly__9daAlink_cFv)
//	800B4C10: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800B4C5C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4C6C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4C88: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4CA0: 800D29D4 (checkDownAttackState__9daAlink_cFv)
//	800B4CB4: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B4CC0: 800D28F4 (checkCutHeadState__9daAlink_cFv)
//	800B4CD4: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B4CE0: 80127DC4 (checkWolfSideStep__9daAlink_cCFv)
//	800B4CF4: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B4D34: 80451018 (m_midnaActor__9daPy_py_c)
//	800B4D4C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4D9C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4DB0: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B4DDC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4DF4: 800B4B2C (getFrontRollRate__9daAlink_cFv)
//	800B4E10: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B4E3C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4E44: 800B1B28 (checkNotJumpSinkLimit__9daAlink_cFv)
//	800B4E8C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4EA4: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800B4EB0: 800B4B2C (getFrontRollRate__9daAlink_cFv)
//	800B4EC4: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B4F10: 80452CA4 (lit_6021)
//	800B4F34: 800D29D4 (checkDownAttackState__9daAlink_cFv)
//	800B4F48: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B4F60: 800D28F4 (checkCutHeadState__9daAlink_cFv)
//	800B4F74: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B4F84: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B4FBC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B4FD0: 800D29D4 (checkDownAttackState__9daAlink_cFv)
//	800B4FE4: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B4FFC: 800D28F4 (checkCutHeadState__9daAlink_cFv)
//	800B5010: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B5020: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B5030: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B503C: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800B5094: 800B3500 (checkAttentionState__9daAlink_cFv)
//	800B50A8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B50B8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B50C8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B50F0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B5100: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B511C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B513C: 800B1B28 (checkNotJumpSinkLimit__9daAlink_cFv)
//	800B51B8: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800B51E0: 802681E4 (cBgW_CheckBGround__Ff)
//	800B520C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B521C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B523C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B5260: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B5270: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::decideCommonDoStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/decideCommonDoStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800B5284-800B58EC 0668+00 s=1 e=0 z=0  None .text      decideDoStatus__9daAlink_cFv */
//	800B52D8: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B530C: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800B533C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B5348: 800E79F8 (searchFmChainPos__9daAlink_cFv)
//	800B5360: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800B53BC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B53E4: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B542C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B5444: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B545C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B5484: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B5490: 800E82B0 (checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c)
//	800B54A0: 800E38EC (checkGrabLineCheck__9daAlink_cFv)
//	800B54B4: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B54D8: 80070880 (getActionBtnB__12dAttention_cFv)
//	800B54E8: 80070880 (getActionBtnB__12dAttention_cFv)
//	800B54FC: 80070880 (getActionBtnB__12dAttention_cFv)
//	800B5500: 80073864 (getActor__10dAttList_cFv)
//	800B5518: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B553C: 80070880 (getActionBtnB__12dAttention_cFv)
//	800B554C: 80070880 (getActionBtnB__12dAttention_cFv)
//	800B5560: 80070880 (getActionBtnB__12dAttention_cFv)
//	800B5564: 80073864 (getActor__10dAttList_cFv)
//	800B5594: 80127D50 (setWolfDigStatus__9daAlink_cFUc)
//	800B5600: 80127D50 (setWolfDigStatus__9daAlink_cFUc)
//	800B5630: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B5648: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B5678: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B5684: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	800B5698: 800BB408 (checkMagicArmorHeavy__9daAlink_cCFv)
//	800B56B8: 800EC8F8 (checkReinRideBgCheck__9daAlink_cFv)
//	800B56DC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B56F4: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B570C: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B574C: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800B5758: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	800B576C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B5784: 800E82B0 (checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c)
//	800B5794: 80070880 (getActionBtnB__12dAttention_cFv)
//	800B57A4: 80070880 (getActionBtnB__12dAttention_cFv)
//	800B57B8: 80070880 (getActionBtnB__12dAttention_cFv)
//	800B57BC: 80073864 (getActor__10dAttList_cFv)
//	800B57D4: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B5800: 800E82B0 (checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c)
//	800B5814: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B5830: 800E70C0 (checkInsectActorName__9daAlink_cFP10fopAc_ac_c)
//	800B5844: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B585C: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B5868: 800E38EC (checkGrabLineCheck__9daAlink_cFv)
//	800B5884: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B58A4: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B58BC: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800B58C8: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	800B58D0: 800B4B7C (decideCommonDoStatus__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::decideDoStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/decideDoStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800B58EC-800B5BC0 02D4+00 s=25 e=0 z=0  None .text      checkWaitAction__9daAlink_cFv */
//	800B592C: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	800B5934: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800B5944: 800B33E4 (checkRestHPAnime__9daAlink_cFv)
//	800B5964: 800B3500 (checkAttentionState__9daAlink_cFv)
//	800B5984: 8012CF68 (procWolfTiredWaitInit__9daAlink_cFv)
//	800B5990: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	800B59CC: 800E3C9C (checkGrabAnimeAndThrow__9daAlink_cCFv)
//	800B59DC: 800F6EB0 (procCanoeGrabMoveInit__9daAlink_cFv)
//	800B59EC: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800B5A18: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
//	800B5A40: 8010DE78 (procSpinnerWaitInit__9daAlink_cFv)
//	800B5A4C: 800E3C9C (checkGrabAnimeAndThrow__9daAlink_cCFv)
//	800B5A5C: 800F2334 (procHorseGrabMoveInit__9daAlink_cFv)
//	800B5A68: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800B5A70: 804061C0 (g_dComIfG_gameInfo)
//	800B5A74: 804061C0 (g_dComIfG_gameInfo)
//	800B5A94: 8010C830 (procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci)
//	800B5AB4: 8010D174 (procHookshotWallWaitInit__9daAlink_cFisi)
//	800B5AD8: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	800B5AF0: 800EA950 (procSumouReadyInit__9daAlink_cFv)
//	800B5AFC: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800B5B0C: 800E6A9C (procGrabWaitInit__9daAlink_cFv)
//	800B5B38: 800B33E4 (checkRestHPAnime__9daAlink_cFv)
//	800B5B48: 800DCF04 (checkPlayerGuardAndAttack__9daAlink_cCFv)
//	800B5B78: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800B5B8C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800B5B9C: 800C3224 (procTiredWaitInit__9daAlink_cFv)
//	800B5BA8: 800C33B8 (procWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWaitAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWaitAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B5BC0-800B5C34 0074+00 s=3 e=0 z=0  None .text      setFallVoice__9daAlink_cFv */
//	800B5BE0: 80452D88 (lit_8782)
//	800B5BF4: 80452D78 (lit_8676)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFallVoice() {
    nofralloc
#include "asm/d/a/d_a_alink/setFallVoice__9daAlink_cFv.s"
}
#pragma pop

/* 800B5C34-800B5C64 0030+00 s=2 e=0 z=0  None .text      setLandPassiveData__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLandPassiveData() {
    nofralloc
#include "asm/d/a/d_a_alink/setLandPassiveData__9daAlink_cFv.s"
}
#pragma pop

/* 800B5C64-800B5CCC 0068+00 s=5 e=0 z=0  None .text      setStepLandVibration__9daAlink_cFv */
//	800B5C90: 80452CC0 (lit_6108)
//	800B5C98: 80452CB8 (lit_6040)
//	800B5CA4: 804061C0 (g_dComIfG_gameInfo)
//	800B5CA8: 804061C0 (g_dComIfG_gameInfo)
//	800B5CB8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setStepLandVibration() {
    nofralloc
#include "asm/d/a/d_a_alink/setStepLandVibration__9daAlink_cFv.s"
}
#pragma pop

/* 800B5CCC-800B5F6C 02A0+00 s=5 e=0 z=0  None .text      checkLandAction__9daAlink_cFi */
//	800B5CE4: 803621D4 (_savegpr_27)
//	800B5CF0: 80452D88 (lit_8782)
//	800B5D14: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800B5D2C: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800B5D3C: 80452E08 (lit_14064)
//	800B5D54: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800B5D84: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800B5D88: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800B5D9C: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800B5DA0: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800B5DC4: 800C494C (procFrontRollInit__9daAlink_cFv)
//	800B5DD4: 800C5328 (procSideRollInit__9daAlink_cFi)
//	800B5DE0: 800D6F2C (checkNoLandDamageSlidePolygon__9daAlink_cFv)
//	800B5DEC: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800B5DF0: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800B5E10: 800DAE10 (procLandDamageInit__9daAlink_cFi)
//	800B5E38: 800C494C (procFrontRollInit__9daAlink_cFv)
//	800B5E48: 800C5328 (procSideRollInit__9daAlink_cFi)
//	800B5E54: 80452CA4 (lit_6021)
//	800B5E74: 80452D3C (lit_7808)
//	800B5E80: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B5E84: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800B5E9C: 80452CAC (lit_6023)
//	800B5EB4: 800C36CC (procMoveInit__9daAlink_cFv)
//	800B5EC0: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800B5ED0: 800BF4E0 (resetBasAnime__9daAlink_cFv)
//	800B5EE0: 800BF194 (seStartMapInfo__9daAlink_cFUl)
//	800B5EE4: 80452CC0 (lit_6108)
//	800B5EEC: 80452CB8 (lit_6040)
//	800B5EF8: 804061C0 (g_dComIfG_gameInfo)
//	800B5EFC: 804061C0 (g_dComIfG_gameInfo)
//	800B5F10: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800B5F20: 800C6F18 (procLandInit__9daAlink_cFf)
//	800B5F44: 800DAE10 (procLandDamageInit__9daAlink_cFi)
//	800B5F58: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLandAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkLandAction__9daAlink_cFi.s"
}
#pragma pop

/* 800B5F6C-800B607C 0110+00 s=3 e=0 z=0  None .text      checkSlideAction__9daAlink_cFv */
//	800B5F84: 803A37C0 (__vt__8cM3dGPla)
//	800B5F88: 803A37C0 (__vt__8cM3dGPla)
//	800B5F94: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	800B5FA4: 80267128 (atan2sX_Z__4cXyzCFv)
//	800B5FBC: 80452CC0 (lit_6108)
//	800B5FC4: 80270740 (cLib_chaseF__FPfff)
//	800B5FD8: 80452D3C (lit_7808)
//	800B5FF0: 803A37C0 (__vt__8cM3dGPla)
//	800B5FF4: 803A37C0 (__vt__8cM3dGPla)
//	800B601C: 8012FE80 (procWolfSlideInit__9daAlink_cFsi)
//	800B6020: 803A37C0 (__vt__8cM3dGPla)
//	800B6024: 803A37C0 (__vt__8cM3dGPla)
//	800B6038: 800C4378 (procSlideInit__9daAlink_cFs)
//	800B603C: 803A37C0 (__vt__8cM3dGPla)
//	800B6040: 803A37C0 (__vt__8cM3dGPla)
//	800B6054: 803A37C0 (__vt__8cM3dGPla)
//	800B6058: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSlideAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSlideAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B607C-800B69CC 0950+00 s=2 e=0 z=0  None .text      checkAutoJumpAction__9daAlink_cFv */
//	800B60BC: 803621D0 (_savegpr_26)
//	800B60C4: 8038D658 (lit_3757)
//	800B60C8: 8038D658 (lit_3757)
//	800B60CC: 800E2F88 (checkMagneBootsFly__9daAlink_cFv)
//	800B60F0: 80118170 (checkFlyAtnWait__9daAlink_cFv)
//	800B61A0: 80452CC0 (lit_6108)
//	800B61B0: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	800B61C4: 80450694 (l_autoDownHeight)
//	800B6200: 80452CBC (lit_6041)
//	800B6204: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800B6250: 80452CC0 (lit_6108)
//	800B6268: 80452DE4 (lit_12328)
//	800B6298: 80452CC0 (lit_6108)
//	800B62B0: 80452DE4 (lit_12328)
//	800B62D0: 80267674 (cM_atan2s__Fff)
//	800B62D8: 80452CB8 (lit_6040)
//	800B62FC: 80452CE0 (lit_6845)
//	800B6308: 80452D50 (lit_8247)
//	800B6334: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800B6338: 803A37C0 (__vt__8cM3dGPla)
//	800B633C: 803A37C0 (__vt__8cM3dGPla)
//	800B6344: 804061C0 (g_dComIfG_gameInfo)
//	800B6348: 804061C0 (g_dComIfG_gameInfo)
//	800B6358: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800B6360: 80452D50 (lit_8247)
//	800B637C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B6398: 80452D3C (lit_7808)
//	800B63B4: 80452D50 (lit_8247)
//	800B63D4: 803A37C0 (__vt__8cM3dGPla)
//	800B63D8: 803A37C0 (__vt__8cM3dGPla)
//	800B63EC: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800B6404: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B6420: 80268210 (cBgW_CheckBWall__Ff)
//	800B6430: 80452D00 (lit_6895)
//	800B6454: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800B646C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800B64A8: 80452CC0 (lit_6108)
//	800B64BC: 80452CC4 (lit_6109)
//	800B64CC: 80452DB4 (lit_10040)
//	800B64D0: 804061C0 (g_dComIfG_gameInfo)
//	800B64D4: 804061C0 (g_dComIfG_gameInfo)
//	800B64EC: 800336E0 (checkBottle__17dSv_player_item_cFUc)
//	800B6504: 800C0630 (checkNotAutoJumpStage__9daAlink_cFv)
//	800B656C: 80452FDC (lit_27477)
//	800B65B0: 80270E24 (cLib_distanceAngleS__Fss)
//	800B65E8: 8012E9C8 (procWolfAutoJumpInit__9daAlink_cFi)
//	800B65EC: 803A37C0 (__vt__8cM3dGPla)
//	800B65F0: 803A37C0 (__vt__8cM3dGPla)
//	800B6604: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800B6620: 800C66DC (procDiveJumpInit__9daAlink_cFv)
//	800B6624: 803A37C0 (__vt__8cM3dGPla)
//	800B6628: 803A37C0 (__vt__8cM3dGPla)
//	800B6640: 800C5E68 (procAutoJumpInit__9daAlink_cFi)
//	800B6644: 803A37C0 (__vt__8cM3dGPla)
//	800B6648: 803A37C0 (__vt__8cM3dGPla)
//	800B6680: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800B66C0: 80452CA4 (lit_6021)
//	800B66F8: 800B01FC (getWallEdgePos__9daAlink_cFRC4cXyzP8cM3dGPlaP8cM3dGPlaP4cXyzi)
//	800B6728: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	800B673C: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	800B6744: 80267128 (atan2sX_Z__4cXyzCFv)
//	800B6750: 800FF818 (procClimbDownStartInit__9daAlink_cFs)
//	800B6754: 803A37C0 (__vt__8cM3dGPla)
//	800B6758: 803A37C0 (__vt__8cM3dGPla)
//	800B677C: 80135CD8 (procWolfHangFallStartInit__9daAlink_cFP8cM3dGPla)
//	800B679C: 800FAECC (procHangFallStartInit__9daAlink_cFP8cM3dGPla)
//	800B67A8: 803A37C0 (__vt__8cM3dGPla)
//	800B67AC: 803A37C0 (__vt__8cM3dGPla)
//	800B67CC: 80452CC0 (lit_6108)
//	800B682C: 80267674 (cM_atan2s__Fff)
//	800B6834: 80270E24 (cLib_distanceAngleS__Fss)
//	800B6848: 80439A20 (sincosTable___5JMath)
//	800B684C: 80439A20 (sincosTable___5JMath)
//	800B6858: 80452E80 (lit_16036)
//	800B6888: 803A37C0 (__vt__8cM3dGPla)
//	800B688C: 803A37C0 (__vt__8cM3dGPla)
//	800B68C0: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
//	800B68D4: 800C6A48 (procFallInit__9daAlink_cFif)
//	800B68E0: 800E3F20 (checkGrabRooster__9daAlink_cFv)
//	800B68F0: 80452D30 (lit_7625)
//	800B6910: 800C5E68 (procAutoJumpInit__9daAlink_cFi)
//	800B6940: 800C6850 (procRollJumpInit__9daAlink_cFv)
//	800B6960: 800E2DC4 (cancelMagneBootsOn__9daAlink_cFv)
//	800B6974: 80452D3C (lit_7808)
//	800B6978: 800C6A48 (procFallInit__9daAlink_cFif)
//	800B69B8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAutoJumpAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAutoJumpAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B69CC-800B6A30 0064+00 s=2 e=0 z=0  None .text      checkCutJumpInFly__9daAlink_cFv */
//	800B69FC: 800D20B4 (checkForceSwordSwing__9daAlink_cFv)
//	800B6A10: 800D42FC (procCutJumpInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutJumpInFly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutJumpInFly__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450698-8045069C 0004+00 s=4 e=0 z=0  None .sdata     l_ladderAnmBaseTransY */
SECTION_SDATA static f32 l_ladderAnmBaseTransY = 102.00054168701172f;

/* 800B6A30-800B6F28 04F8+00 s=16 e=0 z=0  None .text      checkFrontWallTypeAction__9daAlink_cFv */
//	800B6A48: 803621DC (_savegpr_29)
//	800B6A50: 800B02BC (setFrontWallType__9daAlink_cFv)
//	800B6A64: 80452CA4 (lit_6021)
//	800B6A9C: 80452CC0 (lit_6108)
//	800B6AA4: 80452CB8 (lit_6040)
//	800B6AB0: 804061C0 (g_dComIfG_gameInfo)
//	800B6AB4: 804061C0 (g_dComIfG_gameInfo)
//	800B6AC8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800B6AE0: 801356F0 (procWolfHangWallCatchInit__9daAlink_cFi)
//	800B6AEC: 800FAA7C (procHangStartInit__9daAlink_cFv)
//	800B6AFC: 80452CC0 (lit_6108)
//	800B6B04: 80452CB8 (lit_6040)
//	800B6B10: 804061C0 (g_dComIfG_gameInfo)
//	800B6B14: 804061C0 (g_dComIfG_gameInfo)
//	800B6B28: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800B6B30: 800FBE04 (procHangWallCatchInit__9daAlink_cFv)
//	800B6B5C: 80452CC0 (lit_6108)
//	800B6B64: 80452CB8 (lit_6040)
//	800B6B70: 804061C0 (g_dComIfG_gameInfo)
//	800B6B74: 804061C0 (g_dComIfG_gameInfo)
//	800B6B88: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800B6B90: 800FF28C (setClimbStartNotGround__9daAlink_cFv)
//	800B6BA4: 800FCF58 (getLadderUnitCount__9daAlink_cCFv)
//	800B6BC0: 800FD1F0 (setLadderPos__9daAlink_cFi)
//	800B6BD0: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800B6BD4: 80452CC0 (lit_6108)
//	800B6BDC: 80452CB8 (lit_6040)
//	800B6BE8: 804061C0 (g_dComIfG_gameInfo)
//	800B6BEC: 804061C0 (g_dComIfG_gameInfo)
//	800B6C00: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800B6C04: 80450698 (l_ladderAnmBaseTransY)
//	800B6C14: 80452DE0 (lit_11673)
//	800B6C30: 800FD824 (procLadderUpEndInit__9daAlink_cFi)
//	800B6C48: 800FDD90 (procLadderMoveInit__9daAlink_cFiiP4cXyz)
//	800B6C4C: 80452CC0 (lit_6108)
//	800B6C58: 80452D3C (lit_7808)
//	800B6C64: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800B6CA4: 803650D0 (abs)
//	800B6CC8: 800FE114 (setClimbInit__9daAlink_cFv)
//	800B6CDC: 800FCF84 (setLadderInit__9daAlink_cFv)
//	800B6CFC: 80392094 (d_a_d_a_alink__stringBase0)
//	800B6D00: 80392094 (d_a_d_a_alink__stringBase0)
//	800B6D08: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800B6D14: 80110654 (daAlink_searchTagKandelaar__FP10fopAc_ac_cPv)
//	800B6D18: 80110654 (daAlink_searchTagKandelaar__FP10fopAc_ac_cPv)
//	800B6D20: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800B6D30: 804061C0 (g_dComIfG_gameInfo)
//	800B6D34: 804061C0 (g_dComIfG_gameInfo)
//	800B6D4C: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800B6D5C: 80452CC0 (lit_6108)
//	800B6D84: 8002B2A8 (dComIfGp_checkItemGet__FUci)
//	800B6D90: 804061C0 (g_dComIfG_gameInfo)
//	800B6D94: 804061C0 (g_dComIfG_gameInfo)
//	800B6DD0: 800FD9CC (procLadderDownStartInit__9daAlink_cFv)
//	800B6DE8: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800B6E08: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800B6E34: 8038E1F4 (m__22daAlinkHIO_wallHang_c0)
//	800B6E38: 8038E1F4 (m__22daAlinkHIO_wallHang_c0)
//	800B6E54: 8012F41C (procWolfStepMoveInit__9daAlink_cFv)
//	800B6E60: 800C74D4 (procStepMoveInit__9daAlink_cFv)
//	800B6E84: 8038E1F4 (m__22daAlinkHIO_wallHang_c0)
//	800B6E88: 8038E1F4 (m__22daAlinkHIO_wallHang_c0)
//	800B6EC8: 801356F0 (procWolfHangWallCatchInit__9daAlink_cFi)
//	800B6ED4: 801355EC (procWolfHangReadyInit__9daAlink_cFv)
//	800B6EE8: 800FBE04 (procHangWallCatchInit__9daAlink_cFv)
//	800B6EF4: 800FC178 (procHangReadyInit__9daAlink_cFv)
//	800B6F14: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFrontWallTypeAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkFrontWallTypeAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B6F28-800B7090 0168+00 s=3 e=0 z=0  None .text      checkItemActionInitStart__9daAlink_cFv */
//	800B6F40: 800DE780 (checkBowAndSlingItem__9daAlink_cFi)
//	800B6F50: 800DF814 (checkNextActionBow__9daAlink_cFv)
//	800B6F68: 800E0BE4 (checkNextActionBoomerang__9daAlink_cFv)
//	800B6F88: 800E1C44 (checkNextActionCopyRod__9daAlink_cFv)
//	800B6FAC: 800E20C8 (procCopyRodSwingInit__9daAlink_cFv)
//	800B6FB4: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	800B6FE4: 801150E4 (checkIronBallAnime__9daAlink_cCFv)
//	800B6FF4: 801153F8 (checkNextActionIronBall__9daAlink_cFv)
//	800B7010: 8010FC38 (procBottleSwingInit__9daAlink_cFP10fopAc_ac_ci)
//	800B7030: 80111440 (procKandelaarSwingInit__9daAlink_cFv)
//	800B7038: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800B7070: 801095C8 (checkNextActionHookshot__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemActionInitStart() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemActionInitStart__9daAlink_cFv.s"
}
#pragma pop

/* 800B7090-800B7168 00D8+00 s=1 e=0 z=0  None .text      checkItemChangeAutoAction__9daAlink_cFv */
//	800B70D4: 80452CBC (lit_6041)
//	800B70D8: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800B70FC: 80106618 (checkBoardSwordTriggerAction__9daAlink_cFv)
//	800B712C: 800F1894 (procHorseCutChargeReadyInit__9daAlink_cFv)
//	800B7138: 800D4C68 (procCutTurnChargeInit__9daAlink_cFv)
//	800B7140: 800B6F28 (checkItemActionInitStart__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemChangeAutoAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemChangeAutoAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B7168-800B7190 0028+00 s=7 e=0 z=0  None .text      setFastShotTimer__9daAlink_cFv */
//	800B7168: 804061C0 (g_dComIfG_gameInfo)
//	800B716C: 804061C0 (g_dComIfG_gameInfo)
//	800B717C: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B7180: 8038EB50 (m__18daAlinkHIO_item_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFastShotTimer() {
    nofralloc
#include "asm/d/a/d_a_alink/setFastShotTimer__9daAlink_cFv.s"
}
#pragma pop

/* 800B7190-800B71EC 005C+00 s=9 e=0 z=0  None .text      cancelItemUseQuake__9daAlink_cFi */
//	800B71C8: 804061C0 (g_dComIfG_gameInfo)
//	800B71CC: 804061C0 (g_dComIfG_gameInfo)
//	800B71D8: 8006FD94 (StopQuake__12dVibration_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelItemUseQuake(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/cancelItemUseQuake__9daAlink_cFi.s"
}
#pragma pop

/* 800B71EC-800B72E4 00F8+00 s=6 e=0 z=0  None .text      cancelUpperItemReadyAnime__9daAlink_cFi */
//	800B7200: 804061C0 (g_dComIfG_gameInfo)
//	800B7204: 804061C0 (g_dComIfG_gameInfo)
//	800B7240: 800CEB58 (subjectCancelTrigger__9daAlink_cFv)
//	800B7260: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800B7274: 80452CB8 (lit_6040)
//	800B727C: 80452CBC (lit_6041)
//	800B7288: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800B72A4: 801159F0 (procIronBallReturnInit__9daAlink_cFv)
//	800B72B4: 80452CC4 (lit_6109)
//	800B72B8: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800B72C0: 800B58EC (checkWaitAction__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelUpperItemReadyAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/cancelUpperItemReadyAnime__9daAlink_cFi.s"
}
#pragma pop

/* 800B72E4-800B7390 00AC+00 s=8 e=0 z=0  None .text      checkItemActorPointer__9daAlink_cFv */
//	800B7310: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800B731C: 80452CBC (lit_6041)
//	800B7320: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800B735C: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800B7368: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800B7374: 800C33B8 (procWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemActorPointer() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemActorPointer__9daAlink_cFv.s"
}
#pragma pop

/* 800B7390-800B74B4 0124+00 s=2 e=0 z=0  None .text      checkSwordTwirlAction__9daAlink_cFv */
//	800B73AC: 800B93CC (checkSwordTwirlAnime__9daAlink_cCFv)
//	800B73BC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800B73D0: 80452CC4 (lit_6109)
//	800B73D4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800B73E0: 80452D74 (lit_8502)
//	800B73F0: 80452EB4 (lit_17382)
//	800B7418: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800B7440: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800B744C: 8026786C (cM_rnd__Fv)
//	800B7450: 8045328C (lit_63482)
//	800B7474: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800B7478: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800B7480: 80452CC4 (lit_6109)
//	800B7484: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800B7494: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwordTwirlAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwordTwirlAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B74B4-800B7528 0074+00 s=3 e=0 z=0  None .text      checkUpperItemActionFly__9daAlink_cFv */
//	800B74CC: 800DE780 (checkBowAndSlingItem__9daAlink_cFi)
//	800B74DC: 800DF798 (checkUpperItemActionBowFly__9daAlink_cFv)
//	800B74F4: 800E0B58 (checkUpperItemActionBoomerangFly__9daAlink_cFv)
//	800B7508: 800E1BB4 (checkUpperItemActionCopyRodFly__9daAlink_cFv)
//	800B7510: 800F4008 (checkCanoeJumpRide__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionFly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionFly__9daAlink_cFv.s"
}
#pragma pop

/* 800B7528-800B75EC 00C4+00 s=1 e=0 z=0  None .text      checkItemButtonChange__9daAlink_cFv */
//	800B7538: 803621DC (_savegpr_29)
//	800B7558: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800B7588: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800B75A0: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800B75D8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemButtonChange() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemButtonChange__9daAlink_cFv.s"
}
#pragma pop

/* 800B75EC-800B7B7C 0590+00 s=1 e=0 z=0  None .text      checkUpperItemAction__9daAlink_cFv */
//	800B75FC: 803621DC (_savegpr_29)
//	800B7604: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800B7630: 80112568 (setIronBallWaitUpperAnime__9daAlink_cFi)
//	800B7644: 800E158C (setCopyRodControllAnime__9daAlink_cFv)
//	800B768C: 80452CC4 (lit_6109)
//	800B7690: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800B76B4: 800E7DD8 (procFmChainStrongPullInit__9daAlink_cFv)
//	800B76C0: 800E7F18 (wallGrabButton__9daAlink_cFv)
//	800B76D4: 80452CC4 (lit_6109)
//	800B76D8: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800B76EC: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	800B76F8: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800B770C: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800B7724: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800B7738: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800B7758: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	800B776C: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	800B7778: 80452CC0 (lit_6108)
//	800B7784: 80452CB8 (lit_6040)
//	800B77C4: 800B4950 (notTalk__9daAlink_cFv)
//	800B77D4: 800B80C4 (orderZTalk__9daAlink_cFv)
//	800B7800: 800E3BCC (getGrabThrowRate__9daAlink_cFv)
//	800B781C: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B7854: 800B3298 (setBStatus__9daAlink_cFUc)
//	800B7860: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B7868: 804061C0 (g_dComIfG_gameInfo)
//	800B786C: 804061C0 (g_dComIfG_gameInfo)
//	800B788C: 804061C0 (g_dComIfG_gameInfo)
//	800B7890: 804061C0 (g_dComIfG_gameInfo)
//	800B78A8: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	800B78C4: 8013D818 (procWolfGrabThrowInit__9daAlink_cFv)
//	800B78D0: 8013D588 (procWolfGrabPutInit__9daAlink_cFv)
//	800B78E8: 800D70A0 (checkCaughtEscapeCutTurn__9daAlink_cFv)
//	800B7910: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	800B7928: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800B792C: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800B7944: 80452CA4 (lit_6021)
//	800B7960: 803650D0 (abs)
//	800B796C: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800B7970: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800B79C8: 800DB5B0 (procStEscapeInit__9daAlink_cFv)
//	800B79D8: 80452CC4 (lit_6109)
//	800B79DC: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800B79F0: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
//	800B79FC: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800B7A0C: 800DF0BC (checkUpperItemActionBow__9daAlink_cFv)
//	800B7A24: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800B7A34: 800E5170 (checkNextActionGrab__9daAlink_cFv)
//	800B7A7C: 800E0A9C (checkUpperItemActionBoomerang__9daAlink_cFv)
//	800B7AB8: 800E1ADC (checkUpperItemActionCopyRod__9daAlink_cFv)
//	800B7AF8: 80109284 (checkUpperItemActionHookshot__9daAlink_cFv)
//	800B7B10: 801150E4 (checkIronBallAnime__9daAlink_cCFv)
//	800B7B20: 80115254 (checkUpperItemActionIronBall__9daAlink_cFv)
//	800B7B48: 80112568 (setIronBallWaitUpperAnime__9daAlink_cFi)
//	800B7B5C: 800E158C (setCopyRodControllAnime__9daAlink_cFv)
//	800B7B68: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B7B7C-800B7BF8 007C+00 s=1 e=0 z=0  None .text      orderPeep__9daAlink_cFv */
//	800B7BA8: 803AF99C (l_peepEventName)
//	800B7BAC: 803AF99C (l_peepEventName)
//	800B7BC0: 8001B4E0 (fopAcM_orderOtherEvent__FP10fopAc_ac_cP10fopAc_ac_cPCcUsUsUs)
//	800B7BD4: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	800B7BE0: 800C33B8 (procWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::orderPeep() {
    nofralloc
#include "asm/d/a/d_a_alink/orderPeep__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532B0-804532B4 0004+00 s=1 e=0 z=0  None .sdata2    itemTalkType$67468 */
SECTION_SDATA2 static u8 itemTalkType[4] = {
    0x00,
    0x06,
    0x00,
    0x07,
};

/* 800B7BF8-800B7D4C 0154+00 s=13 e=0 z=0  None .text      orderTalk__9daAlink_cFi */
//	800B7C08: 803621D8 (_savegpr_28)
//	800B7C14: 800B4950 (notTalk__9daAlink_cFv)
//	800B7C28: 804061C0 (g_dComIfG_gameInfo)
//	800B7C2C: 804061C0 (g_dComIfG_gameInfo)
//	800B7C80: 8001B068 (fopAcM_orderTalkEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs)
//	800B7CA4: 800B477C (checkRequestTalkActor__9daAlink_cFP10dAttList_cP10fopAc_ac_c)
//	800B7CBC: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800B7CC4: 8015EBD8 (checkTradeItem__9daPy_py_cFi)
//	800B7CDC: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	800B7CEC: 804532B0 (itemTalkType)
//	800B7D04: 8001B0FC (fopAcM_orderTalkItemBtnEvent__FUsP10fopAc_ac_cP10fopAc_ac_cUsUs)
//	800B7D28: 800B80C4 (orderZTalk__9daAlink_cFv)
//	800B7D38: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::orderTalk(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/orderTalk__9daAlink_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532B4-804532B8 0004+00 s=1 e=0 z=0  None .sdata2    @67554 */
SECTION_SDATA2 static f32 lit_67554 = 1100.0f;

/* 800B7D4C-800B7F84 0238+00 s=1 e=0 z=0  None .text      daAlink_searchBouDoor__FP10fopAc_ac_cPv */
//	800B7D78: 804061C0 (g_dComIfG_gameInfo)
//	800B7D7C: 804061C0 (g_dComIfG_gameInfo)
//	800B7D90: 80452CC0 (lit_6108)
//	800B7DB8: 8034739C (PSVECSquareDistance)
//	800B7DBC: 80452CC0 (lit_6108)
//	800B7DCC: 80452CE8 (lit_6846)
//	800B7DD4: 80452CF0 (lit_6847)
//	800B7E1C: 80452CF8 (lit_6848)
//	800B7E28: 80450AE0 (__float_nan)
//	800B7E2C: 80450AE0 (__float_nan)
//	800B7E98: 80450AE0 (__float_nan)
//	800B7E9C: 80450AE0 (__float_nan)
//	800B7EA0: 804532B4 (lit_67554)
//	800B7EB4: 80368BE4 (strlen)
//	800B7ED4: 80368BE4 (strlen)
//	800B7EF8: 804061C0 (g_dComIfG_gameInfo)
//	800B7EFC: 804061C0 (g_dComIfG_gameInfo)
//	800B7F08: 80046800 (setObjectArchive__16dEvent_manager_cFPc)
//	800B7F0C: 804061C0 (g_dComIfG_gameInfo)
//	800B7F10: 804061C0 (g_dComIfG_gameInfo)
//	800B7F28: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	800B7F4C: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchBouDoor(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchBouDoor__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800B7F84-800B80C4 0140+00 s=1 e=0 z=0  None .text      daAlink_searchKolin__FP10fopAc_ac_cPv */
//	800B7FB4: 804061C0 (g_dComIfG_gameInfo)
//	800B7FB8: 804061C0 (g_dComIfG_gameInfo)
//	800B7FC0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800B7FE8: 80368BE4 (strlen)
//	800B800C: 80368BE4 (strlen)
//	800B8034: 804061C0 (g_dComIfG_gameInfo)
//	800B8038: 804061C0 (g_dComIfG_gameInfo)
//	800B8044: 80046800 (setObjectArchive__16dEvent_manager_cFPc)
//	800B8048: 804061C0 (g_dComIfG_gameInfo)
//	800B804C: 804061C0 (g_dComIfG_gameInfo)
//	800B8064: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	800B8088: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchKolin(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchKolin__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800B80C4-800B8374 02B0+00 s=2 e=0 z=0  None .text      orderZTalk__9daAlink_cFv */
//	800B8140: 804061C0 (g_dComIfG_gameInfo)
//	800B8144: 804061C0 (g_dComIfG_gameInfo)
//	800B816C: 800C03A0 (checkCloudSea__9daAlink_cFv)
//	800B8178: 80392094 (d_a_d_a_alink__stringBase0)
//	800B817C: 80392094 (d_a_d_a_alink__stringBase0)
//	800B8184: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800B8190: 80392094 (d_a_d_a_alink__stringBase0)
//	800B8194: 80392094 (d_a_d_a_alink__stringBase0)
//	800B819C: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800B81B8: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	800B81DC: 80392094 (d_a_d_a_alink__stringBase0)
//	800B81E0: 80392094 (d_a_d_a_alink__stringBase0)
//	800B81E8: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800B81F8: 802681E4 (cBgW_CheckBGround__Ff)
//	800B8204: 804061C0 (g_dComIfG_gameInfo)
//	800B8208: 804061C0 (g_dComIfG_gameInfo)
//	800B8214: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800B8234: 804061C0 (g_dComIfG_gameInfo)
//	800B8238: 804061C0 (g_dComIfG_gameInfo)
//	800B8244: 800738CC (convPId__10dAttHint_cFUi)
//	800B8254: 804061C0 (g_dComIfG_gameInfo)
//	800B8258: 804061C0 (g_dComIfG_gameInfo)
//	800B8268: 80430188 (g_meter2_info)
//	800B826C: 80430188 (g_meter2_info)
//	800B8280: 800B26AC (midnaTalkTrigger__9daAlink_cCFv)
//	800B82C4: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
//	800B82DC: 8001B068 (fopAcM_orderTalkEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs)
//	800B82F0: 804061C0 (g_dComIfG_gameInfo)
//	800B82F4: 804061C0 (g_dComIfG_gameInfo)
//	800B8328: 80451018 (m_midnaActor__9daPy_py_c)
//	800B8334: 8001B068 (fopAcM_orderTalkEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::orderZTalk() {
    nofralloc
#include "asm/d/a/d_a_alink/orderZTalk__9daAlink_cFv.s"
}
#pragma pop

/* 800B8374-800B8930 05BC+00 s=1 e=0 z=0  None .text      checkNormalAction__9daAlink_cFv */
//	800B8394: 800E7EE4 (getWallGrabStatus__9daAlink_cFv)
//	800B83A0: 800E7EF4 (wallGrabTrigger__9daAlink_cFv)
//	800B83BC: 800E8428 (procCoPushPullWaitInit__9daAlink_cFi)
//	800B83D0: 800E79F8 (searchFmChainPos__9daAlink_cFv)
//	800B83EC: 8013DDF8 (procWolfChainUpInit__9daAlink_cFv)
//	800B83F8: 800E7C30 (procFmChainUpInit__9daAlink_cFv)
//	800B8408: 800B7BF8 (orderTalk__9daAlink_cFi)
//	800B8428: 804061C0 (g_dComIfG_gameInfo)
//	800B842C: 804061C0 (g_dComIfG_gameInfo)
//	800B8440: 800B7B7C (orderPeep__9daAlink_cFv)
//	800B8468: 80137420 (procWolfLieStartInit__9daAlink_cFi)
//	800B8474: 800F9210 (procCrawlStartInit__9daAlink_cFv)
//	800B8488: 8013D0D4 (procWolfGrabUpInit__9daAlink_cFv)
//	800B849C: 8013E240 (procWolfChainReadyInit__9daAlink_cFv)
//	800B84B0: 8013D930 (procWolfPushInit__9daAlink_cFv)
//	800B84D4: 80106774 (procBoardRideInit__9daAlink_cFv)
//	800B84F4: 800F4A50 (procCanoeRideInit__9daAlink_cFv)
//	800B8504: 800C70F8 (procSmallJumpInit__9daAlink_cFi)
//	800B850C: 80392094 (d_a_d_a_alink__stringBase0)
//	800B8510: 80392094 (d_a_d_a_alink__stringBase0)
//	800B8518: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800B8524: 800B7F84 (daAlink_searchKolin__FP10fopAc_ac_cPv)
//	800B8528: 800B7F84 (daAlink_searchKolin__FP10fopAc_ac_cPv)
//	800B8530: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800B8540: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800B854C: 800EF95C (procHorseRideInit__9daAlink_cFv)
//	800B856C: 801355EC (procWolfHangReadyInit__9daAlink_cFv)
//	800B8584: 800FBE04 (procHangWallCatchInit__9daAlink_cFv)
//	800B8590: 800FC178 (procHangReadyInit__9daAlink_cFv)
//	800B85B0: 80392094 (d_a_d_a_alink__stringBase0)
//	800B85B4: 80392094 (d_a_d_a_alink__stringBase0)
//	800B85BC: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800B85C8: 800B7D4C (daAlink_searchBouDoor__FP10fopAc_ac_cPv)
//	800B85CC: 800B7D4C (daAlink_searchBouDoor__FP10fopAc_ac_cPv)
//	800B85D4: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800B85F0: 8001B244 (fopAcM_orderDoorEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs)
//	800B85F8: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800B8610: 8001BA7C (fopAcM_orderTreasureEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs)
//	800B8628: 80111894 (procGrassWhistleGetInit__9daAlink_cFv)
//	800B863C: 800EA2A8 (procGoatStrokeInit__9daAlink_cFv)
//	800B8674: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800B86A4: 80452CC0 (lit_6108)
//	800B86CC: 8034739C (PSVECSquareDistance)
//	800B86D8: 800E8314 (getGoatCatchDistance2__9daAlink_cFv)
//	800B86F4: 8013DF30 (procWolfGanonCatchInit__9daAlink_cFv)
//	800B8704: 80452CC0 (lit_6108)
//	800B8708: 800E9894 (procGoatCatchInit__9daAlink_cFP10fopAc_ac_cf)
//	800B871C: 800E70FC (procInsectCatchInit__9daAlink_cFv)
//	800B874C: 8013D0D4 (procWolfGrabUpInit__9daAlink_cFv)
//	800B8768: 800E7254 (procPickUpInit__9daAlink_cFv)
//	800B8774: 800E5CBC (procGrabReadyInit__9daAlink_cFv)
//	800B8788: 800FC2F4 (procHangLeverDownInit__9daAlink_cFv)
//	800B87A8: 8013B528 (procWolfDownAttackInit__9daAlink_cFv)
//	800B87B4: 800D27E4 (checkDoCutAction__9daAlink_cFv)
//	800B87D8: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	800B87E4: 800D27E4 (checkDoCutAction__9daAlink_cFv)
//	800B87FC: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	800B8810: 800D1088 (changeCutFast__9daAlink_cFv)
//	800B8828: 800D27E4 (checkDoCutAction__9daAlink_cFv)
//	800B883C: 80130700 (procWolfHowlDemoInit__9daAlink_cFv)
//	800B8850: 8013FA14 (procWolfGetSmellInit__9daAlink_cFv)
//	800B8868: 80134000 (procWolfTagJumpInit__9daAlink_cFP10fopAc_ac_c)
//	800B887C: 804061C0 (g_dComIfG_gameInfo)
//	800B8880: 804061C0 (g_dComIfG_gameInfo)
//	800B88A0: 80452CC0 (lit_6108)
//	800B88C8: 8034739C (PSVECSquareDistance)
//	800B88D4: 800E8314 (getGoatCatchDistance2__9daAlink_cFv)
//	800B88F0: 8013DF30 (procWolfGanonCatchInit__9daAlink_cFv)
//	800B8900: 80452CC0 (lit_6108)
//	800B8904: 800E9894 (procGoatCatchInit__9daAlink_cFP10fopAc_ac_cf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNormalAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNormalAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B8930-800B8988 0058+00 s=11 e=0 z=0  None .text      checkReadyItem__9daAlink_cFv */
//	800B895C: 8002DF1C (dComIfGp_getSelectItem__Fi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkReadyItem() {
    nofralloc
#include "asm/d/a/d_a_alink/checkReadyItem__9daAlink_cFv.s"
}
#pragma pop

/* 800B8988-800B9010 0688+00 s=2 e=0 z=0  None .text      checkItemAction__9daAlink_cFv */
//	800B89A0: 8038D658 (lit_3757)
//	800B89A4: 8038D658 (lit_3757)
//	800B89A8: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800B89E0: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800B8A10: 801398A8 (procWolfRollAttackChargeInit__9daAlink_cFv)
//	800B8A1C: 800D2368 (checkCutTurnInputTrigger__9daAlink_cFv)
//	800B8A34: 8013B2A0 (procWolfRollAttackInit__9daAlink_cFii)
//	800B8A40: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
//	800B8A50: 800D2188 (checkComboReserb__9daAlink_cFv)
//	800B8A6C: 801398A8 (procWolfRollAttackChargeInit__9daAlink_cFv)
//	800B8A78: 801393A4 (checkWolfAttackAction__9daAlink_cFv)
//	800B8A9C: 80127D2C (wolfClawTrigger__9daAlink_cFv)
//	800B8AD4: 8013F4A8 (procWolfDigThroughInit__9daAlink_cFi)
//	800B8AE0: 8013ED44 (procWolfDigInit__9daAlink_cFv)
//	800B8B84: 800D0ECC (checkCutDashAnime__9daAlink_cCFv)
//	800B8BD4: 80106618 (checkBoardSwordTriggerAction__9daAlink_cFv)
//	800B8C04: 800F1894 (procHorseCutChargeReadyInit__9daAlink_cFv)
//	800B8C10: 800D4C68 (procCutTurnChargeInit__9daAlink_cFv)
//	800B8C38: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	800B8C48: 800D2368 (checkCutTurnInputTrigger__9daAlink_cFv)
//	800B8C74: 801075D4 (procBoardCutTurnInit__9daAlink_cFv)
//	800B8CA4: 800F1AAC (procHorseCutTurnInit__9daAlink_cFv)
//	800B8CB8: 800D47DC (procCutTurnInit__9daAlink_cFii)
//	800B8CC4: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
//	800B8CD4: 800D2188 (checkComboReserb__9daAlink_cFv)
//	800B8D18: 801074AC (procBoardCutInit__9daAlink_cFv)
//	800B8D24: 800A7A5C (checkDashAnime__9daAlink_cCFv)
//	800B8D3C: 800D1E1C (setCutDash__9daAlink_cFii)
//	800B8D4C: 800D23C0 (checkCutAction__9daAlink_cFv)
//	800B8D80: 80106618 (checkBoardSwordTriggerAction__9daAlink_cFv)
//	800B8DB0: 800F1894 (procHorseCutChargeReadyInit__9daAlink_cFv)
//	800B8DBC: 800D4C68 (procCutTurnChargeInit__9daAlink_cFv)
//	800B8DC8: 800D23C0 (checkCutAction__9daAlink_cFv)
//	800B8DD0: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	800B8DF8: 800F7760 (procFishingCastInit__9daAlink_cFv)
//	800B8E18: 804061C0 (g_dComIfG_gameInfo)
//	800B8E1C: 804061C0 (g_dComIfG_gameInfo)
//	800B8E30: 800E05E8 (setThrowBoomerangAnime__9daAlink_cFv)
//	800B8E4C: 800E75EC (procPickPutInit__9daAlink_cFi)
//	800B8E60: 804061C0 (g_dComIfG_gameInfo)
//	800B8E64: 804061C0 (g_dComIfG_gameInfo)
//	800B8E84: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800B8E90: 80452CC4 (lit_6109)
//	800B8E94: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800B8EA4: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	800B8EBC: 80452D10 (lit_7306)
//	800B8ED8: 800B8930 (checkReadyItem__9daAlink_cFv)
//	800B8EE8: 800B2634 (itemTrigger__9daAlink_cFv)
//	800B8F04: 800B2604 (itemButton__9daAlink_cFv)
//	800B8F14: 800B6F28 (checkItemActionInitStart__9daAlink_cFv)
//	800B8F24: 804061C0 (g_dComIfG_gameInfo)
//	800B8F28: 804061C0 (g_dComIfG_gameInfo)
//	800B8F34: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800B8F50: 800DC678 (checkGuardActionChange__9daAlink_cFv)
//	800B8F60: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800B8F80: 804061C0 (g_dComIfG_gameInfo)
//	800B8F84: 804061C0 (g_dComIfG_gameInfo)
//	800B8F94: 800C0594 (checkNotBattleStage__9daAlink_cFv)
//	800B8FB8: 804061C0 (g_dComIfG_gameInfo)
//	800B8FBC: 804061C0 (g_dComIfG_gameInfo)
//	800B8FD4: 800B3220 (setRStatus__9daAlink_cFUc)
//	800B8FDC: 800B2688 (spActionTrigger__9daAlink_cFv)
//	800B8FEC: 800DDA10 (procGuardAttackInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B9010-800B9018 0008+00 s=1 e=0 z=0  None .text      checkRAction__9daAlink_cFv */
bool daAlink_c::checkRAction() {
    return false;
}

/* 800B9018-800B9148 0130+00 s=1 e=0 z=0  None .text      checkMoveDoAction__9daAlink_cFv */
//	800B9028: 803621DC (_savegpr_29)
//	800B903C: 804061C0 (g_dComIfG_gameInfo)
//	800B9040: 804061C0 (g_dComIfG_gameInfo)
//	800B9060: 8012DEC8 (procWolfSideStepInit__9daAlink_cFi)
//	800B9078: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800B909C: 800B9148 (checkSideRollAction__9daAlink_cFi)
//	800B90B8: 800C3DA0 (procSideStepInit__9daAlink_cFi)
//	800B90D4: 800737E4 (LockonTruth__12dAttention_cFv)
//	800B90FC: 80452CA4 (lit_6021)
//	800B9114: 800C494C (procFrontRollInit__9daAlink_cFv)
//	800B9124: 8012D474 (procWolfDashInit__9daAlink_cFv)
//	800B9134: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMoveDoAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkMoveDoAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B9148-800B9254 010C+00 s=3 e=0 z=0  None .text      checkSideRollAction__9daAlink_cFi */
//	800B9164: 800B1B28 (checkNotJumpSinkLimit__9daAlink_cFv)
//	800B917C: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800B918C: 80452CA4 (lit_6021)
//	800B919C: 800D2890 (checkCutBackState__9daAlink_cFv)
//	800B91C4: 800C5328 (procSideRollInit__9daAlink_cFi)
//	800B91CC: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800B91E8: 80452CC0 (lit_6108)
//	800B9210: 8034739C (PSVECSquareDistance)
//	800B9214: 80452CCC (lit_6237)
//	800B9228: 800DE008 (procTurnMoveInit__9daAlink_cFi)
//	800B9238: 800C5328 (procSideRollInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSideRollAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSideRollAction__9daAlink_cFi.s"
}
#pragma pop

/* 800B9254-800B92D0 007C+00 s=35 e=0 z=0  None .text      checkNoUpperAnime__9daAlink_cCFv */
//	800B9284: 800B9398 (checkWindDashAnime__9daAlink_cCFv)
//	800B9294: 800B93CC (checkSwordTwirlAnime__9daAlink_cCFv)
//	800B92A4: 80110C6C (checkKandelaarEquipAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNoUpperAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoUpperAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800B92D0-800B92F8 0028+00 s=1 e=0 z=0  None .text      checkOneHandItemEquipAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkOneHandItemEquipAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkOneHandItemEquipAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800B92F8-800B9340 0048+00 s=1 e=0 z=0  None .text      checkItemEquipAnime__9daAlink_cCFv */
//	800B9318: 800B92D0 (checkOneHandItemEquipAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemEquipAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemEquipAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800B9340-800B9398 0058+00 s=30 e=0 z=1  None .text      checkEquipAnime__9daAlink_cCFv */
//	800B935C: 800D0E98 (checkSwordEquipAnime__9daAlink_cCFv)
//	800B936C: 800B92F8 (checkItemEquipAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkEquipAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkEquipAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800B9398-800B93CC 0034+00 s=4 e=0 z=0  None .text      checkWindDashAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWindDashAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWindDashAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800B93CC-800B93F4 0028+00 s=4 e=0 z=0  None .text      checkSwordTwirlAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwordTwirlAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwordTwirlAnime__9daAlink_cCFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532B8-804532BC 0004+00 s=1 e=0 z=0  None .sdata2    @68266 */
SECTION_SDATA2 static f32 lit_68266 = -4.0f / 5.0f;

/* 800B93F4-800B9580 018C+00 s=7 e=0 z=0  None .text      swordEquip__9daAlink_cFi */
//	800B9404: 803621DC (_savegpr_29)
//	800B9410: 804061C0 (g_dComIfG_gameInfo)
//	800B9414: 804061C0 (g_dComIfG_gameInfo)
//	800B945C: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800B9460: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800B9464: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800B948C:
// 8038DE8C (m__17daAlinkHIO_cut_c0) 	800B9490: 8038DE8C (m__17daAlinkHIO_cut_c0) 	800B9494:
// 800AD6F0 (setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c)
//800B94A0: 80452D1C (lit_7448) 	800B94D4: 800AFAA8
// (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	800B94EC: 800AF4B0
//(setFaceBck__9daAlink_cFUsiUs) 	800B94F4: 80115C20 (checkEventRun__9daAlink_cCFv) 	800B9500:
//80392094 (d_a_d_a_alink__stringBase0) 	800B9504: 80392094 (d_a_d_a_alink__stringBase0) 	800B950C:
//8009DA60 (checkStageName__9daAlink_cFPCc) 	800B9524: 804061C0 (g_dComIfG_gameInfo) 	800B9528:
//804061C0 (g_dComIfG_gameInfo) 	800B9538: 804532B8 (lit_68266) 	800B956C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swordEquip(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/swordEquip__9daAlink_cFi.s"
}
#pragma pop

/* 800B9580-800B9640 00C0+00 s=1 e=0 z=0  None .text      swordUnequip__9daAlink_cFv */
//	800B9594: 800B97EC (checkFastUnequip__9daAlink_cFv)
//	800B95A0: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800B95A4: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800B95B0: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800B95B4: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800B95F0: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800B95F4: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800B9604: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
//	800B9610: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800B9628: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swordUnequip() {
    nofralloc
#include "asm/d/a/d_a_alink/swordUnequip__9daAlink_cFv.s"
}
#pragma pop

/* 800B9640-800B96A4 0064+00 s=6 e=0 z=0  None .text      itemEquip__9daAlink_cFUs */
//	800B9668: 804061C0 (g_dComIfG_gameInfo)
//	800B966C: 804061C0 (g_dComIfG_gameInfo)
//	800B968C: 80452CBC (lit_6041)
//	800B9690: 800B96A4 (itemUnequip__9daAlink_cFUsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::itemEquip(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/itemEquip__9daAlink_cFUs.s"
}
#pragma pop

/* 800B96A4-800B97EC 0148+00 s=2 e=0 z=0  None .text      itemUnequip__9daAlink_cFUsf */
//	800B96BC: 803621DC (_savegpr_29)
//	800B96F0: 8015EA88 (checkBottleItem__9daPy_py_cFi)
//	800B9700: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B9704: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B9718: 800DE780 (checkBowAndSlingItem__9daAlink_cFi)
//	800B9728: 800DFBC8 (checkBowGrabLeftHand__9daAlink_cCFv)
//	800B9740: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B9744: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B9754: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B9758: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B9760: 80452CC0 (lit_6108)
//	800B9770: 800B97EC (checkFastUnequip__9daAlink_cFv)
//	800B9788: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B978C: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B9798: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B979C: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800B97C8: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
//	800B97D8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::itemUnequip(u16 param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/itemUnequip__9daAlink_cFUsf.s"
}
#pragma pop

/* 800B97EC-800B983C 0050+00 s=2 e=0 z=0  None .text      checkFastUnequip__9daAlink_cFv */
//	800B9814: 80115C20 (checkEventRun__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFastUnequip() {
    nofralloc
#include "asm/d/a/d_a_alink/checkFastUnequip__9daAlink_cFv.s"
}
#pragma pop

/* 800B983C-800B994C 0110+00 s=10 e=0 z=0  None .text      allUnequip__9daAlink_cFi */
//	800B9898: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800B98C4: 800B9640 (itemEquip__9daAlink_cFUs)
//	800B98E8: 800B9580 (swordUnequip__9daAlink_cFv)
//	800B9904: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800B990C: 80452D3C (lit_7808)
//	800B9918: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800B9924: 80452CB8 (lit_6040)
//	800B9928: 800B96A4 (itemUnequip__9daAlink_cFUsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::allUnequip(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/allUnequip__9daAlink_cFi.s"
}
#pragma pop

/* 800B994C-800B9D2C 03E0+00 s=8 e=0 z=0  None .text      checkItemChangeFromButton__9daAlink_cFv */
//	800B995C: 803621D4 (_savegpr_27)
//	800B9970: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800B9980: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800B99B4: 804061C0 (g_dComIfG_gameInfo)
//	800B99B8: 804061C0 (g_dComIfG_gameInfo)
//	800B99C8: 800C0594 (checkNotBattleStage__9daAlink_cFv)
//	800B9A1C: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	800B9A44: 800B93F4 (swordEquip__9daAlink_cFi)
//	800B9A68: 80392094 (d_a_d_a_alink__stringBase0)
//	800B9A6C: 80392094 (d_a_d_a_alink__stringBase0)
//	800B9A74: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800B9AA0: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	800B9AB4: 800B9640 (itemEquip__9daAlink_cFUs)
//	800B9AD0: 800C0A9C (checkNewItemChange__9daAlink_cFUc)
//	800B9AEC: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	800B9B04: 800C077C (changeItemTriggerKeepProc__9daAlink_cFUci)
//	800B9B28: 804061C0 (g_dComIfG_gameInfo)
//	800B9B2C: 804061C0 (g_dComIfG_gameInfo)
//	800B9B58: 80110840 (offKandelaarModel__9daAlink_cFv)
//	800B9B90: 800D698C (procSwordUnequipSpInit__9daAlink_cFv)
//	800B9BA0: 800B983C (allUnequip__9daAlink_cFi)
//	800B9BE0: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800B9C04: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800B9C30: 800B9640 (itemEquip__9daAlink_cFUs)
//	800B9C94: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800B9CA0: 804061C0 (g_dComIfG_gameInfo)
//	800B9CA4: 804061C0 (g_dComIfG_gameInfo)
//	800B9CAC: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	800B9CB0: 80392094 (d_a_d_a_alink__stringBase0)
//	800B9CB4: 80392094 (d_a_d_a_alink__stringBase0)
//	800B9CBC: 80368994 (strcmp)
//	800B9CC8: 804061C0 (g_dComIfG_gameInfo)
//	800B9CCC: 804061C0 (g_dComIfG_gameInfo)
//	800B9CD4: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	800B9CD8: 80392094 (d_a_d_a_alink__stringBase0)
//	800B9CDC: 80392094 (d_a_d_a_alink__stringBase0)
//	800B9CE4: 80368994 (strcmp)
//	800B9CF8: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	800B9D0C: 800B983C (allUnequip__9daAlink_cFi)
//	800B9D18: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemChangeFromButton() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemChangeFromButton__9daAlink_cFv.s"
}
#pragma pop

/* 800B9D2C-800B9F50 0224+00 s=12 e=0 z=0  None .text      checkNextActionFromButton__9daAlink_cFv
 */
//	800B9D40: 800B7090 (checkItemChangeAutoAction__9daAlink_cFv)
//	800B9D58: 800B75EC (checkUpperItemAction__9daAlink_cFv)
//	800B9D8C: 804061C0 (g_dComIfG_gameInfo)
//	800B9D90: 804061C0 (g_dComIfG_gameInfo)
//	800B9DD0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800B9E1C: 800E1374 (getCopyRodControllActor__9daAlink_cFv)
//	800B9E2C: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800B9E48: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800B9E64: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800B9E74: 800B5284 (decideDoStatus__9daAlink_cFv)
//	800B9E7C: 800B8374 (checkNormalAction__9daAlink_cFv)
//	800B9E94: 800B4B7C (decideCommonDoStatus__9daAlink_cFv)
//	800B9EA0: 800B71EC (cancelUpperItemReadyAnime__9daAlink_cFi)
//	800B9EB8: 800B8988 (checkItemAction__9daAlink_cFv)
//	800B9EE4: 800B9010 (checkRAction__9daAlink_cFv)
//	800B9EFC: 800B9018 (checkMoveDoAction__9daAlink_cFv)
//	800B9F20: 800CE628 (checkSubjectAction__9daAlink_cFv)
//	800B9F38: 800B994C (checkItemChangeFromButton__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionFromButton() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionFromButton__9daAlink_cFv.s"
}
#pragma pop

/* 800B9F50-800BA09C 014C+00 s=14 e=0 z=0  None .text      checkGroundSpecialMode__9daAlink_cFv */
//	800B9F9C: 800C77F4 (procCoMetamorphoseInit__9daAlink_cFv)
//	800B9FC4: 80105B10 (checkBoardRestart__9daAlink_cFv)
//	800B9FD8: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
//	800B9FF0: 800E9344 (procGoatMoveInit__9daAlink_cFv)
//	800BA004: 800EA950 (procSumouReadyInit__9daAlink_cFv)
//	800BA018: 800EA3F4 (procGoronMoveInit__9daAlink_cFv)
//	800BA030: 800F4C78 (procCanoeJumpRideInit__9daAlink_cFP10fopAc_ac_c)
//	800BA03C: 800B5F6C (checkSlideAction__9daAlink_cFv)
//	800BA054: 800A2280 (checkGoronRide__9daAlink_cFv)
//	800BA064: 800C854C (procGoronRideWaitInit__9daAlink_cFP10fopAc_ac_c)
//	800BA07C: 800DBD1C (procScreamWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGroundSpecialMode() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGroundSpecialMode__9daAlink_cFv.s"
}
#pragma pop

/* 800BA09C-800BA0D0 0034+00 s=4 e=0 z=0  None .text      commonCheckNextAction__9daAlink_cFi */
//	800BA0B4: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	800BA0BC: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonCheckNextAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonCheckNextAction__9daAlink_cFi.s"
}
#pragma pop

/* 800BA0D0-800BA6A0 05D0+00 s=91 e=0 z=0  None .text      checkNextAction__9daAlink_cFi */
//	800BA0E8: 803621D4 (_savegpr_27)
//	800BA0F4: 8038D658 (lit_3757)
//	800BA0F8: 8038D658 (lit_3757)
//	800BA104: 80118D7C (checkDeadAction__9daAlink_cFi)
//	800BA11C: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800BA148: 80452CA4 (lit_6021)
//	800BA160: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	800BA184: 800737E4 (LockonTruth__12dAttention_cFv)
//	800BA1AC: 800B444C (setSpeedAndAngleAtn__9daAlink_cFv)
//	800BA1B8: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800BA1D4: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800BA248: 800B3FD4 (setSpeedAndAngleNormal__9daAlink_cFv)
//	800BA250: 800B02BC (setFrontWallType__9daAlink_cFv)
//	800BA258: 800B3500 (checkAttentionState__9daAlink_cFv)
//	800BA290: 80452D84 (lit_8781)
//	800BA2CC: 800B21EC (checkSlope__9daAlink_cCFv)
//	800BA324: 800C8460 (procFloorDownReboundInit__9daAlink_cFv)
//	800BA33C: 800A7A5C (checkDashAnime__9daAlink_cCFv)
//	800BA350: 800D4DDC (procCutTurnMoveInit__9daAlink_cFi)
//	800BA35C: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	800BA37C: 80452CA4 (lit_6021)
//	800BA38C: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800BA3B0: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800BA3C0: 800DF814 (checkNextActionBow__9daAlink_cFv)
//	800BA3D0: 800E0440 (checkBoomerangAnime__9daAlink_cCFv)
//	800BA3EC: 800E0BE4 (checkNextActionBoomerang__9daAlink_cFv)
//	800BA3FC: 800E1530 (checkCopyRodAnime__9daAlink_cCFv)
//	800BA40C: 800E1C44 (checkNextActionCopyRod__9daAlink_cFv)
//	800BA444: 801095C8 (checkNextActionHookshot__9daAlink_cFv)
//	800BA454: 801150E4 (checkIronBallAnime__9daAlink_cCFv)
//	800BA464: 801153F8 (checkNextActionIronBall__9daAlink_cFv)
//	800BA48C: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800BA49C: 800C38CC (procAtnActorWaitInit__9daAlink_cFv)
//	800BA4AC: 800C39EC (procAtnActorMoveInit__9daAlink_cFv)
//	800BA4BC: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800BA4CC: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800BA4DC: 800C3810 (procAtnMoveInit__9daAlink_cFv)
//	800BA4F4: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800BA508: 80270E24 (cLib_distanceAngleS__Fss)
//	800BA518: 80452CA4 (lit_6021)
//	800BA528: 800C3A94 (procWaitTurnInit__9daAlink_cFv)
//	800BA538: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800BA548: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800BA558: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800BA588: 800C3C3C (procMoveTurnInit__9daAlink_cFi)
//	800BA598: 80452CA4 (lit_6021)
//	800BA5AC: 80270E24 (cLib_distanceAngleS__Fss)
//	800BA5E4: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800BA600: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800BA610: 800C5C28 (procSlipInit__9daAlink_cFv)
//	800BA624: 800C3C3C (procMoveTurnInit__9daAlink_cFi)
//	800BA634: 80452CA4 (lit_6021)
//	800BA650: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800BA664: 800C3C3C (procMoveTurnInit__9daAlink_cFi)
//	800BA674: 800C36CC (procMoveInit__9daAlink_cFv)
//	800BA68C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextAction__9daAlink_cFi.s"
}
#pragma pop

/* 800BA6A0-800BA914 0274+00 s=3 e=0 z=0  None .text      commonChangeItem__9daAlink_cFv */
//	800BA6B0: 803621D8 (_savegpr_28)
//	800BA6EC: 80110840 (offKandelaarModel__9daAlink_cFv)
//	800BA744: 804061C0 (g_dComIfG_gameInfo)
//	800BA748: 804061C0 (g_dComIfG_gameInfo)
//	800BA764: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800BA778: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800BA780: 800D0E98 (checkSwordEquipAnime__9daAlink_cCFv)
//	800BA7B4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800BA7F8: 80452CC4 (lit_6109)
//	800BA804: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800BA818: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800BA84C: 800F3D58 (checkFishingRodAndLureItem__9daAlink_cCFv)
//	800BA864: 800737E4 (LockonTruth__12dAttention_cFv)
//	800BA8B4: 804061C0 (g_dComIfG_gameInfo)
//	800BA8B8: 804061C0 (g_dComIfG_gameInfo)
//	800BA8D4: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800BA8E4: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800BA8EC: 800D1268 (setSwordModel__9daAlink_cFv)
//	800BA8F8: 800BFD74 (makeItemType__9daAlink_cFv)
//	800BA900: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonChangeItem() {
    nofralloc
#include "asm/d/a/d_a_alink/commonChangeItem__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532BC-804532C0 0004+00 s=1 e=0 z=0  None .sdata2    @68956 */
SECTION_SDATA2 static f32 lit_68956 = 9.5f;

/* 800BA914-800BAF08 05F4+00 s=1 e=0 z=0  None .text      setItemAction__9daAlink_cFv */
//	800BA92C: 803621DC (_savegpr_29)
//	800BA934: 8038D658 (lit_3757)
//	800BA938: 8038D658 (lit_3757)
//	800BA948: 80112628 (checkIronBallDelete__9daAlink_cFv)
//	800BA984: 804061C0 (g_dComIfG_gameInfo)
//	800BA988: 804061C0 (g_dComIfG_gameInfo)
//	800BA994: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800BA9A4: 80031B50 (checkMagnetCode__12daTagMagne_cFR13cBgS_PolyInfo)
//	800BA9C8: 800E2808 (setMagneBootsMtx__9daAlink_cFP13cBgS_PolyInfoi)
//	800BA9D4: 802C3AEC (setMagnetized__14Z2CreatureLinkFb)
//	800BA9DC: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800BA9EC: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800BAA00: 80452CC4 (lit_6109)
//	800BAA04: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800BAA14: 8015EB90 (checkBowItem__9daPy_py_cFi)
//	800BAA2C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800BAA34: 80110840 (offKandelaarModel__9daAlink_cFv)
//	800BAA3C: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	800BAA44: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800BAA54: 800E4DEC (setGrabUpperSpeedRate__9daAlink_cFv)
//	800BAA6C: 800E1374 (getCopyRodControllActor__9daAlink_cFv)
//	800BAA80: 80452CC4 (lit_6109)
//	800BAA84: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800BAA90: 800E15FC (setCopyRodControllUpperSpeedRate__9daAlink_cFv)
//	800BAAA8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800BAAB8: 80452CA4 (lit_6021)
//	800BAAE0: 80452CC4 (lit_6109)
//	800BAAE4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800BAAF0: 80452D78 (lit_8676)
//	800BAB10: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800BAB20: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800BAB30: 80452CA4 (lit_6021)
//	800BAB58: 80452CC4 (lit_6109)
//	800BAB5C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800BAB68: 80452F88 (lit_24680)
//	800BAB6C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800BAB7C: 800E06B8 (throwBoomerang__9daAlink_cFv)
//	800BABB0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800BABC0: 80452CA4 (lit_6021)
//	800BABE8: 80452CC4 (lit_6109)
//	800BABEC: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800BABF8: 80453000 (lit_30895)
//	800BABFC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800BAC0C: 800E191C (throwCopyRod__9daAlink_cFv)
//	800BAC18: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800BAC28: 800D0E98 (checkSwordEquipAnime__9daAlink_cCFv)
//	800BAC34: 804532BC (lit_68956)
//	800BAC50: 80452D74 (lit_8502)
//	800BAC58: 80452D44 (lit_7977)
//	800BAC6C: 800D0E98 (checkSwordEquipAnime__9daAlink_cCFv)
//	800BAC78: 804532BC (lit_68956)
//	800BAC8C: 80452D74 (lit_8502)
//	800BAC94: 80452D44 (lit_7977)
//	800BACB4: 80452CC0 (lit_6108)
//	800BACB8: 80452CB0 (lit_6025)
//	800BACDC: 80270740 (cLib_chaseF__FPfff)
//	800BACEC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800BAD00: 80452CC4 (lit_6109)
//	800BAD04: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800BAD10: 800EEE5C (setHorseSwordUp__9daAlink_cFi)
//	800BAD20: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800BAD30: 800BA6A0 (commonChangeItem__9daAlink_cFv)
//	800BAD3C: 800D0ECC (checkCutDashAnime__9daAlink_cCFv)
//	800BAD58: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800BAD6C: 80452CC4 (lit_6109)
//	800BAD70: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800BADE8: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800BADFC: 800A7A5C (checkDashAnime__9daAlink_cCFv)
//	800BAE34: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
//	800BAE60: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
//	800BAEC0: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
//	800BAED0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800BAEE4: 800D1E1C (setCutDash__9daAlink_cFii)
//	800BAEF4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setItemAction() {
    nofralloc
#include "asm/d/a/d_a_alink/setItemAction__9daAlink_cFv.s"
}
#pragma pop

/* 800BAF08-800BAF80 0078+00 s=2 e=0 z=0  None .text      checkNextActionFromCrouch__9daAlink_cFi */
//	800BAF1C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800BAF48: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800BAF4C: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800BAF5C: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionFromCrouch(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionFromCrouch__9daAlink_cFi.s"
}
#pragma pop

/* 800BAF80-800BB020 00A0+00 s=18 e=0 z=0  None .text      checkUpperReadyThrowAnime__9daAlink_cCFv
 */
//	800BAF9C: 800E0440 (checkBoomerangAnime__9daAlink_cCFv)
//	800BAFAC: 800E1530 (checkCopyRodAnime__9daAlink_cCFv)
//	800BAFE4: 801150E4 (checkIronBallAnime__9daAlink_cCFv)
//	800BAFF4: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperReadyThrowAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperReadyThrowAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800BB020-800BB084 0064+00 s=2 e=0 z=0  None .text      getBodyAngleXBasePos__9daAlink_cFP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBodyAngleXBasePos(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getBodyAngleXBasePos__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 800BB084-800BB2B0 022C+00 s=3 e=0 z=0  None .text      getBodyAngleXAtnActor__9daAlink_cFi */
//	800BB0B0: 800BB020 (getBodyAngleXBasePos__9daAlink_cFP4cXyz)
//	800BB0C4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800BB0E8: 800E247C (multVecMagneBootInvMtx__9daAlink_cFP4cXyz)
//	800BB0F0: 80452DD4 (lit_11442)
//	800BB100: 80347138 (PSVECSquareMag)
//	800BB104: 80452CC0 (lit_6108)
//	800BB114: 80452CE8 (lit_6846)
//	800BB11C: 80452CF0 (lit_6847)
//	800BB164: 80452CF8 (lit_6848)
//	800BB170: 80450AE0 (__float_nan)
//	800BB174: 80450AE0 (__float_nan)
//	800BB1E0: 80450AE0 (__float_nan)
//	800BB1E4: 80450AE0 (__float_nan)
//	800BB1E8: 80452CB8 (lit_6040)
//	800BB200: 80267150 (atan2sY_XZ__4cXyzCFv)
//	800BB20C: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800BB210: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800BB27C: 800B1B68 (checkNotItemSinkLimit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBodyAngleXAtnActor(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getBodyAngleXAtnActor__9daAlink_cFi.s"
}
#pragma pop

/* 800BB2B0-800BB324 0074+00 s=13 e=0 z=0  None .text      setBodyAngleXReadyAnime__9daAlink_cFi */
//	800BB2C8: 800BB084 (getBodyAngleXAtnActor__9daAlink_cFi)
//	800BB2D4: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800BB300: 80270540 (cLib_addCalcAngleS__FPsssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBodyAngleXReadyAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBodyAngleXReadyAnime__9daAlink_cFi.s"
}
#pragma pop

/* 800BB324-800BB408 00E4+00 s=2 e=0 z=0  None .text      setMagicArmorBrk__9daAlink_cFi */
//	800BB334: 803621D4 (_savegpr_27)
//	800BB348: 80452C70 (l_mArcName)
//	800BB350: 803B2D94 (bodyBrkName)
//	800BB354: 803B2D94 (bodyBrkName)
//	800BB35C: 804061C0 (g_dComIfG_gameInfo)
//	800BB360: 804061C0 (g_dComIfG_gameInfo)
//	800BB374: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	800BB384: 8032B87C (searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData)
//	800BB390: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800BB394: 80452CC0 (lit_6108)
//	800BB3A8: 80452C70 (l_mArcName)
//	800BB3AC: 803B2DA0 (headBrkName)
//	800BB3B0: 803B2DA0 (headBrkName)
//	800BB3C0: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	800BB3D0: 8032B87C (searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData)
//	800BB3DC: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800BB3E0: 80452CC0 (lit_6108)
//	800BB3F4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMagicArmorBrk(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setMagicArmorBrk__9daAlink_cFi.s"
}
#pragma pop

/* 800BB408-800BB458 0050+00 s=6 e=0 z=0  None .text      checkMagicArmorHeavy__9daAlink_cCFv */
//	800BB41C: 800BFDFC (checkMagicArmorWearAbility__9daAlink_cCFv)
//	800BB428: 804061C0 (g_dComIfG_gameInfo)
//	800BB42C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMagicArmorHeavy() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkMagicArmorHeavy__9daAlink_cCFv.s"
}
#pragma pop

/* 800BB458-800BB4B8 0060+00 s=1 e=0 z=0  None .text      checkBootsOrArmorHeavy__9daAlink_cCFv */
//	800BB480: 800BB408 (checkMagicArmorHeavy__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBootsOrArmorHeavy() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBootsOrArmorHeavy__9daAlink_cCFv.s"
}
#pragma pop

/* 800BB4B8-800BB560 00A8+00 s=29 e=0 z=0  None .text      checkHeavyStateOn__9daAlink_cFii */
//	800BB4C8: 803621DC (_savegpr_29)
//	800BB4D8: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800BB4F0: 80452E0C (lit_14614)
//	800BB514: 801150E4 (checkIronBallAnime__9daAlink_cCFv)
//	800BB524: 800BB408 (checkMagicArmorHeavy__9daAlink_cCFv)
//	800BB54C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHeavyStateOn(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkHeavyStateOn__9daAlink_cFii.s"
}
#pragma pop

/* 800BB560-800BB644 00E4+00 s=1 e=0 z=0  None .text      setOutPower__9daAlink_cFfsi */
//	800BB578: 803621DC (_savegpr_29)
//	800BB5B4: 800C02C8 (checkBossRoom__9daAlink_cFv)
//	800BB5E0: 80439A20 (sincosTable___5JMath)
//	800BB5E4: 80439A20 (sincosTable___5JMath)
//	800BB630: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setOutPower(f32 param_0, s16 param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setOutPower__9daAlink_cFfsi.s"
}
#pragma pop

/* 800BB644-800BB770 012C+00 s=3 e=0 z=0  None .text      initGravity__9daAlink_cFv */
//	800BB664: 8038D658 (lit_3757)
//	800BB668: 8038D658 (lit_3757)
//	800BB68C: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800BB6EC: 80101AA8 (getSwimMaxFallSpeed__9daAlink_cCFv)
//	800BB700: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800BB74C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initGravity() {
    nofralloc
#include "asm/d/a/d_a_alink/initGravity__9daAlink_cFv.s"
}
#pragma pop

/* 800BB770-800BB7A0 0030+00 s=64 e=0 z=0  None .text      setSpecialGravity__9daAlink_cFffi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpecialGravity(f32 param_0, f32 param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setSpecialGravity__9daAlink_cFffi.s"
}
#pragma pop

/* 800BB7A0-800BBD40 05A0+00 s=1 e=0 z=0  None .text      transAnimeProc__9daAlink_cFP4cXyzff */
//	800BB7C0: 803621D4 (_savegpr_27)
//	800BB84C: 80452CB8 (lit_6040)
//	800BB8CC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800BB918: 80452CC0 (lit_6108)
//	800BB9E4: 80452CC0 (lit_6108)
//	800BBA74: 80452CC0 (lit_6108)
//	800BBAF4: 803DD470 (now__14mDoMtx_stack_c)
//	800BBAF8: 803DD470 (now__14mDoMtx_stack_c)
//	800BBAFC: 803464B0 (PSMTXCopy)
//	800BBB00: 803DD470 (now__14mDoMtx_stack_c)
//	800BBB04: 803DD470 (now__14mDoMtx_stack_c)
//	800BBB0C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800BBB10: 803DD470 (now__14mDoMtx_stack_c)
//	800BBB14: 803DD470 (now__14mDoMtx_stack_c)
//	800BBB20: 80346D6C (PSMTXMultVec)
//	800BBB30: 803470B4 (PSVECSubtract)
//	800BBB40: 803470B4 (PSVECSubtract)
//	800BBB68: 803470B4 (PSVECSubtract)
//	800BBBA0: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800BBBA4: 804061C0 (g_dComIfG_gameInfo)
//	800BBBA8: 804061C0 (g_dComIfG_gameInfo)
//	800BBBB4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800BBC44: 80452CC0 (lit_6108)
//	800BBCAC: 80452CC0 (lit_6108)
//	800BBCC4: 80452FE0 (lit_28016)
//	800BBD2C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::transAnimeProc(cXyz* param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/transAnimeProc__9daAlink_cFP4cXyzff.s"
}
#pragma pop

/* 800BBD40-800BBF68 0228+00 s=1 e=0 z=0  None .text      setFootSpeed__9daAlink_cFv */
//	800BBD84: 803DD470 (now__14mDoMtx_stack_c)
//	800BBD88: 803DD470 (now__14mDoMtx_stack_c)
//	800BBD8C: 803464E4 (PSMTXConcat)
//	800BBD90: 803DD470 (now__14mDoMtx_stack_c)
//	800BBD94: 803DD470 (now__14mDoMtx_stack_c)
//	800BBDD0: 803464E4 (PSMTXConcat)
//	800BBE1C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800BBE48: 80439A20 (sincosTable___5JMath)
//	800BBE4C: 80439A20 (sincosTable___5JMath)
//	800BBE84: 80452CB8 (lit_6040)
//	800BBE94: 80452CA4 (lit_6021)
//	800BBEB4: 80452DF8 (lit_13700)
//	800BBEC0: 80452EA8 (lit_16570)
//	800BBEC8: 80452DA8 (lit_9652)
//	800BBEDC: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFootSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/setFootSpeed__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532C0-804532C4 0004+00 s=2 e=0 z=0  None .sdata2    @70084 */
SECTION_SDATA2 static f32 lit_70084 = 2.25f;

/* 800BBF68-800BD6FC 1794+00 s=1 e=0 z=0  None .text      posMove__9daAlink_cFv */
//	800BBF98: 803621D0 (_savegpr_26)
//	800BBFA0: 8038D658 (lit_3757)
//	800BBFA4: 8038D658 (lit_3757)
//	800BBFB0: 80439A20 (sincosTable___5JMath)
//	800BBFB4: 80439A20 (sincosTable___5JMath)
//	800BBFD0: 800BB644 (initGravity__9daAlink_cFv)
//	800BBFE4: 800BB7A0 (transAnimeProc__9daAlink_cFP4cXyzff)
//	800BC060: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800BC06C: 800BBD40 (setFootSpeed__9daAlink_cFv)
//	800BC07C: 80452CC0 (lit_6108)
//	800BC098: 80452CB8 (lit_6040)
//	800BC0C8: 80452CC0 (lit_6108)
//	800BC0EC: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	800BC0FC: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800BC164: 80452FDC (lit_27477)
//	800BC180: 800E3F20 (checkGrabRooster__9daAlink_cFv)
//	800BC190: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	800BC1A0: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	800BC1B0: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	800BC1C0: 80452C98 (lit_5943)
//	800BC1D4: 80439A20 (sincosTable___5JMath)
//	800BC1D8: 80439A20 (sincosTable___5JMath)
//	800BC208: 800AA5E8 (checkNoCollisionCorret__9daAlink_cFv)
//	800BC228: 80452CC0 (lit_6108)
//	800BC238: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800BC274: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800BC280: 800B1FB8 (checkLv2MiddleBossBgRide__9daAlink_cFs)
//	800BC28C: 803A37C0 (__vt__8cM3dGPla)
//	800BC290: 803A37C0 (__vt__8cM3dGPla)
//	800BC298: 804061C0 (g_dComIfG_gameInfo)
//	800BC29C: 804061C0 (g_dComIfG_gameInfo)
//	800BC2AC: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800BC2B8: 80452CC0 (lit_6108)
//	800BC2CC: 80347138 (PSVECSquareMag)
//	800BC2D0: 80452CC0 (lit_6108)
//	800BC2E0: 80452CE8 (lit_6846)
//	800BC2E8: 80452CF0 (lit_6847)
//	800BC330: 80452CF8 (lit_6848)
//	800BC33C: 80450AE0 (__float_nan)
//	800BC340: 80450AE0 (__float_nan)
//	800BC3AC: 80450AE0 (__float_nan)
//	800BC3B0: 80450AE0 (__float_nan)
//	800BC3B8: 80267674 (cM_atan2s__Fff)
//	800BC3C0: 80452CB0 (lit_6025)
//	800BC3DC: 80453238 (lit_59593)
//	800BC41C: 80452CC0 (lit_6108)
//	800BC42C: 80266F48 (normalizeZP__4cXyzFv)
//	800BC458: 803A37C0 (__vt__8cM3dGPla)
//	800BC45C: 803A37C0 (__vt__8cM3dGPla)
//	800BC474: 80430CF4 (Zero__4cXyz)
//	800BC478: 80430CF4 (Zero__4cXyz)
//	800BC484: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	800BC494: 80347090 (PSVECAdd)
//	800BC4D4: 804061C0 (g_dComIfG_gameInfo)
//	800BC4D8: 804061C0 (g_dComIfG_gameInfo)
//	800BC4E8: 80452CC0 (lit_6108)
//	800BC50C: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800BC57C: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	800BC58C: 80439A20 (sincosTable___5JMath)
//	800BC590: 80439A20 (sincosTable___5JMath)
//	800BC630: 80452CB8 (lit_6040)
//	800BC644: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800BC680: 80452CC0 (lit_6108)
//	800BC6D4: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800BC6FC: 804532C0 (lit_70084)
//	800BC714: 80452D2C (lit_7624)
//	800BC7A8: 800A7050 (setIceSlipSpeed__9daAlink_cFv)
//	800BC7E8: 803DD470 (now__14mDoMtx_stack_c)
//	800BC7EC: 803DD470 (now__14mDoMtx_stack_c)
//	800BC7F0: 803464B0 (PSMTXCopy)
//	800BC7F4: 803DD470 (now__14mDoMtx_stack_c)
//	800BC7F8: 803DD470 (now__14mDoMtx_stack_c)
//	800BC800: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800BC824: 803DD470 (now__14mDoMtx_stack_c)
//	800BC828: 803DD470 (now__14mDoMtx_stack_c)
//	800BC834: 80346E4C (PSMTXMultVecSR)
//	800BC844: 80347090 (PSVECAdd)
//	800BC878: 80347090 (PSVECAdd)
//	800BC8A8: 80392094 (d_a_d_a_alink__stringBase0)
//	800BC8AC: 80392094 (d_a_d_a_alink__stringBase0)
//	800BC8B4: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800BC8C4: 80452D00 (lit_6895)
//	800BC900: 80439A20 (sincosTable___5JMath)
//	800BC904: 80439A20 (sincosTable___5JMath)
//	800BC948: 80452CB8 (lit_6040)
//	800BC95C: 80452CC0 (lit_6108)
//	800BC96C: 800A7358 (setPolygonSpeed__9daAlink_cFv)
//	800BC974: 800A7CB0 (setWindSpeed__9daAlink_cFv)
//	800BC980: 800AA5E8 (checkNoCollisionCorret__9daAlink_cFv)
//	800BC9B0: 80347090 (PSVECAdd)
//	800BC9D4: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800BCA0C: 804061C0 (g_dComIfG_gameInfo)
//	800BCA10: 804061C0 (g_dComIfG_gameInfo)
//	800BCA1C: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800BCA34: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800BCA60: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800BCA84: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800BCA94: 80347138 (PSVECSquareMag)
//	800BCA98: 80452D34 (lit_7710)
//	800BCACC: 80347090 (PSVECAdd)
//	800BCAE8: 80347090 (PSVECAdd)
//	800BCB34: 80347090 (PSVECAdd)
//	800BCB40: 80108980 (checkOctaIealSpecialCollect__9daAlink_cFv)
//	800BCB64: 8034739C (PSVECSquareDistance)
//	800BCB68: 80452CC0 (lit_6108)
//	800BCB78: 80452CE8 (lit_6846)
//	800BCB80: 80452CF0 (lit_6847)
//	800BCBC8: 80452CF8 (lit_6848)
//	800BCBD4: 80450AE0 (__float_nan)
//	800BCBD8: 80450AE0 (__float_nan)
//	800BCC44: 80450AE0 (__float_nan)
//	800BCC48: 80450AE0 (__float_nan)
//	800BCC60: 80347090 (PSVECAdd)
//	800BCC7C: 8034739C (PSVECSquareDistance)
//	800BCC80: 80452CC0 (lit_6108)
//	800BCC90: 80452CE8 (lit_6846)
//	800BCC98: 80452CF0 (lit_6847)
//	800BCCE0: 80452CF8 (lit_6848)
//	800BCCEC: 80450AE0 (__float_nan)
//	800BCCF0: 80450AE0 (__float_nan)
//	800BCD5C: 80450AE0 (__float_nan)
//	800BCD60: 80450AE0 (__float_nan)
//	800BCDC0: 80452CC0 (lit_6108)
//	800BCDD0: 80347138 (PSVECSquareMag)
//	800BCDD4: 80452CC0 (lit_6108)
//	800BCDE4: 80452CE8 (lit_6846)
//	800BCDEC: 80452CF0 (lit_6847)
//	800BCE34: 80452CF8 (lit_6848)
//	800BCE40: 80450AE0 (__float_nan)
//	800BCE44: 80450AE0 (__float_nan)
//	800BCEB0: 80450AE0 (__float_nan)
//	800BCEB4: 80450AE0 (__float_nan)
//	800BCEC4: 80452CB8 (lit_6040)
//	800BCED4: 80267128 (atan2sX_Z__4cXyzCFv)
//	800BCF50: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800BCF70: 80452CC0 (lit_6108)
//	800BCF80: 80347138 (PSVECSquareMag)
//	800BCF84: 80452CC0 (lit_6108)
//	800BCF94: 80452CE8 (lit_6846)
//	800BCF9C: 80452CF0 (lit_6847)
//	800BCFE4: 80452CF8 (lit_6848)
//	800BCFF0: 80450AE0 (__float_nan)
//	800BCFF4: 80450AE0 (__float_nan)
//	800BD060: 80450AE0 (__float_nan)
//	800BD064: 80450AE0 (__float_nan)
//	800BD074: 80267128 (atan2sX_Z__4cXyzCFv)
//	800BD084: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800BD08C: 80439A20 (sincosTable___5JMath)
//	800BD090: 80439A20 (sincosTable___5JMath)
//	800BD09C: 80452CC0 (lit_6108)
//	800BD0B4: 80450690 (l_autoUpHeight)
//	800BD0D8: 80452CC0 (lit_6108)
//	800BD0E8: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	800BD0F8: 80452CC0 (lit_6108)
//	800BD11C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800BD150: 80430CF4 (Zero__4cXyz)
//	800BD154: 80430CF4 (Zero__4cXyz)
//	800BD180: 80452CB8 (lit_6040)
//	800BD1A0: 80452CC0 (lit_6108)
//	800BD1B4: 80452CC0 (lit_6108)
//	800BD204: 803DD470 (now__14mDoMtx_stack_c)
//	800BD208: 803DD470 (now__14mDoMtx_stack_c)
//	800BD20C: 803464B0 (PSMTXCopy)
//	800BD210: 803DD470 (now__14mDoMtx_stack_c)
//	800BD214: 803DD470 (now__14mDoMtx_stack_c)
//	800BD21C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800BD220: 803DD470 (now__14mDoMtx_stack_c)
//	800BD224: 803DD470 (now__14mDoMtx_stack_c)
//	800BD230: 80346D6C (PSMTXMultVec)
//	800BD240: 80347090 (PSVECAdd)
//	800BD2B8: 80450690 (l_autoUpHeight)
//	800BD2BC: 80266B84 (__ml__4cXyzCFf)
//	800BD2CC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800BD304: 803A37C0 (__vt__8cM3dGPla)
//	800BD308: 803A37C0 (__vt__8cM3dGPla)
//	800BD314: 804061C0 (g_dComIfG_gameInfo)
//	800BD318: 804061C0 (g_dComIfG_gameInfo)
//	800BD324: 80439A20 (sincosTable___5JMath)
//	800BD328: 80439A20 (sincosTable___5JMath)
//	800BD35C: 80346D6C (PSMTXMultVec)
//	800BD36C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800BD394: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800BD3AC: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800BD3B8: 8034739C (PSVECSquareDistance)
//	800BD3BC: 80452CC0 (lit_6108)
//	800BD3CC: 80452CE8 (lit_6846)
//	800BD3D4: 80452CF0 (lit_6847)
//	800BD41C: 80452CF8 (lit_6848)
//	800BD428: 80450AE0 (__float_nan)
//	800BD42C: 80450AE0 (__float_nan)
//	800BD498: 80450AE0 (__float_nan)
//	800BD49C: 80450AE0 (__float_nan)
//	800BD4B4: 80346E4C (PSMTXMultVecSR)
//	800BD4BC: 80268210 (cBgW_CheckBWall__Ff)
//	800BD4D0: 80452CC0 (lit_6108)
//	800BD4E4: 80347138 (PSVECSquareMag)
//	800BD4E8: 80452CC0 (lit_6108)
//	800BD4F8: 80452CE8 (lit_6846)
//	800BD500: 80452CF0 (lit_6847)
//	800BD548: 80452CF8 (lit_6848)
//	800BD554: 80450AE0 (__float_nan)
//	800BD558: 80450AE0 (__float_nan)
//	800BD5C4: 80450AE0 (__float_nan)
//	800BD5C8: 80450AE0 (__float_nan)
//	800BD5DC: 80452CC0 (lit_6108)
//	800BD5FC: 80346E4C (PSMTXMultVecSR)
//	800BD60C: 80347090 (PSVECAdd)
//	800BD61C: 80347090 (PSVECAdd)
//	800BD630: 803A37C0 (__vt__8cM3dGPla)
//	800BD634: 803A37C0 (__vt__8cM3dGPla)
//	800BD648: 80430CF4 (Zero__4cXyz)
//	800BD64C: 80430CF4 (Zero__4cXyz)
//	800BD678: 800FA070 (hangMoveBgCheck__9daAlink_cFsP4cXyz)
//	800BD698: 800FA070 (hangMoveBgCheck__9daAlink_cFsP4cXyz)
//	800BD6E8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::posMove() {
    nofralloc
#include "asm/d/a/d_a_alink/posMove__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532C4-804532C8 0004+00 s=1 e=0 z=0  None .sdata2    @70267 */
SECTION_SDATA2 static f32 lit_70267 = 9.999999974752427e-07f;

/* 800BD6FC-800BDD70 0674+00 s=1 e=0 z=0  None .text      autoGroundHit__9daAlink_cFv */
//	800BD73C: 803DD470 (now__14mDoMtx_stack_c)
//	800BD740: 803DD470 (now__14mDoMtx_stack_c)
//	800BD744: 803464B0 (PSMTXCopy)
//	800BD748: 803DD470 (now__14mDoMtx_stack_c)
//	800BD74C: 803DD470 (now__14mDoMtx_stack_c)
//	800BD750: 80430D24 (BaseY__4cXyz)
//	800BD754: 80430D24 (BaseY__4cXyz)
//	800BD75C: 80346E4C (PSMTXMultVecSR)
//	800BD768: 80452CE0 (lit_6845)
//	800BD76C: 80266B84 (__ml__4cXyzCFf)
//	800BD77C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800BD7A0: 80452D50 (lit_8247)
//	800BD7A4: 80266B84 (__ml__4cXyzCFf)
//	800BD7B4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800BD7DC: 800E24B0 (commonMagneLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800BD818: 803DD470 (now__14mDoMtx_stack_c)
//	800BD81C: 803DD470 (now__14mDoMtx_stack_c)
//	800BD824: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800BD828: 803DD470 (now__14mDoMtx_stack_c)
//	800BD82C: 803DD470 (now__14mDoMtx_stack_c)
//	800BD830: 80430D3C (BaseZ__4cXyz)
//	800BD834: 80430D3C (BaseZ__4cXyz)
//	800BD83C: 80346E4C (PSMTXMultVecSR)
//	800BD848: 80452D30 (lit_7625)
//	800BD84C: 803470D8 (PSVECScale)
//	800BD85C: 80347090 (PSVECAdd)
//	800BD86C: 80347090 (PSVECAdd)
//	800BD87C: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800BD88C: 80031B50 (checkMagnetCode__12daTagMagne_cFR13cBgS_PolyInfo)
//	800BD8A8: 80452CC0 (lit_6108)
//	800BD8BC: 802681E4 (cBgW_CheckBGround__Ff)
//	800BD8D4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800BD8FC: 803470B4 (PSVECSubtract)
//	800BD90C: 803470B4 (PSVECSubtract)
//	800BD91C: 800E24B0 (commonMagneLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800BD934: 80452CC0 (lit_6108)
//	800BD9BC: 803A37C0 (__vt__8cM3dGPla)
//	800BD9C0: 803A37C0 (__vt__8cM3dGPla)
//	800BDA08: 803A37C0 (__vt__8cM3dGPla)
//	800BDA0C: 803A37C0 (__vt__8cM3dGPla)
//	800BDA24: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800BDA44: 80452CC0 (lit_6108)
//	800BDA54: 80347138 (PSVECSquareMag)
//	800BDA58: 80452CC0 (lit_6108)
//	800BDA68: 80452CE8 (lit_6846)
//	800BDA70: 80452CF0 (lit_6847)
//	800BDAB8: 80452CF8 (lit_6848)
//	800BDAC4: 80450AE0 (__float_nan)
//	800BDAC8: 80450AE0 (__float_nan)
//	800BDB34: 80450AE0 (__float_nan)
//	800BDB38: 80450AE0 (__float_nan)
//	800BDB44: 80452CB8 (lit_6040)
//	800BDB54: 80267128 (atan2sX_Z__4cXyzCFv)
//	800BDB64: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800BDB74: 80439A20 (sincosTable___5JMath)
//	800BDB78: 80439A20 (sincosTable___5JMath)
//	800BDB84: 80452CC0 (lit_6108)
//	800BDB94: 80452DA4 (lit_9138)
//	800BDBA4: 804061C0 (g_dComIfG_gameInfo)
//	800BDBA8: 804061C0 (g_dComIfG_gameInfo)
//	800BDBB8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800BDBC0: 802681E4 (cBgW_CheckBGround__Ff)
//	800BDBD8: 804532C4 (lit_70267)
//	800BDBE8: 80450694 (l_autoDownHeight)
//	800BDC10: 80452CC0 (lit_6108)
//	800BDC18: 803A37C0 (__vt__8cM3dGPla)
//	800BDC1C: 803A37C0 (__vt__8cM3dGPla)
//	800BDC50: 80452DB8 (lit_10041)
//	800BDCAC: 80452F0C (lit_20496)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::autoGroundHit() {
    nofralloc
#include "asm/d/a/d_a_alink/autoGroundHit__9daAlink_cFv.s"
}
#pragma pop

/* 800BDD70-800BDE20 00B0+00 s=2 e=0 z=0  None .text      startPeepChange__9daAlink_cFv */
//	800BDDC4: 804061C0 (g_dComIfG_gameInfo)
//	800BDDC8: 804061C0 (g_dComIfG_gameInfo)
//	800BDDD8: 80034FA4 (set__17dSv_turnRestart_cFRC4cXyzsScUl)
//	800BDDE0: 80452CC0 (lit_6108)
//	800BDDF8: 80027170 (dStage_changeScene__FifUlScsi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::startPeepChange() {
    nofralloc
#include "asm/d/a/d_a_alink/startPeepChange__9daAlink_cFv.s"
}
#pragma pop

/* 800BDE20-800BDE48 0028+00 s=3 e=0 z=0  None .text      setLastSceneDamage__9daAlink_cFiPUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLastSceneDamage(int param_0, u32* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setLastSceneDamage__9daAlink_cFiPUl.s"
}
#pragma pop

/* 800BDE48-800BDF60 0118+00 s=0 e=1 z=0  None .text      setLastSceneMode__9daAlink_cFPUl */
//	800BDEF8: 800E3830 (daAlink_checkLightBallA__FP10fopAc_ac_c)
//	800BDF14: 800E3858 (daAlink_checkLightBallB__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLastSceneMode(u32* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setLastSceneMode__9daAlink_cFPUl.s"
}
#pragma pop

/* 800BDF60-800BE26C 030C+00 s=4 e=1 z=0  None .text      startRestartRoom__9daAlink_cFUliii */
//	800BDF70: 803621D8 (_savegpr_28)
//	800BDF9C: 804061C0 (g_dComIfG_gameInfo)
//	800BDFA0: 804061C0 (g_dComIfG_gameInfo)
//	800BDFB8: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800BDFDC: 80118B34 (checkRestartDead__9daAlink_cFii)
//	800BE030: 80118AD0 (checkFinalBattle__9daAlink_cFv)
//	800BE03C: 804061C0 (g_dComIfG_gameInfo)
//	800BE040: 804061C0 (g_dComIfG_gameInfo)
//	800BE04C: 8034739C (PSVECSquareDistance)
//	800BE050: 80452CC0 (lit_6108)
//	800BE060: 80452CE8 (lit_6846)
//	800BE068: 80452CF0 (lit_6847)
//	800BE0B0: 80452CF8 (lit_6848)
//	800BE0BC: 80450AE0 (__float_nan)
//	800BE0C0: 80450AE0 (__float_nan)
//	800BE12C: 80450AE0 (__float_nan)
//	800BE130: 80450AE0 (__float_nan)
//	800BE134: 80452DA0 (lit_9054)
//	800BE144: 804061C0 (g_dComIfG_gameInfo)
//	800BE148: 804061C0 (g_dComIfG_gameInfo)
//	800BE154: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800BE180: 80105B10 (checkBoardRestart__9daAlink_cFv)
//	800BE1AC: 80118AD0 (checkFinalBattle__9daAlink_cFv)
//	800BE1D8: 800BDE20 (setLastSceneDamage__9daAlink_cFiPUl)
//	800BE1DC: 804061C0 (g_dComIfG_gameInfo)
//	800BE1E0: 804061C0 (g_dComIfG_gameInfo)
//	800BE1F8: 8015EA0C (setParamData__9daPy_py_cFiiii)
//	800BE204: 800274B0 (dStage_restartRoom__FUlUli)
//	800BE21C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800BE230: 80452CB8 (lit_6040)
//	800BE238: 80452CBC (lit_6041)
//	800BE244: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800BE258: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::startRestartRoom(u32 param_0, int param_1, int param_2, int param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/startRestartRoom__9daAlink_cFUliii.s"
}
#pragma pop

/* 800BE26C-800BE2C0 0054+00 s=2 e=0 z=0  None .text      checkCoachGuardGame__9daAlink_cFv */
//	800BE28C: 800EC758 (daAlink_searchCoach__FP10fopAc_ac_cPv)
//	800BE290: 800EC758 (daAlink_searchCoach__FP10fopAc_ac_cPv)
//	800BE298: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCoachGuardGame() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCoachGuardGame__9daAlink_cFv.s"
}
#pragma pop

/* 800BE2C0-800BE3E4 0124+00 s=1 e=0 z=0  None .text      checkRoofRestart__9daAlink_cFv */
//	800BE350: 800BE26C (checkCoachGuardGame__9daAlink_cFv)
//	800BE364: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800BE394: 80452D30 (lit_7625)
//	800BE3CC: 800BDF60 (startRestartRoom__9daAlink_cFUliii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRoofRestart() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRoofRestart__9daAlink_cFv.s"
}
#pragma pop

/* 800BE3E4-800BE9D4 05F0+00 s=1 e=0 z=0  None .text      checkRestartRoom__9daAlink_cFv */
//	800BE3FC: 803621DC (_savegpr_29)
//	800BE41C: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
//	800BE43C: 800BDF60 (startRestartRoom__9daAlink_cFUliii)
//	800BE464: 800DBED8 (procCoLavaReturnInit__9daAlink_cFi)
//	800BE48C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	800BE490: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	800BE4AC: 80392094 (d_a_d_a_alink__stringBase0)
//	800BE4B0: 80392094 (d_a_d_a_alink__stringBase0)
//	800BE4B8: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800BE4C8: 800DC278 (procCoSwimFreezeReturnInit__9daAlink_cFv)
//	800BE4F0: 80452DA4 (lit_9138)
//	800BE540: 80392094 (d_a_d_a_alink__stringBase0)
//	800BE544: 80392094 (d_a_d_a_alink__stringBase0)
//	800BE54C: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800BE558: 80452F08 (lit_20495)
//	800BE56C: 80452DB8 (lit_10041)
//	800BE574: 80452E4C (lit_14782)
//	800BE5DC: 80452F08 (lit_20495)
//	800BE650: 800BE26C (checkCoachGuardGame__9daAlink_cFv)
//	800BE668: 804061C0 (g_dComIfG_gameInfo)
//	800BE66C: 804061C0 (g_dComIfG_gameInfo)
//	800BE678: 80074B98 (GetExitId__4dBgSFRC13cBgS_PolyInfo)
//	800BE6FC: 804061C0 (g_dComIfG_gameInfo)
//	800BE700: 804061C0 (g_dComIfG_gameInfo)
//	800BE718: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800BE730: 80118B34 (checkRestartDead__9daAlink_cFii)
//	800BE79C: 800BDE20 (setLastSceneDamage__9daAlink_cFiPUl)
//	800BE7A8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800BE7BC: 80452CB8 (lit_6040)
//	800BE7C4: 80452CBC (lit_6041)
//	800BE7D0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800BE7D8: 80452CC0 (lit_6108)
//	800BE7EC: 80027170 (dStage_changeScene__FifUlScsi)
//	800BE808: 800BDF60 (startRestartRoom__9daAlink_cFUliii)
//	800BE858: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
//	800BE868: 800B1488 (checkWaterPolygonUnder__9daAlink_cFv)
//	800BE884: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
//	800BE8AC: 80452DA4 (lit_9138)
//	800BE8E0: 800B1488 (checkWaterPolygonUnder__9daAlink_cFv)
//	800BE8F0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800BE8F4: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800BE918: 80452DA4 (lit_9138)
//	800BE944: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800BE948: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800BE988: 800DBED8 (procCoLavaReturnInit__9daAlink_cFi)
//	800BE9A4: 800BDF60 (startRestartRoom__9daAlink_cFUliii)
//	800BE9C0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRestartRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRestartRoom__9daAlink_cFv.s"
}
#pragma pop

/* 800BE9D4-800BEAF8 0124+00 s=2 e=0 z=0  None .text      getSceneExitMoveAngle__9daAlink_cFv */
//	800BEA64: 80452D5C (lit_8322)
//	800BEA6C: 80452E54 (lit_14784)
//	800BEACC: 80267674 (cM_atan2s__Fff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSceneExitMoveAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/getSceneExitMoveAngle__9daAlink_cFv.s"
}
#pragma pop

/* 800BEAF8-800BF084 058C+00 s=1 e=0 z=0  None .text      checkSceneChange__9daAlink_cFi */
//	800BEB18: 803621D4 (_savegpr_27)
//	800BEBD0: 80452D18 (lit_7308)
//	800BEC50: 804061C0 (g_dComIfG_gameInfo)
//	800BEC54: 804061C0 (g_dComIfG_gameInfo)
//	800BEC60: 80074C6C (GetHorseNoEntry__4dBgSFRC13cBgS_PolyInfo)
//	800BEC74: 80450DF8 (m_top__12daTagHstop_c)
//	800BECA0: 8001D900 (fpoAcM_relativePos__FPC10fopAc_ac_cPC4cXyzP4cXyz)
//	800BECA8: 80453140 (lit_43531)
//	800BECB8: 80452E9C (lit_16567)
//	800BED58: 80452E64 (lit_14954)
//	800BED68: 80452CAC (lit_6023)
//	800BED70: 804061C0 (g_dComIfG_gameInfo)
//	800BED74: 804061C0 (g_dComIfG_gameInfo)
//	800BED80: 80452CB8 (lit_6040)
//	800BED98: 80452D30 (lit_7625)
//	800BEDAC: 80452D30 (lit_7625)
//	800BEDB0: 80452CAC (lit_6023)
//	800BEDB8: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	800BEDBC: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	800BEDC4: 80452CB8 (lit_6040)
//	800BEDD0: 80452D30 (lit_7625)
//	800BEDE4: 80452D30 (lit_7625)
//	800BEDE8: 80453100 (lit_41718)
//	800BEDF0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800BEDF4: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800BEDFC: 80452CB8 (lit_6040)
//	800BEE24: 80452CC0 (lit_6108)
//	800BEE90: 804061C0 (g_dComIfG_gameInfo)
//	800BEE94: 804061C0 (g_dComIfG_gameInfo)
//	800BEEAC: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800BEF00: 80027170 (dStage_changeScene__FifUlScsi)
//	800BEF4C: 800517EC (dPath_GetRoomPath__Fii)
//	800BEF70: 800270FC (dStage_changeSceneExitId__FR13cBgS_PolyInfofUlScs)
//	800BEF78: 804061C0 (g_dComIfG_gameInfo)
//	800BEF7C: 804061C0 (g_dComIfG_gameInfo)
//	800BEF88: 80074FE0 (GetRoomPathId__4dBgSFRC13cBgS_PolyInfo)
//	800BEF94: 800517EC (dPath_GetRoomPath__Fii)
//	800BEFC8: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800BEFDC: 80452CC4 (lit_6109)
//	800BEFE0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800BF00C: 800BE9D4 (getSceneExitMoveAngle__9daAlink_cFv)
//	800BF01C: 804061C0 (g_dComIfG_gameInfo)
//	800BF020: 804061C0 (g_dComIfG_gameInfo)
//	800BF070: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSceneChange(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSceneChange__9daAlink_cFi.s"
}
#pragma pop

/* 800BF084-800BF0B8 0034+00 s=1 e=0 z=0  None .text      voiceStart__9daAlink_cFUl */
//	800BF0A4: 802C4320 (startLinkVoice__14Z2CreatureLinkF10JAISoundIDSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::voiceStart(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/voiceStart__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF0B8-800BF0EC 0034+00 s=14 e=0 z=0  None .text      voiceStartLevel__9daAlink_cFUl */
//	800BF0D8: 802C45B0 (startLinkVoiceLevel__14Z2CreatureLinkF10JAISoundIDSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::voiceStartLevel(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/voiceStartLevel__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF0EC-800BF124 0038+00 s=21 e=0 z=0  None .text      seStartSwordCut__9daAlink_cFUl */
//	800BF110: 802C46F0 (startLinkSwordSound__14Z2CreatureLinkF10JAISoundIDUlSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::seStartSwordCut(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/seStartSwordCut__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF124-800BF15C 0038+00 s=1 e=0 z=0  None .text      seStartOnlyReverb__9daAlink_cFUl */
//	800BF148: 802C3BD4 (startLinkSound__14Z2CreatureLinkF10JAISoundIDUlSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::seStartOnlyReverb(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/seStartOnlyReverb__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF15C-800BF194 0038+00 s=1 e=0 z=0  None .text      seStartOnlyReverbLevel__9daAlink_cFUl */
//	800BF180: 802C3E68 (startLinkSoundLevel__14Z2CreatureLinkF10JAISoundIDUlSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::seStartOnlyReverbLevel(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/seStartOnlyReverbLevel__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF194-800BF1CC 0038+00 s=10 e=0 z=0  None .text      seStartMapInfo__9daAlink_cFUl */
//	800BF1B8: 802C3BD4 (startLinkSound__14Z2CreatureLinkF10JAISoundIDUlSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::seStartMapInfo(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/seStartMapInfo__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF1CC-800BF204 0038+00 s=9 e=0 z=0  None .text      seStartMapInfoLevel__9daAlink_cFUl */
//	800BF1F0: 802C3E68 (startLinkSoundLevel__14Z2CreatureLinkF10JAISoundIDUlSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::seStartMapInfoLevel(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/seStartMapInfoLevel__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF204-800BF37C 0178+00 s=3 e=0 z=0  None .text
 * setBasAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDER          */
//	800BF214: 803621DC (_savegpr_29)
//	800BF250: 800BF4E0 (resetBasAnime__9daAlink_cFv)
//	800BF280: 80452CC0 (lit_6108)
//	800BF2BC: 800BF37C (initBasAnime__9daAlink_cFv)
//	800BF2D8: 800BF4E0 (resetBasAnime__9daAlink_cFv)
//	800BF308: 80452CC0 (lit_6108)
//	800BF334: 8026F93C (cLib_memCpy__FPvPCvUl)
//	800BF360: 800BF37C (initBasAnime__9daAlink_cFv)
//	800BF368: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBasAnime(daAlink_c::daAlink_UNDER param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBasAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDER.s"
}
#pragma pop

/* 800BF37C-800BF4E0 0164+00 s=11 e=0 z=0  None .text      initBasAnime__9daAlink_cFv */
//	800BF3B4: 80452CB0 (lit_6025)
//	800BF438: 80452CC0 (lit_6108)
//	800BF454: 80452CC0 (lit_6108)
//	800BF468: 80452CB0 (lit_6025)
//	800BF484: 802C0628 (initAnime__10Z2CreatureFPvbff)
//	800BF49C: 80452CC0 (lit_6108)
//	800BF4B0: 80452CB0 (lit_6025)
//	800BF4CC: 802C0628 (initAnime__10Z2CreatureFPvbff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initBasAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/initBasAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800BF4E0-800BF500 0020+00 s=6 e=0 z=0  None .text      resetBasAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetBasAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/resetBasAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800BF500-800BF79C 029C+00 s=5 e=0 z=0  None .text      checkSightLine__9daAlink_cFfP4cXyz */
//	800BF518: 803621D8 (_savegpr_28)
//	800BF528: 804061C0 (g_dComIfG_gameInfo)
//	800BF52C: 804061C0 (g_dComIfG_gameInfo)
//	800BF560: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800BF580: 8015EB90 (checkBowItem__9daPy_py_cFi)
//	800BF5AC: 80439A20 (sincosTable___5JMath)
//	800BF5B0: 80439A20 (sincosTable___5JMath)
//	800BF604: 80346E4C (PSMTXMultVecSR)
//	800BF614: 80266B84 (__ml__4cXyzCFf)
//	800BF624: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800BF644: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800BF660: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800BF664: 804061C0 (g_dComIfG_gameInfo)
//	800BF668: 804061C0 (g_dComIfG_gameInfo)
//	800BF674: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	800BF6B4: 80452D50 (lit_8247)
//	800BF6B8: 80266B84 (__ml__4cXyzCFf)
//	800BF6C8: 803470B4 (PSVECSubtract)
//	800BF710: 800DE780 (checkBowAndSlingItem__9daAlink_cFi)
//	800BF738: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800BF73C: 804061C0 (g_dComIfG_gameInfo)
//	800BF740: 804061C0 (g_dComIfG_gameInfo)
//	800BF74C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	800BF788: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSightLine(f32 param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSightLine__9daAlink_cFfP4cXyz.s"
}
#pragma pop

/* 800BF79C-800BF854 00B8+00 s=2 e=0 z=0  None .text      setMetamorphoseModel__9daAlink_cFi */
//	800BF7AC: 803621DC (_savegpr_29)
//	800BF7C4: 8015F068 (loadDataIdx__14daPy_anmHeap_cFUs)
//	800BF7D0: 800A3C8C (setItemHeap__9daAlink_cFv)
//	800BF7E4: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	800BF7F8: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	800BF810: 80452CB8 (lit_6040)
//	800BF820: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	800BF828: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	800BF840: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMetamorphoseModel(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setMetamorphoseModel__9daAlink_cFi.s"
}
#pragma pop

/* 800BF854-800BF884 0030+00 s=10 e=0 z=0  None .text      keepItemData__9daAlink_cFv */
//	800BF870: 800C12DC (deleteEquipItem__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::keepItemData() {
    nofralloc
#include "asm/d/a/d_a_alink/keepItemData__9daAlink_cFv.s"
}
#pragma pop

/* 800BF884-800BF8D0 004C+00 s=8 e=0 z=0  None .text      returnKeepItemData__9daAlink_cFv */
//	800BF8A0: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800BF8B8: 800BFD74 (makeItemType__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::returnKeepItemData() {
    nofralloc
#include "asm/d/a/d_a_alink/returnKeepItemData__9daAlink_cFv.s"
}
#pragma pop

/* 800BF8D0-800BF9F0 0120+00 s=2 e=0 z=0  None .text      setItemModel__9daAlink_cFv */
//	800BF8E8: 8015EB90 (checkBowItem__9daPy_py_cFi)
//	800BF8F8: 800DFAE8 (setBowModel__9daAlink_cFv)
//	800BF914: 800DE7D4 (setSlingModel__9daAlink_cFv)
//	800BF92C: 800E1748 (setCopyRodModel__9daAlink_cFv)
//	800BF94C: 80110E84 (setKandelaarModel__9daAlink_cFv)
//	800BF964: 8010E5D8 (setBottleModel__9daAlink_cFUs)
//	800BF974: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800BF984: 80108B34 (setHookshotModel__9daAlink_cFv)
//	800BF9A0: 800D1268 (setSwordModel__9daAlink_cFv)
//	800BF9B8: 801127F0 (setIronBallModel__9daAlink_cFv)
//	800BF9C4: 80112568 (setIronBallWaitUpperAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setItemModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setItemModel__9daAlink_cFv.s"
}
#pragma pop

/* 800BF9F0-800BFD74 0384+00 s=4 e=0 z=0  None .text      setItemActor__9daAlink_cFv */
//	800BFA3C: 80019E04 (fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv)
//	800BFA54: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800BFA64: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800BFAA8: 80019E04 (fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv)
//	800BFAC0: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800BFAD0: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800BFB18: 80019E04 (fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv)
//	800BFB38: 80452CBC (lit_6041)
//	800BFB3C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800BFB4C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800BFB60: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800BFB94: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	800BFBA0: 800F3DA0 (initFishingRodHand__9daAlink_cFv)
//	800BFBAC: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	800BFBBC: 800F7708 (setGroundFishingRodActor__9daAlink_cFv)
//	800BFBCC: 8015EA48 (checkBombItem__9daPy_py_cFi)
//	800BFBF4: 804061C0 (g_dComIfG_gameInfo)
//	800BFBF8: 804061C0 (g_dComIfG_gameInfo)
//	800BFC58: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800BFC64: 80452C98 (lit_5943)
//	800BFC68: 80266B84 (__ml__4cXyzCFf)
//	800BFC88: 800B8930 (checkReadyItem__9daAlink_cFv)
//	800BFCC8: 80019E04 (fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv)
//	800BFCFC: 80019E04 (fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv)
//	800BFD1C: 800E5BB4 (setGrabItemActor__9daAlink_cFP10fopAc_ac_c)
//	800BFD28: 8002E83C (dComIfGp_addSelectItemNum__Fis)
//	800BFD2C: 80452D94 (lit_8785)
//	800BFD38: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800BFD3C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800BFD44: 800E3DBC (setGrabUpperAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setItemActor() {
    nofralloc
#include "asm/d/a/d_a_alink/setItemActor__9daAlink_cFv.s"
}
#pragma pop

/* 800BFD74-800BFDB0 003C+00 s=2 e=0 z=0  None .text      makeItemType__9daAlink_cFv */
//	800BFD88: 800BF8D0 (setItemModel__9daAlink_cFv)
//	800BFD98: 800BF9F0 (setItemActor__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::makeItemType() {
    nofralloc
#include "asm/d/a/d_a_alink/makeItemType__9daAlink_cFv.s"
}
#pragma pop

/* 800BFDB0-800BFDFC 004C+00 s=28 e=0 z=0  None .text      checkZoraWearAbility__9daAlink_cCFv */
//	800BFDC4: 804061C0 (g_dComIfG_gameInfo)
//	800BFDC8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkZoraWearAbility() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkZoraWearAbility__9daAlink_cCFv.s"
}
#pragma pop

/* 800BFDFC-800BFE48 004C+00 s=5 e=0 z=0  None .text      checkMagicArmorWearAbility__9daAlink_cCFv
 */
//	800BFE10: 804061C0 (g_dComIfG_gameInfo)
//	800BFE14: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMagicArmorWearAbility() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkMagicArmorWearAbility__9daAlink_cCFv.s"
}
#pragma pop

/* 800BFE48-800BFF04 00BC+00 s=9 e=0 z=0  None .text      loadAramBmd__9daAlink_cFUsUl */
//	800BFE58: 803621D8 (_savegpr_28)
//	800BFE64: 804061C0 (g_dComIfG_gameInfo)
//	800BFE68: 804061C0 (g_dComIfG_gameInfo)
//	800BFE78: 802CECEC (__nwa__FUli)
//	800BFE90: 802D5ECC (readIdxResource__10JKRArchiveFPvUlUl)
//	800BFEE8: 8003AE14 (loaderBasicBmd__11dRes_info_cFUlPv)
//	800BFEF0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadAramBmd(u16 param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/loadAramBmd__9daAlink_cFUsUl.s"
}
#pragma pop

/* 800BFF04-800BFF70 006C+00 s=5 e=0 z=0  None .text      loadAram__9daAlink_cFUsUl */
//	800BFF14: 803621DC (_savegpr_29)
//	800BFF28: 802CECEC (__nwa__FUli)
//	800BFF30: 804061C0 (g_dComIfG_gameInfo)
//	800BFF34: 804061C0 (g_dComIfG_gameInfo)
//	800BFF48: 802D5ECC (readIdxResource__10JKRArchiveFPvUlUl)
//	800BFF54: 80337B40 (load__20J3DAnmLoaderDataBaseFPCv24J3DAnmLoaderDataBaseFlag)
//	800BFF5C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadAram(u16 param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/loadAram__9daAlink_cFUsUl.s"
}
#pragma pop

/* 800BFF70-800BFFCC 005C+00 s=3 e=0 z=0  None .text      loadAramItemBrk__9daAlink_cFUsP8J3DModel
 */
//	800BFF8C: 800BFF04 (loadAram__9daAlink_cFUsUl)
//	800BFF94: 80452CC0 (lit_6108)
//	800BFFA0: 8032B87C (searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData)
//	800BFFAC: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadAramItemBrk(u16 param_0, J3DModel* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/loadAramItemBrk__9daAlink_cFUsP8J3DModel.s"
}
#pragma pop

/* 800BFFCC-800C0028 005C+00 s=2 e=0 z=0  None .text      loadAramItemBtk__9daAlink_cFUsP8J3DModel
 */
//	800BFFE8: 800BFF04 (loadAram__9daAlink_cFUsUl)
//	800BFFF0: 80452CC0 (lit_6108)
//	800BFFFC: 8032B1D4 (searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP12J3DModelData)
//	800C0008: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadAramItemBtk(u16 param_0, J3DModel* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/loadAramItemBtk__9daAlink_cFUsP8J3DModel.s"
}
#pragma pop

/* 800C0028-800C0084 005C+00 s=1 e=0 z=0  None .text      loadAramItemBtp__9daAlink_cFUsP8J3DModel
 */
//	800C0044: 800BFF04 (loadAram__9daAlink_cFUsUl)
//	800C004C: 80452CC0 (lit_6108)
//	800C0058: 8032B09C (searchUpdateMaterialID__16J3DAnmTexPatternFP12J3DModelData)
//	800C0064: 8032FBC8 (entryTexNoAnimator__16J3DMaterialTableFP16J3DAnmTexPattern)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadAramItemBtp(u16 param_0, J3DModel* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/loadAramItemBtp__9daAlink_cFUsP8J3DModel.s"
}
#pragma pop

/* 800C0084-800C0114 0090+00 s=5 e=0 z=0  None .text      changeItemBck__9daAlink_cFUsf */
//	800C00A8: 8015F068 (loadDataIdx__14daPy_anmHeap_cFUs)
//	800C00B8: 8000D990 (changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform)
//	800C00BC: 80452CC0 (lit_6108)
//	800C00D0: 80452CB0 (lit_6025)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeItemBck(u16 param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/changeItemBck__9daAlink_cFUsf.s"
}
#pragma pop

/* 800C0114-800C0164 0050+00 s=2 e=0 z=0  None .text      checkGroupItem__9daAlink_cCFii */
//	800C012C: 8015EAD8 (checkDrinkBottleItem__9daPy_py_cFi)
//	800C0140: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGroupItem(int param_0, int param_1) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGroupItem__9daAlink_cCFii.s"
}
#pragma pop

/* 800C0164-800C0208 00A4+00 s=11 e=0 z=0  None .text      checkSetItemTrigger__9daAlink_cFi */
//	800C0174: 803621D4 (_savegpr_27)
//	800C0194: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800C01A4: 800C0114 (checkGroupItem__9daAlink_cCFii)
//	800C01BC: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	800C01F4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSetItemTrigger(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSetItemTrigger__9daAlink_cFi.s"
}
#pragma pop

/* 800C0208-800C0284 007C+00 s=6 e=0 z=0  None .text      checkItemSetButton__9daAlink_cFi */
//	800C0218: 803621D8 (_savegpr_28)
//	800C0234: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800C0244: 800C0114 (checkGroupItem__9daAlink_cCFii)
//	800C0270: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemSetButton(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemSetButton__9daAlink_cFi.s"
}
#pragma pop

/* 800C0284-800C02C8 0044+00 s=1 e=0 z=0  None .text      checkField__9daAlink_cFv */
//	800C0290: 804061C0 (g_dComIfG_gameInfo)
//	800C0294: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkField() {
    nofralloc
#include "asm/d/a/d_a_alink/checkField__9daAlink_cFv.s"
}
#pragma pop

/* 800C02C8-800C0310 0048+00 s=6 e=0 z=0  None .text      checkBossRoom__9daAlink_cFv */
//	800C02D4: 804061C0 (g_dComIfG_gameInfo)
//	800C02D8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBossRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBossRoom__9daAlink_cFv.s"
}
#pragma pop

/* 800C0310-800C0358 0048+00 s=4 e=0 z=0  None .text      checkDungeon__9daAlink_cFv */
//	800C031C: 804061C0 (g_dComIfG_gameInfo)
//	800C0320: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDungeon() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDungeon__9daAlink_cFv.s"
}
#pragma pop

/* 800C0358-800C03A0 0048+00 s=3 e=0 z=0  None .text      checkCastleTown__9daAlink_cFv */
//	800C0364: 804061C0 (g_dComIfG_gameInfo)
//	800C0368: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCastleTown() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCastleTown__9daAlink_cFv.s"
}
#pragma pop

/* 800C03A0-800C03E8 0048+00 s=6 e=0 z=1  None .text      checkCloudSea__9daAlink_cFv */
//	800C03AC: 804061C0 (g_dComIfG_gameInfo)
//	800C03B0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCloudSea() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCloudSea__9daAlink_cFv.s"
}
#pragma pop

/* 800C03E8-800C044C 0064+00 s=5 e=0 z=0  None .text      checkRoomOnly__9daAlink_cFv */
//	800C03FC: 804061C0 (g_dComIfG_gameInfo)
//	800C0400: 804061C0 (g_dComIfG_gameInfo)
//	800C0424: 8011EE40 (checkLv7DungeonShop__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRoomOnly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRoomOnly__9daAlink_cFv.s"
}
#pragma pop

/* 800C044C-800C04B4 0068+00 s=3 e=0 z=0  None .text      checkLv2DungeonRoomSpecial__9daAlink_cFv
 */
//	800C0460: 80392094 (d_a_d_a_alink__stringBase0)
//	800C0464: 80392094 (d_a_d_a_alink__stringBase0)
//	800C046C: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C0478: 80450D64 (struct_80450D64)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLv2DungeonRoomSpecial() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv2DungeonRoomSpecial__9daAlink_cFv.s"
}
#pragma pop

/* 800C04B4-800C0520 006C+00 s=2 e=0 z=0  None .text      checkRoomSpecial__9daAlink_cFv */
//	800C04C8: 80392094 (d_a_d_a_alink__stringBase0)
//	800C04CC: 80392094 (d_a_d_a_alink__stringBase0)
//	800C04D4: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C04E0: 80450D64 (struct_80450D64)
//	800C04F8: 800C044C (checkLv2DungeonRoomSpecial__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRoomSpecial() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRoomSpecial__9daAlink_cFv.s"
}
#pragma pop

/* 800C0520-800C0594 0074+00 s=1 e=0 z=0  None .text      checkRoom__9daAlink_cFv */
//	800C0534: 800C03E8 (checkRoomOnly__9daAlink_cFv)
//	800C0540: 800C04B4 (checkRoomSpecial__9daAlink_cFv)
//	800C054C: 80392094 (d_a_d_a_alink__stringBase0)
//	800C0550: 80392094 (d_a_d_a_alink__stringBase0)
//	800C0558: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C056C: 8002DB64 (dComIfGs_isOneZoneSwitch__Fii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRoom__9daAlink_cFv.s"
}
#pragma pop

/* 800C0594-800C05DC 0048+00 s=8 e=0 z=0  None .text      checkNotBattleStage__9daAlink_cFv */
//	800C05A8: 800C0520 (checkRoom__9daAlink_cFv)
//	800C05B4: 800C0358 (checkCastleTown__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNotBattleStage() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNotBattleStage__9daAlink_cFv.s"
}
#pragma pop

/* 800C05DC-800C0630 0054+00 s=2 e=0 z=0  None .text      checkNotHeavyBootsStage__9daAlink_cFv */
//	800C05F0: 800C0594 (checkNotBattleStage__9daAlink_cFv)
//	800C05FC: 800C03A0 (checkCloudSea__9daAlink_cFv)
//	800C0608: 800C044C (checkLv2DungeonRoomSpecial__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNotHeavyBootsStage() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNotHeavyBootsStage__9daAlink_cFv.s"
}
#pragma pop

/* 800C0630-800C0678 0048+00 s=1 e=0 z=0  None .text      checkNotAutoJumpStage__9daAlink_cFv */
//	800C0644: 800C03E8 (checkRoomOnly__9daAlink_cFv)
//	800C0650: 800C0358 (checkCastleTown__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNotAutoJumpStage() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNotAutoJumpStage__9daAlink_cFv.s"
}
#pragma pop

/* 800C0678-800C077C 0104+00 s=3 e=0 z=0  None .text      checkCastleTownUseItem__9daAlink_cFUs */
//	800C0690: 800C0594 (checkNotBattleStage__9daAlink_cFv)
//	800C06AC: 8015EBD8 (checkTradeItem__9daPy_py_cFi)
//	800C06C4: 8011EE40 (checkLv7DungeonShop__9daAlink_cFv)
//	800C06D0: 800C04B4 (checkRoomSpecial__9daAlink_cFv)
//	800C06EC: 8015EC28 (checkDungeonWarpItem__9daPy_py_cFi)
//	800C06F8: 80392094 (d_a_d_a_alink__stringBase0)
//	800C06FC: 80392094 (d_a_d_a_alink__stringBase0)
//	800C0704: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C071C: 800C044C (checkLv2DungeonRoomSpecial__9daAlink_cFv)
//	800C0738: 8015EA88 (checkBottleItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCastleTownUseItem(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkCastleTownUseItem__9daAlink_cFUs.s"
}
#pragma pop

/* 800C077C-800C0A9C 0320+00 s=1 e=0 z=0  None .text      changeItemTriggerKeepProc__9daAlink_cFUci
 */
//	800C078C: 803621D8 (_savegpr_28)
//	800C07A0: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800C07CC: 80111A9C (procGrassWhistleWaitInit__9daAlink_cFiiisP4cXyz)
//	800C0808: 800F2934 (procHorseBottleDrinkInit__9daAlink_cFUs)
//	800C0834: 800F7404 (procCanoeBottleDrinkInit__9daAlink_cFUs)
//	800C0844: 8010F54C (procBottleDrinkInit__9daAlink_cFUs)
//	800C087C: 800F2B4C (procHorseKandelaarPourInit__9daAlink_cFv)
//	800C08A4: 800F75BC (procCanoeKandelaarPourInit__9daAlink_cFv)
//	800C08B0: 8011167C (procKandelaarPourInit__9daAlink_cFv)
//	800C08C4: 800F7988 (procFishingFoodInit__9daAlink_cFv)
//	800C08D8: 800E3048 (procBootsEquipInit__9daAlink_cFv)
//	800C08F0: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	800C0904: 8010DC64 (procSpinnerReadyInit__9daAlink_cFv)
//	800C0918: 8011EE94 (procDungeonWarpReadyInit__9daAlink_cFv)
//	800C0930: 8010F6F4 (procBottleOpenInit__9daAlink_cFUs)
//	800C094C: 8010FC38 (procBottleSwingInit__9daAlink_cFP10fopAc_ac_ci)
//	800C0964: 8011E448 (procNotUseItemInit__9daAlink_cFi)
//	800C0978: 800CED84 (procCoSubjectivityInit__9daAlink_cFv)
//	800C097C: 804061C0 (g_dComIfG_gameInfo)
//	800C0980: 804061C0 (g_dComIfG_gameInfo)
//	800C099C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800C09B0: 80452CB8 (lit_6040)
//	800C09B8: 80452CBC (lit_6041)
//	800C09C4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800C09DC: 800E75EC (procPickPutInit__9daAlink_cFi)
//	800C09F0: 80110840 (offKandelaarModel__9daAlink_cFv)
//	800C0A10: 800B9640 (itemEquip__9daAlink_cFUs)
//	800C0A14: 804061C0 (g_dComIfG_gameInfo)
//	800C0A18: 804061C0 (g_dComIfG_gameInfo)
//	800C0A30: 800DE780 (checkBowAndSlingItem__9daAlink_cFi)
//	800C0A40: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800C0A64: 800BA6A0 (commonChangeItem__9daAlink_cFv)
//	800C0A70: 80452CBC (lit_6041)
//	800C0A74: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800C0A7C: 800B6F28 (checkItemActionInitStart__9daAlink_cFv)
//	800C0A88: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeItemTriggerKeepProc(u8 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/changeItemTriggerKeepProc__9daAlink_cFUci.s"
}
#pragma pop

/* 800C0A9C-800C12DC 0840+00 s=1 e=0 z=0  None .text      checkNewItemChange__9daAlink_cFUc */
//	800C0AB4: 803621D8 (_savegpr_28)
//	800C0AC8: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800C0B00: 8015EB40 (checkOilBottleItem__9daPy_py_cFi)
//	800C0B14: 8011078C (checkWaterInKandelaarOffset__9daAlink_cFf)
//	800C0B3C: 80392094 (d_a_d_a_alink__stringBase0)
//	800C0B40: 80392094 (d_a_d_a_alink__stringBase0)
//	800C0B48: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C0B54: 800C03A0 (checkCloudSea__9daAlink_cFv)
//	800C0B80: 801018E4 (checkAcceptUseItemInWater__9daAlink_cCFUs)
//	800C0BA4: 800C0678 (checkCastleTownUseItem__9daAlink_cFUs)
//	800C0C04: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	800C0C3C: 80452F30 (lit_21736)
//	800C0C54: 80452CC0 (lit_6108)
//	800C0C74: 800C02C8 (checkBossRoom__9daAlink_cFv)
//	800C0C84: 8015EC28 (checkDungeonWarpItem__9daPy_py_cFi)
//	800C0C98: 8011EE40 (checkLv7DungeonShop__9daAlink_cFv)
//	800C0CA4: 80392094 (d_a_d_a_alink__stringBase0)
//	800C0CA8: 80392094 (d_a_d_a_alink__stringBase0)
//	800C0CB0: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C0CBC: 804061C0 (g_dComIfG_gameInfo)
//	800C0CC0: 804061C0 (g_dComIfG_gameInfo)
//	800C0CD0: 80035360 (isSwitch__10dSv_info_cCFii)
//	800C0CDC: 804061C0 (g_dComIfG_gameInfo)
//	800C0CE0: 804061C0 (g_dComIfG_gameInfo)
//	800C0CF0: 80035360 (isSwitch__10dSv_info_cCFii)
//	800C0CFC: 80392094 (d_a_d_a_alink__stringBase0)
//	800C0D00: 80392094 (d_a_d_a_alink__stringBase0)
//	800C0D08: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C0D38: 8015EAD8 (checkDrinkBottleItem__9daPy_py_cFi)
//	800C0D50: 8015EB90 (checkBowItem__9daPy_py_cFi)
//	800C0D70: 8015EC28 (checkDungeonWarpItem__9daPy_py_cFi)
//	800C0D80: 8015EBD8 (checkTradeItem__9daPy_py_cFi)
//	800C0D90: 8015EA88 (checkBottleItem__9daPy_py_cFi)
//	800C0E08: 8015EAD8 (checkDrinkBottleItem__9daPy_py_cFi)
//	800C0E20: 8015EB40 (checkOilBottleItem__9daPy_py_cFi)
//	800C0E34: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	800C0E9C: 802681E4 (cBgW_CheckBGround__Ff)
//	800C0EC8: 8015EAD8 (checkDrinkBottleItem__9daPy_py_cFi)
//	800C0EE4: 802681E4 (cBgW_CheckBGround__Ff)
//	800C0F28: 80450690 (l_autoUpHeight)
//	800C0F54: 80452F50 (lit_23595)
//	800C0F58: 80439A20 (sincosTable___5JMath)
//	800C0F5C: 80439A20 (sincosTable___5JMath)
//	800C0F9C: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800C0FA8: 80452D14 (lit_7307)
//	800C0FF8: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800C1010: 80452CC0 (lit_6108)
//	800C1038: 8034739C (PSVECSquareDistance)
//	800C103C: 80452E7C (lit_15808)
//	800C106C: 8015EC28 (checkDungeonWarpItem__9daPy_py_cFi)
//	800C1088: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	800C10AC: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	800C10B0: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800C110C: 8015EAD8 (checkDrinkBottleItem__9daPy_py_cFi)
//	800C1124: 8015EB68 (checkOpenBottleItem__9daPy_py_cFi)
//	800C113C: 8015EBD8 (checkTradeItem__9daPy_py_cFi)
//	800C1164: 8015EB40 (checkOilBottleItem__9daPy_py_cFi)
//	800C1178: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	800C1198: 800CE468 (acceptSubjectModeChange__9daAlink_cFv)
//	800C11B8: 8002E5C0 (dComIfGp_getSelectItemNum__Fi)
//	800C11F0: 8015EA48 (checkBombItem__9daPy_py_cFi)
//	800C1200: 8002E5C0 (dComIfGp_getSelectItemNum__Fi)
//	800C12C8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNewItemChange(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNewItemChange__9daAlink_cFUc.s"
}
#pragma pop

/* 800C12DC-800C1704 0428+00 s=67 e=0 z=0  None .text      deleteEquipItem__9daAlink_cFii */
//	800C12EC: 803621DC (_savegpr_29)
//	800C1310: 80110840 (offKandelaarModel__9daAlink_cFv)
//	800C1338: 802C3778 (setKanteraState__14Z2CreatureLinkFUc)
//	800C1368: 804061C0 (g_dComIfG_gameInfo)
//	800C136C: 804061C0 (g_dComIfG_gameInfo)
//	800C13F0: 800D1310 (offSwordModel__9daAlink_cFv)
//	800C13FC: 800DC79C (stickArrowIncrement__9daAlink_cFi)
//	800C1418: 8001CBA0 (fopAcM_cancelCarryNow__FP10fopAc_ac_c)
//	800C1428: 8001DC68 (lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800C1434: 803A37C0 (__vt__8cM3dGPla)
//	800C1438: 803A37C0 (__vt__8cM3dGPla)
//	800C1440: 804061C0 (g_dComIfG_gameInfo)
//	800C1444: 804061C0 (g_dComIfG_gameInfo)
//	800C144C: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	800C1450: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	800C145C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800C1468: 80452D3C (lit_7808)
//	800C146C: 80266B84 (__ml__4cXyzCFf)
//	800C1474: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	800C1478: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	800C1484: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800C14A0: 803A37C0 (__vt__8cM3dGPla)
//	800C14A4: 803A37C0 (__vt__8cM3dGPla)
//	800C14BC: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	800C14E0: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800C14F0: 80108828 (cancelHookshotCarry__9daAlink_cFv)
//	800C150C: 800E0440 (checkBoomerangAnime__9daAlink_cCFv)
//	800C1528: 800E1530 (checkCopyRodAnime__9daAlink_cCFv)
//	800C1538: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800C157C: 801150E4 (checkIronBallAnime__9daAlink_cCFv)
//	800C159C: 800DE780 (checkBowAndSlingItem__9daAlink_cFi)
//	800C15AC: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800C15C0: 80452CBC (lit_6041)
//	800C15C4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800C15D8: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800C15E0: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800C1614: 8000D990 (changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform)
//	800C162C: 8000D990 (changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform)
//	800C167C: 800D0F5C (getSwordAtType__9daAlink_cFv)
//	800C169C: 800ABB28 (cancelLockAt__9daAlink_cFv)
//	800C16E0: 802BDFF8 (deleteObject__14Z2SoundObjBaseFv)
//	800C16F0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::deleteEquipItem(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/deleteEquipItem__9daAlink_cFii.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532C8-804532CC 0004+00 s=1 e=0 z=0  None .sdata2    @71910 */
SECTION_SDATA2 static u32 lit_71910 = 0x000000FF;

/* 804532CC-804532D0 0004+00 s=1 e=0 z=0  None .sdata2    @71997 */
SECTION_SDATA2 static f32 lit_71997 = 7.0f / 25.0f;

/* 804532D0-804532D4 0004+00 s=1 e=0 z=0  None .sdata2    @71998 */
SECTION_SDATA2 static f32 lit_71998 = 174.0f;

/* 804532D4-804532D8 0004+00 s=1 e=0 z=0  None .sdata2    @71999 */
SECTION_SDATA2 static f32 lit_71999 = 141.0f;

/* 800C1704-800C1CEC 05E8+00 s=1 e=0 z=0  None .text      setLight__9daAlink_cFv */
//	800C171C: 803621D0 (_savegpr_26)
//	800C1724: 8038D658 (lit_3757)
//	800C1728: 8038D658 (lit_3757)
//	800C1768: 804061C0 (g_dComIfG_gameInfo)
//	800C176C: 804061C0 (g_dComIfG_gameInfo)
//	800C17B0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800C17C8: 804061C0 (g_dComIfG_gameInfo)
//	800C17CC: 804061C0 (g_dComIfG_gameInfo)
//	800C17FC: 804061C0 (g_dComIfG_gameInfo)
//	800C1800: 804061C0 (g_dComIfG_gameInfo)
//	800C1810: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	800C1840: 804061C0 (g_dComIfG_gameInfo)
//	800C1844: 804061C0 (g_dComIfG_gameInfo)
//	800C188C: 80452CB8 (lit_6040)
//	800C1890: 8004D4CC
//(set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	800C1910: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	800C191C: 80453008 (lit_32072)
//	800C1948: 80452CC0 (lit_6108)
//	800C1950: 80452CB8 (lit_6040)
//	800C1958: 80452C98 (lit_5943)
//	800C195C: 80452EA8 (lit_16570)
//	800C1960: 80452DA0 (lit_9054)
//	800C1964: 8026F97C (cLib_addCalc__FPfffff)
//	800C19B4: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	800C19F4: 80452DFC (lit_13701)
//	800C19FC: 80452D2C (lit_7624)
//	800C1A18: 80452CC0 (lit_6108)
//	800C1A1C: 80452CB8 (lit_6040)
//	800C1A38: 80452CA4 (lit_6021)
//	800C1A4C: 804532CC (lit_71997)
//	800C1A50: 80452D88 (lit_8782)
//	800C1A54: 80452D2C (lit_7624)
//	800C1A5C: 80452DF8 (lit_13700)
//	800C1A6C: 80270740 (cLib_chaseF__FPfff)
//	800C1A74: 80452CC0 (lit_6108)
//	800C1A80: 804532C8 (lit_71910)
//	800C1AE0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800C1B00: 80267150 (atan2sY_XZ__4cXyzCFv)
//	800C1B0C: 80267128 (atan2sX_Z__4cXyzCFv)
//	800C1B18: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800C1B1C: 803DD470 (now__14mDoMtx_stack_c)
//	800C1B20: 803DD470 (now__14mDoMtx_stack_c)
//	800C1B30: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	800C1B34: 803DD470 (now__14mDoMtx_stack_c)
//	800C1B38: 803DD470 (now__14mDoMtx_stack_c)
//	800C1B44: 80346D6C (PSMTXMultVec)
//	800C1B48: 80453238 (lit_59593)
//	800C1B5C: 80452CB0 (lit_6025)
//	800C1B7C: 80452C98 (lit_5943)
//	800C1BBC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800C1BC8: 80452C98 (lit_5943)
//	800C1BCC: 80266B84 (__ml__4cXyzCFf)
//	800C1BE8: 80452DE0 (lit_11673)
//	800C1C00: 804532D0 (lit_71998)
//	800C1C18: 804532D4 (lit_71999)
//	800C1C4C: 80452CC0 (lit_6108)
//	800C1C50: 80453238 (lit_59593)
//	800C1C5C: 80452CB0 (lit_6025)
//	800C1C8C: 80452CB0 (lit_6025)
//	800C1CC8: 801AAC5C (dKy_WolfEyeLight_set__FP4cXyzfffP8_GXColorfUcUc)
//	800C1CD8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLight() {
    nofralloc
#include "asm/d/a/d_a_alink/setLight__9daAlink_cFv.s"
}
#pragma pop

/* 800C1CEC-800C1DAC 00C0+00 s=3 e=0 z=0  None .text      setFrontRollCrashShock__9daAlink_cFUc */
//	800C1D08: 80452CC0 (lit_6108)
//	800C1D10: 80452CB8 (lit_6040)
//	800C1D1C: 804061C0 (g_dComIfG_gameInfo)
//	800C1D20: 804061C0 (g_dComIfG_gameInfo)
//	800C1D34: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800C1D54: 802C3BD4 (startLinkSound__14Z2CreatureLinkF10JAISoundIDUlSc)
//	800C1D90: 801A81C0 (dKy_Sound_set__F4cXyziUii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFrontRollCrashShock(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFrontRollCrashShock__9daAlink_cFUc.s"
}
#pragma pop

/* 800C1DAC-800C1DE0 0034+00 s=1 e=0 z=0  None .text      getModelJointMtx__9daAlink_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getModelJointMtx(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getModelJointMtx__9daAlink_cFUs.s"
}
#pragma pop

/* 800C1DE0-800C1E0C 002C+00 s=1 e=0 z=0  None .text      onFrollCrashFlg__9daAlink_cFUci */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onFrollCrashFlg(u8 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/onFrollCrashFlg__9daAlink_cFUci.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532D8-804532DC 0004+00 s=1 e=0 z=0  None .sdata2    @72043 */
SECTION_SDATA2 static void* lit_72043 = (void*)onWarpMaterial__11dRes_info_cFP12J3DModelData;

/* 804532DC-804532E0 0004+00 s=1 e=0 z=0  None .sdata2    None */
SECTION_SDATA2 static void* data_804532DC = (void*)offWarpMaterial__11dRes_info_cFP12J3DModelData;

/* 800C1E0C-800C1F6C 0160+00 s=4 e=0 z=0  None .text
 * changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE */
//	800C1E1C: 803621D8 (_savegpr_28)
//	800C1E28: 804532D8 (lit_72043)
//	800C1E2C: 804532DC (data_804532DC)
//	800C1F14: 804061C0 (g_dComIfG_gameInfo)
//	800C1F18: 804061C0 (g_dComIfG_gameInfo)
//	800C1F2C: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	800C1F58: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeWarpMaterial(daAlink_c::daAlink_WARP_MAT_MODE param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE.s"
}
#pragma pop

/* 800C1F6C-800C2DA4 0E38+00 s=229 e=0 z=0  None .text
 * commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC        */
//	800C1F7C: 803621CC (_savegpr_25)
//	800C1F94: 80452CC0 (lit_6108)
//	800C1F9C: 80117B90 (resetDemoBck__9daAlink_cFv)
//	800C1FB0: 800ECB58 (initForceRideHorse__9daAlink_cFv)
//	800C1FC8: 800C1E0C (changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE)
//	800C1FDC: 80451160 (Zero__5csXyz)
//	800C1FE8: 80451160 (Zero__5csXyz)
//	800C2004: 80451160 (Zero__5csXyz)
//	800C2030: 800BF884 (returnKeepItemData__9daAlink_cFv)
//	800C206C: 80138F18 (resetWolfBallGrab__9daAlink_cFv)
//	800C20B8: 80037AE4 (dead__12daItemBase_cFv)
//	800C20C0: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800C20E8: 80108828 (cancelHookshotCarry__9daAlink_cFv)
//	800C20FC: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800C2108: 800B7190 (cancelItemUseQuake__9daAlink_cFi)
//	800C2110: 804061C0 (g_dComIfG_gameInfo)
//	800C2114: 804061C0 (g_dComIfG_gameInfo)
//	800C2130: 800B7190 (cancelItemUseQuake__9daAlink_cFi)
//	800C2150: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800C2160: 80138C04 (resetWolfEnemyBiteAll__9daAlink_cFv)
//	800C2168: 80127D68 (checkWolfShapeReverse__9daAlink_cCFv)
//	800C2184: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800C21E0: 800C1E0C (changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE)
//	800C21F4: 80138F18 (resetWolfBallGrab__9daAlink_cFv)
//	800C2204: 80452CB8 (lit_6040)
//	800C2228: 804061C0 (g_dComIfG_gameInfo)
//	800C222C: 804061C0 (g_dComIfG_gameInfo)
//	800C2238: 8006FD94 (StopQuake__12dVibration_cFi)
//	800C2270: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800C2324: 803B0A28 (m_procInitTable__9daAlink_c)
//	800C2328: 803B0A28 (m_procInitTable__9daAlink_c)
//	800C23B4: 80452CBC (lit_6041)
//	800C23B8: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800C23F0: 801089E8 (checkBossOctaIealRoom__9daAlink_cFv)
//	800C2440: 80452CBC (lit_6041)
//	800C2444: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800C2484: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800C24D4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800C24E0: 80452CBC (lit_6041)
//	800C24E4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800C2510: 80452CC0 (lit_6108)
//	800C2534: 80122F18 (clearCutTurnEffectID__9daAlink_cFv)
//	800C25C4: 800BB644 (initGravity__9daAlink_cFv)
//	800C25D0: 80452CC0 (lit_6108)
//	800C2610: 80451160 (Zero__5csXyz)
//	800C2618: 80451160 (Zero__5csXyz)
//	800C262C: 80451160 (Zero__5csXyz)
//	800C265C: 800AFCBC (resetFacePriAnime__9daAlink_cFv)
//	800C273C: 80452CC0 (lit_6108)
//	800C27FC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800C2828: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800C2880: 800B93CC (checkSwordTwirlAnime__9daAlink_cCFv)
//	800C2910: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C2914: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C291C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800C2924: 8015EA48 (checkBombItem__9daPy_py_cFi)
//	800C2948: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800C298C: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	800C29C8: 80108828 (cancelHookshotCarry__9daAlink_cFv)
//	800C29CC: 804061C0 (g_dComIfG_gameInfo)
//	800C29D0: 804061C0 (g_dComIfG_gameInfo)
//	800C29F8: 804061C0 (g_dComIfG_gameInfo)
//	800C29FC: 804061C0 (g_dComIfG_gameInfo)
//	800C2A34: 80439A20 (sincosTable___5JMath)
//	800C2A38: 80439A20 (sincosTable___5JMath)
//	800C2A44: 80452D30 (lit_7625)
//	800C2A80: 80439A20 (sincosTable___5JMath)
//	800C2A84: 80439A20 (sincosTable___5JMath)
//	800C2A90: 80452D30 (lit_7625)
//	800C2AD8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800C2AEC: 80452CB8 (lit_6040)
//	800C2AF4: 80452CBC (lit_6041)
//	800C2B00: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800C2B08: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800C2B4C: 804061C0 (g_dComIfG_gameInfo)
//	800C2B50: 804061C0 (g_dComIfG_gameInfo)
//	800C2B6C: 80108EEC (cancelHookshotShot__9daAlink_cFv)
//	800C2B88: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800C2BE0: 800ECBD0 (rideGetOff__9daAlink_cFv)
//	800C2C24: 80452CBC (lit_6041)
//	800C2C28: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800C2C70: 804061C0 (g_dComIfG_gameInfo)
//	800C2C74: 804061C0 (g_dComIfG_gameInfo)
//	800C2C80: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800C2C90: 800DFC70 (setBowNormalAnime__9daAlink_cFv)
//	800C2CD0: 801032C8 (swimOutAfter__9daAlink_cFi)
//	800C2CD8: 800B1770 (setBgCheckParam__9daAlink_cFv)
//	800C2D34: 80138C04 (resetWolfEnemyBiteAll__9daAlink_cFv)
//	800C2D5C: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800C2D90: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonProcInit(daAlink_c::daAlink_PROC param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC.s"
}
#pragma pop

/* 800C2DA4-800C2DDC 0038+00 s=121 e=0 z=0  None .text
 * commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC */
//	800C2DC4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonProcInitNotSameProc(daAlink_c::daAlink_PROC param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC.s"
}
#pragma pop

/* 800C2DDC-800C2EAC 00D0+00 s=17 e=0 z=0  None .text
 * procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c          */
//	800C2DEC: 803621DC (_savegpr_29)
//	800C2E00: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C2E04: 80452CC0 (lit_6108)
//	800C2E10: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C2E14: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C2E1C: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	800C2E28: 800B983C (allUnequip__9daAlink_cFi)
//	800C2E44: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800C2E80: 80110840 (offKandelaarModel__9daAlink_cFv)
//	800C2E98: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPreActionUnequipInit(int param_0, fopAc_ac_c* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c.s"
}
#pragma pop

/* 800C2EAC-800C3098 01EC+00 s=1 e=0 z=0  None .text      procPreActionUnequip__9daAlink_cFv */
//	800C2EC0: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800C2EF4: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800C2F10: 800E8428 (procCoPushPullWaitInit__9daAlink_cFi)
//	800C2F24: 800FD9CC (procLadderDownStartInit__9daAlink_cFv)
//	800C2F38: 800FD648 (procLadderUpStartInit__9daAlink_cFv)
//	800C2F4C: 800E5CBC (procGrabReadyInit__9daAlink_cFv)
//	800C2F60: 8011A798 (procCoGetItemInit__9daAlink_cFv)
//	800C2F74: 8011D544 (procCoGetReadySitInit__9daAlink_cFv)
//	800C2F88: 800E7C30 (procFmChainUpInit__9daAlink_cFv)
//	800C2F9C: 800E7254 (procPickUpInit__9daAlink_cFv)
//	800C2FB0: 800F9210 (procCrawlStartInit__9daAlink_cFv)
//	800C2FC4: 80111894 (procGrassWhistleGetInit__9daAlink_cFv)
//	800C2FD8: 800EA2A8 (procGoatStrokeInit__9daAlink_cFv)
//	800C2FEC: 800FC178 (procHangReadyInit__9daAlink_cFv)
//	800C3000: 800E70FC (procInsectCatchInit__9daAlink_cFv)
//	800C3014: 800EA3F4 (procGoronMoveInit__9daAlink_cFv)
//	800C3030: 8010FC38 (procBottleSwingInit__9daAlink_cFP10fopAc_ac_ci)
//	800C3044: 800FC2F4 (procHangLeverDownInit__9daAlink_cFv)
//	800C305C: 800E75EC (procPickPutInit__9daAlink_cFi)
//	800C306C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C3078: 80452CBC (lit_6041)
//	800C307C: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPreActionUnequip() {
    nofralloc
#include "asm/d/a/d_a_alink/procPreActionUnequip__9daAlink_cFv.s"
}
#pragma pop

/* 800C3098-800C30F0 0058+00 s=1 e=0 z=0  None .text      procServiceWaitInit__9daAlink_cFv */
//	800C30B0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C30BC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800C30C0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procServiceWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procServiceWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C30F0-800C3224 0134+00 s=1 e=0 z=0  None .text      procServiceWait__9daAlink_cFv */
//	800C3110: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C3120: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	800C3130: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800C3140: 800DC678 (checkGuardActionChange__9daAlink_cFv)
//	800C315C: 80452CC0 (lit_6108)
//	800C3168: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800C3174: 80452DB4 (lit_10040)
//	800C3178: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800C31A8: 80452DE0 (lit_11673)
//	800C31AC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800C31DC: 80452F98 (lit_25684)
//	800C31E0: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procServiceWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procServiceWait__9daAlink_cFv.s"
}
#pragma pop

/* 800C3224-800C3338 0114+00 s=2 e=0 z=0  None .text      procTiredWaitInit__9daAlink_cFv */
//	800C323C: 803621DC (_savegpr_29)
//	800C3264: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C3278: 80452CC0 (lit_6108)
//	800C3288: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800C32A4: 80452EAC (lit_16641)
//	800C32B8: 800AC5B4 (checkUnderMove1BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800C32CC: 800AC5B4 (checkUnderMove1BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800C32F4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800C3310: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800C3324: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procTiredWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procTiredWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C3338-800C33B8 0080+00 s=1 e=0 z=0  None .text      procTiredWait__9daAlink_cFv */
//	800C3358: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C3368: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C337C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800C3398: 800B3358 (setTiredVoice__9daAlink_cFP16daPy_frameCtrl_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procTiredWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procTiredWait__9daAlink_cFv.s"
}
#pragma pop

/* 800C33B8-800C3504 014C+00 s=26 e=0 z=0  None .text      procWaitInit__9daAlink_cFv */
//	800C3400: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800C341C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C342C: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800C3468: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C346C: 80452CC0 (lit_6108)
//	800C3478: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C347C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3484: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	800C34A4: 800B3844 (initServiceWaitTime__9daAlink_cFv)
//	800C34BC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800C34D0: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800C34E4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C3504-800C36CC 01C8+00 s=1 e=0 z=0  None .text      procWait__9daAlink_cFv */
//	800C3514: 803621DC (_savegpr_29)
//	800C3520: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800C3530: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C3540: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	800C3550: 80452E78 (lit_15460)
//	800C3564: 80452CB0 (lit_6025)
//	800C358C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C359C: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800C35B0: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800C35C0: 800B33E4 (checkRestHPAnime__9daAlink_cFv)
//	800C35E0: 800C3224 (procTiredWaitInit__9daAlink_cFv)
//	800C35EC: 80452CBC (lit_6041)
//	800C35F0: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	800C3604: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800C3618: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800C3624: 80452CE0 (lit_6845)
//	800C3628: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800C3648: 800B47B4 (checkServiceWaitMode__9daAlink_cFv)
//	800C365C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800C368C: 80452CC0 (lit_6108)
//	800C3690: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800C36A0: 800C3098 (procServiceWaitInit__9daAlink_cFv)
//	800C36AC: 800B3844 (initServiceWaitTime__9daAlink_cFv)
//	800C36B8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWait__9daAlink_cFv.s"
}
#pragma pop

/* 800C36CC-800C3730 0064+00 s=3 e=0 z=0  None .text      procMoveInit__9daAlink_cFv */
//	800C36E4: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C36FC: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3700: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3708: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	800C3714: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C3730-800C3810 00E0+00 s=1 e=0 z=0  None .text      procMove__9daAlink_cFv */
//	800C3748: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800C3754: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C3764: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	800C3784: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C3788: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C37A4: 80452CBC (lit_6041)
//	800C37A8: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	800C37B8: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C37BC: 8038D664 (m__19daAlinkHIO_basic_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procMove__9daAlink_cFv.s"
}
#pragma pop

/* 800C3810-800C3868 0058+00 s=1 e=0 z=0  None .text      procAtnMoveInit__9daAlink_cFv */
//	800C3828: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C3840: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3844: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C384C: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procAtnMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procAtnMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C3868-800C38CC 0064+00 s=1 e=0 z=0  None .text      procAtnMove__9daAlink_cFv */
//	800C3880: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C389C: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	800C38AC: 80452CBC (lit_6041)
//	800C38B0: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procAtnMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procAtnMove__9daAlink_cFv.s"
}
#pragma pop

/* 800C38CC-800C397C 00B0+00 s=4 e=0 z=0  None .text      procAtnActorWaitInit__9daAlink_cFv */
//	800C38E4: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C3908: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800C390C: 80452CC0 (lit_6108)
//	800C392C: 800B32B0 (checkAtnWaitAnime__9daAlink_cFv)
//	800C393C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3940: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3948: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800C3954: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3958: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3960: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procAtnActorWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procAtnActorWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C397C-800C39EC 0070+00 s=1 e=0 z=0  None .text      procAtnActorWait__9daAlink_cFv */
//	800C3994: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C39A4: 800B32B0 (checkAtnWaitAnime__9daAlink_cFv)
//	800C39B4: 80452CBC (lit_6041)
//	800C39B8: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800C39C4: 80452CBC (lit_6041)
//	800C39C8: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	800C39D0: 800B7390 (checkSwordTwirlAction__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procAtnActorWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procAtnActorWait__9daAlink_cFv.s"
}
#pragma pop

/* 800C39EC-800C3A44 0058+00 s=3 e=0 z=0  None .text      procAtnActorMoveInit__9daAlink_cFv */
//	800C3A04: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C3A1C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3A20: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3A28: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procAtnActorMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procAtnActorMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C3A44-800C3A94 0050+00 s=1 e=0 z=0  None .text      procAtnActorMove__9daAlink_cFv */
//	800C3A5C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C3A6C: 80452CBC (lit_6041)
//	800C3A70: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800C3A78: 800B7390 (checkSwordTwirlAction__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procAtnActorMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procAtnActorMove__9daAlink_cFv.s"
}
#pragma pop

/* 800C3A94-800C3B1C 0088+00 s=2 e=0 z=0  None .text      procWaitTurnInit__9daAlink_cFv */
//	800C3AAC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C3AC8: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3ACC: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3AD8: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C3AE0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800C3AEC: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWaitTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWaitTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C3B1C-800C3C3C 0120+00 s=1 e=0 z=0  None .text      procWaitTurn__9daAlink_cFv */
//	800C3B38: 80452CC0 (lit_6108)
//	800C3B3C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C3B40: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C3B48: 80270740 (cLib_chaseF__FPfff)
//	800C3B50: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800C3B74: 800C8460 (procFloorDownReboundInit__9daAlink_cFv)
//	800C3B90: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C3BA4: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	800C3BC4: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800C3BDC: 804061C0 (g_dComIfG_gameInfo)
//	800C3BE0: 804061C0 (g_dComIfG_gameInfo)
//	800C3BEC: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800C3BFC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C3C0C: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800C3C1C: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWaitTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procWaitTurn__9daAlink_cFv.s"
}
#pragma pop

/* 800C3C3C-800C3D38 00FC+00 s=2 e=0 z=0  None .text      procMoveTurnInit__9daAlink_cFi */
//	800C3C5C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C3C74: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3C78: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C3C80: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	800C3C84: 804061C0 (g_dComIfG_gameInfo)
//	800C3C88: 804061C0 (g_dComIfG_gameInfo)
//	800C3CA0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C3CA4: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C3CD4: 80452C98 (lit_5943)
//	800C3CE4: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C3CE8: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C3D04: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C3D08: 8038D6BC (m__18daAlinkHIO_move_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMoveTurnInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procMoveTurnInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C3D38-800C3DA0 0068+00 s=1 e=0 z=0  None .text      procMoveTurn__9daAlink_cFv */
//	800C3D4C: 800B3FD4 (setSpeedAndAngleNormal__9daAlink_cFv)
//	800C3D64: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C3D70: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C3D80: 80452CBC (lit_6041)
//	800C3D84: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMoveTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procMoveTurn__9daAlink_cFv.s"
}
#pragma pop

/* 800C3DA0-800C3F60 01C0+00 s=2 e=0 z=0  None .text      procSideStepInit__9daAlink_cFi */
//	800C3DCC: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800C3DDC: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800C3DEC: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800C3E08: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800C3E1C: 800C57A4 (procBackJumpInit__9daAlink_cFi)
//	800C3E2C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C3E58: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//	800C3E5C: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//	800C3E64: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C3E68:
//8038D864 (m__22daAlinkHIO_sideStep_c0) 	800C3E6C: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//800C3EBC: 8038D864 (m__22daAlinkHIO_sideStep_c0) 	800C3EC0: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//800C3EC4: 800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c)
//800C3EC8: 8038D864 (m__22daAlinkHIO_sideStep_c0) 	800C3ECC: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//800C3EF8: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0) 	800C3EFC: 8038E7F4
//(m__24daAlinkHIO_magneBoots_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSideStepInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSideStepInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C3F60-800C40F0 0190+00 s=1 e=0 z=0  None .text      procSideStep__9daAlink_cFv */
//	800C3F8C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800C3FA4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C3FF4: 800B74B4 (checkUpperItemActionFly__9daAlink_cFv)
//	800C4034: 800B9148 (checkSideRollAction__9daAlink_cFi)
//	800C404C: 800C40F0 (procSideStepLandInit__9daAlink_cFv)
//	800C4058: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800C4068: 800D20B4 (checkForceSwordSwing__9daAlink_cFv)
//	800C4080: 800D1E1C (setCutDash__9daAlink_cFii)
//	800C409C: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//	800C40A0: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//	800C40C0: 800C6A48 (procFallInit__9daAlink_cFif)
//	800C40D4: 800B994C (checkItemChangeFromButton__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSideStep() {
    nofralloc
#include "asm/d/a/d_a_alink/procSideStep__9daAlink_cFv.s"
}
#pragma pop

/* 800C40F0-800C4278 0188+00 s=1 e=0 z=0  None .text      procSideStepLandInit__9daAlink_cFv */
//	800C410C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C412C: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//	800C4130: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//	800C4138: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C413C:
//8038D864 (m__22daAlinkHIO_sideStep_c0) 	800C4140: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//800C418C: 8038D864 (m__22daAlinkHIO_sideStep_c0) 	800C4190: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//800C4198: 800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c)
//800C419C: 8038D864 (m__22daAlinkHIO_sideStep_c0) 	800C41A0: 8038D864 (m__22daAlinkHIO_sideStep_c0)
//800C41C8: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c) 	800C41E4: 800B9254
//(checkNoUpperAnime__9daAlink_cCFv) 	800C41F8: 8038D714 (m__21daAlinkHIO_atnMove_c0) 	800C41FC:
//8038D714 (m__21daAlinkHIO_atnMove_c0) 	800C4204: 80452CBC (lit_6041) 	800C4208: 800AD3A8
//(setUpperAnimeBaseSpeed__9daAlink_cFUsff) 	800C4218: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800C422C: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800C423C: 80452CC0 (lit_6108)
//	800C4258: 800B5C64 (setStepLandVibration__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSideStepLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSideStepLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C4278-800C4378 0100+00 s=1 e=0 z=0  None .text      procSideStepLand__9daAlink_cFv */
//	800C42D8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C42F0: 804061C0 (g_dComIfG_gameInfo)
//	800C42F4: 804061C0 (g_dComIfG_gameInfo)
//	800C4300: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800C4310: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C433C: 800B9148 (checkSideRollAction__9daAlink_cFi)
//	800C4358: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSideStepLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procSideStepLand__9daAlink_cFv.s"
}
#pragma pop

/* 800C4378-800C4514 019C+00 s=1 e=0 z=0  None .text      procSlideInit__9daAlink_cFs */
//	800C4398: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C43B8: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800C43E4: 80270E24 (cLib_distanceAngleS__Fss)
//	800C440C: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	800C4410: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	800C4414: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C4418:
//804061C0 (g_dComIfG_gameInfo) 	800C441C: 804061C0 (g_dComIfG_gameInfo) 	800C4450: 80452CC0
//(lit_6108) 	800C4468: 80452CBC (lit_6041) 	800C446C: 800AD374
//(setUpperAnimeBaseMorf__9daAlink_cFUsf) 	800C4484: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800C449C: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	800C44A0: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	800C44A8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C44AC:
//804061C0 (g_dComIfG_gameInfo) 	800C44B0: 804061C0 (g_dComIfG_gameInfo) 	800C44D0: 801211C0
//(setFootEffectProcType__9daAlink_cFi) 	800C44D4: 8038D8CC (m__19daAlinkHIO_slide_c0) 800C44D8:
// 8038D8CC (m__19daAlinkHIO_slide_c0) 	800C44E4: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSlideInit(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSlideInit__9daAlink_cFs.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532E0-804532E4 0004+00 s=1 e=0 z=0  None .sdata2    @73057 */
SECTION_SDATA2 static f32 lit_73057 = -4096.0f;

/* 800C4514-800C47AC 0298+00 s=1 e=0 z=0  None .text      procSlide__9daAlink_cFv */
//	800C4534: 803A37C0 (__vt__8cM3dGPla)
//	800C4538: 803A37C0 (__vt__8cM3dGPla)
//	800C4544: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	800C4554: 80267128 (atan2sX_Z__4cXyzCFv)
//	800C4578: 80439A20 (sincosTable___5JMath)
//	800C457C: 80439A20 (sincosTable___5JMath)
//	800C4590: 80452CA4 (lit_6021)
//	800C45A0: 80452CB0 (lit_6025)
//	800C45BC: 80452EFC (lit_20400)
//	800C460C: 802706D0 (cLib_chaseS__FPsss)
//	800C461C: 804532E0 (lit_73057)
//	800C463C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C4654: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C469C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C46B0: 80452D44 (lit_7977)
//	800C46BC: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	800C46C0: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	800C46D8: 80452EA8 (lit_16570)
//	800C46E4: 80439A20 (sincosTable___5JMath)
//	800C46E8: 80439A20 (sincosTable___5JMath)
//	800C4704: 80452CB8 (lit_6040)
//	800C4708: 80452C98 (lit_5943)
//	800C4748: 80452CB8 (lit_6040)
//	800C4768: 800BF1CC (seStartMapInfoLevel__9daAlink_cFUl)
//	800C4778: 800C47AC (procSlideLandInit__9daAlink_cFi)
//	800C477C: 803A37C0 (__vt__8cM3dGPla)
//	800C4780: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSlide() {
    nofralloc
#include "asm/d/a/d_a_alink/procSlide__9daAlink_cFv.s"
}
#pragma pop

/* 800C47AC-800C4894 00E8+00 s=1 e=0 z=0  None .text      procSlideLandInit__9daAlink_cFi */
//	800C47CC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C47E0: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	800C47E4: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	800C47EC: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C47F0:
//8038D8CC (m__19daAlinkHIO_slide_c0) 	800C47F4: 8038D8CC (m__19daAlinkHIO_slide_c0) 	800C4810:
//80425514 (l_waitBaseAnime) 	800C4814: 80425514 (l_waitBaseAnime) 	800C4838: 8038D8CC
//(m__19daAlinkHIO_slide_c0) 	800C483C: 8038D8CC (m__19daAlinkHIO_slide_c0) 	800C4844: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C4848:
//8038D8CC (m__19daAlinkHIO_slide_c0) 	800C484C: 8038D8CC (m__19daAlinkHIO_slide_c0) 	800C486C:
//80452C98 (lit_5943)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSlideLandInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSlideLandInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C4894-800C494C 00B8+00 s=1 e=0 z=0  None .text      procSlideLand__9daAlink_cFv */
//	800C48B4: 80452CC0 (lit_6108)
//	800C48B8: 80452D24 (lit_7450)
//	800C48BC: 80270740 (cLib_chaseF__FPfff)
//	800C48D8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C48F4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C4920: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSlideLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procSlideLand__9daAlink_cFv.s"
}
#pragma pop

/* 800C494C-800C4B40 01F4+00 s=4 e=0 z=0  None .text      procFrontRollInit__9daAlink_cFv */
//	800C495C: 803621D8 (_savegpr_28)
//	800C4964: 8038D658 (lit_3757)
//	800C4968: 8038D658 (lit_3757)
//	800C496C: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800C49A8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C49C4: 80452D44 (lit_7977)
//	800C49DC: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800C4A64: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800C4AB4: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800C4B04: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800C4B14: 8026F708 (SetR__8cM3dGSphFf)
//	800C4B2C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRollInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRollInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C4B40-800C4F14 03D4+00 s=1 e=0 z=0  None .text      procFrontRoll__9daAlink_cFv */
//	800C4B50: 803621DC (_savegpr_29)
//	800C4B68: 803A37C0 (__vt__8cM3dGPla)
//	800C4B6C: 803A37C0 (__vt__8cM3dGPla)
//	800C4B78: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	800C4B88: 80452CC0 (lit_6108)
//	800C4B8C: 80452DD8 (lit_11470)
//	800C4B90: 80270740 (cLib_chaseF__FPfff)
//	800C4B98: 80452CA4 (lit_6021)
//	800C4BAC: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4BB0: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4BC0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C4BDC: 80452CBC (lit_6041)
//	800C4BE0: 800DD008 (setUpperGuardAnime__9daAlink_cFf)
//	800C4BE8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C4C00: 804061C0 (g_dComIfG_gameInfo)
//	800C4C04: 804061C0 (g_dComIfG_gameInfo)
//	800C4C10: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800C4C1C: 80452CA4 (lit_6021)
//	800C4C2C: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4C30: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4C44: 80452CC0 (lit_6108)
//	800C4C5C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C4C68: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4C6C: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4C8C: 80452CC0 (lit_6108)
//	800C4C90: 80452DD8 (lit_11470)
//	800C4C94: 80270740 (cLib_chaseF__FPfff)
//	800C4C9C: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800C4CC8: 800D34D8 (procCutFinishInit__9daAlink_cFi)
//	800C4CD8: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C4CE8: 80452CC0 (lit_6108)
//	800C4CEC: 80452DD8 (lit_11470)
//	800C4CF0: 80270740 (cLib_chaseF__FPfff)
//	800C4D30: 804061C0 (g_dComIfG_gameInfo)
//	800C4D34: 804061C0 (g_dComIfG_gameInfo)
//	800C4D44: 8007519C (GetPolyAttackThrough__4dBgSFRC13cBgS_PolyInfo)
//	800C4D58: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800C4D78: 80270E24 (cLib_distanceAngleS__Fss)
//	800C4D7C: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4D80: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4DC4: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800C4DF8: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800C4E10: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800C4E24: 800C5160 (procFrontRollSuccessInit__9daAlink_cFv)
//	800C4E30: 800C4F14 (procFrontRollCrashInit__9daAlink_cFv)
//	800C4E3C: 80452DF0 (lit_13382)
//	800C4E40: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800C4E4C: 80452CC0 (lit_6108)
//	800C4E54: 80452CB8 (lit_6040)
//	800C4E60: 804061C0 (g_dComIfG_gameInfo)
//	800C4E64: 804061C0 (g_dComIfG_gameInfo)
//	800C4E78: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800C4E80: 800D20B4 (checkForceSwordSwing__9daAlink_cFv)
//	800C4E98: 80452E04 (lit_13794)
//	800C4EA4: 80452DC0 (lit_10193)
//	800C4EC8: 80452CC0 (lit_6108)
//	800C4ECC: 80452CB8 (lit_6040)
//	800C4ED0: 80270740 (cLib_chaseF__FPfff)
//	800C4ED8: 80452D44 (lit_7977)
//	800C4EEC: 803A37C0 (__vt__8cM3dGPla)
//	800C4EF0: 803A37C0 (__vt__8cM3dGPla)
//	800C4F00: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRoll() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRoll__9daAlink_cFv.s"
}
#pragma pop

/* 800C4F14-800C4FFC 00E8+00 s=1 e=0 z=0  None .text      procFrontRollCrashInit__9daAlink_cFv */
//	800C4F2C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C4F38: 80452CC0 (lit_6108)
//	800C4F3C: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4F40: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4F50: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800C4F54: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4F58: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C4F7C: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800C4F80: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800C4FB8: 800C1CEC (setFrontRollCrashShock__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRollCrashInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRollCrashInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C4FFC-800C5160 0164+00 s=1 e=0 z=0  None .text      procFrontRollCrash__9daAlink_cFv */
//	800C5028: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C503C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C5048: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C504C: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C5070: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C5078: 80452DC0 (lit_10193)
//	800C5094: 80452D48 (lit_8130)
//	800C50DC: 80452CC0 (lit_6108)
//	800C50EC: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C50F0: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C50F8: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRollCrash() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRollCrash__9daAlink_cFv.s"
}
#pragma pop

/* 800C5160-800C5240 00E0+00 s=3 e=0 z=0  None .text      procFrontRollSuccessInit__9daAlink_cFv */
//	800C518C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C5198: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C519C: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C51A4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C51A8:
//80452CC0 (lit_6108) 	800C51C0: 800C1CEC (setFrontRollCrashShock__9daAlink_cFUc) 	800C51D4:
//80452CC4 (lit_6109) 	800C51E4: 80425544 (l_halfAtnWaitBaseAnime) 	800C51E8: 80425544
//(l_halfAtnWaitBaseAnime) 	800C5210: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRollSuccessInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRollSuccessInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C5240-800C5328 00E8+00 s=1 e=0 z=0  None .text      procFrontRollSuccess__9daAlink_cFv */
//	800C5274: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C5290: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C529C: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C52A0: 8038D7BC (m__23daAlinkHIO_frontRoll_c0)
//	800C52CC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C52D4: 80452D48 (lit_8130)
//	800C52F8: 80452D34 (lit_7710)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRollSuccess() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRollSuccess__9daAlink_cFv.s"
}
#pragma pop

/* 800C5328-800C5484 015C+00 s=3 e=0 z=0  None .text      procSideRollInit__9daAlink_cFi */
//	800C5338: 803621DC (_savegpr_29)
//	800C5344: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800C5354: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C53A0: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800C53A4: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800C53B8: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800C53BC: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800C53C0: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800C53DC: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800C53E0: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800C5400: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800C5424: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800C5470: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSideRollInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSideRollInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C5484-800C5700 027C+00 s=1 e=0 z=0  None .text      procSideRoll__9daAlink_cFv */
//	800C5494: 803621DC (_savegpr_29)
//	800C54B4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800C54CC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C54FC: 800D102C (checkCutFinishJumpUp__9daAlink_cFv)
//	800C5514: 803A37C0 (__vt__8cM3dGPla)
//	800C5518: 803A37C0 (__vt__8cM3dGPla)
//	800C5528: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	800C5538: 80452CC0 (lit_6108)
//	800C553C: 80452DD8 (lit_11470)
//	800C5540: 80270740 (cLib_chaseF__FPfff)
//	800C5554: 80452CBC (lit_6041)
//	800C5558: 800DD008 (setUpperGuardAnime__9daAlink_cFf)
//	800C5560: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C5578: 804061C0 (g_dComIfG_gameInfo)
//	800C557C: 804061C0 (g_dComIfG_gameInfo)
//	800C5588: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800C559C: 800737E4 (LockonTruth__12dAttention_cFv)
//	800C55D4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C55EC: 800B1B28 (checkNotJumpSinkLimit__9daAlink_cFv)
//	800C55FC: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800C5600: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800C5614: 800D3ADC (procCutFinishJumpUpInit__9daAlink_cFv)
//	800C5620: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800C5624: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800C5648: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C5658: 80452CC0 (lit_6108)
//	800C565C: 804531B4 (lit_52234)
//	800C5660: 80270740 (cLib_chaseF__FPfff)
//	800C566C: 80452DC8 (lit_10286)
//	800C5670: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800C567C: 80452CC0 (lit_6108)
//	800C5684: 80452CB8 (lit_6040)
//	800C5690: 804061C0 (g_dComIfG_gameInfo)
//	800C5694: 804061C0 (g_dComIfG_gameInfo)
//	800C56A8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800C56B0: 80452DC0 (lit_10193)
//	800C56CC: 80452CC0 (lit_6108)
//	800C56D0: 80452C98 (lit_5943)
//	800C56D4: 80270740 (cLib_chaseF__FPfff)
//	800C56D8: 803A37C0 (__vt__8cM3dGPla)
//	800C56DC: 803A37C0 (__vt__8cM3dGPla)
//	800C56EC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSideRoll() {
    nofralloc
#include "asm/d/a/d_a_alink/procSideRoll__9daAlink_cFv.s"
}
#pragma pop

/* 800C5700-800C57A4 00A4+00 s=2 e=0 z=0  None .text      backJumpSpeedDec__9daAlink_cFv */
//	800C5720: 804061C0 (g_dComIfG_gameInfo)
//	800C5724: 804061C0 (g_dComIfG_gameInfo)
//	800C5730: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800C5740: 80075D0C (dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo)
//	800C574C: 80452CC0 (lit_6108)
//	800C5754: 80439A20 (sincosTable___5JMath)
//	800C5758: 80439A20 (sincosTable___5JMath)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::backJumpSpeedDec() {
    nofralloc
#include "asm/d/a/d_a_alink/backJumpSpeedDec__9daAlink_cFv.s"
}
#pragma pop

/* 800C57A4-800C5964 01C0+00 s=6 e=0 z=0  None .text      procBackJumpInit__9daAlink_cFi */
//	800C57B4: 803621D4 (_savegpr_27)
//	800C57D8: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800C57F8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C580C: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800C5810: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800C5818: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C581C:
//8038DD44
//(m__21daAlinkHIO_cutDown_c0) 	800C5820: 8038DD44 (m__21daAlinkHIO_cutDown_c0) 	800C585C:
//8038D82C (m__22daAlinkHIO_backJump_c0) 	800C5860: 8038D82C (m__22daAlinkHIO_backJump_c0)
//800C5864: 800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c)
//800C5868: 8038D82C (m__22daAlinkHIO_backJump_c0) 	800C586C: 8038D82C (m__22daAlinkHIO_backJump_c0)
//800C58F4: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss) 	800C5904: 80452F1C (lit_20991)
//800C5950: 80362220
//(_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBackJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBackJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C5964-800C5A54 00F0+00 s=1 e=0 z=0  None .text      procBackJump__9daAlink_cFv */
//	800C59A0: 800D13E4 (checkCutTurnInput__9daAlink_cCFv)
//	800C59BC: 800D1424 (getCutTurnDirection__9daAlink_cCFv)
//	800C59C8: 800C5700 (backJumpSpeedDec__9daAlink_cFv)
//	800C59DC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C59F0: 800C5A54 (procBackJumpLandInit__9daAlink_cFi)
//	800C5A0C: 8038D82C (m__22daAlinkHIO_backJump_c0)
//	800C5A10: 8038D82C (m__22daAlinkHIO_backJump_c0)
//	800C5A30: 800C6A48 (procFallInit__9daAlink_cFif)
//	800C5A38: 800B994C (checkItemChangeFromButton__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBackJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procBackJump__9daAlink_cFv.s"
}
#pragma pop

/* 800C5A54-800C5AF0 009C+00 s=1 e=0 z=0  None .text      procBackJumpLandInit__9daAlink_cFi */
//	800C5A74: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C5A80: 8038D82C (m__22daAlinkHIO_backJump_c0)
//	800C5A84: 8038D82C (m__22daAlinkHIO_backJump_c0)
//	800C5A8C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C5A90:
//80452CC0 (lit_6108) 	800C5AA8: 801211C0 (setFootEffectProcType__9daAlink_cFi) 	800C5AD0:
//800B5C64 (setStepLandVibration__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBackJumpLandInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBackJumpLandInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C5AF0-800C5C28 0138+00 s=1 e=0 z=0  None .text      procBackJumpLand__9daAlink_cFv */
//	800C5B00: 803621DC (_savegpr_29)
//	800C5B30: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C5B48: 804061C0 (g_dComIfG_gameInfo)
//	800C5B4C: 804061C0 (g_dComIfG_gameInfo)
//	800C5B58: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800C5B6C: 800737E4 (LockonTruth__12dAttention_cFv)
//	800C5BA4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C5BB0: 8038D82C (m__22daAlinkHIO_backJump_c0)
//	800C5BB4: 8038D82C (m__22daAlinkHIO_backJump_c0)
//	800C5BE0: 800D13E4 (checkCutTurnInput__9daAlink_cCFv)
//	800C5BF8: 800D47DC (procCutTurnInit__9daAlink_cFii)
//	800C5C08: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C5C14: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBackJumpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procBackJumpLand__9daAlink_cFv.s"
}
#pragma pop

/* 800C5C28-800C5CA4 007C+00 s=1 e=0 z=0  None .text      procSlipInit__9daAlink_cFv */
//	800C5C40: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C5C4C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C5C50: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C5C54: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C5C5C:
//8038D6BC (m__18daAlinkHIO_move_c0) 	800C5C60: 8038D6BC (m__18daAlinkHIO_move_c0) 	800C5C80:
//801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSlipInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSlipInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C5CA4-800C5E68 01C4+00 s=1 e=0 z=0  None .text      procSlip__9daAlink_cFv */
//	800C5CBC: 80452CC0 (lit_6108)
//	800C5CC0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C5CC4: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C5CCC: 80270740 (cLib_chaseF__FPfff)
//	800C5CD4: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800C5CE4: 80452CA4 (lit_6021)
//	800C5D0C: 80452C98 (lit_5943)
//	800C5D24: 800C3C3C (procMoveTurnInit__9daAlink_cFi)
//	800C5D34: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C5D6C: 80452CC0 (lit_6108)
//	800C5D7C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C5D8C: 80452DD8 (lit_11470)
//	800C5DB8: 80452DD8 (lit_11470)
//	800C5DC4: 80439A20 (sincosTable___5JMath)
//	800C5DC8: 80439A20 (sincosTable___5JMath)
//	800C5DE0: 80452D00 (lit_6895)
//	800C5E0C: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800C5E1C: 80075D0C (dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo)
//	800C5E28: 80452CC0 (lit_6108)
//	800C5E38: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C5E4C: 800BF1CC (seStartMapInfoLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSlip() {
    nofralloc
#include "asm/d/a/d_a_alink/procSlip__9daAlink_cFv.s"
}
#pragma pop

/* 800C5E68-800C61EC 0384+00 s=4 e=0 z=0  None .text      procAutoJumpInit__9daAlink_cFi */
//	800C5E78: 803621D4 (_savegpr_27)
//	800C5EAC: 80452CBC (lit_6041)
//	800C5EB0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800C5EC0: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800C5EE4: 800C70F8 (procSmallJumpInit__9daAlink_cFi)
//	800C5EF4: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C5F54: 80452CC0 (lit_6108)
//	800C5F58: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C5F5C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C5F64: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C5F8C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C5F90: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C5F94: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C5FA4:
//80452CC0 (lit_6108) 	800C5FB0: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//800C5FDC: 8038E068 (m__22daAlinkHIO_autoJump_c0) 	800C5FE0: 8038E068 (m__22daAlinkHIO_autoJump_c0)
// 800C5FEC: 80452D9C (lit_9053) 	800C6034: 80452CE0 (lit_6845) 	800C6040: 80392094
// (d_a_d_a_alink__stringBase0) 	800C6044: 80392094 (d_a_d_a_alink__stringBase0) 	800C604C: 8009DA60
//(checkStageName__9daAlink_cFPCc) 	800C6058: 80452D38 (lit_7807) 	800C6060: 80452D9C (lit_9053)
//	800C606C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6070: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6084: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6088: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C60A4: 800E3F20 (checkGrabRooster__9daAlink_cFv)
//	800C60C4: 80452EAC (lit_16641)
//	800C60F0: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C60F4: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6120: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6124: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C613C: 80439A20 (sincosTable___5JMath)
//	800C6140: 80439A20 (sincosTable___5JMath)
//	800C6174: 80425514 (l_waitBaseAnime)
//	800C6178: 80425514 (l_waitBaseAnime)
//	800C61D8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procAutoJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procAutoJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532E4-804532E8 0004+00 s=1 e=0 z=0  None .sdata2    @73781 */
SECTION_SDATA2 static f32 lit_73781 = 2.0f / 3.0f;

/* 800C61EC-800C66DC 04F0+00 s=1 e=0 z=0  None .text      procAutoJump__9daAlink_cFv */
//	800C61FC: 803621D4 (_savegpr_27)
//	800C6214: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800C6220: 80452CA4 (lit_6021)
//	800C6238: 80452CC0 (lit_6108)
//	800C623C: 80452DF8 (lit_13700)
//	800C6248: 80270740 (cLib_chaseF__FPfff)
//	800C6254: 800E3F20 (checkGrabRooster__9daAlink_cFv)
//	800C6268: 80452DA0 (lit_9054)
//	800C626C: 80270740 (cLib_chaseF__FPfff)
//	800C6278: 80452CA4 (lit_6021)
//	800C6288: 80452CC0 (lit_6108)
//	800C628C: 80452DA0 (lit_9054)
//	800C6290: 80270740 (cLib_chaseF__FPfff)
//	800C62BC: 800B5C34 (setLandPassiveData__9daAlink_cFv)
//	800C62D4: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	800C62E8: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	800C62F0: 800B74B4 (checkUpperItemActionFly__9daAlink_cFv)
//	800C6318: 800B5CCC (checkLandAction__9daAlink_cFi)
//	800C6324: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800C633C: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800C6348: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	800C6370: 801016AC (procRoofSwitchHangInit__9daAlink_cFP10fopAc_ac_c)
//	800C638C: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	800C639C: 800B69CC (checkCutJumpInFly__9daAlink_cFv)
//	800C63E0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800C63F4: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	800C6408: 800E3F20 (checkGrabRooster__9daAlink_cFv)
//	800C6418: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C641C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C642C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800C6440: 80452CC4 (lit_6109)
//	800C6444: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800C6490: 80452CBC (lit_6041)
//	800C649C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800C64A8: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C64AC: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C64B4: 804532E4 (lit_73781)
//	800C64C4: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800C64CC: 80452CA4 (lit_6021)
//	800C64F4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C6534: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C6550: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C6558: 800B5BC0 (setFallVoice__9daAlink_cFv)
//	800C655C: 80452D88 (lit_8782)
//	800C657C: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800C6580: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800C6598: 80452CC0 (lit_6108)
//	800C65A0: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C65D4: 800E3F20 (checkGrabRooster__9daAlink_cFv)
//	800C65E4: 80452CBC (lit_6041)
//	800C65F0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800C6604: 80452CC0 (lit_6108)
//	800C6608: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C660C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6614: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C6630: 80452CB8 (lit_6040)
//	800C6634: 80452CC0 (lit_6108)
//	800C663C: 80452CC4 (lit_6109)
//	800C6640: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
//	800C6664: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C6678: 80452CC0 (lit_6108)
//	800C667C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6680: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6688: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C6698: 800E3F20 (checkGrabRooster__9daAlink_cFv)
//	800C66A8: 80452CC0 (lit_6108)
//	800C66BC: 800B994C (checkItemChangeFromButton__9daAlink_cFv)
//	800C66C8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procAutoJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procAutoJump__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532E8-804532EC 0004+00 s=1 e=0 z=0  None .sdata2    @73790 */
SECTION_SDATA2 static f32 lit_73790 = 92.0f;

/* 800C66DC-800C6798 00BC+00 s=1 e=0 z=0  None .text      procDiveJumpInit__9daAlink_cFv */
//	800C66F4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C6700: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6704: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C670C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C671C:
//800C12DC (deleteEquipItem__9daAlink_cFii) 	800C6728: 800E2580 (setHeavyBoots__9daAlink_cFi)
//800C672C: 8038E068 (m__22daAlinkHIO_autoJump_c0) 	800C6730: 8038E068 (m__22daAlinkHIO_autoJump_c0)
// 800C675C: 804532E8 (lit_73790)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDiveJumpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDiveJumpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C6798-800C6850 00B8+00 s=1 e=0 z=0  None .text      procDiveJump__9daAlink_cFv */
//	800C67BC: 800C494C (procFrontRollInit__9daAlink_cFv)
//	800C67D4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C67E8: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C67EC: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C67F4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C6818:
//80452CC4 (lit_6109) 	800C682C: 80452CC0 (lit_6108) 	800C6830: 80452C98 (lit_5943) 	800C6834:
//80270740 (cLib_chaseF__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDiveJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procDiveJump__9daAlink_cFv.s"
}
#pragma pop

/* 800C6850-800C692C 00DC+00 s=1 e=0 z=0  None .text      procRollJumpInit__9daAlink_cFv */
//	800C6868: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C6874: 80452CC0 (lit_6108)
//	800C6878: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C687C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6884: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C68C4: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRollJumpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procRollJumpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C692C-800C6A48 011C+00 s=1 e=0 z=0  None .text      procRollJump__9daAlink_cFv */
//	800C6950: 800B5CCC (checkLandAction__9daAlink_cFi)
//	800C695C: 80452CC0 (lit_6108)
//	800C696C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6970: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6978: 800C6A48 (procFallInit__9daAlink_cFif)
//	800C6984: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6988: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C69DC: 80439A20 (sincosTable___5JMath)
//	800C69E0: 80439A20 (sincosTable___5JMath)
//	800C6A00: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6A04: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6A1C: 80270740 (cLib_chaseF__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRollJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procRollJump__9daAlink_cFv.s"
}
#pragma pop

/* 800C6A48-800C6D20 02D8+00 s=30 e=0 z=0  None .text      procFallInit__9daAlink_cFif */
//	800C6A60: 803621D4 (_savegpr_27)
//	800C6AA4: 804061C0 (g_dComIfG_gameInfo)
//	800C6AA8: 804061C0 (g_dComIfG_gameInfo)
//	800C6AEC: 800EF394 (horseGetOffEnd__9daAlink_cFv)
//	800C6AF8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C6B34: 80452CC0 (lit_6108)
//	800C6B58: 80439A20 (sincosTable___5JMath)
//	800C6B5C: 80439A20 (sincosTable___5JMath)
//	800C6B68: 80452D3C (lit_7808)
//	800C6BAC: 80452CC0 (lit_6108)
//	800C6BB4: 80452CB8 (lit_6040)
//	800C6BC0: 804061C0 (g_dComIfG_gameInfo)
//	800C6BC4: 804061C0 (g_dComIfG_gameInfo)
//	800C6BD8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800C6BF0: 800D72BC (setDamagePoint__9daAlink_cFiiii)
//	800C6C3C: 80452CC0 (lit_6108)
//	800C6C44: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C6C4C: 800BF4E0 (resetBasAnime__9daAlink_cFv)
//	800C6C6C: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800C6C7C: 80452CB8 (lit_6040)
//	800C6D0C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFallInit(int param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procFallInit__9daAlink_cFif.s"
}
#pragma pop

/* 800C6D20-800C6F18 01F8+00 s=1 e=0 z=0  None .text      procFall__9daAlink_cFv */
//	800C6D48: 80452CC0 (lit_6108)
//	800C6D4C: 80452DA0 (lit_9054)
//	800C6D50: 80270740 (cLib_chaseF__FPfff)
//	800C6D74: 800B5C34 (setLandPassiveData__9daAlink_cFv)
//	800C6D7C: 800B74B4 (checkUpperItemActionFly__9daAlink_cFv)
//	800C6DA4: 800B5CCC (checkLandAction__9daAlink_cFi)
//	800C6DAC: 804061C0 (g_dComIfG_gameInfo)
//	800C6DB0: 804061C0 (g_dComIfG_gameInfo)
//	800C6DE8: 800B02BC (setFrontWallType__9daAlink_cFv)
//	800C6DFC: 80452CA4 (lit_6021)
//	800C6E18: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800C6E34: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	800C6E54: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	800C6E6C: 800B5BC0 (setFallVoice__9daAlink_cFv)
//	800C6E70: 80452D88 (lit_8782)
//	800C6E90: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800C6E94: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800C6EAC: 80452CC0 (lit_6108)
//	800C6EB4: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C6ED4: 800B69CC (checkCutJumpInFly__9daAlink_cFv)
//	800C6EF8: 800B994C (checkItemChangeFromButton__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFall() {
    nofralloc
#include "asm/d/a/d_a_alink/procFall__9daAlink_cFv.s"
}
#pragma pop

/* 800C6F18-800C6FE4 00CC+00 s=6 e=0 z=0  None .text      procLandInit__9daAlink_cFf */
//	800C6F3C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C6F40: 80452CC0 (lit_6108)
//	800C6F50: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6F54: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C6F5C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C6F64:
//800E3F20 (checkGrabRooster__9daAlink_cFv) 	800C6F70: 80452C98 (lit_5943) 	800C6F88: 80452FF0
//(lit_28286) 	800C6FA8: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLandInit(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procLandInit__9daAlink_cFf.s"
}
#pragma pop

/* 800C6FE4-800C70F8 0114+00 s=1 e=0 z=0  None .text      procLand__9daAlink_cFv */
//	800C7004: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C7018: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C7024: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C7028: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C7040: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C704C: 80452D24 (lit_7450)
//	800C7050: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800C7090: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800C7094: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800C70B0: 80452CC0 (lit_6108)
//	800C70B8: 80452CB8 (lit_6040)
//	800C70C4: 804061C0 (g_dComIfG_gameInfo)
//	800C70C8: 804061C0 (g_dComIfG_gameInfo)
//	800C70D8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procLand__9daAlink_cFv.s"
}
#pragma pop

/* 800C70F8-800C72D4 01DC+00 s=3 e=0 z=0  None .text      procSmallJumpInit__9daAlink_cFi */
//	800C7118: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C712C: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C7130: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C7138: 80452D44 (lit_7977)
//	800C7144: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800C714C: 800B48D0 (setJumpMode__9daAlink_cFv)
//	800C7150: 80452D20 (lit_7449)
//	800C7184: 80425514 (l_waitBaseAnime)
//	800C7188: 80425514 (l_waitBaseAnime)
//	800C71AC: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C71B0: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C71B4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C71C0:
//80452D78 (lit_8676) 	800C71D8: 80452CE0 (lit_6845) 	800C7220: 80439A20 (sincosTable___5JMath)
//800C7224: 80439A20 (sincosTable___5JMath) 	800C722C: 80452F18 (lit_20824) 	800C7258: 80270C04
//(cLib_targetAngleY__FPC3VecPC3Vec) 	800C7270: 800E2580 (setHeavyBoots__9daAlink_cFi) 800C7288:
// 80452CC0 (lit_6108) 	800C7290: 80425514 (l_waitBaseAnime) 	800C7294: 80425514 (l_waitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSmallJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSmallJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C72D4-800C74D4 0200+00 s=1 e=0 z=0  None .text      procSmallJump__9daAlink_cFv */
//	800C72F4: 800F4008 (checkCanoeJumpRide__9daAlink_cFv)
//	800C731C: 800B5CCC (checkLandAction__9daAlink_cFi)
//	800C7340: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C7344: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C734C: 800C6A48 (procFallInit__9daAlink_cFif)
//	800C7364: 80452D44 (lit_7977)
//	800C7368: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800C7378: 800B48D0 (setJumpMode__9daAlink_cFv)
//	800C737C: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C7380: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C7398: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800C73B0: 80452D14 (lit_7307)
//	800C73B4: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C73B8: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C73D0: 804532C0 (lit_70084)
//	800C73E8: 80452CC0 (lit_6108)
//	800C7404: 80452D14 (lit_7307)
//	800C7410: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C7414: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C7434: 80452CC0 (lit_6108)
//	800C74B0: 80270540 (cLib_addCalcAngleS__FPsssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSmallJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procSmallJump__9daAlink_cFv.s"
}
#pragma pop

/* 800C74D4-800C755C 0088+00 s=1 e=0 z=0  None .text      procStepMoveInit__9daAlink_cFv */
//	800C74EC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C74F8: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C74FC: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C7504: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C7508:
//80452C98 (lit_5943) 	800C7518: 80452CC0 (lit_6108) 	800C7528: 80425514 (l_waitBaseAnime)
//800C752C: 80425514 (l_waitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procStepMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procStepMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C755C-800C7690 0134+00 s=1 e=0 z=0  None .text      procStepMove__9daAlink_cFv */
//	800C7590: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C75A4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C75B0: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C75B4: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C75D4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C75E8: 80452CC0 (lit_6108)
//	800C75F8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C760C: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C7610: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800C7618: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800C761C:
//80439A20 (sincosTable___5JMath) 	800C7620: 80439A20 (sincosTable___5JMath) 	800C7638: 80452D14
//(lit_7307)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procStepMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procStepMove__9daAlink_cFv.s"
}
#pragma pop

/* 800C7690-800C76F8 0068+00 s=1 e=0 z=0  None .text      procCrouchInit__9daAlink_cFv */
//	800C76A8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C76C4: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800C76C8: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800C76D4: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrouchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrouchInit__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532EC-804532F0 0004+00 s=1 e=0 z=0  None .sdata2    @74138 */
SECTION_SDATA2 static f32 lit_74138 = -80.0f;

/* 800C76F8-800C77F4 00FC+00 s=1 e=0 z=0  None .text      procCrouch__9daAlink_cFv */
//	800C7708: 803621DC (_savegpr_29)
//	800C7714: 80452CC0 (lit_6108)
//	800C7718: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C771C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C7724: 80270740 (cLib_chaseF__FPfff)
//	800C772C: 800B3500 (checkAttentionState__9daAlink_cFv)
//	800C774C: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800C7768: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800C777C: 804532EC (lit_74138)
//	800C7798: 800737E4 (LockonTruth__12dAttention_cFv)
//	800C77C0: 800DCF64 (checkGuardAccept__9daAlink_cFv)
//	800C77D4: 800BAF08 (checkNextActionFromCrouch__9daAlink_cFi)
//	800C77E0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrouch() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrouch__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804255F8-80425604 000C+00 s=0 e=0 z=0  None .bss       @4419 */
u8 lit_4419[12];

/* 80425604-80425610 000C+00 s=0 e=0 z=0  None .bss       l_sumouBaseAnimeSp */
u8 l_sumouBaseAnimeSp[12];

/* 80425610-8042561C 000C+00 s=0 e=0 z=0  None .bss       @4420 */
u8 lit_4420[12];

/* 8042561C-80425628 000C+00 s=37 e=0 z=0  None .bss       l_wolfBaseAnime */
static f32 l_wolfBaseAnime[3];

/* 800C77F4-800C7C64 0470+00 s=4 e=0 z=0  None .text      procCoMetamorphoseInit__9daAlink_cFv */
//	800C780C: 803621D4 (_savegpr_27)
//	800C7818: 804061C0 (g_dComIfG_gameInfo)
//	800C781C: 804061C0 (g_dComIfG_gameInfo)
//	800C785C: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800C788C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C78B4: 80452CB8 (lit_6040)
//	800C78F4: 80452CC0 (lit_6108)
//	800C7924: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800C7934: 80392094 (d_a_d_a_alink__stringBase0)
//	800C7938: 80392094 (d_a_d_a_alink__stringBase0)
//	800C7940: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C7970: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	800C7974: 8042561C (l_wolfBaseAnime)
//	800C7978: 8042561C (l_wolfBaseAnime)
//	800C7990: 80452C98 (lit_5943)
//	800C7998: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C799C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C79B0: 80451018 (m_midnaActor__9daPy_py_c)
//	800C79C4: 801AC57C (dKy_darkworld_check__Fv)
//	800C79D4: 804061C0 (g_dComIfG_gameInfo)
//	800C79D8: 804061C0 (g_dComIfG_gameInfo)
//	800C79E4: 80032BEC (isTransformLV__21dSv_player_status_b_cCFi)
//	800C7A58: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800C7A64: 800BF79C (setMetamorphoseModel__9daAlink_cFi)
//	800C7A68: 80425514 (l_waitBaseAnime)
//	800C7A6C: 80425514 (l_waitBaseAnime)
//	800C7A84: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C7A88: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C7A94: 80439A20 (sincosTable___5JMath)
//	800C7A98: 80439A20 (sincosTable___5JMath)
//	800C7AB0: 80452D50 (lit_8247)
//	800C7ABC: 80452CD0 (lit_6238)
//	800C7AEC: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800C7AF8: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800C7AFC: 80452DA4 (lit_9138)
//	800C7B48: 80452D3C (lit_7808)
//	800C7B88: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800C7B98: 80075D0C (dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo)
//	800C7BAC: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800C7BF0: 803470B4 (PSVECSubtract)
//	800C7BF8: 80267150 (atan2sY_XZ__4cXyzCFv)
//	800C7C04: 803650D0 (abs)
//	800C7C24: 80452CC0 (lit_6108)
//	800C7C50: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoMetamorphoseInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoMetamorphoseInit__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532F0-804532F4 0004+00 s=1 e=0 z=0  None .sdata2    @74385 */
SECTION_SDATA2 static f32 lit_74385 = 1.0f / 26.0f;

/* 804532F4-804532F8 0004+00 s=1 e=0 z=0  None .sdata2    @74386 */
SECTION_SDATA2 static f32 lit_74386 = -64.0f;

/* 804532F8-80453300 0008+00 s=1 e=0 z=0  None .sdata2    @74387 */
SECTION_SDATA2 static f64 lit_74387 = 15.0;

/* 80453300-80453308 0008+00 s=1 e=0 z=0  None .sdata2    @74388 */
SECTION_SDATA2 static f64 lit_74388 = 49.0;

/* 80453308-80453310 0008+00 s=1 e=0 z=0  None .sdata2    @74389 */
SECTION_SDATA2 static f64 lit_74389 = 1.0;

/* 80453310-80453318 0008+00 s=1 e=0 z=0  None .sdata2    @74390 */
SECTION_SDATA2 static f64 lit_74390 = 1.0 / 14.0;

/* 80453318-80453320 0008+00 s=1 e=0 z=0  None .sdata2    @74391 */
SECTION_SDATA2 static f64 lit_74391 = -64.0;

/* 80453320-80453328 0008+00 s=1 e=0 z=0  None .sdata2    @74392 */
SECTION_SDATA2 static f64 lit_74392 = -15.0;

/* 80453328-80453330 0008+00 s=1 e=0 z=0  None .sdata2    @74393 */
SECTION_SDATA2 static f64 lit_74393 = 1.0 / 9.0;

/* 80453330-80453334 0004+00 s=1 e=0 z=0  None .sdata2    @74394 */
SECTION_SDATA2 static f32 lit_74394 = 49.0f;

/* 80453334-80453338 0004+00 s=1 e=0 z=0  None .sdata2    @74395 */
SECTION_SDATA2 static f32 lit_74395 = 1.0f / 36.0f;

/* 800C7C64-800C82E8 0684+00 s=1 e=0 z=0  None .text      procCoMetamorphose__9daAlink_cFv */
//	800C7C7C: 803621D8 (_savegpr_28)
//	800C7C84: 8038D658 (lit_3757)
//	800C7C88: 8038D658 (lit_3757)
//	800C7C98: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800C7CA8: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800C7CB0: 804061C0 (g_dComIfG_gameInfo)
//	800C7CB4: 804061C0 (g_dComIfG_gameInfo)
//	800C7CC0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800C7CE4: 80452CC0 (lit_6108)
//	800C7D4C: 804061C0 (g_dComIfG_gameInfo)
//	800C7D50: 804061C0 (g_dComIfG_gameInfo)
//	800C7D5C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800C7D7C: 80452CBC (lit_6041)
//	800C7D80: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	800C7D98: 80452CBC (lit_6041)
//	800C7D9C: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C7DD0: 8042561C (l_wolfBaseAnime)
//	800C7DD4: 8042561C (l_wolfBaseAnime)
//	800C7DDC: 80425514 (l_waitBaseAnime)
//	800C7DE0: 80425514 (l_waitBaseAnime)
//	800C7E04: 80452CBC (lit_6041)
//	800C7E08: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800C7E14: 800BF79C (setMetamorphoseModel__9daAlink_cFi)
//	800C7E18: 80425514 (l_waitBaseAnime)
//	800C7E1C: 80425514 (l_waitBaseAnime)
//	800C7E40: 80452CBC (lit_6041)
//	800C7E44: 801296A8 (setSingleAnimeWolfBaseMorf__9daAlink_cFQ29daAlink_c12daAlink_WANMf)
//	800C7E48: 8042561C (l_wolfBaseAnime)
//	800C7E4C: 8042561C (l_wolfBaseAnime)
//	800C7E68: 80452CBC (lit_6041)
//	800C7E84: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800C7E8C: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	800C7E90: 803DD470 (now__14mDoMtx_stack_c)
//	800C7E94: 803DD470 (now__14mDoMtx_stack_c)
//	800C7EA0: 80346D6C (PSMTXMultVec)
//	800C7EC8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C7F14: 80452CA4 (lit_6021)
//	800C7F34: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	800C7F58: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800C7F6C: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	800C7F74: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800C7F7C: 804061C0 (g_dComIfG_gameInfo)
//	800C7F80: 804061C0 (g_dComIfG_gameInfo)
//	800C7F8C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800C7FAC: 80452CBC (lit_6041)
//	800C7FB0: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	800C7FC8: 80452CBC (lit_6041)
//	800C7FCC: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C800C: 804061C0 (g_dComIfG_gameInfo)
//	800C8010: 804061C0 (g_dComIfG_gameInfo)
//	800C801C: 8003498C (onEventBit__11dSv_event_cFUs)
//	800C8040: 80452CB8 (lit_6040)
//	800C8044: 804532F0 (lit_74385)
//	800C8054: 80452CC0 (lit_6108)
//	800C8064: 804532F4 (lit_74386)
//	800C8084: 80452D48 (lit_8130)
//	800C8090: 804532F8 (lit_74387)
//	800C8094: 80453300 (lit_74388)
//	800C8098: 80453308 (lit_74389)
//	800C809C: 80453310 (lit_74390)
//	800C80C4: 80452CB8 (lit_6040)
//	800C80C8: 80452DF8 (lit_13700)
//	800C80D8: 80452CC0 (lit_6108)
//	800C80E8: 80452E64 (lit_14954)
//	800C8110: 80453318 (lit_74391)
//	800C8114: 80453310 (lit_74390)
//	800C813C: 80452D34 (lit_7710)
//	800C8148: 80453320 (lit_74392)
//	800C814C: 80453328 (lit_74393)
//	800C816C: 80452DF8 (lit_13700)
//	800C8178: 80452CB8 (lit_6040)
//	800C8188: 80452E64 (lit_14954)
//	800C818C: 80453330 (lit_74394)
//	800C81C8: 80452D84 (lit_8781)
//	800C81D0: 80452EE0 (lit_19379)
//	800C81E0: 80452D8C (lit_8783)
//	800C81E8: 80452D3C (lit_7808)
//	800C81F0: 80452CC0 (lit_6108)
//	800C8200: 80452CB8 (lit_6040)
//	800C821C: 80452C98 (lit_5943)
//	800C8220: 80453334 (lit_74395)
//	800C8234: 80452CB8 (lit_6040)
//	800C8240: 80452CB8 (lit_6040)
//	800C8244: 804531F8 (lit_55145)
//	800C824C: 80452D34 (lit_7710)
//	800C8260: 80452CC0 (lit_6108)
//	800C8270: 80452DE0 (lit_11673)
//	800C8278: 80101D70 (swimBgCheck__9daAlink_cFf)
//	800C8280: 80452CB8 (lit_6040)
//	800C8294: 80452CB0 (lit_6025)
//	800C82D4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoMetamorphose() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoMetamorphose__9daAlink_cFv.s"
}
#pragma pop

/* 800C82E8-800C83A0 00B8+00 s=2 e=0 z=0  None .text      procCoMetamorphoseOnlyInit__9daAlink_cFv
 */
//	800C8300: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C8320: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800C836C: 80452CC0 (lit_6108)
//	800C8384: 800BB770 (setSpecialGravity__9daAlink_cFffi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoMetamorphoseOnlyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoMetamorphoseOnlyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C83A0-800C8460 00C0+00 s=1 e=0 z=0  None .text      procCoMetamorphoseOnly__9daAlink_cFv */
//	800C8404: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	800C8408: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	800C8410: 80452CBC (lit_6041)
//	800C8414: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	800C8420: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C8424: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C842C: 80452CBC (lit_6041)
//	800C8430: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800C8434: 804061C0 (g_dComIfG_gameInfo)
//	800C8438: 804061C0 (g_dComIfG_gameInfo)
//	800C8444: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoMetamorphoseOnly() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoMetamorphoseOnly__9daAlink_cFv.s"
}
#pragma pop

/* 800C8460-800C84D0 0070+00 s=2 e=0 z=0  None .text      procFloorDownReboundInit__9daAlink_cFv */
//	800C8478: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C8484: 80452DA8 (lit_9652)
//	800C8488: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C848C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C8498: 80452D30 (lit_7625)
//	800C849C: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800C84A0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFloorDownReboundInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFloorDownReboundInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C84D0-800C854C 007C+00 s=1 e=0 z=0  None .text      procFloorDownRebound__9daAlink_cFv */
//	800C84F0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800C8504: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C8510: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C8514: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800C852C: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFloorDownRebound() {
    nofralloc
#include "asm/d/a/d_a_alink/procFloorDownRebound__9daAlink_cFv.s"
}
#pragma pop

/* 800C854C-800C85D8 008C+00 s=1 e=0 z=0  None .text
 * procGoronRideWaitInit__9daAlink_cFP10fopAc_ac_c              */
//	800C856C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800C8580: 80452CC0 (lit_6108)
//	800C85AC: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C85B0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C85B8: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoronRideWaitInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procGoronRideWaitInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800C85D8-800C8700 0128+00 s=1 e=0 z=0  None .text      procGoronRideWait__9daAlink_cFv */
//	800C85F0: 800A2280 (checkGoronRide__9daAlink_cFv)
//	800C8604: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800C8610: 80452CA4 (lit_6021)
//	800C8630: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C8664: 803650D0 (abs)
//	800C8668: 80452CB0 (lit_6025)
//	800C8684: 80452EC8 (lit_18706)
//	800C868C: 80452E08 (lit_14064)
//	800C8694: 80452CB8 (lit_6040)
//	800C86A4: 80452CB8 (lit_6040)
//	800C86B0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C86B4: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800C86BC: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C86C0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800C86D4: 80452CBC (lit_6041)
//	800C86D8: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoronRideWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoronRideWait__9daAlink_cFv.s"
}
#pragma pop

/* 800C8700-800CAFA8 28A8+00 s=1 e=0 z=0  None .text      execute__9daAlink_cFv */
//	800C8718: 803621D4 (_savegpr_27)
//	800C8720: 8038D658 (lit_3757)
//	800C8724: 8038D658 (lit_3757)
//	800C8728: 80140070 (loadModelDVD__9daAlink_cFv)
//	800C8734: 801414F4 (checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0)
//	800C8740: 80451018 (m_midnaActor__9daPy_py_c)
//	800C874C: 80141A84 (onNoServiceWait__9daMidna_cFv)
//	800C8764: 80452CB8 (lit_6040)
//	800C8768: 80453008 (lit_32072)
//	800C8784: 80266B84 (__ml__4cXyzCFf)
//	800C8790: 800977D8 (__as__4cXyzFRC4cXyz)
//	800C879C: 80009184 (__dt__4cXyzFv)
//	800C87C0: 801414E8 (checkBoarSingleBattle__9daPy_py_cCFv)
//	800C87CC: 801414D8 (dComIfGp_getHorseActor__Fv)
//	800C87D8: 801414D8 (dComIfGp_getHorseActor__Fv)
//	800C87F4: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	800C8814: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C883C: 801414C0 (checkNoResetFlg2__9daPy_py_cCFQ29daPy_py_c9daPy_FLG2)
//	800C885C: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	800C886C: 80110840 (offKandelaarModel__9daAlink_cFv)
//	800C8880: 800A4910 (setSelectEquipItem__9daAlink_cFi)
//	800C8884: 801414A4 (dComIfGp_event_runCheck__Fv)
//	800C8890: 80392094 (d_a_d_a_alink__stringBase0)
//	800C8894: 80392094 (d_a_d_a_alink__stringBase0)
//	800C88A4: 80141464 (dComIfGp_evmng_getMyStaffId__FPCcP10fopAc_ac_ci)
//	800C88B0: 80141450 (checkCommandDoor__11dEvt_info_cFv)
//	800C88C0: 80141438 (dComIfGp_event_chkEventFlag__FUs)
//	800C88E4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800C8900: 8014141C (dComIfGp_getPlayerCameraID__Fi)
//	800C8910: 800977D8 (__as__4cXyzFRC4cXyz)
//	800C8918: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	800C892C: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C8938: 804061C0 (g_dComIfG_gameInfo)
//	800C893C: 804061C0 (g_dComIfG_gameInfo)
//	800C894C: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800C8960: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	800C8998: 80075774 (MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb)
//	800C89F8: 80075774 (MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb)
//	800C8A04: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800C8A30: 80452DA0 (lit_9054)
//	800C8A64: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C8A7C: 80452DA4 (lit_9138)
//	800C8A8C: 804061C0 (g_dComIfG_gameInfo)
//	800C8A90: 804061C0 (g_dComIfG_gameInfo)
//	800C8AA0: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800C8AB4: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	800C8AD8: 80141404 (ChkGroundHit__9dBgS_AcchCFv)
//	800C8B04: 80075774 (MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb)
//	800C8B28: 80075774 (MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb)
//	800C8B30: 80452DA0 (lit_9054)
//	800C8B50: 800977D8 (__as__4cXyzFRC4cXyz)
//	800C8B74: 801413F8 (checkResetFlg0__9daPy_py_cCFQ29daPy_py_c10daPy_RFLG0)
//	800C8B84: 800D0ECC (checkCutDashAnime__9daAlink_cCFv)
//	800C8BA4: 80450FC9 (struct_80450FC8)
//	800C8BA8: 80141AE8 (func_80141AE8)
//	800C8BB0: 800D0180 (offSetFlg__16daAlink_matAnm_cFv)
//	800C8BB8: 800D0180 (offSetFlg__16daAlink_matAnm_cFv)
//	800C8BD0: 801413D8 (checkSwordGet__9daPy_py_cFv)
//	800C8BF4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800C8C08: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800C8C14: 800B3220 (setRStatus__9daAlink_cFUc)
//	800C8C24: 800D0164 (set3DStatus__9daAlink_cFUcUc)
//	800C8C30: 800D014C (setMidnaTalkStatus__9daAlink_cFUc)
//	800C8C38: 801413CC (checkWolf__9daPy_py_cCFv)
//	800C8C4C: 800B3298 (setBStatus__9daAlink_cFUc)
//	800C8C58: 80127D50 (setWolfDigStatus__9daAlink_cFUc)
//	800C8C60: 8014139C (dComIfGs_isEventBit__FUs)
//	800C8C74: 80127D14 (setWolfSenceStatus__9daAlink_cFUc)
//	800C8C84: 80127D14 (setWolfSenceStatus__9daAlink_cFUc)
//	800C8CA8: 80392094 (d_a_d_a_alink__stringBase0)
//	800C8CAC: 80392094 (d_a_d_a_alink__stringBase0)
//	800C8CB4: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C8CC8: 800B3298 (setBStatus__9daAlink_cFUc)
//	800C8CD0: 801413D8 (checkSwordGet__9daPy_py_cFv)
//	800C8CE4: 800B3298 (setBStatus__9daAlink_cFUc)
//	800C8CF4: 800B3298 (setBStatus__9daAlink_cFUc)
//	800C8D10: 80141388 (checkCommandCatch__11dEvt_info_cFv)
//	800C8D20: 8014137C (setSpecialDemoType__11daPy_demo_cFv)
//	800C8D28: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800C8D30: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800C8D3C: 801414C0 (checkNoResetFlg2__9daPy_py_cCFQ29daPy_py_c9daPy_FLG2)
//	800C8D4C: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800C8D64: 8014136C (offNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2)
//	800C8D70: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800C8D78: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800C8D80: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800C8D88: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800C8D98: 80141A94 (setControllActorData__8daCrod_cFv)
//	800C8DA0: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800C8DA8: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800C8DB0: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800C8DB8: 800F3D58 (checkFishingRodAndLureItem__9daAlink_cCFv)
//	800C8DD8: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800C8DDC: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800C8DE4: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800C8DF4: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800C8E00: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800C8E08: 801413CC (checkWolf__9daPy_py_cCFv)
//	800C8E18: 80139048 (checkWolfLockData__9daAlink_cFv)
//	800C8E20: 800B2EA4 (setAtnList__9daAlink_cFv)
//	800C8E28: 801171F4 (setDemoData__9daAlink_cFv)
//	800C8E30: 800B271C (setStickData__9daAlink_cFv)
//	800C8E4C: 80101B44 (checkOxygenTimer__9daAlink_cFv)
//	800C8F60: 8014135C (offNoResetFlg1__9daPy_py_cFQ29daPy_py_c9daPy_FLG1)
//	800C8FEC: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	800C8FF8: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800C9004: 8014134C (dComIfGp_getEventManager__Fv)
//	800C9008: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	800C9024: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9028: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9030: 80368994 (strcmp)
//	800C9040: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9044: 80392094 (d_a_d_a_alink__stringBase0)
//	800C904C: 80368994 (strcmp)
//	800C9058: 80392094 (d_a_d_a_alink__stringBase0)
//	800C905C: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9064: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C9074: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9078: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9080: 80368994 (strcmp)
//	800C9090: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9094: 80392094 (d_a_d_a_alink__stringBase0)
//	800C909C: 80368994 (strcmp)
//	800C90A8: 80392094 (d_a_d_a_alink__stringBase0)
//	800C90AC: 80392094 (d_a_d_a_alink__stringBase0)
//	800C90B4: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C90C4: 80392094 (d_a_d_a_alink__stringBase0)
//	800C90C8: 80392094 (d_a_d_a_alink__stringBase0)
//	800C90D0: 80368994 (strcmp)
//	800C90E0: 80392094 (d_a_d_a_alink__stringBase0)
//	800C90E4: 80392094 (d_a_d_a_alink__stringBase0)
//	800C90EC: 80368994 (strcmp)
//	800C90FC: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9100: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9108: 80368994 (strcmp)
//	800C9118: 80392094 (d_a_d_a_alink__stringBase0)
//	800C911C: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9124: 80368994 (strcmp)
//	800C9130: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9134: 80392094 (d_a_d_a_alink__stringBase0)
//	800C913C: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800C914C: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9150: 80392094 (d_a_d_a_alink__stringBase0)
//	800C9158: 80368994 (strcmp)
//	800C9180: 80141340 (checkEndResetFlg1__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG1)
//	800C918C: 800C0310 (checkDungeon__9daAlink_cFv)
//	800C919C: 80141450 (checkCommandDoor__11dEvt_info_cFv)
//	800C91CC: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C91E0: 80141324 (dComIfGp_checkPlayerStatus1__FiUl)
//	800C91F0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800C9210: 8014134C (dComIfGp_getEventManager__Fv)
//	800C9214: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	800C921C: 80368994 (strcmp)
//	800C924C: 80141308 (dComIfGp_checkPlayerStatus0__FiUl)
//	800C926C: 801412F8 (dComIfGp_getEvent__Fv)
//	800C9270: 801412D4 (isOrderOK__14dEvt_control_cFv)
//	800C92A0: 80127CAC (offWolfEyeUp__9daAlink_cFv)
//	800C92B8: 801414F4 (checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0)
//	800C92E0: 801413CC (checkWolf__9daPy_py_cCFv)
//	800C92FC: 800B1488 (checkWaterPolygonUnder__9daAlink_cFv)
//	800C931C: 801412C4 (onNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0)
//	800C9340: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C9350: 800E3F20 (checkGrabRooster__9daAlink_cFv)
//	800C9360: 801412BC (fopAcM_GetName__FPv)
//	800C9374: 800E3CF4 (checkGrabCarryActor__9daAlink_cFv)
//	800C9384: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	800C938C: 800AD170 (allAnimePlay__9daAlink_cFv)
//	800C93A0: 800D7B18 (damageTimerCount__9daAlink_cFv)
//	800C93A8: 801412B0 (checkEquipHeavyBoots__9daPy_py_cCFv)
//	800C93BC: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	800C93CC: 800C05DC (checkNotHeavyBootsStage__9daAlink_cFv)
//	800C93E0: 80141324 (dComIfGp_checkPlayerStatus1__FiUl)
//	800C93F0: 801088A0 (checkHookshotRoofLv7Boss__9daAlink_cFv)
//	800C9404: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	800C940C: 80430188 (g_meter2_info)
//	800C9410: 80430188 (g_meter2_info)
//	800C9418: 8021C934 (onDirectUseItem__13dMeter2Info_cFi)
//	800C9420: 8011F9EC (checkWarpStart__9daAlink_cFv)
//	800C9428: 800D0138 (checkSpecialDemoMode__9daAlink_cCFv)
//	800C9444: 80115EC0 (checkDemoAction__9daAlink_cFv)
//	800C9458: 80118D7C (checkDeadAction__9daAlink_cFi)
//	800C946C: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C947C: 800B607C (checkAutoJumpAction__9daAlink_cFv)
//	800C9490: 80102B1C (checkSwimAction__9daAlink_cFi)
//	800C9498: 800D7C40 (checkDamageAction__9daAlink_cFv)
//	800C94B4: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	800C94C4: 800E2DC4 (cancelMagneBootsOn__9daAlink_cFv)
//	800C94CC: 800E0D8C (checkBoomerangCatchAction__9daAlink_cFv)
//	800C94D8: 8014135C (offNoResetFlg1__9daPy_py_cFQ29daPy_py_c9daPy_FLG1)
//	800C94E0: 801413CC (checkWolf__9daPy_py_cCFv)
//	800C94F0: 801392E4 (checkWolfComboCnt__9daAlink_cFv)
//	800C94F8: 800D0110 (checkWolfEnemyThrowAnime__9daAlink_cCFv)
//	800C9508: 80138C44 (checkWolfEnemyThrowAction__9daAlink_cFv)
//	800C9514: 800B7528 (checkItemButtonChange__9daAlink_cFv)
//	800C951C: 800BA914 (setItemAction__9daAlink_cFv)
//	800C9524: 800D1454 (checkComboCnt__9daAlink_cFv)
//	800C952C: 800DD018 (setShieldGuard__9daAlink_cFv)
//	800C9534: 800D10E0 (checkCutFastReady__9daAlink_cFv)
//	800C9544: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800C9564: 80452D1C (lit_7448)
//	800C9570: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
//	800C957C: 801412C4 (onNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0)
//	800C958C: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C95A0: 80452D3C (lit_7808)
//	800C95A4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800C95B8: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800C95C8: 80110C6C (checkKandelaarEquipAnime__9daAlink_cCFv)
//	800C95DC: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C95F8: 800D00EC (checkReinRide__9daAlink_cCFv)
//	800C960C: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	800C961C: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	800C9620: 80452CC0 (lit_6108)
//	800C962C: 800D0E08 (checkLightSwordMtrl__9daAlink_cFv)
//	800C9638: 80362084 (__ptmf_scall)
//	800C9648: 801414F4 (checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0)
//	800C9658: 800B9398 (checkWindDashAnime__9daAlink_cCFv)
//	800C966C: 80452CC4 (lit_6109)
//	800C9670: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800C9678: 800AFCF0 (playFaceTextureAnime__9daAlink_cFv)
//	800C9684: 800977F4 (__ct__4cXyzFRC4cXyz)
//	800C968C: 800BBF68 (posMove__9daAlink_cFv)
//	800C9694: 801413CC (checkWolf__9daPy_py_cCFv)
//	800C96A4: 8012A498 (wolfBgCheck__9daAlink_cFv)
//	800C96B4: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C96C4: 80452F50 (lit_23595)
//	800C96C8: 80101D70 (swimBgCheck__9daAlink_cFf)
//	800C96D4: 800977F4 (__ct__4cXyzFRC4cXyz)
//	800C96E0: 800977D8 (__as__4cXyzFRC4cXyz)
//	800C96E8: 800D00DC (ClrGroundHit__9dBgS_AcchFv)
//	800C96F0: 804061C0 (g_dComIfG_gameInfo)
//	800C96F4: 804061C0 (g_dComIfG_gameInfo)
//	800C9700: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	800C9708: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	800C971C: 800977D8 (__as__4cXyzFRC4cXyz)
//	800C9724: 80141404 (ChkGroundHit__9dBgS_AcchCFv)
//	800C9734: 800D00D0 (ChkRoofHit__9dBgS_AcchCFv)
//	800C9744: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	800C975C: 800A6DCC (iceSlipBgCheck__9daAlink_cFv)
//	800C9764: 800B14B4 (setWaterY__9daAlink_cFv)
//	800C976C: 800BD6FC (autoGroundHit__9daAlink_cFv)
//	800C9778: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C9788: 80101CB8 (checkPossibleWaterInMode__9daAlink_cCFv)
//	800C979C: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C97B8: 80452C98 (lit_5943)
//	800C97D4: 80141324 (dComIfGp_checkPlayerStatus1__FiUl)
//	800C97E0: 80452FD0 (lit_27005)
//	800C97F4: 80452D3C (lit_7808)
//	800C9810: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C982C: 80452D3C (lit_7808)
//	800C9848: 801032C8 (swimOutAfter__9daAlink_cFi)
//	800C9868: 800D00BC (getAnm__25mDoExt_MtxCalcAnmBlendTblFi)
//	800C9888: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800C988C: 803DD470 (now__14mDoMtx_stack_c)
//	800C9890: 803DD470 (now__14mDoMtx_stack_c)
//	800C9898: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800C98C4: 803DD470 (now__14mDoMtx_stack_c)
//	800C98C8: 803DD470 (now__14mDoMtx_stack_c)
//	800C98D4: 80346D6C (PSMTXMultVec)
//	800C98D8: 80452CC0 (lit_6108)
//	800C98EC: 80452DA4 (lit_9138)
//	800C9920: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C9964: 800977D8 (__as__4cXyzFRC4cXyz)
//	800C9974: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C999C: 80452CC0 (lit_6108)
//	800C99BC: 80118170 (checkFlyAtnWait__9daAlink_cFv)
//	800C99DC: 80452CC0 (lit_6108)
//	800C99EC: 80452DA4 (lit_9138)
//	800C9A00: 800A662C (setRoomInfo__9daAlink_cFv)
//	800C9A10: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C9A20: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	800C9A60: 800A6B0C (setStepsOffset__9daAlink_cFv)
//	800C9A68: 80452CC0 (lit_6108)
//	800C9A78: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C9A84: 80452CC0 (lit_6108)
//	800C9A94: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C9AA4: 800A67E0 (setShapeAngleOnGround__9daAlink_cFv)
//	800C9AAC: 800BE3E4 (checkRestartRoom__9daAlink_cFv)
//	800C9ABC: 80118C98 (checkDeadHP__9daAlink_cFv)
//	800C9AD0: 80074B98 (GetExitId__4dBgSFRC13cBgS_PolyInfo)
//	800C9ADC: 800BEAF8 (checkSceneChange__9daAlink_cFi)
//	800C9AE4: 80141404 (ChkGroundHit__9dBgS_AcchCFv)
//	800C9AF8: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	800C9B1C: 80075880 (MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	800C9B28: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C9B3C: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C9B60: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800C9B74: 801414F4 (checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0)
//	800C9B90: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800C9BA4: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800C9BCC: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C9BF0: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800C9C04: 801414F4 (checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0)
//	800C9C20: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800C9C34: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C9C48: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C9C58: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800C9C7C: 80075080 (GetGrpSoundId__4dBgSFRC13cBgS_PolyInfo)
//	800C9C84: 800D008C (mDoAud_setLinkGroupInfo__FUc)
//	800C9CB4: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C9CC8: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800C9CD8: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800C9CF0: 800BE3E4 (checkRestartRoom__9daAlink_cFv)
//	800C9D00: 80118C98 (checkDeadHP__9daAlink_cFv)
//	800C9D14: 800BEAF8 (checkSceneChange__9daAlink_cFi)
//	800C9D1C: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	800C9D38: 800977D8 (__as__4cXyzFRC4cXyz)
//	800C9D3C: 80452D50 (lit_8247)
//	800C9D4C: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800C9D5C: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800C9D74: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	800C9D84: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	800C9D94: 80074CBC (GetSpecialCode__4dBgSFRC13cBgS_PolyInfo)
//	800C9DA8: 800E2808 (setMagneBootsMtx__9daAlink_cFP13cBgS_PolyInfoi)
//	800C9DD4: 80452CC0 (lit_6108)
//	800C9DEC: 80430D24 (BaseY__4cXyz)
//	800C9DF0: 80430D24 (BaseY__4cXyz)
//	800C9DF4: 800977D8 (__as__4cXyzFRC4cXyz)
//	800C9DF8: 803AF99C (l_peepEventName)
//	800C9DFC: 803AF99C (l_peepEventName)
//	800C9E00: 800D005C (dComIfGp_evmng_startCheck__FPCc)
//	800C9E24: 803AF99C (l_peepEventName)
//	800C9E28: 803AF99C (l_peepEventName)
//	800C9E2C: 800D005C (dComIfGp_evmng_startCheck__FPCc)
//	800C9E3C: 800BDD70 (startPeepChange__9daAlink_cFv)
//	800C9E48: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C9E68: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800C9E78: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800C9ED0: 802C06D0 (updateAnime__10Z2CreatureFff)
//	800C9EF4: 800A22E8 (setMoveSlantAngle__9daAlink_cFv)
//	800C9EFC: 800D00EC (checkReinRide__9daAlink_cCFv)
//	800C9F0C: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800C9F1C: 800EF050 (setBodyAngleRideReadyAnime__9daAlink_cFv)
//	800C9F28: 800D0048 (checkSmallUpperGuardAnime__9daAlink_cCFv)
//	800C9F38: 801413CC (checkWolf__9daPy_py_cCFv)
//	800C9F4C: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C9F5C: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800C9F70: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
//	800C9F7C: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800C9F9C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C9FA8: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800C9FC8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800C9FD0: 800A8CE4 (setMatrix__9daAlink_cFv)
//	800C9FD8: 800A1F90 (setNeckAngle__9daAlink_cFv)
//	800C9FF4: 801413CC (checkWolf__9daPy_py_cCFv)
//	800CA004: 8009F034 (setHatAngle__9daAlink_cFv)
//	800CA020: 800A3430 (footBgCheck__9daAlink_cFv)
//	800CA028: 800A39B8 (handBgCheck__9daAlink_cFv)
//	800CA040: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800CA050: 8015F3C4 (checkWoodShieldEquip__9daPy_py_cFv)
//	800CA090: 8021E5D4 (dMeter2Info_setShield__FUcb)
//	800CA09C: 800DC79C (stickArrowIncrement__9daAlink_cFi)
//	800CA0A4: 80125628 (setWoodShieldBurnOutEffect__9daAlink_cFv)
//	800CA0B4: 801419B8 (dMeter2Info_setFloatingMessage__FUssb)
//	800CA0B8: 801412A0 (dComIfGp_getStage__Fv)
//	800CA0CC: 80141294 (dStage_stagInfo_GetSaveTbl__FP21stage_stag_info_class)
//	800CA0DC: 80141264 (dComIfGs_isItemFirstBit__FUc)
//	800CA0F0: 80141230 (fopAcM_onSwitch__FPC10fopAc_ac_ci)
//	800CA118: 801255BC (clearWoodShieldBurnEffect__9daAlink_cFv)
//	800CA11C: 80141210 (checkShieldGet__9daPy_py_cFv)
//	800CA128: 8015F3C4 (checkWoodShieldEquip__9daPy_py_cFv)
//	800CA13C: 800DC79C (stickArrowIncrement__9daAlink_cFi)
//	800CA148: 800A9450 (setItemMatrix__9daAlink_cFi)
//	800CA150: 80451018 (m_midnaActor__9daPy_py_c)
//	800CA160: 80141A1C (checkMidnaTired__9daMidna_cFv)
//	800CA170: 80141A10 (checkForceTiredColor__9daMidna_cCFv)
//	800CA180: 80141A04 (checkForceNormalColor__9daMidna_cCFv)
//	800CA19C: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800CA1B0: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800CA1C4: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800CA1D8: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800CA1F0: 8032F880 (removeTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800CA204: 8032F880 (removeTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800CA218: 8032F880 (removeTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800CA22C: 8032F880 (removeTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	800CA234: 8012B724 (wolfFootBgCheck__9daAlink_cFv)
//	800CA23C: 80127E08 (setWolfTailAngle__9daAlink_cFv)
//	800CA248: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800CA250: 801299A8 (checkWolfUseAbility__9daAlink_cFv)
//	800CA29C: 800A9F4C (setWolfItemMatrix__9daAlink_cFv)
//	800CA2A4: 800D0020 (checkFmChainGrabAnime__9daAlink_cCFv)
//	800CA2B0: 80452CB8 (lit_6040)
//	800CA2BC: 800A8310 (setBodyPartPos__9daAlink_cFv)
//	800CA2C4: 801413CC (checkWolf__9daPy_py_cCFv)
//	800CA2D8: 801414F4 (checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0)
//	800CA2E8: 8009F034 (setHatAngle__9daAlink_cFv)
//	800CA2F4: 800CC25C (modelCalc__9daAlink_cFP8J3DModel)
//	800CA2FC: 800B154C (setHangWaterY__9daAlink_cFv)
//	800CA304: 800ABDB8 (setCollision__9daAlink_cFv)
//	800CA30C: 800A87F8 (setAttentionPos__9daAlink_cFv)
//	800CA314: 800C1704 (setLight__9daAlink_cFv)
//	800CA31C: 80121388 (setEffect__9daAlink_cFv)
//	800CA334: 803DD470 (now__14mDoMtx_stack_c)
//	800CA338: 803DD470 (now__14mDoMtx_stack_c)
//	800CA33C: 803464B0 (PSMTXCopy)
//	800CA344: 801413CC (checkWolf__9daPy_py_cCFv)
//	800CA350: 80452CC0 (lit_6108)
//	800CA358: 80452CE0 (lit_6845)
//	800CA35C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800CA364: 803DD470 (now__14mDoMtx_stack_c)
//	800CA368: 803DD470 (now__14mDoMtx_stack_c)
//	800CA36C: 800CFFF4 (setBaseTRMtx__8J3DModelFPA4_f)
//	800CA388: 80126358 (update__20daAlink_lockCursor_cFv)
//	800CA390: 800E3F50 (setGrabItemPos__9daAlink_cFv)
//	800CA398: 800BE2C0 (checkRoofRestart__9daAlink_cFv)
//	800CA3B4: 800CFFE0 (getAnmMtx__8J3DModelFi)
//	800CA3C0: 800CFFC0 (cMtx_multVec__FPA4_CfPC3VecP3Vec)
//	800CA3CC: 801413F8 (checkResetFlg0__9daPy_py_cCFQ29daPy_py_c10daPy_RFLG0)
//	800CA3E0: 802C48D8 (setResumeAttack__14Z2CreatureLinkFb)
//	800CA3F0: 802C48D8 (setResumeAttack__14Z2CreatureLinkFb)
//	800CA3F8: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800CA40C: 80141410 (checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0)
//	800CA41C: 80452DD4 (lit_11442)
//	800CA438: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800CA44C: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800CA480: 80452CB8 (lit_6040)
//	800CA488: 800CFFA4 (dComIfGp_setItemLifeCount__FfUc)
//	800CA4A0: 800CFF4C (checkAttentionLock__9daAlink_cFv)
//	800CA4B0: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800CA4DC: 80118C98 (checkDeadHP__9daAlink_cFv)
//	800CA4F0: 80141200 (offCondition__11dEvt_info_cFUs)
//	800CA4FC: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	800CA50C: 80141404 (ChkGroundHit__9dBgS_AcchCFv)
//	800CA51C: 801411F0 (__ct__8cM3dGPlaFv)
//	800CA52C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800CA53C: 8001DB90 (__dt__8cM3dGPlaFv)
//	800CA544: 80452CBC (lit_6041)
//	800CA54C: 802681E4 (cBgW_CheckBGround__Ff)
//	800CA564: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800CA578: 801411E0 (onCondition__11dEvt_info_cFUs)
//	800CA588: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800CA5A4: 800D00EC (checkReinRide__9daAlink_cCFv)
//	800CA5F0: 801411D4 (checkNoResetFlg3__9daPy_py_cCFQ29daPy_py_c9daPy_FLG3)
//	800CA604: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800CA618: 801411E0 (onCondition__11dEvt_info_cFUs)
//	800CA620: 800D00EC (checkReinRide__9daAlink_cCFv)
//	800CA650: 801411E0 (onCondition__11dEvt_info_cFUs)
//	800CA65C: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	800CA66C: 802681E4 (cBgW_CheckBGround__Ff)
//	800CA680: 801411E0 (onCondition__11dEvt_info_cFUs)
//	800CA68C: 80141340 (checkEndResetFlg1__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG1)
//	800CA69C: 800977B4 (checkMidnaRide__9daPy_py_cCFv)
//	800CA6AC: 801413CC (checkWolf__9daPy_py_cCFv)
//	800CA6B8: 80451018 (m_midnaActor__9daPy_py_c)
//	800CA6BC: 801419F4 (onForcePanic__9daMidna_cFv)
//	800CA6CC: 80430CF4 (Zero__4cXyz)
//	800CA6D0: 80430CF4 (Zero__4cXyz)
//	800CA6D4: 800977D8 (__as__4cXyzFRC4cXyz)
//	800CA6E4: 800BFDFC (checkMagicArmorWearAbility__9daAlink_cCFv)
//	800CA700: 800D77C8 (checkMagicArmorNoDamage__9daAlink_cFv)
//	800CA710: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800CA734: 801419A0 (dComIfGp_setItemRupeeCount__Fl)
//	800CA744: 80141990 (dComIfGs_getRupee__Fv)
//	800CA764: 800BB324 (setMagicArmorBrk__9daAlink_cFi)
//	800CA78C: 80141988 (setLinkState__14Z2CreatureLinkFUc)
//	800CA794: 80141990 (dComIfGs_getRupee__Fv)
//	800CA7B4: 800BB324 (setMagicArmorBrk__9daAlink_cFi)
//	800CA7DC: 80141988 (setLinkState__14Z2CreatureLinkFUc)
//	800CA7E4: 801413CC (checkWolf__9daPy_py_cCFv)
//	800CA818: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800CA840: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800CA8A4: 8014196C (dMeter2Info_offUseButton__Fi)
//	800CA8D0: 8014196C (dMeter2Info_offUseButton__Fi)
//	800CA8F0: 8014196C (dMeter2Info_offUseButton__Fi)
//	800CA8F8: 801411B0 (getSumouMode__9daPy_py_cCFv)
//	800CA908: 8014196C (dMeter2Info_offUseButton__Fi)
//	800CA91C: 80452D18 (lit_7308)
//	800CA93C: 8014195C (__ct__4cXyzFfff)
//	800CA95C: 800977D8 (__as__4cXyzFRC4cXyz)
//	800CA968: 80009184 (__dt__4cXyzFv)
//	800CA980: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800CA9A0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CA9AC: 800B3220 (setRStatus__9daAlink_cFUc)
//	800CA9B4: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CA9C4: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CA9DC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CA9E4: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CA9FC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CAA04: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CAA1C: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800CAA24: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CAA3C: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800CAA44: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CAA5C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CAA64: 80392094 (d_a_d_a_alink__stringBase0)
//	800CAA68: 80392094 (d_a_d_a_alink__stringBase0)
//	800CAA70: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800CAA98: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CAAB0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CAAB8: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CAAD0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CAAD8: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CAAF0: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800CAAF8: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CAB10: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800CAB18: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CAB2C: 801413CC (checkWolf__9daPy_py_cCFv)
//	800CAB48: 80452DA0 (lit_9054)
//	800CAB58: 800E82B0 (checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c)
//	800CAB68: 801412BC (fopAcM_GetName__FPv)
//	800CAB80: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800CAB90: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CAB98: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CABA8: 80452D68 (lit_8472)
//	800CABC8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CABD8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CABE0: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CABF0: 801414D8 (dComIfGp_getHorseActor__Fv)
//	800CABFC: 801414D8 (dComIfGp_getHorseActor__Fv)
//	800CAC00: 80141944 (getZeldaActor__9daHorse_cFv)
//	800CAC14: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CAC1C: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CAC38: 801412BC (fopAcM_GetName__FPv)
//	800CAC4C: 801412BC (fopAcM_GetName__FPv)
//	800CAC64: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800CAC6C: 8014194C (dComIfGp_getDoStatus__Fv)
//	800CAC84: 80141340 (checkEndResetFlg1__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG1)
//	800CAC98: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800CACA8: 80141340 (checkEndResetFlg1__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG1)
//	800CACBC: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800CACC4: 800E7EE4 (getWallGrabStatus__9daAlink_cFv)
//	800CACD0: 801413CC (checkWolf__9daPy_py_cCFv)
//	800CACF0: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800CAD04: 800E7994 (checkChainEmphasys__9daAlink_cFv)
//	800CAD14: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800CAD28: 800E7994 (checkChainEmphasys__9daAlink_cFv)
//	800CAD38: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800CAD3C: 800CFF3C (dComIfGp_getRStatus__Fv)
//	800CAD50: 800DC5DC (checkShieldAttackEmphasys__9daAlink_cFv)
//	800CAD64: 800B3220 (setRStatus__9daAlink_cFUc)
//	800CAD68: 8002DCA8 (dComIfGs_getMaxLifeGauge__Fv)
//	800CAD70: 800CFF2C (dComIfGs_getLife__Fv)
//	800CAD7C: 800CFEF4 (mDoAud_setLinkHp__Fll)
//	800CAD88: 80009184 (__dt__4cXyzFv)
//	800CAD94: 80009184 (__dt__4cXyzFv)
//	800CAD98: 800CFEC4 (dComIfGp_att_getCatghTarget__Fv)
//	800CADA8: 801413CC (checkWolf__9daPy_py_cCFv)
//	800CADB8: 800CFEB0 (checkRideOn__9daAlink_cCFv)
//	800CADC8: 800C0678 (checkCastleTownUseItem__9daAlink_cFUs)
//	800CADDC: 8014119C (dComIfGp_setBottleStatus__FUcUc)
//	800CADE8: 80141190 (checkEndResetFlg2__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG2)
//	800CADFC: 80141308 (dComIfGp_checkPlayerStatus0__FiUl)
//	800CAE3C: 8014113C (mDoAud_seStartLevel__FUlPC3VecUlSc)
//	800CAE48: 8014112C (offNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0)
//	800CAE5C: 80141340 (checkEndResetFlg1__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG1)
//	800CAE70: 8014111C (onNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2)
//	800CAE80: 8014136C (offNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2)
//	800CAE98: 800977D8 (__as__4cXyzFRC4cXyz)
//	800CAEC4: 801414E8 (checkBoarSingleBattle__9daPy_py_cCFv)
//	800CAED4: 803650D0 (abs)
//	800CAEFC: 801414CC (checkMagneBootsOn__9daPy_py_cCFv)
//	800CAF1C: 800E2738 (getMagneBootsLocalAngleY__9daAlink_cFsi)
//	800CAF30: 800D018C (checkModeFlg__9daAlink_cCFUl)
//	800CAF94: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::execute() {
    nofralloc
#include "asm/d/a/d_a_alink/execute__9daAlink_cFv.s"
}
#pragma pop

/* 800CAFA8-800CAFC8 0020+00 s=1 e=0 z=0  None .text      daAlink_Execute__FP9daAlink_c */
//	800CAFB4: 800C8700 (execute__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_Execute(daAlink_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_Execute__FP9daAlink_c.s"
}
#pragma pop

/* 800CAFC8-800CB480 04B8+00 s=2 e=0 z=0  None .text      setDrawHand__9daAlink_cFv */
//	800CAFD8: 803621DC (_savegpr_29)
//	800CB00C: 804061C0 (g_dComIfG_gameInfo)
//	800CB010: 804061C0 (g_dComIfG_gameInfo)
//	800CB0A4: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800CB0B4: 80452D44 (lit_7977)
//	800CB114: 800DFBC8 (checkBowGrabLeftHand__9daAlink_cCFv)
//	800CB1B8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800CB298: 803464B0 (PSMTXCopy)
//	800CB30C: 803464B0 (PSMTXCopy)
//	800CB334: 803464B0 (PSMTXCopy)
//	800CB350: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	800CB3E8: 803464B0 (PSMTXCopy)
//	800CB410: 803464B0 (PSMTXCopy)
//	800CB42C: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	800CB46C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDrawHand() {
    nofralloc
#include "asm/d/a/d_a_alink/setDrawHand__9daAlink_cFv.s"
}
#pragma pop

/* 800CB480-800CB53C 00BC+00 s=3 e=0 z=0  None .text      checkSwordDraw__9daAlink_cFv */
//	800CB4A0: 804061C0 (g_dComIfG_gameInfo)
//	800CB4A4: 804061C0 (g_dComIfG_gameInfo)
//	800CB4F4: 804061C0 (g_dComIfG_gameInfo)
//	800CB4F8: 804061C0 (g_dComIfG_gameInfo)
//	800CB504: 800349BC (isEventBit__11dSv_event_cCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwordDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwordDraw__9daAlink_cFv.s"
}
#pragma pop

/* 800CB53C-800CB5F8 00BC+00 s=3 e=0 z=0  None .text      checkShieldDraw__9daAlink_cFv */
//	800CB55C: 804061C0 (g_dComIfG_gameInfo)
//	800CB560: 804061C0 (g_dComIfG_gameInfo)
//	800CB5B0: 804061C0 (g_dComIfG_gameInfo)
//	800CB5B4: 804061C0 (g_dComIfG_gameInfo)
//	800CB5C0: 800349BC (isEventBit__11dSv_event_cCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkShieldDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/checkShieldDraw__9daAlink_cFv.s"
}
#pragma pop

/* 800CB5F8-800CB694 009C+00 s=2 e=0 z=0  None .text      checkItemDraw__9daAlink_cFv */
//	800CB624: 800D0E98 (checkSwordEquipAnime__9daAlink_cCFv)
//	800CB638: 800DE780 (checkBowAndSlingItem__9daAlink_cFi)
//	800CB648: 800DFBC8 (checkBowGrabLeftHand__9daAlink_cCFv)
//	800CB654: 804061C0 (g_dComIfG_gameInfo)
//	800CB658: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemDraw__9daAlink_cFv.s"
}
#pragma pop

/* 800CB694-800CBA38 03A4+00 s=0 e=0 z=1  None .text      initShadowScaleLight__9daAlink_cFv */
//	800CB6C0: 801ACCDC (dKy_shadow_mode_set__FUc)
//	800CB6F8: 80267128 (atan2sX_Z__4cXyzCFv)
//	800CB704: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	800CB708: 804061C0 (g_dComIfG_gameInfo)
//	800CB70C: 804061C0 (g_dComIfG_gameInfo)
//	800CB71C: 80452CC0 (lit_6108)
//	800CB724: 80452DE0 (lit_11673)
//	800CB764: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800CB790: 80452D68 (lit_8472)
//	800CB798: 80452F50 (lit_23595)
//	800CB7B8: 80439A20 (sincosTable___5JMath)
//	800CB7BC: 80439A20 (sincosTable___5JMath)
//	800CB7D4: 80452CE0 (lit_6845)
//	800CB804: 8001DC68 (lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800CB834: 80452CC0 (lit_6108)
//	800CB848: 80347138 (PSVECSquareMag)
//	800CB84C: 80452CC0 (lit_6108)
//	800CB85C: 80452CE8 (lit_6846)
//	800CB864: 80452CF0 (lit_6847)
//	800CB8AC: 80452CF8 (lit_6848)
//	800CB8B8: 80450AE0 (__float_nan)
//	800CB8BC: 80450AE0 (__float_nan)
//	800CB928: 80450AE0 (__float_nan)
//	800CB92C: 80450AE0 (__float_nan)
//	800CB93C: 80267674 (cM_atan2s__Fff)
//	800CB96C: 80439A20 (sincosTable___5JMath)
//	800CB970: 80439A20 (sincosTable___5JMath)
//	800CB9B0: 80452E0C (lit_14614)
//	800CB9BC: 80452EBC (lit_17593)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initShadowScaleLight() {
    nofralloc
#include "asm/d/a/d_a_alink/initShadowScaleLight__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453338-8045333C 0004+00 s=1 e=0 z=0  None .sdata2    @75939 */
SECTION_SDATA2 static f32 lit_75939 = 50000.0f;

/* 800CBA38-800CBC18 01E0+00 s=0 e=0 z=1  None .text      moveShadowScaleLight__9daAlink_cFv */
//	800CBA48: 803621DC (_savegpr_29)
//	800CBA74: 803650D0 (abs)
//	800CBAAC: 80270E24 (cLib_distanceAngleS__Fss)
//	800CBAC8: 80270E24 (cLib_distanceAngleS__Fss)
//	800CBAF4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800CBB0C: 802706D0 (cLib_chaseS__FPsss)
//	800CBB1C: 801ACCF4 (dKy_shadow_mode_reset__FUc)
//	800CBB20: 80452CB8 (lit_6040)
//	800CBB2C: 80452D14 (lit_7307)
//	800CBB60: 802706D0 (cLib_chaseS__FPsss)
//	800CBB74: 802706D0 (cLib_chaseS__FPsss)
//	800CBB84: 802706D0 (cLib_chaseS__FPsss)
//	800CBB8C: 80452D14 (lit_7307)
//	800CBB90: 80452DA0 (lit_9054)
//	800CBB94: 80270740 (cLib_chaseF__FPfff)
//	800CBB98: 80439A20 (sincosTable___5JMath)
//	800CBB9C: 80439A20 (sincosTable___5JMath)
//	800CBBB0: 80453338 (lit_75939)
//	800CBC04: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::moveShadowScaleLight() {
    nofralloc
#include "asm/d/a/d_a_alink/moveShadowScaleLight__9daAlink_cFv.s"
}
#pragma pop

/* 800CBC18-800CC25C 0644+00 s=1 e=0 z=0  None .text      shadowDraw__9daAlink_cFv */
//	800CBC28: 803621D4 (_savegpr_27)
//	800CBC30: 80451018 (m_midnaActor__9daPy_py_c)
//	800CBCE4: 804061C0 (g_dComIfG_gameInfo)
//	800CBCE8: 804061C0 (g_dComIfG_gameInfo)
//	800CBD08: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBD94: 80452D58 (lit_8249)
//	800CBD98: 80452CC0 (lit_6108)
//	800CBDA8: 80452CB8 (lit_6040)
//	800CBDAC: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	800CBDB0: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	800CBDB4: 8002E910
//(dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	800CBDCC: 800CB480 (checkSwordDraw__9daAlink_cFv)
//	800CBDE4: 804061C0 (g_dComIfG_gameInfo)
//	800CBDE8: 804061C0 (g_dComIfG_gameInfo)
//	800CBDF8: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBDFC: 804061C0 (g_dComIfG_gameInfo)
//	800CBE00: 804061C0 (g_dComIfG_gameInfo)
//	800CBE1C: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBE24: 800CB53C (checkShieldDraw__9daAlink_cFv)
//	800CBE30: 804061C0 (g_dComIfG_gameInfo)
//	800CBE34: 804061C0 (g_dComIfG_gameInfo)
//	800CBE44: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBE60: 800C03A0 (checkCloudSea__9daAlink_cFv)
//	800CBEAC: 804061C0 (g_dComIfG_gameInfo)
//	800CBEB0: 804061C0 (g_dComIfG_gameInfo)
//	800CBEC4: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBEE0: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBEF0: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBEF8: 804061C0 (g_dComIfG_gameInfo)
//	800CBEFC: 804061C0 (g_dComIfG_gameInfo)
//	800CBF10: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBF20: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBF30: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBF4C: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBF68: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBF90: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBF9C: 800CB5F8 (checkItemDraw__9daAlink_cFv)
//	800CBFD4: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CBFE0: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	800CBFFC: 80452DE0 (lit_11673)
//	800CC000: 80452E28 (lit_14621)
//	800CC008: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	800CC00C: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	800CC010: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	800CC020: 80452CB8 (lit_6040)
//	800CC024: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	800CC028: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	800CC02C: 8002E910
//(dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	800CC03C: 80108864 (changeHookshotDrawModel__9daAlink_cFv)
//	800CC04C: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CC054: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800CC064: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	800CC070: 804061C0 (g_dComIfG_gameInfo)
//	800CC074: 804061C0 (g_dComIfG_gameInfo)
//	800CC090: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CC0A4: 800DCF04 (checkPlayerGuardAndAttack__9daAlink_cCFv)
//	800CC0C8: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CC0CC: 804061C0 (g_dComIfG_gameInfo)
//	800CC0D0: 804061C0 (g_dComIfG_gameInfo)
//	800CC0EC: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CC0F4: 80108864 (changeHookshotDrawModel__9daAlink_cFv)
//	800CC110: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CC138: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CC170: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800CC174: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800CC17C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800CC194: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CC1AC: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800CC1B0: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800CC1B8: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800CC1D0: 804061C0 (g_dComIfG_gameInfo)
//	800CC1D4: 804061C0 (g_dComIfG_gameInfo)
//	800CC1E0: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CC1E4: 804061C0 (g_dComIfG_gameInfo)
//	800CC1E8: 804061C0 (g_dComIfG_gameInfo)
//	800CC20C: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800CC210: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800CC218: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800CC230: 804061C0 (g_dComIfG_gameInfo)
//	800CC234: 804061C0 (g_dComIfG_gameInfo)
//	800CC240: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	800CC248: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::shadowDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/shadowDraw__9daAlink_cFv.s"
}
#pragma pop

/* 800CC25C-800CC298 003C+00 s=3 e=0 z=0  None .text      modelCalc__9daAlink_cFP8J3DModel */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::modelCalc(J3DModel* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/modelCalc__9daAlink_cFP8J3DModel.s"
}
#pragma pop

/* 800CC298-800CC2E0 0048+00 s=2 e=0 z=0  None .text      basicModelDraw__9daAlink_cFP8J3DModel */
//	800CC2B0: 8042CA54 (g_env_light)
//	800CC2B4: 8042CA54 (g_env_light)
//	800CC2C0: 801A4DA0
//(setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c) 	800CC2C8:
// 8000DD64 (mDoExt_modelEntryDL__FP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::basicModelDraw(J3DModel* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/basicModelDraw__9daAlink_cFP8J3DModel.s"
}
#pragma pop

/* 800CC2E0-800CC364 0084+00 s=1 e=0 z=0  None .text      modelDraw__9daAlink_cFP8J3DModeli */
//	800CC300: 8042CA54 (g_env_light)
//	800CC304: 8042CA54 (g_env_light)
//	800CC310: 801A4DA0
//(setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c) 	800CC320:
// 8000DD64 (mDoExt_modelEntryDL__FP8J3DModel) 	800CC340: 803279A0 (diff__8J3DModelFv) 	800CC348:
// 8003194C (entry__10daMirror_cFP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::modelDraw(J3DModel* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/modelDraw__9daAlink_cFP8J3DModeli.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045333C-80453344 0008+00 s=1 e=0 z=0  None .sdata2    notColor0$76211 */
SECTION_SDATA2 static u8 notColor0[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
};

/* 800CC364-800CC7DC 0478+00 s=2 e=0 z=0  None .text
 * setWaterDropColor__9daAlink_cFPC13J3DGXColorS10              */
//	800CC374: 803621DC (_savegpr_29)
//	800CC398: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800CC3A8: 800BFDFC (checkMagicArmorWearAbility__9daAlink_cCFv)
//	800CC3B4: 8045333C (notColor0)
//	800CC3B8: 8045333C (notColor0)
//	800CC3DC: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800CC494: 800BFDFC (checkMagicArmorWearAbility__9daAlink_cCFv)
//	800CC5C4: 804061C0 (g_dComIfG_gameInfo)
//	800CC5C8: 804061C0 (g_dComIfG_gameInfo)
//	800CC7C8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterDropColor(J3DGXColorS10 const* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterDropColor__9daAlink_cFPC13J3DGXColorS10.s"
}
#pragma pop

/* 800CC7DC-800CC7FC 0020+00 s=2 e=0 z=0  None .text      initTevCustomColor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initTevCustomColor() {
    nofralloc
#include "asm/d/a/d_a_alink/initTevCustomColor__9daAlink_cFv.s"
}
#pragma pop

/* 800CC7FC-800CD78C 0F90+00 s=1 e=0 z=0  None .text      draw__9daAlink_cFv */
//	800CC80C: 803621C4 (_savegpr_23)
//	800CC820: 8042CA54 (g_env_light)
//	800CC824: 8042CA54 (g_env_light)
//	800CC834: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	800CC83C: 8042CA54 (g_env_light)
//	800CC840: 8042CA54 (g_env_light)
//	800CC850: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	800CC858: 800CC7DC (initTevCustomColor__9daAlink_cFv)
//	800CC86C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800CC87C: 8015F2FC (setSight__18daPy_sightPacket_cFv)
//	800CC88C: 804061C0 (g_dComIfG_gameInfo)
//	800CC890: 804061C0 (g_dComIfG_gameInfo)
//	800CC8A0: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	800CC938: 8042CA54 (g_env_light)
//	800CC93C: 8042CA54 (g_env_light)
//	800CC94C: 801A4DA0
//(setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c) 	800CC954:
// 8000DD64 (mDoExt_modelEntryDL__FP8J3DModel) 	800CC994: 8032B1F8
//(getTevColorReg__15J3DAnmTevRegKeyCFUsP11_GXColorS10) 	800CC9D4: 80452CC0 (lit_6108) 800CC9EC:
// 8038F9F8 (m__18daAlinkHIO_wolf_c0) 	800CC9F0: 8038F9F8 (m__18daAlinkHIO_wolf_c0) 	800CC9F8:
// 80452CB0 (lit_6025) 	800CCA90: 8038E54C (m__20daAlinkHIO_damage_c0) 	800CCA94: 8038E54C
//(m__20daAlinkHIO_damage_c0) 	800CCAC4: 800D77C8 (checkMagicArmorNoDamage__9daAlink_cFv) 800CCAE4:
// 8038E54C (m__20daAlinkHIO_damage_c0) 	800CCAE8: 8038E54C (m__20daAlinkHIO_damage_c0) 800CCB04:
// 8038E54C (m__20daAlinkHIO_damage_c0) 	800CCB08: 8038E54C (m__20daAlinkHIO_damage_c0) 800CCB1C:
// 8038E54C (m__20daAlinkHIO_damage_c0) 	800CCB20: 8038E54C (m__20daAlinkHIO_damage_c0) 800CCB34:
// 80439A20 (sincosTable___5JMath) 	800CCB38: 80439A20 (sincosTable___5JMath) 	800CCB48: 80452CB0
//(lit_6025) 	800CCBDC: 80452CB8 (lit_6040) 	800CCBE0: 80452CB0 (lit_6025) 	800CCBFC: 8038E54C
//(m__20daAlinkHIO_damage_c0) 	800CCC00: 8038E54C (m__20daAlinkHIO_damage_c0) 	800CCD58: 800BFDFC
//(checkMagicArmorWearAbility__9daAlink_cCFv) 	800CCD80: 8032F880
//(removeTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey) 	800CCD94: 8032F880
//(removeTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey) 	800CCDA8: 800CC364
//(setWaterDropColor__9daAlink_cFPC13J3DGXColorS10) 	800CCDB0: 80452CC0 (lit_6108) 	800CCDC0:
//800CC364 (setWaterDropColor__9daAlink_cFPC13J3DGXColorS10) 	800CCDCC: 800BFDFC
//(checkMagicArmorWearAbility__9daAlink_cCFv) 	800CCDE8: 8032FE70
//(entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey) 	800CCDFC: 8032FE70
//(entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey) 	800CCE08: 800CC364
//(setWaterDropColor__9daAlink_cFPC13J3DGXColorS10) 	800CCE20: 80452CC0 (lit_6108) 	800CCE34:
//804061C0 (g_dComIfG_gameInfo) 	800CCE38: 804061C0 (g_dComIfG_gameInfo) 	800CCE40: 80434AC8
//(j3dSys) 	800CCE44: 80434AC8 (j3dSys) 	800CCE60: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
// 800CCE64: 804061C0 (g_dComIfG_gameInfo) 	800CCE68: 804061C0 (g_dComIfG_gameInfo) 	800CCE74:
//800349BC (isEventBit__11dSv_event_cCFUs) 	800CCE98: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//800CCEC0: 800CB480 (checkSwordDraw__9daAlink_cFv) 	800CCED8: 800CC2E0
// (modelDraw__9daAlink_cFP8J3DModeli) 	800CCEE8: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CCEF0: 800CB53C (checkShieldDraw__9daAlink_cFv)
//	800CCF08: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CCF24: 804061C0 (g_dComIfG_gameInfo)
//	800CCF28: 804061C0 (g_dComIfG_gameInfo)
//	800CCF50: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	800CCF60: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CCF64: 804061C0 (g_dComIfG_gameInfo)
//	800CCF68: 804061C0 (g_dComIfG_gameInfo)
//	800CCF84: 800CAFC8 (setDrawHand__9daAlink_cFv)
//	800CCF88: 804061C0 (g_dComIfG_gameInfo)
//	800CCF8C: 804061C0 (g_dComIfG_gameInfo)
//	800CCFD4: 8010903C (checkHookshotReadyMaterialOffMode__9daAlink_cCFv)
//	800CD03C: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD058: 8010903C (checkHookshotReadyMaterialOffMode__9daAlink_cCFv)
//	800CD0B8: 80101890 (checkZoraWearMaskDraw__9daAlink_cFv)
//	800CD0C8: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800CD100: 80101890 (checkZoraWearMaskDraw__9daAlink_cFv)
//	800CD110: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800CD138: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD154: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD170: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD1A8: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD1C4: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD1D4: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD1E8: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD200: 800CB480 (checkSwordDraw__9daAlink_cFv)
//	800CD224: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD228: 804061C0 (g_dComIfG_gameInfo)
//	800CD22C: 804061C0 (g_dComIfG_gameInfo)
//	800CD248: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD250: 800CB53C (checkShieldDraw__9daAlink_cFv)
//	800CD25C: 8015F3C4 (checkWoodShieldEquip__9daPy_py_cFv)
//	800CD2C0: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD2F8: 800CB5F8 (checkItemDraw__9daAlink_cFv)
//	800CD308: 80108864 (changeHookshotDrawModel__9daAlink_cFv)
//	800CD318: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD330: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD344: 800DCF04 (checkPlayerGuardAndAttack__9daAlink_cCFv)
//	800CD370: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD388: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD390: 80108864 (changeHookshotDrawModel__9daAlink_cFv)
//	800CD3AC: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800CD3C0: 8034739C (PSVECSquareDistance)
//	800CD3C4: 80452CC0 (lit_6108)
//	800CD3D4: 80452CE8 (lit_6846)
//	800CD3DC: 80452CF0 (lit_6847)
//	800CD424: 80452CF8 (lit_6848)
//	800CD430: 80450AE0 (__float_nan)
//	800CD434: 80450AE0 (__float_nan)
//	800CD4A0: 80450AE0 (__float_nan)
//	800CD4A4: 80450AE0 (__float_nan)
//	800CD4A8: 80452CB8 (lit_6040)
//	800CD4BC: 8034739C (PSVECSquareDistance)
//	800CD4C0: 80452CC0 (lit_6108)
//	800CD4D0: 80452CE8 (lit_6846)
//	800CD4D8: 80452CF0 (lit_6847)
//	800CD520: 80452CF8 (lit_6848)
//	800CD52C: 80450AE0 (__float_nan)
//	800CD530: 80450AE0 (__float_nan)
//	800CD59C: 80450AE0 (__float_nan)
//	800CD5A0: 80450AE0 (__float_nan)
//	800CD5A4: 80452CB8 (lit_6040)
//	800CD5BC: 804061C0 (g_dComIfG_gameInfo)
//	800CD5C0: 804061C0 (g_dComIfG_gameInfo)
//	800CD5D0: 8032548C (entryImm__13J3DDrawBufferFP9J3DPacketUs)
//	800CD5EC: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD5F4: 80110C94 (preKandelaarDraw__9daAlink_cFv)
//	800CD604: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD61C: 800CC298 (basicModelDraw__9daAlink_cFP8J3DModel)
//	800CD624: 80110C94 (preKandelaarDraw__9daAlink_cFv)
//	800CD630: 800CC298 (basicModelDraw__9daAlink_cFP8J3DModel)
//	800CD65C: 804061C0 (g_dComIfG_gameInfo)
//	800CD660: 804061C0 (g_dComIfG_gameInfo)
//	800CD680: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	800CD6CC: 800CC2E0 (modelDraw__9daAlink_cFP8J3DModeli)
//	800CD714: 804061C0 (g_dComIfG_gameInfo)
//	800CD718: 804061C0 (g_dComIfG_gameInfo)
//	800CD744: 800CBC18 (shadowDraw__9daAlink_cFv)
//	800CD754: 804061C0 (g_dComIfG_gameInfo)
//	800CD758: 804061C0 (g_dComIfG_gameInfo)
//	800CD76C: 800565EC (entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz)
//	800CD778: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::draw() {
    nofralloc
#include "asm/d/a/d_a_alink/draw__9daAlink_cFv.s"
}
#pragma pop

/* 800CD78C-800CD7AC 0020+00 s=1 e=0 z=0  None .text      daAlink_Draw__FP9daAlink_c */
//	800CD798: 800CC7FC (draw__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_Draw(daAlink_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_Draw__FP9daAlink_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 803B3580-803B3590 0010+00 s=3 e=0 z=0  None .data      __vt__15daAlink_sight_c */
SECTION_DATA void* __vt__15daAlink_sight_c[4] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__15daAlink_sight_cFv,
    (void*)__dt__15daAlink_sight_cFv,
};

/* 803B3590-803B35A0 0010+00 s=4 e=0 z=0  None .data      __vt__20daAlink_lockCursor_c */
SECTION_DATA void* __vt__20daAlink_lockCursor_c[4] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__20daAlink_lockCursor_cFv,
    (void*)__dt__20daAlink_lockCursor_cFv,
};

/* 803B35A0-803B35B4 0014+00 s=3 e=0 z=0  None .data      __vt__14daAlink_blur_c */
SECTION_DATA void* __vt__14daAlink_blur_c[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)entry__9J3DPacketFP13J3DDrawBuffer,
    (void*)draw__14daAlink_blur_cFv,
    (void*)__dt__14daAlink_blur_cFv,
};

/* 803B35B4-803B35C8 0014+00 s=3 e=0 z=0  None .data      __vt__29dAlink_bottleWaterPcallBack_c */
SECTION_DATA void* __vt__29dAlink_bottleWaterPcallBack_c[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__29dAlink_bottleWaterPcallBack_cFv,
    (void*)execute__29dAlink_bottleWaterPcallBack_cFP14JPABaseEmitterP15JPABaseParticle,
    (void*)draw__19JPAParticleCallBackFP14JPABaseEmitterP15JPABaseParticle,
};

/* 800CD7AC-800CE208 0A5C+00 s=1 e=0 z=0  None .text      __dt__9daAlink_cFv */
//	800CD7CC: 803B32B8 (__vt__9daAlink_c)
//	800CD7D0: 803B32B8 (__vt__9daAlink_c)
//	800CD7D8: 804061C0 (g_dComIfG_gameInfo)
//	800CD7DC: 804061C0 (g_dComIfG_gameInfo)
//	800CD80C: 802C374C (deleteKantera__14Z2CreatureLinkFv)
//	800CD830: 802BDFF8 (deleteObject__14Z2SoundObjBaseFv)
//	800CD858: 804061C0 (g_dComIfG_gameInfo)
//	800CD85C: 804061C0 (g_dComIfG_gameInfo)
//	800CD88C: 800C1E0C (changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE)
//	800CD898: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	800CD8A8: 8000F1AC (mDoExt_destroyExpHeap__FP10JKRExpHeap)
//	800CD8B4: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	800CD8C4: 8000F1AC (mDoExt_destroyExpHeap__FP10JKRExpHeap)
//	800CD8CC: 801A792C (dKy_plight_cut__FP15LIGHT_INFLUENCE)
//	800CD8D4: 804061C0 (g_dComIfG_gameInfo)
//	800CD8D8: 804061C0 (g_dComIfG_gameInfo)
//	800CD8E8: 80009184 (__dt__4cXyzFv)
//	800CD8EC: 80009184 (__dt__4cXyzFv)
//	800CD8F8: 80361CE8 (__destroy_arr)
//	800CD900: 80009184 (__dt__4cXyzFv)
//	800CD904: 80009184 (__dt__4cXyzFv)
//	800CD910: 80361CE8 (__destroy_arr)
//	800CD918: 80009184 (__dt__4cXyzFv)
//	800CD91C: 80009184 (__dt__4cXyzFv)
//	800CD928: 80361CE8 (__destroy_arr)
//	800CD930: 80009184 (__dt__4cXyzFv)
//	800CD934: 80009184 (__dt__4cXyzFv)
//	800CD940: 80361CE8 (__destroy_arr)
//	800CD948: 80009184 (__dt__4cXyzFv)
//	800CD94C: 80009184 (__dt__4cXyzFv)
//	800CD958: 80361CE8 (__destroy_arr)
//	800CD960: 80009184 (__dt__4cXyzFv)
//	800CD964: 80009184 (__dt__4cXyzFv)
//	800CD970: 80361CE8 (__destroy_arr)
//	800CD978: 800CFC3C (__dt__Q29daAlink_c14firePointEff_cFv)
//	800CD97C: 800CFC3C (__dt__Q29daAlink_c14firePointEff_cFv)
//	800CD988: 80361CE8 (__destroy_arr)
//	800CD990: 80018BD0 (__dt__5csXyzFv)
//	800CD994: 80018BD0 (__dt__5csXyzFv)
//	800CD9A0: 80361CE8 (__destroy_arr)
//	800CD9A8: 80018BD0 (__dt__5csXyzFv)
//	800CD9AC: 80018BD0 (__dt__5csXyzFv)
//	800CD9B8: 80361CE8 (__destroy_arr)
//	800CD9C0: 80018BD0 (__dt__5csXyzFv)
//	800CD9C4: 80018BD0 (__dt__5csXyzFv)
//	800CD9D0: 80361CE8 (__destroy_arr)
//	800CD9DC: 803A83A0 (__vt__22dPa_hermiteEcallBack_c)
//	800CD9E0: 803A83A0 (__vt__22dPa_hermiteEcallBack_c)
//	800CD9F0: 803A8554 (__vt__18dPa_levelEcallBack)
//	800CD9F4: 803A8554 (__vt__18dPa_levelEcallBack)
//	800CDA18: 8027E6A4 (__dt__18JPAEmitterCallBackFv)
//	800CDA24: 803A83A0 (__vt__22dPa_hermiteEcallBack_c)
//	800CDA28: 803A83A0 (__vt__22dPa_hermiteEcallBack_c)
//	800CDA38: 803A8554 (__vt__18dPa_levelEcallBack)
//	800CDA3C: 803A8554 (__vt__18dPa_levelEcallBack)
//	800CDA60: 8027E6A4 (__dt__18JPAEmitterCallBackFv)
//	800CDA74: 802A2184 (releaseSound__14JAISoundHandleFv)
//	800CDA80: 802A2184 (releaseSound__14JAISoundHandleFv)
//	800CDA90: 802A2184 (releaseSound__14JAISoundHandleFv)
//	800CDA9C: 80450B38 (data_80450B38)
//	800CDAB0: 80450B38 (data_80450B38)
//	800CDABC: 802C3500 (__dt__14Z2CreatureLinkFv)
//	800CDAC4: 800CFCB8 (__dt__18daAlink_footData_cFv)
//	800CDAC8: 800CFCB8 (__dt__18daAlink_footData_cFv)
//	800CDAD4: 80361CE8 (__destroy_arr)
//	800CDADC: 800CFCB8 (__dt__18daAlink_footData_cFv)
//	800CDAE0: 800CFCB8 (__dt__18daAlink_footData_cFv)
//	800CDAEC: 80361CE8 (__destroy_arr)
//	800CDAF8: 80249F48 (__dt__10dMsgFlow_cFv)
//	800CDB04: 803B35B4 (__vt__29dAlink_bottleWaterPcallBack_c)
//	800CDB08: 803B35B4 (__vt__29dAlink_bottleWaterPcallBack_c)
//	800CDB18: 8027EFA4 (__dt__19JPAParticleCallBackFv)
//	800CDB24: 803B35A0 (__vt__14daAlink_blur_c)
//	800CDB28: 803B35A0 (__vt__14daAlink_blur_c)
//	800CDB34: 80009184 (__dt__4cXyzFv)
//	800CDB38: 80009184 (__dt__4cXyzFv)
//	800CDB44: 80361CE8 (__destroy_arr)
//	800CDB4C: 80009184 (__dt__4cXyzFv)
//	800CDB50: 80009184 (__dt__4cXyzFv)
//	800CDB5C: 80361CE8 (__destroy_arr)
//	800CDB68: 803CD97C (__vt__9J3DPacket)
//	800CDB6C: 803CD97C (__vt__9J3DPacket)
//	800CDB7C: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDB84: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDB88: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDB94: 80361CE8 (__destroy_arr)
//	800CDBA0: 803B2E80 (__vt__8dEyeHL_c)
//	800CDBA4: 803B2E80 (__vt__8dEyeHL_c)
//	800CDBB0: 8009CA28 (remove__8dEyeHL_cFv)
//	800CDBBC: 803B2E80 (__vt__8dEyeHL_c)
//	800CDBC0: 803B2E80 (__vt__8dEyeHL_c)
//	800CDBCC: 8009CA28 (remove__8dEyeHL_cFv)
//	800CDBE8: 803A3354 (__vt__12J3DFrameCtrl)
//	800CDBEC: 803A3354 (__vt__12J3DFrameCtrl)
//	800CDBFC: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDC08: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDC14: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDC20: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDC2C: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDC38: 803B3580 (__vt__15daAlink_sight_c)
//	800CDC3C: 803B3580 (__vt__15daAlink_sight_c)
//	800CDC4C: 803B3590 (__vt__20daAlink_lockCursor_c)
//	800CDC50: 803B3590 (__vt__20daAlink_lockCursor_c)
//	800CDC60: 803BA14C (__vt__18daPy_sightPacket_c)
//	800CDC64: 803BA14C (__vt__18daPy_sightPacket_c)
//	800CDC70: 80140D24 (__dt__16daPy_frameCtrl_cFv)
//	800CDC74: 80140D24 (__dt__16daPy_frameCtrl_cFv)
//	800CDC80: 80361CE8 (__destroy_arr)
//	800CDC88: 80140D24 (__dt__16daPy_frameCtrl_cFv)
//	800CDC8C: 80140D24 (__dt__16daPy_frameCtrl_cFv)
//	800CDC98: 80361CE8 (__destroy_arr)
//	800CDCA0: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDCA4: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDCB0: 80361CE8 (__destroy_arr)
//	800CDCB8: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDCBC: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CDCC8: 80361CE8 (__destroy_arr)
//	800CDCD0: 80140DF0 (__dt__19mDoExt_AnmRatioPackFv)
//	800CDCD4: 80140DF0 (__dt__19mDoExt_AnmRatioPackFv)
//	800CDCE0: 80361CE8 (__destroy_arr)
//	800CDCE8: 80140DF0 (__dt__19mDoExt_AnmRatioPackFv)
//	800CDCEC: 80140DF0 (__dt__19mDoExt_AnmRatioPackFv)
//	800CDCF8: 80361CE8 (__destroy_arr)
//	800CDD04: 803A382C (__vt__14dBgS_ObjGndChk)
//	800CDD08: 803A382C (__vt__14dBgS_ObjGndChk)
//	800CDD30: 800775F0 (__dt__11dBgS_GndChkFv)
//	800CDD3C: 80077FB8 (__dt__14dBgS_ObjLinChkFv)
//	800CDD48: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	800CDD54: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	800CDD60: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	800CDD6C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	800CDD78: 8007808C (__dt__15dBgS_LinkLinChkFv)
//	800CDD84: 803B2EC8 (__vt__16dBgS_LinkRoofChk)
//	800CDD88: 803B2EC8 (__vt__16dBgS_LinkRoofChk)
//	800CDDB0: 80079090 (__dt__12dBgS_RoofChkFv)
//	800CDDBC: 803B2EF8 (__vt__15dBgS_LinkGndChk)
//	800CDDC0: 803B2EF8 (__vt__15dBgS_LinkGndChk)
//	800CDDE8: 800775F0 (__dt__11dBgS_GndChkFv)
//	800CDDF4: 80078240 (__dt__16dBgS_ArrowLinChkFv)
//	800CDE00: 80078314 (__dt__20dBgS_BoomerangLinChkFv)
//	800CDE0C: 800783E8 (__dt__15dBgS_RopeLinChkFv)
//	800CDE18: 8007808C (__dt__15dBgS_LinkLinChkFv)
//	800CDE24: 803B2F28 (__vt__13dBgS_LinkAcch)
//	800CDE28: 803B2F28 (__vt__13dBgS_LinkAcch)
//	800CDE48: 80075F94 (__dt__9dBgS_AcchFv)
//	800CDE50: 80077414 (__dt__12dBgS_AcchCirFv)
//	800CDE54: 80077414 (__dt__12dBgS_AcchCirFv)
//	800CDE60: 80361CE8 (__destroy_arr)
//	800CDE6C: 803ABFC0 (__vt__8dCcD_Sph)
//	800CDE70: 803ABFC0 (__vt__8dCcD_Sph)
//	800CDE90: 803C3540 (__vt__12cCcD_SphAttr)
//	800CDE94: 803C3540 (__vt__12cCcD_SphAttr)
//	800CDEAC: 803A7904 (__vt__8cM3dGSph)
//	800CDEB0: 803A7904 (__vt__8cM3dGSph)
//	800CDEC0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CDEC4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CDED4: 803A7218 (__vt__8cM3dGAab)
//	800CDED8: 803A7218 (__vt__8cM3dGAab)
//	800CDEE8: 800840E4 (__dt__12dCcD_GObjInfFv)
//	800CDEF4: 803AC2E4 (__vt__9dCcD_Stts)
//	800CDEF8: 803AC2E4 (__vt__9dCcD_Stts)
//	800CDF10: 803AC310 (__vt__10dCcD_GStts)
//	800CDF14: 803AC310 (__vt__10dCcD_GStts)
//	800CDF24: 803AC31C (__vt__10cCcD_GStts)
//	800CDF28: 803AC31C (__vt__10cCcD_GStts)
//	800CDF38: 803C3728 (__vt__9cCcD_Stts)
//	800CDF3C: 803C3728 (__vt__9cCcD_Stts)
//	800CDF4C: 803AC170 (__vt__8dCcD_Cps)
//	800CDF50: 803AC170 (__vt__8dCcD_Cps)
//	800CDF70: 803C3608 (__vt__12cCcD_CpsAttr)
//	800CDF74: 803C3608 (__vt__12cCcD_CpsAttr)
//	800CDF8C: 8026EFA4 (__dt__8cM3dGCpsFv)
//	800CDF98: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CDF9C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CDFAC: 803A7218 (__vt__8cM3dGAab)
//	800CDFB0: 803A7218 (__vt__8cM3dGAab)
//	800CDFC0: 800840E4 (__dt__12dCcD_GObjInfFv)
//	800CDFC8: 8008506C (__dt__8dCcD_CpsFv)
//	800CDFCC: 8008506C (__dt__8dCcD_CpsFv)
//	800CDFD8: 80361CE8 (__destroy_arr)
//	800CDFE4: 803AC050 (__vt__8dCcD_Cyl)
//	800CDFE8: 803AC050 (__vt__8dCcD_Cyl)
//	800CE008: 803C35A4 (__vt__12cCcD_CylAttr)
//	800CE00C: 803C35A4 (__vt__12cCcD_CylAttr)
//	800CE024: 803A720C (__vt__8cM3dGCyl)
//	800CE028: 803A720C (__vt__8cM3dGCyl)
//	800CE038: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CE03C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CE04C: 803A7218 (__vt__8cM3dGAab)
//	800CE050: 803A7218 (__vt__8cM3dGAab)
//	800CE060: 800840E4 (__dt__12dCcD_GObjInfFv)
//	800CE06C: 803ABFC0 (__vt__8dCcD_Sph)
//	800CE070: 803ABFC0 (__vt__8dCcD_Sph)
//	800CE090: 803C3540 (__vt__12cCcD_SphAttr)
//	800CE094: 803C3540 (__vt__12cCcD_SphAttr)
//	800CE0AC: 803A7904 (__vt__8cM3dGSph)
//	800CE0B0: 803A7904 (__vt__8cM3dGSph)
//	800CE0C0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CE0C4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CE0D4: 803A7218 (__vt__8cM3dGAab)
//	800CE0D8: 803A7218 (__vt__8cM3dGAab)
//	800CE0E8: 800840E4 (__dt__12dCcD_GObjInfFv)
//	800CE0F0: 80084D60 (__dt__8dCcD_CylFv)
//	800CE0F4: 80084D60 (__dt__8dCcD_CylFv)
//	800CE100: 80361CE8 (__destroy_arr)
//	800CE108: 80084D60 (__dt__8dCcD_CylFv)
//	800CE10C: 80084D60 (__dt__8dCcD_CylFv)
//	800CE118: 80361CE8 (__destroy_arr)
//	800CE124: 803AC2E4 (__vt__9dCcD_Stts)
//	800CE128: 803AC2E4 (__vt__9dCcD_Stts)
//	800CE140: 803AC310 (__vt__10dCcD_GStts)
//	800CE144: 803AC310 (__vt__10dCcD_GStts)
//	800CE154: 803AC31C (__vt__10cCcD_GStts)
//	800CE158: 803AC31C (__vt__10cCcD_GStts)
//	800CE168: 803C3728 (__vt__9cCcD_Stts)
//	800CE16C: 803C3728 (__vt__9cCcD_Stts)
//	800CE18C: 803A3354 (__vt__12J3DFrameCtrl)
//	800CE190: 803A3354 (__vt__12J3DFrameCtrl)
//	800CE1B0: 803A3354 (__vt__12J3DFrameCtrl)
//	800CE1B4: 803A3354 (__vt__12J3DFrameCtrl)
//	800CE1C4: 803B2F70 (__vt__9daPy_py_c)
//	800CE1C8: 803B2F70 (__vt__9daPy_py_c)
//	800CE1D8: 80018C8C (__dt__10fopAc_ac_cFv)
//	800CE1E8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_c::~daAlink_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__9daAlink_cFv.s"
}
#pragma pop

/* 800CE208-800CE294 008C+00 s=1 e=0 z=0  None .text      daAlink_Delete__FP9daAlink_c */
//	800CE238: 80140070 (loadModelDVD__9daAlink_cFv)
//	800CE264: 80140274 (loadShieldModelDVD__9daAlink_cFv)
//	800CE278: 800CD7AC (__dt__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_Delete(daAlink_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_Delete__FP9daAlink_c.s"
}
#pragma pop

/* 800CE294-800CE468 01D4+00 s=1 e=0 z=0  None .text      checkNoSubjectModeCamera__9daAlink_cFv */
//	800CE2A4: 803621C0 (_savegpr_22)
//	800CE2CC: 80181640 (dCam_getBody__Fv)
//	800CE2D4: 80181640 (dCam_getBody__Fv)
//	800CE2D8: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE2DC: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE2E0: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	800CE2EC: 80181640 (dCam_getBody__Fv)
//	800CE2F4: 80181640 (dCam_getBody__Fv)
//	800CE2F8: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE2FC: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE304: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	800CE31C: 80181640 (dCam_getBody__Fv)
//	800CE324: 80181640 (dCam_getBody__Fv)
//	800CE328: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE32C: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE334: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	800CE34C: 80181640 (dCam_getBody__Fv)
//	800CE354: 80181640 (dCam_getBody__Fv)
//	800CE358: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE35C: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE364: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	800CE37C: 80181640 (dCam_getBody__Fv)
//	800CE384: 80181640 (dCam_getBody__Fv)
//	800CE388: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE38C: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE394: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	800CE3AC: 80181640 (dCam_getBody__Fv)
//	800CE3B4: 80181640 (dCam_getBody__Fv)
//	800CE3B8: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE3BC: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE3C4: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	800CE3F4: 80181640 (dCam_getBody__Fv)
//	800CE3FC: 80181640 (dCam_getBody__Fv)
//	800CE400: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE404: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE40C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	800CE424: 80181640 (dCam_getBody__Fv)
//	800CE42C: 80181640 (dCam_getBody__Fv)
//	800CE430: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE434: 80392094 (d_a_d_a_alink__stringBase0)
//	800CE43C: 80164B64 (GetCameraTypeFromCameraName__9dCamera_cFPCc)
//	800CE454: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNoSubjectModeCamera() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoSubjectModeCamera__9daAlink_cFv.s"
}
#pragma pop

/* 800CE468-800CE628 01C0+00 s=2 e=0 z=0  None .text      acceptSubjectModeChange__9daAlink_cFv */
//	800CE478: 803621C4 (_savegpr_23)
//	800CE49C: 80181640 (dCam_getBody__Fv)
//	800CE4A4: 801614F4 (ChangeModeOK__9dCamera_cFl)
//	800CE4B4: 800CE294 (checkNoSubjectModeCamera__9daAlink_cFv)
//	800CE4D8: 800737E4 (LockonTruth__12dAttention_cFv)
//	800CE50C: 800ECF04 (checkHorseLieAnime__9daAlink_cCFv)
//	800CE528: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800CE568: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800CE584: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800CE5E4: 8012BFA8 (checkWolfWaitSlipPolygon__9daAlink_cFv)
//	800CE614: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::acceptSubjectModeChange() {
    nofralloc
#include "asm/d/a/d_a_alink/acceptSubjectModeChange__9daAlink_cFv.s"
}
#pragma pop

/* 800CE628-800CE728 0100+00 s=5 e=0 z=0  None .text      checkSubjectAction__9daAlink_cFv */
//	800CE63C: 800CE468 (acceptSubjectModeChange__9daAlink_cFv)
//	800CE654: 804061C0 (g_dComIfG_gameInfo)
//	800CE658: 804061C0 (g_dComIfG_gameInfo)
//	800CE6A0: 800F6BEC (procCanoeSubjectivityInit__9daAlink_cFv)
//	800CE6C8: 801073D0 (procBoardSubjectivityInit__9daAlink_cFv)
//	800CE6D4: 800F1294 (procHorseSubjectivityInit__9daAlink_cFv)
//	800CE6E8: 8013384C (procWolfRopeSubjectivityInit__9daAlink_cFv)
//	800CE6FC: 800CEF70 (procCoSwimSubjectivityInit__9daAlink_cFv)
//	800CE708: 800CED84 (procCoSubjectivityInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSubjectAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSubjectAction__9daAlink_cFv.s"
}
#pragma pop

/* 800CE728-800CE8A0 0178+00 s=1 e=0 z=0  None .text      checkBodyAngleX__9daAlink_cFs */
//	800CE76C: 80391734 (lit_5908)
//	800CE770: 80391734 (lit_5908)
//	800CE78C: 80452C98 (lit_5943)
//	800CE7C8: 80452C9C (lit_5944)
//	800CE7D4: 80452CA0 (lit_5945)
//	800CE7E0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800CE7E8: 800E23FC (concatMagneBootMtx__9daAlink_cFv)
//	800CE7EC: 803DD470 (now__14mDoMtx_stack_c)
//	800CE7F0: 803DD470 (now__14mDoMtx_stack_c)
//	800CE800: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	800CE804: 803DD470 (now__14mDoMtx_stack_c)
//	800CE808: 803DD470 (now__14mDoMtx_stack_c)
//	800CE814: 80346D6C (PSMTXMultVec)
//	800CE824: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800CE83C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800CE860: 800E247C (multVecMagneBootInvMtx__9daAlink_cFP4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBodyAngleX(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBodyAngleX__9daAlink_cFs.s"
}
#pragma pop

/* 800CE8A0-800CEAF4 0254+00 s=15 e=0 z=0  None .text      setBodyAngleToCamera__9daAlink_cFv */
//	800CE8B4: 804061C0 (g_dComIfG_gameInfo)
//	800CE8B8: 804061C0 (g_dComIfG_gameInfo)
//	800CE8F4: 80452CA4 (lit_6021)
//	800CE900: 80452CA8 (lit_6022)
//	800CE918: 80452CAC (lit_6023)
//	800CE920: 804061C0 (g_dComIfG_gameInfo)
//	800CE924: 804061C0 (g_dComIfG_gameInfo)
//	800CE950: 80439A20 (sincosTable___5JMath)
//	800CE954: 80439A20 (sincosTable___5JMath)
//	800CE960: 80452CB0 (lit_6025)
//	800CE9D8: 800B1B68 (checkNotItemSinkLimit__9daAlink_cFv)
//	800CEA10: 800B1B68 (checkNotItemSinkLimit__9daAlink_cFv)
//	800CEA3C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800CEA40: 804061C0 (g_dComIfG_gameInfo)
//	800CEA44: 804061C0 (g_dComIfG_gameInfo)
//	800CEA70: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800CEA74: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800CEA7C: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800CEA80: 8038EB50 (m__18daAlinkHIO_item_c0)
//	800CEAC0: 800CE728 (checkBodyAngleX__9daAlink_cFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBodyAngleToCamera() {
    nofralloc
#include "asm/d/a/d_a_alink/setBodyAngleToCamera__9daAlink_cFv.s"
}
#pragma pop

/* 800CEAF4-800CEB58 0064+00 s=9 e=0 z=0  None .text      setSubjectMode__9daAlink_cFv */
//	800CEB00: 804061C0 (g_dComIfG_gameInfo)
//	800CEB04: 804061C0 (g_dComIfG_gameInfo)
//	800CEB1C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800CEB30: 80452CB8 (lit_6040)
//	800CEB38: 80452CBC (lit_6041)
//	800CEB44: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSubjectMode() {
    nofralloc
#include "asm/d/a/d_a_alink/setSubjectMode__9daAlink_cFv.s"
}
#pragma pop

/* 800CEB58-800CEBD8 0080+00 s=2 e=0 z=0  None .text      subjectCancelTrigger__9daAlink_cFv */
//	800CEB78: 800C0594 (checkNotBattleStage__9daAlink_cFv)
//	800CEB84: 804061C0 (g_dComIfG_gameInfo)
//	800CEB88: 804061C0 (g_dComIfG_gameInfo)
//	800CEBB8: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::subjectCancelTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/subjectCancelTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 800CEBD8-800CECE4 010C+00 s=9 e=0 z=0  None .text      checkSubjectEnd__9daAlink_cFi */
//	800CEBF8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800CEC00: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800CEC10: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800CEC30: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	800CEC40: 800CEB58 (subjectCancelTrigger__9daAlink_cFv)
//	800CEC58: 804061C0 (g_dComIfG_gameInfo)
//	800CEC5C: 804061C0 (g_dComIfG_gameInfo)
//	800CEC88: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800CEC9C: 80452CB8 (lit_6040)
//	800CECA4: 80452CBC (lit_6041)
//	800CECB0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSubjectEnd(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSubjectEnd__9daAlink_cFi.s"
}
#pragma pop

/* 800CECE4-800CED48 0064+00 s=1 e=0 z=0  None .text      searchPeepObj__9daAlink_cFP10fopAc_ac_cPv
 */
//	800CECF4: 803621DC (_savegpr_29)
//	800CED18: 8034739C (PSVECSquareDistance)
//	800CED34: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::searchPeepObj(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/searchPeepObj__9daAlink_cFP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800CED48-800CED84 003C+00 s=1 e=0 z=0  None .text      daAlink_searchPeepObj__FP10fopAc_ac_cPv */
//	800CED5C: 804061C0 (g_dComIfG_gameInfo)
//	800CED60: 804061C0 (g_dComIfG_gameInfo)
//	800CED6C: 800CECE4 (searchPeepObj__9daAlink_cFP10fopAc_ac_cPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchPeepObj(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchPeepObj__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800CED84-800CEE08 0084+00 s=2 e=0 z=0  None .text      procCoSubjectivityInit__9daAlink_cFv */
//	800CED9C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800CEDA0: 80452CC0 (lit_6108)
//	800CEDAC: 800CEAF4 (setSubjectMode__9daAlink_cFv)
//	800CEDCC: 80452CC0 (lit_6108)
//	800CEDD0: 80452CC4 (lit_6109)
//	800CEDD4: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	800CEDE4: 80452CC0 (lit_6108)
//	800CEDE8: 80452CC4 (lit_6109)
//	800CEDEC: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 800CEE08-800CEF70 0168+00 s=1 e=0 z=0  None .text      procCoSubjectivity__9daAlink_cFv */
//	800CEE28: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	800CEE34: 800B7BF8 (orderTalk__9daAlink_cFi)
//	800CEE58: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	800CEE74: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800CEE90: 800CEBD8 (checkSubjectEnd__9daAlink_cFi)
//	800CEE9C: 804061C0 (g_dComIfG_gameInfo)
//	800CEEA0: 804061C0 (g_dComIfG_gameInfo)
//	800CEEB8: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	800CEECC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800CEEE0: 80452CB8 (lit_6040)
//	800CEEE8: 80452CBC (lit_6041)
//	800CEEF4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800CEEFC: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800CEF14: 800B8988 (checkItemAction__9daAlink_cFv)
//	800CEF24: 800B994C (checkItemChangeFromButton__9daAlink_cFv)
//	800CEF34: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800CEF54: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 800CEF70-800CF018 00A8+00 s=1 e=0 z=0  None .text      procCoSwimSubjectivityInit__9daAlink_cFv
 */
//	800CEF88: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800CEF8C: 80452CC0 (lit_6108)
//	800CEF98: 800CEAF4 (setSubjectMode__9daAlink_cFv)
//	800CEFB0: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	800CEFB4: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	800CEFC0: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	800CEFD0: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	800CEFD4: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	800CEFE0: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800CEFE4: 804061C0 (g_dComIfG_gameInfo)
//	800CEFE8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSwimSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSwimSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 800CF018-800CF100 00E8+00 s=1 e=0 z=0  None .text      procCoSwimSubjectivity__9daAlink_cFv */
//	800CF038: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	800CF044: 800B7BF8 (orderTalk__9daAlink_cFi)
//	800CF068: 80104034 (setSwimUpDownOffset__9daAlink_cFv)
//	800CF074: 800CEBD8 (checkSubjectEnd__9daAlink_cFi)
//	800CF088: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800CF09C: 80452CB8 (lit_6040)
//	800CF0A4: 80452CBC (lit_6041)
//	800CF0B0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800CF0C8: 8013852C (procWolfSwimWaitInit__9daAlink_cFi)
//	800CF0D8: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	800CF0E4: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSwimSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSwimSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 800CF100-800CF1B8 00B8+00 s=1 e=0 z=0  None .text      procCoPeepSubjectivityInit__9daAlink_cFv
 */
//	800CF118: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800CF11C: 80452CC0 (lit_6108)
//	800CF138: 80452CC4 (lit_6109)
//	800CF13C: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	800CF14C: 80452CC4 (lit_6109)
//	800CF150: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800CF164: 80452CC0 (lit_6108)
//	800CF170: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800CF174: 80452CC0 (lit_6108)
//	800CF17C: 804061C0 (g_dComIfG_gameInfo)
//	800CF180: 804061C0 (g_dComIfG_gameInfo)
//	800CF190: 80452CC8 (lit_6183)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPeepSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPeepSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 800CF1B8-800CF25C 00A4+00 s=1 e=0 z=0  None .text      procCoPeepSubjectivity__9daAlink_cFv */
//	800CF1DC: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	800CF1F0: 800CED48 (daAlink_searchPeepObj__FP10fopAc_ac_cPv)
//	800CF1F4: 800CED48 (daAlink_searchPeepObj__FP10fopAc_ac_cPv)
//	800CF1FC: 800197BC (fopAcIt_Executor__FPFPvPv_iPv)
//	800CF214: 804061C0 (g_dComIfG_gameInfo)
//	800CF218: 804061C0 (g_dComIfG_gameInfo)
//	800CF230: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800CF240: 800BDD70 (startPeepChange__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPeepSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPeepSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 800CF25C-800CF270 0014+00 s=1 e=0 z=0  None .text      checkBoardRide__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoardRide() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoardRide__9daAlink_cCFv.s"
}
#pragma pop

/* 800CF270-800CF284 0014+00 s=1 e=0 z=0  None .text      checkCanoeRide__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoeRide() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoeRide__9daAlink_cCFv.s"
}
#pragma pop

/* 800CF284-800CF298 0014+00 s=1 e=0 z=0  None .text      checkHorseRide__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseRide() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseRide__9daAlink_cCFv.s"
}
#pragma pop

/* 800CF298-800CF2B4 001C+00 s=1 e=0 z=0  None .text      getLeftItemMatrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getLeftItemMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getLeftItemMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800CF2B4-800CF2C8 0014+00 s=1 e=0 z=0  None .text      checkBoarRide__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoarRide() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoarRide__9daAlink_cCFv.s"
}
#pragma pop

/* 800CF2C8-800CF2DC 0014+00 s=1 e=0 z=0  None .text      checkSpinnerRide__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSpinnerRide() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSpinnerRide__9daAlink_cCFv.s"
}
#pragma pop

/* 800CF2DC-800CF2F8 001C+00 s=1 e=0 z=0  None .text      getLeftHandMatrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getLeftHandMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getLeftHandMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800CF2F8-800CF314 001C+00 s=1 e=0 z=0  None .text      getRightHandMatrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getRightHandMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getRightHandMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800CF314-800CF328 0014+00 s=1 e=0 z=0  None .text
 * onSceneChangeArea__9daAlink_cFUcUcP10fopAc_ac_c              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onSceneChangeArea(u8 param_0, u8 param_1, fopAc_ac_c* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/onSceneChangeArea__9daAlink_cFUcUcP10fopAc_ac_c.s"
}
#pragma pop

/* 800CF328-800CF344 001C+00 s=1 e=0 z=0  None .text      getRightItemMatrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getRightItemMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getRightItemMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800CF344-800CF380 003C+00 s=1 e=0 z=0  None .text      checkPlayerNoDraw__9daAlink_cFv */
//	800CF348: 804061C0 (g_dComIfG_gameInfo)
//	800CF34C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPlayerNoDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/checkPlayerNoDraw__9daAlink_cFv.s"
}
#pragma pop

/* 800CF380-800CFC3C 08BC+00 s=1 e=0 z=0  None .text      __ct__9daAlink_cFv */
//	800CF390: 803621D0 (_savegpr_26)
//	800CF3A0: 80018B64 (__ct__10fopAc_ac_cFv)
//	800CF3A4: 803B2F70 (__vt__9daPy_py_c)
//	800CF3A8: 803B2F70 (__vt__9daPy_py_c)
//	800CF3B0: 803B32B8 (__vt__9daAlink_c)
//	800CF3B4: 803B32B8 (__vt__9daAlink_c)
//	800CF3C0: 803A3354 (__vt__12J3DFrameCtrl)
//	800CF3C4: 803A3354 (__vt__12J3DFrameCtrl)
//	800CF3D4: 803283FC (init__12J3DFrameCtrlFs)
//	800CF3E4: 803A3354 (__vt__12J3DFrameCtrl)
//	800CF3E8: 803A3354 (__vt__12J3DFrameCtrl)
//	800CF3F8: 803283FC (init__12J3DFrameCtrlFs)
//	800CF408: 801410EC (__ct__16daPy_actorKeep_cFv)
//	800CF40C: 801410EC (__ct__16daPy_actorKeep_cFv)
//	800CF41C: 80361D60 (__construct_array)
//	800CF420: 803C3728 (__vt__9cCcD_Stts)
//	800CF424: 803C3728 (__vt__9cCcD_Stts)
//	800CF430: 80083760 (__ct__10dCcD_GSttsFv)
//	800CF434: 803AC2E4 (__vt__9dCcD_Stts)
//	800CF438: 803AC2E4 (__vt__9dCcD_Stts)
//	800CF44C: 80141020 (__ct__8dCcD_CylFv)
//	800CF450: 80141020 (__ct__8dCcD_CylFv)
//	800CF454: 80084D60 (__dt__8dCcD_CylFv)
//	800CF458: 80084D60 (__dt__8dCcD_CylFv)
//	800CF464: 80361D60 (__construct_array)
//	800CF46C: 80141020 (__ct__8dCcD_CylFv)
//	800CF470: 80141020 (__ct__8dCcD_CylFv)
//	800CF474: 80084D60 (__dt__8dCcD_CylFv)
//	800CF478: 80084D60 (__dt__8dCcD_CylFv)
//	800CF484: 80361D60 (__construct_array)
//	800CF490: 80083A28 (__ct__12dCcD_GObjInfFv)
//	800CF494: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CF498: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CF4A0: 803A7218 (__vt__8cM3dGAab)
//	800CF4A4: 803A7218 (__vt__8cM3dGAab)
//	800CF4AC: 803A7904 (__vt__8cM3dGSph)
//	800CF4B0: 803A7904 (__vt__8cM3dGSph)
//	800CF4B8: 803C3540 (__vt__12cCcD_SphAttr)
//	800CF4BC: 803C3540 (__vt__12cCcD_SphAttr)
//	800CF4CC: 803ABFC0 (__vt__8dCcD_Sph)
//	800CF4D0: 803ABFC0 (__vt__8dCcD_Sph)
//	800CF4F0: 80083A28 (__ct__12dCcD_GObjInfFv)
//	800CF4F4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CF4F8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CF500: 803A7218 (__vt__8cM3dGAab)
//	800CF504: 803A7218 (__vt__8cM3dGAab)
//	800CF50C: 803A720C (__vt__8cM3dGCyl)
//	800CF510: 803A720C (__vt__8cM3dGCyl)
//	800CF518: 803C35A4 (__vt__12cCcD_CylAttr)
//	800CF51C: 803C35A4 (__vt__12cCcD_CylAttr)
//	800CF52C: 803AC050 (__vt__8dCcD_Cyl)
//	800CF530: 803AC050 (__vt__8dCcD_Cyl)
//	800CF54C: 80140FA0 (__ct__8dCcD_CpsFv)
//	800CF550: 80140FA0 (__ct__8dCcD_CpsFv)
//	800CF554: 8008506C (__dt__8dCcD_CpsFv)
//	800CF558: 8008506C (__dt__8dCcD_CpsFv)
//	800CF564: 80361D60 (__construct_array)
//	800CF570: 80083A28 (__ct__12dCcD_GObjInfFv)
//	800CF574: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CF578: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CF580: 803A7218 (__vt__8cM3dGAab)
//	800CF584: 803A7218 (__vt__8cM3dGAab)
//	800CF590: 8026EF88 (__ct__8cM3dGCpsFv)
//	800CF594: 803C3608 (__vt__12cCcD_CpsAttr)
//	800CF598: 803C3608 (__vt__12cCcD_CpsAttr)
//	800CF5A8: 803AC170 (__vt__8dCcD_Cps)
//	800CF5AC: 803AC170 (__vt__8dCcD_Cps)
//	800CF5C4: 803C3728 (__vt__9cCcD_Stts)
//	800CF5C8: 803C3728 (__vt__9cCcD_Stts)
//	800CF5D4: 80083760 (__ct__10dCcD_GSttsFv)
//	800CF5D8: 803AC2E4 (__vt__9dCcD_Stts)
//	800CF5DC: 803AC2E4 (__vt__9dCcD_Stts)
//	800CF5F0: 80083A28 (__ct__12dCcD_GObjInfFv)
//	800CF5F4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CF5F8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	800CF600: 803A7218 (__vt__8cM3dGAab)
//	800CF604: 803A7218 (__vt__8cM3dGAab)
//	800CF60C: 803A7904 (__vt__8cM3dGSph)
//	800CF610: 803A7904 (__vt__8cM3dGSph)
//	800CF618: 803C3540 (__vt__12cCcD_SphAttr)
//	800CF61C: 803C3540 (__vt__12cCcD_SphAttr)
//	800CF628: 803ABFC0 (__vt__8dCcD_Sph)
//	800CF62C: 803ABFC0 (__vt__8dCcD_Sph)
//	800CF640: 80075EAC (__ct__12dBgS_AcchCirFv)
//	800CF644: 80075EAC (__ct__12dBgS_AcchCirFv)
//	800CF648: 80077414 (__dt__12dBgS_AcchCirFv)
//	800CF64C: 80077414 (__dt__12dBgS_AcchCirFv)
//	800CF658: 80361D60 (__construct_array)
//	800CF664: 800760A0 (__ct__9dBgS_AcchFv)
//	800CF668: 803B2F28 (__vt__13dBgS_LinkAcch)
//	800CF66C: 803B2F28 (__vt__13dBgS_LinkAcch)
//	800CF688: 80078E98 (SetLink__16dBgS_PolyPassChkFv)
//	800CF690: 80078030 (__ct__15dBgS_LinkLinChkFv)
//	800CF698: 8007838C (__ct__15dBgS_RopeLinChkFv)
//	800CF6A0: 800782B8 (__ct__20dBgS_BoomerangLinChkFv)
//	800CF6A8: 800781D8 (__ct__16dBgS_ArrowLinChkFv)
//	800CF6B4: 8007757C (__ct__11dBgS_GndChkFv)
//	800CF6B8: 803B2EF8 (__vt__15dBgS_LinkGndChk)
//	800CF6BC: 803B2EF8 (__vt__15dBgS_LinkGndChk)
//	800CF6E0: 80078E98 (SetLink__16dBgS_PolyPassChkFv)
//	800CF6EC: 80078FF4 (__ct__12dBgS_RoofChkFv)
//	800CF6F0: 803B2EC8 (__vt__16dBgS_LinkRoofChk)
//	800CF6F4: 803B2EC8 (__vt__16dBgS_LinkRoofChk)
//	800CF718: 80078E98 (SetLink__16dBgS_PolyPassChkFv)
//	800CF720: 80078030 (__ct__15dBgS_LinkLinChkFv)
//	800CF728: 80268074 (__ct__13cBgS_PolyInfoFv)
//	800CF730: 80268074 (__ct__13cBgS_PolyInfoFv)
//	800CF738: 80268074 (__ct__13cBgS_PolyInfoFv)
//	800CF740: 80268074 (__ct__13cBgS_PolyInfoFv)
//	800CF748: 80077F5C (__ct__14dBgS_ObjLinChkFv)
//	800CF754: 8007757C (__ct__11dBgS_GndChkFv)
//	800CF758: 803A382C (__vt__14dBgS_ObjGndChk)
//	800CF75C: 803A382C (__vt__14dBgS_ObjGndChk)
//	800CF780: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	800CF788: 80140E2C (__ct__19mDoExt_AnmRatioPackFv)
//	800CF78C: 80140E2C (__ct__19mDoExt_AnmRatioPackFv)
//	800CF790: 80140DF0 (__dt__19mDoExt_AnmRatioPackFv)
//	800CF794: 80140DF0 (__dt__19mDoExt_AnmRatioPackFv)
//	800CF7A0: 80361D60 (__construct_array)
//	800CF7A8: 80140E2C (__ct__19mDoExt_AnmRatioPackFv)
//	800CF7AC: 80140E2C (__ct__19mDoExt_AnmRatioPackFv)
//	800CF7B0: 80140DF0 (__dt__19mDoExt_AnmRatioPackFv)
//	800CF7B4: 80140DF0 (__dt__19mDoExt_AnmRatioPackFv)
//	800CF7C0: 80361D60 (__construct_array)
//	800CF7C8: 80140DCC (__defctor__14daPy_anmHeap_cFv)
//	800CF7CC: 80140DCC (__defctor__14daPy_anmHeap_cFv)
//	800CF7D0: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CF7D4: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CF7E0: 80361D60 (__construct_array)
//	800CF7E8: 80140DCC (__defctor__14daPy_anmHeap_cFv)
//	800CF7EC: 80140DCC (__defctor__14daPy_anmHeap_cFv)
//	800CF7F0: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CF7F4: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CF800: 80361D60 (__construct_array)
//	800CF808: 80140D80 (__ct__16daPy_frameCtrl_cFv)
//	800CF80C: 80140D80 (__ct__16daPy_frameCtrl_cFv)
//	800CF810: 80140D24 (__dt__16daPy_frameCtrl_cFv)
//	800CF814: 80140D24 (__dt__16daPy_frameCtrl_cFv)
//	800CF820: 80361D60 (__construct_array)
//	800CF828: 80140D80 (__ct__16daPy_frameCtrl_cFv)
//	800CF82C: 80140D80 (__ct__16daPy_frameCtrl_cFv)
//	800CF830: 80140D24 (__dt__16daPy_frameCtrl_cFv)
//	800CF834: 80140D24 (__dt__16daPy_frameCtrl_cFv)
//	800CF840: 80361D60 (__construct_array)
//	800CF844: 803A6F88 (__vt__12dDlst_base_c)
//	800CF848: 803A6F88 (__vt__12dDlst_base_c)
//	800CF850: 803BA14C (__vt__18daPy_sightPacket_c)
//	800CF854: 803BA14C (__vt__18daPy_sightPacket_c)
//	800CF85C: 803B3580 (__vt__15daAlink_sight_c)
//	800CF860: 803B3580 (__vt__15daAlink_sight_c)
//	800CF86C: 803B3590 (__vt__20daAlink_lockCursor_c)
//	800CF870: 803B3590 (__vt__20daAlink_lockCursor_c)
//	800CF880: 8015ED10 (__ct__14daPy_anmHeap_cFUl)
//	800CF88C: 8015ED10 (__ct__14daPy_anmHeap_cFUl)
//	800CF898: 8015ED10 (__ct__14daPy_anmHeap_cFUl)
//	800CF8A4: 8015ED10 (__ct__14daPy_anmHeap_cFUl)
//	800CF8B0: 8015ED10 (__ct__14daPy_anmHeap_cFUl)
//	800CF8B8: 803A3354 (__vt__12J3DFrameCtrl)
//	800CF8BC: 803A3354 (__vt__12J3DFrameCtrl)
//	800CF8CC: 803283FC (init__12J3DFrameCtrlFs)
//	800CF8D8: 803B2E80 (__vt__8dEyeHL_c)
//	800CF8DC: 803B2E80 (__vt__8dEyeHL_c)
//	800CF904: 80140DCC (__defctor__14daPy_anmHeap_cFv)
//	800CF908: 80140DCC (__defctor__14daPy_anmHeap_cFv)
//	800CF90C: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CF910: 8015ED50 (__dt__14daPy_anmHeap_cFv)
//	800CF91C: 80361D60 (__construct_array)
//	800CF928: 8015ED10 (__ct__14daPy_anmHeap_cFUl)
//	800CF92C: 803CD97C (__vt__9J3DPacket)
//	800CF930: 803CD97C (__vt__9J3DPacket)
//	800CF948: 803B35A0 (__vt__14daAlink_blur_c)
//	800CF94C: 803B35A0 (__vt__14daAlink_blur_c)
//	800CF958: 800125DC (__ct__4cXyzFv)
//	800CF95C: 800125DC (__ct__4cXyzFv)
//	800CF960: 80009184 (__dt__4cXyzFv)
//	800CF964: 80009184 (__dt__4cXyzFv)
//	800CF970: 80361D60 (__construct_array)
//	800CF978: 800125DC (__ct__4cXyzFv)
//	800CF97C: 800125DC (__ct__4cXyzFv)
//	800CF980: 80009184 (__dt__4cXyzFv)
//	800CF984: 80009184 (__dt__4cXyzFv)
//	800CF990: 80361D60 (__construct_array)
//	800CF994: 803A357C (__vt__19JPAParticleCallBack)
//	800CF998: 803A357C (__vt__19JPAParticleCallBack)
//	800CF9A0: 803B35B4 (__vt__29dAlink_bottleWaterPcallBack_c)
//	800CF9A4: 803B35B4 (__vt__29dAlink_bottleWaterPcallBack_c)
//	800CF9B8: 80452CC0 (lit_6108)
//	800CF9C4: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CF9CC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CF9D4: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CF9DC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CF9E4: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CF9EC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CF9F4: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CF9FC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CFA04: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CFA0C: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CFA14: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800CFA1C: 80249F00 (__ct__10dMsgFlow_cFv)
//	800CFA24: 800CFCF4 (__ct__18daAlink_footData_cFv)
//	800CFA28: 800CFCF4 (__ct__18daAlink_footData_cFv)
//	800CFA2C: 800CFCB8 (__dt__18daAlink_footData_cFv)
//	800CFA30: 800CFCB8 (__dt__18daAlink_footData_cFv)
//	800CFA3C: 80361D60 (__construct_array)
//	800CFA44: 800CFCF4 (__ct__18daAlink_footData_cFv)
//	800CFA48: 800CFCF4 (__ct__18daAlink_footData_cFv)
//	800CFA4C: 800CFCB8 (__dt__18daAlink_footData_cFv)
//	800CFA50: 800CFCB8 (__dt__18daAlink_footData_cFv)
//	800CFA5C: 80361D60 (__construct_array)
//	800CFA64: 802C333C (__ct__14Z2CreatureLinkFv)
//	800CFA6C: 802CAAC0 (__ct__13Z2WolfHowlMgrFv)
//	800CFA74: 80035C8C (__ct__9dJntCol_cFv)
//	800CFA78: 803A8578 (__vt__18JPAEmitterCallBack)
//	800CFA7C: 803A8578 (__vt__18JPAEmitterCallBack)
//	800CFA84: 803A8554 (__vt__18dPa_levelEcallBack)
//	800CFA88: 803A8554 (__vt__18dPa_levelEcallBack)
//	800CFA90: 803A83A0 (__vt__22dPa_hermiteEcallBack_c)
//	800CFA94: 803A83A0 (__vt__22dPa_hermiteEcallBack_c)
//	800CFAAC: 80112C80 (__ct__5csXyzFv)
//	800CFAB0: 80112C80 (__ct__5csXyzFv)
//	800CFAB4: 80018BD0 (__dt__5csXyzFv)
//	800CFAB8: 80018BD0 (__dt__5csXyzFv)
//	800CFAC4: 80361D60 (__construct_array)
//	800CFACC: 80112C80 (__ct__5csXyzFv)
//	800CFAD0: 80112C80 (__ct__5csXyzFv)
//	800CFAD4: 80018BD0 (__dt__5csXyzFv)
//	800CFAD8: 80018BD0 (__dt__5csXyzFv)
//	800CFAE4: 80361D60 (__construct_array)
//	800CFAEC: 80112C80 (__ct__5csXyzFv)
//	800CFAF0: 80112C80 (__ct__5csXyzFv)
//	800CFAF4: 80018BD0 (__dt__5csXyzFv)
//	800CFAF8: 80018BD0 (__dt__5csXyzFv)
//	800CFB04: 80361D60 (__construct_array)
//	800CFB0C: 8000E460 (__ct__13J3DGXColorS10Fv)
//	800CFB10: 8000E460 (__ct__13J3DGXColorS10Fv)
//	800CFB20: 80361D60 (__construct_array)
//	800CFB28: 8000E460 (__ct__13J3DGXColorS10Fv)
//	800CFB2C: 8000E460 (__ct__13J3DGXColorS10Fv)
//	800CFB3C: 80361D60 (__construct_array)
//	800CFB44: 800CFC78 (__ct__Q29daAlink_c14firePointEff_cFv)
//	800CFB48: 800CFC78 (__ct__Q29daAlink_c14firePointEff_cFv)
//	800CFB4C: 800CFC3C (__dt__Q29daAlink_c14firePointEff_cFv)
//	800CFB50: 800CFC3C (__dt__Q29daAlink_c14firePointEff_cFv)
//	800CFB5C: 80361D60 (__construct_array)
//	800CFB64: 800125DC (__ct__4cXyzFv)
//	800CFB68: 800125DC (__ct__4cXyzFv)
//	800CFB6C: 80009184 (__dt__4cXyzFv)
//	800CFB70: 80009184 (__dt__4cXyzFv)
//	800CFB7C: 80361D60 (__construct_array)
//	800CFB84: 800125DC (__ct__4cXyzFv)
//	800CFB88: 800125DC (__ct__4cXyzFv)
//	800CFB8C: 80009184 (__dt__4cXyzFv)
//	800CFB90: 80009184 (__dt__4cXyzFv)
//	800CFB9C: 80361D60 (__construct_array)
//	800CFBA4: 800125DC (__ct__4cXyzFv)
//	800CFBA8: 800125DC (__ct__4cXyzFv)
//	800CFBAC: 80009184 (__dt__4cXyzFv)
//	800CFBB0: 80009184 (__dt__4cXyzFv)
//	800CFBBC: 80361D60 (__construct_array)
//	800CFBC4: 800125DC (__ct__4cXyzFv)
//	800CFBC8: 800125DC (__ct__4cXyzFv)
//	800CFBCC: 80009184 (__dt__4cXyzFv)
//	800CFBD0: 80009184 (__dt__4cXyzFv)
//	800CFBDC: 80361D60 (__construct_array)
//	800CFBE4: 800125DC (__ct__4cXyzFv)
//	800CFBE8: 800125DC (__ct__4cXyzFv)
//	800CFBEC: 80009184 (__dt__4cXyzFv)
//	800CFBF0: 80009184 (__dt__4cXyzFv)
//	800CFBFC: 80361D60 (__construct_array)
//	800CFC04: 800125DC (__ct__4cXyzFv)
//	800CFC08: 800125DC (__ct__4cXyzFv)
//	800CFC0C: 80009184 (__dt__4cXyzFv)
//	800CFC10: 80009184 (__dt__4cXyzFv)
//	800CFC1C: 80361D60 (__construct_array)
//	800CFC28: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_c::daAlink_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__9daAlink_cFv.s"
}
#pragma pop

/* 800CFC3C-800CFC78 003C+00 s=2 e=0 z=0  None .text      __dt__Q29daAlink_c14firePointEff_cFv */
//	800CFC5C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_c::firePointEff_c::~firePointEff_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__Q29daAlink_c14firePointEff_cFv.s"
}
#pragma pop

/* 800CFC78-800CFC7C 0004+00 s=1 e=0 z=0  None .text      __ct__Q29daAlink_c14firePointEff_cFv */
daAlink_c::firePointEff_c::firePointEff_c() {
    /* empty function */
}

/* 800CFC7C-800CFCB8 003C+00 s=0 e=2 z=0  None .text      __dt__15LIGHT_INFLUENCEFv */
//	800CFC9C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm LIGHT_INFLUENCE::~LIGHT_INFLUENCE() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__15LIGHT_INFLUENCEFv.s"
}
#pragma pop

/* 800CFCB8-800CFCF4 003C+00 s=2 e=0 z=0  None .text      __dt__18daAlink_footData_cFv */
//	800CFCD8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_footData_c::~daAlink_footData_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__18daAlink_footData_cFv.s"
}
#pragma pop

/* 800CFCF4-800CFCF8 0004+00 s=1 e=0 z=0  None .text      __ct__18daAlink_footData_cFv */
daAlink_footData_c::daAlink_footData_c() {
    /* empty function */
}

/* 800CFCF8-800CFD58 0060+00 s=1 e=0 z=0  None .text      __dt__29dAlink_bottleWaterPcallBack_cFv */
//	800CFD18: 803B35B4 (__vt__29dAlink_bottleWaterPcallBack_c)
//	800CFD1C: 803B35B4 (__vt__29dAlink_bottleWaterPcallBack_c)
//	800CFD28: 8027EFA4 (__dt__19JPAParticleCallBackFv)
//	800CFD38: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dAlink_bottleWaterPcallBack_c::~dAlink_bottleWaterPcallBack_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__29dAlink_bottleWaterPcallBack_cFv.s"
}
#pragma pop

/* 800CFD58-800CFDF4 009C+00 s=1 e=0 z=0  None .text      __dt__14daAlink_blur_cFv */
//	800CFD78: 803B35A0 (__vt__14daAlink_blur_c)
//	800CFD7C: 803B35A0 (__vt__14daAlink_blur_c)
//	800CFD88: 80009184 (__dt__4cXyzFv)
//	800CFD8C: 80009184 (__dt__4cXyzFv)
//	800CFD98: 80361CE8 (__destroy_arr)
//	800CFDA0: 80009184 (__dt__4cXyzFv)
//	800CFDA4: 80009184 (__dt__4cXyzFv)
//	800CFDB0: 80361CE8 (__destroy_arr)
//	800CFDBC: 803CD97C (__vt__9J3DPacket)
//	800CFDC0: 803CD97C (__vt__9J3DPacket)
//	800CFDD4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_blur_c::~daAlink_blur_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__14daAlink_blur_cFv.s"
}
#pragma pop

/* 800CFDF4-800CFE68 0074+00 s=1 e=0 z=0  None .text      __dt__15daAlink_sight_cFv */
//	800CFE0C: 803B3580 (__vt__15daAlink_sight_c)
//	800CFE10: 803B3580 (__vt__15daAlink_sight_c)
//	800CFE20: 803B3590 (__vt__20daAlink_lockCursor_c)
//	800CFE24: 803B3590 (__vt__20daAlink_lockCursor_c)
//	800CFE34: 803BA14C (__vt__18daPy_sightPacket_c)
//	800CFE38: 803BA14C (__vt__18daPy_sightPacket_c)
//	800CFE4C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_sight_c::~daAlink_sight_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__15daAlink_sight_cFv.s"
}
#pragma pop

/* 800CFE68-800CFEB0 0048+00 s=1 e=0 z=0  None .text      __dt__20daAlink_lockCursor_cFv */
//	800CFE80: 803B3590 (__vt__20daAlink_lockCursor_c)
//	800CFE84: 803B3590 (__vt__20daAlink_lockCursor_c)
//	800CFE94: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_lockCursor_c::~daAlink_lockCursor_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__20daAlink_lockCursor_cFv.s"
}
#pragma pop

/* 800CFEB0-800CFEC4 0014+00 s=1 e=0 z=0  None .text      checkRideOn__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRideOn() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkRideOn__9daAlink_cCFv.s"
}
#pragma pop

/* 800CFEC4-800CFEF4 0030+00 s=1 e=0 z=0  None .text      dComIfGp_att_getCatghTarget__Fv */
//	800CFED0: 804061C0 (g_dComIfG_gameInfo)
//	800CFED4: 804061C0 (g_dComIfG_gameInfo)
//	800CFEE0: 8007398C (convPId__11dAttCatch_cFUi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_att_getCatghTarget() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_att_getCatghTarget__Fv.s"
}
#pragma pop

/* 800CFEF4-800CFF2C 0038+00 s=1 e=0 z=0  None .text      mDoAud_setLinkHp__Fll */
//	800CFF08: 80451360 (mLinkPtr__14Z2CreatureLink)
//	800CFF18: 802C3220 (setLinkHp__14Z2CreatureLinkFll)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoAud_setLinkHp(s32 param_0, s32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/mDoAud_setLinkHp__Fll.s"
}
#pragma pop

/* 800CFF2C-800CFF3C 0010+00 s=1 e=0 z=0  None .text      dComIfGs_getLife__Fv */
//	800CFF2C: 804061C0 (g_dComIfG_gameInfo)
//	800CFF30: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGs_getLife() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGs_getLife__Fv.s"
}
#pragma pop

/* 800CFF3C-800CFF4C 0010+00 s=1 e=0 z=0  None .text      dComIfGp_getRStatus__Fv */
//	800CFF3C: 804061C0 (g_dComIfG_gameInfo)
//	800CFF40: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_getRStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getRStatus__Fv.s"
}
#pragma pop

/* 800CFF4C-800CFFA4 0058+00 s=1 e=0 z=0  None .text      checkAttentionLock__9daAlink_cFv */
//	800CFF6C: 800737E4 (LockonTruth__12dAttention_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAttentionLock() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAttentionLock__9daAlink_cFv.s"
}
#pragma pop

/* 800CFFA4-800CFFC0 001C+00 s=1 e=0 z=0  None .text      dComIfGp_setItemLifeCount__FfUc */
//	800CFFA4: 804061C0 (g_dComIfG_gameInfo)
//	800CFFA8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_setItemLifeCount(f32 param_0, u8 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_setItemLifeCount__FfUc.s"
}
#pragma pop

/* 800CFFC0-800CFFE0 0020+00 s=1 e=0 z=0  None .text      cMtx_multVec__FPA4_CfPC3VecP3Vec */
//	800CFFCC: 80346D6C (PSMTXMultVec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void cMtx_multVec(f32 const (*param_0)[4], Vec const* param_1, Vec* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/cMtx_multVec__FPA4_CfPC3VecP3Vec.s"
}
#pragma pop

/* 800CFFE0-800CFFF4 0014+00 s=1 e=0 z=0  None .text      getAnmMtx__8J3DModelFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DModel::getAnmMtx(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getAnmMtx__8J3DModelFi.s"
}
#pragma pop

/* 800CFFF4-800D0020 002C+00 s=1 e=0 z=0  None .text      setBaseTRMtx__8J3DModelFPA4_f */
//	800D000C: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DModel::setBaseTRMtx(f32 (*param_0)[4]) {
    nofralloc
#include "asm/d/a/d_a_alink/setBaseTRMtx__8J3DModelFPA4_f.s"
}
#pragma pop

/* 800D0020-800D0048 0028+00 s=1 e=0 z=0  None .text      checkFmChainGrabAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFmChainGrabAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkFmChainGrabAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0048-800D005C 0014+00 s=1 e=0 z=0  None .text      checkSmallUpperGuardAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSmallUpperGuardAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSmallUpperGuardAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800D005C-800D008C 0030+00 s=1 e=0 z=0  None .text      dComIfGp_evmng_startCheck__FPCc */
//	800D006C: 804061C0 (g_dComIfG_gameInfo)
//	800D0070: 804061C0 (g_dComIfG_gameInfo)
//	800D0078: 80047A38 (startCheckOld__16dEvent_manager_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_evmng_startCheck(char const* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_evmng_startCheck__FPCc.s"
}
#pragma pop

/* 800D008C-800D00BC 0030+00 s=1 e=0 z=0  None .text      mDoAud_setLinkGroupInfo__FUc */
//	800D009C: 80451360 (mLinkPtr__14Z2CreatureLink)
//	800D00A8: 802C321C (setLinkGroupInfo__14Z2CreatureLinkFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoAud_setLinkGroupInfo(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/mDoAud_setLinkGroupInfo__FUc.s"
}
#pragma pop

/* 800D00BC-800D00D0 0014+00 s=1 e=0 z=0  None .text      getAnm__25mDoExt_MtxCalcAnmBlendTblFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_MtxCalcAnmBlendTbl::getAnm(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getAnm__25mDoExt_MtxCalcAnmBlendTblFi.s"
}
#pragma pop

/* 800D00D0-800D00DC 000C+00 s=1 e=0 z=0  None .text      ChkRoofHit__9dBgS_AcchCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgS_Acch::ChkRoofHit() const {
    nofralloc
#include "asm/d/a/d_a_alink/ChkRoofHit__9dBgS_AcchCFv.s"
}
#pragma pop

/* 800D00DC-800D00EC 0010+00 s=1 e=0 z=0  None .text      ClrGroundHit__9dBgS_AcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgS_Acch::ClrGroundHit() {
    nofralloc
#include "asm/d/a/d_a_alink/ClrGroundHit__9dBgS_AcchFv.s"
}
#pragma pop

/* 800D00EC-800D0110 0024+00 s=1 e=0 z=0  None .text      checkReinRide__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkReinRide() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkReinRide__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0110-800D0138 0028+00 s=1 e=0 z=0  None .text      checkWolfEnemyThrowAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfEnemyThrowAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfEnemyThrowAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0138-800D014C 0014+00 s=1 e=0 z=0  None .text      checkSpecialDemoMode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSpecialDemoMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSpecialDemoMode__9daAlink_cCFv.s"
}
#pragma pop

/* 800D014C-800D0164 0018+00 s=1 e=0 z=0  None .text      setMidnaTalkStatus__9daAlink_cFUc */
//	800D014C: 804061C0 (g_dComIfG_gameInfo)
//	800D0150: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMidnaTalkStatus(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setMidnaTalkStatus__9daAlink_cFUc.s"
}
#pragma pop

/* 800D0164-800D0180 001C+00 s=1 e=0 z=0  None .text      set3DStatus__9daAlink_cFUcUc */
//	800D0164: 804061C0 (g_dComIfG_gameInfo)
//	800D0168: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::set3DStatus(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/set3DStatus__9daAlink_cFUcUc.s"
}
#pragma pop

/* 800D0180-800D018C 000C+00 s=1 e=0 z=0  None .text      offSetFlg__16daAlink_matAnm_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_matAnm_c::offSetFlg() {
    nofralloc
#include "asm/d/a/d_a_alink/offSetFlg__16daAlink_matAnm_cFv.s"
}
#pragma pop

/* 800D018C-800D0198 000C+00 s=1 e=0 z=0  None .text      checkModeFlg__9daAlink_cCFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkModeFlg(u32 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkModeFlg__9daAlink_cCFUl.s"
}
#pragma pop

/* 800D0198-800D01A0 0008+00 s=1 e=0 z=0  None .text      getShieldChangeWaitTimer__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getShieldChangeWaitTimer() const {
    nofralloc
#include "asm/d/a/d_a_alink/getShieldChangeWaitTimer__9daAlink_cCFv.s"
}
#pragma pop

/* 800D01A0-800D01A8 0008+00 s=1 e=0 z=0  None .text      getClothesChangeWaitTimer__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getClothesChangeWaitTimer() const {
    nofralloc
#include "asm/d/a/d_a_alink/getClothesChangeWaitTimer__9daAlink_cCFv.s"
}
#pragma pop

/* 800D01A8-800D01E0 0038+00 s=1 e=0 z=0  None .text      checkHorseStart__9daAlink_cFv */
//	800D01B4: 804061C0 (g_dComIfG_gameInfo)
//	800D01B8: 804061C0 (g_dComIfG_gameInfo)
//	800D01CC: 800A54F4 (checkHorseStart__9daAlink_cFUli)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseStart() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseStart__9daAlink_cFv.s"
}
#pragma pop

/* 800D01E0-800D0208 0028+00 s=1 e=0 z=0  None .text      checkCutTurnCharge__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutTurnCharge() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutTurnCharge__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0208-800D0228 0020+00 s=1 e=0 z=0  None .text      checkAcceptDungeonWarpAlink__9daAlink_cFi
 */
//	800D0214: 8011F658 (checkAcceptWarp__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAcceptDungeonWarpAlink(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkAcceptDungeonWarpAlink__9daAlink_cFi.s"
}
#pragma pop

/* 800D0228-800D0274 004C+00 s=1 e=0 z=0  None .text      getSpinnerActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerActor() {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerActor__9daAlink_cFv.s"
}
#pragma pop

/* 800D0274-800D027C 0008+00 s=1 e=0 z=0  None .text      getSumouCounter__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSumouCounter() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSumouCounter__9daAlink_cCFv.s"
}
#pragma pop

/* 800D027C-800D0284 0008+00 s=1 e=0 z=0  None .text      checkSumouWithstand__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSumouWithstand() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSumouWithstand__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0284-800D0290 000C+00 s=1 e=0 z=0  None .text      setMidnaMsgNum__9daAlink_cFP10fopAc_ac_cUs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMidnaMsgNum(fopAc_ac_c* param_0, u16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setMidnaMsgNum__9daAlink_cFP10fopAc_ac_cUs.s"
}
#pragma pop

/* 800D0290-800D029C 000C+00 s=1 e=0 z=0  None .text      getModelMtx__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getModelMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/getModelMtx__9daAlink_cFv.s"
}
#pragma pop

/* 800D029C-800D02A4 0008+00 s=1 e=0 z=0  None .text      getInvMtx__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getInvMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/getInvMtx__9daAlink_cFv.s"
}
#pragma pop

/* 800D02A4-800D02B8 0014+00 s=1 e=0 z=0  None .text      getLinkBackBone1Matrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getLinkBackBone1Matrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getLinkBackBone1Matrix__9daAlink_cFv.s"
}
#pragma pop

/* 800D02B8-800D02CC 0014+00 s=1 e=0 z=0  None .text      getWolfMouthMatrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfMouthMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfMouthMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800D02CC-800D02E0 0014+00 s=1 e=0 z=0  None .text      getWolfBackbone2Matrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfBackbone2Matrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfBackbone2Matrix__9daAlink_cFv.s"
}
#pragma pop

/* 800D02E0-800D0334 0054+00 s=1 e=0 z=0  None .text      getBottleMtx__9daAlink_cFv */
//	800D0304: 8015EA88 (checkBottleItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBottleMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/getBottleMtx__9daAlink_cFv.s"
}
#pragma pop

/* 800D0334-800D0350 001C+00 s=1 e=0 z=0  None .text      getHeadMtx__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getHeadMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/getHeadMtx__9daAlink_cFv.s"
}
#pragma pop

/* 800D0350-800D0358 0008+00 s=1 e=0 z=0  None .text      getGroundY__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getGroundY() {
    nofralloc
#include "asm/d/a/d_a_alink/getGroundY__9daAlink_cFv.s"
}
#pragma pop

/* 800D0358-800D0360 0008+00 s=1 e=0 z=0  None .text      getBaseAnimeFrameRate__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBaseAnimeFrameRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBaseAnimeFrameRate__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0360-800D0368 0008+00 s=1 e=0 z=0  None .text      getAtnActorID__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getAtnActorID() const {
    nofralloc
#include "asm/d/a/d_a_alink/getAtnActorID__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0368-800D0370 0008+00 s=1 e=0 z=0  None .text      getItemID__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getItemID() const {
    nofralloc
#include "asm/d/a/d_a_alink/getItemID__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0370-800D038C 001C+00 s=1 e=0 z=0  None .text      getGrabActorID__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getGrabActorID() const {
    nofralloc
#include "asm/d/a/d_a_alink/getGrabActorID__9daAlink_cCFv.s"
}
#pragma pop

/* 800D038C-800D03B4 0028+00 s=1 e=0 z=0  None .text      setForcePutPos__9daAlink_cFRC4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setForcePutPos(cXyz const& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setForcePutPos__9daAlink_cFRC4cXyz.s"
}
#pragma pop

/* 800D03B4-800D03C8 0014+00 s=1 e=0 z=0  None .text      checkPlayerFly__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPlayerFly() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkPlayerFly__9daAlink_cCFv.s"
}
#pragma pop

/* 800D03C8-800D03DC 0014+00 s=1 e=0 z=0  None .text      checkFrontRoll__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFrontRoll() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkFrontRoll__9daAlink_cCFv.s"
}
#pragma pop

/* 800D03DC-800D03F0 0014+00 s=1 e=0 z=0  None .text      checkWolfDash__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfDash() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfDash__9daAlink_cCFv.s"
}
#pragma pop

/* 800D03F0-800D0414 0024+00 s=1 e=0 z=0  None .text      checkAutoJump__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAutoJump() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkAutoJump__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0414-800D0444 0030+00 s=1 e=0 z=0  None .text      checkSideStep__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSideStep() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSideStep__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0444-800D0468 0024+00 s=1 e=0 z=0  None .text      checkWolfTriggerJump__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfTriggerJump() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfTriggerJump__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0468-800D047C 0014+00 s=1 e=0 z=0  None .text      checkGuardBreakMode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGuardBreakMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGuardBreakMode__9daAlink_cCFv.s"
}
#pragma pop

/* 800D047C-800D04A4 0028+00 s=1 e=0 z=0  None .text      checkLv3Slide__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLv3Slide() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv3Slide__9daAlink_cCFv.s"
}
#pragma pop

/* 800D04A4-800D04B8 0014+00 s=1 e=0 z=0  None .text      checkWolfHowlDemoMode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfHowlDemoMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfHowlDemoMode__9daAlink_cCFv.s"
}
#pragma pop

/* 800D04B8-800D04CC 0014+00 s=1 e=0 z=0  None .text      checkElecDamage__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkElecDamage() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkElecDamage__9daAlink_cCFv.s"
}
#pragma pop

/* 800D04CC-800D04F4 0028+00 s=1 e=0 z=0  None .text      checkEmptyBottleSwing__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkEmptyBottleSwing() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkEmptyBottleSwing__9daAlink_cCFv.s"
}
#pragma pop

/* 800D04F4-800D0508 0014+00 s=1 e=0 z=0  None .text      checkBottleSwingMode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBottleSwingMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBottleSwingMode__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0508-800D051C 0014+00 s=1 e=0 z=0  None .text      checkHawkWait__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHawkWait() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHawkWait__9daAlink_cCFv.s"
}
#pragma pop

/* 800D051C-800D0544 0028+00 s=1 e=0 z=0  None .text      checkGoatThrow__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGoatThrow() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGoatThrow__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0544-800D0570 002C+00 s=1 e=0 z=0  None .text      checkGoatThrowAfter__9daAlink_cCFv */
//	800D0558: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGoatThrowAfter() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGoatThrowAfter__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0570-800D0598 0028+00 s=1 e=0 z=0  None .text      checkWolfTagLockJump__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfTagLockJump() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfTagLockJump__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0598-800D05AC 0014+00 s=1 e=0 z=0  None .text      checkWolfTagLockJumpLand__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfTagLockJumpLand() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfTagLockJumpLand__9daAlink_cCFv.s"
}
#pragma pop

/* 800D05AC-800D05C0 0014+00 s=1 e=0 z=0  None .text      checkWolfRopeHang__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfRopeHang() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfRopeHang__9daAlink_cCFv.s"
}
#pragma pop

/* 800D05C0-800D05D4 0014+00 s=1 e=0 z=0  None .text      checkRollJump__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRollJump() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkRollJump__9daAlink_cCFv.s"
}
#pragma pop

/* 800D05D4-800D05E8 0014+00 s=1 e=0 z=0  None .text      checkGoronRideWait__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGoronRideWait() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGoronRideWait__9daAlink_cCFv.s"
}
#pragma pop

/* 800D05E8-800D05FC 0014+00 s=1 e=0 z=0  None .text      checkWolfChain__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfChain() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfChain__9daAlink_cCFv.s"
}
#pragma pop

/* 800D05FC-800D0610 0014+00 s=1 e=0 z=0  None .text      checkWolfWait__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfWait() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfWait__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0610-800D0624 0014+00 s=1 e=0 z=0  None .text      checkWolfJumpAttack__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfJumpAttack() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfJumpAttack__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0624-800D0638 0014+00 s=1 e=0 z=0  None .text      checkWolfRSit__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfRSit() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfRSit__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0638-800D0660 0028+00 s=1 e=0 z=0  None .text      checkBottleDrinkEnd__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBottleDrinkEnd() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBottleDrinkEnd__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0660-800D0674 0014+00 s=1 e=0 z=0  None .text      checkWolfDig__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfDig() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfDig__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0674-800D0688 0014+00 s=1 e=0 z=0  None .text      checkCutCharge__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutCharge() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutCharge__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0688-800D06B0 0028+00 s=1 e=0 z=0  None .text      checkCutLargeJumpCharge__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutLargeJumpCharge() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutLargeJumpCharge__9daAlink_cCFv.s"
}
#pragma pop

/* 800D06B0-800D06D8 0028+00 s=1 e=0 z=0  None .text      checkComboCutTurn__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkComboCutTurn() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkComboCutTurn__9daAlink_cCFv.s"
}
#pragma pop

/* 800D06D8-800D0704 002C+00 s=1 e=0 z=0  None .text      checkClimbMove__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbMove() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbMove__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0704-800D0718 0014+00 s=1 e=0 z=0  None .text      checkGrassWhistle__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrassWhistle() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrassWhistle__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0718-800D072C 0014+00 s=1 e=0 z=0  None .text      checkBoarRun__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoarRun() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoarRun__9daAlink_cCFv.s"
}
#pragma pop

/* 800D072C-800D0794 0068+00 s=1 e=0 z=0  None .text      checkHorseRideNotReady__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseRideNotReady() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseRideNotReady__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0794-800D079C 0008+00 s=1 e=0 z=0  None .text      getSearchBallScale__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSearchBallScale() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSearchBallScale__9daAlink_cCFv.s"
}
#pragma pop

/* 800D079C-800D07A4 0008+00 s=1 e=0 z=0  None .text      checkFastShotTime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFastShotTime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkFastShotTime__9daAlink_cFv.s"
}
#pragma pop

/* 800D07A4-800D07D4 0030+00 s=1 e=0 z=0  None .text      checkCutJumpCancelTurn__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutJumpCancelTurn() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutJumpCancelTurn__9daAlink_cCFv.s"
}
#pragma pop

/* 800D07D4-800D07FC 0028+00 s=1 e=0 z=0  None .text
 * checkSingleBoarBattleSecondBowReady__9daAlink_cCFv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSingleBoarBattleSecondBowReady() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSingleBoarBattleSecondBowReady__9daAlink_cCFv.s"
}
#pragma pop

/* 800D07FC-800D0818 001C+00 s=1 e=0 z=0  None .text      cancelDungeonWarpReadyNeck__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelDungeonWarpReadyNeck() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelDungeonWarpReadyNeck__9daAlink_cFv.s"
}
#pragma pop

/* 800D0818-800D0830 0018+00 s=1 e=0 z=0  None .text
 * onSceneChangeAreaJump__9daAlink_cFUcUcP10fopAc_ac_c          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onSceneChangeAreaJump(u8 param_0, u8 param_1, fopAc_ac_c* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/onSceneChangeAreaJump__9daAlink_cFUcUcP10fopAc_ac_c.s"
}
#pragma pop

/* 800D0830-800D084C 001C+00 s=1 e=0 z=0  None .text      onSceneChangeDead__9daAlink_cFUci */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onSceneChangeDead(u8 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/onSceneChangeDead__9daAlink_cFUci.s"
}
#pragma pop

/* 800D084C-800D0860 0014+00 s=1 e=0 z=0  None .text      checkNoEquipItem__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNoEquipItem() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoEquipItem__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0860-800D087C 001C+00 s=1 e=0 z=0  None .text      getBoardCutTurnOffsetAngleY__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBoardCutTurnOffsetAngleY() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBoardCutTurnOffsetAngleY__9daAlink_cCFv.s"
}
#pragma pop

/* 800D087C-800D0884 0008+00 s=1 e=0 z=0  None .text      getMagneBootsTopVec__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMagneBootsTopVec() {
    nofralloc
#include "asm/d/a/d_a_alink/getMagneBootsTopVec__9daAlink_cFv.s"
}
#pragma pop

/* 800D0884-800D08B0 002C+00 s=1 e=0 z=0  None .text      setCargoCarry__9daAlink_cFP10fopAc_ac_c */
//	800D089C: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCargoCarry(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setCargoCarry__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800D08B0-800D08DC 002C+00 s=1 e=0 z=0  None .text      setGoronSideMove__9daAlink_cFP10fopAc_ac_c
 */
//	800D08C8: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGoronSideMove(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGoronSideMove__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800D08DC-800D091C 0040+00 s=1 e=0 z=0  None .text      setSumouReady__9daAlink_cFP10fopAc_ac_c */
//	800D08FC: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSumouReady(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSumouReady__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800D091C-800D0930 0014+00 s=1 e=0 z=0  None .text      setSumouPushBackDirection__9daAlink_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSumouPushBackDirection(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSumouPushBackDirection__9daAlink_cFs.s"
}
#pragma pop

/* 800D0930-800D0948 0018+00 s=1 e=0 z=0  None .text      setSumouLoseHeadUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSumouLoseHeadUp() {
    nofralloc
#include "asm/d/a/d_a_alink/setSumouLoseHeadUp__9daAlink_cFv.s"
}
#pragma pop

/* 800D0948-800D095C 0014+00 s=1 e=0 z=0  None .text checkPriActorOwn__9daAlink_cCFPC10fopAc_ac_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPriActorOwn(fopAc_ac_c const* param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkPriActorOwn__9daAlink_cCFPC10fopAc_ac_c.s"
}
#pragma pop

/* 800D095C-800D0970 0014+00 s=1 e=0 z=0  None .text
 * checkWolfEnemyBiteAllOwn__9daAlink_cCFPC10fopAc_ac_c         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfEnemyBiteAllOwn(fopAc_ac_c const* param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfEnemyBiteAllOwn__9daAlink_cCFPC10fopAc_ac_c.s"
}
#pragma pop

/* 800D0970-800D0984 0014+00 s=1 e=0 z=0  None .text      setWolfEnemyHangBiteAngle__9daAlink_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfEnemyHangBiteAngle(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfEnemyHangBiteAngle__9daAlink_cFs.s"
}
#pragma pop

/* 800D0984-800D0998 0014+00 s=1 e=0 z=0  None .text      setSumouGraspCancelCount__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSumouGraspCancelCount(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSumouGraspCancelCount__9daAlink_cFi.s"
}
#pragma pop

/* 800D0998-800D09AC 0014+00 s=1 e=0 z=0  None .text      checkItemSwordEquip__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemSwordEquip() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemSwordEquip__9daAlink_cCFv.s"
}
#pragma pop

/* 800D09AC-800D09B4 0008+00 s=1 e=0 z=0  None .text      getSinkShapeOffset__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSinkShapeOffset() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSinkShapeOffset__9daAlink_cCFv.s"
}
#pragma pop

/* 800D09B4-800D09C8 0014+00 s=1 e=0 z=0  None .text      checkSinkDead__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSinkDead() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSinkDead__9daAlink_cCFv.s"
}
#pragma pop

/* 800D09C8-800D09DC 0014+00 s=1 e=0 z=0  None .text      checkCutJumpMode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutJumpMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutJumpMode__9daAlink_cCFv.s"
}
#pragma pop

/* 800D09DC-800D09E4 0008+00 s=1 e=0 z=0  None .text      getGiantPuzzleAimAngle__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getGiantPuzzleAimAngle() const {
    nofralloc
#include "asm/d/a/d_a_alink/getGiantPuzzleAimAngle__9daAlink_cCFv.s"
}
#pragma pop

/* 800D09E4-800D09EC 0008+00 s=1 e=0 z=0  None .text      getSwordChangeWaitTimer__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSwordChangeWaitTimer() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSwordChangeWaitTimer__9daAlink_cCFv.s"
}
#pragma pop

/* 800D09EC-800D0A14 0028+00 s=1 e=0 z=0  None .text      checkMetamorphose__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMetamorphose() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkMetamorphose__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0A14-800D0A28 0014+00 s=1 e=0 z=0  None .text      checkWolfDownAttackPullOut__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfDownAttackPullOut() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfDownAttackPullOut__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0A28-800D0A30 0008+00 s=1 e=0 z=0  None .text      getMidnaAtnPos__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMidnaAtnPos() const {
    nofralloc
#include "asm/d/a/d_a_alink/getMidnaAtnPos__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0A30-800D0A44 0014+00 s=1 e=0 z=0  None .text      checkCopyRodEquip__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCopyRodEquip() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCopyRodEquip__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0A44-800D0A6C 0028+00 s=1 e=0 z=0  None .text      checkCanoeFishingGetLeft__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoeFishingGetLeft() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoeFishingGetLeft__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0A6C-800D0A94 0028+00 s=1 e=0 z=0  None .text      checkCanoeFishingGetRight__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoeFishingGetRight() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoeFishingGetRight__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0A94-800D0A9C 0008+00 s=1 e=0 z=0  None .text      checkBeeChildDrink__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBeeChildDrink() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBeeChildDrink__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0A9C-800D0AA4 0008+00 s=1 e=0 z=0  None .text      getWolfHowlMgrP__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfHowlMgrP() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfHowlMgrP__9daAlink_cFv.s"
}
#pragma pop

/* 800D0AA4-800D0AC8 0024+00 s=1 e=0 z=0  None .text      checkWolfHowlSuccessAnime__9daAlink_cCFv
 */
//	800D0AB4: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfHowlSuccessAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfHowlSuccessAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0AC8-800D0AF0 0028+00 s=1 e=0 z=0  None .text      checkOctaIealHang__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkOctaIealHang() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkOctaIealHang__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0AF0-800D0B08 0018+00 s=1 e=0 z=0  None .text      cancelOctaIealHang__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelOctaIealHang() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelOctaIealHang__9daAlink_cFv.s"
}
#pragma pop

/* 800D0B08-800D0B20 0018+00 s=1 e=0 z=0  None .text      cancelDragonHangBackJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelDragonHangBackJump() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelDragonHangBackJump__9daAlink_cFv.s"
}
#pragma pop

/* 800D0B20-800D0B38 0018+00 s=1 e=0 z=0  None .text      setOctaIealWildHang__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setOctaIealWildHang() {
    nofralloc
#include "asm/d/a/d_a_alink/setOctaIealWildHang__9daAlink_cFv.s"
}
#pragma pop

/* 800D0B38-800D0B60 0028+00 s=1 e=0 z=0  None .text      checkDragonHangRide__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDragonHangRide() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkDragonHangRide__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0B60-800D0B8C 002C+00 s=1 e=0 z=0  None .text      playerStartCollisionSE__9daAlink_cFUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::playerStartCollisionSE(u32 param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/playerStartCollisionSE__9daAlink_cFUlUl.s"
}
#pragma pop

/* 800D0B8C-800D0C6C 00E0+00 s=1 e=0 z=0  None .text      __dt__16daAlink_matAnm_cFv */
//	800D0BAC: 803B3564 (__vt__16daAlink_matAnm_c)
//	800D0BB0: 803B3564 (__vt__16daAlink_matAnm_c)
//	800D0BBC: 803CEE60 (__vt__14J3DMaterialAnm)
//	800D0BC0: 803CEE60 (__vt__14J3DMaterialAnm)
//	800D0BCC: 8003B150 (__dt__15J3DTevKColorAnmFv)
//	800D0BD0: 8003B150 (__dt__15J3DTevKColorAnmFv)
//	800D0BDC: 80361CE8 (__destroy_arr)
//	800D0BE4: 8003B1A4 (__dt__14J3DTevColorAnmFv)
//	800D0BE8: 8003B1A4 (__dt__14J3DTevColorAnmFv)
//	800D0BF4: 80361CE8 (__destroy_arr)
//	800D0BFC: 8003B1F8 (__dt__11J3DTexNoAnmFv)
//	800D0C00: 8003B1F8 (__dt__11J3DTexNoAnmFv)
//	800D0C0C: 80361CE8 (__destroy_arr)
//	800D0C14: 8003B264 (__dt__12J3DTexMtxAnmFv)
//	800D0C18: 8003B264 (__dt__12J3DTexMtxAnmFv)
//	800D0C24: 80361CE8 (__destroy_arr)
//	800D0C2C: 8003B2B8 (__dt__14J3DMatColorAnmFv)
//	800D0C30: 8003B2B8 (__dt__14J3DMatColorAnmFv)
//	800D0C3C: 80361CE8 (__destroy_arr)
//	800D0C4C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_matAnm_c::~daAlink_matAnm_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__16daAlink_matAnm_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803B35C8-803B35EC 0024+00 s=2 e=5 z=0  None .data      __vt__12dBgS_ObjAcch */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12dBgS_ObjAcchFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446DC,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446D4,
};

/* 800D0C6C-800D0CDC 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv */
//	800D0C8C: 803B35C8 (__vt__12dBgS_ObjAcch)
//	800D0C90: 803B35C8 (__vt__12dBgS_ObjAcch)
//	800D0CAC: 80075F94 (__dt__9dBgS_AcchFv)
//	800D0CBC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803B35EC-803B3610 0014+10 s=3 e=0 z=0  None .data      __vt__Q29daAlink_c14hsChainShape_c */
SECTION_DATA void* __vt__Q29daAlink_c14hsChainShape_c[5 + 4 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)entry__9J3DPacketFP13J3DDrawBuffer,
    (void*)draw__Q29daAlink_c14hsChainShape_cFv,
    (void*)__dt__Q29daAlink_c14hsChainShape_cFv,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 800D0CDC-800D0D38 005C+00 s=1 e=0 z=0  None .text      __dt__Q29daAlink_c14hsChainShape_cFv */
//	800D0CF4: 803B35EC (__vt__Q29daAlink_c14hsChainShape_c)
//	800D0CF8: 803B35EC (__vt__Q29daAlink_c14hsChainShape_c)
//	800D0D04: 803CD97C (__vt__9J3DPacket)
//	800D0D08: 803CD97C (__vt__9J3DPacket)
//	800D0D1C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_c::hsChainShape_c::~hsChainShape_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__Q29daAlink_c14hsChainShape_cFv.s"
}
#pragma pop

/* 800D0D38-800D0E08 00D0+00 s=1 e=0 z=0  None .text daAlink_searchNightStalker__FP10fopAc_ac_cPv
 */
//	800D0D5C: 804061C0 (g_dComIfG_gameInfo)
//	800D0D60: 804061C0 (g_dComIfG_gameInfo)
//	800D0D74: 80452CC0 (lit_6108)
//	800D0D9C: 8034739C (PSVECSquareDistance)
//	800D0DA0: 80452CCC (lit_6237)
//	800D0DC0: 80452CD0 (lit_6238)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchNightStalker(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchNightStalker__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800D0E08-800D0E98 0090+00 s=1 e=0 z=0  None .text      checkLightSwordMtrl__9daAlink_cFv */
//	800D0E1C: 804061C0 (g_dComIfG_gameInfo)
//	800D0E20: 804061C0 (g_dComIfG_gameInfo)
//	800D0E50: 800D0D38 (daAlink_searchNightStalker__FP10fopAc_ac_cPv)
//	800D0E54: 800D0D38 (daAlink_searchNightStalker__FP10fopAc_ac_cPv)
//	800D0E5C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLightSwordMtrl() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLightSwordMtrl__9daAlink_cFv.s"
}
#pragma pop

/* 800D0E98-800D0ECC 0034+00 s=5 e=0 z=0  None .text      checkSwordEquipAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwordEquipAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwordEquipAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0ECC-800D0EFC 0030+00 s=8 e=0 z=0  None .text      checkCutDashAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutDashAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutDashAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800D0EFC-800D0F5C 0060+00 s=1 e=0 z=0  None .text
 * checkCutDashEnemyHit__9daAlink_cFR12dCcD_GObjInf             */
//	800D0F1C: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	800D0F2C: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800D0F30: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutDashEnemyHit(dCcD_GObjInf& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutDashEnemyHit__9daAlink_cFR12dCcD_GObjInf.s"
}
#pragma pop

/* 800D0F5C-800D0F90 0034+00 s=6 e=0 z=0  None .text      getSwordAtType__9daAlink_cFv */
//	800D0F68: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSwordAtType() {
    nofralloc
#include "asm/d/a/d_a_alink/getSwordAtType__9daAlink_cFv.s"
}
#pragma pop

/* 800D0F90-800D102C 009C+00 s=3 e=0 z=0  None .text      initCutTurnAt__9daAlink_cFfi */
//	800D0FB8: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	800D0FC8: 800D0F5C (getSwordAtType__9daAlink_cFv)
//	800D1004: 8026F708 (SetR__8cM3dGSphFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initCutTurnAt(f32 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/initCutTurnAt__9daAlink_cFfi.s"
}
#pragma pop

/* 800D102C-800D1088 005C+00 s=2 e=0 z=0  None .text      checkCutFinishJumpUp__9daAlink_cFv */
//	800D1040: 800D2890 (checkCutBackState__9daAlink_cFv)
//	800D104C: 800C0594 (checkNotBattleStage__9daAlink_cFv)
//	800D105C: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutFinishJumpUp() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutFinishJumpUp__9daAlink_cFv.s"
}
#pragma pop

/* 800D1088-800D10E0 0058+00 s=2 e=0 z=0  None .text      changeCutFast__9daAlink_cFv */
//	800D10A4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800D10AC: 800D1268 (setSwordModel__9daAlink_cFv)
//	800D10BC: 800D23C0 (checkCutAction__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeCutFast() {
    nofralloc
#include "asm/d/a/d_a_alink/changeCutFast__9daAlink_cFv.s"
}
#pragma pop

/* 800D10E0-800D1268 0188+00 s=1 e=0 z=0  None .text      checkCutFastReady__9daAlink_cFv */
//	800D110C: 800C0594 (checkNotBattleStage__9daAlink_cFv)
//	800D1128: 8007353C (LockonTarget__12dAttention_cFl)
//	800D113C: 804061C0 (g_dComIfG_gameInfo)
//	800D1140: 804061C0 (g_dComIfG_gameInfo)
//	800D114C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800D117C: 804061C0 (g_dComIfG_gameInfo)
//	800D1180: 804061C0 (g_dComIfG_gameInfo)
//	800D11B0: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800D11C8: 80452CC0 (lit_6108)
//	800D11F0: 8034739C (PSVECSquareDistance)
//	800D1208: 80452CD4 (lit_6398)
//	800D1214: 80452CD0 (lit_6238)
//	800D122C: 80452CD8 (lit_6399)
//	800D1238: 80452CDC (lit_6400)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutFastReady() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutFastReady__9daAlink_cFv.s"
}
#pragma pop

/* 800D1268-800D1310 00A8+00 s=9 e=0 z=0  None .text      setSwordModel__9daAlink_cFv */
//	800D128C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800D1298: 802B5E84 (bgmSetSwordUsing__8Z2SeqMgrFl)
//	800D12A4: 804061C0 (g_dComIfG_gameInfo)
//	800D12A8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordModel__9daAlink_cFv.s"
}
#pragma pop

/* 800D1310-800D13AC 009C+00 s=2 e=0 z=0  None .text      offSwordModel__9daAlink_cFv */
//	800D1324: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800D1330: 802B5E84 (bgmSetSwordUsing__8Z2SeqMgrFl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::offSwordModel() {
    nofralloc
#include "asm/d/a/d_a_alink/offSwordModel__9daAlink_cFv.s"
}
#pragma pop

/* 800D13AC-800D13E4 0038+00 s=1 e=0 z=0  None .text      checkCutTypeNoBlur__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutTypeNoBlur() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutTypeNoBlur__9daAlink_cCFv.s"
}
#pragma pop

/* 800D13E4-800D1424 0040+00 s=7 e=0 z=0  None .text      checkCutTurnInput__9daAlink_cCFv */
//	800D13F4: 803650D0 (abs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutTurnInput() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutTurnInput__9daAlink_cCFv.s"
}
#pragma pop

/* 800D1424-800D1430 000C+00 s=7 e=0 z=0  None .text      getCutTurnDirection__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCutTurnDirection() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCutTurnDirection__9daAlink_cCFv.s"
}
#pragma pop

/* 800D1430-800D1454 0024+00 s=17 e=0 z=0  None .text      resetCombo__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetCombo(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/resetCombo__9daAlink_cFi.s"
}
#pragma pop

/* 800D1454-800D152C 00D8+00 s=1 e=0 z=0  None .text      checkComboCnt__9daAlink_cFv */
//	800D1464: 803621DC (_savegpr_29)
//	800D1490: 800737E4 (LockonTruth__12dAttention_cFv)
//	800D14B8: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	800D14C8: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	800D14D8: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	800D1510: 800D1430 (resetCombo__9daAlink_cFi)
//	800D1518: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkComboCnt() {
    nofralloc
#include "asm/d/a/d_a_alink/checkComboCnt__9daAlink_cFv.s"
}
#pragma pop

/* 800D152C-800D1540 0014+00 s=22 e=0 z=0  None .text      setCutType__9daAlink_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutType(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setCutType__9daAlink_cFUc.s"
}
#pragma pop

/* 800D1540-800D1688 0148+00 s=8 e=0 z=0  None .text
 * setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff             */
//	800D1554: 803621CC (_savegpr_25)
//	800D1574: 804061C0 (g_dComIfG_gameInfo)
//	800D1578: 804061C0 (g_dComIfG_gameInfo)
//	800D15FC: 8026F200 (SetR__8cM3dGCylFf)
//	800D1608: 8026F1F8 (SetH__8cM3dGCylFf)
//	800D1674: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCylAtParam(u32 param_0, dCcG_At_Spl param_1, u8 param_2, u8 param_3,
                                  int param_4, f32 param_5, f32 param_6) {
    nofralloc
#include "asm/d/a/d_a_alink/setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff.s"
}
#pragma pop

/* 800D1688-800D1788 0100+00 s=9 e=0 z=0  None .text
 * setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff             */
//	800D16A0: 803621D0 (_savegpr_26)
//	800D16C4: 800D0F5C (getSwordAtType__9daAlink_cFv)
//	800D16D4: 804061C0 (g_dComIfG_gameInfo)
//	800D16D8: 804061C0 (g_dComIfG_gameInfo)
//	800D1774: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordAtParam(dCcG_At_Spl param_0, u8 param_1, u8 param_2, int param_3,
                                    f32 param_4, f32 param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff.s"
}
#pragma pop

/* 800D1788-800D17EC 0064+00 s=1 e=0 z=1  None .text notSwordHitVibActor__9daAlink_cFP10fopAc_ac_c
 */
//	800D17B0: 800DC5A4 (checkSpecialNpc__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::notSwordHitVibActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/notSwordHitVibActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800D17EC-800D1920 0134+00 s=4 e=0 z=0  None .text
 * setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf             */
//	800D180C: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	800D181C: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800D1820: 800D1788 (notSwordHitVibActor__9daAlink_cFP10fopAc_ac_c)
//	800D1890: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800D18A0: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800D18D0: 80452CC0 (lit_6108)
//	800D18D8: 80452CB8 (lit_6040)
//	800D18E4: 804061C0 (g_dComIfG_gameInfo)
//	800D18E8: 804061C0 (g_dComIfG_gameInfo)
//	800D18F8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordHitVibration(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800D1920-800D1978 0058+00 s=3 e=0 z=0  None .text checkAtShieldHit__9daAlink_cFR12dCcD_GObjInf
 */
//	800D1940: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAtShieldHit(dCcD_GObjInf& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkAtShieldHit__9daAlink_cFR12dCcD_GObjInf.s"
}
#pragma pop

/* 800D1978-800D19C8 0050+00 s=1 e=0 z=0  None .text checkCutReverseAt__9daAlink_cFP12dCcD_GObjInf
 */
//	800D1998: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800D19A4: 800D1920 (checkAtShieldHit__9daAlink_cFR12dCcD_GObjInf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutReverseAt(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutReverseAt__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800D19C8-800D1E1C 0454+00 s=5 e=0 z=0  None .text
 * changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM   */
//	800D19E0: 803621D8 (_savegpr_28)
//	800D19F0: 800D1978 (checkCutReverseAt__9daAlink_cFP12dCcD_GObjInf)
//	800D1A10: 800D1978 (checkCutReverseAt__9daAlink_cFP12dCcD_GObjInf)
//	800D1A24: 800D1978 (checkCutReverseAt__9daAlink_cFP12dCcD_GObjInf)
//	800D1A38: 800D4068 (procCutReverseInit__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800D1A60: 80452CC0 (lit_6108)
//	800D1A68: 80452CE0 (lit_6845)
//	800D1A80: 80346E4C (PSMTXMultVecSR)
//	800D1A90: 80347090 (PSVECAdd)
//	800D1AA0: 80452CE0 (lit_6845)
//	800D1AC4: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800D1AD0: 804061C0 (g_dComIfG_gameInfo)
//	800D1AD4: 804061C0 (g_dComIfG_gameInfo)
//	800D1AE4: 8007519C (GetPolyAttackThrough__4dBgSFRC13cBgS_PolyInfo)
//	800D1AF8: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800D1B04: 803A37C0 (__vt__8cM3dGPla)
//	800D1B08: 803A37C0 (__vt__8cM3dGPla)
//	800D1B1C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800D1B38: 80346E4C (PSMTXMultVecSR)
//	800D1B48: 802681E4 (cBgW_CheckBGround__Ff)
//	800D1B58: 800D0ECC (checkCutDashAnime__9daAlink_cCFv)
//	800D1B6C: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	800D1B74: 804061C0 (g_dComIfG_gameInfo)
//	800D1B78: 804061C0 (g_dComIfG_gameInfo)
//	800D1BB8: 80452CC0 (lit_6108)
//	800D1BCC: 80347138 (PSVECSquareMag)
//	800D1BD0: 80452CC0 (lit_6108)
//	800D1BE0: 80452CE8 (lit_6846)
//	800D1BE8: 80452CF0 (lit_6847)
//	800D1C30: 80452CF8 (lit_6848)
//	800D1C3C: 80450AE0 (__float_nan)
//	800D1C40: 80450AE0 (__float_nan)
//	800D1CAC: 80450AE0 (__float_nan)
//	800D1CB0: 80450AE0 (__float_nan)
//	800D1CCC: 80267674 (cM_atan2s__Fff)
//	800D1CDC: 80267674 (cM_atan2s__Fff)
//	800D1CF0: 802673F4 (__ct__5csXyzFsss)
//	800D1D40: 801A8484 (dKy_SordFlush_set__F4cXyzi)
//	800D1D48: 804061C0 (g_dComIfG_gameInfo)
//	800D1D4C: 804061C0 (g_dComIfG_gameInfo)
//	800D1D88: 80452CB8 (lit_6040)
//	800D1D8C: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	800D1DA8: 800845B0 (getHitSeID__12dCcD_GObjInfFUci)
//	800D1DB4: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800D1DC8: 80452CBC (lit_6041)
//	800D1DCC: 802C4814 (startHitItemSE__14Z2CreatureLinkFUlUlP14Z2SoundObjBasef)
//	800D1DD8: 800D4068 (procCutReverseInit__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800D1DDC: 803A37C0 (__vt__8cM3dGPla)
//	800D1DE0: 803A37C0 (__vt__8cM3dGPla)
//	800D1DEC: 803A37C0 (__vt__8cM3dGPla)
//	800D1DF0: 803A37C0 (__vt__8cM3dGPla)
//	800D1E08: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeCutReverseProc(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800D1E1C-800D20B4 0298+00 s=4 e=0 z=0  None .text      setCutDash__9daAlink_cFii */
//	800D1E2C: 803621DC (_savegpr_29)
//	800D1E38: 8038D658 (lit_3757)
//	800D1E3C: 8038D658 (lit_3757)
//	800D1E54: 800D23C0 (checkCutAction__9daAlink_cFv)
//	800D1E6C: 800D1430 (resetCombo__9daAlink_cFi)
//	800D1E9C: 800D1688 (setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff)
//	800D1ECC: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800D1EF4:
// 800D152C (setCutType__9daAlink_cFUc) 	800D1F04: 800D152C (setCutType__9daAlink_cFUc) 800D1F44:
// 800AD6F0 (setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c)
//	800D1F6C: 800D152C (setCutType__9daAlink_cFUc)
//	800D1F88: 800D152C (setCutType__9daAlink_cFUc)
//	800D1F98: 800D152C (setCutType__9daAlink_cFUc)
//	800D1FAC: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800D1FC4: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800D1FEC:
// 800D152C (setCutType__9daAlink_cFUc) 	800D2008: 800D152C (setCutType__9daAlink_cFUc) 800D2018:
// 800D152C (setCutType__9daAlink_cFUc) 	800D2024: 800AFAA8
//(setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	800D203C: 800AF4B0
//(setFaceBck__9daAlink_cFUsiUs) 	800D2060: 800D2284 (setSwordVoiceSe__9daAlink_cFUl) 800D2064:
// 800D0F5C (getSwordAtType__9daAlink_cFv) 	800D2080: 80452D00 (lit_6895) 	800D2084: 80452D04
//(lit_6896) 	800D2088: 800D1540 (setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff) 	800D2090:
// 80124144 (setCutWaterDropEffect__9daAlink_cFv) 	800D20A0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutDash(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setCutDash__9daAlink_cFii.s"
}
#pragma pop

/* 800D20B4-800D20FC 0048+00 s=4 e=0 z=0  None .text      checkForceSwordSwing__9daAlink_cFv */
//	800D20D4: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkForceSwordSwing() {
    nofralloc
#include "asm/d/a/d_a_alink/checkForceSwordSwing__9daAlink_cFv.s"
}
#pragma pop

/* 800D20FC-800D2188 008C+00 s=7 e=0 z=0  None .text      setComboReserb__9daAlink_cFv */
//	800D211C: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	800D2120: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	800D2130: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D2134: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D215C: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setComboReserb() {
    nofralloc
#include "asm/d/a/d_a_alink/setComboReserb__9daAlink_cFv.s"
}
#pragma pop

/* 800D2188-800D21D0 0048+00 s=1 e=0 z=0  None .text      checkComboReserb__9daAlink_cFv */
//	800D21A8: 80115C20 (checkEventRun__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkComboReserb() {
    nofralloc
#include "asm/d/a/d_a_alink/checkComboReserb__9daAlink_cFv.s"
}
#pragma pop

/* 800D21D0-800D2284 00B4+00 s=1 e=0 z=0  None .text      commonCutAction__9daAlink_cFv */
//	800D21F4: 800D1430 (resetCombo__9daAlink_cFi)
//	800D21F8: 804061C0 (g_dComIfG_gameInfo)
//	800D21FC: 804061C0 (g_dComIfG_gameInfo)
//	800D2214: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800D224C: 800F13D8 (procHorseCutInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonCutAction() {
    nofralloc
#include "asm/d/a/d_a_alink/commonCutAction__9daAlink_cFv.s"
}
#pragma pop

/* 800D2284-800D22BC 0038+00 s=13 e=0 z=0  None .text      setSwordVoiceSe__9daAlink_cFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordVoiceSe(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordVoiceSe__9daAlink_cFUl.s"
}
#pragma pop

/* 800D22BC-800D2304 0048+00 s=3 e=0 z=0  None .text      setSwordChargeVoiceSe__9daAlink_cFv */
//	800D22F0: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordChargeVoiceSe() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordChargeVoiceSe__9daAlink_cFv.s"
}
#pragma pop

/* 800D2304-800D2368 0064+00 s=3 e=0 z=0  None .text      setSwordComboVoice__9daAlink_cFv */
//	800D2330: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
//	800D2344: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
//	800D2354: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordComboVoice() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordComboVoice__9daAlink_cFv.s"
}
#pragma pop

/* 800D2368-800D23C0 0058+00 s=3 e=0 z=0  None .text      checkCutTurnInputTrigger__9daAlink_cFv */
//	800D2384: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
//	800D2394: 800D13E4 (checkCutTurnInput__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutTurnInputTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutTurnInputTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 800D23C0-800D2684 02C4+00 s=7 e=0 z=0  None .text      checkCutAction__9daAlink_cFv */
//	800D23D0: 803621D4 (_savegpr_27)
//	800D23D8: 8038D658 (lit_3757)
//	800D23DC: 8038D658 (lit_3757)
//	800D23E0: 800D21D0 (commonCutAction__9daAlink_cFv)
//	800D23F8: 800D26EC (getCutDirection__9daAlink_cFv)
//	800D241C: 80452CA4 (lit_6021)
//	800D2440: 800D34D8 (procCutFinishInit__9daAlink_cFi)
//	800D2450: 800D34D8 (procCutFinishInit__9daAlink_cFi)
//	800D2470: 800D34D8 (procCutFinishInit__9daAlink_cFi)
//	800D2484: 800737E4 (LockonTruth__12dAttention_cFv)
//	800D24B8: 800D34D8 (procCutFinishInit__9daAlink_cFi)
//	800D24D0: 800D34D8 (procCutFinishInit__9daAlink_cFi)
//	800D2504: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	800D251C: 800D34D8 (procCutFinishInit__9daAlink_cFi)
//	800D2530: 800737E4 (LockonTruth__12dAttention_cFv)
//	800D2564: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	800D257C: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	800D25AC: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	800D25BC: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	800D25D0: 800737E4 (LockonTruth__12dAttention_cFv)
//	800D2610: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	800D2628: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	800D264C: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	800D2664: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	800D2670: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutAction__9daAlink_cFv.s"
}
#pragma pop

/* 800D2684-800D26EC 0068+00 s=9 e=0 z=0  None .text      checkCutTurnCharge__9daAlink_cFv */
//	800D269C: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutTurnCharge() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutTurnCharge__9daAlink_cFv.s"
}
#pragma pop

/* 800D26EC-800D2760 0074+00 s=4 e=0 z=0  None .text      getCutDirection__9daAlink_cFv */
//	800D2704: 80452CA4 (lit_6021)
//	800D2724: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800D2748: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCutDirection() {
    nofralloc
#include "asm/d/a/d_a_alink/getCutDirection__9daAlink_cFv.s"
}
#pragma pop

/* 800D2760-800D27E4 0084+00 s=4 e=0 z=0  None .text      checkCutCancelNextMode__9daAlink_cFi */
//	800D2788: 80452CC0 (lit_6108)
//	800D27A4: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutCancelNextMode(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutCancelNextMode__9daAlink_cFi.s"
}
#pragma pop

/* 800D27E4-800D2890 00AC+00 s=4 e=0 z=0  None .text      checkDoCutAction__9daAlink_cFv */
//	800D2804: 804061C0 (g_dComIfG_gameInfo)
//	800D2808: 804061C0 (g_dComIfG_gameInfo)
//	800D2814: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800D2830: 800D6238 (procCutLargeJumpChargeInit__9daAlink_cFv)
//	800D283C: 800D29D4 (checkDownAttackState__9daAlink_cFv)
//	800D284C: 800D53C8 (procCutDownInit__9daAlink_cFv)
//	800D2858: 800D28F4 (checkCutHeadState__9daAlink_cFv)
//	800D2868: 800D5C88 (procCutHeadInit__9daAlink_cFv)
//	800D2878: 800D42FC (procCutJumpInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDoCutAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDoCutAction__9daAlink_cFv.s"
}
#pragma pop

/* 800D2890-800D28F4 0064+00 s=2 e=0 z=0  None .text      checkCutBackState__9daAlink_cFv */
//	800D28AC: 804061C0 (g_dComIfG_gameInfo)
//	800D28B0: 804061C0 (g_dComIfG_gameInfo)
//	800D28BC: 800349BC (isEventBit__11dSv_event_cCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutBackState() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutBackState__9daAlink_cFv.s"
}
#pragma pop

/* 800D28F4-800D29D4 00E0+00 s=6 e=0 z=0  None .text      checkCutHeadState__9daAlink_cFv */
//	800D2904: 803621D0 (_savegpr_26)
//	800D2950: 804061C0 (g_dComIfG_gameInfo)
//	800D2954: 804061C0 (g_dComIfG_gameInfo)
//	800D2960: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800D29C0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutHeadState() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutHeadState__9daAlink_cFv.s"
}
#pragma pop

/* 800D29D4-800D2ABC 00E8+00 s=4 e=0 z=0  None .text      checkDownAttackState__9daAlink_cFv */
//	800D2A1C: 804061C0 (g_dComIfG_gameInfo)
//	800D2A20: 804061C0 (g_dComIfG_gameInfo)
//	800D2A2C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800D2A4C: 8034739C (PSVECSquareDistance)
//	800D2A50: 80452D08 (lit_7174)
//	800D2A88: 8034739C (PSVECSquareDistance)
//	800D2A8C: 80452D08 (lit_7174)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDownAttackState() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDownAttackState__9daAlink_cFv.s"
}
#pragma pop

/* 800D2ABC-800D2B88 00CC+00 s=1 e=1 z=0  None .text      checkCutLargeTurnState__9daAlink_cCFv */
//	800D2ACC: 803621D8 (_savegpr_28)
//	800D2AE0: 804061C0 (g_dComIfG_gameInfo)
//	800D2AE4: 804061C0 (g_dComIfG_gameInfo)
//	800D2AF0: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800D2B14: 804061C0 (g_dComIfG_gameInfo)
//	800D2B18: 804061C0 (g_dComIfG_gameInfo)
//	800D2B20: 8002DCA8 (dComIfGs_getMaxLifeGauge__Fv)
//	800D2B74: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutLargeTurnState() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutLargeTurnState__9daAlink_cCFv.s"
}
#pragma pop

/* 800D2B88-800D2BFC 0074+00 s=2 e=0 z=0  None .text      cancelCutCharge__9daAlink_cFv */
//	800D2BAC: 800D1430 (resetCombo__9daAlink_cFi)
//	800D2BB8: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D2BD8: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	800D2BE4: 800D34D8 (procCutFinishInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelCutCharge() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelCutCharge__9daAlink_cFv.s"
}
#pragma pop

/* 800D2BFC-800D2C54 0058+00 s=3 e=0 z=0  None .text      initCutAtnActorSearch__9daAlink_cFv */
//	800D2C10: 800B3630 (getShapeAngleYAtnActor__9daAlink_cFv)
//	800D2C18: 80270E24 (cLib_distanceAngleS__Fss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initCutAtnActorSearch() {
    nofralloc
#include "asm/d/a/d_a_alink/initCutAtnActorSearch__9daAlink_cFv.s"
}
#pragma pop

/* 800D2C54-800D2C78 0024+00 s=3 e=0 z=0  None .text      checkCutAtnActorChange__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutAtnActorChange() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutAtnActorChange__9daAlink_cFv.s"
}
#pragma pop

/* 800D2C78-800D2F58 02E0+00 s=2 e=0 z=0  None .text      setCutJumpSpeed__9daAlink_cFi */
//	800D2CAC: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800D2CB0: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800D2CDC: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800D2CEC: 80452D0C (lit_7305)
//	800D2D14: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800D2D1C: 80439A20 (sincosTable___5JMath)
//	800D2D20: 80439A20 (sincosTable___5JMath)
//	800D2D3C: 80452D10 (lit_7306)
//	800D2D48: 80452D00 (lit_6895)
//	800D2D74: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	800D2D80: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	800D2DA4: 80452CB8 (lit_6040)
//	800D2DB4: 80452C98 (lit_5943)
//	800D2DCC: 80452CC0 (lit_6108)
//	800D2DDC: 80452D14 (lit_7307)
//	800D2DE8: 80452CC0 (lit_6108)
//	800D2E10: 80452CC0 (lit_6108)
//	800D2E38: 8034739C (PSVECSquareDistance)
//	800D2E3C: 80452CC0 (lit_6108)
//	800D2E4C: 80452CE8 (lit_6846)
//	800D2E54: 80452CF0 (lit_6847)
//	800D2E9C: 80452CF8 (lit_6848)
//	800D2EA8: 80450AE0 (__float_nan)
//	800D2EAC: 80450AE0 (__float_nan)
//	800D2F18: 80450AE0 (__float_nan)
//	800D2F1C: 80450AE0 (__float_nan)
//	800D2F20: 80452D18 (lit_7308)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutJumpSpeed(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setCutJumpSpeed__9daAlink_cFi.s"
}
#pragma pop

/* 800D2F58-800D31B8 0260+00 s=3 e=0 z=0  None .text      procCutNormalInit__9daAlink_cFi */
//	800D2F68: 803621D4 (_savegpr_27)
//	800D2F74: 8038D658 (lit_3757)
//	800D2F78: 8038D658 (lit_3757)
//	800D2F8C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D2F98: 800D152C (setCutType__9daAlink_cFUc)
//	800D300C: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800D3034: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800D306C: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800D3084: 800737E4 (LockonTruth__12dAttention_cFv)
//	800D30AC: 80452CA4 (lit_6021)
//	800D30E0: 80425544 (l_halfAtnWaitBaseAnime)
//	800D30E4: 80425544 (l_halfAtnWaitBaseAnime)
//	800D3124: 800D1688 (setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff)
//	800D312C: 800D2304 (setSwordComboVoice__9daAlink_cFv)
//	800D3138: 804061C0 (g_dComIfG_gameInfo)
//	800D313C: 804061C0 (g_dComIfG_gameInfo)
//	800D3150: 80124144 (setCutWaterDropEffect__9daAlink_cFv)
//	800D3158: 800D26EC (getCutDirection__9daAlink_cFv)
//	800D3198: 800D2BFC (initCutAtnActorSearch__9daAlink_cFv)
//	800D31A4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutNormalInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutNormalInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D31B8-800D34D8 0320+00 s=1 e=0 z=0  None .text      procCutNormal__9daAlink_cFv */
//	800D31D0: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D31EC: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
//	800D31F8: 800D20FC (setComboReserb__9daAlink_cFv)
//	800D3200: 800D2684 (checkCutTurnCharge__9daAlink_cFv)
//	800D3208: 800D2C54 (checkCutAtnActorChange__9daAlink_cFv)
//	800D3210: 80452CC0 (lit_6108)
//	800D3214: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800D3218: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800D3220: 80270740 (cLib_chaseF__FPfff)
//	800D3254: 800D26EC (getCutDirection__9daAlink_cFv)
//	800D3270: 80452D1C (lit_7448)
//	800D3294: 80452D1C (lit_7448)
//	800D32A8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D32BC: 800D1430 (resetCombo__9daAlink_cFi)
//	800D32D4: 804061C0 (g_dComIfG_gameInfo)
//	800D32D8: 804061C0 (g_dComIfG_gameInfo)
//	800D32E4: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800D32F4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D3320: 800D2760 (checkCutCancelNextMode__9daAlink_cFi)
//	800D3344: 800D1430 (resetCombo__9daAlink_cFi)
//	800D3350: 800D19C8 (changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800D336C: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800D3384: 800B3630 (getShapeAngleYAtnActor__9daAlink_cFv)
//	800D338C: 80270E24 (cLib_distanceAngleS__Fss)
//	800D33B8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800D33FC: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800D3424: 80452D20 (lit_7449)
//	800D3440: 80452D24 (lit_7450)
//	800D3468: 80452D28 (lit_7451)
//	800D3484: 80452D24 (lit_7450)
//	800D34A4: 80452D20 (lit_7449)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutNormal() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutNormal__9daAlink_cFv.s"
}
#pragma pop

/* 800D34D8-800D382C 0354+00 s=4 e=0 z=0  None .text      procCutFinishInit__9daAlink_cFi */
//	800D34F0: 803621CC (_savegpr_25)
//	800D34FC: 8038D658 (lit_3757)
//	800D3500: 8038D658 (lit_3757)
//	800D3524: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D3530: 800D152C (setCutType__9daAlink_cFUc)
//	800D35D8: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800D3610: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800D3638: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800D36A0: 800D1688 (setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff)
//	800D36E8: 800D1688 (setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff)
//	800D3724: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
//	800D3730: 800D2304 (setSwordComboVoice__9daAlink_cFv)
//	800D373C: 80425544 (l_halfAtnWaitBaseAnime)
//	800D3740: 80425544 (l_halfAtnWaitBaseAnime)
//	800D377C: 804061C0 (g_dComIfG_gameInfo)
//	800D3780: 804061C0 (g_dComIfG_gameInfo)
//	800D3794: 80124144 (setCutWaterDropEffect__9daAlink_cFv)
//	800D379C: 800D2BFC (initCutAtnActorSearch__9daAlink_cFv)
//	800D37A8: 8007353C (LockonTarget__12dAttention_cFl)
//	800D37C4: 8007353C (LockonTarget__12dAttention_cFl)
//	800D37D0: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800D37DC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800D3818: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinishInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinishInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D382C-800D3ADC 02B0+00 s=1 e=0 z=0  None .text      procCutFinish__9daAlink_cFv */
//	800D3844: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D3864: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
//	800D386C: 80452CC0 (lit_6108)
//	800D3870: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800D3874: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800D387C: 80270740 (cLib_chaseF__FPfff)
//	800D3890: 800D20FC (setComboReserb__9daAlink_cFv)
//	800D3898: 800D2684 (checkCutTurnCharge__9daAlink_cFv)
//	800D38A0: 800D2C54 (checkCutAtnActorChange__9daAlink_cFv)
//	800D38D4: 80452CB0 (lit_6025)
//	800D3940: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D3954: 800D1430 (resetCombo__9daAlink_cFi)
//	800D397C: 800D2760 (checkCutCancelNextMode__9daAlink_cFi)
//	800D39AC: 804061C0 (g_dComIfG_gameInfo)
//	800D39B0: 804061C0 (g_dComIfG_gameInfo)
//	800D39BC: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800D39C4: 80452CC0 (lit_6108)
//	800D39DC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D39FC: 800D2760 (checkCutCancelNextMode__9daAlink_cFi)
//	800D3A20: 800D1430 (resetCombo__9daAlink_cFi)
//	800D3A2C: 800D19C8 (changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800D3A48: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800D3A50: 800B3630 (getShapeAngleYAtnActor__9daAlink_cFv)
//	800D3A58: 80270E24 (cLib_distanceAngleS__Fss)
//	800D3AA8: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinish() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinish__9daAlink_cFv.s"
}
#pragma pop

/* 800D3ADC-800D3CCC 01F0+00 s=2 e=0 z=0  None .text      procCutFinishJumpUpInit__9daAlink_cFv */
//	800D3AF4: 803621DC (_savegpr_29)
//	800D3AFC: 8038D658 (lit_3757)
//	800D3B00: 8038D658 (lit_3757)
//	800D3B18: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D3B34: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800D3B3C: 800D1268 (setSwordModel__9daAlink_cFv)
//	800D3B48: 800D152C (setCutType__9daAlink_cFUc)
//	800D3BA0: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800D3BB0: 80452D2C (lit_7624)
//	800D3C0C: 800D0F5C (getSwordAtType__9daAlink_cFv)
//	800D3C30: 80452D30 (lit_7625)
//	800D3C34: 800D1540 (setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff)
//	800D3C60: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800D3C70: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
//	800D3C84: 804061C0 (g_dComIfG_gameInfo)
//	800D3C88: 804061C0 (g_dComIfG_gameInfo)
//	800D3C9C: 80124144 (setCutWaterDropEffect__9daAlink_cFv)
//	800D3CB8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinishJumpUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinishJumpUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D3CCC-800D3DD8 010C+00 s=1 e=0 z=0  None .text      procCutFinishJumpUp__9daAlink_cFv */
//	800D3CE4: 80452D1C (lit_7448)
//	800D3D04: 80452CC4 (lit_6109)
//	800D3D2C: 800D3DD8 (procCutFinishJumpUpLandInit__9daAlink_cFv)
//	800D3D48: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0)
//	800D3D4C: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0)
//	800D3D6C: 800C6A48 (procFallInit__9daAlink_cFif)
//	800D3D78: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0)
//	800D3D7C: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0)
//	800D3DB0: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinishJumpUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinishJumpUp__9daAlink_cFv.s"
}
#pragma pop

/* 800D3DD8-800D3ECC 00F4+00 s=1 e=0 z=0  None .text      procCutFinishJumpUpLandInit__9daAlink_cFv
 */
//	800D3DF0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D3DF8: 800D6FE0 (checkCutLandDamage__9daAlink_cFv)
//	800D3E04: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0)
//	800D3E08: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0)
//	800D3E10: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D3E14:
//80452CC0 (lit_6108) 	800D3E24: 800D152C (setCutType__9daAlink_cFUc) 	800D3E38: 801211C0
//(setFootEffectProcType__9daAlink_cFi) 	800D3E54: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0)
//800D3E58: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0) 	800D3E70: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0)
// 800D3E74: 8038DAEC (m__21daAlinkHIO_cutFnJU_c0) 	800D3E90: 80425544 (l_halfAtnWaitBaseAnime)
// 800D3E94: 80425544 (l_halfAtnWaitBaseAnime) 	800D3EB0: 800D2BFC
// (initCutAtnActorSearch__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinishJumpUpLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinishJumpUpLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D3ECC-800D4068 019C+00 s=1 e=0 z=0  None .text      procCutFinishJumpUpLand__9daAlink_cFv */
//	800D3EE4: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D3F0C: 800D20FC (setComboReserb__9daAlink_cFv)
//	800D3F14: 800D2684 (checkCutTurnCharge__9daAlink_cFv)
//	800D3F24: 800D2C54 (checkCutAtnActorChange__9daAlink_cFv)
//	800D3F2C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D3F44: 804061C0 (g_dComIfG_gameInfo)
//	800D3F48: 804061C0 (g_dComIfG_gameInfo)
//	800D3F54: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800D3F80: 800D2760 (checkCutCancelNextMode__9daAlink_cFi)
//	800D3F9C: 80452CC0 (lit_6108)
//	800D3FB4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D3FD4: 800D2760 (checkCutCancelNextMode__9daAlink_cFi)
//	800D3FF8: 800D1430 (resetCombo__9daAlink_cFi)
//	800D4004: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800D400C: 800B3630 (getShapeAngleYAtnActor__9daAlink_cFv)
//	800D4014: 80270E24 (cLib_distanceAngleS__Fss)
//	800D4034: 80452D34 (lit_7710)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinishJumpUpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinishJumpUpLand__9daAlink_cFv.s"
}
#pragma pop

/* 800D4068-800D41FC 0194+00 s=2 e=0 z=0  None .text
 * procCutReverseInit__9daAlink_cFQ29daAlink_c11daAlink_ANM     */
//	800D40B8: 801A81C0 (dKy_Sound_set__F4cXyziUii)
//	800D40D4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D40E8: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800D40EC: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800D40F4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D4100:
//8038DF9C (m__19daAlinkHIO_guard_c0) 	800D4104: 8038DF9C (m__19daAlinkHIO_guard_c0) 	800D411C:
//80452CBC (lit_6041) 	800D4120: 800DD008 (setUpperGuardAnime__9daAlink_cFf) 	800D4130: 8038DE8C
//(m__17daAlinkHIO_cut_c0) 	800D4134: 8038DE8C (m__17daAlinkHIO_cut_c0) 	800D413C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D4148:
//8038DE8C (m__17daAlinkHIO_cut_c0) 	800D414C: 8038DE8C (m__17daAlinkHIO_cut_c0) 	800D4160:
//8038DE8C
//(m__17daAlinkHIO_cut_c0) 	800D4164: 8038DE8C (m__17daAlinkHIO_cut_c0) 	800D41B4: 80452CC0
//(lit_6108) 	800D41BC: 80452CB8 (lit_6040) 	800D41C8: 804061C0 (g_dComIfG_gameInfo) 	800D41CC:
//804061C0 (g_dComIfG_gameInfo) 	800D41DC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutReverseInit(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutReverseInit__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800D41FC-800D42FC 0100+00 s=1 e=0 z=0  None .text      procCutReverse__9daAlink_cFv */
//	800D4214: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D4230: 80452CC0 (lit_6108)
//	800D4234: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D4238: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D4240: 80270740 (cLib_chaseF__FPfff)
//	800D4254: 800D2684 (checkCutTurnCharge__9daAlink_cFv)
//	800D4274: 80452CBC (lit_6041)
//	800D4278: 800DD008 (setUpperGuardAnime__9daAlink_cFf)
//	800D4280: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D429C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D42C4: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutReverse() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutReverse__9daAlink_cFv.s"
}
#pragma pop

/* 800D42FC-800D43F8 00FC+00 s=2 e=0 z=0  None .text      procCutJumpInit__9daAlink_cFi */
//	800D431C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D4328: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D432C: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D4330: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D433C:
//8038DB40
//(m__21daAlinkHIO_cutJump_c0) 	800D4340: 8038DB40 (m__21daAlinkHIO_cutJump_c0) 	800D4358:
//8038DB40
//(m__21daAlinkHIO_cutJump_c0) 	800D435C: 8038DB40 (m__21daAlinkHIO_cutJump_c0) 	800D4378:
//800D2C78
//(setCutJumpSpeed__9daAlink_cFi) 	800D4398: 8038DE8C (m__17daAlinkHIO_cut_c0) 	800D439C:
//8038DE8C (m__17daAlinkHIO_cut_c0) 	800D43A8: 800D1688
//(setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff) 	800D43B4: 800D152C (setCutType__9daAlink_cFUc)
//	800D43BC: 800D2304 (setSwordComboVoice__9daAlink_cFv)
//	800D43C0: 804061C0 (g_dComIfG_gameInfo)
//	800D43C4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D43F8-800D452C 0134+00 s=1 e=0 z=0  None .text      procCutJump__9daAlink_cFv */
//	800D4420: 800D19C8 (changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800D443C: 80452D38 (lit_7807)
//	800D4444: 80452CC0 (lit_6108)
//	800D444C: 80452CB8 (lit_6040)
//	800D4458: 804061C0 (g_dComIfG_gameInfo)
//	800D445C: 804061C0 (g_dComIfG_gameInfo)
//	800D4470: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D448C: 80452D3C (lit_7808)
//	800D4490: 80452CB8 (lit_6040)
//	800D4494: 80270740 (cLib_chaseF__FPfff)
//	800D449C: 800D13E4 (checkCutTurnInput__9daAlink_cCFv)
//	800D44AC: 800D1424 (getCutTurnDirection__9daAlink_cCFv)
//	800D44C8: 800D452C (procCutJumpLandInit__9daAlink_cFi)
//	800D44D4: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D44D8: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D4504: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutJump__9daAlink_cFv.s"
}
#pragma pop

/* 800D452C-800D4684 0158+00 s=1 e=0 z=0  None .text      procCutJumpLandInit__9daAlink_cFi */
//	800D454C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D4554: 800D6FE0 (checkCutLandDamage__9daAlink_cFv)
//	800D4560: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D4564: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D456C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D4580:
//80452D3C (lit_7808) 	800D4584: 8038DB40 (m__21daAlinkHIO_cutJump_c0) 	800D4588: 8038DB40
//(m__21daAlinkHIO_cutJump_c0) 	800D459C: 8000F848
//(initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs) 	800D45B8: 800BF0EC
//(seStartSwordCut__9daAlink_cFUl) 	800D45C0: 80452CC0 (lit_6108) 	800D45D4: 801256EC
//(initBlur__14daAlink_blur_cFfiPC4cXyzPC4cXyzPC4cXyz) 	800D45EC: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D45F0: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D45FC: 800D1688 (setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff)
//	800D460C: 80452CC0 (lit_6108)
//	800D461C: 800D152C (setCutType__9daAlink_cFUc)
//	800D4630: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800D4640: 80425544 (l_halfAtnWaitBaseAnime)
//	800D4644: 80425544 (l_halfAtnWaitBaseAnime)
//	800D4664: 800B5C64 (setStepLandVibration__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutJumpLandInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutJumpLandInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D4684-800D47DC 0158+00 s=1 e=0 z=0  None .text      procCutJumpLand__9daAlink_cFv */
//	800D469C: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D46BC: 800D19C8 (changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800D46F4: 800D13E4 (checkCutTurnInput__9daAlink_cCFv)
//	800D4704: 800D1424 (getCutTurnDirection__9daAlink_cCFv)
//	800D4710: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D4724: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D4730: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D4734: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D4758: 800D47DC (procCutTurnInit__9daAlink_cFii)
//	800D4760: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D4764: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D4788: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D47A0: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
//	800D47A4: 8038DB40 (m__21daAlinkHIO_cutJump_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutJumpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutJumpLand__9daAlink_cFv.s"
}
#pragma pop

/* 800D47DC-800D4A74 0298+00 s=7 e=0 z=0  None .text      procCutTurnInit__9daAlink_cFii */
//	800D47F4: 803621D4 (_savegpr_27)
//	800D4804: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D4808: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D4810: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D4820: 800D1424 (getCutTurnDirection__9daAlink_cCFv)
//	800D48BC: 800D1430 (resetCombo__9daAlink_cFi)
//	800D48C4: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800D48DC: 80452D30 (lit_7625)
//	800D48FC: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800D4904: 800D2ABC (checkCutLargeTurnState__9daAlink_cCFv)
//	800D492C: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
//	800D4950: 800D152C (setCutType__9daAlink_cFUc)
//	800D4960: 800D152C (setCutType__9daAlink_cFUc)
//	800D4984: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
//	800D4998: 800D152C (setCutType__9daAlink_cFUc)
//	800D49A8: 800D152C (setCutType__9daAlink_cFUc)
//	800D49DC: 80452D04 (lit_6896)
//	800D49E4: 80425544 (l_halfAtnWaitBaseAnime)
//	800D49E8: 80425544 (l_halfAtnWaitBaseAnime)
//	800D4A18: 804061C0 (g_dComIfG_gameInfo)
//	800D4A1C: 804061C0 (g_dComIfG_gameInfo)
//	800D4A2C: 80452CC0 (lit_6108)
//	800D4A3C: 80124144 (setCutWaterDropEffect__9daAlink_cFv)
//	800D4A4C: 800D0F90 (initCutTurnAt__9daAlink_cFfi)
//	800D4A60: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurnInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurnInit__9daAlink_cFii.s"
}
#pragma pop

/* 800D4A74-800D4C68 01F4+00 s=1 e=0 z=0  None .text      procCutTurn__9daAlink_cFv */
//	800D4A84: 803621DC (_savegpr_29)
//	800D4A8C: 8038D658 (lit_3757)
//	800D4A90: 8038D658 (lit_3757)
//	800D4A94: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D4AB8: 80452CC0 (lit_6108)
//	800D4AC4: 80270740 (cLib_chaseF__FPfff)
//	800D4AF0: 80452D40 (lit_7945)
//	800D4B0C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D4B3C: 800D2760 (checkCutCancelNextMode__9daAlink_cFi)
//	800D4B64: 804061C0 (g_dComIfG_gameInfo)
//	800D4B68: 804061C0 (g_dComIfG_gameInfo)
//	800D4B74: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800D4B8C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D4BAC: 800D2760 (checkCutCancelNextMode__9daAlink_cFi)
//	800D4BEC: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800D4C08: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800D4C3C: 80270740 (cLib_chaseF__FPfff)
//	800D4C48: 8026F708 (SetR__8cM3dGSphFf)
//	800D4C54: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurn__9daAlink_cFv.s"
}
#pragma pop

/* 800D4C68-800D4D04 009C+00 s=3 e=0 z=0  None .text      procCutTurnChargeInit__9daAlink_cFv */
//	800D4C88: 800A7A5C (checkDashAnime__9daAlink_cCFv)
//	800D4C9C: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	800D4CB0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D4CBC: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D4CC0: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D4CC8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D4CCC:
//80452CC0 (lit_6108) 	800D4CDC: 8038DE8C (m__17daAlinkHIO_cut_c0) 	800D4CE0: 8038DE8C
//(m__17daAlinkHIO_cut_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurnChargeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurnChargeInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D4D04-800D4DDC 00D8+00 s=1 e=0 z=0  None .text      procCutTurnCharge__9daAlink_cFv */
//	800D4D18: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D4D30: 800D22BC (setSwordChargeVoiceSe__9daAlink_cFv)
//	800D4D34: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D4D38: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D4D4C: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
//	800D4D74: 800D23C0 (checkCutAction__9daAlink_cFv)
//	800D4D80: 800D2B88 (cancelCutCharge__9daAlink_cFv)
//	800D4D8C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D4DA0: 800D4DDC (procCutTurnMoveInit__9daAlink_cFi)
//	800D4DAC: 80452D44 (lit_7977)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurnCharge() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurnCharge__9daAlink_cFv.s"
}
#pragma pop

/* 800D4DDC-800D4EFC 0120+00 s=3 e=0 z=0  None .text      procCutTurnMoveInit__9daAlink_cFi */
//	800D4DFC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D4E04: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800D4E2C: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800D4E38: 80452CC0 (lit_6108)
//	800D4E3C: 80452CBC (lit_6041)
//	800D4E40: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800D4E5C: 800AFB14 (setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800D4E68: 80452CC0 (lit_6108)
//	800D4E6C: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D4E70: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D4E78: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800D4E84: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D4E88: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D4E94: 804061C0 (g_dComIfG_gameInfo)
//	800D4E98: 804061C0 (g_dComIfG_gameInfo)
//	800D4EAC: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800D4ECC: 804061C0 (g_dComIfG_gameInfo)
//	800D4ED0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurnMoveInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurnMoveInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D4EFC-800D53C8 04CC+00 s=1 e=0 z=0  None .text      procCutTurnMove__9daAlink_cFv */
//	800D4F1C: 803621DC (_savegpr_29)
//	800D4F28: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800D4F2C: 804061C0 (g_dComIfG_gameInfo)
//	800D4F30: 804061C0 (g_dComIfG_gameInfo)
//	800D4F44: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800D4F5C: 80452CB0 (lit_6025)
//	800D4F78: 80452D48 (lit_8130)
//	800D4FA8: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D4FC8: 80452D48 (lit_8130)
//	800D4FDC: 80452CB0 (lit_6025)
//	800D501C: 800D29D4 (checkDownAttackState__9daAlink_cFv)
//	800D5038: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800D5044: 800D28F4 (checkCutHeadState__9daAlink_cFv)
//	800D5060: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800D5070: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800D5078: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D507C: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D50A4: 804061C0 (g_dComIfG_gameInfo)
//	800D50A8: 804061C0 (g_dComIfG_gameInfo)
//	800D50B4: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800D50D0: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
//	800D50F4: 80452CC0 (lit_6108)
//	800D5108: 80452CA4 (lit_6021)
//	800D5124: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800D5144: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800D5170: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D5174: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D5180: 80452C98 (lit_5943)
//	800D519C: 80452D4C (lit_8131)
//	800D51C8: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D51CC: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D51D8: 80452C98 (lit_5943)
//	800D51F4: 80452D4C (lit_8131)
//	800D5214: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D5218: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D5240: 80452CC0 (lit_6108)
//	800D5248: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800D5254: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D5258: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D5260: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	800D5270: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D5274: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D5288: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D528C: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D52A4: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D52A8: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D52B8: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D52BC: 8038DB84 (m__21daAlinkHIO_cutTurn_c0)
//	800D52E0: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800D52E4: 80452CC0 (lit_6108)
//	800D530C: 800BF37C (initBasAnime__9daAlink_cFv)
//	800D5314: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800D532C: 80452CC0 (lit_6108)
//	800D5344: 80452CB8 (lit_6040)
//	800D5364: 800D6374 (procCutLargeJumpInit__9daAlink_cFv)
//	800D5378: 800D47DC (procCutTurnInit__9daAlink_cFii)
//	800D538C: 800D27E4 (checkDoCutAction__9daAlink_cFv)
//	800D5398: 800D2B88 (cancelCutCharge__9daAlink_cFv)
//	800D53B4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurnMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurnMove__9daAlink_cFv.s"
}
#pragma pop

/* 800D53C8-800D57F8 0430+00 s=2 e=0 z=0  None .text      procCutDownInit__9daAlink_cFv */
//	800D5414: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D5420: 800D1430 (resetCombo__9daAlink_cFi)
//	800D5454: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800D5474: 80439A20 (sincosTable___5JMath)
//	800D5478: 80439A20 (sincosTable___5JMath)
//	800D5490: 80452D50 (lit_8247)
//	800D54C0: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800D54D0: 80452CC0 (lit_6108)
//	800D54F4: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D54F8: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D54FC: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D5504:
//80452D00 (lit_6895) 	800D5514: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz) 	800D5520: 80450CD0
//(mGroundY__11fopAcM_gc_c) 	800D5530: 80452D00 (lit_6895) 	800D5544: 80270C04
//(cLib_targetAngleY__FPC3VecPC3Vec) 	800D555C: 80439A20 (sincosTable___5JMath) 	800D5560:
//80439A20 (sincosTable___5JMath) 	800D556C: 80452D54 (lit_8248) 	800D55A0: 80452CC0 (lit_6108)
//800D55C0: 8034739C (PSVECSquareDistance) 	800D55C4: 80452CC0 (lit_6108) 	800D55D4: 80452CE8
// (lit_6846) 	800D55DC: 80452CF0 (lit_6847) 	800D5624: 80452CF8 (lit_6848) 	800D5630: 80450AE0
//(__float_nan) 	800D5634: 80450AE0 (__float_nan) 	800D56A0: 80450AE0 (__float_nan) 	800D56A4: 80450AE0
//(__float_nan) 	800D56AC: 80452D58 (lit_8249) 	800D56BC: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D56C0: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D56DC: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800D56E0: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800D5710: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800D5720: 80452D2C (lit_7624)
//	800D5738: 80452CB8 (lit_6040)
//	800D5748: 80452C98 (lit_5943)
//	800D5760: 80452CC0 (lit_6108)
//	800D5770: 80452D14 (lit_7307)
//	800D577C: 80452CC0 (lit_6108)
//	800D57B4: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
//	800D57C0: 800D152C (setCutType__9daAlink_cFUc)
//	800D57C4: 804061C0 (g_dComIfG_gameInfo)
//	800D57C8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutDownInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutDownInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D57F8-800D58A0 00A8+00 s=1 e=0 z=0  None .text      procCutDown__9daAlink_cFv */
//	800D5830: 80452CC0 (lit_6108)
//	800D5844: 800D58A0 (procCutDownLandInit__9daAlink_cFP13fopEn_enemy_c)
//	800D5850: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D5878: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D587C: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D5884: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutDown() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutDown__9daAlink_cFv.s"
}
#pragma pop

/* 800D58A0-800D5ADC 023C+00 s=1 e=0 z=0  None .text
 * procCutDownLandInit__9daAlink_cFP13fopEn_enemy_c             */
//	800D58C0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D58C8: 800D6FE0 (checkCutLandDamage__9daAlink_cFv)
//	800D58D4: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D58D8: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D58E0: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D5910:
//80452CC0 (lit_6108) 	800D5938: 8034739C (PSVECSquareDistance) 	800D593C: 80452D5C (lit_8322)
//800D595C: 80452D50 (lit_8247) 	800D5994: 802673F4 (__ct__5csXyzFsss) 	800D599C: 804061C0
// (g_dComIfG_gameInfo) 	800D59A0: 804061C0 (g_dComIfG_gameInfo) 	800D59BC: 8004C218
//(setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl) 	800D59C4: 8038DD44
//(m__21daAlinkHIO_cutDown_c0) 	800D59C8: 8038DD44 (m__21daAlinkHIO_cutDown_c0) 	800D59D4: 80452CC0
//(lit_6108) 	800D59DC: 80452CB8 (lit_6040) 	800D59E8: 804061C0 (g_dComIfG_gameInfo) 	800D59EC:
//804061C0 (g_dComIfG_gameInfo) 	800D5A00: 8006FA24 (StartShock__12dVibration_cFii4cXyz) 	800D5A14:
//8038DD44 (m__21daAlinkHIO_cutDown_c0) 	800D5A18: 8038DD44 (m__21daAlinkHIO_cutDown_c0) 	800D5A4C:
//80452CC0 (lit_6108) 	800D5A70: 801211C0 (setFootEffectProcType__9daAlink_cFi) 	800D5A88: 804061C0
//(g_dComIfG_gameInfo) 	800D5A8C: 804061C0 (g_dComIfG_gameInfo) 	800D5A9C: 80425544
//(l_halfAtnWaitBaseAnime) 	800D5AA0: 80425544 (l_halfAtnWaitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutDownLandInit(fopEn_enemy_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutDownLandInit__9daAlink_cFP13fopEn_enemy_c.s"
}
#pragma pop

/* 800D5ADC-800D5C88 01AC+00 s=1 e=0 z=0  None .text      procCutDownLand__9daAlink_cFv */
//	800D5AF4: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D5B30: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D5B78: 804061C0 (g_dComIfG_gameInfo)
//	800D5B7C: 804061C0 (g_dComIfG_gameInfo)
//	800D5B88: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800D5B98: 800C57A4 (procBackJumpInit__9daAlink_cFi)
//	800D5BA8: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D5BAC: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D5BB4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D5BCC:
//800BA0D0 (checkNextAction__9daAlink_cFi) 	800D5BE4: 80452D60 (lit_8369) 	800D5C00: 80452CE0
//(lit_6845) 	800D5C1C: 80452D64 (lit_8370) 	800D5C20: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800D5C38: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800D5C40: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D5C44: 8038DD44 (m__21daAlinkHIO_cutDown_c0)
//	800D5C68: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutDownLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutDownLand__9daAlink_cFv.s"
}
#pragma pop

/* 800D5C88-800D5FC8 0340+00 s=2 e=0 z=0  None .text      procCutHeadInit__9daAlink_cFv */
//	800D5CDC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D5CE8: 800D1430 (resetCombo__9daAlink_cFi)
//	800D5CF4: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D5CF8: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D5CFC: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D5D04:
//8038DDB8
//(m__21daAlinkHIO_cutHead_c0) 	800D5D08: 8038DDB8 (m__21daAlinkHIO_cutHead_c0) 	800D5D18:
//800BB770
//(setSpecialGravity__9daAlink_cFffi) 	800D5D30: 80266B34 (__mi__4cXyzCFRC3Vec) 	800D5D54:
//8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c) 	800D5D5C: 80439A20 (sincosTable___5JMath)
//800D5D60: 80439A20 (sincosTable___5JMath) 	800D5D78: 80452D68 (lit_8472) 	800D5D94: 8015ECFC
//(clearData__16daPy_actorKeep_cFv) 	800D5D98: 8038DDB8 (m__21daAlinkHIO_cutHead_c0) 800D5D9C:
// 8038DDB8 (m__21daAlinkHIO_cutHead_c0) 	800D5DA8: 80452CE0 (lit_6845) 	800D5DCC: 80452D6C
// (lit_8473) 	800D5DDC: 80452CC0 (lit_6108) 	800D5E04: 80452CC0 (lit_6108) 	800D5E18: 80347138
//(PSVECSquareMag) 	800D5E1C: 80452CC0 (lit_6108) 	800D5E2C: 80452CE8 (lit_6846) 	800D5E34: 80452CF0
//(lit_6847) 	800D5E7C: 80452CF8 (lit_6848) 	800D5E88: 80450AE0 (__float_nan) 	800D5E8C: 80450AE0
//(__float_nan) 	800D5EF8: 80450AE0 (__float_nan) 	800D5EFC: 80450AE0 (__float_nan) 	800D5F00: 8038DDB8
//(m__21daAlinkHIO_cutHead_c0) 	800D5F04: 8038DDB8 (m__21daAlinkHIO_cutHead_c0) 	800D5F18: 80452D14
//(lit_7307) 	800D5F20: 80452CC4 (lit_6109) 	800D5F50: 80267128 (atan2sX_Z__4cXyzCFv) 	800D5F6C:
//800D2284 (setSwordVoiceSe__9daAlink_cFUl) 	800D5F84: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D5F88: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D5F94: 800D1688 (setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff)
//	800D5FA0: 800D152C (setCutType__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutHeadInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutHeadInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D5FC8-800D6130 0168+00 s=1 e=0 z=0  None .text      procCutHead__9daAlink_cFv */
//	800D5FF0: 80452CC0 (lit_6108)
//	800D5FF8: 80270740 (cLib_chaseF__FPfff)
//	800D6000: 80452CC0 (lit_6108)
//	800D6018: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D601C: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D6024: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D6028:
//80452CC0 (lit_6108) 	800D6040: 800BB770 (setSpecialGravity__9daAlink_cFffi) 	800D6050: 80124144
//(setCutWaterDropEffect__9daAlink_cFv) 	800D6060: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
//	800D6070: 80452D70 (lit_8501)
//	800D6080: 80452D74 (lit_8502)
//	800D6084: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800D6090: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D6094: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D60AC: 800BB644 (initGravity__9daAlink_cFv)
//	800D60B4: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D60B8: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D60F0: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800D6110: 800D6130 (procCutHeadLandInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutHead() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutHead__9daAlink_cFv.s"
}
#pragma pop

/* 800D6130-800D618C 005C+00 s=1 e=0 z=0  None .text      procCutHeadLandInit__9daAlink_cFv */
//	800D6148: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D6150: 800D6FE0 (checkCutLandDamage__9daAlink_cFv)
//	800D615C: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D6160: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D6168: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D616C:
//80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutHeadLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutHeadLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D618C-800D6238 00AC+00 s=1 e=0 z=0  None .text      procCutHeadLand__9daAlink_cFv */
//	800D61B8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D61D0: 804061C0 (g_dComIfG_gameInfo)
//	800D61D4: 804061C0 (g_dComIfG_gameInfo)
//	800D61E0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800D61F0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D61FC: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D6200: 8038DDB8 (m__21daAlinkHIO_cutHead_c0)
//	800D6218: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutHeadLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutHeadLand__9daAlink_cFv.s"
}
#pragma pop

/* 800D6238-800D62A0 0068+00 s=2 e=0 z=0  None .text      procCutLargeJumpChargeInit__9daAlink_cFv
 */
//	800D6250: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D625C: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D6260: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D6264: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D6268:
//80452CC0 (lit_6108) 	800D6278: 8038DE8C (m__17daAlinkHIO_cut_c0) 	800D627C: 8038DE8C
//(m__17daAlinkHIO_cut_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJumpChargeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJumpChargeInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D62A0-800D6374 00D4+00 s=1 e=0 z=0  None .text      procCutLargeJumpCharge__9daAlink_cFv */
//	800D62B4: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D62CC: 800D29D4 (checkDownAttackState__9daAlink_cFv)
//	800D62E0: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800D62EC: 800D28F4 (checkCutHeadState__9daAlink_cFv)
//	800D6300: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800D6310: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800D6318: 800D22BC (setSwordChargeVoiceSe__9daAlink_cFv)
//	800D6338: 800D27E4 (checkDoCutAction__9daAlink_cFv)
//	800D6344: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D6358: 800D4DDC (procCutTurnMoveInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJumpCharge() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJumpCharge__9daAlink_cFv.s"
}
#pragma pop

/* 800D6374-800D6484 0110+00 s=2 e=0 z=0  None .text      procCutLargeJumpInit__9daAlink_cFv */
//	800D63B8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D63C4: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D63C8: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D63D0: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D63D4:
//80425544
//(l_halfAtnWaitBaseAnime) 	800D63D8: 80425544 (l_halfAtnWaitBaseAnime) 	800D63F0: 80452CC0
//(lit_6108) 	800D641C: 8038DE8C (m__17daAlinkHIO_cut_c0) 	800D6420: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D642C: 800D1688 (setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff)
//	800D6438: 800D152C (setCutType__9daAlink_cFUc)
//	800D6448: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
//	800D6450: 80124144 (setCutWaterDropEffect__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJumpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJumpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D6484-800D66C0 023C+00 s=1 e=0 z=0  None .text      procCutLargeJump__9daAlink_cFv */
//	800D64C4: 800D13E4 (checkCutTurnInput__9daAlink_cCFv)
//	800D64D4: 800D1424 (getCutTurnDirection__9daAlink_cCFv)
//	800D64EC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D6508: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D650C: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D6514: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D652C:
//800D2284 (setSwordVoiceSe__9daAlink_cFUl) 	800D6538: 80452D14 (lit_7307) 	800D6560: 80452D3C
//(lit_7808) 	800D6574: 800B48D0 (setJumpMode__9daAlink_cFv) 	800D6578: 8038DE18
//(m__26daAlinkHIO_cutLargeJump_c0) 	800D657C: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0) 	800D6598:
//800D2C78 (setCutJumpSpeed__9daAlink_cFi) 	800D65A0: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D65A4: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D65DC: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800D6624: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D6628: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D6634: 800D1688 (setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff)
//	800D6640: 800D152C (setCutType__9daAlink_cFUc)
//	800D6658: 800D66C0 (procCutLargeJumpLandInit__9daAlink_cFi)
//	800D6664: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D6668: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D6694: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJump__9daAlink_cFv.s"
}
#pragma pop

/* 800D66C0-800D67FC 013C+00 s=1 e=0 z=0  None .text      procCutLargeJumpLandInit__9daAlink_cFi */
//	800D66E0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D66E8: 800D6FE0 (checkCutLandDamage__9daAlink_cFv)
//	800D66F4: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D66F8: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D6700: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D6704:
//80452CC0 (lit_6108) 	800D6714: 80425544 (l_halfAtnWaitBaseAnime) 	800D6718: 80425544
//(l_halfAtnWaitBaseAnime) 	800D6740: 801211C0 (setFootEffectProcType__9daAlink_cFi) 	800D6764:
//800D152C (setCutType__9daAlink_cFUc) 	800D6768: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D676C: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D6778: 80452D04 (lit_6896)
//	800D678C: 80452CC0 (lit_6108)
//	800D6794: 80452CB8 (lit_6040)
//	800D67A0: 804061C0 (g_dComIfG_gameInfo)
//	800D67A4: 804061C0 (g_dComIfG_gameInfo)
//	800D67B8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D67C0: 80123434 (setCutLargeJumpLandEffect__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJumpLandInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJumpLandInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D67FC-800D698C 0190+00 s=1 e=0 z=0  None .text      procCutLargeJumpLand__9daAlink_cFv */
//	800D6838: 800D13E4 (checkCutTurnInput__9daAlink_cCFv)
//	800D6848: 800D1424 (getCutTurnDirection__9daAlink_cCFv)
//	800D6854: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D686C: 804061C0 (g_dComIfG_gameInfo)
//	800D6870: 804061C0 (g_dComIfG_gameInfo)
//	800D687C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800D688C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D6898: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D689C: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D68C0: 800D47DC (procCutTurnInit__9daAlink_cFii)
//	800D68C8: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D68CC: 8038DE18 (m__26daAlinkHIO_cutLargeJump_c0)
//	800D68E4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D692C: 800AA9DC (resetAtCollision__9daAlink_cFi)
//	800D6940: 800D152C (setCutType__9daAlink_cFUc)
//	800D6950: 800D0F90 (initCutTurnAt__9daAlink_cFfi)
//	800D695C: 80452D78 (lit_8676)
//	800D6960: 80270740 (cLib_chaseF__FPfff)
//	800D696C: 8026F708 (SetR__8cM3dGSphFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJumpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJumpLand__9daAlink_cFv.s"
}
#pragma pop

/* 800D698C-800D6A38 00AC+00 s=2 e=0 z=0  None .text      procSwordUnequipSpInit__9daAlink_cFv */
//	800D69A4: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D69C0: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D69C4: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D69CC: 80452CC4 (lit_6109)
//	800D69D0: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800D69D4: 80452CC0 (lit_6108)
//	800D69DC: 80425544 (l_halfAtnWaitBaseAnime)
//	800D69E0: 80425544 (l_halfAtnWaitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordUnequipSpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordUnequipSpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D6A38-800D6D94 035C+00 s=1 e=0 z=0  None .text      procSwordUnequipSp__9daAlink_cFv */
//	800D6A50: 800B9F50 (checkGroundSpecialMode__9daAlink_cFv)
//	800D6AEC: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800D6B04: 800AF61C (setFaceBtp__9daAlink_cFUsiUs)
//	800D6B0C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D6B30: 804061C0 (g_dComIfG_gameInfo)
//	800D6B34: 804061C0 (g_dComIfG_gameInfo)
//	800D6B40: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800D6B50: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D6B68: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D6B6C: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D6B74: 80452CC4 (lit_6109)
//	800D6B78: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800D6B90: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D6B94: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D6BAC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D6BBC: 80452D7C (lit_8779)
//	800D6BD8: 80452D80 (lit_8780)
//	800D6BF4: 80452D28 (lit_7451)
//	800D6C10: 80452D84 (lit_8781)
//	800D6C3C: 80452CC0 (lit_6108)
//	800D6C44: 804061C0 (g_dComIfG_gameInfo)
//	800D6C48: 804061C0 (g_dComIfG_gameInfo)
//	800D6C54: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800D6C60: 80452D88 (lit_8782)
//	800D6C74: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D6C78: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800D6C80: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800D6C90: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800D6C9C: 80452D8C (lit_8783)
//	800D6CA0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800D6CB8: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800D6CC4: 80452D34 (lit_7710)
//	800D6CF4: 80452D74 (lit_8502)
//	800D6CF8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800D6D08: 80452D84 (lit_8781)
//	800D6D0C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800D6D24: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800D6D30: 80452D90 (lit_8784)
//	800D6D34: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800D6D44: 80452D94 (lit_8785)
//	800D6D48: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800D6D58: 80452D98 (lit_8786)
//	800D6D5C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800D6D74: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordUnequipSp() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordUnequipSp__9daAlink_cFv.s"
}
#pragma pop

/* 800D6D94-800D6DA4 0010+00 s=0 e=0 z=2  None .text      getFreezeR__9daAlink_cCFv */
//	800D6D94: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800D6D98: 8038E54C (m__20daAlinkHIO_damage_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getFreezeR() const {
    nofralloc
#include "asm/d/a/d_a_alink/getFreezeR__9daAlink_cCFv.s"
}
#pragma pop

/* 800D6DA4-800D6DB4 0010+00 s=0 e=0 z=2  None .text      getFreezeG__9daAlink_cCFv */
//	800D6DA4: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800D6DA8: 8038E54C (m__20daAlinkHIO_damage_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getFreezeG() const {
    nofralloc
#include "asm/d/a/d_a_alink/getFreezeG__9daAlink_cCFv.s"
}
#pragma pop

/* 800D6DB4-800D6DC4 0010+00 s=0 e=0 z=2  None .text      getFreezeB__9daAlink_cCFv */
//	800D6DB4: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800D6DB8: 8038E54C (m__20daAlinkHIO_damage_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getFreezeB() const {
    nofralloc
#include "asm/d/a/d_a_alink/getFreezeB__9daAlink_cCFv.s"
}
#pragma pop

/* 800D6DC4-800D6DF0 002C+00 s=2 e=0 z=0  None .text      checkMiddleBossGoronRoom__9daAlink_cFv */
//	800D6DD0: 80392094 (d_a_d_a_alink__stringBase0)
//	800D6DD4: 80392094 (d_a_d_a_alink__stringBase0)
//	800D6DDC: 8009DA60 (checkStageName__9daAlink_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMiddleBossGoronRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkMiddleBossGoronRoom__9daAlink_cFv.s"
}
#pragma pop

/* 800D6DF0-800D6E24 0034+00 s=1 e=0 z=0  None .text      setDkCaught__9daAlink_cFP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDkCaught(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDkCaught__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800D6E24-800D6F00 00DC+00 s=2 e=0 z=0  None .text      freezeTimerDamage__9daAlink_cFv */
//	800D6E78: 800D72BC (setDamagePoint__9daAlink_cFiiii)
//	800D6EA4: 80452CA4 (lit_6021)
//	800D6EC0: 803650D0 (abs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::freezeTimerDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/freezeTimerDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D6F00-800D6F2C 002C+00 s=1 e=0 z=0  None .text      onPressedDamage__9daAlink_cFRC4cXyzs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onPressedDamage(cXyz const& param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/onPressedDamage__9daAlink_cFRC4cXyzs.s"
}
#pragma pop

/* 800D6F2C-800D6FE0 00B4+00 s=3 e=0 z=0  None .text checkNoLandDamageSlidePolygon__9daAlink_cFv
 */
//	800D6F58: 804061C0 (g_dComIfG_gameInfo)
//	800D6F5C: 804061C0 (g_dComIfG_gameInfo)
//	800D6F6C: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800D6F78: 803A37C0 (__vt__8cM3dGPla)
//	800D6F7C: 803A37C0 (__vt__8cM3dGPla)
//	800D6F90: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800D6FA4: 803A37C0 (__vt__8cM3dGPla)
//	800D6FA8: 803A37C0 (__vt__8cM3dGPla)
//	800D6FB8: 803A37C0 (__vt__8cM3dGPla)
//	800D6FBC: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNoLandDamageSlidePolygon() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoLandDamageSlidePolygon__9daAlink_cFv.s"
}
#pragma pop

/* 800D6FE0-800D70A0 00C0+00 s=6 e=0 z=0  None .text      checkCutLandDamage__9daAlink_cFv */
//	800D6FFC: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800D7008: 80452D88 (lit_8782)
//	800D701C: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800D7020: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800D7038: 800D6F2C (checkNoLandDamageSlidePolygon__9daAlink_cFv)
//	800D7044: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800D7048: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800D7064: 800D74A4 (setLandDamagePoint__9daAlink_cFi)
//	800D7074: 800D74A4 (setLandDamagePoint__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutLandDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutLandDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D70A0-800D7160 00C0+00 s=2 e=0 z=0  None .text      checkCaughtEscapeCutTurn__9daAlink_cFv */
//	800D70C0: 804061C0 (g_dComIfG_gameInfo)
//	800D70C4: 804061C0 (g_dComIfG_gameInfo)
//	800D70E4: 800D2368 (checkCutTurnInputTrigger__9daAlink_cFv)
//	800D7108: 8013B2A0 (procWolfRollAttackInit__9daAlink_cFii)
//	800D7128: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800D7130: 800D1268 (setSwordModel__9daAlink_cFv)
//	800D7140: 800D47DC (procCutTurnInit__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCaughtEscapeCutTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCaughtEscapeCutTurn__9daAlink_cFv.s"
}
#pragma pop

/* 800D7160-800D7208 00A8+00 s=1 e=0 z=0  None .text      setThrowDamage__9daAlink_cFsffiii */
//	800D71F0: 800EA8D0 (cancelSumouMode__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setThrowDamage(s16 param_0, f32 param_1, f32 param_2, int param_3, int param_4,
                                   int param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setThrowDamage__9daAlink_cFsffiii.s"
}
#pragma pop

/* 800D7208-800D72BC 00B4+00 s=2 e=0 z=0  None .text      damageMagnification__9daAlink_cFii */
//	800D7244: 80452D2C (lit_7624)
//	800D724C: 80452CB8 (lit_6040)
//	800D7270: 80452D14 (lit_7307)
//	800D727C: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800D7290: 80452D30 (lit_7625)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::damageMagnification(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/damageMagnification__9daAlink_cFii.s"
}
#pragma pop

/* 800D72BC-800D7478 01BC+00 s=6 e=1 z=0  None .text      setDamagePoint__9daAlink_cFiiii */
//	800D72CC: 803621DC (_savegpr_29)
//	800D72E0: 804061C0 (g_dComIfG_gameInfo)
//	800D72E4: 804061C0 (g_dComIfG_gameInfo)
//	800D72F0: 80452CB0 (lit_6025)
//	800D732C: 800D7208 (damageMagnification__9daAlink_cFii)
//	800D7330: 80452CB0 (lit_6025)
//	800D735C: 80452D30 (lit_7625)
//	800D7398: 80127CAC (offWolfEyeUp__9daAlink_cFv)
//	800D73A0: 800D77C8 (checkMagicArmorNoDamage__9daAlink_cFv)
//	800D73AC: 804061C0 (g_dComIfG_gameInfo)
//	800D73B0: 804061C0 (g_dComIfG_gameInfo)
//	800D73CC: 804061C0 (g_dComIfG_gameInfo)
//	800D73D0: 804061C0 (g_dComIfG_gameInfo)
//	800D73DC: 80452CB0 (lit_6025)
//	800D7424: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800D7428: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800D7464: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDamagePoint(int param_0, int param_1, int param_2, int param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/setDamagePoint__9daAlink_cFiiii.s"
}
#pragma pop

/* 800D7478-800D74A4 002C+00 s=6 e=0 z=0  None .text      setDamagePointNormal__9daAlink_cFi */
//	800D7490: 800D72BC (setDamagePoint__9daAlink_cFiiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDamagePointNormal(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDamagePointNormal__9daAlink_cFi.s"
}
#pragma pop

/* 800D74A4-800D74F4 0050+00 s=3 e=0 z=0  None .text      setLandDamagePoint__9daAlink_cFi */
//	800D74D0: 800D72BC (setDamagePoint__9daAlink_cFiiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLandDamagePoint(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setLandDamagePoint__9daAlink_cFi.s"
}
#pragma pop

/* 800D74F4-800D76C4 01D0+00 s=11 e=0 z=0  None .text      getDamageVec__9daAlink_cFP12dCcD_GObjInf
 */
//	800D7504: 803621DC (_savegpr_29)
//	800D7520: 80452CC0 (lit_6108)
//	800D7530: 80347138 (PSVECSquareMag)
//	800D7540: 80439A20 (sincosTable___5JMath)
//	800D7544: 80439A20 (sincosTable___5JMath)
//	800D755C: 80452D9C (lit_9053)
//	800D7568: 80452CC0 (lit_6108)
//	800D7590: 80452DA0 (lit_9054)
//	800D75A0: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800D75B0: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800D75C4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800D75F0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800D7610: 80347138 (PSVECSquareMag)
//	800D7614: 80452DA0 (lit_9054)
//	800D7628: 80439A20 (sincosTable___5JMath)
//	800D762C: 80439A20 (sincosTable___5JMath)
//	800D7634: 80452D9C (lit_9053)
//	800D7640: 80452CC0 (lit_6108)
//	800D765C: 80452CC0 (lit_6108)
//	800D7678: 80452D30 (lit_7625)
//	800D7680: 803470D8 (PSVECScale)
//	800D76A4: 800E247C (multVecMagneBootInvMtx__9daAlink_cFP4cXyz)
//	800D76B0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getDamageVec(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getDamageVec__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800D76C4-800D7768 00A4+00 s=1 e=0 z=0  None .text      setDashDamage__9daAlink_cFv */
//	800D76E0: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800D76E4: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800D76EC: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800D7704:
// 800AF4B0 (setFaceBck__9daAlink_cFUsiUs) 	800D7710: 800AFAA8
//(setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	800D7750: 800E4BD4
//(freeGrabItem__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDashDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/setDashDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D7768-800D77C8 0060+00 s=2 e=0 z=3  None .text
 * checkIcePolygonDamage__9daAlink_cFP13cBgS_PolyInfo           */
//	800D777C: 804061C0 (g_dComIfG_gameInfo)
//	800D7780: 804061C0 (g_dComIfG_gameInfo)
//	800D778C: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	800D779C: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIcePolygonDamage(cBgS_PolyInfo* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkIcePolygonDamage__9daAlink_cFP13cBgS_PolyInfo.s"
}
#pragma pop

/* 800D77C8-800D7820 0058+00 s=8 e=0 z=0  None .text      checkMagicArmorNoDamage__9daAlink_cFv */
//	800D77E4: 800BFDFC (checkMagicArmorWearAbility__9daAlink_cCFv)
//	800D77F4: 800BB408 (checkMagicArmorHeavy__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMagicArmorNoDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/checkMagicArmorNoDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D7820-800D7A98 0278+00 s=1 e=0 z=0  None .text      checkPolyDamage__9daAlink_cFv */
//	800D7830: 803621D8 (_savegpr_28)
//	800D7838: 8002FA04 (dComIfGs_PolyDamageOff_Check__Fv)
//	800D7888: 804061C0 (g_dComIfG_gameInfo)
//	800D788C: 804061C0 (g_dComIfG_gameInfo)
//	800D789C: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800D78AC: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
//	800D78C0: 800D7768 (checkIcePolygonDamage__9daAlink_cFP13cBgS_PolyInfo)
//	800D78D0: 803A37C0 (__vt__8cM3dGPla)
//	800D78D4: 803A37C0 (__vt__8cM3dGPla)
//	800D78E8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800D78F0: 80267128 (atan2sX_Z__4cXyzCFv)
//	800D78F8: 803A37C0 (__vt__8cM3dGPla)
//	800D78FC: 803A37C0 (__vt__8cM3dGPla)
//	800D792C: 800B1488 (checkWaterPolygonUnder__9daAlink_cFv)
//	800D7938: 804061C0 (g_dComIfG_gameInfo)
//	800D793C: 804061C0 (g_dComIfG_gameInfo)
//	800D7948: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800D7958: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
//	800D798C: 80452DA4 (lit_9138)
//	800D79C0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800D79C4: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800D79F4: 804061C0 (g_dComIfG_gameInfo)
//	800D79F8: 804061C0 (g_dComIfG_gameInfo)
//	800D7A14: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800D7A24: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
//	800D7A40: 800D7768 (checkIcePolygonDamage__9daAlink_cFP13cBgS_PolyInfo)
//	800D7A54: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
//	800D7A84: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPolyDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/checkPolyDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D7A98-800D7B18 0080+00 s=1 e=0 z=0  None .text
 * checkElecReturnDamage__9daAlink_cFR12dCcD_GObjInfPP10fopAc_ac_c */
//	800D7AB8: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	800D7AC8: 800843A8 (GetAtHitGObj__12dCcD_GObjInfFv)
//	800D7AD8: 800843A8 (GetAtHitGObj__12dCcD_GObjInfFv)
//	800D7AEC: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkElecReturnDamage(dCcD_GObjInf& param_0, fopAc_ac_c** param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkElecReturnDamage__9daAlink_cFR12dCcD_GObjInfPP10fopAc_ac_c.s"
}
#pragma pop

/* 800D7B18-800D7BE8 00D0+00 s=1 e=0 z=0  None .text      damageTimerCount__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::damageTimerCount() {
    nofralloc
#include "asm/d/a/d_a_alink/damageTimerCount__9daAlink_cFv.s"
}
#pragma pop

/* 800D7BE8-800D7C14 002C+00 s=3 e=0 z=0  None .text      checkHugeAttack__9daAlink_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHugeAttack(int param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHugeAttack__9daAlink_cCFi.s"
}
#pragma pop

/* 800D7C14-800D7C40 002C+00 s=3 e=0 z=0  None .text      checkLargeAttack__9daAlink_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLargeAttack(int param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkLargeAttack__9daAlink_cCFi.s"
}
#pragma pop

/* 800D7C40-800D8F3C 12FC+00 s=1 e=0 z=0  None .text      checkDamageAction__9daAlink_cFv */
//	800D7C50: 803621C4 (_savegpr_23)
//	800D7C58: 8038D658 (lit_3757)
//	800D7C5C: 8038D658 (lit_3757)
//	800D7C78: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D7CA0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800D7CBC: 80452CC4 (lit_6109)
//	800D7CC0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800D7CD8: 80452CC4 (lit_6109)
//	800D7CDC: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800D7CE4: 80452CBC (lit_6041)
//	800D7CE8: 800DD008 (setUpperGuardAnime__9daAlink_cFf)
//	800D7D00: 80452CC4 (lit_6109)
//	800D7D04: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800D7D3C: 800EA8D0 (cancelSumouMode__9daAlink_cFv)
//	800D7D50: 801058A0 (procOctaIealSpitInit__9daAlink_cFv)
//	800D7D6C: 80120534 (commonFallInit__9daAlink_cFi)
//	800D7DB4: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800D7DC0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800D7E1C: 800DB6A4 (procDkCaughtInit__9daAlink_cFUi)
//	800D7E88: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800D7E94: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	800D7EA0: 800AFB14 (setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800D7ED0: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800D7F0C: 801058A0 (procOctaIealSpitInit__9daAlink_cFv)
//	800D7F24: 80120534 (commonFallInit__9daAlink_cFi)
//	800D7F48: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800D7F60: 800DBE00 (procCoSandWallHitInit__9daAlink_cFv)
//	800D7F88: 80120500 (commonLargeDamageUpInit__9daAlink_cFiiss)
//	800D7FDC: 8012A330 (checkWolfBarrierHitReverse__9daAlink_cFv)
//	800D8000: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	800D806C: 8013DB6C (procWolfCargoCarryInit__9daAlink_cFv)
//	800D8078: 800D77C8 (checkMagicArmorNoDamage__9daAlink_cFv)
//	800D8090: 800D7820 (checkPolyDamage__9daAlink_cFv)
//	800D8114: 800D72BC (setDamagePoint__9daAlink_cFiiii)
//	800D815C: 80452CC0 (lit_6108)
//	800D8164: 80452CB8 (lit_6040)
//	800D8170: 804061C0 (g_dComIfG_gameInfo)
//	800D8174: 804061C0 (g_dComIfG_gameInfo)
//	800D8188: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D819C: 80136064 (setWolfHeadDamage__9daAlink_cFv)
//	800D820C: 80452CC0 (lit_6108)
//	800D8214: 80452CB8 (lit_6040)
//	800D8220: 804061C0 (g_dComIfG_gameInfo)
//	800D8224: 804061C0 (g_dComIfG_gameInfo)
//	800D8238: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D826C: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800D8274: 80452CC0 (lit_6108)
//	800D827C: 80452CB8 (lit_6040)
//	800D8288: 804061C0 (g_dComIfG_gameInfo)
//	800D828C: 804061C0 (g_dComIfG_gameInfo)
//	800D82A0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D82C0: 80136064 (setWolfHeadDamage__9daAlink_cFv)
//	800D82D8: 801360EC (procWolfDamageInit__9daAlink_cFP12dCcD_GObjInf)
//	800D82E4: 800DAC84 (procCoPolyDamageInit__9daAlink_cFv)
//	800D8300: 8010519C (procSwimDamageInit__9daAlink_cFP12dCcD_GObjInf)
//	800D831C: 800D8F3C (procDamageInit__9daAlink_cFP12dCcD_GObjInfi)
//	800D8328: 800DAC84 (procCoPolyDamageInit__9daAlink_cFv)
//	800D833C: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800D8360: 800D7A98 (checkElecReturnDamage__9daAlink_cFR12dCcD_GObjInfPP10fopAc_ac_c)
//	800D8378: 800D7A98 (checkElecReturnDamage__9daAlink_cFR12dCcD_GObjInfPP10fopAc_ac_c)
//	800D8390: 800D7A98 (checkElecReturnDamage__9daAlink_cFR12dCcD_GObjInfPP10fopAc_ac_c)
//	800D83A4: 800D7478 (setDamagePointNormal__9daAlink_cFi)
//	800D83B4: 80452CC0 (lit_6108)
//	800D83BC: 80452CB8 (lit_6040)
//	800D83C8: 804061C0 (g_dComIfG_gameInfo)
//	800D83CC: 804061C0 (g_dComIfG_gameInfo)
//	800D83E0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D8400: 80136064 (setWolfHeadDamage__9daAlink_cFv)
//	800D8454: 800DB140 (procCoElecDamageInit__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfi)
//	800D8468: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	800D8484: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800D84A0: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	800D84EC: 800DD114 (setGuardSe__9daAlink_cFP12dCcD_GObjInf)
//	800D84F8: 800D7BE8 (checkHugeAttack__9daAlink_cCFi)
//	800D8504: 80452CC0 (lit_6108)
//	800D850C: 80452CB8 (lit_6040)
//	800D8518: 804061C0 (g_dComIfG_gameInfo)
//	800D851C: 804061C0 (g_dComIfG_gameInfo)
//	800D8530: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D8540: 800D7C14 (checkLargeAttack__9daAlink_cCFi)
//	800D854C: 80452CC0 (lit_6108)
//	800D8554: 80452CB8 (lit_6040)
//	800D8560: 804061C0 (g_dComIfG_gameInfo)
//	800D8564: 804061C0 (g_dComIfG_gameInfo)
//	800D8578: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D8588: 80452CC0 (lit_6108)
//	800D8590: 80452CB8 (lit_6040)
//	800D859C: 804061C0 (g_dComIfG_gameInfo)
//	800D85A0: 804061C0 (g_dComIfG_gameInfo)
//	800D85B4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D85BC: 80452CC0 (lit_6108)
//	800D85C4: 80452CB8 (lit_6040)
//	800D85D0: 804061C0 (g_dComIfG_gameInfo)
//	800D85D4: 804061C0 (g_dComIfG_gameInfo)
//	800D85E8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D8600: 8015F3C4 (checkWoodShieldEquip__9daPy_py_cFv)
//	800D868C: 800DDE58 (procGuardBreakInit__9daAlink_cFv)
//	800D86CC: 800D7C14 (checkLargeAttack__9daAlink_cCFi)
//	800D86E0: 800D7BE8 (checkHugeAttack__9daAlink_cCFi)
//	800D8704: 800F3430 (procHorseHangInit__9daAlink_cFP12dCcD_GObjInfi)
//	800D8748: 800DD1D4 (setSmallGuard__9daAlink_cFP12dCcD_GObjInf)
//	800D875C: 800DD3E4 (procGuardSlipInit__9daAlink_cFiP12dCcD_GObjInf)
//	800D8778: 800DD3E4 (procGuardSlipInit__9daAlink_cFiP12dCcD_GObjInf)
//	800D8788: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	800D87CC: 80452CC0 (lit_6108)
//	800D87D4: 80452CB8 (lit_6040)
//	800D87E0: 804061C0 (g_dComIfG_gameInfo)
//	800D87E4: 804061C0 (g_dComIfG_gameInfo)
//	800D87F8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D8808: 800D7BE8 (checkHugeAttack__9daAlink_cCFi)
//	800D8814: 80452CC0 (lit_6108)
//	800D881C: 80452CB8 (lit_6040)
//	800D8828: 804061C0 (g_dComIfG_gameInfo)
//	800D882C: 804061C0 (g_dComIfG_gameInfo)
//	800D8840: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D8850: 800D7C14 (checkLargeAttack__9daAlink_cCFi)
//	800D885C: 80452CC0 (lit_6108)
//	800D8864: 80452CB8 (lit_6040)
//	800D8870: 804061C0 (g_dComIfG_gameInfo)
//	800D8874: 804061C0 (g_dComIfG_gameInfo)
//	800D8888: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D8890: 80452CC0 (lit_6108)
//	800D8898: 80452CB8 (lit_6040)
//	800D88A4: 804061C0 (g_dComIfG_gameInfo)
//	800D88A8: 804061C0 (g_dComIfG_gameInfo)
//	800D88BC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D88F8: 800D72BC (setDamagePoint__9daAlink_cFiiii)
//	800D8920: 800DD114 (setGuardSe__9daAlink_cFP12dCcD_GObjInf)
//	800D8964: 80124FA4 (initFirePointDamageEffect__9daAlink_cFPC4cXyzP12dCcD_GObjInf)
//	800D8970: 80124EA8 (initFirePointDamageEffectAll__9daAlink_cFv)
//	800D8990: 80136064 (setWolfHeadDamage__9daAlink_cFv)
//	800D89F8: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800D8A0C: 800DB140 (procCoElecDamageInit__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfi)
//	800D8A60: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800D8A98: 800D7C14 (checkLargeAttack__9daAlink_cCFi)
//	800D8AAC: 800D7BE8 (checkHugeAttack__9daAlink_cCFi)
//	800D8AB8: 800EC7B0 (setHorseZeldaDamage__9daAlink_cFv)
//	800D8AD8: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800D8AFC: 800ECD90 (checkHorseNotDamageReaction__9daAlink_cCFv)
//	800D8B60: 800F1D18 (procHorseDamageInit__9daAlink_cFP12dCcD_GObjInf)
//	800D8B74: 800F3430 (procHorseHangInit__9daAlink_cFP12dCcD_GObjInfi)
//	800D8B94: 80136064 (setWolfHeadDamage__9daAlink_cFv)
//	800D8BAC: 8010519C (procSwimDamageInit__9daAlink_cFP12dCcD_GObjInf)
//	800D8BFC: 800DDE58 (procGuardBreakInit__9daAlink_cFv)
//	800D8C0C: 800D7BE8 (checkHugeAttack__9daAlink_cCFi)
//	800D8C34: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800D8C58: 800D7C14 (checkLargeAttack__9daAlink_cCFi)
//	800D8C78: 800D7C14 (checkLargeAttack__9daAlink_cCFi)
//	800D8CCC: 800C6A48 (procFallInit__9daAlink_cFif)
//	800D8D10: 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf)
//	800D8D14: 80267128 (atan2sX_Z__4cXyzCFv)
//	800D8D30: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	800D8D40: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	800D8D64: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800D8D84: 800A7A5C (checkDashAnime__9daAlink_cCFv)
//	800D8DA0: 800D76C4 (setDashDamage__9daAlink_cFv)
//	800D8DC4: 80452DA8 (lit_9652)
//	800D8DDC: 80136064 (setWolfHeadDamage__9daAlink_cFv)
//	800D8DF8: 801360EC (procWolfDamageInit__9daAlink_cFP12dCcD_GObjInf)
//	800D8E0C: 800D8F3C (procDamageInit__9daAlink_cFP12dCcD_GObjInfi)
//	800D8E30: 804061C0 (g_dComIfG_gameInfo)
//	800D8E34: 804061C0 (g_dComIfG_gameInfo)
//	800D8E5C: 80452CC0 (lit_6108)
//	800D8E64: 80452CB8 (lit_6040)
//	800D8E80: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D8EA0: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800D8EA8: 80452CC0 (lit_6108)
//	800D8EB0: 80452CB8 (lit_6040)
//	800D8ECC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D8EEC: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800D8F20: 8012A330 (checkWolfBarrierHitReverse__9daAlink_cFv)
//	800D8F28: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDamageAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDamageAction__9daAlink_cFv.s"
}
#pragma pop

/* 800D8F3C-800D9514 05D8+00 s=2 e=0 z=0  None .text procDamageInit__9daAlink_cFP12dCcD_GObjInfi
 */
//	800D8F5C: 803621D0 (_savegpr_26)
//	800D8F6C: 8038D658 (lit_3757)
//	800D8F70: 8038D658 (lit_3757)
//	800D8F84: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	800D8F94: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	800D9054: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D9060: 80439A20 (sincosTable___5JMath)
//	800D9064: 80439A20 (sincosTable___5JMath)
//	800D9084: 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf)
//	800D90B4: 80452CC0 (lit_6108)
//	800D90E8: 80452CC0 (lit_6108)
//	800D913C: 80267674 (cM_atan2s__Fff)
//	800D918C: 80452CC0 (lit_6108)
//	800D91A8: 80267674 (cM_atan2s__Fff)
//	800D91DC: 80452CC0 (lit_6108)
//	800D9208: 800ADC50 (checkAtnLeftAnime__9daAlink_cFv)
//	800D9224: 80452CC0 (lit_6108)
//	800D922C: 80452CBC (lit_6041)
//	800D9230: 800AD964 (setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf)
//	800D923C: 800ADCEC (checkAtnRightAnime__9daAlink_cFv)
//	800D9258: 80452CC0 (lit_6108)
//	800D9260: 80452CBC (lit_6041)
//	800D9264: 800AD964 (setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf)
//	800D9278: 80267674 (cM_atan2s__Fff)
//	800D927C: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800D9294: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800D92C0:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 800D92EC:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 800D9310:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 800D9324:
//80267128
//(atan2sX_Z__4cXyzCFv) 	800D9340: 80452CC0 (lit_6108) 	800D9350: 80347138 (PSVECSquareMag)
//800D9354: 80452CC0 (lit_6108) 	800D9364: 80452CE8 (lit_6846) 	800D936C: 80452CF0 (lit_6847)
// 800D93B4: 80452CF8 (lit_6848) 	800D93C0: 80450AE0 (__float_nan) 	800D93C4: 80450AE0
//(__float_nan) 	800D9430: 80450AE0
//(__float_nan) 	800D9434: 80450AE0 (__float_nan) 	800D9468: 80452DAC (lit_9828) 	800D9478:
//80452CB0 (lit_6025) 	800D94B8: 80452CC0 (lit_6108) 	800D9500: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDamageInit(dCcD_GObjInf* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procDamageInit__9daAlink_cFP12dCcD_GObjInfi.s"
}
#pragma pop

/* 800D9514-800D96DC 01C8+00 s=1 e=0 z=0  None .text      procDamage__9daAlink_cFv */
//	800D953C: 80452CB0 (lit_6025)
//	800D9560: 802675E4 (cM_rad2s__Ff)
//	800D9568: 80439A20 (sincosTable___5JMath)
//	800D956C: 80439A20 (sincosTable___5JMath)
//	800D9578: 80452CB0 (lit_6025)
//	800D95E4: 80452CC0 (lit_6108)
//	800D95E8: 8038E24C (m__23daAlinkHIO_damNormal_c0)
//	800D95EC: 8038E24C (m__23daAlinkHIO_damNormal_c0)
//	800D95F4: 80270740 (cLib_chaseF__FPfff)
//	800D9608: 800D6E24 (freezeTimerDamage__9daAlink_cFv)
//	800D9610: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800D9638: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800D966C: 800DB5B0 (procStEscapeInit__9daAlink_cFv)
//	800D96AC: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D96DC-800D9E88 07AC+00 s=12 e=0 z=0  None .text
 * procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi       */
//	800D96EC: 803621BC (_savegpr_21)
//	800D970C: 8038D658 (lit_3757)
//	800D9710: 8038D658 (lit_3757)
//	800D973C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800D9760: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800D9764: 80452CBC (lit_6041)
//	800D9794: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800D979C: 80452CC0 (lit_6108)
//	800D97A4: 80452CB8 (lit_6040)
//	800D97B0: 804061C0 (g_dComIfG_gameInfo)
//	800D97B4: 804061C0 (g_dComIfG_gameInfo)
//	800D97C8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800D97D4: 800D7478 (setDamagePointNormal__9daAlink_cFi)
//	800D98A4: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800D98C8: 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf)
//	800D98CC: 80267128 (atan2sX_Z__4cXyzCFv)
//	800D98D8: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	800D98E8: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	800D9914: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800D9948: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800D995C: 80452CB8 (lit_6040)
//	800D99F0: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800D9B60: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800D9B88: 801296A8 (setSingleAnimeWolfBaseMorf__9daAlink_cFQ29daAlink_c12daAlink_WANMf)
//	800D9B94: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800D9BC0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800D9BE8: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800D9C00: 804061C0 (g_dComIfG_gameInfo)
//	800D9C04: 804061C0 (g_dComIfG_gameInfo)
//	800D9C20: 80452DB0 (lit_10039)
//	800D9C48: 800D6DC4 (checkMiddleBossGoronRoom__9daAlink_cFv)
//	800D9C54: 80452DB4 (lit_10040)
//	800D9C5C: 80452CE0 (lit_6845)
//	800D9CBC: 80452DB8 (lit_10041)
//	800D9DB8: 80439A20 (sincosTable___5JMath)
//	800D9DBC: 80439A20 (sincosTable___5JMath)
//	800D9DC8: 80452DBC (lit_10042)
//	800D9DF8: 80452CC0 (lit_6108)
//	800D9E74: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLargeDamageInit(int param_0, int param_1, s16 param_2, s16 param_3,
                                          dCcD_GObjInf* param_4, int param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi.s"
}
#pragma pop

/* 800D9E88-800DA180 02F8+00 s=1 e=0 z=0  None .text      procCoLargeDamage__9daAlink_cFv */
//	800D9E98: 803621DC (_savegpr_29)
//	800D9ED8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800D9F04: 80270B90 (cLib_chaseAngleS__FPsss)
//	800D9F0C: 80452CC0 (lit_6108)
//	800D9F14: 80270740 (cLib_chaseF__FPfff)
//	800D9F50: 800B5BC0 (setFallVoice__9daAlink_cFv)
//	800D9F98: 80136624 (procWolfLargeDamageUpInit__9daAlink_cFiiss)
//	800D9FA4: 80452CC0 (lit_6108)
//	800D9FC8: 800DA180 (procLargeDamageUpInit__9daAlink_cFiiss)
//	800D9FE4: 800D6FE0 (checkCutLandDamage__9daAlink_cFv)
//	800DA000: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800DA014: 80452DA0 (lit_9054)
//	800DA05C: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800DA060: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800DA068: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800DA07C: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800DA0E4: 80439A20 (sincosTable___5JMath)
//	800DA0E8: 80439A20 (sincosTable___5JMath)
//	800DA0F4: 80452C9C (lit_5944)
//	800DA12C: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800DA14C: 800DA82C (procCoLargeDamageWallInit__9daAlink_cFiiss)
//	800DA16C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLargeDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLargeDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800DA180-800DA554 03D4+00 s=2 e=0 z=0  None .text      procLargeDamageUpInit__9daAlink_cFiiss */
//	800DA190: 803621CC (_savegpr_25)
//	800DA1A8: 8038D658 (lit_3757)
//	800DA1AC: 8038D658 (lit_3757)
//	800DA1B4: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DA1EC: 800E8298 (offGoatStopGame__9daAlink_cFv)
//	800DA25C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800DA270: 80452D7C (lit_8779)
//	800DA278: 80452DB8 (lit_10041)
//	800DA298: 80452CC0 (lit_6108)
//	800DA2A0: 80452D3C (lit_7808)
//	800DA2A4: 80452CB8 (lit_6040)
//	800DA2B8: 80452D7C (lit_8779)
//	800DA2C8: 80452DC0 (lit_10193)
//	800DA2DC: 80452CC0 (lit_6108)
//	800DA2EC: 80452D34 (lit_7710)
//	800DA320: 80452CC0 (lit_6108)
//	800DA344: 80452CC0 (lit_6108)
//	800DA368: 80452D7C (lit_8779)
//	800DA378: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800DA388: 80452CC0 (lit_6108)
//	800DA390: 80452CB8 (lit_6040)
//	800DA39C: 804061C0 (g_dComIfG_gameInfo)
//	800DA3A0: 804061C0 (g_dComIfG_gameInfo)
//	800DA3B4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800DA3C4: 800BF194 (seStartMapInfo__9daAlink_cFUl)
//	800DA3E4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800DA3F8:
//80452D7C (lit_8779) 	800DA408: 80452D34 (lit_7710) 	800DA428: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800DA434:
//80452DC4 (lit_10194) 	800DA444: 80452D44 (lit_7977) 	800DA464: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800DA470:
//80452DC4 (lit_10194) 	800DA480: 80452D44 (lit_7977) 	800DA498: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800DA4A4:
//80452D7C (lit_8779) 	800DA4B4: 80452DC0 (lit_10193) 	800DA4CC: 80452CB8 (lit_6040) 	800DA4D4:
//80452D14 (lit_7307) 	800DA4E0: 80452CB0 (lit_6025) 	800DA518: 800ADB78
//(setOldRootQuaternion__9daAlink_cFsss) 	800DA51C: 80452CC0 (lit_6108) 	800DA534: 801211C0
//(setFootEffectProcType__9daAlink_cFi) 	800DA540: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLargeDamageUpInit(int param_0, int param_1, s16 param_2, s16 param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/procLargeDamageUpInit__9daAlink_cFiiss.s"
}
#pragma pop

/* 800DA554-800DA82C 02D8+00 s=1 e=0 z=0  None .text      procLargeDamageUp__9daAlink_cFv */
//	800DA5C0: 8038E2B0 (m__22daAlinkHIO_damLarge_c0)
//	800DA5C4: 8038E2B0 (m__22daAlinkHIO_damLarge_c0)
//	800DA5CC: 80452D34 (lit_7710)
//	800DA5D8: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800DA5E4: 80452D14 (lit_7307)
//	800DA5EC: 80452D34 (lit_7710)
//	800DA62C: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800DA630: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800DA638: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800DA670: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DA68C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800DA6B8: 804061C0 (g_dComIfG_gameInfo)
//	800DA6BC: 804061C0 (g_dComIfG_gameInfo)
//	800DA6C8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800DA6D8: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DA6F4: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800DA714: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DA72C: 80452DC0 (lit_10193)
//	800DA730: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800DA77C: 8023822C (getStatus__12dMsgObject_cFv)
//	800DA79C: 80452DC8 (lit_10286)
//	800DA7B8: 8023822C (getStatus__12dMsgObject_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLargeDamageUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procLargeDamageUp__9daAlink_cFv.s"
}
#pragma pop

/* 800DA82C-800DAC28 03FC+00 s=1 e=0 z=0  None .text      procCoLargeDamageWallInit__9daAlink_cFiiss
 */
//	800DA83C: 803621C8 (_savegpr_24)
//	800DA868: 803A37C0 (__vt__8cM3dGPla)
//	800DA86C: 803A37C0 (__vt__8cM3dGPla)
//	800DA874: 804061C0 (g_dComIfG_gameInfo)
//	800DA878: 804061C0 (g_dComIfG_gameInfo)
//	800DA88C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800DA894: 80267128 (atan2sX_Z__4cXyzCFv)
//	800DA8A8: 80268210 (cBgW_CheckBWall__Ff)
//	800DA8C4: 80270E24 (cLib_distanceAngleS__Fss)
//	800DA8D0: 803A37C0 (__vt__8cM3dGPla)
//	800DA8D4: 803A37C0 (__vt__8cM3dGPla)
//	800DA8EC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DA8F8: 80452CC0 (lit_6108)
//	800DA90C: 80347138 (PSVECSquareMag)
//	800DA910: 80452CC0 (lit_6108)
//	800DA920: 80452CE8 (lit_6846)
//	800DA928: 80452CF0 (lit_6847)
//	800DA970: 80452CF8 (lit_6848)
//	800DA97C: 80450AE0 (__float_nan)
//	800DA980: 80450AE0 (__float_nan)
//	800DA9EC: 80450AE0 (__float_nan)
//	800DA9F0: 80450AE0 (__float_nan)
//	800DAA00: 80267674 (cM_atan2s__Fff)
//	800DAA2C: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800DAA54: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	800DAA78: 80452CB8 (lit_6040)
//	800DAA7C: 80452D14 (lit_7307)
//	800DAA84: 80452CC4 (lit_6109)
//	800DAA88: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	800DAAB0: 80452CB8 (lit_6040)
//	800DAAB4: 80452D14 (lit_7307)
//	800DAABC: 80452CC4 (lit_6109)
//	800DAAC0: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	800DAAE0: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	800DAAF4: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800DAB00: 8038E36C (m__21daAlinkHIO_damHuge_c0)
//	800DAB04: 8038E36C (m__21daAlinkHIO_damHuge_c0)
//	800DAB0C: 8038E2B0 (m__22daAlinkHIO_damLarge_c0)
//	800DAB10: 8038E2B0 (m__22daAlinkHIO_damLarge_c0)
//	800DAB30: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800DAB5C:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 800DAB88:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 800DABAC:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 800DABB8:
//80452CC0 (lit_6108) 	800DABD0: 800BB770 (setSpecialGravity__9daAlink_cFffi) 	800DABD4: 80452CC0
//(lit_6108) 	800DABDC: 80452CB8 (lit_6040) 	800DABF8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800DAC00: 803A37C0 (__vt__8cM3dGPla)
//	800DAC04: 803A37C0 (__vt__8cM3dGPla)
//	800DAC14: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLargeDamageWallInit(int param_0, int param_1, s16 param_2, s16 param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLargeDamageWallInit__9daAlink_cFiiss.s"
}
#pragma pop

/* 800DAC28-800DAC84 005C+00 s=1 e=0 z=0  None .text      procCoLargeDamageWall__9daAlink_cFv */
//	800DAC40: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DAC68: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLargeDamageWall() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLargeDamageWall__9daAlink_cFv.s"
}
#pragma pop

/* 800DAC84-800DAD90 010C+00 s=2 e=0 z=0  None .text      procCoPolyDamageInit__9daAlink_cFv */
//	800DACF4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DAD0C: 8038F3C4 (m__22daAlinkHIO_wlDamage_c0)
//	800DAD10: 8038F3C4 (m__22daAlinkHIO_wlDamage_c0)
//	800DAD18: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	800DAD38:
// 8038F3C4 (m__22daAlinkHIO_wlDamage_c0) 	800DAD3C: 8038F3C4 (m__22daAlinkHIO_wlDamage_c0)
// 800DAD54: 8038E54C (m__20daAlinkHIO_damage_c0) 	800DAD58: 8038E54C (m__20daAlinkHIO_damage_c0)
// 800DAD5C: 800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c)
// 800DAD60: 8038E54C (m__20daAlinkHIO_damage_c0) 	800DAD64: 8038E54C (m__20daAlinkHIO_damage_c0)
// 800DAD70: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPolyDamageInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPolyDamageInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DAD90-800DAE10 0080+00 s=1 e=0 z=0  None .text      procCoPolyDamage__9daAlink_cFv */
//	800DADA8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DADBC: 800BA09C (commonCheckNextAction__9daAlink_cFi)
//	800DADF4: 800BA09C (commonCheckNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPolyDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPolyDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800DAE10-800DB060 0250+00 s=2 e=0 z=0  None .text      procLandDamageInit__9daAlink_cFi */
//	800DAE38: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DAE3C: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DAE44: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800DAE48: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800DAE60: 80452CC0 (lit_6108)
//	800DAE68: 80452CB8 (lit_6040)
//	800DAE74: 804061C0 (g_dComIfG_gameInfo)
//	800DAE78: 804061C0 (g_dComIfG_gameInfo)
//	800DAE8C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800DAE94: 80452CC0 (lit_6108)
//	800DAE9C: 80452CB8 (lit_6040)
//	800DAEA8: 804061C0 (g_dComIfG_gameInfo)
//	800DAEAC: 804061C0 (g_dComIfG_gameInfo)
//	800DAEC0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800DAED0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800DAEE4: 800D74A4 (setLandDamagePoint__9daAlink_cFi)
//	800DAEE8: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DAEEC: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DAEFC: 80452CC0 (lit_6108)
//	800DAF04: 80452CB8 (lit_6040)
//	800DAF10: 804061C0 (g_dComIfG_gameInfo)
//	800DAF14: 804061C0 (g_dComIfG_gameInfo)
//	800DAF28: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800DAF30: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800DAF44: 800D74A4 (setLandDamagePoint__9daAlink_cFi)
//	800DAF48: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DAF4C: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DAF5C: 80452CC0 (lit_6108)
//	800DAF64: 80452CB8 (lit_6040)
//	800DAF70: 804061C0 (g_dComIfG_gameInfo)
//	800DAF74: 804061C0 (g_dComIfG_gameInfo)
//	800DAF88: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800DAF94: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DAF98: 80452CC0 (lit_6108)
//	800DAFF8: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DAFFC: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DB010: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800DB02C: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLandDamageInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procLandDamageInit__9daAlink_cFi.s"
}
#pragma pop

/* 800DB060-800DB140 00E0+00 s=1 e=0 z=0  None .text      procLandDamage__9daAlink_cFv */
//	800DB08C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DB0A0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DB0AC: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DB0B0: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DB0D4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DB0E0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DB10C: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DB110: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	800DB118: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLandDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procLandDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800DB140-800DB418 02D8+00 s=1 e=0 z=0  None .text
 * procCoElecDamageInit__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfi */
//	800DB150: 803621D4 (_savegpr_27)
//	800DB164: 804061C0 (g_dComIfG_gameInfo)
//	800DB168: 804061C0 (g_dComIfG_gameInfo)
//	800DB180: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800DB1BC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800DB1DC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DB1E0: 80452CC0 (lit_6108)
//	800DB224: 80112568 (setIronBallWaitUpperAnime__9daAlink_cFi)
//	800DB240: 80452CC0 (lit_6108)
//	800DB24C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800DB250: 80452CC0 (lit_6108)
//	800DB268: 800B48D0 (setJumpMode__9daAlink_cFv)
//	800DB270: 804061C0 (g_dComIfG_gameInfo)
//	800DB274: 804061C0 (g_dComIfG_gameInfo)
//	800DB28C: 80425514 (l_waitBaseAnime)
//	800DB290: 80425514 (l_waitBaseAnime)
//	800DB2A8: 80452DCC (lit_10532)
//	800DB2B4: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	800DB2C4: 80452D00 (lit_6895)
//	800DB2DC: 804061C0 (g_dComIfG_gameInfo)
//	800DB2E0: 804061C0 (g_dComIfG_gameInfo)
//	800DB304: 80181640 (dCam_getBody__Fv)
//	800DB308: 801614D0 (Stop__9dCamera_cFv)
//	800DB344: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	800DB350: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800DB37C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800DB398: 800D7BE8 (checkHugeAttack__9daAlink_cCFi)
//	800DB3A8: 800D7C14 (checkLargeAttack__9daAlink_cCFi)
//	800DB3C8: 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf)
//	800DB3CC: 80267128 (atan2sX_Z__4cXyzCFv)
//	800DB3E8: 804061C0 (g_dComIfG_gameInfo)
//	800DB3EC: 804061C0 (g_dComIfG_gameInfo)
//	800DB404: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoElecDamageInit(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoElecDamageInit__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfi.s"
}
#pragma pop

/* 800DB418-800DB5B0 0198+00 s=1 e=0 z=0  None .text      procCoElecDamage__9daAlink_cFv */
//	800DB478: 8015F97C (daPy_addCalcShort__FPsssss)
//	800DB488: 80452CC0 (lit_6108)
//	800DB490: 80452CB8 (lit_6040)
//	800DB49C: 804061C0 (g_dComIfG_gameInfo)
//	800DB4A0: 804061C0 (g_dComIfG_gameInfo)
//	800DB4B4: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	800DB4E8: 80181640 (dCam_getBody__Fv)
//	800DB4EC: 801614AC (Start__9dCamera_cFv)
//	800DB4F4: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	800DB4F8: 804061C0 (g_dComIfG_gameInfo)
//	800DB4FC: 804061C0 (g_dComIfG_gameInfo)
//	800DB508: 8006FD94 (StopQuake__12dVibration_cFi)
//	800DB548: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800DB56C: 8013852C (procWolfSwimWaitInit__9daAlink_cFi)
//	800DB57C: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	800DB594: 800B58EC (checkWaitAction__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoElecDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoElecDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800DB5B0-800DB610 0060+00 s=2 e=0 z=0  None .text      procStEscapeInit__9daAlink_cFv */
//	800DB5C8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DB5D4: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800DB5D8: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800DB5DC: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800DB5E0:
//80452D74 (lit_8502) 	800DB5F0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procStEscapeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procStEscapeInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DB610-800DB6A4 0094+00 s=1 e=0 z=0  None .text      procStEscape__9daAlink_cFv */
//	800DB63C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DB650: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DB65C: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800DB660: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800DB684: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procStEscape() {
    nofralloc
#include "asm/d/a/d_a_alink/procStEscape__9daAlink_cFv.s"
}
#pragma pop

/* 800DB6A4-800DB860 01BC+00 s=1 e=0 z=0  None .text      procDkCaughtInit__9daAlink_cFUi */
//	800DB6C4: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DB6DC: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800DB6FC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800DB710: 80452CC0 (lit_6108)
//	800DB718: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800DB71C: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800DB730: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800DB734: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800DB73C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800DB750: 8034739C (PSVECSquareDistance)
//	800DB754: 80452CC0 (lit_6108)
//	800DB764: 80452CE8 (lit_6846)
//	800DB76C: 80452CF0 (lit_6847)
//	800DB7B4: 80452CF8 (lit_6848)
//	800DB7C0: 80450AE0 (__float_nan)
//	800DB7C4: 80450AE0 (__float_nan)
//	800DB830: 80450AE0 (__float_nan)
//	800DB834: 80450AE0 (__float_nan)
//	800DB83C: 80452D84 (lit_8781)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDkCaughtInit(unsigned int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procDkCaughtInit__9daAlink_cFUi.s"
}
#pragma pop

/* 800DB860-800DBC98 0438+00 s=1 e=0 z=0  None .text      procDkCaught__9daAlink_cFv */
//	800DB888: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800DB88C: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800DB894: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800DB8CC: 800C5160 (procFrontRollSuccessInit__9daAlink_cFv)
//	800DB8D8: 800D70A0 (checkCaughtEscapeCutTurn__9daAlink_cFv)
//	800DB8F8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800DB91C: 800E247C (multVecMagneBootInvMtx__9daAlink_cFP4cXyz)
//	800DB924: 80267128 (atan2sX_Z__4cXyzCFv)
//	800DB93C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800DB94C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800DB96C: 80347138 (PSVECSquareMag)
//	800DB970: 80452CC0 (lit_6108)
//	800DB980: 80452CE8 (lit_6846)
//	800DB988: 80452CF0 (lit_6847)
//	800DB9D0: 80452CF8 (lit_6848)
//	800DB9DC: 80450AE0 (__float_nan)
//	800DB9E0: 80450AE0 (__float_nan)
//	800DBA4C: 80450AE0 (__float_nan)
//	800DBA50: 80450AE0 (__float_nan)
//	800DBA70: 80266B84 (__ml__4cXyzCFf)
//	800DBA80: 80266C18 (__dv__4cXyzCFf)
//	800DBA90: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800DBAB0: 80452CA4 (lit_6021)
//	800DBACC: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800DBAEC: 80452CBC (lit_6041)
//	800DBAFC: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800DBB1C: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800DBB20: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800DBB30: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800DBB34: 80439A20 (sincosTable___5JMath)
//	800DBB38: 80439A20 (sincosTable___5JMath)
//	800DBB50: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800DBB54: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800DBB6C: 80452CC0 (lit_6108)
//	800DBB74: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800DBB78: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800DBB80: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	800DBB88: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800DBBD4: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800DBBD8: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800DBBF0: 80452CA4 (lit_6021)
//	800DBC0C: 803650D0 (abs)
//	800DBC18: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800DBC1C: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	800DBC5C: 800C5160 (procFrontRollSuccessInit__9daAlink_cFv)
//	800DBC70: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDkCaught() {
    nofralloc
#include "asm/d/a/d_a_alink/procDkCaught__9daAlink_cFv.s"
}
#pragma pop

/* 800DBC98-800DBD1C 0084+00 s=2 e=0 z=0  None .text      setScreamWaitAnime__9daAlink_cFv */
//	800DBCB0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800DBCD8: 80452CC0 (lit_6108)
//	800DBCE0: 80452CB8 (lit_6040)
//	800DBCEC: 804061C0 (g_dComIfG_gameInfo)
//	800DBCF0: 804061C0 (g_dComIfG_gameInfo)
//	800DBD04: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setScreamWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setScreamWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800DBD1C-800DBDA4 0088+00 s=1 e=0 z=0  None .text      procScreamWaitInit__9daAlink_cFv */
//	800DBD34: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DBD48: 800DBC98 (setScreamWaitAnime__9daAlink_cFv)
//	800DBD58: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800DBD5C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800DBD64: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800DBD68: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800DBD70: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800DBD84: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procScreamWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procScreamWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DBDA4-800DBE00 005C+00 s=1 e=0 z=0  None .text      procScreamWait__9daAlink_cFv */
//	800DBDCC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DBDE8: 800DBC98 (setScreamWaitAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procScreamWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procScreamWait__9daAlink_cFv.s"
}
#pragma pop

/* 800DBE00-800DBE74 0074+00 s=1 e=0 z=0  None .text      procCoSandWallHitInit__9daAlink_cFv */
//	800DBE18: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DBE40: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	800DBE50: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800DBE54: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSandWallHitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSandWallHitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DBE74-800DBED8 0064+00 s=1 e=0 z=0  None .text      procCoSandWallHit__9daAlink_cFv */
//	800DBEB4: 800D7478 (setDamagePointNormal__9daAlink_cFi)
//	800DBEBC: 800DAC84 (procCoPolyDamageInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSandWallHit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSandWallHit__9daAlink_cFv.s"
}
#pragma pop

/* 800DBED8-800DC214 033C+00 s=1 e=0 z=0  None .text      procCoLavaReturnInit__9daAlink_cFi */
//	800DBEE8: 803621DC (_savegpr_29)
//	800DBEF4: 804061C0 (g_dComIfG_gameInfo)
//	800DBEF8: 804061C0 (g_dComIfG_gameInfo)
//	800DBF10: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800DBF3C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DBF88: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	800DBF94: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800DBFE8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800DC0F4: 804061C0 (g_dComIfG_gameInfo)
//	800DC0F8: 804061C0 (g_dComIfG_gameInfo)
//	800DC13C: 80452CB8 (lit_6040)
//	800DC140: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	800DC184: 80452CB8 (lit_6040)
//	800DC188: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	800DC1A8: 80452CC0 (lit_6108)
//	800DC1CC: 80181640 (dCam_getBody__Fv)
//	800DC1D8: 80392094 (d_a_d_a_alink__stringBase0)
//	800DC1DC: 80392094 (d_a_d_a_alink__stringBase0)
//	800DC1F4: 80088A7C (StartEventCamera__9dCamera_cFiie)
//	800DC200: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLavaReturnInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLavaReturnInit__9daAlink_cFi.s"
}
#pragma pop

/* 800DC214-800DC278 0064+00 s=1 e=0 z=0  None .text      procCoLavaReturn__9daAlink_cFv */
//	800DC22C: 80452CC0 (lit_6108)
//	800DC230: 80452D44 (lit_7977)
//	800DC234: 80270740 (cLib_chaseF__FPfff)
//	800DC23C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DC25C: 800BDF60 (startRestartRoom__9daAlink_cFUliii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLavaReturn() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLavaReturn__9daAlink_cFv.s"
}
#pragma pop

/* 800DC278-800DC474 01FC+00 s=1 e=0 z=0  None .text      procCoSwimFreezeReturnInit__9daAlink_cFv
 */
//	800DC290: 803621D8 (_savegpr_28)
//	800DC298: 8038D658 (lit_3757)
//	800DC29C: 8038D658 (lit_3757)
//	800DC2A0: 804061C0 (g_dComIfG_gameInfo)
//	800DC2A4: 804061C0 (g_dComIfG_gameInfo)
//	800DC2BC: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800DC2E8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DC32C: 80452D30 (lit_7625)
//	800DC330: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	800DC34C: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800DC374: 80452CC0 (lit_6108)
//	800DC37C: 80452D30 (lit_7625)
//	800DC380: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800DC3EC: 80452CC0 (lit_6108)
//	800DC41C: 80181640 (dCam_getBody__Fv)
//	800DC428: 80392094 (d_a_d_a_alink__stringBase0)
//	800DC42C: 80392094 (d_a_d_a_alink__stringBase0)
//	800DC444: 80088A7C (StartEventCamera__9dCamera_cFiie)
//	800DC460: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSwimFreezeReturnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSwimFreezeReturnInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DC474-800DC548 00D4+00 s=1 e=0 z=0  None .text      procCoSwimFreezeReturn__9daAlink_cFv */
//	800DC49C: 80118B34 (checkRestartDead__9daAlink_cFii)
//	800DC4CC: 800BDE20 (setLastSceneDamage__9daAlink_cFiPUl)
//	800DC4D8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800DC4EC: 80452CB8 (lit_6040)
//	800DC4F4: 80452CBC (lit_6041)
//	800DC500: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800DC508: 80452CC0 (lit_6108)
//	800DC520: 80027170 (dStage_changeScene__FifUlScsi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSwimFreezeReturn() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSwimFreezeReturn__9daAlink_cFv.s"
}
#pragma pop

/* 800DC548-800DC5A4 005C+00 s=13 e=0 z=0  None .text      checkEnemyGroup__9daAlink_cFP10fopAc_ac_c
 */
//	800DC57C: 800DC5A4 (checkSpecialNpc__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkEnemyGroup(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkEnemyGroup__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800DC5A4-800DC5DC 0038+00 s=4 e=0 z=0  None .text      checkSpecialNpc__9daAlink_cFP10fopAc_ac_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSpecialNpc(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSpecialNpc__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800DC5DC-800DC678 009C+00 s=1 e=0 z=0  None .text      checkShieldAttackEmphasys__9daAlink_cFv */
//	800DC5EC: 803621DC (_savegpr_29)
//	800DC614: 800D28F4 (checkCutHeadState__9daAlink_cFv)
//	800DC664: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkShieldAttackEmphasys() {
    nofralloc
#include "asm/d/a/d_a_alink/checkShieldAttackEmphasys__9daAlink_cFv.s"
}
#pragma pop

/* 800DC678-800DC79C 0124+00 s=5 e=0 z=0  None .text      checkGuardActionChange__9daAlink_cFv */
//	800DC688: 803621CC (_savegpr_25)
//	800DC6AC: 800737E4 (LockonTruth__12dAttention_cFv)
//	800DC6EC: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800DC730: 800DC5A4 (checkSpecialNpc__9daAlink_cFP10fopAc_ac_c)
//	800DC788: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGuardActionChange() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGuardActionChange__9daAlink_cFv.s"
}
#pragma pop

/* 800DC79C-800DC8C4 0128+00 s=3 e=0 z=0  None .text      stickArrowIncrement__9daAlink_cFi */
//	800DC834: 804061C0 (g_dComIfG_gameInfo)
//	800DC838: 804061C0 (g_dComIfG_gameInfo)
//	800DC850: 80097EE0 (checkItemGet__FUci)
//	800DC870: 804061C0 (g_dComIfG_gameInfo)
//	800DC874: 804061C0 (g_dComIfG_gameInfo)
//	800DC894: 80452CC0 (lit_6108)
//	800DC89C: 8001C1FC (fopAcM_createItemForSimpleDemo__FPC4cXyziiPC5csXyzPC4cXyzff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::stickArrowIncrement(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/stickArrowIncrement__9daAlink_cFi.s"
}
#pragma pop

/* 800DC8C4-800DCA2C 0168+00 s=0 e=0 z=1  None .text
 * setArrowShieldActor__9daAlink_cFP10fopAc_ac_ci               */
//	800DC8D4: 803621DC (_savegpr_29)
//	800DC94C: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800DC950: 80023590 (fpcSch_JudgeByID__FPvPv)
//	800DC958: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800DC964: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	800DC9B4: 804061C0 (g_dComIfG_gameInfo)
//	800DC9B8: 804061C0 (g_dComIfG_gameInfo)
//	800DC9DC: 80452CC0 (lit_6108)
//	800DC9E4: 8001C1FC (fopAcM_createItemForSimpleDemo__FPC4cXyziiPC5csXyzPC4cXyzff)
//	800DCA00: 800D77C8 (checkMagicArmorNoDamage__9daAlink_cFv)
//	800DCA18: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setArrowShieldActor(fopAc_ac_c* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setArrowShieldActor__9daAlink_cFP10fopAc_ac_ci.s"
}
#pragma pop

/* 800DCA2C-800DCA80 0054+00 s=1 e=0 z=2  None .text
 * checkWoodShieldEquipNotIronBall__9daAlink_cCFv               */
//	800DCA48: 8015F3C4 (checkWoodShieldEquip__9daPy_py_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWoodShieldEquipNotIronBall() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWoodShieldEquipNotIronBall__9daAlink_cCFv.s"
}
#pragma pop

/* 800DCA80-800DCD74 02F4+00 s=0 e=0 z=1  None .text
 * getArrowShieldOffset__9daAlink_cCFPC4cXyzPC5csXyzP4cXyzP4cXyz */
//	800DCA90: 803621D0 (_savegpr_26)
//	800DCAA8: 80452DD0 (lit_11122)
//	800DCAAC: 8026798C (cM_rndFX__Ff)
//	800DCAB4: 80452CB0 (lit_6025)
//	800DCAE0: 80452DD0 (lit_11122)
//	800DCAE4: 8026798C (cM_rndFX__Ff)
//	800DCAEC: 80452CB0 (lit_6025)
//	800DCB18: 803DD470 (now__14mDoMtx_stack_c)
//	800DCB1C: 803DD470 (now__14mDoMtx_stack_c)
//	800DCB28: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	800DCB2C: 803DD470 (now__14mDoMtx_stack_c)
//	800DCB30: 803DD470 (now__14mDoMtx_stack_c)
//	800DCB34: 80430D3C (BaseZ__4cXyz)
//	800DCB38: 80430D3C (BaseZ__4cXyz)
//	800DCB40: 80346D6C (PSMTXMultVec)
//	800DCB4C: 803DD470 (now__14mDoMtx_stack_c)
//	800DCB50: 803DD470 (now__14mDoMtx_stack_c)
//	800DCB54: 803464B0 (PSMTXCopy)
//	800DCB58: 803DD470 (now__14mDoMtx_stack_c)
//	800DCB5C: 803DD470 (now__14mDoMtx_stack_c)
//	800DCB64: 803465B0 (PSMTXInverse)
//	800DCB68: 803DD470 (now__14mDoMtx_stack_c)
//	800DCB6C: 803DD470 (now__14mDoMtx_stack_c)
//	800DCB78: 80346E4C (PSMTXMultVecSR)
//	800DCB84: 803918B8 (localCenter)
//	800DCB88: 803918B8 (localCenter)
//	800DCB90: 80346D6C (PSMTXMultVec)
//	800DCB9C: 80347194 (PSVECDotProduct)
//	800DCBAC: 8026F3DC (__ct__8cM3dGPlaFPC4cXyzf)
//	800DCBBC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800DCBE8: 8026F408 (crossInfLin__8cM3dGPlaCFRC4cXyzRC4cXyzR4cXyz)
//	800DCBF4: 8034739C (PSVECSquareDistance)
//	800DCBF8: 80452CC0 (lit_6108)
//	800DCC08: 80452CE8 (lit_6846)
//	800DCC10: 80452CF0 (lit_6847)
//	800DCC58: 80452CF8 (lit_6848)
//	800DCC64: 80450AE0 (__float_nan)
//	800DCC68: 80450AE0 (__float_nan)
//	800DCCD4: 80450AE0 (__float_nan)
//	800DCCD8: 80450AE0 (__float_nan)
//	800DCCDC: 80452D78 (lit_8676)
//	800DCCF4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800DCD18: 80266EF4 (normalize__4cXyzFv)
//	800DCD24: 80452D78 (lit_8676)
//	800DCD28: 803470D8 (PSVECScale)
//	800DCD38: 80347090 (PSVECAdd)
//	800DCD3C: 803DD470 (now__14mDoMtx_stack_c)
//	800DCD40: 803DD470 (now__14mDoMtx_stack_c)
//	800DCD4C: 80346D6C (PSMTXMultVec)
//	800DCD50: 803A37C0 (__vt__8cM3dGPla)
//	800DCD54: 803A37C0 (__vt__8cM3dGPla)
//	800DCD60: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getArrowShieldOffset(cXyz const* param_0, csXyz const* param_1, cXyz* param_2,
                                         cXyz* param_3) const {
    nofralloc
#include "asm/d/a/d_a_alink/getArrowShieldOffset__9daAlink_cCFPC4cXyzPC5csXyzP4cXyzP4cXyz.s"
}
#pragma pop

/* 800DCD74-800DCDF0 007C+00 s=0 e=0 z=2  None .text
 * setArrowShieldPos__9daAlink_cCFP4cXyzP5csXyzPC4cXyzPC4cXyz   */
//	800DCD84: 803621D8 (_savegpr_28)
//	800DCDA8: 80346E4C (PSMTXMultVecSR)
//	800DCDB0: 80267150 (atan2sY_XZ__4cXyzCFv)
//	800DCDBC: 80267128 (atan2sX_Z__4cXyzCFv)
//	800DCDD4: 80346D6C (PSMTXMultVec)
//	800DCDDC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setArrowShieldPos(cXyz* param_0, csXyz* param_1, cXyz const* param_2,
                                      cXyz const* param_3) const {
    nofralloc
#include "asm/d/a/d_a_alink/setArrowShieldPos__9daAlink_cCFP4cXyzP5csXyzPC4cXyzPC4cXyz.s"
}
#pragma pop

/* 800DCDF0-800DCE6C 007C+00 s=17 e=0 z=0  None .text      checkUpperGuardAnime__9daAlink_cCFv */
//	800DCE18: 80115C20 (checkEventRun__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperGuardAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperGuardAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800DCE6C-800DCF04 0098+00 s=1 e=0 z=0  None .text      checkPlayerGuard__9daAlink_cCFv */
//	800DCE7C: 803621D8 (_savegpr_28)
//	800DCE9C: 804061C0 (g_dComIfG_gameInfo)
//	800DCEA0: 804061C0 (g_dComIfG_gameInfo)
//	800DCEB0: 800ECF04 (checkHorseLieAnime__9daAlink_cCFv)
//	800DCED8: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800DCEF0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPlayerGuard() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkPlayerGuard__9daAlink_cCFv.s"
}
#pragma pop

/* 800DCF04-800DCF64 0060+00 s=5 e=0 z=0  None .text      checkPlayerGuardAndAttack__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPlayerGuardAndAttack() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkPlayerGuardAndAttack__9daAlink_cCFv.s"
}
#pragma pop

/* 800DCF64-800DD008 00A4+00 s=2 e=0 z=0  None .text      checkGuardAccept__9daAlink_cFv */
//	800DCF8C: 804061C0 (g_dComIfG_gameInfo)
//	800DCF90: 804061C0 (g_dComIfG_gameInfo)
//	800DCFE0: 800C0594 (checkNotBattleStage__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGuardAccept() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGuardAccept__9daAlink_cFv.s"
}
#pragma pop

/* 800DD008-800DD018 0010+00 s=11 e=0 z=0  None .text      setUpperGuardAnime__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperGuardAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperGuardAnime__9daAlink_cFf.s"
}
#pragma pop

/* 800DD018-800DD114 00FC+00 s=1 e=0 z=0  None .text      setShieldGuard__9daAlink_cFv */
//	800DD054: 800DCF64 (checkGuardAccept__9daAlink_cFv)
//	800DD064: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800DD074: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800DD090: 800D0ECC (checkCutDashAnime__9daAlink_cCFv)
//	800DD0AC: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800DD0BC: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800DD0D8: 800DC678 (checkGuardActionChange__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShieldGuard() {
    nofralloc
#include "asm/d/a/d_a_alink/setShieldGuard__9daAlink_cFv.s"
}
#pragma pop

/* 800DD114-800DD1D4 00C0+00 s=1 e=0 z=0  None .text      setGuardSe__9daAlink_cFP12dCcD_GObjInf */
//	800DD124: 803621D8 (_savegpr_28)
//	800DD130: 800DCA2C (checkWoodShieldEquipNotIronBall__9daAlink_cCFv)
//	800DD140: 800D77C8 (checkMagicArmorNoDamage__9daAlink_cFv)
//	800DD164: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	800DD174: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	800DD194: 8008457C (GetTgHitObjSe__12dCcD_GObjInfFv)
//	800DD19C: 800845B0 (getHitSeID__12dCcD_GObjInfFUci)
//	800DD1C0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGuardSe(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGuardSe__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800DD1D4-800DD3E4 0210+00 s=1 e=0 z=0  None .text      setSmallGuard__9daAlink_cFP12dCcD_GObjInf
 */
//	800DD1E4: 803621D8 (_savegpr_28)
//	800DD1F4: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	800DD200: 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf)
//	800DD208: 80267128 (atan2sX_Z__4cXyzCFv)
//	800DD224: 803650D0 (abs)
//	800DD23C: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD240: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD27C: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD280: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD29C: 80452CC0 (lit_6108)
//	800DD2AC: 80347138 (PSVECSquareMag)
//	800DD2B0: 80452CC0 (lit_6108)
//	800DD2C0: 80452CE8 (lit_6846)
//	800DD2C8: 80452CF0 (lit_6847)
//	800DD310: 80452CF8 (lit_6848)
//	800DD31C: 80450AE0 (__float_nan)
//	800DD320: 80450AE0 (__float_nan)
//	800DD38C: 80450AE0 (__float_nan)
//	800DD390: 80450AE0 (__float_nan)
//	800DD3A0: 80267674 (cM_atan2s__Fff)
//	800DD3D0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSmallGuard(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSmallGuard__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800DD3E4-800DD894 04B0+00 s=1 e=0 z=0  None .text
 * procGuardSlipInit__9daAlink_cFiP12dCcD_GObjInf               */
//	800DD3F4: 803621D0 (_savegpr_26)
//	800DD438: 800DDE58 (procGuardBreakInit__9daAlink_cFv)
//	800DD444: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DD458: 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf)
//	800DD460: 80267128 (atan2sX_Z__4cXyzCFv)
//	800DD47C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800DD488: 80112568 (setIronBallWaitUpperAnime__9daAlink_cFi)
//	800DD48C: 80452CC0 (lit_6108)
//	800DD4A8: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD4AC: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD4C8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800DD4D0:
//80452CBC (lit_6041) 	800DD4D4: 800DD008 (setUpperGuardAnime__9daAlink_cFf) 	800DD4F4: 803650D0
//(abs) 	800DD50C: 8038DF9C (m__19daAlinkHIO_guard_c0) 	800DD510: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD54C: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD550: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD56C: 80452CC0 (lit_6108)
//	800DD57C: 80347138 (PSVECSquareMag)
//	800DD580: 80452CC0 (lit_6108)
//	800DD590: 80452CE8 (lit_6846)
//	800DD598: 80452CF0 (lit_6847)
//	800DD5E0: 80452CF8 (lit_6848)
//	800DD5EC: 80450AE0 (__float_nan)
//	800DD5F0: 80450AE0 (__float_nan)
//	800DD65C: 80450AE0 (__float_nan)
//	800DD660: 80450AE0 (__float_nan)
//	800DD670: 80267674 (cM_atan2s__Fff)
//	800DD69C: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD6A0: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD724: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800DD734: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800DD748: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800DD774: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD778: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD790: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD794: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD7BC: 800D7BE8 (checkHugeAttack__9daAlink_cCFi)
//	800DD7E8: 800D6DC4 (checkMiddleBossGoronRoom__9daAlink_cFv)
//	800DD7F4: 80392094 (d_a_d_a_alink__stringBase0)
//	800DD7F8: 80392094 (d_a_d_a_alink__stringBase0)
//	800DD800: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800DD80C: 80452DD4 (lit_11442)
//	800DD818: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD81C: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD834: 800D7C14 (checkLargeAttack__9daAlink_cCFi)
//	800DD840: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD844: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD854: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD858: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DD874: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800DD880: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardSlipInit(int param_0, dCcD_GObjInf* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardSlipInit__9daAlink_cFiP12dCcD_GObjInf.s"
}
#pragma pop

/* 800DD894-800DDA10 017C+00 s=1 e=0 z=0  None .text      procGuardSlip__9daAlink_cFv */
//	800DD8BC: 80452CBC (lit_6041)
//	800DD8C0: 800DD008 (setUpperGuardAnime__9daAlink_cFf)
//	800DD8CC: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800DD908: 80452DD8 (lit_11470)
//	800DD944: 80452DD8 (lit_11470)
//	800DD94C: 80452DDC (lit_11471)
//	800DD97C: 80452CC0 (lit_6108)
//	800DD988: 80452CC0 (lit_6108)
//	800DD990: 80270740 (cLib_chaseF__FPfff)
//	800DD9A0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DD9B8: 800DC678 (checkGuardActionChange__9daAlink_cFv)
//	800DD9DC: 80452CB8 (lit_6040)
//	800DD9EC: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardSlip() {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardSlip__9daAlink_cFv.s"
}
#pragma pop

/* 800DDA10-800DDBA8 0198+00 s=2 e=0 z=0  None .text      procGuardAttackInit__9daAlink_cFv */
//	800DDA50: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DDA54: 8038DF28 (m__21daAlinkHIO_gAtPush_c0)
//	800DDA58: 8038DF28 (m__21daAlinkHIO_gAtPush_c0)
//	800DDA64: 8042555C (l_rWaitBaseAnime)
//	800DDA68: 8042555C (l_rWaitBaseAnime)
//	800DDAA0: 800D152C (setCutType__9daAlink_cFUc)
//	800DDAAC: 8038DF28 (m__21daAlinkHIO_gAtPush_c0)
//	800DDAB0: 8038DF28 (m__21daAlinkHIO_gAtPush_c0)
//	800DDAB4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800DDAB8:
//8038DF28
//(m__21daAlinkHIO_gAtPush_c0) 	800DDABC: 8038DF28 (m__21daAlinkHIO_gAtPush_c0) 	800DDAE4:
//800BB4B8 (checkHeavyStateOn__9daAlink_cFii) 	800DDB0C: 80452DB8 (lit_10041) 	800DDB2C: 80452CC0
//(lit_6108) 	800DDB40: 800D2284 (setSwordVoiceSe__9daAlink_cFUl) 	800DDB48: 80084318
//(ResetAtHit__12dCcD_GObjInfFv) 	800DDB54: 8038DF9C (m__19daAlinkHIO_guard_c0) 	800DDB58: 8038DF9C
//(m__19daAlinkHIO_guard_c0) 	800DDB70: 80452CBC (lit_6041) 	800DDB74: 800DD008
//(setUpperGuardAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardAttackInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardAttackInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DDBA8-800DDE58 02B0+00 s=1 e=0 z=0  None .text      procGuardAttack__9daAlink_cFv */
//	800DDBB8: 803621DC (_savegpr_29)
//	800DDBC4: 80452CBC (lit_6041)
//	800DDBC8: 800DD008 (setUpperGuardAnime__9daAlink_cFf)
//	800DDBD8: 80452CC0 (lit_6108)
//	800DDBDC: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800DDBE0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800DDBE8: 80270740 (cLib_chaseF__FPfff)
//	800DDBF4: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800DDC04: 800D20B4 (checkForceSwordSwing__9daAlink_cFv)
//	800DDC60: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	800DDC74: 80452CC0 (lit_6108)
//	800DDC7C: 80452CB8 (lit_6040)
//	800DDC88: 804061C0 (g_dComIfG_gameInfo)
//	800DDC8C: 804061C0 (g_dComIfG_gameInfo)
//	800DDCA0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800DDCBC: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800DDCC8: 804061C0 (g_dComIfG_gameInfo)
//	800DDCCC: 804061C0 (g_dComIfG_gameInfo)
//	800DDCD8: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800DDCE8: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	800DDD00: 80452CBC (lit_6041)
//	800DDD04: 802C4814 (startHitItemSE__14Z2CreatureLinkFUlUlP14Z2SoundObjBasef)
//	800DDD10: 800D4068 (procCutReverseInit__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800DDD24: 800D28F4 (checkCutHeadState__9daAlink_cFv)
//	800DDD38: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800DDD48: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800DDD50: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DDD68: 804061C0 (g_dComIfG_gameInfo)
//	800DDD6C: 804061C0 (g_dComIfG_gameInfo)
//	800DDD78: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800DDD88: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DDDB0: 800D27E4 (checkDoCutAction__9daAlink_cFv)
//	800DDDC8: 800D23C0 (checkCutAction__9daAlink_cFv)
//	800DDDF0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DDE44: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardAttack__9daAlink_cFv.s"
}
#pragma pop

/* 800DDE58-800DDF2C 00D4+00 s=2 e=0 z=0  None .text      procGuardBreakInit__9daAlink_cFv */
//	800DDE70: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DDE7C: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DDE80: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DDE88: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800DDEA4:
//800C12DC (deleteEquipItem__9daAlink_cFii) 	800DDEA8: 80452CC0 (lit_6108) 	800DDEB0: 80425544
//(l_halfAtnWaitBaseAnime) 	800DDEB4: 80425544 (l_halfAtnWaitBaseAnime) 	800DDED0: 80452CB8
//(lit_6040) 	800DDEDC: 804061C0 (g_dComIfG_gameInfo) 	800DDEE0: 804061C0 (g_dComIfG_gameInfo)
//	800DDEF4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardBreakInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardBreakInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DDF2C-800DE008 00DC+00 s=1 e=0 z=0  None .text      procGuardBreak__9daAlink_cFv */
//	800DDF48: 80452CBC (lit_6041)
//	800DDF4C: 800DD008 (setUpperGuardAnime__9daAlink_cFf)
//	800DDF68: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DDF78: 800DC678 (checkGuardActionChange__9daAlink_cFv)
//	800DDF98: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DDFA4: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DDFA8: 8038DF9C (m__19daAlinkHIO_guard_c0)
//	800DDFBC: 800DC678 (checkGuardActionChange__9daAlink_cFv)
//	800DDFE8: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardBreak() {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardBreak__9daAlink_cFv.s"
}
#pragma pop

/* 800DE008-800DE380 0378+00 s=2 e=0 z=0  None .text      procTurnMoveInit__9daAlink_cFi */
//	800DE018: 803621D8 (_savegpr_28)
//	800DE024: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800DE038: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DE03C: 80452CC0 (lit_6108)
//	800DE068: 80452CA4 (lit_6021)
//	800DE09C: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800DE0A0: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800DE0C0: 80452CB0 (lit_6025)
//	800DE0DC: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800DE0E0: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800DE104: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800DE108: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800DE118: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800DE15C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800DE180: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800DE190: 80452CC0 (lit_6108)
//	800DE1A4: 80347138 (PSVECSquareMag)
//	800DE1A8: 80452CC0 (lit_6108)
//	800DE1B8: 80452CE8 (lit_6846)
//	800DE1C0: 80452CF0 (lit_6847)
//	800DE208: 80452CF8 (lit_6848)
//	800DE214: 80450AE0 (__float_nan)
//	800DE218: 80450AE0 (__float_nan)
//	800DE284: 80450AE0 (__float_nan)
//	800DE288: 80450AE0 (__float_nan)
//	800DE294: 80267128 (atan2sX_Z__4cXyzCFv)
//	800DE2A0: 80452D68 (lit_8472)
//	800DE2BC: 80452DE0 (lit_11673)
//	800DE2C8: 80452CB0 (lit_6025)
//	800DE330: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800DE33C: 804061C0 (g_dComIfG_gameInfo)
//	800DE340: 804061C0 (g_dComIfG_gameInfo)
//	800DE36C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procTurnMoveInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procTurnMoveInit__9daAlink_cFi.s"
}
#pragma pop

/* 800DE380-800DE64C 02CC+00 s=1 e=0 z=0  None .text      procTurnMove__9daAlink_cFv */
//	800DE390: 803621DC (_savegpr_29)
//	800DE3B0: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800DE3B4: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800DE3C4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800DE400: 80439A20 (sincosTable___5JMath)
//	800DE404: 80439A20 (sincosTable___5JMath)
//	800DE440: 80452CB0 (lit_6025)
//	800DE4B4: 800D102C (checkCutFinishJumpUp__9daAlink_cFv)
//	800DE4DC: 80452CBC (lit_6041)
//	800DE4E0: 800DD008 (setUpperGuardAnime__9daAlink_cFf)
//	800DE4E8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DE500: 800737E4 (LockonTruth__12dAttention_cFv)
//	800DE538: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DE550: 800B1B28 (checkNotJumpSinkLimit__9daAlink_cFv)
//	800DE560: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800DE564: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800DE578: 800D3ADC (procCutFinishJumpUpInit__9daAlink_cFv)
//	800DE57C: 804061C0 (g_dComIfG_gameInfo)
//	800DE580: 804061C0 (g_dComIfG_gameInfo)
//	800DE598: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800DE59C: 8038DF70 (m__22daAlinkHIO_turnMove_c0)
//	800DE5C0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DE5D8: 80452DC8 (lit_10286)
//	800DE5DC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800DE5E8: 80452CC0 (lit_6108)
//	800DE5F0: 80452CB8 (lit_6040)
//	800DE5FC: 804061C0 (g_dComIfG_gameInfo)
//	800DE600: 804061C0 (g_dComIfG_gameInfo)
//	800DE614: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800DE61C: 803650D0 (abs)
//	800DE638: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procTurnMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procTurnMove__9daAlink_cFv.s"
}
#pragma pop

/* 800DE64C-800DE740 00F4+00 s=1 e=0 z=2  None .text      getArrowFlyData__9daAlink_cCFPfPfi */
//	800DE658: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE65C: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE674: 804061C0 (g_dComIfG_gameInfo)
//	800DE678: 804061C0 (g_dComIfG_gameInfo)
//	800DE688: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE68C: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE6C4: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE6C8: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE6E0: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE6E4: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE708: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE70C: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE724: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE728: 8038E658 (m__17daAlinkHIO_bow_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getArrowFlyData(f32* param_0, f32* param_1, int param_2) const {
    nofralloc
#include "asm/d/a/d_a_alink/getArrowFlyData__9daAlink_cCFPfPfi.s"
}
#pragma pop

/* 800DE740-800DE750 0010+00 s=0 e=0 z=1  None .text      getArrowIncAtR__9daAlink_cCFv */
//	800DE740: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE744: 8038E658 (m__17daAlinkHIO_bow_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getArrowIncAtR() const {
    nofralloc
#include "asm/d/a/d_a_alink/getArrowIncAtR__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE750-800DE760 0010+00 s=0 e=0 z=1  None .text      getBombArrowFlyExplodeTime__9daAlink_cCFv
 */
//	800DE750: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE754: 8038E658 (m__17daAlinkHIO_bow_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombArrowFlyExplodeTime() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombArrowFlyExplodeTime__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE760-800DE770 0010+00 s=0 e=0 z=1  None .text      getArrowIncAtMaxStart__9daAlink_cCFv */
//	800DE760: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE764: 8038E658 (m__17daAlinkHIO_bow_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getArrowIncAtMaxStart() const {
    nofralloc
#include "asm/d/a/d_a_alink/getArrowIncAtMaxStart__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE770-800DE780 0010+00 s=0 e=0 z=1  None .text      getArrowIncAtMax__9daAlink_cCFv */
//	800DE770: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DE774: 8038E658 (m__17daAlinkHIO_bow_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getArrowIncAtMax() const {
    nofralloc
#include "asm/d/a/d_a_alink/getArrowIncAtMax__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE780-800DE7D4 0054+00 s=10 e=0 z=0  None .text      checkBowAndSlingItem__9daAlink_cFi */
//	800DE7A0: 8015EB90 (checkBowItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBowAndSlingItem(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBowAndSlingItem__9daAlink_cFi.s"
}
#pragma pop

/* 800DE7D4-800DE884 00B0+00 s=1 e=0 z=0  None .text      setSlingModel__9daAlink_cFv */
//	800DE7E4: 803621DC (_savegpr_29)
//	800DE7F4: 8015F068 (loadDataIdx__14daPy_anmHeap_cFUs)
//	800DE800: 800A3C8C (setItemHeap__9daAlink_cFv)
//	800DE814: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	800DE828: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	800DE840: 80452CB8 (lit_6040)
//	800DE850: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	800DE858: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	800DE870: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSlingModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setSlingModel__9daAlink_cFv.s"
}
#pragma pop

/* 800DE884-800DE990 010C+00 s=0 e=1 z=1  None .text      checkBowCameraArrowPosP__9daAlink_cFPsPs
 */
//	800DE894: 803621D8 (_savegpr_28)
//	800DE8A4: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800DE8EC: 804061C0 (g_dComIfG_gameInfo)
//	800DE8F0: 804061C0 (g_dComIfG_gameInfo)
//	800DE92C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800DE934: 800E23FC (concatMagneBootMtx__9daAlink_cFv)
//	800DE938: 803DD470 (now__14mDoMtx_stack_c)
//	800DE93C: 803DD470 (now__14mDoMtx_stack_c)
//	800DE94C: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	800DE950: 803DD470 (now__14mDoMtx_stack_c)
//	800DE954: 803DD470 (now__14mDoMtx_stack_c)
//	800DE958: 803918C4 (localPos)
//	800DE95C: 803918C4 (localPos)
//	800DE964: 80346D6C (PSMTXMultVec)
//	800DE97C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBowCameraArrowPosP(s16* param_0, s16* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBowCameraArrowPosP__9daAlink_cFPsPs.s"
}
#pragma pop

/* 800DE990-800DE9B8 0028+00 s=1 e=0 z=0  None .text      checkArrowChargeEnd__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkArrowChargeEnd() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkArrowChargeEnd__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE9B8-800DE9E8 0030+00 s=3 e=0 z=0  None .text      checkBowReadyAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBowReadyAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBowReadyAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE9E8-800DEA3C 0054+00 s=16 e=0 z=0  None .text      checkBowAnime__9daAlink_cCFv */
//	800DEA04: 800DE9B8 (checkBowReadyAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBowAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBowAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800DEA3C-800DEAE4 00A8+00 s=2 e=0 z=0  None .text      makeArrow__9daAlink_cFv */
//	800DEA50: 804061C0 (g_dComIfG_gameInfo)
//	800DEA54: 804061C0 (g_dComIfG_gameInfo)
//	800DEA74: 8002E5C0 (dComIfGp_getSelectItemNum__Fi)
//	800DEAB8: 80019E04 (fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv)
//	800DEAC4: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::makeArrow() {
    nofralloc
#include "asm/d/a/d_a_alink/makeArrow__9daAlink_cFv.s"
}
#pragma pop

/* 800DEAE4-800DEB8C 00A8+00 s=3 e=0 z=0  None .text      deleteArrow__9daAlink_cFv */
//	800DEB20: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800DEB24: 8038E54C (m__20daAlinkHIO_damage_c0)
//	800DEB50: 8002E83C (dComIfGp_addSelectItemNum__Fis)
//	800DEB54: 804061C0 (g_dComIfG_gameInfo)
//	800DEB58: 804061C0 (g_dComIfG_gameInfo)
//	800DEB6C: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	800DEB74: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::deleteArrow() {
    nofralloc
#include "asm/d/a/d_a_alink/deleteArrow__9daAlink_cFv.s"
}
#pragma pop

/* 800DEB8C-800DEBC8 003C+00 s=6 e=0 z=0  None .text      setBowOrSlingStatus__9daAlink_cFv */
//	800DEB98: 804061C0 (g_dComIfG_gameInfo)
//	800DEB9C: 804061C0 (g_dComIfG_gameInfo)
//	800DEBB0: 804061C0 (g_dComIfG_gameInfo)
//	800DEBB4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowOrSlingStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowOrSlingStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800DEBC8-800DED88 01C0+00 s=1 e=0 z=0  None .text      changeArrowType__9daAlink_cFv */
//	800DEBD8: 803621DC (_savegpr_29)
//	800DEC1C: 8002E5C0 (dComIfGp_getSelectItemNum__Fi)
//	800DEC40: 800737E4 (LockonTruth__12dAttention_cFv)
//	800DEC70: 800B26DC (setItemActionButtonStatus__9daAlink_cFUc)
//	800DEC78: 800B26FC (itemActionTrigger__9daAlink_cFv)
//	800DEC90: 804061C0 (g_dComIfG_gameInfo)
//	800DEC94: 804061C0 (g_dComIfG_gameInfo)
//	800DECB8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800DECCC: 80452CB8 (lit_6040)
//	800DECD4: 80452CBC (lit_6041)
//	800DECE0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800DECFC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800DED10: 80452CB8 (lit_6040)
//	800DED18: 80452CBC (lit_6041)
//	800DED24: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800DED5C: 800DEAE4 (deleteArrow__9daAlink_cFv)
//	800DED64: 800DEA3C (makeArrow__9daAlink_cFv)
//	800DED6C: 800DEFB8 (setBowReloadAnime__9daAlink_cFv)
//	800DED74: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeArrowType() {
    nofralloc
#include "asm/d/a/d_a_alink/changeArrowType__9daAlink_cFv.s"
}
#pragma pop

/* 800DED88-800DEE1C 0094+00 s=1 e=0 z=0  None .text      cancelBowMoveRideNotAtn__9daAlink_cFv */
//	800DED98: 803621D4 (_savegpr_27)
//	800DEDC0: 800737E4 (LockonTruth__12dAttention_cFv)
//	800DEE08: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelBowMoveRideNotAtn() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelBowMoveRideNotAtn__9daAlink_cFv.s"
}
#pragma pop

/* 800DEE1C-800DEEDC 00C0+00 s=3 e=0 z=0  None .text      cancelBowMove__9daAlink_cFv */
//	800DEE2C: 803621DC (_savegpr_29)
//	800DEE4C: 800737E4 (LockonTruth__12dAttention_cFv)
//	800DEE80: 800DE9B8 (checkBowReadyAnime__9daAlink_cCFv)
//	800DEE9C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DEEB0: 80452CBC (lit_6041)
//	800DEEB4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800DEEC8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelBowMove() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelBowMove__9daAlink_cFv.s"
}
#pragma pop

/* 800DEEDC-800DEFB8 00DC+00 s=3 e=0 z=0  None .text      setBowReadyAnime__9daAlink_cFv */
//	800DEEF0: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800DEF0C: 8002E5C0 (dComIfGp_getSelectItemNum__Fi)
//	800DEF40: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	800DEF88: 80452CBC (lit_6041)
//	800DEF8C: 800C0084 (changeItemBck__9daAlink_cFUsf)
//	800DEF9C: 80452CBC (lit_6041)
//	800DEFA0: 800C0084 (changeItemBck__9daAlink_cFUsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800DEFB8-800DF0BC 0104+00 s=2 e=0 z=0  None .text      setBowReloadAnime__9daAlink_cFv */
//	800DEFD4: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DEFD8: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DEFE0: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800DEFEC:
// 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	800DF004: 800AF4B0
//(setFaceBck__9daAlink_cFUsiUs) 	800DF01C: 8038E658 (m__17daAlinkHIO_bow_c0) 	800DF020:
//8038E658
//(m__17daAlinkHIO_bow_c0) 	800DF028: 800C0084 (changeItemBck__9daAlink_cFUsf) 	800DF05C: 8038E658
//(m__17daAlinkHIO_bow_c0) 	800DF060: 8038E658 (m__17daAlinkHIO_bow_c0) 	800DF068: 800C0084
//(changeItemBck__9daAlink_cFUsf) 	800DF098: 8038E658 (m__17daAlinkHIO_bow_c0) 	800DF09C:
//8038E658 (m__17daAlinkHIO_bow_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowReloadAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowReloadAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800DF0BC-800DF798 06DC+00 s=2 e=0 z=0  None .text      checkUpperItemActionBow__9daAlink_cFv */
//	800DF0CC: 803621DC (_savegpr_29)
//	800DF0F4: 803918D0 (slingLocalPos)
//	800DF0F8: 803918D0 (slingLocalPos)
//	800DF100: 80346D6C (PSMTXMultVec)
//	800DF148: 80452DA0 (lit_9054)
//	800DF160: 80452CB8 (lit_6040)
//	800DF180: 800B7190 (cancelItemUseQuake__9daAlink_cFi)
//	800DF188: 800B8930 (checkReadyItem__9daAlink_cFv)
//	800DF1AC: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DF1B0: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DF1B4: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800DF1CC:
// 800AF4B0 (setFaceBck__9daAlink_cFUsiUs) 	800DF1E8: 804061C0 (g_dComIfG_gameInfo) 	800DF1EC:
// 804061C0 (g_dComIfG_gameInfo) 	800DF224: 80019E04
//(fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv) 	800DF230: 804061C0 (g_dComIfG_gameInfo)
//	800DF234: 804061C0 (g_dComIfG_gameInfo)
//	800DF268: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DF26C: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DF274: 800C0084 (changeItemBck__9daAlink_cFUsf)
//	800DF294: 800B2604 (itemButton__9daAlink_cFv)
//	800DF2A0: 80452CC0 (lit_6108)
//	800DF2A8: 80452CB8 (lit_6040)
//	800DF2B4: 804061C0 (g_dComIfG_gameInfo)
//	800DF2B8: 804061C0 (g_dComIfG_gameInfo)
//	800DF2CC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800DF2F8: 800AFCBC (resetFacePriAnime__9daAlink_cFv)
//	800DF304: 800B2604 (itemButton__9daAlink_cFv)
//	800DF380: 80452CC0 (lit_6108)
//	800DF388: 80452CB8 (lit_6040)
//	800DF394: 804061C0 (g_dComIfG_gameInfo)
//	800DF398: 804061C0 (g_dComIfG_gameInfo)
//	800DF3A8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800DF3D8: 8002E83C (dComIfGp_addSelectItemNum__Fis)
//	800DF3DC: 804061C0 (g_dComIfG_gameInfo)
//	800DF3E0: 804061C0 (g_dComIfG_gameInfo)
//	800DF3F4: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800DF404: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DF408: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DF440: 800AFCBC (resetFacePriAnime__9daAlink_cFv)
//	800DF460: 800DEBC8 (changeArrowType__9daAlink_cFv)
//	800DF478: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DF48C: 80452CC0 (lit_6108)
//	800DF490: 80452CBC (lit_6041)
//	800DF494: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800DF4A0: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800DF4B8: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800DF4D0: 80452CC0 (lit_6108)
//	800DF4D4: 800C0084 (changeItemBck__9daAlink_cFUsf)
//	800DF4D8: 80452CC0 (lit_6108)
//	800DF4E0: 80452CB8 (lit_6040)
//	800DF4EC: 804061C0 (g_dComIfG_gameInfo)
//	800DF4F0: 804061C0 (g_dComIfG_gameInfo)
//	800DF504: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	800DF548: 800B2604 (itemButton__9daAlink_cFv)
//	800DF564: 800DED88 (cancelBowMoveRideNotAtn__9daAlink_cFv)
//	800DF578: 80452CC4 (lit_6109)
//	800DF57C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800DF580: 804061C0 (g_dComIfG_gameInfo)
//	800DF584: 804061C0 (g_dComIfG_gameInfo)
//	800DF5B0: 800B2604 (itemButton__9daAlink_cFv)
//	800DF5CC: 800B8930 (checkReadyItem__9daAlink_cFv)
//	800DF5F4: 800DEFB8 (setBowReloadAnime__9daAlink_cFv)
//	800DF614: 800DEA3C (makeArrow__9daAlink_cFv)
//	800DF62C: 800DEBC8 (changeArrowType__9daAlink_cFv)
//	800DF654: 80452D44 (lit_7977)
//	800DF670: 80452CB8 (lit_6040)
//	800DF68C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DF69C: 800DED88 (cancelBowMoveRideNotAtn__9daAlink_cFv)
//	800DF6B0: 80452CC4 (lit_6109)
//	800DF6B4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800DF6B8: 804061C0 (g_dComIfG_gameInfo)
//	800DF6BC: 804061C0 (g_dComIfG_gameInfo)
//	800DF6DC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800DF6EC: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DF6F0: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DF704: 800B2604 (itemButton__9daAlink_cFv)
//	800DF714: 800DEEDC (setBowReadyAnime__9daAlink_cFv)
//	800DF754: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DF758: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DF77C: 800B71EC (cancelUpperItemReadyAnime__9daAlink_cFi)
//	800DF784: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionBow() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionBow__9daAlink_cFv.s"
}
#pragma pop

/* 800DF798-800DF814 007C+00 s=1 e=0 z=0  None .text      checkUpperItemActionBowFly__9daAlink_cFv
 */
//	800DF7AC: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800DF7BC: 800DF0BC (checkUpperItemActionBow__9daAlink_cFv)
//	800DF7C8: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
//	800DF7D4: 800B8930 (checkReadyItem__9daAlink_cFv)
//	800DF7E4: 800B2634 (itemTrigger__9daAlink_cFv)
//	800DF7F4: 800DEEDC (setBowReadyAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionBowFly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionBowFly__9daAlink_cFv.s"
}
#pragma pop

/* 800DF814-800DFAE8 02D4+00 s=4 e=0 z=0  None .text      checkNextActionBow__9daAlink_cFv */
//	800DF824: 803621D8 (_savegpr_28)
//	800DF838: 800DE9B8 (checkBowReadyAnime__9daAlink_cCFv)
//	800DF858: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800DF868: 800DEEDC (setBowReadyAnime__9daAlink_cFv)
//	800DF870: 800B7168 (setFastShotTimer__9daAlink_cFv)
//	800DF880: 800737E4 (LockonTruth__12dAttention_cFv)
//	800DF8DC: 800737E4 (LockonTruth__12dAttention_cFv)
//	800DF904: 800A7A5C (checkDashAnime__9daAlink_cCFv)
//	800DF930: 800737E4 (LockonTruth__12dAttention_cFv)
//	800DF994: 800737E4 (LockonTruth__12dAttention_cFv)
//	800DF9F0: 800F6D10 (procCanoeBowSubjectInit__9daAlink_cFv)
//	800DFA00: 800F2150 (procHorseBowSubjectInit__9daAlink_cFv)
//	800DFA10: 800DFD6C (procBowSubjectInit__9daAlink_cFv)
//	800DFA48: 800F6DF0 (procCanoeBowMoveInit__9daAlink_cFv)
//	800DFA58: 800F224C (procHorseBowMoveInit__9daAlink_cFv)
//	800DFA68: 800DFE3C (procBowMoveInit__9daAlink_cFv)
//	800DFA80: 804061C0 (g_dComIfG_gameInfo)
//	800DFA84: 804061C0 (g_dComIfG_gameInfo)
//	800DFAA0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800DFAB4: 80452CB8 (lit_6040)
//	800DFABC: 80452CBC (lit_6041)
//	800DFAC8: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	800DFAD4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionBow() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionBow__9daAlink_cFv.s"
}
#pragma pop

/* 800DFAE8-800DFBC8 00E0+00 s=1 e=0 z=0  None .text      setBowModel__9daAlink_cFv */
//	800DFAF8: 803621DC (_savegpr_29)
//	800DFB08: 8015F068 (loadDataIdx__14daPy_anmHeap_cFUs)
//	800DFB14: 800A3C8C (setItemHeap__9daAlink_cFv)
//	800DFB28: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	800DFB3C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	800DFB54: 80452CB8 (lit_6040)
//	800DFB64: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	800DFB6C: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	800DFB78: 80452CB0 (lit_6025)
//	800DFB94: 80452DE4 (lit_12328)
//	800DFBB4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowModel__9daAlink_cFv.s"
}
#pragma pop

/* 800DFBC8-800DFC28 0060+00 s=4 e=0 z=0  None .text      checkBowGrabLeftHand__9daAlink_cCFv */
//	800DFC00: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBowGrabLeftHand() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBowGrabLeftHand__9daAlink_cCFv.s"
}
#pragma pop

/* 800DFC28-800DFC70 0048+00 s=6 e=0 z=0  None .text      setBowHangAnime__9daAlink_cFv */
//	800DFC40: 8015EB90 (checkBowItem__9daPy_py_cFi)
//	800DFC54: 80452CC0 (lit_6108)
//	800DFC58: 800C0084 (changeItemBck__9daAlink_cFUsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowHangAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowHangAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800DFC70-800DFCD8 0068+00 s=3 e=0 z=0  None .text      setBowNormalAnime__9daAlink_cFv */
//	800DFC88: 8015EB90 (checkBowItem__9daPy_py_cFi)
//	800DFC9C: 80452CBC (lit_6041)
//	800DFCA0: 800C0084 (changeItemBck__9daAlink_cFUsf)
//	800DFCBC: 80452CBC (lit_6041)
//	800DFCC0: 800C0084 (changeItemBck__9daAlink_cFUsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowNormalAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowNormalAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800DFCD8-800DFD6C 0094+00 s=3 e=0 z=0  None .text      setBowSight__9daAlink_cFv */
//	800DFCF8: 804061C0 (g_dComIfG_gameInfo)
//	800DFCFC: 804061C0 (g_dComIfG_gameInfo)
//	800DFD18: 800DE64C (getArrowFlyData__9daAlink_cCFPfPfi)
//	800DFD28: 800BF500 (checkSightLine__9daAlink_cFfP4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowSight() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowSight__9daAlink_cFv.s"
}
#pragma pop

/* 800DFD6C-800DFDDC 0070+00 s=1 e=0 z=0  None .text      procBowSubjectInit__9daAlink_cFv */
//	800DFD84: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DFDA0: 80452CC0 (lit_6108)
//	800DFDA4: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DFDA8: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DFDB0: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800DFDB4: 80452CC0 (lit_6108)
//	800DFDC0: 800DEB8C (setBowOrSlingStatus__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBowSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBowSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DFDDC-800DFE3C 0060+00 s=1 e=0 z=0  None .text      procBowSubject__9daAlink_cFv */
//	800DFDF4: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800DFE00: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DFE10: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	800DFE20: 800DFCD8 (setBowSight__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBowSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procBowSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800DFE3C-800DFEC0 0084+00 s=1 e=0 z=0  None .text      procBowMoveInit__9daAlink_cFv */
//	800DFE54: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800DFE6C: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800DFE88: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DFE8C: 8038E658 (m__17daAlinkHIO_bow_c0)
//	800DFE94: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800DFEA4: 800DEB8C (setBowOrSlingStatus__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBowMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBowMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DFEC0-800DFFE0 0120+00 s=1 e=0 z=0  None .text      procBowMove__9daAlink_cFv */
//	800DFEDC: 800DEE1C (cancelBowMove__9daAlink_cFv)
//	800DFF08: 800B2604 (itemButton__9daAlink_cFv)
//	800DFF1C: 80452CBC (lit_6041)
//	800DFF20: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800DFF40: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800DFF4C: 80452CBC (lit_6041)
//	800DFF54: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800DFF80: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800DFF84: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800DFFB0: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800DFFBC: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBowMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procBowMove__9daAlink_cFv.s"
}
#pragma pop

/* 800DFFE0-800E0010 0030+00 s=0 e=0 z=1  None .text      checkBoomerangLockAccept__9daAlink_cFv */
//	800DFFF0: 804061C0 (g_dComIfG_gameInfo)
//	800DFFF4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoomerangLockAccept() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoomerangLockAccept__9daAlink_cFv.s"
}
#pragma pop

/* 800E0010-800E00B0 00A0+00 s=0 e=0 z=1  None .text      getBoomSpeed__9daAlink_cFv */
//	800E0038: 800E0440 (checkBoomerangAnime__9daAlink_cCFv)
//	800E0050: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0054: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0060: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0064: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0088: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBoomSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getBoomSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800E00B0-800E00C0 0010+00 s=0 e=0 z=1  None .text      getBoomCatchSpeed__9daAlink_cCFv */
//	800E00B0: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E00B4: 8038E6C8 (m__18daAlinkHIO_boom_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBoomCatchSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBoomCatchSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800E00C0-800E011C 005C+00 s=1 e=0 z=1  None .text      getBoomFlyMax__9daAlink_cCFv */
//	800E00F0: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E00F4: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0100: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0104: 8038E6C8 (m__18daAlinkHIO_boom_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBoomFlyMax() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBoomFlyMax__9daAlink_cCFv.s"
}
#pragma pop

/* 800E011C-800E0190 0074+00 s=1 e=0 z=2  None .text      getBoomLockMax__9daAlink_cFv */
//	800E0138: 800E00C0 (getBoomFlyMax__9daAlink_cCFv)
//	800E0144: 800E01A0 (checkBossBabaRoom__9daAlink_cFv)
//	800E0150: 80452DE8 (lit_12475)
//	800E0158: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E015C: 8038E6C8 (m__18daAlinkHIO_boom_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBoomLockMax() {
    nofralloc
#include "asm/d/a/d_a_alink/getBoomLockMax__9daAlink_cFv.s"
}
#pragma pop

/* 800E0190-800E01A0 0010+00 s=0 e=0 z=1  None .text      getBoomBgThroughTime__9daAlink_cCFv */
//	800E0190: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0194: 8038E6C8 (m__18daAlinkHIO_boom_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBoomBgThroughTime() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBoomBgThroughTime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E01A0-800E01CC 002C+00 s=1 e=0 z=0  None .text      checkBossBabaRoom__9daAlink_cFv */
//	800E01AC: 80392094 (d_a_d_a_alink__stringBase0)
//	800E01B0: 80392094 (d_a_d_a_alink__stringBase0)
//	800E01B8: 8009DA60 (checkStageName__9daAlink_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBossBabaRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBossBabaRoom__9daAlink_cFv.s"
}
#pragma pop

/* 800E01CC-800E0210 0044+00 s=0 e=1 z=0  None .text cancelBoomerangLock__9daAlink_cFP10fopAc_ac_c
 */
//	800E01E0: 800E0210 (getBoomerangActor__9daAlink_cFv)
//	800E01F4: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelBoomerangLock(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/cancelBoomerangLock__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E0210-800E0244 0034+00 s=2 e=0 z=0  None .text      getBoomerangActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBoomerangActor() {
    nofralloc
#include "asm/d/a/d_a_alink/getBoomerangActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E0244-800E02B8 0074+00 s=0 e=1 z=0  None .text      checkBoomerangChargeEnd__9daAlink_cFv */
//	800E026C: 800E0440 (checkBoomerangAnime__9daAlink_cCFv)
//	800E0290: 800E0210 (getBoomerangActor__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoomerangChargeEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoomerangChargeEnd__9daAlink_cFv.s"
}
#pragma pop

/* 800E02B8-800E03D0 0118+00 s=0 e=1 z=0  None .text checkBoomerangCarry__9daAlink_cFP10fopAc_ac_c
 */
//	800E02E0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800E0308: 800ED074 (checkHorseNoUpperAnime__9daAlink_cCFv)
//	800E0340: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800E0358: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800E038C: 800E5BB4 (setGrabItemActor__9daAlink_cFP10fopAc_ac_c)
//	800E0390: 80452D94 (lit_8785)
//	800E039C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800E03A0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800E03A8: 800E3DBC (setGrabUpperAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoomerangCarry(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoomerangCarry__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E03D0-800E0440 0070+00 s=6 e=0 z=0  None .text      initBoomerangUpperAnimeSpeed__9daAlink_cFi
 */
//	800E03EC: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800E0400: 80452CC0 (lit_6108)
//	800E0418: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E041C: 8038E6C8 (m__18daAlinkHIO_boom_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initBoomerangUpperAnimeSpeed(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/initBoomerangUpperAnimeSpeed__9daAlink_cFi.s"
}
#pragma pop

/* 800E0440-800E04AC 006C+00 s=9 e=0 z=0  None .text      checkBoomerangAnime__9daAlink_cCFv */
//	800E0484: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoomerangAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoomerangAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E04AC-800E04E8 003C+00 s=13 e=0 z=0  None .text      checkBoomerangThrowAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoomerangThrowAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoomerangThrowAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E04E8-800E055C 0074+00 s=1 e=0 z=0  None .text      setBoomerangReadyQuake__9daAlink_cFv */
//	800E04FC: 80452CC0 (lit_6108)
//	800E0504: 80452CB8 (lit_6040)
//	800E0510: 804061C0 (g_dComIfG_gameInfo)
//	800E0514: 804061C0 (g_dComIfG_gameInfo)
//	800E0528: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	800E0538: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E053C: 8038E6C8 (m__18daAlinkHIO_boom_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBoomerangReadyQuake() {
    nofralloc
#include "asm/d/a/d_a_alink/setBoomerangReadyQuake__9daAlink_cFv.s"
}
#pragma pop

/* 800E055C-800E05E8 008C+00 s=2 e=0 z=0  None .text      setBoomerangReadyAnime__9daAlink_cFv */
//	800E056C: 803621DC (_savegpr_29)
//	800E0580: 800737E4 (LockonTruth__12dAttention_cFv)
//	800E05AC: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E05B0: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E05BC: 80452CC0 (lit_6108)
//	800E05C0: 80452CC4 (lit_6109)
//	800E05C4: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800E05CC: 800E04E8 (setBoomerangReadyQuake__9daAlink_cFv)
//	800E05D4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBoomerangReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBoomerangReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800E05E8-800E0630 0048+00 s=2 e=0 z=0  None .text      setThrowBoomerangAnime__9daAlink_cFv */
//	800E0604: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0608: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E060C: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800E0618:
// 800B7190 (cancelItemUseQuake__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setThrowBoomerangAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setThrowBoomerangAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800E0630-800E06B8 0088+00 s=2 e=0 z=0  None .text      setBoomerangCatchAnime__9daAlink_cFv */
//	800E064C: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0650: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0658: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800E0670:
// 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBoomerangCatchAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBoomerangCatchAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800E06B8-800E08C4 020C+00 s=1 e=0 z=0  None .text      throwBoomerang__9daAlink_cFv */
//	800E06C8: 803621DC (_savegpr_29)
//	800E072C: 80362084 (__ptmf_scall)
//	800E074C: 804061C0 (g_dComIfG_gameInfo)
//	800E0750: 804061C0 (g_dComIfG_gameInfo)
//	800E0764: 8045101C (struct_8045101C)
//	800E077C: 8045101E (struct_8045101C)
//	800E0784: 8038E840 (m__20daAlinkHIO_pickUp_c0)
//	800E0788: 8038E840 (m__20daAlinkHIO_pickUp_c0)
//	800E07A8: 8001CBA0 (fopAcM_cancelCarryNow__FP10fopAc_ac_c)
//	800E07C8: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800E0828: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800E0834: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800E0870: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800E0888: 800C38CC (procAtnActorWaitInit__9daAlink_cFv)
//	800E0894: 800C39EC (procAtnActorMoveInit__9daAlink_cFv)
//	800E089C: 80452CC0 (lit_6108)
//	800E08A8: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800E08B0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::throwBoomerang() {
    nofralloc
#include "asm/d/a/d_a_alink/throwBoomerang__9daAlink_cFv.s"
}
#pragma pop

/* 800E08C4-800E0A9C 01D8+00 s=0 e=0 z=1  None .text      returnBoomerang__9daAlink_cFi */
//	800E08E0: 804061C0 (g_dComIfG_gameInfo)
//	800E08E4: 804061C0 (g_dComIfG_gameInfo)
//	800E0974: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800E098C: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800E09EC: 800E0440 (checkBoomerangAnime__9daAlink_cCFv)
//	800E0A20: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800E0A40: 80452CC0 (lit_6108)
//	800E0A48: 80452CB8 (lit_6040)
//	800E0A54: 804061C0 (g_dComIfG_gameInfo)
//	800E0A58: 804061C0 (g_dComIfG_gameInfo)
//	800E0A6C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800E0A7C: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::returnBoomerang(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/returnBoomerang__9daAlink_cFi.s"
}
#pragma pop

/* 800E0A9C-800E0B58 00BC+00 s=2 e=0 z=0  None .text checkUpperItemActionBoomerang__9daAlink_cFv
 */
//	800E0AD4: 800B7190 (cancelItemUseQuake__9daAlink_cFi)
//	800E0ADC: 800B8930 (checkReadyItem__9daAlink_cFv)
//	800E0AEC: 800B2604 (itemButton__9daAlink_cFv)
//	800E0B2C: 800E05E8 (setThrowBoomerangAnime__9daAlink_cFv)
//	800E0B40: 800B71EC (cancelUpperItemReadyAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionBoomerang() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionBoomerang__9daAlink_cFv.s"
}
#pragma pop

/* 800E0B58-800E0BE4 008C+00 s=1 e=0 z=0  None .text
 * checkUpperItemActionBoomerangFly__9daAlink_cFv               */
//	800E0BA0: 800E0A9C (checkUpperItemActionBoomerang__9daAlink_cFv)
//	800E0BAC: 800B8930 (checkReadyItem__9daAlink_cFv)
//	800E0BBC: 800B2634 (itemTrigger__9daAlink_cFv)
//	800E0BCC: 800E055C (setBoomerangReadyAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionBoomerangFly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionBoomerangFly__9daAlink_cFv.s"
}
#pragma pop

/* 800E0BE4-800E0D8C 01A8+00 s=4 e=0 z=0  None .text      checkNextActionBoomerang__9daAlink_cFv */
//	800E0BF4: 803621DC (_savegpr_29)
//	800E0C0C: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0C10: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0C50: 800E0440 (checkBoomerangAnime__9daAlink_cCFv)
//	800E0C60: 800E055C (setBoomerangReadyAnime__9daAlink_cFv)
//	800E0C68: 800B7168 (setFastShotTimer__9daAlink_cFv)
//	800E0C78: 800737E4 (LockonTruth__12dAttention_cFv)
//	800E0CB0: 800737E4 (LockonTruth__12dAttention_cFv)
//	800E0D0C: 800F6FA4 (procCanoeBoomerangSubjectInit__9daAlink_cFv)
//	800E0D18: 800F2454 (procHorseBoomerangSubjectInit__9daAlink_cFv)
//	800E0D24: 800E0F10 (procBoomerangSubjectInit__9daAlink_cFv)
//	800E0D58: 800F70F0 (procCanoeBoomerangMoveInit__9daAlink_cFv)
//	800E0D64: 800F25B4 (procHorseBoomerangMoveInit__9daAlink_cFv)
//	800E0D70: 800E1060 (procBoomerangMoveInit__9daAlink_cFv)
//	800E0D78: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionBoomerang() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionBoomerang__9daAlink_cFv.s"
}
#pragma pop

/* 800E0D8C-800E0E64 00D8+00 s=1 e=0 z=0  None .text      checkBoomerangCatchAction__9daAlink_cFv */
//	800E0DAC: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800E0DD4: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800E0E0C: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800E0E30: 800E11D8 (procBoomerangCatchInit__9daAlink_cFv)
//	800E0E3C: 800E0630 (setBoomerangCatchAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoomerangCatchAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoomerangCatchAction__9daAlink_cFv.s"
}
#pragma pop

/* 800E0E64-800E0F10 00AC+00 s=3 e=0 z=0  None .text      setBoomerangSight__9daAlink_cFv */
//	800E0E84: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
//	800E0E94: 800E011C (getBoomLockMax__9daAlink_cFv)
//	800E0EA0: 800BF500 (checkSightLine__9daAlink_cFfP4cXyz)
//	800E0EF0: 800B26DC (setItemActionButtonStatus__9daAlink_cFUc)
//	800E0EF8: 800B26FC (itemActionTrigger__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBoomerangSight() {
    nofralloc
#include "asm/d/a/d_a_alink/setBoomerangSight__9daAlink_cFv.s"
}
#pragma pop

/* 800E0F10-800E0FA0 0090+00 s=1 e=0 z=0  None .text      procBoomerangSubjectInit__9daAlink_cFv */
//	800E0F28: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E0F3C: 80452CC0 (lit_6108)
//	800E0F4C: 800E03D0 (initBoomerangUpperAnimeSpeed__9daAlink_cFi)
//	800E0F58: 80452CC0 (lit_6108)
//	800E0F5C: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0F60: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E0F68: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800E0F6C: 804061C0 (g_dComIfG_gameInfo)
//	800E0F70: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E0FA0-800E1060 00C0+00 s=1 e=0 z=0  None .text      procBoomerangSubject__9daAlink_cFv */
//	800E0FB4: 800B72E4 (checkItemActorPointer__9daAlink_cFv)
//	800E1000: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800E100C: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800E1018: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E1028: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	800E1038: 800E0E64 (setBoomerangSight__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800E1060-800E10F4 0094+00 s=1 e=0 z=0  None .text      procBoomerangMoveInit__9daAlink_cFv */
//	800E1078: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E1090: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800E10B0: 800E03D0 (initBoomerangUpperAnimeSpeed__9daAlink_cFi)
//	800E10B8: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E10BC: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E10C4: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800E10C8: 804061C0 (g_dComIfG_gameInfo)
//	800E10CC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E10F4-800E11D8 00E4+00 s=1 e=0 z=0  None .text      procBoomerangMove__9daAlink_cFv */
//	800E1110: 800B72E4 (checkItemActorPointer__9daAlink_cFv)
//	800E112C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E1138: 80452CBC (lit_6041)
//	800E1140: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800E116C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800E1170: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800E11A8: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800E11B4: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangMove__9daAlink_cFv.s"
}
#pragma pop

/* 800E11D8-800E1248 0070+00 s=1 e=0 z=0  None .text      procBoomerangCatchInit__9daAlink_cFv */
//	800E11F0: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E120C: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1210: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1218: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E1220:
//800E0630 (setBoomerangCatchAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E1248-800E12E0 0098+00 s=1 e=0 z=0  None .text      procBoomerangCatch__9daAlink_cFv */
//	800E1270: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1274: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1290: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E12A4: 80452CBC (lit_6041)
//	800E12A8: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800E12B4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E12C4: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangCatch__9daAlink_cFv.s"
}
#pragma pop

/* 800E12E0-800E1310 0030+00 s=1 e=0 z=0  None .text      checkLv6BossRoom__9daAlink_cFv */
//	800E12EC: 80392094 (d_a_d_a_alink__stringBase0)
//	800E12F0: 80392094 (d_a_d_a_alink__stringBase0)
//	800E12F8: 8009DA60 (checkStageName__9daAlink_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLv6BossRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv6BossRoom__9daAlink_cFv.s"
}
#pragma pop

/* 800E1310-800E1320 0010+00 s=0 e=0 z=1  None .text      getCopyRodBallSpeed__9daAlink_cCFv */
//	800E1310: 8038EAFC (m__21daAlinkHIO_copyRod_c0)
//	800E1314: 8038EAFC (m__21daAlinkHIO_copyRod_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCopyRodBallSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCopyRodBallSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800E1320-800E1330 0010+00 s=0 e=0 z=1  None .text      getCopyRodBallReturnSpeed__9daAlink_cCFv
 */
//	800E1320: 8038EAFC (m__21daAlinkHIO_copyRod_c0)
//	800E1324: 8038EAFC (m__21daAlinkHIO_copyRod_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCopyRodBallReturnSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCopyRodBallReturnSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800E1330-800E1374 0044+00 s=3 e=0 z=2  None .text      getCopyRodBallDisMax__9daAlink_cCFv */
//	800E133C: 800E12E0 (checkLv6BossRoom__9daAlink_cFv)
//	800E1348: 8038EAFC (m__21daAlinkHIO_copyRod_c0)
//	800E134C: 8038EAFC (m__21daAlinkHIO_copyRod_c0)
//	800E1358: 8038EAFC (m__21daAlinkHIO_copyRod_c0)
//	800E135C: 8038EAFC (m__21daAlinkHIO_copyRod_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCopyRodBallDisMax() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCopyRodBallDisMax__9daAlink_cCFv.s"
}
#pragma pop

/* 800E1374-800E1390 001C+00 s=6 e=0 z=7  None .text      getCopyRodControllActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCopyRodControllActor() {
    nofralloc
#include "asm/d/a/d_a_alink/getCopyRodControllActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E1390-800E13AC 001C+00 s=0 e=4 z=1  None .text      getCopyRodCameraActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCopyRodCameraActor() {
    nofralloc
#include "asm/d/a/d_a_alink/getCopyRodCameraActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E13AC-800E1408 005C+00 s=2 e=0 z=0  None .text      initCopyRodUpperAnimeSpeed__9daAlink_cFi
 */
//	800E13DC: 80452CC0 (lit_6108)
//	800E13F4: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E13F8: 8038E6C8 (m__18daAlinkHIO_boom_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initCopyRodUpperAnimeSpeed(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/initCopyRodUpperAnimeSpeed__9daAlink_cFi.s"
}
#pragma pop

/* 800E1408-800E145C 0054+00 s=2 e=0 z=0  None .text      checkForestOldCentury__9daAlink_cFv */
//	800E141C: 80392094 (d_a_d_a_alink__stringBase0)
//	800E1420: 80392094 (d_a_d_a_alink__stringBase0)
//	800E1428: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800E1434: 80450D64 (struct_80450D64)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkForestOldCentury() {
    nofralloc
#include "asm/d/a/d_a_alink/checkForestOldCentury__9daAlink_cFv.s"
}
#pragma pop

/* 800E145C-800E1530 00D4+00 s=1 e=0 z=0  None .text      checkCopyRodTopUse__9daAlink_cFv */
//	800E146C: 803621D8 (_savegpr_28)
//	800E1480: 804061C0 (g_dComIfG_gameInfo)
//	800E1484: 804061C0 (g_dComIfG_gameInfo)
//	800E1490: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800E14D0: 804061C0 (g_dComIfG_gameInfo)
//	800E14D4: 804061C0 (g_dComIfG_gameInfo)
//	800E1504: 800E1408 (checkForestOldCentury__9daAlink_cFv)
//	800E151C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCopyRodTopUse() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCopyRodTopUse__9daAlink_cFv.s"
}
#pragma pop

/* 800E1530-800E158C 005C+00 s=4 e=0 z=0  None .text      checkCopyRodAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCopyRodAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCopyRodAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E158C-800E15FC 0070+00 s=2 e=0 z=0  None .text      setCopyRodControllAnime__9daAlink_cFv */
//	800E15A0: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800E15B0: 800E1374 (getCopyRodControllActor__9daAlink_cFv)
//	800E15C4: 80452CC0 (lit_6108)
//	800E15C8: 80452CC4 (lit_6109)
//	800E15CC: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800E15E0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCopyRodControllAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setCopyRodControllAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800E15FC-800E1748 014C+00 s=1 e=0 z=0  None .text
 * setCopyRodControllUpperSpeedRate__9daAlink_cFv               */
//	800E1614: 803621DC (_savegpr_29)
//	800E1628: 800737E4 (LockonTruth__12dAttention_cFv)
//	800E164C: 80452CB8 (lit_6040)
//	800E1664: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E1668: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E1688: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E168C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E16B0: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800E16BC: 80452CB8 (lit_6040)
//	800E16D0: 80452CB8 (lit_6040)
//	800E16E8: 80452DEC (lit_13119)
//	800E16EC: 80270740 (cLib_chaseF__FPfff)
//	800E16F8: 80452CB0 (lit_6025)
//	800E1734: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCopyRodControllUpperSpeedRate() {
    nofralloc
#include "asm/d/a/d_a_alink/setCopyRodControllUpperSpeedRate__9daAlink_cFv.s"
}
#pragma pop

/* 800E1748-800E1840 00F8+00 s=2 e=0 z=0  None .text      setCopyRodModel__9daAlink_cFv */
//	800E1760: 800A3C8C (setItemHeap__9daAlink_cFv)
//	800E1774: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	800E1788: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	800E179C: 800BFF70 (loadAramItemBrk__9daAlink_cFUsP8J3DModel)
//	800E17A8: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	800E17AC: 80452CC0 (lit_6108)
//	800E1810: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCopyRodModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setCopyRodModel__9daAlink_cFv.s"
}
#pragma pop

/* 800E1840-800E191C 00DC+00 s=2 e=0 z=0  None .text      setCopyRodReadyAnime__9daAlink_cFv */
//	800E1850: 803621DC (_savegpr_29)
//	800E1864: 800737E4 (LockonTruth__12dAttention_cFv)
//	800E1890: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1894: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E18A0: 80452CC0 (lit_6108)
//	800E18A4: 80452CC4 (lit_6109)
//	800E18A8: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800E18D4: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800E18E8: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800E18EC: 80452D78 (lit_8676)
//	800E1900: 800ABAE0 (initLockAt__9daAlink_cFv)
//	800E1908: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCopyRodReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setCopyRodReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800E191C-800E1A30 0114+00 s=1 e=0 z=0  None .text      throwCopyRod__9daAlink_cFv */
//	800E1984: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800E1988: 804061C0 (g_dComIfG_gameInfo)
//	800E198C: 804061C0 (g_dComIfG_gameInfo)
//	800E19C8: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800E19DC: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800E19F4: 800C38CC (procAtnActorWaitInit__9daAlink_cFv)
//	800E1A00: 800C39EC (procAtnActorMoveInit__9daAlink_cFv)
//	800E1A08: 80452CC0 (lit_6108)
//	800E1A14: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::throwCopyRod() {
    nofralloc
#include "asm/d/a/d_a_alink/throwCopyRod__9daAlink_cFv.s"
}
#pragma pop

/* 800E1A30-800E1ADC 00AC+00 s=0 e=0 z=1  None .text      returnCopyRod__9daAlink_cFv */
//	800E1A80: 80452CC0 (lit_6108)
//	800E1A88: 80452CB8 (lit_6040)
//	800E1A94: 804061C0 (g_dComIfG_gameInfo)
//	800E1A98: 804061C0 (g_dComIfG_gameInfo)
//	800E1AAC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800E1ABC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::returnCopyRod() {
    nofralloc
#include "asm/d/a/d_a_alink/returnCopyRod__9daAlink_cFv.s"
}
#pragma pop

/* 800E1ADC-800E1BB4 00D8+00 s=2 e=0 z=0  None .text      checkUpperItemActionCopyRod__9daAlink_cFv
 */
//	800E1B08: 800B8930 (checkReadyItem__9daAlink_cFv)
//	800E1B18: 800B2604 (itemButton__9daAlink_cFv)
//	800E1B58: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1B5C: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1B60: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800E1B68:
// 800E1330 (getCopyRodBallDisMax__9daAlink_cCFv) 	800E1B80: 80452D18 (lit_7308) 	800E1B9C:
// 800B71EC (cancelUpperItemReadyAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionCopyRod() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionCopyRod__9daAlink_cFv.s"
}
#pragma pop

/* 800E1BB4-800E1C44 0090+00 s=1 e=0 z=0  None .text checkUpperItemActionCopyRodFly__9daAlink_cFv
 */
//	800E1C00: 800E1ADC (checkUpperItemActionCopyRod__9daAlink_cFv)
//	800E1C0C: 800B8930 (checkReadyItem__9daAlink_cFv)
//	800E1C1C: 800B2634 (itemTrigger__9daAlink_cFv)
//	800E1C2C: 800E1840 (setCopyRodReadyAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionCopyRodFly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionCopyRodFly__9daAlink_cFv.s"
}
#pragma pop

/* 800E1C44-800E1D6C 0128+00 s=2 e=0 z=0  None .text      checkNextActionCopyRod__9daAlink_cFv */
//	800E1C54: 803621DC (_savegpr_29)
//	800E1C6C: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1C70: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1CB0: 800E1530 (checkCopyRodAnime__9daAlink_cCFv)
//	800E1CC0: 800E1840 (setCopyRodReadyAnime__9daAlink_cFv)
//	800E1CC8: 800B7168 (setFastShotTimer__9daAlink_cFv)
//	800E1CD8: 800737E4 (LockonTruth__12dAttention_cFv)
//	800E1D10: 800737E4 (LockonTruth__12dAttention_cFv)
//	800E1D44: 800E1E20 (procCopyRodSubjectInit__9daAlink_cFv)
//	800E1D50: 800E1F68 (procCopyRodMoveInit__9daAlink_cFv)
//	800E1D58: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionCopyRod() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionCopyRod__9daAlink_cFv.s"
}
#pragma pop

/* 800E1D6C-800E1E20 00B4+00 s=1 e=0 z=0  None .text      setCopyRodSight__9daAlink_cFv */
//	800E1DB8: 800E1330 (getCopyRodBallDisMax__9daAlink_cCFv)
//	800E1DC4: 800BF500 (checkSightLine__9daAlink_cFfP4cXyz)
//	800E1DEC: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	800E1DFC: 80126710 (onLockFlg__15daAlink_sight_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCopyRodSight() {
    nofralloc
#include "asm/d/a/d_a_alink/setCopyRodSight__9daAlink_cFv.s"
}
#pragma pop

/* 800E1E20-800E1EB0 0090+00 s=1 e=0 z=0  None .text      procCopyRodSubjectInit__9daAlink_cFv */
//	800E1E38: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E1E4C: 80452CC0 (lit_6108)
//	800E1E5C: 800E13AC (initCopyRodUpperAnimeSpeed__9daAlink_cFi)
//	800E1E68: 80452CC0 (lit_6108)
//	800E1E6C: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1E70: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1E78: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800E1E7C: 804061C0 (g_dComIfG_gameInfo)
//	800E1E80: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E1EB0-800E1F68 00B8+00 s=1 e=0 z=0  None .text      procCopyRodSubject__9daAlink_cFv */
//	800E1EC4: 800B72E4 (checkItemActorPointer__9daAlink_cFv)
//	800E1F08: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800E1F14: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800E1F20: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E1F30: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	800E1F40: 800E1D6C (setCopyRodSight__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800E1F68-800E1FFC 0094+00 s=1 e=0 z=0  None .text      procCopyRodMoveInit__9daAlink_cFv */
//	800E1F80: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E1F98: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800E1FB8: 800E13AC (initCopyRodUpperAnimeSpeed__9daAlink_cFi)
//	800E1FC0: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1FC4: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	800E1FCC: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800E1FD0: 804061C0 (g_dComIfG_gameInfo)
//	800E1FD4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E1FFC-800E20C8 00CC+00 s=1 e=0 z=0  None .text      procCopyRodMove__9daAlink_cFv */
//	800E2018: 800B72E4 (checkItemActorPointer__9daAlink_cFv)
//	800E2034: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E2040: 80452CBC (lit_6041)
//	800E2048: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800E2074: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800E2078: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800E2098: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800E20A4: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodMove__9daAlink_cFv.s"
}
#pragma pop

/* 800E20C8-800E21FC 0134+00 s=1 e=0 z=0  None .text      procCopyRodSwingInit__9daAlink_cFv */
//	800E20E0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E20E8: 800E1374 (getCopyRodControllActor__9daAlink_cFv)
//	800E211C: 8038EAFC (m__21daAlinkHIO_copyRod_c0)
//	800E2120: 8038EAFC (m__21daAlinkHIO_copyRod_c0)
//	800E2128: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E212C:
//80452D84 (lit_8781) 	800E2134: 80452DF0 (lit_13382) 	800E213C: 8038EAFC
//(m__21daAlinkHIO_copyRod_c0) 	800E2140: 8038EAFC (m__21daAlinkHIO_copyRod_c0) 	800E214C: 80452D38
//(lit_7807) 	800E2160: 8038EAFC (m__21daAlinkHIO_copyRod_c0) 	800E2164: 8038EAFC
//(m__21daAlinkHIO_copyRod_c0) 	800E2168: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E216C:
//80452D24 (lit_7450) 	800E2174: 80452D8C (lit_8783) 	800E217C: 8038EAFC
//(m__21daAlinkHIO_copyRod_c0) 	800E2180:
// 8038EAFC (m__21daAlinkHIO_copyRod_c0) 	800E218C: 80452D48 (lit_8130) 	800E2194: 80452CC0
// (lit_6108) 	800E21CC: 80452DD4 (lit_11442) 	800E21E0: 800ABB28 (cancelLockAt__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodSwingInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodSwingInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E21FC-800E2308 010C+00 s=1 e=0 z=0  None .text      procCopyRodSwing__9daAlink_cFv */
//	800E2224: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E2234: 800E158C (setCopyRodControllAnime__9daAlink_cFv)
//	800E2240: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E2260: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E227C: 800E158C (setCopyRodControllAnime__9daAlink_cFv)
//	800E22BC: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800E22D0: 800D19C8 (changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodSwing() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodSwing__9daAlink_cFv.s"
}
#pragma pop

/* 800E2308-800E23A4 009C+00 s=1 e=0 z=0  None .text      procCopyRodReviveInit__9daAlink_cFv */
//	800E2320: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E2358: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800E2368: 800E1748 (setCopyRodModel__9daAlink_cFv)
//	800E236C: 80452CC0 (lit_6108)
//	800E2380: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E2384: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodReviveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodReviveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E23A4-800E23FC 0058+00 s=1 e=0 z=0  None .text      procCopyRodRevive__9daAlink_cFv */
//	800E23BC: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800E23C4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E23D0: 804061C0 (g_dComIfG_gameInfo)
//	800E23D4: 804061C0 (g_dComIfG_gameInfo)
//	800E23E0: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodRevive() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodRevive__9daAlink_cFv.s"
}
#pragma pop

/* 800E23FC-800E243C 0040+00 s=6 e=0 z=0  None .text      concatMagneBootMtx__9daAlink_cFv */
//	800E2418: 803DD470 (now__14mDoMtx_stack_c)
//	800E241C: 803DD470 (now__14mDoMtx_stack_c)
//	800E2428: 803464E4 (PSMTXConcat)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::concatMagneBootMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/concatMagneBootMtx__9daAlink_cFv.s"
}
#pragma pop

/* 800E243C-800E247C 0040+00 s=1 e=0 z=0  None .text      concatMagneBootInvMtx__9daAlink_cFv */
//	800E2458: 803DD470 (now__14mDoMtx_stack_c)
//	800E245C: 803DD470 (now__14mDoMtx_stack_c)
//	800E2468: 803464E4 (PSMTXConcat)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::concatMagneBootInvMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/concatMagneBootInvMtx__9daAlink_cFv.s"
}
#pragma pop

/* 800E247C-800E24B0 0034+00 s=8 e=0 z=0  None .text      multVecMagneBootInvMtx__9daAlink_cFP4cXyz
 */
//	800E249C: 80346E4C (PSMTXMultVecSR)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::multVecMagneBootInvMtx(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/multVecMagneBootInvMtx__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 800E24B0-800E251C 006C+00 s=2 e=0 z=0  None .text commonMagneLineCheck__9daAlink_cFP4cXyzP4cXyz
 */
//	800E24CC: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800E24D0: 804061C0 (g_dComIfG_gameInfo)
//	800E24D4: 804061C0 (g_dComIfG_gameInfo)
//	800E24E0: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	800E24F0: 80031B50 (checkMagnetCode__12daTagMagne_cFR13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonMagneLineCheck(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/commonMagneLineCheck__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800E251C-800E2580 0064+00 s=2 e=0 z=0  None .text      checkBootsMoveAnime__9daAlink_cFi */
//	800E253C: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBootsMoveAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBootsMoveAnime__9daAlink_cFi.s"
}
#pragma pop

/* 800E2580-800E2738 01B8+00 s=17 e=0 z=0  None .text      setHeavyBoots__9daAlink_cFi */
//	800E25B4: 802C32F0 (setLinkBootsType__14Z2CreatureLinkFl)
//	800E25D4: 80101890 (checkZoraWearMaskDraw__9daAlink_cFv)
//	800E2600: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800E2618: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800E2628: 804061C0 (g_dComIfG_gameInfo)
//	800E262C: 804061C0 (g_dComIfG_gameInfo)
//	800E2644: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	800E2658: 800E2DC4 (cancelMagneBootsOn__9daAlink_cFv)
//	800E266C: 80452D3C (lit_7808)
//	800E2670: 800C6A48 (procFallInit__9daAlink_cFif)
//	800E2688: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800E2690: 80452CC4 (lit_6109)
//	800E269C: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800E26C4: 802C32F0 (setLinkBootsType__14Z2CreatureLinkFl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHeavyBoots(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHeavyBoots__9daAlink_cFi.s"
}
#pragma pop

/* 800E2738-800E2808 00D0+00 s=2 e=0 z=0  None .text      getMagneBootsLocalAngleY__9daAlink_cFsi */
//	800E2778: 80439A20 (sincosTable___5JMath)
//	800E277C: 80439A20 (sincosTable___5JMath)
//	800E2794: 80452CC0 (lit_6108)
//	800E27A0: 803DD470 (now__14mDoMtx_stack_c)
//	800E27A4: 803DD470 (now__14mDoMtx_stack_c)
//	800E27AC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	800E27B0: 803DD470 (now__14mDoMtx_stack_c)
//	800E27B4: 803DD470 (now__14mDoMtx_stack_c)
//	800E27BC: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	800E27C0: 803DD470 (now__14mDoMtx_stack_c)
//	800E27C4: 803DD470 (now__14mDoMtx_stack_c)
//	800E27D4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800E27D8: 803DD470 (now__14mDoMtx_stack_c)
//	800E27DC: 803DD470 (now__14mDoMtx_stack_c)
//	800E27E8: 80346D6C (PSMTXMultVec)
//	800E27F0: 80267128 (atan2sX_Z__4cXyzCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMagneBootsLocalAngleY(s16 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/getMagneBootsLocalAngleY__9daAlink_cFsi.s"
}
#pragma pop

/* 800E2808-800E2DC4 05BC+00 s=3 e=0 z=0  None .text
 * setMagneBootsMtx__9daAlink_cFP13cBgS_PolyInfoi               */
//	800E2820: 803621D8 (_savegpr_28)
//	800E2830: 803A37C0 (__vt__8cM3dGPla)
//	800E2834: 803A37C0 (__vt__8cM3dGPla)
//	800E283C: 804061C0 (g_dComIfG_gameInfo)
//	800E2840: 804061C0 (g_dComIfG_gameInfo)
//	800E284C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800E2858: 80452CC0 (lit_6108)
//	800E286C: 80347138 (PSVECSquareMag)
//	800E2870: 80452CC0 (lit_6108)
//	800E2880: 80452CE8 (lit_6846)
//	800E2888: 80452CF0 (lit_6847)
//	800E28D0: 80452CF8 (lit_6848)
//	800E28DC: 80450AE0 (__float_nan)
//	800E28E0: 80450AE0 (__float_nan)
//	800E294C: 80450AE0 (__float_nan)
//	800E2950: 80450AE0 (__float_nan)
//	800E2958: 80267674 (cM_atan2s__Fff)
//	800E2964: 803650D0 (abs)
//	800E299C: 80267128 (atan2sX_Z__4cXyzCFv)
//	800E29E0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800E29F0: 80392094 (d_a_d_a_alink__stringBase0)
//	800E29F4: 80392094 (d_a_d_a_alink__stringBase0)
//	800E29FC: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800E2A10: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800E2A20: 804061C0 (g_dComIfG_gameInfo)
//	800E2A24: 804061C0 (g_dComIfG_gameInfo)
//	800E2A34: 80035200 (onSwitch__10dSv_info_cFii)
//	800E2A44: 80347194 (PSVECDotProduct)
//	800E2A54: 80452DF4 (lit_13699)
//	800E2A6C: 80266CBC (outprod__4cXyzCFRC3Vec)
//	800E2A90: 80266F48 (normalizeZP__4cXyzFv)
//	800E2A94: 80452CB8 (lit_6040)
//	800E2AA0: 80452CC0 (lit_6108)
//	800E2AB8: 80267814 (cM_atan2f__Fff)
//	800E2ABC: 80452DF8 (lit_13700)
//	800E2AC4: 80452DFC (lit_13701)
//	800E2AD8: 80452E00 (lit_13702)
//	800E2AF4: 803DD470 (now__14mDoMtx_stack_c)
//	800E2AF8: 803DD470 (now__14mDoMtx_stack_c)
//	800E2B04: 80346878 (PSMTXRotAxisRad)
//	800E2B08: 803DD470 (now__14mDoMtx_stack_c)
//	800E2B0C: 803DD470 (now__14mDoMtx_stack_c)
//	800E2B18: 803464E4 (PSMTXConcat)
//	800E2B1C: 803DD470 (now__14mDoMtx_stack_c)
//	800E2B20: 803DD470 (now__14mDoMtx_stack_c)
//	800E2B28: 803464B0 (PSMTXCopy)
//	800E2B30: 80430D24 (BaseY__4cXyz)
//	800E2B34: 80430D24 (BaseY__4cXyz)
//	800E2B3C: 80346D6C (PSMTXMultVec)
//	800E2B48: 80452CC0 (lit_6108)
//	800E2B5C: 80347138 (PSVECSquareMag)
//	800E2B60: 80452CC0 (lit_6108)
//	800E2B70: 80452CE8 (lit_6846)
//	800E2B78: 80452CF0 (lit_6847)
//	800E2BC0: 80452CF8 (lit_6848)
//	800E2BCC: 80450AE0 (__float_nan)
//	800E2BD0: 80450AE0 (__float_nan)
//	800E2C3C: 80450AE0 (__float_nan)
//	800E2C40: 80450AE0 (__float_nan)
//	800E2C48: 80267674 (cM_atan2s__Fff)
//	800E2C54: 803650D0 (abs)
//	800E2C94: 80267128 (atan2sX_Z__4cXyzCFv)
//	800E2CA8: 803DD470 (now__14mDoMtx_stack_c)
//	800E2CAC: 803DD470 (now__14mDoMtx_stack_c)
//	800E2CB4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	800E2CB8: 803DD470 (now__14mDoMtx_stack_c)
//	800E2CBC: 803DD470 (now__14mDoMtx_stack_c)
//	800E2CCC: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	800E2CD0: 803DD470 (now__14mDoMtx_stack_c)
//	800E2CD4: 803DD470 (now__14mDoMtx_stack_c)
//	800E2CE4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800E2CE8: 803DD470 (now__14mDoMtx_stack_c)
//	800E2CEC: 803DD470 (now__14mDoMtx_stack_c)
//	800E2CF8: 803464E4 (PSMTXConcat)
//	800E2CFC: 803DD470 (now__14mDoMtx_stack_c)
//	800E2D00: 803DD470 (now__14mDoMtx_stack_c)
//	800E2D04: 80430D3C (BaseZ__4cXyz)
//	800E2D08: 80430D3C (BaseZ__4cXyz)
//	800E2D10: 80346E4C (PSMTXMultVecSR)
//	800E2D18: 80267128 (atan2sX_Z__4cXyzCFv)
//	800E2D54: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	800E2D60: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	800E2D74: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800E2D80: 803465B0 (PSMTXInverse)
//	800E2D88: 80430D24 (BaseY__4cXyz)
//	800E2D8C: 80430D24 (BaseY__4cXyz)
//	800E2D94: 80346D6C (PSMTXMultVec)
//	800E2D98: 803A37C0 (__vt__8cM3dGPla)
//	800E2D9C: 803A37C0 (__vt__8cM3dGPla)
//	800E2DB0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMagneBootsMtx(cBgS_PolyInfo* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setMagneBootsMtx__9daAlink_cFP13cBgS_PolyInfoi.s"
}
#pragma pop

/* 800E2DC4-800E2F88 01C4+00 s=7 e=0 z=0  None .text      cancelMagneBootsOn__9daAlink_cFv */
//	800E2DF0: 802C3AEC (setMagnetized__14Z2CreatureLinkFb)
//	800E2E0C: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800E2E34: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800E2E48: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800E2E60: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800E2E70: 802681E4 (cBgW_CheckBGround__Ff)
//	800E2E84: 80452D50 (lit_8247)
//	800E2E88: 80266B84 (__ml__4cXyzCFf)
//	800E2E98: 80347090 (PSVECAdd)
//	800E2EA4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800E2EA8: 804061C0 (g_dComIfG_gameInfo)
//	800E2EAC: 804061C0 (g_dComIfG_gameInfo)
//	800E2EB8: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800E2EC0: 80452D50 (lit_8247)
//	800E2F0C: 80430D24 (BaseY__4cXyz)
//	800E2F10: 80430D24 (BaseY__4cXyz)
//	800E2F2C: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800E2F40: 80452CC4 (lit_6109)
//	800E2F44: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800E2F50: 80430D24 (BaseY__4cXyz)
//	800E2F54: 80430D24 (BaseY__4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelMagneBootsOn() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelMagneBootsOn__9daAlink_cFv.s"
}
#pragma pop

/* 800E2F88-800E3048 00C0+00 s=1 e=0 z=0  None .text      checkMagneBootsFly__9daAlink_cFv */
//	800E2FB4: 80118C98 (checkDeadHP__9daAlink_cFv)
//	800E2FD0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800E2FFC: 80266F48 (normalizeZP__4cXyzFv)
//	800E3008: 80347194 (PSVECDotProduct)
//	800E300C: 80452D4C (lit_8131)
//	800E301C: 800E3218 (procMagneBootsFlyInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMagneBootsFly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkMagneBootsFly__9daAlink_cFv.s"
}
#pragma pop

/* 800E3048-800E30DC 0094+00 s=2 e=0 z=0  None .text      procBootsEquipInit__9daAlink_cFv */
//	800E3060: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E306C: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E3070: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E3074: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E307C:
//800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv) 	800E3090: 80452CBC (lit_6041) 	800E3094:
//800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf) 	800E3098: 804061C0
//(g_dComIfG_gameInfo) 	800E309C: 804061C0 (g_dComIfG_gameInfo) 	800E30BC: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBootsEquipInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBootsEquipInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E30DC-800E3218 013C+00 s=1 e=0 z=0  None .text      procBootsEquip__9daAlink_cFv */
//	800E3108: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E311C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E3128: 80452D30 (lit_7625)
//	800E312C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E3140: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	800E314C: 80452E04 (lit_13794)
//	800E3150: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E3168: 80452CC0 (lit_6108)
//	800E3170: 80452CB8 (lit_6040)
//	800E317C: 804061C0 (g_dComIfG_gameInfo)
//	800E3180: 804061C0 (g_dComIfG_gameInfo)
//	800E3194: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800E31AC: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E31B0: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E31D4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E31DC: 80452D3C (lit_7808)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBootsEquip() {
    nofralloc
#include "asm/d/a/d_a_alink/procBootsEquip__9daAlink_cFv.s"
}
#pragma pop

/* 800E3218-800E3454 023C+00 s=1 e=0 z=0  None .text      procMagneBootsFlyInit__9daAlink_cFv */
//	800E3234: 80266D30 (normZP__4cXyzCFv)
//	800E3258: 80347194 (PSVECDotProduct)
//	800E3268: 8026F3DC (__ct__8cM3dGPlaFPC4cXyzf)
//	800E3278: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800E32A4: 8026F408 (crossInfLin__8cM3dGPlaCFRC4cXyzRC4cXyzR4cXyz)
//	800E32B0: 803A37C0 (__vt__8cM3dGPla)
//	800E32B4: 803A37C0 (__vt__8cM3dGPla)
//	800E32CC: 80452D14 (lit_7307)
//	800E32D0: 80266B84 (__ml__4cXyzCFf)
//	800E32E0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800E3308: 800E24B0 (commonMagneLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800E3314: 803A37C0 (__vt__8cM3dGPla)
//	800E3318: 803A37C0 (__vt__8cM3dGPla)
//	800E3348: 802C3AEC (setMagnetized__14Z2CreatureLinkFb)
//	800E3354: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E3358: 804061C0 (g_dComIfG_gameInfo)
//	800E335C: 804061C0 (g_dComIfG_gameInfo)
//	800E336C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800E3378: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	800E3398: 80452CC0 (lit_6108)
//	800E33A4: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800E33A8: 80452CC0 (lit_6108)
//	800E33BC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E33CC: 8015EB90 (checkBowItem__9daPy_py_cFi)
//	800E33E4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800E33F0: 80110840 (offKandelaarModel__9daAlink_cFv)
//	800E33F4: 80452CC0 (lit_6108)
//	800E33FC: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E3400: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E3430: 803A37C0 (__vt__8cM3dGPla)
//	800E3434: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMagneBootsFlyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procMagneBootsFlyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E3454-800E3760 030C+00 s=1 e=0 z=0  None .text      procMagneBootsFly__9daAlink_cFv */
//	800E3470: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E3474: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E3498: 804061C0 (g_dComIfG_gameInfo)
//	800E349C: 804061C0 (g_dComIfG_gameInfo)
//	800E34AC: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800E34CC: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	800E3508: 80075880 (MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	800E3518: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800E3528: 80347090 (PSVECAdd)
//	800E3538: 800E2808 (setMagneBootsMtx__9daAlink_cFP13cBgS_PolyInfoi)
//	800E3544: 800E2DC4 (cancelMagneBootsOn__9daAlink_cFv)
//	800E3550: 80452D3C (lit_7808)
//	800E3554: 800C6A48 (procFallInit__9daAlink_cFif)
//	800E3568: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	800E3574: 8034739C (PSVECSquareDistance)
//	800E3578: 80452CC0 (lit_6108)
//	800E3588: 80452CE8 (lit_6846)
//	800E3590: 80452CF0 (lit_6847)
//	800E35D8: 80452CF8 (lit_6848)
//	800E35E4: 80450AE0 (__float_nan)
//	800E35E8: 80450AE0 (__float_nan)
//	800E3654: 80450AE0 (__float_nan)
//	800E3658: 80450AE0 (__float_nan)
//	800E365C: 80452D00 (lit_6895)
//	800E3694: 802C3AEC (setMagnetized__14Z2CreatureLinkFb)
//	800E36A0: 800DAE10 (procLandDamageInit__9daAlink_cFi)
//	800E36D8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800E36F8: 80267150 (atan2sY_XZ__4cXyzCFv)
//	800E3714: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800E371C: 80267128 (atan2sX_Z__4cXyzCFv)
//	800E3734: 80270540 (cLib_addCalcAngleS__FPsssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMagneBootsFly() {
    nofralloc
#include "asm/d/a/d_a_alink/procMagneBootsFly__9daAlink_cFv.s"
}
#pragma pop

/* 800E3760-800E3770 0010+00 s=0 e=0 z=7  None .text      getBombExplodeTime__9daAlink_cCFv */
//	800E3760: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E3764: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombExplodeTime() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombExplodeTime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3770-800E3780 0010+00 s=0 e=0 z=2  None .text      getBombGravity__9daAlink_cCFv */
//	800E3770: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E3774: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombGravity() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombGravity__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3780-800E3790 0010+00 s=0 e=0 z=2  None .text      getBombMaxFallSpeed__9daAlink_cCFv */
//	800E3780: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E3784: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombMaxFallSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombMaxFallSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3790-800E37A0 0010+00 s=0 e=0 z=1  None .text      getBombBoundRate__9daAlink_cCFv */
//	800E3790: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E3794: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombBoundRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombBoundRate__9daAlink_cCFv.s"
}
#pragma pop

/* 800E37A0-800E37B0 0010+00 s=0 e=0 z=1  None .text      getBombStopSpeedY__9daAlink_cCFv */
//	800E37A0: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E37A4: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombStopSpeedY() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombStopSpeedY__9daAlink_cCFv.s"
}
#pragma pop

/* 800E37B0-800E37C0 0010+00 s=0 e=0 z=1  None .text      getBombMaxSpeedY__9daAlink_cCFv */
//	800E37B0: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E37B4: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombMaxSpeedY() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombMaxSpeedY__9daAlink_cCFv.s"
}
#pragma pop

/* 800E37C0-800E37D0 0010+00 s=0 e=0 z=1  None .text      getBombEffScale__9daAlink_cCFv */
//	800E37C0: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E37C4: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombEffScale() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombEffScale__9daAlink_cCFv.s"
}
#pragma pop

/* 800E37D0-800E37E0 0010+00 s=0 e=0 z=1  None .text      getBombAtR__9daAlink_cCFv */
//	800E37D0: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E37D4: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombAtR() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombAtR__9daAlink_cCFv.s"
}
#pragma pop

/* 800E37E0-800E37F0 0010+00 s=0 e=0 z=1  None .text      getEnemyBombColorR__9daAlink_cCFv */
//	800E37E0: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E37E4: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getEnemyBombColorR() const {
    nofralloc
#include "asm/d/a/d_a_alink/getEnemyBombColorR__9daAlink_cCFv.s"
}
#pragma pop

/* 800E37F0-800E3800 0010+00 s=0 e=0 z=2  None .text      getBombWaterGravity__9daAlink_cCFv */
//	800E37F0: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E37F4: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombWaterGravity() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombWaterGravity__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3800-800E3810 0010+00 s=0 e=0 z=2  None .text      getBombWaterMaxFallSpeed__9daAlink_cCFv */
//	800E3800: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E3804: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombWaterMaxFallSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombWaterMaxFallSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3810-800E3820 0010+00 s=0 e=0 z=1  None .text getBombExplodeWaterEffectLimit__9daAlink_cCFv
 */
//	800E3810: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E3814: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombExplodeWaterEffectLimit() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombExplodeWaterEffectLimit__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3820-800E3830 0010+00 s=0 e=0 z=1  None .text      getBombInsectLimitAngle__9daAlink_cCFv */
//	800E3820: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E3824: 8038E714 (m__18daAlinkHIO_bomb_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombInsectLimitAngle() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombInsectLimitAngle__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3830-800E3858 0028+00 s=2 e=0 z=0  None .text      daAlink_checkLightBallA__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_checkLightBallA(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_checkLightBallA__FP10fopAc_ac_c.s"
}
#pragma pop

/* 800E3858-800E3880 0028+00 s=2 e=0 z=0  None .text      daAlink_checkLightBallB__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_checkLightBallB(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_checkLightBallB__FP10fopAc_ac_c.s"
}
#pragma pop

/* 800E3880-800E38EC 006C+00 s=1 e=0 z=0  None .text      daAlink_searchLightBall__FP10fopAc_ac_cPv
 */
//	800E3894: 8015F698 (checkCarryStartLightBallA__9daPy_py_cFv)
//	800E38A4: 800E3830 (daAlink_checkLightBallA__FP10fopAc_ac_c)
//	800E38B0: 8015F730 (checkCarryStartLightBallB__9daPy_py_cFv)
//	800E38C0: 800E3858 (daAlink_checkLightBallB__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchLightBall(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchLightBall__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800E38EC-800E3994 00A8+00 s=1 e=0 z=0  None .text      checkGrabLineCheck__9daAlink_cFv */
//	800E3900: 80452D30 (lit_7625)
//	800E3924: 8001DC68 (lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800E3930: 803A37C0 (__vt__8cM3dGPla)
//	800E3934: 803A37C0 (__vt__8cM3dGPla)
//	800E393C: 804061C0 (g_dComIfG_gameInfo)
//	800E3940: 804061C0 (g_dComIfG_gameInfo)
//	800E3948: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	800E394C: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	800E3958: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800E3960: 80268210 (cBgW_CheckBWall__Ff)
//	800E3964: 803A37C0 (__vt__8cM3dGPla)
//	800E3968: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabLineCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabLineCheck__9daAlink_cFv.s"
}
#pragma pop

/* 800E3994-800E3A14 0080+00 s=1 e=0 z=0  None .text
 * setGrabCollisionOffset__9daAlink_cFffP13cBgS_PolyInfo        */
//	800E39CC: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	800E39D8: 80268120 (ClearPi__13cBgS_PolyInfoFv)
//	800E39DC: 80452E08 (lit_14064)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabCollisionOffset(f32 param_0, f32 param_1, cBgS_PolyInfo* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabCollisionOffset__9daAlink_cFffP13cBgS_PolyInfo.s"
}
#pragma pop

/* 800E3A14-800E3A9C 0088+00 s=1 e=0 z=0  None .text exchangeGrabActor__9daAlink_cFP10fopAc_ac_c
 */
//	800E3A24: 803621DC (_savegpr_29)
//	800E3A48: 8001CBA0 (fopAcM_cancelCarryNow__FP10fopAc_ac_c)
//	800E3A5C: 800E3CF4 (checkGrabCarryActor__9daAlink_cFv)
//	800E3A7C: 800E5BB4 (setGrabItemActor__9daAlink_cFP10fopAc_ac_c)
//	800E3A88: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::exchangeGrabActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/exchangeGrabActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E3A9C-800E3BCC 0130+00 s=1 e=0 z=0  None .text      setForceGrab__9daAlink_cFP10fopAc_ac_cii
 */
//	800E3AAC: 803621DC (_savegpr_29)
//	800E3AC4: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800E3AF0: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	800E3B0C: 800ED074 (checkHorseNoUpperAnime__9daAlink_cCFv)
//	800E3B7C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800E3B88: 800E5BB4 (setGrabItemActor__9daAlink_cFP10fopAc_ac_c)
//	800E3B8C: 80452D94 (lit_8785)
//	800E3B98: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800E3B9C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800E3BA4: 800E3DBC (setGrabUpperAnime__9daAlink_cFf)
//	800E3BB8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setForceGrab(fopAc_ac_c* param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setForceGrab__9daAlink_cFP10fopAc_ac_cii.s"
}
#pragma pop

/* 800E3BCC-800E3C1C 0050+00 s=2 e=0 z=0  None .text      getGrabThrowRate__9daAlink_cFv */
//	800E3BE8: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800E3BF4: 80452CAC (lit_6023)
//	800E3C04: 80452CAC (lit_6023)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getGrabThrowRate() {
    nofralloc
#include "asm/d/a/d_a_alink/getGrabThrowRate__9daAlink_cFv.s"
}
#pragma pop

/* 800E3C1C-800E3C6C 0050+00 s=3 e=0 z=0  None .text      checkGrabThrowAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabThrowAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabThrowAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3C6C-800E3C9C 0030+00 s=25 e=0 z=0  None .text      checkGrabAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3C9C-800E3CF4 0058+00 s=5 e=0 z=0  None .text      checkGrabAnimeAndThrow__9daAlink_cCFv */
//	800E3CB8: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800E3CC8: 800E3C1C (checkGrabThrowAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabAnimeAndThrow() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabAnimeAndThrow__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3CF4-800E3D1C 0028+00 s=10 e=0 z=0  None .text      checkGrabCarryActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabCarryActor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabCarryActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E3D1C-800E3D6C 0050+00 s=1 e=0 z=0  None .text      checkGrabSlowMoveActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabSlowMoveActor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabSlowMoveActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E3D6C-800E3D94 0028+00 s=1 e=0 z=0  None .text      checkGrabHeavyActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabHeavyActor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabHeavyActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E3D94-800E3DBC 0028+00 s=2 e=0 z=0  None .text      checkGrabSideActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabSideActor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabSideActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E3DBC-800E3F20 0164+00 s=5 e=0 z=0  None .text      setGrabUpperAnime__9daAlink_cFf */
//	800E3DDC: 80452CC0 (lit_6108)
//	800E3DF4: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800E3E00: 80452CB8 (lit_6040)
//	800E3E04: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E3E08: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E3E1C: 80452CB8 (lit_6040)
//	800E3E20: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E3E24: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E3E34: 80452CC0 (lit_6108)
//	800E3E40: 800E3CF4 (checkGrabCarryActor__9daAlink_cFv)
//	800E3E54: 80452CC0 (lit_6108)
//	800E3E5C: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800E3E74: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800E3E80: 800E3D94 (checkGrabSideActor__9daAlink_cFv)
//	800E3E94: 80452CC0 (lit_6108)
//	800E3E9C: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800E3EB4: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800E3EB8: 80452CC0 (lit_6108)
//	800E3ECC: 80452CC0 (lit_6108)
//	800E3ED4: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800E3EEC: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800E3EF0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabUpperAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabUpperAnime__9daAlink_cFf.s"
}
#pragma pop

/* 800E3F20-800E3F50 0030+00 s=8 e=0 z=0  None .text      checkGrabRooster__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabRooster() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabRooster__9daAlink_cFv.s"
}
#pragma pop

/* 800E3F50-800E4BD4 0C84+00 s=1 e=0 z=0  None .text      setGrabItemPos__9daAlink_cFv */
//	800E3F68: 803621CC (_savegpr_25)
//	800E3F70: 80425508 (lit_4409)
//	800E3F74: 80425508 (lit_4409)
//	800E3F78: 80450FB8 (struct_80450FB8)
//	800E3F84: 80452CC0 (lit_6108)
//	800E3F8C: 80452E0C (lit_14614)
//	800E3F98: 80452C9C (lit_5944)
//	800E3FA0: 80009184 (__dt__4cXyzFv)
//	800E3FA4: 80009184 (__dt__4cXyzFv)
//	800E3FAC: 80361C24 (__register_global_object)
//	800E3FB4: 80450FB8 (struct_80450FB8)
//	800E3FB8: 80450FB9 (struct_80450FB8)
//	800E3FC4: 80452CC0 (lit_6108)
//	800E3FCC: 80452D78 (lit_8676)
//	800E3FD8: 80452E10 (lit_14615)
//	800E3FE0: 80009184 (__dt__4cXyzFv)
//	800E3FE4: 80009184 (__dt__4cXyzFv)
//	800E3FEC: 80361C24 (__register_global_object)
//	800E3FF4: 80450FB9 (struct_80450FB8)
//	800E3FF8: 80450FBA (struct_80450FB8)
//	800E4004: 80452E14 (lit_14616)
//	800E400C: 80452CE0 (lit_6845)
//	800E4018: 80452E0C (lit_14614)
//	800E4020: 80009184 (__dt__4cXyzFv)
//	800E4024: 80009184 (__dt__4cXyzFv)
//	800E402C: 80361C24 (__register_global_object)
//	800E4034: 80450FBA (struct_80450FB8)
//	800E4038: 80450FBB (struct_80450FB8)
//	800E4044: 80452E18 (lit_14617)
//	800E404C: 80452D28 (lit_7451)
//	800E4058: 80452E1C (lit_14618)
//	800E4060: 80009184 (__dt__4cXyzFv)
//	800E4064: 80009184 (__dt__4cXyzFv)
//	800E406C: 80361C24 (__register_global_object)
//	800E4074: 80450FBB (struct_80450FB8)
//	800E409C: 800E3CF4 (checkGrabCarryActor__9daAlink_cFv)
//	800E4170: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800E4174: 803DD470 (now__14mDoMtx_stack_c)
//	800E4178: 803DD470 (now__14mDoMtx_stack_c)
//	800E418C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800E4190: 803DD470 (now__14mDoMtx_stack_c)
//	800E4194: 803DD470 (now__14mDoMtx_stack_c)
//	800E41A0: 80346D6C (PSMTXMultVec)
//	800E41C4: 80270B90 (cLib_chaseAngleS__FPsss)
//	800E41F0: 803DD470 (now__14mDoMtx_stack_c)
//	800E41F4: 803DD470 (now__14mDoMtx_stack_c)
//	800E41F8: 803464B0 (PSMTXCopy)
//	800E4208: 80452E20 (lit_14619)
//	800E420C: 80452E24 (lit_14620)
//	800E4210: 80452CC0 (lit_6108)
//	800E4214: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800E4218: 803DD470 (now__14mDoMtx_stack_c)
//	800E421C: 803DD470 (now__14mDoMtx_stack_c)
//	800E4224: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	800E4238: 80452E28 (lit_14621)
//	800E423C: 80452D74 (lit_8502)
//	800E4240: 80452CC0 (lit_6108)
//	800E4244: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800E424C: 80452CE0 (lit_6845)
//	800E4250: 80452D1C (lit_7448)
//	800E4254: 80452CC0 (lit_6108)
//	800E4258: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800E425C: 803DD470 (now__14mDoMtx_stack_c)
//	800E4260: 803DD470 (now__14mDoMtx_stack_c)
//	800E4270: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800E4274: 803DD470 (now__14mDoMtx_stack_c)
//	800E4278: 803DD470 (now__14mDoMtx_stack_c)
//	800E4298: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	800E42C4: 80270B90 (cLib_chaseAngleS__FPsss)
//	800E430C: 80452CB0 (lit_6025)
//	800E432C: 80452E2C (lit_14622)
//	800E4380: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800E438C: 80452C98 (lit_5943)
//	800E4390: 80266B84 (__ml__4cXyzCFf)
//	800E43AC: 803DD470 (now__14mDoMtx_stack_c)
//	800E43B0: 803DD470 (now__14mDoMtx_stack_c)
//	800E43C0: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	800E43E8: 80452D34 (lit_7710)
//	800E4400: 80452CB8 (lit_6040)
//	800E4408: 80266B84 (__ml__4cXyzCFf)
//	800E4418: 80266B84 (__ml__4cXyzCFf)
//	800E4428: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800E4444: 803DD470 (now__14mDoMtx_stack_c)
//	800E4448: 803DD470 (now__14mDoMtx_stack_c)
//	800E4454: 80346D6C (PSMTXMultVec)
//	800E4464: 80452CB0 (lit_6025)
//	800E4490: 80452CB8 (lit_6040)
//	800E4498: 80266B84 (__ml__4cXyzCFf)
//	800E44A8: 80266B84 (__ml__4cXyzCFf)
//	800E44B8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800E44D4: 803DD470 (now__14mDoMtx_stack_c)
//	800E44D8: 803DD470 (now__14mDoMtx_stack_c)
//	800E44E4: 80346D6C (PSMTXMultVec)
//	800E44F4: 80452CB8 (lit_6040)
//	800E4500: 80266B84 (__ml__4cXyzCFf)
//	800E4510: 80266B84 (__ml__4cXyzCFf)
//	800E4520: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800E453C: 803DD470 (now__14mDoMtx_stack_c)
//	800E4540: 803DD470 (now__14mDoMtx_stack_c)
//	800E454C: 80346D6C (PSMTXMultVec)
//	800E455C: 80347090 (PSVECAdd)
//	800E4590: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800E459C: 80452C98 (lit_5943)
//	800E45A0: 80266B84 (__ml__4cXyzCFf)
//	800E45C0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800E45C8: 800E23FC (concatMagneBootMtx__9daAlink_cFv)
//	800E45CC: 803DD470 (now__14mDoMtx_stack_c)
//	800E45D0: 803DD470 (now__14mDoMtx_stack_c)
//	800E45E0: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	800E45E4: 80452CC0 (lit_6108)
//	800E45EC: 80452E14 (lit_14616)
//	800E45F4: 80452E30 (lit_14623)
//	800E4604: 80452E34 (lit_14624)
//	800E4610: 803DD470 (now__14mDoMtx_stack_c)
//	800E4614: 803DD470 (now__14mDoMtx_stack_c)
//	800E4620: 80346D6C (PSMTXMultVec)
//	800E4640: 803918DC (localSidePos)
//	800E4644: 803918DC (localSidePos)
//	800E464C: 80346D6C (PSMTXMultVec)
//	800E4658: 80452CB8 (lit_6040)
//	800E4664: 80266B84 (__ml__4cXyzCFf)
//	800E4674: 80266B84 (__ml__4cXyzCFf)
//	800E4684: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800E46A8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800E46B4: 80452CB8 (lit_6040)
//	800E46C0: 80452CB0 (lit_6025)
//	800E4704: 80452CC0 (lit_6108)
//	800E4720: 80452E38 (lit_14625)
//	800E4728: 80452E14 (lit_14616)
//	800E4738: 80452E3C (lit_14626)
//	800E474C: 80452E40 (lit_14627)
//	800E475C: 803DD470 (now__14mDoMtx_stack_c)
//	800E4760: 803DD470 (now__14mDoMtx_stack_c)
//	800E476C: 80346E4C (PSMTXMultVecSR)
//	800E477C: 80347090 (PSVECAdd)
//	800E47A4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800E47CC: 80346E4C (PSMTXMultVecSR)
//	800E47E4: 80346E4C (PSMTXMultVecSR)
//	800E47F4: 80347090 (PSVECAdd)
//	800E47FC: 80430D24 (BaseY__4cXyz)
//	800E4800: 80430D24 (BaseY__4cXyz)
//	800E4808: 80346E4C (PSMTXMultVecSR)
//	800E4818: 80266B84 (__ml__4cXyzCFf)
//	800E4828: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800E4850: 800E5B6C (grabLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800E4864: 8034739C (PSVECSquareDistance)
//	800E4868: 80452CC0 (lit_6108)
//	800E4878: 80452CE8 (lit_6846)
//	800E4880: 80452CF0 (lit_6847)
//	800E48C8: 80452CF8 (lit_6848)
//	800E48D4: 80450AE0 (__float_nan)
//	800E48D8: 80450AE0 (__float_nan)
//	800E4944: 80450AE0 (__float_nan)
//	800E4948: 80450AE0 (__float_nan)
//	800E4960: 8034739C (PSVECSquareDistance)
//	800E4964: 80452CC0 (lit_6108)
//	800E4974: 80452CE8 (lit_6846)
//	800E497C: 80452CF0 (lit_6847)
//	800E49C4: 80452CF8 (lit_6848)
//	800E49D0: 80450AE0 (__float_nan)
//	800E49D4: 80450AE0 (__float_nan)
//	800E4A40: 80450AE0 (__float_nan)
//	800E4A44: 80450AE0 (__float_nan)
//	800E4A50: 80452CC0 (lit_6108)
//	800E4A74: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	800E4AA4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800E4AA8: 804061C0 (g_dComIfG_gameInfo)
//	800E4AAC: 804061C0 (g_dComIfG_gameInfo)
//	800E4AB8: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800E4AC8: 80452CC0 (lit_6108)
//	800E4AD8: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	800E4AF0: 80452D44 (lit_7977)
//	800E4B58: 803DD470 (now__14mDoMtx_stack_c)
//	800E4B5C: 803DD470 (now__14mDoMtx_stack_c)
//	800E4B60: 803464B0 (PSMTXCopy)
//	800E4B64: 80452D74 (lit_8502)
//	800E4B68: 80452D6C (lit_8473)
//	800E4B6C: 80452CB8 (lit_6040)
//	800E4B70: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800E4B74: 803DD470 (now__14mDoMtx_stack_c)
//	800E4B78: 803DD470 (now__14mDoMtx_stack_c)
//	800E4B88: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	800E4B8C: 803DD470 (now__14mDoMtx_stack_c)
//	800E4B90: 803DD470 (now__14mDoMtx_stack_c)
//	800E4BB0: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	800E4BC0: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabItemPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabItemPos__9daAlink_cFv.s"
}
#pragma pop

/* 800E4BD4-800E4DEC 0218+00 s=16 e=0 z=0  None .text      freeGrabItem__9daAlink_cFv */
//	800E4BE4: 803621DC (_savegpr_29)
//	800E4BF8: 804061C0 (g_dComIfG_gameInfo)
//	800E4BFC: 804061C0 (g_dComIfG_gameInfo)
//	800E4C2C: 8001CBA0 (fopAcM_cancelCarryNow__FP10fopAc_ac_c)
//	800E4C40: 800E3CF4 (checkGrabCarryActor__9daAlink_cFv)
//	800E4C74: 80452CC0 (lit_6108)
//	800E4CBC: 800E5B6C (grabLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800E4CE0: 803A37C0 (__vt__8cM3dGPla)
//	800E4CE4: 803A37C0 (__vt__8cM3dGPla)
//	800E4CF8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800E4D00: 80268210 (cBgW_CheckBWall__Ff)
//	800E4D14: 80452D30 (lit_7625)
//	800E4D18: 80266B84 (__ml__4cXyzCFf)
//	800E4D28: 80347090 (PSVECAdd)
//	800E4D2C: 803A37C0 (__vt__8cM3dGPla)
//	800E4D30: 803A37C0 (__vt__8cM3dGPla)
//	800E4D3C: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800E4D44: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800E4D80: 80452CC4 (lit_6109)
//	800E4D84: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800E4D8C: 80451160 (Zero__5csXyz)
//	800E4D98: 80451160 (Zero__5csXyz)
//	800E4DB4: 80451160 (Zero__5csXyz)
//	800E4DD8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::freeGrabItem() {
    nofralloc
#include "asm/d/a/d_a_alink/freeGrabItem__9daAlink_cFv.s"
}
#pragma pop

/* 800E4DEC-800E4FA8 01BC+00 s=1 e=0 z=0  None .text      setGrabUpperSpeedRate__9daAlink_cFv */
//	800E4E04: 803621DC (_savegpr_29)
//	800E4E34: 800F3BB0 (getCanoeMaxSpeed__9daAlink_cCFv)
//	800E4E50: 80452E44 (lit_14760)
//	800E4E78: 800737E4 (LockonTruth__12dAttention_cFv)
//	800E4EA0: 800E3CF4 (checkGrabCarryActor__9daAlink_cFv)
//	800E4EAC: 80452CB8 (lit_6040)
//	800E4EC4: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E4EC8: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E4EE8: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E4EEC: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E4F10: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	800E4F1C: 80452CB8 (lit_6040)
//	800E4F30: 80452CB8 (lit_6040)
//	800E4F48: 80452DEC (lit_13119)
//	800E4F4C: 80270740 (cLib_chaseF__FPfff)
//	800E4F58: 80452CB0 (lit_6025)
//	800E4F94: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabUpperSpeedRate() {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabUpperSpeedRate__9daAlink_cFv.s"
}
#pragma pop

/* 800E4FA8-800E5150 01A8+00 s=7 e=0 z=0  None .text      setCarryArmAngle__9daAlink_cFff */
//	800E4FC8: 80452CC0 (lit_6108)
//	800E4FDC: 80452E48 (lit_14781)
//	800E5018: 80452CB0 (lit_6025)
//	800E5034: 80452E4C (lit_14782)
//	800E5074: 80452E50 (lit_14783)
//	800E509C: 80452E54 (lit_14784)
//	800E50D8: 80452E58 (lit_14785)
//	800E50F8: 800E3F20 (checkGrabRooster__9daAlink_cFv)
//	800E5104: 80452E5C (lit_14786)
//	800E511C: 80452E60 (lit_14787)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCarryArmAngle(f32 param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setCarryArmAngle__9daAlink_cFff.s"
}
#pragma pop

/* 800E5150-800E5170 0020+00 s=1 e=0 z=0  None .text      checkGrabNotThrow__9daAlink_cFv */
//	800E515C: 800E3CF4 (checkGrabCarryActor__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabNotThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabNotThrow__9daAlink_cFv.s"
}
#pragma pop

/* 800E5170-800E53AC 023C+00 s=1 e=0 z=0  None .text      checkNextActionGrab__9daAlink_cFv */
//	800E5194: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	800E51A0: 80452CC0 (lit_6108)
//	800E51A4: 80452CB8 (lit_6040)
//	800E51A8: 800E4FA8 (setCarryArmAngle__9daAlink_cFff)
//	800E51E4: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800E51FC: 801182D4 (checkGrabTalkActor__9daAlink_cFP10fopAc_ac_c)
//	800E520C: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	800E522C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800E5238: 800B3500 (checkAttentionState__9daAlink_cFv)
//	800E5248: 800E3BCC (getGrabThrowRate__9daAlink_cFv)
//	800E5260: 800E5150 (checkGrabNotThrow__9daAlink_cFv)
//	800E5274: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800E5284: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800E5294: 804061C0 (g_dComIfG_gameInfo)
//	800E5298: 804061C0 (g_dComIfG_gameInfo)
//	800E52B8: 8001B244 (fopAcM_orderDoorEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs)
//	800E52CC: 800B7BF8 (orderTalk__9daAlink_cFi)
//	800E530C: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	800E532C: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	800E534C: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	800E5358: 804061C0 (g_dComIfG_gameInfo)
//	800E535C: 804061C0 (g_dComIfG_gameInfo)
//	800E5370: 800E672C (procGrabPutInit__9daAlink_cFv)
//	800E5388: 800E63F0 (procGrabThrowInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionGrab() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionGrab__9daAlink_cFv.s"
}
#pragma pop

/* 800E53AC-800E53F8 004C+00 s=2 e=0 z=0  None .text      initGrabNextMode__9daAlink_cFv */
//	800E53C0: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800E53D0: 80452CBC (lit_6041)
//	800E53D4: 800E3DBC (setGrabUpperAnime__9daAlink_cFf)
//	800E53E0: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initGrabNextMode() {
    nofralloc
#include "asm/d/a/d_a_alink/initGrabNextMode__9daAlink_cFv.s"
}
#pragma pop

/* 800E53F8-800E57AC 03B4+00 s=3 e=0 z=0  None .text      setGrabItemThrow__9daAlink_cFv */
//	800E5430: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E5434: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E5458: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E545C: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E546C: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E5470: 8038E714 (m__18daAlinkHIO_bomb_c0)
//	800E5484: 80452CC0 (lit_6108)
//	800E5498: 803DD470 (now__14mDoMtx_stack_c)
//	800E549C: 803DD470 (now__14mDoMtx_stack_c)
//	800E54A0: 803464B0 (PSMTXCopy)
//	800E54A4: 803DD470 (now__14mDoMtx_stack_c)
//	800E54A8: 803DD470 (now__14mDoMtx_stack_c)
//	800E54B0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800E54B4: 803DD470 (now__14mDoMtx_stack_c)
//	800E54B8: 803DD470 (now__14mDoMtx_stack_c)
//	800E54C4: 80346E4C (PSMTXMultVecSR)
//	800E54D0: 80452CC0 (lit_6108)
//	800E54E4: 80347138 (PSVECSquareMag)
//	800E54E8: 80452CC0 (lit_6108)
//	800E54F8: 80452CE8 (lit_6846)
//	800E5500: 80452CF0 (lit_6847)
//	800E5548: 80452CF8 (lit_6848)
//	800E5554: 80450AE0 (__float_nan)
//	800E5558: 80450AE0 (__float_nan)
//	800E55C4: 80450AE0 (__float_nan)
//	800E55C8: 80450AE0 (__float_nan)
//	800E55DC: 80267128 (atan2sX_Z__4cXyzCFv)
//	800E55E4: 80452CC0 (lit_6108)
//	800E55EC: 80452E64 (lit_14954)
//	800E55F4: 80452E68 (lit_14955)
//	800E55FC: 803DD470 (now__14mDoMtx_stack_c)
//	800E5600: 803DD470 (now__14mDoMtx_stack_c)
//	800E560C: 80346E4C (PSMTXMultVecSR)
//	800E561C: 80347090 (PSVECAdd)
//	800E5634: 800BB084 (getBodyAngleXAtnActor__9daAlink_cFi)
//	800E5644: 80439A20 (sincosTable___5JMath)
//	800E5648: 80439A20 (sincosTable___5JMath)
//	800E5654: 80452E68 (lit_14955)
//	800E5668: 80452E64 (lit_14954)
//	800E56D4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800E56F8: 800E247C (multVecMagneBootInvMtx__9daAlink_cFP4cXyz)
//	800E5700: 80267128 (atan2sX_Z__4cXyzCFv)
//	800E5790: 800E4BD4 (freeGrabItem__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabItemThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabItemThrow__9daAlink_cFv.s"
}
#pragma pop

/* 800E57AC-800E5830 0084+00 s=2 e=0 z=0  None .text      checkUpperGrabItemThrow__9daAlink_cFf */
//	800E57D0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E57E8: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800E57FC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E580C: 800E53F8 (setGrabItemThrow__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperGrabItemThrow(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperGrabItemThrow__9daAlink_cFf.s"
}
#pragma pop

/* 800E5830-800E5B6C 033C+00 s=2 e=0 z=0  None .text
 * putObjLineCheck__9daAlink_cFR11dBgS_LinChkP4cXyzP10fopAc_ac_c */
//	800E5848: 803621D8 (_savegpr_28)
//	800E585C: 800AA5E8 (checkNoCollisionCorret__9daAlink_cFv)
//	800E5878: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800E587C: 804061C0 (g_dComIfG_gameInfo)
//	800E5880: 804061C0 (g_dComIfG_gameInfo)
//	800E588C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	800E589C: 80075D0C (dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo)
//	800E58B4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800E58D4: 80347138 (PSVECSquareMag)
//	800E58D8: 80452CC0 (lit_6108)
//	800E58E8: 80452CE8 (lit_6846)
//	800E58F0: 80452CF0 (lit_6847)
//	800E5938: 80452CF8 (lit_6848)
//	800E5944: 80450AE0 (__float_nan)
//	800E5948: 80450AE0 (__float_nan)
//	800E59B4: 80450AE0 (__float_nan)
//	800E59B8: 80450AE0 (__float_nan)
//	800E59CC: 80452CC0 (lit_6108)
//	800E59E0: 80347138 (PSVECSquareMag)
//	800E59E4: 80452CC0 (lit_6108)
//	800E59F4: 80452CE8 (lit_6846)
//	800E59FC: 80452CF0 (lit_6847)
//	800E5A44: 80452CF8 (lit_6848)
//	800E5A50: 80450AE0 (__float_nan)
//	800E5A54: 80450AE0 (__float_nan)
//	800E5AC0: 80450AE0 (__float_nan)
//	800E5AC4: 80450AE0 (__float_nan)
//	800E5AC8: 80452D88 (lit_8782)
//	800E5B58: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::putObjLineCheck(dBgS_LinChk& param_0, cXyz* param_1, fopAc_ac_c* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/putObjLineCheck__9daAlink_cFR11dBgS_LinChkP4cXyzP10fopAc_ac_c.s"
}
#pragma pop

/* 800E5B6C-800E5BB4 0048+00 s=3 e=0 z=0  None .text      grabLineCheck__9daAlink_cFP4cXyzP4cXyz */
//	800E5B88: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800E5B8C: 804061C0 (g_dComIfG_gameInfo)
//	800E5B90: 804061C0 (g_dComIfG_gameInfo)
//	800E5B9C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::grabLineCheck(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/grabLineCheck__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800E5BB4-800E5CBC 0108+00 s=6 e=0 z=0  None .text      setGrabItemActor__9daAlink_cFP10fopAc_ac_c
 */
//	800E5BD8: 8001CB48 (fopAcM_setCarryNow__FP10fopAc_ac_ci)
//	800E5BE4: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800E5BEC: 80078E74 (ClrObj__16dBgS_PolyPassChkFv)
//	800E5BF4: 80078EC8 (ClrBomb__16dBgS_PolyPassChkFv)
//	800E5BFC: 80078F88 (ClrStatue__16dBgS_PolyPassChkFv)
//	800E5C04: 80078EA4 (ClrLink__16dBgS_PolyPassChkFv)
//	800E5C0C: 80078E74 (ClrObj__16dBgS_PolyPassChkFv)
//	800E5C14: 80078EC8 (ClrBomb__16dBgS_PolyPassChkFv)
//	800E5C1C: 80078F88 (ClrStatue__16dBgS_PolyPassChkFv)
//	800E5C24: 80078EA4 (ClrLink__16dBgS_PolyPassChkFv)
//	800E5C40: 80078EBC (SetBomb__16dBgS_PolyPassChkFv)
//	800E5C48: 80078EBC (SetBomb__16dBgS_PolyPassChkFv)
//	800E5C5C: 80078F7C (SetStatue__16dBgS_PolyPassChkFv)
//	800E5C64: 80078F7C (SetStatue__16dBgS_PolyPassChkFv)
//	800E5C84: 80078E98 (SetLink__16dBgS_PolyPassChkFv)
//	800E5C8C: 80078E98 (SetLink__16dBgS_PolyPassChkFv)
//	800E5C98: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	800E5CA0: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabItemActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabItemActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E5CBC-800E5EC8 020C+00 s=2 e=0 z=0  None .text      procGrabReadyInit__9daAlink_cFv */
//	800E5CE4: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800E5CFC: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800E5D08: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E5D14: 800E5BB4 (setGrabItemActor__9daAlink_cFP10fopAc_ac_c)
//	800E5D20: 8001AA94 (fopAcM_searchActorDistanceXZ2__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800E5D24: 80452CB8 (lit_6040)
//	800E5D38: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800E5D60: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800E5D7C: 80452CC0 (lit_6108)
//	800E5D88: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800E5D9C: 80452CBC (lit_6041)
//	800E5DA0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800E5DA8: 800E3CF4 (checkGrabCarryActor__9daAlink_cFv)
//	800E5DBC: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E5DC0: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E5DD4: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800E5DE0: 80452CB8 (lit_6040)
//	800E5DE4: 80452D34 (lit_7710)
//	800E5E00: 80452D24 (lit_7450)
//	800E5E0C: 80452E6C (lit_15106)
//	800E5E18: 80452CB8 (lit_6040)
//	800E5E2C: 80452CC0 (lit_6108)
//	800E5E3C: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E5E40: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E5E44: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E5E48:
//80452CB8 (lit_6040) 	800E5E4C: 8038EC48 (m__18daAlinkHIO_grab_c0) 	800E5E50: 8038EC48
//(m__18daAlinkHIO_grab_c0) 	800E5E54: 80452CB0 (lit_6025)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E5EC8-800E5FD0 0108+00 s=1 e=0 z=0  None .text      procGrabReady__9daAlink_cFv */
//	800E5EEC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E5EF8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E5F18: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E5F1C: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E5F3C: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800E5F50: 800E5FD0 (procGrabUpInit__9daAlink_cFv)
//	800E5F70: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E5F74: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E5F84: 80452CC0 (lit_6108)
//	800E5F88: 800E4FA8 (setCarryArmAngle__9daAlink_cFff)
//	800E5F94: 80452CC0 (lit_6108)
//	800E5FA0: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E5FA4: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E5FB4: 800E4FA8 (setCarryArmAngle__9daAlink_cFff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabReady__9daAlink_cFv.s"
}
#pragma pop

/* 800E5FD0-800E6230 0260+00 s=1 e=0 z=0  None .text      procGrabUpInit__9daAlink_cFv */
//	800E5FF0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E5FF8: 800E3CF4 (checkGrabCarryActor__9daAlink_cFv)
//	800E6004: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6008: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6018: 80452D34 (lit_7710)
//	800E6024: 80452CC0 (lit_6108)
//	800E6028: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800E6038: 80452CB8 (lit_6040)
//	800E603C: 80452CC0 (lit_6108)
//	800E6040: 800E4FA8 (setCarryArmAngle__9daAlink_cFff)
//	800E6050: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6054: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E605C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E606C:
//80452CC0 (lit_6108) 	800E6070: 80452CB8 (lit_6040) 	800E6074: 800E4FA8
//(setCarryArmAngle__9daAlink_cFff) 	800E6084: 80266B34 (__mi__4cXyzCFRC3Vec) 	800E60A4: 80452CC0
//(lit_6108) 	800E60B4: 80347138 (PSVECSquareMag) 	800E60B8: 80452CC0 (lit_6108) 	800E60C8: 80452CE8
//(lit_6846) 	800E60D0: 80452CF0 (lit_6847) 	800E6118: 80452CF8 (lit_6848) 	800E6124: 80450AE0
//(__float_nan) 	800E6128: 80450AE0 (__float_nan) 	800E6194: 80450AE0 (__float_nan) 	800E6198: 80450AE0
//(__float_nan) 	800E619C: 80452E70 (lit_15188) 	800E61A4: 80452E30 (lit_14623) 	800E61FC: 800198C4
//(fopAcM_setStageLayer__FPv) 	800E620C: 80452DC0 (lit_10193)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E6230-800E637C 014C+00 s=1 e=0 z=0  None .text      procGrabUp__9daAlink_cFv */
//	800E6240: 803621DC (_savegpr_29)
//	800E625C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E6268: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E6278: 80452CA4 (lit_6021)
//	800E6288: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E628C: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E62BC: 800E6D6C (procGrabReboundInit__9daAlink_cFi)
//	800E62C8: 800E53AC (initGrabNextMode__9daAlink_cFv)
//	800E62EC: 80452CC0 (lit_6108)
//	800E62FC: 80452CB0 (lit_6025)
//	800E6324: 80452CB8 (lit_6040)
//	800E6328: 80452D34 (lit_7710)
//	800E6334: 80452CB0 (lit_6025)
//	800E635C: 800E4FA8 (setCarryArmAngle__9daAlink_cFff)
//	800E6368: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabUp__9daAlink_cFv.s"
}
#pragma pop

/* 800E637C-800E63F0 0074+00 s=1 e=0 z=0  None .text      procGrabMiss__9daAlink_cFv */
//	800E63A0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E63AC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E63D4: 800E6EEC (procGrabStandInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabMiss() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabMiss__9daAlink_cFv.s"
}
#pragma pop

/* 800E63F0-800E65F8 0208+00 s=1 e=0 z=0  None .text      procGrabThrowInit__9daAlink_cFi */
//	800E6400: 803621DC (_savegpr_29)
//	800E640C: 8038D658 (lit_3757)
//	800E6410: 8038D658 (lit_3757)
//	800E6420: 800E3D6C (checkGrabHeavyActor__9daAlink_cFv)
//	800E6440: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800E6444:
// 80452D48 (lit_8130) 	800E6470: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800E6474:
// 80452D24 (lit_7450) 	800E6494: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800E6498:
// 80452D3C (lit_7808) 	800E64B8: 800C2DA4
//(commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC) 	800E64D0: 800E3D6C
//(checkGrabHeavyActor__9daAlink_cFv) 	800E64EC: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E64F0:
//80452D48 (lit_8130) 	800E6514: 800E3D94 (checkGrabSideActor__9daAlink_cFv) 	800E6550: 800ACFE0
//(setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff) 	800E6568: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800E656C:
// 80452D24 (lit_7450) 	800E659C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E65A0:
//80452D3C (lit_7808) 	800E65C0: 80425544 (l_halfAtnWaitBaseAnime) 	800E65C4: 80425544
//(l_halfAtnWaitBaseAnime) 	800E65E4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabThrowInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabThrowInit__9daAlink_cFi.s"
}
#pragma pop

/* 800E65F8-800E672C 0134+00 s=1 e=0 z=0  None .text      procGrabThrow__9daAlink_cFv */
//	800E6648: 80452CC0 (lit_6108)
//	800E664C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E6650: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E6658: 80270740 (cLib_chaseF__FPfff)
//	800E6664: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E6674: 800E53F8 (setGrabItemThrow__9daAlink_cFv)
//	800E667C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E66A4: 800B93F4 (swordEquip__9daAlink_cFi)
//	800E66B0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E66F0: 800B93F4 (swordEquip__9daAlink_cFi)
//	800E66FC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E670C: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabThrow__9daAlink_cFv.s"
}
#pragma pop

/* 800E672C-800E6914 01E8+00 s=2 e=0 z=0  None .text      procGrabPutInit__9daAlink_cFv */
//	800E675C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E6770: 80452CC0 (lit_6108)
//	800E677C: 80452E74 (lit_15341)
//	800E6788: 800E3CF4 (checkGrabCarryActor__9daAlink_cFv)
//	800E67A4: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E67A8: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E67B0: 80452D34 (lit_7710)
//	800E67BC: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800E67C8: 80452CB8 (lit_6040)
//	800E67D0: 80452CB0 (lit_6025)
//	800E67EC: 80452D34 (lit_7710)
//	800E6834: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6838: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6844: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E6848:
//80452CB8 (lit_6040) 	800E6850: 80452CB0 (lit_6025) 	800E686C: 8038EC48 (m__18daAlinkHIO_grab_c0)
//800E6870: 8038EC48 (m__18daAlinkHIO_grab_c0) 	800E68D8: 80270C04
// (cLib_targetAngleY__FPC3VecPC3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabPutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabPutInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E6914-800E6A9C 0188+00 s=1 e=0 z=0  None .text      procGrabPut__9daAlink_cFv */
//	800E6924: 803621DC (_savegpr_29)
//	800E6944: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800E6958: 80439A20 (sincosTable___5JMath)
//	800E695C: 80439A20 (sincosTable___5JMath)
//	800E69B0: 800E5830 (putObjLineCheck__9daAlink_cFR11dBgS_LinChkP4cXyzP10fopAc_ac_c)
//	800E69D4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E69E8: 80452CC0 (lit_6108)
//	800E69F4: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	800E69FC: 800E6EEC (procGrabStandInit__9daAlink_cFv)
//	800E6A20: 80452CC0 (lit_6108)
//	800E6A38: 80452CB8 (lit_6040)
//	800E6A40: 80452D34 (lit_7710)
//	800E6A50: 800E4FA8 (setCarryArmAngle__9daAlink_cFff)
//	800E6A5C: 80452CC0 (lit_6108)
//	800E6A68: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6A6C: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6A7C: 800E4FA8 (setCarryArmAngle__9daAlink_cFff)
//	800E6A88: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabPut() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabPut__9daAlink_cFv.s"
}
#pragma pop

/* 800E6A9C-800E6C34 0198+00 s=2 e=0 z=0  None .text      procGrabWaitInit__9daAlink_cFv */
//	800E6AB4: 803621D8 (_savegpr_28)
//	800E6ACC: 800E6D6C (procGrabReboundInit__9daAlink_cFi)
//	800E6B00: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E6B14: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800E6B18: 8038D664 (m__19daAlinkHIO_basic_c0)
//	800E6B24: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800E6B34: 80452CBC (lit_6041)
//	800E6B38: 800E3DBC (setGrabUpperAnime__9daAlink_cFf)
//	800E6B48: 80452CB8 (lit_6040)
//	800E6B4C: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800E6B5C: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	800E6B68: 80452CB8 (lit_6040)
//	800E6B6C: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E6B70: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E6B84: 80452CB8 (lit_6040)
//	800E6B88: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E6B8C: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	800E6BA8: 800737E4 (LockonTruth__12dAttention_cFv)
//	800E6BEC: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800E6BFC: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	800E6C08: 80452CC0 (lit_6108)
//	800E6C20: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E6C34-800E6D6C 0138+00 s=1 e=0 z=0  None .text      procGrabWait__9daAlink_cFv */
//	800E6C44: 803621DC (_savegpr_29)
//	800E6C58: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800E6C6C: 80452CC4 (lit_6109)
//	800E6C70: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800E6C7C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E6C8C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E6C98: 80452E78 (lit_15460)
//	800E6CA8: 80452CB0 (lit_6025)
//	800E6CD8: 800737E4 (LockonTruth__12dAttention_cFv)
//	800E6D18: 80452CBC (lit_6041)
//	800E6D1C: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	800E6D28: 80452CBC (lit_6041)
//	800E6D2C: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	800E6D38: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800E6D44: 80452CC0 (lit_6108)
//	800E6D58: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabWait__9daAlink_cFv.s"
}
#pragma pop

/* 800E6D6C-800E6E0C 00A0+00 s=2 e=0 z=0  None .text      procGrabReboundInit__9daAlink_cFi */
//	800E6D8C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E6D98: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6D9C: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6DA4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E6DA8:
//80452CC0 (lit_6108) 	800E6DC0: 80452CC0 (lit_6108) 	800E6DC8: 80452CB8 (lit_6040) 	800E6DD4:
//804061C0 (g_dComIfG_gameInfo) 	800E6DD8: 804061C0 (g_dComIfG_gameInfo) 	800E6DEC: 8006FA24
//(StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabReboundInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabReboundInit__9daAlink_cFi.s"
}
#pragma pop

/* 800E6E0C-800E6EEC 00E0+00 s=1 e=0 z=0  None .text      procGrabRebound__9daAlink_cFv */
//	800E6E38: 80452CBC (lit_6041)
//	800E6E3C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800E6E48: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E6E64: 80452DA0 (lit_9054)
//	800E6E74: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6E78: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6E80: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800E6E94: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E6EA4: 80452CA4 (lit_6021)
//	800E6EB4: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6EB8: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6ECC: 800E53AC (initGrabNextMode__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabRebound() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabRebound__9daAlink_cFv.s"
}
#pragma pop

/* 800E6EEC-800E6FE0 00F4+00 s=2 e=0 z=0  None .text      procGrabStandInit__9daAlink_cFv */
//	800E6F08: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E6F14: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800E6F20: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6F24: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6F38: 80452D34 (lit_7710)
//	800E6F4C: 80452CC0 (lit_6108)
//	800E6F50: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800E6F54: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6F58: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6F64: 80452CB8 (lit_6040)
//	800E6F68: 80452D34 (lit_7710)
//	800E6F88: 80452CC0 (lit_6108)
//	800E6F8C: 800E4FA8 (setCarryArmAngle__9daAlink_cFff)
//	800E6F9C: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6FA0: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E6FA8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E6FAC:
//8038EC48 (m__18daAlinkHIO_grab_c0) 	800E6FB0: 8038EC48 (m__18daAlinkHIO_grab_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabStandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabStandInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E6FE0-800E70C0 00E0+00 s=1 e=0 z=0  None .text      procGrabStand__9daAlink_cFv */
//	800E7000: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E7018: 804061C0 (g_dComIfG_gameInfo)
//	800E701C: 804061C0 (g_dComIfG_gameInfo)
//	800E7028: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800E7038: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E7064: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E7088: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E708C: 8038EC48 (m__18daAlinkHIO_grab_c0)
//	800E709C: 80452CC0 (lit_6108)
//	800E70A0: 800E4FA8 (setCarryArmAngle__9daAlink_cFff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabStand() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabStand__9daAlink_cFv.s"
}
#pragma pop

/* 800E70C0-800E70FC 003C+00 s=1 e=0 z=0  None .text
 * checkInsectActorName__9daAlink_cFP10fopAc_ac_c               */
//	800E70C8: 8038FBBC (l_insectNameList)
//	800E70CC: 8038FBBC (l_insectNameList)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkInsectActorName(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkInsectActorName__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E70FC-800E71D4 00D8+00 s=2 e=0 z=0  None .text      procInsectCatchInit__9daAlink_cFv */
//	800E7120: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800E7138: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800E7144: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E7148: 80452CC0 (lit_6108)
//	800E715C: 80452CE0 (lit_6845)
//	800E7174: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	800E7178: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	800E7180: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E7184:
//80452D24 (lit_7450) 	800E7198: 8038E90C (m__20daAlinkHIO_bottle_c0) 	800E719C: 8038E90C
//(m__20daAlinkHIO_bottle_c0) 	800E71A4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E71A8:
//80452D8C (lit_8783) 	800E71B8: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procInsectCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procInsectCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E71D4-800E7254 0080+00 s=1 e=0 z=0  None .text      procInsectCatch__9daAlink_cFv */
//	800E71F4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E7208: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E7218: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E7234: 8001CB48 (fopAcM_setCarryNow__FP10fopAc_ac_ci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procInsectCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procInsectCatch__9daAlink_cFv.s"
}
#pragma pop

/* 800E7254-800E7460 020C+00 s=2 e=0 z=0  None .text      procPickUpInit__9daAlink_cFv */
//	800E727C: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800E7294: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800E72A8: 804061C0 (g_dComIfG_gameInfo)
//	800E72AC: 804061C0 (g_dComIfG_gameInfo)
//	800E72C4: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800E72D4: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800E72E4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E72F0: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800E72FC: 8001AA94 (fopAcM_searchActorDistanceXZ2__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800E7300: 80452CB8 (lit_6040)
//	800E7314: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800E733C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800E7358: 80452CC0 (lit_6108)
//	800E7364: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800E7378: 80452CBC (lit_6041)
//	800E737C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800E7390: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	800E7394: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	800E739C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E73A8:
//80452D74 (lit_8502) 	800E73D0: 8038E90C (m__20daAlinkHIO_bottle_c0) 	800E73D4: 8038E90C
//(m__20daAlinkHIO_bottle_c0) 	800E73DC: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E73E8:
//80452D74 (lit_8502) 	800E73F4: 804061C0 (g_dComIfG_gameInfo) 	800E73F8: 804061C0
//(g_dComIfG_gameInfo) 	800E740C: 80035200 (onSwitch__10dSv_info_cFii) 	800E7420: 8038E840
//(m__20daAlinkHIO_pickUp_c0) 	800E7424: 8038E840 (m__20daAlinkHIO_pickUp_c0) 	800E7428: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E7440:
//8001CB48 (fopAcM_setCarryNow__FP10fopAc_ac_ci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPickUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procPickUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E7460-800E75EC 018C+00 s=1 e=0 z=0  None .text      procPickUp__9daAlink_cFv */
//	800E74A0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E74BC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E74DC: 801102D0 (procBottleGetInit__9daAlink_cFi)
//	800E74EC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E74FC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E752C: 80110E84 (setKandelaarModel__9daAlink_cFv)
//	800E7538: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E754C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E7558: 8038E840 (m__20daAlinkHIO_pickUp_c0)
//	800E755C: 8038E840 (m__20daAlinkHIO_pickUp_c0)
//	800E7580: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E758C: 80452D34 (lit_7710)
//	800E7590: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E75B8: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPickUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procPickUp__9daAlink_cFv.s"
}
#pragma pop

/* 800E75EC-800E76E0 00F4+00 s=3 e=0 z=0  None .text      procPickPutInit__9daAlink_cFi */
//	800E7620: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800E7630: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E7634: 80452CC0 (lit_6108)
//	800E7644: 8038E840 (m__20daAlinkHIO_pickUp_c0)
//	800E7648: 8038E840 (m__20daAlinkHIO_pickUp_c0)
//	800E7650: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPickPutInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procPickPutInit__9daAlink_cFi.s"
}
#pragma pop

/* 800E76E0-800E7894 01B4+00 s=1 e=0 z=0  None .text      procPickPut__9daAlink_cFv */
//	800E76F0: 803621DC (_savegpr_29)
//	800E7720: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E774C: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	800E7750: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	800E775C: 800E5830 (putObjLineCheck__9daAlink_cFR11dBgS_LinChkP4cXyzP10fopAc_ac_c)
//	800E7780: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E7794: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E77A0: 8038E840 (m__20daAlinkHIO_pickUp_c0)
//	800E77A4: 8038E840 (m__20daAlinkHIO_pickUp_c0)
//	800E77C8: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800E77D4: 80452D34 (lit_7710)
//	800E77D8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E77F4: 800B8930 (checkReadyItem__9daAlink_cFv)
//	800E7828: 80019E04 (fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv)
//	800E783C: 8002E83C (dComIfGp_addSelectItemNum__Fis)
//	800E7860: 80452CC0 (lit_6108)
//	800E7874: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800E7880: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPickPut() {
    nofralloc
#include "asm/d/a/d_a_alink/procPickPut__9daAlink_cFv.s"
}
#pragma pop

/* 800E7894-800E794C 00B8+00 s=2 e=0 z=0  None .text      checkSetChainPullAnime__9daAlink_cFs */
//	800E78A4: 803621DC (_savegpr_29)
//	800E78B8: 80452CA4 (lit_6021)
//	800E78EC: 80452CC0 (lit_6108)
//	800E7908: 800C02C8 (checkBossRoom__9daAlink_cFv)
//	800E7920: 803650D0 (abs)
//	800E7938: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSetChainPullAnime(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSetChainPullAnime__9daAlink_cFs.s"
}
#pragma pop

/* 800E794C-800E7994 0048+00 s=3 e=0 z=0  None .text      getChainStickAngleY__9daAlink_cCFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getChainStickAngleY(s16 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/getChainStickAngleY__9daAlink_cCFs.s"
}
#pragma pop

/* 800E7994-800E79F8 0064+00 s=1 e=0 z=0  None .text      checkChainEmphasys__9daAlink_cFv */
//	800E79B8: 804061C0 (g_dComIfG_gameInfo)
//	800E79BC: 804061C0 (g_dComIfG_gameInfo)
//	800E79D0: 80035360 (isSwitch__10dSv_info_cCFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkChainEmphasys() {
    nofralloc
#include "asm/d/a/d_a_alink/checkChainEmphasys__9daAlink_cFv.s"
}
#pragma pop

/* 800E79F8-800E7AEC 00F4+00 s=4 e=0 z=0  None .text      searchFmChainPos__9daAlink_cFv */
//	800E7A18: 803621DC (_savegpr_29)
//	800E7A44: 80452CC0 (lit_6108)
//	800E7A48: 80452E7C (lit_15808)
//	800E7A7C: 8034739C (PSVECSquareDistance)
//	800E7A9C: 80452D50 (lit_8247)
//	800E7AD8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::searchFmChainPos() {
    nofralloc
#include "asm/d/a/d_a_alink/searchFmChainPos__9daAlink_cFv.s"
}
#pragma pop

/* 800E7AEC-800E7BD0 00E4+00 s=0 e=1 z=0  None .text
 * setFmChainPosFromOut__9daAlink_cFP10fopAc_ac_cP4cXyzi        */
//	800E7B68: 80452D8C (lit_8783)
//	800E7B88: 80452D74 (lit_8502)
//	800E7BB4: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFmChainPosFromOut(fopAc_ac_c* param_0, cXyz* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setFmChainPosFromOut__9daAlink_cFP10fopAc_ac_cP4cXyzi.s"
}
#pragma pop

/* 800E7BD0-800E7C30 0060+00 s=1 e=0 z=0  None .text      checkChainBlockPushPull__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkChainBlockPushPull() {
    nofralloc
#include "asm/d/a/d_a_alink/checkChainBlockPushPull__9daAlink_cFv.s"
}
#pragma pop

/* 800E7C30-800E7CC0 0090+00 s=2 e=0 z=0  None .text      procFmChainUpInit__9daAlink_cFv */
//	800E7C58: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800E7C60: 800E79F8 (searchFmChainPos__9daAlink_cFv)
//	800E7C78: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800E7C88: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E7C94: 8038E7CC (m__21daAlinkHIO_fmChain_c0)
//	800E7C98: 8038E7CC (m__21daAlinkHIO_fmChain_c0)
//	800E7C9C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800E7CA0:
//80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFmChainUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFmChainUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E7CC0-800E7DD8 0118+00 s=1 e=0 z=0  None .text      procFmChainUp__9daAlink_cFv */
//	800E7CD0: 803621DC (_savegpr_29)
//	800E7CE4: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800E7CF0: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800E7CF8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E7D08: 80452CA4 (lit_6021)
//	800E7D18: 8038E7CC (m__21daAlinkHIO_fmChain_c0)
//	800E7D1C: 8038E7CC (m__21daAlinkHIO_fmChain_c0)
//	800E7D38: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800E7D44: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800E7D50: 80452CC0 (lit_6108)
//	800E7D54: 80452CC4 (lit_6109)
//	800E7D58: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800E7D80: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800E7D8C: 80452D34 (lit_7710)
//	800E7DC4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFmChainUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procFmChainUp__9daAlink_cFv.s"
}
#pragma pop

/* 800E7DD8-800E7E50 0078+00 s=2 e=0 z=0  None .text      procFmChainStrongPullInit__9daAlink_cFv */
//	800E7DF0: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E7E0C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E7E10: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFmChainStrongPullInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFmChainStrongPullInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E7E50-800E7ED0 0080+00 s=1 e=0 z=0  None .text      procFmChainStrongPull__9daAlink_cFv */
//	800E7E6C: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800E7E74: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E7E8C: 804061C0 (g_dComIfG_gameInfo)
//	800E7E90: 804061C0 (g_dComIfG_gameInfo)
//	800E7E9C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800E7EA4: 80452CB8 (lit_6040)
//	800E7EB4: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFmChainStrongPull() {
    nofralloc
#include "asm/d/a/d_a_alink/procFmChainStrongPull__9daAlink_cFv.s"
}
#pragma pop

/* 800E7ED0-800E7EE4 0014+00 s=9 e=0 z=0  None .text      setWallGrabStatus__9daAlink_cFUcUc */
//	800E7ED0: 804061C0 (g_dComIfG_gameInfo)
//	800E7ED4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWallGrabStatus(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setWallGrabStatus__9daAlink_cFUcUc.s"
}
#pragma pop

/* 800E7EE4-800E7EF4 0010+00 s=2 e=0 z=0  None .text      getWallGrabStatus__9daAlink_cFv */
//	800E7EE4: 804061C0 (g_dComIfG_gameInfo)
//	800E7EE8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWallGrabStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/getWallGrabStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800E7EF4-800E7F18 0024+00 s=1 e=0 z=0  None .text      wallGrabTrigger__9daAlink_cFv */
//	800E7F04: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wallGrabTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/wallGrabTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 800E7F18-800E7F3C 0024+00 s=4 e=0 z=0  None .text      wallGrabButton__9daAlink_cFv */
//	800E7F28: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wallGrabButton() {
    nofralloc
#include "asm/d/a/d_a_alink/wallGrabButton__9daAlink_cFv.s"
}
#pragma pop

/* 800E7F3C-800E80A4 0168+00 s=4 e=0 z=0  None .text
 * setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli */
//	800E7F4C: 803621DC (_savegpr_29)
//	800E7F70: 804061C0 (g_dComIfG_gameInfo)
//	800E7F74: 804061C0 (g_dComIfG_gameInfo)
//	800E7F8C: 80075C6C
//(PushPullCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_csQ29dBgW_Base13PushPullLabel) 	800E7FDC:
// 80439A20 (sincosTable___5JMath) 	800E7FE0: 80439A20 (sincosTable___5JMath) 	800E8090: 80362228
//(_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setPushPullKeepData(dBgW_Base::PushPullLabel param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli.s"
}
#pragma pop

/* 800E80A4-800E8148 00A4+00 s=2 e=0 z=0  None .text      checkPushPullTurnBlock__9daAlink_cFv */
//	800E80B8: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPushPullTurnBlock() {
    nofralloc
#include "asm/d/a/d_a_alink/checkPushPullTurnBlock__9daAlink_cFv.s"
}
#pragma pop

/* 800E8148-800E8298 0150+00 s=1 e=0 z=0  None .text      checkPullBehindWall__9daAlink_cFv */
//	800E8174: 80439A20 (sincosTable___5JMath)
//	800E8178: 80439A20 (sincosTable___5JMath)
//	800E8194: 80450690 (l_autoUpHeight)
//	800E81A8: 80452E80 (lit_16036)
//	800E81D0: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800E81E4: 80452E84 (lit_16037)
//	800E8204: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800E821C: 80452E88 (lit_16038)
//	800E8244: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800E8248: 804061C0 (g_dComIfG_gameInfo)
//	800E824C: 804061C0 (g_dComIfG_gameInfo)
//	800E8258: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800E8264: 80450694 (l_autoDownHeight)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPullBehindWall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkPullBehindWall__9daAlink_cFv.s"
}
#pragma pop

/* 800E8298-800E82B0 0018+00 s=3 e=0 z=0  None .text      offGoatStopGame__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::offGoatStopGame() {
    nofralloc
#include "asm/d/a/d_a_alink/offGoatStopGame__9daAlink_cFv.s"
}
#pragma pop

/* 800E82B0-800E8314 0064+00 s=4 e=0 z=0  None .text checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c
 */
//	800E82E0: 800DC5A4 (checkSpecialNpc__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGoatCatchActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E8314-800E8334 0020+00 s=2 e=0 z=0  None .text      getGoatCatchDistance2__9daAlink_cFv */
//	800E8324: 80452E8C (lit_16066)
//	800E832C: 80452E90 (lit_16067)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getGoatCatchDistance2() {
    nofralloc
#include "asm/d/a/d_a_alink/getGoatCatchDistance2__9daAlink_cFv.s"
}
#pragma pop

/* 800E8334-800E8354 0020+00 s=3 e=0 z=0  None .text      endPushPull__9daAlink_cFv */
//	800E8340: 800B58EC (checkWaitAction__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::endPushPull() {
    nofralloc
#include "asm/d/a/d_a_alink/endPushPull__9daAlink_cFv.s"
}
#pragma pop

/* 800E8354-800E8428 00D4+00 s=2 e=0 z=0  None .text      getPushPullAnimeSpeed__9daAlink_cFv */
//	800E8370: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800E8380: 804061C0 (g_dComIfG_gameInfo)
//	800E8384: 804061C0 (g_dComIfG_gameInfo)
//	800E8390: 80074618 (GetActorPointer__4cBgSCFi)
//	800E839C: 80141ACC (func_80141ACC)
//	800E83B0: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800E83CC: 8038F124 (m__20daAlinkHIO_wlPush_c0)
//	800E83D0: 8038F124 (m__20daAlinkHIO_wlPush_c0)
//	800E83DC: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800E83E0: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800E83F8: 8038F124 (m__20daAlinkHIO_wlPush_c0)
//	800E83FC: 8038F124 (m__20daAlinkHIO_wlPush_c0)
//	800E8408: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800E840C: 8038E210 (m__22daAlinkHIO_pushpull_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getPushPullAnimeSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getPushPullAnimeSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800E8428-800E857C 0154+00 s=4 e=0 z=0  None .text      procCoPushPullWaitInit__9daAlink_cFi */
//	800E8458: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800E8464: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E8474: 80452CC0 (lit_6108)
//	800E8490: 8038F124 (m__20daAlinkHIO_wlPush_c0)
//	800E8494: 8038F124 (m__20daAlinkHIO_wlPush_c0)
//	800E849C: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	800E84A0: 80452D00 (lit_6895)
//	800E84AC: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800E84C0: 80452CBC (lit_6041)
//	800E84C4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800E84D0: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800E84D4: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800E84E0: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800E84E4: 80452D00 (lit_6895)
//	800E8508: 80439A20 (sincosTable___5JMath)
//	800E850C: 80439A20 (sincosTable___5JMath)
//	800E854C: 804061C0 (g_dComIfG_gameInfo)
//	800E8550: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPushPullWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPushPullWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 800E857C-800E875C 01E0+00 s=1 e=0 z=0  None .text      procCoPushPullWait__9daAlink_cFv */
//	800E85B0: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800E85B8: 800B02BC (setFrontWallType__9daAlink_cFv)
//	800E85CC: 800E7F18 (wallGrabButton__9daAlink_cFv)
//	800E8604: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800E861C: 80452C98 (lit_5943)
//	800E8620: 80452D30 (lit_7625)
//	800E8624: 80452CB8 (lit_6040)
//	800E8628: 8026F97C (cLib_addCalc__FPfffff)
//	800E8638: 80452C98 (lit_5943)
//	800E863C: 80452D30 (lit_7625)
//	800E8640: 80452CB8 (lit_6040)
//	800E8644: 8026F97C (cLib_addCalc__FPfffff)
//	800E8654: 80452D3C (lit_7808)
//	800E8664: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800E86AC: 800E875C (procCoPushMoveInit__9daAlink_cFii)
//	800E86B8: 80452CA4 (lit_6021)
//	800E86D4: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800E86E8: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	800E8704: 800E875C (procCoPushMoveInit__9daAlink_cFii)
//	800E8728: 800E8D1C (procPullMoveInit__9daAlink_cFi)
//	800E8734: 800E8334 (endPushPull__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPushPullWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPushPullWait__9daAlink_cFv.s"
}
#pragma pop

/* 800E875C-800E89F0 0294+00 s=2 e=0 z=0  None .text      procCoPushMoveInit__9daAlink_cFii */
//	800E878C: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E87A8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E87B0: 800E80A4 (checkPushPullTurnBlock__9daAlink_cFv)
//	800E87BC: 800E8354 (getPushPullAnimeSpeed__9daAlink_cFv)
//	800E87E4: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	800E87E8: 80452CB8 (lit_6040)
//	800E87F8: 80452CC0 (lit_6108)
//	800E8800: 8038F124 (m__20daAlinkHIO_wlPush_c0)
//	800E8804: 8038F124 (m__20daAlinkHIO_wlPush_c0)
//	800E880C: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	800E8810: 80452E94 (lit_16210)
//	800E8830: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E8834: 80452CB8 (lit_6040)
//	800E8844: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800E8848: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800E8850: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800E8854: 80452E64 (lit_14954)
//	800E8874: 804061C0 (g_dComIfG_gameInfo)
//	800E8878: 804061C0 (g_dComIfG_gameInfo)
//	800E8884: 80074618 (GetActorPointer__4cBgSCFi)
//	800E8890: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800E88A4: 80452CC0 (lit_6108)
//	800E88CC: 8034739C (PSVECSquareDistance)
//	800E88D0: 80452CC0 (lit_6108)
//	800E88E0: 80452CE8 (lit_6846)
//	800E88E8: 80452CF0 (lit_6847)
//	800E8930: 80452CF8 (lit_6848)
//	800E893C: 80450AE0 (__float_nan)
//	800E8940: 80450AE0 (__float_nan)
//	800E89AC: 80450AE0 (__float_nan)
//	800E89B0: 80450AE0 (__float_nan)
//	800E89B8: 804061C0 (g_dComIfG_gameInfo)
//	800E89BC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPushMoveInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPushMoveInit__9daAlink_cFii.s"
}
#pragma pop

/* 800E89F0-800E8D1C 032C+00 s=1 e=0 z=0  None .text      procCoPushMove__9daAlink_cFv */
//	800E8A00: 803621DC (_savegpr_29)
//	800E8A20: 80452CC0 (lit_6108)
//	800E8A24: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E8A34: 800E8334 (endPushPull__9daAlink_cFv)
//	800E8A44: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E8A84: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E8A94: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800E8A9C: 80452CC0 (lit_6108)
//	800E8AA0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E8AD4: 800E7F18 (wallGrabButton__9daAlink_cFv)
//	800E8AE4: 800E8334 (endPushPull__9daAlink_cFv)
//	800E8AF0: 80452CA4 (lit_6021)
//	800E8B0C: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800E8B24: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E8B5C: 80452CB8 (lit_6040)
//	800E8B60: 80452D1C (lit_7448)
//	800E8B68: 80452CC4 (lit_6109)
//	800E8B6C: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	800E8B7C: 80452CB8 (lit_6040)
//	800E8B80: 80452D1C (lit_7448)
//	800E8B88: 80452CC4 (lit_6109)
//	800E8B8C: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800E8B90: 80452CB8 (lit_6040)
//	800E8BA0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E8BC0: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	800E8BD0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E8BD4: 80452CB8 (lit_6040)
//	800E8C10: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E8C7C: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	800E8C8C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E8C9C: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E8CB0: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E8CB8: 800B02BC (setFrontWallType__9daAlink_cFv)
//	800E8CCC: 800E8334 (endPushPull__9daAlink_cFv)
//	800E8CE4: 800E8D1C (procPullMoveInit__9daAlink_cFi)
//	800E8CFC: 800E8428 (procCoPushPullWaitInit__9daAlink_cFi)
//	800E8D08: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPushMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPushMove__9daAlink_cFv.s"
}
#pragma pop

/* 800E8D1C-800E8F44 0228+00 s=2 e=0 z=0  None .text      procPullMoveInit__9daAlink_cFi */
//	800E8D44: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E8D60: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E8D68: 800E80A4 (checkPushPullTurnBlock__9daAlink_cFv)
//	800E8D84: 80452CB8 (lit_6040)
//	800E8D90: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E8D9C: 800E8354 (getPushPullAnimeSpeed__9daAlink_cFv)
//	800E8DAC: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800E8DB0: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800E8DB8: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800E8DC8: 804061C0 (g_dComIfG_gameInfo)
//	800E8DCC: 804061C0 (g_dComIfG_gameInfo)
//	800E8DD8: 80074618 (GetActorPointer__4cBgSCFi)
//	800E8DE4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800E8DF8: 80452CC0 (lit_6108)
//	800E8E20: 8034739C (PSVECSquareDistance)
//	800E8E24: 80452CC0 (lit_6108)
//	800E8E34: 80452CE8 (lit_6846)
//	800E8E3C: 80452CF0 (lit_6847)
//	800E8E84: 80452CF8 (lit_6848)
//	800E8E90: 80450AE0 (__float_nan)
//	800E8E94: 80450AE0 (__float_nan)
//	800E8F00: 80450AE0 (__float_nan)
//	800E8F04: 80450AE0 (__float_nan)
//	800E8F0C: 804061C0 (g_dComIfG_gameInfo)
//	800E8F10: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPullMoveInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procPullMoveInit__9daAlink_cFi.s"
}
#pragma pop

/* 800E8F44-800E91B0 026C+00 s=1 e=0 z=0  None .text      procPullMove__9daAlink_cFv */
//	800E8F54: 803621D8 (_savegpr_28)
//	800E8F64: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	800E8F78: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800E8F8C: 80452CC0 (lit_6108)
//	800E8F90: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800E8FC4: 800E7F18 (wallGrabButton__9daAlink_cFv)
//	800E8FD4: 800E8334 (endPushPull__9daAlink_cFv)
//	800E8FE0: 80452CA4 (lit_6021)
//	800E8FF8: 800E8148 (checkPullBehindWall__9daAlink_cFv)
//	800E9010: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E902C: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E9058: 80452CB8 (lit_6040)
//	800E905C: 80452D1C (lit_7448)
//	800E9064: 80452CC4 (lit_6109)
//	800E9068: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800E906C: 80452CB8 (lit_6040)
//	800E907C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E9090: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E9094: 80452CB8 (lit_6040)
//	800E90C4: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E911C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E912C: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E9140: 800E7F3C (setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli)
//	800E9148: 800B02BC (setFrontWallType__9daAlink_cFv)
//	800E915C: 800E8334 (endPushPull__9daAlink_cFv)
//	800E9174: 800E8428 (procCoPushPullWaitInit__9daAlink_cFi)
//	800E9190: 800E875C (procCoPushMoveInit__9daAlink_cFii)
//	800E919C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPullMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procPullMove__9daAlink_cFv.s"
}
#pragma pop

/* 800E91B0-800E91C4 0014+00 s=1 e=0 z=0  None .text      daAlink_searchGoat__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchGoat(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchGoat__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800E91C4-800E9210 004C+00 s=1 e=0 z=0  None .text      cancelGoronThrowEvent__9daAlink_cFv */
//	800E91F0: 804061C0 (g_dComIfG_gameInfo)
//	800E91F4: 804061C0 (g_dComIfG_gameInfo)
//	800E91FC: 80042468 (reset__14dEvt_control_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelGoronThrowEvent() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelGoronThrowEvent__9daAlink_cFv.s"
}
#pragma pop

/* 800E9210-800E9344 0134+00 s=2 e=0 z=0  None .text setGoatStopGameFail__9daAlink_cFP10fopAc_ac_c
 */
//	800E9278: 800E2DC4 (cancelMagneBootsOn__9daAlink_cFv)
//	800E9280: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	800E9288: 800B607C (checkAutoJumpAction__9daAlink_cFv)
//	800E92E8: 800D7478 (setDamagePointNormal__9daAlink_cFi)
//	800E9300: 800D7478 (setDamagePointNormal__9daAlink_cFi)
//	800E9308: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	800E9328: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGoatStopGameFail(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGoatStopGameFail__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E9344-800E9434 00F0+00 s=1 e=0 z=0  None .text      procGoatMoveInit__9daAlink_cFv */
//	800E935C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E9374: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800E938C: 80452CC0 (lit_6108)
//	800E93C0: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800E93C4: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800E93D8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E93E4: 800E91B0 (daAlink_searchGoat__FP10fopAc_ac_cPv)
//	800E93E8: 800E91B0 (daAlink_searchGoat__FP10fopAc_ac_cPv)
//	800E93F0: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800E9400: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800E9418: 800C12DC (deleteEquipItem__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E9434-800E9894 0460+00 s=1 e=0 z=0  None .text      procGoatMove__9daAlink_cFv */
//	800E945C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E9470: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E9490: 800E8298 (offGoatStopGame__9daAlink_cFv)
//	800E9498: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800E94AC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800E94C8: 803DD470 (now__14mDoMtx_stack_c)
//	800E94CC: 803DD470 (now__14mDoMtx_stack_c)
//	800E94DC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	800E94E0: 803DD470 (now__14mDoMtx_stack_c)
//	800E94E4: 803DD470 (now__14mDoMtx_stack_c)
//	800E94F0: 80346E4C (PSMTXMultVecSR)
//	800E94F8: 80452E98 (lit_16566)
//	800E9504: 80452CC0 (lit_6108)
//	800E951C: 80452D10 (lit_7306)
//	800E9558: 80452E9C (lit_16567)
//	800E956C: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800E9574: 80452EA0 (lit_16568)
//	800E9584: 800E8298 (offGoatStopGame__9daAlink_cFv)
//	800E958C: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800E95B4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800E95D0: 803DD470 (now__14mDoMtx_stack_c)
//	800E95D4: 803DD470 (now__14mDoMtx_stack_c)
//	800E95E4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	800E95E8: 803DD470 (now__14mDoMtx_stack_c)
//	800E95EC: 803DD470 (now__14mDoMtx_stack_c)
//	800E95F8: 80346E4C (PSMTXMultVecSR)
//	800E95FC: 804061C0 (g_dComIfG_gameInfo)
//	800E9600: 804061C0 (g_dComIfG_gameInfo)
//	800E9620: 80452EA4 (lit_16569)
//	800E9638: 800E9894 (procGoatCatchInit__9daAlink_cFP10fopAc_ac_cf)
//	800E9644: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	800E9654: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800E9664: 80452DCC (lit_10532)
//	800E9678: 800E9210 (setGoatStopGameFail__9daAlink_cFP10fopAc_ac_c)
//	800E9688: 803650D0 (abs)
//	800E9690: 80452CA4 (lit_6021)
//	800E96B8: 80452EA4 (lit_16569)
//	800E96C4: 80452CC0 (lit_6108)
//	800E96DC: 80452CC0 (lit_6108)
//	800E9704: 803650D0 (abs)
//	800E9724: 80452CBC (lit_6041)
//	800E9768: 80452EA8 (lit_16570)
//	800E976C: 80452CB8 (lit_6040)
//	800E9780: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800E9784: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800E9794: 80452CC0 (lit_6108)
//	800E979C: 80452CC0 (lit_6108)
//	800E97A4: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800E97A8: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800E97B0: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	800E97B8: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800E97EC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800E9800: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E981C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800E9830: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E9840: 80452CBC (lit_6041)
//	800E9850: 80452CB8 (lit_6040)
//	800E9874: 800BF37C (initBasAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatMove__9daAlink_cFv.s"
}
#pragma pop

/* 800E9894-800E9BD0 033C+00 s=3 e=0 z=0  None .text procGoatCatchInit__9daAlink_cFP10fopAc_ac_cf
 */
//	800E98AC: 803621DC (_savegpr_29)
//	800E98C4: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800E98DC: 80452D50 (lit_8247)
//	800E98F8: 80452CD0 (lit_6238)
//	800E9900: 80452DA0 (lit_9054)
//	800E9918: 80439A20 (sincosTable___5JMath)
//	800E991C: 80439A20 (sincosTable___5JMath)
//	800E995C: 8001DC68 (lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	800E9970: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800E9988: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800E998C: 804061C0 (g_dComIfG_gameInfo)
//	800E9990: 804061C0 (g_dComIfG_gameInfo)
//	800E99A8: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800E99D8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800E99E4: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800E9A04: 80452DA0 (lit_9054)
//	800E9A20: 80452CE0 (lit_6845)
//	800E9A2C: 80452CE0 (lit_6845)
//	800E9A54: 80452EAC (lit_16641)
//	800E9AC4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E9B44: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800E9B50: 80425544 (l_halfAtnWaitBaseAnime)
//	800E9B54: 80425544 (l_halfAtnWaitBaseAnime)
//	800E9B78: 80452CC0 (lit_6108)
//	800E9BA4: 80452CBC (lit_6041)
//	800E9BBC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatCatchInit(fopAc_ac_c* param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatCatchInit__9daAlink_cFP10fopAc_ac_cf.s"
}
#pragma pop

/* 800E9BD0-800EA2A8 06D8+00 s=1 e=0 z=0  None .text      procGoatCatch__9daAlink_cFv */
//	800E9BF0: 803621D4 (_savegpr_27)
//	800E9C20: 80452DC4 (lit_10194)
//	800E9C48: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800E9C78: 80117CF8 (endDemoMode__9daAlink_cFv)
//	800E9C84: 800E8298 (offGoatStopGame__9daAlink_cFv)
//	800E9C8C: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800E9CC8: 800E9210 (setGoatStopGameFail__9daAlink_cFP10fopAc_ac_c)
//	800E9D04: 80452EB0 (lit_16790)
//	800E9D28: 80452D7C (lit_8779)
//	800E9D48: 80452E28 (lit_14621)
//	800E9D64: 80452CB8 (lit_6040)
//	800E9D70: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E9D98: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800E9DD4: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E9DD8: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800E9DE0: 80452CC4 (lit_6109)
//	800E9DE4: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800E9E28: 80117CF8 (endDemoMode__9daAlink_cFv)
//	800E9E34: 800E8298 (offGoatStopGame__9daAlink_cFv)
//	800E9E38: 804061C0 (g_dComIfG_gameInfo)
//	800E9E3C: 804061C0 (g_dComIfG_gameInfo)
//	800E9E48: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	800E9E4C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	800E9E54: 800349BC (isEventBit__11dSv_event_cCFUs)
//	800E9E64: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	800E9E68: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	800E9E70: 8003498C (onEventBit__11dSv_event_cFUs)
//	800E9E7C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	800E9E80: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	800E9E88: 8003498C (onEventBit__11dSv_event_cFUs)
//	800E9E90: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800E9ED0: 80117CF8 (endDemoMode__9daAlink_cFv)
//	800E9ED8: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800E9F20: 80452CE0 (lit_6845)
//	800E9F40: 800E2DC4 (cancelMagneBootsOn__9daAlink_cFv)
//	800E9F4C: 800E9210 (setGoatStopGameFail__9daAlink_cFP10fopAc_ac_c)
//	800E9F60: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800E9F74: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800E9F80: 80452CB8 (lit_6040)
//	800E9F94: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800E9FA8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800E9FCC: 80452CE0 (lit_6845)
//	800E9FD0: 80452CB8 (lit_6040)
//	800E9FD4: 80270740 (cLib_chaseF__FPfff)
//	800E9FDC: 80452CB8 (lit_6040)
//	800EA020: 80452CA4 (lit_6021)
//	800EA034: 80452CB8 (lit_6040)
//	800EA058: 80452C98 (lit_5943)
//	800EA064: 80452CC0 (lit_6108)
//	800EA06C: 80270740 (cLib_chaseF__FPfff)
//	800EA074: 80452DA0 (lit_9054)
//	800EA08C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EA0A0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EA0D0: 80452CC0 (lit_6108)
//	800EA0E8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EA110: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800EA128: 804061C0 (g_dComIfG_gameInfo)
//	800EA12C: 804061C0 (g_dComIfG_gameInfo)
//	800EA134: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	800EA138: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	800EA140: 8003498C (onEventBit__11dSv_event_cFUs)
//	800EA150: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800EA188: 800E9210 (setGoatStopGameFail__9daAlink_cFP10fopAc_ac_c)
//	800EA198: 80452CA4 (lit_6021)
//	800EA254: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EA294: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatCatch__9daAlink_cFv.s"
}
#pragma pop

/* 800EA2A8-800EA3AC 0104+00 s=2 e=0 z=0  None .text      procGoatStrokeInit__9daAlink_cFv */
//	800EA2D0: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800EA2DC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800EA2E8: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800EA2F4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EA308: 80452CC0 (lit_6108)
//	800EA318: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800EA34C: 80439A20 (sincosTable___5JMath)
//	800EA350: 80439A20 (sincosTable___5JMath)
//	800EA360: 80452D50 (lit_8247)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatStrokeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatStrokeInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EA3AC-800EA3F4 0048+00 s=1 e=0 z=0  None .text      procGoatStroke__9daAlink_cFv */
//	800EA3C4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800EA3D8: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatStroke() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatStroke__9daAlink_cFv.s"
}
#pragma pop

/* 800EA3F4-800EA4CC 00D8+00 s=2 e=0 z=0  None .text      procGoronMoveInit__9daAlink_cFv */
//	800EA41C: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800EA428: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800EA440: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800EA46C: 80452CC0 (lit_6108)
//	800EA488: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EA48C: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EA4A0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoronMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoronMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EA4CC-800EA844 0378+00 s=1 e=0 z=0  None .text      procGoronMove__9daAlink_cFv */
//	800EA4F0: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800EA528: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800EA538: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	800EA56C: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	800EA57C: 800E3048 (procBootsEquipInit__9daAlink_cFv)
//	800EA58C: 80270E24 (cLib_distanceAngleS__Fss)
//	800EA598: 80070880 (getActionBtnB__12dAttention_cFv)
//	800EA5A8: 80070880 (getActionBtnB__12dAttention_cFv)
//	800EA5C0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800EA60C: 80452CC0 (lit_6108)
//	800EA634: 8034739C (PSVECSquareDistance)
//	800EA640: 800E8314 (getGoatCatchDistance2__9daAlink_cFv)
//	800EA668: 80452CC0 (lit_6108)
//	800EA66C: 800E9894 (procGoatCatchInit__9daAlink_cFP10fopAc_ac_cf)
//	800EA680: 80452CA4 (lit_6021)
//	800EA6AC: 803650D0 (abs)
//	800EA6CC: 80452CBC (lit_6041)
//	800EA710: 80452EA8 (lit_16570)
//	800EA714: 80452CB8 (lit_6040)
//	800EA728: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EA72C: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EA73C: 80452CC0 (lit_6108)
//	800EA744: 80452CC0 (lit_6108)
//	800EA74C: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EA750: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EA758: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	800EA760: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800EA794: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EA7A8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EA7C4: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EA7D8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EA7E8: 80452CBC (lit_6041)
//	800EA7F8: 80452CB8 (lit_6040)
//	800EA81C: 800BF37C (initBasAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoronMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoronMove__9daAlink_cFv.s"
}
#pragma pop

/* 800EA844-800EA8D0 008C+00 s=5 e=0 z=0  None .text      checkSumouVsActor__9daAlink_cFv */
//	800EA85C: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800EA870: 800EA8D0 (cancelSumouMode__9daAlink_cFv)
//	800EA878: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800EA8AC: 800EC20C (procSumouWinLoseInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSumouVsActor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSumouVsActor__9daAlink_cFv.s"
}
#pragma pop

/* 800EA8D0-800EA908 0038+00 s=5 e=0 z=0  None .text      cancelSumouMode__9daAlink_cFv */
//	800EA8E8: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelSumouMode() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelSumouMode__9daAlink_cFv.s"
}
#pragma pop

/* 800EA908-800EA92C 0024+00 s=2 e=0 z=0  None .text      sumouPunchTrigger__9daAlink_cFv */
//	800EA918: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::sumouPunchTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/sumouPunchTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 800EA92C-800EA950 0024+00 s=5 e=0 z=0  None .text      setSumouPunchStatus__9daAlink_cFv */
//	800EA93C: 800B3298 (setBStatus__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSumouPunchStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/setSumouPunchStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800EA950-800EAA28 00D8+00 s=4 e=0 z=0  None .text      procSumouReadyInit__9daAlink_cFv */
//	800EA968: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800EA984: 80452CC0 (lit_6108)
//	800EA988: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800EA98C: 80452CC0 (lit_6108)
//	800EA99C: 80425514 (l_waitBaseAnime)
//	800EA9A0: 80425514 (l_waitBaseAnime)
//	800EA9F8: 800C12DC (deleteEquipItem__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EAA28-800EAC4C 0224+00 s=1 e=0 z=0  None .text      procSumouReady__9daAlink_cFv */
//	800EAA38: 803621DC (_savegpr_29)
//	800EAA48: 800EA844 (checkSumouVsActor__9daAlink_cFv)
//	800EAA7C: 800EA92C (setSumouPunchStatus__9daAlink_cFv)
//	800EAA88: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800EAA90: 804061C0 (g_dComIfG_gameInfo)
//	800EAA94: 804061C0 (g_dComIfG_gameInfo)
//	800EAAB4: 800EA908 (sumouPunchTrigger__9daAlink_cFv)
//	800EAAD4: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EAAEC: 80452D74 (lit_8502)
//	800EAAF0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800EAB1C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EAB30: 804061C0 (g_dComIfG_gameInfo)
//	800EAB34: 804061C0 (g_dComIfG_gameInfo)
//	800EAB4C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800EAB5C: 80452CA4 (lit_6021)
//	800EAB7C: 803650D0 (abs)
//	800EAB8C: 80270E24 (cLib_distanceAngleS__Fss)
//	800EABA0: 80452CB8 (lit_6040)
//	800EAC04: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800EAC20: 800EB624 (procSumouActionInit__9daAlink_cFiii)
//	800EAC2C: 800EB208 (procSumouSideMoveInit__9daAlink_cFv)
//	800EAC38: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouReady__9daAlink_cFv.s"
}
#pragma pop

/* 800EAC4C-800EAD84 0138+00 s=1 e=0 z=0  None .text      procSumouMoveInit__9daAlink_cFv */
//	800EAC6C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800EAC78: 80452DB8 (lit_10041)
//	800EACB0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EACB4: 80452CB8 (lit_6040)
//	800EACD4: 80452D3C (lit_7808)
//	800EAD08: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EAD0C: 80452CBC (lit_6041)
//	800EAD4C: 80452CC0 (lit_6108)
//	800EAD64: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EAD84-800EB208 0484+00 s=1 e=0 z=0  None .text      procSumouMove__9daAlink_cFv */
//	800EAD94: 803621DC (_savegpr_29)
//	800EADA4: 800EA844 (checkSumouVsActor__9daAlink_cFv)
//	800EADC8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800EAE54: 80452D2C (lit_7624)
//	800EAE5C: 80452DF8 (lit_13700)
//	800EAE64: 80452EA8 (lit_16570)
//	800EAE68: 80270740 (cLib_chaseF__FPfff)
//	800EAE88: 80452D2C (lit_7624)
//	800EAE8C: 80452EA8 (lit_16570)
//	800EAE90: 80270740 (cLib_chaseF__FPfff)
//	800EAEA0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EAEAC: 80452CC0 (lit_6108)
//	800EAEB4: 80452D84 (lit_8781)
//	800EAF08: 800B3280 (setDoStatusContinuation__9daAlink_cFUc)
//	800EAF10: 80452CC0 (lit_6108)
//	800EAF34: 80452D2C (lit_7624)
//	800EAF38: 80452DA0 (lit_9054)
//	800EAF3C: 80270740 (cLib_chaseF__FPfff)
//	800EAF48: 80452CB8 (lit_6040)
//	800EAF4C: 80452C98 (lit_5943)
//	800EAF50: 80452CA4 (lit_6021)
//	800EAF54: 80452E44 (lit_14760)
//	800EAF58: 8026F97C (cLib_addCalc__FPfffff)
//	800EAF64: 80430188 (g_meter2_info)
//	800EAF68: 80430188 (g_meter2_info)
//	800EAF88: 80452CC0 (lit_6108)
//	800EAFB4: 80452CC0 (lit_6108)
//	800EAFDC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EAFE8: 80452D84 (lit_8781)
//	800EB00C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EB018: 80452D84 (lit_8781)
//	800EB034: 80452CC0 (lit_6108)
//	800EB044: 80452CC0 (lit_6108)
//	800EB054: 80452CA4 (lit_6021)
//	800EB064: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800EB07C: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800EB080: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	800EB088: 80452CB0 (lit_6025)
//	800EB0CC: 80452CC0 (lit_6108)
//	800EB0F4: 80439A20 (sincosTable___5JMath)
//	800EB0F8: 80439A20 (sincosTable___5JMath)
//	800EB104: 80452DD4 (lit_11442)
//	800EB16C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800EB17C: 800EB208 (procSumouSideMoveInit__9daAlink_cFv)
//	800EB1C8: 80452E04 (lit_13794)
//	800EB1D8: 80452D90 (lit_8784)
//	800EB1F4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouMove__9daAlink_cFv.s"
}
#pragma pop

/* 800EB208-800EB2BC 00B4+00 s=4 e=0 z=0  None .text      procSumouSideMoveInit__9daAlink_cFv */
//	800EB220: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800EB240: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EB244: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EB258: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EB268: 800EA92C (setSumouPunchStatus__9daAlink_cFv)
//	800EB274: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800EB27C: 804061C0 (g_dComIfG_gameInfo)
//	800EB280: 804061C0 (g_dComIfG_gameInfo)
//	800EB298: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouSideMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouSideMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EB2BC-800EB624 0368+00 s=1 e=0 z=0  None .text      procSumouSideMove__9daAlink_cFv */
//	800EB2CC: 803621DC (_savegpr_29)
//	800EB2DC: 800EA844 (checkSumouVsActor__9daAlink_cFv)
//	800EB310: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800EB328: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800EB35C: 80270E24 (cLib_distanceAngleS__Fss)
//	800EB388: 800EA908 (sumouPunchTrigger__9daAlink_cFv)
//	800EB3A8: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800EB3C0: 800EA908 (sumouPunchTrigger__9daAlink_cFv)
//	800EB3D4: 800EB624 (procSumouActionInit__9daAlink_cFiii)
//	800EB3E0: 800EA92C (setSumouPunchStatus__9daAlink_cFv)
//	800EB3EC: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800EB3F4: 804061C0 (g_dComIfG_gameInfo)
//	800EB3F8: 804061C0 (g_dComIfG_gameInfo)
//	800EB404: 80452CA4 (lit_6021)
//	800EB430: 803650D0 (abs)
//	800EB450: 80452CBC (lit_6041)
//	800EB494: 80452EA8 (lit_16570)
//	800EB498: 80452CB8 (lit_6040)
//	800EB4AC: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EB4B0: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EB4C0: 80452CC0 (lit_6108)
//	800EB4C8: 80452CC0 (lit_6108)
//	800EB4D0: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EB4D4: 8038D714 (m__21daAlinkHIO_atnMove_c0)
//	800EB4DC: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	800EB4E4: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800EB524: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EB544: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EB548: 80452CC0 (lit_6108)
//	800EB588: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EB5A8: 80452CB8 (lit_6040)
//	800EB5AC: 80452CC0 (lit_6108)
//	800EB5B4: 80452CC4 (lit_6109)
//	800EB5B8: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800EB5C0: 80452CB8 (lit_6040)
//	800EB5FC: 800BF37C (initBasAnime__9daAlink_cFv)
//	800EB610: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouSideMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouSideMove__9daAlink_cFv.s"
}
#pragma pop

/* 800EB624-800EBCE0 06BC+00 s=4 e=0 z=0  None .text      procSumouActionInit__9daAlink_cFiii */
//	800EB63C: 803621D4 (_savegpr_27)
//	800EB650: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800EB69C: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800EB738: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800EB7AC: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800EB8A0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800EB8A4: 803DD470 (now__14mDoMtx_stack_c)
//	800EB8A8: 803DD470 (now__14mDoMtx_stack_c)
//	800EB8B0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800EB8CC: 804061C0 (g_dComIfG_gameInfo)
//	800EB8D0: 804061C0 (g_dComIfG_gameInfo)
//	800EB904: 804061C0 (g_dComIfG_gameInfo)
//	800EB908: 804061C0 (g_dComIfG_gameInfo)
//	800EB930: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800EB954: 800EA92C (setSumouPunchStatus__9daAlink_cFv)
//	800EB970: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800EB9CC: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EB9EC: 80452CC0 (lit_6108)
//	800EBA04: 80452CB8 (lit_6040)
//	800EBA08: 80452CC0 (lit_6108)
//	800EBA20: 80452CC4 (lit_6109)
//	800EBA24: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800EBA40: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800EBA58: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800EBA64: 80452CC0 (lit_6108)
//	800EBA9C: 8034739C (PSVECSquareDistance)
//	800EBAA0: 80452CC0 (lit_6108)
//	800EBAB0: 80452CE8 (lit_6846)
//	800EBAB8: 80452CF0 (lit_6847)
//	800EBB00: 80452CF8 (lit_6848)
//	800EBB0C: 80450AE0 (__float_nan)
//	800EBB10: 80450AE0 (__float_nan)
//	800EBB7C: 80450AE0 (__float_nan)
//	800EBB80: 80450AE0 (__float_nan)
//	800EBBA8: 80452DB8 (lit_10041)
//	800EBBC4: 80452D1C (lit_7448)
//	800EBBE4: 80452EB4 (lit_17382)
//	800EBBF8: 80452DBC (lit_10042)
//	800EBC0C: 80452EB4 (lit_17382)
//	800EBC38: 80452D14 (lit_7307)
//	800EBC58: 80452E28 (lit_14621)
//	800EBC80: 80452D74 (lit_8502)
//	800EBC9C: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800EBCCC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouActionInit(int param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouActionInit__9daAlink_cFiii.s"
}
#pragma pop

/* 800EBCE0-800EC0F8 0418+00 s=1 e=0 z=0  None .text      procSumouAction__9daAlink_cFv */
//	800EBD00: 800EA844 (checkSumouVsActor__9daAlink_cFv)
//	800EBD24: 804061C0 (g_dComIfG_gameInfo)
//	800EBD28: 804061C0 (g_dComIfG_gameInfo)
//	800EBD40: 804061C0 (g_dComIfG_gameInfo)
//	800EBD44: 804061C0 (g_dComIfG_gameInfo)
//	800EBD7C: 800EB624 (procSumouActionInit__9daAlink_cFiii)
//	800EBDA8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800EBDB4: 80439A20 (sincosTable___5JMath)
//	800EBDB8: 80439A20 (sincosTable___5JMath)
//	800EBE1C: 800EB208 (procSumouSideMoveInit__9daAlink_cFv)
//	800EBE38: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800EBE50: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800EBE88: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800EBE94: 80439A20 (sincosTable___5JMath)
//	800EBE98: 80439A20 (sincosTable___5JMath)
//	800EBEFC: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800EBF14: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800EBF34: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800EBF48: 800EA92C (setSumouPunchStatus__9daAlink_cFv)
//	800EBF54: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800EBF70: 800EC0F8 (procSumouStaggerInit__9daAlink_cFv)
//	800EBFB4: 800EB208 (procSumouSideMoveInit__9daAlink_cFv)
//	800EBFC0: 800EAC4C (procSumouMoveInit__9daAlink_cFv)
//	800EBFD8: 80452CB0 (lit_6025)
//	800EBFF4: 80452D1C (lit_7448)
//	800EC008: 80452CB8 (lit_6040)
//	800EC020: 80452CC4 (lit_6109)
//	800EC024: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800EC068: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800EC098: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouAction() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouAction__9daAlink_cFv.s"
}
#pragma pop

/* 800EC0F8-800EC170 0078+00 s=1 e=0 z=0  None .text      procSumouStaggerInit__9daAlink_cFv */
//	800EC110: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800EC13C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EC140: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouStaggerInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouStaggerInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EC170-800EC20C 009C+00 s=1 e=0 z=0  None .text      procSumouStagger__9daAlink_cFv */
//	800EC18C: 800EA844 (checkSumouVsActor__9daAlink_cFv)
//	800EC1D8: 800EB624 (procSumouActionInit__9daAlink_cFiii)
//	800EC1F0: 800EB208 (procSumouSideMoveInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouStagger() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouStagger__9daAlink_cFv.s"
}
#pragma pop

/* 800EC20C-800EC3D8 01CC+00 s=1 e=0 z=0  None .text      procSumouWinLoseInit__9daAlink_cFv */
//	800EC224: 803621DC (_savegpr_29)
//	800EC244: 800EA8D0 (cancelSumouMode__9daAlink_cFv)
//	800EC24C: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800EC260: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800EC264: 80452DB8 (lit_10041)
//	800EC2B4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EC2C0: 80452D30 (lit_7625)
//	800EC2E8: 80452D20 (lit_7449)
//	800EC30C: 80452CC0 (lit_6108)
//	800EC310: 80452E74 (lit_15341)
//	800EC340: 80452CB8 (lit_6040)
//	800EC34C: 80452CC4 (lit_6109)
//	800EC350: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800EC368: 80452D10 (lit_7306)
//	800EC378: 80452CC0 (lit_6108)
//	800EC38C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800EC390: 80452CC0 (lit_6108)
//	800EC3A0: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800EC3AC: 80452D78 (lit_8676)
//	800EC3C4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouWinLoseInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouWinLoseInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EC3D8-800EC538 0160+00 s=1 e=0 z=0  None .text      procSumouWinLose__9daAlink_cFv */
//	800EC428: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800EC450: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800EC478: 800EA8D0 (cancelSumouMode__9daAlink_cFv)
//	800EC480: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800EC490: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EC49C: 80452DB8 (lit_10041)
//	800EC4D0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EC4DC: 80452DB8 (lit_10041)
//	800EC504: 80452D60 (lit_8369)
//	800EC508: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouWinLose() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouWinLose__9daAlink_cFv.s"
}
#pragma pop

/* 800EC538-800EC5F4 00BC+00 s=1 e=0 z=0  None .text      procSumouShikoInit__9daAlink_cFv */
//	800EC550: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800EC56C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800EC570: 80452CC0 (lit_6108)
//	800EC578: 80425514 (l_waitBaseAnime)
//	800EC57C: 80425514 (l_waitBaseAnime)
//	800EC5C8: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800EC5D8: 800C12DC (deleteEquipItem__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouShikoInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouShikoInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EC5F4-800EC724 0130+00 s=1 e=0 z=0  None .text      procSumouShiko__9daAlink_cFv */
//	800EC634: 800EA950 (procSumouReadyInit__9daAlink_cFv)
//	800EC64C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800EC660: 80452CBC (lit_6041)
//	800EC664: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800EC680: 80452EB8 (lit_17592)
//	800EC684: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800EC6A0: 80452EBC (lit_17593)
//	800EC6A4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800EC6D4: 80452D34 (lit_7710)
//	800EC6D8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800EC6F4: 804061C0 (g_dComIfG_gameInfo)
//	800EC6F8: 804061C0 (g_dComIfG_gameInfo)
//	800EC704: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouShiko() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouShiko__9daAlink_cFv.s"
}
#pragma pop

/* 800EC724-800EC758 0034+00 s=3 e=0 z=0  None .text      daAlink_searchBoar__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchBoar(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchBoar__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800EC758-800EC76C 0014+00 s=1 e=0 z=0  None .text      daAlink_searchCoach__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchCoach(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchCoach__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800EC76C-800EC7B0 0044+00 s=3 e=0 z=0  None .text      checkHorseZeldaBowMode__9daAlink_cFv */
//	800EC76C: 804061C0 (g_dComIfG_gameInfo)
//	800EC770: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseZeldaBowMode() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseZeldaBowMode__9daAlink_cFv.s"
}
#pragma pop

/* 800EC7B0-800EC7DC 002C+00 s=4 e=0 z=0  None .text      setHorseZeldaDamage__9daAlink_cFv */
//	800EC7B0: 804061C0 (g_dComIfG_gameInfo)
//	800EC7B4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseZeldaDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseZeldaDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800EC7DC-800EC814 0038+00 s=2 e=0 z=0  None .text      checkHorseDashAccept__9daAlink_cFv */
//	800EC7E8: 80392094 (d_a_d_a_alink__stringBase0)
//	800EC7EC: 80392094 (d_a_d_a_alink__stringBase0)
//	800EC7F4: 8009DA60 (checkStageName__9daAlink_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseDashAccept() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseDashAccept__9daAlink_cFv.s"
}
#pragma pop

/* 800EC814-800EC87C 0068+00 s=1 e=0 z=0  None .text      checkCowGame__9daAlink_cFv */
//	800EC828: 80392094 (d_a_d_a_alink__stringBase0)
//	800EC82C: 80392094 (d_a_d_a_alink__stringBase0)
//	800EC834: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800EC840: 804061C0 (g_dComIfG_gameInfo)
//	800EC844: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCowGame() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCowGame__9daAlink_cFv.s"
}
#pragma pop

/* 800EC87C-800EC8F8 007C+00 s=2 e=0 z=0  None .text      getReinRideDirection__9daAlink_cFv */
//	800EC898: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800EC8BC: 803650D0 (abs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getReinRideDirection() {
    nofralloc
#include "asm/d/a/d_a_alink/getReinRideDirection__9daAlink_cFv.s"
}
#pragma pop

/* 800EC8F8-800ECA3C 0144+00 s=1 e=0 z=0  None .text      checkReinRideBgCheck__9daAlink_cFv */
//	800EC908: 803621DC (_savegpr_29)
//	800EC910: 8038D658 (lit_3757)
//	800EC914: 8038D658 (lit_3757)
//	800EC918: 800EC87C (getReinRideDirection__9daAlink_cFv)
//	800EC988: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800EC98C: 803DD470 (now__14mDoMtx_stack_c)
//	800EC990: 803DD470 (now__14mDoMtx_stack_c)
//	800EC99C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800EC9A0: 803DD470 (now__14mDoMtx_stack_c)
//	800EC9A4: 803DD470 (now__14mDoMtx_stack_c)
//	800EC9B0: 80346D6C (PSMTXMultVec)
//	800EC9DC: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800ECA28: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkReinRideBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/checkReinRideBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* 800ECA3C-800ECAAC 0070+00 s=3 e=0 z=0  None .text      commonInitForceRideRein__9daAlink_cFv */
//	800ECA54: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	800ECA84: 800B3844 (initServiceWaitTime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonInitForceRideRein() {
    nofralloc
#include "asm/d/a/d_a_alink/commonInitForceRideRein__9daAlink_cFv.s"
}
#pragma pop

/* 800ECAAC-800ECB58 00AC+00 s=1 e=0 z=0  None .text      initForceRideBoar__9daAlink_cFv */
//	800ECAC4: 800EC724 (daAlink_searchBoar__FP10fopAc_ac_cPv)
//	800ECAC8: 800EC724 (daAlink_searchBoar__FP10fopAc_ac_cPv)
//	800ECAD0: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800ECAE8: 800ECA3C (commonInitForceRideRein__9daAlink_cFv)
//	800ECB24: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800ECB28: 804255A4 (l_boarBaseAnime)
//	800ECB2C: 804255A4 (l_boarBaseAnime)
//	800ECB38: 80037CB0 (setPlayerRide__10e_wb_classFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initForceRideBoar() {
    nofralloc
#include "asm/d/a/d_a_alink/initForceRideBoar__9daAlink_cFv.s"
}
#pragma pop

/* 800ECB58-800ECBD0 0078+00 s=4 e=0 z=0  None .text      initForceRideHorse__9daAlink_cFv */
//	800ECB70: 800ECA3C (commonInitForceRideRein__9daAlink_cFv)
//	800ECB80: 804061C0 (g_dComIfG_gameInfo)
//	800ECB84: 804061C0 (g_dComIfG_gameInfo)
//	800ECB8C: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800ECB90: 8042558C (l_horseBaseAnime)
//	800ECB94: 8042558C (l_horseBaseAnime)
//	800ECBA4: 80362084 (__ptmf_scall)
//	800ECBB4: 802C3A6C (setRiding__14Z2CreatureLinkFb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initForceRideHorse() {
    nofralloc
#include "asm/d/a/d_a_alink/initForceRideHorse__9daAlink_cFv.s"
}
#pragma pop

/* 800ECBD0-800ECD90 01C0+00 s=5 e=0 z=0  None .text      rideGetOff__9daAlink_cFv */
//	800ECBFC: 804061C0 (g_dComIfG_gameInfo)
//	800ECC00: 804061C0 (g_dComIfG_gameInfo)
//	800ECC14: 80362084 (__ptmf_scall)
//	800ECC24: 802C3A6C (setRiding__14Z2CreatureLinkFb)
//	800ECC54: 80037CF4 (getOff__10e_wb_classFv)
//	800ECD0C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800ECD44: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800ECD54: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::rideGetOff() {
    nofralloc
#include "asm/d/a/d_a_alink/rideGetOff__9daAlink_cFv.s"
}
#pragma pop

/* 800ECD90-800ECDC4 0034+00 s=1 e=0 z=0  None .text      checkHorseNotDamageReaction__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseNotDamageReaction() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseNotDamageReaction__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECDC4-800ECDEC 0028+00 s=1 e=0 z=2  None .text      checkHorseWaitLashAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseWaitLashAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseWaitLashAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECDEC-800ECE10 0024+00 s=1 e=0 z=0  None .text      checkHorseReinLeftOnly__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseReinLeftOnly() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseReinLeftOnly__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECE10-800ECF04 00F4+00 s=2 e=0 z=0  None .text      getReinHandType__9daAlink_cCFv */
//	800ECEC0: 800ED1F0 (checkHorseNotGrab__9daAlink_cCFv)
//	800ECED8: 800ECDEC (checkHorseReinLeftOnly__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getReinHandType() const {
    nofralloc
#include "asm/d/a/d_a_alink/getReinHandType__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECF04-800ECF5C 0058+00 s=5 e=0 z=1  None .text      checkHorseLieAnime__9daAlink_cCFv */
//	800ECF24: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseLieAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseLieAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECF5C-800ECF9C 0040+00 s=0 e=0 z=3  None .text      checkHorseSubjectivity__9daAlink_cCFv */
//	800ECF60: 804061C0 (g_dComIfG_gameInfo)
//	800ECF64: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseSubjectivity() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseSubjectivity__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECF9C-800ECFF4 0058+00 s=2 e=0 z=0  None .text      setHorseSwordUpAnime__9daAlink_cFv */
//	800ECFB4: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800ECFB8: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800ECFC4: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800ECFDC: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseSwordUpAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseSwordUpAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800ECFF4-800ED074 0080+00 s=1 e=0 z=0  None .text      setHorseTurnUpperAnime__9daAlink_cFi */
//	800ED010: 800ED074 (checkHorseNoUpperAnime__9daAlink_cCFv)
//	800ED054: 80452D24 (lit_7450)
//	800ED058: 800AD374 (setUpperAnimeBaseMorf__9daAlink_cFUsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseTurnUpperAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseTurnUpperAnime__9daAlink_cFi.s"
}
#pragma pop

/* 800ED074-800ED0D4 0060+00 s=9 e=0 z=0  None .text      checkHorseNoUpperAnime__9daAlink_cCFv */
//	800ED09C: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseNoUpperAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseNoUpperAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800ED0D4-800ED1F0 011C+00 s=0 e=0 z=2  None .text getHorseReinHandPos__9daAlink_cFP4cXyzP4cXyz
 */
//	800ED0E4: 803621D8 (_savegpr_28)
//	800ED0F4: 8038D658 (lit_3757)
//	800ED0F8: 8038D658 (lit_3757)
//	800ED0FC: 800ECE10 (getReinHandType__9daAlink_cCFv)
//	800ED124: 80346D6C (PSMTXMultVec)
//	800ED144: 80346D6C (PSMTXMultVec)
//	800ED170: 80346D6C (PSMTXMultVec)
//	800ED190: 80346D6C (PSMTXMultVec)
//	800ED1B4: 80346D6C (PSMTXMultVec)
//	800ED1D4: 80346D6C (PSMTXMultVec)
//	800ED1DC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getHorseReinHandPos(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/getHorseReinHandPos__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800ED1F0-800ED310 0120+00 s=1 e=0 z=1  None .text      checkHorseNotGrab__9daAlink_cCFv */
//	800ED20C: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800ED264: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800ED280: 800E3C9C (checkGrabAnimeAndThrow__9daAlink_cCFv)
//	800ED290: 800E04AC (checkBoomerangThrowAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseNotGrab() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseNotGrab__9daAlink_cCFv.s"
}
#pragma pop

/* 800ED310-800ED4B8 01A8+00 s=1 e=0 z=0  None .text      setHorseStirrup__9daAlink_cFv */
//	800ED328: 804061C0 (g_dComIfG_gameInfo)
//	800ED32C: 804061C0 (g_dComIfG_gameInfo)
//	800ED394: 803DD470 (now__14mDoMtx_stack_c)
//	800ED398: 803DD470 (now__14mDoMtx_stack_c)
//	800ED39C: 803464B0 (PSMTXCopy)
//	800ED3A0: 80452D6C (lit_8473)
//	800ED3A4: 80452EC0 (lit_18068)
//	800ED3A8: 80452D2C (lit_7624)
//	800ED3AC: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800ED3B0: 803DD470 (now__14mDoMtx_stack_c)
//	800ED3B4: 803DD470 (now__14mDoMtx_stack_c)
//	800ED3C4: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	800ED3D8: 803DD470 (now__14mDoMtx_stack_c)
//	800ED3DC: 803DD470 (now__14mDoMtx_stack_c)
//	800ED3E0: 803464B0 (PSMTXCopy)
//	800ED408: 803DD470 (now__14mDoMtx_stack_c)
//	800ED40C: 803DD470 (now__14mDoMtx_stack_c)
//	800ED410: 803464B0 (PSMTXCopy)
//	800ED414: 80452D6C (lit_8473)
//	800ED418: 80452EB4 (lit_17382)
//	800ED41C: 80452D2C (lit_7624)
//	800ED420: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800ED424: 803DD470 (now__14mDoMtx_stack_c)
//	800ED428: 803DD470 (now__14mDoMtx_stack_c)
//	800ED430: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	800ED444: 803DD470 (now__14mDoMtx_stack_c)
//	800ED448: 803DD470 (now__14mDoMtx_stack_c)
//	800ED44C: 803464B0 (PSMTXCopy)
//	800ED460: 80327C58 (calcWeightEnvelopeMtx__8J3DModelFv)
//	800ED468: 800ECE10 (getReinHandType__9daAlink_cCFv)
//	800ED47C: 80362084 (__ptmf_scall)
//	800ED498: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseStirrup() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseStirrup__9daAlink_cFv.s"
}
#pragma pop

/* 800ED4B8-800ED4DC 0024+00 s=1 e=0 z=0  None .text      changeBoarRunRide__9daAlink_cFv */
//	800ED4C8: 80037DBC (setRunRideMode__10e_wb_classFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeBoarRunRide() {
    nofralloc
#include "asm/d/a/d_a_alink/changeBoarRunRide__9daAlink_cFv.s"
}
#pragma pop

/* 800ED4DC-800ED78C 02B0+00 s=7 e=0 z=0  None .text      setSyncHorsePos__9daAlink_cFv */
//	800ED4F4: 804061C0 (g_dComIfG_gameInfo)
//	800ED4F8: 804061C0 (g_dComIfG_gameInfo)
//	800ED524: 800ECBD0 (rideGetOff__9daAlink_cFv)
//	800ED52C: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800ED558: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ED56C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ED580: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800ED5A8: 80391954 (localHorseRun_18095)
//	800ED5AC: 80391954 (localHorseRun_18095)
//	800ED5B4: 80346D6C (PSMTXMultVec)
//	800ED5E8: 80452C98 (lit_5943)
//	800ED5F4: 80452CB0 (lit_6025)
//	800ED618: 80452CB8 (lit_6040)
//	800ED62C: 80452CB0 (lit_6025)
//	800ED66C: 80391960 (localHorseRun_18103)
//	800ED670: 80391960 (localHorseRun_18103)
//	800ED678: 80346D6C (PSMTXMultVec)
//	800ED690: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	800ED6B4: 804061C0 (g_dComIfG_gameInfo)
//	800ED6B8: 804061C0 (g_dComIfG_gameInfo)
//	800ED6D8: 80452EC4 (lit_18176)
//	800ED704: 804255BC (l_localHorseRidePos)
//	800ED708: 804255BC (l_localHorseRidePos)
//	800ED710: 80346D6C (PSMTXMultVec)
//	800ED748: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncHorsePos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncHorsePos__9daAlink_cFv.s"
}
#pragma pop

/* 800ED78C-800ED90C 0180+00 s=4 e=0 z=0  None .text      setSyncBoarPos__9daAlink_cFv */
//	800ED7D0: 800ECBD0 (rideGetOff__9daAlink_cFv)
//	800ED7D8: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800ED7F0: 80452DE4 (lit_12328)
//	800ED838: 80037D68 (checkDownDamage__10e_wb_classFv)
//	800ED848: 800EF35C (boarForceGetOff__9daAlink_cFv)
//	800ED858: 80037D94 (checkNormalRideMode__10e_wb_classCFv)
//	800ED874: 800F38E8 (procBoarRunInit__9daAlink_cFv)
//	800ED8A0: 804255D4 (l_localBoarRidePos)
//	800ED8A4: 804255D4 (l_localBoarRidePos)
//	800ED8AC: 80346D6C (PSMTXMultVec)
//	800ED8B8: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncBoarPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncBoarPos__9daAlink_cFv.s"
}
#pragma pop

/* 800ED90C-800EDA24 0118+00 s=1 e=0 z=0  None .text      setSyncBoarRunPos__9daAlink_cFv */
//	800ED91C: 803621DC (_savegpr_29)
//	800ED934: 80037D68 (checkDownDamage__10e_wb_classFv)
//	800ED944: 800EF35C (boarForceGetOff__9daAlink_cFv)
//	800ED954: 80037D94 (checkNormalRideMode__10e_wb_classCFv)
//	800ED964: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800ED990: 8039196C (localOffset_18237)
//	800ED994: 8039196C (localOffset_18237)
//	800ED99C: 80346D6C (PSMTXMultVec)
//	800ED9A8: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	800EDA10: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncBoarRunPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncBoarRunPos__9daAlink_cFv.s"
}
#pragma pop

/* 800EDA24-800EDA78 0054+00 s=33 e=0 z=0  None .text      setSyncRidePos__9daAlink_cFv */
//	800EDA54: 800ED4DC (setSyncHorsePos__9daAlink_cFv)
//	800EDA60: 800ED78C (setSyncBoarPos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncRidePos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncRidePos__9daAlink_cFv.s"
}
#pragma pop

/* 800EDA78-800EDB48 00D0+00 s=6 e=0 z=0  None .text      setHorseTurnAnime__9daAlink_cFv */
//	800EDA90: 804061C0 (g_dComIfG_gameInfo)
//	800EDA94: 804061C0 (g_dComIfG_gameInfo)
//	800EDB00: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseTurnAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseTurnAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800EDB48-800EDD6C 0224+00 s=2 e=0 z=0  None .text
 * getBaseHorseAnime__9daAlink_cFPQ29daAlink_c11daAlink_ANM     */
//	800EDB58: 803621D8 (_savegpr_28)
//	800EDB64: 804061C0 (g_dComIfG_gameInfo)
//	800EDB68: 804061C0 (g_dComIfG_gameInfo)
//	800EDB70: 800ED074 (checkHorseNoUpperAnime__9daAlink_cCFv)
//	800EDB88: 804061C0 (g_dComIfG_gameInfo)
//	800EDB8C: 804061C0 (g_dComIfG_gameInfo)
//	800EDBB0: 800B3220 (setRStatus__9daAlink_cFUc)
//	800EDBC0: 800B3220 (setRStatus__9daAlink_cFUc)
//	800EDBC8: 800B2664 (spActionButton__9daAlink_cFv)
//	800EDBDC: 80452CBC (lit_6041)
//	800EDBE0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800EDC10: 80452CC0 (lit_6108)
//	800EDC84: 800EC76C (checkHorseZeldaBowMode__9daAlink_cFv)
//	800EDD58: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBaseHorseAnime(daAlink_c::daAlink_ANM* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getBaseHorseAnime__9daAlink_cFPQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800EDD6C-800EDE8C 0120+00 s=9 e=0 z=0  None .text      checkHorseSpecialProc__9daAlink_cFv */
//	800EDD84: 804061C0 (g_dComIfG_gameInfo)
//	800EDD88: 804061C0 (g_dComIfG_gameInfo)
//	800EDDD8: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800EDE2C: 800F0C6C (procHorseTurnInit__9daAlink_cFv)
//	800EDE40: 800F1060 (procHorseJumpInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseSpecialProc() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseSpecialProc__9daAlink_cFv.s"
}
#pragma pop

/* 800EDE8C-800EDEEC 0060+00 s=2 e=0 z=0  None .text      checkHorseServiceWaitAnime__9daAlink_cFv
 */
//	800EDEAC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EDEC0: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseServiceWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseServiceWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800EDEEC-800EE64C 0760+00 s=1 e=0 z=0  None .text      setSyncHorse__9daAlink_cFi */
//	800EDF0C: 803621D8 (_savegpr_28)
//	800EDF18: 804061C0 (g_dComIfG_gameInfo)
//	800EDF1C: 804061C0 (g_dComIfG_gameInfo)
//	800EDF2C: 800ED4DC (setSyncHorsePos__9daAlink_cFv)
//	800EDF34: 800EDD6C (checkHorseSpecialProc__9daAlink_cFv)
//	800EDF50: 800EDB48 (getBaseHorseAnime__9daAlink_cFPQ29daAlink_c11daAlink_ANM)
//	800EDF60: 80452DE4 (lit_12328)
//	800EDF84: 80452CA4 (lit_6021)
//	800EDFE0: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800EDFEC: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EDFF0: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EE004: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800EE030:
//8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv) 	800EE044: 80452D24 (lit_7450) 	800EE048: 800ADAEC
//(resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf) 	800EE054: 800AC558
//(checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM) 	800EE064: 800B2664
//(spActionButton__9daAlink_cFv) 	800EE074: 800B9254 (checkNoUpperAnime__9daAlink_cCFv) 800EE088:
// 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM) 	800EE094: 800AD340
//(setUpperAnimeBase__9daAlink_cFUs) 	800EE0B0: 80452CC4 (lit_6109) 	800EE0B4: 800AD724
//(resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf) 	800EE0D0: 80452CC0 (lit_6108)
//800EE110: 800ED074 (checkHorseNoUpperAnime__9daAlink_cCFv) 	800EE120: 800B9340
//(checkEquipAnime__9daAlink_cCFv) 	800EE130: 800DCDF0 (checkUpperGuardAnime__9daAlink_cCFv)
//	800EE158: 800EC814 (checkCowGame__9daAlink_cFv)
//	800EE168: 800ED074 (checkHorseNoUpperAnime__9daAlink_cCFv)
//	800EE17C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800EE1B4: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EE1B8: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EE1C8: 800ECF9C (setHorseSwordUpAnime__9daAlink_cFv)
//	800EE1DC: 800EC7DC (checkHorseDashAccept__9daAlink_cFv)
//	800EE1F0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800EE200: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EE204: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EE23C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800EE248:
//800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM) 	800EE25C: 800ADAB8
//(setUnderAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERPC16daAlinkHIO_anm_c) 	800EE2B4:
// 8038E5A4 (m__19daAlinkHIO_horse_c0) 	800EE2B8: 8038E5A4 (m__19daAlinkHIO_horse_c0) 	800EE2CC:
// 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM) 	800EE2DC: 8038E5A4
//(m__19daAlinkHIO_horse_c0) 	800EE2E0: 8038E5A4 (m__19daAlinkHIO_horse_c0) 	800EE2F4: 800ECDC4
//(checkHorseWaitLashAnime__9daAlink_cCFv) 	800EE304: 80452D84 (lit_8781) 	800EE338: 80452D84
//(lit_8781) 	800EE354: 80452D84 (lit_8781) 	800EE384: 800EC76C
//(checkHorseZeldaBowMode__9daAlink_cFv) 	800EE398: 8038E5A4 (m__19daAlinkHIO_horse_c0) 	800EE39C:
//8038E5A4 (m__19daAlinkHIO_horse_c0) 	800EE3A4: 800AD724
//(resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf) 	800EE3EC: 8038E5A4
//(m__19daAlinkHIO_horse_c0) 	800EE3F0: 8038E5A4 (m__19daAlinkHIO_horse_c0) 	800EE3F8: 800AD724
//(resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf) 	800EE408: 8038E5A4
//(m__19daAlinkHIO_horse_c0) 	800EE40C: 8038E5A4 (m__19daAlinkHIO_horse_c0) 	800EE444: 800AD724
//(resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf) 	800EE464: 8015E4CC
//(checkAnmEnd__16daPy_frameCtrl_cFv) 	800EE478: 800EDE8C (checkHorseServiceWaitAnime__9daAlink_cFv)
//	800EE488: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800EE4E0: 800B2664 (spActionButton__9daAlink_cFv)
//	800EE4F4: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EE504: 800ECDC4 (checkHorseWaitLashAnime__9daAlink_cCFv)
//	800EE534: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EE538: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EE568: 80452D24 (lit_7450)
//	800EE59C: 80452CC0 (lit_6108)
//	800EE5B8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EE5E8: 80452CB8 (lit_6040)
//	800EE600: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800EE608:
// 800EEAE8 (setBaseHorseAnimeFrame__9daAlink_cFv) 	800EE61C: 800EEE5C
// (setHorseSwordUp__9daAlink_cFi) 	800EE638: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncHorse(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncHorse__9daAlink_cFi.s"
}
#pragma pop

/* 800EE64C-800EE918 02CC+00 s=1 e=0 z=0  None .text      setSyncBoar__9daAlink_cFi */
//	800EE65C: 803621D8 (_savegpr_28)
//	800EE674: 800ED78C (setSyncBoarPos__9daAlink_cFv)
//	800EE694: 80452DE4 (lit_12328)
//	800EE6AC: 80452CA4 (lit_6021)
//	800EE6BC: 80037C7C (checkWait__10e_wb_classFv)
//	800EE6F0: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800EE704: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EE708: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EE71C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800EE738:
//800ED074 (checkHorseNoUpperAnime__9daAlink_cCFv) 	800EE74C: 800B3250 (setDoStatus__9daAlink_cFUc)
//800EE760: 800ED4B8 (changeBoarRunRide__9daAlink_cFv) 	800EE768: 8015E4CC
// (checkAnmEnd__16daPy_frameCtrl_cFv) 	800EE784: 800EDE8C (checkHorseServiceWaitAnime__9daAlink_cFv)
//	800EE794: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800EE7B0: 800EEC98 (setBaseBoarAnime__9daAlink_cFv)
//	800EE7C8: 80452D30 (lit_7625)
//	800EE7CC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800EE7DC: 800ED4B8 (changeBoarRunRide__9daAlink_cFv)
//	800EE7E8: 800EDE8C (checkHorseServiceWaitAnime__9daAlink_cFv)
//	800EE804: 800EEC98 (setBaseBoarAnime__9daAlink_cFv)
//	800EE828: 800ECFF4 (setHorseTurnUpperAnime__9daAlink_cFi)
//	800EE840: 800ECFF4 (setHorseTurnUpperAnime__9daAlink_cFi)
//	800EE880: 80452D24 (lit_7450)
//	800EE884: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800EE888: 80452CC0 (lit_6108)
//	800EE894: 80452EC8 (lit_18706)
//	800EE898: 80452CB0 (lit_6025)
//	800EE8B8: 80452CBC (lit_6041)
//	800EE8C8: 80452CB8 (lit_6040)
//	800EE8F4: 80452CC0 (lit_6108)
//	800EE904: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncBoar(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncBoar__9daAlink_cFi.s"
}
#pragma pop

/* 800EE918-800EEAE8 01D0+00 s=12 e=0 z=0  None .text      setSyncRide__9daAlink_cFi */
//	800EE944: 804061C0 (g_dComIfG_gameInfo)
//	800EE948: 804061C0 (g_dComIfG_gameInfo)
//	800EE970: 804061C0 (g_dComIfG_gameInfo)
//	800EE974: 804061C0 (g_dComIfG_gameInfo)
//	800EE998: 800B47B4 (checkServiceWaitMode__9daAlink_cFv)
//	800EE9D4: 800DE780 (checkBowAndSlingItem__9daAlink_cFi)
//	800EE9E4: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	800EE9F8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EEA0C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EEA20: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EEA50: 8026786C (cM_rnd__Fv)
//	800EEA54: 80452C98 (lit_5943)
//	800EEA68: 80452D24 (lit_7450)
//	800EEA6C: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800EEA7C: 80452D24 (lit_7450)
//	800EEA80: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800EEA88: 800B3844 (initServiceWaitTime__9daAlink_cFv)
//	800EEA94: 800B3844 (initServiceWaitTime__9daAlink_cFv)
//	800EEABC: 800EDEEC (setSyncHorse__9daAlink_cFi)
//	800EEACC: 800EE64C (setSyncBoar__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncRide(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncRide__9daAlink_cFi.s"
}
#pragma pop

/* 800EEAE8-800EEC98 01B0+00 s=2 e=0 z=0  None .text      setBaseHorseAnimeFrame__9daAlink_cFv */
//	800EEB00: 803621D8 (_savegpr_28)
//	800EEB08: 804061C0 (g_dComIfG_gameInfo)
//	800EEB0C: 804061C0 (g_dComIfG_gameInfo)
//	800EEB2C: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EEB50: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EEB78: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EEB94: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800EEBC4: 80452CB0 (lit_6025)
//	800EEBF0: 80452CC0 (lit_6108)
//	800EEC28: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800EEC84: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBaseHorseAnimeFrame() {
    nofralloc
#include "asm/d/a/d_a_alink/setBaseHorseAnimeFrame__9daAlink_cFv.s"
}
#pragma pop

/* 800EEC98-800EED98 0100+00 s=2 e=0 z=0  None .text      setBaseBoarAnime__9daAlink_cFv */
//	800EECA8: 803621DC (_savegpr_29)
//	800EECB4: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800EECC0: 80451018 (m_midnaActor__9daPy_py_c)
//	800EECC8: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	800EECD4: 80452CC0 (lit_6108)
//	800EECE8: 80452DF8 (lit_13700)
//	800EECF8: 80452CB8 (lit_6040)
//	800EED0C: 80452CBC (lit_6041)
//	800EED10: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800EED18:
// 80452C98 (lit_5943) 	800EED28: 80452ECC (lit_18830) 	800EED34: 80452CB8 (lit_6040) 	800EED48:
// 80452CBC (lit_6041) 	800EED4C: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800EED58:
// 80452D14 (lit_7307) 	800EED64: 80452CB8 (lit_6040) 	800EED78: 80452CBC (lit_6041) 	800EED7C:
// 800ACA14 (setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif)
//800EED84: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBaseBoarAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBaseBoarAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800EED98-800EEE30 0098+00 s=18 e=0 z=0  None .text      setBaseRideAnime__9daAlink_cFv */
//	800EEDC8: 804061C0 (g_dComIfG_gameInfo)
//	800EEDCC: 804061C0 (g_dComIfG_gameInfo)
//	800EEDDC: 800EDB48 (getBaseHorseAnime__9daAlink_cFPQ29daAlink_c11daAlink_ANM)
//	800EEDE8: 80452CB8 (lit_6040)
//	800EEE00: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800EEE08:
// 800EEAE8 (setBaseHorseAnimeFrame__9daAlink_cFv) 	800EEE14: 800EEC98
//(setBaseBoarAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBaseRideAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBaseRideAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800EEE30-800EEE5C 002C+00 s=1 e=0 z=0  None .text      checkHorseSwordUpSpped__9daAlink_cFv */
//	800EEE30: 804061C0 (g_dComIfG_gameInfo)
//	800EEE34: 804061C0 (g_dComIfG_gameInfo)
//	800EEE40: 80452ED0 (lit_18847)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseSwordUpSpped() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseSwordUpSpped__9daAlink_cFv.s"
}
#pragma pop

/* 800EEE5C-800EEF30 00D4+00 s=2 e=0 z=0  None .text      setHorseSwordUp__9daAlink_cFi */
//	800EEE94: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800EEEAC: 800EC76C (checkHorseZeldaBowMode__9daAlink_cFv)
//	800EEEC4: 800EEE30 (checkHorseSwordUpSpped__9daAlink_cFv)
//	800EEEDC: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
//	800EEEF8: 800ECF9C (setHorseSwordUpAnime__9daAlink_cFv)
//	800EEEFC: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EEF00: 8038E5A4 (m__19daAlinkHIO_horse_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseSwordUp(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseSwordUp__9daAlink_cFi.s"
}
#pragma pop

/* 800EEF30-800EF050 0120+00 s=9 e=0 z=0  None .text      setRideSubjectAngle__9daAlink_cFs */
//	800EEF5C: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	800EEF74: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EEF78: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EEF80: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800EEF84: 8038E5A4 (m__19daAlinkHIO_horse_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRideSubjectAngle(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setRideSubjectAngle__9daAlink_cFs.s"
}
#pragma pop

/* 800EF050-800EF0E8 0098+00 s=7 e=0 z=0  None .text      setBodyAngleRideReadyAnime__9daAlink_cFv
 */
//	800EF068: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
//	800EF080: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800EF0D0: 8015F97C (daPy_addCalcShort__FPsssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBodyAngleRideReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBodyAngleRideReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800EF0E8-800EF198 00B0+00 s=1 e=0 z=0  None .text
 * checkHorseGetOffWallCheck__9daAlink_cFP4cXyzP4cXyzs          */
//	800EF0F8: 803621DC (_savegpr_29)
//	800EF104: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800EF11C: 80075D0C (dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo)
//	800EF130: 80452ED4 (lit_18929)
//	800EF134: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	800EF138: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	800EF15C: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	800EF184: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseGetOffWallCheck(cXyz* param_0, cXyz* param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseGetOffWallCheck__9daAlink_cFP4cXyzP4cXyzs.s"
}
#pragma pop

/* 800EF198-800EF35C 01C4+00 s=2 e=0 z=0  None .text      checkHorseGetOffDirection__9daAlink_cFv */
//	800EF1B0: 803621D0 (_savegpr_26)
//	800EF200: 80452ED8 (lit_18997)
//	800EF204: 80439A20 (sincosTable___5JMath)
//	800EF208: 80439A20 (sincosTable___5JMath)
//	800EF240: 80391978 (lit_18938)
//	800EF244: 80391978 (lit_18938)
//	800EF26C: 80452C98 (lit_5943)
//	800EF280: 80450690 (l_autoUpHeight)
//	800EF294: 80452D14 (lit_7307)
//	800EF2BC: 800EF0E8 (checkHorseGetOffWallCheck__9daAlink_cFP4cXyzP4cXyzs)
//	800EF348: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseGetOffDirection() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseGetOffDirection__9daAlink_cFv.s"
}
#pragma pop

/* 800EF35C-800EF394 0038+00 s=4 e=0 z=0  None .text      boarForceGetOff__9daAlink_cFv */
//	800EF380: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::boarForceGetOff() {
    nofralloc
#include "asm/d/a/d_a_alink/boarForceGetOff__9daAlink_cFv.s"
}
#pragma pop

/* 800EF394-800EF450 00BC+00 s=2 e=0 z=0  None .text      horseGetOffEnd__9daAlink_cFv */
//	800EF3CC: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800EF3D0: 803DD470 (now__14mDoMtx_stack_c)
//	800EF3D4: 803DD470 (now__14mDoMtx_stack_c)
//	800EF3DC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	800EF3FC: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800EF400: 803DD470 (now__14mDoMtx_stack_c)
//	800EF404: 803DD470 (now__14mDoMtx_stack_c)
//	800EF40C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	800EF418: 80425514 (l_waitBaseAnime)
//	800EF41C: 80425514 (l_waitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::horseGetOffEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/horseGetOffEnd__9daAlink_cFv.s"
}
#pragma pop

/* 800EF450-800EF598 0148+00 s=12 e=0 z=0  None .text      checkNextActionHorse__9daAlink_cFv */
//	800EF464: 800E3C9C (checkGrabAnimeAndThrow__9daAlink_cCFv)
//	800EF480: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	800EF498: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800EF4A8: 800DF814 (checkNextActionBow__9daAlink_cFv)
//	800EF4B4: 800E0440 (checkBoomerangAnime__9daAlink_cCFv)
//	800EF4C4: 800E0BE4 (checkNextActionBoomerang__9daAlink_cFv)
//	800EF4F8: 801095C8 (checkNextActionHookshot__9daAlink_cFv)
//	800EF504: 800E3C9C (checkGrabAnimeAndThrow__9daAlink_cCFv)
//	800EF514: 800F2334 (procHorseGrabMoveInit__9daAlink_cFv)
//	800EF52C: 800F2D84 (procHorseComebackInit__9daAlink_cFv)
//	800EF53C: 804061C0 (g_dComIfG_gameInfo)
//	800EF540: 804061C0 (g_dComIfG_gameInfo)
//	800EF580: 800F0980 (procHorseWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionHorse() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionHorse__9daAlink_cFv.s"
}
#pragma pop

/* 800EF598-800EF6B0 0118+00 s=2 e=0 z=0  None .text      checkHorseGetOff__9daAlink_cFv */
//	800EF5A8: 803621D8 (_savegpr_28)
//	800EF5D4: 804061C0 (g_dComIfG_gameInfo)
//	800EF5D8: 804061C0 (g_dComIfG_gameInfo)
//	800EF5F4: 804061C0 (g_dComIfG_gameInfo)
//	800EF5F8: 804061C0 (g_dComIfG_gameInfo)
//	800EF60C: 80452CC4 (lit_6109)
//	800EF670: 80452CC4 (lit_6109)
//	800EF69C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseGetOff() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseGetOff__9daAlink_cFv.s"
}
#pragma pop

/* 800EF6B0-800EF884 01D4+00 s=3 e=0 z=0  None .text checkHorseGetOffAndSetDoStatus__9daAlink_cFv
 */
//	800EF6C0: 803621D8 (_savegpr_28)
//	800EF6C8: 804061C0 (g_dComIfG_gameInfo)
//	800EF6CC: 804061C0 (g_dComIfG_gameInfo)
//	800EF6D8: 800EF598 (checkHorseGetOff__9daAlink_cFv)
//	800EF6F0: 80452CE0 (lit_6845)
//	800EF700: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	800EF710: 800ECF04 (checkHorseLieAnime__9daAlink_cCFv)
//	800EF730: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800EF740: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800EF74C: 800ED074 (checkHorseNoUpperAnime__9daAlink_cCFv)
//	800EF75C: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800EF778: 80452CA4 (lit_6021)
//	800EF79C: 800EF198 (checkHorseGetOffDirection__9daAlink_cFv)
//	800EF7F4: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800EF804: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800EF854: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800EF864: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800EF870: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseGetOffAndSetDoStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseGetOffAndSetDoStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800EF884-800EF95C 00D8+00 s=2 e=0 z=0  None .text      setHorseGetOff__9daAlink_cFi */
//	800EF894: 803621DC (_savegpr_29)
//	800EF8A0: 804061C0 (g_dComIfG_gameInfo)
//	800EF8A4: 804061C0 (g_dComIfG_gameInfo)
//	800EF8EC: 800ECF04 (checkHorseLieAnime__9daAlink_cCFv)
//	800EF900: 80452CBC (lit_6041)
//	800EF904: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800EF910: 800C57A4 (procBackJumpInit__9daAlink_cFi)
//	800EF918: 8038D82C (m__22daAlinkHIO_backJump_c0)
//	800EF91C: 8038D82C (m__22daAlinkHIO_backJump_c0)
//	800EF938: 800F038C (procHorseGetOffInit__9daAlink_cFi)
//	800EF948: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseGetOff(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseGetOff__9daAlink_cFi.s"
}
#pragma pop

/* 800EF95C-800EFDC4 0468+00 s=1 e=0 z=0  None .text      procHorseRideInit__9daAlink_cFv */
//	800EF97C: 803621CC (_savegpr_25)
//	800EF984: 80425508 (lit_4409)
//	800EF988: 80425508 (lit_4409)
//	800EF9B4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800EF9C0: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800EFA10: 802C3A6C (setRiding__14Z2CreatureLinkFb)
//	800EFA1C: 80037C90 (setPlayerRideNow__10e_wb_classFv)
//	800EFA58: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800EFA78: 80452CB8 (lit_6040)
//	800EFA90: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	800EFA98: 800EC87C (getReinRideDirection__9daAlink_cFv)
//	800EFAF4: 80452EDC (lit_19240)
//	800EFBA0: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800EFBA4: 80452CC0 (lit_6108)
//	800EFBB8: 80346D6C (PSMTXMultVec)
//	800EFBC4: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	800EFBC8: 803DD470 (now__14mDoMtx_stack_c)
//	800EFBCC: 803DD470 (now__14mDoMtx_stack_c)
//	800EFBD8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800EFBDC: 803DD470 (now__14mDoMtx_stack_c)
//	800EFBE0: 803DD470 (now__14mDoMtx_stack_c)
//	800EFBF4: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	800EFBF8: 803DD470 (now__14mDoMtx_stack_c)
//	800EFBFC: 803DD470 (now__14mDoMtx_stack_c)
//	800EFC10: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800EFC30: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800EFC34: 803DD470 (now__14mDoMtx_stack_c)
//	800EFC38: 803DD470 (now__14mDoMtx_stack_c)
//	800EFC44: 803464E4 (PSMTXConcat)
//	800EFC48: 803DD470 (now__14mDoMtx_stack_c)
//	800EFC4C: 803DD470 (now__14mDoMtx_stack_c)
//	800EFC58: 80346D6C (PSMTXMultVec)
//	800EFC6C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800EFC80: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800EFCA0: 803DD470 (now__14mDoMtx_stack_c)
//	800EFCA4: 803DD470 (now__14mDoMtx_stack_c)
//	800EFCB4: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	800EFCD4: 803DD470 (now__14mDoMtx_stack_c)
//	800EFCD8: 803DD470 (now__14mDoMtx_stack_c)
//	800EFCDC: 80391984 (boarRideOffset)
//	800EFCE0: 80391984 (boarRideOffset)
//	800EFCE8: 80346D6C (PSMTXMultVec)
//	800EFCF8: 80347090 (PSVECAdd)
//	800EFD38: 80452CC0 (lit_6108)
//	800EFD50: 80452D24 (lit_7450)
//	800EFD54: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800EFDB0: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseRideInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseRideInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EFDC4-800F038C 05C8+00 s=1 e=0 z=0  None .text      procHorseRide__9daAlink_cFv */
//	800EFDD4: 803621D8 (_savegpr_28)
//	800EFDF0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800EFE10: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800EFE20: 80347090 (PSVECAdd)
//	800EFE4C: 80452C9C (lit_5944)
//	800EFE70: 80452D48 (lit_8130)
//	800EFE98: 80452E64 (lit_14954)
//	800EFEA8: 800F2EE0 (procHorseRunInit__9daAlink_cFv)
//	800EFEB0: 80452D24 (lit_7450)
//	800EFEC4: 800ED4DC (setSyncHorsePos__9daAlink_cFv)
//	800EFED0: 80452D24 (lit_7450)
//	800EFEE0: 80452D8C (lit_8783)
//	800EFEF4: 80452EE0 (lit_19379)
//	800EFF10: 80452D8C (lit_8783)
//	800EFF20: 800ED4DC (setSyncHorsePos__9daAlink_cFv)
//	800EFF44: 80452EE4 (lit_19380)
//	800EFF88: 80452EE8 (lit_19381)
//	800EFFE8: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	800F0008: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800F0024: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800F002C: 80452E94 (lit_16210)
//	800F0064: 80452EEC (lit_19382)
//	800F00A0: 80452D94 (lit_8785)
//	800F00E4: 80452EB4 (lit_17382)
//	800F00F4: 80452E04 (lit_13794)
//	800F0108: 80452DF8 (lit_13700)
//	800F0124: 80452E94 (lit_16210)
//	800F0160: 800ED4DC (setSyncHorsePos__9daAlink_cFv)
//	800F0180: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F01B8: 80362084 (__ptmf_scall)
//	800F01D0: 8042558C (l_horseBaseAnime)
//	800F01D4: 8042558C (l_horseBaseAnime)
//	800F0208: 80037CB0 (setPlayerRide__10e_wb_classFv)
//	800F0210: 804255A4 (l_boarBaseAnime)
//	800F0214: 804255A4 (l_boarBaseAnime)
//	800F026C: 800EC7DC (checkHorseDashAccept__9daAlink_cFv)
//	800F0280: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800F0284: 8038E5A4 (m__19daAlinkHIO_horse_c0)
//	800F0290: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800F029C:
//800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM) 	800F02B0: 800ADAB8
//(setUnderAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERPC16daAlinkHIO_anm_c) 	800F02DC:
// 8038E5A4 (m__19daAlinkHIO_horse_c0) 	800F02E0: 8038E5A4 (m__19daAlinkHIO_horse_c0) 	800F0334:
// 80452CB8 (lit_6040) 	800F0338: 80452D34 (lit_7710) 	800F0340: 80452D24 (lit_7450) 	800F0344:
// 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf) 	800F0364: 800B93F4
//(swordEquip__9daAlink_cFi) 	800F036C: 800F0980 (procHorseWaitInit__9daAlink_cFv) 	800F0378:
//80362224
//(_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseRide() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseRide__9daAlink_cFv.s"
}
#pragma pop

/* 800F038C-800F0620 0294+00 s=1 e=0 z=0  None .text      procHorseGetOffInit__9daAlink_cFi */
//	800F039C: 803621DC (_savegpr_29)
//	800F03AC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F03B8: 80452CBC (lit_6041)
//	800F03BC: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F03D4: 800B983C (allUnequip__9daAlink_cFi)
//	800F0400: 80362084 (__ptmf_scall)
//	800F0410: 80037C90 (setPlayerRideNow__10e_wb_classFv)
//	800F0438: 803DD470 (now__14mDoMtx_stack_c)
//	800F043C: 803DD470 (now__14mDoMtx_stack_c)
//	800F044C: 803468E8 (PSMTXTrans)
//	800F0450: 803DD470 (now__14mDoMtx_stack_c)
//	800F0454: 803DD470 (now__14mDoMtx_stack_c)
//	800F045C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	800F0494: 803DD470 (now__14mDoMtx_stack_c)
//	800F0498: 803DD470 (now__14mDoMtx_stack_c)
//	800F049C: 80391990 (leftOffset)
//	800F04A0: 80391990 (leftOffset)
//	800F04A8: 80346D6C (PSMTXMultVec)
//	800F04D8: 803DD470 (now__14mDoMtx_stack_c)
//	800F04DC: 803DD470 (now__14mDoMtx_stack_c)
//	800F04E0: 8039199C (rightOffset)
//	800F04E4: 8039199C (rightOffset)
//	800F04EC: 80346D6C (PSMTXMultVec)
//	800F04F8: 80452D24 (lit_7450)
//	800F04FC: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800F0508: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800F050C: 804061C0 (g_dComIfG_gameInfo)
//	800F0510: 804061C0 (g_dComIfG_gameInfo)
//	800F051C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800F0538: 80450694 (l_autoDownHeight)
//	800F054C: 80452CC0 (lit_6108)
//	800F0560: 80452EF0 (lit_19428)
//	800F05A0: 80425514 (l_waitBaseAnime)
//	800F05A4: 80425514 (l_waitBaseAnime)
//	800F05C0: 80425514 (l_waitBaseAnime)
//	800F05C4: 80425514 (l_waitBaseAnime)
//	800F05DC: 80425514 (l_waitBaseAnime)
//	800F05E0: 80425514 (l_waitBaseAnime)
//	800F0600: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	800F060C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGetOffInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGetOffInit__9daAlink_cFi.s"
}
#pragma pop

/* 800F0620-800F0980 0360+00 s=1 e=0 z=0  None .text      procHorseGetOff__9daAlink_cFv */
//	800F0630: 803621DC (_savegpr_29)
//	800F0654: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F0664: 80347090 (PSVECAdd)
//	800F06B8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800F06C0: 80452DBC (lit_10042)
//	800F06FC: 80452D48 (lit_8130)
//	800F0728: 80452D24 (lit_7450)
//	800F0768: 80452D20 (lit_7449)
//	800F0778: 80452DF0 (lit_13382)
//	800F07A4: 80452CC4 (lit_6109)
//	800F07E0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F07F0: 800EF394 (horseGetOffEnd__9daAlink_cFv)
//	800F07FC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800F0808: 80452E28 (lit_14621)
//	800F083C: 800ECBD0 (rideGetOff__9daAlink_cFv)
//	800F0860: 80450690 (l_autoUpHeight)
//	800F0874: 80452CC0 (lit_6108)
//	800F087C: 80452CB8 (lit_6040)
//	800F0888: 804061C0 (g_dComIfG_gameInfo)
//	800F088C: 804061C0 (g_dComIfG_gameInfo)
//	800F08A0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800F08C0: 800EF394 (horseGetOffEnd__9daAlink_cFv)
//	800F08C8: 80452CC0 (lit_6108)
//	800F08CC: 800C6F18 (procLandInit__9daAlink_cFf)
//	800F08D8: 80452D38 (lit_7807)
//	800F08E8: 80425514 (l_waitBaseAnime)
//	800F08EC: 80425514 (l_waitBaseAnime)
//	800F08F0: 80452CB8 (lit_6040)
//	800F0934: 80452DF8 (lit_13700)
//	800F095C: 80452D24 (lit_7450)
//	800F0960: 800C6A48 (procFallInit__9daAlink_cFif)
//	800F096C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGetOff() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGetOff__9daAlink_cFv.s"
}
#pragma pop

/* 800F0980-800F0AA4 0124+00 s=16 e=0 z=0  None .text      procHorseWaitInit__9daAlink_cFv */
//	800F099C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F09D8: 80452CB8 (lit_6040)
//	800F09DC: 80452CC0 (lit_6108)
//	800F09E4: 80452CBC (lit_6041)
//	800F09E8: 800AD964 (setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf)
//	800F0A04: 80452CBC (lit_6041)
//	800F0A08: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F0A10: 800B3844 (initServiceWaitTime__9daAlink_cFv)
//	800F0A18: 800EF6B0 (checkHorseGetOffAndSetDoStatus__9daAlink_cFv)
//	800F0A24: 800ED074 (checkHorseNoUpperAnime__9daAlink_cCFv)
//	800F0A34: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800F0A44: 80452CA4 (lit_6021)
//	800F0A54: 800EF598 (checkHorseGetOff__9daAlink_cFv)
//	800F0A64: 800EF198 (checkHorseGetOffDirection__9daAlink_cFv)
//	800F0A7C: 800EE918 (setSyncRide__9daAlink_cFi)
//	800F0A80: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F0AA4-800F0C6C 01C8+00 s=1 e=0 z=0  None .text      procHorseWait__9daAlink_cFv */
//	800F0AB4: 803621DC (_savegpr_29)
//	800F0ABC: 800EF6B0 (checkHorseGetOffAndSetDoStatus__9daAlink_cFv)
//	800F0ACC: 800EE918 (setSyncRide__9daAlink_cFi)
//	800F0B10: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800F0B20: 800F2EE0 (procHorseRunInit__9daAlink_cFv)
//	800F0B30: 800B7BF8 (orderTalk__9daAlink_cFi)
//	800F0B48: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	800F0B5C: 800EF884 (setHorseGetOff__9daAlink_cFi)
//	800F0B7C: 800EC724 (daAlink_searchBoar__FP10fopAc_ac_cPv)
//	800F0B80: 800EC724 (daAlink_searchBoar__FP10fopAc_ac_cPv)
//	800F0B88: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800F0B9C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800F0BAC: 803650D0 (abs)
//	800F0BC0: 80452CC0 (lit_6108)
//	800F0BE8: 8034739C (PSVECSquareDistance)
//	800F0BFC: 80452EF4 (lit_19580)
//	800F0C10: 800B3298 (setBStatus__9daAlink_cFUc)
//	800F0C28: 804061C0 (g_dComIfG_gameInfo)
//	800F0C2C: 804061C0 (g_dComIfG_gameInfo)
//	800F0C4C: 800B3298 (setBStatus__9daAlink_cFUc)
//	800F0C58: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseWait__9daAlink_cFv.s"
}
#pragma pop

/* 800F0C6C-800F0CE4 0078+00 s=1 e=0 z=0  None .text      procHorseTurnInit__9daAlink_cFv */
//	800F0C84: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F0CAC: 80452CBC (lit_6041)
//	800F0CB0: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F0CB8: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F0CC8: 800EDA78 (setHorseTurnAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F0CE4-800F1060 037C+00 s=1 e=0 z=0  None .text      procHorseTurn__9daAlink_cFv */
//	800F0CF4: 803621DC (_savegpr_29)
//	800F0CFC: 804061C0 (g_dComIfG_gameInfo)
//	800F0D00: 804061C0 (g_dComIfG_gameInfo)
//	800F0D08: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F0D20: 80452D84 (lit_8781)
//	800F0D58: 800D2368 (checkCutTurnInputTrigger__9daAlink_cFv)
//	800F0D74: 800F1AAC (procHorseCutTurnInit__9daAlink_cFv)
//	800F0DC0: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800F0E58: 800ED074 (checkHorseNoUpperAnime__9daAlink_cCFv)
//	800F0E64: 804061C0 (g_dComIfG_gameInfo)
//	800F0E68: 804061C0 (g_dComIfG_gameInfo)
//	800F0E80: 800B3220 (setRStatus__9daAlink_cFUc)
//	800F0E90: 800B3220 (setRStatus__9daAlink_cFUc)
//	800F0E98: 800B2664 (spActionButton__9daAlink_cFv)
//	800F0EAC: 80452CBC (lit_6041)
//	800F0EB0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F0EBC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F0EC8: 800EDA78 (setHorseTurnAnime__9daAlink_cFv)
//	800F0ED4: 800EDA78 (setHorseTurnAnime__9daAlink_cFv)
//	800F0EDC: 800EF6B0 (checkHorseGetOffAndSetDoStatus__9daAlink_cFv)
//	800F0EEC: 800B7BF8 (orderTalk__9daAlink_cFi)
//	800F0F04: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	800F0F20: 800EF884 (setHorseGetOff__9daAlink_cFi)
//	800F0F7C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800F0F98: 80452CE0 (lit_6845)
//	800F0FC4: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800F0FD0: 800B2664 (spActionButton__9daAlink_cFv)
//	800F0FF0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F1008: 80452CBC (lit_6041)
//	800F100C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F1024: 800C5E68 (procAutoJumpInit__9daAlink_cFi)
//	800F1034: 800C57A4 (procBackJumpInit__9daAlink_cFi)
//	800F1040: 800EDA78 (setHorseTurnAnime__9daAlink_cFv)
//	800F104C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseTurn__9daAlink_cFv.s"
}
#pragma pop

/* 800F1060-800F10F8 0098+00 s=1 e=0 z=0  None .text      procHorseJumpInit__9daAlink_cFv */
//	800F1078: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F10A0: 80452CBC (lit_6041)
//	800F10A4: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F10AC: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F10C0: 800EDA78 (setHorseTurnAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseJumpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseJumpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F10F8-800F1188 0090+00 s=1 e=0 z=0  None .text      procHorseJump__9daAlink_cFv */
//	800F1110: 804061C0 (g_dComIfG_gameInfo)
//	800F1114: 804061C0 (g_dComIfG_gameInfo)
//	800F111C: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F115C: 800F1188 (procHorseLandInit__9daAlink_cFv)
//	800F1168: 800EDA78 (setHorseTurnAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseJump__9daAlink_cFv.s"
}
#pragma pop

/* 800F1188-800F1204 007C+00 s=1 e=0 z=0  None .text      procHorseLandInit__9daAlink_cFv */
//	800F11A0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F11C8: 80452CBC (lit_6041)
//	800F11CC: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F11D4: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F11E8: 800EDA78 (setHorseTurnAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F1204-800F1294 0090+00 s=1 e=0 z=0  None .text      procHorseLand__9daAlink_cFv */
//	800F121C: 804061C0 (g_dComIfG_gameInfo)
//	800F1220: 804061C0 (g_dComIfG_gameInfo)
//	800F1228: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F1268: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800F1274: 800EDA78 (setHorseTurnAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseLand__9daAlink_cFv.s"
}
#pragma pop

/* 800F1294-800F12F8 0064+00 s=1 e=0 z=0  None .text      procHorseSubjectivityInit__9daAlink_cFv */
//	800F12AC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F12C4: 80452CBC (lit_6041)
//	800F12C8: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F12D4: 800EE918 (setSyncRide__9daAlink_cFi)
//	800F12DC: 800CEAF4 (setSubjectMode__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F12F8-800F13D8 00E0+00 s=1 e=0 z=0  None .text      procHorseSubjectivity__9daAlink_cFv */
//	800F1308: 803621D8 (_savegpr_28)
//	800F132C: 800EE918 (setSyncRide__9daAlink_cFi)
//	800F134C: 800CEBD8 (checkSubjectEnd__9daAlink_cFi)
//	800F135C: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800F1368: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	800F1378: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800F13B8: 800EEF30 (setRideSubjectAngle__9daAlink_cFs)
//	800F13C4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 800F13D8-800F1688 02B0+00 s=1 e=0 z=0  None .text      procHorseCutInit__9daAlink_cFv */
//	800F13E8: 803621D8 (_savegpr_28)
//	800F13F0: 8038D658 (lit_3757)
//	800F13F4: 8038D658 (lit_3757)
//	800F13FC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F1418: 80452CBC (lit_6041)
//	800F141C: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F1428: 800EE918 (setSyncRide__9daAlink_cFi)
//	800F1444: 8007353C (LockonTarget__12dAttention_cFl)
//	800F145C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800F14B4: 8026786C (cM_rnd__Fv)
//	800F14B8: 80452C98 (lit_5943)
//	800F14DC: 8026786C (cM_rnd__Fv)
//	800F14E0: 80452C98 (lit_5943)
//	800F14FC: 80452D24 (lit_7450)
//	800F1500: 80267954 (cM_rndF__Ff)
//	800F157C: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800F1588:
// 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	800F15A0: 800AF4B0
//(setFaceBck__9daAlink_cFUsiUs) 	800F15AC: 800D152C (setCutType__9daAlink_cFUc) 	800F15FC:
//800D1688 (setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff) 	800F1624: 800D1688
//(setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff) 	800F165C: 80124144
//(setCutWaterDropEffect__9daAlink_cFv) 	800F1674: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCutInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F1688-800F1894 020C+00 s=1 e=0 z=0  None .text      procHorseCut__9daAlink_cFv */
//	800F16A8: 800EE918 (setSyncRide__9daAlink_cFi)
//	800F16C0: 800D20FC (setComboReserb__9daAlink_cFv)
//	800F16C8: 800D2684 (checkCutTurnCharge__9daAlink_cFv)
//	800F16D0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F16EC: 800D23C0 (checkCutAction__9daAlink_cFv)
//	800F16FC: 80452D24 (lit_7450)
//	800F1700: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F1708: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800F171C: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800F1750: 800B2664 (spActionButton__9daAlink_cFv)
//	800F176C: 800F1894 (procHorseCutChargeReadyInit__9daAlink_cFv)
//	800F1784: 800D23C0 (checkCutAction__9daAlink_cFv)
//	800F178C: 804061C0 (g_dComIfG_gameInfo)
//	800F1790: 804061C0 (g_dComIfG_gameInfo)
//	800F17A8: 800B3220 (setRStatus__9daAlink_cFUc)
//	800F17B8: 800B3220 (setRStatus__9daAlink_cFUc)
//	800F17C4: 80452CBC (lit_6041)
//	800F17C8: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F17D4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F17DC: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800F17F4: 804061C0 (g_dComIfG_gameInfo)
//	800F17F8: 804061C0 (g_dComIfG_gameInfo)
//	800F1810: 800B3220 (setRStatus__9daAlink_cFUc)
//	800F1820: 800B3220 (setRStatus__9daAlink_cFUc)
//	800F182C: 800D1430 (resetCombo__9daAlink_cFi)
//	800F1868: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCut() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCut__9daAlink_cFv.s"
}
#pragma pop

/* 800F1894-800F194C 00B8+00 s=3 e=0 z=0  None .text      procHorseCutChargeReadyInit__9daAlink_cFv
 */
//	800F18AC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F18BC: 8038DC9C (m__25daAlinkHIO_hoCutCharge_c0)
//	800F18C0: 8038DC9C (m__25daAlinkHIO_hoCutCharge_c0)
//	800F18C4: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800F18DC:
// 800AF4B0 (setFaceBck__9daAlink_cFUsiUs) 	800F18F0: 800EE918 (setSyncRide__9daAlink_cFi) 800F1908:
// 80452CBC (lit_6041) 	800F190C: 800ADAEC
// (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf) 	800F1910: 8038DE8C
//(m__17daAlinkHIO_cut_c0) 	800F1914: 8038DE8C (m__17daAlinkHIO_cut_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCutChargeReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCutChargeReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F194C-800F1AAC 0160+00 s=1 e=0 z=0  None .text      procHorseCutChargeReady__9daAlink_cFv */
//	800F195C: 803621DC (_savegpr_29)
//	800F196C: 800EE918 (setSyncRide__9daAlink_cFi)
//	800F1984: 800D22BC (setSwordChargeVoiceSe__9daAlink_cFv)
//	800F1990: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F199C: 804061C0 (g_dComIfG_gameInfo)
//	800F19A0: 804061C0 (g_dComIfG_gameInfo)
//	800F19B4: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	800F19CC: 80452CB0 (lit_6025)
//	800F19E8: 80452D48 (lit_8130)
//	800F1A08: 80452D48 (lit_8130)
//	800F1A1C: 80452CB0 (lit_6025)
//	800F1A50: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
//	800F1A6C: 800D23C0 (checkCutAction__9daAlink_cFv)
//	800F1A80: 800F1AAC (procHorseCutTurnInit__9daAlink_cFv)
//	800F1A8C: 800D23C0 (checkCutAction__9daAlink_cFv)
//	800F1A98: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCutChargeReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCutChargeReady__9daAlink_cFv.s"
}
#pragma pop

/* 800F1AAC-800F1BA4 00F8+00 s=3 e=0 z=0  None .text      procHorseCutTurnInit__9daAlink_cFv */
//	800F1AC4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F1ADC: 80452CBC (lit_6041)
//	800F1AE0: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F1AEC: 8038DC9C (m__25daAlinkHIO_hoCutCharge_c0)
//	800F1AF0: 8038DC9C (m__25daAlinkHIO_hoCutCharge_c0)
//	800F1AF8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800F1B04:
//800D152C (setCutType__9daAlink_cFUc) 	800F1B10: 800EE918 (setSyncRide__9daAlink_cFi) 	800F1B14:
//8038DC9C (m__25daAlinkHIO_hoCutCharge_c0) 	800F1B18: 8038DC9C (m__25daAlinkHIO_hoCutCharge_c0)
//800F1B24: 800D0F5C (getSwordAtType__9daAlink_cFv) 	800F1B40: 80452C98 (lit_5943) 	800F1B4C:
// 80452D68 (lit_8472) 	800F1B50: 800D1540 (setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff)
//800F1B54: 8038DC9C (m__25daAlinkHIO_hoCutCharge_c0) 	800F1B58: 8038DC9C
// (m__25daAlinkHIO_hoCutCharge_c0) 	800F1B84: 80124144 (setCutWaterDropEffect__9daAlink_cFv)
//	800F1B88: 800EC7B0 (setHorseZeldaDamage__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCutTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCutTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F1BA4-800F1D18 0174+00 s=1 e=0 z=0  None .text      procHorseCutTurn__9daAlink_cFv */
//	800F1BC4: 800EE918 (setSyncRide__9daAlink_cFi)
//	800F1BDC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F1BEC: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800F1BF4: 80452D24 (lit_7450)
//	800F1C00: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800F1C0C: 8038DC9C (m__25daAlinkHIO_hoCutCharge_c0)
//	800F1C10: 8038DC9C (m__25daAlinkHIO_hoCutCharge_c0)
//	800F1C28: 800B7BF8 (orderTalk__9daAlink_cFi)
//	800F1C40: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	800F1C50: 80452D24 (lit_7450)
//	800F1C5C: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800F1C6C: 80452CA4 (lit_6021)
//	800F1C7C: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800F1C84: 80452D24 (lit_7450)
//	800F1C90: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800F1CA0: 8038DC9C (m__25daAlinkHIO_hoCutCharge_c0)
//	800F1CA4: 8038DC9C (m__25daAlinkHIO_hoCutCharge_c0)
//	800F1CDC: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	800F1CF4: 80452D78 (lit_8676)
//	800F1CF8: 80270740 (cLib_chaseF__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCutTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCutTurn__9daAlink_cFv.s"
}
#pragma pop

/* 800F1D18-800F2028 0310+00 s=2 e=0 z=0  None .text
 * procHorseDamageInit__9daAlink_cFP12dCcD_GObjInf              */
//	800F1D28: 803621DC (_savegpr_29)
//	800F1D38: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F1D60: 80452CBC (lit_6041)
//	800F1D64: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F1D70: 800EE918 (setSyncRide__9daAlink_cFi)
//	800F1D7C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F1D90: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F1DA4: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F1DB8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F1DCC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F1DE0: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F1DFC: 803919D8 (anmIdx)
//	800F1E00: 803919D8 (anmIdx)
//	800F1E0C: 8038E428 (m__22daAlinkHIO_damHorse_c0)
//	800F1E10: 8038E428 (m__22daAlinkHIO_damHorse_c0)
//	800F1E14: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800F1E24:
// 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf) 	800F1E30: 80439A20 (sincosTable___5JMath)
//	800F1E34: 80439A20 (sincosTable___5JMath)
//	800F1E78: 8038E428 (m__22daAlinkHIO_damHorse_c0)
//	800F1E7C: 8038E428 (m__22daAlinkHIO_damHorse_c0)
//	800F1E8C: 80267674 (cM_atan2s__Fff)
//	800F1EB8: 8038E428 (m__22daAlinkHIO_damHorse_c0)
//	800F1EBC: 8038E428 (m__22daAlinkHIO_damHorse_c0)
//	800F1EE0: 80452CC0 (lit_6108)
//	800F1EFC: 80267674 (cM_atan2s__Fff)
//	800F1F38: 80267674 (cM_atan2s__Fff)
//	800F1F3C: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800F1F4C: 803919D8 (anmIdx)
//	800F1F50: 803919D8 (anmIdx)
//	800F1F5C: 8038E428 (m__22daAlinkHIO_damHorse_c0)
//	800F1F60: 8038E428 (m__22daAlinkHIO_damHorse_c0)
//	800F1F68: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800F1F80:
// 800AF4B0 (setFaceBck__9daAlink_cFUsiUs) 	800F1F8C: 800AFAA8
//(setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	800F1FC8: 80452DAC (lit_9828)
//	800F1FD8: 80452CB0 (lit_6025)
//	800F1FFC: 800EC7B0 (setHorseZeldaDamage__9daAlink_cFv)
//	800F2014: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseDamageInit(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseDamageInit__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800F2028-800F2150 0128+00 s=1 e=0 z=0  None .text      procHorseDamage__9daAlink_cFv */
//	800F2044: 800EE918 (setSyncRide__9daAlink_cFi)
//	800F2068: 80452CB0 (lit_6025)
//	800F208C: 802675E4 (cM_rad2s__Ff)
//	800F2094: 80439A20 (sincosTable___5JMath)
//	800F2098: 80439A20 (sincosTable___5JMath)
//	800F20A4: 80452CB0 (lit_6025)
//	800F2110: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F2124: 80452D24 (lit_7450)
//	800F2128: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F2130: 800F0980 (procHorseWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800F2150-800F21B4 0064+00 s=1 e=0 z=0  None .text      procHorseBowSubjectInit__9daAlink_cFv */
//	800F2168: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F2180: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F2188: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2198: 800DEB8C (setBowOrSlingStatus__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBowSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBowSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F21B4-800F224C 0098+00 s=1 e=0 z=0  None .text      procHorseBowSubject__9daAlink_cFv */
//	800F21CC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F21D4: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F21EC: 800EDD6C (checkHorseSpecialProc__9daAlink_cFv)
//	800F2204: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F220C: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	800F2220: 800EEF30 (setRideSubjectAngle__9daAlink_cFs)
//	800F2230: 800DFCD8 (setBowSight__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBowSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBowSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F224C-800F22A8 005C+00 s=1 e=0 z=0  None .text      procHorseBowMoveInit__9daAlink_cFv */
//	800F2264: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F227C: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F2284: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F228C: 800DEB8C (setBowOrSlingStatus__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBowMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBowMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F22A8-800F2334 008C+00 s=1 e=0 z=0  None .text      procHorseBowMove__9daAlink_cFv */
//	800F22C0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F22C8: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F22E0: 800EDD6C (checkHorseSpecialProc__9daAlink_cFv)
//	800F22F8: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2300: 800DEE1C (cancelBowMove__9daAlink_cFv)
//	800F2308: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	800F2318: 800EF050 (setBodyAngleRideReadyAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBowMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBowMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F2334-800F2390 005C+00 s=2 e=0 z=0  None .text      procHorseGrabMoveInit__9daAlink_cFv */
//	800F234C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F2364: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F236C: 800EED98 (setBaseRideAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGrabMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGrabMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2390-800F2454 00C4+00 s=1 e=0 z=0  None .text      procHorseGrabMove__9daAlink_cFv */
//	800F23A4: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F23BC: 800EDD6C (checkHorseSpecialProc__9daAlink_cFv)
//	800F23E0: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800F23F4: 80452D24 (lit_7450)
//	800F23F8: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F2400: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2408: 800E3C1C (checkGrabThrowAnime__9daAlink_cCFv)
//	800F2418: 80452D24 (lit_7450)
//	800F241C: 800E57AC (checkUpperGrabItemThrow__9daAlink_cFf)
//	800F242C: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800F2438: 800EF450 (checkNextActionHorse__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGrabMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGrabMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F2454-800F24C8 0074+00 s=1 e=0 z=0  None .text procHorseBoomerangSubjectInit__9daAlink_cFv
 */
//	800F246C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F2484: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F248C: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2498: 800E03D0 (initBoomerangUpperAnimeSpeed__9daAlink_cFi)
//	800F249C: 804061C0 (g_dComIfG_gameInfo)
//	800F24A0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBoomerangSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBoomerangSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F24C8-800F25B4 00EC+00 s=1 e=0 z=0  None .text      procHorseBoomerangSubject__9daAlink_cFv */
//	800F24DC: 800B72E4 (checkItemActorPointer__9daAlink_cFv)
//	800F2528: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F2530: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F2548: 800EDD6C (checkHorseSpecialProc__9daAlink_cFv)
//	800F2560: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2568: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	800F257C: 800EEF30 (setRideSubjectAngle__9daAlink_cFs)
//	800F258C: 800E0E64 (setBoomerangSight__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBoomerangSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBoomerangSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F25B4-800F2628 0074+00 s=1 e=0 z=0  None .text      procHorseBoomerangMoveInit__9daAlink_cFv
 */
//	800F25CC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F25E4: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F25EC: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F25F8: 800E03D0 (initBoomerangUpperAnimeSpeed__9daAlink_cFi)
//	800F25FC: 804061C0 (g_dComIfG_gameInfo)
//	800F2600: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBoomerangMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBoomerangMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2628-800F26F4 00CC+00 s=1 e=0 z=0  None .text      procHorseBoomerangMove__9daAlink_cFv */
//	800F263C: 800B72E4 (checkItemActorPointer__9daAlink_cFv)
//	800F2688: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F2690: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F26A8: 800EDD6C (checkHorseSpecialProc__9daAlink_cFv)
//	800F26C0: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F26C8: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	800F26D8: 800EF050 (setBodyAngleRideReadyAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBoomerangMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBoomerangMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F26F4-800F2770 007C+00 s=1 e=0 z=0  None .text      procHorseHookshotSubjectInit__9daAlink_cFv
 */
//	800F270C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F2724: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F272C: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2738: 801090EC (initHookshotUpperAnimeSpeed__9daAlink_cFi)
//	800F2740: 80109070 (setHookshotReadyMaterial__9daAlink_cFv)
//	800F2744: 804061C0 (g_dComIfG_gameInfo)
//	800F2748: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHookshotSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHookshotSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2770-800F2824 00B4+00 s=1 e=0 z=0  None .text      procHorseHookshotSubject__9daAlink_cFv */
//	800F2784: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	800F2798: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F27A0: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F27B8: 800EDD6C (checkHorseSpecialProc__9daAlink_cFv)
//	800F27D0: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F27D8: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	800F27EC: 800EEF30 (setRideSubjectAngle__9daAlink_cFs)
//	800F27FC: 80108DB4 (setHookshotSight__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHookshotSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHookshotSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F2824-800F2898 0074+00 s=1 e=0 z=0  None .text      procHorseHookshotMoveInit__9daAlink_cFv */
//	800F283C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F2854: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F285C: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2868: 801090EC (initHookshotUpperAnimeSpeed__9daAlink_cFi)
//	800F286C: 804061C0 (g_dComIfG_gameInfo)
//	800F2870: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHookshotMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHookshotMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2898-800F2934 009C+00 s=1 e=0 z=0  None .text      procHorseHookshotMove__9daAlink_cFv */
//	800F28AC: 80108F64 (cancelHookshotMove__9daAlink_cFv)
//	800F28B4: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	800F28C8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F28D0: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F28E8: 800EDD6C (checkHorseSpecialProc__9daAlink_cFv)
//	800F2900: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2908: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	800F2918: 800EF050 (setBodyAngleRideReadyAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHookshotMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHookshotMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F2934-800F2AD8 01A4+00 s=1 e=0 z=0  None .text      procHorseBottleDrinkInit__9daAlink_cFUs */
//	800F2950: 804061C0 (g_dComIfG_gameInfo)
//	800F2954: 804061C0 (g_dComIfG_gameInfo)
//	800F296C: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800F2990: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F29A8: 80452CBC (lit_6041)
//	800F29AC: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F29B4: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F29BC: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F29DC: 804061C0 (g_dComIfG_gameInfo)
//	800F29E0: 804061C0 (g_dComIfG_gameInfo)
//	800F2A08: 80452CC0 (lit_6108)
//	800F2A1C: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F2A2C: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	800F2A30: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	800F2A34: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800F2A40:
// 800AFB14 (setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM) 	800F2A48: 800BF854
//(keepItemData__9daAlink_cFv) 	800F2A54: 8010E5D8 (setBottleModel__9daAlink_cFUs) 	800F2A58:
//804061C0 (g_dComIfG_gameInfo) 	800F2A5C: 804061C0 (g_dComIfG_gameInfo) 	800F2A88: 80181640
//(dCam_getBody__Fv) 	800F2A94: 80392094 (d_a_d_a_alink__stringBase0) 	800F2A98: 80392094
//(d_a_d_a_alink__stringBase0) 	800F2AB0: 80088A7C (StartEventCamera__9dCamera_cFiie)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBottleDrinkInit(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBottleDrinkInit__9daAlink_cFUs.s"
}
#pragma pop

/* 800F2AD8-800F2B4C 0074+00 s=1 e=0 z=0  None .text      procHorseBottleDrink__9daAlink_cFv */
//	800F2AEC: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F2B00: 80452CC4 (lit_6109)
//	800F2B04: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F2B0C: 800BF884 (returnKeepItemData__9daAlink_cFv)
//	800F2B14: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	800F2B24: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2B30: 8010EAC4 (commonBottleDrink__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBottleDrink() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBottleDrink__9daAlink_cFv.s"
}
#pragma pop

/* 800F2B4C-800F2C78 012C+00 s=1 e=0 z=0  None .text      procHorseKandelaarPourInit__9daAlink_cFv
 */
//	800F2B60: 804061C0 (g_dComIfG_gameInfo)
//	800F2B64: 804061C0 (g_dComIfG_gameInfo)
//	800F2B7C: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800F2BA0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F2BB8: 80452CBC (lit_6041)
//	800F2BBC: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F2BC4: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F2BCC: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2BF8: 804061C0 (g_dComIfG_gameInfo)
//	800F2BFC: 804061C0 (g_dComIfG_gameInfo)
//	800F2C24: 80452CC0 (lit_6108)
//	800F2C38: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F2C48: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	800F2C4C: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	800F2C54: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800F2C5C:
// 80110FE0 (commonKandelaarPourInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseKandelaarPourInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseKandelaarPourInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2C78-800F2D84 010C+00 s=1 e=0 z=0  None .text      procHorseKandelaarPour__9daAlink_cFv */
//	800F2C8C: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F2CC0: 804061C0 (g_dComIfG_gameInfo)
//	800F2CC4: 804061C0 (g_dComIfG_gameInfo)
//	800F2CEC: 80452CC4 (lit_6109)
//	800F2CF0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F2CF8: 80110F88 (resetOilBottleModel__9daAlink_cFv)
//	800F2D00: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	800F2D10: 800EED98 (setBaseRideAnime__9daAlink_cFv)
//	800F2D1C: 801110B8 (commonKandelaarPour__9daAlink_cFi)
//	800F2D50: 804061C0 (g_dComIfG_gameInfo)
//	800F2D54: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseKandelaarPour() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseKandelaarPour__9daAlink_cFv.s"
}
#pragma pop

/* 800F2D84-800F2DE4 0060+00 s=2 e=0 z=0  None .text      procHorseComebackInit__9daAlink_cFv */
//	800F2D9C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F2DB8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F2DC8: 800EDA24 (setSyncRidePos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseComebackInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseComebackInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2DE4-800F2EE0 00FC+00 s=1 e=0 z=0  None .text      procHorseComeback__9daAlink_cFv */
//	800F2E00: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F2E08: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F2E20: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	800F2E2C: 80452E20 (lit_14619)
//	800F2E4C: 80452E80 (lit_16036)
//	800F2E74: 80452EF8 (lit_20303)
//	800F2E98: 80452D78 (lit_8676)
//	800F2E9C: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseComeback() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseComeback__9daAlink_cFv.s"
}
#pragma pop

/* 800F2EE0-800F2F98 00B8+00 s=2 e=0 z=0  None .text      procHorseRunInit__9daAlink_cFv */
//	800F2EF8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F2F00: 800ECB58 (initForceRideHorse__9daAlink_cFv)
//	800F2F10: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800F2F1C: 80452CBC (lit_6041)
//	800F2F20: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800F2F28: 800ED4DC (setSyncHorsePos__9daAlink_cFv)
//	800F2F3C: 80452D18 (lit_7308)
//	800F2F40: 80267954 (cM_rndF__Ff)
//	800F2F44: 80452DB8 (lit_10041)
//	800F2F68: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800F2F74: 802B1DF4 (changeSubBgmStatus__8Z2SeqMgrFl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseRunInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseRunInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2F98-800F3430 0498+00 s=1 e=0 z=0  None .text      procHorseRun__9daAlink_cFv */
//	800F2FC0: 804061C0 (g_dComIfG_gameInfo)
//	800F2FC4: 804061C0 (g_dComIfG_gameInfo)
//	800F2FCC: 800ED4DC (setSyncHorsePos__9daAlink_cFv)
//	800F2FD8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800F2FE4: 802B1DF4 (changeSubBgmStatus__8Z2SeqMgrFl)
//	800F3028: 80452CC0 (lit_6108)
//	800F308C: 804061C0 (g_dComIfG_gameInfo)
//	800F3090: 804061C0 (g_dComIfG_gameInfo)
//	800F30E4: 804061C0 (g_dComIfG_gameInfo)
//	800F30E8: 804061C0 (g_dComIfG_gameInfo)
//	800F3104: 80452CA4 (lit_6021)
//	800F3114: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800F3130: 80452CB0 (lit_6025)
//	800F314C: 80452E9C (lit_16567)
//	800F3150: 80452EFC (lit_20400)
//	800F3190: 80452CB0 (lit_6025)
//	800F31AC: 80452E9C (lit_16567)
//	800F31B0: 80452EFC (lit_20400)
//	800F31F4: 80452CB0 (lit_6025)
//	800F3214: 80452F00 (lit_20401)
//	800F323C: 80452F04 (lit_20402)
//	800F3240: 80452DA8 (lit_9652)
//	800F324C: 802675E4 (cM_rad2s__Ff)
//	800F3254: 80439A20 (sincosTable___5JMath)
//	800F3258: 80439A20 (sincosTable___5JMath)
//	800F3264: 80452CB8 (lit_6040)
//	800F3270: 80452E58 (lit_14785)
//	800F3290: 80452F04 (lit_20402)
//	800F329C: 802675E4 (cM_rad2s__Ff)
//	800F32A4: 80439A20 (sincosTable___5JMath)
//	800F32A8: 80439A20 (sincosTable___5JMath)
//	800F32B4: 80452CB8 (lit_6040)
//	800F32D4: 80452CC0 (lit_6108)
//	800F32D8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F32E4: 80452D18 (lit_7308)
//	800F32E8: 80267954 (cM_rndF__Ff)
//	800F32EC: 80452DB8 (lit_10041)
//	800F32FC: 803650D0 (abs)
//	800F3360: 800EF35C (boarForceGetOff__9daAlink_cFv)
//	800F3364: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800F3370: 802B1DF4 (changeSubBgmStatus__8Z2SeqMgrFl)
//	800F3398: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F33EC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	800F33F4: 802AF884 (subBgmStop__8Z2SeqMgrFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseRun() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseRun__9daAlink_cFv.s"
}
#pragma pop

/* 800F3430-800F3580 0150+00 s=1 e=0 z=0  None .text
 * procHorseHangInit__9daAlink_cFP12dCcD_GObjInfi               */
//	800F3440: 803621DC (_savegpr_29)
//	800F3470: 800F1D18 (procHorseDamageInit__9daAlink_cFP12dCcD_GObjInf)
//	800F3480: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F348C: 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf)
//	800F3490: 80267128 (atan2sX_Z__4cXyzCFv)
//	800F34F4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F3510: 80452CBC (lit_6041)
//	800F3514: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F351C: 800ED4DC (setSyncHorsePos__9daAlink_cFv)
//	800F3520: 800EC7B0 (setHorseZeldaDamage__9daAlink_cFv)
//	800F356C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHangInit(dCcD_GObjInf* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHangInit__9daAlink_cFP12dCcD_GObjInfi.s"
}
#pragma pop

/* 800F3580-800F36E4 0164+00 s=1 e=0 z=0  None .text      procHorseHang__9daAlink_cFv */
//	800F3598: 800ED4DC (setSyncHorsePos__9daAlink_cFv)
//	800F35B0: 800EDD6C (checkHorseSpecialProc__9daAlink_cFv)
//	800F35DC: 800EF35C (boarForceGetOff__9daAlink_cFv)
//	800F35F0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F3634: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F3640: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	800F3658: 80452D74 (lit_8502)
//	800F365C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F3680: 80452D80 (lit_8780)
//	800F3684: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F36A8: 80452D74 (lit_8502)
//	800F36AC: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHang() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHang__9daAlink_cFv.s"
}
#pragma pop

/* 800F36E4-800F3754 0070+00 s=1 e=0 z=0  None .text      procHorseGetKeyInit__9daAlink_cFv */
//	800F36FC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F371C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800F3728: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F3730: 800EDA24 (setSyncRidePos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGetKeyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGetKeyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F3754-800F3818 00C4+00 s=1 e=0 z=0  None .text      procHorseGetKey__9daAlink_cFv */
//	800F3770: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F3778: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F3784: 804061C0 (g_dComIfG_gameInfo)
//	800F3788: 804061C0 (g_dComIfG_gameInfo)
//	800F3794: 8004817C (cutEnd__16dEvent_manager_cFi)
//	800F37A0: 80452E88 (lit_16038)
//	800F37C8: 80452D1C (lit_7448)
//	800F37E4: 80452D3C (lit_7808)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGetKey() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGetKey__9daAlink_cFv.s"
}
#pragma pop

/* 800F3818-800F3894 007C+00 s=1 e=0 z=0  None .text      procHorseLookDownInit__9daAlink_cFv */
//	800F3830: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F385C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800F3864: 800D1268 (setSwordModel__9daAlink_cFv)
//	800F3870: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F3878: 800EDA24 (setSyncRidePos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseLookDownInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseLookDownInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F3894-800F38E8 0054+00 s=1 e=0 z=0  None .text      procHorseLookDown__9daAlink_cFv */
//	800F38A8: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	800F38B0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F38BC: 804061C0 (g_dComIfG_gameInfo)
//	800F38C0: 804061C0 (g_dComIfG_gameInfo)
//	800F38CC: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseLookDown() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseLookDown__9daAlink_cFv.s"
}
#pragma pop

/* 800F38E8-800F3998 00B0+00 s=1 e=0 z=0  None .text      procBoarRunInit__9daAlink_cFv */
//	800F3900: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F390C: 80452CBC (lit_6041)
//	800F3910: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F391C: 80452CBC (lit_6041)
//	800F3920: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	800F3930: 80452F0C (lit_20496)
//	800F3934: 80267954 (cM_rndF__Ff)
//	800F3938: 80452F08 (lit_20495)
//	800F394C: 80452CB8 (lit_6040)
//	800F3950: 80452D24 (lit_7450)
//	800F3954: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800F3964: 800ED78C (setSyncBoarPos__9daAlink_cFv)
//	800F397C: 800C12DC (deleteEquipItem__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoarRunInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoarRunInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F3998-800F3BB0 0218+00 s=1 e=0 z=0  None .text      procBoarRun__9daAlink_cFv */
//	800F39C4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F39D8: 80452CC0 (lit_6108)
//	800F39DC: 80452CBC (lit_6041)
//	800F39E0: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800F39FC: 800ED90C (setSyncBoarRunPos__9daAlink_cFv)
//	800F3A18: 800ED78C (setSyncBoarPos__9daAlink_cFv)
//	800F3A30: 80452CC0 (lit_6108)
//	800F3A50: 80452CB0 (lit_6025)
//	800F3A70: 80452F04 (lit_20402)
//	800F3A78: 80452DF8 (lit_13700)
//	800F3A84: 802675E4 (cM_rad2s__Ff)
//	800F3A8C: 80439A20 (sincosTable___5JMath)
//	800F3A90: 80439A20 (sincosTable___5JMath)
//	800F3A9C: 80452CB8 (lit_6040)
//	800F3AA8: 80452E4C (lit_14782)
//	800F3AC8: 80452CB0 (lit_6025)
//	800F3AE8: 80452F04 (lit_20402)
//	800F3AF0: 80452DFC (lit_13701)
//	800F3AFC: 802675E4 (cM_rad2s__Ff)
//	800F3B04: 80439A20 (sincosTable___5JMath)
//	800F3B08: 80439A20 (sincosTable___5JMath)
//	800F3B14: 80452CB8 (lit_6040)
//	800F3B38: 80452CC0 (lit_6108)
//	800F3B3C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F3B48: 80452F0C (lit_20496)
//	800F3B4C: 80267954 (cM_rndF__Ff)
//	800F3B50: 80452F08 (lit_20495)
//	800F3B70: 80452D48 (lit_8130)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoarRun() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoarRun__9daAlink_cFv.s"
}
#pragma pop

/* 800F3BB0-800F3BDC 002C+00 s=1 e=0 z=2  None .text      getCanoeMaxSpeed__9daAlink_cCFv */
//	800F3BBC: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3BC0: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3BCC: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3BD0: 8038E610 (m__19daAlinkHIO_canoe_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeMaxSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeMaxSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3BDC-800F3BEC 0010+00 s=0 e=0 z=1  None .text      getCanoeBackMaxSpeed__9daAlink_cCFv */
//	800F3BDC: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3BE0: 8038E610 (m__19daAlinkHIO_canoe_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeBackMaxSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeBackMaxSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3BEC-800F3C18 002C+00 s=0 e=0 z=1  None .text      getCanoeCres__9daAlink_cCFv */
//	800F3BF8: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3BFC: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3C08: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3C0C: 8038E610 (m__19daAlinkHIO_canoe_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeCres() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeCres__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3C18-800F3C44 002C+00 s=2 e=0 z=0  None .text      getCanoeSpeedRate__9daAlink_cCFv */
//	800F3C24: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3C28: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3C34: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3C38: 8038E610 (m__19daAlinkHIO_canoe_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeSpeedRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeSpeedRate__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3C44-800F3CCC 0088+00 s=0 e=0 z=1  None .text      getCanoeMaxRotSpeed__9daAlink_cCFv */
//	800F3C54: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3C58: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3C64: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3C68: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3C74: 80452CB0 (lit_6025)
//	800F3C90: 80452CB8 (lit_6040)
//	800F3C94: 80452C98 (lit_5943)
//	800F3C9C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F3CA0: 8038E610 (m__19daAlinkHIO_canoe_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeMaxRotSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeMaxRotSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3CCC-800F3CD8 000C+00 s=1 e=0 z=1  None .text      getCanoeLocalPaddleTop__9daAlink_cFv */
//	800F3CCC: 803919E4 (localPaddleTop)
//	800F3CD0: 803919E4 (localPaddleTop)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeLocalPaddleTop() {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeLocalPaddleTop__9daAlink_cFv.s"
}
#pragma pop

/* 800F3CD8-800F3CF8 0020+00 s=3 e=0 z=0  None .text      daAlink_searchCanoe__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchCanoe(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchCanoe__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800F3CF8-800F3D58 0060+00 s=0 e=2 z=0  None .text      checkCanoeRideTandem__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoeRideTandem() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoeRideTandem__9daAlink_cFv.s"
}
#pragma pop

/* 800F3D58-800F3DA0 0048+00 s=7 e=0 z=0  None .text      checkFishingRodAndLureItem__9daAlink_cCFv
 */
//	800F3D78: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFishingRodAndLureItem() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkFishingRodAndLureItem__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3DA0-800F3DFC 005C+00 s=4 e=0 z=0  None .text      initFishingRodHand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initFishingRodHand() {
    nofralloc
#include "asm/d/a/d_a_alink/initFishingRodHand__9daAlink_cFv.s"
}
#pragma pop

/* 800F3DFC-800F3E4C 0050+00 s=1 e=0 z=1  None .text      getCanoePaddleMatrix__9daAlink_cFv */
//	800F3E18: 803DD470 (now__14mDoMtx_stack_c)
//	800F3E1C: 803DD470 (now__14mDoMtx_stack_c)
//	800F3E20: 803464B0 (PSMTXCopy)
//	800F3E24: 80452CC0 (lit_6108)
//	800F3E2C: 80452C9C (lit_5944)
//	800F3E30: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800F3E34: 803DD470 (now__14mDoMtx_stack_c)
//	800F3E38: 803DD470 (now__14mDoMtx_stack_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoePaddleMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoePaddleMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800F3E4C-800F3EB8 006C+00 s=0 e=0 z=4  None .text
 * checkFishingRodGrab__9daAlink_cCFP10fopAc_ac_c               */
//	800F3E5C: 803621DC (_savegpr_29)
//	800F3E6C: 800F3D58 (checkFishingRodAndLureItem__9daAlink_cCFv)
//	800F3EA4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFishingRodGrab(fopAc_ac_c* param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkFishingRodGrab__9daAlink_cCFP10fopAc_ac_c.s"
}
#pragma pop

/* 800F3EB8-800F3F38 0080+00 s=0 e=0 z=2  None .text
 * checkCanoePaddleGrab__9daAlink_cCFP10fopAc_ac_c              */
//	800F3EC8: 803621D8 (_savegpr_28)
//	800F3F24: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoePaddleGrab(fopAc_ac_c* param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoePaddleGrab__9daAlink_cCFP10fopAc_ac_c.s"
}
#pragma pop

/* 800F3F38-800F3FC4 008C+00 s=0 e=0 z=1  None .text checkCanoeFishingRodGrabOrPut__9daAlink_cCFv
 */
//	800F3F7C: 800B9340 (checkEquipAnime__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoeFishingRodGrabOrPut() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoeFishingRodGrabOrPut__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3FC4-800F4008 0044+00 s=2 e=0 z=0  None .text      initCanoeRide__9daAlink_cFv */
//	800F3FCC: 80425514 (l_waitBaseAnime)
//	800F3FD0: 80425514 (l_waitBaseAnime)
//	800F3FE8: 804255EC (l_canoeBaseAnime)
//	800F3FEC: 804255EC (l_canoeBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initCanoeRide() {
    nofralloc
#include "asm/d/a/d_a_alink/initCanoeRide__9daAlink_cFv.s"
}
#pragma pop

/* 800F4008-800F40E4 00DC+00 s=2 e=0 z=0  None .text      checkCanoeJumpRide__9daAlink_cFv */
//	800F4028: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	800F4038: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800F4048: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	800F4058: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	800F4064: 80452CC0 (lit_6108)
//	800F4094: 80118C98 (checkDeadHP__9daAlink_cFv)
//	800F40C0: 800F4C78 (procCanoeJumpRideInit__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoeJumpRide() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoeJumpRide__9daAlink_cFv.s"
}
#pragma pop

/* 800F40E4-800F4140 005C+00 s=2 e=0 z=0  None .text      setArmReelAnime__9daAlink_cFv */
//	800F40FC: 80452CB8 (lit_6040)
//	800F4100: 80452CBC (lit_6041)
//	800F4104: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800F4108: 80452CC0 (lit_6108)
//	800F4110: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setArmReelAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setArmReelAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800F4140-800F4490 0350+00 s=1 e=0 z=0  None .text      setFishingWaitAction__9daAlink_cFv */
//	800F419C: 80452CB8 (lit_6040)
//	800F41A8: 80452CC0 (lit_6108)
//	800F41C0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800F41D8: 80452CC0 (lit_6108)
//	800F41EC: 80452CC0 (lit_6108)
//	800F4208: 80267674 (cM_atan2s__Fff)
//	800F4210: 803650D0 (abs)
//	800F4214: 80452CA4 (lit_6021)
//	800F4220: 80452CC0 (lit_6108)
//	800F4234: 80452DF8 (lit_13700)
//	800F4238: 80452CB8 (lit_6040)
//	800F4248: 80452CB0 (lit_6025)
//	800F426C: 80452F10 (lit_20790)
//	800F4298: 80452CB0 (lit_6025)
//	800F42B4: 80452E08 (lit_14064)
//	800F42B8: 80452CB8 (lit_6040)
//	800F42E4: 80452F10 (lit_20790)
//	800F4304: 80452CC0 (lit_6108)
//	800F4318: 80452C98 (lit_5943)
//	800F431C: 80452CB8 (lit_6040)
//	800F432C: 80452CB0 (lit_6025)
//	800F435C: 80452CB0 (lit_6025)
//	800F4378: 80452C98 (lit_5943)
//	800F437C: 80452CB8 (lit_6040)
//	800F43AC: 80452DF8 (lit_13700)
//	800F43B4: 80452CB0 (lit_6025)
//	800F43D4: 80452C98 (lit_5943)
//	800F43FC: 80452EA8 (lit_16570)
//	800F4400: 80452E08 (lit_14064)
//	800F4404: 80452D88 (lit_8782)
//	800F4408: 8026F97C (cLib_addCalc__FPfffff)
//	800F4414: 80452EA8 (lit_16570)
//	800F4418: 80452E08 (lit_14064)
//	800F441C: 80452D88 (lit_8782)
//	800F4420: 8026F97C (cLib_addCalc__FPfffff)
//	800F443C: 80452DA0 (lit_9054)
//	800F4440: 80270740 (cLib_chaseF__FPfff)
//	800F4448: 80452CB8 (lit_6040)
//	800F4454: 800AC738 (setDoubleAnimeBlendRatio__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFishingWaitAction() {
    nofralloc
#include "asm/d/a/d_a_alink/setFishingWaitAction__9daAlink_cFv.s"
}
#pragma pop

/* 800F4490-800F4564 00D4+00 s=3 e=0 z=0  None .text      setFishGetFace__9daAlink_cFv */
//	800F44C0: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800F44D4: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800F44EC: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800F4500: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800F4518: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800F452C: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	800F4544: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	800F454C: 800AFCBC (resetFacePriAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFishGetFace() {
    nofralloc
#include "asm/d/a/d_a_alink/setFishGetFace__9daAlink_cFv.s"
}
#pragma pop

/* 800F4564-800F459C 0038+00 s=3 e=0 z=0  None .text setRideCanoeBasePos__9daAlink_cFP10fopAc_ac_c
 */
//	800F4564: 80452CC0 (lit_6108)
//	800F456C: 80452C9C (lit_5944)
//	800F4574: 80452F14 (lit_20823)
//	800F458C: 80452F18 (lit_20824)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRideCanoeBasePos(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setRideCanoeBasePos__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800F459C-800F47D8 023C+00 s=20 e=0 z=0  None .text      setSyncCanoePos__9daAlink_cFv */
//	800F45B4: 803621DC (_savegpr_29)
//	800F45D4: 803DD470 (now__14mDoMtx_stack_c)
//	800F45D8: 803DD470 (now__14mDoMtx_stack_c)
//	800F45DC: 803464B0 (PSMTXCopy)
//	800F45E0: 80452CC0 (lit_6108)
//	800F45E8: 80452F18 (lit_20824)
//	800F45EC: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800F45F0: 803DD470 (now__14mDoMtx_stack_c)
//	800F45F4: 803DD470 (now__14mDoMtx_stack_c)
//	800F4600: 80346D6C (PSMTXMultVec)
//	800F4618: 80346D6C (PSMTXMultVec)
//	800F4678: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800F4690: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800F46DC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800F46E4: 80452CC0 (lit_6108)
//	800F4724: 80452CB8 (lit_6040)
//	800F4730: 80452CBC (lit_6041)
//	800F473C: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800F474C: 80452CC0 (lit_6108)
//	800F4758: 80452E78 (lit_15460)
//	800F476C: 80452CB0 (lit_6025)
//	800F479C: 8015F97C (daPy_addCalcShort__FPsssss)
//	800F47B0: 80452DF8 (lit_13700)
//	800F47B4: 80270740 (cLib_chaseF__FPfff)
//	800F47C4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncCanoePos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncCanoePos__9daAlink_cFv.s"
}
#pragma pop

/* 800F47D8-800F4924 014C+00 s=19 e=0 z=0  None .text      canoeCommon__9daAlink_cFv */
//	800F4808: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800F4810: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F484C: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F486C: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F4898: 80452EB8 (lit_17592)
//	800F489C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F48A0: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F48FC: 802C46F0 (startLinkSwordSound__14Z2CreatureLinkF10JAISoundIDUlSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::canoeCommon() {
    nofralloc
#include "asm/d/a/d_a_alink/canoeCommon__9daAlink_cFv.s"
}
#pragma pop

/* 800F4924-800F4A50 012C+00 s=10 e=0 z=0  None .text      checkNextActionCanoe__9daAlink_cFv */
//	800F4938: 800F3D58 (checkFishingRodAndLureItem__9daAlink_cCFv)
//	800F4960: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	800F4978: 800DE9E8 (checkBowAnime__9daAlink_cCFv)
//	800F4988: 800DF814 (checkNextActionBow__9daAlink_cFv)
//	800F4994: 800E0440 (checkBoomerangAnime__9daAlink_cCFv)
//	800F49A4: 800E0BE4 (checkNextActionBoomerang__9daAlink_cFv)
//	800F49D8: 801095C8 (checkNextActionHookshot__9daAlink_cFv)
//	800F49E4: 800E3C9C (checkGrabAnimeAndThrow__9daAlink_cCFv)
//	800F49F4: 800F6EB0 (procCanoeGrabMoveInit__9daAlink_cFv)
//	800F4A28: 800F6464 (procCanoeFishingWaitInit__9daAlink_cFv)
//	800F4A38: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionCanoe() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionCanoe__9daAlink_cFv.s"
}
#pragma pop

/* 800F4A50-800F4B90 0140+00 s=2 e=0 z=0  None .text      procCanoeRideInit__9daAlink_cFv */
//	800F4A6C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F4A78: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	800F4A84: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800F4A94: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800F4AA4: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800F4AA8: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800F4ABC: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800F4AC4: 80452CC0 (lit_6108)
//	800F4AD0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800F4AD4: 80452CC0 (lit_6108)
//	800F4AE8: 800F4564 (setRideCanoeBasePos__9daAlink_cFP10fopAc_ac_c)
//	800F4AF4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	800F4B18: 80452F1C (lit_20991)
//	800F4B34: 80452F20 (lit_20992)
//	800F4B4C: 80346D6C (PSMTXMultVec)
//	800F4B5C: 800F3FC4 (initCanoeRide__9daAlink_cFv)
//	800F4B70: 801032C8 (swimOutAfter__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRideInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRideInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F4B90-800F4C78 00E8+00 s=1 e=0 z=0  None .text      procCanoeRide__9daAlink_cFv */
//	800F4BA0: 803621DC (_savegpr_29)
//	800F4BB8: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800F4BD0: 80346D6C (PSMTXMultVec)
//	800F4BDC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F4BF0: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800F4BFC: 80452D34 (lit_7710)
//	800F4C50: 80452F24 (lit_21021)
//	800F4C64: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRide() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRide__9daAlink_cFv.s"
}
#pragma pop

/* 800F4C78-800F4D84 010C+00 s=4 e=0 z=0  None .text
 * procCanoeJumpRideInit__9daAlink_cFP10fopAc_ac_c              */
//	800F4C88: 803621DC (_savegpr_29)
//	800F4C98: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F4CA4: 800F3CD8 (daAlink_searchCanoe__FP10fopAc_ac_cPv)
//	800F4CA8: 800F3CD8 (daAlink_searchCanoe__FP10fopAc_ac_cPv)
//	800F4CB0: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	800F4CCC: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	800F4CD8: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800F4CDC: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800F4CE4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800F4CF4:
//800C12DC (deleteEquipItem__9daAlink_cFii) 	800F4D00: 8015ECB8
//(setData__16daPy_actorKeep_cFP10fopAc_ac_c) 	800F4D08: 80452CC0 (lit_6108) 	800F4D14: 800BB770
//(setSpecialGravity__9daAlink_cFffi) 	800F4D18: 80452CC0 (lit_6108) 	800F4D2C: 800F4564
//(setRideCanoeBasePos__9daAlink_cFP10fopAc_ac_c) 	800F4D40: 80346D6C (PSMTXMultVec) 	800F4D50:
//800F3FC4 (initCanoeRide__9daAlink_cFv) 	800F4D64: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800F4D70: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeJumpRideInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeJumpRideInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800F4D84-800F4DF8 0074+00 s=1 e=0 z=0  None .text      procCanoeJumpRide__9daAlink_cFv */
//	800F4DA8: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800F4DC0: 80346D6C (PSMTXMultVec)
//	800F4DC8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F4DDC: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeJumpRide() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeJumpRide__9daAlink_cFv.s"
}
#pragma pop

/* 800F4DF8-800F5048 0250+00 s=2 e=0 z=0  None .text      procCanoeGetOffInit__9daAlink_cFv */
//	800F4E08: 803621DC (_savegpr_29)
//	800F4E14: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F4E24: 80452CC0 (lit_6108)
//	800F4E34: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800F4E38: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800F4E40: 80452D44 (lit_7977)
//	800F4E44: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800F4E4C: 80452CC0 (lit_6108)
//	800F4E58: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800F4E5C: 80452CC0 (lit_6108)
//	800F4E78: 80439A20 (sincosTable___5JMath)
//	800F4E7C: 80439A20 (sincosTable___5JMath)
//	800F4E88: 80452DE0 (lit_11673)
//	800F4E94: 80452D50 (lit_8247)
//	800F4ED8: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800F4EEC: 80452D14 (lit_7307)
//	800F4F24: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800F4F40: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800F4F44: 804061C0 (g_dComIfG_gameInfo)
//	800F4F48: 804061C0 (g_dComIfG_gameInfo)
//	800F4F54: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800F4F94: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800F4F9C: 80452D50 (lit_8247)
//	800F4FC8: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800F4FD0: 80452D50 (lit_8247)
//	800F4FE0: 80452D10 (lit_7306)
//	800F4FFC: 800F4564 (setRideCanoeBasePos__9daAlink_cFP10fopAc_ac_c)
//	800F5004: 80452F14 (lit_20823)
//	800F5020: 80346D6C (PSMTXMultVec)
//	800F5034: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeGetOffInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeGetOffInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F5048-800F51E4 019C+00 s=1 e=0 z=0  None .text      procCanoeGetOff__9daAlink_cFv */
//	800F5088: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800F50A0: 80346D6C (PSMTXMultVec)
//	800F50C4: 800B5CCC (checkLandAction__9daAlink_cFi)
//	800F50E8: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800F50EC: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800F50F4: 800C6A48 (procFallInit__9daAlink_cFif)
//	800F511C: 80452D88 (lit_8782)
//	800F5138: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800F513C: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	800F5140: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800F5144:
//80425514
//(l_waitBaseAnime) 	800F5148: 80425514 (l_waitBaseAnime) 	800F5174: 80452D44 (lit_7977)
//800F5178: 8032842C (checkPass__12J3DFrameCtrlFf) 	800F5188: 800ECBD0 (rideGetOff__9daAlink_cFv)
// 800F519C: 800B48D0 (setJumpMode__9daAlink_cFv) 	800F51A4: 8038E068 (m__22daAlinkHIO_autoJump_c0)
// 800F51A8: 8038E068 (m__22daAlinkHIO_autoJump_c0) 	800F51B8: 800BB770
// (setSpecialGravity__9daAlink_cFffi) 	800F51BC: 80452E64 (lit_14954) 	800F51C4: 80452D78 (lit_8676)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeGetOff() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeGetOff__9daAlink_cFv.s"
}
#pragma pop

/* 800F51E4-800F542C 0248+00 s=15 e=0 z=0  None .text      procCanoeWaitInit__9daAlink_cFi */
//	800F51FC: 803621D4 (_savegpr_27)
//	800F521C: 800F6140 (procCanoePaddleGrabInit__9daAlink_cFv)
//	800F5234: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F5270: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800F527C: 803DD470 (now__14mDoMtx_stack_c)
//	800F5280: 803DD470 (now__14mDoMtx_stack_c)
//	800F5290: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	800F52AC: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800F52B0: 803DD470 (now__14mDoMtx_stack_c)
//	800F52B4: 803DD470 (now__14mDoMtx_stack_c)
//	800F52C0: 80346D6C (PSMTXMultVec)
//	800F52EC: 80452E64 (lit_14954)
//	800F530C: 80452F18 (lit_20824)
//	800F5320: 80452CBC (lit_6041)
//	800F5344: 80452D30 (lit_7625)
//	800F5358: 80452CC4 (lit_6109)
//	800F53A4: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F53B4: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800F53E4: 800B983C (allUnequip__9daAlink_cFi)
//	800F53EC: 80452CC0 (lit_6108)
//	800F5404: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800F5418: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 800F542C-800F571C 02F0+00 s=1 e=0 z=0  None .text      procCanoeWait__9daAlink_cFv */
//	800F5440: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F5470: 800F4924 (checkNextActionCanoe__9daAlink_cFv)
//	800F5480: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800F5490: 80452CC4 (lit_6109)
//	800F54B8: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	800F54C4: 80392094 (d_a_d_a_alink__stringBase0)
//	800F54C8: 80392094 (d_a_d_a_alink__stringBase0)
//	800F54D0: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	800F54E4: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800F54F0: 800B7BF8 (orderTalk__9daAlink_cFi)
//	800F5510: 804061C0 (g_dComIfG_gameInfo)
//	800F5514: 804061C0 (g_dComIfG_gameInfo)
//	800F5538: 800F5EA8 (procCanoePaddlePutInit__9daAlink_cFi)
//	800F5550: 800B983C (allUnequip__9daAlink_cFi)
//	800F5558: 800F4DF8 (procCanoeGetOffInit__9daAlink_cFv)
//	800F5570: 800F6464 (procCanoeFishingWaitInit__9daAlink_cFv)
//	800F559C: 80452CA4 (lit_6021)
//	800F55F4: 800F6140 (procCanoePaddleGrabInit__9daAlink_cFv)
//	800F5600: 80452CA4 (lit_6021)
//	800F561C: 800F571C (procCanoeRowInit__9daAlink_cFi)
//	800F563C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F5660: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F566C: 80452CA4 (lit_6021)
//	800F5680: 800B983C (allUnequip__9daAlink_cFi)
//	800F56B4: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800F56D4: 800F5EA8 (procCanoePaddlePutInit__9daAlink_cFi)
//	800F5700: 800F6320 (procCanoeRodGrabInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeWait__9daAlink_cFv.s"
}
#pragma pop

/* 800F571C-800F5A1C 0300+00 s=3 e=0 z=0  None .text      procCanoeRowInit__9daAlink_cFi */
//	800F5734: 803621D4 (_savegpr_27)
//	800F5754: 80452CA4 (lit_6021)
//	800F5774: 803650D0 (abs)
//	800F584C: 800F5D04 (procCanoePaddleShiftInit__9daAlink_cFi)
//	800F5898: 800F5D04 (procCanoePaddleShiftInit__9daAlink_cFi)
//	800F58B8: 800F5D04 (procCanoePaddleShiftInit__9daAlink_cFi)
//	800F58C4: 800F5D04 (procCanoePaddleShiftInit__9daAlink_cFi)
//	800F5904: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F5908: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F590C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5934: 80452C98 (lit_5943)
//	800F593C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5940: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F595C: 80452E28 (lit_14621)
//	800F597C: 800F3C18 (getCanoeSpeedRate__9daAlink_cCFv)
//	800F5984: 80452C98 (lit_5943)
//	800F599C: 80452D28 (lit_7451)
//	800F59C8: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F59CC: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F59E0: 80452CC0 (lit_6108)
//	800F59E8: 80452CC4 (lit_6109)
//	800F59EC: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800F59F4: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F5A08: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRowInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRowInit__9daAlink_cFi.s"
}
#pragma pop

/* 800F5A1C-800F5D04 02E8+00 s=1 e=0 z=0  None .text      procCanoeRow__9daAlink_cFv */
//	800F5A34: 803621DC (_savegpr_29)
//	800F5A40: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F5A5C: 800B994C (checkItemChangeFromButton__9daAlink_cFv)
//	800F5A6C: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800F5A80: 800F5EA8 (procCanoePaddlePutInit__9daAlink_cFi)
//	800F5A8C: 80452CC0 (lit_6108)
//	800F5A90: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F5AA0: 80452CA4 (lit_6021)
//	800F5AB4: 800F571C (procCanoeRowInit__9daAlink_cFi)
//	800F5AC4: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800F5ACC: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5AD0: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5AE8: 80452C98 (lit_5943)
//	800F5B10: 800F3C18 (getCanoeSpeedRate__9daAlink_cCFv)
//	800F5B18: 80452C98 (lit_5943)
//	800F5B2C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5B30: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5B48: 80452DA0 (lit_9054)
//	800F5B4C: 80270740 (cLib_chaseF__FPfff)
//	800F5B68: 80452DC8 (lit_10286)
//	800F5B7C: 80452CA4 (lit_6021)
//	800F5C0C: 803650D0 (abs)
//	800F5C28: 803650D0 (abs)
//	800F5C30: 80439A20 (sincosTable___5JMath)
//	800F5C34: 80439A20 (sincosTable___5JMath)
//	800F5C44: 80439A20 (sincosTable___5JMath)
//	800F5C48: 80439A20 (sincosTable___5JMath)
//	800F5C74: 800F3C18 (getCanoeSpeedRate__9daAlink_cCFv)
//	800F5C88: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5C8C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5CA4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F5CF0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRow() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRow__9daAlink_cFv.s"
}
#pragma pop

/* 800F5D04-800F5DB8 00B4+00 s=1 e=0 z=0  None .text      procCanoePaddleShiftInit__9daAlink_cFi */
//	800F5D24: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F5D3C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5D40: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5D4C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5D50: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5D5C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5D60: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5D70: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800F5D98: 800F459C (setSyncCanoePos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddleShiftInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddleShiftInit__9daAlink_cFi.s"
}
#pragma pop

/* 800F5DB8-800F5EA8 00F0+00 s=1 e=0 z=0  None .text      procCanoePaddleShift__9daAlink_cFv */
//	800F5DD0: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F5DEC: 800B994C (checkItemChangeFromButton__9daAlink_cFv)
//	800F5DFC: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800F5E10: 800F5EA8 (procCanoePaddlePutInit__9daAlink_cFi)
//	800F5E1C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F5E30: 800F571C (procCanoeRowInit__9daAlink_cFi)
//	800F5E3C: 80452EB4 (lit_17382)
//	800F5E40: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddleShift() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddleShift__9daAlink_cFv.s"
}
#pragma pop

/* 800F5EA8-800F5FEC 0144+00 s=3 e=0 z=0  None .text      procCanoePaddlePutInit__9daAlink_cFi */
//	800F5EDC: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800F5EEC: 8015EB90 (checkBowItem__9daPy_py_cFi)
//	800F5F14: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800F5F24: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F5F3C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5F40: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5F4C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5F50: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5F5C: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5F60: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F5F70: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800F5F98: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F5F9C: 80452CC0 (lit_6108)
//	800F5FCC: 8015EC48 (setActor__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddlePutInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddlePutInit__9daAlink_cFi.s"
}
#pragma pop

/* 800F5FEC-800F6140 0154+00 s=1 e=0 z=0  None .text      procCanoePaddlePut__9daAlink_cFv */
//	800F6004: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F6024: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F603C: 80452EB4 (lit_17382)
//	800F6040: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F6054: 80452CBC (lit_6041)
//	800F6058: 80452CC4 (lit_6109)
//	800F605C: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800F607C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F6098: 800F4DF8 (procCanoeGetOffInit__9daAlink_cFv)
//	800F60B0: 800F3DA0 (initFishingRodHand__9daAlink_cFv)
//	800F60B8: 800F6464 (procCanoeFishingWaitInit__9daAlink_cFv)
//	800F60C8: 800B9640 (itemEquip__9daAlink_cFUs)
//	800F60D4: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800F60E0: 80452D3C (lit_7808)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddlePut() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddlePut__9daAlink_cFv.s"
}
#pragma pop

/* 800F6140-800F6188 0048+00 s=2 e=0 z=0  None .text      procCanoePaddleGrabInit__9daAlink_cFv */
//	800F6158: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F6164: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F616C: 800F459C (setSyncCanoePos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddleGrabInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddleGrabInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6188-800F6320 0198+00 s=1 e=0 z=0  None .text      procCanoePaddleGrab__9daAlink_cFv */
//	800F61A0: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F61BC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F61D0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F61F0: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F61F4: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F6204: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F6208: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F6210: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F6214: 8038E610 (m__19daAlinkHIO_canoe_c0)
//	800F6224: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800F6228: 80452EB4 (lit_17382)
//	800F6270: 80452D3C (lit_7808)
//	800F629C: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	800F62AC: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800F62D4: 800B9640 (itemEquip__9daAlink_cFUs)
//	800F62E0: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800F62EC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F6300: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddleGrab() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddleGrab__9daAlink_cFv.s"
}
#pragma pop

/* 800F6320-800F6394 0074+00 s=1 e=0 z=0  None .text      procCanoeRodGrabInit__9daAlink_cFv */
//	800F6338: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F6350: 800B983C (allUnequip__9daAlink_cFi)
//	800F6368: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F6378: 800F459C (setSyncCanoePos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRodGrabInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRodGrabInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6394-800F6464 00D0+00 s=1 e=0 z=0  None .text      procCanoeRodGrab__9daAlink_cFv */
//	800F63A8: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F63CC: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	800F63E8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F63F4: 80452D3C (lit_7808)
//	800F6414: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	800F6428: 800F3DA0 (initFishingRodHand__9daAlink_cFv)
//	800F6438: 800F6464 (procCanoeFishingWaitInit__9daAlink_cFv)
//	800F6448: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRodGrab() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRodGrab__9daAlink_cFv.s"
}
#pragma pop

/* 800F6464-800F659C 0138+00 s=6 e=0 z=0  None .text      procCanoeFishingWaitInit__9daAlink_cFv */
//	800F647C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F64A0: 80452CC0 (lit_6108)
//	800F64A4: 80452CC4 (lit_6109)
//	800F64A8: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800F64B4: 80452CC0 (lit_6108)
//	800F64B8: 80452CBC (lit_6041)
//	800F64BC: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	800F64C0: 80452CB8 (lit_6040)
//	800F64CC: 80452CB0 (lit_6025)
//	800F64E8: 80452F28 (lit_21624)
//	800F6534: 800F459C (setSyncCanoePos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F659C-800F67C0 0224+00 s=1 e=0 z=0  None .text      procCanoeFishingWait__9daAlink_cFv */
//	800F65B4: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F6614: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	800F662C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F663C: 800F67C0 (procCanoeFishingReelInit__9daAlink_cFv)
//	800F6648: 80452D8C (lit_8783)
//	800F6668: 800F4924 (checkNextActionCanoe__9daAlink_cFv)
//	800F66BC: 8015F97C (daPy_addCalcShort__FPsssss)
//	800F66D8: 80452CA4 (lit_6021)
//	800F672C: 80452F2C (lit_21680)
//	800F6748: 8015F97C (daPy_addCalcShort__FPsssss)
//	800F674C: 80452CB8 (lit_6040)
//	800F6758: 80452CB0 (lit_6025)
//	800F6774: 80452F28 (lit_21624)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingWait__9daAlink_cFv.s"
}
#pragma pop

/* 800F67C0-800F6874 00B4+00 s=1 e=0 z=0  None .text      procCanoeFishingReelInit__9daAlink_cFv */
//	800F67D8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F67E0: 80452CC0 (lit_6108)
//	800F67F8: 80452D3C (lit_7808)
//	800F67FC: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	800F6800:
// 80452C98 (lit_5943) 	800F6808: 80452CB0 (lit_6025) 	800F6838: 80452CB8 (lit_6040) 	800F683C:
// 80452CC0 (lit_6108) 	800F6844: 80452CBC (lit_6041) 	800F6848: 800AD964
//(setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf) 	800F6850: 800F40E4
//(setArmReelAnime__9daAlink_cFv) 	800F6858: 800F459C (setSyncCanoePos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingReelInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingReelInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6874-800F69D4 0160+00 s=1 e=0 z=0  None .text      procCanoeFishingReel__9daAlink_cFv */
//	800F6888: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F68A8: 800F4490 (setFishGetFace__9daAlink_cFv)
//	800F68BC: 800F69D4 (procCanoeFishingGetInit__9daAlink_cFv)
//	800F68D4: 80452CBC (lit_6041)
//	800F68D8: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F68E0: 800F6464 (procCanoeFishingWaitInit__9daAlink_cFv)
//	800F68F8: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	800F6910: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F6920: 800F40E4 (setArmReelAnime__9daAlink_cFv)
//	800F6928: 80452CC4 (lit_6109)
//	800F6934: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800F695C: 800F4140 (setFishingWaitAction__9daAlink_cFv)
//	800F6974: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	800F69B8: 8015F97C (daPy_addCalcShort__FPsssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingReel() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingReel__9daAlink_cFv.s"
}
#pragma pop

/* 800F69D4-800F6A70 009C+00 s=1 e=0 z=0  None .text      procCanoeFishingGetInit__9daAlink_cFv */
//	800F69F0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F6A04: 80452D20 (lit_7449)
//	800F6A0C: 80452F30 (lit_21736)
//	800F6A24: 80452D48 (lit_8130)
//	800F6A2C: 80452CE0 (lit_6845)
//	800F6A40: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F6A4C: 80452D3C (lit_7808)
//	800F6A50: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingGetInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingGetInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6A70-800F6BEC 017C+00 s=1 e=0 z=0  None .text      procCanoeFishingGet__9daAlink_cFv */
//	800F6A8C: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F6AAC: 800F4490 (setFishGetFace__9daAlink_cFv)
//	800F6AB8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F6AC8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F6AD8: 800F6464 (procCanoeFishingWaitInit__9daAlink_cFv)
//	800F6AE4: 80452EBC (lit_17593)
//	800F6B10: 80452DC4 (lit_10194)
//	800F6B30: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F6B50: 80452CC4 (lit_6109)
//	800F6B54: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800F6B88: 800F6464 (procCanoeFishingWaitInit__9daAlink_cFv)
//	800F6B98: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F6BB8: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingGet() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingGet__9daAlink_cFv.s"
}
#pragma pop

/* 800F6BEC-800F6C30 0044+00 s=1 e=0 z=0  None .text      procCanoeSubjectivityInit__9daAlink_cFv */
//	800F6C04: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F6C0C: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F6C14: 800CEAF4 (setSubjectMode__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6C30-800F6D10 00E0+00 s=1 e=0 z=0  None .text      procCanoeSubjectivity__9daAlink_cFv */
//	800F6C40: 803621D8 (_savegpr_28)
//	800F6C60: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F6C80: 800CEBD8 (checkSubjectEnd__9daAlink_cFi)
//	800F6C94: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800F6CA0: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	800F6CB0: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	800F6CF0: 800EEF30 (setRideSubjectAngle__9daAlink_cFs)
//	800F6CFC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 800F6D10-800F6D64 0054+00 s=1 e=0 z=0  None .text      procCanoeBowSubjectInit__9daAlink_cFv */
//	800F6D28: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F6D40: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F6D48: 800DEB8C (setBowOrSlingStatus__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBowSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBowSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6D64-800F6DF0 008C+00 s=1 e=0 z=0  None .text      procCanoeBowSubject__9daAlink_cFv */
//	800F6D74: 803621DC (_savegpr_29)
//	800F6D80: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F6D90: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F6DAC: 800F4924 (checkNextActionCanoe__9daAlink_cFv)
//	800F6DC0: 800EEF30 (setRideSubjectAngle__9daAlink_cFs)
//	800F6DD0: 800DFCD8 (setBowSight__9daAlink_cFv)
//	800F6DDC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBowSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBowSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F6DF0-800F6E44 0054+00 s=1 e=0 z=0  None .text      procCanoeBowMoveInit__9daAlink_cFv */
//	800F6E08: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F6E20: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F6E28: 800DEB8C (setBowOrSlingStatus__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBowMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBowMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6E44-800F6EB0 006C+00 s=1 e=0 z=0  None .text      procCanoeBowMove__9daAlink_cFv */
//	800F6E5C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F6E64: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F6E7C: 800DEE1C (cancelBowMove__9daAlink_cFv)
//	800F6E84: 800F4924 (checkNextActionCanoe__9daAlink_cFv)
//	800F6E94: 800EF050 (setBodyAngleRideReadyAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBowMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBowMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F6EB0-800F6EFC 004C+00 s=2 e=0 z=0  None .text      procCanoeGrabMoveInit__9daAlink_cFv */
//	800F6EC8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F6EE0: 800F459C (setSyncCanoePos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeGrabMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeGrabMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6EFC-800F6FA4 00A8+00 s=1 e=0 z=0  None .text      procCanoeGrabMove__9daAlink_cFv */
//	800F6F10: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F6F34: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	800F6F48: 80452CC4 (lit_6109)
//	800F6F4C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F6F54: 800E3C1C (checkGrabThrowAnime__9daAlink_cCFv)
//	800F6F64: 80452CC4 (lit_6109)
//	800F6F68: 800E57AC (checkUpperGrabItemThrow__9daAlink_cFf)
//	800F6F7C: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	800F6F88: 800F4924 (checkNextActionCanoe__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeGrabMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeGrabMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F6FA4-800F7010 006C+00 s=1 e=0 z=0  None .text procCanoeBoomerangSubjectInit__9daAlink_cFv
 */
//	800F6FBC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F6FD4: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F6FE0: 800E03D0 (initBoomerangUpperAnimeSpeed__9daAlink_cFi)
//	800F6FE4: 804061C0 (g_dComIfG_gameInfo)
//	800F6FE8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBoomerangSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBoomerangSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7010-800F70F0 00E0+00 s=1 e=0 z=0  None .text      procCanoeBoomerangSubject__9daAlink_cFv */
//	800F7020: 803621DC (_savegpr_29)
//	800F7028: 800B72E4 (checkItemActorPointer__9daAlink_cFv)
//	800F7074: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F7084: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F70A0: 800F4924 (checkNextActionCanoe__9daAlink_cFv)
//	800F70B4: 800EEF30 (setRideSubjectAngle__9daAlink_cFs)
//	800F70C4: 800E0E64 (setBoomerangSight__9daAlink_cFv)
//	800F70DC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBoomerangSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBoomerangSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F70F0-800F715C 006C+00 s=1 e=0 z=0  None .text      procCanoeBoomerangMoveInit__9daAlink_cFv
 */
//	800F7108: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F7120: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F712C: 800E03D0 (initBoomerangUpperAnimeSpeed__9daAlink_cFi)
//	800F7130: 804061C0 (g_dComIfG_gameInfo)
//	800F7134: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBoomerangMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBoomerangMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F715C-800F7208 00AC+00 s=1 e=0 z=0  None .text      procCanoeBoomerangMove__9daAlink_cFv */
//	800F7170: 800B72E4 (checkItemActorPointer__9daAlink_cFv)
//	800F71BC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F71C4: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F71DC: 800F4924 (checkNextActionCanoe__9daAlink_cFv)
//	800F71EC: 800EF050 (setBodyAngleRideReadyAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBoomerangMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBoomerangMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F7208-800F7274 006C+00 s=1 e=0 z=0  None .text      procCanoeHookshotSubjectInit__9daAlink_cFv
 */
//	800F7220: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F7238: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F7244: 801090EC (initHookshotUpperAnimeSpeed__9daAlink_cFi)
//	800F7248: 804061C0 (g_dComIfG_gameInfo)
//	800F724C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeHookshotSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeHookshotSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7274-800F731C 00A8+00 s=1 e=0 z=0  None .text      procCanoeHookshotSubject__9daAlink_cFv */
//	800F7284: 803621DC (_savegpr_29)
//	800F728C: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	800F72A0: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F72B0: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F72CC: 800F4924 (checkNextActionCanoe__9daAlink_cFv)
//	800F72E0: 800EEF30 (setRideSubjectAngle__9daAlink_cFs)
//	800F72F0: 80108DB4 (setHookshotSight__9daAlink_cFv)
//	800F7308: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeHookshotSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeHookshotSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F731C-800F7388 006C+00 s=1 e=0 z=0  None .text      procCanoeHookshotMoveInit__9daAlink_cFv */
//	800F7334: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F734C: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F7358: 801090EC (initHookshotUpperAnimeSpeed__9daAlink_cFi)
//	800F735C: 804061C0 (g_dComIfG_gameInfo)
//	800F7360: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeHookshotMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeHookshotMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7388-800F7404 007C+00 s=1 e=0 z=0  None .text      procCanoeHookshotMove__9daAlink_cFv */
//	800F739C: 80108F64 (cancelHookshotMove__9daAlink_cFv)
//	800F73A4: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	800F73B8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800F73C0: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F73D8: 800F4924 (checkNextActionCanoe__9daAlink_cFv)
//	800F73E8: 800EF050 (setBodyAngleRideReadyAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeHookshotMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeHookshotMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F7404-800F7550 014C+00 s=1 e=0 z=0  None .text      procCanoeBottleDrinkInit__9daAlink_cFUs */
//	800F7420: 804061C0 (g_dComIfG_gameInfo)
//	800F7424: 804061C0 (g_dComIfG_gameInfo)
//	800F743C: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800F7460: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F7468: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F7470: 80452CC0 (lit_6108)
//	800F7494: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F74A4: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	800F74A8: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	800F74AC: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800F74B8:
// 800AFB14 (setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM) 	800F74C0: 800BF854
//(keepItemData__9daAlink_cFv) 	800F74CC: 8010E5D8 (setBottleModel__9daAlink_cFUs) 	800F74D0:
//804061C0 (g_dComIfG_gameInfo) 	800F74D4: 804061C0 (g_dComIfG_gameInfo) 	800F7500: 80181640
//(dCam_getBody__Fv) 	800F750C: 80392094 (d_a_d_a_alink__stringBase0) 	800F7510: 80392094
//(d_a_d_a_alink__stringBase0) 	800F7528: 80088A7C (StartEventCamera__9dCamera_cFiie)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBottleDrinkInit(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBottleDrinkInit__9daAlink_cFUs.s"
}
#pragma pop

/* 800F7550-800F75BC 006C+00 s=1 e=0 z=0  None .text      procCanoeBottleDrink__9daAlink_cFv */
//	800F7564: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F7578: 80452CC4 (lit_6109)
//	800F757C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F7584: 800BF884 (returnKeepItemData__9daAlink_cFv)
//	800F758C: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	800F75A0: 8010EAC4 (commonBottleDrink__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBottleDrink() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBottleDrink__9daAlink_cFv.s"
}
#pragma pop

/* 800F75BC-800F7684 00C8+00 s=1 e=0 z=0  None .text      procCanoeKandelaarPourInit__9daAlink_cFv
 */
//	800F75D0: 804061C0 (g_dComIfG_gameInfo)
//	800F75D4: 804061C0 (g_dComIfG_gameInfo)
//	800F75EC: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800F7610: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F7618: 800F459C (setSyncCanoePos__9daAlink_cFv)
//	800F7620: 80452CC0 (lit_6108)
//	800F7644: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800F7654: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	800F7658: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	800F7660: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	800F7668:
// 80110FE0 (commonKandelaarPourInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeKandelaarPourInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeKandelaarPourInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7684-800F7708 0084+00 s=1 e=0 z=0  None .text      procCanoeKandelaarPour__9daAlink_cFv */
//	800F7698: 800F47D8 (canoeCommon__9daAlink_cFv)
//	800F76AC: 80452CC4 (lit_6109)
//	800F76B0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F76B8: 80110F88 (resetOilBottleModel__9daAlink_cFv)
//	800F76C0: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	800F76D4: 801110B8 (commonKandelaarPour__9daAlink_cFi)
//	800F76E8: 80452CBC (lit_6041)
//	800F76EC: 800AD374 (setUpperAnimeBaseMorf__9daAlink_cFUsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeKandelaarPour() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeKandelaarPour__9daAlink_cFv.s"
}
#pragma pop

/* 800F7708-800F7760 0058+00 s=2 e=0 z=0  None .text      setGroundFishingRodActor__9daAlink_cFv */
//	800F773C: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	800F7748: 800F3DA0 (initFishingRodHand__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGroundFishingRodActor() {
    nofralloc
#include "asm/d/a/d_a_alink/setGroundFishingRodActor__9daAlink_cFv.s"
}
#pragma pop

/* 800F7760-800F7814 00B4+00 s=1 e=0 z=0  None .text      procFishingCastInit__9daAlink_cFv */
//	800F7778: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F7794: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800F7798: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800F77A0: 80452CC4 (lit_6109)
//	800F77A4: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800F77B0: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	800F77C4: 80452CC0 (lit_6108)
//	800F77E4: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFishingCastInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFishingCastInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7814-800F7988 0174+00 s=1 e=0 z=0  None .text      procFishingCast__9daAlink_cFv */
//	800F7828: 800F4490 (setFishGetFace__9daAlink_cFv)
//	800F7840: 800AF9A8 (setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800F786C: 804061C0 (g_dComIfG_gameInfo)
//	800F7870: 804061C0 (g_dComIfG_gameInfo)
//	800F787C: 80033D40 (setBaitItem__17dSv_player_item_cFUc)
//	800F78BC: 80452CBC (lit_6041)
//	800F78C0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	800F78D4: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800F78E0: 80452CA4 (lit_6021)
//	800F78F4: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800F78F8: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800F7908: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800F7920: 80452CC0 (lit_6108)
//	800F794C: 80452D88 (lit_8782)
//	800F7958: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800F795C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	800F7968: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFishingCast() {
    nofralloc
#include "asm/d/a/d_a_alink/procFishingCast__9daAlink_cFv.s"
}
#pragma pop

/* 800F7988-800F7AA8 0120+00 s=1 e=0 z=0  None .text      procFishingFoodInit__9daAlink_cFv */
//	800F799C: 804061C0 (g_dComIfG_gameInfo)
//	800F79A0: 804061C0 (g_dComIfG_gameInfo)
//	800F79B8: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	800F79DC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F79E8: 80452CB8 (lit_6040)
//	800F79EC: 80452CC0 (lit_6108)
//	800F79F4: 80452CC4 (lit_6109)
//	800F79F8: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800F7A08: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	800F7A24: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	800F7A3C: 800BF854 (keepItemData__9daAlink_cFv)
//	800F7A4C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800F7A58: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	800F7A64: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800F7A74: 800BF9F0 (setItemActor__9daAlink_cFv)
//	800F7A78: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFishingFoodInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFishingFoodInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7AA8-800F7C50 01A8+00 s=1 e=0 z=0  None .text      procFishingFood__9daAlink_cFv */
//	800F7AC4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F7AEC: 800BF884 (returnKeepItemData__9daAlink_cFv)
//	800F7AF4: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	800F7B04: 80452CBC (lit_6041)
//	800F7B08: 80452CC0 (lit_6108)
//	800F7B14: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800F7B24: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	800F7B38: 8002E5C0 (dComIfGp_getSelectItemNum__Fi)
//	800F7B48: 804061C0 (g_dComIfG_gameInfo)
//	800F7B4C: 804061C0 (g_dComIfG_gameInfo)
//	800F7B5C: 800336BC (setEquipBottleItemEmpty__17dSv_player_item_cFUc)
//	800F7B6C: 8002E83C (dComIfGp_addSelectItemNum__Fis)
//	800F7B7C: 804061C0 (g_dComIfG_gameInfo)
//	800F7B80: 804061C0 (g_dComIfG_gameInfo)
//	800F7B94: 80033598 (setEquipBottleItemIn__17dSv_player_item_cFUcUc)
//	800F7BAC: 8002E714 (dComIfGp_setSelectItemNum__Fis)
//	800F7C20: 804061C0 (g_dComIfG_gameInfo)
//	800F7C24: 804061C0 (g_dComIfG_gameInfo)
//	800F7C30: 80033D40 (setBaitItem__17dSv_player_item_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFishingFood() {
    nofralloc
#include "asm/d/a/d_a_alink/procFishingFood__9daAlink_cFv.s"
}
#pragma pop

/* 800F7C50-800F7C74 0024+00 s=2 e=0 z=0  None .text      getCrawlMoveAnmSpeed__9daAlink_cFv */
//	800F7C50: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800F7C54: 8038E01C (m__20daAlinkHIO_crouch_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCrawlMoveAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getCrawlMoveAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800F7C74-800F7CE8 0074+00 s=2 e=0 z=0  None .text      getCrawlMoveSpeed__9daAlink_cFv */
//	800F7C8C: 80452E94 (lit_16210)
//	800F7CA0: 80452F34 (lit_22146)
//	800F7CA8: 802675E4 (cM_rad2s__Ff)
//	800F7CB0: 80439A20 (sincosTable___5JMath)
//	800F7CB4: 80439A20 (sincosTable___5JMath)
//	800F7CBC: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800F7CC0: 8038E01C (m__20daAlinkHIO_crouch_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCrawlMoveSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getCrawlMoveSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800F7CE8-800F7E48 0160+00 s=4 e=0 z=0  None .text      setCrawlMoveDirectionArrow__9daAlink_cFv
 */
//	800F7D04: 804061C0 (g_dComIfG_gameInfo)
//	800F7D08: 804061C0 (g_dComIfG_gameInfo)
//	800F7D24: 80270E24 (cLib_distanceAngleS__Fss)
//	800F7D54: 80452F38 (struct_80452F38)
//	800F7D5C: 80452F39 (struct_80452F38)
//	800F7D70: 80452F39 (struct_80452F38)
//	800F7D7C: 80452F38 (struct_80452F38)
//	800F7E24: 804061C0 (g_dComIfG_gameInfo)
//	800F7E28: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCrawlMoveDirectionArrow() {
    nofralloc
#include "asm/d/a/d_a_alink/setCrawlMoveDirectionArrow__9daAlink_cFv.s"
}
#pragma pop

/* 800F7E48-800F81C0 0378+00 s=2 e=0 z=0  None .text      changeCrawlAutoMoveProc__9daAlink_cFP4cXyz
 */
//	800F7E88: 803621DC (_savegpr_29)
//	800F7E9C: 80439A20 (sincosTable___5JMath)
//	800F7EA0: 80439A20 (sincosTable___5JMath)
//	800F7EC8: 80452D54 (lit_8248)
//	800F7EF4: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800F7F0C: 804061C0 (g_dComIfG_gameInfo)
//	800F7F10: 804061C0 (g_dComIfG_gameInfo)
//	800F7F1C: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800F7F2C: 80452F1C (lit_20991)
//	800F7F70: 800F8700 (checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs)
//	800F7F90: 80452F1C (lit_20991)
//	800F7FC0: 80452D14 (lit_7307)
//	800F7FC4: 80266B84 (__ml__4cXyzCFf)
//	800F7FD4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F7FFC: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800F8010: 80452D54 (lit_8248)
//	800F8054: 800F8700 (checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs)
//	800F8070: 80452D54 (lit_8248)
//	800F80B4: 800F8700 (checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs)
//	800F80D4: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800F80E4: 80452C98 (lit_5943)
//	800F812C: 8026862C (cM3d_Len2dSqPntAndSegLine__FffffffPfPfPf)
//	800F8158: 80137C90 (procWolfLieAutoMoveInit__9daAlink_cFiP4cXyz)
//	800F816C: 800F99FC (procCrawlAutoMoveInit__9daAlink_cFiP4cXyz)
//	800F81AC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeCrawlAutoMoveProc(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeCrawlAutoMoveProc__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 800F81C0-800F85C0 0400+00 s=2 e=0 z=0  None .text
 * getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc          */
//	800F81D0: 803621CC (_savegpr_25)
//	800F81EC: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800F820C: 804061C0 (g_dComIfG_gameInfo)
//	800F8210: 804061C0 (g_dComIfG_gameInfo)
//	800F8220: 804061C0 (g_dComIfG_gameInfo)
//	800F8224: 804061C0 (g_dComIfG_gameInfo)
//	800F8230: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800F8248: 804061C0 (g_dComIfG_gameInfo)
//	800F824C: 804061C0 (g_dComIfG_gameInfo)
//	800F8258: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800F8264: 803A37C0 (__vt__8cM3dGPla)
//	800F8268: 803A37C0 (__vt__8cM3dGPla)
//	800F8270: 804061C0 (g_dComIfG_gameInfo)
//	800F8274: 804061C0 (g_dComIfG_gameInfo)
//	800F8288: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800F8294: 80074CBC (GetSpecialCode__4dBgSFRC13cBgS_PolyInfo)
//	800F82A0: 80268210 (cBgW_CheckBWall__Ff)
//	800F82B8: 802681E4 (cBgW_CheckBGround__Ff)
//	800F82D0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F82F0: 80267128 (atan2sX_Z__4cXyzCFv)
//	800F82FC: 80267128 (atan2sX_Z__4cXyzCFv)
//	800F8318: 803650D0 (abs)
//	800F8324: 803A37C0 (__vt__8cM3dGPla)
//	800F8328: 803A37C0 (__vt__8cM3dGPla)
//	800F8340: 80452CC0 (lit_6108)
//	800F8354: 80347138 (PSVECSquareMag)
//	800F8358: 80452CC0 (lit_6108)
//	800F8368: 80452CE8 (lit_6846)
//	800F8370: 80452CF0 (lit_6847)
//	800F83B8: 80452CF8 (lit_6848)
//	800F83C4: 80450AE0 (__float_nan)
//	800F83C8: 80450AE0 (__float_nan)
//	800F8434: 80450AE0 (__float_nan)
//	800F8438: 80450AE0 (__float_nan)
//	800F843C: 80439A20 (sincosTable___5JMath)
//	800F8440: 80439A20 (sincosTable___5JMath)
//	800F8474: 80452CC0 (lit_6108)
//	800F84A0: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
//	800F84B4: 803A37C0 (__vt__8cM3dGPla)
//	800F84B8: 803A37C0 (__vt__8cM3dGPla)
//	800F84CC: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800F84D4: 80267128 (atan2sX_Z__4cXyzCFv)
//	800F84E0: 800D7768 (checkIcePolygonDamage__9daAlink_cFP13cBgS_PolyInfo)
//	800F84FC: 801AB59C (dKy_pol_argument_get__FPC13cBgS_PolyInfo)
//	800F8514: 803A37C0 (__vt__8cM3dGPla)
//	800F8518: 803A37C0 (__vt__8cM3dGPla)
//	800F8520: 803A37C0 (__vt__8cM3dGPla)
//	800F8524: 803A37C0 (__vt__8cM3dGPla)
//	800F8568: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F8584: 803A37C0 (__vt__8cM3dGPla)
//	800F8588: 803A37C0 (__vt__8cM3dGPla)
//	800F8598: 803A37C0 (__vt__8cM3dGPla)
//	800F859C: 803A37C0 (__vt__8cM3dGPla)
//	800F85AC: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCrawlMoveVec(cXyz* param_0, cXyz* param_1, cXyz* param_2, int param_3,
                                    int param_4, u8* param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc.s"
}
#pragma pop

/* 800F85C0-800F8700 0140+00 s=2 e=0 z=0  None .text      crawlBgCheck__9daAlink_cFP4cXyzP4cXyzi */
//	800F85D4: 803621D8 (_savegpr_28)
//	800F85F0: 8038FA6C (l_crawlTopOffset)
//	800F85F4: 8038FA6C (l_crawlTopOffset)
//	800F85FC: 80346D6C (PSMTXMultVec)
//	800F861C: 800F81C0 (getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc)
//	800F862C: 8038FAC0 (l_crawlTopUpOffset)
//	800F8630: 8038FAC0 (l_crawlTopUpOffset)
//	800F8638: 80346D6C (PSMTXMultVec)
//	800F8658: 800F81C0 (getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc)
//	800F8670: 80347138 (PSVECSquareMag)
//	800F867C: 80347138 (PSVECSquareMag)
//	800F8694: 803470B4 (PSVECSubtract)
//	800F86A8: 803470B4 (PSVECSubtract)
//	800F86C4: 803470B4 (PSVECSubtract)
//	800F86E0: 803470B4 (PSVECSubtract)
//	800F86EC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::crawlBgCheck(cXyz* param_0, cXyz* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/crawlBgCheck__9daAlink_cFP4cXyzP4cXyzi.s"
}
#pragma pop

/* 800F8700-800F88F8 01F8+00 s=2 e=0 z=0  None .text
 * checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs  */
//	800F8718: 803621D0 (_savegpr_26)
//	800F8730: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800F873C: 803A37C0 (__vt__8cM3dGPla)
//	800F8740: 803A37C0 (__vt__8cM3dGPla)
//	800F8760: 804061C0 (g_dComIfG_gameInfo)
//	800F8764: 804061C0 (g_dComIfG_gameInfo)
//	800F8778: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800F8780: 80267128 (atan2sX_Z__4cXyzCFv)
//	800F8790: 80452D54 (lit_8248)
//	800F8794: 80266B84 (__ml__4cXyzCFf)
//	800F87A4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800F87CC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800F87D8: 80452C98 (lit_5943)
//	800F87DC: 80266B84 (__ml__4cXyzCFf)
//	800F8804: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800F8834: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800F883C: 80267128 (atan2sX_Z__4cXyzCFv)
//	800F8850: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F8870: 80452CC0 (lit_6108)
//	800F8880: 80347138 (PSVECSquareMag)
//	800F8890: 80270E24 (cLib_distanceAngleS__Fss)
//	800F889C: 80452F3C (lit_22608)
//	800F88A8: 80452F40 (lit_22609)
//	800F88B4: 803A37C0 (__vt__8cM3dGPla)
//	800F88B8: 803A37C0 (__vt__8cM3dGPla)
//	800F88C8: 803A37C0 (__vt__8cM3dGPla)
//	800F88CC: 803A37C0 (__vt__8cM3dGPla)
//	800F88E4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCrawlSideWall(cXyz* param_0, cXyz* param_1, cXyz* param_2, cXyz* param_3,
                                       s16* param_4, s16* param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs.s"
}
#pragma pop

/* 800F88F8-800F89E0 00E8+00 s=6 e=0 z=0  None .text      decideCrawlDoStatus__9daAlink_cFv */
//	800F8910: 804061C0 (g_dComIfG_gameInfo)
//	800F8914: 804061C0 (g_dComIfG_gameInfo)
//	800F8934: 800CEBD8 (checkSubjectEnd__9daAlink_cFi)
//	800F8950: 804061C0 (g_dComIfG_gameInfo)
//	800F8954: 804061C0 (g_dComIfG_gameInfo)
//	800F8968: 80181640 (dCam_getBody__Fv)
//	800F8970: 801614F4 (ChangeModeOK__9dCamera_cFl)
//	800F89B4: 80115C20 (checkEventRun__9daAlink_cCFv)
//	800F89C4: 800CEAF4 (setSubjectMode__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::decideCrawlDoStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/decideCrawlDoStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800F89E0-800F8A50 0070+00 s=3 e=0 z=0  None .text      checkNotCrawlStand__9daAlink_cFP4cXyz */
//	800F8A0C: 804061C0 (g_dComIfG_gameInfo)
//	800F8A10: 804061C0 (g_dComIfG_gameInfo)
//	800F8A1C: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNotCrawlStand(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNotCrawlStand__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 800F8A50-800F8B00 00B0+00 s=2 e=0 z=0  None .text checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz
 */
//	800F8A60: 803621DC (_savegpr_29)
//	800F8A74: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800F8A98: 800F89E0 (checkNotCrawlStand__9daAlink_cFP4cXyz)
//	800F8AB8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F8ADC: 800F89E0 (checkNotCrawlStand__9daAlink_cFP4cXyz)
//	800F8AEC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNotCrawlStand(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800F8B00-800F8D04 0204+00 s=2 e=0 z=0  None .text
 * checkCrawlInHoll__9daAlink_cFP4cXyzP4cXyzP4cXyzi             */
//	800F8B10: 803621D8 (_savegpr_28)
//	800F8B34: 80346D6C (PSMTXMultVec)
//	800F8B48: 80346D6C (PSMTXMultVec)
//	800F8B50: 80452CC0 (lit_6108)
//	800F8B6C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F8B78: 80452C98 (lit_5943)
//	800F8B7C: 80266B84 (__ml__4cXyzCFf)
//	800F8BB0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F8BBC: 80452C98 (lit_5943)
//	800F8BC0: 80266B84 (__ml__4cXyzCFf)
//	800F8BE8: 80347090 (PSVECAdd)
//	800F8BF8: 80347090 (PSVECAdd)
//	800F8C04: 80452D14 (lit_7307)
//	800F8C08: 80266B84 (__ml__4cXyzCFf)
//	800F8C18: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F8C50: 800F8700 (checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs)
//	800F8C78: 800F8700 (checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs)
//	800F8C98: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800F8CA4: 80452C98 (lit_5943)
//	800F8CA8: 80266B84 (__ml__4cXyzCFf)
//	800F8CB8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F8CF0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCrawlInHoll(cXyz* param_0, cXyz* param_1, cXyz* param_2, int param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/checkCrawlInHoll__9daAlink_cFP4cXyzP4cXyzP4cXyzi.s"
}
#pragma pop

/* 800F8D04-800F8DBC 00B8+00 s=2 e=0 z=0  None .text      setCrawlMoveHoll__9daAlink_cFv */
//	800F8D1C: 80452CC0 (lit_6108)
//	800F8D3C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800F8D5C: 80452CB8 (lit_6040)
//	800F8D6C: 80452C98 (lit_5943)
//	800F8D70: 80452D30 (lit_7625)
//	800F8D74: 8026F97C (cLib_addCalc__FPfffff)
//	800F8D8C: 80452CB8 (lit_6040)
//	800F8D9C: 80452C98 (lit_5943)
//	800F8DA0: 80452D30 (lit_7625)
//	800F8DA4: 8026F97C (cLib_addCalc__FPfffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCrawlMoveHoll() {
    nofralloc
#include "asm/d/a/d_a_alink/setCrawlMoveHoll__9daAlink_cFv.s"
}
#pragma pop

/* 800F8DBC-800F8F08 014C+00 s=1 e=0 z=0  None .text      setCrawlMoveAngle__9daAlink_cFv */
//	800F8DDC: 8038D658 (lit_3757)
//	800F8DE0: 8038D658 (lit_3757)
//	800F8DFC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800F8E2C: 80346D6C (PSMTXMultVec)
//	800F8E40: 80346D6C (PSMTXMultVec)
//	800F8E58: 80346D6C (PSMTXMultVec)
//	800F8E6C: 80346D6C (PSMTXMultVec)
//	800F8E78: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800F8E88: 804061C0 (g_dComIfG_gameInfo)
//	800F8E8C: 804061C0 (g_dComIfG_gameInfo)
//	800F8E98: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800F8EC0: 80267150 (atan2sY_XZ__4cXyzCFv)
//	800F8EC8: 80270E24 (cLib_distanceAngleS__Fss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCrawlMoveAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/setCrawlMoveAngle__9daAlink_cFv.s"
}
#pragma pop

/* 800F8F08-800F8F84 007C+00 s=6 e=0 z=0  None .text      stopHalfMoveAnime__9daAlink_cFf */
//	800F8F34: 80452CC0 (lit_6108)
//	800F8F38: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F8F44: 80452CC0 (lit_6108)
//	800F8F50: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::stopHalfMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/stopHalfMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 800F8F84-800F9210 028C+00 s=2 e=0 z=0  None .text      setCrawlAutoMoveAimPos__9daAlink_cFv */
//	800F8FA8: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800F8FB4: 80439A20 (sincosTable___5JMath)
//	800F8FB8: 80439A20 (sincosTable___5JMath)
//	800F8FE0: 80452D2C (lit_7624)
//	800F8FE4: 80452D54 (lit_8248)
//	800F9060: 80452D2C (lit_7624)
//	800F9064: 80452D54 (lit_8248)
//	800F90FC: 80439A20 (sincosTable___5JMath)
//	800F9100: 80439A20 (sincosTable___5JMath)
//	800F910C: 80452D2C (lit_7624)
//	800F9110: 80452D54 (lit_8248)
//	800F919C: 80439A20 (sincosTable___5JMath)
//	800F91A0: 80439A20 (sincosTable___5JMath)
//	800F91AC: 80452D2C (lit_7624)
//	800F91B0: 80452D54 (lit_8248)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCrawlAutoMoveAimPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setCrawlAutoMoveAimPos__9daAlink_cFv.s"
}
#pragma pop

/* 800F9210-800F9384 0174+00 s=2 e=0 z=0  None .text      procCrawlStartInit__9daAlink_cFv */
//	800F9238: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800F9244: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F9248: 80425514 (l_waitBaseAnime)
//	800F924C: 80425514 (l_waitBaseAnime)
//	800F926C: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800F9270: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800F9274: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800F9278:
//80452CC0 (lit_6108) 	800F92A0: 80439A20 (sincosTable___5JMath) 	800F92A4: 80439A20
//(sincosTable___5JMath) 	800F92B0: 80452DBC (lit_10042) 	800F92E0: 8038E01C
//(m__20daAlinkHIO_crouch_c0) 	800F92E4: 8038E01C (m__20daAlinkHIO_crouch_c0) 	800F92F0: 80452CB0
//(lit_6025) 	800F9330: 80452CB8 (lit_6040) 	800F9338: 8038E01C (m__20daAlinkHIO_crouch_c0) 	800F933C:
//8038E01C (m__20daAlinkHIO_crouch_c0) 	800F9350: 80452CC0 (lit_6108) 	800F9358: 804061C0
//(g_dComIfG_gameInfo) 	800F935C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlStartInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlStartInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F9384-800F9474 00F0+00 s=1 e=0 z=0  None .text      procCrawlStart__9daAlink_cFv */
//	800F93A0: 800F88F8 (decideCrawlDoStatus__9daAlink_cFv)
//	800F93A4: 80452CB8 (lit_6040)
//	800F93C4: 8038FA54 (l_crawlFrontOffset)
//	800F93C8: 8038FA54 (l_crawlFrontOffset)
//	800F93FC: 80346D6C (PSMTXMultVec)
//	800F9400: 80452DB0 (lit_10039)
//	800F9418: 80346D6C (PSMTXMultVec)
//	800F942C: 800F85C0 (crawlBgCheck__9daAlink_cFP4cXyzP4cXyzi)
//	800F943C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F9454: 800F9474 (procCrawlMoveInit__9daAlink_cFss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlStart__9daAlink_cFv.s"
}
#pragma pop

/* 800F9474-800F95B8 0144+00 s=3 e=0 z=0  None .text      procCrawlMoveInit__9daAlink_cFss */
//	800F948C: 803621CC (_savegpr_25)
//	800F94C4: 804061C0 (g_dComIfG_gameInfo)
//	800F94C8: 804061C0 (g_dComIfG_gameInfo)
//	800F94DC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F94F4: 800F7C50 (getCrawlMoveAnmSpeed__9daAlink_cFv)
//	800F9520: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800F952C: 80452CBC (lit_6041)
//	800F9548: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800F954C: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800F9554: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800F9568: 80452CB8 (lit_6040)
//	800F95A4: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlMoveInit(s16 param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlMoveInit__9daAlink_cFss.s"
}
#pragma pop

/* 800F95B8-800F99FC 0444+00 s=1 e=0 z=0  None .text      procCrawlMove__9daAlink_cFv */
//	800F95D0: 803621C8 (_savegpr_24)
//	800F95D8: 8038D658 (lit_3757)
//	800F95DC: 8038D658 (lit_3757)
//	800F95EC: 800F88F8 (decideCrawlDoStatus__9daAlink_cFv)
//	800F9600: 80346D6C (PSMTXMultVec)
//	800F9614: 80346D6C (PSMTXMultVec)
//	800F9628: 80346D6C (PSMTXMultVec)
//	800F963C: 80346E4C (PSMTXMultVecSR)
//	800F9648: 800F89E0 (checkNotCrawlStand__9daAlink_cFP4cXyz)
//	800F9658: 800F89E0 (checkNotCrawlStand__9daAlink_cFP4cXyz)
//	800F9668: 800F89E0 (checkNotCrawlStand__9daAlink_cFP4cXyz)
//	800F9694: 800F8A50 (checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz)
//	800F96AC: 800F8A50 (checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz)
//	800F96C4: 800F8A50 (checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz)
//	800F96F4: 803A37C0 (__vt__8cM3dGPla)
//	800F96F8: 803A37C0 (__vt__8cM3dGPla)
//	800F971C: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	800F972C: 80452F44 (lit_23155)
//	800F9750: 800F9D7C (procCrawlEndInit__9daAlink_cFiss)
//	800F9760: 800F7C50 (getCrawlMoveAnmSpeed__9daAlink_cFv)
//	800F976C: 80452CC0 (lit_6108)
//	800F9780: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800F9798: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800F97B0: 80452CC0 (lit_6108)
//	800F97B4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F97C4: 80452E94 (lit_16210)
//	800F97C8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F97F4: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800F9808: 80452CA4 (lit_6021)
//	800F9824: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800F983C: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800F9858: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800F9868: 800BF37C (initBasAnime__9daAlink_cFv)
//	800F987C: 80452E94 (lit_16210)
//	800F9880: 800F8F08 (stopHalfMoveAnime__9daAlink_cFf)
//	800F98A4: 800F8B00 (checkCrawlInHoll__9daAlink_cFP4cXyzP4cXyzP4cXyzi)
//	800F98B4: 800F8D04 (setCrawlMoveHoll__9daAlink_cFv)
//	800F98EC: 800F7E48 (changeCrawlAutoMoveProc__9daAlink_cFP4cXyz)
//	800F98F8: 803A37C0 (__vt__8cM3dGPla)
//	800F98FC: 803A37C0 (__vt__8cM3dGPla)
//	800F991C: 80452CA4 (lit_6021)
//	800F992C: 80452CC0 (lit_6108)
//	800F993C: 800F8DBC (setCrawlMoveAngle__9daAlink_cFv)
//	800F9944: 800F7C74 (getCrawlMoveSpeed__9daAlink_cFv)
//	800F9950: 80452CC0 (lit_6108)
//	800F995C: 80452CBC (lit_6041)
//	800F9988: 80346D6C (PSMTXMultVec)
//	800F999C: 800F85C0 (crawlBgCheck__9daAlink_cFP4cXyzP4cXyzi)
//	800F99B4: 80346D6C (PSMTXMultVec)
//	800F99C8: 800F85C0 (crawlBgCheck__9daAlink_cFP4cXyzP4cXyzi)
//	800F99CC: 803A37C0 (__vt__8cM3dGPla)
//	800F99D0: 803A37C0 (__vt__8cM3dGPla)
//	800F99E8: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F99FC-800F9ABC 00C0+00 s=1 e=0 z=0  None .text      procCrawlAutoMoveInit__9daAlink_cFiP4cXyz
 */
//	800F9A0C: 803621D4 (_savegpr_27)
//	800F9A1C: 804061C0 (g_dComIfG_gameInfo)
//	800F9A20: 804061C0 (g_dComIfG_gameInfo)
//	800F9A30: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F9A4C: 80452CB8 (lit_6040)
//	800F9A78: 800F7CE8 (setCrawlMoveDirectionArrow__9daAlink_cFv)
//	800F9A7C: 80452CC0 (lit_6108)
//	800F9AA8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlAutoMoveInit(int param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlAutoMoveInit__9daAlink_cFiP4cXyz.s"
}
#pragma pop

/* 800F9ABC-800F9D7C 02C0+00 s=1 e=0 z=0  None .text      procCrawlAutoMove__9daAlink_cFv */
//	800F9ACC: 803621D8 (_savegpr_28)
//	800F9AF8: 80452CC0 (lit_6108)
//	800F9AFC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F9B0C: 80452E94 (lit_16210)
//	800F9B10: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800F9B20: 80452E94 (lit_16210)
//	800F9B24: 800F8F08 (stopHalfMoveAnime__9daAlink_cFf)
//	800F9B28: 80452CC0 (lit_6108)
//	800F9B38: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F9B44: 80452CC0 (lit_6108)
//	800F9B5C: 800F7CE8 (setCrawlMoveDirectionArrow__9daAlink_cFv)
//	800F9B64: 800F88F8 (decideCrawlDoStatus__9daAlink_cFv)
//	800F9B7C: 800F7CE8 (setCrawlMoveDirectionArrow__9daAlink_cFv)
//	800F9B84: 80452CA4 (lit_6021)
//	800F9B94: 800F8F84 (setCrawlAutoMoveAimPos__9daAlink_cFv)
//	800F9BA8: 804061C0 (g_dComIfG_gameInfo)
//	800F9BAC: 804061C0 (g_dComIfG_gameInfo)
//	800F9BCC: 80452D14 (lit_7307)
//	800F9BD0: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800F9BE8: 80452D6C (lit_8473)
//	800F9BEC: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800F9BFC: 800BF37C (initBasAnime__9daAlink_cFv)
//	800F9C08: 800F88F8 (decideCrawlDoStatus__9daAlink_cFv)
//	800F9C50: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800F9C90: 80452C98 (lit_5943)
//	800F9C94: 80452CC4 (lit_6109)
//	800F9C98: 80452CB8 (lit_6040)
//	800F9C9C: 8026F97C (cLib_addCalc__FPfffff)
//	800F9CA8: 80452C98 (lit_5943)
//	800F9CAC: 80452CC4 (lit_6109)
//	800F9CB0: 80452CB8 (lit_6040)
//	800F9CB4: 8026F97C (cLib_addCalc__FPfffff)
//	800F9CC4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800F9CE4: 80267128 (atan2sX_Z__4cXyzCFv)
//	800F9CEC: 80270E24 (cLib_distanceAngleS__Fss)
//	800F9D00: 800F7C74 (getCrawlMoveSpeed__9daAlink_cFv)
//	800F9D0C: 80452CC0 (lit_6108)
//	800F9D18: 80452CBC (lit_6041)
//	800F9D54: 800F9474 (procCrawlMoveInit__9daAlink_cFss)
//	800F9D68: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlAutoMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlAutoMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F9D7C-800F9F30 01B4+00 s=1 e=0 z=0  None .text      procCrawlEndInit__9daAlink_cFiss */
//	800F9D94: 803621D4 (_savegpr_27)
//	800F9DB0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800F9DC4: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800F9DC8: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800F9DF0: 80452CBC (lit_6041)
//	800F9DF4: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800F9E18: 80452CB0 (lit_6025)
//	800F9E90: 80452CC0 (lit_6108)
//	800F9EBC: 80452CB8 (lit_6040)
//	800F9EC4: 80452CB0 (lit_6025)
//	800F9EF0: 80425514 (l_waitBaseAnime)
//	800F9EF4: 80425514 (l_waitBaseAnime)
//	800F9F1C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlEndInit(int param_0, s16 param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlEndInit__9daAlink_cFiss.s"
}
#pragma pop

/* 800F9F30-800F9FDC 00AC+00 s=1 e=0 z=0  None .text      procCrawlEnd__9daAlink_cFv */
//	800F9F70: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800F9F84: 800BAF08 (checkNextActionFromCrouch__9daAlink_cFi)
//	800F9F94: 800C33B8 (procWaitInit__9daAlink_cFv)
//	800F9FA0: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800F9FA4: 8038E01C (m__20daAlinkHIO_crouch_c0)
//	800F9FBC: 800BAF08 (checkNextActionFromCrouch__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlEnd__9daAlink_cFv.s"
}
#pragma pop

/* 800F9FDC-800F9FFC 0020+00 s=2 e=0 z=0  None .text      getHangMoveAnmSpeed__9daAlink_cFv */
//	800F9FDC: 8038E1E0 (m__22daAlinkHIO_wallMove_c0)
//	800F9FE0: 8038E1E0 (m__22daAlinkHIO_wallMove_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getHangMoveAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getHangMoveAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800F9FFC-800FA070 0074+00 s=3 e=0 z=0  None .text      getHangDirectionFromAngle__9daAlink_cFv */
//	800FA020: 803650D0 (abs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getHangDirectionFromAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/getHangDirectionFromAngle__9daAlink_cFv.s"
}
#pragma pop

/* 800FA070-800FA338 02C8+00 s=2 e=0 z=0  None .text      hangMoveBgCheck__9daAlink_cFsP4cXyz */
//	800FA090: 803621C8 (_savegpr_24)
//	800FA0A0: 803A37C0 (__vt__8cM3dGPla)
//	800FA0A4: 803A37C0 (__vt__8cM3dGPla)
//	800FA0D4: 80439A20 (sincosTable___5JMath)
//	800FA0D8: 80439A20 (sincosTable___5JMath)
//	800FA0E0: 80452F48 (lit_23416)
//	800FA12C: 80452CE0 (lit_6845)
//	800FA16C: 80452DD4 (lit_11442)
//	800FA1D4: 804061C0 (g_dComIfG_gameInfo)
//	800FA1D8: 804061C0 (g_dComIfG_gameInfo)
//	800FA1E4: 803919F0 (underOffsetY)
//	800FA1E8: 803919F0 (underOffsetY)
//	800FA208: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FA220: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800FA228: 80268210 (cBgW_CheckBWall__Ff)
//	800FA238: 80267128 (atan2sX_Z__4cXyzCFv)
//	800FA240: 80270E24 (cLib_distanceAngleS__Fss)
//	800FA254: 803A37C0 (__vt__8cM3dGPla)
//	800FA258: 803A37C0 (__vt__8cM3dGPla)
//	800FA274: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800FA294: 80452CC0 (lit_6108)
//	800FA2A4: 80347138 (PSVECSquareMag)
//	800FA2B8: 80452CC0 (lit_6108)
//	800FA2C8: 80347138 (PSVECSquareMag)
//	800FA300: 803A37C0 (__vt__8cM3dGPla)
//	800FA304: 803A37C0 (__vt__8cM3dGPla)
//	800FA324: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::hangMoveBgCheck(s16 param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/hangMoveBgCheck__9daAlink_cFsP4cXyz.s"
}
#pragma pop

/* 800FA338-800FA5C8 0290+00 s=3 e=0 z=0  None .text      changeHangMoveProc__9daAlink_cFi */
//	800FA348: 803621D8 (_savegpr_28)
//	800FA360: 804061C0 (g_dComIfG_gameInfo)
//	800FA364: 804061C0 (g_dComIfG_gameInfo)
//	800FA374: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800FA388: 803A37C0 (__vt__8cM3dGPla)
//	800FA38C: 803A37C0 (__vt__8cM3dGPla)
//	800FA3A0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800FA3A8: 80452F4C (lit_23542)
//	800FA3B4: 803A37C0 (__vt__8cM3dGPla)
//	800FA3B8: 803A37C0 (__vt__8cM3dGPla)
//	800FA400: 80452D3C (lit_7808)
//	800FA428: 80452DD4 (lit_11442)
//	800FA430: 80452C9C (lit_5944)
//	800FA43C: 80439A20 (sincosTable___5JMath)
//	800FA440: 80439A20 (sincosTable___5JMath)
//	800FA480: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FA48C: 803A37C0 (__vt__8cM3dGPla)
//	800FA490: 803A37C0 (__vt__8cM3dGPla)
//	800FA4A8: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FA4B4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800FA4C8: 80452D3C (lit_7808)
//	800FA4F8: 80439A20 (sincosTable___5JMath)
//	800FA4FC: 80439A20 (sincosTable___5JMath)
//	800FA504: 80452E80 (lit_16036)
//	800FA530: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FA53C: 803A37C0 (__vt__8cM3dGPla)
//	800FA540: 803A37C0 (__vt__8cM3dGPla)
//	800FA55C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800FA564: 80267128 (atan2sX_Z__4cXyzCFv)
//	800FA56C: 80270E24 (cLib_distanceAngleS__Fss)
//	800FA578: 803A37C0 (__vt__8cM3dGPla)
//	800FA57C: 803A37C0 (__vt__8cM3dGPla)
//	800FA598: 800FA070 (hangMoveBgCheck__9daAlink_cFsP4cXyz)
//	800FA5A4: 803A37C0 (__vt__8cM3dGPla)
//	800FA5A8: 803A37C0 (__vt__8cM3dGPla)
//	800FA5B4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeHangMoveProc(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeHangMoveProc__9daAlink_cFi.s"
}
#pragma pop

/* 800FA5C8-800FA6E4 011C+00 s=5 e=0 z=0  None .text      checkHangFootWall__9daAlink_cFv */
//	800FA5E4: 80439A20 (sincosTable___5JMath)
//	800FA5E8: 80439A20 (sincosTable___5JMath)
//	800FA5FC: 80452CE0 (lit_6845)
//	800FA60C: 80452F50 (lit_23595)
//	800FA648: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FA654: 803A37C0 (__vt__8cM3dGPla)
//	800FA658: 803A37C0 (__vt__8cM3dGPla)
//	800FA660: 804061C0 (g_dComIfG_gameInfo)
//	800FA664: 804061C0 (g_dComIfG_gameInfo)
//	800FA674: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800FA684: 80452CA4 (lit_6021)
//	800FA6A0: 803A37C0 (__vt__8cM3dGPla)
//	800FA6A4: 803A37C0 (__vt__8cM3dGPla)
//	800FA6B4: 803A37C0 (__vt__8cM3dGPla)
//	800FA6B8: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHangFootWall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHangFootWall__9daAlink_cFv.s"
}
#pragma pop

/* 800FA6E4-800FA78C 00A8+00 s=10 e=0 z=0  None .text      setHangGroundY__9daAlink_cFv */
//	800FA724: 80439A20 (sincosTable___5JMath)
//	800FA728: 80439A20 (sincosTable___5JMath)
//	800FA730: 80452E64 (lit_14954)
//	800FA75C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FA760: 804061C0 (g_dComIfG_gameInfo)
//	800FA764: 804061C0 (g_dComIfG_gameInfo)
//	800FA770: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHangGroundY() {
    nofralloc
#include "asm/d/a/d_a_alink/setHangGroundY__9daAlink_cFv.s"
}
#pragma pop

/* 800FA78C-800FA85C 00D0+00 s=5 e=0 z=0  None .text      changeHangEndProc__9daAlink_cFv */
//	800FA7A0: 800FA6E4 (setHangGroundY__9daAlink_cFv)
//	800FA7AC: 8038E1F4 (m__22daAlinkHIO_wallHang_c0)
//	800FA7B0: 8038E1F4 (m__22daAlinkHIO_wallHang_c0)
//	800FA7BC: 80452CB8 (lit_6040)
//	800FA7DC: 80452CC4 (lit_6109)
//	800FA7E8: 80452D3C (lit_7808)
//	800FA7FC: 80452CC0 (lit_6108)
//	800FA800: 800C6F18 (procLandInit__9daAlink_cFf)
//	800FA810: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800FA820: 80452CC0 (lit_6108)
//	800FA830: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FA834: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FA83C: 800C6A48 (procFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeHangEndProc() {
    nofralloc
#include "asm/d/a/d_a_alink/changeHangEndProc__9daAlink_cFv.s"
}
#pragma pop

/* 800FA85C-800FAA7C 0220+00 s=3 e=0 z=0  None .text      checkHangStartSideWall__9daAlink_cFs */
//	800FA884: 803621D8 (_savegpr_28)
//	800FA8B0: 80452DBC (lit_10042)
//	800FA8B8: 80452C9C (lit_5944)
//	800FA8C0: 80439A20 (sincosTable___5JMath)
//	800FA8C4: 80439A20 (sincosTable___5JMath)
//	800FA8DC: 803A37C0 (__vt__8cM3dGPla)
//	800FA8E0: 803A37C0 (__vt__8cM3dGPla)
//	800FA8EC: 80452F48 (lit_23416)
//	800FA908: 80452C98 (lit_5943)
//	800FA938: 80452D14 (lit_7307)
//	800FA95C: 804061C0 (g_dComIfG_gameInfo)
//	800FA960: 804061C0 (g_dComIfG_gameInfo)
//	800FA968: 80452D3C (lit_7808)
//	800FA978: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FA990: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800FA998: 80267128 (atan2sX_Z__4cXyzCFv)
//	800FA9A0: 80270E24 (cLib_distanceAngleS__Fss)
//	800FA9D4: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FA9EC: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800FA9F4: 80267128 (atan2sX_Z__4cXyzCFv)
//	800FA9FC: 80270E24 (cLib_distanceAngleS__Fss)
//	800FAA40: 803A37C0 (__vt__8cM3dGPla)
//	800FAA44: 803A37C0 (__vt__8cM3dGPla)
//	800FAA68: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHangStartSideWall(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkHangStartSideWall__9daAlink_cFs.s"
}
#pragma pop

/* 800FAA7C-800FAE14 0398+00 s=3 e=0 z=0  None .text      procHangStartInit__9daAlink_cFv */
//	800FAAA0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800FAAC0: 80452CC0 (lit_6108)
//	800FAAD0: 80347138 (PSVECSquareMag)
//	800FAAD4: 80452CC0 (lit_6108)
//	800FAAE4: 80452CE8 (lit_6846)
//	800FAAEC: 80452CF0 (lit_6847)
//	800FAB34: 80452CF8 (lit_6848)
//	800FAB40: 80450AE0 (__float_nan)
//	800FAB44: 80450AE0 (__float_nan)
//	800FABB0: 80450AE0 (__float_nan)
//	800FABB4: 80450AE0 (__float_nan)
//	800FABB8: 80452D78 (lit_8676)
//	800FABD4: 80439A20 (sincosTable___5JMath)
//	800FABD8: 80439A20 (sincosTable___5JMath)
//	800FABF0: 80452D2C (lit_7624)
//	800FABFC: 80452D30 (lit_7625)
//	800FAC2C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FAC30: 804061C0 (g_dComIfG_gameInfo)
//	800FAC34: 804061C0 (g_dComIfG_gameInfo)
//	800FAC40: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800FAC5C: 80450690 (l_autoUpHeight)
//	800FAC88: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FACB4: 800FA5C8 (checkHangFootWall__9daAlink_cFv)
//	800FACC8: 8026786C (cM_rnd__Fv)
//	800FACCC: 80452DA8 (lit_9652)
//	800FACE0: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FACE4: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FACEC: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800FACF0:
//8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FACF4: 8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FAD28:
//8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FAD2C: 8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FAD30:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 800FAD34:
//8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FAD38: 8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FAD78:
//8038E164 (m__23daAlinkHIO_wallCatch_c0) 	800FAD7C: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//800FAD80: 800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c)
// 800FAD84: 8038E164 (m__23daAlinkHIO_wallCatch_c0) 	800FAD88: 8038E164
// (m__23daAlinkHIO_wallCatch_c0) 	800FADB4: 800DFC28 (setBowHangAnime__9daAlink_cFv) 	800FADD0:
//80452CC0 (lit_6108) 	800FADDC: 804061C0 (g_dComIfG_gameInfo) 	800FADE0: 804061C0
//(g_dComIfG_gameInfo) 	800FADF4: 800FA6E4 (setHangGroundY__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangStartInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangStartInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FAE14-800FAECC 00B8+00 s=1 e=0 z=0  None .text      procHangStart__9daAlink_cFv */
//	800FAE30: 800FA78C (changeHangEndProc__9daAlink_cFv)
//	800FAE48: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FAE58: 800FB43C (procHangWaitInit__9daAlink_cFv)
//	800FAE74: 80452CA4 (lit_6021)
//	800FAE90: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	800FAEA0: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FAEA4: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FAEAC: 800FBBC8 (procHangClimbInit__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FAECC-800FB1A4 02D8+00 s=1 e=0 z=0  None .text procHangFallStartInit__9daAlink_cFP8cM3dGPla
 */
//	800FAEEC: 803621DC (_savegpr_29)
//	800FAEFC: 80267128 (atan2sX_Z__4cXyzCFv)
//	800FAF08: 80452D2C (lit_7624)
//	800FAF38: 800FA85C (checkHangStartSideWall__9daAlink_cFs)
//	800FAF40: 80452D00 (lit_6895)
//	800FAF64: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FAF68: 804061C0 (g_dComIfG_gameInfo)
//	800FAF6C: 804061C0 (g_dComIfG_gameInfo)
//	800FAF7C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800FAF84: 80452DA4 (lit_9138)
//	800FAF98: 80450694 (l_autoDownHeight)
//	800FAFBC: 80452C9C (lit_5944)
//	800FAFC4: 80439A20 (sincosTable___5JMath)
//	800FAFC8: 80439A20 (sincosTable___5JMath)
//	800FAFEC: 80452D00 (lit_6895)
//	800FB010: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FB01C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800FB024: 80452D00 (lit_6895)
//	800FB054: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FB060: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800FB070: 80452D00 (lit_6895)
//	800FB0C0: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800FB0DC: 80452CC0 (lit_6108)
//	800FB0E4: 8038E1B8 (m__22daAlinkHIO_wallFall_c0)
//	800FB0E8: 8038E1B8 (m__22daAlinkHIO_wallFall_c0)
//	800FB0F8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FB110: 8038E1B8 (m__22daAlinkHIO_wallFall_c0)
//	800FB114: 8038E1B8 (m__22daAlinkHIO_wallFall_c0)
//	800FB128: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800FB12C: 80452CC0 (lit_6108)
//	800FB138: 804061C0 (g_dComIfG_gameInfo)
//	800FB13C: 804061C0 (g_dComIfG_gameInfo)
//	800FB16C: 800DFC28 (setBowHangAnime__9daAlink_cFv)
//	800FB174: 800FA6E4 (setHangGroundY__9daAlink_cFv)
//	800FB190: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangFallStartInit(cM3dGPla* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHangFallStartInit__9daAlink_cFP8cM3dGPla.s"
}
#pragma pop

/* 800FB1A4-800FB2A0 00FC+00 s=1 e=0 z=0  None .text      procHangFallStart__9daAlink_cFv */
//	800FB1B4: 803621DC (_savegpr_29)
//	800FB1C4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FB1D4: 8038E1B8 (m__22daAlinkHIO_wallFall_c0)
//	800FB1D8: 8038E1B8 (m__22daAlinkHIO_wallFall_c0)
//	800FB1F8: 800FA78C (changeHangEndProc__9daAlink_cFv)
//	800FB210: 80452D3C (lit_7808)
//	800FB214: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800FB220: 80452CC0 (lit_6108)
//	800FB228: 80452CB8 (lit_6040)
//	800FB234: 804061C0 (g_dComIfG_gameInfo)
//	800FB238: 804061C0 (g_dComIfG_gameInfo)
//	800FB24C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	800FB25C: 800F9FFC (getHangDirectionFromAngle__9daAlink_cFv)
//	800FB268: 80452CA4 (lit_6021)
//	800FB280: 800FB2A0 (procHangUpInit__9daAlink_cFi)
//	800FB28C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangFallStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangFallStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FB2A0-800FB328 0088+00 s=1 e=0 z=0  None .text      procHangUpInit__9daAlink_cFi */
//	800FB2C0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FB2CC: 8038E1B8 (m__22daAlinkHIO_wallFall_c0)
//	800FB2D0: 8038E1B8 (m__22daAlinkHIO_wallFall_c0)
//	800FB2D8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800FB2DC:
//804061C0 (g_dComIfG_gameInfo) 	800FB2E0: 804061C0 (g_dComIfG_gameInfo) 	800FB2F4: 800DFC28
//(setBowHangAnime__9daAlink_cFv) 	800FB2FC: 80452CC0 (lit_6108) 	800FB308: 800FA6E4
//(setHangGroundY__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangUpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHangUpInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FB328-800FB43C 0114+00 s=1 e=0 z=0  None .text      procHangUp__9daAlink_cFv */
//	800FB344: 800FA78C (changeHangEndProc__9daAlink_cFv)
//	800FB364: 80439A20 (sincosTable___5JMath)
//	800FB368: 80439A20 (sincosTable___5JMath)
//	800FB374: 80452D8C (lit_8783)
//	800FB3B0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FB3C0: 8038E1B8 (m__22daAlinkHIO_wallFall_c0)
//	800FB3C4: 8038E1B8 (m__22daAlinkHIO_wallFall_c0)
//	800FB3E4: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FB3E8: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FB3F0: 800FBBC8 (procHangClimbInit__9daAlink_cFf)
//	800FB3FC: 800FA338 (changeHangMoveProc__9daAlink_cFi)
//	800FB410: 800FB650 (procHangMoveInit__9daAlink_cFi)
//	800FB41C: 800FB43C (procHangWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangUp__9daAlink_cFv.s"
}
#pragma pop

/* 800FB43C-800FB544 0108+00 s=3 e=0 z=0  None .text      procHangWaitInit__9daAlink_cFv */
//	800FB454: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FB468: 800FA5C8 (checkHangFootWall__9daAlink_cFv)
//	800FB474: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FB478: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FB484: 80452CC0 (lit_6108)
//	800FB488: 80452CB0 (lit_6025)
//	800FB4A4: 80452D3C (lit_7808)
//	800FB4A8: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800FB4BC: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FB4C0: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FB4CC: 80452CC0 (lit_6108)
//	800FB4D0: 80452CB0 (lit_6025)
//	800FB4EC: 80452D3C (lit_7808)
//	800FB4F0: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800FB4F8: 800DFC28 (setBowHangAnime__9daAlink_cFv)
//	800FB504: 80452CC0 (lit_6108)
//	800FB510: 804061C0 (g_dComIfG_gameInfo)
//	800FB514: 804061C0 (g_dComIfG_gameInfo)
//	800FB528: 800FA6E4 (setHangGroundY__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FB544-800FB650 010C+00 s=1 e=0 z=0  None .text      procHangWait__9daAlink_cFv */
//	800FB554: 803621DC (_savegpr_29)
//	800FB55C: 800FA78C (changeHangEndProc__9daAlink_cFv)
//	800FB574: 800FE174 (setClimbShapeOffset__9daAlink_cFv)
//	800FB588: 800FA5C8 (checkHangFootWall__9daAlink_cFv)
//	800FB594: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FB598: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FB5A4: 80452CC0 (lit_6108)
//	800FB5A8: 80452CB0 (lit_6025)
//	800FB5C4: 80452D30 (lit_7625)
//	800FB5C8: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800FB5D0: 80452CA4 (lit_6021)
//	800FB5E0: 800F9FFC (getHangDirectionFromAngle__9daAlink_cFv)
//	800FB5F0: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FB5F4: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FB5FC: 800FBBC8 (procHangClimbInit__9daAlink_cFf)
//	800FB614: 800FA338 (changeHangMoveProc__9daAlink_cFi)
//	800FB62C: 800FB650 (procHangMoveInit__9daAlink_cFi)
//	800FB63C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangWait__9daAlink_cFv.s"
}
#pragma pop

/* 800FB650-800FB790 0140+00 s=3 e=0 z=0  None .text      procHangMoveInit__9daAlink_cFi */
//	800FB660: 803621DC (_savegpr_29)
//	800FB670: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FB684: 800FA5C8 (checkHangFootWall__9daAlink_cFv)
//	800FB69C: 80452CB8 (lit_6040)
//	800FB6B4: 80452CBC (lit_6041)
//	800FB6C8: 800FE034 (getClimbMoveSideAnmSpeed__9daAlink_cFv)
//	800FB6D4: 80452CC4 (lit_6109)
//	800FB6D8: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FB700: 800F9FDC (getHangMoveAnmSpeed__9daAlink_cFv)
//	800FB70C: 8038E1E0 (m__22daAlinkHIO_wallMove_c0)
//	800FB710: 8038E1E0 (m__22daAlinkHIO_wallMove_c0)
//	800FB718: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FB740: 804061C0 (g_dComIfG_gameInfo)
//	800FB744: 804061C0 (g_dComIfG_gameInfo)
//	800FB754: 80452CC0 (lit_6108)
//	800FB768: 800DFC28 (setBowHangAnime__9daAlink_cFv)
//	800FB770: 800FA6E4 (setHangGroundY__9daAlink_cFv)
//	800FB77C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangMoveInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHangMoveInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FB790-800FBBC8 0438+00 s=1 e=0 z=0  None .text      procHangMove__9daAlink_cFv */
//	800FB7A8: 803621DC (_savegpr_29)
//	800FB7B0: 800F9FFC (getHangDirectionFromAngle__9daAlink_cFv)
//	800FB7C4: 800FA78C (changeHangEndProc__9daAlink_cFv)
//	800FB7DC: 80452CA4 (lit_6021)
//	800FB7EC: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FB7F0: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FB7F8: 800FBBC8 (procHangClimbInit__9daAlink_cFf)
//	800FB808: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FB81C: 80452CA4 (lit_6021)
//	800FB838: 800FA338 (changeHangMoveProc__9daAlink_cFi)
//	800FB84C: 800FB650 (procHangMoveInit__9daAlink_cFi)
//	800FB858: 800FB43C (procHangWaitInit__9daAlink_cFv)
//	800FB870: 80452D88 (lit_8782)
//	800FB88C: 800FE034 (getClimbMoveSideAnmSpeed__9daAlink_cFv)
//	800FB898: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800FB8A4: 800F9FDC (getHangMoveAnmSpeed__9daAlink_cFv)
//	800FB8B0: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800FB8BC: 800FA338 (changeHangMoveProc__9daAlink_cFi)
//	800FB8D8: 800FA5C8 (checkHangFootWall__9daAlink_cFv)
//	800FB8EC: 80452CB0 (lit_6025)
//	800FB92C: 800F9FDC (getHangMoveAnmSpeed__9daAlink_cFv)
//	800FB938: 80452D30 (lit_7625)
//	800FB93C: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FB94C: 80452CB0 (lit_6025)
//	800FB97C: 80452CC0 (lit_6108)
//	800FB994: 80439A20 (sincosTable___5JMath)
//	800FB998: 80439A20 (sincosTable___5JMath)
//	800FB9BC: 80452C9C (lit_5944)
//	800FB9C8: 80452CE0 (lit_6845)
//	800FB9D8: 80452D3C (lit_7808)
//	800FBA00: 80452DB4 (lit_10040)
//	800FBA2C: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FBA38: 803A37C0 (__vt__8cM3dGPla)
//	800FBA3C: 803A37C0 (__vt__8cM3dGPla)
//	800FBA44: 804061C0 (g_dComIfG_gameInfo)
//	800FBA48: 804061C0 (g_dComIfG_gameInfo)
//	800FBA5C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800FBA64: 80267128 (atan2sX_Z__4cXyzCFv)
//	800FBAC0: 803650D0 (abs)
//	800FBAF0: 80452D2C (lit_7624)
//	800FBB04: 80452C9C (lit_5944)
//	800FBB28: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FBB34: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800FBB50: 80452D3C (lit_7808)
//	800FBB78: 803A37C0 (__vt__8cM3dGPla)
//	800FBB7C: 803A37C0 (__vt__8cM3dGPla)
//	800FBB8C: 800FB43C (procHangWaitInit__9daAlink_cFv)
//	800FBBA0: 800FE174 (setClimbShapeOffset__9daAlink_cFv)
//	800FBBB4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangMove__9daAlink_cFv.s"
}
#pragma pop

/* 800FBBC8-800FBCD4 010C+00 s=6 e=0 z=0  None .text      procHangClimbInit__9daAlink_cFf */
//	800FBC20: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FBC2C: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FBC30: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FBC44: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	800FBC4C: 8015EB90 (checkBowItem__9daPy_py_cFi)
//	800FBC60: 804061C0 (g_dComIfG_gameInfo)
//	800FBC64: 804061C0 (g_dComIfG_gameInfo)
//	800FBC74: 80452CC0 (lit_6108)
//	800FBCAC: 800FA6E4 (setHangGroundY__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangClimbInit(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHangClimbInit__9daAlink_cFf.s"
}
#pragma pop

/* 800FBCD4-800FBE04 0130+00 s=1 e=0 z=0  None .text      procHangClimb__9daAlink_cFv */
//	800FBCF0: 800FA6E4 (setHangGroundY__9daAlink_cFv)
//	800FBD08: 80452D00 (lit_6895)
//	800FBD1C: 80452CC0 (lit_6108)
//	800FBD20: 800C6F18 (procLandInit__9daAlink_cFf)
//	800FBD2C: 8015EB90 (checkBowItem__9daPy_py_cFi)
//	800FBD44: 80452D34 (lit_7710)
//	800FBD48: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800FBD7C: 80452D34 (lit_7710)
//	800FBD9C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FBDB0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800FBDBC: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FBDC0: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FBDE4: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangClimb() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangClimb__9daAlink_cFv.s"
}
#pragma pop

/* 800FBE04-800FC0D8 02D4+00 s=3 e=0 z=0  None .text      procHangWallCatchInit__9daAlink_cFv */
//	800FBE28: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800FBE48: 80452CC0 (lit_6108)
//	800FBE58: 80347138 (PSVECSquareMag)
//	800FBE5C: 80452CC0 (lit_6108)
//	800FBE6C: 80452CE8 (lit_6846)
//	800FBE74: 80452CF0 (lit_6847)
//	800FBEBC: 80452CF8 (lit_6848)
//	800FBEC8: 80450AE0 (__float_nan)
//	800FBECC: 80450AE0 (__float_nan)
//	800FBF38: 80450AE0 (__float_nan)
//	800FBF3C: 80450AE0 (__float_nan)
//	800FBF40: 80452D78 (lit_8676)
//	800FBF5C: 80439A20 (sincosTable___5JMath)
//	800FBF60: 80439A20 (sincosTable___5JMath)
//	800FBF78: 80452D2C (lit_7624)
//	800FBF84: 80452D30 (lit_7625)
//	800FBFB4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FBFB8: 804061C0 (g_dComIfG_gameInfo)
//	800FBFBC: 804061C0 (g_dComIfG_gameInfo)
//	800FBFCC: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800FBFE8: 80450690 (l_autoUpHeight)
//	800FC004: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	800FC014: 800FAA7C (procHangStartInit__9daAlink_cFv)
//	800FC024: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FC030: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FC034: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FC03C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800FC044:
//800DFC28 (setBowHangAnime__9daAlink_cFv) 	800FC078: 80452CC0 (lit_6108) 	800FC084: 804061C0
//(g_dComIfG_gameInfo) 	800FC088: 804061C0 (g_dComIfG_gameInfo) 	800FC0B8: 800FA6E4
//(setHangGroundY__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangWallCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangWallCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FC0D8-800FC178 00A0+00 s=1 e=0 z=0  None .text      procHangWallCatch__9daAlink_cFv */
//	800FC0EC: 800FA6E4 (setHangGroundY__9daAlink_cFv)
//	800FC0F8: 80452D00 (lit_6895)
//	800FC10C: 80452CC0 (lit_6108)
//	800FC110: 800C6F18 (procLandInit__9daAlink_cFf)
//	800FC11C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FC12C: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FC130: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FC138: 800FBBC8 (procHangClimbInit__9daAlink_cFf)
//	800FC14C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FC150: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FC158: 800C6A48 (procFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangWallCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangWallCatch__9daAlink_cFv.s"
}
#pragma pop

/* 800FC178-800FC240 00C8+00 s=4 e=0 z=0  None .text      procHangReadyInit__9daAlink_cFv */
//	800FC1AC: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800FC1C4: 800B02BC (setFrontWallType__9daAlink_cFv)
//	800FC1D8: 800B58EC (checkWaitAction__9daAlink_cFv)
//	800FC1E8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FC1F4: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FC1F8: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FC200: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800FC21C:
//80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FC240-800FC2F4 00B4+00 s=1 e=0 z=0  None .text      procHangReady__9daAlink_cFv */
//	800FC268: 80270540 (cLib_addCalcAngleS__FPsssss)
//	800FC278: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FC2A8: 800FF450 (procClimbUpStartInit__9daAlink_cFi)
//	800FC2BC: 800FAA7C (procHangStartInit__9daAlink_cFv)
//	800FC2C8: 800FBE04 (procHangWallCatchInit__9daAlink_cFv)
//	800FC2D8: 800C33B8 (procWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangReady__9daAlink_cFv.s"
}
#pragma pop

/* 800FC2F4-800FC390 009C+00 s=2 e=0 z=0  None .text      procHangLeverDownInit__9daAlink_cFv */
//	800FC31C: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800FC328: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FC334: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800FC340: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FC344: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FC34C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800FC36C:
//80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangLeverDownInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangLeverDownInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FC390-800FC568 01D8+00 s=1 e=0 z=0  None .text      procHangLeverDown__9daAlink_cFv */
//	800FC3A0: 803621DC (_savegpr_29)
//	800FC3B8: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800FC3D4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FC3F0: 80439A20 (sincosTable___5JMath)
//	800FC3F4: 80439A20 (sincosTable___5JMath)
//	800FC40C: 80452D8C (lit_8783)
//	800FC45C: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FC460: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FC464: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800FC4AC:
//80270540 (cLib_addCalcAngleS__FPsssss) 	800FC4C8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//800FC4DC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM) 	800FC4F8:
// 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv) 	800FC50C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//800FC518: 80452F54 (lit_24322) 	800FC534: 80452F58 (lit_24323) 	800FC554: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangLeverDown() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangLeverDown__9daAlink_cFv.s"
}
#pragma pop

/* 800FC568-800FC5A4 003C+00 s=1 e=0 z=0  None .text changeDragonActor__9daAlink_cFP10fopAc_ac_c
 */
//	800FC590: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeDragonActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeDragonActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800FC5A4-800FC6B4 0110+00 s=1 e=0 z=0  None .text      setDragonHangPos__9daAlink_cFv */
//	800FC5EC: 803DD470 (now__14mDoMtx_stack_c)
//	800FC5F0: 803DD470 (now__14mDoMtx_stack_c)
//	800FC5F4: 803464B0 (PSMTXCopy)
//	800FC610: 803DD470 (now__14mDoMtx_stack_c)
//	800FC614: 803DD470 (now__14mDoMtx_stack_c)
//	800FC618: 803464B0 (PSMTXCopy)
//	800FC61C: 803DD470 (now__14mDoMtx_stack_c)
//	800FC620: 803DD470 (now__14mDoMtx_stack_c)
//	800FC640: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	800FC644: 803DD470 (now__14mDoMtx_stack_c)
//	800FC648: 803DD470 (now__14mDoMtx_stack_c)
//	800FC64C: 80430D24 (BaseY__4cXyz)
//	800FC650: 80430D24 (BaseY__4cXyz)
//	800FC658: 80346E4C (PSMTXMultVecSR)
//	800FC660: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDragonHangPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setDragonHangPos__9daAlink_cFv.s"
}
#pragma pop

/* 800FC6B4-800FC748 0094+00 s=1 e=0 z=0  None .text      setOctaIealHangPos__9daAlink_cFv */
//	800FC6EC: 803DD470 (now__14mDoMtx_stack_c)
//	800FC6F0: 803DD470 (now__14mDoMtx_stack_c)
//	800FC6F4: 803464B0 (PSMTXCopy)
//	800FC6F8: 80452CC0 (lit_6108)
//	800FC6FC: 80452F5C (lit_24400)
//	800FC700: 80452F60 (lit_24401)
//	800FC704: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	800FC708: 803DD470 (now__14mDoMtx_stack_c)
//	800FC70C: 803DD470 (now__14mDoMtx_stack_c)
//	800FC72C: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setOctaIealHangPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setOctaIealHangPos__9daAlink_cFv.s"
}
#pragma pop

/* 800FC748-800FC77C 0034+00 s=2 e=0 z=0  None .text      setBossBodyHangPos__9daAlink_cFv */
//	800FC760: 800FC5A4 (setDragonHangPos__9daAlink_cFv)
//	800FC768: 800FC6B4 (setOctaIealHangPos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBossBodyHangPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setBossBodyHangPos__9daAlink_cFv.s"
}
#pragma pop

/* 800FC77C-800FC870 00F4+00 s=1 e=0 z=0  None .text
 * procBossBodyHangInit__9daAlink_cFP10fopAc_ac_c               */
//	800FC79C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FC7BC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800FC7C4: 800B48D0 (setJumpMode__9daAlink_cFv)
//	800FC7DC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800FC7F4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800FC7F8: 80452CC0 (lit_6108)
//	800FC80C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800FC810: 80452CC0 (lit_6108)
//	800FC83C: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	800FC844: 800FC748 (setBossBodyHangPos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBossBodyHangInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBossBodyHangInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800FC870-800FCF58 06E8+00 s=1 e=0 z=0  None .text      procBossBodyHang__9daAlink_cFv */
//	800FC888: 803621D8 (_savegpr_28)
//	800FC8A0: 800B48D0 (setJumpMode__9daAlink_cFv)
//	800FC8B4: 800FC748 (setBossBodyHangPos__9daAlink_cFv)
//	800FC8E0: 800C57A4 (procBackJumpInit__9daAlink_cFi)
//	800FC90C: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	800FC914: 80452CC0 (lit_6108)
//	800FC934: 801058A0 (procOctaIealSpitInit__9daAlink_cFv)
//	800FC95C: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	800FC968: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FC9B0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800FC9C0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800FC9F8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800FCA08: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800FCA50: 804061C0 (g_dComIfG_gameInfo)
//	800FCA54: 804061C0 (g_dComIfG_gameInfo)
//	800FCA74: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
//	800FCA90: 800D1268 (setSwordModel__9daAlink_cFv)
//	800FCAC0: 80452CC4 (lit_6109)
//	800FCAC4: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800FCAD4: 80452CC4 (lit_6109)
//	800FCAD8: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	800FCAEC: 80452D5C (lit_8322)
//	800FCAF4: 80452F64 (lit_24589)
//	800FCB04: 800D152C (setCutType__9daAlink_cFUc)
//	800FCB1C: 800D152C (setCutType__9daAlink_cFUc)
//	800FCB4C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800FCB5C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	800FCB68: 80452D5C (lit_8322)
//	800FCB70: 80452D1C (lit_7448)
//	800FCBA0: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800FCBA4: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	800FCBAC: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800FCBBC:
//8038DE8C (m__17daAlinkHIO_cut_c0) 	800FCBC0: 8038DE8C (m__17daAlinkHIO_cut_c0) 	800FCBC8:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 800FCBD4:
//8038DE8C
//(m__17daAlinkHIO_cut_c0) 	800FCBD8: 8038DE8C (m__17daAlinkHIO_cut_c0) 	800FCBE4: 80452D30
//(lit_7625) 	800FCBFC: 80452CB8 (lit_6040) 	800FCC30: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FCC78: 8032842C (checkPass__12J3DFrameCtrlFf)
//	800FCC90: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800FCCB0: 80452CC0 (lit_6108)
//	800FCCC0: 80347138 (PSVECSquareMag)
//	800FCCC4: 80452CC0 (lit_6108)
//	800FCCD4: 80452CE8 (lit_6846)
//	800FCCDC: 80452CF0 (lit_6847)
//	800FCD24: 80452CF8 (lit_6848)
//	800FCD30: 80450AE0 (__float_nan)
//	800FCD34: 80450AE0 (__float_nan)
//	800FCDA0: 80450AE0 (__float_nan)
//	800FCDA4: 80450AE0 (__float_nan)
//	800FCDC0: 80267674 (cM_atan2s__Fff)
//	800FCDD0: 80267674 (cM_atan2s__Fff)
//	800FCDE4: 802673F4 (__ct__5csXyzFsss)
//	800FCDF4: 804061C0 (g_dComIfG_gameInfo)
//	800FCDF8: 804061C0 (g_dComIfG_gameInfo)
//	800FCE1C: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	800FCE34: 80452F68 (lit_24590)
//	800FCE50: 80452F6C (lit_24591)
//	800FCE6C: 80452CC4 (lit_6109)
//	800FCE94: 80452F70 (lit_24592)
//	800FCEB0: 80452F74 (lit_24593)
//	800FCECC: 80452E28 (lit_14621)
//	800FCEE8: 80452F78 (lit_24594)
//	800FCF04: 80452F7C (lit_24595)
//	800FCF44: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBossBodyHang() {
    nofralloc
#include "asm/d/a/d_a_alink/procBossBodyHang__9daAlink_cFv.s"
}
#pragma pop

/* 800FCF58-800FCF84 002C+00 s=2 e=0 z=0  None .text      getLadderUnitCount__9daAlink_cCFv */
//	800FCF5C: 80452F80 (lit_24600)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getLadderUnitCount() const {
    nofralloc
#include "asm/d/a/d_a_alink/getLadderUnitCount__9daAlink_cCFv.s"
}
#pragma pop

/* 800FCF84-800FD048 00C4+00 s=1 e=0 z=0  None .text      setLadderInit__9daAlink_cFv */
//	800FCFB0: 800FCF58 (getLadderUnitCount__9daAlink_cCFv)
//	800FCFC0: 800FD1F0 (setLadderPos__9daAlink_cFi)
//	800FCFC4: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	800FCFC8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	800FCFCC: 80452F84 (lit_24618)
//	800FD008: 800FDD90 (procLadderMoveInit__9daAlink_cFiiP4cXyz)
//	800FD00C: 80450698 (l_ladderAnmBaseTransY)
//	800FD018: 80452D3C (lit_7808)
//	800FD024: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	800FD030: 800FD648 (procLadderUpStartInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLadderInit() {
    nofralloc
#include "asm/d/a/d_a_alink/setLadderInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FD048-800FD1F0 01A8+00 s=1 e=0 z=0  None .text      setLadderPosInit__9daAlink_cFv */
//	800FD05C: 804061C0 (g_dComIfG_gameInfo)
//	800FD060: 804061C0 (g_dComIfG_gameInfo)
//	800FD078: 800747F0 (GetTriPnt__4cBgSCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz)
//	800FD084: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	800FD09C: 80452CB8 (lit_6040)
//	800FD0A8: 80452C98 (lit_5943)
//	800FD0EC: 80452C98 (lit_5943)
//	800FD120: 80452C98 (lit_5943)
//	800FD164: 80452C98 (lit_5943)
//	800FD180: 80452C98 (lit_5943)
//	800FD1C4: 80452C98 (lit_5943)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLadderPosInit() {
    nofralloc
#include "asm/d/a/d_a_alink/setLadderPosInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FD1F0-800FD288 0098+00 s=2 e=0 z=0  None .text      setLadderPos__9daAlink_cFi */
//	800FD1FC: 80439A20 (sincosTable___5JMath)
//	800FD200: 80439A20 (sincosTable___5JMath)
//	800FD228: 80452D94 (lit_8785)
//	800FD238: 80452F84 (lit_24618)
//	800FD23C: 80452CB0 (lit_6025)
//	800FD260: 80452F88 (lit_24680)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLadderPos(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setLadderPos__9daAlink_cFi.s"
}
#pragma pop

/* 800FD288-800FD2AC 0024+00 s=2 e=0 z=0  None .text      getLadderMoveAnmSpeed__9daAlink_cFv */
//	800FD288: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FD28C: 8038EB8C (m__20daAlinkHIO_ladder_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getLadderMoveAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getLadderMoveAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800FD2AC-800FD4A8 01FC+00 s=3 e=0 z=0  None .text      changeLadderMoveProc__9daAlink_cFi */
//	800FD2BC: 803621D8 (_savegpr_28)
//	800FD2D0: 80452C98 (lit_5943)
//	800FD2D8: 80452CA4 (lit_6021)
//	800FD2DC: 8026F97C (cLib_addCalc__FPfffff)
//	800FD2E8: 80452C98 (lit_5943)
//	800FD2F0: 80452CA4 (lit_6021)
//	800FD2F4: 8026F97C (cLib_addCalc__FPfffff)
//	800FD300: 80452C98 (lit_5943)
//	800FD308: 80452CA4 (lit_6021)
//	800FD30C: 8026F97C (cLib_addCalc__FPfffff)
//	800FD314: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	800FD32C: 80452CA4 (lit_6021)
//	800FD348: 803650D0 (abs)
//	800FD380: 80452F84 (lit_24618)
//	800FD3A4: 80452F84 (lit_24618)
//	800FD3AC: 80452E64 (lit_14954)
//	800FD3C4: 80439A20 (sincosTable___5JMath)
//	800FD3C8: 80439A20 (sincosTable___5JMath)
//	800FD3D4: 80452D00 (lit_6895)
//	800FD410: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FD42C: 800FD824 (procLadderUpEndInit__9daAlink_cFi)
//	800FD43C: 800FDC18 (procLadderDownEndInit__9daAlink_cFi)
//	800FD444: 804061C0 (g_dComIfG_gameInfo)
//	800FD448: 804061C0 (g_dComIfG_gameInfo)
//	800FD454: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800FD470: 800FDC18 (procLadderDownEndInit__9daAlink_cFi)
//	800FD488: 800FDD90 (procLadderMoveInit__9daAlink_cFiiP4cXyz)
//	800FD494: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeLadderMoveProc(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeLadderMoveProc__9daAlink_cFi.s"
}
#pragma pop

/* 800FD4A8-800FD5E4 013C+00 s=5 e=0 z=0  None .text      setMoveBGLadderCorrect__9daAlink_cFv */
//	800FD4C0: 804061C0 (g_dComIfG_gameInfo)
//	800FD4C4: 804061C0 (g_dComIfG_gameInfo)
//	800FD4D4: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800FD4E8: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	800FD50C: 80075880 (MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	800FD528: 80075880 (MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	800FD52C: 80439A20 (sincosTable___5JMath)
//	800FD530: 80439A20 (sincosTable___5JMath)
//	800FD548: 80452D00 (lit_6895)
//	800FD580: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FD594: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800FD5A8: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FD5AC: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FD5B4: 800C6A48 (procFallInit__9daAlink_cFif)
//	800FD5C4: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMoveBGLadderCorrect() {
    nofralloc
#include "asm/d/a/d_a_alink/setMoveBGLadderCorrect__9daAlink_cFv.s"
}
#pragma pop

/* 800FD5E4-800FD648 0064+00 s=8 e=0 z=0  None .text      checkLadderFall__9daAlink_cFv */
//	800FD5FC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	800FD61C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FD620: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FD628: 800C6A48 (procFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLadderFall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLadderFall__9daAlink_cFv.s"
}
#pragma pop

/* 800FD648-800FD7B0 0168+00 s=2 e=0 z=0  None .text      procLadderUpStartInit__9daAlink_cFv */
//	800FD670: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800FD67C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FD684: 80452CC0 (lit_6108)
//	800FD690: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800FD694: 80452CC0 (lit_6108)
//	800FD6AC: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FD6B0: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FD6BC: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FD6C8: 80425514 (l_waitBaseAnime)
//	800FD6CC: 80425514 (l_waitBaseAnime)
//	800FD6E4: 804061C0 (g_dComIfG_gameInfo)
//	800FD6E8: 804061C0 (g_dComIfG_gameInfo)
//	800FD700: 80439A20 (sincosTable___5JMath)
//	800FD704: 80439A20 (sincosTable___5JMath)
//	800FD718: 80452DD4 (lit_11442)
//	800FD75C: 80452D94 (lit_8785)
//	800FD76C: 80452E28 (lit_14621)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderUpStartInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderUpStartInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FD7B0-800FD824 0074+00 s=1 e=0 z=0  None .text      procLadderUpStart__9daAlink_cFv */
//	800FD7C4: 800FD4A8 (setMoveBGLadderCorrect__9daAlink_cFv)
//	800FD7E4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FD7F4: 800FD5E4 (checkLadderFall__9daAlink_cFv)
//	800FD808: 800FD2AC (changeLadderMoveProc__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderUpStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderUpStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FD824-800FD8E8 00C4+00 s=2 e=0 z=0  None .text      procLadderUpEndInit__9daAlink_cFi */
//	800FD844: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FD85C: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FD860: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FD86C: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FD87C: 80452CC0 (lit_6108)
//	800FD888: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800FD88C: 80452CC0 (lit_6108)
//	800FD8A4: 80452CBC (lit_6041)
//	800FD8B8: 804061C0 (g_dComIfG_gameInfo)
//	800FD8BC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderUpEndInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderUpEndInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FD8E8-800FD9CC 00E4+00 s=1 e=0 z=0  None .text      procLadderUpEnd__9daAlink_cFv */
//	800FD904: 800FD4A8 (setMoveBGLadderCorrect__9daAlink_cFv)
//	800FD91C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FD930: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800FD93C: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FD940: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FD958: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800FD968: 80452E74 (lit_15341)
//	800FD988: 80452EB4 (lit_17382)
//	800FD9A0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderUpEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderUpEnd__9daAlink_cFv.s"
}
#pragma pop

/* 800FD9CC-800FDB74 01A8+00 s=2 e=0 z=0  None .text      procLadderDownStartInit__9daAlink_cFv */
//	800FDA00: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	800FDA0C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FDA14: 80452CC0 (lit_6108)
//	800FDA20: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800FDA24: 80452CC0 (lit_6108)
//	800FDA54: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FDA58: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FDA64: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FDA70: 80425514 (l_waitBaseAnime)
//	800FDA74: 80425514 (l_waitBaseAnime)
//	800FDA8C: 804061C0 (g_dComIfG_gameInfo)
//	800FDA90: 804061C0 (g_dComIfG_gameInfo)
//	800FDAB0: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	800FDAD4: 80439A20 (sincosTable___5JMath)
//	800FDAD8: 80439A20 (sincosTable___5JMath)
//	800FDAEC: 80452DD4 (lit_11442)
//	800FDB18: 80452D98 (lit_8786)
//	800FDB28: 80452E28 (lit_14621)
//	800FDB30: 80452F8C (lit_24852)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderDownStartInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderDownStartInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FDB74-800FDC18 00A4+00 s=1 e=0 z=0  None .text      procLadderDownStart__9daAlink_cFv */
//	800FDB8C: 800FD4A8 (setMoveBGLadderCorrect__9daAlink_cFv)
//	800FDBB0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FDBC0: 800FD5E4 (checkLadderFall__9daAlink_cFv)
//	800FDBD4: 800FD2AC (changeLadderMoveProc__9daAlink_cFi)
//	800FDBE0: 80452DC8 (lit_10286)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderDownStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderDownStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FDC18-800FDCCC 00B4+00 s=1 e=0 z=0  None .text      procLadderDownEndInit__9daAlink_cFi */
//	800FDC38: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FDC50: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FDC54: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FDC60: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FDC70: 80452CC0 (lit_6108)
//	800FDC7C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800FDC88: 80452CB8 (lit_6040)
//	800FDC9C: 804061C0 (g_dComIfG_gameInfo)
//	800FDCA0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderDownEndInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderDownEndInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FDCCC-800FDD90 00C4+00 s=1 e=0 z=0  None .text      procLadderDownEnd__9daAlink_cFv */
//	800FDCE4: 800FD4A8 (setMoveBGLadderCorrect__9daAlink_cFv)
//	800FDD00: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FDD14: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800FDD20: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FDD24: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FDD3C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	800FDD4C: 80452EB4 (lit_17382)
//	800FDD64: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderDownEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderDownEnd__9daAlink_cFv.s"
}
#pragma pop

/* 800FDD90-800FDF50 01C0+00 s=3 e=0 z=0  None .text      procLadderMoveInit__9daAlink_cFiiP4cXyz */
//	800FDDA8: 803621D4 (_savegpr_27)
//	800FDDC4: 800FD288 (getLadderMoveAnmSpeed__9daAlink_cFv)
//	800FDDD4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FDDE8: 80452F84 (lit_24618)
//	800FDDFC: 80452CBC (lit_6041)
//	800FDE08: 80452F84 (lit_24618)
//	800FDE54: 80452CC0 (lit_6108)
//	800FDE7C: 80452CC0 (lit_6108)
//	800FDEA0: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FDEA4: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FDEAC: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FDEC4: 80452CBC (lit_6041)
//	800FDED8: 80452CB8 (lit_6040)
//	800FDEEC: 80452CC0 (lit_6108)
//	800FDEF8: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800FDEFC: 80452CC0 (lit_6108)
//	800FDF18: 804061C0 (g_dComIfG_gameInfo)
//	800FDF1C: 804061C0 (g_dComIfG_gameInfo)
//	800FDF3C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderMoveInit(int param_0, int param_1, cXyz* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderMoveInit__9daAlink_cFiiP4cXyz.s"
}
#pragma pop

/* 800FDF50-800FE010 00C0+00 s=1 e=0 z=0  None .text      procLadderMove__9daAlink_cFv */
//	800FDF68: 800FD4A8 (setMoveBGLadderCorrect__9daAlink_cFv)
//	800FDF8C: 800FD5E4 (checkLadderFall__9daAlink_cFv)
//	800FDF9C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FDFB0: 800FD2AC (changeLadderMoveProc__9daAlink_cFi)
//	800FDFB8: 80452CC0 (lit_6108)
//	800FDFCC: 800FD288 (getLadderMoveAnmSpeed__9daAlink_cFv)
//	800FDFD4: 80452CC0 (lit_6108)
//	800FDFE0: 80452CBC (lit_6041)
//	800FDFF0: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderMove__9daAlink_cFv.s"
}
#pragma pop

/* 800FE010-800FE034 0024+00 s=3 e=0 z=0  None .text      getClimbMoveUpDownAnmSpeed__9daAlink_cFv
 */
//	800FE010: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FE014: 8038EB8C (m__20daAlinkHIO_ladder_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getClimbMoveUpDownAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getClimbMoveUpDownAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800FE034-800FE058 0024+00 s=4 e=0 z=0  None .text      getClimbMoveSideAnmSpeed__9daAlink_cFv */
//	800FE034: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FE038: 8038EB8C (m__20daAlinkHIO_ladder_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getClimbMoveSideAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getClimbMoveSideAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800FE058-800FE114 00BC+00 s=9 e=0 z=0  None .text checkClimbCode__9daAlink_cFR13cBgS_PolyInfo
 */
//	800FE068: 803621D0 (_savegpr_26)
//	800FE070: 804061C0 (g_dComIfG_gameInfo)
//	800FE074: 804061C0 (g_dComIfG_gameInfo)
//	800FE080: 80074628 (GetBgWBasePointer__4cBgSCFRC13cBgS_PolyInfo)
//	800FE09C: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	800FE0AC: 80075E5C (dBgS_GetNY__FRC13cBgS_PolyInfo)
//	800FE0B8: 80452CA4 (lit_6021)
//	800FE100: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbCode(cBgS_PolyInfo& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbCode__9daAlink_cFR13cBgS_PolyInfo.s"
}
#pragma pop

/* 800FE114-800FE174 0060+00 s=1 e=0 z=0  None .text      setClimbInit__9daAlink_cFv */
//	800FE14C: 80452F50 (lit_23595)
//	800FE158: 800FF28C (setClimbStartNotGround__9daAlink_cFv)
//	800FE160: 800FC178 (procHangReadyInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setClimbInit() {
    nofralloc
#include "asm/d/a/d_a_alink/setClimbInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FE174-800FE3C4 0250+00 s=8 e=0 z=0  None .text      setClimbShapeOffset__9daAlink_cFv */
//	800FE1A4: 80439A20 (sincosTable___5JMath)
//	800FE1A8: 80439A20 (sincosTable___5JMath)
//	800FE1D8: 80452C98 (lit_5943)
//	800FE1F4: 80452D30 (lit_7625)
//	800FE204: 80452CE0 (lit_6845)
//	800FE22C: 80452F1C (lit_20991)
//	800FE24C: 80452D78 (lit_8676)
//	800FE254: 80452F90 (lit_25059)
//	800FE288: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FE2A8: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	800FE2E4: 80452D14 (lit_7307)
//	800FE328: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FE348: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	800FE36C: 803470B4 (PSVECSubtract)
//	800FE374: 80267128 (atan2sX_Z__4cXyzCFv)
//	800FE398: 80270540 (cLib_addCalcAngleS__FPsssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setClimbShapeOffset() {
    nofralloc
#include "asm/d/a/d_a_alink/setClimbShapeOffset__9daAlink_cFv.s"
}
#pragma pop

/* 800FE3C4-800FE438 0074+00 s=1 e=0 z=0  None .text      getClimbDirectionFromAngle__9daAlink_cFv
 */
//	800FE3E8: 803650D0 (abs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getClimbDirectionFromAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/getClimbDirectionFromAngle__9daAlink_cFv.s"
}
#pragma pop

/* 800FE438-800FE5A0 0168+00 s=3 e=0 z=0  None .text      changeClimbMoveProc__9daAlink_cFi */
//	800FE448: 803621D8 (_savegpr_28)
//	800FE45C: 80452CA4 (lit_6021)
//	800FE468: 800FE3C4 (getClimbDirectionFromAngle__9daAlink_cFv)
//	800FE484: 80439A20 (sincosTable___5JMath)
//	800FE488: 80439A20 (sincosTable___5JMath)
//	800FE4A0: 80452E64 (lit_14954)
//	800FE4E0: 804061C0 (g_dComIfG_gameInfo)
//	800FE4E4: 804061C0 (g_dComIfG_gameInfo)
//	800FE4F4: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	800FE504: 80452F94 (lit_25113)
//	800FE520: 80074D5C (GetMonkeyBarsCode__4dBgSFRC13cBgS_PolyInfo)
//	800FE530: 801003E4 (procClimbToRoofInit__9daAlink_cFv)
//	800FE540: 800FE5A0 (checkClimbMoveUpDownProc__9daAlink_cFi)
//	800FE554: 800FFAB0 (procClimbMoveUpDownInit__9daAlink_cFi)
//	800FE560: 800FE6E8 (checkClimbMoveSideProc__9daAlink_cFi)
//	800FE570: 800FFDB0 (procClimbMoveSideInit__9daAlink_cFv)
//	800FE580: 801000F8 (procClimbWaitInit__9daAlink_cFii)
//	800FE58C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeClimbMoveProc(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeClimbMoveProc__9daAlink_cFi.s"
}
#pragma pop

/* 800FE5A0-800FE6E8 0148+00 s=2 e=0 z=0  None .text      checkClimbMoveUpDownProc__9daAlink_cFi */
//	800FE5C0: 80439A20 (sincosTable___5JMath)
//	800FE5C4: 80439A20 (sincosTable___5JMath)
//	800FE5E8: 80452CE0 (lit_6845)
//	800FE5F4: 80452D3C (lit_7808)
//	800FE624: 80452DB0 (lit_10039)
//	800FE64C: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FE65C: 80075D0C (dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo)
//	800FE67C: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	800FE690: 800FEC70 (checkClimbRoof__9daAlink_cFf)
//	800FE6B0: 800FED50 (checkClimbGround__9daAlink_cFP4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbMoveUpDownProc(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbMoveUpDownProc__9daAlink_cFi.s"
}
#pragma pop

/* 800FE6E8-800FE868 0180+00 s=2 e=0 z=0  None .text      checkClimbMoveSideProc__9daAlink_cFi */
//	800FE70C: 80439A20 (sincosTable___5JMath)
//	800FE710: 80439A20 (sincosTable___5JMath)
//	800FE724: 80452CE0 (lit_6845)
//	800FE734: 80452C98 (lit_5943)
//	800FE764: 80452DD4 (lit_11442)
//	800FE784: 80452DD4 (lit_11442)
//	800FE7A4: 80452EC4 (lit_18176)
//	800FE7D8: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FE7EC: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	800FE820: 800FEEC0 (checkBgClimbMove__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbMoveSideProc(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbMoveSideProc__9daAlink_cFi.s"
}
#pragma pop

/* 800FE868-800FEB90 0328+00 s=6 e=0 z=0  None .text      setMoveBGClimbCorrect__9daAlink_cFv */
//	800FE880: 804061C0 (g_dComIfG_gameInfo)
//	800FE884: 804061C0 (g_dComIfG_gameInfo)
//	800FE894: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	800FE8A8: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	800FE8CC: 80075880 (MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	800FE8E0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FE908: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FE90C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FE914: 800C6A48 (procFallInit__9daAlink_cFif)
//	800FE924: 80439A20 (sincosTable___5JMath)
//	800FE928: 80439A20 (sincosTable___5JMath)
//	800FE93C: 80452CE0 (lit_6845)
//	800FE94C: 80452C98 (lit_5943)
//	800FE974: 80452D68 (lit_8472)
//	800FE9A8: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FE9BC: 80452ED0 (lit_18847)
//	800FE9E0: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FE9F4: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	800FEA0C: 801000F8 (procClimbWaitInit__9daAlink_cFii)
//	800FEA18: 80452C98 (lit_5943)
//	800FEA3C: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FEA50: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	800FEA78: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800FEA80: 80452E64 (lit_14954)
//	800FEA98: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FEA9C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FEAA4: 800C6A48 (procFallInit__9daAlink_cFif)
//	800FEAAC: 803A37C0 (__vt__8cM3dGPla)
//	800FEAB0: 803A37C0 (__vt__8cM3dGPla)
//	800FEAC4: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800FEACC: 80267128 (atan2sX_Z__4cXyzCFv)
//	800FEAD8: 80270E24 (cLib_distanceAngleS__Fss)
//	800FEAEC: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FEAF0: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	800FEAF8: 800C6A48 (procFallInit__9daAlink_cFif)
//	800FEAFC: 803A37C0 (__vt__8cM3dGPla)
//	800FEB00: 803A37C0 (__vt__8cM3dGPla)
//	800FEB64: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	800FEB68: 803A37C0 (__vt__8cM3dGPla)
//	800FEB6C: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMoveBGClimbCorrect() {
    nofralloc
#include "asm/d/a/d_a_alink/setMoveBGClimbCorrect__9daAlink_cFv.s"
}
#pragma pop

/* 800FEB90-800FEC70 00E0+00 s=1 e=0 z=0  None .text
 * checkBgCorrectClimbMove__9daAlink_cFP4cXyzP4cXyz             */
//	800FEBAC: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FEBB8: 803A37C0 (__vt__8cM3dGPla)
//	800FEBBC: 803A37C0 (__vt__8cM3dGPla)
//	800FEBC4: 804061C0 (g_dComIfG_gameInfo)
//	800FEBC8: 804061C0 (g_dComIfG_gameInfo)
//	800FEBD8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	800FEBE0: 80267128 (atan2sX_Z__4cXyzCFv)
//	800FEBE8: 80270E24 (cLib_distanceAngleS__Fss)
//	800FEC08: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	800FEC20: 80266B34 (__mi__4cXyzCFRC3Vec)
//	800FEC30: 80347090 (PSVECAdd)
//	800FEC34: 803A37C0 (__vt__8cM3dGPla)
//	800FEC38: 803A37C0 (__vt__8cM3dGPla)
//	800FEC48: 803A37C0 (__vt__8cM3dGPla)
//	800FEC4C: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBgCorrectClimbMove(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBgCorrectClimbMove__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800FEC70-800FED50 00E0+00 s=2 e=0 z=0  None .text      checkClimbRoof__9daAlink_cFf */
//	800FEC94: 80439A20 (sincosTable___5JMath)
//	800FEC98: 80439A20 (sincosTable___5JMath)
//	800FECB0: 80452CE0 (lit_6845)
//	800FECE8: 804061C0 (g_dComIfG_gameInfo)
//	800FECEC: 804061C0 (g_dComIfG_gameInfo)
//	800FECFC: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	800FED00: 80452CE0 (lit_6845)
//	800FED18: 80074D5C (GetMonkeyBarsCode__4dBgSFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbRoof(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbRoof__9daAlink_cFf.s"
}
#pragma pop

/* 800FED50-800FEEC0 0170+00 s=2 e=0 z=0  None .text      checkClimbGround__9daAlink_cFP4cXyzf */
//	800FED88: 803621D8 (_savegpr_28)
//	800FEDA0: 80439A20 (sincosTable___5JMath)
//	800FEDA4: 80439A20 (sincosTable___5JMath)
//	800FEDB8: 80452F48 (lit_23416)
//	800FEDD4: 80452D00 (lit_6895)
//	800FEDE8: 804061C0 (g_dComIfG_gameInfo)
//	800FEDEC: 804061C0 (g_dComIfG_gameInfo)
//	800FEDF4: 80452D2C (lit_7624)
//	800FEE00: 80452DA4 (lit_9138)
//	800FEE0C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FEE18: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800FEE2C: 80075D7C (dBgS_CheckBGroundPoly__FRC13cBgS_PolyInfo)
//	800FEE38: 80452D00 (lit_6895)
//	800FEEAC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbGround(cXyz* param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbGround__9daAlink_cFP4cXyzf.s"
}
#pragma pop

/* 800FEEC0-800FF28C 03CC+00 s=5 e=0 z=0  None .text      checkBgClimbMove__9daAlink_cFi */
//	800FEF0C: 80439A20 (sincosTable___5JMath)
//	800FEF10: 80439A20 (sincosTable___5JMath)
//	800FEF20: 80452CE0 (lit_6845)
//	800FEF28: 80452E0C (lit_14614)
//	800FEF78: 800FEB90 (checkBgCorrectClimbMove__9daAlink_cFP4cXyzP4cXyz)
//	800FEFC8: 800FEB90 (checkBgCorrectClimbMove__9daAlink_cFP4cXyzP4cXyz)
//	800FF024: 800FEB90 (checkBgCorrectClimbMove__9daAlink_cFP4cXyzP4cXyz)
//	800FF074: 800FEB90 (checkBgCorrectClimbMove__9daAlink_cFP4cXyzP4cXyz)
//	800FF0DC: 804061C0 (g_dComIfG_gameInfo)
//	800FF0E0: 804061C0 (g_dComIfG_gameInfo)
//	800FF0F0: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	800FF150: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	800FF170: 80452D50 (lit_8247)
//	800FF1A4: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FF1B8: 800FEC70 (checkClimbRoof__9daAlink_cFf)
//	800FF1C8: 801003E4 (procClimbToRoofInit__9daAlink_cFv)
//	800FF1DC: 800FED50 (checkClimbGround__9daAlink_cFP4cXyzf)
//	800FF210: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FF214: 8038E164 (m__23daAlinkHIO_wallCatch_c0)
//	800FF21C: 800FBBC8 (procHangClimbInit__9daAlink_cFf)
//	800FF228: 80452CE0 (lit_6845)
//	800FF240: 801000F8 (procClimbWaitInit__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBgClimbMove(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBgClimbMove__9daAlink_cFi.s"
}
#pragma pop

/* 800FF28C-800FF450 01C4+00 s=2 e=0 z=0  None .text      setClimbStartNotGround__9daAlink_cFv */
//	800FF2D4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	800FF2D8: 804061C0 (g_dComIfG_gameInfo)
//	800FF2DC: 804061C0 (g_dComIfG_gameInfo)
//	800FF2E8: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	800FF308: 80452D3C (lit_7808)
//	800FF324: 80439A20 (sincosTable___5JMath)
//	800FF328: 80439A20 (sincosTable___5JMath)
//	800FF338: 80452D3C (lit_7808)
//	800FF344: 80452DB4 (lit_10040)
//	800FF350: 80452CE0 (lit_6845)
//	800FF37C: 80452D68 (lit_8472)
//	800FF39C: 80452CC0 (lit_6108)
//	800FF3A0: 80452E64 (lit_14954)
//	800FF3B4: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	800FF3C8: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	800FF408: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800FF41C: 800FF450 (procClimbUpStartInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setClimbStartNotGround() {
    nofralloc
#include "asm/d/a/d_a_alink/setClimbStartNotGround__9daAlink_cFv.s"
}
#pragma pop

/* 800FF450-800FF704 02B4+00 s=2 e=0 z=0  None .text      procClimbUpStartInit__9daAlink_cFi */
//	800FF460: 803621DC (_savegpr_29)
//	800FF46C: 800B02BC (setFrontWallType__9daAlink_cFv)
//	800FF494: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FF49C: 80452CC0 (lit_6108)
//	800FF4A8: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800FF4AC: 80452CC0 (lit_6108)
//	800FF4C8: 8026786C (cM_rnd__Fv)
//	800FF4CC: 80452EA8 (lit_16570)
//	800FF4E0: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FF4E4: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FF4E8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800FF4EC:
//8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF4F0: 8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF524:
//8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF528: 8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF530:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 800FF534:
//8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF538: 8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF568:
//804061C0 (g_dComIfG_gameInfo) 	800FF56C: 804061C0 (g_dComIfG_gameInfo) 	800FF588: 8038EB8C
//(m__20daAlinkHIO_ladder_c0) 	800FF58C: 8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF5AC: 80425514
//(l_waitBaseAnime) 	800FF5B0: 80425514 (l_waitBaseAnime) 	800FF5B8: 80450698
//(l_ladderAnmBaseTransY) 	800FF5DC: 80439A20 (sincosTable___5JMath) 	800FF5E0: 80439A20
//(sincosTable___5JMath) 	800FF658: 80266B84 (__ml__4cXyzCFf) 	800FF66C: 80452CB8 (lit_6040) 	800FF674:
//80266B84 (__ml__4cXyzCFf) 	800FF684: 80266AE4 (__pl__4cXyzCFRC3Vec) 	800FF6E4: 800FE174
//(setClimbShapeOffset__9daAlink_cFv) 	800FF6F0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbUpStartInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbUpStartInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FF704-800FF818 0114+00 s=1 e=0 z=0  None .text      procClimbUpStart__9daAlink_cFv */
//	800FF71C: 800FE868 (setMoveBGClimbCorrect__9daAlink_cFv)
//	800FF754: 80266B84 (__ml__4cXyzCFf)
//	800FF768: 80452CB8 (lit_6040)
//	800FF770: 80266B84 (__ml__4cXyzCFf)
//	800FF780: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	800FF7A8: 800FE174 (setClimbShapeOffset__9daAlink_cFv)
//	800FF7B0: 800FD5E4 (checkLadderFall__9daAlink_cFv)
//	800FF7C0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FF7D0: 80452CA4 (lit_6021)
//	800FF7F8: 801000F8 (procClimbWaitInit__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbUpStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbUpStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FF818-800FF9A8 0190+00 s=1 e=0 z=0  None .text      procClimbDownStartInit__9daAlink_cFs */
//	800FF844: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FF84C: 80452CC0 (lit_6108)
//	800FF858: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800FF85C: 80452CC0 (lit_6108)
//	800FF878: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	800FF87C: 8026786C (cM_rnd__Fv)
//	800FF880: 80452DA8 (lit_9652)
//	800FF894: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FF898: 8038EB8C (m__20daAlinkHIO_ladder_c0)
//	800FF89C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	800FF8A0:
//8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF8A4: 8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF8C4:
//8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF8C8: 8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF8D0:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 800FF8D4:
//8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF8D8: 8038EB8C (m__20daAlinkHIO_ladder_c0) 	800FF908:
//804061C0 (g_dComIfG_gameInfo) 	800FF90C: 804061C0 (g_dComIfG_gameInfo) 	800FF92C: 800ADB78
//(setOldRootQuaternion__9daAlink_cFsss) 	800FF948: 80452F98 (lit_25684) 	800FF954: 80425514
//(l_waitBaseAnime) 	800FF958: 80425514 (l_waitBaseAnime) 	800FF970: 80450698
//(l_ladderAnmBaseTransY)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbDownStartInit(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbDownStartInit__9daAlink_cFs.s"
}
#pragma pop

/* 800FF9A8-800FFAB0 0108+00 s=1 e=0 z=0  None .text      procClimbDownStart__9daAlink_cFv */
//	800FF9C0: 800FE868 (setMoveBGClimbCorrect__9daAlink_cFv)
//	800FFA04: 80452DF8 (lit_13700)
//	800FFA1C: 800FD5E4 (checkLadderFall__9daAlink_cFv)
//	800FFA38: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FFA48: 80452CA4 (lit_6021)
//	800FFA70: 801000F8 (procClimbWaitInit__9daAlink_cFii)
//	800FFA80: 800FEEC0 (checkBgClimbMove__9daAlink_cFi)
//	800FFA90: 800FE174 (setClimbShapeOffset__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbDownStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbDownStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FFAB0-800FFC58 01A8+00 s=1 e=0 z=0  None .text      procClimbMoveUpDownInit__9daAlink_cFi */
//	800FFAD0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FFB30: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800FFB44: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800FFB54: 800FE010 (getClimbMoveUpDownAnmSpeed__9daAlink_cFv)
//	800FFB60: 80452CBC (lit_6041)
//	800FFB64: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FFB74: 800FE010 (getClimbMoveUpDownAnmSpeed__9daAlink_cFv)
//	800FFB84: 80452CBC (lit_6041)
//	800FFB94: 80452CC4 (lit_6109)
//	800FFB98: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FFBB8: 80452CBC (lit_6041)
//	800FFBCC: 80452CB8 (lit_6040)
//	800FFBE0: 80452CC0 (lit_6108)
//	800FFBEC: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800FFBF0: 80452CC0 (lit_6108)
//	800FFC28: 804061C0 (g_dComIfG_gameInfo)
//	800FFC2C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbMoveUpDownInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbMoveUpDownInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FFC58-800FFDB0 0158+00 s=1 e=0 z=0  None .text      procClimbMoveUpDown__9daAlink_cFv */
//	800FFC70: 800FE868 (setMoveBGClimbCorrect__9daAlink_cFv)
//	800FFC94: 800FD5E4 (checkLadderFall__9daAlink_cFv)
//	800FFCA4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FFCC0: 800FE010 (getClimbMoveUpDownAnmSpeed__9daAlink_cFv)
//	800FFCD0: 80452CBC (lit_6041)
//	800FFCE0: 80452CBC (lit_6041)
//	800FFCE4: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FFD04: 800FE438 (changeClimbMoveProc__9daAlink_cFi)
//	800FFD14: 800FE5A0 (checkClimbMoveUpDownProc__9daAlink_cFi)
//	800FFD2C: 801000F8 (procClimbWaitInit__9daAlink_cFii)
//	800FFD40: 80452DA0 (lit_9054)
//	800FFD50: 800FE010 (getClimbMoveUpDownAnmSpeed__9daAlink_cFv)
//	800FFD58: 80452CC0 (lit_6108)
//	800FFD64: 80452CBC (lit_6041)
//	800FFD74: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	800FFD80: 800FEEC0 (checkBgClimbMove__9daAlink_cFi)
//	800FFD90: 800FE174 (setClimbShapeOffset__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbMoveUpDown() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbMoveUpDown__9daAlink_cFv.s"
}
#pragma pop

/* 800FFDB0-800FFF4C 019C+00 s=1 e=0 z=0  None .text      procClimbMoveSideInit__9daAlink_cFv */
//	800FFDD0: 800FE034 (getClimbMoveSideAnmSpeed__9daAlink_cFv)
//	800FFDE0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	800FFDF0: 80452CBC (lit_6041)
//	800FFE04: 80452CB8 (lit_6040)
//	800FFE38: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800FFE4C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	800FFE64: 80452CC4 (lit_6109)
//	800FFE68: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FFE88: 80452CC4 (lit_6109)
//	800FFE8C: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	800FFE94: 80452CC0 (lit_6108)
//	800FFEA0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	800FFEA4: 80452CC0 (lit_6108)
//	800FFEBC: 80452DAC (lit_9828)
//	800FFEC4: 80452CB0 (lit_6025)
//	800FFEE8: 80452DE0 (lit_11673)
//	800FFEF8: 804061C0 (g_dComIfG_gameInfo)
//	800FFEFC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbMoveSideInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbMoveSideInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FFF4C-801000F8 01AC+00 s=1 e=0 z=0  None .text      procClimbMoveSide__9daAlink_cFv */
//	800FFF70: 800FE868 (setMoveBGClimbCorrect__9daAlink_cFv)
//	800FFFA8: 80452DE0 (lit_11673)
//	800FFFC8: 800FD5E4 (checkLadderFall__9daAlink_cFv)
//	800FFFD8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	800FFFF4: 800FE438 (changeClimbMoveProc__9daAlink_cFi)
//	80100000: 800FE034 (getClimbMoveSideAnmSpeed__9daAlink_cFv)
//	8010000C: 80452CC4 (lit_6109)
//	80100010: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80100028: 800FE6E8 (checkClimbMoveSideProc__9daAlink_cFi)
//	80100038: 80452DE0 (lit_11673)
//	80100050: 801000F8 (procClimbWaitInit__9daAlink_cFii)
//	80100064: 80452DA0 (lit_9054)
//	80100074: 800FE034 (getClimbMoveSideAnmSpeed__9daAlink_cFv)
//	8010007C: 80452CC0 (lit_6108)
//	80100088: 80452CBC (lit_6041)
//	80100098: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	801000A4: 800FEEC0 (checkBgClimbMove__9daAlink_cFi)
//	801000C0: 80452D1C (lit_7448)
//	801000D0: 800FE174 (setClimbShapeOffset__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbMoveSide() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbMoveSide__9daAlink_cFv.s"
}
#pragma pop

/* 801000F8-80100258 0160+00 s=7 e=0 z=0  None .text      procClimbWaitInit__9daAlink_cFii */
//	80100108: 803621DC (_savegpr_29)
//	8010011C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80100140: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80100154: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80100168: 80452CC0 (lit_6108)
//	8010016C: 80452CC4 (lit_6109)
//	80100170: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80100180: 80452CC0 (lit_6108)
//	8010018C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	80100190: 80452CC0 (lit_6108)
//	801001D4: 80452CBC (lit_6041)
//	801001F0: 80452CB8 (lit_6040)
//	8010020C: 80452CBC (lit_6041)
//	80100220: 80452CB8 (lit_6040)
//	80100228: 804061C0 (g_dComIfG_gameInfo)
//	8010022C: 804061C0 (g_dComIfG_gameInfo)
//	80100244: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbWaitInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbWaitInit__9daAlink_cFii.s"
}
#pragma pop

/* 80100258-801003E4 018C+00 s=1 e=0 z=0  None .text      procClimbWait__9daAlink_cFv */
//	80100270: 800FE868 (setMoveBGClimbCorrect__9daAlink_cFv)
//	80100294: 800FD5E4 (checkLadderFall__9daAlink_cFv)
//	801002A4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801002B8: 800FE438 (changeClimbMoveProc__9daAlink_cFi)
//	801002F4: 8015F97C (daPy_addCalcShort__FPsssss)
//	8010030C: 8015F97C (daPy_addCalcShort__FPsssss)
//	80100310: 80452F9C (lit_25873)
//	80100318: 80452CB0 (lit_6025)
//	8010033C: 80452FA0 (lit_25874)
//	80100374: 80452D88 (lit_8782)
//	80100384: 800FE010 (getClimbMoveUpDownAnmSpeed__9daAlink_cFv)
//	8010038C: 80452CC0 (lit_6108)
//	80100398: 80452CBC (lit_6041)
//	801003A8: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	801003B4: 800FEEC0 (checkBgClimbMove__9daAlink_cFi)
//	801003C4: 800FE174 (setClimbShapeOffset__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbWait__9daAlink_cFv.s"
}
#pragma pop

/* 801003E4-80100464 0080+00 s=2 e=0 z=0  None .text      procClimbToRoofInit__9daAlink_cFv */
//	801003FC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80100408: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	80100410: 80452CC0 (lit_6108)
//	8010041C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	80100420: 80452CC0 (lit_6108)
//	80100438: 804061C0 (g_dComIfG_gameInfo)
//	8010043C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbToRoofInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbToRoofInit__9daAlink_cFv.s"
}
#pragma pop

/* 80100464-801005CC 0168+00 s=1 e=0 z=0  None .text      procClimbToRoof__9daAlink_cFv */
//	80100478: 800FE868 (setMoveBGClimbCorrect__9daAlink_cFv)
//	80100498: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801004D4: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	801004E4: 80452CBC (lit_6041)
//	801004F0: 80439A20 (sincosTable___5JMath)
//	801004F4: 80439A20 (sincosTable___5JMath)
//	8010050C: 80452D54 (lit_8248)
//	8010054C: 804061C0 (g_dComIfG_gameInfo)
//	80100550: 804061C0 (g_dComIfG_gameInfo)
//	8010055C: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	80100568: 80452F94 (lit_25113)
//	8010056C: 80452FA4 (lit_25916)
//	80100594: 80100A10 (procRoofHangStartInit__9daAlink_cFRC13cBgS_PolyInfoRC4cXyzi)
//	801005A4: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801005A8: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801005B0: 800C6A48 (procFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbToRoof() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbToRoof__9daAlink_cFv.s"
}
#pragma pop

/* 801005CC-801005F0 0024+00 s=2 e=0 z=0  None .text      getRoofHangFMoveAnmSpeed__9daAlink_cCFv */
//	801005CC: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	801005D0: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getRoofHangFMoveAnmSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getRoofHangFMoveAnmSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 801005F0-80100614 0024+00 s=2 e=0 z=0  None .text      getRoofHangSMoveAnmSpeed__9daAlink_cCFv */
//	801005F0: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	801005F4: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getRoofHangSMoveAnmSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getRoofHangSMoveAnmSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 80100614-80100668 0054+00 s=3 e=0 z=0  None .text
 * setRoofHangHandOnSE__9daAlink_cFP13cBgS_PolyInfo             */
//	80100638: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8010064C: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRoofHangHandOnSE(cBgS_PolyInfo* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setRoofHangHandOnSE__9daAlink_cFP13cBgS_PolyInfo.s"
}
#pragma pop

/* 80100668-80100770 0108+00 s=3 e=0 z=0  None .text      checkRoofHangMovePos__9daAlink_cFv */
//	801006A0: 80452FA8 (offsetAngle)
//	801006B0: 80452DB4 (lit_10040)
//	801006B4: 80439A20 (sincosTable___5JMath)
//	801006B8: 80439A20 (sincosTable___5JMath)
//	801006D0: 80452FA4 (lit_25916)
//	801006DC: 80452D30 (lit_7625)
//	8010070C: 804061C0 (g_dComIfG_gameInfo)
//	80100710: 804061C0 (g_dComIfG_gameInfo)
//	80100720: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	80100724: 80452D00 (lit_6895)
//	80100740: 80074D5C (GetMonkeyBarsCode__4dBgSFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRoofHangMovePos() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRoofHangMovePos__9daAlink_cFv.s"
}
#pragma pop

/* 80100770-801008EC 017C+00 s=5 e=0 z=0  None .text      commonRoofHangProc__9daAlink_cFv */
//	80100790: 804061C0 (g_dComIfG_gameInfo)
//	80100794: 804061C0 (g_dComIfG_gameInfo)
//	801007A4: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	801007B8: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	801007DC: 80075880 (MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	801007E8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80100800: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	80100804: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	8010080C: 800C6A48 (procFallInit__9daAlink_cFif)
//	80100818: 80452FA4 (lit_25916)
//	80100824: 80452D30 (lit_7625)
//	80100850: 8007549C (RoofChk__4dBgSFP12dBgS_RoofChk)
//	80100858: 80452D00 (lit_6895)
//	80100874: 80074D5C (GetMonkeyBarsCode__4dBgSFRC13cBgS_PolyInfo)
//	80100890: 80452FA4 (lit_25916)
//	801008A4: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	801008B4: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801008B8: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801008C0: 800C6A48 (procFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonRoofHangProc() {
    nofralloc
#include "asm/d/a/d_a_alink/commonRoofHangProc__9daAlink_cFv.s"
}
#pragma pop

/* 801008EC-80100A10 0124+00 s=5 e=0 z=0  None .text      checkNextActionRoofHang__9daAlink_cFv */
//	801008FC: 803621DC (_savegpr_29)
//	80100908: 80452CA4 (lit_6021)
//	80100924: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	80100938: 800737E4 (LockonTruth__12dAttention_cFv)
//	80100974: 80100668 (checkRoofHangMovePos__9daAlink_cFv)
//	80100984: 8010121C (procRoofHangSideMoveInit__9daAlink_cFv)
//	80100994: 80100BB4 (procRoofHangWaitInit__9daAlink_cFi)
//	801009B0: 801013B8 (procRoofHangTurnInit__9daAlink_cFv)
//	801009C4: 80100668 (checkRoofHangMovePos__9daAlink_cFv)
//	801009D4: 80100DA4 (procRoofHangFrontMoveInit__9daAlink_cFv)
//	801009E4: 80100BB4 (procRoofHangWaitInit__9daAlink_cFi)
//	801009F0: 80100BB4 (procRoofHangWaitInit__9daAlink_cFi)
//	801009FC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionRoofHang() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionRoofHang__9daAlink_cFv.s"
}
#pragma pop

/* 80100A10-80100AE4 00D4+00 s=2 e=0 z=0  None .text
 * procRoofHangStartInit__9daAlink_cFRC13cBgS_PolyInfoRC4cXyzi  */
//	80100A20: 803621D8 (_savegpr_28)
//	80100A38: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80100A44: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80100A48: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80100A4C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	80100A58:
//80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo) 	80100A78: 80452FA4 (lit_25916)
//80100A98: 800C12DC (deleteEquipItem__9daAlink_cFii) 	80100AA0: 80452CC0 (lit_6108) 	80100AAC:
//800BB770 (setSpecialGravity__9daAlink_cFffi) 	80100AB0: 80452CC0 (lit_6108) 	80100AD0: 80362224
//(_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangStartInit(cBgS_PolyInfo const& param_0, cXyz const& param_1,
                                          int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangStartInit__9daAlink_cFRC13cBgS_PolyInfoRC4cXyzi.s"
}
#pragma pop

/* 80100AE4-80100BB4 00D0+00 s=1 e=0 z=0  None .text      procRoofHangStart__9daAlink_cFv */
//	80100AFC: 80100770 (commonRoofHangProc__9daAlink_cFv)
//	80100B14: 80452DF8 (lit_13700)
//	80100B3C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80100B4C: 80452CA4 (lit_6021)
//	80100B5C: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80100B60: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80100B74: 801008EC (checkNextActionRoofHang__9daAlink_cFv)
//	80100B80: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80100B94: 80100BB4 (procRoofHangWaitInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangStart__9daAlink_cFv.s"
}
#pragma pop

/* 80100BB4-80100D38 0184+00 s=4 e=0 z=0  None .text      procRoofHangWaitInit__9daAlink_cFi */
//	80100BD4: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80100C0C: 80439A20 (sincosTable___5JMath)
//	80100C10: 80439A20 (sincosTable___5JMath)
//	80100C1C: 80452C9C (lit_5944)
//	80100C6C: 80439A20 (sincosTable___5JMath)
//	80100C70: 80439A20 (sincosTable___5JMath)
//	80100C7C: 80452C9C (lit_5944)
//	80100CC8: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80100CCC: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80100CD8: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80100CE8: 80452CC0 (lit_6108)
//	80100CF4: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	80100CF8: 80452CC0 (lit_6108)
//	80100D04: 804061C0 (g_dComIfG_gameInfo)
//	80100D08: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 80100D38-80100DA4 006C+00 s=1 e=0 z=0  None .text      procRoofHangWait__9daAlink_cFv */
//	80100D4C: 80100770 (commonRoofHangProc__9daAlink_cFv)
//	80100D64: 80452DF8 (lit_13700)
//	80100D88: 801008EC (checkNextActionRoofHang__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangWait__9daAlink_cFv.s"
}
#pragma pop

/* 80100DA4-80100EEC 0148+00 s=1 e=0 z=0  None .text      procRoofHangFrontMoveInit__9daAlink_cFv */
//	80100DCC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80100DD4: 801005CC (getRoofHangFMoveAnmSpeed__9daAlink_cCFv)
//	80100DE8: 80452CBC (lit_6041)
//	80100E00: 80452CC0 (lit_6108)
//	80100E08: 80452DC0 (lit_10193)
//	80100E1C: 80452D84 (lit_8781)
//	80100E24: 80452E28 (lit_14621)
//	80100E2C: 80452CBC (lit_6041)
//	80100E38: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80100E54: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80100E58: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80100E60: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80100E64: 80452CC0 (lit_6108)
//	80100E8C: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	80100E94: 80452CC0 (lit_6108)
//	80100EA0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	80100EA4: 80452CC0 (lit_6108)
//	80100EB0: 804061C0 (g_dComIfG_gameInfo)
//	80100EB4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangFrontMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangFrontMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80100EEC-8010121C 0330+00 s=1 e=0 z=0  None .text      procRoofHangFrontMove__9daAlink_cFv */
//	80100F04: 803621D8 (_savegpr_28)
//	80100F0C: 80100770 (commonRoofHangProc__9daAlink_cFv)
//	80100F28: 80452E94 (lit_16210)
//	80100F2C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80100F3C: 80452CC0 (lit_6108)
//	80100F40: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80100F50: 801008EC (checkNextActionRoofHang__9daAlink_cFv)
//	80100F64: 800737E4 (LockonTruth__12dAttention_cFv)
//	80100F90: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80100F94: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80100FA4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80100FD4: 80452E94 (lit_16210)
//	80100FF0: 80452FB0 (lit_26233)
//	80100FF4: 80452DAC (lit_9828)
//	80101000: 802675E4 (cM_rad2s__Ff)
//	80101008: 80439A20 (sincosTable___5JMath)
//	8010100C: 80439A20 (sincosTable___5JMath)
//	80101014: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80101018: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80101040: 80452CC0 (lit_6108)
//	80101054: 801005CC (getRoofHangFMoveAnmSpeed__9daAlink_cCFv)
//	80101060: 80452CC0 (lit_6108)
//	8010106C: 80452CBC (lit_6041)
//	80101080: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	80101084: 80452CC0 (lit_6108)
//	801010A0: 80452FA4 (lit_25916)
//	801010A8: 80452CC4 (lit_6109)
//	801010C4: 80452C9C (lit_5944)
//	801010D0: 80439A20 (sincosTable___5JMath)
//	801010D4: 80439A20 (sincosTable___5JMath)
//	80101114: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	80101128: 800FE058 (checkClimbCode__9daAlink_cFR13cBgS_PolyInfo)
//	80101134: 803A37C0 (__vt__8cM3dGPla)
//	80101138: 803A37C0 (__vt__8cM3dGPla)
//	80101140: 804061C0 (g_dComIfG_gameInfo)
//	80101144: 804061C0 (g_dComIfG_gameInfo)
//	80101154: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8010115C: 80267128 (atan2sX_Z__4cXyzCFv)
//	80101164: 80270E24 (cLib_distanceAngleS__Fss)
//	80101170: 80452E64 (lit_14954)
//	801011A4: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801011A8: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801011B0: 800C6A48 (procFallInit__9daAlink_cFif)
//	801011B4: 803A37C0 (__vt__8cM3dGPla)
//	801011B8: 803A37C0 (__vt__8cM3dGPla)
//	801011C4: 803A37C0 (__vt__8cM3dGPla)
//	801011C8: 803A37C0 (__vt__8cM3dGPla)
//	801011D8: 80100614 (setRoofHangHandOnSE__9daAlink_cFP13cBgS_PolyInfo)
//	801011E0: 80100668 (checkRoofHangMovePos__9daAlink_cFv)
//	801011F4: 80100BB4 (procRoofHangWaitInit__9daAlink_cFi)
//	80101208: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangFrontMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangFrontMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010121C-80101308 00EC+00 s=1 e=0 z=0  None .text      procRoofHangSideMoveInit__9daAlink_cFv */
//	80101238: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80101270: 801005F0 (getRoofHangSMoveAnmSpeed__9daAlink_cCFv)
//	8010127C: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80101280: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80101288: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80101290: 80452CC0 (lit_6108)
//	8010129C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	801012A0: 80452CC0 (lit_6108)
//	801012AC: 80452E64 (lit_14954)
//	801012B4: 80452D90 (lit_8784)
//	801012BC: 80425514 (l_waitBaseAnime)
//	801012C0: 80425514 (l_waitBaseAnime)
//	801012D8: 804061C0 (g_dComIfG_gameInfo)
//	801012DC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangSideMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangSideMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80101308-801013B8 00B0+00 s=1 e=0 z=0  None .text      procRoofHangSideMove__9daAlink_cFv */
//	80101320: 80100770 (commonRoofHangProc__9daAlink_cFv)
//	80101344: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80101354: 801008EC (checkNextActionRoofHang__9daAlink_cFv)
//	80101360: 801005F0 (getRoofHangSMoveAnmSpeed__9daAlink_cCFv)
//	8010136C: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	80101378: 80100614 (setRoofHangHandOnSE__9daAlink_cFP13cBgS_PolyInfo)
//	80101380: 80100668 (checkRoofHangMovePos__9daAlink_cFv)
//	80101394: 80100BB4 (procRoofHangWaitInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangSideMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangSideMove__9daAlink_cFv.s"
}
#pragma pop

/* 801013B8-80101534 017C+00 s=1 e=0 z=0  None .text      procRoofHangTurnInit__9daAlink_cFv */
//	801013D8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801013F0: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	801013F4: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80101428: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	80101434: 80452FB4 (lit_26275)
//	80101444: 80452CC0 (lit_6108)
//	8010144C: 80452D30 (lit_7625)
//	80101458: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	8010145C: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	8010147C: 80452D30 (lit_7625)
//	80101484: 80452FB8 (lit_26276)
//	801014A0: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	801014A4: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	801014AC: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	801014C4: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	801014D4: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	801014E4: 80452CC0 (lit_6108)
//	801014F0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	801014F4: 80452CC0 (lit_6108)
//	80101500: 804061C0 (g_dComIfG_gameInfo)
//	80101504: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 80101534-8010163C 0108+00 s=1 e=0 z=0  None .text      procRoofHangTurn__9daAlink_cFv */
//	8010154C: 80100770 (commonRoofHangProc__9daAlink_cFv)
//	80101568: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801015A8: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	801015B8: 80452FBC (lit_26297)
//	801015C8: 801008EC (checkNextActionRoofHang__9daAlink_cFv)
//	80101608: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8010161C: 80100614 (setRoofHangHandOnSE__9daAlink_cFP13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8010163C-801016AC 0070+00 s=2 e=0 z=0  None .text      setRoofHangSwitch__9daAlink_cFv */
//	80101660: 80101874 (getHangPos__13daObjSwHang_cFv)
//	80101680: 80452FA4 (lit_25916)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRoofHangSwitch() {
    nofralloc
#include "asm/d/a/d_a_alink/setRoofHangSwitch__9daAlink_cFv.s"
}
#pragma pop

/* 801016AC-801017AC 0100+00 s=1 e=0 z=0  None .text
 * procRoofSwitchHangInit__9daAlink_cFP10fopAc_ac_c             */
//	801016CC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801016DC: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	801016E8: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	801016EC: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	801016F0: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	801016F8:
//80452CC0 (lit_6108) 	80101704: 800BB770 (setSpecialGravity__9daAlink_cFffi) 	80101708: 80452CC0
//(lit_6108) 	8010171C: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c) 	80101724: 8010163C
//(setRoofHangSwitch__9daAlink_cFv) 	80101730: 80270E24 (cLib_distanceAngleS__Fss) 	80101774: 800ADB78
//(setOldRootQuaternion__9daAlink_cFsss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofSwitchHangInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofSwitchHangInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 801017AC-80101874 00C8+00 s=1 e=0 z=0  None .text      procRoofSwitchHang__9daAlink_cFv */
//	801017D0: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801017D4: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801017DC: 800C6A48 (procFallInit__9daAlink_cFif)
//	801017E4: 8010163C (setRoofHangSwitch__9daAlink_cFv)
//	801017EC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80101800: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80101804: 8038EBFC (m__22daAlinkHIO_roofHang_c0)
//	80101810: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80101834: 800B3250 (setDoStatus__9daAlink_cFUc)
//	8010184C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	80101850: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	80101858: 800C6A48 (procFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofSwitchHang() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofSwitchHang__9daAlink_cFv.s"
}
#pragma pop

/* 80101874-80101890 001C+00 s=2 e=0 z=0  None .text      getHangPos__13daObjSwHang_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjSwHang_c::getHangPos() {
    nofralloc
#include "asm/d/a/d_a_alink/getHangPos__13daObjSwHang_cFv.s"
}
#pragma pop

/* 80101890-801018E4 0054+00 s=6 e=0 z=0  None .text      checkZoraWearMaskDraw__9daAlink_cFv */
//	801018AC: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkZoraWearMaskDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/checkZoraWearMaskDraw__9daAlink_cFv.s"
}
#pragma pop

/* 801018E4-80101934 0050+00 s=1 e=0 z=0  None .text      checkAcceptUseItemInWater__9daAlink_cCFUs
 */
//	8010190C: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAcceptUseItemInWater(u16 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkAcceptUseItemInWater__9daAlink_cCFUs.s"
}
#pragma pop

/* 80101934-801019B8 0084+00 s=4 e=0 z=0  None .text      swimDeleteItem__9daAlink_cFv */
//	8010194C: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	8010198C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	801019A0: 80110840 (offKandelaarModel__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swimDeleteItem() {
    nofralloc
#include "asm/d/a/d_a_alink/swimDeleteItem__9daAlink_cFv.s"
}
#pragma pop

/* 801019B8-80101A18 0060+00 s=11 e=0 z=0  None .text      getZoraSwim__9daAlink_cCFv */
//	801019D8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	801019EC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getZoraSwim() const {
    nofralloc
#include "asm/d/a/d_a_alink/getZoraSwim__9daAlink_cCFv.s"
}
#pragma pop

/* 80101A18-80101AA8 0090+00 s=6 e=0 z=0  None .text      getSwimFrontMaxSpeed__9daAlink_cCFv */
//	80101A44: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101A48: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101A58: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80101A64: 80452D48 (lit_8130)
//	80101A78: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101A7C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101A88: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101A8C: 8038ED2C (m__18daAlinkHIO_swim_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSwimFrontMaxSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSwimFrontMaxSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 80101AA8-80101B44 009C+00 s=5 e=0 z=0  None .text      getSwimMaxFallSpeed__9daAlink_cCFv */
//	80101AC8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101ACC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101AF4: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101AF8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101B08: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	80101B14: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101B18: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101B24: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80101B28: 8038ED2C (m__18daAlinkHIO_swim_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSwimMaxFallSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSwimMaxFallSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 80101B44-80101C94 0150+00 s=1 e=0 z=0  None .text      checkOxygenTimer__9daAlink_cFv */
//	80101B54: 803621DC (_savegpr_29)
//	80101B78: 80452D3C (lit_7808)
//	80101B98: 804061C0 (g_dComIfG_gameInfo)
//	80101B9C: 804061C0 (g_dComIfG_gameInfo)
//	80101BB0: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80101BC0: 80101C94 (offOxygenTimer__9daAlink_cFv)
//	80101BD0: 804061C0 (g_dComIfG_gameInfo)
//	80101BD4: 804061C0 (g_dComIfG_gameInfo)
//	80101C04: 80101C94 (offOxygenTimer__9daAlink_cFv)
//	80101C10: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80101C1C: 804061C0 (g_dComIfG_gameInfo)
//	80101C20: 804061C0 (g_dComIfG_gameInfo)
//	80101C40: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80101C6C: 804061C0 (g_dComIfG_gameInfo)
//	80101C70: 804061C0 (g_dComIfG_gameInfo)
//	80101C80: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkOxygenTimer() {
    nofralloc
#include "asm/d/a/d_a_alink/checkOxygenTimer__9daAlink_cFv.s"
}
#pragma pop

/* 80101C94-80101CB8 0024+00 s=3 e=0 z=0  None .text      offOxygenTimer__9daAlink_cFv */
//	80101C98: 804061C0 (g_dComIfG_gameInfo)
//	80101C9C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::offOxygenTimer() {
    nofralloc
#include "asm/d/a/d_a_alink/offOxygenTimer__9daAlink_cFv.s"
}
#pragma pop

/* 80101CB8-80101CF4 003C+00 s=2 e=0 z=0  None .text      checkPossibleWaterInMode__9daAlink_cCFv */
//	80101CC8: 804061C0 (g_dComIfG_gameInfo)
//	80101CCC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPossibleWaterInMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkPossibleWaterInMode__9daAlink_cCFv.s"
}
#pragma pop

/* 80101CF4-80101D70 007C+00 s=18 e=0 z=0  None .text
 * setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf           */
//	80101D20: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80101D2C: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	80101D30: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	80101D40: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
//	80101D44: 8038E7F4 (m__24daAlinkHIO_magneBoots_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterInAnmRate(daPy_frameCtrl_c* param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf.s"
}
#pragma pop

/* 80101D70-801023E4 0674+00 s=2 e=0 z=0  None .text      swimBgCheck__9daAlink_cFf */
//	80101D98: 803621D4 (_savegpr_27)
//	80101DB0: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	80101DE4: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	80101E00: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80101E04: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80101E14: 80439A20 (sincosTable___5JMath)
//	80101E18: 80439A20 (sincosTable___5JMath)
//	80101E7C: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	80101E88: 803A37C0 (__vt__8cM3dGPla)
//	80101E8C: 803A37C0 (__vt__8cM3dGPla)
//	80101E94: 804061C0 (g_dComIfG_gameInfo)
//	80101E98: 804061C0 (g_dComIfG_gameInfo)
//	80101EAC: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80101EB4: 80268210 (cBgW_CheckBWall__Ff)
//	80101ED4: 80074E00 (GetWallCode__4dBgSFRC13cBgS_PolyInfo)
//	80101EF0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80101F10: 80452CC0 (lit_6108)
//	80101F20: 80347138 (PSVECSquareMag)
//	80101F24: 80452CC0 (lit_6108)
//	80101F34: 80452CE8 (lit_6846)
//	80101F3C: 80452CF0 (lit_6847)
//	80101F84: 80452CF8 (lit_6848)
//	80101F90: 80450AE0 (__float_nan)
//	80101F94: 80450AE0 (__float_nan)
//	80102000: 80450AE0 (__float_nan)
//	80102004: 80450AE0 (__float_nan)
//	80102014: 80267128 (atan2sX_Z__4cXyzCFv)
//	8010202C: 80267674 (cM_atan2s__Fff)
//	80102064: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	80102078: 80452CC0 (lit_6108)
//	8010208C: 80347138 (PSVECSquareMag)
//	80102090: 80452CC0 (lit_6108)
//	801020A0: 80452CE8 (lit_6846)
//	801020A8: 80452CF0 (lit_6847)
//	801020F0: 80452CF8 (lit_6848)
//	801020FC: 80450AE0 (__float_nan)
//	80102100: 80450AE0 (__float_nan)
//	8010216C: 80450AE0 (__float_nan)
//	80102170: 80450AE0 (__float_nan)
//	80102180: 80267674 (cM_atan2s__Fff)
//	80102188: 80270E24 (cLib_distanceAngleS__Fss)
//	801021DC: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	801021F4: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	801021FC: 80268210 (cBgW_CheckBWall__Ff)
//	80102214: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80102234: 80452CC0 (lit_6108)
//	80102244: 80347138 (PSVECSquareMag)
//	80102248: 80452CC0 (lit_6108)
//	80102258: 80452CE8 (lit_6846)
//	80102260: 80452CF0 (lit_6847)
//	801022A8: 80452CF8 (lit_6848)
//	801022B4: 80450AE0 (__float_nan)
//	801022B8: 80450AE0 (__float_nan)
//	80102324: 80450AE0 (__float_nan)
//	80102328: 80450AE0 (__float_nan)
//	80102338: 80267128 (atan2sX_Z__4cXyzCFv)
//	80102350: 80267674 (cM_atan2s__Fff)
//	801023A0: 80267674 (cM_atan2s__Fff)
//	801023A8: 803A37C0 (__vt__8cM3dGPla)
//	801023AC: 803A37C0 (__vt__8cM3dGPla)
//	801023D0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swimBgCheck(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/swimBgCheck__9daAlink_cFf.s"
}
#pragma pop

/* 801023E4-801029C8 05E4+00 s=3 e=0 z=0  None .text      setSpeedAndAngleSwim__9daAlink_cFv */
//	801023FC: 803621DC (_savegpr_29)
//	8010241C: 804061C0 (g_dComIfG_gameInfo)
//	80102420: 804061C0 (g_dComIfG_gameInfo)
//	8010245C: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	80102480: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	801024AC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	801024BC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	801024D8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	801024F4: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80102520: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80102534: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	80102540: 80452CC0 (lit_6108)
//	8010254C: 80103F94 (checkZoraSwimMove__9daAlink_cFv)
//	80102574: 80452CC0 (lit_6108)
//	8010259C: 8034739C (PSVECSquareDistance)
//	801025A0: 80452FC0 (lit_26816)
//	801025B4: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	801025C0: 80452CA4 (lit_6021)
//	801025D0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	801025EC: 80439A20 (sincosTable___5JMath)
//	801025F0: 80439A20 (sincosTable___5JMath)
//	801025FC: 80452CB0 (lit_6025)
//	80102618: 80452FC4 (lit_26817)
//	80102634: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80102638: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80102648: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80102654: 80439A20 (sincosTable___5JMath)
//	80102658: 80439A20 (sincosTable___5JMath)
//	80102670: 80452CC4 (lit_6109)
//	80102688: 800737E4 (LockonTruth__12dAttention_cFv)
//	801026B0: 80452CA4 (lit_6021)
//	801026D4: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801026D8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801026E8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	801026F8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801026FC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010270C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80102718: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80102724: 80452CB8 (lit_6040)
//	80102730: 80439A20 (sincosTable___5JMath)
//	80102734: 80439A20 (sincosTable___5JMath)
//	8010274C: 80452CC4 (lit_6109)
//	80102768: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80102770: 80452CC0 (lit_6108)
//	80102778: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80102798: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	801027A0: 80452CA4 (lit_6021)
//	801027BC: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	801027DC: 80452CBC (lit_6041)
//	801027EC: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80102818: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010281C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010282C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8010283C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80102840: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80102850: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80102854: 80439A20 (sincosTable___5JMath)
//	80102858: 80439A20 (sincosTable___5JMath)
//	80102870: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80102874: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010288C: 80452CC0 (lit_6108)
//	80102890: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80102894: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801028AC: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	801028B8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801028BC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801028C8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801028CC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801028DC: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	801028E0: 804061C0 (g_dComIfG_gameInfo)
//	801028E4: 804061C0 (g_dComIfG_gameInfo)
//	801028F4: 80452CC0 (lit_6108)
//	80102900: 80103FE8 (checkSwimNeckUpDown__9daAlink_cCFv)
//	80102910: 80452CC0 (lit_6108)
//	80102924: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80102928: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80102934: 80452CBC (lit_6041)
//	80102944: 80452FC8 (lit_26818)
//	80102964: 80452CB8 (lit_6040)
//	80102974: 80452FCC (lit_26819)
//	80102998: 80270540 (cLib_addCalcAngleS__FPsssss)
//	801029B4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleSwim() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleSwim__9daAlink_cFv.s"
}
#pragma pop

/* 801029C8-80102B1C 0154+00 s=3 e=0 z=0  None .text      checkNextActionSwim__9daAlink_cFv */
//	801029DC: 80103F24 (checkSwimButtonMove__9daAlink_cFv)
//	801029EC: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	80102A04: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80102A1C: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	80102A38: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	80102A44: 800B7BF8 (orderTalk__9daAlink_cFi)
//	80102A94: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80102AA8: 800F4A50 (procCanoeRideInit__9daAlink_cFv)
//	80102AB4: 80103F24 (checkSwimButtonMove__9daAlink_cFv)
//	80102AC4: 80103F94 (checkZoraSwimMove__9daAlink_cFv)
//	80102AD4: 80103EE0 (checkSwimButtonAccept__9daAlink_cFv)
//	80102AE4: 80104958 (procSwimDiveInit__9daAlink_cFv)
//	80102AF8: 80104670 (procSwimMoveInit__9daAlink_cFv)
//	80102B04: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionSwim() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionSwim__9daAlink_cFv.s"
}
#pragma pop

/* 80102B1C-80103058 053C+00 s=3 e=0 z=0  None .text      checkSwimAction__9daAlink_cFi */
//	80102B6C: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	80102B7C: 80452D68 (lit_8472)
//	80102B84: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80102B88: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80102B94: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80102B98: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80102C08: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80102C0C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80102C18: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80102C1C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80102C24: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80102C28: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80102C38: 80101A18 (getSwimFrontMaxSpeed__9daAlink_cCFv)
//	80102C44: 80101AA8 (getSwimMaxFallSpeed__9daAlink_cCFv)
//	80102C4C: 804061C0 (g_dComIfG_gameInfo)
//	80102C50: 804061C0 (g_dComIfG_gameInfo)
//	80102C70: 80452FD0 (lit_27005)
//	80102CE8: 80452EAC (lit_16641)
//	80102D10: 80101934 (swimDeleteItem__9daAlink_cFv)
//	80102D18: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	80102D2C: 80452CC4 (lit_6109)
//	80102D30: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80102D50: 80452E10 (lit_14615)
//	80102D94: 80101CB8 (checkPossibleWaterInMode__9daAlink_cCFv)
//	80102DA0: 80452CC0 (lit_6108)
//	80102DA8: 80452CB8 (lit_6040)
//	80102DB4: 804061C0 (g_dComIfG_gameInfo)
//	80102DB8: 804061C0 (g_dComIfG_gameInfo)
//	80102DCC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80102DD8: 80452EAC (lit_16641)
//	80102DFC: 80452CC0 (lit_6108)
//	80102E24: 8026786C (cM_rnd__Fv)
//	80102E28: 80452C98 (lit_5943)
//	80102E5C: 80452CC0 (lit_6108)
//	80102E60: 801395B4 (setWolfEnemyThrowUpperAnime__9daAlink_cFQ29daAlink_c12daAlink_WANMf)
//	80102E6C: 8013852C (procWolfSwimWaitInit__9daAlink_cFi)
//	80102EA0: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80102EB8: 80104670 (procSwimMoveInit__9daAlink_cFv)
//	80102EC8: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	80102EF0: 80101CB8 (checkPossibleWaterInMode__9daAlink_cCFv)
//	80102F20: 801383D8 (procWolfSwimUpInit__9daAlink_cFv)
//	80102F2C: 801040F8 (procSwimUpInit__9daAlink_cFv)
//	80102F5C: 80101CB8 (checkPossibleWaterInMode__9daAlink_cCFv)
//	80102FA8: 8013852C (procWolfSwimWaitInit__9daAlink_cFi)
//	80102FB8: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	80102FC8: 801032C8 (swimOutAfter__9daAlink_cFi)
//	80102FDC: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	80102FE8: 800C33B8 (procWaitInit__9daAlink_cFv)
//	80103014: 801033CC (checkSwimOutAction__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimAction__9daAlink_cFi.s"
}
#pragma pop

/* 80103058-801032C8 0270+00 s=7 e=0 z=0  None .text      checkSwimUpAction__9daAlink_cFv */
//	801030B4: 800CE628 (checkSubjectAction__9daAlink_cFv)
//	801030BC: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	801030D4: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801030D8: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801030EC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801030F0: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801030F8: 80452C98 (lit_5943)
//	801030FC: 80452E64 (lit_14954)
//	80103100: 80452CB8 (lit_6040)
//	80103104: 8026F97C (cLib_addCalc__FPfffff)
//	8010310C: 80452EBC (lit_17593)
//	80103120: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80103124: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80103130: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103134: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103168: 80452CC0 (lit_6108)
//	8010319C: 801383D8 (procWolfSwimUpInit__9daAlink_cFv)
//	801031A8: 801040F8 (procSwimUpInit__9daAlink_cFv)
//	80103208: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	8010321C: 80452CBC (lit_6041)
//	80103254: 80452CC0 (lit_6108)
//	80103258: 800C6F18 (procLandInit__9daAlink_cFf)
//	80103284: 800B0150 (getRoofAngle__9daAlink_cFP13cBgS_PolyInfos)
//	80103298: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimUpAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimUpAction__9daAlink_cFv.s"
}
#pragma pop

/* 801032C8-80103398 00D0+00 s=8 e=0 z=0  None .text      swimOutAfter__9daAlink_cFi */
//	80103320: 80452CC0 (lit_6108)
//	80103330: 80430CF4 (Zero__4cXyz)
//	80103334: 80430CF4 (Zero__4cXyz)
//	80103358: 80101C94 (offOxygenTimer__9daAlink_cFv)
//	8010337C: 80452CC4 (lit_6109)
//	80103380: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swimOutAfter(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/swimOutAfter__9daAlink_cFi.s"
}
#pragma pop

/* 80103398-801033CC 0034+00 s=1 e=0 z=0  None .text      checkSwimFall__9daAlink_cFv */
//	801033AC: 80450690 (l_autoUpHeight)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimFall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimFall__9daAlink_cFv.s"
}
#pragma pop

/* 801033CC-80103698 02CC+00 s=1 e=0 z=0  None .text      checkSwimOutAction__9daAlink_cFv */
//	801033EC: 8038D658 (lit_3757)
//	801033F0: 8038D658 (lit_3757)
//	80103418: 80103398 (checkSwimFall__9daAlink_cFv)
//	8010342C: 801032C8 (swimOutAfter__9daAlink_cFi)
//	80103430: 80439A20 (sincosTable___5JMath)
//	80103434: 80439A20 (sincosTable___5JMath)
//	8010346C: 80452CC0 (lit_6108)
//	80103488: 80347138 (PSVECSquareMag)
//	8010348C: 80452CC0 (lit_6108)
//	8010349C: 80452CE8 (lit_6846)
//	801034A4: 80452CF0 (lit_6847)
//	801034EC: 80452CF8 (lit_6848)
//	801034F8: 80450AE0 (__float_nan)
//	801034FC: 80450AE0 (__float_nan)
//	80103568: 80450AE0 (__float_nan)
//	8010356C: 80450AE0 (__float_nan)
//	80103578: 80267128 (atan2sX_Z__4cXyzCFv)
//	801035B4: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
//	801035E4: 800C6A48 (procFallInit__9daAlink_cFif)
//	80103604: 80452D3C (lit_7808)
//	80103628: 801032C8 (swimOutAfter__9daAlink_cFi)
//	80103634: 800BA09C (commonCheckNextAction__9daAlink_cFi)
//	80103640: 800BB408 (checkMagicArmorHeavy__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimOutAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimOutAction__9daAlink_cFv.s"
}
#pragma pop

/* 80103698-80103EE0 0848+00 s=4 e=0 z=0  None .text      setSwimMoveAnime__9daAlink_cFv */
//	801036B0: 803621D0 (_savegpr_26)
//	80103734: 800737E4 (LockonTruth__12dAttention_cFv)
//	8010375C: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	80103774: 80452CA4 (lit_6021)
//	80103790: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	801037AC: 80452CC4 (lit_6109)
//	801037C8: 80452CA4 (lit_6021)
//	801037E4: 80452CC4 (lit_6109)
//	8010380C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103810: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103850: 80452EAC (lit_16641)
//	80103898: 80452CB8 (lit_6040)
//	8010389C: 80452CC0 (lit_6108)
//	801038A4: 80452D3C (lit_7808)
//	801038B0: 80452CBC (lit_6041)
//	801038B8: 80452CC4 (lit_6109)
//	801038BC: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
//	801038D4: 80452C9C (lit_5944)
//	801038FC: 80452DFC (lit_13701)
//	80103900: 80270740 (cLib_chaseF__FPfff)
//	80103904: 80452CB8 (lit_6040)
//	80103914: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80103938: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80103994: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	801039A4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801039BC: 80452CC4 (lit_6109)
//	80103A10: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103A14: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103A34: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103A38: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103A50: 80101A18 (getSwimFrontMaxSpeed__9daAlink_cCFv)
//	80103A58: 80452CB8 (lit_6040)
//	80103A74: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103A78: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103A90: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80103A9C: 80452D30 (lit_7625)
//	80103AA8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103AAC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103AB8: 80452CB8 (lit_6040)
//	80103ADC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103AE0: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103AF8: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80103B04: 80452D1C (lit_7448)
//	80103B10: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103B14: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103B20: 80452CB8 (lit_6040)
//	80103B70: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103B74: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103BBC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80103BD4: 80452CC0 (lit_6108)
//	80103BE8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80103BF4: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103BF8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103C14: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103C18: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103C24: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80103C3C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103C40: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103C4C: 80452CC0 (lit_6108)
//	80103C50: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	80103C74: 80452CB8 (lit_6040)
//	80103C8C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103C90: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80103CD4: 80452E94 (lit_16210)
//	80103CD8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80103D1C: 80452CC0 (lit_6108)
//	80103D20: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80103D4C: 80452CC4 (lit_6109)
//	80103D50: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80103D60: 80452CBC (lit_6041)
//	80103D64: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80103D6C: 80101AA8 (getSwimMaxFallSpeed__9daAlink_cCFv)
//	80103D88: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80103DB0: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	80103DE0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80103E04: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80103E18: 80452CA4 (lit_6021)
//	80103E28: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80103E34: 80439A20 (sincosTable___5JMath)
//	80103E38: 80439A20 (sincosTable___5JMath)
//	80103E4C: 80452FD4 (lit_27418)
//	80103E78: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80103E98: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	80103EAC: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80103EB8: 80452CC0 (lit_6108)
//	80103ECC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwimMoveAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwimMoveAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80103EE0-80103F08 0028+00 s=5 e=0 z=0  None .text      checkSwimButtonAccept__9daAlink_cFv */
//	80103EE4: 804061C0 (g_dComIfG_gameInfo)
//	80103EE8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimButtonAccept() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimButtonAccept__9daAlink_cFv.s"
}
#pragma pop

/* 80103F08-80103F24 001C+00 s=4 e=0 z=0  None .text      checkUpSwimButtonAccept__9daAlink_cFv */
//	80103F08: 804061C0 (g_dComIfG_gameInfo)
//	80103F0C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpSwimButtonAccept() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpSwimButtonAccept__9daAlink_cFv.s"
}
#pragma pop

/* 80103F24-80103F94 0070+00 s=2 e=0 z=0  None .text      checkSwimButtonMove__9daAlink_cFv */
//	80103F4C: 80103EE0 (checkSwimButtonAccept__9daAlink_cFv)
//	80103F5C: 80103F08 (checkUpSwimButtonAccept__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimButtonMove() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimButtonMove__9daAlink_cFv.s"
}
#pragma pop

/* 80103F94-80103FE8 0054+00 s=3 e=0 z=0  None .text      checkZoraSwimMove__9daAlink_cFv */
//	80103FB0: 80103F24 (checkSwimButtonMove__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkZoraSwimMove() {
    nofralloc
#include "asm/d/a/d_a_alink/checkZoraSwimMove__9daAlink_cFv.s"
}
#pragma pop

/* 80103FE8-80104034 004C+00 s=2 e=0 z=0  None .text      checkSwimNeckUpDown__9daAlink_cCFv */
//	8010400C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimNeckUpDown() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimNeckUpDown__9daAlink_cCFv.s"
}
#pragma pop

/* 80104034-801040F8 00C4+00 s=3 e=0 z=0  None .text      setSwimUpDownOffset__9daAlink_cFv */
//	80104048: 80452EA8 (lit_16570)
//	8010404C: 80267954 (cM_rndF__Ff)
//	80104050: 80452FDC (lit_27477)
//	80104058: 80452FD8 (lit_27476)
//	80104090: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	8010409C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801040A0: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801040AC: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801040B0: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801040BC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801040C0: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801040D0: 80439A20 (sincosTable___5JMath)
//	801040D4: 80439A20 (sincosTable___5JMath)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwimUpDownOffset() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwimUpDownOffset__9daAlink_cFv.s"
}
#pragma pop

/* 801040F8-801041E8 00F0+00 s=2 e=0 z=0  None .text      procSwimUpInit__9daAlink_cFv */
//	80104110: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80104124: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80104130: 80452CC0 (lit_6108)
//	80104138: 80452CC0 (lit_6108)
//	80104170: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104174: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104178: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010417C:
//804061C0 (g_dComIfG_gameInfo) 	80104180: 804061C0 (g_dComIfG_gameInfo) 	8010419C: 8038ED2C
//(m__18daAlinkHIO_swim_c0) 	801041A0: 8038ED2C (m__18daAlinkHIO_swim_c0) 	801041BC: 800BF194
//(seStartMapInfo__9daAlink_cFUl) 	801041C4: 80101934 (swimDeleteItem__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 801041E8-801042F8 0110+00 s=1 e=0 z=0  None .text      procSwimUp__9daAlink_cFv */
//	80104204: 80452CC0 (lit_6108)
//	80104208: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010420C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104214: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	80104220: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	80104234: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	80104258: 80452CA4 (lit_6021)
//	80104268: 80104670 (procSwimMoveInit__9daAlink_cFv)
//	80104278: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	80104284: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80104298: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	801042A4: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801042A8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801042BC: 80452CA4 (lit_6021)
//	801042CC: 80104670 (procSwimMoveInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimUp__9daAlink_cFv.s"
}
#pragma pop

/* 801042F8-801044B4 01BC+00 s=15 e=0 z=0  None .text      procSwimWaitInit__9daAlink_cFi */
//	80104308: 803621DC (_savegpr_29)
//	80104338: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010433C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104354: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010436C: 800BF194 (seStartMapInfo__9daAlink_cFUl)
//	80104378: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010437C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010439C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801043A0: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801043B0: 80101934 (swimDeleteItem__9daAlink_cFv)
//	801043BC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	801043D0: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801043D4: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801043E0: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	801043EC: 80452DA0 (lit_9054)
//	80104400: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104404: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010440C: 80452CBC (lit_6041)
//	80104410: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80104444: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	80104450: 804061C0 (g_dComIfG_gameInfo)
//	80104454: 804061C0 (g_dComIfG_gameInfo)
//	80104478: 80452CC0 (lit_6108)
//	80104490: 80101A18 (getSwimFrontMaxSpeed__9daAlink_cCFv)
//	801044A0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 801044B4-80104670 01BC+00 s=1 e=0 z=0  None .text      procSwimWait__9daAlink_cFv */
//	801044E0: 8011856C (setShapeAngleToTalkActor__9daAlink_cFv)
//	801044F0: 80101AA8 (getSwimMaxFallSpeed__9daAlink_cCFv)
//	801044FC: 80101A18 (getSwimFrontMaxSpeed__9daAlink_cCFv)
//	80104508: 801023E4 (setSpeedAndAngleSwim__9daAlink_cFv)
//	80104528: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010452C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104538: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80104540: 80104034 (setSwimUpDownOffset__9daAlink_cFv)
//	80104564: 800B3250 (setDoStatus__9daAlink_cFUc)
//	8010456C: 80103058 (checkSwimUpAction__9daAlink_cFv)
//	80104584: 801029C8 (checkNextActionSwim__9daAlink_cFv)
//	8010459C: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	801045B0: 801032C8 (swimOutAfter__9daAlink_cFi)
//	801045C0: 80103EE0 (checkSwimButtonAccept__9daAlink_cFv)
//	801045DC: 80104958 (procSwimDiveInit__9daAlink_cFv)
//	801045E8: 80452CA4 (lit_6021)
//	801045F8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801045FC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104614: 80103F08 (checkUpSwimButtonAccept__9daAlink_cFv)
//	80104630: 80103F08 (checkUpSwimButtonAccept__9daAlink_cFv)
//	80104654: 80104670 (procSwimMoveInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimWait__9daAlink_cFv.s"
}
#pragma pop

/* 80104670-801047B8 0148+00 s=9 e=0 z=0  None .text      procSwimMoveInit__9daAlink_cFv */
//	80104680: 803621D8 (_savegpr_28)
//	801046B0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801046D4: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801046D8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	8010473C: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	80104758: 80103698 (setSwimMoveAnime__9daAlink_cFv)
//	80104770: 80452CC0 (lit_6108)
//	8010477C: 80101934 (swimDeleteItem__9daAlink_cFv)
//	80104780: 804061C0 (g_dComIfG_gameInfo)
//	80104784: 804061C0 (g_dComIfG_gameInfo)
//	801047A4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 801047B8-80104958 01A0+00 s=1 e=0 z=0  None .text      procSwimMove__9daAlink_cFv */
//	801047CC: 801023E4 (setSpeedAndAngleSwim__9daAlink_cFv)
//	801047D4: 80103F08 (checkUpSwimButtonAccept__9daAlink_cFv)
//	801047F8: 80103698 (setSwimMoveAnime__9daAlink_cFv)
//	80104800: 80103058 (checkSwimUpAction__9daAlink_cFv)
//	80104818: 801029C8 (checkNextActionSwim__9daAlink_cFv)
//	80104830: 80452CA4 (lit_6021)
//	80104840: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	80104854: 801032C8 (swimOutAfter__9daAlink_cFi)
//	80104864: 80103EE0 (checkSwimButtonAccept__9daAlink_cFv)
//	80104880: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	80104890: 80104958 (procSwimDiveInit__9daAlink_cFv)
//	80104898: 804061C0 (g_dComIfG_gameInfo)
//	8010489C: 804061C0 (g_dComIfG_gameInfo)
//	801048C4: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801048C8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801048E0: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	801048F4:
//80103F94 (checkZoraSwimMove__9daAlink_cFv) 	80104904: 80103F08
//(checkUpSwimButtonAccept__9daAlink_cFv) 	80104920: 8038ED2C (m__18daAlinkHIO_swim_c0) 	80104924:
//8038ED2C (m__18daAlinkHIO_swim_c0) 	8010493C: 801042F8 (procSwimWaitInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimMove__9daAlink_cFv.s"
}
#pragma pop

/* 80104958-80104AA0 0148+00 s=4 e=0 z=0  None .text      procSwimDiveInit__9daAlink_cFv */
//	80104970: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80104978: 80452CC0 (lit_6108)
//	80104984: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	80104988: 80452CC0 (lit_6108)
//	801049AC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801049B0: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	801049B8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	801049EC:
//8038ED2C (m__18daAlinkHIO_swim_c0) 	801049F0: 8038ED2C (m__18daAlinkHIO_swim_c0) 	801049F8:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 80104A04:
//80425514 (l_waitBaseAnime) 	80104A08: 80425514 (l_waitBaseAnime) 	80104A20: 8038ED2C
//(m__18daAlinkHIO_swim_c0) 	80104A24: 8038ED2C (m__18daAlinkHIO_swim_c0) 	80104A38: 804061C0
//(g_dComIfG_gameInfo) 	80104A3C: 804061C0 (g_dComIfG_gameInfo) 	80104A54: 80452CC0 (lit_6108)
//	80104A5C: 80452CB8 (lit_6040)
//	80104A64: 80452CB0 (lit_6025)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimDiveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimDiveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80104AA0-80104C50 01B0+00 s=1 e=0 z=0  None .text      procSwimDive__9daAlink_cFv */
//	80104ACC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80104AE4: 80452D78 (lit_8676)
//	80104B20: 80452CC0 (lit_6108)
//	80104B24: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104B28: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104B30: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	80104B48: 80452CB8 (lit_6040)
//	80104B5C: 80452E64 (lit_14954)
//	80104B60: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80104B94: 80452DA8 (lit_9652)
//	80104B9C: 8001F87C (fopKyM_createWpillar__FPC4cXyzfi)
//	80104BA8: 80452C98 (lit_5943)
//	80104BCC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80104BD8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104BDC: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104C24: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	80104C2C: 80104670 (procSwimMoveInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimDive() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimDive__9daAlink_cFv.s"
}
#pragma pop

/* 80104C50-80104D7C 012C+00 s=1 e=0 z=0  None .text      procSwimHookshotSubjectInit__9daAlink_cFv
 */
//	80104C68: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80104C84: 801090EC (initHookshotUpperAnimeSpeed__9daAlink_cFi)
//	80104C90: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80104CA4: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104CA8: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104CB0: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80104CB4: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80104CBC: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80104CC0: 80452CC0 (lit_6108)
//	80104CE8: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	80104D08: 80452CC0 (lit_6108)
//	80104D20: 80101A18 (getSwimFrontMaxSpeed__9daAlink_cCFv)
//	80104D28: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104D2C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104D48: 80109070 (setHookshotReadyMaterial__9daAlink_cFv)
//	80104D4C: 804061C0 (g_dComIfG_gameInfo)
//	80104D50: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimHookshotSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimHookshotSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 80104D7C-80104EB8 013C+00 s=1 e=0 z=0  None .text      procSwimHookshotSubject__9daAlink_cFv */
//	80104D90: 80101AA8 (getSwimMaxFallSpeed__9daAlink_cCFv)
//	80104D9C: 80101A18 (getSwimFrontMaxSpeed__9daAlink_cCFv)
//	80104DA8: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	80104DBC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80104DC8: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	80104DD8: 80103058 (checkSwimUpAction__9daAlink_cFv)
//	80104DF0: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	80104E34: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	80104E40: 801095C8 (checkNextActionHookshot__9daAlink_cFv)
//	80104E50: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	80104E60: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	80104E70: 80108DB4 (setHookshotSight__9daAlink_cFv)
//	80104E74: 804061C0 (g_dComIfG_gameInfo)
//	80104E78: 804061C0 (g_dComIfG_gameInfo)
//	80104E8C: 804061C0 (g_dComIfG_gameInfo)
//	80104E90: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimHookshotSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimHookshotSubject__9daAlink_cFv.s"
}
#pragma pop

/* 80104EB8-80104FC4 010C+00 s=1 e=0 z=0  None .text      procSwimHookshotMoveInit__9daAlink_cFv */
//	80104ED0: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80104EE8: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80104F08: 801090EC (initHookshotUpperAnimeSpeed__9daAlink_cFi)
//	80104F2C: 80103698 (setSwimMoveAnime__9daAlink_cFv)
//	80104F44: 80452CC0 (lit_6108)
//	80104F6C: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	80104F78: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104F7C: 8038ED2C (m__18daAlinkHIO_swim_c0)
//	80104F94: 804061C0 (g_dComIfG_gameInfo)
//	80104F98: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimHookshotMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimHookshotMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80104FC4-8010519C 01D8+00 s=1 e=0 z=0  None .text      procSwimHookshotMove__9daAlink_cFv */
//	80104FD8: 80108F64 (cancelHookshotMove__9daAlink_cFv)
//	80104FE0: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	80104FF0: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80105004: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80105018: 801023E4 (setSpeedAndAngleSwim__9daAlink_cFv)
//	80105020: 80103698 (setSwimMoveAnime__9daAlink_cFv)
//	80105028: 80103058 (checkSwimUpAction__9daAlink_cFv)
//	80105040: 80103EE0 (checkSwimButtonAccept__9daAlink_cFv)
//	8010505C: 80104958 (procSwimDiveInit__9daAlink_cFv)
//	80105068: 80103F08 (checkUpSwimButtonAccept__9daAlink_cFv)
//	8010508C: 80104670 (procSwimMoveInit__9daAlink_cFv)
//	80105098: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	801050A8: 801089E8 (checkBossOctaIealRoom__9daAlink_cFv)
//	801050BC: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	801050C4: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	80105108: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	80105114: 801095C8 (checkNextActionHookshot__9daAlink_cFv)
//	80105124: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80105150: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010516C: 801089E8 (checkBossOctaIealRoom__9daAlink_cFv)
//	80105180: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimHookshotMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimHookshotMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010519C-80105728 058C+00 s=1 e=0 z=0  None .text
 * procSwimDamageInit__9daAlink_cFP12dCcD_GObjInf               */
//	801051B4: 803621D4 (_savegpr_27)
//	801051D8: 80452CC0 (lit_6108)
//	801051E0: 80452CB8 (lit_6040)
//	801051EC: 804061C0 (g_dComIfG_gameInfo)
//	801051F0: 804061C0 (g_dComIfG_gameInfo)
//	80105204: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8010522C: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	80105248: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	80105270: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	801052A8: 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf)
//	801052B4: 80439A20 (sincosTable___5JMath)
//	801052B8: 80439A20 (sincosTable___5JMath)
//	801052D8: 80452CC0 (lit_6108)
//	801052F0: 80347138 (PSVECSquareMag)
//	801052F4: 80452CC0 (lit_6108)
//	80105304: 80452CE8 (lit_6846)
//	8010530C: 80452CF0 (lit_6847)
//	80105354: 80452CF8 (lit_6848)
//	80105360: 80450AE0 (__float_nan)
//	80105364: 80450AE0 (__float_nan)
//	801053D0: 80450AE0 (__float_nan)
//	801053D4: 80450AE0 (__float_nan)
//	801053D8: 8038E4C0 (m__21daAlinkHIO_damSwim_c0)
//	801053DC: 8038E4C0 (m__21daAlinkHIO_damSwim_c0)
//	80105408: 80266D30 (normZP__4cXyzCFv)
//	80105430: 803470D8 (PSVECScale)
//	80105438: 801019B8 (getZoraSwim__9daAlink_cCFv)
//	80105450: 8038E4C0 (m__21daAlinkHIO_damSwim_c0)
//	80105454: 8038E4C0 (m__21daAlinkHIO_damSwim_c0)
//	8010545C: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	80105474:
// 800AF4B0 (setFaceBck__9daAlink_cFUsiUs) 	80105480: 800AFAA8
//(setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	80105494: 800C1F6C
//(commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC) 	801054A0: 80439A20
//(sincosTable___5JMath) 	801054A4: 80439A20 (sincosTable___5JMath) 	801054E8: 8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	801054EC: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	801054FC: 80267674
//(cM_atan2s__Fff) 	80105528: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	8010552C: 8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	80105550: 80452CC0 (lit_6108) 	8010556C: 80267674 (cM_atan2s__Fff)
//	801055A8: 80267674 (cM_atan2s__Fff)
//	801055AC: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	801055C0: 8038E4C0 (m__21daAlinkHIO_damSwim_c0)
//	801055C4: 8038E4C0 (m__21daAlinkHIO_damSwim_c0)
//	801055CC: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	801055D0:
//8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	801055D4: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	80105600:
//8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	80105604: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	80105608:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 8010560C:
//8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	80105610: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	80105630:
//8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	80105634: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	8010563C:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 80105640:
//8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	80105644: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	80105664:
//8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	80105668: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	80105670:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 80105674:
//8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	80105678: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	80105690:
//8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	80105694: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	8010569C:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 801056A0:
//8038E4C0
//(m__21daAlinkHIO_damSwim_c0) 	801056A4: 8038E4C0 (m__21daAlinkHIO_damSwim_c0) 	801056B0:
//80452CC0 (lit_6108) 	801056B8: 80452DAC (lit_9828) 	801056C8: 80452CB0 (lit_6025) 	801056EC:
//8038ED2C (m__18daAlinkHIO_swim_c0) 	801056F0: 8038ED2C (m__18daAlinkHIO_swim_c0) 	80105714:
//80362220
//(_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimDamageInit(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimDamageInit__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 80105728-801058A0 0178+00 s=1 e=0 z=0  None .text      procSwimDamage__9daAlink_cFv */
//	80105750: 80452CB0 (lit_6025)
//	80105774: 802675E4 (cM_rad2s__Ff)
//	8010577C: 80439A20 (sincosTable___5JMath)
//	80105780: 80439A20 (sincosTable___5JMath)
//	8010578C: 80452CB0 (lit_6025)
//	801057F8: 80103058 (checkSwimUpAction__9daAlink_cFv)
//	80105810: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80105820: 801029C8 (checkNextActionSwim__9daAlink_cFv)
//	80105834: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	8010585C: 801029C8 (checkNextActionSwim__9daAlink_cFv)
//	8010586C: 80452CA4 (lit_6021)
//	8010587C: 80104670 (procSwimMoveInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimDamage__9daAlink_cFv.s"
}
#pragma pop

/* 801058A0-80105A00 0160+00 s=2 e=0 z=0  None .text      procOctaIealSpitInit__9daAlink_cFv */
//	801058C4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801058E8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	801058EC: 80430CF4 (Zero__4cXyz)
//	801058F0: 80430CF4 (Zero__4cXyz)
//	80105924: 80452DA0 (lit_9054)
//	8010593C: 800D7478 (setDamagePointNormal__9daAlink_cFi)
//	80105944: 80452CB8 (lit_6040)
//	80105964: 80452FE0 (lit_28016)
//	8010597C: 80452FE4 (lit_28017)
//	80105988: 80425514 (l_waitBaseAnime)
//	8010598C: 80425514 (l_waitBaseAnime)
//	801059BC: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procOctaIealSpitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procOctaIealSpitInit__9daAlink_cFv.s"
}
#pragma pop

/* 80105A00-80105A84 0084+00 s=1 e=0 z=0  None .text      procOctaIealSpit__9daAlink_cFv */
//	80105A34: 80452CC0 (lit_6108)
//	80105A38: 80452C98 (lit_5943)
//	80105A40: 80452DA0 (lit_9054)
//	80105A44: 8026F97C (cLib_addCalc__FPfffff)
//	80105A54: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80105A68: 801042F8 (procSwimWaitInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procOctaIealSpit() {
    nofralloc
#include "asm/d/a/d_a_alink/procOctaIealSpit__9daAlink_cFv.s"
}
#pragma pop

/* 80105A84-80105A98 0014+00 s=1 e=0 z=0  None .text      daAlink_searchIceLeaf__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchIceLeaf(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchIceLeaf__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80105A98-80105ABC 0024+00 s=3 e=0 z=0  None .text      checkSnowCode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSnowCode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSnowCode__9daAlink_cCFv.s"
}
#pragma pop

/* 80105ABC-80105B10 0054+00 s=1 e=0 z=1  None .text
 * checkSnowCodePolygon__9daAlink_cFR13cBgS_PolyInfo            */
//	80105ACC: 804061C0 (g_dComIfG_gameInfo)
//	80105AD0: 804061C0 (g_dComIfG_gameInfo)
//	80105AD8: 80074CBC (GetSpecialCode__4dBgSFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSnowCodePolygon(cBgS_PolyInfo& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSnowCodePolygon__9daAlink_cFR13cBgS_PolyInfo.s"
}
#pragma pop

/* 80105B10-80105B58 0048+00 s=2 e=0 z=0  None .text      checkBoardRestart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoardRestart() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoardRestart__9daAlink_cFv.s"
}
#pragma pop

/* 80105B58-80106534 09DC+00 s=7 e=0 z=0  None .text      boardCommon__9daAlink_cFi */
//	80105B78: 803621D0 (_savegpr_26)
//	80105B88: 803650D0 (abs)
//	80105B94: 803650D0 (abs)
//	80105BA8: 80439A20 (sincosTable___5JMath)
//	80105BAC: 80439A20 (sincosTable___5JMath)
//	80105BBC: 80452DBC (lit_10042)
//	80105BD4: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80105BEC: 80452E64 (lit_14954)
//	80105C1C: 80452CE0 (lit_6845)
//	80105C38: 80270E24 (cLib_distanceAngleS__Fss)
//	80105C54: 800B48D0 (setJumpMode__9daAlink_cFv)
//	80105C74: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	80105C90: 80105A98 (checkSnowCode__9daAlink_cCFv)
//	80105CB8: 800B48D0 (setJumpMode__9daAlink_cFv)
//	80105CC4: 800C57A4 (procBackJumpInit__9daAlink_cFi)
//	80105CE0: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	80105CF8: 804061C0 (g_dComIfG_gameInfo)
//	80105CFC: 804061C0 (g_dComIfG_gameInfo)
//	80105D0C: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	80105D18: 803A37C0 (__vt__8cM3dGPla)
//	80105D1C: 803A37C0 (__vt__8cM3dGPla)
//	80105D30: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80105D3C: 80452CC0 (lit_6108)
//	80105D50: 80347138 (PSVECSquareMag)
//	80105D54: 80452CC0 (lit_6108)
//	80105D64: 80452CE8 (lit_6846)
//	80105D6C: 80452CF0 (lit_6847)
//	80105DB4: 80452CF8 (lit_6848)
//	80105DC0: 80450AE0 (__float_nan)
//	80105DC4: 80450AE0 (__float_nan)
//	80105E30: 80450AE0 (__float_nan)
//	80105E34: 80450AE0 (__float_nan)
//	80105E3C: 80267674 (cM_atan2s__Fff)
//	80105E5C: 80267128 (atan2sX_Z__4cXyzCFv)
//	80105E64: 803A37C0 (__vt__8cM3dGPla)
//	80105E68: 803A37C0 (__vt__8cM3dGPla)
//	80105EA0: 80452CC0 (lit_6108)
//	80105EA8: 803650D0 (abs)
//	80105EB4: 80452CA4 (lit_6021)
//	80105ED0: 80439A20 (sincosTable___5JMath)
//	80105ED4: 80439A20 (sincosTable___5JMath)
//	80105EDC: 80452F2C (lit_21680)
//	80105F34: 80452DEC (lit_13119)
//	80105F48: 80452CC0 (lit_6108)
//	80105F4C: 80452C98 (lit_5943)
//	80105F50: 80452DA0 (lit_9054)
//	80105F54: 8026F97C (cLib_addCalc__FPfffff)
//	80105F5C: 80452D3C (lit_7808)
//	80105F78: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80105FA8: 80452CB0 (lit_6025)
//	80105FC4: 80452FEC (lit_28285)
//	80105FDC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80105FF8: 80107060 (procBoardTurnInit__9daAlink_cFv)
//	80106050: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80106064: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80106074: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106078: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106090: 80106E88 (procBoardRowInit__9daAlink_cFv)
//	801060C0: 80452C98 (lit_5943)
//	801060C4: 80452FF0 (lit_28286)
//	801060C8: 80452DA0 (lit_9054)
//	801060CC: 8026F97C (cLib_addCalc__FPfffff)
//	801060D8: 800AC738 (setDoubleAnimeBlendRatio__9daAlink_cFf)
//	801060E0: 80452E08 (lit_14064)
//	80106144: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80106188: 80270540 (cLib_addCalcAngleS__FPsssss)
//	801061AC: 804061C0 (g_dComIfG_gameInfo)
//	801061B0: 804061C0 (g_dComIfG_gameInfo)
//	801061BC: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	801061E0: 80452CC0 (lit_6108)
//	801061F0: 80452CB0 (lit_6025)
//	8010620C: 80452FEC (lit_28285)
//	80106234: 80452E4C (lit_14782)
//	80106240: 80452CB0 (lit_6025)
//	80106278: 80452CB8 (lit_6040)
//	80106298: 803650D0 (abs)
//	801062A4: 80452C98 (lit_5943)
//	801062A8: 80439A20 (sincosTable___5JMath)
//	801062AC: 80439A20 (sincosTable___5JMath)
//	801062C8: 80452CB8 (lit_6040)
//	801062CC: 80452C98 (lit_5943)
//	801062D0: 80439A20 (sincosTable___5JMath)
//	801062D4: 80439A20 (sincosTable___5JMath)
//	801062EC: 80452FF4 (lit_28287)
//	801062F4: 802675E4 (cM_rad2s__Ff)
//	801062FC: 80439A20 (sincosTable___5JMath)
//	80106300: 80439A20 (sincosTable___5JMath)
//	8010630C: 80452DA0 (lit_9054)
//	80106360: 80452CC0 (lit_6108)
//	80106390: 80452DA0 (lit_9054)
//	8010639C: 80267674 (cM_atan2s__Fff)
//	801063B4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	801063C8: 80452CC0 (lit_6108)
//	801063CC: 80452D88 (lit_8782)
//	801063D0: 80270740 (cLib_chaseF__FPfff)
//	801063DC: 80452CC0 (lit_6108)
//	801063E0: 80452D88 (lit_8782)
//	801063E4: 80270740 (cLib_chaseF__FPfff)
//	801063EC: 80452CA4 (lit_6021)
//	80106410: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80106424: 80106534 (setCommonBoardAnime__9daAlink_cFi)
//	80106434: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80106448: 80106534 (setCommonBoardAnime__9daAlink_cFi)
//	80106450: 80452DA8 (lit_9652)
//	80106468: 80452D2C (lit_7624)
//	8010646C: 80270740 (cLib_chaseF__FPfff)
//	80106484: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8010648C: 80452D3C (lit_7808)
//	801064B8: 80439A20 (sincosTable___5JMath)
//	801064BC: 80439A20 (sincosTable___5JMath)
//	801064D0: 80452CC0 (lit_6108)
//	801064E8: 80107218 (procBoardJumpInit__9daAlink_cFfi)
//	80106504: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80106520: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::boardCommon(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/boardCommon__9daAlink_cFi.s"
}
#pragma pop

/* 80106534-8010658C 0058+00 s=6 e=0 z=0  None .text      setCommonBoardAnime__9daAlink_cFi */
//	80106540: 80452CC0 (lit_6108)
//	80106544: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106548: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106550: 80452CB8 (lit_6040)
//	8010656C: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106570: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106578: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCommonBoardAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setCommonBoardAnime__9daAlink_cFi.s"
}
#pragma pop

/* 8010658C-80106618 008C+00 s=5 e=0 z=0  None .text      checkNextActionBoard__9daAlink_cFv */
//	801065A0: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	80106600: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionBoard() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionBoard__9daAlink_cFv.s"
}
#pragma pop

/* 80106618-80106650 0038+00 s=2 e=0 z=0  None .text      checkBoardSwordTriggerAction__9daAlink_cFv
 */
//	80106630: 801074AC (procBoardCutInit__9daAlink_cFv)
//	8010663C: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoardSwordTriggerAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoardSwordTriggerAction__9daAlink_cFv.s"
}
#pragma pop

/* 80106650-801066B8 0068+00 s=3 e=0 z=0  None .text
 * commonProcBoardInit__9daAlink_cFQ29daAlink_c12daAlink_PROC   */
//	80106684: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonProcBoardInit(daAlink_c::daAlink_PROC param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonProcBoardInit__9daAlink_cFQ29daAlink_c12daAlink_PROC.s"
}
#pragma pop

/* 801066B8-801066EC 0034+00 s=1 e=0 z=0  None .text      getBoardRowAnmSpeed__9daAlink_cFv */
//	801066B8: 8038E870 (m__19daAlinkHIO_board_c0)
//	801066BC: 8038E870 (m__19daAlinkHIO_board_c0)
//	801066CC: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBoardRowAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getBoardRowAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 801066EC-80106774 0088+00 s=3 e=0 z=0  None .text      setBoardLandAnime__9daAlink_cFv */
//	80106704: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106708: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106710: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	80106730:
//80452CC0 (lit_6108) 	80106738: 80452CB8 (lit_6040) 	80106744: 804061C0 (g_dComIfG_gameInfo)
//80106748: 804061C0 (g_dComIfG_gameInfo) 	8010675C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBoardLandAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBoardLandAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80106774-801069D0 025C+00 s=1 e=0 z=0  None .text      procBoardRideInit__9daAlink_cFv */
//	8010678C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80106798: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	8010679C: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	801067A4: 80452D44 (lit_7977)
//	801067B0: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	801067BC: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	801067D8: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	801067E4: 80110840 (offKandelaarModel__9daAlink_cFv)
//	8010681C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80106838: 80452D20 (lit_7449)
//	80106844: 80267128 (atan2sX_Z__4cXyzCFv)
//	80106854: 80452CC0 (lit_6108)
//	80106868: 80347138 (PSVECSquareMag)
//	8010686C: 80452CC0 (lit_6108)
//	8010687C: 80452CE8 (lit_6846)
//	80106884: 80452CF0 (lit_6847)
//	801068CC: 80452CF8 (lit_6848)
//	801068D8: 80450AE0 (__float_nan)
//	801068DC: 80450AE0 (__float_nan)
//	80106948: 80450AE0 (__float_nan)
//	8010694C: 80450AE0 (__float_nan)
//	80106950: 80452FF8 (lit_28405)
//	80106970: 80425514 (l_waitBaseAnime)
//	80106974: 80425514 (l_waitBaseAnime)
//	801069B4: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardRideInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardRideInit__9daAlink_cFv.s"
}
#pragma pop

/* 801069D0-80106A38 0068+00 s=1 e=0 z=0  None .text      procBoardRide__9daAlink_cFv */
//	80106A14: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
//	80106A20: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardRide() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardRide__9daAlink_cFv.s"
}
#pragma pop

/* 80106A38-80106BCC 0194+00 s=13 e=0 z=0  None .text procBoardWaitInit__9daAlink_cFP10fopAc_ac_c
 */
//	80106A48: 803621DC (_savegpr_29)
//	80106A68: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	80106A70: 80110840 (offKandelaarModel__9daAlink_cFv)
//	80106A78: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	80106AA0: 80452CBC (lit_6041)
//	80106AA4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80106AC0: 80452CC0 (lit_6108)
//	80106AC8: 80107218 (procBoardJumpInit__9daAlink_cFfi)
//	80106AE8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80106B14: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	80106B2C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	80106B30: 8038D6BC (m__18daAlinkHIO_move_c0)
//	80106B3C: 80452CB8 (lit_6040)
//	80106B4C: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106B50: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106B6C: 80452CC0 (lit_6108)
//	80106B74: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106B78: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106B98: 80106534 (setCommonBoardAnime__9daAlink_cFi)
//	80106BB8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardWaitInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardWaitInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80106BCC-80106E88 02BC+00 s=1 e=0 z=0  None .text      procBoardWait__9daAlink_cFv */
//	80106BEC: 80105B58 (boardCommon__9daAlink_cFi)
//	80106C04: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80106C18: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80106C2C: 80106534 (setCommonBoardAnime__9daAlink_cFi)
//	80106C34: 8010658C (checkNextActionBoard__9daAlink_cFv)
//	80106C54: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
//	80106C74: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	80106C88: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	80106C8C: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	80106CA8: 800D2284 (setSwordVoiceSe__9daAlink_cFUl)
//	80106CB0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80106CCC: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	80106CD4: 80452CB0 (lit_6025)
//	80106CF0: 80452D48 (lit_8130)
//	80106D18: 80452CB0 (lit_6025)
//	80106D34: 80452D48 (lit_8130)
//	80106D48: 801075D4 (procBoardCutTurnInit__9daAlink_cFv)
//	80106D54: 801074AC (procBoardCutInit__9daAlink_cFv)
//	80106D88: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80106DAC: 80452CC0 (lit_6108)
//	80106DB4: 80452CC0 (lit_6108)
//	80106DB8: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106DBC: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106DC4: 80452CB8 (lit_6040)
//	80106DD8: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	80106DE4:
// 800AC738 (setDoubleAnimeBlendRatio__9daAlink_cFf) 	80106E00: 80452E64 (lit_14954) 	80106E14:
// 800B3250 (setDoStatus__9daAlink_cFUc) 	80106E30: 80452E64 (lit_14954) 	80106E44: 80107218
//(procBoardJumpInit__9daAlink_cFfi) 	80106E58: 80106534 (setCommonBoardAnime__9daAlink_cFi)
//	80106E64: 800AC738 (setDoubleAnimeBlendRatio__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardWait__9daAlink_cFv.s"
}
#pragma pop

/* 80106E88-80106F00 0078+00 s=1 e=0 z=0  None .text      procBoardRowInit__9daAlink_cFv */
//	80106EA0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80106EA8: 801066B8 (getBoardRowAnmSpeed__9daAlink_cFv)
//	80106EB4: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106EB8: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106EC0: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardRowInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardRowInit__9daAlink_cFv.s"
}
#pragma pop

/* 80106F00-80107060 0160+00 s=1 e=0 z=0  None .text      procBoardRow__9daAlink_cFv */
//	80106F1C: 80105B58 (boardCommon__9daAlink_cFi)
//	80106F54: 8010658C (checkNextActionBoard__9daAlink_cFv)
//	80106F68: 80452CC0 (lit_6108)
//	80106F6C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80106F7C: 80452CA4 (lit_6021)
//	80106F8C: 803650D0 (abs)
//	80106FC4: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106FC8: 8038E870 (m__19daAlinkHIO_board_c0)
//	80106FF0: 80106534 (setCommonBoardAnime__9daAlink_cFi)
//	80106FFC: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
//	80107008: 80452D74 (lit_8502)
//	8010700C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8010701C: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107020: 8038E870 (m__19daAlinkHIO_board_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardRow() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardRow__9daAlink_cFv.s"
}
#pragma pop

/* 80107060-801070DC 007C+00 s=1 e=0 z=0  None .text      procBoardTurnInit__9daAlink_cFv */
//	80107078: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80107084: 80452CC0 (lit_6108)
//	80107088: 80452CB8 (lit_6040)
//	8010708C: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107090: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107098: 80452CC4 (lit_6109)
//	8010709C: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	801070A0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 801070DC-80107218 013C+00 s=1 e=0 z=0  None .text      procBoardTurn__9daAlink_cFv */
//	801070F4: 80105B58 (boardCommon__9daAlink_cFi)
//	8010711C: 80452D88 (lit_8782)
//	80107138: 80452D2C (lit_7624)
//	80107140: 80452CB0 (lit_6025)
//	80107160: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107164: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010716C: 80452CBC (lit_6041)
//	80107170: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	80107188: 80452D44 (lit_7977)
//	8010718C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80107198: 80452D78 (lit_8676)
//	801071A4: 800B48D0 (setJumpMode__9daAlink_cFv)
//	801071C8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	801071E4: 801066EC (setBoardLandAnime__9daAlink_cFv)
//	801071F0: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardTurn__9daAlink_cFv.s"
}
#pragma pop

/* 80107218-80107300 00E8+00 s=4 e=0 z=0  None .text      procBoardJumpInit__9daAlink_cFfi */
//	80107244: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80107260: 80452CC0 (lit_6108)
//	80107264: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107268: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107278: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	80107284: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107288: 8038E870 (m__19daAlinkHIO_board_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardJumpInit(f32 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardJumpInit__9daAlink_cFfi.s"
}
#pragma pop

/* 80107300-801073D0 00D0+00 s=1 e=0 z=0  None .text      procBoardJump__9daAlink_cFv */
//	80107318: 80105B58 (boardCommon__9daAlink_cFi)
//	80107330: 8010658C (checkNextActionBoard__9daAlink_cFv)
//	8010734C: 801066EC (setBoardLandAnime__9daAlink_cFv)
//	80107358: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
//	80107380: 80452D88 (lit_8782)
//	80107394: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107398: 8038E870 (m__19daAlinkHIO_board_c0)
//	801073A8: 80452CBC (lit_6041)
//	801073AC: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardJump__9daAlink_cFv.s"
}
#pragma pop

/* 801073D0-80107418 0048+00 s=1 e=0 z=0  None .text      procBoardSubjectivityInit__9daAlink_cFv */
//	801073E8: 80106650 (commonProcBoardInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801073F0: 800CEAF4 (setSubjectMode__9daAlink_cFv)
//	801073FC: 80106534 (setCommonBoardAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 80107418-801074AC 0094+00 s=1 e=0 z=0  None .text      procBoardSubjectivity__9daAlink_cFv */
//	80107428: 803621DC (_savegpr_29)
//	80107448: 80105B58 (boardCommon__9daAlink_cFi)
//	80107468: 800CEBD8 (checkSubjectEnd__9daAlink_cFi)
//	8010747C: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
//	8010748C: 800EEF30 (setRideSubjectAngle__9daAlink_cFs)
//	80107498: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 801074AC-8010755C 00B0+00 s=3 e=0 z=0  None .text      procBoardCutInit__9daAlink_cFv */
//	801074C8: 80106650 (commonProcBoardInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801074D8: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	801074E8: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	801074EC: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	801074F4: 80452CB0 (lit_6025)
//	80107524: 80106534 (setCommonBoardAnime__9daAlink_cFi)
//	80107534: 800D1E1C (setCutDash__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardCutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardCutInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010755C-801075D4 0078+00 s=1 e=0 z=0  None .text      procBoardCut__9daAlink_cFv */
//	80107574: 80105B58 (boardCommon__9daAlink_cFi)
//	8010758C: 800D2684 (checkCutTurnCharge__9daAlink_cFv)
//	80107594: 8010658C (checkNextActionBoard__9daAlink_cFv)
//	801075A4: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	801075B8: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardCut() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardCut__9daAlink_cFv.s"
}
#pragma pop

/* 801075D4-80107744 0170+00 s=2 e=0 z=0  None .text      procBoardCutTurnInit__9daAlink_cFv */
//	801075EC: 80106650 (commonProcBoardInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801075F8: 8038E870 (m__19daAlinkHIO_board_c0)
//	801075FC: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107604: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	80107608:
//8038E870 (m__19daAlinkHIO_board_c0) 	8010760C: 8038E870 (m__19daAlinkHIO_board_c0) 	80107614:
//80452CC4 (lit_6109) 	80107634: 80439A20 (sincosTable___5JMath) 	80107638: 80439A20
//(sincosTable___5JMath) 	8010769C: 800B48D0 (setJumpMode__9daAlink_cFv) 	801076AC: 80452CC0
//(lit_6108) 	801076CC: 800D1430 (resetCombo__9daAlink_cFi) 	801076D0: 8038DB84
//(m__21daAlinkHIO_cutTurn_c0) 	801076D4: 8038DB84 (m__21daAlinkHIO_cutTurn_c0) 	801076E0: 80452C98
//(lit_5943) 	801076FC: 800D0F90 (initCutTurnAt__9daAlink_cFfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardCutTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardCutTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 80107744-80107900 01BC+00 s=1 e=0 z=0  None .text      procBoardCutTurn__9daAlink_cFv */
//	80107760: 80105B58 (boardCommon__9daAlink_cFi)
//	8010777C: 80452D24 (lit_7450)
//	8010778C: 80452D48 (lit_8130)
//	801077B0: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	801077C8: 80452D78 (lit_8676)
//	801077CC: 80270740 (cLib_chaseF__FPfff)
//	801077D8: 8026F708 (SetR__8cM3dGSphFf)
//	80107810: 801066EC (setBoardLandAnime__9daAlink_cFv)
//	8010781C: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
//	80107828: 80452CC4 (lit_6109)
//	80107840: 80439A20 (sincosTable___5JMath)
//	80107844: 80439A20 (sincosTable___5JMath)
//	80107860: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107864: 8038E870 (m__19daAlinkHIO_board_c0)
//	80107890: 800B48D0 (setJumpMode__9daAlink_cFv)
//	801078C8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801078D8: 80452CC0 (lit_6108)
//	801078E0: 80107218 (procBoardJumpInit__9daAlink_cFfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardCutTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardCutTurn__9daAlink_cFv.s"
}
#pragma pop

/* 80107900-801083C8 0AC8+00 s=1 e=0 z=0  None .text      draw__Q29daAlink_c14hsChainShape_cFv */
//	80107948: 803621BC (_savegpr_21)
//	80107964: 80434AC8 (j3dSys)
//	80107968: 80434AC8 (j3dSys)
//	80107984: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	801079A0: 80315300 (loadPreDrawSetting__8J3DShapeCFv)
//	801079D4: 8035D960 (GXSetChanAmbColor)
//	801079D8: 80450608 (g_whiteColor)
//	801079E8: 8035DA48 (GXSetChanMatColor)
//	801079EC: 801A75C0 (dKy_setLight_again__Fv)
//	801079F4: 801A8650 (dKy_GxFog_tevstr_set__FP12dKy_tevstr_c)
//	80107A00: 8035D8E4 (GXLoadLightObjImm)
//	80107A1C: 80434AC8 (j3dSys)
//	80107A20: 80434AC8 (j3dSys)
//	80107A24: 803DD470 (now__14mDoMtx_stack_c)
//	80107A28: 803DD470 (now__14mDoMtx_stack_c)
//	80107A40: 803464B0 (PSMTXCopy)
//	80107A48: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	80107A50: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80107A54: 80452D14 (lit_7307)
//	80107A60: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80107A6C: 8036024C (GXLoadPosMtxImm)
//	80107A78: 8036029C (GXLoadNrmMtxImm)
//	80107AA8: 80452CC0 (lit_6108)
//	80107AAC: 80452D3C (lit_7808)
//	80107AD4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80107B14: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80107B20: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80107B24: 803DD470 (now__14mDoMtx_stack_c)
//	80107B28: 803DD470 (now__14mDoMtx_stack_c)
//	80107B2C: 8038FB44 (l_ironBallChainVec)
//	80107B30: 8038FB44 (l_ironBallChainVec)
//	80107B38: 80346D6C (PSMTXMultVec)
//	80107B48: 803470B4 (PSVECSubtract)
//	80107B6C: 80347138 (PSVECSquareMag)
//	80107B7C: 80452CE8 (lit_6846)
//	80107B84: 80452CF0 (lit_6847)
//	80107BCC: 80452CF8 (lit_6848)
//	80107BD8: 80450AE0 (__float_nan)
//	80107BDC: 80450AE0 (__float_nan)
//	80107C48: 80450AE0 (__float_nan)
//	80107C4C: 80450AE0 (__float_nan)
//	80107C80: 80452CC0 (lit_6108)
//	80107C94: 80347138 (PSVECSquareMag)
//	80107C98: 80452CC0 (lit_6108)
//	80107CA8: 80452CE8 (lit_6846)
//	80107CB0: 80452CF0 (lit_6847)
//	80107CF8: 80452CF8 (lit_6848)
//	80107D04: 80450AE0 (__float_nan)
//	80107D08: 80450AE0 (__float_nan)
//	80107D74: 80450AE0 (__float_nan)
//	80107D78: 80450AE0 (__float_nan)
//	80107D7C: 80452CB8 (lit_6040)
//	80107D90: 80267128 (atan2sX_Z__4cXyzCFv)
//	80107D9C: 80267150 (atan2sY_XZ__4cXyzCFv)
//	80107DAC: 80452D30 (lit_7625)
//	80107DB4: 80266B84 (__ml__4cXyzCFf)
//	80107DD0: 80434AC8 (j3dSys)
//	80107DD4: 80434AC8 (j3dSys)
//	80107DD8: 803DD470 (now__14mDoMtx_stack_c)
//	80107DDC: 803DD470 (now__14mDoMtx_stack_c)
//	80107DE8: 80452D30 (lit_7625)
//	80107DEC: 80452D3C (lit_7808)
//	80107DFC: 803464B0 (PSMTXCopy)
//	80107E04: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	80107E18: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80107E1C: 80452D14 (lit_7307)
//	80107E28: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80107E34: 8036024C (GXLoadPosMtxImm)
//	80107E40: 8036029C (GXLoadNrmMtxImm)
//	80107E64: 80347090 (PSVECAdd)
//	80107E98: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80107EB8: 80347138 (PSVECSquareMag)
//	80107EBC: 80452CC0 (lit_6108)
//	80107ECC: 80452CE8 (lit_6846)
//	80107ED4: 80452CF0 (lit_6847)
//	80107F1C: 80452CF8 (lit_6848)
//	80107F28: 80450AE0 (__float_nan)
//	80107F2C: 80450AE0 (__float_nan)
//	80107F98: 80450AE0 (__float_nan)
//	80107F9C: 80450AE0 (__float_nan)
//	80107FA8: 80452CB8 (lit_6040)
//	80107FC0: 803470D8 (PSVECScale)
//	80107FC4: 80452CC0 (lit_6108)
//	80107FE4: 80267128 (atan2sX_Z__4cXyzCFv)
//	80107FF0: 80267150 (atan2sY_XZ__4cXyzCFv)
//	80108028: 80452DAC (lit_9828)
//	80108030: 80452CC0 (lit_6108)
//	80108034: 80452DD8 (lit_11470)
//	8010803C: 80452CB0 (lit_6025)
//	80108064: 80452CBC (lit_6041)
//	8010806C: 80439A20 (sincosTable___5JMath)
//	80108070: 80439A20 (sincosTable___5JMath)
//	80108074: 803DD470 (now__14mDoMtx_stack_c)
//	80108078: 803DD470 (now__14mDoMtx_stack_c)
//	8010807C: 803919FC (hsVec)
//	80108080: 803919FC (hsVec)
//	80108084: 80434AC8 (j3dSys)
//	80108088: 80434AC8 (j3dSys)
//	80108098: 80452D3C (lit_7808)
//	801080A4: 802675E4 (cM_rad2s__Ff)
//	801080B8: 80452D3C (lit_7808)
//	801080BC: 80267674 (cM_atan2s__Fff)
//	801080D4: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	801080DC: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	801080EC: 80346D6C (PSMTXMultVec)
//	801080FC: 803464E4 (PSMTXConcat)
//	80108108: 8036024C (GXLoadPosMtxImm)
//	80108114: 8036029C (GXLoadNrmMtxImm)
//	80108170: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80108190: 80347138 (PSVECSquareMag)
//	80108194: 80452CC0 (lit_6108)
//	801081A4: 80452CE8 (lit_6846)
//	801081AC: 80452CF0 (lit_6847)
//	801081F4: 80452CF8 (lit_6848)
//	80108200: 80450AE0 (__float_nan)
//	80108204: 80450AE0 (__float_nan)
//	80108270: 80450AE0 (__float_nan)
//	80108274: 80450AE0 (__float_nan)
//	80108280: 80452CB8 (lit_6040)
//	80108298: 803470D8 (PSVECScale)
//	8010829C: 80452CC0 (lit_6108)
//	801082BC: 80267128 (atan2sX_Z__4cXyzCFv)
//	801082C8: 80267150 (atan2sY_XZ__4cXyzCFv)
//	801082DC: 80434AC8 (j3dSys)
//	801082E0: 80434AC8 (j3dSys)
//	801082E4: 803DD470 (now__14mDoMtx_stack_c)
//	801082E8: 803DD470 (now__14mDoMtx_stack_c)
//	801082F0: 80452D3C (lit_7808)
//	80108300: 803464B0 (PSMTXCopy)
//	80108308: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	80108310: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	8010831C: 8036024C (GXLoadPosMtxImm)
//	80108328: 8036029C (GXLoadNrmMtxImm)
//	80108348: 80452D3C (lit_7808)
//	8010834C: 80266B84 (__ml__4cXyzCFf)
//	8010835C: 80347090 (PSVECAdd)
//	801083B4: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::hsChainShape_c::draw() {
    nofralloc
#include "asm/d/a/d_a_alink/draw__Q29daAlink_c14hsChainShape_cFv.s"
}
#pragma pop

/* 801083C8-8010859C 01D4+00 s=1 e=0 z=0  None .text
 * hookshotAtHitCallBack__9daAlink_cFP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	801083D8: 803621D8 (_savegpr_28)
//	801083F4: 80018CE0 (fopAc_IsActor__FPv)
//	80108418: 8034739C (PSVECSquareDistance)
//	8010841C: 80452CC0 (lit_6108)
//	8010842C: 80452CE8 (lit_6846)
//	80108434: 80452CF0 (lit_6847)
//	8010847C: 80452CF8 (lit_6848)
//	80108488: 80450AE0 (__float_nan)
//	8010848C: 80450AE0 (__float_nan)
//	801084F8: 80450AE0 (__float_nan)
//	801084FC: 80450AE0 (__float_nan)
//	80108514: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	80108534: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8010853C: 80452CB8 (lit_6040)
//	8010855C: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8010857C: 80452CB8 (lit_6040)
//	80108588: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::hookshotAtHitCallBack(dCcD_GObjInf* param_0, fopAc_ac_c* param_1,
                                          dCcD_GObjInf* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/hookshotAtHitCallBack__9daAlink_cFP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop

/* 8010859C-801085BC 0020+00 s=1 e=0 z=0  None .text
 * daAlink_hookshotAtHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	801085A8: 801083C8
//(hookshotAtHitCallBack__9daAlink_cFP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_hookshotAtHitCallBack(fopAc_ac_c* param_0, dCcD_GObjInf* param_1,
                                              fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_hookshotAtHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop

/* 801085BC-80108600 0044+00 s=1 e=0 z=0  None .text      getHookshotTopPos__9daAlink_cFv */
//	801085D4: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getHookshotTopPos() {
    nofralloc
#include "asm/d/a/d_a_alink/getHookshotTopPos__9daAlink_cFv.s"
}
#pragma pop

/* 80108600-80108668 0068+00 s=1 e=0 z=0  None .text      checkHookshotReturnMode__9daAlink_cCFv */
//	80108620: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHookshotReturnMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotReturnMode__9daAlink_cCFv.s"
}
#pragma pop

/* 80108668-801086DC 0074+00 s=1 e=0 z=0  None .text checkHookshotShootReturnMode__9daAlink_cCFv
 */
//	80108688: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHookshotShootReturnMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotShootReturnMode__9daAlink_cCFv.s"
}
#pragma pop

/* 801086DC-8010871C 0040+00 s=6 e=0 z=0  None .text      resetHookshotMode__9daAlink_cFv */
//	801086F8: 800ABAE0 (initLockAt__9daAlink_cFv)
//	801086FC: 80450AE8 (__float_max)
//	80108700: 80450AE8 (__float_max)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetHookshotMode() {
    nofralloc
#include "asm/d/a/d_a_alink/resetHookshotMode__9daAlink_cFv.s"
}
#pragma pop

/* 8010871C-80108784 0068+00 s=0 e=0 z=1  None .text
 * setEnemyBombHookshot__9daAlink_cFP10fopAc_ac_c               */
//	80108744: 80108828 (cancelHookshotCarry__9daAlink_cFv)
//	80108750: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEnemyBombHookshot(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setEnemyBombHookshot__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80108784-801087B0 002C+00 s=3 e=0 z=0  None .text      checkLv7BossRoom__9daAlink_cFv */
//	80108790: 80392094 (d_a_d_a_alink__stringBase0)
//	80108794: 80392094 (d_a_d_a_alink__stringBase0)
//	8010879C: 8009DA60 (checkStageName__9daAlink_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLv7BossRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv7BossRoom__9daAlink_cFv.s"
}
#pragma pop

/* 801087B0-80108828 0078+00 s=6 e=0 z=0  None .text
 * checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo            */
//	801087C8: 804061C0 (g_dComIfG_gameInfo)
//	801087CC: 804061C0 (g_dComIfG_gameInfo)
//	801087D8: 800751F8 (ChkPolyHSStick__4dBgSFRC13cBgS_PolyInfo)
//	801087EC: 80074628 (GetBgWBasePointer__4cBgSCFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHookshotStickBG(cBgS_PolyInfo& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo.s"
}
#pragma pop

/* 80108828-80108864 003C+00 s=4 e=0 z=0  None .text      cancelHookshotCarry__9daAlink_cFv */
//	80108850: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelHookshotCarry() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelHookshotCarry__9daAlink_cFv.s"
}
#pragma pop

/* 80108864-801088A0 003C+00 s=2 e=0 z=0  None .text      changeHookshotDrawModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeHookshotDrawModel() {
    nofralloc
#include "asm/d/a/d_a_alink/changeHookshotDrawModel__9daAlink_cFv.s"
}
#pragma pop

/* 801088A0-801088C8 0028+00 s=6 e=0 z=0  None .text      checkHookshotRoofLv7Boss__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHookshotRoofLv7Boss() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotRoofLv7Boss__9daAlink_cFv.s"
}
#pragma pop

/* 801088C8-80108980 00B8+00 s=2 e=0 z=0  None .text      checkChaseHookshot__9daAlink_cFv */
//	80108934: 801089E8 (checkBossOctaIealRoom__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkChaseHookshot() {
    nofralloc
#include "asm/d/a/d_a_alink/checkChaseHookshot__9daAlink_cFv.s"
}
#pragma pop

/* 80108980-801089E8 0068+00 s=2 e=0 z=0  None .text      checkOctaIealSpecialCollect__9daAlink_cFv
 */
//	801089AC: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	801089BC: 801089E8 (checkBossOctaIealRoom__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkOctaIealSpecialCollect() {
    nofralloc
#include "asm/d/a/d_a_alink/checkOctaIealSpecialCollect__9daAlink_cFv.s"
}
#pragma pop

/* 801089E8-80108A18 0030+00 s=5 e=0 z=0  None .text      checkBossOctaIealRoom__9daAlink_cFv */
//	801089F4: 80392094 (d_a_d_a_alink__stringBase0)
//	801089F8: 80392094 (d_a_d_a_alink__stringBase0)
//	80108A00: 8009DA60 (checkStageName__9daAlink_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBossOctaIealRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBossOctaIealRoom__9daAlink_cFv.s"
}
#pragma pop

/* 80108A18-80108A3C 0024+00 s=19 e=0 z=0  None .text      checkHookshotWait__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHookshotWait() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotWait__9daAlink_cCFv.s"
}
#pragma pop

/* 80108A3C-80108A90 0054+00 s=1 e=0 z=0  None .text      setHookshotCatchNow__9daAlink_cFv */
//	80108A50: 80452CC0 (lit_6108)
//	80108A58: 80452CB8 (lit_6040)
//	80108A64: 804061C0 (g_dComIfG_gameInfo)
//	80108A68: 804061C0 (g_dComIfG_gameInfo)
//	80108A7C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotCatchNow() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotCatchNow__9daAlink_cFv.s"
}
#pragma pop

/* 80108A90-80108B34 00A4+00 s=1 e=0 z=0  None .text setHookshotCarryOffset__9daAlink_cFUiPC4cXyz
 */
//	80108A90: 804061C0 (g_dComIfG_gameInfo)
//	80108A94: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotCarryOffset(unsigned int param_0, cXyz const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotCarryOffset__9daAlink_cFUiPC4cXyz.s"
}
#pragma pop

/* 80108B34-80108DB4 0280+00 s=1 e=0 z=0  None .text      setHookshotModel__9daAlink_cFv */
//	80108B44: 803621DC (_savegpr_29)
//	80108B54: 8015F068 (loadDataIdx__14daPy_anmHeap_cFUs)
//	80108B60: 800A3C8C (setItemHeap__9daAlink_cFv)
//	80108B78: 80452CB8 (lit_6040)
//	80108B88: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	80108B98: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	80108BAC: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80108BC0: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	80108BD4: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80108BF0: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80108C0C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80108C20: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	80108C2C: 802CEC4C (__nw__FUl)
//	80108C38: 803CD97C (__vt__9J3DPacket)
//	80108C3C: 803CD97C (__vt__9J3DPacket)
//	80108C54: 803B35EC (__vt__Q29daAlink_c14hsChainShape_c)
//	80108C58: 803B35EC (__vt__Q29daAlink_c14hsChainShape_c)
//	80108C68: 802CEC4C (__nw__FUl)
//	80108C74: 802BE844 (__ct__16Z2SoundObjSimpleFv)
//	80108C84: 802CEC4C (__nw__FUl)
//	80108C90: 80077F5C (__ct__14dBgS_ObjLinChkFv)
//	80108CC8: 800BFF04 (loadAram__9daAlink_cFUsUl)
//	80108CDC: 80452CB8 (lit_6040)
//	80108CEC: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	80108CF4: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	80108CFC: 801086DC (resetHookshotMode__9daAlink_cFv)
//	80108D44: 80452D3C (lit_7808)
//	80108D70: 8010859C
//(daAlink_hookshotAtHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80108D74: 8010859C
//(daAlink_hookshotAtHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80108DA0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotModel__9daAlink_cFv.s"
}
#pragma pop

/* 80108DB4-80108EEC 0138+00 s=6 e=0 z=0  None .text      setHookshotSight__9daAlink_cFv */
//	80108DC8: 80108784 (checkLv7BossRoom__9daAlink_cFv)
//	80108DD4: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80108DD8: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80108DE4: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80108DE8: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80108DF8: 800BF500 (checkSightLine__9daAlink_cFfP4cXyz)
//	80108E5C: 80452CC0 (lit_6108)
//	80108E70: 801087B0 (checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo)
//	80108E8C: 80126710 (onLockFlg__15daAlink_sight_cFv)
//	80108ECC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	80108ED0: 80452CBC (lit_6041)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotSight() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotSight__9daAlink_cFv.s"
}
#pragma pop

/* 80108EEC-80108F64 0078+00 s=1 e=0 z=0  None .text      cancelHookshotShot__9daAlink_cFv */
//	80108F04: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelHookshotShot() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelHookshotShot__9daAlink_cFv.s"
}
#pragma pop

/* 80108F64-8010903C 00D8+00 s=4 e=0 z=0  None .text      cancelHookshotMove__9daAlink_cFv */
//	80108F74: 803621DC (_savegpr_29)
//	80108FD4: 800737E4 (LockonTruth__12dAttention_cFv)
//	80108FFC: 800B2604 (itemButton__9daAlink_cFv)
//	80109010: 80452CBC (lit_6041)
//	80109014: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80109028: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelHookshotMove() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelHookshotMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010903C-80109070 0034+00 s=2 e=0 z=0  None .text
 * checkHookshotReadyMaterialOffMode__9daAlink_cCFv             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHookshotReadyMaterialOffMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotReadyMaterialOffMode__9daAlink_cCFv.s"
}
#pragma pop

/* 80109070-801090EC 007C+00 s=5 e=0 z=0  None .text      setHookshotReadyMaterial__9daAlink_cFv */
//	8010907C: 804061C0 (g_dComIfG_gameInfo)
//	80109080: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotReadyMaterial() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotReadyMaterial__9daAlink_cFv.s"
}
#pragma pop

/* 801090EC-80109170 0084+00 s=8 e=0 z=0  None .text      initHookshotUpperAnimeSpeed__9daAlink_cFi
 */
//	80109108: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010911C: 80452CC0 (lit_6108)
//	8010913C: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109140: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109148: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initHookshotUpperAnimeSpeed(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/initHookshotUpperAnimeSpeed__9daAlink_cFi.s"
}
#pragma pop

/* 80109170-801091E4 0074+00 s=4 e=0 z=0  None .text      initHookshotReady__9daAlink_cFv */
//	8010918C: 80452CC0 (lit_6108)
//	80109198: 80452CB8 (lit_6040)
//	801091A4: 804061C0 (g_dComIfG_gameInfo)
//	801091A8: 804061C0 (g_dComIfG_gameInfo)
//	801091BC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	801091C8: 80452CBC (lit_6041)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initHookshotReady() {
    nofralloc
#include "asm/d/a/d_a_alink/initHookshotReady__9daAlink_cFv.s"
}
#pragma pop

/* 801091E4-80109284 00A0+00 s=1 e=0 z=0  None .text      setHookshotReadyAnime__9daAlink_cFv */
//	801091F4: 803621DC (_savegpr_29)
//	80109208: 800737E4 (LockonTruth__12dAttention_cFv)
//	80109238: 80452CC0 (lit_6108)
//	80109240: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109244: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109254: 80452CC4 (lit_6109)
//	80109258: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	80109268: 80109170 (initHookshotReady__9daAlink_cFv)
//	80109270: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80109284-801095C8 0344+00 s=3 e=0 z=0  None .text      checkUpperItemActionHookshot__9daAlink_cFv
 */
//	80109294: 803621DC (_savegpr_29)
//	8010929C: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	801092A8: 80450AE8 (__float_max)
//	801092AC: 80450AE8 (__float_max)
//	801092C4: 800B2604 (itemButton__9daAlink_cFv)
//	801092E0: 800B8930 (checkReadyItem__9daAlink_cFv)
//	801092FC: 80452CBC (lit_6041)
//	80109308: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	80109310: 800ABB28 (cancelLockAt__9daAlink_cFv)
//	80109370: 80452CC0 (lit_6108)
//	80109374: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	8010939C: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	801093A0: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	801093A4: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	801093B4:
// 80452CC0 (lit_6108) 	801093C0: 80452CC0 (lit_6108) 	801093F4: 8038E9C0
// (m__22daAlinkHIO_hookshot_c0) 	801093F8: 8038E9C0 (m__22daAlinkHIO_hookshot_c0) 	801093FC: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010940C:
//80452CC0 (lit_6108) 	80109414: 80452CB8 (lit_6040) 	80109420: 804061C0 (g_dComIfG_gameInfo)
//80109424: 804061C0 (g_dComIfG_gameInfo) 	80109438: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
// 80109470: 800737E4 (LockonTruth__12dAttention_cFv) 	801094A8: 80452CC4 (lit_6109) 	801094AC:
// 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf) 	801094B0: 804061C0
//(g_dComIfG_gameInfo) 	801094B4: 804061C0 (g_dComIfG_gameInfo) 	801094D0: 800B8930
//(checkReadyItem__9daAlink_cFv) 	801094E0: 800B2604 (itemButton__9daAlink_cFv) 	801094F0: 80109170
//(initHookshotReady__9daAlink_cFv) 	80109504: 800B8930 (checkReadyItem__9daAlink_cFv) 	80109514:
//800B2634 (itemTrigger__9daAlink_cFv) 	8010952C: 801095C8 (checkNextActionHookshot__9daAlink_cFv)
//	80109544: 801095C8 (checkNextActionHookshot__9daAlink_cFv)
//	80109578: 80109AAC (setHookshotTopPosFly__9daAlink_cFv)
//	80109588: 8010BD90 (procHookshotFlyInit__9daAlink_cFv)
//	801095AC: 800B71EC (cancelUpperItemReadyAnime__9daAlink_cFi)
//	801095B4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionHookshot() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionHookshot__9daAlink_cFv.s"
}
#pragma pop

/* 801095C8-801097A0 01D8+00 s=7 e=0 z=0  None .text      checkNextActionHookshot__9daAlink_cFv */
//	801095D8: 803621DC (_savegpr_29)
//	80109608: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010964C: 801091E4 (setHookshotReadyAnime__9daAlink_cFv)
//	80109654: 800B7168 (setFastShotTimer__9daAlink_cFv)
//	80109664: 800737E4 (LockonTruth__12dAttention_cFv)
//	8010969C: 800737E4 (LockonTruth__12dAttention_cFv)
//	801096F8: 800F7208 (procCanoeHookshotSubjectInit__9daAlink_cFv)
//	80109704: 800F26F4 (procHorseHookshotSubjectInit__9daAlink_cFv)
//	80109718: 80104C50 (procSwimHookshotSubjectInit__9daAlink_cFv)
//	80109724: 8010BAA8 (procHookshotSubjectInit__9daAlink_cFv)
//	80109758: 800F731C (procCanoeHookshotMoveInit__9daAlink_cFv)
//	80109764: 800F2824 (procHorseHookshotMoveInit__9daAlink_cFv)
//	80109778: 80104EB8 (procSwimHookshotMoveInit__9daAlink_cFv)
//	80109784: 8010BC08 (procHookshotMoveInit__9daAlink_cFv)
//	8010978C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionHookshot() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionHookshot__9daAlink_cFv.s"
}
#pragma pop

/* 801097A0-80109890 00F0+00 s=2 e=0 z=0  None .text      setHookshotReturnEnd__9daAlink_cFv */
//	801097B0: 803621DC (_savegpr_29)
//	801097B8: 801086DC (resetHookshotMode__9daAlink_cFv)
//	801097C4: 800B7190 (cancelItemUseQuake__9daAlink_cFi)
//	801097F0: 80452CB8 (lit_6040)
//	801097FC: 80452CC4 (lit_6109)
//	80109808: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	80109828: 800737E4 (LockonTruth__12dAttention_cFv)
//	80109854: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109858: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109864: 80452CC0 (lit_6108)
//	80109868: 80452CC4 (lit_6109)
//	8010986C: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	8010987C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotReturnEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotReturnEnd__9daAlink_cFv.s"
}
#pragma pop

/* 80109890-80109AAC 021C+00 s=3 e=0 z=0  None .text      setHookshotHangMoveBGCollect__9daAlink_cFv
 */
//	801098A8: 803621DC (_savegpr_29)
//	801098F0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	801098F8: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	801098FC: 803DD470 (now__14mDoMtx_stack_c)
//	80109900: 803DD470 (now__14mDoMtx_stack_c)
//	8010990C: 80346D6C (PSMTXMultVec)
//	8010991C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010992C: 80347090 (PSVECAdd)
//	80109960: 804061C0 (g_dComIfG_gameInfo)
//	80109964: 804061C0 (g_dComIfG_gameInfo)
//	80109974: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	80109988: 801087B0 (checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo)
//	801099A4: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	801099C8: 80075880 (MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	801099DC: 802673F4 (__ct__5csXyzFsss)
//	801099F8: 80075880 (MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80109A0C: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	80109A24: 80074618 (GetActorPointer__4cBgSCFi)
//	80109A3C: 80101874 (getHangPos__13daObjSwHang_cFv)
//	80109A70: 80074618 (GetActorPointer__4cBgSCFi)
//	80109A98: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotHangMoveBGCollect() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotHangMoveBGCollect__9daAlink_cFv.s"
}
#pragma pop

/* 80109AAC-80109BDC 0130+00 s=2 e=0 z=0  None .text      setHookshotTopPosFly__9daAlink_cFv */
//	80109ABC: 803621DC (_savegpr_29)
//	80109AEC: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80109AF4: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80109AF8: 803DD470 (now__14mDoMtx_stack_c)
//	80109AFC: 803DD470 (now__14mDoMtx_stack_c)
//	80109B08: 80346D6C (PSMTXMultVec)
//	80109B1C: 804061C0 (g_dComIfG_gameInfo)
//	80109B20: 804061C0 (g_dComIfG_gameInfo)
//	80109B30: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	80109B44: 801087B0 (checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo)
//	80109B78: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	80109B94: 802673F4 (__ct__5csXyzFsss)
//	80109BB0: 80075880 (MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80109BC8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotTopPosFly() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotTopPosFly__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80425628-80425634 000C+00 s=0 e=0 z=0  None .bss       @4421 */
u8 lit_4421[12];

/* 80425634-80425640 000C+00 s=2 e=0 z=0  None .bss       l_wolfRopeBaseAnime */
static f32 l_wolfRopeBaseAnime[3];

/* 80425640-8042564C 000C+00 s=0 e=0 z=0  None .bss       @14255 */
u8 lit_14255[12];

/* 8042564C-80425658 000C+00 s=0 e=0 z=0  None .bss       grabCarryOffset0$14254 */
u8 data_8042564C[12];

/* 80425658-80425664 000C+00 s=0 e=0 z=0  None .bss       @14259 */
u8 lit_14259[12];

/* 80425664-80425670 000C+00 s=0 e=0 z=0  None .bss       grabCarryOffset1$14258 */
u8 data_80425664[12];

/* 80425670-8042567C 000C+00 s=0 e=0 z=0  None .bss       @14263 */
u8 lit_14263[12];

/* 8042567C-80425688 000C+00 s=0 e=0 z=0  None .bss       grabCarryOffset2$14262 */
u8 data_8042567C[12];

/* 80425688-80425694 000C+00 s=0 e=0 z=0  None .bss       @14267 */
u8 lit_14267[12];

/* 80425694-804256A0 000C+00 s=0 e=0 z=0  None .bss       grabCarryOffset3$14266 */
u8 data_80425694[12];

/* 804256A0-804256AC 000C+00 s=0 e=0 z=0  None .bss       @29722 */
u8 lit_29722[12];

/* 804256AC-804256B8 000C+00 s=1 e=0 z=0  None .bss       l_hookSnowSandHitScale */
static u8 l_hookSnowSandHitScale[12];

/* 80109BDC-8010B2DC 1700+00 s=1 e=0 z=0  None .text      setHookshotPos__9daAlink_cFv */
//	80109C04: 803621CC (_savegpr_25)
//	80109C24: 803DD470 (now__14mDoMtx_stack_c)
//	80109C28: 803DD470 (now__14mDoMtx_stack_c)
//	80109C2C: 803464B0 (PSMTXCopy)
//	80109C30: 80452D6C (lit_8473)
//	80109C34: 80452CB8 (lit_6040)
//	80109C3C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80109C40: 803DD470 (now__14mDoMtx_stack_c)
//	80109C44: 803DD470 (now__14mDoMtx_stack_c)
//	80109C54: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	80109C70: 803DD470 (now__14mDoMtx_stack_c)
//	80109C74: 803DD470 (now__14mDoMtx_stack_c)
//	80109C7C: 803464B0 (PSMTXCopy)
//	80109C98: 803DD470 (now__14mDoMtx_stack_c)
//	80109C9C: 803DD470 (now__14mDoMtx_stack_c)
//	80109CA0: 803464B0 (PSMTXCopy)
//	80109CA4: 80452D6C (lit_8473)
//	80109CA8: 80452CC0 (lit_6108)
//	80109CAC: 80452CB8 (lit_6040)
//	80109CB0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80109CB4: 803DD470 (now__14mDoMtx_stack_c)
//	80109CB8: 803DD470 (now__14mDoMtx_stack_c)
//	80109CC8: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	80109CE4: 803DD470 (now__14mDoMtx_stack_c)
//	80109CE8: 803DD470 (now__14mDoMtx_stack_c)
//	80109CF0: 803464B0 (PSMTXCopy)
//	80109D0C: 80452CB8 (lit_6040)
//	80109D24: 80452CB0 (lit_6025)
//	80109D6C: 80452CB0 (lit_6025)
//	80109DAC: 80452CB8 (lit_6040)
//	80109DBC: 80452CC0 (lit_6108)
//	80109DD0: 80452CB0 (lit_6025)
//	80109E0C: 80452CC0 (lit_6108)
//	80109E18: 80452D48 (lit_8130)
//	80109E6C: 801086DC (resetHookshotMode__9daAlink_cFv)
//	80109E70: 80452CC0 (lit_6108)
//	80109E80: 80452DA0 (lit_9054)
//	80109EAC: 80452CB8 (lit_6040)
//	80109EC4: 80452CB0 (lit_6025)
//	80109F00: 80452CC0 (lit_6108)
//	80109F14: 80452CC0 (lit_6108)
//	80109F18: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	80109F38: 80391A08 (hookRoot)
//	80109F3C: 80391A08 (hookRoot)
//	80109F44: 80346D6C (PSMTXMultVec)
//	80109F50: 80391A08 (hookRoot)
//	80109F54: 80391A08 (hookRoot)
//	80109F5C: 80346D6C (PSMTXMultVec)
//	80109F84: 80108784 (checkLv7BossRoom__9daAlink_cFv)
//	80109F90: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109F94: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109FA8: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109FAC: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109FD4: 80108784 (checkLv7BossRoom__9daAlink_cFv)
//	80109FE0: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109FE4: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109FF0: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	80109FF4: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010A010: 8034739C (PSVECSquareDistance)
//	8010A014: 80452CC0 (lit_6108)
//	8010A024: 80452CE8 (lit_6846)
//	8010A02C: 80452CF0 (lit_6847)
//	8010A074: 80452CF8 (lit_6848)
//	8010A080: 80450AE0 (__float_nan)
//	8010A084: 80450AE0 (__float_nan)
//	8010A0F0: 80450AE0 (__float_nan)
//	8010A0F4: 80450AE0 (__float_nan)
//	8010A154: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	8010A164: 801097A0 (setHookshotReturnEnd__9daAlink_cFv)
//	8010A178: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010A198: 80267150 (atan2sY_XZ__4cXyzCFv)
//	8010A1A4: 80267128 (atan2sX_Z__4cXyzCFv)
//	8010A1E8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010A214: 80108828 (cancelHookshotCarry__9daAlink_cFv)
//	8010A220: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	8010A228: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010A2A4: 800BB084 (getBodyAngleXAtnActor__9daAlink_cFi)
//	8010A2B0: 80270E24 (cLib_distanceAngleS__Fss)
//	8010A2C4: 800BB020 (getBodyAngleXBasePos__9daAlink_cFP4cXyz)
//	8010A2CC: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8010A2D0: 803DD470 (now__14mDoMtx_stack_c)
//	8010A2D4: 803DD470 (now__14mDoMtx_stack_c)
//	8010A2E4: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8010A2E8: 803DD470 (now__14mDoMtx_stack_c)
//	8010A2EC: 803DD470 (now__14mDoMtx_stack_c)
//	8010A2FC: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8010A300: 803DD470 (now__14mDoMtx_stack_c)
//	8010A304: 803DD470 (now__14mDoMtx_stack_c)
//	8010A314: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8010A330: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8010A334: 803DD470 (now__14mDoMtx_stack_c)
//	8010A338: 803DD470 (now__14mDoMtx_stack_c)
//	8010A344: 80346D6C (PSMTXMultVec)
//	8010A354: 803DD470 (now__14mDoMtx_stack_c)
//	8010A358: 803DD470 (now__14mDoMtx_stack_c)
//	8010A368: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	8010A36C: 803DD470 (now__14mDoMtx_stack_c)
//	8010A370: 803DD470 (now__14mDoMtx_stack_c)
//	8010A374: 80430D3C (BaseZ__4cXyz)
//	8010A378: 80430D3C (BaseZ__4cXyz)
//	8010A380: 80346D6C (PSMTXMultVec)
//	8010A3F0: 803DD470 (now__14mDoMtx_stack_c)
//	8010A3F4: 803DD470 (now__14mDoMtx_stack_c)
//	8010A3F8: 803464B0 (PSMTXCopy)
//	8010A3FC: 80391A08 (hookRoot)
//	8010A400: 80391A08 (hookRoot)
//	8010A41C: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	8010A438: 803DD470 (now__14mDoMtx_stack_c)
//	8010A43C: 803DD470 (now__14mDoMtx_stack_c)
//	8010A49C: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	8010A4B8: 80452CC0 (lit_6108)
//	8010A504: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8010A514: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010A534: 80108A3C (setHookshotCatchNow__9daAlink_cFv)
//	8010A564: 803DD470 (now__14mDoMtx_stack_c)
//	8010A568: 803DD470 (now__14mDoMtx_stack_c)
//	8010A578: 8000C474 (mDoMtx_ZrotS__FPA4_fs)
//	8010A57C: 803DD470 (now__14mDoMtx_stack_c)
//	8010A580: 803DD470 (now__14mDoMtx_stack_c)
//	8010A590: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8010A594: 803DD470 (now__14mDoMtx_stack_c)
//	8010A598: 803DD470 (now__14mDoMtx_stack_c)
//	8010A5A8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8010A5AC: 803DD470 (now__14mDoMtx_stack_c)
//	8010A5B0: 803DD470 (now__14mDoMtx_stack_c)
//	8010A5BC: 80346E4C (PSMTXMultVecSR)
//	8010A5E0: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	8010A5EC: 80452CC0 (lit_6108)
//	8010A5F4: 80452CB8 (lit_6040)
//	8010A600: 804061C0 (g_dComIfG_gameInfo)
//	8010A604: 804061C0 (g_dComIfG_gameInfo)
//	8010A618: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8010A628: 80452CC0 (lit_6108)
//	8010A630: 80452CB8 (lit_6040)
//	8010A63C: 804061C0 (g_dComIfG_gameInfo)
//	8010A640: 804061C0 (g_dComIfG_gameInfo)
//	8010A654: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8010A660: 801088C8 (checkChaseHookshot__9daAlink_cFv)
//	8010A67C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010A6A0: 80347194 (PSVECDotProduct)
//	8010A6A4: 80452CC0 (lit_6108)
//	8010A6D4: 80266F48 (normalizeZP__4cXyzFv)
//	8010A6DC: 80267150 (atan2sY_XZ__4cXyzCFv)
//	8010A6E8: 80267128 (atan2sX_Z__4cXyzCFv)
//	8010A6FC: 80266B84 (__ml__4cXyzCFf)
//	8010A70C: 80347090 (PSVECAdd)
//	8010A728: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010A738: 80347090 (PSVECAdd)
//	8010A748: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010A768: 80347138 (PSVECSquareMag)
//	8010A76C: 80452CC0 (lit_6108)
//	8010A77C: 80452CE8 (lit_6846)
//	8010A784: 80452CF0 (lit_6847)
//	8010A7CC: 80452CF8 (lit_6848)
//	8010A7D8: 80450AE0 (__float_nan)
//	8010A7DC: 80450AE0 (__float_nan)
//	8010A848: 80450AE0 (__float_nan)
//	8010A84C: 80450AE0 (__float_nan)
//	8010A860: 80452CB8 (lit_6040)
//	8010A868: 803470D8 (PSVECScale)
//	8010A86C: 80452E64 (lit_14954)
//	8010A888: 80266B84 (__ml__4cXyzCFf)
//	8010A898: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8010A8C4: 8034739C (PSVECSquareDistance)
//	8010A8C8: 80452FFC (lit_30372)
//	8010A8DC: 8034739C (PSVECSquareDistance)
//	8010A8E0: 80452CB8 (lit_6040)
//	8010A94C: 80452D50 (lit_8247)
//	8010A950: 80266B84 (__ml__4cXyzCFf)
//	8010A960: 803470B4 (PSVECSubtract)
//	8010A96C: 80452E64 (lit_14954)
//	8010A970: 80266B84 (__ml__4cXyzCFf)
//	8010A980: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8010A9AC: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8010A9B0: 804061C0 (g_dComIfG_gameInfo)
//	8010A9B4: 804061C0 (g_dComIfG_gameInfo)
//	8010A9C4: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	8010A9D8: 801087B0 (checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo)
//	8010A9E8: 80108A3C (setHookshotCatchNow__9daAlink_cFv)
//	8010A9FC: 804061C0 (g_dComIfG_gameInfo)
//	8010AA00: 804061C0 (g_dComIfG_gameInfo)
//	8010AA24: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	8010AA30: 80268120 (ClearPi__13cBgS_PolyInfoFv)
//	8010AA3C: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	8010AA48: 80074B40 (ChkMoveBG_NoDABg__4dBgSFRC13cBgS_PolyInfo)
//	8010AA5C: 80074618 (GetActorPointer__4cBgSCFi)
//	8010AA6C: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8010AA88: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	8010AA90: 80452CC0 (lit_6108)
//	8010AA98: 80452CB8 (lit_6040)
//	8010AAB4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8010AAC8: 803A37C0 (__vt__8cM3dGPla)
//	8010AACC: 803A37C0 (__vt__8cM3dGPla)
//	8010AAE0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8010AB14: 80267128 (atan2sX_Z__4cXyzCFv)
//	8010AB24: 80452CC0 (lit_6108)
//	8010AB38: 80347138 (PSVECSquareMag)
//	8010AB3C: 80452CC0 (lit_6108)
//	8010AB4C: 80452CE8 (lit_6846)
//	8010AB54: 80452CF0 (lit_6847)
//	8010AB9C: 80452CF8 (lit_6848)
//	8010ABA8: 80450AE0 (__float_nan)
//	8010ABAC: 80450AE0 (__float_nan)
//	8010AC18: 80450AE0 (__float_nan)
//	8010AC1C: 80450AE0 (__float_nan)
//	8010AC24: 80267674 (cM_atan2s__Fff)
//	8010AC4C: 804061C0 (g_dComIfG_gameInfo)
//	8010AC50: 804061C0 (g_dComIfG_gameInfo)
//	8010AC6C: 804256AC (l_hookSnowSandHitScale)
//	8010AC70: 804256AC (l_hookSnowSandHitScale)
//	8010AC78: 8004D068
//(setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	8010ACB4: 804256AC (l_hookSnowSandHitScale)
//	8010ACB8: 804256AC (l_hookSnowSandHitScale)
//	8010ACC0: 8004D068
//(setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	8010ACD8: 80267674 (cM_atan2s__Fff)
//	8010ACE8: 80452CC0 (lit_6108)
//	8010ACFC: 80347138 (PSVECSquareMag)
//	8010AD00: 80452CC0 (lit_6108)
//	8010AD10: 80452CE8 (lit_6846)
//	8010AD18: 80452CF0 (lit_6847)
//	8010AD60: 80452CF8 (lit_6848)
//	8010AD6C: 80450AE0 (__float_nan)
//	8010AD70: 80450AE0 (__float_nan)
//	8010ADDC: 80450AE0 (__float_nan)
//	8010ADE0: 80450AE0 (__float_nan)
//	8010ADF0: 80267674 (cM_atan2s__Fff)
//	8010AE08: 804061C0 (g_dComIfG_gameInfo)
//	8010AE0C: 804061C0 (g_dComIfG_gameInfo)
//	8010AE28: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	8010AE2C: 803A37C0 (__vt__8cM3dGPla)
//	8010AE30: 803A37C0 (__vt__8cM3dGPla)
//	8010AE40: 80452E64 (lit_14954)
//	8010AE44: 80266B84 (__ml__4cXyzCFf)
//	8010AE54: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010AE70: 803A37C0 (__vt__8cM3dGPla)
//	8010AE74: 803A37C0 (__vt__8cM3dGPla)
//	8010AE88: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8010AE9C: 80267674 (cM_atan2s__Fff)
//	8010AEAC: 80452CC0 (lit_6108)
//	8010AEC0: 80347138 (PSVECSquareMag)
//	8010AEC4: 80452CC0 (lit_6108)
//	8010AED4: 80452CE8 (lit_6846)
//	8010AEDC: 80452CF0 (lit_6847)
//	8010AF24: 80452CF8 (lit_6848)
//	8010AF30: 80450AE0 (__float_nan)
//	8010AF34: 80450AE0 (__float_nan)
//	8010AFA0: 80450AE0 (__float_nan)
//	8010AFA4: 80450AE0 (__float_nan)
//	8010AFB4: 80267674 (cM_atan2s__Fff)
//	8010AFCC: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	8010AFE0: 80452CBC (lit_6041)
//	8010AFE4: 802C4814 (startHitItemSE__14Z2CreatureLinkFUlUlP14Z2SoundObjBasef)
//	8010AFE8: 803A37C0 (__vt__8cM3dGPla)
//	8010AFEC: 803A37C0 (__vt__8cM3dGPla)
//	8010B018: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8010B01C: 803DD470 (now__14mDoMtx_stack_c)
//	8010B020: 803DD470 (now__14mDoMtx_stack_c)
//	8010B030: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8010B044: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8010B048: 804061C0 (g_dComIfG_gameInfo)
//	8010B04C: 804061C0 (g_dComIfG_gameInfo)
//	8010B05C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	8010B074: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	8010B088: 80452C98 (lit_5943)
//	8010B090: 8001F87C (fopKyM_createWpillar__FPC4cXyzfi)
//	8010B0AC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8010B0B8: 80452CB8 (lit_6040)
//	8010B0C0: 80452CBC (lit_6041)
//	8010B0CC: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8010B0E0: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	8010B0E4: 803DD470 (now__14mDoMtx_stack_c)
//	8010B0E8: 803DD470 (now__14mDoMtx_stack_c)
//	8010B0F4: 803464B0 (PSMTXCopy)
//	8010B10C: 804061C0 (g_dComIfG_gameInfo)
//	8010B110: 804061C0 (g_dComIfG_gameInfo)
//	8010B124: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8010B128: 803DD470 (now__14mDoMtx_stack_c)
//	8010B12C: 803DD470 (now__14mDoMtx_stack_c)
//	8010B13C: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8010B140: 80452D48 (lit_8130)
//	8010B154: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8010B158: 803DD470 (now__14mDoMtx_stack_c)
//	8010B15C: 803DD470 (now__14mDoMtx_stack_c)
//	8010B16C: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8010B170: 80452D48 (lit_8130)
//	8010B18C: 80452D14 (lit_7307)
//	8010B194: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	8010B1A4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010B1C4: 80347138 (PSVECSquareMag)
//	8010B1C8: 80452CB8 (lit_6040)
//	8010B1E4: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8010B1EC: 80267128 (atan2sX_Z__4cXyzCFv)
//	8010B1F8: 80267150 (atan2sY_XZ__4cXyzCFv)
//	8010B200: 803DD470 (now__14mDoMtx_stack_c)
//	8010B204: 803DD470 (now__14mDoMtx_stack_c)
//	8010B210: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8010B228: 803DD470 (now__14mDoMtx_stack_c)
//	8010B22C: 803DD470 (now__14mDoMtx_stack_c)
//	8010B230: 803464B0 (PSMTXCopy)
//	8010B234: 80391A08 (hookRoot)
//	8010B238: 80391A08 (hookRoot)
//	8010B254: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	8010B270: 80452CC0 (lit_6108)
//	8010B280: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	8010B284: 803DD470 (now__14mDoMtx_stack_c)
//	8010B288: 803DD470 (now__14mDoMtx_stack_c)
//	8010B294: 803464B0 (PSMTXCopy)
//	8010B2C8: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotPos__9daAlink_cFv.s"
}
#pragma pop

/* 8010B2DC-8010B35C 0080+00 s=2 e=0 z=0  None .text      setHookshotRoofWaitAnime__9daAlink_cFv */
//	8010B2F0: 801088A0 (checkHookshotRoofLv7Boss__9daAlink_cFv)
//	8010B340: 80452D14 (lit_7307)
//	8010B344: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotRoofWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotRoofWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 8010B35C-8010B3AC 0050+00 s=2 e=0 z=0  None .text      setHookshotWallWaitAnime__9daAlink_cFv */
//	8010B384: 80452D14 (lit_7307)
//	8010B388: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotWallWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotWallWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 8010B3AC-8010B644 0298+00 s=2 e=0 z=0  None .text      hookshotRoofTurn__9daAlink_cFv */
//	8010B3D4: 803621DC (_savegpr_29)
//	8010B3E0: 804061C0 (g_dComIfG_gameInfo)
//	8010B3E4: 804061C0 (g_dComIfG_gameInfo)
//	8010B3F4: 80452E64 (lit_14954)
//	8010B400: 80452D2C (lit_7624)
//	8010B408: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010B40C: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010B41C: 80452CA4 (lit_6021)
//	8010B42C: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	8010B434: 80452F2C (lit_21680)
//	8010B48C: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010B490: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010B4E8: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010B4EC: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010B518: 80452D2C (lit_7624)
//	8010B58C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	8010B59C: 804061C0 (g_dComIfG_gameInfo)
//	8010B5A0: 804061C0 (g_dComIfG_gameInfo)
//	8010B5C8: 80452CC0 (lit_6108)
//	8010B5D0: 80452CB8 (lit_6040)
//	8010B5DC: 804061C0 (g_dComIfG_gameInfo)
//	8010B5E0: 804061C0 (g_dComIfG_gameInfo)
//	8010B5F4: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	8010B610: 800B7190 (cancelItemUseQuake__9daAlink_cFi)
//	8010B630: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::hookshotRoofTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/hookshotRoofTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8010B644-8010B720 00DC+00 s=3 e=0 z=0  None .text
 * initHookshotRoofWaitActor__9daAlink_cFP10fopAc_ac_c          */
//	8010B668: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8010B678: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010B694: 803DD470 (now__14mDoMtx_stack_c)
//	8010B698: 803DD470 (now__14mDoMtx_stack_c)
//	8010B6A8: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	8010B6AC: 803DD470 (now__14mDoMtx_stack_c)
//	8010B6B0: 803DD470 (now__14mDoMtx_stack_c)
//	8010B6C0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8010B6C4: 803DD470 (now__14mDoMtx_stack_c)
//	8010B6C8: 803DD470 (now__14mDoMtx_stack_c)
//	8010B6D4: 80346E4C (PSMTXMultVecSR)
//	8010B6FC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initHookshotRoofWaitActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/initHookshotRoofWaitActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 8010B720-8010B84C 012C+00 s=2 e=0 z=0  None .text      checkNextHookPoint__9daAlink_cFv */
//	8010B770: 804061C0 (g_dComIfG_gameInfo)
//	8010B774: 804061C0 (g_dComIfG_gameInfo)
//	8010B780: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	8010B794: 801087B0 (checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo)
//	8010B7C0: 8010BD90 (procHookshotFlyInit__9daAlink_cFv)
//	8010B7C8: 804061C0 (g_dComIfG_gameInfo)
//	8010B7CC: 804061C0 (g_dComIfG_gameInfo)
//	8010B7DC: 801088A0 (checkHookshotRoofLv7Boss__9daAlink_cFv)
//	8010B81C: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	8010B82C: 80452D3C (lit_7808)
//	8010B830: 800C6A48 (procFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextHookPoint() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextHookPoint__9daAlink_cFv.s"
}
#pragma pop

/* 8010B84C-8010B96C 0120+00 s=2 e=0 z=0  None .text      checkLandHookshotHang__9daAlink_cFv */
//	8010B870: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8010B874: 804061C0 (g_dComIfG_gameInfo)
//	8010B878: 804061C0 (g_dComIfG_gameInfo)
//	8010B884: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8010B890: 80109890 (setHookshotHangMoveBGCollect__9daAlink_cFv)
//	8010B8B8: 8010B720 (checkNextHookPoint__9daAlink_cFv)
//	8010B8E0: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010B8F0: 801088A0 (checkHookshotRoofLv7Boss__9daAlink_cFv)
//	8010B910: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	8010B91C: 804061C0 (g_dComIfG_gameInfo)
//	8010B920: 804061C0 (g_dComIfG_gameInfo)
//	8010B938: 8010CF6C (procHookshotRoofBootsInit__9daAlink_cFP10fopAc_ac_c)
//	8010B948: 800E2580 (setHeavyBoots__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLandHookshotHang() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLandHookshotHang__9daAlink_cFv.s"
}
#pragma pop

/* 8010B96C-8010BA6C 0100+00 s=3 e=0 z=0  None .text      commonHookshotRoofWait__9daAlink_cFv */
//	8010B980: 800B48D0 (setJumpMode__9daAlink_cFv)
//	8010B994: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	8010B9B4: 8010B720 (checkNextHookPoint__9daAlink_cFv)
//	8010B9CC: 8010B720 (checkNextHookPoint__9daAlink_cFv)
//	8010B9E0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010B9F0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8010BA1C: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8010BA20: 804061C0 (g_dComIfG_gameInfo)
//	8010BA24: 804061C0 (g_dComIfG_gameInfo)
//	8010BA30: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	8010BA40: 8010B720 (checkNextHookPoint__9daAlink_cFv)
//	8010BA4C: 8010B84C (checkLandHookshotHang__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonHookshotRoofWait() {
    nofralloc
#include "asm/d/a/d_a_alink/commonHookshotRoofWait__9daAlink_cFv.s"
}
#pragma pop

/* 8010BA6C-8010BAA8 003C+00 s=2 e=0 z=0  None .text      commonHookshotWallWait__9daAlink_cFv */
//	8010BA80: 800B48D0 (setJumpMode__9daAlink_cFv)
//	8010BA88: 8010B84C (checkLandHookshotHang__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonHookshotWallWait() {
    nofralloc
#include "asm/d/a/d_a_alink/commonHookshotWallWait__9daAlink_cFv.s"
}
#pragma pop

/* 8010BAA8-8010BB48 00A0+00 s=1 e=0 z=0  None .text      procHookshotSubjectInit__9daAlink_cFv */
//	8010BAC0: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010BAD4: 80452CC0 (lit_6108)
//	8010BAE4: 801090EC (initHookshotUpperAnimeSpeed__9daAlink_cFi)
//	8010BAF8: 80452CC0 (lit_6108)
//	8010BAFC: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010BB00: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010BB08: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8010BB0C: 804061C0 (g_dComIfG_gameInfo)
//	8010BB10: 804061C0 (g_dComIfG_gameInfo)
//	8010BB2C: 80109070 (setHookshotReadyMaterial__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010BB48-8010BC08 00C0+00 s=1 e=0 z=0  None .text      procHookshotSubject__9daAlink_cFv */
//	8010BB5C: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010BB70: 800B3250 (setDoStatus__9daAlink_cFUc)
//	8010BB7C: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	8010BB90: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	8010BBA0: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010BBB0: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	8010BBC0: 80108DB4 (setHookshotSight__9daAlink_cFv)
//	8010BBC4: 804061C0 (g_dComIfG_gameInfo)
//	8010BBC8: 804061C0 (g_dComIfG_gameInfo)
//	8010BBDC: 804061C0 (g_dComIfG_gameInfo)
//	8010BBE0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotSubject__9daAlink_cFv.s"
}
#pragma pop

/* 8010BC08-8010BCA4 009C+00 s=1 e=0 z=0  None .text      procHookshotMoveInit__9daAlink_cFv */
//	8010BC20: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010BC38: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	8010BC58: 801090EC (initHookshotUpperAnimeSpeed__9daAlink_cFi)
//	8010BC68: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010BC6C: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010BC74: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	8010BC78: 804061C0 (g_dComIfG_gameInfo)
//	8010BC7C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010BCA4-8010BD90 00EC+00 s=1 e=0 z=0  None .text      procHookshotMove__9daAlink_cFv */
//	8010BCC0: 80108F64 (cancelHookshotMove__9daAlink_cFv)
//	8010BCCC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	8010BCD8: 80452CBC (lit_6041)
//	8010BCE0: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	8010BD0C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8010BD10: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8010BD2C: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010BD40: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	8010BD4C: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
//	8010BD58: 801088C8 (checkChaseHookshot__9daAlink_cFv)
//	8010BD6C: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010BD90-8010BEF0 0160+00 s=2 e=0 z=0  None .text      procHookshotFlyInit__9daAlink_cFv */
//	8010BDA8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010BDDC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8010BDEC: 80452CC0 (lit_6108)
//	8010BDF8: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8010BDFC: 80452CC0 (lit_6108)
//	8010BE08: 804061C0 (g_dComIfG_gameInfo)
//	8010BE0C: 804061C0 (g_dComIfG_gameInfo)
//	8010BE74: 80430CF4 (Zero__4cXyz)
//	8010BE78: 80430CF4 (Zero__4cXyz)
//	8010BED4: 8010BEF0 (procHookshotFly__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotFlyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotFlyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010BEF0-8010C830 0940+00 s=2 e=0 z=0  None .text      procHookshotFly__9daAlink_cFv */
//	8010BF10: 803621C8 (_savegpr_24)
//	8010BF78: 80109AAC (setHookshotTopPosFly__9daAlink_cFv)
//	8010BF88: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010BFB4: 80267128 (atan2sX_Z__4cXyzCFv)
//	8010BFBC: 80270E24 (cLib_distanceAngleS__Fss)
//	8010BFCC: 801097A0 (setHookshotReturnEnd__9daAlink_cFv)
//	8010BFE0: 80347138 (PSVECSquareMag)
//	8010BFE4: 80452CC0 (lit_6108)
//	8010BFF4: 80452CE8 (lit_6846)
//	8010BFFC: 80452CF0 (lit_6847)
//	8010C044: 80452CF8 (lit_6848)
//	8010C050: 80450AE0 (__float_nan)
//	8010C054: 80450AE0 (__float_nan)
//	8010C0C0: 80450AE0 (__float_nan)
//	8010C0C4: 80450AE0 (__float_nan)
//	8010C0D8: 8034739C (PSVECSquareDistance)
//	8010C0DC: 80452CC0 (lit_6108)
//	8010C0EC: 80452CE8 (lit_6846)
//	8010C0F4: 80452CF0 (lit_6847)
//	8010C13C: 80452CF8 (lit_6848)
//	8010C148: 80450AE0 (__float_nan)
//	8010C14C: 80450AE0 (__float_nan)
//	8010C1B8: 80450AE0 (__float_nan)
//	8010C1BC: 80450AE0 (__float_nan)
//	8010C1C0: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010C1C4: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010C1E8: 801097A0 (setHookshotReturnEnd__9daAlink_cFv)
//	8010C1FC: 803470D8 (PSVECScale)
//	8010C21C: 80452D2C (lit_7624)
//	8010C244: 80347090 (PSVECAdd)
//	8010C250: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	8010C278: 800B2604 (itemButton__9daAlink_cFv)
//	8010C2C0: 80452CC0 (lit_6108)
//	8010C2C8: 80452CB8 (lit_6040)
//	8010C2D4: 804061C0 (g_dComIfG_gameInfo)
//	8010C2D8: 804061C0 (g_dComIfG_gameInfo)
//	8010C2EC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8010C2F8: 800FC77C (procBossBodyHangInit__9daAlink_cFP10fopAc_ac_c)
//	8010C300: 803A37C0 (__vt__8cM3dGPla)
//	8010C304: 803A37C0 (__vt__8cM3dGPla)
//	8010C318: 80392094 (d_a_d_a_alink__stringBase0)
//	8010C31C: 80392094 (d_a_d_a_alink__stringBase0)
//	8010C324: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8010C350: 804061C0 (g_dComIfG_gameInfo)
//	8010C354: 804061C0 (g_dComIfG_gameInfo)
//	8010C364: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	8010C37C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8010C388: 802681FC (cBgW_CheckBRoof__Ff)
//	8010C398: 801087B0 (checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo)
//	8010C3C8: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	8010C3F0: 80452CC0 (lit_6108)
//	8010C3F8: 80452CB8 (lit_6040)
//	8010C404: 804061C0 (g_dComIfG_gameInfo)
//	8010C408: 804061C0 (g_dComIfG_gameInfo)
//	8010C41C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8010C420: 803A37C0 (__vt__8cM3dGPla)
//	8010C424: 803A37C0 (__vt__8cM3dGPla)
//	8010C440: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010C468: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	8010C48C: 80452CC0 (lit_6108)
//	8010C49C: 80266F48 (normalizeZP__4cXyzFv)
//	8010C4A4: 80452DBC (lit_10042)
//	8010C4E0: 80452DBC (lit_10042)
//	8010C4F0: 80452D3C (lit_7808)
//	8010C520: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8010C524: 804061C0 (g_dComIfG_gameInfo)
//	8010C528: 804061C0 (g_dComIfG_gameInfo)
//	8010C534: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8010C53C: 80452DE0 (lit_11673)
//	8010C56C: 800B48D0 (setJumpMode__9daAlink_cFv)
//	8010C584: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	8010C59C: 80452D3C (lit_7808)
//	8010C5A0: 800C6A48 (procFallInit__9daAlink_cFif)
//	8010C5DC: 8010C830 (procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci)
//	8010C5EC: 804061C0 (g_dComIfG_gameInfo)
//	8010C5F0: 804061C0 (g_dComIfG_gameInfo)
//	8010C5FC: 80074D5C (GetMonkeyBarsCode__4dBgSFRC13cBgS_PolyInfo)
//	8010C608: 803DD470 (now__14mDoMtx_stack_c)
//	8010C60C: 803DD470 (now__14mDoMtx_stack_c)
//	8010C61C: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	8010C620: 803DD470 (now__14mDoMtx_stack_c)
//	8010C624: 803DD470 (now__14mDoMtx_stack_c)
//	8010C628: 80430D3C (BaseZ__4cXyz)
//	8010C62C: 80430D3C (BaseZ__4cXyz)
//	8010C634: 80346D6C (PSMTXMultVec)
//	8010C640: 80452E64 (lit_14954)
//	8010C644: 80266B84 (__ml__4cXyzCFf)
//	8010C654: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8010C680: 80100A10 (procRoofHangStartInit__9daAlink_cFRC13cBgS_PolyInfoRC4cXyzi)
//	8010C6A8: 8010C830 (procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci)
//	8010C6D0: 80452CA4 (lit_6021)
//	8010C6E0: 80267128 (atan2sX_Z__4cXyzCFv)
//	8010C6F4: 8010D174 (procHookshotWallWaitInit__9daAlink_cFisi)
//	8010C704: 80452D3C (lit_7808)
//	8010C708: 800C6A48 (procFallInit__9daAlink_cFif)
//	8010C73C: 80452CC0 (lit_6108)
//	8010C744: 80452CB8 (lit_6040)
//	8010C750: 804061C0 (g_dComIfG_gameInfo)
//	8010C754: 804061C0 (g_dComIfG_gameInfo)
//	8010C768: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8010C76C: 803A37C0 (__vt__8cM3dGPla)
//	8010C770: 803A37C0 (__vt__8cM3dGPla)
//	8010C788: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8010C7A8: 80267150 (atan2sY_XZ__4cXyzCFv)
//	8010C7C0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8010C7C8: 80267128 (atan2sX_Z__4cXyzCFv)
//	8010C7E0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8010C81C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotFly() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotFly__9daAlink_cFv.s"
}
#pragma pop

/* 8010C830-8010C9F4 01C4+00 s=4 e=0 z=0  None .text
 * procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci         */
//	8010C840: 803621D8 (_savegpr_28)
//	8010C858: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010C864: 803DD470 (now__14mDoMtx_stack_c)
//	8010C868: 803DD470 (now__14mDoMtx_stack_c)
//	8010C878: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	8010C87C: 803DD470 (now__14mDoMtx_stack_c)
//	8010C880: 803DD470 (now__14mDoMtx_stack_c)
//	8010C884: 80430D3C (BaseZ__4cXyz)
//	8010C888: 80430D3C (BaseZ__4cXyz)
//	8010C890: 80346D6C (PSMTXMultVec)
//	8010C89C: 80452E64 (lit_14954)
//	8010C8A0: 80266B84 (__ml__4cXyzCFf)
//	8010C8B0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8010C8D0: 80452D2C (lit_7624)
//	8010C8EC: 80452E64 (lit_14954)
//	8010C938: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010C93C: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010C944: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010C950:
//8010B2DC (setHookshotRoofWaitAnime__9daAlink_cFv) 	8010C960: 801086DC
//(resetHookshotMode__9daAlink_cFv) 	8010C970: 80452CC0 (lit_6108) 	8010C97C: 800BB770
//(setSpecialGravity__9daAlink_cFffi) 	8010C980: 80452CC0 (lit_6108) 	8010C99C: 8010B644
//(initHookshotRoofWaitActor__9daAlink_cFP10fopAc_ac_c) 	8010C9AC: 80109890
//(setHookshotHangMoveBGCollect__9daAlink_cFv) 	8010C9B0: 80453000 (lit_30895) 	8010C9BC: 804061C0
//(g_dComIfG_gameInfo) 	8010C9C0: 804061C0 (g_dComIfG_gameInfo) 	8010C9E0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofWaitInit(int param_0, fopAc_ac_c* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci.s"
}
#pragma pop

/* 8010C9F4-8010CC80 028C+00 s=1 e=0 z=0  None .text      procHookshotRoofWait__9daAlink_cFv */
//	8010CA0C: 804061C0 (g_dComIfG_gameInfo)
//	8010CA10: 804061C0 (g_dComIfG_gameInfo)
//	8010CA30: 800CEBD8 (checkSubjectEnd__9daAlink_cFi)
//	8010CA3C: 804061C0 (g_dComIfG_gameInfo)
//	8010CA40: 804061C0 (g_dComIfG_gameInfo)
//	8010CA6C: 804061C0 (g_dComIfG_gameInfo)
//	8010CA70: 804061C0 (g_dComIfG_gameInfo)
//	8010CA84: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	8010CA8C: 80181640 (dCam_getBody__Fv)
//	8010CA94: 801614F4 (ChangeModeOK__9dCamera_cFl)
//	8010CAD4: 800CEAF4 (setSubjectMode__9daAlink_cFv)
//	8010CAE8: 8010B96C (commonHookshotRoofWait__9daAlink_cFv)
//	8010CB00: 801088A0 (checkHookshotRoofLv7Boss__9daAlink_cFv)
//	8010CB30: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	8010CB48: 80452D3C (lit_7808)
//	8010CB4C: 800C6A48 (procFallInit__9daAlink_cFif)
//	8010CB5C: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	8010CB74: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	8010CB9C: 800B2604 (itemButton__9daAlink_cFv)
//	8010CBB8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8010CBC8: 80452CA4 (lit_6021)
//	8010CBE4: 801088A0 (checkHookshotRoofLv7Boss__9daAlink_cFv)
//	8010CBF4: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010CBF8: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010CC0C: 8010B2DC (setHookshotRoofWaitAnime__9daAlink_cFv)
//	8010CC20: 801088A0 (checkHookshotRoofLv7Boss__9daAlink_cFv)
//	8010CC34: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	8010CC54: 8010CC80 (procHookshotRoofShootInit__9daAlink_cFP10fopAc_ac_c)
//	8010CC60: 8010B3AC (hookshotRoofTurn__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofWait__9daAlink_cFv.s"
}
#pragma pop

/* 8010CC80-8010CD60 00E0+00 s=1 e=0 z=0  None .text
 * procHookshotRoofShootInit__9daAlink_cFP10fopAc_ac_c          */
//	8010CCA0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010CCBC: 80452CB8 (lit_6040)
//	8010CCC0: 80452CC4 (lit_6109)
//	8010CCC4: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8010CCCC: 800B7168 (setFastShotTimer__9daAlink_cFv)
//	8010CCD4: 80452CC0 (lit_6108)
//	8010CCE0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8010CCE4: 80452CC0 (lit_6108)
//	8010CCF0: 80453000 (lit_30895)
//	8010CD00: 8010B644 (initHookshotRoofWaitActor__9daAlink_cFP10fopAc_ac_c)
//	8010CD08: 80109170 (initHookshotReady__9daAlink_cFv)
//	8010CD0C: 804061C0 (g_dComIfG_gameInfo)
//	8010CD10: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofShootInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofShootInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 8010CD60-8010CF6C 020C+00 s=1 e=0 z=0  None .text      procHookshotRoofShoot__9daAlink_cFv */
//	8010CD70: 803621D8 (_savegpr_28)
//	8010CD78: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010CD8C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	8010CD94: 8010B96C (commonHookshotRoofWait__9daAlink_cFv)
//	8010CDAC: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010CDC0: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	8010CDCC: 804061C0 (g_dComIfG_gameInfo)
//	8010CDD0: 804061C0 (g_dComIfG_gameInfo)
//	8010CDF0: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010CE0C: 80109284 (checkUpperItemActionHookshot__9daAlink_cFv)
//	8010CE2C: 800737E4 (LockonTruth__12dAttention_cFv)
//	8010CE60: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010CE6C: 80452CC0 (lit_6108)
//	8010CE90: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	8010CEA0: 80108DB4 (setHookshotSight__9daAlink_cFv)
//	8010CEE8: 8010C830 (procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci)
//	8010CEF4: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010CF00: 80452CB8 (lit_6040)
//	8010CF1C: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
//	8010CF24: 8010B3AC (hookshotRoofTurn__9daAlink_cFv)
//	8010CF34: 800B7190 (cancelItemUseQuake__9daAlink_cFi)
//	8010CF58: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofShoot() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofShoot__9daAlink_cFv.s"
}
#pragma pop

/* 8010CF6C-8010D034 00C8+00 s=1 e=0 z=0  None .text
 * procHookshotRoofBootsInit__9daAlink_cFP10fopAc_ac_c          */
//	8010CF8C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010CFA8: 80452D14 (lit_7307)
//	8010CFAC: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	8010CFB4: 801086DC (resetHookshotMode__9daAlink_cFv)
//	8010CFC4: 80452CC0 (lit_6108)
//	8010CFD0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8010CFD4: 80452CC0 (lit_6108)
//	8010CFF0: 8010B644 (initHookshotRoofWaitActor__9daAlink_cFP10fopAc_ac_c)
//	8010CFF4: 80453000 (lit_30895)
//	8010CFFC: 804061C0 (g_dComIfG_gameInfo)
//	8010D000: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofBootsInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofBootsInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 8010D034-8010D174 0140+00 s=1 e=0 z=0  None .text      procHookshotRoofBoots__9daAlink_cFv */
//	8010D04C: 8010B96C (commonHookshotRoofWait__9daAlink_cFv)
//	8010D064: 801088A0 (checkHookshotRoofLv7Boss__9daAlink_cFv)
//	8010D094: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	8010D0AC: 80452D3C (lit_7808)
//	8010D0B0: 800C6A48 (procFallInit__9daAlink_cFif)
//	8010D0C0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8010D0DC: 8010C830 (procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci)
//	8010D0E8: 80452D24 (lit_7450)
//	8010D0EC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8010D100: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	8010D118: 80452D30 (lit_7625)
//	8010D11C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8010D128: 80452CC0 (lit_6108)
//	8010D130: 80452CB8 (lit_6040)
//	8010D13C: 804061C0 (g_dComIfG_gameInfo)
//	8010D140: 804061C0 (g_dComIfG_gameInfo)
//	8010D154: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofBoots() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofBoots__9daAlink_cFv.s"
}
#pragma pop

/* 8010D174-8010D38C 0218+00 s=3 e=0 z=0  None .text      procHookshotWallWaitInit__9daAlink_cFisi
 */
//	8010D184: 803621D8 (_savegpr_28)
//	8010D19C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010D1B8: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	8010D1BC: 803DD470 (now__14mDoMtx_stack_c)
//	8010D1C0: 803DD470 (now__14mDoMtx_stack_c)
//	8010D1D0: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	8010D1D4: 803DD470 (now__14mDoMtx_stack_c)
//	8010D1D8: 803DD470 (now__14mDoMtx_stack_c)
//	8010D1DC: 80430D3C (BaseZ__4cXyz)
//	8010D1E0: 80430D3C (BaseZ__4cXyz)
//	8010D1E8: 80346D6C (PSMTXMultVec)
//	8010D1F4: 80452E64 (lit_14954)
//	8010D1F8: 80266B84 (__ml__4cXyzCFf)
//	8010D208: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8010D230: 80439A20 (sincosTable___5JMath)
//	8010D234: 80439A20 (sincosTable___5JMath)
//	8010D240: 80452D2C (lit_7624)
//	8010D28C: 80452E64 (lit_14954)
//	8010D2EC: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010D2F0: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010D2F8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010D304:
//8010B35C (setHookshotWallWaitAnime__9daAlink_cFv) 	8010D310: 804061C0 (g_dComIfG_gameInfo)
//8010D314: 804061C0 (g_dComIfG_gameInfo) 	8010D328: 801086DC (resetHookshotMode__9daAlink_cFv)
// 8010D338: 80452CC0 (lit_6108) 	8010D344: 800BB770 (setSpecialGravity__9daAlink_cFffi) 8010D348:
// 80452CC0
//(lit_6108) 	8010D368: 80109890 (setHookshotHangMoveBGCollect__9daAlink_cFv) 	8010D378:
//80362224
//(_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotWallWaitInit(int param_0, s16 param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotWallWaitInit__9daAlink_cFisi.s"
}
#pragma pop

/* 8010D38C-8010D5F4 0268+00 s=1 e=0 z=0  None .text      procHookshotWallWait__9daAlink_cFv */
//	8010D3A4: 804061C0 (g_dComIfG_gameInfo)
//	8010D3A8: 804061C0 (g_dComIfG_gameInfo)
//	8010D3C8: 800CEBD8 (checkSubjectEnd__9daAlink_cFi)
//	8010D3D4: 804061C0 (g_dComIfG_gameInfo)
//	8010D3D8: 804061C0 (g_dComIfG_gameInfo)
//	8010D400: 804061C0 (g_dComIfG_gameInfo)
//	8010D404: 804061C0 (g_dComIfG_gameInfo)
//	8010D424: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	8010D464: 80181640 (dCam_getBody__Fv)
//	8010D46C: 801614F4 (ChangeModeOK__9dCamera_cFl)
//	8010D4AC: 800CEAF4 (setSubjectMode__9daAlink_cFv)
//	8010D4C0: 8010BA6C (commonHookshotWallWait__9daAlink_cFv)
//	8010D4DC: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	8010D4F4: 80452D3C (lit_7808)
//	8010D4F8: 800C6A48 (procFallInit__9daAlink_cFif)
//	8010D514: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	8010D53C: 800B2604 (itemButton__9daAlink_cFv)
//	8010D558: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8010D568: 80452CA4 (lit_6021)
//	8010D584: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010D588: 8038E9C0 (m__22daAlinkHIO_hookshot_c0)
//	8010D59C: 8010B35C (setHookshotWallWaitAnime__9daAlink_cFv)
//	8010D5B4: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	8010D5D0: 8010D5F4 (procHookshotWallShootInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotWallWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotWallWait__9daAlink_cFv.s"
}
#pragma pop

/* 8010D5F4-8010D6CC 00D8+00 s=1 e=0 z=0  None .text      procHookshotWallShootInit__9daAlink_cFv */
//	8010D60C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010D628: 80452CB8 (lit_6040)
//	8010D62C: 80452CC4 (lit_6109)
//	8010D630: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8010D638: 800B7168 (setFastShotTimer__9daAlink_cFv)
//	8010D640: 80452CC0 (lit_6108)
//	8010D64C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8010D650: 80452CC0 (lit_6108)
//	8010D65C: 804061C0 (g_dComIfG_gameInfo)
//	8010D660: 804061C0 (g_dComIfG_gameInfo)
//	8010D674: 80109170 (initHookshotReady__9daAlink_cFv)
//	8010D678: 804061C0 (g_dComIfG_gameInfo)
//	8010D67C: 804061C0 (g_dComIfG_gameInfo)
//	8010D6B0: 80109070 (setHookshotReadyMaterial__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotWallShootInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotWallShootInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010D6CC-8010D93C 0270+00 s=1 e=0 z=0  None .text      procHookshotWallShoot__9daAlink_cFv */
//	8010D6DC: 803621D0 (_savegpr_26)
//	8010D6E4: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010D6F8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	8010D700: 8010BA6C (commonHookshotWallWait__9daAlink_cFv)
//	8010D71C: 804061C0 (g_dComIfG_gameInfo)
//	8010D720: 804061C0 (g_dComIfG_gameInfo)
//	8010D740: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010D760: 80109284 (checkUpperItemActionHookshot__9daAlink_cFv)
//	8010D78C: 800737E4 (LockonTruth__12dAttention_cFv)
//	8010D7C0: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010D7CC: 80452CC0 (lit_6108)
//	8010D7F0: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	8010D848: 8010D174 (procHookshotWallWaitInit__9daAlink_cFisi)
//	8010D854: 80108A18 (checkHookshotWait__9daAlink_cCFv)
//	8010D868: 80452CB8 (lit_6040)
//	8010D86C: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	8010D884: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
//	8010D890: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	8010D8B0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8010D8F8: 80108DB4 (setHookshotSight__9daAlink_cFv)
//	8010D928: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotWallShoot() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotWallShoot__9daAlink_cFv.s"
}
#pragma pop

/* 8010D93C-8010D94C 0010+00 s=0 e=0 z=1  None .text      getSpinnerGravity__9daAlink_cCFv */
//	8010D93C: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010D940: 8038EA30 (m__21daAlinkHIO_spinner_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerGravity() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerGravity__9daAlink_cCFv.s"
}
#pragma pop

/* 8010D94C-8010D95C 0010+00 s=0 e=0 z=1  None .text      getSpinnerMaxFallSpeed__9daAlink_cCFv */
//	8010D94C: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010D950: 8038EA30 (m__21daAlinkHIO_spinner_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerMaxFallSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerMaxFallSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 8010D95C-8010D96C 0010+00 s=0 e=0 z=1  None .text      getSpinnerJumpRate__9daAlink_cCFv */
//	8010D95C: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010D960: 8038EA30 (m__21daAlinkHIO_spinner_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerJumpRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerJumpRate__9daAlink_cCFv.s"
}
#pragma pop

/* 8010D96C-8010D9B0 0044+00 s=1 e=0 z=2  None .text      getSpinnerRideMoveTime__9daAlink_cFv */
//	8010D978: 8010DAFC (checkLv4BossRoom__9daAlink_cFv)
//	8010D984: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010D988: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010D994: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010D998: 8038EA30 (m__21daAlinkHIO_spinner_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideMoveTime() {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideMoveTime__9daAlink_cFv.s"
}
#pragma pop

/* 8010D9B0-8010D9F4 0044+00 s=1 e=0 z=3  None .text      getSpinnerRideSpeedF__9daAlink_cFv */
//	8010D9BC: 8010DAFC (checkLv4BossRoom__9daAlink_cFv)
//	8010D9C8: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010D9CC: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010D9D8: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010D9DC: 8038EA30 (m__21daAlinkHIO_spinner_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideSpeedF() {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideSpeedF__9daAlink_cFv.s"
}
#pragma pop

/* 8010D9F4-8010DA04 0010+00 s=0 e=0 z=1  None .text      getSpinnerRideDecSpeedMax__9daAlink_cCFv
 */
//	8010D9F4: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010D9F8: 8038EA30 (m__21daAlinkHIO_spinner_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideDecSpeedMax() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideDecSpeedMax__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA04-8010DA14 0010+00 s=0 e=0 z=1  None .text      getSpinnerRideDecSpeedMin__9daAlink_cCFv
 */
//	8010DA04: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010DA08: 8038EA30 (m__21daAlinkHIO_spinner_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideDecSpeedMin() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideDecSpeedMin__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA14-8010DA24 0010+00 s=0 e=0 z=1  None .text      getSpinnerRideDecSpeedRate__9daAlink_cCFv
 */
//	8010DA14: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010DA18: 8038EA30 (m__21daAlinkHIO_spinner_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideDecSpeedRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideDecSpeedRate__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA24-8010DA34 0010+00 s=0 e=0 z=1  None .text      getSpinnerRideRotAngleMax__9daAlink_cCFv
 */
//	8010DA24: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010DA28: 8038EA30 (m__21daAlinkHIO_spinner_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideRotAngleMax() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideRotAngleMax__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA34-8010DA44 0010+00 s=0 e=0 z=1  None .text      getSpinnerRideRotAngleMin__9daAlink_cCFv
 */
//	8010DA34: 8038EA30 (m__21daAlinkHIO_spinner_c0)
//	8010DA38: 8038EA30 (m__21daAlinkHIO_spinner_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideRotAngleMin() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideRotAngleMin__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA44-8010DA98 0054+00 s=1 e=0 z=0  None .text      onSpinnerPathForceRemove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onSpinnerPathForceRemove() {
    nofralloc
#include "asm/d/a/d_a_alink/onSpinnerPathForceRemove__9daAlink_cFv.s"
}
#pragma pop

/* 8010DA98-8010DAFC 0064+00 s=1 e=0 z=0  None .text      checkSpinnerPathMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSpinnerPathMove() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSpinnerPathMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010DAFC-8010DB28 002C+00 s=2 e=0 z=0  None .text      checkLv4BossRoom__9daAlink_cFv */
//	8010DB08: 80392094 (d_a_d_a_alink__stringBase0)
//	8010DB0C: 80392094 (d_a_d_a_alink__stringBase0)
//	8010DB14: 8009DA60 (checkStageName__9daAlink_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLv4BossRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv4BossRoom__9daAlink_cFv.s"
}
#pragma pop

/* 8010DB28-8010DBC8 00A0+00 s=1 e=0 z=0  None .text      checkSpinnerTriggerAttack__9daAlink_cFv */
//	8010DB74: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSpinnerTriggerAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSpinnerTriggerAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8010DBC8-8010DC64 009C+00 s=2 e=0 z=0  None .text      setSpinnerSyncPos__9daAlink_cFv */
//	8010DC04: 8000CF0C (ZXYrotS__14mDoMtx_stack_cFRC5csXyz)
//	8010DC08: 803DD470 (now__14mDoMtx_stack_c)
//	8010DC0C: 803DD470 (now__14mDoMtx_stack_c)
//	8010DC20: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8010DC24: 803DD470 (now__14mDoMtx_stack_c)
//	8010DC28: 803DD470 (now__14mDoMtx_stack_c)
//	8010DC30: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpinnerSyncPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpinnerSyncPos__9daAlink_cFv.s"
}
#pragma pop

/* 8010DC64-8010DDCC 0168+00 s=1 e=0 z=0  None .text      procSpinnerReadyInit__9daAlink_cFv */
//	8010DCA8: 80019E04 (fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv)
//	8010DCC4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010DCD0: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8010DCDC: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	8010DCE0: 8038E11C (m__23daAlinkHIO_smallJump_c0)
//	8010DCE8: 80452D44 (lit_7977)
//	8010DCF4: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	8010DCF8: 80452CC0 (lit_6108)
//	8010DD08: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	8010DD0C: 80452D28 (lit_7451)
//	8010DD60: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	8010DD6C: 80425514 (l_waitBaseAnime)
//	8010DD70: 80425514 (l_waitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010DDCC-8010DE64 0098+00 s=1 e=0 z=0  None .text      procSpinnerReady__9daAlink_cFv */
//	8010DDE8: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	8010DE4C: 8010DE78 (procSpinnerWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerReady__9daAlink_cFv.s"
}
#pragma pop

/* 8010DE64-8010DE78 0014+00 s=1 e=0 z=0  None .text      setSpinnerStatus__9daAlink_cFUcUc */
//	8010DE64: 804061C0 (g_dComIfG_gameInfo)
//	8010DE68: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpinnerStatus(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setSpinnerStatus__9daAlink_cFUcUc.s"
}
#pragma pop

/* 8010DE78-8010DF4C 00D4+00 s=2 e=0 z=0  None .text      procSpinnerWaitInit__9daAlink_cFv */
//	8010DE90: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010DEB0: 800B1770 (setBgCheckParam__9daAlink_cFv)
//	8010DEBC: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010DEC0: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010DEC8: 80452D24 (lit_7450)
//	8010DECC: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8010DED0: 80452CC0 (lit_6108)
//	8010DEE4: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8010DEE8: 80452CC0 (lit_6108)
//	8010DF0C: 80452D10 (lit_7306)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010DF4C-8010E48C 0540+00 s=1 e=0 z=0  None .text      procSpinnerWait__9daAlink_cFv */
//	8010DF5C: 803621D8 (_savegpr_28)
//	8010DF88: 80452CC0 (lit_6108)
//	8010DF98: 80347138 (PSVECSquareMag)
//	8010DF9C: 80452CB8 (lit_6040)
//	8010DFC0: 80452CC0 (lit_6108)
//	8010DFCC: 800B48D0 (setJumpMode__9daAlink_cFv)
//	8010DFD8: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	8010DFDC: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	8010DFE4: 800C6A48 (procFallInit__9daAlink_cFif)
//	8010E000: 800C70F8 (procSmallJumpInit__9daAlink_cFi)
//	8010E010: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	8010E028: 800B2604 (itemButton__9daAlink_cFv)
//	8010E040: 8010D9B0 (getSpinnerRideSpeedF__9daAlink_cFv)
//	8010E04C: 8010D96C (getSpinnerRideMoveTime__9daAlink_cFv)
//	8010E078: 80452CA4 (lit_6021)
//	8010E088: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	8010E090: 80453004 (lit_31530)
//	8010E0F0: 800C0164 (checkSetItemTrigger__9daAlink_cFi)
//	8010E100: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
//	8010E118: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
//	8010E12C: 800B93F4 (swordEquip__9daAlink_cFi)
//	8010E134: 800B48D0 (setJumpMode__9daAlink_cFv)
//	8010E138: 80452CC0 (lit_6108)
//	8010E148: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	8010E14C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	8010E154: 800C6A48 (procFallInit__9daAlink_cFif)
//	8010E160: 80430188 (g_meter2_info)
//	8010E164: 80430188 (g_meter2_info)
//	8010E16C: 8021C934 (onDirectUseItem__13dMeter2Info_cFi)
//	8010E1A4: 8010DE64 (setSpinnerStatus__9daAlink_cFUcUc)
//	8010E1D4: 8010DE64 (setSpinnerStatus__9daAlink_cFUcUc)
//	8010E208: 8010DE64 (setSpinnerStatus__9daAlink_cFUcUc)
//	8010E220: 80452D88 (lit_8782)
//	8010E234: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E238: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E244: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8010E258: 8002D06C (dComIfGp_getReverb__Fi)
//	8010E26C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8010E27C: 80452CB8 (lit_6040)
//	8010E284: 80452CBC (lit_6041)
//	8010E290: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8010E2B8: 8010DE64 (setSpinnerStatus__9daAlink_cFUcUc)
//	8010E2CC: 8010DE64 (setSpinnerStatus__9daAlink_cFUcUc)
//	8010E2E4: 80452D88 (lit_8782)
//	8010E308: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E30C: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E318: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8010E350: 80452CC0 (lit_6108)
//	8010E354: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E358: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E368: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	8010E398: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E39C: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E3B0: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	8010E3D4: 80452D88 (lit_8782)
//	8010E3E8: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E3EC: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E3FC: 80452CBC (lit_6041)
//	8010E400: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	8010E41C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8010E444: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E448: 8038E870 (m__19daAlinkHIO_board_c0)
//	8010E454: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8010E464: 8010DBC8 (setSpinnerSyncPos__9daAlink_cFv)
//	8010E478: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerWait__9daAlink_cFv.s"
}
#pragma pop

/* 8010E48C-8010E52C 00A0+00 s=1 e=0 z=0  None .text      bottleModelCallBack__9daAlink_cFv */
//	8010E4C4: 803DD470 (now__14mDoMtx_stack_c)
//	8010E4C8: 803DD470 (now__14mDoMtx_stack_c)
//	8010E4CC: 803464B0 (PSMTXCopy)
//	8010E4D0: 80452E14 (lit_14616)
//	8010E4D4: 80452CBC (lit_6041)
//	8010E4D8: 80452EA8 (lit_16570)
//	8010E4DC: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8010E4E0: 803DD470 (now__14mDoMtx_stack_c)
//	8010E4E4: 803DD470 (now__14mDoMtx_stack_c)
//	8010E4F4: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	8010E508: 803DD470 (now__14mDoMtx_stack_c)
//	8010E50C: 803DD470 (now__14mDoMtx_stack_c)
//	8010E510: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::bottleModelCallBack() {
    nofralloc
#include "asm/d/a/d_a_alink/bottleModelCallBack__9daAlink_cFv.s"
}
#pragma pop

/* 8010E52C-8010E568 003C+00 s=1 e=0 z=0  None .text      daAlink_bottleModelCallBack__FP8J3DJointi
 */
//	8010E538: 80434AC8 (j3dSys)
//	8010E53C: 80434AC8 (j3dSys)
//	8010E550: 8010E48C (bottleModelCallBack__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_bottleModelCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_bottleModelCallBack__FP8J3DJointi.s"
}
#pragma pop

/* 8010E568-8010E584 001C+00 s=1 e=0 z=0  None .text      getBottleOpenAppearItem__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBottleOpenAppearItem() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBottleOpenAppearItem__9daAlink_cCFv.s"
}
#pragma pop

/* 8010E584-8010E5D8 0054+00 s=2 e=0 z=0  None .text      checkOilBottleItemNotGet__9daAlink_cFUs */
//	8010E5B0: 8015EB40 (checkOilBottleItem__9daPy_py_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkOilBottleItemNotGet(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkOilBottleItemNotGet__9daAlink_cFUs.s"
}
#pragma pop

/* 8010E5D8-8010EAC4 04EC+00 s=7 e=0 z=0  None .text      setBottleModel__9daAlink_cFUs */
//	8010E5E8: 803621D4 (_savegpr_27)
//	8010E5F4: 800A3C8C (setItemHeap__9daAlink_cFv)
//	8010E608: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	8010E620: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	8010E634: 800C0028 (loadAramItemBtp__9daAlink_cFUsP8J3DModel)
//	8010E648: 800BFF70 (loadAramItemBrk__9daAlink_cFUsP8J3DModel)
//	8010E658: 8015EAD8 (checkDrinkBottleItem__9daPy_py_cFi)
//	8010E66C: 8010E584 (checkOilBottleItemNotGet__9daAlink_cFUs)
//	8010E684: 800BFFCC (loadAramItemBtk__9daAlink_cFUsP8J3DModel)
//	8010E698: 800BFFCC (loadAramItemBtk__9daAlink_cFUsP8J3DModel)
//	8010E6B0: 800BFFCC (loadAramItemBtk__9daAlink_cFUsP8J3DModel)
//	8010E6C4: 800BFFCC (loadAramItemBtk__9daAlink_cFUsP8J3DModel)
//	8010E6D8: 800BFFCC (loadAramItemBtk__9daAlink_cFUsP8J3DModel)
//	8010E6F8: 800BFF04 (loadAram__9daAlink_cFUsUl)
//	8010E70C: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	8010E720: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	8010E738: 80452CB8 (lit_6040)
//	8010E748: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	8010E758: 80452CC0 (lit_6108)
//	8010E75C: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	8010E778: 800BFF04 (loadAram__9daAlink_cFUsUl)
//	8010E78C: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	8010E7A0: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	8010E7B8: 80452CB8 (lit_6040)
//	8010E7C8: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	8010E7D8: 80452CC0 (lit_6108)
//	8010E7DC: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	8010E7F8: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	8010E80C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	8010E818: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	8010E830: 8010E584 (checkOilBottleItemNotGet__9daAlink_cFUs)
//	8010E860: 8010E52C (daAlink_bottleModelCallBack__FP8J3DJointi)
//	8010E864: 8010E52C (daAlink_bottleModelCallBack__FP8J3DJointi)
//	8010E888: 8015EAD8 (checkDrinkBottleItem__9daPy_py_cFi)
//	8010E8A4: 8015EB40 (checkOilBottleItem__9daPy_py_cFi)
//	8010E8E4: 80452CC0 (lit_6108)
//	8010E904: 80452CB8 (lit_6040)
//	8010E924: 80452D14 (lit_7307)
//	8010E938: 8015EB40 (checkOilBottleItem__9daPy_py_cFi)
//	8010E944: 80452D24 (lit_7450)
//	8010E960: 80452D3C (lit_7808)
//	8010E978: 80452D44 (lit_7977)
//	8010E990: 80452D74 (lit_8502)
//	8010E9B0: 80452D8C (lit_8783)
//	8010E9C8: 80452D34 (lit_7710)
//	8010E9E8: 80452D30 (lit_7625)
//	8010EA00: 80452EB4 (lit_17382)
//	8010EA10: 80452CC4 (lit_6109)
//	8010EA24: 80452CB8 (lit_6040)
//	8010EA38: 8015EB68 (checkOpenBottleItem__9daPy_py_cFi)
//	8010EA50: 80452D3C (lit_7808)
//	8010EA60: 80452D14 (lit_7307)
//	8010EA88: 80452D14 (lit_7307)
//	8010EAB0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBottleModel(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBottleModel__9daAlink_cFUs.s"
}
#pragma pop

/* 8010EAC4-8010F45C 0998+00 s=3 e=0 z=0  None .text      commonBottleDrink__9daAlink_cFi */
//	8010EAD4: 803621D8 (_savegpr_28)
//	8010EAE4: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	8010EAEC: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	8010EB20: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8010EB38: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8010EB54: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8010EB60: 80452CC0 (lit_6108)
//	8010EB64: 800AD374 (setUpperAnimeBaseMorf__9daAlink_cFUsf)
//	8010EB70: 800AFB14 (setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8010EB80: 80452CC0 (lit_6108)
//	8010EB84: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	8010EBB4: 804061C0 (g_dComIfG_gameInfo)
//	8010EBB8: 804061C0 (g_dComIfG_gameInfo)
//	8010EBC0: 80452D8C (lit_8783)
//	8010EBDC: 804061C0 (g_dComIfG_gameInfo)
//	8010EBE0: 804061C0 (g_dComIfG_gameInfo)
//	8010EBE8: 80452E04 (lit_13794)
//	8010EC04: 804061C0 (g_dComIfG_gameInfo)
//	8010EC08: 804061C0 (g_dComIfG_gameInfo)
//	8010EC10: 80452E28 (lit_14621)
//	8010EC38: 8002E5C0 (dComIfGp_getSelectItemNum__Fi)
//	8010EC40: 80452CB0 (lit_6025)
//	8010EC5C: 804061C0 (g_dComIfG_gameInfo)
//	8010EC60: 804061C0 (g_dComIfG_gameInfo)
//	8010EC94: 804061C0 (g_dComIfG_gameInfo)
//	8010EC98: 804061C0 (g_dComIfG_gameInfo)
//	8010ECA0: 80452E28 (lit_14621)
//	8010ECC8: 804061C0 (g_dComIfG_gameInfo)
//	8010ECCC: 804061C0 (g_dComIfG_gameInfo)
//	8010ECD4: 80452D1C (lit_7448)
//	8010ED04: 8002DCA8 (dComIfGs_getMaxLifeGauge__Fv)
//	8010ED0C: 80453008 (lit_32072)
//	8010ED24: 804061C0 (g_dComIfG_gameInfo)
//	8010ED28: 804061C0 (g_dComIfG_gameInfo)
//	8010ED54: 8002DCA8 (dComIfGs_getMaxLifeGauge__Fv)
//	8010ED5C: 80453008 (lit_32072)
//	8010ED74: 804061C0 (g_dComIfG_gameInfo)
//	8010ED78: 804061C0 (g_dComIfG_gameInfo)
//	8010EDB4: 80452D00 (lit_6895)
//	8010EDB8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8010EDC4: 80452CC0 (lit_6108)
//	8010EDE0: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	8010EDF0: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8010EE04: 804061C0 (g_dComIfG_gameInfo)
//	8010EE08: 804061C0 (g_dComIfG_gameInfo)
//	8010EE40: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8010EE50: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010EE54: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010EE5C: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	8010EE68:
// 800AFB14 (setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM) 	8010EE78: 8038E90C
//(m__20daAlinkHIO_bottle_c0) 	8010EE7C: 8038E90C (m__20daAlinkHIO_bottle_c0) 	8010EE84: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010EE88:
//80452CB8 (lit_6040) 	8010EEA0: 804061C0 (g_dComIfG_gameInfo) 	8010EEA4: 804061C0
//(g_dComIfG_gameInfo) 	8010EEB4: 80033598 (setEquipBottleItemIn__17dSv_player_item_cFUcUc) 	8010EEE0:
//8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey) 	8010EEEC: 800A9248
//(simpleAnmPlay__9daAlink_cFP10J3DAnmBase) 	8010EF14: 8002DCA8 (dComIfGs_getMaxLifeGauge__Fv)
//	8010EF28: 8002DCA8 (dComIfGs_getMaxLifeGauge__Fv)
//	8010EF3C: 8002DCA8 (dComIfGs_getMaxLifeGauge__Fv)
//	8010EF50: 8026786C (cM_rnd__Fv)
//	8010EF54: 80452C98 (lit_5943)
//	8010EF80: 80452D44 (lit_7977)
//	8010EF84: 80267954 (cM_rndF__Ff)
//	8010EF88: 80452CB8 (lit_6040)
//	8010EF94: 8002DCA8 (dComIfGs_getMaxLifeGauge__Fv)
//	8010EFA0: 80452D14 (lit_7307)
//	8010EFD4: 80452D24 (lit_7450)
//	8010F030: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8010F040: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010F044: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010F04C: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	8010F058:
// 800AFB14 (setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM) 	8010F068: 8038E90C
//(m__20daAlinkHIO_bottle_c0) 	8010F06C: 8038E90C (m__20daAlinkHIO_bottle_c0) 	8010F074: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010F08C:
//800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM) 	8010F09C: 8038E90C
//(m__20daAlinkHIO_bottle_c0) 	8010F0A0: 8038E90C (m__20daAlinkHIO_bottle_c0) 	8010F0A8: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	8010F0B4:
// 800AFB14 (setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM) 	8010F0C4: 8038E90C
//(m__20daAlinkHIO_bottle_c0) 	8010F0C8: 8038E90C (m__20daAlinkHIO_bottle_c0) 	8010F0D0: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010F0D4:
//80452D14 (lit_7307) 	8010F0EC: 804061C0 (g_dComIfG_gameInfo) 	8010F0F0: 804061C0
//(g_dComIfG_gameInfo) 	8010F0FC: 800336BC (setEquipBottleItemEmpty__17dSv_player_item_cFUc)
//	8010F128: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8010F144: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8010F15C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8010F17C: 8038E840 (m__20daAlinkHIO_pickUp_c0)
//	8010F180: 8038E840 (m__20daAlinkHIO_pickUp_c0)
//	8010F188: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010F1A4:
//800B983C (allUnequip__9daAlink_cFi) 	8010F1B0: 80452EB4 (lit_17382) 	8010F1B4: 8032842C
//(checkPass__12J3DFrameCtrlFf) 	8010F1D0: 8032FCC4
//(entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey) 	8010F1E8: 80452DF0 (lit_13382)
//	8010F1EC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8010F204: 804061C0 (g_dComIfG_gameInfo)
//	8010F208: 804061C0 (g_dComIfG_gameInfo)
//	8010F210: 80452CB0 (lit_6025)
//	8010F26C: 80452C9C (lit_5944)
//	8010F270: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8010F2A0: 80452E94 (lit_16210)
//	8010F2A4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8010F2BC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8010F2D0: 80452CB8 (lit_6040)
//	8010F2D8: 80452CBC (lit_6041)
//	8010F2E4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8010F2E8: 804061C0 (g_dComIfG_gameInfo)
//	8010F2EC: 804061C0 (g_dComIfG_gameInfo)
//	8010F310: 80452CB0 (lit_6025)
//	8010F344: 80452CB0 (lit_6025)
//	8010F37C: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8010F394: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8010F3A8: 80452CC4 (lit_6109)
//	8010F3AC: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	8010F3C4: 80181640 (dCam_getBody__Fv)
//	8010F3CC: 80088BBC (EndEventCamera__9dCamera_cFi)
//	8010F3DC: 80452D34 (lit_7710)
//	8010F3E0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8010F3F0: 800BF884 (returnKeepItemData__9daAlink_cFv)
//	8010F414: 80452CC4 (lit_6109)
//	8010F418: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	8010F42C: 800BF884 (returnKeepItemData__9daAlink_cFv)
//	8010F434: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8010F448: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonBottleDrink(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonBottleDrink__9daAlink_cFi.s"
}
#pragma pop

/* 8010F45C-8010F54C 00F0+00 s=2 e=0 z=0  None .text      makeFairy__9daAlink_cFP4cXyzUl */
//	8010F4A4: 80452D50 (lit_8247)
//	8010F4B4: 80452D04 (lit_6896)
//	8010F4F0: 80019E04 (fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv)
//	8010F4FC: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8010F510: 80115C20 (checkEventRun__9daAlink_cCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::makeFairy(cXyz* param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/makeFairy__9daAlink_cFP4cXyzUl.s"
}
#pragma pop

/* 8010F54C-8010F698 014C+00 s=2 e=0 z=0  None .text      procBottleDrinkInit__9daAlink_cFUs */
//	8010F588: 804061C0 (g_dComIfG_gameInfo)
//	8010F58C: 804061C0 (g_dComIfG_gameInfo)
//	8010F5A4: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	8010F5C8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010F5D4: 80452CC0 (lit_6108)
//	8010F5EC: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010F5F0: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010F5F4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010F5FC:
//800BF854 (keepItemData__9daAlink_cFv) 	8010F608: 8010E5D8 (setBottleModel__9daAlink_cFUs)
//8010F60C: 804061C0 (g_dComIfG_gameInfo) 	8010F610: 804061C0 (g_dComIfG_gameInfo) 	8010F644:
//80181640 (dCam_getBody__Fv) 	8010F650: 80392094 (d_a_d_a_alink__stringBase0) 	8010F654: 80392094
//(d_a_d_a_alink__stringBase0) 	8010F66C: 80088A7C (StartEventCamera__9dCamera_cFiie)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleDrinkInit(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleDrinkInit__9daAlink_cFUs.s"
}
#pragma pop

/* 8010F698-8010F6F4 005C+00 s=1 e=0 z=0  None .text      procBottleDrink__9daAlink_cFv */
//	8010F6B8: 804061C0 (g_dComIfG_gameInfo)
//	8010F6BC: 804061C0 (g_dComIfG_gameInfo)
//	8010F6C8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8010F6D4: 8010EAC4 (commonBottleDrink__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleDrink() {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleDrink__9daAlink_cFv.s"
}
#pragma pop

/* 8010F6F4-8010F8E4 01F0+00 s=1 e=0 z=0  None .text      procBottleOpenInit__9daAlink_cFUs */
//	8010F704: 803621DC (_savegpr_29)
//	8010F710: 804061C0 (g_dComIfG_gameInfo)
//	8010F714: 804061C0 (g_dComIfG_gameInfo)
//	8010F72C: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	8010F750: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010F75C: 80452CC0 (lit_6108)
//	8010F774: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010F778: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010F780: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010F788:
//800BF854 (keepItemData__9daAlink_cFv) 	8010F794: 8010E5D8 (setBottleModel__9daAlink_cFUs)
//8010F798: 804061C0 (g_dComIfG_gameInfo) 	8010F79C: 804061C0 (g_dComIfG_gameInfo) 	8010F810:
//80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc) 	8010F844: 80181640 (dCam_getBody__Fv)
//8010F850: 80392094 (d_a_d_a_alink__stringBase0) 	8010F854: 80392094 (d_a_d_a_alink__stringBase0)
// 8010F86C: 80088A7C (StartEventCamera__9dCamera_cFiie) 	8010F8B4: 80452CE0 (lit_6845) 8010F8BC:
// 800D1540 (setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff) 	8010F8D0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleOpenInit(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleOpenInit__9daAlink_cFUs.s"
}
#pragma pop

/* 8010F8E4-8010FC38 0354+00 s=1 e=0 z=0  None .text      procBottleOpen__9daAlink_cFv */
//	8010F910: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	8010F924: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	8010F930: 80452D14 (lit_7307)
//	8010F944: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	8010F960: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	8010F974: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8010F984: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8010F9A4: 80452CBC (lit_6041)
//	8010F9A8: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	8010F9B8: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010F9BC: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010F9C4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010FA00:
//80452CE0 (lit_6845) 	8010FA04: 8032842C (checkPass__12J3DFrameCtrlFf) 	8010FA2C: 8032FCC4
//(entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey) 	8010FA44: 80391A14 (bottleTop)
//	8010FA48: 80391A14 (bottleTop)
//	8010FA50: 80346D6C (PSMTXMultVec)
//	8010FA60: 8010F45C (makeFairy__9daAlink_cFP4cXyzUl)
//	8010FA84: 80124B68 (resetFairyEffect__9daAlink_cFv)
//	8010FA90: 80452DC0 (lit_10193)
//	8010FAB0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8010FACC: 800BF884 (returnKeepItemData__9daAlink_cFv)
//	8010FAD4: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8010FAE0: 80452EB4 (lit_17382)
//	8010FAE4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8010FB00: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	8010FB0C: 804061C0 (g_dComIfG_gameInfo)
//	8010FB10: 804061C0 (g_dComIfG_gameInfo)
//	8010FB1C: 800336BC (setEquipBottleItemEmpty__17dSv_player_item_cFUc)
//	8010FB5C: 80452E04 (lit_13794)
//	8010FB68: 80452F58 (lit_24323)
//	8010FB98: 80452C9C (lit_5944)
//	8010FBB0: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8010FBB4: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8010FBBC: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8010FBE0: 80391A14 (bottleTop)
//	8010FBE4: 80391A14 (bottleTop)
//	8010FBEC: 80346D6C (PSMTXMultVec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleOpen() {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleOpen__9daAlink_cFv.s"
}
#pragma pop

/* 8010FC38-8010FF58 0320+00 s=4 e=0 z=0  None .text
 * procBottleSwingInit__9daAlink_cFP10fopAc_ac_ci               */
//	8010FC48: 803621DC (_savegpr_29)
//	8010FC70: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	8010FC84: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	8010FC98: 800B58EC (checkWaitAction__9daAlink_cFv)
//	8010FCA8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8010FCB4: 80452CC0 (lit_6108)
//	8010FCD8: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8010FCE0: 804061C0 (g_dComIfG_gameInfo)
//	8010FCE4: 804061C0 (g_dComIfG_gameInfo)
//	8010FCF0: 8007398C (convPId__11dAttCatch_cFUi)
//	8010FD08: 80452CE0 (lit_6845)
//	8010FD44: 80452D30 (lit_7625)
//	8010FD98: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010FD9C: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010FDA4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010FDC0:
//804061C0 (g_dComIfG_gameInfo) 	8010FDC4: 804061C0 (g_dComIfG_gameInfo) 	8010FDD4: 8004B918
//(getEmitter__Q213dPa_control_c7level_cFUl) 	8010FDEC: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010FDF0: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010FDFC: 80452D48 (lit_8130)
//	8010FE14: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8010FE2C: 80439A20 (sincosTable___5JMath)
//	8010FE30: 80439A20 (sincosTable___5JMath)
//	8010FE3C: 80452D10 (lit_7306)
//	8010FE98: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010FE9C: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8010FEA4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010FEA8:
//8038E90C (m__20daAlinkHIO_bottle_c0) 	8010FEAC: 8038E90C (m__20daAlinkHIO_bottle_c0) 	8010FEB8:
//80452D8C (lit_8783) 	8010FECC: 8038E90C (m__20daAlinkHIO_bottle_c0) 	8010FED0: 8038E90C
//(m__20daAlinkHIO_bottle_c0) 	8010FED8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8010FEDC:
//8038E90C (m__20daAlinkHIO_bottle_c0) 	8010FEE0: 8038E90C (m__20daAlinkHIO_bottle_c0) 	8010FEEC:
//80452D24 (lit_7450) 	8010FF44: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleSwingInit(fopAc_ac_c* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleSwingInit__9daAlink_cFP10fopAc_ac_ci.s"
}
#pragma pop

/* 8010FF58-801102D0 0378+00 s=1 e=0 z=0  None .text      procBottleSwing__9daAlink_cFv */
//	8010FF68: 803621DC (_savegpr_29)
//	8010FF98: 80452CC0 (lit_6108)
//	8010FFA0: 80452CB8 (lit_6040)
//	8010FFAC: 804061C0 (g_dComIfG_gameInfo)
//	8010FFB0: 804061C0 (g_dComIfG_gameInfo)
//	8010FFC4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8010FFD0: 804061C0 (g_dComIfG_gameInfo)
//	8010FFD4: 804061C0 (g_dComIfG_gameInfo)
//	8010FFEC: 8007398C (convPId__11dAttCatch_cFUi)
//	80110000: 8007398C (convPId__11dAttCatch_cFUi)
//	8011005C: 804061C0 (g_dComIfG_gameInfo)
//	80110060: 804061C0 (g_dComIfG_gameInfo)
//	80110078: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	8011008C: 804061C0 (g_dComIfG_gameInfo)
//	80110090: 804061C0 (g_dComIfG_gameInfo)
//	801100A0: 80033598 (setEquipBottleItemIn__17dSv_player_item_cFUcUc)
//	801100B0: 8002E5B8 (dComIfGs_getBottleMax__Fv)
//	801100BC: 8002E714 (dComIfGp_setSelectItemNum__Fis)
//	801100EC: 8015EB40 (checkOilBottleItem__9daPy_py_cFi)
//	80110158: 8010E5D8 (setBottleModel__9daAlink_cFUs)
//	801101A0: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	801101B0: 804061C0 (g_dComIfG_gameInfo)
//	801101B4: 804061C0 (g_dComIfG_gameInfo)
//	801101C0: 8007398C (convPId__11dAttCatch_cFUi)
//	801101E4: 80452D30 (lit_7625)
//	80110200: 8007398C (convPId__11dAttCatch_cFUi)
//	80110214: 8001B334 (fopAcM_orderCatchEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs)
//	80110240: 8001B334 (fopAcM_orderCatchEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs)
//	80110248: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80110268: 801102D0 (procBottleGetInit__9daAlink_cFi)
//	80110278: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	801102B0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	801102BC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleSwing() {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleSwing__9daAlink_cFv.s"
}
#pragma pop

/* 801102D0-80110518 0248+00 s=2 e=0 z=0  None .text      procBottleGetInit__9daAlink_cFi */
//	801102E0: 803621DC (_savegpr_29)
//	80110300: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80110318: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	8011031C: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	80110324: 80452DD4 (lit_11442)
//	80110330: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	80110348: 80097E8C (execItemGet__FUc)
//	80110350: 804061C0 (g_dComIfG_gameInfo)
//	80110354: 804061C0 (g_dComIfG_gameInfo)
//	80110370: 804061C0 (g_dComIfG_gameInfo)
//	80110374: 804061C0 (g_dComIfG_gameInfo)
//	801103A4: 8011A688 (setGetSubBgm__9daAlink_cFi)
//	801103B4: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	801103B8: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	801103C0: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	801103C8:
//804061C0 (g_dComIfG_gameInfo) 	801103CC: 804061C0 (g_dComIfG_gameInfo) 	8011041C: 800BF4E0
//(resetBasAnime__9daAlink_cFv) 	80110434: 80181640 (dCam_getBody__Fv) 	80110440: 80392094
//(d_a_d_a_alink__stringBase0) 	80110444: 80392094 (d_a_d_a_alink__stringBase0) 	8011045C:
//80088A7C (StartEventCamera__9dCamera_cFiie) 	80110484: 800AF8A0
//(setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	8011049C: 800AF4B0
//(setFaceBck__9daAlink_cFUsiUs) 	801104C0: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs) 	801104D0:
// 804061C0 (g_dComIfG_gameInfo) 	801104D4: 804061C0 (g_dComIfG_gameInfo) 	801104E4: 800349BC
//(isEventBit__11dSv_event_cCFUs) 	801104F8: 8003498C (onEventBit__11dSv_event_cFUs) 	80110504:
// 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleGetInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleGetInit__9daAlink_cFi.s"
}
#pragma pop

/* 80110518-80110648 0130+00 s=1 e=0 z=0  None .text      procBottleGet__9daAlink_cFv */
//	80110538: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	80110540: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80110554: 801187B4 (checkEndMessage__9daAlink_cFUl)
//	80110564: 80124B68 (resetFairyEffect__9daAlink_cFv)
//	80110580: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	80110588: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	80110594: 80452D60 (lit_8369)
//	801105B0: 80452E64 (lit_14954)
//	801105CC: 80452D3C (lit_7808)
//	80110610: 80452D7C (lit_8779)
//	80110614: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80110628: 8011A688 (setGetSubBgm__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleGet() {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleGet__9daAlink_cFv.s"
}
#pragma pop

/* 80110648-80110654 000C+00 s=0 e=1 z=0  None .text      Insect_Release__9dInsect_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dInsect_c::Insect_Release() {
    nofralloc
#include "asm/d/a/d_a_alink/Insect_Release__9dInsect_cFv.s"
}
#pragma pop

/* 80110654-80110668 0014+00 s=1 e=0 z=0  None .text daAlink_searchTagKandelaar__FP10fopAc_ac_cPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchTagKandelaar(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchTagKandelaar__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80110668-801106E8 0080+00 s=1 e=0 z=0  None .text daAlink_searchTagKtOnFire__FP10fopAc_ac_cPv
 */
//	80110680: 804061C0 (g_dComIfG_gameInfo)
//	80110684: 804061C0 (g_dComIfG_gameInfo)
//	801106A0: 8034739C (PSVECSquareDistance)
//	801106A4: 80452FC0 (lit_26816)
//	801106B8: 8001A79C (fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchTagKtOnFire(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchTagKtOnFire__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 801106E8-8011078C 00A4+00 s=1 e=0 z=0  None .text      setKandelaarMtx__9daAlink_cFPA4_fii */
//	801106F8: 803621D8 (_savegpr_28)
//	8011072C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	80110748: 803464B0 (PSMTXCopy)
//	80110778: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setKandelaarMtx(f32 (*param_0)[4], int param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setKandelaarMtx__9daAlink_cFPA4_fii.s"
}
#pragma pop

/* 8011078C-801107BC 0030+00 s=2 e=0 z=0  None .text      checkWaterInKandelaarOffset__9daAlink_cFf
 */
//	8011078C: 80452EBC (lit_17593)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWaterInKandelaarOffset(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWaterInKandelaarOffset__9daAlink_cFf.s"
}
#pragma pop

/* 801107BC-80110840 0084+00 s=2 e=0 z=0  None .text      checkWaterInKandelaar__9daAlink_cFf */
//	801107DC: 8011078C (checkWaterInKandelaarOffset__9daAlink_cFf)
//	80110800: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	8011080C: 80110840 (offKandelaarModel__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWaterInKandelaar(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWaterInKandelaar__9daAlink_cFf.s"
}
#pragma pop

/* 80110840-8011087C 003C+00 s=13 e=0 z=0  None .text      offKandelaarModel__9daAlink_cFv */
//	80110868: 802C3778 (setKanteraState__14Z2CreatureLinkFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::offKandelaarModel() {
    nofralloc
#include "asm/d/a/d_a_alink/offKandelaarModel__9daAlink_cFv.s"
}
#pragma pop

/* 8011087C-801108B4 0038+00 s=1 e=0 z=0  None .text      checkUseKandelaar__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUseKandelaar(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkUseKandelaar__9daAlink_cFi.s"
}
#pragma pop

/* 801108B4-801108EC 0038+00 s=1 e=0 z=0  None .text      checkKandelaarSwing__9daAlink_cCFi */
//	801108C0: 804061C0 (g_dComIfG_gameInfo)
//	801108C4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkKandelaarSwing(int param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkKandelaarSwing__9daAlink_cCFi.s"
}
#pragma pop

/* 801108EC-80110BEC 0300+00 s=1 e=0 z=0  None .text      kandelaarModelCallBack__9daAlink_cFv */
//	80110904: 803621D4 (_savegpr_27)
//	8011090C: 80434BE4 (mCurrentMtx__6J3DSys)
//	80110910: 80434BE4 (mCurrentMtx__6J3DSys)
//	80110968: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80110978: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80110994: 80452CC4 (lit_6109)
//	801109A0: 80434BE4 (mCurrentMtx__6J3DSys)
//	801109A4: 80434BE4 (mCurrentMtx__6J3DSys)
//	801109A8: 80430D3C (BaseZ__4cXyz)
//	801109AC: 80430D3C (BaseZ__4cXyz)
//	801109B4: 80346D6C (PSMTXMultVec)
//	801109BC: 80267128 (atan2sX_Z__4cXyzCFv)
//	801109C4: 803DD470 (now__14mDoMtx_stack_c)
//	801109C8: 803DD470 (now__14mDoMtx_stack_c)
//	801109D4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	801109D8: 803DD470 (now__14mDoMtx_stack_c)
//	801109DC: 803DD470 (now__14mDoMtx_stack_c)
//	801109E8: 80346D6C (PSMTXMultVec)
//	801109FC: 80267674 (cM_atan2s__Fff)
//	80110A3C: 80452CC0 (lit_6108)
//	80110A54: 80267674 (cM_atan2s__Fff)
//	80110A84: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80110AA8: 803DD470 (now__14mDoMtx_stack_c)
//	80110AAC: 803DD470 (now__14mDoMtx_stack_c)
//	80110ABC: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80110AC0: 803DD470 (now__14mDoMtx_stack_c)
//	80110AC4: 803DD470 (now__14mDoMtx_stack_c)
//	80110AC8: 80391A20 (kandelaarOffset)
//	80110ACC: 80391A20 (kandelaarOffset)
//	80110AD4: 80346D6C (PSMTXMultVec)
//	80110AE4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80110AF0: 80452ED0 (lit_18847)
//	80110AF4: 80266B84 (__ml__4cXyzCFf)
//	80110B1C: 80434BE4 (mCurrentMtx__6J3DSys)
//	80110B20: 80434BE4 (mCurrentMtx__6J3DSys)
//	80110B44: 80452CC0 (lit_6108)
//	80110B58: 803DD470 (now__14mDoMtx_stack_c)
//	80110B5C: 803DD470 (now__14mDoMtx_stack_c)
//	80110B6C: 803468E8 (PSMTXTrans)
//	80110B70: 803DD470 (now__14mDoMtx_stack_c)
//	80110B74: 803DD470 (now__14mDoMtx_stack_c)
//	80110B84: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80110B94: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80110B98: 803DD470 (now__14mDoMtx_stack_c)
//	80110B9C: 803DD470 (now__14mDoMtx_stack_c)
//	80110BB0: 803464B0 (PSMTXCopy)
//	80110BB4: 803DD470 (now__14mDoMtx_stack_c)
//	80110BB8: 803DD470 (now__14mDoMtx_stack_c)
//	80110BBC: 80434BE4 (mCurrentMtx__6J3DSys)
//	80110BC0: 80434BE4 (mCurrentMtx__6J3DSys)
//	80110BC4: 803464B0 (PSMTXCopy)
//	80110BD8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::kandelaarModelCallBack() {
    nofralloc
#include "asm/d/a/d_a_alink/kandelaarModelCallBack__9daAlink_cFv.s"
}
#pragma pop

/* 80110BEC-80110C28 003C+00 s=1 e=0 z=0  None .text daAlink_kandelaarModelCallBack__FP8J3DJointi
 */
//	80110BF8: 80434AC8 (j3dSys)
//	80110BFC: 80434AC8 (j3dSys)
//	80110C10: 801108EC (kandelaarModelCallBack__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_kandelaarModelCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_kandelaarModelCallBack__FP8J3DJointi.s"
}
#pragma pop

/* 80110C28-80110C6C 0044+00 s=1 e=0 z=0  None .text      getKandelaarFlamePos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getKandelaarFlamePos() {
    nofralloc
#include "asm/d/a/d_a_alink/getKandelaarFlamePos__9daAlink_cFv.s"
}
#pragma pop

/* 80110C6C-80110C94 0028+00 s=3 e=0 z=0  None .text      checkKandelaarEquipAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkKandelaarEquipAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkKandelaarEquipAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 80110C94-80110E80 01EC+00 s=1 e=0 z=0  None .text      preKandelaarDraw__9daAlink_cFv */
//	80110CCC: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	80110CD0: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	80110D10: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	80110D14: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	80110D54: 80015310 (mDoLib_project__FP3VecP3Vec)
//	80110D58: 804061C0 (g_dComIfG_gameInfo)
//	80110D5C: 804061C0 (g_dComIfG_gameInfo)
//	80110D74: 80452CC0 (lit_6108)
//	80110D7C: 80452CC0 (lit_6108)
//	80110D88: 80453010 (lit_32830)
//	80110DA0: 80453014 (lit_32831)
//	80110DB0: 804061C0 (g_dComIfG_gameInfo)
//	80110DB4: 804061C0 (g_dComIfG_gameInfo)
//	80110DDC: 80056018 (newData__13dDlst_peekZ_cFssPUl)
//	80110DEC: 804061C0 (g_dComIfG_gameInfo)
//	80110DF0: 804061C0 (g_dComIfG_gameInfo)
//	80110E08: 800154EC (mDoLib_pos2camera__FP3VecP3Vec)
//	80110E10: 80452CE0 (lit_6845)
//	80110E1C: 80453018 (lit_32832)
//	80110E2C: 8045301C (lit_32833)
//	80110E30: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::preKandelaarDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/preKandelaarDraw__9daAlink_cFv.s"
}
#pragma pop

/* 80110E80-80110E84 0004+00 s=0 e=3 z=0  None .text
 * setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10               */
void J3DTevBlock::setTevColor(u32 param_0, J3DGXColorS10 const* param_1) {
    /* empty function */
}

/* 80110E84-80110F88 0104+00 s=4 e=0 z=0  None .text      setKandelaarModel__9daAlink_cFv */
//	80110EE4: 80452CE0 (lit_6845)
//	80110F20: 80430CF4 (Zero__4cXyz)
//	80110F24: 80430CF4 (Zero__4cXyz)
//	80110F40: 80452CC0 (lit_6108)
//	80110F48: 80452CBC (lit_6041)
//	80110F74: 802C3778 (setKanteraState__14Z2CreatureLinkFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setKandelaarModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setKandelaarModel__9daAlink_cFv.s"
}
#pragma pop

/* 80110F88-80110FE0 0058+00 s=3 e=0 z=0  None .text      resetOilBottleModel__9daAlink_cFv */
//	80110FA4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	80110FB8: 80110E84 (setKandelaarModel__9daAlink_cFv)
//	80110FC8: 800BF884 (returnKeepItemData__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetOilBottleModel() {
    nofralloc
#include "asm/d/a/d_a_alink/resetOilBottleModel__9daAlink_cFv.s"
}
#pragma pop

/* 80110FE0-801110B8 00D8+00 s=3 e=0 z=0  None .text      commonKandelaarPourInit__9daAlink_cFv */
//	8011101C: 800BF854 (keepItemData__9daAlink_cFv)
//	80111024: 80110E84 (setKandelaarModel__9daAlink_cFv)
//	8011102C: 8002DF1C (dComIfGp_getSelectItem__Fi)
//	80111038: 8010E5D8 (setBottleModel__9daAlink_cFUs)
//	80111044: 804061C0 (g_dComIfG_gameInfo)
//	80111048: 804061C0 (g_dComIfG_gameInfo)
//	80111074: 80181640 (dCam_getBody__Fv)
//	80111080: 80392094 (d_a_d_a_alink__stringBase0)
//	80111084: 80392094 (d_a_d_a_alink__stringBase0)
//	8011109C: 80088A7C (StartEventCamera__9dCamera_cFiie)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonKandelaarPourInit() {
    nofralloc
#include "asm/d/a/d_a_alink/commonKandelaarPourInit__9daAlink_cFv.s"
}
#pragma pop

/* 801110B8-8011130C 0254+00 s=3 e=0 z=0  None .text      commonKandelaarPour__9daAlink_cFi */
//	801110C8: 803621D8 (_savegpr_28)
//	801110D8: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	801110E0: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	80111114: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8011112C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80111148: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80111154: 80452CC0 (lit_6108)
//	80111158: 800AD374 (setUpperAnimeBaseMorf__9daAlink_cFUsf)
//	80111168: 80452CC0 (lit_6108)
//	8011116C: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	80111170: 804061C0 (g_dComIfG_gameInfo)
//	80111174: 804061C0 (g_dComIfG_gameInfo)
//	80111190: 80452D30 (lit_7625)
//	80111194: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801111A0: 80452CC0 (lit_6108)
//	801111BC: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	801111CC: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	801111E0: 804061C0 (g_dComIfG_gameInfo)
//	801111E4: 804061C0 (g_dComIfG_gameInfo)
//	8011121C: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	80111228: 800A9248 (simpleAnmPlay__9daAlink_cFP10J3DAnmBase)
//	80111244: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80111254: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	80111258: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	80111260: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	80111270:
// 8038E77C (m__23daAlinkHIO_kandelaar_c0) 	80111274: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	8011127C: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	80111280:
//80452D14 (lit_7307) 	8011128C: 804061C0 (g_dComIfG_gameInfo) 	80111290: 804061C0
//(g_dComIfG_gameInfo) 	8011129C: 800336BC (setEquipBottleItemEmpty__17dSv_player_item_cFUc)
//	801112A8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801112C4: 80452CC4 (lit_6109)
//	801112C8: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	801112D0: 80110F88 (resetOilBottleModel__9daAlink_cFv)
//	801112D8: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	801112F8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonKandelaarPour(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonKandelaarPour__9daAlink_cFi.s"
}
#pragma pop

/* 8011130C-80111440 0134+00 s=1 e=0 z=0  None .text      initKandelaarSwing__9daAlink_cFv */
//	8011132C: 804061C0 (g_dComIfG_gameInfo)
//	80111330: 804061C0 (g_dComIfG_gameInfo)
//	801113BC: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	801113C4: 80115C20 (checkEventRun__9daAlink_cCFv)
//	801113D0: 804061C0 (g_dComIfG_gameInfo)
//	801113D4: 804061C0 (g_dComIfG_gameInfo)
//	801113DC: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	801113E0: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	80111404: 80452D00 (lit_6895)
//	80111408: 8026F708 (SetR__8cM3dGSphFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initKandelaarSwing() {
    nofralloc
#include "asm/d/a/d_a_alink/initKandelaarSwing__9daAlink_cFv.s"
}
#pragma pop

/* 80111440-801115CC 018C+00 s=2 e=0 z=0  None .text      procKandelaarSwingInit__9daAlink_cFv */
//	80111454: 804061C0 (g_dComIfG_gameInfo)
//	80111458: 804061C0 (g_dComIfG_gameInfo)
//	80111464: 8007398C (convPId__11dAttCatch_cFUi)
//	801114B4: 8010FC38 (procBottleSwingInit__9daAlink_cFP10fopAc_ac_ci)
//	801114C4: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801114D8: 80452CC0 (lit_6108)
//	801114FC: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	8011150C: 80392094 (d_a_d_a_alink__stringBase0)
//	80111510: 80392094 (d_a_d_a_alink__stringBase0)
//	80111518: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80111524: 80110668 (daAlink_searchTagKtOnFire__FP10fopAc_ac_cPv)
//	80111528: 80110668 (daAlink_searchTagKtOnFire__FP10fopAc_ac_cPv)
//	80111530: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80111544: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	80111548: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	80111550: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	80111554:
//8038E90C (m__20daAlinkHIO_bottle_c0) 	80111558: 8038E90C (m__20daAlinkHIO_bottle_c0) 	80111564:
//80452D3C (lit_7808) 	8011156C: 80452D1C (lit_7448) 	80111580: 8038E77C
//(m__23daAlinkHIO_kandelaar_c0) 	80111584: 8038E77C (m__23daAlinkHIO_kandelaar_c0) 	80111588:
//800AD0F4 (setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 8011158C:
//8038E77C (m__23daAlinkHIO_kandelaar_c0) 	80111590: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//8011159C: 80452D24 (lit_7450) 	801115A4: 80452EB4 (lit_17382) 	801115B0: 8011130C
//(initKandelaarSwing__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procKandelaarSwingInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procKandelaarSwingInit__9daAlink_cFv.s"
}
#pragma pop

/* 801115CC-8011167C 00B0+00 s=1 e=0 z=0  None .text      procKandelaarSwing__9daAlink_cFv */
//	801115EC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80111604: 804061C0 (g_dComIfG_gameInfo)
//	80111608: 804061C0 (g_dComIfG_gameInfo)
//	80111614: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80111624: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	8011165C: 800BA0D0 (checkNextAction__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procKandelaarSwing() {
    nofralloc
#include "asm/d/a/d_a_alink/procKandelaarSwing__9daAlink_cFv.s"
}
#pragma pop

/* 8011167C-80111724 00A8+00 s=1 e=0 z=0  None .text      procKandelaarPourInit__9daAlink_cFv */
//	80111690: 804061C0 (g_dComIfG_gameInfo)
//	80111694: 804061C0 (g_dComIfG_gameInfo)
//	801116AC: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	801116D0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801116DC: 80452CC0 (lit_6108)
//	801116F4: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	801116F8: 8038E77C (m__23daAlinkHIO_kandelaar_c0)
//	80111700: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	80111708:
//80110FE0 (commonKandelaarPourInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procKandelaarPourInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procKandelaarPourInit__9daAlink_cFv.s"
}
#pragma pop

/* 80111724-8011174C 0028+00 s=1 e=0 z=0  None .text      procKandelaarPour__9daAlink_cFv */
//	80111734: 801110B8 (commonKandelaarPour__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procKandelaarPour() {
    nofralloc
#include "asm/d/a/d_a_alink/procKandelaarPour__9daAlink_cFv.s"
}
#pragma pop

/* 8011174C-80111770 0024+00 s=1 e=0 z=0  None .text      daAlink_searchWhistle__FP10fopAc_ac_cPv */
//	8011174C: 804061C0 (g_dComIfG_gameInfo)
//	80111750: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchWhistle(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchWhistle__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80111770-80111784 0014+00 s=1 e=0 z=0  None .text      daAlink_searchHawk__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchHawk(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchHawk__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045069C-804506A4 0008+00 s=1 e=0 z=0  None .sdata     grassWhistleArcName$33096 */
SECTION_SDATA static void* grassWhistleArcName[2] = {
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0xAD),
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0xB4),
};

/* 80111784-8011181C 0098+00 s=1 e=0 z=0  None .text      setGrassWhistleModel__9daAlink_cFi */
//	80111794: 803621DC (_savegpr_29)
//	801117A0: 800A3C8C (setItemHeap__9daAlink_cFv)
//	801117AC: 8045069C (grassWhistleArcName)
//	801117B8: 80453020 (grassWhistleIdx)
//	801117C0: 804061C0 (g_dComIfG_gameInfo)
//	801117C4: 804061C0 (g_dComIfG_gameInfo)
//	801117D4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	801117E4: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	801117F0: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	80111808: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrassWhistleModel(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGrassWhistleModel__9daAlink_cFi.s"
}
#pragma pop

/* 8011181C-80111894 0078+00 s=1 e=0 z=0  None .text      setHorseWhistleModel__9daAlink_cFv */
//	80111834: 800A3C8C (setItemHeap__9daAlink_cFv)
//	80111848: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	8011185C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80111868: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseWhistleModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseWhistleModel__9daAlink_cFv.s"
}
#pragma pop

/* 80111894-801119D8 0144+00 s=2 e=0 z=0  None .text      procGrassWhistleGetInit__9daAlink_cFv */
//	801118BC: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	801118C8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801118CC: 80452CC0 (lit_6108)
//	801118EC: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	801118F0: 8038E90C (m__20daAlinkHIO_bottle_c0)
//	801118F8: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	8011190C:
//8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c) 	80111958: 80439A20 (sincosTable___5JMath)
//8011195C: 80439A20 (sincosTable___5JMath) 	80111974: 80452D00 (lit_6895)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrassWhistleGetInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleGetInit__9daAlink_cFv.s"
}
#pragma pop

/* 801119D8-80111A9C 00C4+00 s=1 e=0 z=0  None .text      procGrassWhistleGet__9daAlink_cFv */
//	801119F8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80111A1C: 80111A9C (procGrassWhistleWaitInit__9daAlink_cFiiisP4cXyz)
//	80111A34: 80452D34 (lit_7710)
//	80111A4C: 80111784 (setGrassWhistleModel__9daAlink_cFi)
//	80111A60: 8001CB48 (fopAcM_setCarryNow__FP10fopAc_ac_ci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrassWhistleGet() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleGet__9daAlink_cFv.s"
}
#pragma pop

/* 80111A9C-80111CA4 0208+00 s=2 e=0 z=0  None .text
 * procGrassWhistleWaitInit__9daAlink_cFiiisP4cXyz              */
//	80111AAC: 803621CC (_savegpr_25)
//	80111ADC: 804061C0 (g_dComIfG_gameInfo)
//	80111AE0: 804061C0 (g_dComIfG_gameInfo)
//	80111AF4: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	80111B08: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	80111B20: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80111B30: 800BF854 (keepItemData__9daAlink_cFv)
//	80111B38: 8011181C (setHorseWhistleModel__9daAlink_cFv)
//	80111B44: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	80111B64: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	80111BA4: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80111BB0: 80452CBC (lit_6041)
//	80111BB4: 800AD374 (setUpperAnimeBaseMorf__9daAlink_cFUsf)
//	80111BC0: 800AFB14 (setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	80111BE0: 80181640 (dCam_getBody__Fv)
//	80111BF4: 80088A7C (StartEventCamera__9dCamera_cFiie)
//	80111C10: 80452CC0 (lit_6108)
//	80111C38: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80111C44: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80111C48: 80452DA4 (lit_9138)
//	80111C74: 804061C0 (g_dComIfG_gameInfo)
//	80111C78: 804061C0 (g_dComIfG_gameInfo)
//	80111C90: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrassWhistleWaitInit(int param_0, int param_1, int param_2, s16 param_3,
                                             cXyz* param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleWaitInit__9daAlink_cFiiisP4cXyz.s"
}
#pragma pop

/* 80111CA4-80111FF0 034C+00 s=1 e=0 z=0  None .text      procGrassWhistleWait__9daAlink_cFv */
//	80111CB4: 803621DC (_savegpr_29)
//	80111CCC: 801187B4 (checkEndMessage__9daAlink_cFUl)
//	80111CDC: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	80111CE4: 800C33B8 (procWaitInit__9daAlink_cFv)
//	80111D14: 800C33B8 (procWaitInit__9daAlink_cFv)
//	80111D38: 804061C0 (g_dComIfG_gameInfo)
//	80111D3C: 804061C0 (g_dComIfG_gameInfo)
//	80111D44: 8011174C (daAlink_searchWhistle__FP10fopAc_ac_cPv)
//	80111D48: 8011174C (daAlink_searchWhistle__FP10fopAc_ac_cPv)
//	80111D50: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80111D98: 800517EC (dPath_GetRoomPath__Fii)
//	80111DB0: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	80111DE0: 80362084 (__ptmf_scall)
//	80111E10: 80111FF0 (procCoHorseCallWaitInit__9daAlink_cFi)
//	80111E24: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	80111E2C: 800C33B8 (procWaitInit__9daAlink_cFv)
//	80111E3C: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	80111E58: 800B3298 (setBStatus__9daAlink_cFUc)
//	80111E64: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80111E78: 800B3298 (setBStatus__9daAlink_cFUc)
//	80111E84: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80111EA8: 80452CC0 (lit_6108)
//	80111EAC: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	80111EB8: 80452CBC (lit_6041)
//	80111EBC: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80111EC0: 804061C0 (g_dComIfG_gameInfo)
//	80111EC4: 804061C0 (g_dComIfG_gameInfo)
//	80111F04: 804061C0 (g_dComIfG_gameInfo)
//	80111F08: 804061C0 (g_dComIfG_gameInfo)
//	80111F18: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80111F2C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80111F40: 8003498C (onEventBit__11dSv_event_cFUs)
//	80111F78: 804061C0 (g_dComIfG_gameInfo)
//	80111F7C: 804061C0 (g_dComIfG_gameInfo)
//	80111F88: 8003498C (onEventBit__11dSv_event_cFUs)
//	80111F98: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	80111FAC: 80452CBC (lit_6041)
//	80111FB0: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80111FB8: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	80111FC0: 800C33B8 (procWaitInit__9daAlink_cFv)
//	80111FD0: 800B3298 (setBStatus__9daAlink_cFUc)
//	80111FDC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrassWhistleWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleWait__9daAlink_cFv.s"
}
#pragma pop

/* 80111FF0-801120C8 00D8+00 s=2 e=0 z=0  None .text      procCoHorseCallWaitInit__9daAlink_cFi */
//	80112010: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80112058: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011205C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80112064: 80452CC4 (lit_6109)
//	80112068: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80112078: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011207C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	80112084: 80452CC4 (lit_6109)
//	80112088: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80112094: 800B3298 (setBStatus__9daAlink_cFUc)
//	80112098: 804061C0 (g_dComIfG_gameInfo)
//	8011209C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoHorseCallWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoHorseCallWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 801120C8-801121B4 00EC+00 s=1 e=0 z=0  None .text      procCoHorseCallWait__9daAlink_cFv */
//	801120E0: 800B3298 (setBStatus__9daAlink_cFUc)
//	801120FC: 804061C0 (g_dComIfG_gameInfo)
//	80112100: 804061C0 (g_dComIfG_gameInfo)
//	80112114: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8011212C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80112144: 80181640 (dCam_getBody__Fv)
//	8011215C: 80181640 (dCam_getBody__Fv)
//	80112178: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8011218C: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	80112198: 800C33B8 (procWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoHorseCallWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoHorseCallWait__9daAlink_cFv.s"
}
#pragma pop

/* 801121B4-80112220 006C+00 s=1 e=0 z=0  None .text      procHawkCatchInit__9daAlink_cFv */
//	801121D8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801121F4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	80112204: 800C12DC (deleteEquipItem__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHawkCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHawkCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 80112220-80112278 0058+00 s=1 e=0 z=0  None .text      procHawkCatch__9daAlink_cFv */
//	80112238: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80112244: 804061C0 (g_dComIfG_gameInfo)
//	80112248: 804061C0 (g_dComIfG_gameInfo)
//	80112254: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011225C: 80112278 (procHawkSubjectInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHawkCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procHawkCatch__9daAlink_cFv.s"
}
#pragma pop

/* 80112278-80112304 008C+00 s=2 e=0 z=0  None .text      procHawkSubjectInit__9daAlink_cFv */
//	80112290: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801122AC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	801122B0: 80111770 (daAlink_searchHawk__FP10fopAc_ac_cPv)
//	801122B4: 80111770 (daAlink_searchHawk__FP10fopAc_ac_cPv)
//	801122BC: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	801122CC: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	801122E8: 800C12DC (deleteEquipItem__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHawkSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHawkSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 80112304-8011243C 0138+00 s=1 e=0 z=0  None .text      procHawkSubject__9daAlink_cFv */
//	80112344: 800B58EC (checkWaitAction__9daAlink_cFv)
//	8011234C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80112358: 804061C0 (g_dComIfG_gameInfo)
//	8011235C: 804061C0 (g_dComIfG_gameInfo)
//	80112368: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011237C: 800B3298 (setBStatus__9daAlink_cFUc)
//	80112388: 800B3250 (setDoStatus__9daAlink_cFUc)
//	801123B8: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	801123C8: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
//	801123D8: 800B58EC (checkWaitAction__9daAlink_cFv)
//	801123E4: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
//	801123F4: 80452D5C (lit_8322)
//	801123FC: 800BF500 (checkSightLine__9daAlink_cFfP4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHawkSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHawkSubject__9daAlink_cFv.s"
}
#pragma pop

/* 8011243C-80112458 001C+00 s=1 e=0 z=0  None .text      getIronBallCenterPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getIronBallCenterPos() {
    nofralloc
#include "asm/d/a/d_a_alink/getIronBallCenterPos__9daAlink_cFv.s"
}
#pragma pop

/* 80112458-80112474 001C+00 s=1 e=0 z=0  None .text      getIronBallBgHit__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getIronBallBgHit() const {
    nofralloc
#include "asm/d/a/d_a_alink/getIronBallBgHit__9daAlink_cCFv.s"
}
#pragma pop

/* 80112474-801124B4 0040+00 s=0 e=2 z=1  None .text      checkIronBallThrowMode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallThrowMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallThrowMode__9daAlink_cCFv.s"
}
#pragma pop

/* 801124B4-801124FC 0048+00 s=0 e=1 z=1  None .text checkIronBallThrowReturnMode__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallThrowReturnMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallThrowReturnMode__9daAlink_cCFv.s"
}
#pragma pop

/* 801124FC-80112524 0028+00 s=1 e=0 z=0  None .text      checkIronBallReturn__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallReturn() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallReturn__9daAlink_cCFv.s"
}
#pragma pop

/* 80112524-80112568 0044+00 s=1 e=0 z=0  None .text      checkIronBallGroundStop__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallGroundStop() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallGroundStop__9daAlink_cCFv.s"
}
#pragma pop

/* 80112568-80112628 00C0+00 s=5 e=0 z=0  None .text      setIronBallWaitUpperAnime__9daAlink_cFi */
//	801125B4: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	801125C8: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	801125CC: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	801125D4: 8038D664 (m__19daAlinkHIO_basic_c0)
//	801125D8: 8038D664 (m__19daAlinkHIO_basic_c0)
//	801125E0: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	801125F8: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallWaitUpperAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallWaitUpperAnime__9daAlink_cFi.s"
}
#pragma pop

/* 80112628-801126F8 00D0+00 s=1 e=0 z=0  None .text      checkIronBallDelete__9daAlink_cFv */
//	801126A0: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	801126E0: 800C12DC (deleteEquipItem__9daAlink_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallDelete() {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallDelete__9daAlink_cFv.s"
}
#pragma pop

/* 801126F8-80112768 0070+00 s=2 e=0 z=0  None .text      setIronBallReturn__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallReturn(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallReturn__9daAlink_cFi.s"
}
#pragma pop

/* 80112768-801127F0 0088+00 s=2 e=0 z=0  None .text      setIronBallBgCheckPos__9daAlink_cFv */
//	80112780: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80112788: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	8011278C: 803DD470 (now__14mDoMtx_stack_c)
//	80112790: 803DD470 (now__14mDoMtx_stack_c)
//	80112794: 8038FB50 (l_ironBallCenterVec)
//	80112798: 8038FB50 (l_ironBallCenterVec)
//	801127A0: 80346D6C (PSMTXMultVec)
//	801127AC: 80452E28 (lit_14621)
//	801127D0: 80452CC0 (lit_6108)
//	801127D4: 80452D14 (lit_7307)
//	801127D8: 80270740 (cLib_chaseF__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallBgCheckPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallBgCheckPos__9daAlink_cFv.s"
}
#pragma pop

/* 801127F0-80112C80 0490+00 s=1 e=0 z=0  None .text      setIronBallModel__9daAlink_cFv */
//	80112800: 803621DC (_savegpr_29)
//	80112808: 800A3C8C (setItemHeap__9daAlink_cFv)
//	8011281C: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	80112830: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80112844: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	80112850: 802CEC4C (__nw__FUl)
//	8011285C: 803CD97C (__vt__9J3DPacket)
//	80112860: 803CD97C (__vt__9J3DPacket)
//	80112878: 803B35EC (__vt__Q29daAlink_c14hsChainShape_c)
//	8011287C: 803B35EC (__vt__Q29daAlink_c14hsChainShape_c)
//	8011288C: 802CECC4 (__nwa__FUl)
//	80112890: 800125DC (__ct__4cXyzFv)
//	80112894: 800125DC (__ct__4cXyzFv)
//	80112898: 80009184 (__dt__4cXyzFv)
//	8011289C: 80009184 (__dt__4cXyzFv)
//	801128A8: 80361F14 (__construct_new_array)
//	801128B4: 802CECC4 (__nwa__FUl)
//	801128B8: 80112C80 (__ct__5csXyzFv)
//	801128BC: 80112C80 (__ct__5csXyzFv)
//	801128C0: 80018BD0 (__dt__5csXyzFv)
//	801128C4: 80018BD0 (__dt__5csXyzFv)
//	801128D0: 80361F14 (__construct_new_array)
//	801128DC: 802CECC4 (__nwa__FUl)
//	801128E0: 800125DC (__ct__4cXyzFv)
//	801128E4: 800125DC (__ct__4cXyzFv)
//	801128E8: 80009184 (__dt__4cXyzFv)
//	801128EC: 80009184 (__dt__4cXyzFv)
//	801128F8: 80361F14 (__construct_new_array)
//	80112904: 802CEC4C (__nw__FUl)
//	80112910: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80112920: 802CEC4C (__nw__FUl)
//	8011292C: 800760A0 (__ct__9dBgS_AcchFv)
//	80112930: 803B35C8 (__vt__12dBgS_ObjAcch)
//	80112934: 803B35C8 (__vt__12dBgS_ObjAcch)
//	80112950: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	8011295C: 802CEC4C (__nw__FUl)
//	80112968: 802BE844 (__ct__16Z2SoundObjSimpleFv)
//	80112978: 802CEC4C (__nw__FUl)
//	80112984: 80077F5C (__ct__14dBgS_ObjLinChkFv)
//	801129B4: 802CEC4C (__nw__FUl)
//	801129C0: 80077F5C (__ct__14dBgS_ObjLinChkFv)
//	801129D0: 802CEC4C (__nw__FUl)
//	801129E0: 80452E28 (lit_14621)
//	801129E4: 80453024 (lit_33587)
//	801129E8: 80050C9C (init__7dPaPo_cFP9dBgS_Acchff)
//	801129F0: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	80112A28: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80112A2C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80112A34: 8026F708 (SetR__8cM3dGSphFf)
//	80112A48: 80430CF4 (Zero__4cXyz)
//	80112A4C: 80430CF4 (Zero__4cXyz)
//	80112B2C: 80452E28 (lit_14621)
//	80112B34: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80112B5C: 80076248
//(Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz) 	80112B70:
//80453024 (lit_33587) 	80112B94: 80078E74 (ClrObj__16dBgS_PolyPassChkFv) 	80112BA0: 80078F94
//(SetIronBall__16dBgS_PolyPassChkFv) 	80112BAC: 80078E74 (ClrObj__16dBgS_PolyPassChkFv) 80112BB8:
// 80078F94 (SetIronBall__16dBgS_PolyPassChkFv) 	80112C10: 80083860
// (Init__9dCcD_SttsFiiP10fopAc_ac_c) 	80112C18: 803B2798 (l_sphSrc) 	80112C1C: 803B2798 (l_sphSrc)
//	80112C20: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80112C48: 80452DD4 (lit_11442)
//	80112C4C: 8026F708 (SetR__8cM3dGSphFf)
//	80112C58: 80264900 (SetIGrp__10cCcD_ObjCoFUl)
//	80112C64: 8026491C (SetVsGrp__10cCcD_ObjCoFUl)
//	80112C6C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallModel__9daAlink_cFv.s"
}
#pragma pop

/* 80112C80-80112C84 0004+00 s=2 e=2 z=0  None .text      __ct__5csXyzFv */
csXyz::csXyz() {
    /* empty function */
}

/* 80112C84-80112E7C 01F8+00 s=1 e=0 z=0  None .text
 * setIronBallGroundVec__9daAlink_cFPC4cXyzP4cXyz               */
//	80112CAC: 80452D00 (lit_6895)
//	80112CCC: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80112CD8: 80452D24 (lit_7450)
//	80112CDC: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80112CEC: 80452CC0 (lit_6108)
//	80112D10: 80347138 (PSVECSquareMag)
//	80112D14: 80452CC0 (lit_6108)
//	80112D24: 80452CE8 (lit_6846)
//	80112D2C: 80452CF0 (lit_6847)
//	80112D74: 80452CF8 (lit_6848)
//	80112D80: 80450AE0 (__float_nan)
//	80112D84: 80450AE0 (__float_nan)
//	80112DF0: 80450AE0 (__float_nan)
//	80112DF4: 80450AE0 (__float_nan)
//	80112E04: 80452DA0 (lit_9054)
//	80112E4C: 80266F48 (normalizeZP__4cXyzFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallGroundVec(cXyz const* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallGroundVec__9daAlink_cFPC4cXyzP4cXyz.s"
}
#pragma pop

/* 80112E7C-80113CA0 0E24+00 s=1 e=0 z=0  None .text      setIronBallChainPos__9daAlink_cFv */
//	80112EA4: 803621C8 (_savegpr_24)
//	80112F2C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80112F50: 80266F48 (normalizeZP__4cXyzFv)
//	80112F58: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80112F5C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80112F84: 80452D30 (lit_7625)
//	80112F88: 80266B84 (__ml__4cXyzCFf)
//	80112F98: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80112FC0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80112FD0: 80266B84 (__ml__4cXyzCFf)
//	80113030: 80452CB0 (lit_6025)
//	8011304C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80113050: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011307C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8011308C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801130F0: 80266F48 (normalizeZP__4cXyzFv)
//	801130FC: 80452D30 (lit_7625)
//	80113100: 80266B84 (__ml__4cXyzCFf)
//	80113110: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80113148: 80112768 (setIronBallBgCheckPos__9daAlink_cFv)
//	80113168: 804061C0 (g_dComIfG_gameInfo)
//	8011316C: 804061C0 (g_dComIfG_gameInfo)
//	80113174: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80113194: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801131A4: 80347090 (PSVECAdd)
//	801131D4: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	801131D8: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80113208: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80113218: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80113278: 80266F48 (normalizeZP__4cXyzFv)
//	80113284: 80452D30 (lit_7625)
//	80113288: 80266B84 (__ml__4cXyzCFf)
//	80113298: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801132C0: 80112C84 (setIronBallGroundVec__9daAlink_cFPC4cXyzP4cXyz)
//	801132D4: 80452D30 (lit_7625)
//	801132D8: 80266B84 (__ml__4cXyzCFf)
//	801132E8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80113314: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80113324: 80266B84 (__ml__4cXyzCFf)
//	80113380: 80452D84 (lit_8781)
//	8011338C: 80452CB0 (lit_6025)
//	801133B0: 803DD470 (now__14mDoMtx_stack_c)
//	801133B4: 803DD470 (now__14mDoMtx_stack_c)
//	801133C4: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	801133C8: 803DD470 (now__14mDoMtx_stack_c)
//	801133CC: 803DD470 (now__14mDoMtx_stack_c)
//	801133D0: 80453028 (lit_34189)
//	801133D4: 8045302C (lit_34190)
//	801133EC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	801133F0: 803DD470 (now__14mDoMtx_stack_c)
//	801133F4: 803DD470 (now__14mDoMtx_stack_c)
//	801133F8: 80430D3C (BaseZ__4cXyz)
//	801133FC: 80430D3C (BaseZ__4cXyz)
//	80113404: 80346D6C (PSMTXMultVec)
//	80113410: 80452E64 (lit_14954)
//	80113414: 80452CB8 (lit_6040)
//	80113420: 803470D8 (PSVECScale)
//	80113434: 80391A2C (lit_33690)
//	80113438: 80391A2C (lit_33690)
//	80113454: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80113458: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011346C: 803DD470 (now__14mDoMtx_stack_c)
//	80113470: 803DD470 (now__14mDoMtx_stack_c)
//	80113480: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	80113484: 803DD470 (now__14mDoMtx_stack_c)
//	80113488: 803DD470 (now__14mDoMtx_stack_c)
//	80113494: 80346D6C (PSMTXMultVec)
//	80113498: 80452D14 (lit_7307)
//	8011349C: 80452CB8 (lit_6040)
//	801134DC: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	801134E0: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011350C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8011351C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80113570: 80347090 (PSVECAdd)
//	80113598: 80266F48 (normalizeZP__4cXyzFv)
//	801135A4: 80452D30 (lit_7625)
//	801135A8: 80266B84 (__ml__4cXyzCFf)
//	801135B8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801135E0: 80112C84 (setIronBallGroundVec__9daAlink_cFPC4cXyzP4cXyz)
//	801135F4: 80452D30 (lit_7625)
//	801135F8: 80266B84 (__ml__4cXyzCFf)
//	80113608: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80113630: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80113640: 80266B84 (__ml__4cXyzCFf)
//	80113680: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801136BC: 80347090 (PSVECAdd)
//	801136C4: 80267128 (atan2sX_Z__4cXyzCFv)
//	801136D0: 80267150 (atan2sY_XZ__4cXyzCFv)
//	801136F8: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	801136FC: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80113708: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011370C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011373C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8011374C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80113778: 80266F48 (normalizeZP__4cXyzFv)
//	80113784: 80452D30 (lit_7625)
//	80113788: 80266B84 (__ml__4cXyzCFf)
//	80113798: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80113800: 800AC5B4 (checkUnderMove1BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80113810: 80452E08 (lit_14064)
//	80113820: 80452D20 (lit_7449)
//	80113830: 80452CC4 (lit_6109)
//	80113848: 80452D3C (lit_7808)
//	80113850: 80452E08 (lit_14064)
//	80113860: 80439A20 (sincosTable___5JMath)
//	80113864: 80439A20 (sincosTable___5JMath)
//	80113888: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011388C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	801138E0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801138F0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8011394C: 80266F48 (normalizeZP__4cXyzFv)
//	80113958: 80452D30 (lit_7625)
//	8011395C: 80266B84 (__ml__4cXyzCFf)
//	8011396C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80113994: 80112C84 (setIronBallGroundVec__9daAlink_cFPC4cXyzP4cXyz)
//	801139A8: 80452D30 (lit_7625)
//	801139AC: 80266B84 (__ml__4cXyzCFf)
//	801139BC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801139E8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801139F8: 80266B84 (__ml__4cXyzCFf)
//	80113A4C: 80452CC0 (lit_6108)
//	80113A50: 80452CB8 (lit_6040)
//	80113A60: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80113A8C: 80347138 (PSVECSquareMag)
//	80113A9C: 80452CE8 (lit_6846)
//	80113AA4: 80452CF0 (lit_6847)
//	80113AEC: 80452CF8 (lit_6848)
//	80113AF8: 80450AE0 (__float_nan)
//	80113AFC: 80450AE0 (__float_nan)
//	80113B68: 80450AE0 (__float_nan)
//	80113B6C: 80450AE0 (__float_nan)
//	80113B84: 80267128 (atan2sX_Z__4cXyzCFv)
//	80113B90: 80267150 (atan2sY_XZ__4cXyzCFv)
//	80113BE4: 80430CF4 (Zero__4cXyz)
//	80113BE8: 80430CF4 (Zero__4cXyz)
//	80113C8C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallChainPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallChainPos__9daAlink_cFv.s"
}
#pragma pop

/* 80113CA0-80113D58 00B8+00 s=1 e=0 z=0  None .text      checkIronBallReturnChange__9daAlink_cFv */
//	80113CD4: 80452D68 (lit_8472)
//	80113CFC: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	80113D0C: 800843A8 (GetAtHitGObj__12dCcD_GObjInfFv)
//	80113D1C: 800843A8 (GetAtHitGObj__12dCcD_GObjInfFv)
//	80113D34: 801126F8 (setIronBallReturn__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallReturnChange() {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallReturnChange__9daAlink_cFv.s"
}
#pragma pop

/* 80113D58-801150E4 138C+00 s=1 e=0 z=0  None .text      setIronBallPos__9daAlink_cFv */
//	80113D80: 803621C8 (_savegpr_24)
//	80113D88: 8038D658 (lit_3757)
//	80113D8C: 8038D658 (lit_3757)
//	80113DB8: 803DD470 (now__14mDoMtx_stack_c)
//	80113DBC: 803DD470 (now__14mDoMtx_stack_c)
//	80113DC0: 803464B0 (PSMTXCopy)
//	80113DC4: 80452CBC (lit_6041)
//	80113DC8: 80453030 (lit_34772)
//	80113DCC: 80453034 (lit_34773)
//	80113DD0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80113DD4: 803DD470 (now__14mDoMtx_stack_c)
//	80113DD8: 803DD470 (now__14mDoMtx_stack_c)
//	80113DE8: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	80113DF8: 80452CC0 (lit_6108)
//	80113E00: 80452D30 (lit_7625)
//	80113E04: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80113E08: 803DD470 (now__14mDoMtx_stack_c)
//	80113E0C: 803DD470 (now__14mDoMtx_stack_c)
//	80113E14: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80113E18: 803DD470 (now__14mDoMtx_stack_c)
//	80113E1C: 803DD470 (now__14mDoMtx_stack_c)
//	80113E28: 80346D6C (PSMTXMultVec)
//	80113E2C: 803DD470 (now__14mDoMtx_stack_c)
//	80113E30: 803DD470 (now__14mDoMtx_stack_c)
//	80113E54: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	80113EA0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80113EAC: 80452C98 (lit_5943)
//	80113EB0: 80266B84 (__ml__4cXyzCFf)
//	80113EF4: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	80113F00: 80452CC0 (lit_6108)
//	80113F08: 80452CB8 (lit_6040)
//	80113F14: 804061C0 (g_dComIfG_gameInfo)
//	80113F18: 804061C0 (g_dComIfG_gameInfo)
//	80113F2C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80113F4C: 803DD470 (now__14mDoMtx_stack_c)
//	80113F50: 803DD470 (now__14mDoMtx_stack_c)
//	80113F54: 803464B0 (PSMTXCopy)
//	80113F58: 80453038 (lit_34774)
//	80113F5C: 8045303C (lit_34775)
//	80113F60: 80453040 (lit_34776)
//	80113F64: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80113F68: 803DD470 (now__14mDoMtx_stack_c)
//	80113F6C: 803DD470 (now__14mDoMtx_stack_c)
//	80113F7C: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	80113FB0: 803DD470 (now__14mDoMtx_stack_c)
//	80113FB4: 803DD470 (now__14mDoMtx_stack_c)
//	80113FBC: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	80113FFC: 80452F28 (lit_21624)
//	80114000: 80453044 (lit_34777)
//	8011400C: 80452CB0 (lit_6025)
//	80114048: 80452D30 (lit_7625)
//	80114068: 80452CC0 (lit_6108)
//	8011407C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80114080: 803DD470 (now__14mDoMtx_stack_c)
//	80114084: 803DD470 (now__14mDoMtx_stack_c)
//	80114094: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80114098: 803DD470 (now__14mDoMtx_stack_c)
//	8011409C: 803DD470 (now__14mDoMtx_stack_c)
//	801140A4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	801140A8: 803DD470 (now__14mDoMtx_stack_c)
//	801140AC: 803DD470 (now__14mDoMtx_stack_c)
//	801140B8: 80346D6C (PSMTXMultVec)
//	801140BC: 803DD470 (now__14mDoMtx_stack_c)
//	801140C0: 803DD470 (now__14mDoMtx_stack_c)
//	801140C8: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	801140F0: 80113CA0 (checkIronBallReturnChange__9daAlink_cFv)
//	80114114: 80347090 (PSVECAdd)
//	8011411C: 80113CA0 (checkIronBallReturnChange__9daAlink_cFv)
//	80114148: 8001D890 (fopAcM_getWaterY__FPC4cXyzPf)
//	80114184: 80452C98 (lit_5943)
//	80114188: 803470D8 (PSVECScale)
//	8011418C: 80452C98 (lit_5943)
//	801141A8: 80452DDC (lit_11471)
//	801141AC: 80266B84 (__ml__4cXyzCFf)
//	801141BC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801141E0: 8034739C (PSVECSquareDistance)
//	801141E4: 80452CC0 (lit_6108)
//	801141F4: 80452CE8 (lit_6846)
//	801141FC: 80452CF0 (lit_6847)
//	80114244: 80452CF8 (lit_6848)
//	80114250: 80450AE0 (__float_nan)
//	80114254: 80450AE0 (__float_nan)
//	801142C0: 80450AE0 (__float_nan)
//	801142C4: 80450AE0 (__float_nan)
//	801142D0: 80452CB0 (lit_6025)
//	801142EC: 80452DA0 (lit_9054)
//	8011435C: 80347090 (PSVECAdd)
//	8011436C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8011438C: 80347138 (PSVECSquareMag)
//	80114390: 80452CC0 (lit_6108)
//	801143A0: 80452CE8 (lit_6846)
//	801143A8: 80452CF0 (lit_6847)
//	801143F0: 80452CF8 (lit_6848)
//	801143FC: 80450AE0 (__float_nan)
//	80114400: 80450AE0 (__float_nan)
//	8011446C: 80450AE0 (__float_nan)
//	80114470: 80450AE0 (__float_nan)
//	80114478: 80452DB8 (lit_10041)
//	80114490: 803470D8 (PSVECScale)
//	801144A0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801144C4: 80347138 (PSVECSquareMag)
//	801144C8: 80452CB8 (lit_6040)
//	801144DC: 80452CC0 (lit_6108)
//	801144FC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80114524: 80267128 (atan2sX_Z__4cXyzCFv)
//	80114530: 80267150 (atan2sY_XZ__4cXyzCFv)
//	80114560: 80439A20 (sincosTable___5JMath)
//	80114564: 80439A20 (sincosTable___5JMath)
//	8011456C: 80452D00 (lit_6895)
//	80114570: 80452DD4 (lit_11442)
//	8011458C: 80112768 (setIronBallBgCheckPos__9daAlink_cFv)
//	801145B4: 804061C0 (g_dComIfG_gameInfo)
//	801145B8: 804061C0 (g_dComIfG_gameInfo)
//	801145C4: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	801145DC: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	801145F8: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	80114634: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	8011464C: 80452CC0 (lit_6108)
//	8011465C: 80347138 (PSVECSquareMag)
//	80114660: 80452CC0 (lit_6108)
//	80114670: 80452CE8 (lit_6846)
//	80114678: 80452CF0 (lit_6847)
//	801146C0: 80452CF8 (lit_6848)
//	801146CC: 80450AE0 (__float_nan)
//	801146D0: 80450AE0 (__float_nan)
//	8011473C: 80450AE0 (__float_nan)
//	80114740: 80450AE0 (__float_nan)
//	80114754: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	80114774: 80452CC4 (lit_6109)
//	80114780: 80452CC0 (lit_6108)
//	80114788: 80452CB8 (lit_6040)
//	801147A4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	801147CC: 80452E28 (lit_14621)
//	801147E0: 80439A20 (sincosTable___5JMath)
//	801147E4: 80439A20 (sincosTable___5JMath)
//	801147F8: 80452D98 (lit_8786)
//	80114828: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	80114844: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	80114864: 80452CC4 (lit_6109)
//	80114870: 80452CC0 (lit_6108)
//	80114878: 80452CB8 (lit_6040)
//	80114894: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	801148BC: 80452E28 (lit_14621)
//	801148D4: 80452D98 (lit_8786)
//	801148F0: 80453048 (lit_34778)
//	801148F8: 80452D50 (lit_8247)
//	80114920: 802C4814 (startHitItemSE__14Z2CreatureLinkFUlUlP14Z2SoundObjBasef)
//	80114988: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80114998: 80347090 (PSVECAdd)
//	801149B4: 8045304C (lit_34779)
//	801149D0: 80452CC0 (lit_6108)
//	801149DC: 80452E08 (lit_14064)
//	80114A04: 80452C98 (lit_5943)
//	80114A28: 80105ABC (checkSnowCodePolygon__9daAlink_cFR13cBgS_PolyInfo)
//	80114A34: 80452F90 (lit_25059)
//	80114A40: 80452CC0 (lit_6108)
//	80114A4C: 80452D4C (lit_8131)
//	80114A60: 80452CB8 (lit_6040)
//	80114A74: 80452D00 (lit_6895)
//	80114A98: 80452C98 (lit_5943)
//	80114AB4: 80452CC0 (lit_6108)
//	80114AC0: 80452D4C (lit_8131)
//	80114AEC: 80452CC0 (lit_6108)
//	80114B00: 801126F8 (setIronBallReturn__9daAlink_cFi)
//	80114B28: 801126F8 (setIronBallReturn__9daAlink_cFi)
//	80114B48: 801126F8 (setIronBallReturn__9daAlink_cFi)
//	80114B74: 8001D890 (fopAcM_getWaterY__FPC4cXyzPf)
//	80114BF0: 80452CC0 (lit_6108)
//	80114BFC: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80114C00: 803DD470 (now__14mDoMtx_stack_c)
//	80114C04: 803DD470 (now__14mDoMtx_stack_c)
//	80114C0C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80114C10: 803DD470 (now__14mDoMtx_stack_c)
//	80114C14: 803DD470 (now__14mDoMtx_stack_c)
//	80114C20: 80346D6C (PSMTXMultVec)
//	80114C28: 80452E24 (lit_14620)
//	80114C3C: 80452C98 (lit_5943)
//	80114C40: 80452D10 (lit_7306)
//	80114C44: 80452D30 (lit_7625)
//	80114C48: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80114C60: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80114C7C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80114C84: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80114C8C: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80114C90: 803DD470 (now__14mDoMtx_stack_c)
//	80114C94: 803DD470 (now__14mDoMtx_stack_c)
//	80114CA0: 80346D6C (PSMTXMultVec)
//	80114CE0: 80112E7C (setIronBallChainPos__9daAlink_cFv)
//	80114CE8: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80114CF0: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80114CF4: 803DD470 (now__14mDoMtx_stack_c)
//	80114CF8: 803DD470 (now__14mDoMtx_stack_c)
//	80114D04: 803464B0 (PSMTXCopy)
//	80114D08: 803DD470 (now__14mDoMtx_stack_c)
//	80114D0C: 803DD470 (now__14mDoMtx_stack_c)
//	80114D18: 80346D6C (PSMTXMultVec)
//	80114D3C: 80452E28 (lit_14621)
//	80114D64: 804061C0 (g_dComIfG_gameInfo)
//	80114D68: 804061C0 (g_dComIfG_gameInfo)
//	80114D74: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80114DA0: 80452CC0 (lit_6108)
//	80114DA8: 80452CB8 (lit_6040)
//	80114DC4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80114DCC: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	80114E08: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80114E0C: 804061C0 (g_dComIfG_gameInfo)
//	80114E10: 804061C0 (g_dComIfG_gameInfo)
//	80114E20: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80114E38: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	80114E4C: 80452CB8 (lit_6040)
//	80114E54: 8001F87C (fopKyM_createWpillar__FPC4cXyzfi)
//	80114E70: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80114E7C: 80452CB8 (lit_6040)
//	80114E84: 80452CBC (lit_6041)
//	80114E90: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80114EAC: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80114EB0: 804061C0 (g_dComIfG_gameInfo)
//	80114EB4: 804061C0 (g_dComIfG_gameInfo)
//	80114EC4: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80114ED0: 803A37C0 (__vt__8cM3dGPla)
//	80114ED4: 803A37C0 (__vt__8cM3dGPla)
//	80114EEC: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80114EF8: 80452CC0 (lit_6108)
//	80114F0C: 80347138 (PSVECSquareMag)
//	80114F10: 80452CC0 (lit_6108)
//	80114F20: 80452CE8 (lit_6846)
//	80114F28: 80452CF0 (lit_6847)
//	80114F70: 80452CF8 (lit_6848)
//	80114F7C: 80450AE0 (__float_nan)
//	80114F80: 80450AE0 (__float_nan)
//	80114FEC: 80450AE0 (__float_nan)
//	80114FF0: 80450AE0 (__float_nan)
//	8011500C: 80267674 (cM_atan2s__Fff)
//	8011501C: 80267674 (cM_atan2s__Fff)
//	80115030: 802673F4 (__ct__5csXyzFsss)
//	8011503C: 804061C0 (g_dComIfG_gameInfo)
//	80115040: 804061C0 (g_dComIfG_gameInfo)
//	8011505C: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	80115060: 803A37C0 (__vt__8cM3dGPla)
//	80115064: 803A37C0 (__vt__8cM3dGPla)
//	801150AC: 80452CC0 (lit_6108)
//	801150B0: 80051008
//(setEffectCenter__7dPaPo_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC5csXyzPC4cXyzScff) 	801150D0:
// 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallPos__9daAlink_cFv.s"
}
#pragma pop

/* 801150E4-8011510C 0028+00 s=10 e=0 z=0  None .text      checkIronBallAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 8011510C-801151E0 00D4+00 s=1 e=0 z=0  None .text      setIronBallReadyAnime__9daAlink_cFv */
//	80115128: 80452CBC (lit_6041)
//	8011512C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80115138: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011513C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115144: 80452CC0 (lit_6108)
//	80115150: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	80115160: 80452CBC (lit_6041)
//	80115164: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	80115168: 80452CC0 (lit_6108)
//	8011519C: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	801151B8: 80452D3C (lit_7808)
//	801151C0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 801151E0-80115254 0074+00 s=2 e=0 z=0  None .text      setIronBallBaseAnime__9daAlink_cFv */
//	80115204: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80115218: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011521C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115228: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallBaseAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallBaseAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80115254-801153F8 01A4+00 s=1 e=0 z=0  None .text      checkUpperItemActionIronBall__9daAlink_cFv
 */
//	8011526C: 800B2604 (itemButton__9daAlink_cFv)
//	8011527C: 800B8930 (checkReadyItem__9daAlink_cFv)
//	801152B0: 80452DC8 (lit_10286)
//	801152B4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801152C4: 8011577C (procIronBallThrowInit__9daAlink_cFv)
//	801152D0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801152F0: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	801152F4: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115300: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8011530C: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	80115318: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011531C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115328: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	8011535C: 80452D84 (lit_8781)
//	80115388: 80452DC0 (lit_10193)
//	8011538C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8011539C: 8011577C (procIronBallThrowInit__9daAlink_cFv)
//	801153A8: 80452CC0 (lit_6108)
//	801153AC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801153DC: 800B71EC (cancelUpperItemReadyAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionIronBall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionIronBall__9daAlink_cFv.s"
}
#pragma pop

/* 801153F8-801154E4 00EC+00 s=2 e=0 z=0  None .text      checkNextActionIronBall__9daAlink_cFv */
//	80115408: 803621DC (_savegpr_29)
//	80115428: 801150E4 (checkIronBallAnime__9daAlink_cCFv)
//	80115438: 8011510C (setIronBallReadyAnime__9daAlink_cFv)
//	80115440: 800B7168 (setFastShotTimer__9daAlink_cFv)
//	80115450: 800737E4 (LockonTruth__12dAttention_cFv)
//	80115488: 800737E4 (LockonTruth__12dAttention_cFv)
//	801154BC: 801154E4 (procIronBallSubjectInit__9daAlink_cFv)
//	801154C8: 801155EC (procIronBallMoveInit__9daAlink_cFv)
//	801154D0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionIronBall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionIronBall__9daAlink_cFv.s"
}
#pragma pop

/* 801154E4-80115564 0080+00 s=1 e=0 z=0  None .text      procIronBallSubjectInit__9daAlink_cFv */
//	801154FC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80115510: 80452CC0 (lit_6108)
//	8011551C: 801150E4 (checkIronBallAnime__9daAlink_cCFv)
//	8011552C: 801151E0 (setIronBallBaseAnime__9daAlink_cFv)
//	80115538: 804061C0 (g_dComIfG_gameInfo)
//	8011553C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 80115564-801155EC 0088+00 s=1 e=0 z=0  None .text      procIronBallSubject__9daAlink_cFv */
//	80115578: 801150E4 (checkIronBallAnime__9daAlink_cCFv)
//	8011558C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80115598: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	801155A4: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	801155B4: 800B2604 (itemButton__9daAlink_cFv)
//	801155D0: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallSubject__9daAlink_cFv.s"
}
#pragma pop

/* 801155EC-80115674 0088+00 s=1 e=0 z=0  None .text      procIronBallMoveInit__9daAlink_cFv */
//	80115604: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011561C: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80115640: 80452CC0 (lit_6108)
//	80115648: 804061C0 (g_dComIfG_gameInfo)
//	8011564C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80115674-8011577C 0108+00 s=1 e=0 z=0  None .text      procIronBallMove__9daAlink_cFv */
//	80115690: 801150E4 (checkIronBallAnime__9daAlink_cCFv)
//	801156A4: 800B3250 (setDoStatus__9daAlink_cFUc)
//	801156B0: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	801156BC: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	801156C8: 80452CBC (lit_6041)
//	801156D8: 80452CC0 (lit_6108)
//	801156E4: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80115710: 8038D664 (m__19daAlinkHIO_basic_c0)
//	80115714: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011573C: 801151E0 (setIronBallBaseAnime__9daAlink_cFv)
//	8011574C: 800AEA70 (setBlendAtnMoveAnime__9daAlink_cFf)
//	80115758: 800BB2B0 (setBodyAngleXReadyAnime__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallMove__9daAlink_cFv.s"
}
#pragma pop

/* 8011577C-80115860 00E4+00 s=1 e=0 z=0  None .text      procIronBallThrowInit__9daAlink_cFv */
//	80115794: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801157A0: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	801157A4: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	801157AC: 80453050 (lit_34957)
//	801157B8: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	801157C4: 8042552C (l_ironBallBaseAnime)
//	801157C8: 8042552C (l_ironBallBaseAnime)
//	801157E0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallThrowInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallThrowInit__9daAlink_cFv.s"
}
#pragma pop

/* 80115860-801159F0 0190+00 s=1 e=0 z=0  None .text      procIronBallThrow__9daAlink_cFv */
//	80115888: 800B58EC (checkWaitAction__9daAlink_cFv)
//	801158A4: 801159F0 (procIronBallReturnInit__9daAlink_cFv)
//	801158B8: 80452D44 (lit_7977)
//	801158BC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801158D0: 803DD470 (now__14mDoMtx_stack_c)
//	801158D4: 803DD470 (now__14mDoMtx_stack_c)
//	801158E4: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	801158E8: 80391A50 (lit_34968)
//	801158EC: 80391A50 (lit_34968)
//	80115908: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011590C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115920: 803DD470 (now__14mDoMtx_stack_c)
//	80115924: 803DD470 (now__14mDoMtx_stack_c)
//	80115930: 80346D6C (PSMTXMultVec)
//	80115940: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80115968: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	8011596C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115978: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	801159A0: 801159F0 (procIronBallReturnInit__9daAlink_cFv)
//	801159B8: 80452D3C (lit_7808)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallThrow__9daAlink_cFv.s"
}
#pragma pop

/* 801159F0-80115AA0 00B0+00 s=2 e=0 z=0  None .text      procIronBallReturnInit__9daAlink_cFv */
//	80115A08: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80115A28: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115A2C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115A30: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	80115A48:
//8038EA70 (m__22daAlinkHIO_ironBall_c0) 	80115A4C: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//80115A58: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff) 	80115A6C:
//8042552C (l_ironBallBaseAnime) 	80115A70: 8042552C (l_ironBallBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallReturnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallReturnInit__9daAlink_cFv.s"
}
#pragma pop

/* 80115AA0-80115C20 0180+00 s=1 e=0 z=0  None .text      procIronBallReturn__9daAlink_cFv */
//	80115AC8: 800B58EC (checkWaitAction__9daAlink_cFv)
//	80115AFC: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115B00: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115B04: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c) 	80115B2C:
//80452CC0 (lit_6108) 	80115B34: 80452CB8 (lit_6040) 	80115B40: 804061C0 (g_dComIfG_gameInfo)
//80115B44: 804061C0 (g_dComIfG_gameInfo) 	80115B58: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
// 80115B64: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv) 	80115B8C: 80112568
//(setIronBallWaitUpperAnime__9daAlink_cFi) 	80115B98: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	80115BB0: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115BB4: 8038EA70 (m__22daAlinkHIO_ironBall_c0)
//	80115BD4: 80112568 (setIronBallWaitUpperAnime__9daAlink_cFi)
//	80115BE0: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	80115BFC: 80452CC0 (lit_6108)
//	80115C00: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallReturn() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallReturn__9daAlink_cFv.s"
}
#pragma pop

/* 80115C20-80115C50 0030+00 s=72 e=0 z=0  None .text      checkEventRun__9daAlink_cCFv */
//	80115C24: 804061C0 (g_dComIfG_gameInfo)
//	80115C28: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkEventRun() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkEventRun__9daAlink_cCFv.s"
}
#pragma pop

/* 80115C50-80115D08 00B8+00 s=2 e=0 z=0  None .text      createNpcTks__9daAlink_cFP4cXyziUl */
//	80115C6C: 80439A20 (sincosTable___5JMath)
//	80115C70: 80439A20 (sincosTable___5JMath)
//	80115C88: 80452D68 (lit_8472)
//	80115CCC: 802673F4 (__ct__5csXyzFsss)
//	80115CEC: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::createNpcTks(cXyz* param_0, int param_1, u32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/createNpcTks__9daAlink_cFP4cXyziUl.s"
}
#pragma pop

/* 80115D08-80115EC0 01B8+00 s=1 e=0 z=0  None .text      checkSetNpcTks__9daAlink_cFP4cXyzii */
//	80115D18: 803621D4 (_savegpr_27)
//	80115D28: 804061C0 (g_dComIfG_gameInfo)
//	80115D2C: 804061C0 (g_dComIfG_gameInfo)
//	80115D40: 800C0310 (checkDungeon__9daAlink_cFv)
//	80115D4C: 804061C0 (g_dComIfG_gameInfo)
//	80115D50: 804061C0 (g_dComIfG_gameInfo)
//	80115DA8: 80097EE0 (checkItemGet__FUci)
//	80115DBC: 80097EE0 (checkItemGet__FUci)
//	80115DC8: 8011EE40 (checkLv7DungeonShop__9daAlink_cFv)
//	80115DD4: 804061C0 (g_dComIfG_gameInfo)
//	80115DD8: 804061C0 (g_dComIfG_gameInfo)
//	80115DE8: 80034934 (isDungeonItem__12dSv_memBit_cCFi)
//	80115DFC: 80034934 (isDungeonItem__12dSv_memBit_cCFi)
//	80115E0C: 80392094 (d_a_d_a_alink__stringBase0)
//	80115E10: 80392094 (d_a_d_a_alink__stringBase0)
//	80115E18: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80115E34: 80155774 (daNpcF_getPlayerInfoFromPlayerList__FiiR4cXyzR5csXyz)
//	80115E4C: 80392094 (d_a_d_a_alink__stringBase0)
//	80115E50: 80392094 (d_a_d_a_alink__stringBase0)
//	80115E58: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80115E64: 80392094 (d_a_d_a_alink__stringBase0)
//	80115E68: 80392094 (d_a_d_a_alink__stringBase0)
//	80115E70: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80115E98: 80115C50 (createNpcTks__9daAlink_cFP4cXyziUl)
//	80115EAC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSetNpcTks(cXyz* param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSetNpcTks__9daAlink_cFP4cXyzii.s"
}
#pragma pop

/* 80115EC0-80116E60 0FA0+00 s=1 e=0 z=0  None .text      checkDemoAction__9daAlink_cFv */
//	80115ED0: 803621D8 (_savegpr_28)
//	80115ED8: 804061C0 (g_dComIfG_gameInfo)
//	80115EDC: 804061C0 (g_dComIfG_gameInfo)
//	80115F5C: 800EA950 (procSumouReadyInit__9daAlink_cFv)
//	8011602C: 804061C0 (g_dComIfG_gameInfo)
//	80116030: 804061C0 (g_dComIfG_gameInfo)
//	80116044: 80118170 (checkFlyAtnWait__9daAlink_cFv)
//	801160BC: 80117C34 (endHighModel__9daAlink_cFv)
//	801160D8: 801195F8 (procCoToolDemoInit__9daAlink_cFv)
//	801160E4: 803B22E0 (m_demoInitTable__9daAlink_c)
//	801160E8: 803B22E0 (m_demoInitTable__9daAlink_c)
//	801160F4: 80362018 (__ptmf_test)
//	80116114: 80362084 (__ptmf_scall)
//	80116150: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80116164: 80452CB8 (lit_6040)
//	8011616C: 80452CBC (lit_6041)
//	80116178: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8011619C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801161A0: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801161A8: 800C6A48 (procFallInit__9daAlink_cFif)
//	80116270: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	80116284: 800B983C (allUnequip__9daAlink_cFi)
//	801162A4: 80451018 (m_midnaActor__9daPy_py_c)
//	801162AC: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	801162B8: 804061C0 (g_dComIfG_gameInfo)
//	801162BC: 804061C0 (g_dComIfG_gameInfo)
//	80116318: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	80116328: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	80116334: 801182D4 (checkGrabTalkActor__9daAlink_cFP10fopAc_ac_c)
//	80116344: 800E6A9C (procGrabWaitInit__9daAlink_cFv)
//	80116350: 80120474 (commonGrabPutInit__9daAlink_cFv)
//	8011635C: 80119D98 (procCoTalkInit__9daAlink_cFv)
//	8011637C: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	80116398: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	801163A8: 804061C0 (g_dComIfG_gameInfo)
//	801163AC: 804061C0 (g_dComIfG_gameInfo)
//	801163D4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	801163DC: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	801163F0: 80452CBC (lit_6041)
//	801163F4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	801163FC: 800D1268 (setSwordModel__9daAlink_cFv)
//	80116418: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	8011642C: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	80116444: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	80116454: 800F7708 (setGroundFishingRodActor__9daAlink_cFv)
//	80116480: 800F3CD8 (daAlink_searchCanoe__FP10fopAc_ac_cPv)
//	80116484: 800F3CD8 (daAlink_searchCanoe__FP10fopAc_ac_cPv)
//	8011648C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	801164B0: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	801164C0: 800F4C78 (procCanoeJumpRideInit__9daAlink_cFP10fopAc_ac_c)
//	801164F4: 80105A84 (daAlink_searchIceLeaf__FP10fopAc_ac_cPv)
//	801164F8: 80105A84 (daAlink_searchIceLeaf__FP10fopAc_ac_cPv)
//	80116500: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80116518: 80106A38 (procBoardWaitInit__9daAlink_cFP10fopAc_ac_c)
//	80116568: 800C33B8 (procWaitInit__9daAlink_cFv)
//	8011657C: 80452CC0 (lit_6108)
//	80116588: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	801165E0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80116608: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	80116658: 800D2F58 (procCutNormalInit__9daAlink_cFi)
//	80116678: 800D34D8 (procCutFinishInit__9daAlink_cFi)
//	8011668C: 800D47DC (procCutTurnInit__9daAlink_cFii)
//	801166D4: 800DE008 (procTurnMoveInit__9daAlink_cFi)
//	8011670C: 800D1088 (changeCutFast__9daAlink_cFv)
//	80116754: 8013ADF0 (procWolfWaitAttackInit__9daAlink_cFi)
//	80116760: 8013ADF0 (procWolfWaitAttackInit__9daAlink_cFi)
//	8011679C: 80120500 (commonLargeDamageUpInit__9daAlink_cFiiss)
//	801167C4: 80120500 (commonLargeDamageUpInit__9daAlink_cFiiss)
//	801167E0: 80120500 (commonLargeDamageUpInit__9daAlink_cFiiss)
//	80116804: 8012F278 (procWolfSitInit__9daAlink_cFi)
//	80116828: 8012E754 (procWolfHowlInit__9daAlink_cFi)
//	8011684C: 8012E754 (procWolfHowlInit__9daAlink_cFi)
//	80116874: 8011FD4C (procCoWarpInit__9daAlink_cFii)
//	80116898: 800C5E68 (procAutoJumpInit__9daAlink_cFi)
//	801168D4: 800D4C68 (procCutTurnChargeInit__9daAlink_cFv)
//	80116920: 8012CBE4 (procWolfServiceWaitInit__9daAlink_cFi)
//	8011695C: 800D6238 (procCutLargeJumpChargeInit__9daAlink_cFv)
//	8011698C: 800C5328 (procSideRollInit__9daAlink_cFi)
//	80116A04: 8012DEC8 (procWolfSideStepInit__9daAlink_cFi)
//	80116A54: 800C3DA0 (procSideStepInit__9daAlink_cFi)
//	80116A78: 80137634 (procWolfLieMoveInit__9daAlink_cFi)
//	80116A9C: 80120534 (commonFallInit__9daAlink_cFi)
//	80116AC4: 8010F54C (procBottleDrinkInit__9daAlink_cFUs)
//	80116AF8: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	80116B48: 8011B914 (procCoLookWaitInit__9daAlink_cFv)
//	80116B58: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80116B7C: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	80116B8C: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	80116BA0: 80452CBC (lit_6041)
//	80116BA4: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80116BB8: 800ECB58 (initForceRideHorse__9daAlink_cFv)
//	80116BC0: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	80116BCC: 80118170 (checkFlyAtnWait__9daAlink_cFv)
//	80116BDC: 800C38CC (procAtnActorWaitInit__9daAlink_cFv)
//	80116BF4: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	80116C38: 80116E60 (checkDemoMoveMode__9daAlink_cCFUl)
//	80116CA4: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	80116CB8: 80452CBC (lit_6041)
//	80116CBC: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80116CF4: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	80116D28: 800B93F4 (swordEquip__9daAlink_cFi)
//	80116D54: 800BA09C (commonCheckNextAction__9daAlink_cFi)
//	80116D60: 800ECA3C (commonInitForceRideRein__9daAlink_cFv)
//	80116D64: 804061C0 (g_dComIfG_gameInfo)
//	80116D68: 804061C0 (g_dComIfG_gameInfo)
//	80116D80: 80362084 (__ptmf_scall)
//	80116D90: 802C3A6C (setRiding__14Z2CreatureLinkFb)
//	80116D9C: 80037CB0 (setPlayerRide__10e_wb_classFv)
//	80116DA4: 800EF450 (checkNextActionHorse__9daAlink_cFv)
//	80116DCC: 800F4924 (checkNextActionCanoe__9daAlink_cFv)
//	80116DF4: 8010658C (checkNextActionBoard__9daAlink_cFv)
//	80116E20: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	80116E24: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	80116E2C: 800C6A48 (procFallInit__9daAlink_cFif)
//	80116E3C: 800BA09C (commonCheckNextAction__9daAlink_cFi)
//	80116E4C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDemoAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDemoAction__9daAlink_cFv.s"
}
#pragma pop

/* 80116E60-80116E9C 003C+00 s=4 e=0 z=0  None .text      checkDemoMoveMode__9daAlink_cCFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDemoMoveMode(u32 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkDemoMoveMode__9daAlink_cCFUl.s"
}
#pragma pop

/* 80116E9C-80117064 01C8+00 s=1 e=0 z=0  None .text      setDemoMoveData__9daAlink_cFPUlPC4cXyz */
//	80116EEC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80116F14: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	80116F18: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	80116F20: 8038D6BC (m__18daAlinkHIO_move_c0)
//	80116F24: 8038D6BC (m__18daAlinkHIO_move_c0)
//	80116F38: 80452CB8 (lit_6040)
//	80116F3C: 80452D50 (lit_8247)
//	80116F44: 80452FFC (lit_30372)
//	80116F4C: 80452E54 (lit_14784)
//	80116F5C: 80452CC0 (lit_6108)
//	80116F70: 80347138 (PSVECSquareMag)
//	80116F78: 80452C9C (lit_5944)
//	80116F9C: 80452CC0 (lit_6108)
//	80116FBC: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80116FF8: 80453054 (lit_35610)
//	80117010: 80452CB8 (lit_6040)
//	8011701C: 80267128 (atan2sX_Z__4cXyzCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoMoveData(u32* param_0, cXyz const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoMoveData__9daAlink_cFPUlPC4cXyz.s"
}
#pragma pop

/* 80117064-801171F4 0190+00 s=1 e=0 z=0  None .text      setNoDrawSwordShield__9daAlink_cFiUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setNoDrawSwordShield(int param_0, u16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setNoDrawSwordShield__9daAlink_cFiUs.s"
}
#pragma pop

/* 801171F4-80117B90 099C+00 s=1 e=0 z=0  None .text      setDemoData__9daAlink_cFv */
//	80117204: 803621C4 (_savegpr_23)
//	8011720C: 804061C0 (g_dComIfG_gameInfo)
//	80117210: 804061C0 (g_dComIfG_gameInfo)
//	80117254: 80117CF8 (endDemoMode__9daAlink_cFv)
//	80117270: 80450E20 (m_object__7dDemo_c)
//	80117278: 80039088 (getActor__14dDemo_object_cFUc)
//	80117294: 804061C0 (g_dComIfG_gameInfo)
//	80117298: 804061C0 (g_dComIfG_gameInfo)
//	801172D8: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	801172E4: 800C33B8 (procWaitInit__9daAlink_cFv)
//	80117308: 8013852C (procWolfSwimWaitInit__9daAlink_cFi)
//	80117318: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	8011732C: 8004882C (checkStartDemo__16dEvent_manager_cFv)
//	80117374: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	8011737C: 80392094 (d_a_d_a_alink__stringBase0)
//	80117380: 80392094 (d_a_d_a_alink__stringBase0)
//	80117388: 80047A38 (startCheckOld__16dEvent_manager_cFPCc)
//	801173AC: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	801173C0: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	801173D8: 80452CBC (lit_6041)
//	801173DC: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	801173F0: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	801173FC: 800C33B8 (procWaitInit__9daAlink_cFv)
//	80117470: 80117064 (setNoDrawSwordShield__9daAlink_cFiUs)
//	8011748C: 80038338 (getDemoIDData__13dDemo_actor_cFPiPiPiPUsPUc)
//	801174F8: 80047F5C (getMyNowCutName__16dEvent_manager_cFi)
//	80117578: 80452CC0 (lit_6108)
//	80117594: 801AC57C (dKy_darkworld_check__Fv)
//	801175A4: 804061C0 (g_dComIfG_gameInfo)
//	801175A8: 804061C0 (g_dComIfG_gameInfo)
//	801175B4: 80032BEC (isTransformLV__21dSv_player_status_b_cCFi)
//	801175DC: 80392094 (d_a_d_a_alink__stringBase0)
//	801175E0: 80392094 (d_a_d_a_alink__stringBase0)
//	801175EC: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80117600: 800483E0 (getGoal__16dEvent_manager_cFv)
//	80117610: 80392094 (d_a_d_a_alink__stringBase0)
//	80117614: 80392094 (d_a_d_a_alink__stringBase0)
//	80117620: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80117658: 80392094 (d_a_d_a_alink__stringBase0)
//	8011765C: 80392094 (d_a_d_a_alink__stringBase0)
//	80117668: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80117678: 80392094 (d_a_d_a_alink__stringBase0)
//	8011767C: 80392094 (d_a_d_a_alink__stringBase0)
//	80117688: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	801176A4: 80392094 (d_a_d_a_alink__stringBase0)
//	801176A8: 80392094 (d_a_d_a_alink__stringBase0)
//	801176B4: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	801176CC: 80452CB8 (lit_6040)
//	80117700: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80117704: 803DD470 (now__14mDoMtx_stack_c)
//	80117708: 803DD470 (now__14mDoMtx_stack_c)
//	80117710: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80117714: 803DD470 (now__14mDoMtx_stack_c)
//	80117718: 803DD470 (now__14mDoMtx_stack_c)
//	80117724: 80346D6C (PSMTXMultVec)
//	80117730: 800483C4 (setGoal__16dEvent_manager_cFP4cXyz)
//	8011773C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011774C: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	80117798: 800B9340 (checkEquipAnime__9daAlink_cCFv)
//	801177B0: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	801177C8: 80452CC4 (lit_6109)
//	801177CC: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	8011780C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8011782C: 80452CC0 (lit_6108)
//	8011783C: 80347138 (PSVECSquareMag)
//	80117840: 80452E90 (lit_16067)
//	8011785C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011786C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	801178D4: 80452CC0 (lit_6108)
//	801178E4: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	80117914: 80116E60 (checkDemoMoveMode__9daAlink_cCFUl)
//	8011792C: 80116E9C (setDemoMoveData__9daAlink_cFPUlPC4cXyz)
//	80117964: 80116E60 (checkDemoMoveMode__9daAlink_cCFUl)
//	8011797C: 80116E9C (setDemoMoveData__9daAlink_cFPUlPC4cXyz)
//	80117A50: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80117A7C: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	80117A94: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	80117AB8: 800AF61C (setFaceBtp__9daAlink_cFUsiUs)
//	80117AC4: 80452CB0 (lit_6025)
//	80117AF8: 800AF7D0 (setFaceBtk__9daAlink_cFUsiUs)
//	80117B04: 80452CB0 (lit_6025)
//	80117B38: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	80117B74: 800AFCBC (resetFacePriAnime__9daAlink_cFv)
//	80117B7C: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoData() {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoData__9daAlink_cFv.s"
}
#pragma pop

/* 80117B90-80117C34 00A4+00 s=1 e=0 z=0  None .text      resetDemoBck__9daAlink_cFv */
//	80117BA4: 8038D658 (lit_3757)
//	80117BA8: 8038D658 (lit_3757)
//	80117BF4: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80117C00: 800AF9A8 (setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	80117C1C: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetDemoBck() {
    nofralloc
#include "asm/d/a/d_a_alink/resetDemoBck__9daAlink_cFv.s"
}
#pragma pop

/* 80117C34-80117C90 005C+00 s=3 e=0 z=0  None .text      endHighModel__9daAlink_cFv */
//	80117C60: 8032F7B4 (removeTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::endHighModel() {
    nofralloc
#include "asm/d/a/d_a_alink/endHighModel__9daAlink_cFv.s"
}
#pragma pop

/* 80117C90-80117CF8 0068+00 s=21 e=0 z=0  None .text      resetSpecialEvent__9daAlink_cFv */
//	80117CA8: 804061C0 (g_dComIfG_gameInfo)
//	80117CAC: 804061C0 (g_dComIfG_gameInfo)
//	80117CB4: 80042468 (reset__14dEvt_control_cFv)
//	80117CCC: 80181640 (dCam_getBody__Fv)
//	80117CD4: 80088BBC (EndEventCamera__9dCamera_cFi)
//	80117CDC: 80117CF8 (endDemoMode__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetSpecialEvent() {
    nofralloc
#include "asm/d/a/d_a_alink/resetSpecialEvent__9daAlink_cFv.s"
}
#pragma pop

/* 80117CF8-801180EC 03F4+00 s=4 e=0 z=0  None .text      endDemoMode__9daAlink_cFv */
//	80117D08: 803621D4 (_savegpr_27)
//	80117D10: 80118170 (checkFlyAtnWait__9daAlink_cFv)
//	80117D1C: 80117C34 (endHighModel__9daAlink_cFv)
//	80117D5C: 8032F880 (removeTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	80117DAC: 804061C0 (g_dComIfG_gameInfo)
//	80117DB0: 804061C0 (g_dComIfG_gameInfo)
//	80117E20: 800AFCBC (resetFacePriAnime__9daAlink_cFv)
//	80117E2C: 80452CB8 (lit_6040)
//	80117E78: 800F0980 (procHorseWaitInit__9daAlink_cFv)
//	80117EB8: 80102B1C (checkSwimAction__9daAlink_cFi)
//	80117ED4: 8013871C (procWolfSwimMoveInit__9daAlink_cFv)
//	80117EE0: 80104670 (procSwimMoveInit__9daAlink_cFv)
//	80117EEC: 800B58EC (checkWaitAction__9daAlink_cFv)
//	80117F04: 800BAF80 (checkUpperReadyThrowAnime__9daAlink_cCFv)
//	80117F68: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80117F6C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80117F88: 804061C0 (g_dComIfG_gameInfo)
//	80117F8C: 804061C0 (g_dComIfG_gameInfo)
//	80117FA0: 80181614 (dCam_getControledAngleY__FP12camera_class)
//	80117FC0: 800BA09C (commonCheckNextAction__9daAlink_cFi)
//	80117FE0: 80112278 (procHawkSubjectInit__9daAlink_cFv)
//	80118024: 80137634 (procWolfLieMoveInit__9daAlink_cFi)
//	80118030: 800B58EC (checkWaitAction__9daAlink_cFv)
//	80118064: 8013852C (procWolfSwimWaitInit__9daAlink_cFi)
//	80118074: 801042F8 (procSwimWaitInit__9daAlink_cFi)
//	80118080: 800B58EC (checkWaitAction__9daAlink_cFv)
//	80118098: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	8011809C: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	801180A4: 800C6A48 (procFallInit__9daAlink_cFif)
//	801180D0: 800F51E4 (procCanoeWaitInit__9daAlink_cFi)
//	801180D8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::endDemoMode() {
    nofralloc
#include "asm/d/a/d_a_alink/endDemoMode__9daAlink_cFv.s"
}
#pragma pop

/* 801180EC-80118170 0084+00 s=2 e=0 z=0  None .text      getDemoLookActor__9daAlink_cFv */
//	80118104: 804061C0 (g_dComIfG_gameInfo)
//	80118108: 804061C0 (g_dComIfG_gameInfo)
//	80118114: 800432EC (convPId__14dEvt_control_cFUi)
//	80118124: 804061C0 (g_dComIfG_gameInfo)
//	80118128: 804061C0 (g_dComIfG_gameInfo)
//	80118134: 800432EC (convPId__14dEvt_control_cFUi)
//	80118144: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	80118154: 80451018 (m_midnaActor__9daPy_py_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getDemoLookActor() {
    nofralloc
#include "asm/d/a/d_a_alink/getDemoLookActor__9daAlink_cFv.s"
}
#pragma pop

/* 80118170-801181A0 0030+00 s=4 e=0 z=0  None .text      checkFlyAtnWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFlyAtnWait() {
    nofralloc
#include "asm/d/a/d_a_alink/checkFlyAtnWait__9daAlink_cFv.s"
}
#pragma pop

/* 801181A0-801182D4 0134+00 s=2 e=0 z=0  None .text      setGetItemFace__9daAlink_cFUs */
//	80118258: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	80118278: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	80118290: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	801182BC: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGetItemFace(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGetItemFace__9daAlink_cFUs.s"
}
#pragma pop

/* 801182D4-80118308 0034+00 s=2 e=0 z=0  None .text checkGrabTalkActor__9daAlink_cFP10fopAc_ac_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabTalkActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabTalkActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80118308-8011856C 0264+00 s=2 e=0 z=0  None .text      setTalkStartBack__9daAlink_cFP4cXyz */
//	80118318: 803621DC (_savegpr_29)
//	80118324: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	80118370: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80118390: 80452CC0 (lit_6108)
//	801183A0: 80347138 (PSVECSquareMag)
//	801183A4: 80452CC0 (lit_6108)
//	801183B4: 80452CE8 (lit_6846)
//	801183BC: 80452CF0 (lit_6847)
//	80118404: 80452CF8 (lit_6848)
//	80118410: 80450AE0 (__float_nan)
//	80118414: 80450AE0 (__float_nan)
//	80118480: 80450AE0 (__float_nan)
//	80118484: 80450AE0 (__float_nan)
//	80118488: 80452D50 (lit_8247)
//	80118494: 80452CB8 (lit_6040)
//	801184BC: 80450690 (l_autoUpHeight)
//	801184E4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	801184E8: 804061C0 (g_dComIfG_gameInfo)
//	801184EC: 804061C0 (g_dComIfG_gameInfo)
//	801184F8: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80118504: 80450694 (l_autoDownHeight)
//	80118518: 80267128 (atan2sX_Z__4cXyzCFv)
//	80118520: 80452D3C (lit_7808)
//	80118530: 8038D6BC (m__18daAlinkHIO_move_c0)
//	80118534: 8038D6BC (m__18daAlinkHIO_move_c0)
//	80118540: 80452CC4 (lit_6109)
//	80118544: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	80118558: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTalkStartBack(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setTalkStartBack__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 8011856C-80118654 00E8+00 s=4 e=0 z=0  None .text      setShapeAngleToTalkActor__9daAlink_cFv */
//	8011857C: 803621DC (_savegpr_29)
//	80118584: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	801185A4: 804061C0 (g_dComIfG_gameInfo)
//	801185A8: 804061C0 (g_dComIfG_gameInfo)
//	801185B8: 80035360 (isSwitch__10dSv_info_cCFii)
//	8011860C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80118620: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80118638: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80118640: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShapeAngleToTalkActor() {
    nofralloc
#include "asm/d/a/d_a_alink/setShapeAngleToTalkActor__9daAlink_cFv.s"
}
#pragma pop

/* 80118654-801186D4 0080+00 s=2 e=0 z=0  None .text      setTalkAnime__9daAlink_cFv */
//	80118690: 8038D6BC (m__18daAlinkHIO_move_c0)
//	80118694: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011869C: 80452CC0 (lit_6108)
//	801186B0: 80452CC4 (lit_6109)
//	801186B4: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	801186C0:
// 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTalkAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setTalkAnime__9daAlink_cFv.s"
}
#pragma pop

/* 801186D4-80118778 00A4+00 s=2 e=0 z=0  None .text      setTradeItemAnime__9daAlink_cFv */
//	801186EC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011871C: 804061C0 (g_dComIfG_gameInfo)
//	80118720: 804061C0 (g_dComIfG_gameInfo)
//	80118740: 8001BBE8 (fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz)
//	80118748: 804061C0 (g_dComIfG_gameInfo)
//	8011874C: 804061C0 (g_dComIfG_gameInfo)
//	80118754: 800436EC (setPtI_Id__14dEvt_control_cFUi)
//	8011875C: 800BF854 (keepItemData__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTradeItemAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setTradeItemAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80118778-801187B4 003C+00 s=3 e=0 z=0  None .text      setTradeItemOutHand__9daAlink_cFv */
//	8011877C: 80452F68 (lit_24590)
//	80118798: 80452D78 (lit_8676)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTradeItemOutHand() {
    nofralloc
#include "asm/d/a/d_a_alink/setTradeItemOutHand__9daAlink_cFv.s"
}
#pragma pop

/* 801187B4-80118840 008C+00 s=5 e=0 z=0  None .text      checkEndMessage__9daAlink_cFUl */
//	801187E0: 8001FE84 (fopMsgM_messageSet__FUlUl)
//	801187EC: 8001FA24 (fopMsgM_SearchByID__FUi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkEndMessage(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkEndMessage__9daAlink_cFUl.s"
}
#pragma pop

/* 80118840-801188B0 0070+00 s=1 e=0 z=0  None .text      setDemoRightHandIndex__9daAlink_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoRightHandIndex(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoRightHandIndex__9daAlink_cFUs.s"
}
#pragma pop

/* 801188B0-8011894C 009C+00 s=1 e=0 z=0  None .text      setDemoLeftHandIndex__9daAlink_cFUs */
//	801188E4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	801188EC: 800D1268 (setSwordModel__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoLeftHandIndex(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoLeftHandIndex__9daAlink_cFUs.s"
}
#pragma pop

/* 8011894C-801189F8 00AC+00 s=1 e=0 z=0  None .text      setDemoRide__9daAlink_cFUs */
//	80118960: 804061C0 (g_dComIfG_gameInfo)
//	80118964: 804061C0 (g_dComIfG_gameInfo)
//	8011899C: 80362084 (__ptmf_scall)
//	801189A4: 8042558C (l_horseBaseAnime)
//	801189A8: 8042558C (l_horseBaseAnime)
//	801189C8: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoRide(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoRide__9daAlink_cFUs.s"
}
#pragma pop

/* 801189F8-80118AD0 00D8+00 s=1 e=0 z=0  None .text setDemoBodyBck__9daAlink_cFP13dDemo_actor_cUs
 */
//	80118A08: 803621DC (_savegpr_29)
//	80118A20: 8015F118 (loadDataDemoRID__14daPy_anmHeap_cFUsUs)
//	80118A40: 80452CB8 (lit_6040)
//	80118A44: 80452CC0 (lit_6108)
//	80118A48: 800AC394 (setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff)
//	80118A54: 80450E20 (m_object__7dDemo_c)
//	80118A5C: 80039088 (getActor__14dDemo_object_cFUc)
//	80118A6C: 8003819C (getPrm_Morf__13dDemo_actor_cFv)
//	80118A7C: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	80118A8C: 80452CB0 (lit_6025)
//	80118AB4: 800BF204 (setBasAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDER)
//	80118ABC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoBodyBck(dDemo_actor_c* param_0, u16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoBodyBck__9daAlink_cFP13dDemo_actor_cUs.s"
}
#pragma pop

/* 80118AD0-80118B34 0064+00 s=1 e=0 z=0  None .text      checkFinalBattle__9daAlink_cFv */
//	80118AE4: 80392094 (d_a_d_a_alink__stringBase0)
//	80118AE8: 80392094 (d_a_d_a_alink__stringBase0)
//	80118AF0: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80118AFC: 804061C0 (g_dComIfG_gameInfo)
//	80118B00: 804061C0 (g_dComIfG_gameInfo)
//	80118B0C: 80034BE8 (isSwitch__12dSv_danBit_cCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFinalBattle() {
    nofralloc
#include "asm/d/a/d_a_alink/checkFinalBattle__9daAlink_cFv.s"
}
#pragma pop

/* 80118B34-80118BF4 00C0+00 s=3 e=0 z=0  None .text      checkRestartDead__9daAlink_cFii */
//	80118B58: 800D7208 (damageMagnification__9daAlink_cFii)
//	80118B78: 804061C0 (g_dComIfG_gameInfo)
//	80118B7C: 804061C0 (g_dComIfG_gameInfo)
//	80118B90: 800D77C8 (checkMagicArmorNoDamage__9daAlink_cFv)
//	80118B9C: 804061C0 (g_dComIfG_gameInfo)
//	80118BA0: 804061C0 (g_dComIfG_gameInfo)
//	80118BAC: 800336E0 (checkBottle__17dSv_player_item_cFUc)
//	80118BCC: 8011BE54 (procCoDeadInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRestartDead(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkRestartDead__9daAlink_cFii.s"
}
#pragma pop

/* 80118BF4-80118C98 00A4+00 s=2 e=0 z=0  None .text      setDeadRideSyncPos__9daAlink_cFv */
//	80118C4C: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	80118C78: 8010DBC8 (setSpinnerSyncPos__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDeadRideSyncPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setDeadRideSyncPos__9daAlink_cFv.s"
}
#pragma pop

/* 80118C98-80118D7C 00E4+00 s=5 e=0 z=0  None .text      checkDeadHP__9daAlink_cFv */
//	80118CA8: 803621D8 (_savegpr_28)
//	80118CC0: 804061C0 (g_dComIfG_gameInfo)
//	80118CC4: 804061C0 (g_dComIfG_gameInfo)
//	80118CEC: 804061C0 (g_dComIfG_gameInfo)
//	80118CF0: 804061C0 (g_dComIfG_gameInfo)
//	80118CFC: 800336E0 (checkBottle__17dSv_player_item_cFUc)
//	80118D30: 804061C0 (g_dComIfG_gameInfo)
//	80118D34: 804061C0 (g_dComIfG_gameInfo)
//	80118D68: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDeadHP() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDeadHP__9daAlink_cFv.s"
}
#pragma pop

/* 80118D7C-80118FF8 027C+00 s=3 e=0 z=0  None .text      checkDeadAction__9daAlink_cFi */
//	80118D98: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80118DA8: 80118C98 (checkDeadHP__9daAlink_cFv)
//	80118E40: 804061C0 (g_dComIfG_gameInfo)
//	80118E44: 804061C0 (g_dComIfG_gameInfo)
//	80118E60: 8011BE54 (procCoDeadInit__9daAlink_cFi)
//	80118E94: 800E2DC4 (cancelMagneBootsOn__9daAlink_cFv)
//	80118EA8: 8011BE54 (procCoDeadInit__9daAlink_cFi)
//	80118EC4: 804061C0 (g_dComIfG_gameInfo)
//	80118EC8: 804061C0 (g_dComIfG_gameInfo)
//	80118ED8: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	80118EE4: 80452DA4 (lit_9138)
//	80118EFC: 80074B98 (GetExitId__4dBgSFRC13cBgS_PolyInfo)
//	80118F34: 80452D18 (lit_7308)
//	80118F6C: 8011BE54 (procCoDeadInit__9daAlink_cFi)
//	80118F7C: 80120534 (commonFallInit__9daAlink_cFi)
//	80118F84: 804061C0 (g_dComIfG_gameInfo)
//	80118F88: 804061C0 (g_dComIfG_gameInfo)
//	80118FB0: 800336E0 (checkBottle__17dSv_player_item_cFUc)
//	80118FC8: 8010F45C (makeFairy__9daAlink_cFP4cXyzUl)
//	80118FD8: 80033370 (setBottleItemIn__17dSv_player_item_cFUcUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDeadAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkDeadAction__9daAlink_cFi.s"
}
#pragma pop

/* 80118FF8-801190A4 00AC+00 s=1 e=0 z=0  None .text
 * setHighModelBck__9daAlink_cFP13mDoExt_bckAnmUs               */
//	80119018: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	8011901C: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	80119024: 804061C0 (g_dComIfG_gameInfo)
//	80119028: 804061C0 (g_dComIfG_gameInfo)
//	80119038: 8003C400 (getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci)
//	80119064: 8000D990 (changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform)
//	80119078: 80452CB8 (lit_6040)
//	80119088: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHighModelBck(mDoExt_bckAnm* param_0, u16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setHighModelBck__9daAlink_cFP13mDoExt_bckAnmUs.s"
}
#pragma pop

/* 801190A4-80119134 0090+00 s=1 e=0 z=0  None .text      setHighModelFaceBtk__9daAlink_cFUs */
//	801190BC: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	801190C0: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	801190C4: 804061C0 (g_dComIfG_gameInfo)
//	801190C8: 804061C0 (g_dComIfG_gameInfo)
//	801190D8: 8003C400 (getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci)
//	801190F8: 8032B1D4 (searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP12J3DModelData)
//	8011910C: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	80119110: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHighModelFaceBtk(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHighModelFaceBtk__9daAlink_cFUs.s"
}
#pragma pop

/* 80119134-801191C4 0090+00 s=1 e=0 z=0  None .text
 * setDemoBrk__9daAlink_cFPP15J3DAnmTevRegKeyP8J3DModelUs       */
//	80119144: 803621DC (_savegpr_29)
//	80119150: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	80119154: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	8011915C: 804061C0 (g_dComIfG_gameInfo)
//	80119160: 804061C0 (g_dComIfG_gameInfo)
//	80119170: 8003C400 (getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci)
//	8011918C: 8032B87C (searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData)
//	8011919C: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	801191A0: 80452CC0 (lit_6108)
//	801191B0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoBrk(J3DAnmTevRegKey** param_0, J3DModel* param_1, u16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoBrk__9daAlink_cFPP15J3DAnmTevRegKeyP8J3DModelUs.s"
}
#pragma pop

/* 801191C4-80119464 02A0+00 s=1 e=0 z=0  None .text
 * setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi               */
//	801191DC: 803621CC (_savegpr_25)
//	801191F8: 80450E20 (m_object__7dDemo_c)
//	80119200: 80039088 (getActor__14dDemo_object_cFUc)
//	80119218: 80452CC0 (lit_6108)
//	80119228: 80452CA4 (lit_6021)
//	80119238: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	80119258: 80039EEC (setBranchId__7dDemo_cFUss)
//	80119278: 801189F8 (setDemoBodyBck__9daAlink_cFP13dDemo_actor_cUs)
//	80119298: 80452CC0 (lit_6108)
//	801192C8: 80118FF8 (setHighModelBck__9daAlink_cFP13mDoExt_bckAnmUs)
//	801192CC: 80452CC0 (lit_6108)
//	801192E4: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	80119308: 801190A4 (setHighModelFaceBtk__9daAlink_cFUs)
//	8011930C: 80452CC0 (lit_6108)
//	80119324: 800AF7D0 (setFaceBtk__9daAlink_cFUsiUs)
//	80119344: 800AF61C (setFaceBtp__9daAlink_cFUsiUs)
//	8011935C: 80452CB0 (lit_6025)
//	801193B4: 80118FF8 (setHighModelBck__9daAlink_cFP13mDoExt_bckAnmUs)
//	801193D0: 80118FF8 (setHighModelBck__9daAlink_cFP13mDoExt_bckAnmUs)
//	801193EC: 80118FF8 (setHighModelBck__9daAlink_cFP13mDoExt_bckAnmUs)
//	80119404: 80452CB0 (lit_6025)
//	80119450: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setStickAnmData(J3DAnmBase* param_0, int param_1, int param_2, u16 param_3,
                                    int param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi.s"
}
#pragma pop

/* ############################################################################################## */
/* 804256B8-804256CC 0014+00 s=1 e=0 z=0  None .bss       dummy$36763 */
static u8 dummy[20];

/* 80119464-801195C0 015C+00 s=1 e=0 z=0  None .text
 * daAlink_c_getDemoIDData__FP13dDemo_actor_cPiPiPiPUsPiPi      */
//	80119474: 803621D0 (_savegpr_26)
//	801194A0: 80289A80
//(getData__Q47JStudio3stb4data22TParse_TParagraph_dataCFPQ57JStudio3stb4data22TParse_TParagraph_data5TData)
//	801194A4: 80450FBC (struct_80450FBC)
//	801194BC: 804256B8 (dummy)
//	801194C0: 804256B8 (dummy)
//	801194C4: 80289A80
//(getData__Q47JStudio3stb4data22TParse_TParagraph_dataCFPQ57JStudio3stb4data22TParse_TParagraph_data5TData)
//	801194CC: 80450FBC (struct_80450FBC)
//	801194D0: 80450FBD (struct_80450FBC)
//	801194DC: 804256B8 (dummy)
//	801194E0: 804256B8 (dummy)
//	801194E8: 80450FC0 (it)
//	801194F0: 80450FBD (struct_80450FBC)
//	80119514: 80450FC0 (it)
//	80119528: 804256B8 (dummy)
//	8011952C: 804256B8 (dummy)
//	80119534: 80450FC0 (it)
//	80119540: 804256B8 (dummy)
//	80119544: 804256B8 (dummy)
//	80119560: 80450FC0 (it)
//	80119564: 80450FC0 (it)
//	80119598: 80450FC0 (it)
//	801195A0: 80450FC0 (it)
//	801195AC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_c_getDemoIDData(dDemo_actor_c* param_0, int* param_1, int* param_2,
                                        int* param_3, u16* param_4, int* param_5, int* param_6) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_c_getDemoIDData__FP13dDemo_actor_cPiPiPiPUsPiPi.s"
}
#pragma pop

/* 801195C0-801195F8 0038+00 s=7 e=0 z=0  None .text      procDemoCommon__9daAlink_cFv */
//	801195D0: 804061C0 (g_dComIfG_gameInfo)
//	801195D4: 804061C0 (g_dComIfG_gameInfo)
//	801195E0: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDemoCommon() {
    nofralloc
#include "asm/d/a/d_a_alink/procDemoCommon__9daAlink_cFv.s"
}
#pragma pop

/* 801195F8-801196D8 00E0+00 s=1 e=0 z=0  None .text      procCoToolDemoInit__9daAlink_cFv */
//	80119610: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80119624: 80452CC0 (lit_6108)
//	80119654: 800AC738 (setDoubleAnimeBlendRatio__9daAlink_cFf)
//	8011967C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	80119694: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoToolDemoInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoToolDemoInit__9daAlink_cFv.s"
}
#pragma pop

/* 801196D8-80119D98 06C0+00 s=1 e=0 z=0  None .text      procCoToolDemo__9daAlink_cFv */
//	801196F0: 803621D8 (_savegpr_28)
//	801196F8: 80450E20 (m_object__7dDemo_c)
//	80119700: 80039088 (getActor__14dDemo_object_cFUc)
//	8011972C: 80452CC0 (lit_6108)
//	801197A8: 804061C0 (g_dComIfG_gameInfo)
//	801197AC: 804061C0 (g_dComIfG_gameInfo)
//	801197C8: 80450620 (m_branchId__7dDemo_c)
//	801197DC: 80039EEC (setBranchId__7dDemo_cFUss)
//	80119800: 80118840 (setDemoRightHandIndex__9daAlink_cFUs)
//	8011981C: 801188B0 (setDemoLeftHandIndex__9daAlink_cFUs)
//	8011986C: 80117C34 (endHighModel__9daAlink_cFv)
//	801198EC: 8011894C (setDemoRide__9daAlink_cFUs)
//	8011993C: 800C1E0C (changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE)
//	8011994C: 80452CB8 (lit_6040)
//	80119954: 80452D4C (lit_8131)
//	80119968: 80453058 (lit_37152)
//	80119974: 80452F88 (lit_24680)
//	80119988: 80452CC0 (lit_6108)
//	80119994: 80452D4C (lit_8131)
//	801199A8: 80453058 (lit_37152)
//	801199B4: 80452F88 (lit_24680)
//	80119A00: 801191C4 (setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi)
//	80119A14: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	80119A18: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	80119A28: 8003C400 (getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci)
//	80119A40: 80452CC0 (lit_6108)
//	80119A8C: 801191C4 (setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi)
//	80119AD4: 801191C4 (setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi)
//	80119B1C: 80119134 (setDemoBrk__9daAlink_cFPP15J3DAnmTevRegKeyP8J3DModelUs)
//	80119B64: 801191C4 (setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi)
//	80119BAC: 801191C4 (setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi)
//	80119BE8: 801191C4 (setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi)
//	80119C24: 801191C4 (setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi)
//	80119C50: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	80119C54: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	80119C64: 8003C400 (getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci)
//	80119C8C: 80452CB8 (lit_6040)
//	80119C98: 8000DA08 (init__13mDoExt_blkAnmFP13J3DDeformDataP13J3DAnmClusteriifss)
//	80119CA4: 80452CC0 (lit_6108)
//	80119CF0: 80119464 (daAlink_c_getDemoIDData__FP13dDemo_actor_cPiPiPiPUsPiPi)
//	80119D18: 80452CB0 (lit_6025)
//	80119D4C: 8011FBC0 (warpModelTexScroll__9daAlink_cFv)
//	80119D5C: 80117C34 (endHighModel__9daAlink_cFv)
//	80119D70: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	80119D84: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoToolDemo() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoToolDemo__9daAlink_cFv.s"
}
#pragma pop

/* 80119D98-80119F64 01CC+00 s=1 e=0 z=0  None .text      procCoTalkInit__9daAlink_cFv */
//	80119DF0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80119E1C: 800B983C (allUnequip__9daAlink_cFi)
//	80119E34: 80452CC0 (lit_6108)
//	80119E48: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80119E4C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80119E54: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
//	80119E74: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80119E78: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80119E80: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80119E94: 80452E64 (lit_14954)
//	80119EA8: 80452C98 (lit_5943)
//	80119EC0: 80452CC0 (lit_6108)
//	80119ED8: 80452CC4 (lit_6109)
//	80119EE4: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	80119EE8: 804061C0 (g_dComIfG_gameInfo)
//	80119EEC: 804061C0 (g_dComIfG_gameInfo)
//	80119F08: 80118308 (setTalkStartBack__9daAlink_cFP4cXyz)
//	80119F20: 80118654 (setTalkAnime__9daAlink_cFv)
//	80119F24: 80452CC0 (lit_6108)
//	80119F34: 804061C0 (g_dComIfG_gameInfo)
//	80119F38: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTalkInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTalkInit__9daAlink_cFv.s"
}
#pragma pop

/* 80119F64-8011A214 02B0+00 s=1 e=0 z=0  None .text      procCoTalk__9daAlink_cFv */
//	80119F7C: 804061C0 (g_dComIfG_gameInfo)
//	80119F80: 804061C0 (g_dComIfG_gameInfo)
//	80119F9C: 8011856C (setShapeAngleToTalkActor__9daAlink_cFv)
//	80119FB8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8011A004: 80270E24 (cLib_distanceAngleS__Fss)
//	8011A020: 80452CC0 (lit_6108)
//	8011A034: 80347138 (PSVECSquareMag)
//	8011A038: 80452CC0 (lit_6108)
//	8011A048: 80452CE8 (lit_6846)
//	8011A050: 80452CF0 (lit_6847)
//	8011A098: 80452CF8 (lit_6848)
//	8011A0A4: 80450AE0 (__float_nan)
//	8011A0A8: 80450AE0 (__float_nan)
//	8011A114: 80450AE0 (__float_nan)
//	8011A118: 80450AE0 (__float_nan)
//	8011A11C: 80452DE4 (lit_12328)
//	8011A12C: 80267128 (atan2sX_Z__4cXyzCFv)
//	8011A134: 80270E24 (cLib_distanceAngleS__Fss)
//	8011A164: 80118654 (setTalkAnime__9daAlink_cFv)
//	8011A168: 80452CC0 (lit_6108)
//	8011A198: 80118654 (setTalkAnime__9daAlink_cFv)
//	8011A19C: 80452CC0 (lit_6108)
//	8011A1C0: 800AC450 (getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8011A1DC: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011A1E0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011A1E8: 80452CC4 (lit_6109)
//	8011A1EC: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTalk() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTalk__9daAlink_cFv.s"
}
#pragma pop

/* 8011A214-8011A42C 0218+00 s=1 e=0 z=0  None .text      procCoOpenTreasureInit__9daAlink_cFv */
//	8011A238: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011A260: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011A278: 80452D04 (lit_6896)
//	8011A27C: 8042561C (l_wolfBaseAnime)
//	8011A280: 8042561C (l_wolfBaseAnime)
//	8011A2AC: 8045305C (lit_37322)
//	8011A2B0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8011A2C0: 802AF49C (subBgmStart__8Z2SeqMgrFUl)
//	8011A2C8: 80453060 (lit_37323)
//	8011A2E8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011A2EC: 80425514 (l_waitBaseAnime)
//	8011A2F0: 80425514 (l_waitBaseAnime)
//	8011A308: 80452CC0 (lit_6108)
//	8011A314: 8001BB74 (fopAcM_getEventPartner__FPC10fopAc_ac_c)
//	8011A340: 80439A20 (sincosTable___5JMath)
//	8011A344: 80439A20 (sincosTable___5JMath)
//	8011A39C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	8011A3A4: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8011A3A8: 803DD470 (now__14mDoMtx_stack_c)
//	8011A3AC: 803DD470 (now__14mDoMtx_stack_c)
//	8011A3B4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8011A3B8: 80452DB4 (lit_10040)
//	8011A3BC: 80452F30 (lit_21736)
//	8011A3C0: 80452CE0 (lit_6845)
//	8011A3C4: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8011A3C8: 803DD470 (now__14mDoMtx_stack_c)
//	8011A3CC: 803DD470 (now__14mDoMtx_stack_c)
//	8011A3D8: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoOpenTreasureInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoOpenTreasureInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011A42C-8011A4C0 0094+00 s=1 e=0 z=0  None .text      procCoOpenTreasure__9daAlink_cFv */
//	8011A470: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011A47C: 804061C0 (g_dComIfG_gameInfo)
//	8011A480: 804061C0 (g_dComIfG_gameInfo)
//	8011A48C: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoOpenTreasure() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoOpenTreasure__9daAlink_cFv.s"
}
#pragma pop

/* 8011A4C0-8011A5CC 010C+00 s=1 e=0 z=0  None .text      procCoUnequipInit__9daAlink_cFv */
//	8011A4D8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011A4EC: 80452CC0 (lit_6108)
//	8011A510: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011A514: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011A51C: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
//	8011A528: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011A52C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011A534: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	8011A558: 800B983C (allUnequip__9daAlink_cFi)
//	8011A57C: 800B93F4 (swordEquip__9daAlink_cFi)
//	8011A5A0: 80452CB8 (lit_6040)
//	8011A5A4: 80452CC0 (lit_6108)
//	8011A5AC: 80452CC4 (lit_6109)
//	8011A5B0: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoUnequipInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoUnequipInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011A5CC-8011A688 00BC+00 s=1 e=0 z=0  None .text      procCoUnequip__9daAlink_cFv */
//	8011A5F0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011A600: 80452CC4 (lit_6109)
//	8011A604: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	8011A610: 800B9640 (itemEquip__9daAlink_cFUs)
//	8011A614: 80452D44 (lit_7977)
//	8011A628: 800BA6A0 (commonChangeItem__9daAlink_cFv)
//	8011A644: 80452CBC (lit_6041)
//	8011A648: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	8011A650: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	8011A65C: 804061C0 (g_dComIfG_gameInfo)
//	8011A660: 804061C0 (g_dComIfG_gameInfo)
//	8011A66C: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoUnequip() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoUnequip__9daAlink_cFv.s"
}
#pragma pop

/* 8011A688-8011A6FC 0074+00 s=4 e=0 z=0  None .text      setGetSubBgm__9daAlink_cFi */
//	8011A694: 80391A5C (getSeType)
//	8011A698: 80391A5C (getSeType)
//	8011A6C0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8011A6CC: 80391B5C (bgmLabel)
//	8011A6D0: 80391B5C (bgmLabel)
//	8011A6D8: 802AF49C (subBgmStart__8Z2SeqMgrFUl)
//	8011A6E0: 804061C0 (g_dComIfG_gameInfo)
//	8011A6E4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGetSubBgm(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGetSubBgm__9daAlink_cFi.s"
}
#pragma pop

/* 8011A6FC-8011A798 009C+00 s=1 e=0 z=0  None .text      checkTreasureRupeeReturn__9daAlink_cCFi */
//	8011A73C: 804061C0 (g_dComIfG_gameInfo)
//	8011A740: 804061C0 (g_dComIfG_gameInfo)
//	8011A748: 80032AA8 (getRupeeMax__21dSv_player_status_a_cCFv)
//	8011A758: 80391B7C (rupeeCount)
//	8011A75C: 80391B7C (rupeeCount)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkTreasureRupeeReturn(int param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkTreasureRupeeReturn__9daAlink_cCFi.s"
}
#pragma pop

/* 8011A798-8011AC28 0490+00 s=2 e=0 z=0  None .text      procCoGetItemInit__9daAlink_cFv */
//	8011A7A8: 803621D8 (_savegpr_28)
//	8011A7D4: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	8011A844: 80392094 (d_a_d_a_alink__stringBase0)
//	8011A848: 80392094 (d_a_d_a_alink__stringBase0)
//	8011A850: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011A868: 804061C0 (g_dComIfG_gameInfo)
//	8011A86C: 804061C0 (g_dComIfG_gameInfo)
//	8011A878: 80033EC8 (isFirstBit__21dSv_player_get_item_cCFUc)
//	8011A890: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	8011A8A4: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	8011A8B4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011A8B8: 80452CC0 (lit_6108)
//	8011A8E8: 804061C0 (g_dComIfG_gameInfo)
//	8011A8EC: 804061C0 (g_dComIfG_gameInfo)
//	8011A914: 8001BBE8 (fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz)
//	8011A928: 804061C0 (g_dComIfG_gameInfo)
//	8011A92C: 804061C0 (g_dComIfG_gameInfo)
//	8011A934: 800436EC (setPtI_Id__14dEvt_control_cFUi)
//	8011A944: 8001BB44 (fopAcM_getItemEventPartner__FPC10fopAc_ac_c)
//	8011A950: 80037A5C (getItemNo__12daItemBase_cFv)
//	8011A984: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011A994: 80452CB8 (lit_6040)
//	8011A998: 80452D30 (lit_7625)
//	8011A9A0: 80452CC4 (lit_6109)
//	8011A9A4: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8011A9B0: 8042561C (l_wolfBaseAnime)
//	8011A9B4: 8042561C (l_wolfBaseAnime)
//	8011A9CC: 80452D30 (lit_7625)
//	8011A9D4: 80452DC8 (lit_10286)
//	8011A9DC: 80453064 (lit_37527)
//	8011A9FC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011AA14: 801181A0 (setGetItemFace__9daAlink_cFUs)
//	8011AA40: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	8011AA6C: 80452CB8 (lit_6040)
//	8011AA70: 80452CC0 (lit_6108)
//	8011AA78: 80452CBC (lit_6041)
//	8011AA7C: 800AD964 (setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf)
//	8011AA80: 80452D34 (lit_7710)
//	8011AAA4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011AAB4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011AACC: 801181A0 (setGetItemFace__9daAlink_cFUs)
//	8011AAD8: 80452D34 (lit_7710)
//	8011AAE0: 80452E04 (lit_13794)
//	8011AAE8: 80453068 (lit_37528)
//	8011AAF8: 80425514 (l_waitBaseAnime)
//	8011AAFC: 80425514 (l_waitBaseAnime)
//	8011AB4C: 804061C0 (g_dComIfG_gameInfo)
//	8011AB50: 804061C0 (g_dComIfG_gameInfo)
//	8011AB94: 803650D0 (abs)
//	8011ABA0: 803650D0 (abs)
//	8011ABDC: 801A8168 (dKy_Itemgetcol_chg_on__Fv)
//	8011ABE0: 804061C0 (g_dComIfG_gameInfo)
//	8011ABE4: 804061C0 (g_dComIfG_gameInfo)
//	8011AC14: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGetItemInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGetItemInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011AC28-8011B3F0 07C8+00 s=1 e=0 z=0  None .text      procCoGetItem__9daAlink_cFv */
//	8011AC38: 803621D4 (_savegpr_27)
//	8011AC40: 8038D658 (lit_3757)
//	8011AC44: 8038D658 (lit_3757)
//	8011ACA0: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	8011ACA4: 804061C0 (g_dComIfG_gameInfo)
//	8011ACA8: 804061C0 (g_dComIfG_gameInfo)
//	8011ACB4: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011ACF8: 800EDA24 (setSyncRidePos__9daAlink_cFv)
//	8011AD40: 80452CB0 (lit_6025)
//	8011ADB8: 80439A20 (sincosTable___5JMath)
//	8011ADBC: 80439A20 (sincosTable___5JMath)
//	8011ADC8: 8045306C (lit_37749)
//	8011AE10: 8001BB44 (fopAcM_getItemEventPartner__FPC10fopAc_ac_c)
//	8011AE2C: 80037A5C (getItemNo__12daItemBase_cFv)
//	8011AE4C: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8011AE70: 801181A0 (setGetItemFace__9daAlink_cFUs)
//	8011AE78: 80452CB8 (lit_6040)
//	8011AE88: 80452D50 (lit_8247)
//	8011AE9C: 80452D34 (lit_7710)
//	8011AEDC: 804061C0 (g_dComIfG_gameInfo)
//	8011AEE0: 804061C0 (g_dComIfG_gameInfo)
//	8011AF04: 8011A688 (setGetSubBgm__9daAlink_cFi)
//	8011AF20: 80452CB0 (lit_6025)
//	8011AF3C: 80452D3C (lit_7808)
//	8011AF68: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8011AF70: 80037A74 (show__12daItemBase_cFv)
//	8011AF7C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011AFA4: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011AFB4: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011AFC4: 801181A0 (setGetItemFace__9daAlink_cFUs)
//	8011AFDC: 804061C0 (g_dComIfG_gameInfo)
//	8011AFE0: 804061C0 (g_dComIfG_gameInfo)
//	8011AFEC: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011B018: 804061C0 (g_dComIfG_gameInfo)
//	8011B01C: 804061C0 (g_dComIfG_gameInfo)
//	8011B028: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011B070: 804061C0 (g_dComIfG_gameInfo)
//	8011B074: 804061C0 (g_dComIfG_gameInfo)
//	8011B080: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011B08C: 80452CB0 (lit_6025)
//	8011B0A8: 80453068 (lit_37528)
//	8011B0FC: 80022138 (fpcM_IsCreating__FUi)
//	8011B128: 80392094 (d_a_d_a_alink__stringBase0)
//	8011B12C: 80392094 (d_a_d_a_alink__stringBase0)
//	8011B134: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011B158: 80392094 (d_a_d_a_alink__stringBase0)
//	8011B15C: 80392094 (d_a_d_a_alink__stringBase0)
//	8011B164: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011B188: 804061C0 (g_dComIfG_gameInfo)
//	8011B18C: 804061C0 (g_dComIfG_gameInfo)
//	8011B1D0: 804061C0 (g_dComIfG_gameInfo)
//	8011B1D4: 804061C0 (g_dComIfG_gameInfo)
//	8011B204: 80392094 (d_a_d_a_alink__stringBase0)
//	8011B208: 80392094 (d_a_d_a_alink__stringBase0)
//	8011B210: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011B244: 801187B4 (checkEndMessage__9daAlink_cFUl)
//	8011B270: 804061C0 (g_dComIfG_gameInfo)
//	8011B274: 804061C0 (g_dComIfG_gameInfo)
//	8011B280: 80033EC8 (isFirstBit__21dSv_player_get_item_cCFUc)
//	8011B304: 804061C0 (g_dComIfG_gameInfo)
//	8011B308: 804061C0 (g_dComIfG_gameInfo)
//	8011B314: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011B31C: 80037AE4 (dead__12daItemBase_cFv)
//	8011B348: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
//	8011B37C: 80452CC0 (lit_6108)
//	8011B380: 80452CB8 (lit_6040)
//	8011B394: 80452CC4 (lit_6109)
//	8011B398: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	8011B3B4:
// 800ADE14 (setBlendMoveAnime__9daAlink_cFf) 	8011B3D0: 80037A64 (hide__12daItemBase_cFv)
// 8011B3DC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGetItem() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGetItem__9daAlink_cFv.s"
}
#pragma pop

/* 8011B3F0-8011B46C 007C+00 s=1 e=0 z=0  None .text      procCoTurnBackInit__9daAlink_cFv */
//	8011B408: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011B41C: 80452CC0 (lit_6108)
//	8011B438: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011B448: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTurnBackInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTurnBackInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011B46C-8011B57C 0110+00 s=1 e=0 z=0  None .text      procCoTurnBack__9daAlink_cFv */
//	8011B48C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011B4B4: 80452D3C (lit_7808)
//	8011B4B8: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
//	8011B4C0: 8038D768 (m__26daAlinkHIO_noActAtnMove_c0)
//	8011B4C4: 8038D768 (m__26daAlinkHIO_noActAtnMove_c0)
//	8011B4D0: 80452CC0 (lit_6108)
//	8011B4E4: 80452CC4 (lit_6109)
//	8011B4E8: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	8011B4F4:
// 804061C0 (g_dComIfG_gameInfo) 	8011B4F8: 804061C0 (g_dComIfG_gameInfo) 	8011B504: 8004817C
//(cutEnd__16dEvent_manager_cFi) 	8011B518: 804061C0 (g_dComIfG_gameInfo) 	8011B51C: 804061C0
//(g_dComIfG_gameInfo) 	8011B528: 8004817C (cutEnd__16dEvent_manager_cFi) 	8011B540: 80452DC4
//(lit_10194)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTurnBack() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTurnBack__9daAlink_cFv.s"
}
#pragma pop

/* 8011B57C-8011B71C 01A0+00 s=1 e=0 z=0  None .text      procDoorOpenInit__9daAlink_cFv */
//	8011B594: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011B5A8: 80452CC0 (lit_6108)
//	8011B5B0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011B5B4: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011B620: 80452E24 (lit_14620)
//	8011B630: 80452EE4 (lit_19380)
//	8011B644: 80452D30 (lit_7625)
//	8011B674: 80452D94 (lit_8785)
//	8011B680: 80425514 (l_waitBaseAnime)
//	8011B684: 80425514 (l_waitBaseAnime)
//	8011B6B0: 80452CB8 (lit_6040)
//	8011B6B4: 80452CC0 (lit_6108)
//	8011B6B8: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	8011B6BC: 80452CC0 (lit_6108)
//	8011B6DC: 80425514 (l_waitBaseAnime)
//	8011B6E0: 80425514 (l_waitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDoorOpenInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDoorOpenInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011B71C-8011B914 01F8+00 s=1 e=0 z=0  None .text      procDoorOpen__9daAlink_cFv */
//	8011B760: 80452D34 (lit_7710)
//	8011B798: 80452DC0 (lit_10193)
//	8011B79C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8011B7DC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011B814: 800BF194 (seStartMapInfo__9daAlink_cFUl)
//	8011B820: 80452CC0 (lit_6108)
//	8011B824: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	8011B858: 804061C0 (g_dComIfG_gameInfo)
//	8011B85C: 804061C0 (g_dComIfG_gameInfo)
//	8011B868: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011B898: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
//	8011B8E4: 804061C0 (g_dComIfG_gameInfo)
//	8011B8E8: 804061C0 (g_dComIfG_gameInfo)
//	8011B8F4: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDoorOpen() {
    nofralloc
#include "asm/d/a/d_a_alink/procDoorOpen__9daAlink_cFv.s"
}
#pragma pop

/* 8011B914-8011BA20 010C+00 s=1 e=0 z=0  None .text      procCoLookWaitInit__9daAlink_cFv */
//	8011B92C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011B95C: 800E3C6C (checkGrabAnime__9daAlink_cCFv)
//	8011B9B0: 80452CB8 (lit_6040)
//	8011B9B4: 80101CF4 (setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf)
//	8011B9B8: 80452CC0 (lit_6108)
//	8011B9D0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011B9D4: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011B9DC: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
//	8011B9E8: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011B9EC: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011B9F4: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLookWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLookWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011BA20-8011BABC 009C+00 s=1 e=0 z=0  None .text      procCoLookWait__9daAlink_cFv */
//	8011BA34: 801180EC (getDemoLookActor__9daAlink_cFv)
//	8011BA48: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8011BA8C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8011BA90: 804061C0 (g_dComIfG_gameInfo)
//	8011BA94: 804061C0 (g_dComIfG_gameInfo)
//	8011BAA0: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLookWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLookWait__9daAlink_cFv.s"
}
#pragma pop

/* 8011BABC-8011BB40 0084+00 s=1 e=0 z=0  None .text      procCoDemoPushPullWaitInit__9daAlink_cFv
 */
//	8011BAD4: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011BAFC: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011BB0C: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	8011BB10: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	8011BB1C: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8011BB20: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoDemoPushPullWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoDemoPushPullWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011BB40-8011BC14 00D4+00 s=1 e=0 z=0  None .text      procCoDemoPushMoveInit__9daAlink_cFv */
//	8011BB58: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011BB8C: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011BB9C: 8038F124 (m__20daAlinkHIO_wlPush_c0)
//	8011BBA0: 8038F124 (m__20daAlinkHIO_wlPush_c0)
//	8011BBA8: 80452CC0 (lit_6108)
//	8011BBB4: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8011BBD0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011BBE0: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	8011BBE4: 8038E210 (m__22daAlinkHIO_pushpull_c0)
//	8011BBF0: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8011BBF4: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoDemoPushMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoDemoPushMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011BC14-8011BC74 0060+00 s=2 e=0 z=0  None .text      setMonkeyMoveAnime__9daAlink_cFv */
//	8011BC2C: 80452CC0 (lit_6108)
//	8011BC48: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMonkeyMoveAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setMonkeyMoveAnime__9daAlink_cFv.s"
}
#pragma pop

/* 8011BC74-8011BD18 00A4+00 s=1 e=0 z=0  None .text      procMonkeyMoveInit__9daAlink_cFv */
//	8011BC8C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011BCAC: 80452CC0 (lit_6108)
//	8011BCB8: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8011BCBC: 80452CC0 (lit_6108)
//	8011BCD4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	8011BCEC: 80452CC0 (lit_6108)
//	8011BCF0: 80452CC4 (lit_6109)
//	8011BCF4: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8011BCFC: 8011BC14 (setMonkeyMoveAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMonkeyMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procMonkeyMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011BD18-8011BD6C 0054+00 s=1 e=0 z=0  None .text      procMonkeyMove__9daAlink_cFv */
//	8011BD2C: 804061C0 (g_dComIfG_gameInfo)
//	8011BD30: 804061C0 (g_dComIfG_gameInfo)
//	8011BD3C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011BD50: 8011BC14 (setMonkeyMoveAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMonkeyMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procMonkeyMove__9daAlink_cFv.s"
}
#pragma pop

/* 8011BD6C-8011BDF0 0084+00 s=1 e=0 z=0  None .text      procDemoBoomerangCatchInit__9daAlink_cFv
 */
//	8011BD84: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011BD98: 80452CC0 (lit_6108)
//	8011BDAC: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	8011BDBC: 800BF9F0 (setItemActor__9daAlink_cFv)
//	8011BDC8: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	8011BDCC: 8038E6C8 (m__18daAlinkHIO_boom_c0)
//	8011BDD4: 800AD0F4
//(setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDemoBoomerangCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDemoBoomerangCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011BDF0-8011BE54 0064+00 s=1 e=0 z=0  None .text      procDemoBoomerangCatch__9daAlink_cFv */
//	8011BE04: 804061C0 (g_dComIfG_gameInfo)
//	8011BE08: 804061C0 (g_dComIfG_gameInfo)
//	8011BE14: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011BE1C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011BE2C: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011BE30: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011BE38: 800ADE14 (setBlendMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDemoBoomerangCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procDemoBoomerangCatch__9daAlink_cFv.s"
}
#pragma pop

/* 8011BE54-8011C1B4 0360+00 s=2 e=0 z=0  None .text      procCoDeadInit__9daAlink_cFi */
//	8011BE64: 803621DC (_savegpr_29)
//	8011BE74: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011BE88: 804061C0 (g_dComIfG_gameInfo)
//	8011BE8C: 804061C0 (g_dComIfG_gameInfo)
//	8011BEA4: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	8011BEB0: 80452CC0 (lit_6108)
//	8011BEE4: 80118BF4 (setDeadRideSyncPos__9daAlink_cFv)
//	8011BF10: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011BF14: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011BF1C: 80452CC4 (lit_6109)
//	8011BF20: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8011BF30: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011BF34: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011BF3C: 80452CC4 (lit_6109)
//	8011BF40: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8011BF44: 80453070 (lit_38059)
//	8011BF70: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011BF7C: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8011BF80: 804061C0 (g_dComIfG_gameInfo)
//	8011BF84: 804061C0 (g_dComIfG_gameInfo)
//	8011BFBC: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011BFC8: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8011C034: 80452CBC (lit_6041)
//	8011C038: 800ADAEC (resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf)
//	8011C058: 804061C0 (g_dComIfG_gameInfo)
//	8011C05C: 804061C0 (g_dComIfG_gameInfo)
//	8011C084: 80452CC0 (lit_6108)
//	8011C0BC: 804061C0 (g_dComIfG_gameInfo)
//	8011C0C0: 804061C0 (g_dComIfG_gameInfo)
//	8011C0F0: 80452CC0 (lit_6108)
//	8011C114: 80452CC0 (lit_6108)
//	8011C140: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011C144: 80452CB8 (lit_6040)
//	8011C158: 804061C0 (g_dComIfG_gameInfo)
//	8011C15C: 804061C0 (g_dComIfG_gameInfo)
//	8011C178: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	8011C1A0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoDeadInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoDeadInit__9daAlink_cFi.s"
}
#pragma pop

/* 8011C1B4-8011C62C 0478+00 s=1 e=0 z=0  None .text      procCoDead__9daAlink_cFv */
//	8011C1C4: 803621D8 (_savegpr_28)
//	8011C1DC: 80118BF4 (setDeadRideSyncPos__9daAlink_cFv)
//	8011C200: 8019BFC4 (d_GameOver_Create__FUc)
//	8011C21C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8011C234: 802AF010 (bgmStart__8Z2SeqMgrFUlUll)
//	8011C270: 80181640 (dCam_getBody__Fv)
//	8011C284: 80088A7C (StartEventCamera__9dCamera_cFiie)
//	8011C2E4: 80453074 (lit_38175)
//	8011C2EC: 80452DC8 (lit_10286)
//	8011C308: 80453078 (lit_38176)
//	8011C30C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8011C328: 8045307C (lit_38177)
//	8011C32C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8011C344: 80118BF4 (setDeadRideSyncPos__9daAlink_cFv)
//	8011C34C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011C368: 80452D10 (lit_7306)
//	8011C384: 80452CC0 (lit_6108)
//	8011C388: 80452D88 (lit_8782)
//	8011C38C: 80270740 (cLib_chaseF__FPfff)
//	8011C394: 80453070 (lit_38059)
//	8011C3B0: 8001FA24 (fopMsgM_SearchByID__FUi)
//	8011C3E0: 8001FA24 (fopMsgM_SearchByID__FUi)
//	8011C428: 804061C0 (g_dComIfG_gameInfo)
//	8011C42C: 804061C0 (g_dComIfG_gameInfo)
//	8011C458: 80452CB0 (lit_6025)
//	8011C48C: 80392094 (d_a_d_a_alink__stringBase0)
//	8011C490: 80392094 (d_a_d_a_alink__stringBase0)
//	8011C498: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011C4A4: 80392094 (d_a_d_a_alink__stringBase0)
//	8011C4A8: 80392094 (d_a_d_a_alink__stringBase0)
//	8011C4B0: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011C4D4: 80392094 (d_a_d_a_alink__stringBase0)
//	8011C4D8: 80392094 (d_a_d_a_alink__stringBase0)
//	8011C4E0: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011C4F8: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	8011C508: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	8011C518: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	8011C524: 800C02C8 (checkBossRoom__9daAlink_cFv)
//	8011C538: 804061C0 (g_dComIfG_gameInfo)
//	8011C53C: 804061C0 (g_dComIfG_gameInfo)
//	8011C548: 80034934 (isDungeonItem__12dSv_memBit_cCFi)
//	8011C55C: 804061C0 (g_dComIfG_gameInfo)
//	8011C560: 804061C0 (g_dComIfG_gameInfo)
//	8011C56C: 80034934 (isDungeonItem__12dSv_memBit_cCFi)
//	8011C578: 80392094 (d_a_d_a_alink__stringBase0)
//	8011C57C: 80392094 (d_a_d_a_alink__stringBase0)
//	8011C584: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011C590: 804061C0 (g_dComIfG_gameInfo)
//	8011C594: 804061C0 (g_dComIfG_gameInfo)
//	8011C5A0: 800349BC (isEventBit__11dSv_event_cCFUs)
//	8011C5E0: 800BDF60 (startRestartRoom__9daAlink_cFUliii)
//	8011C5F8: 80452CC0 (lit_6108)
//	8011C60C: 80027170 (dStage_changeScene__FifUlScsi)
//	8011C618: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoDead() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoDead__9daAlink_cFv.s"
}
#pragma pop

/* 8011C62C-8011C760 0134+00 s=1 e=0 z=0  None .text      procCoLookAroundInit__9daAlink_cFv */
//	8011C644: 80425508 (lit_4409)
//	8011C648: 80425508 (lit_4409)
//	8011C650: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011C680: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011C68C: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8011C6E0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011C70C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011C734: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLookAroundInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLookAroundInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011C760-8011C81C 00BC+00 s=1 e=0 z=0  None .text      procCoLookAround__9daAlink_cFv */
//	8011C7A0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011C7AC: 804061C0 (g_dComIfG_gameInfo)
//	8011C7B0: 804061C0 (g_dComIfG_gameInfo)
//	8011C7BC: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011C7D4: 80452D3C (lit_7808)
//	8011C7D8: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLookAround() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLookAround__9daAlink_cFv.s"
}
#pragma pop

/* 8011C81C-8011C890 0074+00 s=1 e=0 z=0  None .text      procBossAtnWaitInit__9daAlink_cFv */
//	8011C834: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011C850: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011C870: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBossAtnWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBossAtnWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011C890-8011C904 0074+00 s=1 e=0 z=0  None .text      procCoQuakeWaitInit__9daAlink_cFv */
//	8011C8A8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011C8D0: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011C8E0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011C8E4: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoQuakeWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoQuakeWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011C904-8011C9D0 00CC+00 s=1 e=0 z=0  None .text      procCoCaughtInit__9daAlink_cFv */
//	8011C928: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011C950: 8038F3B4 (m__25daAlinkHIO_wlDamCaught_c0)
//	8011C954: 8038F3B4 (m__25daAlinkHIO_wlDamCaught_c0)
//	8011C95C: 801296A8 (setSingleAnimeWolfBaseMorf__9daAlink_cFQ29daAlink_c12daAlink_WANMf)
//	8011C96C: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	8011C970: 8038E49C (m__23daAlinkHIO_damCaught_c0)
//	8011C978: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	8011C990: 80452CC0 (lit_6108)
//	8011C9A8: 800BB770 (setSpecialGravity__9daAlink_cFffi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoCaughtInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoCaughtInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011C9D0-8011CA4C 007C+00 s=1 e=0 z=0  None .text      procLookUpInit__9daAlink_cFv */
//	8011C9E8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011CA04: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011CA08: 80452CC0 (lit_6108)
//	8011CA10: 80425514 (l_waitBaseAnime)
//	8011CA14: 80425514 (l_waitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011CA4C-8011CA98 004C+00 s=1 e=0 z=0  None .text      procLookUp__9daAlink_cFv */
//	8011CA70: 804061C0 (g_dComIfG_gameInfo)
//	8011CA74: 804061C0 (g_dComIfG_gameInfo)
//	8011CA80: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookUp__9daAlink_cFv.s"
}
#pragma pop

/* 8011CA98-8011CB20 0088+00 s=1 e=0 z=0  None .text      procLookUpToGetItemInit__9daAlink_cFv */
//	8011CAB0: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011CACC: 80452D14 (lit_7307)
//	8011CAD0: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	8011CADC: 80452CC0 (lit_6108)
//	8011CAE4: 80425514 (l_waitBaseAnime)
//	8011CAE8: 80425514 (l_waitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookUpToGetItemInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookUpToGetItemInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011CB20-8011CBD4 00B4+00 s=1 e=0 z=0  None .text      procLookUpToGetItem__9daAlink_cFv */
//	8011CB58: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011CB74: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011CB8C: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	8011CBA8: 804061C0 (g_dComIfG_gameInfo)
//	8011CBAC: 804061C0 (g_dComIfG_gameInfo)
//	8011CBB8: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookUpToGetItem() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookUpToGetItem__9daAlink_cFv.s"
}
#pragma pop

/* 8011CBD4-8011CCA8 00D4+00 s=1 e=0 z=0  None .text      procHandPatInit__9daAlink_cFv */
//	8011CBEC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011CC08: 80452CB8 (lit_6040)
//	8011CC0C: 80452D00 (lit_6895)
//	8011CC14: 80452CC4 (lit_6109)
//	8011CC18: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	8011CC30: 80425544 (l_halfAtnWaitBaseAnime)
//	8011CC34: 80425544 (l_halfAtnWaitBaseAnime)
//	8011CC58: 80452CC0 (lit_6108)
//	8011CC70: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHandPatInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHandPatInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011CCA8-8011CDE0 0138+00 s=1 e=0 z=0  None .text      procHandPat__9daAlink_cFv */
//	8011CCD4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011CCE0: 804061C0 (g_dComIfG_gameInfo)
//	8011CCE4: 804061C0 (g_dComIfG_gameInfo)
//	8011CCF0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011CD08: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011CD0C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011CD14: 80452CC4 (lit_6109)
//	8011CD18: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8011CD40: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011CD54: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011CD90: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	8011CDA4: 80452EB0 (lit_16790)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHandPat() {
    nofralloc
#include "asm/d/a/d_a_alink/procHandPat__9daAlink_cFv.s"
}
#pragma pop

/* 8011CDE0-8011CF60 0180+00 s=1 e=0 z=0  None .text      procCoFogDeadInit__9daAlink_cFv */
//	8011CDFC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011CE10: 80452CC0 (lit_6108)
//	8011CE40: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011CE4C: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8011CE78: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011CEA0: 800B48D0 (setJumpMode__9daAlink_cFv)
//	8011CEB8: 80452CC0 (lit_6108)
//	8011CEBC: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	8011CEC0: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	8011CEC8: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8011CED8: 80452CC0 (lit_6108)
//	8011CEDC: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	8011CEE0: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	8011CEE8: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8011CF08: 80181640 (dCam_getBody__Fv)
//	8011CF14: 80392094 (d_a_d_a_alink__stringBase0)
//	8011CF18: 80392094 (d_a_d_a_alink__stringBase0)
//	8011CF30: 80088A7C (StartEventCamera__9dCamera_cFiie)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoFogDeadInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoFogDeadInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011CF60-8011D0A0 0140+00 s=1 e=0 z=0  None .text      procCoFogDead__9daAlink_cFv */
//	8011CFA8: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011CFB4: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8011CFDC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011D01C: 80031CF0 (getPlayerNo__11daTagMist_cFv)
//	8011D024: 80452CC0 (lit_6108)
//	8011D03C: 80027170 (dStage_changeScene__FifUlScsi)
//	8011D050: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8011D064: 80452CB8 (lit_6040)
//	8011D06C: 80452CBC (lit_6041)
//	8011D078: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoFogDead() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoFogDead__9daAlink_cFv.s"
}
#pragma pop

/* 8011D0A0-8011D110 0070+00 s=1 e=0 z=0  None .text      procWolfSmellWaitInit__9daAlink_cFv */
//	8011D0B8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011D0D4: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8011D0D8: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8011D0E4: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8011D0F0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSmellWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSmellWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D110-8011D1F4 00E4+00 s=1 e=0 z=0  None .text      procCoNodInit__9daAlink_cFv */
//	8011D128: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011D168: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	8011D180: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	8011D18C: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8011D19C: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	8011D1A8: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	8011D1B4: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoNodInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoNodInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D1F4-8011D268 0074+00 s=1 e=0 z=0  None .text      procCoNod__9daAlink_cFv */
//	8011D20C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011D228: 80452CC4 (lit_6109)
//	8011D22C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	8011D23C: 804061C0 (g_dComIfG_gameInfo)
//	8011D240: 804061C0 (g_dComIfG_gameInfo)
//	8011D24C: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoNod() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoNod__9daAlink_cFv.s"
}
#pragma pop

/* 8011D268-8011D304 009C+00 s=1 e=0 z=0  None .text      procCoEyeAwayInit__9daAlink_cFv */
//	8011D280: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011D2A8: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	8011D2B4: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8011D2CC: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoEyeAwayInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoEyeAwayInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D304-8011D3CC 00C8+00 s=1 e=0 z=0  None .text      procCoGlareInit__9daAlink_cFv */
//	8011D31C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011D350: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	8011D36C: 800AFAA8 (setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8011D384: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	8011D390: 80452CBC (lit_6041)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGlareInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGlareInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D3CC-8011D474 00A8+00 s=1 e=0 z=0  None .text      procCoGlare__9daAlink_cFv */
//	8011D418: 804061C0 (g_dComIfG_gameInfo)
//	8011D41C: 804061C0 (g_dComIfG_gameInfo)
//	8011D428: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011D43C: 80452D20 (lit_7449)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGlare() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGlare__9daAlink_cFv.s"
}
#pragma pop

/* 8011D474-8011D4D4 0060+00 s=1 e=0 z=0  None .text      procGoatStopReadyInit__9daAlink_cFv */
//	8011D48C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011D4A8: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011D4AC: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatStopReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatStopReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D4D4-8011D544 0070+00 s=1 e=0 z=0  None .text      procGoatStopReady__9daAlink_cFv */
//	8011D4EC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011D500: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011D518: 804061C0 (g_dComIfG_gameInfo)
//	8011D51C: 804061C0 (g_dComIfG_gameInfo)
//	8011D528: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatStopReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatStopReady__9daAlink_cFv.s"
}
#pragma pop

/* 8011D544-8011D64C 0108+00 s=2 e=0 z=0  None .text      procCoGetReadySitInit__9daAlink_cFv */
//	8011D56C: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	8011D5A4: 800C2DDC (procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c)
//	8011D5B4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011D5CC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011D5D0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011D5D8: 80452CC4 (lit_6109)
//	8011D5DC: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8011D5F4: 80452CB8 (lit_6040)
//	8011D5F8: 80452D80 (lit_8780)
//	8011D600: 80452CC4 (lit_6109)
//	8011D604: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	8011D610: 80425514 (l_waitBaseAnime)
//	8011D614: 80425514 (l_waitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGetReadySitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGetReadySitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D64C-8011D6D0 0084+00 s=1 e=0 z=0  None .text      procCoGetReadySit__9daAlink_cFv */
//	8011D664: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011D6A4: 804061C0 (g_dComIfG_gameInfo)
//	8011D6A8: 804061C0 (g_dComIfG_gameInfo)
//	8011D6B4: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGetReadySit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGetReadySit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D6D0-8011D7D4 0104+00 s=1 e=0 z=0  None .text      procCoTwGateInit__9daAlink_cFv */
//	8011D6E8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011D710: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8011D714: 8042561C (l_wolfBaseAnime)
//	8011D718: 8042561C (l_wolfBaseAnime)
//	8011D758: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011D75C: 80425514 (l_waitBaseAnime)
//	8011D760: 80425514 (l_waitBaseAnime)
//	8011D79C: 80452CC0 (lit_6108)
//	8011D7B0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8011D7B4: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTwGateInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTwGateInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D7D4-8011D82C 0058+00 s=1 e=0 z=0  None .text      procCoTwGate__9daAlink_cFv */
//	8011D7EC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011D7F8: 804061C0 (g_dComIfG_gameInfo)
//	8011D7FC: 804061C0 (g_dComIfG_gameInfo)
//	8011D808: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTwGate() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTwGate__9daAlink_cFv.s"
}
#pragma pop

/* 8011D82C-8011D8F8 00CC+00 s=1 e=0 z=0  None .text      procWolfSnowEscapeInit__9daAlink_cFv */
//	8011D844: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011D870: 80452CB8 (lit_6040)
//	8011D874: 80452D3C (lit_7808)
//	8011D87C: 80452CC4 (lit_6109)
//	8011D880: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8011D8A8: 8042561C (l_wolfBaseAnime)
//	8011D8AC: 8042561C (l_wolfBaseAnime)
//	8011D8C4: 80453068 (lit_37528)
//	8011D8D8: 80452CE0 (lit_6845)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSnowEscapeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSnowEscapeInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D8F8-8011DB04 020C+00 s=1 e=0 z=0  None .text      procWolfSnowEscape__9daAlink_cFv */
//	8011D908: 803621DC (_savegpr_29)
//	8011D920: 804061C0 (g_dComIfG_gameInfo)
//	8011D924: 804061C0 (g_dComIfG_gameInfo)
//	8011D930: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011D950: 80452D14 (lit_7307)
//	8011D954: 80452C98 (lit_5943)
//	8011D964: 80452CB0 (lit_6025)
//	8011D990: 80452CBC (lit_6041)
//	8011D9A0: 8042561C (l_wolfBaseAnime)
//	8011D9A4: 8042561C (l_wolfBaseAnime)
//	8011D9C4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011D9E0: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	8011DA20: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	8011DA24: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	8011DA28: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8011DA2C:
// 8042561C (l_wolfBaseAnime) 	8011DA30: 8042561C (l_wolfBaseAnime) 	8011DA48: 80452CB8
// (lit_6040) 	8011DA50: 80452CB0 (lit_6025) 	8011DAA4: 8038EE28 (m__20daAlinkHIO_wlMove_c0) 	8011DAA8:
//8038EE28 (m__20daAlinkHIO_wlMove_c0) 	8011DAB0: 80452CC4 (lit_6109) 	8011DAB4: 801296D8
//(setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff) 	8011DAD0: 80452D1C
//(lit_7448) 	8011DAD4: 8032842C (checkPass__12J3DFrameCtrlFf) 	8011DAE0: 80452CC0 (lit_6108)
//	8011DAF0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSnowEscape() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSnowEscape__9daAlink_cFv.s"
}
#pragma pop

/* 8011DB04-8011DB9C 0098+00 s=1 e=0 z=0  None .text      procZoraMoveInit__9daAlink_cFv */
//	8011DB1C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011DB38: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011DB3C: 80452CC0 (lit_6108)
//	8011DB54: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8011DB64: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	8011DB78: 804255A4 (l_boarBaseAnime)
//	8011DB7C: 804255A4 (l_boarBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procZoraMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procZoraMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011DB9C-8011DDD4 0238+00 s=1 e=0 z=0  None .text      procZoraMove__9daAlink_cFv */
//	8011DBB4: 804061C0 (g_dComIfG_gameInfo)
//	8011DBB8: 804061C0 (g_dComIfG_gameInfo)
//	8011DBC4: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011DBCC: 804061C0 (g_dComIfG_gameInfo)
//	8011DBD0: 804061C0 (g_dComIfG_gameInfo)
//	8011DBD8: 800432EC (convPId__14dEvt_control_cFUi)
//	8011DC00: 803DD470 (now__14mDoMtx_stack_c)
//	8011DC04: 803DD470 (now__14mDoMtx_stack_c)
//	8011DC08: 803464B0 (PSMTXCopy)
//	8011DC0C: 803DD470 (now__14mDoMtx_stack_c)
//	8011DC10: 803DD470 (now__14mDoMtx_stack_c)
//	8011DC18: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8011DC1C: 80452CC0 (lit_6108)
//	8011DC20: 80452CE0 (lit_6845)
//	8011DC24: 80453080 (lit_38624)
//	8011DC28: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8011DC2C: 803DD470 (now__14mDoMtx_stack_c)
//	8011DC30: 803DD470 (now__14mDoMtx_stack_c)
//	8011DC4C: 80430D3C (BaseZ__4cXyz)
//	8011DC50: 80430D3C (BaseZ__4cXyz)
//	8011DC58: 80346E4C (PSMTXMultVecSR)
//	8011DC5C: 803DD470 (now__14mDoMtx_stack_c)
//	8011DC60: 803DD470 (now__14mDoMtx_stack_c)
//	8011DC64: 80430D24 (BaseY__4cXyz)
//	8011DC68: 80430D24 (BaseY__4cXyz)
//	8011DC70: 80346E4C (PSMTXMultVecSR)
//	8011DC80: 80452CC0 (lit_6108)
//	8011DCA4: 80347138 (PSVECSquareMag)
//	8011DCA8: 80452CC0 (lit_6108)
//	8011DCB8: 80452CE8 (lit_6846)
//	8011DCC0: 80452CF0 (lit_6847)
//	8011DD08: 80452CF8 (lit_6848)
//	8011DD14: 80450AE0 (__float_nan)
//	8011DD18: 80450AE0 (__float_nan)
//	8011DD84: 80450AE0 (__float_nan)
//	8011DD88: 80450AE0 (__float_nan)
//	8011DDA0: 80267674 (cM_atan2s__Fff)
//	8011DDB0: 80267150 (atan2sY_XZ__4cXyzCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procZoraMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procZoraMove__9daAlink_cFv.s"
}
#pragma pop

/* 8011DDD4-8011DED8 0104+00 s=1 e=0 z=0  None .text      procLookAroundTurnInit__9daAlink_cFv */
//	8011DDEC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011DE00: 80452CC0 (lit_6108)
//	8011DE1C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011DE34: 80452CB8 (lit_6040)
//	8011DE3C: 80452CC4 (lit_6109)
//	8011DE40: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	8011DE58: 80452CB8 (lit_6040)
//	8011DE60: 80452CC4 (lit_6109)
//	8011DE64: 800AD00C (setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf)
//	8011DE7C: 800AF61C (setFaceBtp__9daAlink_cFUsiUs)
//	8011DE94: 800AF7D0 (setFaceBtk__9daAlink_cFUsiUs)
//	8011DEAC: 800AF4B0 (setFaceBck__9daAlink_cFUsiUs)
//	8011DEBC: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookAroundTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookAroundTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011DED8-8011DF68 0090+00 s=1 e=0 z=0  None .text      procLookAroundTurn__9daAlink_cFv */
//	8011DEF8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011DF04: 804061C0 (g_dComIfG_gameInfo)
//	8011DF08: 804061C0 (g_dComIfG_gameInfo)
//	8011DF14: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011DF20: 80452D54 (lit_8248)
//	8011DF24: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookAroundTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookAroundTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8011DF68-8011E060 00F8+00 s=1 e=0 z=0  None .text      procTradeItemOutInit__9daAlink_cFv */
//	8011DF80: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011DF9C: 80118308 (setTalkStartBack__9daAlink_cFP4cXyz)
//	8011DFB4: 801186D4 (setTradeItemAnime__9daAlink_cFv)
//	8011DFC0: 80452CC0 (lit_6108)
//	8011DFDC: 804061C0 (g_dComIfG_gameInfo)
//	8011DFE0: 804061C0 (g_dComIfG_gameInfo)
//	8011E010: 8011E3D8 (checkLetterItem__9daAlink_cFi)
//	8011E02C: 8011E3D8 (checkLetterItem__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procTradeItemOutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procTradeItemOutInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011E060-8011E3D8 0378+00 s=1 e=0 z=0  None .text      procTradeItemOut__9daAlink_cFv */
//	8011E078: 8011856C (setShapeAngleToTalkActor__9daAlink_cFv)
//	8011E094: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8011E0E0: 80270E24 (cLib_distanceAngleS__Fss)
//	8011E0FC: 80452CC0 (lit_6108)
//	8011E110: 80347138 (PSVECSquareMag)
//	8011E114: 80452CC0 (lit_6108)
//	8011E124: 80452CE8 (lit_6846)
//	8011E12C: 80452CF0 (lit_6847)
//	8011E174: 80452CF8 (lit_6848)
//	8011E180: 80450AE0 (__float_nan)
//	8011E184: 80450AE0 (__float_nan)
//	8011E1F0: 80450AE0 (__float_nan)
//	8011E1F4: 80450AE0 (__float_nan)
//	8011E1F8: 80452DE4 (lit_12328)
//	8011E208: 80267128 (atan2sX_Z__4cXyzCFv)
//	8011E210: 80270E24 (cLib_distanceAngleS__Fss)
//	8011E240: 801186D4 (setTradeItemAnime__9daAlink_cFv)
//	8011E24C: 80452CC0 (lit_6108)
//	8011E27C: 801186D4 (setTradeItemAnime__9daAlink_cFv)
//	8011E288: 80452CC0 (lit_6108)
//	8011E2B4: 804061C0 (g_dComIfG_gameInfo)
//	8011E2B8: 804061C0 (g_dComIfG_gameInfo)
//	8011E2C4: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011E2D0: 8001BB44 (fopAcM_getItemEventPartner__FPC10fopAc_ac_c)
//	8011E2EC: 80022138 (fpcM_IsCreating__FUi)
//	8011E314: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8011E31C: 80037A74 (show__12daItemBase_cFv)
//	8011E368: 804061C0 (g_dComIfG_gameInfo)
//	8011E36C: 804061C0 (g_dComIfG_gameInfo)
//	8011E378: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011E384: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011E398: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011E3B8: 80118778 (setTradeItemOutHand__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procTradeItemOut() {
    nofralloc
#include "asm/d/a/d_a_alink/procTradeItemOut__9daAlink_cFv.s"
}
#pragma pop

/* 8011E3D8-8011E448 0070+00 s=2 e=0 z=0  None .text      checkLetterItem__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLetterItem(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkLetterItem__9daAlink_cFi.s"
}
#pragma pop

/* 8011E448-8011E57C 0134+00 s=1 e=0 z=0  None .text      procNotUseItemInit__9daAlink_cFi */
//	8011E458: 803621DC (_savegpr_29)
//	8011E464: 804061C0 (g_dComIfG_gameInfo)
//	8011E468: 804061C0 (g_dComIfG_gameInfo)
//	8011E480: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	8011E4A4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011E4B0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011E4B4: 80452CC0 (lit_6108)
//	8011E4F0: 80181640 (dCam_getBody__Fv)
//	8011E4FC: 80392094 (d_a_d_a_alink__stringBase0)
//	8011E500: 80392094 (d_a_d_a_alink__stringBase0)
//	8011E518: 80088A7C (StartEventCamera__9dCamera_cFiie)
//	8011E520: 800BF854 (keepItemData__9daAlink_cFv)
//	8011E524: 804061C0 (g_dComIfG_gameInfo)
//	8011E528: 804061C0 (g_dComIfG_gameInfo)
//	8011E540: 8011E3D8 (checkLetterItem__9daAlink_cFi)
//	8011E568: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procNotUseItemInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procNotUseItemInit__9daAlink_cFi.s"
}
#pragma pop

/* 8011E57C-8011E6E0 0164+00 s=1 e=0 z=0  None .text      procNotUseItem__9daAlink_cFv */
//	8011E5C0: 8001BBE8 (fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz)
//	8011E5C8: 804061C0 (g_dComIfG_gameInfo)
//	8011E5CC: 804061C0 (g_dComIfG_gameInfo)
//	8011E5D4: 800436EC (setPtI_Id__14dEvt_control_cFUi)
//	8011E5F0: 8001BB44 (fopAcM_getItemEventPartner__FPC10fopAc_ac_c)
//	8011E60C: 80022138 (fpcM_IsCreating__FUi)
//	8011E620: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8011E628: 80037A74 (show__12daItemBase_cFv)
//	8011E664: 801187B4 (checkEndMessage__9daAlink_cFUl)
//	8011E674: 800BF884 (returnKeepItemData__9daAlink_cFv)
//	8011E67C: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8011E68C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011E6A0: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011E6C0: 80118778 (setTradeItemOutHand__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procNotUseItem() {
    nofralloc
#include "asm/d/a/d_a_alink/procNotUseItem__9daAlink_cFv.s"
}
#pragma pop

/* 8011E6E0-8011E748 0068+00 s=1 e=0 z=0  None .text      procSwordReadyInit__9daAlink_cFv */
//	8011E6F8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011E70C: 80452CC0 (lit_6108)
//	8011E724: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011E748-8011E83C 00F4+00 s=1 e=0 z=0  None .text      procSwordReady__9daAlink_cFv */
//	8011E768: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011E780: 8038D768 (m__26daAlinkHIO_noActAtnMove_c0)
//	8011E784: 8038D768 (m__26daAlinkHIO_noActAtnMove_c0)
//	8011E790: 80452CC0 (lit_6108)
//	8011E7A4: 80452CC4 (lit_6109)
//	8011E7A8: 800ACA14
//(setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif) 	8011E7B4:
// 804061C0 (g_dComIfG_gameInfo) 	8011E7B8: 804061C0 (g_dComIfG_gameInfo) 	8011E7C4: 8004817C
//(cutEnd__16dEvent_manager_cFi) 	8011E7D8: 804061C0 (g_dComIfG_gameInfo) 	8011E7DC: 804061C0
//(g_dComIfG_gameInfo) 	8011E7E8: 8004817C (cutEnd__16dEvent_manager_cFi) 	8011E7F4: 80452D30
//(lit_7625) 	8011E7F8: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordReady__9daAlink_cFv.s"
}
#pragma pop

/* 8011E83C-8011E8E0 00A4+00 s=2 e=0 z=0  None .text      setSwordPushAnime__9daAlink_cFv */
//	8011E86C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordPushAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordPushAnime__9daAlink_cFv.s"
}
#pragma pop

/* 8011E8E0-8011E960 0080+00 s=1 e=0 z=0  None .text      procSwordPushInit__9daAlink_cFv */
//	8011E8F8: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011E90C: 80452CC0 (lit_6108)
//	8011E928: 8011E83C (setSwordPushAnime__9daAlink_cFv)
//	8011E92C: 80425544 (l_halfAtnWaitBaseAnime)
//	8011E930: 80425544 (l_halfAtnWaitBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordPushInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordPushInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011E960-8011E9F8 0098+00 s=1 e=0 z=0  None .text      procSwordPush__9daAlink_cFv */
//	8011E988: 8011E83C (setSwordPushAnime__9daAlink_cFv)
//	8011E9A4: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
//	8011E9C0: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
//	8011E9DC: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordPush() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordPush__9daAlink_cFv.s"
}
#pragma pop

/* 8011E9F8-8011EA78 0080+00 s=1 e=0 z=0  None .text      procGanonFinishInit__9daAlink_cFv */
//	8011EA10: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011EA2C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011EA30: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGanonFinishInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGanonFinishInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011EA78-8011EAE8 0070+00 s=1 e=0 z=0  None .text      procGanonFinish__9daAlink_cFv */
//	8011EAB4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011EAC8: 80452CBC (lit_6041)
//	8011EACC: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGanonFinish() {
    nofralloc
#include "asm/d/a/d_a_alink/procGanonFinish__9daAlink_cFv.s"
}
#pragma pop

/* 8011EAE8-8011EB8C 00A4+00 s=1 e=0 z=0  None .text      procCutFastReadyInit__9daAlink_cFv */
//	8011EB00: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011EB14: 80452CC0 (lit_6108)
//	8011EB2C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011EB30: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011EB38: 80452CC4 (lit_6109)
//	8011EB3C: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8011EB4C: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	8011EB50: 8038DE8C (m__17daAlinkHIO_cut_c0)
//	8011EB58: 80452D1C (lit_7448)
//	8011EB64: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFastReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFastReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011EB8C-8011EBDC 0050+00 s=1 e=0 z=0  None .text      procCutFastReady__9daAlink_cFv */
//	8011EBA4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011EBB0: 804061C0 (g_dComIfG_gameInfo)
//	8011EBB4: 804061C0 (g_dComIfG_gameInfo)
//	8011EBC0: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFastReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFastReady__9daAlink_cFv.s"
}
#pragma pop

/* 8011EBDC-8011EC60 0084+00 s=1 e=0 z=0  None .text      procMasterSwordStickInit__9daAlink_cFv */
//	8011EBF4: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011EC10: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011EC30: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMasterSwordStickInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procMasterSwordStickInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011EC60-8011ED18 00B8+00 s=1 e=0 z=0  None .text      procMasterSwordStick__9daAlink_cFv */
//	8011EC88: 804061C0 (g_dComIfG_gameInfo)
//	8011EC8C: 804061C0 (g_dComIfG_gameInfo)
//	8011EC98: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011ECA4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011ECC0: 80452CBC (lit_6041)
//	8011ECC4: 800ACFB0 (setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf)
//	8011ECC8: 804061C0 (g_dComIfG_gameInfo)
//	8011ECCC: 804061C0 (g_dComIfG_gameInfo)
//	8011ECD8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011ECE4: 80452E28 (lit_14621)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMasterSwordStick() {
    nofralloc
#include "asm/d/a/d_a_alink/procMasterSwordStick__9daAlink_cFv.s"
}
#pragma pop

/* 8011ED18-8011ED8C 0074+00 s=1 e=0 z=0  None .text      procMasterSwordPullInit__9daAlink_cFv */
//	8011ED30: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011ED4C: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMasterSwordPullInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procMasterSwordPullInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011ED8C-8011EE40 00B4+00 s=1 e=0 z=0  None .text      procMasterSwordPull__9daAlink_cFv */
//	8011EDAC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011EDB8: 804061C0 (g_dComIfG_gameInfo)
//	8011EDBC: 804061C0 (g_dComIfG_gameInfo)
//	8011EDC8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8011EDD4: 80452D80 (lit_8780)
//	8011EDF0: 80452D34 (lit_7710)
//	8011EE0C: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMasterSwordPull() {
    nofralloc
#include "asm/d/a/d_a_alink/procMasterSwordPull__9daAlink_cFv.s"
}
#pragma pop

/* 8011EE40-8011EE94 0054+00 s=5 e=0 z=0  None .text      checkLv7DungeonShop__9daAlink_cFv */
//	8011EE54: 80392094 (d_a_d_a_alink__stringBase0)
//	8011EE58: 80392094 (d_a_d_a_alink__stringBase0)
//	8011EE60: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011EE6C: 80450D64 (struct_80450D64)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLv7DungeonShop() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv7DungeonShop__9daAlink_cFv.s"
}
#pragma pop

/* 8011EE94-8011EFB8 0124+00 s=1 e=0 z=0  None .text      procDungeonWarpReadyInit__9daAlink_cFv */
//	8011EEAC: 804061C0 (g_dComIfG_gameInfo)
//	8011EEB0: 804061C0 (g_dComIfG_gameInfo)
//	8011EEC8: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	8011EEE4: 800C0208 (checkItemSetButton__9daAlink_cFi)
//	8011EF10: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	8011EF3C: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	8011EF68: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011EF74: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011EF78: 80452CC0 (lit_6108)
//	8011EF98: 800BF854 (keepItemData__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarpReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarpReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011EFB8-8011F084 00CC+00 s=1 e=0 z=0  None .text      procDungeonWarpReady__9daAlink_cFv */
//	8011EFE4: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8011EFE8: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8011EFF0: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8011F004: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8011F030: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8011F044: 800ACF80 (setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM)
//	8011F064: 80118778 (setTradeItemOutHand__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarpReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarpReady__9daAlink_cFv.s"
}
#pragma pop

/* 8011F084-8011F0F4 0070+00 s=1 e=0 z=0  None .text      procDungeonWarpInit__9daAlink_cFv */
//	8011F09C: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011F0C0: 80452CC0 (lit_6108)
//	8011F0CC: 800BB770 (setSpecialGravity__9daAlink_cFffi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarpInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011F0F4-8011F360 026C+00 s=1 e=0 z=0  None .text      procDungeonWarp__9daAlink_cFv */
//	8011F130: 80452CB8 (lit_6040)
//	8011F144: 80439A20 (sincosTable___5JMath)
//	8011F148: 80439A20 (sincosTable___5JMath)
//	8011F154: 8045302C (lit_34190)
//	8011F170: 80452D8C (lit_8783)
//	8011F178: 80452D20 (lit_7449)
//	8011F17C: 80452CB8 (lit_6040)
//	8011F1CC: 804061C0 (g_dComIfG_gameInfo)
//	8011F1D0: 804061C0 (g_dComIfG_gameInfo)
//	8011F210: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8011F220: 80452CC0 (lit_6108)
//	8011F224: 80452C98 (lit_5943)
//	8011F228: 80452DFC (lit_13701)
//	8011F22C: 80452E78 (lit_15460)
//	8011F230: 8026F97C (cLib_addCalc__FPfffff)
//	8011F238: 80452DD8 (lit_11470)
//	8011F23C: 80452C98 (lit_5943)
//	8011F244: 80452DA0 (lit_9054)
//	8011F248: 8026F97C (cLib_addCalc__FPfffff)
//	8011F250: 80452D88 (lit_8782)
//	8011F270: 80097EE0 (checkItemGet__FUci)
//	8011F27C: 804061C0 (g_dComIfG_gameInfo)
//	8011F280: 804061C0 (g_dComIfG_gameInfo)
//	8011F29C: 80452CC0 (lit_6108)
//	8011F2B0: 80027170 (dStage_changeScene__FifUlScsi)
//	8011F2B4: 80430188 (g_meter2_info)
//	8011F2B8: 80430188 (g_meter2_info)
//	8011F2BC: 8021CA70 (warpOutProc__13dMeter2Info_cFv)
//	8011F2C8: 8011F7D8 (dungeonReturnWarp__9daAlink_cFv)
//	8011F2CC: 80430188 (g_meter2_info)
//	8011F2D0: 80430188 (g_meter2_info)
//	8011F2D4: 8021CA04 (warpInProc__13dMeter2Info_cFv)
//	8011F2E4: 80452D3C (lit_7808)
//	8011F2F0: 80452D50 (lit_8247)
//	8011F2F4: 80452CB8 (lit_6040)
//	8011F318: 80452E08 (lit_14064)
//	8011F31C: 80452D88 (lit_8782)
//	8011F320: 80270740 (cLib_chaseF__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarp() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarp__9daAlink_cFv.s"
}
#pragma pop

/* 8011F360-8011F460 0100+00 s=2 e=0 z=0  None .text procDungeonWarpSceneStartInit__9daAlink_cFv
 */
//	8011F378: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011F380: 80452CC0 (lit_6108)
//	8011F38C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8011F398: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011F39C: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011F3A4: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011F3A8: 8038D664 (m__19daAlinkHIO_basic_c0)
//	8011F3B0: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8011F3B4: 800C0310 (checkDungeon__9daAlink_cFv)
//	8011F3C0: 8011EE40 (checkLv7DungeonShop__9daAlink_cFv)
//	8011F3E0: 80115C50 (createNpcTks__9daAlink_cFP4cXyziUl)
//	8011F400: 80452F50 (lit_23595)
//	8011F418: 80452CC0 (lit_6108)
//	8011F420: 80452D2C (lit_7624)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarpSceneStartInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarpSceneStartInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011F460-8011F5D4 0174+00 s=1 e=0 z=0  None .text      procDungeonWarpSceneStart__9daAlink_cFv */
//	8011F4A4: 8001E558 (fopOvlpM_IsPeek__Fv)
//	8011F4BC: 80452CB8 (lit_6040)
//	8011F4C0: 80452CA4 (lit_6021)
//	8011F4C4: 80270740 (cLib_chaseF__FPfff)
//	8011F4D8: 80452CB8 (lit_6040)
//	8011F4DC: 80452E00 (lit_13702)
//	8011F4E0: 80270740 (cLib_chaseF__FPfff)
//	8011F50C: 80452D3C (lit_7808)
//	8011F53C: 800BA0D0 (checkNextAction__9daAlink_cFi)
//	8011F548: 80452CB8 (lit_6040)
//	8011F55C: 80439A20 (sincosTable___5JMath)
//	8011F560: 80439A20 (sincosTable___5JMath)
//	8011F56C: 8045302C (lit_34190)
//	8011F588: 80452D8C (lit_8783)
//	8011F590: 80452D20 (lit_7449)
//	8011F594: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarpSceneStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarpSceneStart__9daAlink_cFv.s"
}
#pragma pop

/* 8011F5D4-8011F658 0084+00 s=2 e=0 z=0  None .text      daAlink_searchPortal__FP10fopAc_ac_cPv */
//	8011F600: 80452CC0 (lit_6108)
//	8011F628: 8034739C (PSVECSquareDistance)
//	8011F62C: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchPortal(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchPortal__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 8011F658-8011F7D8 0180+00 s=1 e=0 z=0  None .text      checkAcceptWarp__9daAlink_cFv */
//	8011F66C: 803A37C0 (__vt__8cM3dGPla)
//	8011F670: 803A37C0 (__vt__8cM3dGPla)
//	8011F6A8: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	8011F6B4: 800E1408 (checkForestOldCentury__9daAlink_cFv)
//	8011F6CC: 80451018 (m_midnaActor__9daPy_py_c)
//	8011F6F4: 800C0284 (checkField__9daAlink_cFv)
//	8011F700: 800C0358 (checkCastleTown__9daAlink_cFv)
//	8011F70C: 80392094 (d_a_d_a_alink__stringBase0)
//	8011F710: 80392094 (d_a_d_a_alink__stringBase0)
//	8011F718: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011F73C: 804061C0 (g_dComIfG_gameInfo)
//	8011F740: 804061C0 (g_dComIfG_gameInfo)
//	8011F75C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	8011F768: 80451018 (m_midnaActor__9daPy_py_c)
//	8011F770: 80362084 (__ptmf_scall)
//	8011F78C: 804061C0 (g_dComIfG_gameInfo)
//	8011F790: 804061C0 (g_dComIfG_gameInfo)
//	8011F7A0: 803A37C0 (__vt__8cM3dGPla)
//	8011F7A4: 803A37C0 (__vt__8cM3dGPla)
//	8011F7B4: 803A37C0 (__vt__8cM3dGPla)
//	8011F7B8: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAcceptWarp() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAcceptWarp__9daAlink_cFv.s"
}
#pragma pop

/* 8011F7D8-8011F8B8 00E0+00 s=2 e=0 z=0  None .text      dungeonReturnWarp__9daAlink_cFv */
//	8011F7E8: 803621DC (_savegpr_29)
//	8011F7EC: 8002F2BC (dComIfGs_getWarpPlayerPos__Fv)
//	8011F808: 8002F2CC (dComIfGs_getWarpPlayerAngleY__Fv)
//	8011F810: 8002F2DC (dComIfGs_getWarpRoomNo__Fv)
//	8011F818: 8002F2AC (dComIfGs_getWarpStageName__Fv)
//	8011F824: 80368B2C (strcpy)
//	8011F828: 804061C0 (g_dComIfG_gameInfo)
//	8011F82C: 804061C0 (g_dComIfG_gameInfo)
//	8011F844: 80034F80 (setRoom__13dSv_restart_cFRC4cXyzsSc)
//	8011F86C: 80452CC0 (lit_6108)
//	8011F880: 8002D2FC (dComIfGp_setNextStage__FPCcsScScfUliScsii)
//	8011F898: 8015EA0C (setParamData__9daPy_py_cFiiii)
//	8011F8A4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::dungeonReturnWarp() {
    nofralloc
#include "asm/d/a/d_a_alink/dungeonReturnWarp__9daAlink_cFv.s"
}
#pragma pop

/* 8011F8B8-8011F9EC 0134+00 s=1 e=0 z=0  None .text      skipPortalObjWarp__9daAlink_cFv */
//	8011F8F4: 8002FAC0 (dComIfGp_TargetWarpPt_get__Fv)
//	8011F904: 8002FAE8 (dComIfGp_TransportWarp_check__Fv)
//	8011F914: 80452CC0 (lit_6108)
//	8011F92C: 80027170 (dStage_changeScene__FifUlScsi)
//	8011F934: 80430188 (g_meter2_info)
//	8011F938: 80430188 (g_meter2_info)
//	8011F94C: 8015EA0C (setParamData__9daPy_py_cFiiii)
//	8011F954: 80430188 (g_meter2_info)
//	8011F958: 80430188 (g_meter2_info)
//	8011F960: 804061C0 (g_dComIfG_gameInfo)
//	8011F964: 804061C0 (g_dComIfG_gameInfo)
//	8011F978: 80034FA4 (set__17dSv_turnRestart_cFRC4cXyzsScUl)
//	8011F98C: 80430188 (g_meter2_info)
//	8011F990: 80430188 (g_meter2_info)
//	8011F9A8: 80452CC0 (lit_6108)
//	8011F9BC: 8002D2FC (dComIfGp_setNextStage__FPCcsScScfUliScsii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::skipPortalObjWarp() {
    nofralloc
#include "asm/d/a/d_a_alink/skipPortalObjWarp__9daAlink_cFv.s"
}
#pragma pop

/* 8011F9EC-8011FBC0 01D4+00 s=1 e=0 z=0  None .text      checkWarpStart__9daAlink_cFv */
//	8011F9FC: 803621DC (_savegpr_29)
//	8011FA04: 803AF990 (cNullVec__6Z2Calc)
//	8011FA08: 803AF990 (cNullVec__6Z2Calc)
//	8011FA0C: 80430188 (g_meter2_info)
//	8011FA10: 80430188 (g_meter2_info)
//	8011FA28: 804061C0 (g_dComIfG_gameInfo)
//	8011FA2C: 804061C0 (g_dComIfG_gameInfo)
//	8011FA44: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	8011FA74: 8002FAC0 (dComIfGp_TargetWarpPt_get__Fv)
//	8011FA84: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FA88: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FA9C: 8002FAC0 (dComIfGp_TargetWarpPt_get__Fv)
//	8011FAAC: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FAB0: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FAC4: 8002FAC0 (dComIfGp_TargetWarpPt_get__Fv)
//	8011FAD4: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FAD8: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FAEC: 8002FAC0 (dComIfGp_TargetWarpPt_get__Fv)
//	8011FAFC: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FB00: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FB20: 8002FA98 (dComIfGp_TargetWarpPt_set__FUc)
//	8011FB3C: 8001B3CC (fopAcM_orderOtherEvent__FP10fopAc_ac_cPCcUsUsUs)
//	8011FB58: 804061C0 (g_dComIfG_gameInfo)
//	8011FB5C: 804061C0 (g_dComIfG_gameInfo)
//	8011FB78: 80452CC0 (lit_6108)
//	8011FB8C: 80027170 (dStage_changeScene__FifUlScsi)
//	8011FB98: 8011F7D8 (dungeonReturnWarp__9daAlink_cFv)
//	8011FB9C: 80430188 (g_meter2_info)
//	8011FBA0: 80430188 (g_meter2_info)
//	8011FBA4: 8021C9DC (resetWarpStatus__13dMeter2Info_cFv)
//	8011FBAC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWarpStart() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWarpStart__9daAlink_cFv.s"
}
#pragma pop

/* 8011FBC0-8011FD4C 018C+00 s=3 e=0 z=0  None .text      warpModelTexScroll__9daAlink_cFv */
//	8011FBDC: 80452DEC (lit_13119)
//	8011FBEC: 80452CB8 (lit_6040)
//	8011FC0C: 80453084 (lit_39330)
//	8011FC10: 80270740 (cLib_chaseF__FPfff)
//	8011FC18: 80452C98 (lit_5943)
//	8011FC24: 80452CC0 (lit_6108)
//	8011FC34: 80452CB8 (lit_6040)
//	8011FC5C: 8003AD08 (setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff)
//	8011FC74: 8003AD08 (setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff)
//	8011FC8C: 8003AD08 (setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff)
//	8011FCA4: 8003AD08 (setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff)
//	8011FCC8: 8003AD08 (setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff)
//	8011FCE4: 8003AD08 (setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff)
//	8011FCFC: 8003AD08 (setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff)
//	8011FD14: 8003AD08 (setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff)
//	8011FD2C: 8003AD08 (setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::warpModelTexScroll() {
    nofralloc
#include "asm/d/a/d_a_alink/warpModelTexScroll__9daAlink_cFv.s"
}
#pragma pop

/* 8011FD4C-80120124 03D8+00 s=2 e=0 z=0  None .text      procCoWarpInit__9daAlink_cFii */
//	8011FD5C: 803621D4 (_savegpr_27)
//	8011FD70: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8011FD8C: 800C1E0C (changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE)
//	8011FD90: 80452CC0 (lit_6108)
//	8011FDA4: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	8011FDBC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011FDC0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8011FDC8: 80452CC4 (lit_6109)
//	8011FDCC: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8011FDDC: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011FDE0: 8038D6BC (m__18daAlinkHIO_move_c0)
//	8011FDE8: 80452CC4 (lit_6109)
//	8011FDEC: 800ACFE0 (setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff)
//	8011FDFC: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FE00: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FE08: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011FE20: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FE24: 80392094 (d_a_d_a_alink__stringBase0)
//	8011FE2C: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8011FE4C: 80452CC0 (lit_6108)
//	8011FE70: 80452CB8 (lit_6040)
//	8011FE84: 80452D4C (lit_8131)
//	8011FE9C: 80453058 (lit_37152)
//	8011FEB8: 80451018 (m_midnaActor__9daPy_py_c)
//	8011FF08: 80452F88 (lit_24680)
//	8011FF38: 800C02C8 (checkBossRoom__9daAlink_cFv)
//	8011FF54: 804061C0 (g_dComIfG_gameInfo)
//	8011FF58: 804061C0 (g_dComIfG_gameInfo)
//	8011FF60: 80368B2C (strcpy)
//	8011FFB8: 80097EE0 (checkItemGet__FUci)
//	8011FFCC: 80097EE0 (checkItemGet__FUci)
//	8011FFD8: 8002F2AC (dComIfGs_getWarpStageName__Fv)
//	8011FFE4: 80368994 (strcmp)
//	8011FFF0: 804061C0 (g_dComIfG_gameInfo)
//	8011FFF4: 804061C0 (g_dComIfG_gameInfo)
//	80120004: 80032FB8 (setItem__17dSv_player_item_cFiUc)
//	80120008: 804061C0 (g_dComIfG_gameInfo)
//	8012000C: 804061C0 (g_dComIfG_gameInfo)
//	80120020: 80452CB8 (lit_6040)
//	8012002C: 80452D4C (lit_8131)
//	80120048: 80453058 (lit_37152)
//	80120054: 80452CBC (lit_6041)
//	80120060: 80452F88 (lit_24680)
//	80120084: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80120088: 80452CC0 (lit_6108)
//	801200A8: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	801200B4: 8011F5D4 (daAlink_searchPortal__FP10fopAc_ac_cPv)
//	801200B8: 8011F5D4 (daAlink_searchPortal__FP10fopAc_ac_cPv)
//	801200C0: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	801200D8: 80452CC0 (lit_6108)
//	80120104: 8011FBC0 (warpModelTexScroll__9daAlink_cFv)
//	80120110: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoWarpInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoWarpInit__9daAlink_cFii.s"
}
#pragma pop

/* 80120124-80120440 031C+00 s=1 e=0 z=0  None .text      procCoWarp__9daAlink_cFv */
//	80120134: 803621D4 (_savegpr_27)
//	8012013C: 8038D658 (lit_3757)
//	80120140: 8038D658 (lit_3757)
//	8012018C: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	801201F0: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80120234: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80120248: 80452CC0 (lit_6108)
//	80120270: 80452CB8 (lit_6040)
//	801202A0: 8011FBC0 (warpModelTexScroll__9daAlink_cFv)
//	801202EC: 804061C0 (g_dComIfG_gameInfo)
//	801202F0: 804061C0 (g_dComIfG_gameInfo)
//	80120308: 80452CC0 (lit_6108)
//	8012031C: 8002D2FC (dComIfGp_setNextStage__FPCcsScScfUliScsii)
//	8012034C: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	80120358: 80120534 (commonFallInit__9daAlink_cFi)
//	80120360: 804061C0 (g_dComIfG_gameInfo)
//	80120364: 804061C0 (g_dComIfG_gameInfo)
//	80120370: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8012037C: 800B58EC (checkWaitAction__9daAlink_cFv)
//	801203A8: 804061C0 (g_dComIfG_gameInfo)
//	801203AC: 804061C0 (g_dComIfG_gameInfo)
//	801203B8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	801203E0: 80452CE0 (lit_6845)
//	801203E8: 80452D4C (lit_8131)
//	80120420: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	8012042C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoWarp() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoWarp__9daAlink_cFv.s"
}
#pragma pop

/* 80120440-80120474 0034+00 s=1 e=0 z=0  None .text      commonWaitTurnInit__9daAlink_cFv */
//	80120458: 8012DD08 (procWolfWaitTurnInit__9daAlink_cFv)
//	80120460: 800C3A94 (procWaitTurnInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonWaitTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/commonWaitTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 80120474-80120500 008C+00 s=2 e=0 z=0  None .text      commonGrabPutInit__9daAlink_cFv */
//	801204B4: 804061C0 (g_dComIfG_gameInfo)
//	801204B8: 804061C0 (g_dComIfG_gameInfo)
//	801204C4: 8004817C (cutEnd__16dEvent_manager_cFi)
//	801204E0: 8013D588 (procWolfGrabPutInit__9daAlink_cFv)
//	801204EC: 800E672C (procGrabPutInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonGrabPutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/commonGrabPutInit__9daAlink_cFv.s"
}
#pragma pop

/* 80120500-80120534 0034+00 s=3 e=0 z=0  None .text      commonLargeDamageUpInit__9daAlink_cFiiss
 */
//	80120518: 80136624 (procWolfLargeDamageUpInit__9daAlink_cFiiss)
//	80120520: 800DA180 (procLargeDamageUpInit__9daAlink_cFiiss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonLargeDamageUpInit(int param_0, int param_1, s16 param_2, s16 param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/commonLargeDamageUpInit__9daAlink_cFiiss.s"
}
#pragma pop

/* 80120534-80120580 004C+00 s=4 e=0 z=0  None .text      commonFallInit__9daAlink_cFi */
//	8012054C: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80120550: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80120558: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
//	80120560: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	80120564: 8038E068 (m__22daAlinkHIO_autoJump_c0)
//	8012056C: 800C6A48 (procFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonFallInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonFallInit__9daAlink_cFi.s"
}
#pragma pop

/* 80120580-80120634 00B4+00 s=21 e=0 z=0  None .text setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz
 */
//	801205A8: 804061C0 (g_dComIfG_gameInfo)
//	801205AC: 804061C0 (g_dComIfG_gameInfo)
//	801205F0: 80452CB8 (lit_6040)
//	801205F4: 8004D4CC
//(set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80120608: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	80120618: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEmitter(u32* param_0, u16 param_1, cXyz const* param_2,
                               csXyz const* param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz.s"
}
#pragma pop

/* 80120634-801206C4 0090+00 s=4 e=0 z=0  None .text
 * setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz */
//	8012066C: 804061C0 (g_dComIfG_gameInfo)
//	80120670: 804061C0 (g_dComIfG_gameInfo)
//	80120684: 8004D6A4
//(setPoly__13dPa_control_cFUlUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	80120698: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	801206A8: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEmitterPolyColor(u32* param_0, u16 param_1, cBgS_PolyInfo& param_2,
                                        cXyz const* param_3, csXyz const* param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz.s"
}
#pragma pop

/* 801206C4-80120778 00B4+00 s=2 e=0 z=0  None .text
 * setEmitterColor__9daAlink_cFPUlUsPC4cXyzPC5csXyz             */
//	801206EC: 804061C0 (g_dComIfG_gameInfo)
//	801206F0: 804061C0 (g_dComIfG_gameInfo)
//	80120734: 80452CC0 (lit_6108)
//	80120738: 8004D4CC
//(set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8012074C: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	8012075C: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEmitterColor(u32* param_0, u16 param_1, cXyz const* param_2,
                                    csXyz const* param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/setEmitterColor__9daAlink_cFPUlUsPC4cXyzPC5csXyz.s"
}
#pragma pop

/* 80120778-801207BC 0044+00 s=9 e=0 z=0  None .text      stopDrawParticle__9daAlink_cFUl */
//	80120784: 804061C0 (g_dComIfG_gameInfo)
//	80120788: 804061C0 (g_dComIfG_gameInfo)
//	80120794: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::stopDrawParticle(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/stopDrawParticle__9daAlink_cFUl.s"
}
#pragma pop

/* 801207BC-80120880 00C4+00 s=1 e=0 z=0  None .text      setEffectFrontRollParam__9daAlink_cFv */
//	801207D4: 803621C8 (_savegpr_24)
//	801207E4: 80452D14 (lit_7307)
//	801207E8: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	801207EC: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	801207F0: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	801207F4: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	80120810: 80362084 (__ptmf_scall)
//	80120830: 80362084 (__ptmf_scall)
//	8012086C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffectFrontRollParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffectFrontRollParam__9daAlink_cFv.s"
}
#pragma pop

/* 80120880-80120B00 0280+00 s=1 e=0 z=0  None .text      setEffectSlipParam__9daAlink_cFv */
//	80120898: 803621C4 (_savegpr_23)
//	801208A8: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	801208AC: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	801208B0: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	801208B4: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	801208D0: 80362084 (__ptmf_scall)
//	801208F0: 80362084 (__ptmf_scall)
//	8012090C: 80452C98 (lit_5943)
//	80120914: 80452CC0 (lit_6108)
//	80120920: 80452DA0 (lit_9054)
//	80120928: 80391BAC (smokeParticleScale_39643)
//	8012092C: 80391BAC (smokeParticleScale_39643)
//	8012096C: 80362084 (__ptmf_scall)
//	8012097C: 80452C98 (lit_5943)
//	80120984: 80452D1C (lit_7448)
//	801209AC: 80362084 (__ptmf_scall)
//	801209C8: 80391BB8 (wolfWaterCenterScale)
//	801209CC: 80391BB8 (wolfWaterCenterScale)
//	80120A10: 80439A20 (sincosTable___5JMath)
//	80120A14: 80439A20 (sincosTable___5JMath)
//	80120A20: 80452DBC (lit_10042)
//	80120A68: 80362084 (__ptmf_scall)
//	80120A78: 80452CB8 (lit_6040)
//	80120A90: 80452D14 (lit_7307)
//	80120AA4: 80362084 (__ptmf_scall)
//	80120AEC: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffectSlipParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffectSlipParam__9daAlink_cFv.s"
}
#pragma pop

/* 80120B00-80120DB0 02B0+00 s=1 e=0 z=0  None .text      setEffectRunParam__9daAlink_cFv */
//	80120B20: 803621C0 (_savegpr_22)
//	80120B28: 8038D658 (lit_3757)
//	80120B2C: 8038D658 (lit_3757)
//	80120B38: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	80120B3C: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	80120B40: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	80120B44: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	80120B60: 80362084 (__ptmf_scall)
//	80120B80: 80362084 (__ptmf_scall)
//	80120B90: 80452CC4 (lit_6109)
//	80120BB4: 80362084 (__ptmf_scall)
//	80120BC4: 80452D24 (lit_7450)
//	80120BF8: 80362084 (__ptmf_scall)
//	80120C54: 80362084 (__ptmf_scall)
//	80120C64: 80452D30 (lit_7625)
//	80120C6C: 80452CB8 (lit_6040)
//	80120CD0: 80362084 (__ptmf_scall)
//	80120D2C: 80362084 (__ptmf_scall)
//	80120D48: 80452D14 (lit_7307)
//	80120D50: 80452D8C (lit_8783)
//	80120D58: 80452DA0 (lit_9054)
//	80120D64: 80452D3C (lit_7808)
//	80120D9C: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffectRunParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffectRunParam__9daAlink_cFv.s"
}
#pragma pop

/* 80120DB0-80121000 0250+00 s=1 e=0 z=0  None .text      setEffectSmallLandParam__9daAlink_cFv */
//	80120DD0: 803621C0 (_savegpr_22)
//	80120DD8: 8038D658 (lit_3757)
//	80120DDC: 8038D658 (lit_3757)
//	80120DE8: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	80120DEC: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	80120DF0: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	80120DF4: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	80120E10: 80362084 (__ptmf_scall)
//	80120E30: 80362084 (__ptmf_scall)
//	80120E80: 80452E64 (lit_14954)
//	80120E90: 80452CC0 (lit_6108)
//	80120ED8: 80362084 (__ptmf_scall)
//	80120F28: 80452D8C (lit_8783)
//	80120F38: 80452CC0 (lit_6108)
//	80120F7C: 80362084 (__ptmf_scall)
//	80120FEC: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffectSmallLandParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffectSmallLandParam__9daAlink_cFv.s"
}
#pragma pop

/* 80121000-80121004 0004+00 s=1 e=0 z=0  None .text      setEffectLandParam__9daAlink_cFv */
void daAlink_c::setEffectLandParam() {
    /* empty function */
}

/* 80121004-801211C0 01BC+00 s=1 e=0 z=0  None .text      setEffectSumouParam__9daAlink_cFv */
//	80121014: 803621C0 (_savegpr_22)
//	8012101C: 8038D658 (lit_3757)
//	80121020: 8038D658 (lit_3757)
//	8012102C: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	80121030: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	80121034: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	80121038: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	80121054: 80362084 (__ptmf_scall)
//	80121074: 80362084 (__ptmf_scall)
//	8012113C: 8004CF90 (getPolyColor__13dPa_control_cFR13cBgS_PolyInfoiP8_GXColorP8_GXColorPUcPf)
//	801211AC: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffectSumouParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffectSumouParam__9daAlink_cFv.s"
}
#pragma pop

/* 801211C0-80121214 0054+00 s=46 e=0 z=0  None .text      setFootEffectProcType__9daAlink_cFi */
//	801211EC: 80051424 (clearFourAllID__8dPaPoF_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFootEffectProcType(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFootEffectProcType__9daAlink_cFi.s"
}
#pragma pop

/* 80121214-80121304 00F0+00 s=1 e=0 z=0  None .text      setWolfFootOn__9daAlink_cFi */
//	80121224: 803621DC (_savegpr_29)
//	80121238: 8038FB5C (l_wolfFootOnFrame)
//	8012123C: 8038FB5C (l_wolfFootOnFrame)
//	80121244: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80121264: 8038FB5C (l_wolfFootOnFrame)
//	80121268: 8038FB5C (l_wolfFootOnFrame)
//	80121274: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80121294: 8038FB5C (l_wolfFootOnFrame)
//	80121298: 8038FB5C (l_wolfFootOnFrame)
//	801212A4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801212C4: 8038FB5C (l_wolfFootOnFrame)
//	801212C8: 8038FB5C (l_wolfFootOnFrame)
//	801212D4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801212F0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfFootOn(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfFootOn__9daAlink_cFi.s"
}
#pragma pop

/* 80121304-80121388 0084+00 s=1 e=0 z=0  None .text      setFootMark__9daAlink_cFP4cXyzUsi */
//	80121338: 80430D0C (BaseX__4cXyz)
//	8012133C: 80430D0C (BaseX__4cXyz)
//	80121344: 80346E4C (PSMTXMultVecSR)
//	8012134C: 80267128 (atan2sX_Z__4cXyzCFv)
//	8012136C: 8001F7B8 (fopKyM_create__FsiP4cXyzP4cXyzPFPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFootMark(cXyz* param_0, u16 param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setFootMark__9daAlink_cFP4cXyzUsi.s"
}
#pragma pop

/* 80121388-801221F0 0E68+00 s=1 e=0 z=0  None .text      setEffect__9daAlink_cFv */
//	801213A0: 803621D4 (_savegpr_27)
//	801213A8: 8038D658 (lit_3757)
//	801213AC: 8038D658 (lit_3757)
//	801213C8: 80122F78 (setCutTurnEffect__9daAlink_cFv)
//	801213D8: 801233A4 (setHorseCutTurnEffect__9daAlink_cFv)
//	801213E8: 801238FC (setWolfRollAttackEffect__9daAlink_cFv)
//	801213F8: 80122BBC (setElecDamageEffect__9daAlink_cFv)
//	8012141C: 804061C0 (g_dComIfG_gameInfo)
//	80121420: 804061C0 (g_dComIfG_gameInfo)
//	8012142C: 80074D0C (GetMagnetCode__4dBgSFRC13cBgS_PolyInfo)
//	80121458: 802C3AEC (setMagnetized__14Z2CreatureLinkFb)
//	8012146C: 8012277C (setMagneBootsEffect__9daAlink_cFv)
//	80121494: 802C3AEC (setMagnetized__14Z2CreatureLinkFb)
//	801214C0: 801221F0 (setSumouEffect__9daAlink_cFv)
//	801214CC: 80122654 (setWaterfallEffect__9daAlink_cFv)
//	801214D4: 801228F4 (setSwordChargeEffect__9daAlink_cFv)
//	801214E8: 80123C8C (setWolfLockAttackEffect__9daAlink_cFv)
//	801214F0: 80123D88 (setWolfJumpAttackEffect__9daAlink_cFv)
//	801214FC: 801236BC (setBootsLightEffect__9daAlink_cFv)
//	80121504: 801237A8 (setLightningSwordEffect__9daAlink_cFv)
//	80121530: 8012A41C (checkWolfBarrierWallHit__9daAlink_cFR13cBgS_PolyInfo)
//	80121564: 80439A20 (sincosTable___5JMath)
//	80121568: 80439A20 (sincosTable___5JMath)
//	80121574: 80452D3C (lit_7808)
//	801215AC: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	801215C0: 8012A41C (checkWolfBarrierWallHit__9daAlink_cFR13cBgS_PolyInfo)
//	801215D4: 80123ED0 (setWolfBarrierHitEffect__9daAlink_cFR11dBgS_LinChk)
//	801215F0: 801241E0 (setWaterDropEffect__9daAlink_cFv)
//	801215F8: 801244E4 (setSwordUpColorEffect__9daAlink_cFv)
//	80121600: 801245EC (setSwordCutSplash__9daAlink_cFv)
//	80121608: 80125524 (setWoodShieldBurnEffect__9daAlink_cFv)
//	80121610: 80125338 (setFreezeEffect__9daAlink_cFv)
//	80121624: 801247A8 (setMetamorphoseEffect__9daAlink_cFv)
//	80121630: 801248A8 (setRunSplash__9daAlink_cFv)
//	80121638: 80124BA4 (setBottleEffect__9daAlink_cFv)
//	80121648: 80452CC0 (lit_6108)
//	80121664: 80452CC0 (lit_6108)
//	80121670: 80452CBC (lit_6041)
//	80121680: 80453088 (lit_40561)
//	80121690: 80452CB8 (lit_6040)
//	801216A8: 804061C0 (g_dComIfG_gameInfo)
//	801216AC: 804061C0 (g_dComIfG_gameInfo)
//	801216B8: 80034340 (getLightDropNum__16dSv_light_drop_cCFUc)
//	801216BC: 804061C0 (g_dComIfG_gameInfo)
//	801216C0: 804061C0 (g_dComIfG_gameInfo)
//	801216D4: 80452CB8 (lit_6040)
//	801216E0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80121714: 80452CBC (lit_6041)
//	80121760: 80439A20 (sincosTable___5JMath)
//	80121764: 80439A20 (sincosTable___5JMath)
//	8012176C: 80452DD4 (lit_11442)
//	801217CC: 80452D8C (lit_8783)
//	801217F0: 80120634 (setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz)
//	80121814: 80452CC0 (lit_6108)
//	80121824: 804061C0 (g_dComIfG_gameInfo)
//	80121828: 804061C0 (g_dComIfG_gameInfo)
//	80121834: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	80121844: 801AB290 (dKy_pol_efftype_get__FPC13cBgS_PolyInfo)
//	80121858: 801AB290 (dKy_pol_efftype_get__FPC13cBgS_PolyInfo)
//	8012186C: 801AB290 (dKy_pol_efftype_get__FPC13cBgS_PolyInfo)
//	80121898: 804061C0 (g_dComIfG_gameInfo)
//	8012189C: 804061C0 (g_dComIfG_gameInfo)
//	801218C0: 8004D6A4
//(setPoly__13dPa_control_cFUlUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	801218D4: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	80121928: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8012192C: 804061C0 (g_dComIfG_gameInfo)
//	80121930: 804061C0 (g_dComIfG_gameInfo)
//	8012193C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80121950: 80452D00 (lit_6895)
//	801219A0: 80452D00 (lit_6895)
//	801219C8: 80120634 (setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz)
//	801219D4: 80450EA4 (mWaterBubblePcallBack__13dPa_control_c)
//	801219DC: 804061C0 (g_dComIfG_gameInfo)
//	801219E0: 804061C0 (g_dComIfG_gameInfo)
//	801219F8: 80439A20 (sincosTable___5JMath)
//	801219FC: 80439A20 (sincosTable___5JMath)
//	80121A08: 80452CE0 (lit_6845)
//	80121A54: 80439A20 (sincosTable___5JMath)
//	80121A58: 80439A20 (sincosTable___5JMath)
//	80121A64: 80452DB4 (lit_10040)
//	80121BC0: 80452D30 (lit_7625)
//	80121CB0: 80452CC0 (lit_6108)
//	80121CD8: 8034739C (PSVECSquareDistance)
//	80121CDC: 80452CC0 (lit_6108)
//	80121CEC: 80452CE8 (lit_6846)
//	80121CF4: 80452CF0 (lit_6847)
//	80121D3C: 80452CF8 (lit_6848)
//	80121D48: 80450AE0 (__float_nan)
//	80121D4C: 80450AE0 (__float_nan)
//	80121DB8: 80450AE0 (__float_nan)
//	80121DBC: 80450AE0 (__float_nan)
//	80121EC8: 800512E8
//(setEffectFour__8dPaPoF_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC5csXyzPC4cXyzScff)
//	80121EE8: 80452CC4 (lit_6109)
//	80121F1C: 80120634 (setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz)
//	80121F34: 80452CB8 (lit_6040)
//	80121F44: 80452CB8 (lit_6040)
//	80121F48: 80452D14 (lit_7307)
//	80121F58: 80452D24 (lit_7450)
//	80121F68: 80452DA8 (lit_9652)
//	80121F6C: 80452EA8 (lit_16570)
//	80121FA4: 80452D00 (lit_6895)
//	80121FA8: 8045308C (lit_40562)
//	80122014: 800512E8
//(setEffectFour__8dPaPoF_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC5csXyzPC4cXyzScff)
//	8012202C: 803B2CEC (m_fEffParamProc__9daAlink_c)
//	80122030: 803B2CEC (m_fEffParamProc__9daAlink_c)
//	80122038: 80362084 (__ptmf_scall)
//	8012209C: 80452CC0 (lit_6108)
//	801220A8: 80452E34 (lit_14624)
//	801220BC: 80452CC0 (lit_6108)
//	801220C8: 80452E34 (lit_14624)
//	80122114: 80121214 (setWolfFootOn__9daAlink_cFi)
//	8012212C: 80121214 (setWolfFootOn__9daAlink_cFi)
//	8012214C: 80121304 (setFootMark__9daAlink_cFP4cXyzUsi)
//	8012216C: 80121304 (setFootMark__9daAlink_cFP4cXyzUsi)
//	8012218C: 80121304 (setFootMark__9daAlink_cFP4cXyzUsi)
//	801221AC: 80121304 (setFootMark__9daAlink_cFP4cXyzUsi)
//	801221CC: 80125128 (setFirePointDamageEffect__9daAlink_cFv)
//	801221DC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801221F0-801225E8 03F8+00 s=1 e=0 z=0  None .text      setSumouEffect__9daAlink_cFv */
//	80122248: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	8012226C: 802807E0 (func_802807E0)
//	80122294: 80452D1C (lit_7448)
//	801222E0: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	801222FC: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122340: 80452DC4 (lit_10194)
//	80122368: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122388: 802807E0 (func_802807E0)
//	801223A4: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	801223C4: 802807E0 (func_802807E0)
//	801223CC: 80452DBC (lit_10042)
//	801223E8: 80452CC4 (lit_6109)
//	80122408: 80452D74 (lit_8502)
//	80122424: 80452DD4 (lit_11442)
//	8012242C: 80452CE0 (lit_6845)
//	80122430: 80439A20 (sincosTable___5JMath)
//	80122434: 80439A20 (sincosTable___5JMath)
//	8012248C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	801224A8: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	801224D8: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	801224F0: 803DD470 (now__14mDoMtx_stack_c)
//	801224F4: 803DD470 (now__14mDoMtx_stack_c)
//	801224F8: 803464B0 (PSMTXCopy)
//	801224FC: 80452D80 (lit_8780)
//	80122500: 80453090 (lit_40716)
//	80122504: 80452CC0 (lit_6108)
//	80122508: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8012250C: 803DD470 (now__14mDoMtx_stack_c)
//	80122510: 803DD470 (now__14mDoMtx_stack_c)
//	8012251C: 802807E0 (func_802807E0)
//	80122530: 80452E94 (lit_16210)
//	80122554: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	8012256C: 803DD470 (now__14mDoMtx_stack_c)
//	80122570: 803DD470 (now__14mDoMtx_stack_c)
//	80122574: 803464B0 (PSMTXCopy)
//	80122578: 803DD470 (now__14mDoMtx_stack_c)
//	8012257C: 803DD470 (now__14mDoMtx_stack_c)
//	80122584: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80122588: 803DD470 (now__14mDoMtx_stack_c)
//	8012258C: 803DD470 (now__14mDoMtx_stack_c)
//	80122598: 802807E0 (func_802807E0)
//	8012259C: 80391C30 (releaeScale)
//	801225A0: 80391C30 (releaeScale)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSumouEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setSumouEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801225E8-80122654 006C+00 s=1 e=0 z=0  None .text      setWaterfallEffect__9daAlink_cFPC4cXyzPUl
 */
//	801225F8: 803621DC (_savegpr_29)
//	8012261C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122638: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122640: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterfallEffect(cXyz const* param_0, u32* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterfallEffect__9daAlink_cFPC4cXyzPUl.s"
}
#pragma pop

/* 80122654-8012277C 0128+00 s=1 e=0 z=0  None .text      setWaterfallEffect__9daAlink_cFv */
//	801226A4: 80452D3C (lit_7808)
//	801226E4: 801225E8 (setWaterfallEffect__9daAlink_cFPC4cXyzPUl)
//	80122724: 80452E64 (lit_14954)
//	8012273C: 801225E8 (setWaterfallEffect__9daAlink_cFPC4cXyzPUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterfallEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterfallEffect__9daAlink_cFv.s"
}
#pragma pop

/* 8012277C-801228F4 0178+00 s=1 e=0 z=0  None .text      setMagneBootsEffect__9daAlink_cFv */
//	80122794: 803621C8 (_savegpr_24)
//	801227A8: 80452D44 (lit_7977)
//	801227C0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801227EC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80122820: 80346E4C (PSMTXMultVecSR)
//	8012284C: 80453094 (effName_40765)
//	8012285C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122888: 802807E0 (func_802807E0)
//	801228A8: 802807E0 (func_802807E0)
//	801228E0: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMagneBootsEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setMagneBootsEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801228F4-80122BBC 02C8+00 s=1 e=0 z=0  None .text      setSwordChargeEffect__9daAlink_cFv */
//	80122914: 803621D4 (_savegpr_27)
//	8012291C: 8038D658 (lit_3757)
//	80122920: 8038D658 (lit_3757)
//	80122924: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	80122944: 80452CC0 (lit_6108)
//	80122950: 804061C0 (g_dComIfG_gameInfo)
//	80122954: 804061C0 (g_dComIfG_gameInfo)
//	80122978: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122994: 802807E0 (func_802807E0)
//	801229F4: 80430D0C (BaseX__4cXyz)
//	801229F8: 80430D0C (BaseX__4cXyz)
//	80122A00: 80346E4C (PSMTXMultVecSR)
//	80122A20: 80452D48 (lit_8130)
//	80122A3C: 80452CB8 (lit_6040)
//	80122A44: 80266B84 (__ml__4cXyzCFf)
//	80122A50: 80452E64 (lit_14954)
//	80122A58: 80266B84 (__ml__4cXyzCFf)
//	80122A68: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80122A98: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122A9C: 80452D48 (lit_8130)
//	80122AC0: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122AEC: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	80122B00: 800BF0EC (seStartSwordCut__9daAlink_cFUl)
//	80122B08: 804061C0 (g_dComIfG_gameInfo)
//	80122B0C: 804061C0 (g_dComIfG_gameInfo)
//	80122B1C: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	80122B48: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122B64: 802807E0 (func_802807E0)
//	80122B84: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80122B90: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80122BA8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordChargeEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordChargeEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80122BBC-80122F18 035C+00 s=1 e=0 z=0  None .text      setElecDamageEffect__9daAlink_cFv */
//	80122BCC: 803621D4 (_savegpr_27)
//	80122BD4: 8038D658 (lit_3757)
//	80122BD8: 8038D658 (lit_3757)
//	80122BDC: 80392094 (d_a_d_a_alink__stringBase0)
//	80122BE0: 80392094 (d_a_d_a_alink__stringBase0)
//	80122BE8: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80122BF0: 8045309C (effName0)
//	80122BF8: 804530A4 (effName1)
//	80122C24: 80346D6C (PSMTXMultVec)
//	80122C48: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122D0C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122D28: 8015EBB8 (checkHookshotItem__9daPy_py_cFi)
//	80122D40: 80392094 (d_a_d_a_alink__stringBase0)
//	80122D44: 80392094 (d_a_d_a_alink__stringBase0)
//	80122D4C: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80122D64: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80122D70: 80452C98 (lit_5943)
//	80122D74: 80266B84 (__ml__4cXyzCFf)
//	80122D9C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80122DBC: 80267128 (atan2sX_Z__4cXyzCFv)
//	80122DC8: 80267150 (atan2sY_XZ__4cXyzCFv)
//	80122DDC: 802673F4 (__ct__5csXyzFsss)
//	80122DF8: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80122E08: 80347138 (PSVECSquareMag)
//	80122E0C: 80452CC0 (lit_6108)
//	80122E1C: 80452CE8 (lit_6846)
//	80122E24: 80452CF0 (lit_6847)
//	80122E6C: 80452CF8 (lit_6848)
//	80122E78: 80450AE0 (__float_nan)
//	80122E7C: 80450AE0 (__float_nan)
//	80122EE8: 80450AE0 (__float_nan)
//	80122EEC: 80450AE0 (__float_nan)
//	80122F04: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setElecDamageEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setElecDamageEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80122F18-80122F78 0060+00 s=1 e=0 z=0  None .text      clearCutTurnEffectID__9daAlink_cFv */
//	80122F28: 803621D4 (_savegpr_27)
//	80122F48: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80122F64: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::clearCutTurnEffectID() {
    nofralloc
#include "asm/d/a/d_a_alink/clearCutTurnEffectID__9daAlink_cFv.s"
}
#pragma pop

/* 80122F78-801233A4 042C+00 s=1 e=0 z=0  None .text      setCutTurnEffect__9daAlink_cFv */
//	80122F88: 803621C0 (_savegpr_22)
//	80122F90: 803AF990 (cNullVec__6Z2Calc)
//	80122F94: 803AF990 (cNullVec__6Z2Calc)
//	80122F98: 8038D658 (lit_3757)
//	80122F9C: 8038D658 (lit_3757)
//	80122FA8: 80452CB0 (lit_6025)
//	80122FCC: 80450FC4 (struct_80450FC4)
//	80123008: 80450FC4 (struct_80450FC4)
//	8012300C: 80450FC5 (struct_80450FC4)
//	80123064: 80450FC5 (struct_80450FC4)
//	80123068: 80450FC6 (struct_80450FC4)
//	801230D8: 80450FC6 (struct_80450FC4)
//	801230DC: 80450FC7 (struct_80450FC4)
//	80123118: 80450FC7 (struct_80450FC4)
//	80123134: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80123140: 804530B8 (effNameWater)
//	801231A4: 804530B0 (effNameLight)
//	801231B8: 804530AC (effNameNormal)
//	801231FC: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80123200: 803DD470 (now__14mDoMtx_stack_c)
//	80123204: 803DD470 (now__14mDoMtx_stack_c)
//	80123210: 803464E4 (PSMTXConcat)
//	80123218: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80123238: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80123250: 803DD470 (now__14mDoMtx_stack_c)
//	80123254: 803DD470 (now__14mDoMtx_stack_c)
//	80123260: 802807E0 (func_802807E0)
//	80123270: 804530BC (lit_41180)
//	80123278: 80452CB0 (lit_6025)
//	80123304: 80452CB8 (lit_6040)
//	80123368: 80452E64 (lit_14954)
//	80123390: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutTurnEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setCutTurnEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801233A4-80123434 0090+00 s=1 e=0 z=0  None .text      setHorseCutTurnEffect__9daAlink_cFv */
//	801233C8: 802673F4 (__ct__5csXyzFsss)
//	80123404: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	8012341C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseCutTurnEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseCutTurnEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80123434-801236BC 0288+00 s=1 e=0 z=0  None .text      setCutLargeJumpLandEffect__9daAlink_cFv */
//	80123444: 803621D4 (_savegpr_27)
//	8012344C: 80439A20 (sincosTable___5JMath)
//	80123450: 80439A20 (sincosTable___5JMath)
//	80123468: 80452D78 (lit_8676)
//	80123474: 80452D00 (lit_6895)
//	8012349C: 803A37C0 (__vt__8cM3dGPla)
//	801234A0: 803A37C0 (__vt__8cM3dGPla)
//	801234B0: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	801234B4: 804061C0 (g_dComIfG_gameInfo)
//	801234B8: 804061C0 (g_dComIfG_gameInfo)
//	801234C8: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	801234D0: 80452D00 (lit_6895)
//	801234F0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80123508: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80123514: 80452CC0 (lit_6108)
//	80123528: 80347138 (PSVECSquareMag)
//	8012352C: 80452CC0 (lit_6108)
//	8012353C: 80452CE8 (lit_6846)
//	80123544: 80452CF0 (lit_6847)
//	8012358C: 80452CF8 (lit_6848)
//	80123598: 80450AE0 (__float_nan)
//	8012359C: 80450AE0 (__float_nan)
//	80123608: 80450AE0 (__float_nan)
//	8012360C: 80450AE0 (__float_nan)
//	80123614: 80267674 (cM_atan2s__Fff)
//	80123620: 80267128 (atan2sX_Z__4cXyzCFv)
//	80123634: 804061C0 (g_dComIfG_gameInfo)
//	80123638: 804061C0 (g_dComIfG_gameInfo)
//	8012363C: 80391D38 (effName_41208)
//	80123640: 80391D38 (effName_41208)
//	80123680: 80452CB8 (lit_6040)
//	80123684: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80123698: 803A37C0 (__vt__8cM3dGPla)
//	8012369C: 803A37C0 (__vt__8cM3dGPla)
//	801236A8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutLargeJumpLandEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setCutLargeJumpLandEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801236BC-801237A8 00EC+00 s=1 e=0 z=0  None .text      setBootsLightEffect__9daAlink_cFv */
//	801236CC: 803621D8 (_savegpr_28)
//	801236D4: 80392094 (d_a_d_a_alink__stringBase0)
//	801236D8: 80392094 (d_a_d_a_alink__stringBase0)
//	801236E0: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	801236F8: 8002DB64 (dComIfGs_isOneZoneSwitch__Fii)
//	8012371C: 804530C8 (effName_41286)
//	8012372C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80123744: 804530C0 (jointID)
//	8012375C: 802807E0 (func_802807E0)
//	80123794: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBootsLightEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setBootsLightEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801237A8-801238FC 0154+00 s=1 e=0 z=0  None .text      setLightningSwordEffect__9daAlink_cFv */
//	801237B8: 803621D4 (_savegpr_27)
//	801237E0: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	801237FC: 802807E0 (func_802807E0)
//	80123824: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80123868: 804530D0 (effName_41312)
//	80123884: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	801238A0: 802807E0 (func_802807E0)
//	801238D0: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	801238E8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLightningSwordEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setLightningSwordEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801238FC-801239B0 00B4+00 s=1 e=0 z=0  None .text      setWolfRollAttackEffect__9daAlink_cFv */
//	80123914: 80452DB0 (lit_10039)
//	80123940: 802673F4 (__ct__5csXyzFsss)
//	80123974: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80123998: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfRollAttackEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfRollAttackEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801239B0-80123BF0 0240+00 s=1 e=0 z=0  None .text      setWolfDigEffect__9daAlink_cFv */
//	801239D0: 803621D8 (_savegpr_28)
//	801239D8: 804061C0 (g_dComIfG_gameInfo)
//	801239DC: 804061C0 (g_dComIfG_gameInfo)
//	801239E8: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	801239F4: 80452CC4 (lit_6109)
//	80123A08: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	80123A1C: 802673F4 (__ct__5csXyzFsss)
//	80123A78: 801AB290 (dKy_pol_efftype_get__FPC13cBgS_PolyInfo)
//	80123A90: 80452CC4 (lit_6109)
//	80123AA0: 80452E64 (lit_14954)
//	80123AA4: 80452CC4 (lit_6109)
//	80123AC4: 804061C0 (g_dComIfG_gameInfo)
//	80123AC8: 804061C0 (g_dComIfG_gameInfo)
//	80123AE8: 8004D6A4
//(setPoly__13dPa_control_cFUlUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	80123AFC: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	80123B18: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	80123B48: 80120634 (setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz)
//	80123B64: 80120634 (setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz)
//	80123B90: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80123BAC: 80120634 (setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz)
//	80123BDC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfDigEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfDigEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80123BF0-80123C8C 009C+00 s=2 e=0 z=0  None .text
 * setWolfSwimEndEffect__9daAlink_cFPP14JPABaseEmitterPP14JPABaseEmitter */
//	80123C00: 803621D4 (_savegpr_27)
//	80123C34: 804530D8 (name0)
//	80123C44: 801206C4 (setEmitterColor__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80123C5C: 804530E0 (name1)
//	80123C6C: 801206C4 (setEmitterColor__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80123C78: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfSwimEndEffect(JPABaseEmitter** param_0, JPABaseEmitter** param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfSwimEndEffect__9daAlink_cFPP14JPABaseEmitterPP14JPABaseEmitter.s"
}
#pragma pop

/* 80123C8C-80123D88 00FC+00 s=1 e=0 z=0  None .text      setWolfLockAttackEffect__9daAlink_cFv */
//	80123C9C: 803621D0 (_savegpr_26)
//	80123CA4: 804061C0 (g_dComIfG_gameInfo)
//	80123CA8: 804061C0 (g_dComIfG_gameInfo)
//	80123CCC: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	80123D30: 804530E8 (effID)
//	80123D4C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80123D74: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfLockAttackEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfLockAttackEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80123D88-80123ED0 0148+00 s=1 e=0 z=0  None .text      setWolfJumpAttackEffect__9daAlink_cFv */
//	80123DEC: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80123E04: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80123E18: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80123E24: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80123E28: 804061C0 (g_dComIfG_gameInfo)
//	80123E2C: 804061C0 (g_dComIfG_gameInfo)
//	80123E3C: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	80123EA8: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfJumpAttackEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfJumpAttackEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80123ED0-80124144 0274+00 s=2 e=0 z=0  None .text
 * setWolfBarrierHitEffect__9daAlink_cFR11dBgS_LinChk           */
//	80123EE0: 803621D4 (_savegpr_27)
//	80123EEC: 803A37C0 (__vt__8cM3dGPla)
//	80123EF0: 803A37C0 (__vt__8cM3dGPla)
//	80123EF8: 804061C0 (g_dComIfG_gameInfo)
//	80123EFC: 804061C0 (g_dComIfG_gameInfo)
//	80123F0C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80123F20: 80267674 (cM_atan2s__Fff)
//	80123F30: 80452CC0 (lit_6108)
//	80123F44: 80347138 (PSVECSquareMag)
//	80123F48: 80452CC0 (lit_6108)
//	80123F58: 80452CE8 (lit_6846)
//	80123F60: 80452CF0 (lit_6847)
//	80123FA8: 80452CF8 (lit_6848)
//	80123FB4: 80450AE0 (__float_nan)
//	80123FB8: 80450AE0 (__float_nan)
//	80124024: 80450AE0 (__float_nan)
//	80124028: 80450AE0 (__float_nan)
//	80124038: 80267674 (cM_atan2s__Fff)
//	8012404C: 802673F4 (__ct__5csXyzFsss)
//	80124058: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	80124070: 804530F4 (ganonNameID)
//	80124078: 804530F0 (normalNameID)
//	80124084: 804061C0 (g_dComIfG_gameInfo)
//	80124088: 804061C0 (g_dComIfG_gameInfo)
//	801240C8: 80452CB8 (lit_6040)
//	801240CC: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	801240EC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80124100: 80452CB8 (lit_6040)
//	80124108: 80452CBC (lit_6041)
//	80124114: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80124120: 803A37C0 (__vt__8cM3dGPla)
//	80124124: 803A37C0 (__vt__8cM3dGPla)
//	80124130: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfBarrierHitEffect(dBgS_LinChk& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfBarrierHitEffect__9daAlink_cFR11dBgS_LinChk.s"
}
#pragma pop

/* 80124144-801241E0 009C+00 s=9 e=0 z=0  None .text      setCutWaterDropEffect__9daAlink_cFv */
//	80124184: 804061C0 (g_dComIfG_gameInfo)
//	80124188: 804061C0 (g_dComIfG_gameInfo)
//	801241C8: 80452CC0 (lit_6108)
//	801241CC: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutWaterDropEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setCutWaterDropEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801241E0-801244E4 0304+00 s=1 e=0 z=0  None .text      setWaterDropEffect__9daAlink_cFv */
//	801241F0: 803621C8 (_savegpr_24)
//	80124290: 80452D3C (lit_7808)
//	8012431C: 804530F8 (effDataTable)
//	80124364: 801206C4 (setEmitterColor__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80124390: 802807E0 (func_802807E0)
//	8012442C: 80453100 (lit_41718)
//	80124438: 80452CB0 (lit_6025)
//	80124468: 80452DFC (lit_13701)
//	80124474: 80452CB0 (lit_6025)
//	801244D0: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterDropEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterDropEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801244E4-801245EC 0108+00 s=1 e=0 z=0  None .text      setSwordUpColorEffect__9daAlink_cFv */
//	80124508: 80452CB8 (lit_6040)
//	80124510: 80452CC0 (lit_6108)
//	80124514: 80452DA0 (lit_9054)
//	80124518: 80270740 (cLib_chaseF__FPfff)
//	80124520: 80391D44 (swordUpColor)
//	80124524: 80391D44 (swordUpColor)
//	80124528: 80452CB0 (lit_6025)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordUpColorEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordUpColorEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801245EC-80124738 014C+00 s=1 e=0 z=0  None .text      setSwordCutSplash__9daAlink_cFv */
//	801245FC: 803621D4 (_savegpr_27)
//	80124688: 80453104 (cutSplashName)
//	8012469C: 80120634 (setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz)
//	801246B0: 80391D54 (swordCutSplashScale)
//	801246B4: 80391D54 (swordCutSplashScale)
//	801246F0: 80452D3C (lit_7808)
//	80124704: 80452D3C (lit_7808)
//	80124724: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordCutSplash() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordCutSplash__9daAlink_cFv.s"
}
#pragma pop

/* 80124738-801247A8 0070+00 s=1 e=0 z=0  None .text setMetamorphoseEffectStartLink__9daAlink_cFv
 */
//	8012475C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80124774: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80124784: 80430CF4 (Zero__4cXyz)
//	80124788: 80430CF4 (Zero__4cXyz)
//	80124790: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMetamorphoseEffectStartLink() {
    nofralloc
#include "asm/d/a/d_a_alink/setMetamorphoseEffectStartLink__9daAlink_cFv.s"
}
#pragma pop

/* 801247A8-801248A8 0100+00 s=1 e=0 z=0  None .text      setMetamorphoseEffect__9daAlink_cFv */
//	801247E0: 80124738 (setMetamorphoseEffectStartLink__9daAlink_cFv)
//	801247F8: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	8012481C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80124864: 802807E0 (func_802807E0)
//	80124890: 80124738 (setMetamorphoseEffectStartLink__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMetamorphoseEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setMetamorphoseEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801248A8-80124A2C 0184+00 s=1 e=0 z=0  None .text      setRunSplash__9daAlink_cFv */
//	801248D4: 800A7A5C (checkDashAnime__9daAlink_cCFv)
//	801248EC: 8038D664 (m__19daAlinkHIO_basic_c0)
//	801248F0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	80124914: 801AB290 (dKy_pol_efftype_get__FPC13cBgS_PolyInfo)
//	80124954: 80120634 (setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz)
//	80124968: 80452D3C (lit_7808)
//	80124970: 80439A20 (sincosTable___5JMath)
//	80124974: 80439A20 (sincosTable___5JMath)
//	8012498C: 80452D10 (lit_7306)
//	80124998: 80452D78 (lit_8676)
//	801249D8: 80120634 (setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz)
//	801249FC: 80120634 (setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz)
//	80124A10: 80452F48 (lit_23416)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRunSplash() {
    nofralloc
#include "asm/d/a/d_a_alink/setRunSplash__9daAlink_cFv.s"
}
#pragma pop

/* 80124A2C-80124B68 013C+00 s=1 e=0 z=0  None .text
 * execute__29dAlink_bottleWaterPcallBack_cFP14JPABaseEmitterP15JPABaseParticle */
//	80124A44: 803621D8 (_savegpr_28)
//	80124A6C: 804061C0 (g_dComIfG_gameInfo)
//	80124A70: 804061C0 (g_dComIfG_gameInfo)
//	80124A94: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80124AA0: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80124AB8: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80124AD8: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
//	80124AE4: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	80124B10: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	80124B54: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dAlink_bottleWaterPcallBack_c::execute(JPABaseEmitter* param_0, JPABaseParticle* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/execute__29dAlink_bottleWaterPcallBack_cFP14JPABaseEmitterP15JPABaseParticle.s"
}
#pragma pop

/* 80124B68-80124BA4 003C+00 s=2 e=0 z=0  None .text      resetFairyEffect__9daAlink_cFv */
//	80124B80: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80124B8C: 80120778 (stopDrawParticle__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFairyEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFairyEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80124BA4-80124E28 0284+00 s=1 e=0 z=0  None .text      setBottleEffect__9daAlink_cFv */
//	80124BB4: 803621DC (_savegpr_29)
//	80124BBC: 8038D658 (lit_3757)
//	80124BC0: 8038D658 (lit_3757)
//	80124C0C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80124C5C: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80124C88: 80452D14 (lit_7307)
//	80124CA8: 80346D6C (PSMTXMultVec)
//	80124CC0: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80124D34: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80124D50: 802807E0 (func_802807E0)
//	80124D78: 804061C0 (g_dComIfG_gameInfo)
//	80124D7C: 804061C0 (g_dComIfG_gameInfo)
//	80124DBC: 80452CB8 (lit_6040)
//	80124DC0: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80124E00: 80452CB8 (lit_6040)
//	80124E04: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80124E14: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBottleEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setBottleEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80124E28-80124EA8 0080+00 s=2 e=0 z=0  None .text      clearFirePointDamageEffect__9daAlink_cFi
 */
//	80124E5C: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80124E68: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80124E74: 80430CF4 (Zero__4cXyz)
//	80124E78: 80430CF4 (Zero__4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::clearFirePointDamageEffect(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/clearFirePointDamageEffect__9daAlink_cFi.s"
}
#pragma pop

/* 80124EA8-80124FA4 00FC+00 s=1 e=0 z=0  None .text      initFirePointDamageEffectAll__9daAlink_cFv
 */
//	80124EB8: 803621C8 (_savegpr_24)
//	80124EDC: 80391D84 (effJoint)
//	80124EE0: 80391D84 (effJoint)
//	80124EE8: 80430CF4 (Zero__4cXyz)
//	80124EEC: 80430CF4 (Zero__4cXyz)
//	80124EF4: 80391D94 (effOffset)
//	80124EF8: 80391D94 (effOffset)
//	80124F70: 80346D6C (PSMTXMultVec)
//	80124F90: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initFirePointDamageEffectAll() {
    nofralloc
#include "asm/d/a/d_a_alink/initFirePointDamageEffectAll__9daAlink_cFv.s"
}
#pragma pop

/* 80124FA4-80125128 0184+00 s=1 e=0 z=0  None .text
 * initFirePointDamageEffect__9daAlink_cFPC4cXyzP12dCcD_GObjInf */
//	80124FB4: 803621D4 (_savegpr_27)
//	80124FF8: 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf)
//	80125000: 80267128 (atan2sX_Z__4cXyzCFv)
//	8012500C: 80267150 (atan2sY_XZ__4cXyzCFv)
//	80125020: 802673F4 (__ct__5csXyzFsss)
//	8012503C: 80036C44 (getHitmarkPosAndAngle__9dJntCol_cCFPC4cXyzPC5csXyzP4cXyzP5csXyzi)
//	8012509C: 80430CF4 (Zero__4cXyz)
//	801250A0: 80430CF4 (Zero__4cXyz)
//	801250E0: 803DD470 (now__14mDoMtx_stack_c)
//	801250E4: 803DD470 (now__14mDoMtx_stack_c)
//	801250E8: 803464B0 (PSMTXCopy)
//	801250EC: 803DD470 (now__14mDoMtx_stack_c)
//	801250F0: 803DD470 (now__14mDoMtx_stack_c)
//	801250F8: 803465B0 (PSMTXInverse)
//	801250FC: 803DD470 (now__14mDoMtx_stack_c)
//	80125100: 803DD470 (now__14mDoMtx_stack_c)
//	8012510C: 80346D6C (PSMTXMultVec)
//	80125114: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initFirePointDamageEffect(cXyz const* param_0, dCcD_GObjInf* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/initFirePointDamageEffect__9daAlink_cFPC4cXyzP12dCcD_GObjInf.s"
}
#pragma pop

/* 80125128-80125338 0210+00 s=1 e=0 z=0  None .text      setFirePointDamageEffect__9daAlink_cFv */
//	80125138: 803621D0 (_savegpr_26)
//	8012514C: 80430CF4 (Zero__4cXyz)
//	80125150: 80430CF4 (Zero__4cXyz)
//	80125180: 80346D6C (PSMTXMultVec)
//	8012519C: 80124E28 (clearFirePointDamageEffect__9daAlink_cFi)
//	801251B0: 80430CF4 (Zero__4cXyz)
//	801251B4: 80430CF4 (Zero__4cXyz)
//	801251E0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801251EC: 80452ED0 (lit_18847)
//	801251F0: 80266B84 (__ml__4cXyzCFf)
//	80125224: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80125264: 80124E28 (clearFirePointDamageEffect__9daAlink_cFi)
//	8012527C: 80450EC8 (mParticleTracePCB__13dPa_control_c)
//	801252A0: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	801252B4: 80450EC8 (mParticleTracePCB__13dPa_control_c)
//	80125324: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFirePointDamageEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setFirePointDamageEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80125338-80125524 01EC+00 s=1 e=0 z=0  None .text      setFreezeEffect__9daAlink_cFv */
//	80125348: 803621D8 (_savegpr_28)
//	80125350: 8038D658 (lit_3757)
//	80125354: 8038D658 (lit_3757)
//	801253A0: 80346D6C (PSMTXMultVec)
//	801253EC: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	80125494: 804061C0 (g_dComIfG_gameInfo)
//	80125498: 804061C0 (g_dComIfG_gameInfo)
//	801254C0: 8045310C (effName_42224)
//	801254DC: 80452CC0 (lit_6108)
//	801254E0: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	801254FC: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80125510: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFreezeEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setFreezeEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80125524-801255BC 0098+00 s=1 e=0 z=0  None .text      setWoodShieldBurnEffect__9daAlink_cFv */
//	80125534: 803621D4 (_savegpr_27)
//	80125554: 80453110 (effName_42309)
//	80125570: 80120580 (setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz)
//	8012558C: 802807E0 (func_802807E0)
//	801255A8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWoodShieldBurnEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWoodShieldBurnEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801255BC-80125628 006C+00 s=3 e=0 z=0  None .text      clearWoodShieldBurnEffect__9daAlink_cFv */
//	801255CC: 803621DC (_savegpr_29)
//	801255F4: 80120778 (stopDrawParticle__9daAlink_cFUl)
//	80125614: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::clearWoodShieldBurnEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/clearWoodShieldBurnEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80125628-801256EC 00C4+00 s=1 e=0 z=0  None .text      setWoodShieldBurnOutEffect__9daAlink_cFv
 */
//	80125638: 803621D8 (_savegpr_28)
//	80125648: 804061C0 (g_dComIfG_gameInfo)
//	8012564C: 804061C0 (g_dComIfG_gameInfo)
//	80125674: 80453114 (effName_42340)
//	80125690: 80452CC0 (lit_6108)
//	80125694: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	801256B0: 802807E0 (func_802807E0)
//	801256D0: 801255BC (clearWoodShieldBurnEffect__9daAlink_cFv)
//	801256D8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWoodShieldBurnOutEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWoodShieldBurnOutEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801256EC-80125778 008C+00 s=2 e=0 z=0  None .text
 * initBlur__14daAlink_blur_cFfiPC4cXyzPC4cXyzPC4cXyz           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_blur_c::initBlur(f32 param_0, int param_1, cXyz const* param_2,
                                  cXyz const* param_3, cXyz const* param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/initBlur__14daAlink_blur_cFfiPC4cXyzPC4cXyzPC4cXyz.s"
}
#pragma pop

/* 80125778-8012589C 0124+00 s=1 e=0 z=0  None .text
 * setBezierPos__FPC4cXyzPC4cXyzPC4cXyzPC4cXyzfP4cXyz           */
//	801257A0: 803621D8 (_savegpr_28)
//	801257B8: 80452CB8 (lit_6040)
//	801257C8: 80452CC4 (lit_6109)
//	801257F0: 80266B84 (__ml__4cXyzCFf)
//	80125800: 80266B84 (__ml__4cXyzCFf)
//	80125810: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80125820: 80266B84 (__ml__4cXyzCFf)
//	80125830: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80125840: 80266B84 (__ml__4cXyzCFf)
//	80125850: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80125888: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void setBezierPos(cXyz const* param_0, cXyz const* param_1, cXyz const* param_2,
                             cXyz const* param_3, f32 param_4, cXyz* param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setBezierPos__FPC4cXyzPC4cXyzPC4cXyzPC4cXyzfP4cXyz.s"
}
#pragma pop

/* 8012589C-80125B0C 0270+00 s=1 e=0 z=0  None .text
 * copyBlur__14daAlink_blur_cFPC4cXyzPC4cXyzPC4cXyz             */
//	801258BC: 803621C0 (_savegpr_22)
//	8012592C: 80452CC0 (lit_6108)
//	80125938: 80452CE0 (lit_6845)
//	8012593C: 80266B84 (__ml__4cXyzCFf)
//	80125950: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80125974: 80452E0C (lit_14614)
//	80125978: 80266B84 (__ml__4cXyzCFf)
//	80125988: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801259AC: 80452DB4 (lit_10040)
//	801259B0: 80266B84 (__ml__4cXyzCFf)
//	801259C4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	801259E8: 80453118 (lit_42493)
//	801259EC: 80266B84 (__ml__4cXyzCFf)
//	801259FC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80125A20: 80452DA0 (lit_9054)
//	80125A44: 80125778 (setBezierPos__FPC4cXyzPC4cXyzPC4cXyzPC4cXyzfP4cXyz)
//	80125A64: 80125778 (setBezierPos__FPC4cXyzPC4cXyzPC4cXyzPC4cXyzfP4cXyz)
//	80125A74: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80125A84: 80266B84 (__ml__4cXyzCFf)
//	80125A94: 80347090 (PSVECAdd)
//	80125AF8: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_blur_c::copyBlur(cXyz const* param_0, cXyz const* param_1, cXyz const* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/copyBlur__14daAlink_blur_cFPC4cXyzPC4cXyzPC4cXyz.s"
}
#pragma pop

/* 80125B0C-80125BF4 00E8+00 s=1 e=0 z=0  None .text traceBlur__14daAlink_blur_cFPC4cXyzPC4cXyzs
 */
//	80125B1C: 803621D4 (_savegpr_27)
//	80125B30: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80125B34: 803DD470 (now__14mDoMtx_stack_c)
//	80125B38: 803DD470 (now__14mDoMtx_stack_c)
//	80125B40: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80125B5C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80125B68: 803DD470 (now__14mDoMtx_stack_c)
//	80125B6C: 803DD470 (now__14mDoMtx_stack_c)
//	80125B9C: 80346D6C (PSMTXMultVec)
//	80125BC4: 80346D6C (PSMTXMultVec)
//	80125BE0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_blur_c::traceBlur(cXyz const* param_0, cXyz const* param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/traceBlur__14daAlink_blur_cFPC4cXyzPC4cXyzs.s"
}
#pragma pop

/* ############################################################################################## */
/* 804256CC-804256EC 0020+00 s=1 e=0 z=0  None .bss       texObj$42524 */
static u8 texObj[32];

/* 804506A4-804506A8 0004+00 s=1 e=0 z=0  None .sdata     nColor0$42525 */
SECTION_SDATA static u8 nColor0[4] = {
    0xFF,
    0xFF,
    0xFF,
    0x14,
};

/* 80125BF4-80125F14 0320+00 s=1 e=0 z=0  None .text      draw__14daAlink_blur_cFv */
//	80125C04: 803621D8 (_savegpr_28)
//	80125C0C: 80434AC8 (j3dSys)
//	80125C10: 80434AC8 (j3dSys)
//	80125C14: 8031073C (reinitGX__6J3DSysFv)
//	80125C1C: 8035F0D4 (GXSetNumIndStages)
//	80125C24: 804506A4 (nColor0)
//	80125C2C: 804256CC (texObj)
//	80125C30: 804256CC (texObj)
//	80125C58: 8035DE40 (GXInitTexObj)
//	80125C5C: 804256CC (texObj)
//	80125C60: 804256CC (texObj)
//	80125C6C: 80452CC0 (lit_6108)
//	80125C84: 8035E0D4 (GXInitTexObjLOD)
//	80125C88: 804256CC (texObj)
//	80125C8C: 804256CC (texObj)
//	80125C94: 8035E414 (GXLoadTexObj)
//	80125CAC: 8035B5C4 (GXSetVtxAttrFmt)
//	80125CC4: 8035B5C4 (GXSetVtxAttrFmt)
//	80125CC8: 8035B58C (GXClearVtxDesc)
//	80125CD4: 8035AEB8 (GXSetVtxDesc)
//	80125CE0: 8035AEB8 (GXSetVtxDesc)
//	80125CE8: 8035DB30 (GXSetNumChans)
//	80125CEC: 804506A4 (nColor0)
//	80125CFC: 8035F37C (GXSetTevColor)
//	80125D04: 8035BDFC (GXSetNumTexGens)
//	80125D20: 8035BB7C (GXSetTexCoordGen2)
//	80125D28: 8035F890 (GXSetNumTevStages)
//	80125D3C: 8035F6F4 (GXSetTevOrder)
//	80125D54: 8035F224 (GXSetTevColorIn)
//	80125D70: 8035F2AC (GXSetTevColorOp)
//	80125D88: 8035F268 (GXSetTevAlphaIn)
//	80125DA4: 8035F314 (GXSetTevAlphaOp)
//	80125DA8: 80434AC8 (j3dSys)
//	80125DAC: 80434AC8 (j3dSys)
//	80125DB4: 8036024C (GXLoadPosMtxImm)
//	80125DBC: 803602EC (GXSetCurrentMtx)
//	80125DD0: 8035FBF0 (GXSetBlendMode)
//	80125DD8: 8035C984 (GXSetCullMode)
//	80125DE8: 8035FC9C (GXSetZMode)
//	80125E00: 8035F624 (GXSetAlphaCompare)
//	80125E34: 8035C764 (GXBegin)
//	80125EF8: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	80125F00: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_blur_c::draw() {
    nofralloc
#include "asm/d/a/d_a_alink/draw__14daAlink_blur_cFv.s"
}
#pragma pop

/* 80125F14-80126350 043C+00 s=1 e=0 z=0  None .text      create__20daAlink_lockCursor_cFv */
//	80125F2C: 80452C90 (l_arcName)
//	80125F30: 804061C0 (g_dComIfG_gameInfo)
//	80125F34: 804061C0 (g_dComIfG_gameInfo)
//	80125F44: 8003C1E4 (getResInfo__14dRes_control_cFPCcP11dRes_info_ci)
//	80125F4C: 80452CC0 (lit_6108)
//	80125F64: 802CEC4C (__nw__FUl)
//	80125F70: 802F8498 (__ct__9J2DScreenFv)
//	80125F90: 80392094 (d_a_d_a_alink__stringBase0)
//	80125F94: 80392094 (d_a_d_a_alink__stringBase0)
//	80125FA4: 802F8648 (setPriority__9J2DScreenFPCcUlP10JKRArchive)
//	80125FAC: 802550E8 (dPaneClass_showNullPane__FP9J2DScreen)
//	80125FB0: 80392094 (d_a_d_a_alink__stringBase0)
//	80125FB4: 80392094 (d_a_d_a_alink__stringBase0)
//	80125FC0: 802D4270 (getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader)
//	80125FC4: 80308A6C (load__20J2DAnmLoaderDataBaseFPCv)
//	80125FE0: 80392094 (d_a_d_a_alink__stringBase0)
//	80125FE4: 80392094 (d_a_d_a_alink__stringBase0)
//	80125FF0: 802D4270 (getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader)
//	80125FF4: 80308A6C (load__20J2DAnmLoaderDataBaseFPCv)
//	80126010: 80392094 (d_a_d_a_alink__stringBase0)
//	80126014: 80392094 (d_a_d_a_alink__stringBase0)
//	80126020: 802D4270 (getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader)
//	80126024: 80308A6C (load__20J2DAnmLoaderDataBaseFPCv)
//	80126040: 80392094 (d_a_d_a_alink__stringBase0)
//	80126044: 80392094 (d_a_d_a_alink__stringBase0)
//	80126050: 802D4270 (getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader)
//	80126054: 80308A6C (load__20J2DAnmLoaderDataBaseFPCv)
//	80126184: 80452CC0 (lit_6108)
//	80126224: 80452CC0 (lit_6108)
//	801262F0: 80452CC0 (lit_6108)
//	80126308: 802F9690 (animation__9J2DScreenFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_lockCursor_c::create() {
    nofralloc
#include "asm/d/a/d_a_alink/create__20daAlink_lockCursor_cFv.s"
}
#pragma pop

/* 80126350-80126354 0004+00 s=0 e=4 z=0  None .text      setAnimation__7J2DPaneFP15J2DAnmTevRegKey
 */
void J2DPane::setAnimation(J2DAnmTevRegKey* param_0) {
    /* empty function */
}

/* 80126354-80126358 0004+00 s=0 e=4 z=0  None .text      setAnimation__7J2DPaneFP11J2DAnmColor */
void J2DPane::setAnimation(J2DAnmColor* param_0) {
    /* empty function */
}

/* 80126358-80126424 00CC+00 s=1 e=0 z=0  None .text      update__20daAlink_lockCursor_cFv */
//	80126368: 80452DF0 (lit_13382)
//	8012637C: 80452ED0 (lit_18847)
//	8012638C: 80452D00 (lit_6895)
//	8012639C: 8045311C (lit_42622)
//	801263AC: 80452ED0 (lit_18847)
//	801263C4: 80452CB0 (lit_6025)
//	80126410: 8027065C (cLib_chaseUC__FPUcUcUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_lockCursor_c::update() {
    nofralloc
#include "asm/d/a/d_a_alink/update__20daAlink_lockCursor_cFv.s"
}
#pragma pop

/* 80126424-80126650 022C+00 s=1 e=0 z=0  None .text      draw__20daAlink_lockCursor_cFv */
//	80126468: 80452DF0 (lit_13382)
//	80126494: 802F9690 (animation__9J2DScreenFv)
//	8012649C: 80452CAC (lit_6023)
//	801264E0: 80452E64 (lit_14954)
//	801264EC: 80452DF0 (lit_13382)
//	801264F8: 80453120 (lit_42685)
//	801264FC: 80452DD4 (lit_11442)
//	80126510: 80452DD4 (lit_11442)
//	80126514: 80452C98 (lit_5943)
//	80126518: 80453124 (lit_42686)
//	80126520: 80453008 (lit_32072)
//	80126548: 80452CC0 (lit_6108)
//	80126568: 80453128 (lit_42687)
//	8012656C: 802675E4 (cM_rad2s__Ff)
//	80126574: 80439A20 (sincosTable___5JMath)
//	80126578: 80439A20 (sincosTable___5JMath)
//	80126580: 80453128 (lit_42687)
//	80126584: 802675E4 (cM_rad2s__Ff)
//	80126588: 80439A20 (sincosTable___5JMath)
//	8012658C: 80439A20 (sincosTable___5JMath)
//	801265C0: 8045312C (lit_42688)
//	801265C4: 802675E4 (cM_rad2s__Ff)
//	801265CC: 80439A20 (sincosTable___5JMath)
//	801265D0: 80439A20 (sincosTable___5JMath)
//	801265D8: 8045312C (lit_42688)
//	801265DC: 802675E4 (cM_rad2s__Ff)
//	80126610: 80452CC0 (lit_6108)
//	80126618: 804061C0 (g_dComIfG_gameInfo)
//	8012661C: 804061C0 (g_dComIfG_gameInfo)
//	80126624: 802F8ED4 (draw__9J2DScreenFffPC14J2DGrafContext)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_lockCursor_c::draw() {
    nofralloc
#include "asm/d/a/d_a_alink/draw__20daAlink_lockCursor_cFv.s"
}
#pragma pop

/* 80126650-801266C0 0070+00 s=1 e=0 z=0  None .text      create__15daAlink_sight_cFv */
//	80126668: 80125F14 (create__20daAlink_lockCursor_cFv)
//	8012667C: 80452C90 (l_arcName)
//	80126684: 804061C0 (g_dComIfG_gameInfo)
//	80126688: 804061C0 (g_dComIfG_gameInfo)
//	80126698: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	801266A4: 8015F384 (setSightImage__18daPy_sightPacket_cFP7ResTIMG)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_sight_c::create() {
    nofralloc
#include "asm/d/a/d_a_alink/create__15daAlink_sight_cFv.s"
}
#pragma pop

/* 801266C0-80126710 0050+00 s=1 e=0 z=0  None .text      draw__15daAlink_sight_cFv */
//	801266FC: 8015F1A0 (draw__18daPy_sightPacket_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_sight_c::draw() {
    nofralloc
#include "asm/d/a/d_a_alink/draw__15daAlink_sight_cFv.s"
}
#pragma pop

/* 80126710-80126740 0030+00 s=2 e=0 z=0  None .text      onLockFlg__15daAlink_sight_cFv */
//	8012672C: 80452D24 (lit_7450)
//	80126734: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_sight_c::onLockFlg() {
    nofralloc
#include "asm/d/a/d_a_alink/onLockFlg__15daAlink_sight_cFv.s"
}
#pragma pop

/* 80126740-80126928 01E8+00 s=2 e=0 z=0  None .text      changeCommon__9daAlink_cFv */
//	80126780: 80452CBC (lit_6041)
//	80126784: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80126798: 80110840 (offKandelaarModel__9daAlink_cFv)
//	80126874: 8009D8E4 (init__16daAlink_matAnm_cFv)
//	8012687C: 8009D8E4 (init__16daAlink_matAnm_cFv)
//	80126890: 800D1430 (resetCombo__9daAlink_cFi)
//	801268A0: 80452CC0 (lit_6108)
//	801268CC: 8038D664 (m__19daAlinkHIO_basic_c0)
//	801268D0: 8038D664 (m__19daAlinkHIO_basic_c0)
//	801268EC: 80124E28 (clearFirePointDamageEffect__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeCommon() {
    nofralloc
#include "asm/d/a/d_a_alink/changeCommon__9daAlink_cFv.s"
}
#pragma pop

/* 80126928-80126F3C 0614+00 s=2 e=0 z=0  None .text      changeWolf__9daAlink_cFv */
//	80126938: 803621D0 (_savegpr_26)
//	80126940: 8038D658 (lit_3757)
//	80126944: 8038D658 (lit_3757)
//	8012694C: 8015F168 (setAnimeHeap__14daPy_anmHeap_cFv)
//	80126954: 80452C50 (l_wArcName)
//	8012695C: 804061C0 (g_dComIfG_gameInfo)
//	80126960: 804061C0 (g_dComIfG_gameInfo)
//	80126974: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8012698C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80126994: 80452C50 (l_wArcName)
//	801269A4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	801269C4: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	801269E4: 80452C50 (l_wArcName)
//	801269F4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80126A0C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80126A14: 80452C50 (l_wArcName)
//	80126A24: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80126A38: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80126A40: 80452C50 (l_wArcName)
//	80126A50: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80126A64: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80126A6C: 80452C50 (l_wArcName)
//	80126A7C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80126A90: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80126A98: 80452C50 (l_wArcName)
//	80126AA8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80126ABC: 8032B87C (searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData)
//	80126AD0: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	80126AD4: 80452CB8 (lit_6040)
//	80126AE0: 80452C50 (l_wArcName)
//	80126AF0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80126B04: 8032B87C (searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData)
//	80126B18: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	80126B1C: 80452CB8 (lit_6040)
//	80126B28: 80452C50 (l_wArcName)
//	80126B38: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80126B4C: 8032B87C (searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData)
//	80126B60: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	80126B64: 80452CB8 (lit_6040)
//	80126B70: 80452C50 (l_wArcName)
//	80126B80: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80126B94: 8032B87C (searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData)
//	80126BA8: 8032FE70 (entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey)
//	80126BAC: 80452CB8 (lit_6040)
//	80126BBC: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	80126BC4: 804061C0 (g_dComIfG_gameInfo)
//	80126BC8: 804061C0 (g_dComIfG_gameInfo)
//	80126BE0: 80140550 (changeModelDataDirectWolf__9daAlink_cFi)
//	80126BEC: 80392094 (d_a_d_a_alink__stringBase0)
//	80126BF0: 80392094 (d_a_d_a_alink__stringBase0)
//	80126BF8: 8009C964 (entry__8dEyeHL_cFP12J3DModelDataPCc)
//	80126C08: 80392094 (d_a_d_a_alink__stringBase0)
//	80126C0C: 80392094 (d_a_d_a_alink__stringBase0)
//	80126C14: 8009C964 (entry__8dEyeHL_cFP12J3DModelDataPCc)
//	80126C58: 80126740 (changeCommon__9daAlink_cFv)
//	80126C74: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	80126C80: 803B2B68 (l_wolfJntColData)
//	80126C84: 803B2B68 (l_wolfJntColData)
//	80126C90: 80035CA0 (init__9dJntCol_cFP10fopAc_ac_cPC13dJntColData_cP8J3DModeli)
//	80126CA0: 80453130 (lit_42933)
//	80126CBC: 80452D88 (lit_8782)
//	80126CCC: 80450690 (l_autoUpHeight)
//	80126CD4: 80450694 (l_autoDownHeight)
//	80126CD8: 80452ED4 (lit_18929)
//	80126CF4: 80439A20 (sincosTable___5JMath)
//	80126CF8: 80439A20 (sincosTable___5JMath)
//	80126D24: 80453118 (lit_42493)
//	80126D2C: 80453134 (lit_42934)
//	80126D60: 800E2580 (setHeavyBoots__9daAlink_cFi)
//	80126DB8: 80452DDC (lit_11471)
//	80126DE0: 80452D8C (lit_8783)
//	80126DE8: 80452D00 (lit_6895)
//	80126E0C: 800AA9DC (resetAtCollision__9daAlink_cFi)
//	80126EB0: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	80126EDC: 80452DD4 (lit_11442)
//	80126EE0: 8026F708 (SetR__8cM3dGSphFf)
//	80126F00: 804061C0 (g_dComIfG_gameInfo)
//	80126F04: 804061C0 (g_dComIfG_gameInfo)
//	80126F28: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeWolf() {
    nofralloc
#include "asm/d/a/d_a_alink/changeWolf__9daAlink_cFv.s"
}
#pragma pop

/* 80126F3C-80127C54 0D18+00 s=2 e=0 z=0  None .text      changeLink__9daAlink_cFi */
//	80126F4C: 803621CC (_savegpr_25)
//	80126F58: 8038D658 (lit_3757)
//	80126F5C: 8038D658 (lit_3757)
//	80126F64: 8015F168 (setAnimeHeap__14daPy_anmHeap_cFv)
//	80126FA8: 80392094 (d_a_d_a_alink__stringBase0)
//	80126FAC: 80392094 (d_a_d_a_alink__stringBase0)
//	80126FB8: 804061C0 (g_dComIfG_gameInfo)
//	80126FBC: 804061C0 (g_dComIfG_gameInfo)
//	80126FD0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80126FE0: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80126FE8: 80392094 (d_a_d_a_alink__stringBase0)
//	80126FEC: 80392094 (d_a_d_a_alink__stringBase0)
//	80127000: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80127014: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	8012701C: 80392094 (d_a_d_a_alink__stringBase0)
//	80127020: 80392094 (d_a_d_a_alink__stringBase0)
//	80127034: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80127048: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127054: 804061C0 (g_dComIfG_gameInfo)
//	80127058: 804061C0 (g_dComIfG_gameInfo)
//	80127074: 80452C58 (l_bArcName)
//	80127078: 80392094 (d_a_d_a_alink__stringBase0)
//	8012707C: 80392094 (d_a_d_a_alink__stringBase0)
//	80127094: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	801270A8: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	801270B0: 80452C58 (l_bArcName)
//	801270B4: 80392094 (d_a_d_a_alink__stringBase0)
//	801270B8: 80392094 (d_a_d_a_alink__stringBase0)
//	801270C8: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	801270DC: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	801270E4: 80452C58 (l_bArcName)
//	801270E8: 80392094 (d_a_d_a_alink__stringBase0)
//	801270EC: 80392094 (d_a_d_a_alink__stringBase0)
//	801270FC: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127110: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127124: 80452C68 (l_zArcName)
//	80127128: 80392094 (d_a_d_a_alink__stringBase0)
//	8012712C: 80392094 (d_a_d_a_alink__stringBase0)
//	80127144: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127158: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127160: 80452C68 (l_zArcName)
//	80127164: 80392094 (d_a_d_a_alink__stringBase0)
//	80127168: 80392094 (d_a_d_a_alink__stringBase0)
//	80127178: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	8012718C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127194: 80452C68 (l_zArcName)
//	80127198: 80392094 (d_a_d_a_alink__stringBase0)
//	8012719C: 80392094 (d_a_d_a_alink__stringBase0)
//	801271AC: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	801271C0: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	801271D4: 80452C70 (l_mArcName)
//	801271D8: 80392094 (d_a_d_a_alink__stringBase0)
//	801271DC: 80392094 (d_a_d_a_alink__stringBase0)
//	801271F4: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127208: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127210: 80452C70 (l_mArcName)
//	80127214: 80392094 (d_a_d_a_alink__stringBase0)
//	80127218: 80392094 (d_a_d_a_alink__stringBase0)
//	80127228: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	8012723C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127244: 80452C70 (l_mArcName)
//	80127248: 80392094 (d_a_d_a_alink__stringBase0)
//	8012724C: 80392094 (d_a_d_a_alink__stringBase0)
//	8012725C: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127270: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127278: 804061C0 (g_dComIfG_gameInfo)
//	8012727C: 804061C0 (g_dComIfG_gameInfo)
//	80127294: 800BB324 (setMagicArmorBrk__9daAlink_cFi)
//	801272A4: 800BB324 (setMagicArmorBrk__9daAlink_cFi)
//	801272B0: 80452CB0 (lit_6025)
//	801272F4: 80452C60 (l_kArcName)
//	801272F8: 80392094 (d_a_d_a_alink__stringBase0)
//	801272FC: 80392094 (d_a_d_a_alink__stringBase0)
//	80127314: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127328: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127330: 80452C60 (l_kArcName)
//	80127334: 80392094 (d_a_d_a_alink__stringBase0)
//	80127338: 80392094 (d_a_d_a_alink__stringBase0)
//	80127348: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	8012735C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127364: 80452C60 (l_kArcName)
//	80127368: 80392094 (d_a_d_a_alink__stringBase0)
//	8012736C: 80392094 (d_a_d_a_alink__stringBase0)
//	8012737C: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127390: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	801273A4: 804061C0 (g_dComIfG_gameInfo)
//	801273A8: 804061C0 (g_dComIfG_gameInfo)
//	801273BC: 80392094 (d_a_d_a_alink__stringBase0)
//	801273C0: 80392094 (d_a_d_a_alink__stringBase0)
//	801273C8: 804061C0 (g_dComIfG_gameInfo)
//	801273CC: 804061C0 (g_dComIfG_gameInfo)
//	801273DC: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	801273F4: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127404: 80392094 (d_a_d_a_alink__stringBase0)
//	80127408: 80392094 (d_a_d_a_alink__stringBase0)
//	8012741C: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127434: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127440: 80392094 (d_a_d_a_alink__stringBase0)
//	80127444: 80392094 (d_a_d_a_alink__stringBase0)
//	8012744C: 804061C0 (g_dComIfG_gameInfo)
//	80127450: 804061C0 (g_dComIfG_gameInfo)
//	80127464: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127484: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	801274A8: 80392094 (d_a_d_a_alink__stringBase0)
//	801274AC: 80392094 (d_a_d_a_alink__stringBase0)
//	801274BC: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	801274D0: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	801274DC: 80392094 (d_a_d_a_alink__stringBase0)
//	801274E0: 80392094 (d_a_d_a_alink__stringBase0)
//	801274F0: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127508: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80127514: 80392094 (d_a_d_a_alink__stringBase0)
//	80127518: 80392094 (d_a_d_a_alink__stringBase0)
//	80127528: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127530: 80452CC0 (lit_6108)
//	80127544: 8032B1D4 (searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP12J3DModelData)
//	80127550: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	80127558: 80392094 (d_a_d_a_alink__stringBase0)
//	8012755C: 80392094 (d_a_d_a_alink__stringBase0)
//	8012756C: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80127580: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	8012758C: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	80127594: 804061C0 (g_dComIfG_gameInfo)
//	80127598: 804061C0 (g_dComIfG_gameInfo)
//	801275B8: 80140338 (changeModelDataDirect__9daAlink_cFi)
//	80127630: 804061C0 (g_dComIfG_gameInfo)
//	80127634: 804061C0 (g_dComIfG_gameInfo)
//	801278BC: 80101890 (checkZoraWearMaskDraw__9daAlink_cFv)
//	80127950: 80392094 (d_a_d_a_alink__stringBase0)
//	80127954: 80392094 (d_a_d_a_alink__stringBase0)
//	8012795C: 8009C964 (entry__8dEyeHL_cFP12J3DModelDataPCc)
//	80127978: 80110BEC (daAlink_kandelaarModelCallBack__FP8J3DJointi)
//	8012797C: 80110BEC (daAlink_kandelaarModelCallBack__FP8J3DJointi)
//	8012798C: 8010903C (checkHookshotReadyMaterialOffMode__9daAlink_cCFv)
//	8012799C: 80109070 (setHookshotReadyMaterial__9daAlink_cFv)
//	801279D0: 80126740 (changeCommon__9daAlink_cFv)
//	801279E8: 803B29AC (l_jntColData)
//	801279EC: 803B29AC (l_jntColData)
//	801279F8: 80035CA0 (init__9dJntCol_cFP10fopAc_ac_cPC13dJntColData_cP8J3DModeli)
//	80127A18: 80453138 (lit_43529)
//	80127A34: 80452D88 (lit_8782)
//	80127A44: 80450690 (l_autoUpHeight)
//	80127A4C: 80450694 (l_autoDownHeight)
//	80127A50: 80452ED4 (lit_18929)
//	80127A6C: 80439A20 (sincosTable___5JMath)
//	80127A70: 80439A20 (sincosTable___5JMath)
//	80127A9C: 8045313C (lit_43530)
//	80127AA4: 80453140 (lit_43531)
//	80127AC4: 80127CAC (offWolfEyeUp__9daAlink_cFv)
//	80127AC8: 80452CB8 (lit_6040)
//	80127AF0: 80452D24 (lit_7450)
//	80127AF8: 80452DBC (lit_10042)
//	80127B14: 800AA714 (resetWolfAtCollision__9daAlink_cFv)
//	80127B1C: 80138F18 (resetWolfBallGrab__9daAlink_cFv)
//	80127B2C: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	80127B44: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	80127BE8: 80430D24 (BaseY__4cXyz)
//	80127BEC: 80430D24 (BaseY__4cXyz)
//	80127C40: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeLink(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeLink__9daAlink_cFi.s"
}
#pragma pop

/* 80127C54-80127CAC 0058+00 s=2 e=0 z=0  None .text      onWolfEyeUp__9daAlink_cFv */
//	80127C7C: 802C3AFC (setWolfEyeOpen__14Z2CreatureLinkFb)
//	80127C80: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	80127C84: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onWolfEyeUp() {
    nofralloc
#include "asm/d/a/d_a_alink/onWolfEyeUp__9daAlink_cFv.s"
}
#pragma pop

/* 80127CAC-80127CF0 0044+00 s=5 e=0 z=0  None .text      offWolfEyeUp__9daAlink_cFv */
//	80127CDC: 802C3AFC (setWolfEyeOpen__14Z2CreatureLinkFb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::offWolfEyeUp() {
    nofralloc
#include "asm/d/a/d_a_alink/offWolfEyeUp__9daAlink_cFv.s"
}
#pragma pop

/* 80127CF0-80127D14 0024+00 s=1 e=0 z=0  None .text      wolfSenseTrigger__9daAlink_cFv */
//	80127D00: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfSenseTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/wolfSenseTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 80127D14-80127D2C 0018+00 s=1 e=0 z=0  None .text      setWolfSenceStatus__9daAlink_cFUc */
//	80127D14: 804061C0 (g_dComIfG_gameInfo)
//	80127D18: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfSenceStatus(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfSenceStatus__9daAlink_cFUc.s"
}
#pragma pop

/* 80127D2C-80127D50 0024+00 s=1 e=0 z=0  None .text      wolfClawTrigger__9daAlink_cFv */
//	80127D3C: 800B25CC (itemTriggerCheck__9daAlink_cFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfClawTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/wolfClawTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 80127D50-80127D68 0018+00 s=2 e=0 z=0  None .text      setWolfDigStatus__9daAlink_cFUc */
//	80127D54: 804061C0 (g_dComIfG_gameInfo)
//	80127D58: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfDigStatus(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfDigStatus__9daAlink_cFUc.s"
}
#pragma pop

/* 80127D68-80127DC4 005C+00 s=4 e=0 z=0  None .text      checkWolfShapeReverse__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfShapeReverse() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfShapeReverse__9daAlink_cCFv.s"
}
#pragma pop

/* 80127DC4-80127E08 0044+00 s=1 e=0 z=0  None .text      checkWolfSideStep__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfSideStep() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfSideStep__9daAlink_cCFv.s"
}
#pragma pop

/* 80127E08-80127F20 0118+00 s=1 e=0 z=0  None .text      setWolfTailAngle__9daAlink_cFv */
//	80127E18: 803621D4 (_savegpr_27)
//	80127E7C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80127EC0: 80452C98 (lit_5943)
//	80127EC4: 80452CB0 (lit_6025)
//	80127F0C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfTailAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfTailAngle__9daAlink_cFv.s"
}
#pragma pop

/* 80127F20-80127F50 0030+00 s=5 e=0 z=0  None .text      checkWolfSlowDash__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfSlowDash() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfSlowDash__9daAlink_cFv.s"
}
#pragma pop

/* 80127F50-80128478 0528+00 s=1 e=0 z=0  None .text      setSpeedAndAngleWolf__9daAlink_cFv */
//	80127F90: 803621CC (_savegpr_25)
//	80127F98: 80452CC0 (lit_6108)
//	80127FA8: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80127FAC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80127FBC: 80127F20 (checkWolfSlowDash__9daAlink_cFv)
//	80127FC8: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80127FCC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80127FE4: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80127FE8: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80127FF4: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80127FF8: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80128000: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80128004: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80128010: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	80128014: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	80128030: 80115C20 (checkEventRun__9daAlink_cCFv)
//	8012803C: 80452CA4 (lit_6021)
//	8012806C: 80270E24 (cLib_distanceAngleS__Fss)
//	8012807C: 803650D0 (abs)
//	80128098: 80452DE4 (lit_12328)
//	801280A8: 80452FDC (lit_27477)
//	801280C0: 80452DE4 (lit_12328)
//	801280FC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012810C: 80452CAC (lit_6023)
//	80128138: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012813C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80128154: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	80128158: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	80128180: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80128190: 80452CAC (lit_6023)
//	801281BC: 80452CB0 (lit_6025)
//	801281FC: 80452CB0 (lit_6025)
//	80128244: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80128250: 8012A02C (wolfSideBgCheck__9daAlink_cFs)
//	80128274: 80270E24 (cLib_distanceAngleS__Fss)
//	80128290: 800B3F2C (getStickAngleDistanceRate__9daAlink_cFv)
//	801282C4: 80452EA8 (lit_16570)
//	801282C8: 80452CB8 (lit_6040)
//	801282E0: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	80128314: 80270E24 (cLib_distanceAngleS__Fss)
//	80128338: 80452CA4 (lit_6021)
//	80128358: 80127D68 (checkWolfShapeReverse__9daAlink_cCFv)
//	8012839C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	801283E8: 800B3500 (checkAttentionState__9daAlink_cFv)
//	80128414: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012842C: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	80128464: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleWolf() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleWolf__9daAlink_cFv.s"
}
#pragma pop

/* 80128478-80128798 0320+00 s=2 e=0 z=0  None .text      setSpeedAndAngleWolfAtn__9daAlink_cFv */
//	80128498: 803621D8 (_savegpr_28)
//	801284AC: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	801284B0: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	801284C0: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	801284C4: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	801284FC: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	80128500: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	80128510: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80128524: 800E794C (getChainStickAngleY__9daAlink_cCFs)
//	80128538: 80452CA4 (lit_6021)
//	80128554: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	80128588: 80452CBC (lit_6041)
//	801285A8: 80128F0C (checkWolfAtnMoveBack__9daAlink_cFs)
//	801285D4: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	801285D8: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	801285E8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	801285F4: 8012A02C (wolfSideBgCheck__9daAlink_cFs)
//	80128610: 80439A20 (sincosTable___5JMath)
//	80128614: 80439A20 (sincosTable___5JMath)
//	80128640: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80128654: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	80128664: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80128674: 80452CA4 (lit_6021)
//	801286B0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	801286DC: 80452CC0 (lit_6108)
//	801286E4: 80127D68 (checkWolfShapeReverse__9daAlink_cCFv)
//	80128710: 80270E24 (cLib_distanceAngleS__Fss)
//	80128738: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	8012873C: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	8012875C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012876C: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	80128784: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleWolfAtn() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleWolfAtn__9daAlink_cFv.s"
}
#pragma pop

/* 80128798-8012880C 0074+00 s=4 e=0 z=0  None .text      checkWolfAtnWait__9daAlink_cFv */
//	801287B0: 800DC548 (checkEnemyGroup__9daAlink_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfAtnWait() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfAtnWait__9daAlink_cFv.s"
}
#pragma pop

/* 8012880C-80128844 0038+00 s=27 e=0 z=0  None .text
 * checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM */
//	80128820: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80128824: 80391010 (m_wlAnmDataTable__9daAlink_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUnderMove0BckNoArcWolf(daAlink_c::daAlink_WANM param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM.s"
}
#pragma pop

/* 80128844-80128F0C 06C8+00 s=11 e=0 z=0  None .text      setBlendWolfMoveAnime__9daAlink_cFf */
//	801288B4: 803621D0 (_savegpr_26)
//	801288C0: 8038D658 (lit_3757)
//	801288C4: 8038D658 (lit_3757)
//	801288D4: 80452CB8 (lit_6040)
//	801288DC: 80439A20 (sincosTable___5JMath)
//	801288E0: 80439A20 (sincosTable___5JMath)
//	8012898C: 800B3500 (checkAttentionState__9daAlink_cFv)
//	801289A4: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	801289B4: 800B21EC (checkSlope__9daAlink_cCFv)
//	801289D4: 800B3500 (checkAttentionState__9daAlink_cFv)
//	801289EC: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	80128A48: 800BB4B8 (checkHeavyStateOn__9daAlink_cFii)
//	80128A5C: 80452EDC (lit_19240)
//	80128A9C: 803650D0 (abs)
//	80128AAC: 800B3500 (checkAttentionState__9daAlink_cFv)
//	80128ABC: 803650D0 (abs)
//	80128AC0: 80452CB0 (lit_6025)
//	80128ADC: 80452DE4 (lit_12328)
//	80128AE4: 80453100 (lit_41718)
//	80128AEC: 80452CB8 (lit_6040)
//	80128AFC: 80452CB8 (lit_6040)
//	80128B20: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	80128B2C: 800B3500 (checkAttentionState__9daAlink_cFv)
//	80128B54: 80452CC0 (lit_6108)
//	80128B64: 80347138 (PSVECSquareMag)
//	80128B68: 80452CB8 (lit_6040)
//	80128B78: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80128B88: 80452CB8 (lit_6040)
//	80128B90: 800B21EC (checkSlope__9daAlink_cCFv)
//	80128BD0: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	80128BDC: 800B21EC (checkSlope__9daAlink_cCFv)
//	80128BF4: 80452CB8 (lit_6040)
//	80128C10: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	80128C2C: 80452CB8 (lit_6040)
//	80128C58: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	80128C68: 800B3500 (checkAttentionState__9daAlink_cFv)
//	80128C9C: 80452CB8 (lit_6040)
//	80128CD4: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	80128CEC: 80452CB8 (lit_6040)
//	80128D08: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	80128D24: 80452CB8 (lit_6040)
//	80128D40: 80127F20 (checkWolfSlowDash__9daAlink_cFv)
//	80128DA0: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	80128DB0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80128DD4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80128DF8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80128E1C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80128E34: 800A7950 (checkWindSpeedOnAngle__9daAlink_cCFv)
//	80128E60: 800AD340 (setUpperAnimeBase__9daAlink_cFUs)
//	80128E68: 80452EB4 (lit_17382)
//	80128E6C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80128EF8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendWolfMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendWolfMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 80128F0C-80128F5C 0050+00 s=2 e=0 z=0  None .text      checkWolfAtnMoveBack__9daAlink_cFs */
//	80128F0C: 80439A20 (sincosTable___5JMath)
//	80128F10: 80439A20 (sincosTable___5JMath)
//	80128F30: 80453144 (lit_44003)
//	80128F44: 80453148 (lit_44004)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfAtnMoveBack(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfAtnMoveBack__9daAlink_cFs.s"
}
#pragma pop

/* 80128F5C-80129114 01B8+00 s=5 e=0 z=0  None .text      setWolfAtnMoveDirection__9daAlink_cFv */
//	80128F6C: 803621DC (_savegpr_29)
//	80128F74: 800B3500 (checkAttentionState__9daAlink_cFv)
//	80128FA0: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80128FB4: 800E794C (getChainStickAngleY__9daAlink_cCFs)
//	80128FE8: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80128FF8: 80452CA4 (lit_6021)
//	80129014: 8012A02C (wolfSideBgCheck__9daAlink_cFs)
//	80129050: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80129080: 80452CA4 (lit_6021)
//	80129094: 80128F0C (checkWolfAtnMoveBack__9daAlink_cFs)
//	801290B0: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	801290E8: 80452CBC (lit_6041)
//	80129100: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfAtnMoveDirection() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfAtnMoveDirection__9daAlink_cFv.s"
}
#pragma pop

/* 80129114-8012933C 0228+00 s=2 e=0 z=0  None .text      setBlendWolfAtnMoveAnime__9daAlink_cFf */
//	80129134: 803621DC (_savegpr_29)
//	80129140: 8038D658 (lit_3757)
//	80129144: 8038D658 (lit_3757)
//	8012914C: 800E7894 (checkSetChainPullAnime__9daAlink_cFs)
//	80129174: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012919C: 80452DA8 (lit_9652)
//	801291A4: 80452CB8 (lit_6040)
//	801291B0: 80452CC4 (lit_6109)
//	801291B4: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	801291D0: 8012933C (setBlendWolfAtnBackMoveAnime__9daAlink_cFf)
//	8012920C: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	80129214: 80439A20 (sincosTable___5JMath)
//	80129218: 80439A20 (sincosTable___5JMath)
//	80129268: 80128798 (checkWolfAtnWait__9daAlink_cFv)
//	801292AC: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	801292E8: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	801292F8: 80452CB8 (lit_6040)
//	80129310: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	80129328: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendWolfAtnMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendWolfAtnMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 8012933C-8012948C 0150+00 s=1 e=0 z=0  None .text      setBlendWolfAtnBackMoveAnime__9daAlink_cFf
 */
//	8012935C: 803621DC (_savegpr_29)
//	80129368: 8038D658 (lit_3757)
//	8012936C: 8038D658 (lit_3757)
//	80129388: 80452CB8 (lit_6040)
//	80129390: 80439A20 (sincosTable___5JMath)
//	80129394: 80439A20 (sincosTable___5JMath)
//	801293F4: 80128798 (checkWolfAtnWait__9daAlink_cFv)
//	80129438: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	80129448: 80452CB8 (lit_6040)
//	80129460: 8012948C
//(setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif)
//	80129478: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendWolfAtnBackMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendWolfAtnBackMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 8012948C-80129678 01EC+00 s=3 e=0 z=0  None .text
 * setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif */
//	801294BC: 803621CC (_savegpr_25)
//	801294E8: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	801294EC: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	801294F8: 800A3D0C (getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl)
//	80129520: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80129524: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80129530: 800A3D0C (getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl)
//	80129558: 80452CC0 (lit_6108)
//	80129564: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80129568: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80129590: 800AC754
//(commonDoubleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformfffi)
//	80129594: 80452CC0 (lit_6108)
//	801295B4: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	801295C0: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	801295C8: 801373F8 (checkWolfLieCode__9daAlink_cFv)
//	801295E0: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	801295E4: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80129620: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80129624: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80129664: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDoubleAnimeWolf(f32 param_0, f32 param_1, f32 param_2,
                                       daAlink_c::daAlink_WANM param_3,
                                       daAlink_c::daAlink_WANM param_4, int param_5, f32 param_6) {
    nofralloc
#include "asm/d/a/d_a_alink/setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif.s"
}
#pragma pop

/* 80129678-801296A8 0030+00 s=35 e=0 z=0  None .text
 * setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM */
//	80129684: 80452CB8 (lit_6040)
//	80129688: 80452CC0 (lit_6108)
//	80129690: 80452CC4 (lit_6109)
//	80129694: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeWolfBase(daAlink_c::daAlink_WANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM.s"
}
#pragma pop

/* 801296A8-801296D8 0030+00 s=3 e=0 z=0  None .text
 * setSingleAnimeWolfBaseMorf__9daAlink_cFQ29daAlink_c12daAlink_WANMf */
//	801296B8: 80452CB8 (lit_6040)
//	801296BC: 80452CC0 (lit_6108)
//	801296C4: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeWolfBaseMorf(daAlink_c::daAlink_WANM param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeWolfBaseMorf__9daAlink_cFQ29daAlink_c12daAlink_WANMf.s"
}
#pragma pop

/* 801296D8-80129704 002C+00 s=44 e=0 z=0  None .text
 * setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff */
//	801296E8: 80452CC0 (lit_6108)
//	801296F0: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeWolfBaseSpeed(daAlink_c::daAlink_WANM param_0, f32 param_1,
                                                f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff.s"
}
#pragma pop

/* 80129704-80129848 0144+00 s=29 e=0 z=0  None .text
 * setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf */
//	8012972C: 803621D8 (_savegpr_28)
//	80129750: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80129754: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80129768: 800A3D0C (getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl)
//	8012978C: 800ACD40 (commonSingleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformffs)
//	80129790: 80452CC0 (lit_6108)
//	801297B0: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	801297BC: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	801297C4: 801373F8 (checkWolfLieCode__9daAlink_cFv)
//	801297DC: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	801297E0: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80129800: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80129804: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	80129834: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeWolf(daAlink_c::daAlink_WANM param_0, f32 param_1, f32 param_2,
                                       s16 param_3, f32 param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf.s"
}
#pragma pop

/* 80129848-8012987C 0034+00 s=53 e=0 z=0  None .text
 * setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c */
//	80129868: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeWolfParam(daAlink_c::daAlink_WANM param_0,
                                            daAlinkHIO_anm_c const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c.s"
}
#pragma pop

/* 8012987C-80129958 00DC+00 s=5 e=0 z=0  None .text      checkWolfLandAction__9daAlink_cFi */
//	801298A0: 80452D88 (lit_8782)
//	801298B4: 800D6F2C (checkNoLandDamageSlidePolygon__9daAlink_cFv)
//	801298C0: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	801298C4: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	801298E4: 80136C18 (procWolfLandDamageInit__9daAlink_cFi)
//	8012990C: 8012F138 (procWolfLandInit__9daAlink_cFv)
//	80129930: 80136C18 (procWolfLandDamageInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLandAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLandAction__9daAlink_cFi.s"
}
#pragma pop

/* 80129958-801299A8 0050+00 s=1 e=0 z=1  None .text      checkMidnaUseAbility__9daAlink_cCFv */
//	8012996C: 804061C0 (g_dComIfG_gameInfo)
//	80129970: 804061C0 (g_dComIfG_gameInfo)
//	80129980: 801AC2E0 (dKy_withwarp_capture_check__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMidnaUseAbility() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkMidnaUseAbility__9daAlink_cCFv.s"
}
#pragma pop

/* 801299A8-80129A80 00D8+00 s=1 e=0 z=0  None .text      checkWolfUseAbility__9daAlink_cFv */
//	801299C8: 80133EF0 (checkMidnaLockJumpPoint__9daAlink_cCFv)
//	801299E4: 80127CAC (offWolfEyeUp__9daAlink_cFv)
//	801299EC: 804061C0 (g_dComIfG_gameInfo)
//	801299F0: 804061C0 (g_dComIfG_gameInfo)
//	801299FC: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80129A18: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80129A28: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	80129A2C: 8038F9F8 (m__18daAlinkHIO_wolf_c0)
//	80129A40: 80127CF0 (wolfSenseTrigger__9daAlink_cFv)
//	80129A5C: 80127C54 (onWolfEyeUp__9daAlink_cFv)
//	80129A68: 80127CAC (offWolfEyeUp__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfUseAbility() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfUseAbility__9daAlink_cFv.s"
}
#pragma pop

/* 80129A80-80129B44 00C4+00 s=13 e=0 z=0  None .text      checkWolfGroundSpecialMode__9daAlink_cFv
 */
//	80129AC0: 800C77F4 (procCoMetamorphoseInit__9daAlink_cFv)
//	80129AE0: 80135160 (procWolfGiantPuzzleInit__9daAlink_cFv)
//	80129AF4: 8013DB6C (procWolfCargoCarryInit__9daAlink_cFv)
//	80129B00: 800B5F6C (checkSlideAction__9daAlink_cFv)
//	80129B24: 80136F54 (procWolfScreamWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfGroundSpecialMode() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfGroundSpecialMode__9daAlink_cFv.s"
}
#pragma pop

/* 80129B44-8012A02C 04E8+00 s=46 e=0 z=0  None .text      checkNextActionWolf__9daAlink_cFi */
//	80129B54: 803621DC (_savegpr_29)
//	80129B60: 8038D658 (lit_3757)
//	80129B64: 8038D658 (lit_3757)
//	80129B6C: 80118D7C (checkDeadAction__9daAlink_cFi)
//	80129BAC: 80452CA4 (lit_6021)
//	80129BDC: 8012D050 (procWolfMidnaRideShockInit__9daAlink_cFv)
//	80129BE8: 800B3500 (checkAttentionState__9daAlink_cFv)
//	80129C20: 80452CA4 (lit_6021)
//	80129C30: 800B3500 (checkAttentionState__9daAlink_cFv)
//	80129C40: 80128478 (setSpeedAndAngleWolfAtn__9daAlink_cFv)
//	80129C4C: 80127F50 (setSpeedAndAngleWolf__9daAlink_cFv)
//	80129C54: 800B02BC (setFrontWallType__9daAlink_cFv)
//	80129C5C: 800B21EC (checkSlope__9daAlink_cCFv)
//	80129CBC: 80452D84 (lit_8781)
//	80129CE8: 800B3500 (checkAttentionState__9daAlink_cFv)
//	80129D14: 80127F20 (checkWolfSlowDash__9daAlink_cFv)
//	80129D80: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	80129D9C: 801371FC (checkWolfLieContinue__9daAlink_cFi)
//	80129DB0: 80137420 (procWolfLieStartInit__9daAlink_cFi)
//	80129DBC: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	80129DE0: 80131450 (checkWolfRopeHit__9daAlink_cCFP12dCcD_GObjInfPC4cXyzi)
//	80129DFC: 80131450 (checkWolfRopeHit__9daAlink_cCFP12dCcD_GObjInfPC4cXyzi)
//	80129E10: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	80129E20: 80131C74 (procWolfRopeMoveInit__9daAlink_cFii)
//	80129E34: 80452CA4 (lit_6021)
//	80129E4C: 80452CA4 (lit_6021)
//	80129E68: 8012BFA8 (checkWolfWaitSlipPolygon__9daAlink_cFv)
//	80129E80: 800B3500 (checkAttentionState__9daAlink_cFv)
//	80129E90: 8012DBA8 (procWolfAtnActorMoveInit__9daAlink_cFv)
//	80129EA8: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80129EB8: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80129EC8: 80452FDC (lit_27477)
//	80129ED8: 803650D0 (abs)
//	80129F00: 80270E24 (cLib_distanceAngleS__Fss)
//	80129F20: 8012F840 (procWolfSlipTurnInit__9daAlink_cFi)
//	80129F3C: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80129F4C: 800B58EC (checkWaitAction__9daAlink_cFv)
//	80129F5C: 800B58EC (checkWaitAction__9daAlink_cFv)
//	80129F6C: 80452CA4 (lit_6021)
//	80129F88: 803650D0 (abs)
//	80129F9C: 80270E24 (cLib_distanceAngleS__Fss)
//	80129FF8: 8012F634 (procWolfSlipInit__9daAlink_cFv)
//	8012A008: 8012D380 (procWolfMoveInit__9daAlink_cFv)
//	8012A018: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionWolf(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionWolf__9daAlink_cFi.s"
}
#pragma pop

/* 8012A02C-8012A228 01FC+00 s=3 e=0 z=0  None .text      wolfSideBgCheck__9daAlink_cFs */
//	8012A07C: 80439A20 (sincosTable___5JMath)
//	8012A080: 80439A20 (sincosTable___5JMath)
//	8012A0A4: 80452E68 (lit_14955)
//	8012A0F8: 80452DBC (lit_10042)
//	8012A118: 80452DBC (lit_10042)
//	8012A140: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	8012A150: 80452D00 (lit_6895)
//	8012A190: 80452DBC (lit_10042)
//	8012A1B0: 80452DBC (lit_10042)
//	8012A1D8: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfSideBgCheck(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/wolfSideBgCheck__9daAlink_cFs.s"
}
#pragma pop

/* 8012A228-8012A330 0108+00 s=4 e=0 z=0  None .text      checkWolfAttackReverse__9daAlink_cFi */
//	8012A254: 800D1920 (checkAtShieldHit__9daAlink_cFR12dCcD_GObjInf)
//	8012A264: 8013C8C8 (procWolfAttackReverseInit__9daAlink_cFv)
//	8012A2AC: 80270E24 (cLib_distanceAngleS__Fss)
//	8012A2CC: 8012D8C0 (procWolfDashReverseInit__9daAlink_cFi)
//	8012A2E0: 804061C0 (g_dComIfG_gameInfo)
//	8012A2E4: 804061C0 (g_dComIfG_gameInfo)
//	8012A304: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	8012A30C: 8013C8C8 (procWolfAttackReverseInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfAttackReverse(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfAttackReverse__9daAlink_cFi.s"
}
#pragma pop

/* 8012A330-8012A41C 00EC+00 s=1 e=0 z=0  None .text      checkWolfBarrierHitReverse__9daAlink_cFv
 */
//	8012A384: 8012D8C0 (procWolfDashReverseInit__9daAlink_cFi)
//	8012A3A0: 80270E24 (cLib_distanceAngleS__Fss)
//	8012A3B4: 800C1CEC (setFrontRollCrashShock__9daAlink_cFUc)
//	8012A3C4: 800D8F3C (procDamageInit__9daAlink_cFP12dCcD_GObjInfi)
//	8012A3D0: 800C5160 (procFrontRollSuccessInit__9daAlink_cFv)
//	8012A3DC: 800C1CEC (setFrontRollCrashShock__9daAlink_cFUc)
//	8012A3FC: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfBarrierHitReverse() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfBarrierHitReverse__9daAlink_cFv.s"
}
#pragma pop

/* 8012A41C-8012A498 007C+00 s=2 e=0 z=0  None .text
 * checkWolfBarrierWallHit__9daAlink_cFR13cBgS_PolyInfo         */
//	8012A43C: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	8012A458: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfBarrierWallHit(cBgS_PolyInfo& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfBarrierWallHit__9daAlink_cFR13cBgS_PolyInfo.s"
}
#pragma pop

/* 8012A498-8012ACCC 0834+00 s=1 e=0 z=0  None .text      wolfBgCheck__9daAlink_cFv */
//	8012A4D0: 803621CC (_savegpr_25)
//	8012A530: 80439A20 (sincosTable___5JMath)
//	8012A534: 80439A20 (sincosTable___5JMath)
//	8012A54C: 80452CC0 (lit_6108)
//	8012A550: 80452CB8 (lit_6040)
//	8012A578: 803A37C0 (__vt__8cM3dGPla)
//	8012A57C: 803A37C0 (__vt__8cM3dGPla)
//	8012A588: 804061C0 (g_dComIfG_gameInfo)
//	8012A58C: 804061C0 (g_dComIfG_gameInfo)
//	8012A5D4: 80452DCC (lit_10532)
//	8012A5DC: 80452E68 (lit_14955)
//	8012A630: 800F81C0 (getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc)
//	8012A644: 8007519C (GetPolyAttackThrough__4dBgSFRC13cBgS_PolyInfo)
//	8012A664: 8012A41C (checkWolfBarrierWallHit__9daAlink_cFR13cBgS_PolyInfo)
//	8012A678: 80123ED0 (setWolfBarrierHitEffect__9daAlink_cFR11dBgS_LinChk)
//	8012A698: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8012A6F4: 800F81C0 (getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc)
//	8012A708: 8007519C (GetPolyAttackThrough__4dBgSFRC13cBgS_PolyInfo)
//	8012A728: 8012A41C (checkWolfBarrierWallHit__9daAlink_cFR13cBgS_PolyInfo)
//	8012A73C: 80123ED0 (setWolfBarrierHitEffect__9daAlink_cFR11dBgS_LinChk)
//	8012A75C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8012A7A8: 80347138 (PSVECSquareMag)
//	8012A7B4: 80347138 (PSVECSquareMag)
//	8012A840: 803470B4 (PSVECSubtract)
//	8012A850: 803470B4 (PSVECSubtract)
//	8012A870: 800F81C0 (getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc)
//	8012A8B8: 800F81C0 (getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc)
//	8012A8E0: 80347138 (PSVECSquareMag)
//	8012A8EC: 80347138 (PSVECSquareMag)
//	8012A904: 80347090 (PSVECAdd)
//	8012A918: 80347090 (PSVECAdd)
//	8012A934: 80347090 (PSVECAdd)
//	8012A948: 80347090 (PSVECAdd)
//	8012A958: 803470B4 (PSVECSubtract)
//	8012A96C: 80267674 (cM_atan2s__Fff)
//	8012A990: 80267674 (cM_atan2s__Fff)
//	8012A9A0: 80452CC0 (lit_6108)
//	8012A9B4: 80347138 (PSVECSquareMag)
//	8012A9B8: 80452CC0 (lit_6108)
//	8012A9C8: 80452CE8 (lit_6846)
//	8012A9D0: 80452CF0 (lit_6847)
//	8012AA18: 80452CF8 (lit_6848)
//	8012AA24: 80450AE0 (__float_nan)
//	8012AA28: 80450AE0 (__float_nan)
//	8012AA94: 80450AE0 (__float_nan)
//	8012AA98: 80450AE0 (__float_nan)
//	8012AAA8: 80267674 (cM_atan2s__Fff)
//	8012AB24: 80453118 (lit_42493)
//	8012AB2C: 80452D50 (lit_8247)
//	8012AB80: 800F81C0 (getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc)
//	8012ABCC: 800F81C0 (getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc)
//	8012AC80: 803A37C0 (__vt__8cM3dGPla)
//	8012AC84: 803A37C0 (__vt__8cM3dGPla)
//	8012ACB8: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/wolfBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* 8012ACCC-8012AD1C 0050+00 s=1 e=0 z=0  None .text      changeWolfBlendRate__9daAlink_cFi */
//	8012ACFC: 80452CC0 (lit_6108)
//	8012AD10: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeWolfBlendRate(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeWolfBlendRate__9daAlink_cFi.s"
}
#pragma pop

/* 8012AD1C-8012B724 0A08+00 s=1 e=0 z=0  None .text      setWolfFootMatrix__9daAlink_cFv */
//	8012AD34: 803621C0 (_savegpr_22)
//	8012AD48: 8045314C (fFootJoint)
//	8012AD74: 803464B0 (PSMTXCopy)
//	8012ADC0: 80453150 (bFootJoint)
//	8012ADEC: 803464B0 (PSMTXCopy)
//	8012AE3C: 80452CC0 (lit_6108)
//	8012AE64: 803DD470 (now__14mDoMtx_stack_c)
//	8012AE68: 803DD470 (now__14mDoMtx_stack_c)
//	8012AE70: 8045314C (fFootJoint)
//	8012AEF8: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8012AF04: 8034739C (PSVECSquareDistance)
//	8012AF14: 80452CE8 (lit_6846)
//	8012AF1C: 80452CF0 (lit_6847)
//	8012AF64: 80452CF8 (lit_6848)
//	8012AF70: 80450AE0 (__float_nan)
//	8012AF74: 80450AE0 (__float_nan)
//	8012AFE0: 80450AE0 (__float_nan)
//	8012AFE4: 80450AE0 (__float_nan)
//	8012AFF8: 80346D6C (PSMTXMultVec)
//	8012B02C: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8012B038: 8034739C (PSVECSquareDistance)
//	8012B048: 80452CE8 (lit_6846)
//	8012B050: 80452CF0 (lit_6847)
//	8012B098: 80452CF8 (lit_6848)
//	8012B0A4: 80450AE0 (__float_nan)
//	8012B0A8: 80450AE0 (__float_nan)
//	8012B114: 80450AE0 (__float_nan)
//	8012B118: 80450AE0 (__float_nan)
//	8012B12C: 80346D6C (PSMTXMultVec)
//	8012B160: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8012B16C: 8034739C (PSVECSquareDistance)
//	8012B17C: 80452CE8 (lit_6846)
//	8012B184: 80452CF0 (lit_6847)
//	8012B1CC: 80452CF8 (lit_6848)
//	8012B1D8: 80450AE0 (__float_nan)
//	8012B1DC: 80450AE0 (__float_nan)
//	8012B248: 80450AE0 (__float_nan)
//	8012B24C: 80450AE0 (__float_nan)
//	8012B260: 80346D6C (PSMTXMultVec)
//	8012B294: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8012B2B8: 80452CC0 (lit_6108)
//	8012B2BC: 803DD470 (now__14mDoMtx_stack_c)
//	8012B2C0: 803DD470 (now__14mDoMtx_stack_c)
//	8012B2C8: 80453150 (bFootJoint)
//	8012B350: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8012B35C: 8034739C (PSVECSquareDistance)
//	8012B36C: 80452CE8 (lit_6846)
//	8012B374: 80452CF0 (lit_6847)
//	8012B3BC: 80452CF8 (lit_6848)
//	8012B3C8: 80450AE0 (__float_nan)
//	8012B3CC: 80450AE0 (__float_nan)
//	8012B438: 80450AE0 (__float_nan)
//	8012B43C: 80450AE0 (__float_nan)
//	8012B450: 80346D6C (PSMTXMultVec)
//	8012B484: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8012B490: 8034739C (PSVECSquareDistance)
//	8012B4A0: 80452CE8 (lit_6846)
//	8012B4A8: 80452CF0 (lit_6847)
//	8012B4F0: 80452CF8 (lit_6848)
//	8012B4FC: 80450AE0 (__float_nan)
//	8012B500: 80450AE0 (__float_nan)
//	8012B56C: 80450AE0 (__float_nan)
//	8012B570: 80450AE0 (__float_nan)
//	8012B584: 80346D6C (PSMTXMultVec)
//	8012B5B8: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8012B5C4: 8034739C (PSVECSquareDistance)
//	8012B5D4: 80452CE8 (lit_6846)
//	8012B5DC: 80452CF0 (lit_6847)
//	8012B624: 80452CF8 (lit_6848)
//	8012B630: 80450AE0 (__float_nan)
//	8012B634: 80450AE0 (__float_nan)
//	8012B6A0: 80450AE0 (__float_nan)
//	8012B6A4: 80450AE0 (__float_nan)
//	8012B6B8: 80346D6C (PSMTXMultVec)
//	8012B6EC: 8009DC6C (setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz)
//	8012B710: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfFootMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfFootMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 8012B724-8012BFA8 0884+00 s=1 e=0 z=0  None .text      wolfFootBgCheck__9daAlink_cFv */
//	8012B764: 803621A0 (__save_gpr)
//	8012B79C: 80391E18 (localFootOffset)
//	8012B7A0: 80391E18 (localFootOffset)
//	8012B7A8: 80346D6C (PSMTXMultVec)
//	8012B7BC: 80391E18 (localFootOffset)
//	8012B7C0: 80391E18 (localFootOffset)
//	8012B7C8: 80346D6C (PSMTXMultVec)
//	8012B7DC: 80391E18 (localFootOffset)
//	8012B7E0: 80391E18 (localFootOffset)
//	8012B7E8: 80346D6C (PSMTXMultVec)
//	8012B7FC: 80391E18 (localFootOffset)
//	8012B800: 80391E18 (localFootOffset)
//	8012B808: 80346D6C (PSMTXMultVec)
//	8012B850: 80452CC0 (lit_6108)
//	8012B874: 80439A20 (sincosTable___5JMath)
//	8012B878: 80439A20 (sincosTable___5JMath)
//	8012B888: 80452D00 (lit_6895)
//	8012B890: 80452CE0 (lit_6845)
//	8012B89C: 803DD470 (now__14mDoMtx_stack_c)
//	8012B8A0: 803DD470 (now__14mDoMtx_stack_c)
//	8012B8B0: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	8012B8B4: 803DD470 (now__14mDoMtx_stack_c)
//	8012B8B8: 803DD470 (now__14mDoMtx_stack_c)
//	8012B8C8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8012B8D4: 804061C0 (g_dComIfG_gameInfo)
//	8012B8D8: 804061C0 (g_dComIfG_gameInfo)
//	8012B8E0: 80452D00 (lit_6895)
//	8012B8E4: 80452DA4 (lit_9138)
//	8012B92C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8012B94C: 80452CC0 (lit_6108)
//	8012B95C: 80347138 (PSVECSquareMag)
//	8012B960: 80452D50 (lit_8247)
//	8012B9DC: 80450690 (l_autoUpHeight)
//	8012BA04: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8012BA10: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8012BA50: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	8012BA84: 803DD470 (now__14mDoMtx_stack_c)
//	8012BA88: 803DD470 (now__14mDoMtx_stack_c)
//	8012BA94: 80346D6C (PSMTXMultVec)
//	8012BB00: 800B1BAC (setSandShapeOffset__9daAlink_cFv)
//	8012BB10: 800A2C24 (setMatrixOffset__9daAlink_cFPff)
//	8012BB18: 800B172C (setSandDownBgCheckWallH__9daAlink_cFv)
//	8012BB24: 80452CC0 (lit_6108)
//	8012BB28: 800A2C24 (setMatrixOffset__9daAlink_cFPff)
//	8012BB90: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012BBBC: 80452DBC (lit_10042)
//	8012BBD0: 80452CC0 (lit_6108)
//	8012BC00: 800A2CE0 (setLegAngle__9daAlink_cFfP18daAlink_footData_cPsPsi)
//	8012BC3C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012BC54: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012BCB8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012BCF8: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8012BCFC: 803DD470 (now__14mDoMtx_stack_c)
//	8012BD00: 803DD470 (now__14mDoMtx_stack_c)
//	8012BD14: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8012BD18: 803DD470 (now__14mDoMtx_stack_c)
//	8012BD1C: 803DD470 (now__14mDoMtx_stack_c)
//	8012BD20: 80391E24 (frontOffset)
//	8012BD24: 80391E24 (frontOffset)
//	8012BD2C: 80346D6C (PSMTXMultVec)
//	8012BD38: 80452D14 (lit_7307)
//	8012BD3C: 80266B84 (__ml__4cXyzCFf)
//	8012BD4C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8012BD6C: 80453154 (lit_45401)
//	8012BD88: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8012BD94: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8012BDAC: 80452F1C (lit_20991)
//	8012BDC8: 80452DA4 (lit_9138)
//	8012BDDC: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	8012BDE4: 80452DA4 (lit_9138)
//	8012BE18: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8012BE24: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8012BE50: 80452DA4 (lit_9138)
//	8012BE64: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	8012BE6C: 80452DA4 (lit_9138)
//	8012BEA4: 803470B4 (PSVECSubtract)
//	8012BEAC: 80267150 (atan2sY_XZ__4cXyzCFv)
//	8012BF28: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012BF5C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012BF94: 803621EC (__restore_gpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfFootBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/wolfFootBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* 8012BFA8-8012C1F4 024C+00 s=6 e=0 z=0  None .text      checkWolfWaitSlipPolygon__9daAlink_cFv */
//	8012BFC0: 804061C0 (g_dComIfG_gameInfo)
//	8012BFC4: 804061C0 (g_dComIfG_gameInfo)
//	8012BFD4: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	8012C000: 803A37C0 (__vt__8cM3dGPla)
//	8012C004: 803A37C0 (__vt__8cM3dGPla)
//	8012C018: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8012C028: 802681E4 (cBgW_CheckBGround__Ff)
//	8012C034: 803A37C0 (__vt__8cM3dGPla)
//	8012C038: 803A37C0 (__vt__8cM3dGPla)
//	8012C054: 80452ED4 (lit_18929)
//	8012C058: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	8012C05C: 8038D8CC (m__19daAlinkHIO_slide_c0)
//	8012C074: 80439A20 (sincosTable___5JMath)
//	8012C078: 80439A20 (sincosTable___5JMath)
//	8012C094: 803A37C0 (__vt__8cM3dGPla)
//	8012C098: 803A37C0 (__vt__8cM3dGPla)
//	8012C0B0: 80452CC0 (lit_6108)
//	8012C0C4: 80347138 (PSVECSquareMag)
//	8012C0C8: 80452CC0 (lit_6108)
//	8012C0D8: 80452CE8 (lit_6846)
//	8012C0E0: 80452CF0 (lit_6847)
//	8012C128: 80452CF8 (lit_6848)
//	8012C134: 80450AE0 (__float_nan)
//	8012C138: 80450AE0 (__float_nan)
//	8012C1A4: 80450AE0 (__float_nan)
//	8012C1A8: 80450AE0 (__float_nan)
//	8012C1B0: 80267674 (cM_atan2s__Fff)
//	8012C1D0: 803A37C0 (__vt__8cM3dGPla)
//	8012C1D4: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfWaitSlipPolygon() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfWaitSlipPolygon__9daAlink_cFv.s"
}
#pragma pop

/* 8012C1F4-8012C308 0114+00 s=2 e=0 z=0  None .text      setWolfWaitSlip__9daAlink_cFv */
//	8012C210: 803A37C0 (__vt__8cM3dGPla)
//	8012C214: 803A37C0 (__vt__8cM3dGPla)
//	8012C21C: 804061C0 (g_dComIfG_gameInfo)
//	8012C220: 804061C0 (g_dComIfG_gameInfo)
//	8012C230: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8012C238: 80267128 (atan2sX_Z__4cXyzCFv)
//	8012C240: 80452CB8 (lit_6040)
//	8012C24C: 80452CC0 (lit_6108)
//	8012C270: 803650D0 (abs)
//	8012C284: 80453158 (lit_45501)
//	8012C294: 80452DB8 (lit_10041)
//	8012C2DC: 803A37C0 (__vt__8cM3dGPla)
//	8012C2E0: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfWaitSlip() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfWaitSlip__9daAlink_cFv.s"
}
#pragma pop

/* 8012C308-8012C30C 0004+00 s=4 e=0 z=0  None .text      checkWolfAtnDoCharge__9daAlink_cFv */
void daAlink_c::checkWolfAtnDoCharge() {
    /* empty function */
}

/* 8012C30C-8012CB0C 0800+00 s=1 e=0 z=0  None .text      setWolfChainPos__9daAlink_cFv */
//	8012C34C: 803621A4 (_savegpr_15)
//	8012C378: 80430CF4 (Zero__4cXyz)
//	8012C37C: 80430CF4 (Zero__4cXyz)
//	8012C3BC: 80391E30 (wolfChainBaseOffset)
//	8012C3C0: 80391E30 (wolfChainBaseOffset)
//	8012C3C8: 80346D6C (PSMTXMultVec)
//	8012C3DC: 80430D3C (BaseZ__4cXyz)
//	8012C3E0: 80430D3C (BaseZ__4cXyz)
//	8012C3E8: 80346E4C (PSMTXMultVecSR)
//	8012C3F0: 80267128 (atan2sX_Z__4cXyzCFv)
//	8012C3FC: 80267150 (atan2sY_XZ__4cXyzCFv)
//	8012C414: 80430D24 (BaseY__4cXyz)
//	8012C418: 80430D24 (BaseY__4cXyz)
//	8012C420: 80346E4C (PSMTXMultVecSR)
//	8012C42C: 80452CC0 (lit_6108)
//	8012C440: 80347138 (PSVECSquareMag)
//	8012C444: 80452CC0 (lit_6108)
//	8012C454: 80452CE8 (lit_6846)
//	8012C45C: 80452CF0 (lit_6847)
//	8012C4A4: 80452CF8 (lit_6848)
//	8012C4B0: 80450AE0 (__float_nan)
//	8012C4B4: 80450AE0 (__float_nan)
//	8012C520: 80450AE0 (__float_nan)
//	8012C524: 80450AE0 (__float_nan)
//	8012C534: 80267674 (cM_atan2s__Fff)
//	8012C55C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8012C560: 803DD470 (now__14mDoMtx_stack_c)
//	8012C564: 803DD470 (now__14mDoMtx_stack_c)
//	8012C574: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8012C578: 803DD470 (now__14mDoMtx_stack_c)
//	8012C57C: 803DD470 (now__14mDoMtx_stack_c)
//	8012C580: 80391E3C (wolfChainVec)
//	8012C584: 80391E3C (wolfChainVec)
//	8012C58C: 80346D6C (PSMTXMultVec)
//	8012C5A0: 80430CF4 (Zero__4cXyz)
//	8012C5A4: 80430CF4 (Zero__4cXyz)
//	8012C5C0: 80452D34 (lit_7710)
//	8012C650: 80430CF4 (Zero__4cXyz)
//	8012C654: 80430CF4 (Zero__4cXyz)
//	8012C670: 804061C0 (g_dComIfG_gameInfo)
//	8012C674: 804061C0 (g_dComIfG_gameInfo)
//	8012C67C: 8045315C (lit_45756)
//	8012C680: 80452CC0 (lit_6108)
//	8012C684: 80452CB8 (lit_6040)
//	8012C688: 803DD470 (now__14mDoMtx_stack_c)
//	8012C68C: 803DD470 (now__14mDoMtx_stack_c)
//	8012C690: 80391E3C (wolfChainVec)
//	8012C694: 80391E3C (wolfChainVec)
//	8012C698: 80452D30 (lit_7625)
//	8012C69C: 80452CC4 (lit_6109)
//	8012C6C4: 80430CF4 (Zero__4cXyz)
//	8012C6C8: 80430CF4 (Zero__4cXyz)
//	8012C6F0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8012C700: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8012C740: 80347138 (PSVECSquareMag)
//	8012C750: 80452CE8 (lit_6846)
//	8012C758: 80452CF0 (lit_6847)
//	8012C7A0: 80452CF8 (lit_6848)
//	8012C7AC: 80450AE0 (__float_nan)
//	8012C7B0: 80450AE0 (__float_nan)
//	8012C81C: 80450AE0 (__float_nan)
//	8012C820: 80450AE0 (__float_nan)
//	8012C834: 80267674 (cM_atan2s__Fff)
//	8012C85C: 80267674 (cM_atan2s__Fff)
//	8012C8C0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8012C8C8: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	8012C8D8: 80346D6C (PSMTXMultVec)
//	8012C900: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8012C90C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8012C930: 80267674 (cM_atan2s__Fff)
//	8012C938: 803A37C0 (__vt__8cM3dGPla)
//	8012C93C: 803A37C0 (__vt__8cM3dGPla)
//	8012C950: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8012C964: 8001DBD8 (fopAcM_getPolygonAngle__FPC8cM3dGPlas)
//	8012C9B0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8012C9B8: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	8012C9BC: 803DD470 (now__14mDoMtx_stack_c)
//	8012C9C0: 803DD470 (now__14mDoMtx_stack_c)
//	8012C9C4: 80391E3C (wolfChainVec)
//	8012C9C8: 80391E3C (wolfChainVec)
//	8012C9D0: 80346D6C (PSMTXMultVec)
//	8012C9D4: 803A37C0 (__vt__8cM3dGPla)
//	8012C9D8: 803A37C0 (__vt__8cM3dGPla)
//	8012C9EC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8012C9F8: 80452E08 (lit_14064)
//	8012C9FC: 80266B84 (__ml__4cXyzCFf)
//	8012CA64: 803DD470 (now__14mDoMtx_stack_c)
//	8012CA68: 803DD470 (now__14mDoMtx_stack_c)
//	8012CA74: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8012CA80: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	8012CA94: 803464B0 (PSMTXCopy)
//	8012CAF8: 803621F0 (_restgpr_15)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfChainPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfChainPos__9daAlink_cFv.s"
}
#pragma pop

/* 8012CB0C-8012CBE4 00D8+00 s=1 e=0 z=0  None .text      setWolfAnmVoice__9daAlink_cFv */
//	8012CB24: 803621D8 (_savegpr_28)
//	8012CB50: 80452CB0 (lit_6025)
//	8012CB80: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8012CB98: 80391E48 (label)
//	8012CB9C: 80391E48 (label)
//	8012CBD0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfAnmVoice() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfAnmVoice__9daAlink_cFv.s"
}
#pragma pop

/* 8012CBE4-8012CD28 0144+00 s=4 e=0 z=0  None .text      procWolfServiceWaitInit__9daAlink_cFi */
//	8012CC04: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012CC20: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8012CC44: 8026786C (cM_rnd__Fv)
//	8012CC48: 80452C98 (lit_5943)
//	8012CC5C: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8012CC68: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8012CC84: 80452CB8 (lit_6040)
//	8012CC88: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	8012CC8C: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	8012CC9C: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8012CCBC: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8012CCD4: 80452DE0 (lit_11673)
//	8012CCD8: 80267954 (cM_rndF__Ff)
//	8012CCDC: 80452DE0 (lit_11673)
//	8012CCF4: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfServiceWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfServiceWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012CD28-8012CF68 0240+00 s=1 e=0 z=0  None .text      procWolfServiceWait__9daAlink_cFv */
//	8012CD54: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012CD64: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	8012CD74: 80115C20 (checkEventRun__9daAlink_cCFv)
//	8012CD9C: 80452CC0 (lit_6108)
//	8012CDB0: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	8012CDBC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012CDD0: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012CDE4: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8012CE0C: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	8012CE10: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	8012CE1C: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8012CE38: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8012CE48: 8012CBE4 (procWolfServiceWaitInit__9daAlink_cFi)
//	8012CE58: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012CE84: 80452CBC (lit_6041)
//	8012CE88: 80452D14 (lit_7307)
//	8012CE8C: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8012CEAC: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012CEBC: 80452C9C (lit_5944)
//	8012CEC0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8012CEF4: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012CF38: 80452CBC (lit_6041)
//	8012CF3C: 80452CC4 (lit_6109)
//	8012CF40: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfServiceWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfServiceWait__9daAlink_cFv.s"
}
#pragma pop

/* 8012CF68-8012CFEC 0084+00 s=1 e=0 z=0  None .text      procWolfTiredWaitInit__9daAlink_cFv */
//	8012CF7C: 8012BFA8 (checkWolfWaitSlipPolygon__9daAlink_cFv)
//	8012CF8C: 80452CA4 (lit_6021)
//	8012CF9C: 801301E4 (procWolfWaitSlipInit__9daAlink_cFv)
//	8012CFAC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012CFC0: 80452CC0 (lit_6108)
//	8012CFD0: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTiredWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTiredWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012CFEC-8012D050 0064+00 s=1 e=0 z=0  None .text      procWolfTiredWait__9daAlink_cFv */
//	8012D00C: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012D01C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012D030: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTiredWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTiredWait__9daAlink_cFv.s"
}
#pragma pop

/* 8012D050-8012D104 00B4+00 s=3 e=0 z=0  None .text      procWolfMidnaRideShockInit__9daAlink_cFv
 */
//	8012D070: 804061C0 (g_dComIfG_gameInfo)
//	8012D074: 804061C0 (g_dComIfG_gameInfo)
//	8012D080: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8012D088: 800C33B8 (procWaitInit__9daAlink_cFv)
//	8012D094: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012D0B0: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8012D0BC: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8012D0DC: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfMidnaRideShockInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfMidnaRideShockInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012D104-8012D1A8 00A4+00 s=1 e=0 z=0  None .text      procWolfMidnaRideShock__9daAlink_cFv */
//	8012D124: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012D13C: 804061C0 (g_dComIfG_gameInfo)
//	8012D140: 804061C0 (g_dComIfG_gameInfo)
//	8012D14C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8012D15C: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012D168: 80452EB4 (lit_17382)
//	8012D188: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfMidnaRideShock() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfMidnaRideShock__9daAlink_cFv.s"
}
#pragma pop

/* 8012D1A8-8012D2A8 0100+00 s=13 e=0 z=0  None .text      procWolfWaitInit__9daAlink_cFv */
//	8012D1BC: 8012BFA8 (checkWolfWaitSlipPolygon__9daAlink_cFv)
//	8012D1CC: 80452CA4 (lit_6021)
//	8012D1DC: 801301E4 (procWolfWaitSlipInit__9daAlink_cFv)
//	8012D204: 80115C20 (checkEventRun__9daAlink_cCFv)
//	8012D22C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012D23C: 800B9254 (checkNoUpperAnime__9daAlink_cCFv)
//	8012D258: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012D260: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D264: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D26C: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
//	8012D280: 80452CC0 (lit_6108)
//	8012D28C: 800B3844 (initServiceWaitTime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012D2A8-8012D380 00D8+00 s=1 e=0 z=0  None .text      procWolfWait__9daAlink_cFv */
//	8012D2C8: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012D2D8: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	8012D2E4: 80452E78 (lit_15460)
//	8012D2F4: 80452CB0 (lit_6025)
//	8012D31C: 80452CBC (lit_6041)
//	8012D320: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
//	8012D328: 800B47B4 (checkServiceWaitMode__9daAlink_cFv)
//	8012D354: 8012CBE4 (procWolfServiceWaitInit__9daAlink_cFi)
//	8012D360: 800B3844 (initServiceWaitTime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWait__9daAlink_cFv.s"
}
#pragma pop

/* 8012D380-8012D3E4 0064+00 s=2 e=0 z=0  None .text      procWolfMoveInit__9daAlink_cFv */
//	8012D398: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012D3B0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D3B4: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D3BC: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
//	8012D3C8: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012D3E4-8012D474 0090+00 s=1 e=0 z=0  None .text      procWolfMove__9daAlink_cFv */
//	8012D3FC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012D40C: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	8012D42C: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012D430: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012D44C: 80452CBC (lit_6041)
//	8012D450: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfMove__9daAlink_cFv.s"
}
#pragma pop

/* 8012D474-8012D590 011C+00 s=1 e=0 z=0  None .text      procWolfDashInit__9daAlink_cFv */
//	8012D48C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012D498: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D49C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D4A4: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012D4B0:
// 801211C0 (setFootEffectProcType__9daAlink_cFi) 	8012D4D8: 80127F20
//(checkWolfSlowDash__9daAlink_cFv) 	8012D4E4: 8038EE28 (m__20daAlinkHIO_wlMove_c0) 	8012D4E8:
// 8038EE28 (m__20daAlinkHIO_wlMove_c0) 	8012D520: 8038EE28 (m__20daAlinkHIO_wlMove_c0) 8012D524:
// 8038EE28 (m__20daAlinkHIO_wlMove_c0) 	8012D54C: 8038EE28 (m__20daAlinkHIO_wlMove_c0) 8012D550:
// 8038EE28 (m__20daAlinkHIO_wlMove_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDashInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDashInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012D590-8012D8C0 0330+00 s=1 e=0 z=0  None .text      procWolfDash__9daAlink_cFv */
//	8012D5AC: 803A37C0 (__vt__8cM3dGPla)
//	8012D5B0: 803A37C0 (__vt__8cM3dGPla)
//	8012D5BC: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	8012D5D0: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012D5D4: 803A37C0 (__vt__8cM3dGPla)
//	8012D5D8: 803A37C0 (__vt__8cM3dGPla)
//	8012D5E8: 80127F20 (checkWolfSlowDash__9daAlink_cFv)
//	8012D5F4: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D5F8: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D610: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D614: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D620: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D624: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D634: 80270740 (cLib_chaseF__FPfff)
//	8012D63C: 80452CA4 (lit_6021)
//	8012D650: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D654: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D664: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012D674: 80452CC4 (lit_6109)
//	8012D688: 8012A228 (checkWolfAttackReverse__9daAlink_cFi)
//	8012D694: 803A37C0 (__vt__8cM3dGPla)
//	8012D698: 803A37C0 (__vt__8cM3dGPla)
//	8012D6AC: 800B26B8 (swordSwingTrigger__9daAlink_cFv)
//	8012D6C4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012D6E0: 801393A4 (checkWolfAttackAction__9daAlink_cFv)
//	8012D6E4: 803A37C0 (__vt__8cM3dGPla)
//	8012D6E8: 803A37C0 (__vt__8cM3dGPla)
//	8012D6F8: 80127F20 (checkWolfSlowDash__9daAlink_cFv)
//	8012D704: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D708: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D724: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D728: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D738: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D73C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D750: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012D754: 803A37C0 (__vt__8cM3dGPla)
//	8012D758: 803A37C0 (__vt__8cM3dGPla)
//	8012D768: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D76C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D78C: 801393A4 (checkWolfAttackAction__9daAlink_cFv)
//	8012D790: 803A37C0 (__vt__8cM3dGPla)
//	8012D794: 803A37C0 (__vt__8cM3dGPla)
//	8012D7A4: 80127F20 (checkWolfSlowDash__9daAlink_cFv)
//	8012D7B0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D7B4: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D7D0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D7D4: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D7E4: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D7E8: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D7FC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012D800: 803A37C0 (__vt__8cM3dGPla)
//	8012D804: 803A37C0 (__vt__8cM3dGPla)
//	8012D818: 80452DD8 (lit_11470)
//	8012D81C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8012D82C: 80452D48 (lit_8130)
//	8012D830: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8012D858: 80452D8C (lit_8783)
//	8012D85C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8012D86C: 80453160 (lit_46081)
//	8012D870: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8012D898: 803A37C0 (__vt__8cM3dGPla)
//	8012D89C: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDash() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDash__9daAlink_cFv.s"
}
#pragma pop

/* 8012D8C0-8012DA5C 019C+00 s=2 e=0 z=0  None .text      procWolfDashReverseInit__9daAlink_cFi */
//	8012D8E0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012D8EC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D8F0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D904: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8012D928: 80270E24 (cLib_distanceAngleS__Fss)
//	8012D934: 80452D30 (lit_7625)
//	8012D944: 80452D78 (lit_8676)
//	8012D94C: 80452E64 (lit_14954)
//	8012D960: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D964: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012D990: 80452CC0 (lit_6108)
//	8012D998: 80452CB8 (lit_6040)
//	8012D9A4: 804061C0 (g_dComIfG_gameInfo)
//	8012D9A8: 804061C0 (g_dComIfG_gameInfo)
//	8012D9BC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8012D9F8: 801A81C0 (dKy_Sound_set__F4cXyziUii)
//	8012DA18: 8042561C (l_wolfBaseAnime)
//	8012DA1C: 8042561C (l_wolfBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDashReverseInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDashReverseInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012DA5C-8012DBA8 014C+00 s=1 e=0 z=0  None .text      procWolfDashReverse__9daAlink_cFv */
//	8012DA9C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012DAB0: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012DABC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DAC0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DAD8: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012DB20: 8012987C (checkWolfLandAction__9daAlink_cFi)
//	8012DB34: 80452CC0 (lit_6108)
//	8012DB3C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DB40: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDashReverse() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDashReverse__9daAlink_cFv.s"
}
#pragma pop

/* 8012DBA8-8012DC44 009C+00 s=1 e=0 z=0  None .text      procWolfAtnActorMoveInit__9daAlink_cFv */
//	8012DBC0: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012DBD8: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	8012DBF4: 80128F5C (setWolfAtnMoveDirection__9daAlink_cFv)
//	8012DBFC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DC00: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DC08: 80129114 (setBlendWolfAtnMoveAnime__9daAlink_cFf)
//	8012DC10: 80128798 (checkWolfAtnWait__9daAlink_cFv)
//	8012DC28: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAtnActorMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAtnActorMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012DC44-8012DD08 00C4+00 s=1 e=0 z=0  None .text      procWolfAtnActorMove__9daAlink_cFv */
//	8012DC58: 80128F5C (setWolfAtnMoveDirection__9daAlink_cFv)
//	8012DC64: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012DC74: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	8012DC90: 8012BFA8 (checkWolfWaitSlipPolygon__9daAlink_cFv)
//	8012DCA0: 80452CA4 (lit_6021)
//	8012DCB0: 801301E4 (procWolfWaitSlipInit__9daAlink_cFv)
//	8012DCC8: 80452CBC (lit_6041)
//	8012DCCC: 80129114 (setBlendWolfAtnMoveAnime__9daAlink_cFf)
//	8012DCD4: 80128798 (checkWolfAtnWait__9daAlink_cFv)
//	8012DCEC: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAtnActorMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAtnActorMove__9daAlink_cFv.s"
}
#pragma pop

/* 8012DD08-8012DDB4 00AC+00 s=1 e=0 z=0  None .text      procWolfWaitTurnInit__9daAlink_cFv */
//	8012DD20: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012DD48: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DD4C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DD58: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012DD5C: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012DD64: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DD68: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DD70: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8012DD78: 80115C20 (checkEventRun__9daAlink_cCFv)
//	8012DD84: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012DDB4-8012DEC8 0114+00 s=1 e=0 z=0  None .text      procWolfWaitTurn__9daAlink_cFv */
//	8012DDD0: 80452CC0 (lit_6108)
//	8012DDE0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DDE4: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012DDF0: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012DDF4: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012DDFC: 80270740 (cLib_chaseF__FPfff)
//	8012DE04: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	8012DE2C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012DE40: 800B9D2C (checkNextActionFromButton__9daAlink_cFv)
//	8012DE60: 80115C20 (checkEventRun__9daAlink_cCFv)
//	8012DE78: 804061C0 (g_dComIfG_gameInfo)
//	8012DE7C: 804061C0 (g_dComIfG_gameInfo)
//	8012DE88: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8012DE98: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012DEA8: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8012DEC8-8012E0AC 01E4+00 s=2 e=0 z=0  None .text      procWolfSideStepInit__9daAlink_cFi */
//	8012DEF8: 804061C0 (g_dComIfG_gameInfo)
//	8012DEFC: 804061C0 (g_dComIfG_gameInfo)
//	8012DF08: 800349BC (isEventBit__11dSv_event_cCFUs)
//	8012DF50: 8012E398 (procWolfBackJumpInit__9daAlink_cFi)
//	8012DF60: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012DFA0: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8012DFCC: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012DFD0: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012DFD8: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012DFDC:
// 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0) 	8012DFE0: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E03C: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E040: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E044: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012E048:
// 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0) 	8012E04C: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSideStepInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSideStepInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012E0AC-8012E1E8 013C+00 s=1 e=0 z=0  None .text      procWolfSideStep__9daAlink_cFv */
//	8012E0D4: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	8012E0D8: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	8012E0E8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012E10C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8012E124: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012E154: 8012C308 (checkWolfAtnDoCharge__9daAlink_cFv)
//	8012E178: 8012E1E8 (procWolfSideStepLandInit__9daAlink_cFs)
//	8012E194: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E198: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E1C0: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSideStep() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSideStep__9daAlink_cFv.s"
}
#pragma pop

/* 8012E1E8-8012E2DC 00F4+00 s=1 e=0 z=0  None .text      procWolfSideStepLandInit__9daAlink_cFs */
//	8012E208: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012E220: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E224: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E22C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012E230:
// 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0) 	8012E234: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E26C: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E270: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E278: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012E27C:
// 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0) 	8012E280: 8038EFA8 (m__24daAlinkHIO_wlSideStep_c0)
//	8012E2A0: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	8012E2B0: 80452CC0 (lit_6108)
//	8012E2BC: 800B5C64 (setStepLandVibration__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSideStepLandInit(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSideStepLandInit__9daAlink_cFs.s"
}
#pragma pop

/* 8012E2DC-8012E398 00BC+00 s=1 e=0 z=0  None .text      procWolfSideStepLand__9daAlink_cFv */
//	8012E310: 80128F5C (setWolfAtnMoveDirection__9daAlink_cFv)
//	8012E318: 8012C308 (checkWolfAtnDoCharge__9daAlink_cFv)
//	8012E320: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012E338: 804061C0 (g_dComIfG_gameInfo)
//	8012E33C: 804061C0 (g_dComIfG_gameInfo)
//	8012E348: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8012E358: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012E378: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSideStepLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSideStepLand__9daAlink_cFv.s"
}
#pragma pop

/* 8012E398-8012E508 0170+00 s=3 e=0 z=0  None .text      procWolfBackJumpInit__9daAlink_cFi */
//	8012E3A8: 803621DC (_savegpr_29)
//	8012E3B4: 8038D658 (lit_3757)
//	8012E3B8: 8038D658 (lit_3757)
//	8012E3C0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012E3DC: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012E43C:
// 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf) 	8012E450: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012E4A0:
// 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec) 	8012E4F4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfBackJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfBackJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012E508-8012E5F4 00EC+00 s=1 e=0 z=0  None .text      procWolfBackJump__9daAlink_cFv */
//	8012E524: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	8012E528: 8038EF70 (m__23daAlinkHIO_wlAtnMove_c0)
//	8012E538: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012E55C: 8012C308 (checkWolfAtnDoCharge__9daAlink_cFv)
//	8012E564: 800C5700 (backJumpSpeedDec__9daAlink_cFv)
//	8012E56C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012E590: 8012E5F4 (procWolfBackJumpLandInit__9daAlink_cFss)
//	8012E5AC: 8038F010 (m__24daAlinkHIO_wlBackJump_c0)
//	8012E5B0: 8038F010 (m__24daAlinkHIO_wlBackJump_c0)
//	8012E5D8: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfBackJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfBackJump__9daAlink_cFv.s"
}
#pragma pop

/* 8012E5F4-8012E684 0090+00 s=1 e=0 z=0  None .text      procWolfBackJumpLandInit__9daAlink_cFss */
//	8012E604: 803621DC (_savegpr_29)
//	8012E618: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012E624: 8038F010 (m__24daAlinkHIO_wlBackJump_c0)
//	8012E628: 8038F010 (m__24daAlinkHIO_wlBackJump_c0)
//	8012E630: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012E634:
// 80452CC0 (lit_6108) 	8012E64C: 801211C0 (setFootEffectProcType__9daAlink_cFi) 	8012E664:
// 800B5C64 (setStepLandVibration__9daAlink_cFv) 	8012E670: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfBackJumpLandInit(s16 param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfBackJumpLandInit__9daAlink_cFss.s"
}
#pragma pop

/* 8012E684-8012E754 00D0+00 s=1 e=0 z=0  None .text      procWolfBackJumpLand__9daAlink_cFv */
//	8012E6B8: 80128F5C (setWolfAtnMoveDirection__9daAlink_cFv)
//	8012E6CC: 8012C308 (checkWolfAtnDoCharge__9daAlink_cFv)
//	8012E6D4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012E6EC: 804061C0 (g_dComIfG_gameInfo)
//	8012E6F0: 804061C0 (g_dComIfG_gameInfo)
//	8012E6FC: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8012E70C: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012E718: 8038F010 (m__24daAlinkHIO_wlBackJump_c0)
//	8012E71C: 8038F010 (m__24daAlinkHIO_wlBackJump_c0)
//	8012E734: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfBackJumpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfBackJumpLand__9daAlink_cFv.s"
}
#pragma pop

/* 8012E754-8012E83C 00E8+00 s=2 e=0 z=0  None .text      procWolfHowlInit__9daAlink_cFi */
//	8012E770: 80115C20 (checkEventRun__9daAlink_cCFv)
//	8012E798: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012E7AC: 8038F048 (m__20daAlinkHIO_wlHowl_c0)
//	8012E7B0: 8038F048 (m__20daAlinkHIO_wlHowl_c0)
//	8012E7B8: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012E7C8:
// 8038F048 (m__20daAlinkHIO_wlHowl_c0) 	8012E7CC: 8038F048 (m__20daAlinkHIO_wlHowl_c0) 8012E7EC:
// 8038F048 (m__20daAlinkHIO_wlHowl_c0) 	8012E7F0: 8038F048 (m__20daAlinkHIO_wlHowl_c0) 8012E7F4:
// 80129848 (setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c)
//	8012E7F8: 8038F048 (m__20daAlinkHIO_wlHowl_c0)
//	8012E7FC: 8038F048 (m__20daAlinkHIO_wlHowl_c0)
//	8012E810: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHowlInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHowlInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012E83C-8012E9C8 018C+00 s=1 e=0 z=0  None .text      procWolfHowl__9daAlink_cFv */
//	8012E85C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012E87C: 8012E754 (procWolfHowlInit__9daAlink_cFi)
//	8012E88C: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012E8B8: 8012E754 (procWolfHowlInit__9daAlink_cFi)
//	8012E8C8: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012E8FC: 80452D94 (lit_8785)
//	8012E914: 80453164 (lit_46462)
//	8012E920: 80452D94 (lit_8785)
//	8012E934: 80452D94 (lit_8785)
//	8012E944: 80453164 (lit_46462)
//	8012E96C: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
//	8012E9A8: 801A81C0 (dKy_Sound_set__F4cXyziUii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHowl() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHowl__9daAlink_cFv.s"
}
#pragma pop

/* 8012E9C8-8012EB94 01CC+00 s=2 e=0 z=0  None .text      procWolfAutoJumpInit__9daAlink_cFi */
//	8012E9E8: 803621DC (_savegpr_29)
//	8012E9F8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012EA14: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012EA18: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012EA44: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012EA48: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012EA6C: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012EA70: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012EA80: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8012EA9C: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012EAA0: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012EAD8: 80439A20 (sincosTable___5JMath)
//	8012EADC: 80439A20 (sincosTable___5JMath)
//	8012EB00: 8042561C (l_wolfBaseAnime)
//	8012EB04: 8042561C (l_wolfBaseAnime)
//	8012EB80: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAutoJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAutoJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012EB94-8012EDD0 023C+00 s=1 e=0 z=0  None .text      procWolfAutoJump__9daAlink_cFv */
//	8012EBBC: 80452CA4 (lit_6021)
//	8012EBD8: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	8012EBE8: 80452CC0 (lit_6108)
//	8012EBEC: 80452DF8 (lit_13700)
//	8012EBF8: 80270740 (cLib_chaseF__FPfff)
//	8012EC04: 80452CA4 (lit_6021)
//	8012EC14: 80452CC0 (lit_6108)
//	8012EC18: 80452DA0 (lit_9054)
//	8012EC1C: 80270740 (cLib_chaseF__FPfff)
//	8012EC3C: 8012987C (checkWolfLandAction__9daAlink_cFi)
//	8012EC48: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	8012EC60: 80131628 (checkWolfRopeJumpHang__9daAlink_cFv)
//	8012EC80: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012EC8C: 80452D88 (lit_8782)
//	8012ECA0: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	8012ECA4: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	8012ECC4: 80452CC0 (lit_6108)
//	8012ECCC: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8012ECDC: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012ED0C: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012ED10: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012ED18: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012ED24:
// 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv) 	8012ED40: 80452CC0 (lit_6108) 	8012ED44:
// 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0) 	8012ED48: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//8012ED58: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf) 	8012ED7C:
// 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM) 	8012EDA4:
//8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0) 	8012EDA8: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAutoJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAutoJump__9daAlink_cFv.s"
}
#pragma pop

/* 8012EDD0-8012EFB8 01E8+00 s=12 e=0 z=0  None .text      procWolfFallInit__9daAlink_cFif */
//	8012EDFC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012EE20: 80452CC0 (lit_6108)
//	8012EE48: 80452CC0 (lit_6108)
//	8012EE50: 80452CB8 (lit_6040)
//	8012EE5C: 804061C0 (g_dComIfG_gameInfo)
//	8012EE60: 804061C0 (g_dComIfG_gameInfo)
//	8012EE74: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8012EE80: 800D7478 (setDamagePointNormal__9daAlink_cFi)
//	8012EEC8: 80452CC0 (lit_6108)
//	8012EED0: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8012EED8: 80452CB0 (lit_6025)
//	8012EEF4: 80452DE4 (lit_12328)
//	8012EF0C: 8042561C (l_wolfBaseAnime)
//	8012EF10: 8042561C (l_wolfBaseAnime)
//	8012EF34: 800BF4E0 (resetBasAnime__9daAlink_cFv)
//	8012EF60: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfFallInit(int param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfFallInit__9daAlink_cFif.s"
}
#pragma pop

/* 8012EFB8-8012F138 0180+00 s=1 e=0 z=0  None .text      procWolfFall__9daAlink_cFv */
//	8012EFDC: 80452CC0 (lit_6108)
//	8012EFE0: 80452DA0 (lit_9054)
//	8012EFE4: 80270740 (cLib_chaseF__FPfff)
//	8012F020: 8012987C (checkWolfLandAction__9daAlink_cFi)
//	8012F050: 80452CA4 (lit_6021)
//	8012F06C: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	8012F07C: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	8012F09C: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	8012F0B4: 80131628 (checkWolfRopeJumpHang__9daAlink_cFv)
//	8012F0D0: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012F0DC: 80452D88 (lit_8782)
//	8012F0F0: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	8012F0F4: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	8012F114: 80452CC0 (lit_6108)
//	8012F11C: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfFall() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfFall__9daAlink_cFv.s"
}
#pragma pop

/* 8012F138-8012F1F0 00B8+00 s=2 e=0 z=0  None .text      procWolfLandInit__9daAlink_cFv */
//	8012F150: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012F154: 80452CC0 (lit_6108)
//	8012F16C: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012F170: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012F178: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012F17C:
// 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0) 	8012F180: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8012F1A4: 801211C0 (setFootEffectProcType__9daAlink_cFi)
//	8012F1A8: 80452CC0 (lit_6108)
//	8012F1B0: 80452CB8 (lit_6040)
//	8012F1BC: 804061C0 (g_dComIfG_gameInfo)
//	8012F1C0: 804061C0 (g_dComIfG_gameInfo)
//	8012F1D4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012F1F0-8012F278 0088+00 s=1 e=0 z=0  None .text      procWolfLand__9daAlink_cFv */
//	8012F224: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012F238: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012F258: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLand__9daAlink_cFv.s"
}
#pragma pop

/* 8012F278-8012F358 00E0+00 s=1 e=0 z=0  None .text      procWolfSitInit__9daAlink_cFi */
//	8012F298: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012F2BC: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012F2D0: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8012F2E4: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	8012F2E8: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	8012F2EC: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012F30C:
// 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM) 	8012F320:
// 8038F138 (m__19daAlinkHIO_wlLie_c0) 	8012F324: 8038F138 (m__19daAlinkHIO_wlLie_c0) 	8012F330:
//801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSitInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012F358-8012F41C 00C4+00 s=1 e=0 z=0  None .text      procWolfSit__9daAlink_cFv */
//	8012F368: 803621DC (_savegpr_29)
//	8012F370: 8038D658 (lit_3757)
//	8012F374: 8038D658 (lit_3757)
//	8012F380: 80452CC0 (lit_6108)
//	8012F3A4: 80270740 (cLib_chaseF__FPfff)
//	8012F3AC: 800B2664 (spActionButton__9daAlink_cFv)
//	8012F3C8: 801372B4 (checkNextActionWolfFromLie__9daAlink_cFv)
//	8012F3D4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012F3F4: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8012F408: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSit__9daAlink_cFv.s"
}
#pragma pop

/* 8012F41C-8012F500 00E4+00 s=1 e=0 z=0  None .text      procWolfStepMoveInit__9daAlink_cFv */
//	8012F434: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012F440: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	8012F444: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	8012F44C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012F450:
// 80452C98 (lit_5943) 	8012F460: 80452CC0 (lit_6108) 	8012F470: 8042561C (l_wolfBaseAnime)
// 8012F474: 8042561C (l_wolfBaseAnime) 	8012F494: 80439A20 (sincosTable___5JMath) 	8012F498:
// 80439A20 (sincosTable___5JMath) 	8012F4A4: 80452D30 (lit_7625)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfStepMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfStepMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012F500-8012F634 0134+00 s=1 e=0 z=0  None .text      procWolfStepMove__9daAlink_cFv */
//	8012F534: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012F548: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012F554: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	8012F558: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	8012F578: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012F58C: 80452CC0 (lit_6108)
//	8012F59C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012F5B0: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	8012F5B4: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	8012F5BC: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012F5C0:
// 80439A20 (sincosTable___5JMath) 	8012F5C4: 80439A20 (sincosTable___5JMath) 	8012F5DC: 80452D14
//(lit_7307)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfStepMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfStepMove__9daAlink_cFv.s"
}
#pragma pop

/* 8012F634-8012F6EC 00B8+00 s=1 e=0 z=0  None .text      procWolfSlipInit__9daAlink_cFv */
//	8012F64C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012F658: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012F65C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012F660: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012F674:
// 8038EE28 (m__20daAlinkHIO_wlMove_c0) 	8012F678: 8038EE28 (m__20daAlinkHIO_wlMove_c0) 8012F690:
// 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0) 	8012F694: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012F6AC: 8042561C (l_wolfBaseAnime)
//	8012F6B0: 8042561C (l_wolfBaseAnime)
//	8012F6D0: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlipInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlipInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012F6EC-8012F840 0154+00 s=1 e=0 z=0  None .text      procWolfSlip__9daAlink_cFv */
//	8012F714: 80452CC0 (lit_6108)
//	8012F724: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012F728: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012F734: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012F738: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012F740: 80270740 (cLib_chaseF__FPfff)
//	8012F748: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012F754: 80452CC0 (lit_6108)
//	8012F760: 80452CA4 (lit_6021)
//	8012F774: 8012F840 (procWolfSlipTurnInit__9daAlink_cFi)
//	8012F77C: 80439A20 (sincosTable___5JMath)
//	8012F780: 80439A20 (sincosTable___5JMath)
//	8012F798: 80452CE0 (lit_6845)
//	8012F7E0: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012F7EC: 80452DD8 (lit_11470)
//	8012F7FC: 80452D3C (lit_7808)
//	8012F820: 800BF1CC (seStartMapInfoLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlip() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlip__9daAlink_cFv.s"
}
#pragma pop

/* 8012F840-8012F9C0 0180+00 s=2 e=0 z=0  None .text      procWolfSlipTurnInit__9daAlink_cFi */
//	8012F868: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012F884: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012F888: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012F8B8: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012F8BC: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012F8CC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012F8D0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012F900: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	8012F914: 80452D30 (lit_7625)
//	8012F924: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012F928: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012F93C: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8012F95C: 80452CC0 (lit_6108)
//	8012F96C: 8042561C (l_wolfBaseAnime)
//	8012F970: 8042561C (l_wolfBaseAnime)
//	8012F988: 80452CB8 (lit_6040)
//	8012F98C: 80452D1C (lit_7448)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlipTurnInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlipTurnInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012F9C0-8012FB18 0158+00 s=1 e=0 z=0  None .text      procWolfSlipTurn__9daAlink_cFv */
//	8012F9E4: 80452D14 (lit_7307)
//	8012F9E8: 80452C98 (lit_5943)
//	8012F9F8: 80452CB0 (lit_6025)
//	8012FA24: 8042561C (l_wolfBaseAnime)
//	8012FA28: 8042561C (l_wolfBaseAnime)
//	8012FA44: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012FA60: 8012FB18 (procWolfSlipTurnLandInit__9daAlink_cFv)
//	8012FA78: 80452F48 (lit_23416)
//	8012FA90: 800B48D0 (setJumpMode__9daAlink_cFv)
//	8012FAA8: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012FAAC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012FAD0: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	8012FAEC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012FAF0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012FAF8: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlipTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlipTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8012FB18-8012FBB4 009C+00 s=1 e=0 z=0  None .text      procWolfSlipTurnLandInit__9daAlink_cFv */
//	8012FB30: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012FB38: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012FB3C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012FB5C: 800AC394 (setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff)
//	8012FB60: 80452EE0 (lit_19379)
//	8012FB64: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012FB68: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8012FB88: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlipTurnLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlipTurnLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012FBB4-8012FC38 0084+00 s=1 e=0 z=0  None .text      procWolfSlipTurnLand__9daAlink_cFv */
//	8012FBDC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012FBF0: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8012FBFC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012FC00: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8012FC18: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlipTurnLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlipTurnLand__9daAlink_cFv.s"
}
#pragma pop

/* 8012FC38-8012FD2C 00F4+00 s=2 e=0 z=0  None .text      procWolfSlideReadyInit__9daAlink_cFsi */
//	8012FC48: 803621DC (_savegpr_29)
//	8012FC5C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012FC74: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	8012FC78: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	8012FC7C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012FC9C:
// 80452CC0 (lit_6108) 	8012FCA4: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0) 	8012FCA8: 8038F3F0
//(m__21daAlinkHIO_wlSlide_c0) 	8012FCB4: 8042561C (l_wolfBaseAnime) 	8012FCB8: 8042561C
//(l_wolfBaseAnime) 	8012FCD0: 80452CB8 (lit_6040) 	8012FCD8: 80452CB0 (lit_6025) 	8012FD18:
//80362228
//(_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlideReadyInit(s16 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlideReadyInit__9daAlink_cFsi.s"
}
#pragma pop

/* 8012FD2C-8012FE80 0154+00 s=1 e=0 z=0  None .text      procWolfSlideReady__9daAlink_cFv */
//	8012FD50: 80452D14 (lit_7307)
//	8012FD54: 80452C98 (lit_5943)
//	8012FD6C: 8042561C (l_wolfBaseAnime)
//	8012FD70: 8042561C (l_wolfBaseAnime)
//	8012FD88: 803A37C0 (__vt__8cM3dGPla)
//	8012FD8C: 803A37C0 (__vt__8cM3dGPla)
//	8012FD98: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	8012FDA8: 80267128 (atan2sX_Z__4cXyzCFv)
//	8012FDC0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012FDD8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8012FDE0: 80452D3C (lit_7808)
//	8012FDE4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8012FDFC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8012FE20: 8012FE80 (procWolfSlideInit__9daAlink_cFsi)
//	8012FE30: 80130440 (procWolfSlopeStartInit__9daAlink_cFi)
//	8012FE3C: 80452DC0 (lit_10193)
//	8012FE40: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8012FE58: 803A37C0 (__vt__8cM3dGPla)
//	8012FE5C: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlideReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlideReady__9daAlink_cFv.s"
}
#pragma pop

/* 8012FE80-8012FFA4 0124+00 s=2 e=0 z=0  None .text      procWolfSlideInit__9daAlink_cFsi */
//	8012FE90: 803621DC (_savegpr_29)
//	8012FEA8: 80270E24 (cLib_distanceAngleS__Fss)
//	8012FEC8: 8012FC38 (procWolfSlideReadyInit__9daAlink_cFsi)
//	8012FED8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8012FEF8: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	8012FEFC: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	8012FF08: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8012FF18:
// 80452CB0 (lit_6025) 	8012FF50: 804061C0 (g_dComIfG_gameInfo) 	8012FF54: 804061C0
//(g_dComIfG_gameInfo) 	8012FF74: 801211C0 (setFootEffectProcType__9daAlink_cFi) 	8012FF78:
//8038F3F0
//(m__21daAlinkHIO_wlSlide_c0) 	8012FF7C: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0) 	8012FF90:
//80362228
//(_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlideInit(s16 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlideInit__9daAlink_cFsi.s"
}
#pragma pop

/* 8012FFA4-801300D4 0130+00 s=1 e=0 z=0  None .text      procWolfSlide__9daAlink_cFv */
//	8012FFBC: 803A37C0 (__vt__8cM3dGPla)
//	8012FFC0: 803A37C0 (__vt__8cM3dGPla)
//	8012FFCC: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	8012FFDC: 80267128 (atan2sX_Z__4cXyzCFv)
//	8012FFF8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8013001C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80130020: 80439A20 (sincosTable___5JMath)
//	80130024: 80439A20 (sincosTable___5JMath)
//	80130040: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	80130044: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	8013004C: 80452CB8 (lit_6040)
//	80130050: 80452C98 (lit_5943)
//	8013009C: 800BF1CC (seStartMapInfoLevel__9daAlink_cFUl)
//	801300A8: 801300D4 (procWolfSlideLandInit__9daAlink_cFv)
//	801300AC: 803A37C0 (__vt__8cM3dGPla)
//	801300B0: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlide() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlide__9daAlink_cFv.s"
}
#pragma pop

/* 801300D4-80130138 0064+00 s=1 e=0 z=0  None .text      procWolfSlideLandInit__9daAlink_cFv */
//	801300EC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801300F8: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	801300FC: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	80130104: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013010C:
// 80452C98 (lit_5943)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlideLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlideLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 80130138-801301E4 00AC+00 s=1 e=0 z=0  None .text      procWolfSlideLand__9daAlink_cFv */
//	80130158: 80452CC0 (lit_6108)
//	8013015C: 80452D24 (lit_7450)
//	80130160: 80270740 (cLib_chaseF__FPfff)
//	80130168: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80130184: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80130190: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	80130194: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	801301B8: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlideLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlideLand__9daAlink_cFv.s"
}
#pragma pop

/* 801301E4-80130268 0084+00 s=3 e=0 z=0  None .text      procWolfWaitSlipInit__9daAlink_cFv */
//	801301FC: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80130218: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8013021C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80130228: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8013022C: 80452CC0 (lit_6108)
//	80130238: 8012C1F4 (setWolfWaitSlip__9daAlink_cFv)
//	8013024C: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitSlipInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitSlipInit__9daAlink_cFv.s"
}
#pragma pop

/* 80130268-80130440 01D8+00 s=1 e=0 z=0  None .text      procWolfWaitSlip__9daAlink_cFv */
//	8013028C: 80452CC0 (lit_6108)
//	801302A0: 80452CA4 (lit_6021)
//	801302AC: 8012BFA8 (checkWolfWaitSlipPolygon__9daAlink_cFv)
//	801302B8: 803A37C0 (__vt__8cM3dGPla)
//	801302BC: 803A37C0 (__vt__8cM3dGPla)
//	801302C4: 804061C0 (g_dComIfG_gameInfo)
//	801302C8: 804061C0 (g_dComIfG_gameInfo)
//	801302D8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	801302E0: 80267128 (atan2sX_Z__4cXyzCFv)
//	801302F4: 800B0098 (getGroundAngle__9daAlink_cFP13cBgS_PolyInfos)
//	80130318: 803650D0 (abs)
//	8013032C: 80130440 (procWolfSlopeStartInit__9daAlink_cFi)
//	80130330: 803A37C0 (__vt__8cM3dGPla)
//	80130334: 803A37C0 (__vt__8cM3dGPla)
//	80130354: 8012FC38 (procWolfSlideReadyInit__9daAlink_cFsi)
//	80130358: 803A37C0 (__vt__8cM3dGPla)
//	8013035C: 803A37C0 (__vt__8cM3dGPla)
//	80130368: 803A37C0 (__vt__8cM3dGPla)
//	8013036C: 803A37C0 (__vt__8cM3dGPla)
//	8013037C: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013038C: 8012C1F4 (setWolfWaitSlip__9daAlink_cFv)
//	80130390: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	80130394: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	8013039C: 80452CB8 (lit_6040)
//	801303F8: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	801303FC: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	80130408: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80130418: 800BF1CC (seStartMapInfoLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitSlip() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitSlip__9daAlink_cFv.s"
}
#pragma pop

/* 80130440-801304D4 0094+00 s=2 e=0 z=0  None .text      procWolfSlopeStartInit__9daAlink_cFi */
//	80130460: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013046C: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	80130470: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	80130478: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013047C:
// 8042561C (l_wolfBaseAnime) 	80130480: 8042561C (l_wolfBaseAnime) 	80130498: 80452CC0
// (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlopeStartInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlopeStartInit__9daAlink_cFi.s"
}
#pragma pop

/* 801304D4-8013056C 0098+00 s=1 e=0 z=0  None .text      procWolfSlopeStart__9daAlink_cFv */
//	801304F4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80130508: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80130514: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	80130518: 8038F3F0 (m__21daAlinkHIO_wlSlide_c0)
//	80130530: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlopeStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlopeStart__9daAlink_cFv.s"
}
#pragma pop

/* 8013056C-80130580 0014+00 s=1 e=0 z=0  None .text      daAlink_searchGoldWolf__FP10fopAc_ac_cPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchGoldWolf(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchGoldWolf__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80130580-80130654 00D4+00 s=1 e=0 z=0  None .text      daAlink_searchWolfHowl__FP10fopAc_ac_cPv
 */
//	80130590: 803621D8 (_savegpr_28)
//	801305A0: 804061C0 (g_dComIfG_gameInfo)
//	801305A4: 804061C0 (g_dComIfG_gameInfo)
//	801305BC: 800349BC (isEventBit__11dSv_event_cCFUs)
//	801305DC: 80452CC0 (lit_6108)
//	80130604: 8034739C (PSVECSquareDistance)
//	80130608: 80453168 (lit_47052)
//	80130640: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchWolfHowl(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchWolfHowl__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80130654-80130700 00AC+00 s=1 e=0 z=0  None .text      setWolfHowlNotHappen__9daAlink_cFi */
//	801306A8: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	801306C4: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	801306C8: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	801306D4: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	801306E4: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfHowlNotHappen(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfHowlNotHappen__9daAlink_cFi.s"
}
#pragma pop

/* 80130700-80130BC4 04C4+00 s=1 e=0 z=0  None .text      procWolfHowlDemoInit__9daAlink_cFv */
//	80130728: 804061C0 (g_dComIfG_gameInfo)
//	8013072C: 804061C0 (g_dComIfG_gameInfo)
//	80130744: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	801307A0: 80439A20 (sincosTable___5JMath)
//	801307A4: 80439A20 (sincosTable___5JMath)
//	801307AC: 80452D68 (lit_8472)
//	801307C8: 80452D00 (lit_6895)
//	80130800: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	80130830: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	80130874: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	801308B4: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	801308DC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80130920: 802CB100 (setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData)
//	80130984: 802CB100 (setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData)
//	801309AC: 802CB100 (setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData)
//	801309E0: 802CB100 (setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData)
//	80130A10: 802CB100 (setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData)
//	80130A24: 802CB100 (setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData)
//	80130A38: 802CB100 (setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData)
//	80130A3C: 80452CC0 (lit_6108)
//	80130A4C: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80130A60: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80130A74: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80130A88: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80130A8C: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80130A90: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80130A94:
// 80452CBC (lit_6041) 	80130AA0: 80452D30 (lit_7625) 	80130ABC: 8038F138
// (m__19daAlinkHIO_wlLie_c0) 	80130AC0: 8038F138 (m__19daAlinkHIO_wlLie_c0) 	80130ACC: 801296D8
//(setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff) 	80130ADC: 80129678
//(setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM) 	80130AE8: 800AF8A0
//(setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	80130B00: 80181640
//(dCam_getBody__Fv) 	80130B14: 80088A7C (StartEventCamera__9dCamera_cFiie) 	80130B38: 80451368
//(mAudioMgrPtr__10Z2AudioMgr) 	80130B40: 802B5E8C (taktModeMute__8Z2SeqMgrFv) 	80130B44: 80392094
//(d_a_d_a_alink__stringBase0) 	80130B48: 80392094 (d_a_d_a_alink__stringBase0) 	80130B50: 8009DA60
//(checkStageName__9daAlink_cFPCc) 	80130B5C: 8013056C (daAlink_searchGoldWolf__FP10fopAc_ac_cPv)
//	80130B60: 8013056C (daAlink_searchGoldWolf__FP10fopAc_ac_cPv)
//	80130B68: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80130B74: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	80130B80: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	80130B84: 804061C0 (g_dComIfG_gameInfo)
//	80130B88: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHowlDemoInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHowlDemoInit__9daAlink_cFv.s"
}
#pragma pop

/* 80130BC4-801312C8 0704+00 s=1 e=0 z=0  None .text      procWolfHowlDemo__9daAlink_cFv */
//	80130BDC: 803621CC (_savegpr_25)
//	80130BEC: 804061C0 (g_dComIfG_gameInfo)
//	80130BF0: 804061C0 (g_dComIfG_gameInfo)
//	80130C14: 802CBB58 (skipCorrectDemo__13Z2WolfHowlMgrFv)
//	80130C20: 801187B4 (checkEndMessage__9daAlink_cFUl)
//	80130C58: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	80130C68: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80130C70: 802B5ED4 (taktModeMuteOff__8Z2SeqMgrFv)
//	80130C98: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80130CA8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80130CBC: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	80130CCC: 80452CC0 (lit_6108)
//	80130CDC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80130CFC: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	80130D08: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	80130D18: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80130D1C: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80130D28: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80130D2C: 80452CB8 (lit_6040)
//	80130D38: 80452D2C (lit_7624)
//	80130D44: 80452CB8 (lit_6040)
//	80130D54: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80130D58: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80130D88: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80130DA4: 800428DC (dEv_noFinishSkipProc__FPvi)
//	80130DA8: 800428DC (dEv_noFinishSkipProc__FPvi)
//	80130DB0: 80042914 (setSkipProc__14dEvt_control_cFPvPFPvi_ii)
//	80130DC0: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80130DDC: 800428DC (dEv_noFinishSkipProc__FPvi)
//	80130DE0: 800428DC (dEv_noFinishSkipProc__FPvi)
//	80130DE8: 80042914 (setSkipProc__14dEvt_control_cFPvPFPvi_ii)
//	80130E18: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80130E40: 8038F048 (m__20daAlinkHIO_wlHowl_c0)
//	80130E44: 8038F048 (m__20daAlinkHIO_wlHowl_c0)
//	80130E4C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80130E58:
// 80453164 (lit_46462) 	80130E64: 80452D94 (lit_8785) 	80130E78: 80452D94 (lit_8785) 80130E88:
// 80453164 (lit_46462) 	80130EB4: 80453164 (lit_46462) 	80130EC0: 80452CC4 (lit_6109) 80130ECC:
// 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs) 	80130ED8: 80238588
//(isHowlHearingMode__12dMsgObject_cFv) 	80130EE8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80130EFC: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80130F10: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	80130F1C: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	80130F28: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80130F3C: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80130F40: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80130F4C: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80130F54: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80130F58: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80130F64: 80452CC0 (lit_6108)
//	80130F74: 802CAED4 (startWolfHowlSound__13Z2WolfHowlMgrFffbf)
//	80130FA0: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80130FB8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80130FD8: 80452CC0 (lit_6108)
//	80130FF0: 80027170 (dStage_changeScene__FifUlScsi)
//	80131008: 80130580 (daAlink_searchWolfHowl__FP10fopAc_ac_cPv)
//	8013100C: 80130580 (daAlink_searchWolfHowl__FP10fopAc_ac_cPv)
//	80131014: 800197BC (fopAcIt_Executor__FPFPvPv_iPv)
//	80131080: 800517EC (dPath_GetRoomPath__Fii)
//	80131094: 801312C8 (setWolfHowling__15daObj_Sekizoa_cFv)
//	801310C0: 80362084 (__ptmf_scall)
//	801310DC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	801310E4: 802B5ED4 (taktModeMuteOff__8Z2SeqMgrFv)
//	801310F0: 80111FF0 (procCoHorseCallWaitInit__9daAlink_cFi)
//	80131108: 80130654 (setWolfHowlNotHappen__9daAlink_cFi)
//	80131144: 800517EC (dPath_GetRoomPath__Fii)
//	80131164: 80130654 (setWolfHowlNotHappen__9daAlink_cFi)
//	8013117C: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	80131188: 80117CF8 (endDemoMode__9daAlink_cFv)
//	8013118C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80131194: 802B5ED4 (taktModeMuteOff__8Z2SeqMgrFv)
//	801311A0: 8012CBE4 (procWolfServiceWaitInit__9daAlink_cFi)
//	801311BC: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	801311D4: 8045316C (lit_47417)
//	80131200: 80238320 (onMsgSend__12dMsgObject_cFv)
//	8013120C: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	80131228: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8013124C: 80042468 (reset__14dEvt_control_cFv)
//	80131264: 80181640 (dCam_getBody__Fv)
//	8013126C: 80088BBC (EndEventCamera__9dCamera_cFi)
//	8013127C: 800428DC (dEv_noFinishSkipProc__FPvi)
//	80131280: 800428DC (dEv_noFinishSkipProc__FPvi)
//	80131288: 80042914 (setSkipProc__14dEvt_control_cFPvPFPvi_ii)
//	801312A0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	801312B4: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHowlDemo() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHowlDemo__9daAlink_cFv.s"
}
#pragma pop

/* 801312C8-80131408 0140+00 s=1 e=0 z=0  None .text      setWolfHowling__15daObj_Sekizoa_cFv */
//	801312E4: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	801312F8: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	8013130C: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80131320: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80131334: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80131348: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	8013135C: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80131370: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80131384: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObj_Sekizoa_c::setWolfHowling() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfHowling__15daObj_Sekizoa_cFv.s"
}
#pragma pop

/* 80131408-80131450 0048+00 s=1 e=0 z=0  None .text      checkWolfRope__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfRope() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfRope__9daAlink_cFv.s"
}
#pragma pop

/* 80131450-80131628 01D8+00 s=2 e=0 z=0  None .text
 * checkWolfRopeHit__9daAlink_cCFP12dCcD_GObjInfPC4cXyzi        */
//	80131460: 803621D4 (_savegpr_27)
//	80131478: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	80131484: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	801314C0: 80452CC0 (lit_6108)
//	801314E8: 8034739C (PSVECSquareDistance)
//	801314EC: 80452D5C (lit_8322)
//	8013150C: 80452CC0 (lit_6108)
//	80131534: 8034739C (PSVECSquareDistance)
//	80131538: 80452D5C (lit_8322)
//	80131550: 80452CA4 (lit_6021)
//	8013155C: 803DD470 (now__14mDoMtx_stack_c)
//	80131560: 803DD470 (now__14mDoMtx_stack_c)
//	80131570: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80131594: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80131598: 803DD470 (now__14mDoMtx_stack_c)
//	8013159C: 803DD470 (now__14mDoMtx_stack_c)
//	801315A8: 80346D6C (PSMTXMultVec)
//	801315AC: 803DD470 (now__14mDoMtx_stack_c)
//	801315B0: 803DD470 (now__14mDoMtx_stack_c)
//	801315C4: 80346D6C (PSMTXMultVec)
//	801315D4: 80452DD4 (lit_11442)
//	801315E4: 80452D9C (lit_9053)
//	801315F8: 80452D30 (lit_7625)
//	80131614: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfRopeHit(dCcD_GObjInf* param_0, cXyz const* param_1,
                                     int param_2) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfRopeHit__9daAlink_cCFP12dCcD_GObjInfPC4cXyzi.s"
}
#pragma pop

/* 80131628-801316A4 007C+00 s=2 e=0 z=0  None .text      checkWolfRopeJumpHang__9daAlink_cFv */
//	80131648: 80131450 (checkWolfRopeHit__9daAlink_cCFP12dCcD_GObjInfPC4cXyzi)
//	80131664: 80131450 (checkWolfRopeHit__9daAlink_cCFP12dCcD_GObjInfPC4cXyzi)
//	80131678: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	80131684: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfRopeJumpHang() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfRopeJumpHang__9daAlink_cFv.s"
}
#pragma pop

/* 801316A4-80131718 0074+00 s=1 e=0 z=0  None .text      getWolfRopeMoveSpeed__9daAlink_cFv */
//	801316BC: 80453170 (lit_47597)
//	801316D0: 80453174 (lit_47598)
//	801316D8: 802675E4 (cM_rad2s__Ff)
//	801316E0: 80439A20 (sincosTable___5JMath)
//	801316E4: 80439A20 (sincosTable___5JMath)
//	801316EC: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	801316F0: 8038F46C (m__20daAlinkHIO_wlRope_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfRopeMoveSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfRopeMoveSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 80131718-801319F0 02D8+00 s=6 e=0 z=0  None .text      setWolfRopePosY__9daAlink_cFv */
//	80131730: 803621DC (_savegpr_29)
//	801317BC: 80452CC0 (lit_6108)
//	801317C8: 80452CB8 (lit_6040)
//	80131808: 80452CC0 (lit_6108)
//	80131814: 80452CB8 (lit_6040)
//	80131854: 80452CC0 (lit_6108)
//	80131860: 80452CB8 (lit_6040)
//	801318A0: 80452CC0 (lit_6108)
//	801318AC: 80452CB8 (lit_6040)
//	801318C4: 80452CC0 (lit_6108)
//	801318EC: 8034739C (PSVECSquareDistance)
//	80131900: 80452CC0 (lit_6108)
//	80131928: 8034739C (PSVECSquareDistance)
//	80131958: 80452CC0 (lit_6108)
//	80131970: 80452CB8 (lit_6040)
//	80131988: 80452DAC (lit_9828)
//	80131990: 802675E4 (cM_rad2s__Ff)
//	80131998: 80439A20 (sincosTable___5JMath)
//	8013199C: 80439A20 (sincosTable___5JMath)
//	801319B4: 80452DD4 (lit_11442)
//	801319BC: 80452D30 (lit_7625)
//	801319DC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfRopePosY() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfRopePosY__9daAlink_cFv.s"
}
#pragma pop

/* 801319F0-80131A6C 007C+00 s=5 e=0 z=0  None .text      initWolfRopeShapeAngle__9daAlink_cFv */
//	80131A1C: 803650D0 (abs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initWolfRopeShapeAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/initWolfRopeShapeAngle__9daAlink_cFv.s"
}
#pragma pop

/* 80131A6C-80131AFC 0090+00 s=5 e=0 z=0  None .text      wolfRopeSwingInc__9daAlink_cFf */
//	80131A8C: 80452EB8 (lit_17592)
//	80131A98: 80452D50 (lit_8247)
//	80131AA0: 803620AC (__cvt_fp2unsigned)
//	80131AC4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80131AD0: 80452CB8 (lit_6040)
//	80131AD8: 80452CBC (lit_6041)
//	80131AE4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfRopeSwingInc(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/wolfRopeSwingInc__9daAlink_cFf.s"
}
#pragma pop

/* 80131AFC-80131C00 0104+00 s=8 e=0 z=0  None .text      setWolfRopeOffsetY__9daAlink_cFi */
//	80131B18: 80452CC0 (lit_6108)
//	80131B34: 80452D50 (lit_8247)
//	80131B48: 80452D14 (lit_7307)
//	80131B4C: 80452CA4 (lit_6021)
//	80131B50: 80452CB8 (lit_6040)
//	80131B58: 8026F97C (cLib_addCalc__FPfffff)
//	80131B5C: 80439A20 (sincosTable___5JMath)
//	80131B60: 80439A20 (sincosTable___5JMath)
//	80131B74: 80452C98 (lit_5943)
//	80131B7C: 80452CB8 (lit_6040)
//	80131B94: 80452D14 (lit_7307)
//	80131BAC: 80452CB0 (lit_6025)
//	80131BC8: 80453178 (lit_47725)
//	80131BCC: 8045317C (lit_47726)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfRopeOffsetY(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfRopeOffsetY__9daAlink_cFi.s"
}
#pragma pop

/* 80131C00-80131C74 0074+00 s=2 e=0 z=0  None .text      getDirectionRopeMove__9daAlink_cCFv */
//	80131C24: 803650D0 (abs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getDirectionRopeMove() const {
    nofralloc
#include "asm/d/a/d_a_alink/getDirectionRopeMove__9daAlink_cCFv.s"
}
#pragma pop

/* 80131C74-80131DA0 012C+00 s=5 e=0 z=0  None .text      procWolfRopeMoveInit__9daAlink_cFii */
//	80131C84: 803621D8 (_savegpr_28)
//	80131C9C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80131CA4: 801319F0 (initWolfRopeShapeAngle__9daAlink_cFv)
//	80131CBC: 80452CC0 (lit_6108)
//	80131CC0: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	80131CC4: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	80131CCC: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80131CD8: 80453170 (lit_47597)
//	80131CEC: 80452CC0 (lit_6108)
//	80131CF8: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	80131CFC: 80452CC0 (lit_6108)
//	80131D34: 80131718 (setWolfRopePosY__9daAlink_cFv)
//	80131D40: 80131AFC (setWolfRopeOffsetY__9daAlink_cFi)
//	80131D80: 800B3844 (initServiceWaitTime__9daAlink_cFv)
//	80131D8C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeMoveInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeMoveInit__9daAlink_cFii.s"
}
#pragma pop

/* 80131DA0-80132738 0998+00 s=1 e=0 z=0  None .text      procWolfRopeMove__9daAlink_cFv */
//	80131DD8: 803621D0 (_savegpr_26)
//	80131DEC: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	80131DF0: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	80131E1C: 80452CBC (lit_6041)
//	80131E28: 80452CC0 (lit_6108)
//	80131E90: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	80131EA4: 800B7BF8 (orderTalk__9daAlink_cFi)
//	80131ECC: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80131EE4: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	80131EF0: 80131C00 (getDirectionRopeMove__9daAlink_cCFv)
//	80131F04: 80452CC0 (lit_6108)
//	80131F2C: 8034739C (PSVECSquareDistance)
//	80131F30: 80452CC0 (lit_6108)
//	80131F40: 80452CE8 (lit_6846)
//	80131F48: 80452CF0 (lit_6847)
//	80131F90: 80452CF8 (lit_6848)
//	80131F9C: 80450AE0 (__float_nan)
//	80131FA0: 80450AE0 (__float_nan)
//	8013200C: 80450AE0 (__float_nan)
//	80132010: 80450AE0 (__float_nan)
//	80132028: 80452CC0 (lit_6108)
//	80132050: 8034739C (PSVECSquareDistance)
//	80132054: 80452CC0 (lit_6108)
//	80132064: 80452CE8 (lit_6846)
//	8013206C: 80452CF0 (lit_6847)
//	801320B4: 80452CF8 (lit_6848)
//	801320C0: 80450AE0 (__float_nan)
//	801320C4: 80450AE0 (__float_nan)
//	80132130: 80450AE0 (__float_nan)
//	80132134: 80450AE0 (__float_nan)
//	80132140: 80452CC0 (lit_6108)
//	8013214C: 80452CB8 (lit_6040)
//	80132158: 80452D50 (lit_8247)
//	80132184: 80347138 (PSVECSquareMag)
//	80132188: 80452D50 (lit_8247)
//	80132198: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	801321A0: 80267128 (atan2sX_Z__4cXyzCFv)
//	801321BC: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	801321CC: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	801321E0: 80452CC0 (lit_6108)
//	801321F0: 80347138 (PSVECSquareMag)
//	801321F4: 80452CB8 (lit_6040)
//	80132204: 80267128 (atan2sX_Z__4cXyzCFv)
//	80132220: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	80132230: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	8013223C: 80452C98 (lit_5943)
//	80132258: 80133054 (procWolfRopeStaggerInit__9daAlink_cFi)
//	80132270: 80133054 (procWolfRopeStaggerInit__9daAlink_cFi)
//	8013227C: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	80132280: 80452CC0 (lit_6108)
//	8013228C: 80452CB8 (lit_6040)
//	80132298: 80453180 (lit_48076)
//	801322B0: 80452CA4 (lit_6021)
//	801322C8: 800B47B4 (checkServiceWaitMode__9daAlink_cFv)
//	801322F4: 80133054 (procWolfRopeStaggerInit__9daAlink_cFi)
//	80132300: 800B3844 (initServiceWaitTime__9daAlink_cFv)
//	8013230C: 800B3844 (initServiceWaitTime__9daAlink_cFv)
//	8013231C: 80452CC0 (lit_6108)
//	80132320: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80132330: 80452E64 (lit_14954)
//	80132334: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80132344: 80452CA4 (lit_6021)
//	80132368: 80452C98 (lit_5943)
//	8013237C: 80270E24 (cLib_distanceAngleS__Fss)
//	80132398: 80452D10 (lit_7306)
//	801323AC: 80452D10 (lit_7306)
//	801323BC: 80132D68 (procWolfRopeTurnInit__9daAlink_cFv)
//	801323EC: 800BF37C (initBasAnime__9daAlink_cFv)
//	801323F4: 80452D30 (lit_7625)
//	801323F8: 80131A6C (wolfRopeSwingInc__9daAlink_cFf)
//	80132414: 80453170 (lit_47597)
//	80132418: 800F8F08 (stopHalfMoveAnime__9daAlink_cFf)
//	80132420: 80452D30 (lit_7625)
//	80132424: 80131A6C (wolfRopeSwingInc__9daAlink_cFf)
//	80132438: 800CE628 (checkSubjectAction__9daAlink_cFv)
//	80132450: 801316A4 (getWolfRopeMoveSpeed__9daAlink_cFv)
//	8013245C: 80452CC0 (lit_6108)
//	80132468: 80452CBC (lit_6041)
//	80132488: 80452CA4 (lit_6021)
//	801324A0: 800737E4 (LockonTruth__12dAttention_cFv)
//	801324E0: 80132D68 (procWolfRopeTurnInit__9daAlink_cFv)
//	80132504: 80452CC0 (lit_6108)
//	80132510: 80452F30 (lit_21736)
//	8013251C: 80452CB8 (lit_6040)
//	80132528: 80452F30 (lit_21736)
//	80132550: 80452DB0 (lit_10039)
//	80132558: 80452DD4 (lit_11442)
//	80132560: 80439A20 (sincosTable___5JMath)
//	80132564: 80439A20 (sincosTable___5JMath)
//	801325AC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	801325B8: 80131718 (setWolfRopePosY__9daAlink_cFv)
//	801325C4: 80131AFC (setWolfRopeOffsetY__9daAlink_cFi)
//	801325CC: 80452CB8 (lit_6040)
//	801325D8: 80453184 (lit_48077)
//	801325E4: 80453188 (lit_48078)
//	801325F4: 80452CB0 (lit_6025)
//	80132610: 80452CB8 (lit_6040)
//	8013262C: 80452CC0 (lit_6108)
//	80132654: 8034739C (PSVECSquareDistance)
//	80132668: 80452CC0 (lit_6108)
//	80132690: 8034739C (PSVECSquareDistance)
//	801326C4: 80453170 (lit_47597)
//	80132724: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeMove__9daAlink_cFv.s"
}
#pragma pop

/* 80132738-80132914 01DC+00 s=5 e=0 z=0  None .text      procWolfRopeHangInit__9daAlink_cFi */
//	80132748: 803621DC (_savegpr_29)
//	8013275C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80132778: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	8013277C: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	80132784: 80452CC0 (lit_6108)
//	80132790: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	801327EC: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	801327F0: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	801327FC: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80132830: 80452CC0 (lit_6108)
//	80132838: 80452CB8 (lit_6040)
//	80132844: 804061C0 (g_dComIfG_gameInfo)
//	80132848: 804061C0 (g_dComIfG_gameInfo)
//	8013285C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80132868: 801319F0 (initWolfRopeShapeAngle__9daAlink_cFv)
//	801328AC: 80452D00 (lit_6895)
//	801328B0: 80131A6C (wolfRopeSwingInc__9daAlink_cFf)
//	801328C0: 80131718 (setWolfRopePosY__9daAlink_cFv)
//	801328CC: 80131AFC (setWolfRopeOffsetY__9daAlink_cFi)
//	801328D4: 80452CC0 (lit_6108)
//	801328E0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	801328E4: 80452CC0 (lit_6108)
//	80132900: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeHangInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeHangInit__9daAlink_cFi.s"
}
#pragma pop

/* 80132914-80132D68 0454+00 s=1 e=0 z=0  None .text      procWolfRopeHang__9daAlink_cFv */
//	8013292C: 803621DC (_savegpr_29)
//	80132948: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80132954: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80132978: 80452E64 (lit_14954)
//	801329AC: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	801329C8: 80131C74 (procWolfRopeMoveInit__9daAlink_cFii)
//	801329EC: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	80132A04: 80131C74 (procWolfRopeMoveInit__9daAlink_cFii)
//	80132A2C: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	80132A30: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	80132A3C: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80132A50: 80453050 (lit_34957)
//	80132A64: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80132A84: 80439A20 (sincosTable___5JMath)
//	80132A88: 80439A20 (sincosTable___5JMath)
//	80132A94: 80452DB0 (lit_10039)
//	80132AE0: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80132AE4: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80132AEC: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
//	80132B10: 80453050 (lit_34957)
//	80132B14: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80132B24: 80452E64 (lit_14954)
//	80132B28: 80131A6C (wolfRopeSwingInc__9daAlink_cFf)
//	80132B34: 80452CB8 (lit_6040)
//	80132B54: 80452D3C (lit_7808)
//	80132B6C: 80453050 (lit_34957)
//	80132B84: 80452EEC (lit_19382)
//	80132BE4: 80452D38 (lit_7807)
//	80132BE8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80132BF8: 80452E64 (lit_14954)
//	80132BFC: 80131A6C (wolfRopeSwingInc__9daAlink_cFf)
//	80132C08: 80452CB8 (lit_6040)
//	80132C28: 80452D1C (lit_7448)
//	80132C40: 80452D38 (lit_7807)
//	80132C58: 80452EE4 (lit_19380)
//	80132CB8: 80452D24 (lit_7450)
//	80132CBC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80132CC8: 80452CC0 (lit_6108)
//	80132CD0: 80452CB8 (lit_6040)
//	80132CDC: 804061C0 (g_dComIfG_gameInfo)
//	80132CE0: 804061C0 (g_dComIfG_gameInfo)
//	80132CF4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80132CF8: 80452D74 (lit_8502)
//	80132D18: 80452D34 (lit_7710)
//	80132D40: 80131AFC (setWolfRopeOffsetY__9daAlink_cFi)
//	80132D54: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeHang() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeHang__9daAlink_cFv.s"
}
#pragma pop

/* 80132D68-80132E88 0120+00 s=1 e=0 z=0  None .text      procWolfRopeTurnInit__9daAlink_cFv */
//	80132D80: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80132D8C: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	80132D90: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	80132D94: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80132DB8:
// 80452CC0 (lit_6108) 	80132DC4: 800BB770 (setSpecialGravity__9daAlink_cFffi) 	80132DC8: 80452CC0
//(lit_6108) 	80132DD8: 801319F0 (initWolfRopeShapeAngle__9daAlink_cFv) 	80132DF0: 8042561C
//(l_wolfBaseAnime) 	80132DF4: 8042561C (l_wolfBaseAnime) 	80132E30: 80452CB8 (lit_6040)
//80132E38: 80452CB0 (lit_6025)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 80132E88-80133054 01CC+00 s=1 e=0 z=0  None .text      procWolfRopeTurn__9daAlink_cFv */
//	80132EA0: 803621DC (_savegpr_29)
//	80132EC4: 8042561C (l_wolfBaseAnime)
//	80132EC8: 8042561C (l_wolfBaseAnime)
//	80132ED0: 80425634 (l_wolfRopeBaseAnime)
//	80132ED4: 80425634 (l_wolfRopeBaseAnime)
//	80132F00: 80131718 (setWolfRopePosY__9daAlink_cFv)
//	80132F08: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80132F20: 80131C74 (procWolfRopeMoveInit__9daAlink_cFii)
//	80132F30: 80452D34 (lit_7710)
//	80132F34: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80132F44: 80452CE0 (lit_6845)
//	80132F48: 80131A6C (wolfRopeSwingInc__9daAlink_cFf)
//	80132F54: 80452CC0 (lit_6108)
//	80132F5C: 80452CB8 (lit_6040)
//	80132F68: 804061C0 (g_dComIfG_gameInfo)
//	80132F6C: 804061C0 (g_dComIfG_gameInfo)
//	80132F80: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80132F8C: 80452D84 (lit_8781)
//	80132F90: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80132FA0: 80452D30 (lit_7625)
//	80132FA4: 80131A6C (wolfRopeSwingInc__9daAlink_cFf)
//	80132FB0: 80452D74 (lit_8502)
//	80132FBC: 80452D34 (lit_7710)
//	80132FDC: 80452EB4 (lit_17382)
//	80132FF4: 80452D84 (lit_8781)
//	8013302C: 80131AFC (setWolfRopeOffsetY__9daAlink_cFi)
//	80133040: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeTurn__9daAlink_cFv.s"
}
#pragma pop

/* 80133054-80133164 0110+00 s=1 e=0 z=0  None .text      procWolfRopeStaggerInit__9daAlink_cFi */
//	80133074: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80133088: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8013308C: 80452CC0 (lit_6108)
//	801330A8: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	801330AC: 80425634 (l_wolfRopeBaseAnime)
//	801330B0: 80425634 (l_wolfRopeBaseAnime)
//	801330D8: 801319F0 (initWolfRopeShapeAngle__9daAlink_cFv)
//	801330E4: 80452CC0 (lit_6108)
//	801330F0: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	801330F4: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeStaggerInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeStaggerInit__9daAlink_cFi.s"
}
#pragma pop

/* 80133164-8013384C 06E8+00 s=1 e=0 z=0  None .text      procWolfRopeStagger__9daAlink_cFv */
//	8013318C: 803621DC (_savegpr_29)
//	801331B0: 80452CC0 (lit_6108)
//	801331D8: 8034739C (PSVECSquareDistance)
//	801331DC: 80452CC0 (lit_6108)
//	801331EC: 80452CE8 (lit_6846)
//	801331F4: 80452CF0 (lit_6847)
//	8013323C: 80452CF8 (lit_6848)
//	80133248: 80450AE0 (__float_nan)
//	8013324C: 80450AE0 (__float_nan)
//	801332B8: 80450AE0 (__float_nan)
//	801332BC: 80450AE0 (__float_nan)
//	801332DC: 80452CC0 (lit_6108)
//	80133304: 8034739C (PSVECSquareDistance)
//	80133308: 80452CC0 (lit_6108)
//	80133318: 80452CE8 (lit_6846)
//	80133320: 80452CF0 (lit_6847)
//	80133368: 80452CF8 (lit_6848)
//	80133374: 80450AE0 (__float_nan)
//	80133378: 80450AE0 (__float_nan)
//	801333E4: 80450AE0 (__float_nan)
//	801333E8: 80450AE0 (__float_nan)
//	80133448: 80452CC0 (lit_6108)
//	80133458: 80347138 (PSVECSquareMag)
//	8013345C: 80452D50 (lit_8247)
//	8013346C: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	80133474: 80267128 (atan2sX_Z__4cXyzCFv)
//	80133490: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	801334A0: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	801334A8: 80452CC0 (lit_6108)
//	801334B4: 80452CB8 (lit_6040)
//	801334C0: 80453180 (lit_48076)
//	801334E0: 80131C74 (procWolfRopeMoveInit__9daAlink_cFii)
//	801334EC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80133510: 80131C74 (procWolfRopeMoveInit__9daAlink_cFii)
//	80133520: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	8013352C: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	80133534: 80131C00 (getDirectionRopeMove__9daAlink_cCFv)
//	80133548: 80452CA4 (lit_6021)
//	80133560: 80452CA4 (lit_6021)
//	80133588: 80131C74 (procWolfRopeMoveInit__9daAlink_cFii)
//	8013359C: 800CE628 (checkSubjectAction__9daAlink_cFv)
//	801335B4: 80452CE0 (lit_6845)
//	801335B8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801335C8: 80452F64 (lit_24589)
//	801335CC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801335DC: 8045318C (lit_48504)
//	801335E0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801335F0: 80452D30 (lit_7625)
//	801335F4: 80131A6C (wolfRopeSwingInc__9daAlink_cFf)
//	80133600: 80452EBC (lit_17593)
//	80133604: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80133634: 80452E04 (lit_13794)
//	80133638: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80133648: 80452F54 (lit_24322)
//	8013364C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013365C: 80452D00 (lit_6895)
//	80133660: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80133670: 80453190 (lit_48505)
//	80133674: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80133684: 80452D30 (lit_7625)
//	80133688: 80131A6C (wolfRopeSwingInc__9daAlink_cFf)
//	80133694: 80452DB4 (lit_10040)
//	80133698: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801336D0: 80452EE4 (lit_19380)
//	801336DC: 80452CC0 (lit_6108)
//	801336E8: 80452DAC (lit_9828)
//	801336F0: 80452E64 (lit_14954)
//	801336F8: 802675E4 (cM_rad2s__Ff)
//	80133708: 80439A20 (sincosTable___5JMath)
//	8013370C: 80439A20 (sincosTable___5JMath)
//	8013371C: 80452D74 (lit_8502)
//	80133720: 80452D14 (lit_7307)
//	80133740: 80452CB0 (lit_6025)
//	80133770: 80452D3C (lit_7808)
//	80133780: 80452DC8 (lit_10286)
//	8013378C: 80452D7C (lit_8779)
//	8013379C: 80452F6C (lit_24591)
//	801337C0: 80452D84 (lit_8781)
//	801337D0: 80452CE0 (lit_6845)
//	801337DC: 80452D98 (lit_8786)
//	801337EC: 80453194 (lit_48506)
//	80133814: 80131AFC (setWolfRopeOffsetY__9daAlink_cFi)
//	80133838: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeStagger() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeStagger__9daAlink_cFv.s"
}
#pragma pop

/* 8013384C-80133930 00E4+00 s=1 e=0 z=0  None .text      procWolfRopeSubjectivityInit__9daAlink_cFv
 */
//	80133864: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80133870: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80133884: 80452CC0 (lit_6108)
//	80133888: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	8013388C: 8038F46C (m__20daAlinkHIO_wlRope_c0)
//	80133894: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8013389C: 801319F0 (initWolfRopeShapeAngle__9daAlink_cFv)
//	801338B0: 80452CC0 (lit_6108)
//	801338BC: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	801338C0: 80452CC0 (lit_6108)
//	801338D0: 80131718 (setWolfRopePosY__9daAlink_cFv)
//	801338DC: 80131AFC (setWolfRopeOffsetY__9daAlink_cFi)
//	80133914: 800CEAF4 (setSubjectMode__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 80133930-80133D6C 043C+00 s=1 e=0 z=0  None .text      procWolfRopeSubjectivity__9daAlink_cFv */
//	801339A8: 80452CC0 (lit_6108)
//	801339D0: 8034739C (PSVECSquareDistance)
//	801339D4: 80452CC0 (lit_6108)
//	801339E4: 80452CE8 (lit_6846)
//	801339EC: 80452CF0 (lit_6847)
//	80133A34: 80452CF8 (lit_6848)
//	80133A40: 80450AE0 (__float_nan)
//	80133A44: 80450AE0 (__float_nan)
//	80133AB0: 80450AE0 (__float_nan)
//	80133AB4: 80450AE0 (__float_nan)
//	80133ACC: 80452CC0 (lit_6108)
//	80133AF4: 8034739C (PSVECSquareDistance)
//	80133AF8: 80452CC0 (lit_6108)
//	80133B08: 80452CE8 (lit_6846)
//	80133B10: 80452CF0 (lit_6847)
//	80133B58: 80452CF8 (lit_6848)
//	80133B64: 80450AE0 (__float_nan)
//	80133B68: 80450AE0 (__float_nan)
//	80133BD4: 80450AE0 (__float_nan)
//	80133BD8: 80450AE0 (__float_nan)
//	80133BE8: 80452CC0 (lit_6108)
//	80133BF4: 80452CB8 (lit_6040)
//	80133C00: 80452D50 (lit_8247)
//	80133C2C: 80347138 (PSVECSquareMag)
//	80133C30: 80452D50 (lit_8247)
//	80133C40: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	80133C48: 80267128 (atan2sX_Z__4cXyzCFv)
//	80133C64: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	80133C74: 80132738 (procWolfRopeHangInit__9daAlink_cFi)
//	80133C80: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	80133C88: 80131718 (setWolfRopePosY__9daAlink_cFv)
//	80133C94: 80131AFC (setWolfRopeOffsetY__9daAlink_cFi)
//	80133CA0: 800CEBD8 (checkSubjectEnd__9daAlink_cFi)
//	80133CB0: 80453184 (lit_48077)
//	80133CC0: 80453188 (lit_48078)
//	80133CE4: 80131C74 (procWolfRopeMoveInit__9daAlink_cFii)
//	80133D00: 800CE8A0 (setBodyAngleToCamera__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 80133D6C-80133EF0 0184+00 s=0 e=0 z=1  None .text      getWolfTagJumpTime__9daAlink_cCFv */
//	80133D90: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80133D94: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80133DC0: 80133EF0 (checkMidnaLockJumpPoint__9daAlink_cCFv)
//	80133DC8: 8034739C (PSVECSquareDistance)
//	80133DCC: 80452CC0 (lit_6108)
//	80133DDC: 80452CE8 (lit_6846)
//	80133DE4: 80452CF0 (lit_6847)
//	80133E2C: 80452CF8 (lit_6848)
//	80133E38: 80450AE0 (__float_nan)
//	80133E3C: 80450AE0 (__float_nan)
//	80133EA8: 80450AE0 (__float_nan)
//	80133EAC: 80450AE0 (__float_nan)
//	80133EB0: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80133EB4: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfTagJumpTime() const {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfTagJumpTime__9daAlink_cCFv.s"
}
#pragma pop

/* 80133EF0-80134000 0110+00 s=3 e=1 z=1  None .text      checkMidnaLockJumpPoint__9daAlink_cCFv */
//	80133F20: 80129958 (checkMidnaUseAbility__9daAlink_cCFv)
//	80133F2C: 80451018 (m_midnaActor__9daPy_py_c)
//	80133F44: 804061C0 (g_dComIfG_gameInfo)
//	80133F48: 804061C0 (g_dComIfG_gameInfo)
//	80133F50: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMidnaLockJumpPoint() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkMidnaLockJumpPoint__9daAlink_cCFv.s"
}
#pragma pop

/* 80134000-80134838 0838+00 s=4 e=0 z=0  None .text procWolfTagJumpInit__9daAlink_cFP10fopAc_ac_c
 */
//	80134028: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013402C: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134030: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	8013404C: 80439A20 (sincosTable___5JMath)
//	80134050: 80439A20 (sincosTable___5JMath)
//	80134068: 80452CD0 (lit_6238)
//	80134074: 80452D68 (lit_8472)
//	8013409C: 80452CE0 (lit_6845)
//	801340A8: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	801340F8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8013411C: 80452CC0 (lit_6108)
//	8013412C: 80347138 (PSVECSquareMag)
//	80134130: 80452CC0 (lit_6108)
//	80134140: 80452CE8 (lit_6846)
//	80134148: 80452CF0 (lit_6847)
//	80134190: 80452CF8 (lit_6848)
//	8013419C: 80450AE0 (__float_nan)
//	801341A0: 80450AE0 (__float_nan)
//	8013420C: 80450AE0 (__float_nan)
//	80134210: 80450AE0 (__float_nan)
//	80134248: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	80134264: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80134268: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8013427C: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	80134280: 8042561C (l_wolfBaseAnime)
//	80134284: 8042561C (l_wolfBaseAnime)
//	801342A8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	801342C8: 80347138 (PSVECSquareMag)
//	801342CC: 80452CC0 (lit_6108)
//	801342DC: 80452CE8 (lit_6846)
//	801342E4: 80452CF0 (lit_6847)
//	8013432C: 80452CF8 (lit_6848)
//	80134338: 80450AE0 (__float_nan)
//	8013433C: 80450AE0 (__float_nan)
//	801343A8: 80450AE0 (__float_nan)
//	801343AC: 80450AE0 (__float_nan)
//	801343B0: 80452CB8 (lit_6040)
//	801343BC: 80267128 (atan2sX_Z__4cXyzCFv)
//	801343DC: 80452CC0 (lit_6108)
//	801343F0: 80347138 (PSVECSquareMag)
//	801343F4: 80452CC0 (lit_6108)
//	80134404: 80452CE8 (lit_6846)
//	8013440C: 80452CF0 (lit_6847)
//	80134454: 80452CF8 (lit_6848)
//	80134460: 80450AE0 (__float_nan)
//	80134464: 80450AE0 (__float_nan)
//	801344D0: 80450AE0 (__float_nan)
//	801344D4: 80450AE0 (__float_nan)
//	801344F0: 80452CC0 (lit_6108)
//	80134504: 80347138 (PSVECSquareMag)
//	80134508: 80452CC0 (lit_6108)
//	80134518: 80452CE8 (lit_6846)
//	80134520: 80452CF0 (lit_6847)
//	80134568: 80452CF8 (lit_6848)
//	80134574: 80450AE0 (__float_nan)
//	80134578: 80450AE0 (__float_nan)
//	801345E4: 80450AE0 (__float_nan)
//	801345E8: 80450AE0 (__float_nan)
//	801345F4: 80452CB8 (lit_6040)
//	8013462C: 80452D00 (lit_6895)
//	80134638: 80452DB4 (lit_10040)
//	80134644: 80452CC0 (lit_6108)
//	8013465C: 80452F50 (lit_23595)
//	80134660: 80452D14 (lit_7307)
//	8013466C: 80452D24 (lit_7450)
//	80134684: 80452CB0 (lit_6025)
//	801346AC: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	801346B0: 8045313C (lit_43530)
//	801346BC: 80452CC0 (lit_6108)
//	801346E0: 80452CC0 (lit_6108)
//	801346F0: 80452D6C (lit_8473)
//	80134700: 80452CB0 (lit_6025)
//	80134728: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	80134738: 80452CB0 (lit_6025)
//	80134770: 80452D14 (lit_7307)
//	80134784: 80452CB0 (lit_6025)
//	801347AC: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	801347C4: 80267674 (cM_atan2s__Fff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTagJumpInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTagJumpInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80134838-80134DB8 0580+00 s=1 e=0 z=0  None .text      procWolfTagJump__9daAlink_cFv */
//	80134848: 803621DC (_savegpr_29)
//	80134898: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	8013489C: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	801348B4: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	8013490C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80134918: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80134930: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8013496C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013497C: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134980: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134998: 80134000 (procWolfTagJumpInit__9daAlink_cFP10fopAc_ac_c)
//	801349A4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801349C4: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	801349C8: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	801349D4: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80134A18: 80267674 (cM_atan2s__Fff)
//	80134A30: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80134A40: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80134A5C: 80452CC0 (lit_6108)
//	80134A60: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80134A64: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80134A6C: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80134A88: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80134AA8: 80452CC0 (lit_6108)
//	80134AB8: 80347138 (PSVECSquareMag)
//	80134ABC: 80452CC0 (lit_6108)
//	80134ACC: 80452CE8 (lit_6846)
//	80134AD4: 80452CF0 (lit_6847)
//	80134B1C: 80452CF8 (lit_6848)
//	80134B28: 80450AE0 (__float_nan)
//	80134B2C: 80450AE0 (__float_nan)
//	80134B98: 80450AE0 (__float_nan)
//	80134B9C: 80450AE0 (__float_nan)
//	80134BA0: 80452F58 (lit_24323)
//	80134C58: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134C5C: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134C64: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80134C68:
// 80452CC0 (lit_6108) 	80134C70: 80430CF4 (Zero__4cXyz) 	80134C74: 80430CF4 (Zero__4cXyz)
// 80134C98: 800BB770 (setSpecialGravity__9daAlink_cFffi) 	80134CAC: 801211C0
//(setFootEffectProcType__9daAlink_cFi) 	80134CB0: 80452CC0 (lit_6108) 	80134CB8: 80452CB8
//(lit_6040) 	80134CC4: 804061C0 (g_dComIfG_gameInfo) 	80134CC8: 804061C0 (g_dComIfG_gameInfo)
//	80134CDC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80134CEC: 80134DB8 (procWolfTagJumpLandInit__9daAlink_cFP10fopAc_ac_c)
//	80134CFC: 80134DB8 (procWolfTagJumpLandInit__9daAlink_cFP10fopAc_ac_c)
//	80134D18: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80134D1C: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80134D24: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
//	80134D34: 80439A20 (sincosTable___5JMath)
//	80134D38: 80439A20 (sincosTable___5JMath)
//	80134D44: 80452D00 (lit_6895)
//	80134D7C: 80134DB8 (procWolfTagJumpLandInit__9daAlink_cFP10fopAc_ac_c)
//	80134D8C: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80134D90: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	80134D98: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
//	80134DA4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTagJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTagJump__9daAlink_cFv.s"
}
#pragma pop

/* 80134DB8-80134EBC 0104+00 s=1 e=0 z=0  None .text
 * procWolfTagJumpLandInit__9daAlink_cFP10fopAc_ac_c            */
//	80134DD8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80134DE4: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134DE8: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134DF0: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80134E00:
// 8038F7DC (m__21daAlinkHIO_wlPoint_c0) 	80134E04: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
// 80134E14: 80452CC0 (lit_6108) 	80134E1C: 80452CC0 (lit_6108) 	80134E24: 8042561C
// (l_wolfBaseAnime) 	80134E28: 8042561C (l_wolfBaseAnime) 	80134E50: 8015ECB8
// (setData__16daPy_actorKeep_cFP10fopAc_ac_c) 	80134E64: 801211C0
//(setFootEffectProcType__9daAlink_cFi) 	80134E70: 80452CC0 (lit_6108) 	80134E78: 80452CB8 (lit_6040)
//	80134E84: 804061C0 (g_dComIfG_gameInfo)
//	80134E88: 804061C0 (g_dComIfG_gameInfo)
//	80134E9C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTagJumpLandInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTagJumpLandInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80134EBC-80135050 0194+00 s=1 e=0 z=0  None .text      procWolfTagJumpLand__9daAlink_cFv */
//	80134F44: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134F48: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134F60: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80134F78: 80134000 (procWolfTagJumpInit__9daAlink_cFP10fopAc_ac_c)
//	80134F8C: 80452CC0 (lit_6108)
//	80134F90: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134F94: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134FA4: 8026F97C (cLib_addCalc__FPfffff)
//	80134FA8: 80452CC4 (lit_6109)
//	80134FB8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80134FCC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80134FD8: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134FDC: 8038F7DC (m__21daAlinkHIO_wlPoint_c0)
//	80134FF4: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80135014: 800BF1CC (seStartMapInfoLevel__9daAlink_cFUl)
//	80135030: 800BF1CC (seStartMapInfoLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTagJumpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTagJumpLand__9daAlink_cFv.s"
}
#pragma pop

/* 80135050-801350A4 0054+00 s=1 e=0 z=0  None .text      daAlink_searchGiant__FP10fopAc_ac_cPv */
//	80135074: 8034739C (PSVECSquareDistance)
//	80135078: 80453198 (lit_49124)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchGiant(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchGiant__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 801350A4-80135160 00BC+00 s=1 e=0 z=0  None .text      daAlink_searchGiantTalk__FP10fopAc_ac_cPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchGiantTalk(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchGiantTalk__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80135160-801351F8 0098+00 s=1 e=0 z=0  None .text      procWolfGiantPuzzleInit__9daAlink_cFv */
//	80135178: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80135190: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80135194: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8013519C: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
//	801351B8: 80452CC0 (lit_6108)
//	801351C0: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	801351C4: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	801351DC: 80127CAC (offWolfEyeUp__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGiantPuzzleInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGiantPuzzleInit__9daAlink_cFv.s"
}
#pragma pop

/* 801351F8-80135458 0260+00 s=1 e=0 z=0  None .text      procWolfGiantPuzzle__9daAlink_cFv */
//	8013521C: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80135248: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	8013525C: 800B3268 (setDoStatusEmphasys__9daAlink_cFUc)
//	8013526C: 801350A4 (daAlink_searchGiantTalk__FP10fopAc_ac_cPv)
//	80135270: 801350A4 (daAlink_searchGiantTalk__FP10fopAc_ac_cPv)
//	80135278: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80135290: 8001B068 (fopAcM_orderTalkEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs)
//	8013529C: 80452CA4 (lit_6021)
//	801352B8: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	801352C4: 80439A20 (sincosTable___5JMath)
//	801352C8: 80439A20 (sincosTable___5JMath)
//	801352E0: 80452E9C (lit_16567)
//	801352EC: 80452D30 (lit_7625)
//	8013531C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80135320: 804061C0 (g_dComIfG_gameInfo)
//	80135324: 804061C0 (g_dComIfG_gameInfo)
//	80135330: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80135344: 80452DA0 (lit_9054)
//	80135350: 80135050 (daAlink_searchGiant__FP10fopAc_ac_cPv)
//	80135354: 80135050 (daAlink_searchGiant__FP10fopAc_ac_cPv)
//	8013535C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80135368: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8013536C: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	801353D0: 80270740 (cLib_chaseF__FPfff)
//	801353E8: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	801353EC: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	801353FC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8013540C: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80135438: 80452CBC (lit_6041)
//	8013543C: 80128844 (setBlendWolfMoveAnime__9daAlink_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGiantPuzzle() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGiantPuzzle__9daAlink_cFv.s"
}
#pragma pop

/* 80135458-801354C8 0070+00 s=2 e=0 z=0  None .text      setWolfHangGroundY__9daAlink_cFv */
//	80135498: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8013549C: 804061C0 (g_dComIfG_gameInfo)
//	801354A0: 804061C0 (g_dComIfG_gameInfo)
//	801354AC: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfHangGroundY() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfHangGroundY__9daAlink_cFv.s"
}
#pragma pop

/* 801354C8-801355EC 0124+00 s=2 e=0 z=0  None .text      changeWolfHangEndProc__9daAlink_cFv */
//	801354DC: 80135458 (setWolfHangGroundY__9daAlink_cFv)
//	801354FC: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80135500: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80135514: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135518: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	8013552C: 80452CB8 (lit_6040)
//	80135540: 8012F138 (procWolfLandInit__9daAlink_cFv)
//	80135550: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80135568: 80439A20 (sincosTable___5JMath)
//	8013556C: 80439A20 (sincosTable___5JMath)
//	80135578: 80452D00 (lit_6895)
//	801355BC: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	801355C0: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	801355C8: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeWolfHangEndProc() {
    nofralloc
#include "asm/d/a/d_a_alink/changeWolfHangEndProc__9daAlink_cFv.s"
}
#pragma pop

/* 801355EC-80135668 007C+00 s=2 e=0 z=0  None .text      procWolfHangReadyInit__9daAlink_cFv */
//	80135604: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80135610: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135614: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135628: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	80135644: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 80135668-801356F0 0088+00 s=1 e=0 z=0  None .text      procWolfHangReady__9daAlink_cFv */
//	80135690: 80270540 (cLib_addCalcAngleS__FPsssss)
//	801356A0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801356C4: 801356F0 (procWolfHangWallCatchInit__9daAlink_cFi)
//	801356D4: 800B58EC (checkWaitAction__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangReady__9daAlink_cFv.s"
}
#pragma pop

/* 801356F0-80135AF4 0404+00 s=3 e=0 z=0  None .text      procWolfHangWallCatchInit__9daAlink_cFi */
//	80135700: 803621DC (_savegpr_29)
//	8013573C: 80439A20 (sincosTable___5JMath)
//	80135740: 80439A20 (sincosTable___5JMath)
//	80135758: 80452D2C (lit_7624)
//	80135788: 800FA85C (checkHangStartSideWall__9daAlink_cFs)
//	80135798: 80452CC0 (lit_6108)
//	801357C0: 8034739C (PSVECSquareDistance)
//	801357C4: 80452CC0 (lit_6108)
//	801357D4: 80452CE8 (lit_6846)
//	801357DC: 80452CF0 (lit_6847)
//	80135824: 80452CF8 (lit_6848)
//	80135830: 80450AE0 (__float_nan)
//	80135834: 80450AE0 (__float_nan)
//	801358A0: 80450AE0 (__float_nan)
//	801358A4: 80450AE0 (__float_nan)
//	801358A8: 80452F50 (lit_23595)
//	801358E4: 80452D30 (lit_7625)
//	80135904: 80439A20 (sincosTable___5JMath)
//	80135908: 80439A20 (sincosTable___5JMath)
//	80135920: 80452D2C (lit_7624)
//	8013592C: 80452D30 (lit_7625)
//	8013595C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80135960: 804061C0 (g_dComIfG_gameInfo)
//	80135964: 804061C0 (g_dComIfG_gameInfo)
//	80135974: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80135990: 80450690 (l_autoUpHeight)
//	801359AC: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	80135A0C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80135A28: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135A2C: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135A34: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80135A4C:
// 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0) 	80135A50: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135A58: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80135A84:
// 8045319C (lit_49395) 	80135A8C: 804531A0 (lit_49396) 	80135A94: 80452CC0 (lit_6108) 80135AA0:
// 804061C0 (g_dComIfG_gameInfo) 	80135AA4: 804061C0 (g_dComIfG_gameInfo) 	80135AB8: 80135458
//(setWolfHangGroundY__9daAlink_cFv) 	80135AE0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangWallCatchInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangWallCatchInit__9daAlink_cFi.s"
}
#pragma pop

/* 80135AF4-80135CD8 01E4+00 s=1 e=0 z=0  None .text      procWolfHangWallCatch__9daAlink_cFv */
//	80135B20: 80452E74 (lit_15341)
//	80135B4C: 801354C8 (changeWolfHangEndProc__9daAlink_cFv)
//	80135BA0: 800BF194 (seStartMapInfo__9daAlink_cFUl)
//	80135BA8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80135BE0: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135BE4: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135BEC: 80452DBC (lit_10042)
//	80135BF4: 80452D3C (lit_7808)
//	80135BF8: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	80135C10: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135C14: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135C1C: 80452E94 (lit_16210)
//	80135C24: 80452D14 (lit_7307)
//	80135C28: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	80135C40: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80135C64: 8013890C (procWolfSwimEndWaitInit__9daAlink_cFi)
//	80135C88: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135C8C: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135CA4: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangWallCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangWallCatch__9daAlink_cFv.s"
}
#pragma pop

/* 80135CD8-80135F00 0228+00 s=1 e=0 z=0  None .text
 * procWolfHangFallStartInit__9daAlink_cFP8cM3dGPla             */
//	80135CE8: 803621DC (_savegpr_29)
//	80135D18: 80267128 (atan2sX_Z__4cXyzCFv)
//	80135D24: 80452D2C (lit_7624)
//	80135D54: 800FA85C (checkHangStartSideWall__9daAlink_cFs)
//	80135D5C: 80452D00 (lit_6895)
//	80135D80: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80135D84: 804061C0 (g_dComIfG_gameInfo)
//	80135D88: 804061C0 (g_dComIfG_gameInfo)
//	80135D94: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80135D9C: 80452DA4 (lit_9138)
//	80135DB0: 80450694 (l_autoDownHeight)
//	80135DD4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80135DFC: 800ADB78 (setOldRootQuaternion__9daAlink_cFsss)
//	80135E14: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135E18: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	80135E20: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80135E2C:
// 80439A20 (sincosTable___5JMath) 	80135E30: 80439A20 (sincosTable___5JMath) 	80135E44: 80452D00
//(lit_6895) 	80135E54: 80452F50 (lit_23595) 	80135E94: 800A2198
//(commonLineCheck__9daAlink_cFP4cXyzP4cXyz) 	80135EBC: 80452CC0 (lit_6108) 	80135EC8: 804061C0
//(g_dComIfG_gameInfo) 	80135ECC: 804061C0 (g_dComIfG_gameInfo) 	80135EEC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangFallStartInit(cM3dGPla* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangFallStartInit__9daAlink_cFP8cM3dGPla.s"
}
#pragma pop

/* 80135F00-80136064 0164+00 s=1 e=0 z=0  None .text      procWolfHangFallStart__9daAlink_cFv */
//	80135F24: 80452DA0 (lit_9054)
//	80135F30: 801354C8 (changeWolfHangEndProc__9daAlink_cFv)
//	80135F48: 80452D44 (lit_7977)
//	80135F4C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80135F58: 80452CC0 (lit_6108)
//	80135F60: 80452CB8 (lit_6040)
//	80135F6C: 804061C0 (g_dComIfG_gameInfo)
//	80135F70: 804061C0 (g_dComIfG_gameInfo)
//	80135F84: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80135FA4: 80453050 (lit_34957)
//	80135FC0: 80452CA4 (lit_6021)
//	80135FDC: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	80135FF8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80136008: 80452CA4 (lit_6021)
//	80136024: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	80136044: 801356F0 (procWolfHangWallCatchInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangFallStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangFallStart__9daAlink_cFv.s"
}
#pragma pop

/* 80136064-801360EC 0088+00 s=1 e=0 z=0  None .text      setWolfHeadDamage__9daAlink_cFv */
//	80136080: 8038F3C4 (m__22daAlinkHIO_wlDamage_c0)
//	80136084: 8038F3C4 (m__22daAlinkHIO_wlDamage_c0)
//	80136088: 800AD6F0
//(setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c) 	801360AC:
// 800E4BD4 (freeGrabItem__9daAlink_cFv) 	801360B8: 800AFAA8
//(setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfHeadDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfHeadDamage__9daAlink_cFv.s"
}
#pragma pop

/* 801360EC-80136508 041C+00 s=1 e=0 z=0  None .text
 * procWolfDamageInit__9daAlink_cFP12dCcD_GObjInf               */
//	8013610C: 803621DC (_savegpr_29)
//	8013611C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80136128: 80439A20 (sincosTable___5JMath)
//	8013612C: 80439A20 (sincosTable___5JMath)
//	8013614C: 800D74F4 (getDamageVec__9daAlink_cFP12dCcD_GObjInf)
//	8013616C: 80452CC0 (lit_6108)
//	801361B8: 80267674 (cM_atan2s__Fff)
//	801361BC: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	801361D0: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	801361D4: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	801361D8: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	801361DC:
// 8038F23C (m__25daAlinkHIO_wlDamNormal_c0) 	801361E0: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136200: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136204: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	8013620C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80136210:
// 8038F23C (m__25daAlinkHIO_wlDamNormal_c0) 	80136214: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136234: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136238: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136240: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80136244:
// 8038F23C (m__25daAlinkHIO_wlDamNormal_c0) 	80136248: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136260: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136264: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	8013626C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80136270:
// 8038F23C (m__25daAlinkHIO_wlDamNormal_c0) 	80136274: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136288: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	80136290: 80267128 (atan2sX_Z__4cXyzCFv)
//	801362AC: 80452CC0 (lit_6108)
//	801362BC: 80347138 (PSVECSquareMag)
//	801362C0: 80452CC0 (lit_6108)
//	801362D0: 80452CE8 (lit_6846)
//	801362D8: 80452CF0 (lit_6847)
//	80136320: 80452CF8 (lit_6848)
//	8013632C: 80450AE0 (__float_nan)
//	80136330: 80450AE0 (__float_nan)
//	8013639C: 80450AE0 (__float_nan)
//	801363A0: 80450AE0 (__float_nan)
//	801363A4: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	801363A8: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	801363C4: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	801363C8: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	801363DC: 8042561C (l_wolfBaseAnime)
//	801363E0: 8042561C (l_wolfBaseAnime)
//	80136404: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80136414: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80136424: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136428: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	8013643C: 80452CC0 (lit_6108)
//	801364F4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDamageInit(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDamageInit__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 80136508-80136624 011C+00 s=1 e=0 z=0  None .text      procWolfDamage__9daAlink_cFv */
//	80136528: 80452CC0 (lit_6108)
//	8013652C: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136530: 8038F23C (m__25daAlinkHIO_wlDamNormal_c0)
//	80136538: 80270740 (cLib_chaseF__FPfff)
//	80136554: 800D6E24 (freezeTimerDamage__9daAlink_cFv)
//	8013655C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80136584: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	801365C0: 8013B2A0 (procWolfRollAttackInit__9daAlink_cFii)
//	801365F4: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDamage__9daAlink_cFv.s"
}
#pragma pop

/* 80136624-801369E4 03C0+00 s=2 e=0 z=0  None .text      procWolfLargeDamageUpInit__9daAlink_cFiiss
 */
//	80136634: 803621CC (_savegpr_25)
//	8013664C: 8038D658 (lit_3757)
//	80136650: 8038D658 (lit_3757)
//	80136658: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801366AC: 80452CC0 (lit_6108)
//	801366B4: 80452D3C (lit_7808)
//	801366B8: 80452CB8 (lit_6040)
//	801366C4: 80452D80 (lit_8780)
//	801366E0: 80452CC0 (lit_6108)
//	801366E4: 80451018 (m_midnaActor__9daPy_py_c)
//	80136720: 80452E04 (lit_13794)
//	80136750: 80452CC0 (lit_6108)
//	80136770: 80452CC0 (lit_6108)
//	80136794: 80452CC0 (lit_6108)
//	801367D4: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	801367E0: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	801367E4: 80452D34 (lit_7710)
//	801367EC: 80452D84 (lit_8781)
//	801367FC: 80452CC0 (lit_6108)
//	80136804: 80452CB8 (lit_6040)
//	80136810: 804061C0 (g_dComIfG_gameInfo)
//	80136814: 804061C0 (g_dComIfG_gameInfo)
//	80136828: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80136838: 800BF194 (seStartMapInfo__9daAlink_cFUl)
//	80136858: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80136864:
// 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	80136870: 80452E04
//(lit_13794) 	80136880: 80452E64 (lit_14954) 	801368A0: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	801368AC:
// 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	801368B8: 80452EB4
//(lit_17382) 	801368C0: 80452D84 (lit_8781) 	801368E0: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	801368EC:
// 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	801368F8: 80452EB4
//(lit_17382) 	80136900: 80452D84 (lit_8781) 	80136918: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80136924:
// 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	80136930: 80452D34
//(lit_7710) 	80136938: 80452D84 (lit_8781) 	80136960: 800ADB78
//(setOldRootQuaternion__9daAlink_cFsss) 	80136964: 80452CC0 (lit_6108) 	8013697C: 801211C0
//(setFootEffectProcType__9daAlink_cFi) 	80136980: 8042561C (l_wolfBaseAnime) 	80136984: 8042561C
//(l_wolfBaseAnime) 	8013699C: 80452CB8 (lit_6040) 	801369A4: 80452CB0 (lit_6025) 	801369D0: 80362218
//(_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLargeDamageUpInit(int param_0, int param_1, s16 param_2, s16 param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLargeDamageUpInit__9daAlink_cFiiss.s"
}
#pragma pop

/* 801369E4-80136C18 0234+00 s=1 e=0 z=0  None .text      procWolfLargeDamageUp__9daAlink_cFv */
//	80136A30: 80452D14 (lit_7307)
//	80136A34: 80452C98 (lit_5943)
//	80136A4C: 8042561C (l_wolfBaseAnime)
//	80136A50: 8042561C (l_wolfBaseAnime)
//	80136A88: 8038F29C (m__24daAlinkHIO_wlDamLarge_c0)
//	80136A8C: 8038F29C (m__24daAlinkHIO_wlDamLarge_c0)
//	80136AC0: 8038F3C4 (m__22daAlinkHIO_wlDamage_c0)
//	80136AC4: 8038F3C4 (m__22daAlinkHIO_wlDamage_c0)
//	80136AF0: 80452D20 (lit_7449)
//	80136AF4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80136B3C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80136B54: 80451018 (m_midnaActor__9daPy_py_c)
//	80136B70: 8012D050 (procWolfMidnaRideShockInit__9daAlink_cFv)
//	80136B8C: 804061C0 (g_dComIfG_gameInfo)
//	80136B90: 804061C0 (g_dComIfG_gameInfo)
//	80136B9C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80136BAC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80136BCC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLargeDamageUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLargeDamageUp__9daAlink_cFv.s"
}
#pragma pop

/* 80136C18-80136DE4 01CC+00 s=1 e=0 z=0  None .text      procWolfLandDamageInit__9daAlink_cFi */
//	80136C44: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80136C58: 800D74A4 (setLandDamagePoint__9daAlink_cFi)
//	80136C5C: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	80136C60: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	80136C68: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	80136C6C: 8038E454 (m__21daAlinkHIO_damFall_c0)
//	80136C78: 80452CC0 (lit_6108)
//	80136C80: 80452CB8 (lit_6040)
//	80136C8C: 804061C0 (g_dComIfG_gameInfo)
//	80136C90: 804061C0 (g_dComIfG_gameInfo)
//	80136CA4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80136CAC: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	80136CB0: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	80136CC8: 80115C20 (checkEventRun__9daAlink_cCFv)
//	80136CDC: 800D74A4 (setLandDamagePoint__9daAlink_cFi)
//	80136CE0: 80452CC0 (lit_6108)
//	80136CE8: 80452CB8 (lit_6040)
//	80136CF4: 804061C0 (g_dComIfG_gameInfo)
//	80136CF8: 804061C0 (g_dComIfG_gameInfo)
//	80136D0C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80136D18: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80136D1C: 80452CC0 (lit_6108)
//	80136D7C: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	80136D80: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	80136D94: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	80136DA0: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	80136DBC: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLandDamageInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLandDamageInit__9daAlink_cFi.s"
}
#pragma pop

/* 80136DE4-80136EC4 00E0+00 s=1 e=0 z=0  None .text      procWolfLandDamage__9daAlink_cFv */
//	80136E10: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80136E24: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80136E30: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	80136E34: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	80136E4C: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80136E58: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80136E84: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	80136E88: 8038F374 (m__23daAlinkHIO_wlDamFall_c0)
//	80136E90: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80136E9C:
// 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLandDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLandDamage__9daAlink_cFv.s"
}
#pragma pop

/* 80136EC4-80136F54 0090+00 s=2 e=0 z=0  None .text      setWolfScreamWaitAnime__9daAlink_cFv */
//	80136EDC: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	80136EE8: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	80136F10: 80452CC0 (lit_6108)
//	80136F18: 80452CB8 (lit_6040)
//	80136F24: 804061C0 (g_dComIfG_gameInfo)
//	80136F28: 804061C0 (g_dComIfG_gameInfo)
//	80136F3C: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfScreamWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfScreamWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80136F54-80136FF8 00A4+00 s=1 e=0 z=0  None .text      procWolfScreamWaitInit__9daAlink_cFv */
//	80136F6C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80136F80: 80136EC4 (setWolfScreamWaitAnime__9daAlink_cFv)
//	80136F90: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	80136F94: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	80136F9C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80136FA0: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80136FA8: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80136FB4: 80452CC0 (lit_6108)
//	80136FC4: 8042561C (l_wolfBaseAnime)
//	80136FC8: 8042561C (l_wolfBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfScreamWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfScreamWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 80136FF8-801370E4 00EC+00 s=1 e=0 z=0  None .text      procWolfScreamWait__9daAlink_cFv */
//	80137038: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013704C: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80137058: 8038F29C (m__24daAlinkHIO_wlDamLarge_c0)
//	8013705C: 8038F29C (m__24daAlinkHIO_wlDamLarge_c0)
//	80137074: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80137088: 8038F29C (m__24daAlinkHIO_wlDamLarge_c0)
//	8013708C: 8038F29C (m__24daAlinkHIO_wlDamLarge_c0)
//	80137094: 80452D78 (lit_8676)
//	801370A0: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	801370C4: 80136EC4 (setWolfScreamWaitAnime__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfScreamWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfScreamWait__9daAlink_cFv.s"
}
#pragma pop

/* 801370E4-8013712C 0048+00 s=3 e=0 z=0  None .text      getWolfLieMoveAnmSpeed__9daAlink_cFv */
//	801370F0: 80452C98 (lit_5943)
//	801370F8: 80452D2C (lit_7624)
//	80137108: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	8013710C: 8038F138 (m__19daAlinkHIO_wlLie_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfLieMoveAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfLieMoveAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 8013712C-801371A0 0074+00 s=3 e=0 z=0  None .text      getWolfLieMoveSpeed__9daAlink_cFv */
//	80137144: 80452E64 (lit_14954)
//	80137158: 804531A4 (lit_49938)
//	80137160: 802675E4 (cM_rad2s__Ff)
//	80137168: 80439A20 (sincosTable___5JMath)
//	8013716C: 80439A20 (sincosTable___5JMath)
//	80137174: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80137178: 8038F138 (m__19daAlinkHIO_wlLie_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfLieMoveSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfLieMoveSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 801371A0-801371FC 005C+00 s=0 e=0 z=2  None .text      checkMidnaDisappearMode__9daAlink_cCFv */
//	801371BC: 804061C0 (g_dComIfG_gameInfo)
//	801371C0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMidnaDisappearMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkMidnaDisappearMode__9daAlink_cCFv.s"
}
#pragma pop

/* 801371FC-801372B4 00B8+00 s=3 e=0 z=0  None .text      checkWolfLieContinue__9daAlink_cFi */
//	80137210: 803A37C0 (__vt__8cM3dGPla)
//	80137214: 803A37C0 (__vt__8cM3dGPla)
//	80137258: 800B1FD8 (getSlidePolygon__9daAlink_cFP8cM3dGPla)
//	80137268: 804531A8 (lit_49992)
//	8013727C: 803A37C0 (__vt__8cM3dGPla)
//	80137280: 803A37C0 (__vt__8cM3dGPla)
//	80137290: 803A37C0 (__vt__8cM3dGPla)
//	80137294: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLieContinue(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLieContinue__9daAlink_cFi.s"
}
#pragma pop

/* 801372B4-80137330 007C+00 s=3 e=0 z=0  None .text      checkNextActionWolfFromLie__9daAlink_cFv
 */
//	801372CC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	801372F8: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	801372FC: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	8013730C: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionWolfFromLie() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionWolfFromLie__9daAlink_cFv.s"
}
#pragma pop

/* 80137330-801373F8 00C8+00 s=3 e=0 z=0  None .text      setWolfLieMoveVoice__9daAlink_cFi */
//	8013734C: 80452CC0 (lit_6108)
//	8013737C: 80452EB4 (lit_17382)
//	80137380: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80137390: 80452D28 (lit_7451)
//	80137394: 8032842C (checkPass__12J3DFrameCtrlFf)
//	801373A0: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfLieMoveVoice(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfLieMoveVoice__9daAlink_cFi.s"
}
#pragma pop

/* 801373F8-80137420 0028+00 s=2 e=0 z=0  None .text      checkWolfLieCode__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLieCode() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLieCode__9daAlink_cFv.s"
}
#pragma pop

/* 80137420-8013753C 011C+00 s=2 e=0 z=0  None .text      procWolfLieStartInit__9daAlink_cFi */
//	80137440: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80137444: 8042561C (l_wolfBaseAnime)
//	80137448: 8042561C (l_wolfBaseAnime)
//	80137468: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	8013746C: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80137474: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80137498:
// 80439A20 (sincosTable___5JMath) 	8013749C: 80439A20 (sincosTable___5JMath) 	801374A8: 80452E68
//(lit_14955) 	801374EC: 80452CC0 (lit_6108) 	8013750C: 804061C0 (g_dComIfG_gameInfo) 80137510:
// 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieStartInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieStartInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013753C-80137634 00F8+00 s=1 e=0 z=0  None .text      procWolfLieStart__9daAlink_cFv */
//	80137558: 800F88F8 (decideCrawlDoStatus__9daAlink_cFv)
//	8013756C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80137580: 80137634 (procWolfLieMoveInit__9daAlink_cFi)
//	80137590: 801371FC (checkWolfLieContinue__9daAlink_cFi)
//	801375A0: 801372B4 (checkNextActionWolfFromLie__9daAlink_cFv)
//	801375AC: 80452CA4 (lit_6021)
//	801375BC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801375CC: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	801375D0: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	801375E8: 80137634 (procWolfLieMoveInit__9daAlink_cFi)
//	80137600: 80137330 (setWolfLieMoveVoice__9daAlink_cFi)
//	80137608: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	80137614: 800B7BF8 (orderTalk__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieStart__9daAlink_cFv.s"
}
#pragma pop

/* 80137634-801377F0 01BC+00 s=5 e=0 z=0  None .text      procWolfLieMoveInit__9daAlink_cFi */
//	8013764C: 803621D0 (_savegpr_26)
//	8013766C: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80137678: 804061C0 (g_dComIfG_gameInfo)
//	8013767C: 804061C0 (g_dComIfG_gameInfo)
//	80137690: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801376D8: 801370E4 (getWolfLieMoveAnmSpeed__9daAlink_cFv)
//	801376EC: 80452CC0 (lit_6108)
//	80137724: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	80137730: 80452CBC (lit_6041)
//	8013774C: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80137750: 8038F138 (m__19daAlinkHIO_wlLie_c0)
//	80137758: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	801377A0: 800737E4 (LockonTruth__12dAttention_cFv)
//	801377DC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieMoveInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieMoveInit__9daAlink_cFi.s"
}
#pragma pop

/* 801377F0-80137C90 04A0+00 s=1 e=0 z=0  None .text      procWolfLieMove__9daAlink_cFv */
//	80137808: 803621C8 (_savegpr_24)
//	80137810: 8038D658 (lit_3757)
//	80137814: 8038D658 (lit_3757)
//	80137824: 800F88F8 (decideCrawlDoStatus__9daAlink_cFv)
//	80137838: 80346D6C (PSMTXMultVec)
//	8013784C: 80346D6C (PSMTXMultVec)
//	80137860: 80346D6C (PSMTXMultVec)
//	80137874: 80346E4C (PSMTXMultVecSR)
//	80137880: 800F89E0 (checkNotCrawlStand__9daAlink_cFP4cXyz)
//	80137890: 800F89E0 (checkNotCrawlStand__9daAlink_cFP4cXyz)
//	801378A0: 800F89E0 (checkNotCrawlStand__9daAlink_cFP4cXyz)
//	801378D8: 800F8A50 (checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz)
//	801378F0: 800F8A50 (checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz)
//	80137908: 800F8A50 (checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz)
//	80137944: 804061C0 (g_dComIfG_gameInfo)
//	80137948: 804061C0 (g_dComIfG_gameInfo)
//	80137954: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80137958: 803A37C0 (__vt__8cM3dGPla)
//	8013795C: 803A37C0 (__vt__8cM3dGPla)
//	80137994: 801371FC (checkWolfLieContinue__9daAlink_cFi)
//	801379A4: 801372B4 (checkNextActionWolfFromLie__9daAlink_cFv)
//	801379BC: 801370E4 (getWolfLieMoveAnmSpeed__9daAlink_cFv)
//	801379C8: 80452CC0 (lit_6108)
//	801379FC: 80452CC0 (lit_6108)
//	80137A00: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80137A10: 80452E64 (lit_14954)
//	80137A14: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80137A48: 80452CA4 (lit_6021)
//	80137A64: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	80137A94: 800BF37C (initBasAnime__9daAlink_cFv)
//	80137AA8: 80452E64 (lit_14954)
//	80137AAC: 800F8F08 (stopHalfMoveAnime__9daAlink_cFf)
//	80137AB8: 80137330 (setWolfLieMoveVoice__9daAlink_cFi)
//	80137ADC: 800F8B00 (checkCrawlInHoll__9daAlink_cFP4cXyzP4cXyzP4cXyzi)
//	80137AEC: 800F8D04 (setCrawlMoveHoll__9daAlink_cFv)
//	80137B24: 800F7E48 (changeCrawlAutoMoveProc__9daAlink_cFP4cXyz)
//	80137B30: 803A37C0 (__vt__8cM3dGPla)
//	80137B34: 803A37C0 (__vt__8cM3dGPla)
//	80137B54: 80452CA4 (lit_6021)
//	80137B64: 8013712C (getWolfLieMoveSpeed__9daAlink_cFv)
//	80137B68: 80452CC0 (lit_6108)
//	80137BA4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80137BAC: 8013712C (getWolfLieMoveSpeed__9daAlink_cFv)
//	80137BB8: 80452CC0 (lit_6108)
//	80137BC4: 80452CBC (lit_6041)
//	80137C20: 800737E4 (LockonTruth__12dAttention_cFv)
//	80137C50: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	80137C5C: 800B7BF8 (orderTalk__9daAlink_cFi)
//	80137C60: 803A37C0 (__vt__8cM3dGPla)
//	80137C64: 803A37C0 (__vt__8cM3dGPla)
//	80137C7C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieMove__9daAlink_cFv.s"
}
#pragma pop

/* 80137C90-80137D4C 00BC+00 s=1 e=0 z=0  None .text procWolfLieAutoMoveInit__9daAlink_cFiP4cXyz
 */
//	80137CA0: 803621D4 (_savegpr_27)
//	80137CB0: 804061C0 (g_dComIfG_gameInfo)
//	80137CB4: 804061C0 (g_dComIfG_gameInfo)
//	80137CC4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80137CF8: 800F7CE8 (setCrawlMoveDirectionArrow__9daAlink_cFv)
//	80137CFC: 80452CC0 (lit_6108)
//	80137D38: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieAutoMoveInit(int param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieAutoMoveInit__9daAlink_cFiP4cXyz.s"
}
#pragma pop

/* 80137D4C-80138000 02B4+00 s=1 e=0 z=0  None .text      procWolfLieAutoMove__9daAlink_cFv */
//	80137D5C: 803621D8 (_savegpr_28)
//	80137D7C: 80137330 (setWolfLieMoveVoice__9daAlink_cFi)
//	80137D90: 80452CC0 (lit_6108)
//	80137D94: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80137DA4: 80452E64 (lit_14954)
//	80137DA8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80137DB8: 80452E64 (lit_14954)
//	80137DBC: 800F8F08 (stopHalfMoveAnime__9daAlink_cFf)
//	80137DC0: 80452CC0 (lit_6108)
//	80137DD0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80137DDC: 80452CC0 (lit_6108)
//	80137DF4: 800F7CE8 (setCrawlMoveDirectionArrow__9daAlink_cFv)
//	80137DFC: 800F88F8 (decideCrawlDoStatus__9daAlink_cFv)
//	80137E18: 800F7CE8 (setCrawlMoveDirectionArrow__9daAlink_cFv)
//	80137E20: 80452CA4 (lit_6021)
//	80137E30: 800F8F84 (setCrawlAutoMoveAimPos__9daAlink_cFv)
//	80137E44: 804061C0 (g_dComIfG_gameInfo)
//	80137E48: 804061C0 (g_dComIfG_gameInfo)
//	80137E60: 80452D14 (lit_7307)
//	80137E70: 80452D6C (lit_8473)
//	80137E84: 800BF37C (initBasAnime__9daAlink_cFv)
//	80137E90: 800F88F8 (decideCrawlDoStatus__9daAlink_cFv)
//	80137ED8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80137F18: 80452C98 (lit_5943)
//	80137F1C: 80452CC4 (lit_6109)
//	80137F20: 80452CB8 (lit_6040)
//	80137F24: 8026F97C (cLib_addCalc__FPfffff)
//	80137F30: 80452C98 (lit_5943)
//	80137F34: 80452CC4 (lit_6109)
//	80137F38: 80452CB8 (lit_6040)
//	80137F3C: 8026F97C (cLib_addCalc__FPfffff)
//	80137F4C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80137F6C: 80267128 (atan2sX_Z__4cXyzCFv)
//	80137F74: 80270E24 (cLib_distanceAngleS__Fss)
//	80137F88: 8013712C (getWolfLieMoveSpeed__9daAlink_cFv)
//	80137F94: 80452CC0 (lit_6108)
//	80137FA0: 80452CBC (lit_6041)
//	80137FD8: 80137634 (procWolfLieMoveInit__9daAlink_cFi)
//	80137FEC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieAutoMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieAutoMove__9daAlink_cFv.s"
}
#pragma pop

/* 80138000-80138188 0188+00 s=2 e=0 z=0  None .text      setSpeedAndAngleSwimWolf__9daAlink_cFv */
//	8013802C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138030: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138040: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138044: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138054: 80452CA4 (lit_6021)
//	8013806C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138070: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138080: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80138084: 80439A20 (sincosTable___5JMath)
//	80138088: 80439A20 (sincosTable___5JMath)
//	801380A0: 80452CC4 (lit_6109)
//	801380B8: 80452CC0 (lit_6108)
//	801380C4: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	801380D0: 80452CC4 (lit_6109)
//	801380D8: 800B3500 (checkAttentionState__9daAlink_cFv)
//	80138104: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	80138114: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138118: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138128: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8013813C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138140: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138148: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	8013814C: 804061C0 (g_dComIfG_gameInfo)
//	80138150: 804061C0 (g_dComIfG_gameInfo)
//	80138160: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleSwimWolf() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleSwimWolf__9daAlink_cFv.s"
}
#pragma pop

/* 80138188-801381F8 0070+00 s=2 e=0 z=0  None .text      getWolfSwimMoveAnmSpeed__9daAlink_cFv */
//	8013819C: 80452CB8 (lit_6040)
//	801381B8: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801381BC: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801381D8: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801381DC: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfSwimMoveAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfSwimMoveAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 801381F8-801383D8 01E0+00 s=2 e=0 z=0  None .text      decideDoStatusSwimWolf__9daAlink_cFv */
//	8013820C: 800B4A08 (setTalkStatus__9daAlink_cFv)
//	80138218: 800B7BF8 (orderTalk__9daAlink_cFi)
//	8013824C: 800B3250 (setDoStatus__9daAlink_cFUc)
//	80138264: 8001CB48 (fopAcM_setCarryNow__FP10fopAc_ac_ci)
//	80138298: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	801382B8: 800B3250 (setDoStatus__9daAlink_cFUc)
//	801382E8: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	801382EC: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80138304: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80138308: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80138318: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8013831C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80138330: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138334: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	8013833C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80138348:
// 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM) 	80138358:
// 80452D74 (lit_8502) 	8013835C: 8032842C (checkPass__12J3DFrameCtrlFf) 	80138368: 80439A20
//(sincosTable___5JMath) 	8013836C: 80439A20 (sincosTable___5JMath) 	80138384: 80452DB4
//(lit_10040) 	801383B4: 80452EAC (lit_16641) 	801383BC: 8001F87C (fopKyM_createWpillar__FPC4cXyzfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::decideDoStatusSwimWolf() {
    nofralloc
#include "asm/d/a/d_a_alink/decideDoStatusSwimWolf__9daAlink_cFv.s"
}
#pragma pop

/* 801383D8-80138484 00AC+00 s=2 e=0 z=0  None .text      procWolfSwimUpInit__9daAlink_cFv */
//	801383F0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801383F4: 80452CC0 (lit_6108)
//	80138428: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	8013842C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138430: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013843C:
// 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	80138440: 804061C0
//(g_dComIfG_gameInfo) 	80138444: 804061C0 (g_dComIfG_gameInfo) 	80138460: 800BF194
//(seStartMapInfo__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 80138484-8013852C 00A8+00 s=1 e=0 z=0  None .text      procWolfSwimUp__9daAlink_cFv */
//	801384A0: 80452CC0 (lit_6108)
//	801384A4: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801384A8: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801384B0: 800B3924 (setNormalSpeedF__9daAlink_cFff)
//	801384B8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	801384CC: 8013852C (procWolfSwimWaitInit__9daAlink_cFi)
//	801384D8: 80452CA4 (lit_6021)
//	801384E8: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801384EC: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138500: 8013871C (procWolfSwimMoveInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimUp__9daAlink_cFv.s"
}
#pragma pop

/* 8013852C-80138644 0118+00 s=7 e=0 z=0  None .text      procWolfSwimWaitInit__9daAlink_cFi */
//	8013855C: 80452CC0 (lit_6108)
//	80138564: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138568: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138578: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80138590: 800BF194 (seStartMapInfo__9daAlink_cFUl)
//	801385C4: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801385C8: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801385D4: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801385D8: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801385E4: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	801385E8: 804061C0 (g_dComIfG_gameInfo)
//	801385EC: 804061C0 (g_dComIfG_gameInfo)
//	80138610: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 80138644-8013871C 00D8+00 s=1 e=0 z=0  None .text      procWolfSwimWait__9daAlink_cFv */
//	80138670: 8011856C (setShapeAngleToTalkActor__9daAlink_cFv)
//	80138680: 80138000 (setSpeedAndAngleSwimWolf__9daAlink_cFv)
//	80138688: 80104034 (setSwimUpDownOffset__9daAlink_cFv)
//	80138698: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	8013869C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801386AC: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801386B0: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	801386C0: 80103058 (checkSwimUpAction__9daAlink_cFv)
//	801386D8: 801381F8 (decideDoStatusSwimWolf__9daAlink_cFv)
//	801386F0: 80452CA4 (lit_6021)
//	80138700: 8013871C (procWolfSwimMoveInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimWait__9daAlink_cFv.s"
}
#pragma pop

/* 8013871C-801387A0 0084+00 s=4 e=0 z=0  None .text      procWolfSwimMoveInit__9daAlink_cFv */
//	80138734: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013873C: 80138188 (getWolfSwimMoveAnmSpeed__9daAlink_cFv)
//	80138748: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	8013874C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138754: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8013876C: 80452CC0 (lit_6108)
//	80138774: 804061C0 (g_dComIfG_gameInfo)
//	80138778: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 801387A0-8013890C 016C+00 s=1 e=0 z=0  None .text      procWolfSwimMove__9daAlink_cFv */
//	801387B4: 80138000 (setSpeedAndAngleSwimWolf__9daAlink_cFv)
//	801387C0: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	801387D0: 80138188 (getWolfSwimMoveAnmSpeed__9daAlink_cFv)
//	801387DC: 80103058 (checkSwimUpAction__9daAlink_cFv)
//	801387F4: 801381F8 (decideDoStatusSwimWolf__9daAlink_cFv)
//	8013880C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80138820: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	80138830: 80138188 (getWolfSwimMoveAnmSpeed__9daAlink_cFv)
//	8013883C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138840: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138848: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	80138860: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80138864: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	8013887C: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80138880: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80138890: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	80138894: 8038EE28 (m__20daAlinkHIO_wlMove_c0)
//	801388A4: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	801388B8: 801032C8 (swimOutAfter__9daAlink_cFi)
//	801388C8: 80452CA4 (lit_6021)
//	801388DC: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	801388F0: 8013852C (procWolfSwimWaitInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimMove__9daAlink_cFv.s"
}
#pragma pop

/* 8013890C-80138A18 010C+00 s=2 e=0 z=0  None .text      procWolfSwimEndWaitInit__9daAlink_cFi */
//	8013892C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80138938: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	8013893C: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138944: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	80138950:
// 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	801389F4: 80123BF0
//(setWolfSwimEndEffect__9daAlink_cFPP14JPABaseEmitterPP14JPABaseEmitter)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimEndWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimEndWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 80138A18-80138B6C 0154+00 s=1 e=0 z=0  None .text      procWolfSwimEndWait__9daAlink_cFv */
//	80138A5C: 80452D44 (lit_7977)
//	80138A60: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80138ACC: 80123BF0 (setWolfSwimEndEffect__9daAlink_cFPP14JPABaseEmitterPP14JPABaseEmitter)
//	80138AD4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80138AE8: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	80138AF4: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138AF8: 8038F8B4 (m__20daAlinkHIO_wlSwim_c0)
//	80138B10: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimEndWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimEndWait__9daAlink_cFv.s"
}
#pragma pop

/* 80138B6C-80138C04 0098+00 s=1 e=0 z=0  None .text
 * onWolfEnemyBiteAll__9daAlink_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2 */
//	80138BEC: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onWolfEnemyBiteAll(fopAc_ac_c* param_0, daPy_py_c::daPy_FLG2 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/onWolfEnemyBiteAll__9daAlink_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2.s"
}
#pragma pop

/* 80138C04-80138C44 0040+00 s=4 e=0 z=0  None .text      resetWolfEnemyBiteAll__9daAlink_cFv */
//	80138C1C: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetWolfEnemyBiteAll() {
    nofralloc
#include "asm/d/a/d_a_alink/resetWolfEnemyBiteAll__9daAlink_cFv.s"
}
#pragma pop

/* 80138C44-80138CB8 0074+00 s=1 e=0 z=0  None .text      checkWolfEnemyThrowAction__9daAlink_cFv */
//	80138C64: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80138C78: 80452CC4 (lit_6109)
//	80138C7C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80138C88: 80452E94 (lit_16210)
//	80138C8C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80138C9C: 80138C04 (resetWolfEnemyBiteAll__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfEnemyThrowAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfEnemyThrowAction__9daAlink_cFv.s"
}
#pragma pop

/* 80138CB8-80138DC0 0108+00 s=1 e=0 z=0  None .text      setWolfLockDomeModel__9daAlink_cFv */
//	80138CD0: 800A3C8C (setItemHeap__9daAlink_cFv)
//	80138CE4: 800BFE48 (loadAramBmd__9daAlink_cFUsUl)
//	80138CF8: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80138D0C: 800BFFCC (loadAramItemBtk__9daAlink_cFUsP8J3DModel)
//	80138D20: 800BFF70 (loadAramItemBrk__9daAlink_cFUsP8J3DModel)
//	80138D2C: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	80138D40: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	80138D44: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	80138D50: 804061C0 (g_dComIfG_gameInfo)
//	80138D54: 804061C0 (g_dComIfG_gameInfo)
//	80138D80: 801AC57C (dKy_darkworld_check__Fv)
//	80138D8C: 80452CB8 (lit_6040)
//	80138D9C: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfLockDomeModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfLockDomeModel__9daAlink_cFv.s"
}
#pragma pop

/* 80138DC0-80138F18 0158+00 s=1 e=0 z=0  None .text      setWolfBallModel__9daAlink_cFv */
//	80138DD0: 803621DC (_savegpr_29)
//	80138DD8: 800A3C8C (setItemHeap__9daAlink_cFv)
//	80138DE0: 80452C90 (l_arcName)
//	80138DE8: 804061C0 (g_dComIfG_gameInfo)
//	80138DEC: 804061C0 (g_dComIfG_gameInfo)
//	80138E00: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80138E14: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80138E1C: 80452C90 (l_arcName)
//	80138E2C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80138E40: 8032B1D4 (searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP12J3DModelData)
//	80138E48: 802CEC4C (__nw__FUl)
//	80138E54: 802BE844 (__ct__16Z2SoundObjSimpleFv)
//	80138E64: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
//	80138E70: 80452CC0 (lit_6108)
//	80138ED8: 8004F6B8 (setOldPosP__22dPa_hermiteEcallBack_cFPC4cXyzPC4cXyz)
//	80138F04: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfBallModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfBallModel__9daAlink_cFv.s"
}
#pragma pop

/* 80138F18-80139048 0130+00 s=2 e=0 z=0  None .text      resetWolfBallGrab__9daAlink_cFv */
//	80138F60: 800C12DC (deleteEquipItem__9daAlink_cFii)
//	80138F78: 80452CC4 (lit_6109)
//	80138F7C: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	80138F80: 804061C0 (g_dComIfG_gameInfo)
//	80138F84: 804061C0 (g_dComIfG_gameInfo)
//	80138FC8: 80452CC0 (lit_6108)
//	80138FCC: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80139010: 80452CC0 (lit_6108)
//	80139014: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetWolfBallGrab() {
    nofralloc
#include "asm/d/a/d_a_alink/resetWolfBallGrab__9daAlink_cFv.s"
}
#pragma pop

/* 80139048-8013911C 00D4+00 s=1 e=0 z=0  None .text      checkWolfLockData__9daAlink_cFv */
//	80139058: 803621D8 (_savegpr_28)
//	80139070: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	801390B8: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	801390E0: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	80139108: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLockData() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLockData__9daAlink_cFv.s"
}
#pragma pop

/* 8013911C-8013916C 0050+00 s=1 e=0 z=0  None .text      checkWolfLock__9daAlink_cCFP10fopAc_ac_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLock(fopAc_ac_c* param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLock__9daAlink_cCFP10fopAc_ac_c.s"
}
#pragma pop

/* 8013916C-801391DC 0070+00 s=1 e=0 z=0  None .text      cancelWolfLock__9daAlink_cFP10fopAc_ac_c
 */
//	801391B4: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelWolfLock(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/cancelWolfLock__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 801391DC-801391E4 0008+00 s=0 e=0 z=1  None .text      getWolfLockActorEnd__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfLockActorEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfLockActorEnd__9daAlink_cFv.s"
}
#pragma pop

/* 801391E4-801392A8 00C4+00 s=1 e=0 z=0  None .text
 * searchWolfLockEnemy__9daAlink_cFP10fopAc_ac_cPv              */
//	801391F4: 803621DC (_savegpr_29)
//	8013925C: 8034739C (PSVECSquareDistance)
//	80139268: 80452D00 (lit_6895)
//	80139294: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::searchWolfLockEnemy(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/searchWolfLockEnemy__9daAlink_cFP10fopAc_ac_cPv.s"
}
#pragma pop

/* 801392A8-801392E4 003C+00 s=1 e=0 z=0  None .text daAlink_searchWolfLockEnemy__FP10fopAc_ac_cPv
 */
//	801392BC: 804061C0 (g_dComIfG_gameInfo)
//	801392C0: 804061C0 (g_dComIfG_gameInfo)
//	801392CC: 801391E4 (searchWolfLockEnemy__9daAlink_cFP10fopAc_ac_cPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchWolfLockEnemy(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchWolfLockEnemy__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 801392E4-801393A4 00C0+00 s=1 e=0 z=0  None .text      checkWolfComboCnt__9daAlink_cFv */
//	801392F4: 803621DC (_savegpr_29)
//	801392FC: 804061C0 (g_dComIfG_gameInfo)
//	80139300: 804061C0 (g_dComIfG_gameInfo)
//	80139328: 800737E4 (LockonTruth__12dAttention_cFv)
//	80139350: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	80139388: 800D1430 (resetCombo__9daAlink_cFi)
//	80139390: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfComboCnt() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfComboCnt__9daAlink_cFv.s"
}
#pragma pop

/* 801393A4-801395B4 0210+00 s=4 e=0 z=0  None .text      checkWolfAttackAction__9daAlink_cFv */
//	801393C8: 800D1430 (resetCombo__9daAlink_cFi)
//	801393DC: 800D26EC (getCutDirection__9daAlink_cFv)
//	80139400: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	80139430: 8013ADF0 (procWolfWaitAttackInit__9daAlink_cFi)
//	80139450: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	80139464: 8013B2A0 (procWolfRollAttackInit__9daAlink_cFii)
//	80139484: 8013ADF0 (procWolfWaitAttackInit__9daAlink_cFi)
//	80139494: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	801394CC: 8013ADF0 (procWolfWaitAttackInit__9daAlink_cFi)
//	801394DC: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	801394F8: 8013B2A0 (procWolfRollAttackInit__9daAlink_cFii)
//	80139514: 8013B2A0 (procWolfRollAttackInit__9daAlink_cFii)
//	8013952C: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	8013953C: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	80139554: 80391E78 (normalType0)
//	80139558: 80391E78 (normalType0)
//	80139560: 8013ADF0 (procWolfWaitAttackInit__9daAlink_cFi)
//	80139580: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	80139590: 80391E8C (normalType1_50860)
//	80139594: 80391E8C (normalType1_50860)
//	8013959C: 8013ADF0 (procWolfWaitAttackInit__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfAttackAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfAttackAction__9daAlink_cFv.s"
}
#pragma pop

/* 801395B4-80139600 004C+00 s=2 e=0 z=0  None .text
 * setWolfEnemyThrowUpperAnime__9daAlink_cFQ29daAlink_c12daAlink_WANMf */
//	801395D8: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	801395DC: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	801395E8: 80452CBC (lit_6041)
//	801395EC: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfEnemyThrowUpperAnime(daAlink_c::daAlink_WANM param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfEnemyThrowUpperAnime__9daAlink_cFQ29daAlink_c12daAlink_WANMf.s"
}
#pragma pop

/* 80139600-801396F8 00F8+00 s=2 e=0 z=0  None .text
 * setWolfEnemyHangBitePos__9daAlink_cFP13fopEn_enemy_c         */
//	80139658: 80439A20 (sincosTable___5JMath)
//	8013965C: 80439A20 (sincosTable___5JMath)
//	80139668: 80452DB4 (lit_10040)
//	8013967C: 804531AC (lit_50951)
//	801396AC: 800A2198 (commonLineCheck__9daAlink_cFP4cXyzP4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfEnemyHangBitePos(fopEn_enemy_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfEnemyHangBitePos__9daAlink_cFP13fopEn_enemy_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 804256EC-804256F8 000C+00 s=0 e=0 z=0  None .bss       @50952 */
u8 lit_50952[12];

/* 804256F8-80425708 000C+04 s=1 e=0 z=0  None .bss       l_wolfBiteHitMarkScale */
static u8 l_wolfBiteHitMarkScale[12 + 4 /* padding */];

/* 801396F8-801397A4 00AC+00 s=1 e=0 z=0  None .text
 * setWolfBiteDamage__9daAlink_cFP13fopEn_enemy_c               */
//	8013973C: 804061C0 (g_dComIfG_gameInfo)
//	80139740: 804061C0 (g_dComIfG_gameInfo)
//	80139754: 804256F8 (l_wolfBiteHitMarkScale)
//	80139758: 804256F8 (l_wolfBiteHitMarkScale)
//	80139760: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	80139764: 80452CC0 (lit_6108)
//	8013976C: 80452CB8 (lit_6040)
//	80139778: 804061C0 (g_dComIfG_gameInfo)
//	8013977C: 804061C0 (g_dComIfG_gameInfo)
//	80139790: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfBiteDamage(fopEn_enemy_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfBiteDamage__9daAlink_cFP13fopEn_enemy_c.s"
}
#pragma pop

/* 801397A4-801398A8 0104+00 s=1 e=0 z=0  None .text checkWolfLockAttackChargeState__9daAlink_cFv
 */
//	801397B4: 803621DC (_savegpr_29)
//	801397D0: 804061C0 (g_dComIfG_gameInfo)
//	801397D4: 804061C0 (g_dComIfG_gameInfo)
//	801397E0: 800349BC (isEventBit__11dSv_event_cCFUs)
//	801397FC: 804061C0 (g_dComIfG_gameInfo)
//	80139800: 804061C0 (g_dComIfG_gameInfo)
//	8013980C: 80032BEC (isTransformLV__21dSv_player_status_b_cCFi)
//	80139818: 804061C0 (g_dComIfG_gameInfo)
//	8013981C: 804061C0 (g_dComIfG_gameInfo)
//	80139828: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80139850: 801AC57C (dKy_darkworld_check__Fv)
//	80139860: 804061C0 (g_dComIfG_gameInfo)
//	80139864: 804061C0 (g_dComIfG_gameInfo)
//	80139870: 80032BEC (isTransformLV__21dSv_player_status_b_cCFi)
//	80139894: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLockAttackChargeState() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLockAttackChargeState__9daAlink_cFv.s"
}
#pragma pop

/* 801398A8-80139908 0060+00 s=1 e=0 z=0  None .text      procWolfRollAttackChargeInit__9daAlink_cFv
 */
//	801398C0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801398CC: 80452CC0 (lit_6108)
//	801398D0: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	801398D4: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	801398DC: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	801398EC: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttackChargeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttackChargeInit__9daAlink_cFv.s"
}
#pragma pop

/* 80139908-801399C4 00BC+00 s=1 e=0 z=0  None .text      procWolfRollAttackCharge__9daAlink_cFv */
//	8013991C: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	80139938: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
//	80139948: 801393A4 (checkWolfAttackAction__9daAlink_cFv)
//	80139958: 80452DA0 (lit_9054)
//	80139968: 801399C4 (procWolfRollAttackMoveInit__9daAlink_cFv)
//	80139974: 80452CC0 (lit_6108)
//	80139978: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8013997C: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	80139984: 80270740 (cLib_chaseF__FPfff)
//	80139990: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	801399A8: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttackCharge() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttackCharge__9daAlink_cFv.s"
}
#pragma pop

/* 801399C4-80139A70 00AC+00 s=1 e=0 z=0  None .text      procWolfRollAttackMoveInit__9daAlink_cFv
 */
//	801399DC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	801399E4: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	801399FC: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	80139A00: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	80139A0C: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	80139A10: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	80139A40: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
//	80139A44: 804061C0 (g_dComIfG_gameInfo)
//	80139A48: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttackMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttackMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80139A70-80139DE0 0370+00 s=1 e=0 z=0  None .text      procWolfRollAttackMove__9daAlink_cFv */
//	80139A88: 803621D8 (_savegpr_28)
//	80139A94: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	80139AB0: 800B25E8 (itemButtonCheck__9daAlink_cFUc)
//	80139ADC: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80139B0C: 800D1430 (resetCombo__9daAlink_cFi)
//	80139B18: 8013BE24 (procWolfLockAttackInit__9daAlink_cFi)
//	80139B2C: 8013B2A0 (procWolfRollAttackInit__9daAlink_cFii)
//	80139B38: 801393A4 (checkWolfAttackAction__9daAlink_cFv)
//	80139B64: 801397A4 (checkWolfLockAttackChargeState__9daAlink_cFv)
//	80139B74: 80138CB8 (setWolfLockDomeModel__9daAlink_cFv)
//	80139BC0: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	80139BC4: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	80139BDC: 80270740 (cLib_chaseF__FPfff)
//	80139C10: 801392A8 (daAlink_searchWolfLockEnemy__FP10fopAc_ac_cPv)
//	80139C14: 801392A8 (daAlink_searchWolfLockEnemy__FP10fopAc_ac_cPv)
//	80139C1C: 800197BC (fopAcIt_Executor__FPFPvPv_iPv)
//	80139C54: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	80139C70: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	80139C8C: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
//	80139C98: 801370E4 (getWolfLieMoveAnmSpeed__9daAlink_cFv)
//	80139CA4: 80452CC0 (lit_6108)
//	80139CD0: 80128F5C (setWolfAtnMoveDirection__9daAlink_cFv)
//	80139CE0: 80452CC0 (lit_6108)
//	80139CE4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80139CF4: 80452E64 (lit_14954)
//	80139CF8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80139D08: 80452CA4 (lit_6021)
//	80139D44: 800BF37C (initBasAnime__9daAlink_cFv)
//	80139D58: 80452E64 (lit_14954)
//	80139D5C: 800F8F08 (stopHalfMoveAnime__9daAlink_cFf)
//	80139D64: 80128478 (setSpeedAndAngleWolfAtn__9daAlink_cFv)
//	80139D6C: 8013712C (getWolfLieMoveSpeed__9daAlink_cFv)
//	80139D78: 80452CC0 (lit_6108)
//	80139D84: 80452CBC (lit_6041)
//	80139D94: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	80139DCC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttackMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttackMove__9daAlink_cFv.s"
}
#pragma pop

/* 80139DE0-8013A4F8 0718+00 s=5 e=0 z=0  None .text      procWolfJumpAttackInit__9daAlink_cFi */
//	80139E20: 803621DC (_savegpr_29)
//	80139E2C: 8038D658 (lit_3757)
//	80139E30: 8038D658 (lit_3757)
//	80139E38: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	80139E54: 800D152C (setCutType__9daAlink_cFUc)
//	80139E7C: 800D1540 (setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff)
//	80139EA8: 80452C9C (lit_5944)
//	80139EAC: 80452D28 (lit_7451)
//	80139EF8: 804061C0 (g_dComIfG_gameInfo)
//	80139EFC: 804061C0 (g_dComIfG_gameInfo)
//	80139F08: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80139F14: 80392094 (d_a_d_a_alink__stringBase0)
//	80139F18: 80392094 (d_a_d_a_alink__stringBase0)
//	80139F20: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80139F74: 800D152C (setCutType__9daAlink_cFUc)
//	80139F9C: 800D1540 (setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff)
//	80139FEC: 800D152C (setCutType__9daAlink_cFUc)
//	8013A014: 800D1540 (setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff)
//	8013A090: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013A0A8:
// 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec) 	8013A0D8: 80452CC0 (lit_6108) 	8013A100: 8034739C
//(PSVECSquareDistance) 	8013A104: 80452CC0 (lit_6108) 	8013A114: 80452CE8 (lit_6846) 8013A11C:
// 80452CF0 (lit_6847) 	8013A164: 80452CF8 (lit_6848) 	8013A170: 80450AE0 (__float_nan) 8013A174:
// 80450AE0 (__float_nan) 	8013A1E0: 80450AE0 (__float_nan) 	8013A1E4: 80450AE0 (__float_nan)
// 8013A1F4: 80452D14 (lit_7307) 	8013A21C: 80452D30 (lit_7625) 	8013A234: 80452CC0 (lit_6108)
// 8013A240: 80452D14 (lit_7307) 	8013A270: 80452CB8 (lit_6040) 	8013A290: 80452CC0 (lit_6108)
//8013A2B8: 8034739C (PSVECSquareDistance) 	8013A2BC: 80452CC0 (lit_6108) 	8013A2CC: 80452CE8
//(lit_6846) 	8013A2D4: 80452CF0 (lit_6847) 	8013A31C: 80452CF8 (lit_6848) 	8013A328: 80450AE0
// (__float_nan) 	8013A32C:
// 80450AE0 (__float_nan) 	8013A398: 80450AE0 (__float_nan) 	8013A39C: 80450AE0 (__float_nan)
// 8013A3A8: 80452C98 (lit_5943) 	8013A424: 8042561C (l_wolfBaseAnime) 	8013A428: 8042561C
// (l_wolfBaseAnime) 	8013A468: 804061C0 (g_dComIfG_gameInfo) 	8013A46C: 804061C0 (g_dComIfG_gameInfo)
//	8013A4E4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013A4F8-8013A7EC 02F4+00 s=1 e=0 z=0  None .text      procWolfJumpAttack__9daAlink_cFv */
//	8013A508: 803621DC (_savegpr_29)
//	8013A510: 8038D658 (lit_3757)
//	8013A514: 8038D658 (lit_3757)
//	8013A544: 80270740 (cLib_chaseF__FPfff)
//	8013A54C: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	8013A598: 8012A228 (checkWolfAttackReverse__9daAlink_cFi)
//	8013A5C0: 8012987C (checkWolfLandAction__9daAlink_cFi)
//	8013A5E4: 800B5F6C (checkSlideAction__9daAlink_cFv)
//	8013A5F0: 80452CC0 (lit_6108)
//	8013A5F8: 80452CB8 (lit_6040)
//	8013A604: 804061C0 (g_dComIfG_gameInfo)
//	8013A608: 804061C0 (g_dComIfG_gameInfo)
//	8013A61C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8013A658: 800B6A30 (checkFrontWallTypeAction__9daAlink_cFv)
//	8013A680: 80452CC0 (lit_6108)
//	8013A688: 80452CB8 (lit_6040)
//	8013A694: 804061C0 (g_dComIfG_gameInfo)
//	8013A698: 804061C0 (g_dComIfG_gameInfo)
//	8013A6AC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8013A6C4: 8013CB48 (procWolfEnemyThrowInit__9daAlink_cFi)
//	8013A708: 8013A8FC (procWolfJumpAttackSlideLandInit__9daAlink_cFiii)
//	8013A718: 8013AC44 (procWolfJumpAttackNormalLandInit__9daAlink_cFi)
//	8013A734: 8013CCF4 (procWolfEnemyHangBiteInit__9daAlink_cFv)
//	8013A740: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013A774: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8013A7CC: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
//	8013A7D8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8013A7EC-8013A8A0 00B4+00 s=2 e=0 z=0  None .text      procWolfJumpAttackKickInit__9daAlink_cFv
 */
//	8013A804: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013A810: 8038F5B4 (m__23daAlinkHIO_wlAtCjump_c0)
//	8013A814: 8038F5B4 (m__23daAlinkHIO_wlAtCjump_c0)
//	8013A81C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013A820:
// 80452CC0 (lit_6108) 	8013A838: 800BB770 (setSpecialGravity__9daAlink_cFffi) 	8013A874: 804061C0
//(g_dComIfG_gameInfo) 	8013A878: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackKickInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackKickInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013A8A0-8013A8FC 005C+00 s=1 e=0 z=0  None .text      procWolfJumpAttackKick__9daAlink_cFv */
//	8013A8B8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013A8CC: 8012E398 (procWolfBackJumpInit__9daAlink_cFi)
//	8013A8D0: 804061C0 (g_dComIfG_gameInfo)
//	8013A8D4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackKick() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackKick__9daAlink_cFv.s"
}
#pragma pop

/* 8013A8FC-8013AAC4 01C8+00 s=2 e=0 z=0  None .text
 * procWolfJumpAttackSlideLandInit__9daAlink_cFiii              */
//	8013A90C: 803621D8 (_savegpr_28)
//	8013A924: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013A998: 8001A79C (fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8013A9B4: 8038F618 (m__22daAlinkHIO_wlAtLand_c0)
//	8013A9B8: 8038F618 (m__22daAlinkHIO_wlAtLand_c0)
//	8013A9C0: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013A9CC:
// 8042561C (l_wolfBaseAnime) 	8013A9D0: 8042561C (l_wolfBaseAnime) 	8013A9F4: 8038F618
//(m__22daAlinkHIO_wlAtLand_c0) 	8013A9F8: 8038F618 (m__22daAlinkHIO_wlAtLand_c0) 	8013AA10:
//8038F618 (m__22daAlinkHIO_wlAtLand_c0) 	8013AA14: 8038F618 (m__22daAlinkHIO_wlAtLand_c0)
//8013AA1C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013AA28:
// 8042561C (l_wolfBaseAnime) 	8013AA2C: 8042561C (l_wolfBaseAnime) 	8013AA44: 8038F618
//(m__22daAlinkHIO_wlAtLand_c0) 	8013AA48: 8038F618 (m__22daAlinkHIO_wlAtLand_c0) 	8013AA64:
//801211C0 (setFootEffectProcType__9daAlink_cFi) 	8013AA70: 80452C98 (lit_5943) 	8013AA94:
//8038F7A4 (m__22daAlinkHIO_wlAttack_c0) 	8013AA98: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//8013AAB0: 80362224
//(_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackSlideLandInit(int param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackSlideLandInit__9daAlink_cFiii.s"
}
#pragma pop

/* 8013AAC4-8013AC44 0180+00 s=1 e=0 z=0  None .text      procWolfJumpAttackSlideLand__9daAlink_cFv
 */
//	8013AADC: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	8013AB00: 80452CC0 (lit_6108)
//	8013AB04: 80452EA8 (lit_16570)
//	8013AB08: 8038F618 (m__22daAlinkHIO_wlAtLand_c0)
//	8013AB0C: 8038F618 (m__22daAlinkHIO_wlAtLand_c0)
//	8013AB14: 80452C98 (lit_5943)
//	8013AB18: 8026F97C (cLib_addCalc__FPfffff)
//	8013AB30: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	8013AB38: 800D20FC (setComboReserb__9daAlink_cFv)
//	8013AB40: 800D2684 (checkCutTurnCharge__9daAlink_cFv)
//	8013AB48: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013AB58: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	8013AB80: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	8013AB90: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013ABAC: 80452D3C (lit_7808)
//	8013ABDC: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	8013ABEC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013AC04: 80452D3C (lit_7808)
//	8013AC24: 800BF1CC (seStartMapInfoLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackSlideLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackSlideLand__9daAlink_cFv.s"
}
#pragma pop

/* 8013AC44-8013ACF4 00B0+00 s=1 e=0 z=0  None .text
 * procWolfJumpAttackNormalLandInit__9daAlink_cFi               */
//	8013AC64: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013AC70: 8038F618 (m__22daAlinkHIO_wlAtLand_c0)
//	8013AC74: 8038F618 (m__22daAlinkHIO_wlAtLand_c0)
//	8013AC78: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013AC84:
// 801211C0 (setFootEffectProcType__9daAlink_cFi) 	8013AC90: 80452CC0 (lit_6108) 	8013ACAC:
// 8038F7A4 (m__22daAlinkHIO_wlAttack_c0) 	8013ACB0: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//8013ACC4: 804061C0 (g_dComIfG_gameInfo) 	8013ACC8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackNormalLandInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackNormalLandInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013ACF4-8013ADF0 00FC+00 s=1 e=0 z=0  None .text      procWolfJumpAttackNormalLand__9daAlink_cFv
 */
//	8013AD0C: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	8013AD30: 80452CC0 (lit_6108)
//	8013AD34: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8013AD38: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8013AD40: 80270740 (cLib_chaseF__FPfff)
//	8013AD48: 800D20FC (setComboReserb__9daAlink_cFv)
//	8013AD50: 800D2684 (checkCutTurnCharge__9daAlink_cFv)
//	8013AD58: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013AD6C: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013AD78: 8038F618 (m__22daAlinkHIO_wlAtLand_c0)
//	8013AD7C: 8038F618 (m__22daAlinkHIO_wlAtLand_c0)
//	8013ADB0: 80139DE0 (procWolfJumpAttackInit__9daAlink_cFi)
//	8013ADC0: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackNormalLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackNormalLand__9daAlink_cFv.s"
}
#pragma pop

/* 8013ADF0-8013AFC0 01D0+00 s=2 e=0 z=0  None .text      procWolfWaitAttackInit__9daAlink_cFi */
//	8013AE00: 803621D8 (_savegpr_28)
//	8013AE0C: 8038D658 (lit_3757)
//	8013AE10: 8038D658 (lit_3757)
//	8013AE24: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013AE30: 800D152C (setCutType__9daAlink_cFUc)
//	8013AEA0: 800D1540 (setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff)
//	8013AEDC: 800D1540 (setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff)
//	8013AF08: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8013AF20: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8013AF74: 8042561C (l_wolfBaseAnime)
//	8013AF78: 8042561C (l_wolfBaseAnime)
//	8013AFAC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitAttackInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitAttackInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013AFC0-8013B2A0 02E0+00 s=1 e=0 z=0  None .text      procWolfWaitAttack__9daAlink_cFv */
//	8013AFD8: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	8013AFFC: 80452CC0 (lit_6108)
//	8013B000: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8013B004: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8013B00C: 80270740 (cLib_chaseF__FPfff)
//	8013B014: 800D20FC (setComboReserb__9daAlink_cFv)
//	8013B01C: 800D2684 (checkCutTurnCharge__9daAlink_cFv)
//	8013B03C: 8012A228 (checkWolfAttackReverse__9daAlink_cFi)
//	8013B060: 80452D48 (lit_8130)
//	8013B088: 8013CB48 (procWolfEnemyThrowInit__9daAlink_cFi)
//	8013B094: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013B0A8: 800D1430 (resetCombo__9daAlink_cFi)
//	8013B0B8: 804061C0 (g_dComIfG_gameInfo)
//	8013B0BC: 804061C0 (g_dComIfG_gameInfo)
//	8013B0C8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8013B0F4: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013B110: 80452CC0 (lit_6108)
//	8013B120: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013B140: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013B154: 800D1430 (resetCombo__9daAlink_cFi)
//	8013B164: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	8013B178: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013B19C: 80452CC4 (lit_6109)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8013B2A0-8013B424 0184+00 s=5 e=0 z=0  None .text      procWolfRollAttackInit__9daAlink_cFii */
//	8013B2B0: 803621DC (_savegpr_29)
//	8013B2C4: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013B2D4: 800D1424 (getCutTurnDirection__9daAlink_cCFv)
//	8013B2F8: 800D152C (setCutType__9daAlink_cFUc)
//	8013B314: 800D152C (setCutType__9daAlink_cFUc)
//	8013B320: 8038F558 (m__22daAlinkHIO_wlAtRoll_c0)
//	8013B324: 8038F558 (m__22daAlinkHIO_wlAtRoll_c0)
//	8013B328: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013B32C:
// 8038F558 (m__22daAlinkHIO_wlAtRoll_c0) 	8013B330: 8038F558 (m__22daAlinkHIO_wlAtRoll_c0)
// 8013B354: 80452C98 (lit_5943) 	8013B360: 804531B0 (lit_51575) 	8013B364: 800D1540
//(setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff) 	8013B368: 80452CC0 (lit_6108) 	8013B37C:
// 8038F558 (m__22daAlinkHIO_wlAtRoll_c0) 	8013B380: 8038F558 (m__22daAlinkHIO_wlAtRoll_c0)
// 8013B39C: 80452CB0 (lit_6025) 	8013B410: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttackInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttackInit__9daAlink_cFii.s"
}
#pragma pop

/* 8013B424-8013B528 0104+00 s=1 e=0 z=0  None .text      procWolfRollAttack__9daAlink_cFv */
//	8013B43C: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	8013B458: 80452CC0 (lit_6108)
//	8013B45C: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8013B460: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8013B468: 80270740 (cLib_chaseF__FPfff)
//	8013B470: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013B484: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013B490: 8038F558 (m__22daAlinkHIO_wlAtRoll_c0)
//	8013B494: 8038F558 (m__22daAlinkHIO_wlAtRoll_c0)
//	8013B4AC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013B4C0: 80452D24 (lit_7450)
//	8013B4D0: 80452D84 (lit_8781)
//	8013B504: 80452D78 (lit_8676)
//	8013B508: 80270740 (cLib_chaseF__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8013B528-8013B808 02E0+00 s=1 e=0 z=0  None .text      procWolfDownAttackInit__9daAlink_cFv */
//	8013B540: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013B54C: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013B550: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013B554: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013B574:
// 80452D00 (lit_6895) 	8013B584: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz) 	8013B590: 80450CD0
//(mGroundY__11fopAcM_gc_c) 	8013B5A0: 80452D00 (lit_6895) 	8013B5B4: 80270C04
//(cLib_targetAngleY__FPC3VecPC3Vec) 	8013B5C4: 80439A20 (sincosTable___5JMath) 	8013B5C8:
//80439A20 (sincosTable___5JMath) 	8013B5D4: 80452DB0 (lit_10039) 	8013B608: 80452CC0 (lit_6108)
//8013B628: 8034739C (PSVECSquareDistance) 	8013B62C: 80452CC0 (lit_6108) 	8013B63C: 80452CE8
// (lit_6846) 	8013B644: 80452CF0 (lit_6847) 	8013B68C: 80452CF8 (lit_6848) 	8013B698: 80450AE0
//(__float_nan) 	8013B69C: 80450AE0 (__float_nan) 	8013B708: 80450AE0 (__float_nan) 	8013B70C: 80450AE0
//(__float_nan) 	8013B710: 80452D58 (lit_8249) 	8013B720: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013B724: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013B740: 80452D14 (lit_7307)
//	8013B75C: 80452CC0 (lit_6108)
//	8013B7B4: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAttackInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAttackInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013B808-8013B964 015C+00 s=1 e=0 z=0  None .text      procWolfDownAttack__9daAlink_cFv */
//	8013B830: 80452CC0 (lit_6108)
//	8013B888: 8034739C (PSVECSquareDistance)
//	8013B88C: 80452D5C (lit_8322)
//	8013B8AC: 80452D00 (lit_6895)
//	8013B8C0: 8013B964 (procWolfDownAtLandInit__9daAlink_cFP13fopEn_enemy_c)
//	8013B8CC: 8013BC94 (procWolfDownAtMissLandInit__9daAlink_cFv)
//	8013B8D8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013B8EC: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8013B900: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013B904: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013B90C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013B924:
// 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM) 	8013B944:
// 80270540 (cLib_addCalcAngleS__FPsssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8013B964-8013BA44 00E0+00 s=1 e=0 z=0  None .text
 * procWolfDownAtLandInit__9daAlink_cFP13fopEn_enemy_c          */
//	8013B984: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013B990: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8013B99C: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013B9A0: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013B9A8: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013B9BC:
// 801211C0 (setFootEffectProcType__9daAlink_cFi) 	8013B9CC: 80452CC0 (lit_6108) 	8013B9D8:
// 80138DC0 (setWolfBallModel__9daAlink_cFv) 	8013B9F8: 80452CC0 (lit_6108) 	8013BA00: 80452CB8
//(lit_6040) 	8013BA0C: 804061C0 (g_dComIfG_gameInfo) 	8013BA10: 804061C0 (g_dComIfG_gameInfo)
//	8013BA24: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAtLandInit(fopEn_enemy_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAtLandInit__9daAlink_cFP13fopEn_enemy_c.s"
}
#pragma pop

/* 8013BA44-8013BC94 0250+00 s=1 e=0 z=0  None .text      procWolfDownAtLand__9daAlink_cFv */
//	8013BA54: 803621DC (_savegpr_29)
//	8013BA5C: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	8013BA7C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013BA90: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8013BAA8: 80452CC0 (lit_6108)
//	8013BAAC: 80452D78 (lit_8676)
//	8013BAB4: 80452CBC (lit_6041)
//	8013BAB8: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
//	8013BAD4: 804061C0 (g_dComIfG_gameInfo)
//	8013BAD8: 804061C0 (g_dComIfG_gameInfo)
//	8013BB18: 80452CC0 (lit_6108)
//	8013BB1C: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8013BB60: 80452CC0 (lit_6108)
//	8013BB64: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8013BBA8: 80452CC0 (lit_6108)
//	8013BBAC: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8013BBB8: 8012E398 (procWolfBackJumpInit__9daAlink_cFi)
//	8013BBC8: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013BBCC: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013BBD4: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013BBD8:
// 80452CC0 (lit_6108) 	8013BBE0: 80452CB8 (lit_6040) 	8013BBEC: 804061C0 (g_dComIfG_gameInfo)
//	8013BBF0: 804061C0 (g_dComIfG_gameInfo)
//	8013BC04: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8013BC14: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8013BC24: 80452D34 (lit_7710)
//	8013BC28: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013BC38: 80452E04 (lit_13794)
//	8013BC3C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013BC48: 80452CC0 (lit_6108)
//	8013BC50: 80452CB8 (lit_6040)
//	8013BC5C: 804061C0 (g_dComIfG_gameInfo)
//	8013BC60: 804061C0 (g_dComIfG_gameInfo)
//	8013BC74: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8013BC80: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAtLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAtLand__9daAlink_cFv.s"
}
#pragma pop

/* 8013BC94-8013BD54 00C0+00 s=1 e=0 z=0  None .text      procWolfDownAtMissLandInit__9daAlink_cFv
 */
//	8013BCAC: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013BCB8: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013BCBC: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013BCC4: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013BCD0:
// 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM) 	8013BCD4: 80452CC0
//(lit_6108) 	8013BCE4: 801211C0 (setFootEffectProcType__9daAlink_cFi) 	8013BCF0: 8042561C
//(l_wolfBaseAnime) 	8013BCF4: 8042561C (l_wolfBaseAnime) 	8013BD0C: 80452CC0 (lit_6108)
//8013BD14: 80452CB8 (lit_6040) 	8013BD20: 804061C0 (g_dComIfG_gameInfo) 	8013BD24: 804061C0
//(g_dComIfG_gameInfo) 	8013BD38: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAtMissLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAtMissLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013BD54-8013BE24 00D0+00 s=1 e=0 z=0  None .text      procWolfDownAtMissLand__9daAlink_cFv */
//	8013BD70: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	8013BD90: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013BDA4: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013BDB0: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013BDB4: 8038F658 (m__22daAlinkHIO_wlAtDown_c0)
//	8013BDCC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013BDD4: 80452CC4 (lit_6109)
//	8013BDE4: 80452D8C (lit_8783)
//	8013BDFC: 800BF1CC (seStartMapInfoLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAtMissLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAtMissLand__9daAlink_cFv.s"
}
#pragma pop

/* 8013BE24-8013C3E4 05C0+00 s=2 e=0 z=0  None .text      procWolfLockAttackInit__9daAlink_cFi */
//	8013BE54: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013BE60: 8038F578 (m__23daAlinkHIO_wlAtNjump_c0)
//	8013BE64: 8038F578 (m__23daAlinkHIO_wlAtNjump_c0)
//	8013BE68: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013BECC:
// 8015ECFC (clearData__16daPy_actorKeep_cFv) 	8013BEF0: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	8013BF04: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8013BF20: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8013BF3C: 80452D30 (lit_7625)
//	8013BF50: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013BF54: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013BF70: 80452CC0 (lit_6108)
//	8013BF84: 80347138 (PSVECSquareMag)
//	8013BF88: 80452CC0 (lit_6108)
//	8013BF98: 80452CE8 (lit_6846)
//	8013BFA0: 80452CF0 (lit_6847)
//	8013BFE8: 80452CF8 (lit_6848)
//	8013BFF4: 80450AE0 (__float_nan)
//	8013BFF8: 80450AE0 (__float_nan)
//	8013C064: 80450AE0 (__float_nan)
//	8013C068: 80450AE0 (__float_nan)
//	8013C06C: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C070: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C0A0: 80347138 (PSVECSquareMag)
//	8013C0A4: 80452CC0 (lit_6108)
//	8013C0B4: 80452CE8 (lit_6846)
//	8013C0BC: 80452CF0 (lit_6847)
//	8013C104: 80452CF8 (lit_6848)
//	8013C110: 80450AE0 (__float_nan)
//	8013C114: 80450AE0 (__float_nan)
//	8013C180: 80450AE0 (__float_nan)
//	8013C184: 80450AE0 (__float_nan)
//	8013C188: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C18C: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C198: 80452CB8 (lit_6040)
//	8013C1B4: 80452CC0 (lit_6108)
//	8013C1C8: 80347138 (PSVECSquareMag)
//	8013C1CC: 80452CC0 (lit_6108)
//	8013C1DC: 80452CE8 (lit_6846)
//	8013C1E4: 80452CF0 (lit_6847)
//	8013C22C: 80452CF8 (lit_6848)
//	8013C238: 80450AE0 (__float_nan)
//	8013C23C: 80450AE0 (__float_nan)
//	8013C2A8: 80450AE0 (__float_nan)
//	8013C2AC: 80450AE0 (__float_nan)
//	8013C2BC: 80452D6C (lit_8473)
//	8013C2D8: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8013C314: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C318: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C324: 800D1540 (setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff)
//	8013C328: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C32C: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C340: 800D152C (setCutType__9daAlink_cFUc)
//	8013C360: 804061C0 (g_dComIfG_gameInfo)
//	8013C364: 804061C0 (g_dComIfG_gameInfo)
//	8013C3B0: 80452CB8 (lit_6040)
//	8013C3B4: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLockAttackInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLockAttackInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013C3E4-8013C630 024C+00 s=1 e=0 z=0  None .text      procWolfLockAttack__9daAlink_cFv */
//	8013C3F4: 803621D8 (_savegpr_28)
//	8013C414: 800D1920 (checkAtShieldHit__9daAlink_cFR12dCcD_GObjInf)
//	8013C448: 800D1920 (checkAtShieldHit__9daAlink_cFR12dCcD_GObjInf)
//	8013C45C: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	8013C46C: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	8013C498: 800D96DC (procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi)
//	8013C4A8: 8012A228 (checkWolfAttackReverse__9daAlink_cFi)
//	8013C4E0: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C4E4: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C4F4: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8013C500: 80452CE0 (lit_6845)
//	8013C510: 80452EA8 (lit_16570)
//	8013C514: 80452D3C (lit_7808)
//	8013C518: 80452CB8 (lit_6040)
//	8013C51C: 8026F97C (cLib_addCalc__FPfffff)
//	8013C524: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013C538: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8013C54C: 8038F578 (m__23daAlinkHIO_wlAtNjump_c0)
//	8013C550: 8038F578 (m__23daAlinkHIO_wlAtNjump_c0)
//	8013C55C: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8013C5AC: 8013C630 (procWolfLockAttackTurnInit__9daAlink_cFi)
//	8013C5B8: 8038F578 (m__23daAlinkHIO_wlAtNjump_c0)
//	8013C5BC: 8038F578 (m__23daAlinkHIO_wlAtNjump_c0)
//	8013C5E0: 8013A8FC (procWolfJumpAttackSlideLandInit__9daAlink_cFiii)
//	8013C604: 802C3E68 (startLinkSoundLevel__14Z2CreatureLinkF10JAISoundIDUlSc)
//	8013C61C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLockAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLockAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8013C630-8013C7A4 0174+00 s=1 e=0 z=0  None .text      procWolfLockAttackTurnInit__9daAlink_cFi
 */
//	8013C650: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013C660: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8013C670: 803650D0 (abs)
//	8013C684: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C688: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0)
//	8013C690: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013C69C:
// 8042561C (l_wolfBaseAnime) 	8013C6A0: 8042561C (l_wolfBaseAnime) 	8013C6D0: 8038F6F4
//(m__22daAlinkHIO_wlAtLock_c0) 	8013C6D4: 8038F6F4 (m__22daAlinkHIO_wlAtLock_c0) 	8013C6D8:
//80129848 (setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c)
//8013C6E4: 8042561C (l_wolfBaseAnime) 	8013C6E8: 8042561C (l_wolfBaseAnime) 	8013C73C: 801211C0
//(setFootEffectProcType__9daAlink_cFi) 	8013C744: 80452C98 (lit_5943) 	8013C758: 804061C0
//(g_dComIfG_gameInfo) 	8013C75C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLockAttackTurnInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLockAttackTurnInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013C7A4-8013C8C8 0124+00 s=1 e=0 z=0  None .text      procWolfLockAttackTurn__9daAlink_cFv */
//	8013C7F8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8013C828: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8013C830: 80452CC0 (lit_6108)
//	8013C834: 80452EA8 (lit_16570)
//	8013C838: 80452D3C (lit_7808)
//	8013C83C: 80452CB8 (lit_6040)
//	8013C840: 8026F97C (cLib_addCalc__FPfffff)
//	8013C848: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013C868: 8013BE24 (procWolfLockAttackInit__9daAlink_cFi)
//	8013C874: 800B3904 (checkZeroSpeedF__9daAlink_cCFv)
//	8013C890: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013C8AC: 800BF1CC (seStartMapInfoLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLockAttackTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLockAttackTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8013C8C8-8013C9EC 0124+00 s=1 e=0 z=0  None .text      procWolfAttackReverseInit__9daAlink_cFv */
//	8013C8E0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013C8EC: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8013C8F8: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8013C8FC: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	8013C900: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	8013C924: 80452CC0 (lit_6108)
//	8013C92C: 80452CB8 (lit_6040)
//	8013C938: 804061C0 (g_dComIfG_gameInfo)
//	8013C93C: 804061C0 (g_dComIfG_gameInfo)
//	8013C950: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8013C98C: 801A81C0 (dKy_Sound_set__F4cXyziUii)
//	8013C9B8: 8042561C (l_wolfBaseAnime)
//	8013C9BC: 8042561C (l_wolfBaseAnime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAttackReverseInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAttackReverseInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013C9EC-8013CB48 015C+00 s=1 e=0 z=0  None .text      procWolfAttackReverse__9daAlink_cFv */
//	8013CA04: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	8013CA34: 80452CE0 (lit_6845)
//	8013CA38: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013CA64: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013CA78: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013CA84: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	8013CA88: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	8013CAA0: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013CAD0: 8012987C (checkWolfLandAction__9daAlink_cFi)
//	8013CAE4: 80452CC0 (lit_6108)
//	8013CAF4: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	8013CAF8: 8038F7A4 (m__22daAlinkHIO_wlAttack_c0)
//	8013CAFC: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013CB08:
// 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAttackReverse() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAttackReverse__9daAlink_cFv.s"
}
#pragma pop

/* 8013CB48-8013CC5C 0114+00 s=2 e=0 z=0  None .text      procWolfEnemyThrowInit__9daAlink_cFi */
//	8013CB60: 803621DC (_savegpr_29)
//	8013CB70: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013CB84: 8026786C (cM_rnd__Fv)
//	8013CB88: 80452C98 (lit_5943)
//	8013CBC0: 80452CC0 (lit_6108)
//	8013CBC8: 80452CC4 (lit_6109)
//	8013CBD4: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CBD8: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CBEC: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8013CBFC: 801395B4 (setWolfEnemyThrowUpperAnime__9daAlink_cFQ29daAlink_c12daAlink_WANMf)
//	8013CC00: 8042561C (l_wolfBaseAnime)
//	8013CC04: 8042561C (l_wolfBaseAnime)
//	8013CC1C: 80452CC0 (lit_6108)
//	8013CC48: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfEnemyThrowInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfEnemyThrowInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013CC5C-8013CCF4 0098+00 s=1 e=0 z=0  None .text      procWolfEnemyThrow__9daAlink_cFv */
//	8013CC74: 80129A80 (checkWolfGroundSpecialMode__9daAlink_cFv)
//	8013CC98: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013CCAC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013CCB8: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CCBC: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CCD4: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfEnemyThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfEnemyThrow__9daAlink_cFv.s"
}
#pragma pop

/* 8013CCF4-8013CDEC 00F8+00 s=1 e=0 z=0  None .text      procWolfEnemyHangBiteInit__9daAlink_cFv */
//	8013CD0C: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013CD18: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CD1C: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CD24: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013CD28:
// 80452CC0 (lit_6108) 	8013CD40: 800BB770 (setSpecialGravity__9daAlink_cFffi) 	8013CD4C: 80139600
//(setWolfEnemyHangBitePos__9daAlink_cFP13fopEn_enemy_c) 	8013CD5C: 8013A7EC
//(procWolfJumpAttackKickInit__9daAlink_cFv) 	8013CD74: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CD78: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CDC0: 804061C0 (g_dComIfG_gameInfo)
//	8013CDC4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfEnemyHangBiteInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfEnemyHangBiteInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013CDEC-8013D0D4 02E8+00 s=1 e=0 z=0  None .text      procWolfEnemyHangBite__9daAlink_cFv */
//	8013CDFC: 803621DC (_savegpr_29)
//	8013CE10: 80139600 (setWolfEnemyHangBitePos__9daAlink_cFP13fopEn_enemy_c)
//	8013CE20: 8013A7EC (procWolfJumpAttackKickInit__9daAlink_cFv)
//	8013CE3C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8013CE50: 800B3280 (setDoStatusContinuation__9daAlink_cFUc)
//	8013CE68: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CE6C: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CEA0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013CEC4: 80452CC4 (lit_6109)
//	8013CEC8: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8013CEF0: 8013A7EC (procWolfJumpAttackKickInit__9daAlink_cFv)
//	8013CF08: 8013A7EC (procWolfJumpAttackKickInit__9daAlink_cFv)
//	8013CF20: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CF24: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CF30: 80270740 (cLib_chaseF__FPfff)
//	8013CF3C: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CF40: 8038F748 (m__22daAlinkHIO_wlAtBite_c0)
//	8013CF4C: 80270740 (cLib_chaseF__FPfff)
//	8013CF54: 80452DA0 (lit_9054)
//	8013CF8C: 80452CC0 (lit_6108)
//	8013CF90: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013CFA0: 80452E94 (lit_16210)
//	8013CFA4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013CFC0: 80452CC0 (lit_6108)
//	8013CFC4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013CFD0: 80452CC0 (lit_6108)
//	8013CFDC: 80452E94 (lit_16210)
//	8013CFF0: 80452CC0 (lit_6108)
//	8013D00C: 80452D48 (lit_8130)
//	8013D010: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013D020: 80452D80 (lit_8780)
//	8013D024: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013D038: 801396F8 (setWolfBiteDamage__9daAlink_cFP13fopEn_enemy_c)
//	8013D044: 804531B4 (lit_52234)
//	8013D048: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013D058: 80452CE0 (lit_6845)
//	8013D05C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013D08C: 80452D78 (lit_8676)
//	8013D090: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013D0C0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfEnemyHangBite() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfEnemyHangBite__9daAlink_cFv.s"
}
#pragma pop

/* 8013D0D4-8013D3FC 0328+00 s=1 e=0 z=0  None .text      procWolfGrabUpInit__9daAlink_cFv */
//	8013D104: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013D118: 800E5BB4 (setGrabItemActor__9daAlink_cFP10fopAc_ac_c)
//	8013D128: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013D144: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013D148: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013D14C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013D150:
// 80452F50 (lit_23595) 	8013D154: 80452D30 (lit_7625) 	8013D15C: 8038F95C
// (m__20daAlinkHIO_wlGrab_c0) 	8013D160: 8038F95C (m__20daAlinkHIO_wlGrab_c0) 	8013D178: 8038F95C
//(m__20daAlinkHIO_wlGrab_c0) 	8013D17C: 8038F95C (m__20daAlinkHIO_wlGrab_c0) 	8013D184: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013D188:
// 80452DB0 (lit_10039) 	8013D18C: 80452D74 (lit_8502) 	8013D194: 8038F95C
// (m__20daAlinkHIO_wlGrab_c0) 	8013D198: 8038F95C (m__20daAlinkHIO_wlGrab_c0) 	8013D1AC: 800E5BB4
//(setGrabItemActor__9daAlink_cFP10fopAc_ac_c) 	8013D1B8: 8001A710
//(fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c) 	8013D1E0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8013D22C: 80439A20 (sincosTable___5JMath)
//	8013D230: 80439A20 (sincosTable___5JMath)
//	8013D2A4: 80452CC0 (lit_6108)
//	8013D2CC: 8034739C (PSVECSquareDistance)
//	8013D2D0: 80452CC0 (lit_6108)
//	8013D2E0: 80452CE8 (lit_6846)
//	8013D2E8: 80452CF0 (lit_6847)
//	8013D330: 80452CF8 (lit_6848)
//	8013D33C: 80450AE0 (__float_nan)
//	8013D340: 80450AE0 (__float_nan)
//	8013D3AC: 80450AE0 (__float_nan)
//	8013D3B0: 80450AE0 (__float_nan)
//	8013D3B4: 80452D50 (lit_8247)
//	8013D3C4: 80452CC0 (lit_6108)
//	8013D3D4: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013D3FC-8013D588 018C+00 s=1 e=0 z=0  None .text      procWolfGrabUp__9daAlink_cFv */
//	8013D40C: 803621DC (_savegpr_29)
//	8013D428: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013D438: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013D454: 800198C4 (fopAcM_setStageLayer__FPv)
//	8013D494: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013D4AC: 80452CC0 (lit_6108)
//	8013D4B4: 80452CB0 (lit_6025)
//	8013D4D0: 80452DE4 (lit_12328)
//	8013D4DC: 80452CBC (lit_6041)
//	8013D4E0: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
//	8013D4EC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013D510: 80452CC0 (lit_6108)
//	8013D518: 80452CB0 (lit_6025)
//	8013D534: 80452DE4 (lit_12328)
//	8013D540: 80452CBC (lit_6041)
//	8013D544: 800AD3D8 (setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf)
//	8013D550: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013D564: 80452CBC (lit_6041)
//	8013D568: 800AD724 (resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf)
//	8013D574: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabUp__9daAlink_cFv.s"
}
#pragma pop

/* 8013D588-8013D65C 00D4+00 s=2 e=0 z=0  None .text      procWolfGrabPutInit__9daAlink_cFv */
//	8013D5C8: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013D5DC: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013D5E0: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013D5E8: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013D5EC:
// 80452D30 (lit_7625) 	8013D5F4: 8038F95C (m__20daAlinkHIO_wlGrab_c0) 	8013D5F8: 8038F95C
//(m__20daAlinkHIO_wlGrab_c0) 	8013D610: 8038F95C (m__20daAlinkHIO_wlGrab_c0) 	8013D614: 8038F95C
//(m__20daAlinkHIO_wlGrab_c0) 	8013D61C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013D620:
// 80452D74 (lit_8502) 	8013D628: 8038F95C (m__20daAlinkHIO_wlGrab_c0) 	8013D62C: 8038F95C
//(m__20daAlinkHIO_wlGrab_c0) 	8013D638: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabPutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabPutInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013D65C-8013D818 01BC+00 s=1 e=0 z=0  None .text      procWolfGrabPut__9daAlink_cFv */
//	8013D66C: 803621DC (_savegpr_29)
//	8013D694: 80452CC0 (lit_6108)
//	8013D6A4: 80439A20 (sincosTable___5JMath)
//	8013D6A8: 80439A20 (sincosTable___5JMath)
//	8013D6E8: 800E4BD4 (freeGrabItem__9daAlink_cFv)
//	8013D6F0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013D708: 804061C0 (g_dComIfG_gameInfo)
//	8013D70C: 804061C0 (g_dComIfG_gameInfo)
//	8013D718: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8013D728: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013D748: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013D764: 804061C0 (g_dComIfG_gameInfo)
//	8013D768: 804061C0 (g_dComIfG_gameInfo)
//	8013D774: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8013D784: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013D794: 800E5B6C (grabLineCheck__9daAlink_cFP4cXyzP4cXyz)
//	8013D7A4: 80075D0C (dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo)
//	8013D7BC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8013D7DC: 80452D2C (lit_7624)
//	8013D804: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabPut() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabPut__9daAlink_cFv.s"
}
#pragma pop

/* 8013D818-8013D86C 0054+00 s=1 e=0 z=0  None .text      procWolfGrabThrowInit__9daAlink_cFv */
//	8013D830: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013D83C: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013D840: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013D848: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabThrowInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabThrowInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013D86C-8013D930 00C4+00 s=1 e=0 z=0  None .text      procWolfGrabThrow__9daAlink_cFv */
//	8013D88C: 80452CC0 (lit_6108)
//	8013D890: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8013D894: 8038EF28 (m__23daAlinkHIO_wlMoveNoP_c0)
//	8013D89C: 80270740 (cLib_chaseF__FPfff)
//	8013D8A8: 800B3734 (setShapeAngleToAtnActor__9daAlink_cFi)
//	8013D8B8: 80452D30 (lit_7625)
//	8013D8BC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013D8CC: 800E53F8 (setGrabItemThrow__9daAlink_cFv)
//	8013D8D4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013D8E8: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013D8F4: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013D8F8: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013D910: 80129B44 (checkNextActionWolf__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabThrow__9daAlink_cFv.s"
}
#pragma pop

/* 8013D930-8013DA8C 015C+00 s=1 e=0 z=0  None .text      procWolfPushInit__9daAlink_cFv */
//	8013D948: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013D988: 80452CB8 (lit_6040)
//	8013D98C: 80452CC0 (lit_6108)
//	8013D990: 80452CC4 (lit_6109)
//	8013D994: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8013D9A0: 80452CC0 (lit_6108)
//	8013D9B0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8013D9C0: 8042561C (l_wolfBaseAnime)
//	8013D9C4: 8042561C (l_wolfBaseAnime)
//	8013DA04: 80439A20 (sincosTable___5JMath)
//	8013DA08: 80439A20 (sincosTable___5JMath)
//	8013DA14: 80452D00 (lit_6895)
//	8013DA70: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfPushInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfPushInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013DA8C-8013DB58 00CC+00 s=1 e=0 z=0  None .text      procWolfPush__9daAlink_cFv */
//	8013DAB4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013DAD4: 80452CB8 (lit_6040)
//	8013DAD8: 80452CC0 (lit_6108)
//	8013DAE0: 80452CC4 (lit_6109)
//	8013DAE4: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8013DB00: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013DB18: 804531B8 (lit_52470)
//	8013DB1C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013DB38: 8001CB48 (fopAcM_setCarryNow__FP10fopAc_ac_ci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfPush() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfPush__9daAlink_cFv.s"
}
#pragma pop

/* 8013DB58-8013DB6C 0014+00 s=1 e=0 z=0  None .text      daAlink_searchEnemyCargo__FP10fopAc_ac_cPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daAlink_searchEnemyCargo(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchEnemyCargo__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 8013DB6C-8013DC5C 00F0+00 s=3 e=0 z=0  None .text      procWolfCargoCarryInit__9daAlink_cFv */
//	8013DB88: 800C2DA4 (commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013DB9C: 80452CC0 (lit_6108)
//	8013DBB4: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8013DBDC: 8013DB58 (daAlink_searchEnemyCargo__FP10fopAc_ac_cPv)
//	8013DBE0: 8013DB58 (daAlink_searchEnemyCargo__FP10fopAc_ac_cPv)
//	8013DBE8: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8013DBF8: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8013DC00: 804061C0 (g_dComIfG_gameInfo)
//	8013DC04: 804061C0 (g_dComIfG_gameInfo)
//	8013DC0C: 8004882C (checkStartDemo__16dEvent_manager_cFv)
//	8013DC3C: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfCargoCarryInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfCargoCarryInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013DC5C-8013DDF8 019C+00 s=1 e=0 z=0  None .text      procWolfCargoCarry__9daAlink_cFv */
//	8013DC70: 800B48D0 (setJumpMode__9daAlink_cFv)
//	8013DC84: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	8013DCBC: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013DCC8: 803DD470 (now__14mDoMtx_stack_c)
//	8013DCCC: 803DD470 (now__14mDoMtx_stack_c)
//	8013DCD0: 803464B0 (PSMTXCopy)
//	8013DCD4: 804531BC (lit_52534)
//	8013DCD8: 804531C0 (lit_52535)
//	8013DCDC: 80452E0C (lit_14614)
//	8013DCE0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8013DCE4: 803DD470 (now__14mDoMtx_stack_c)
//	8013DCE8: 803DD470 (now__14mDoMtx_stack_c)
//	8013DD10: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8013DD14: 803DD470 (now__14mDoMtx_stack_c)
//	8013DD18: 803DD470 (now__14mDoMtx_stack_c)
//	8013DD20: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	8013DD30: 800CE628 (checkSubjectAction__9daAlink_cFv)
//	8013DD4C: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013DD6C: 803DD470 (now__14mDoMtx_stack_c)
//	8013DD70: 803DD470 (now__14mDoMtx_stack_c)
//	8013DD74: 803464B0 (PSMTXCopy)
//	8013DD78: 804531BC (lit_52534)
//	8013DD7C: 804531C4 (lit_52536)
//	8013DD80: 80452E0C (lit_14614)
//	8013DD84: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8013DD88: 803DD470 (now__14mDoMtx_stack_c)
//	8013DD8C: 803DD470 (now__14mDoMtx_stack_c)
//	8013DDB4: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8013DDB8: 803DD470 (now__14mDoMtx_stack_c)
//	8013DDBC: 803DD470 (now__14mDoMtx_stack_c)
//	8013DDC4: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	8013DDDC: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfCargoCarry() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfCargoCarry__9daAlink_cFv.s"
}
#pragma pop

/* 8013DDF8-8013DE70 0078+00 s=1 e=0 z=0  None .text      procWolfChainUpInit__9daAlink_cFv */
//	8013DE0C: 800E79F8 (searchFmChainPos__9daAlink_cFv)
//	8013DE24: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	8013DE34: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013DE40: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013DE44: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013DE4C: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013DE50:
// 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013DE70-8013DF30 00C0+00 s=1 e=0 z=0  None .text      procWolfChainUp__9daAlink_cFv */
//	8013DE80: 803621DC (_savegpr_29)
//	8013DE94: 800E7ED0 (setWallGrabStatus__9daAlink_cFUcUc)
//	8013DE9C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013DEAC: 80452CA4 (lit_6021)
//	8013DEBC: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013DEC0: 8038F95C (m__20daAlinkHIO_wlGrab_c0)
//	8013DEDC: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	8013DEE4: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	8013DEE8: 80391010 (m_wlAnmDataTable__9daAlink_c)
//	8013DEF0: 80452CC0 (lit_6108)
//	8013DEF4: 80452CC4 (lit_6109)
//	8013DEF8: 800AD3A8 (setUpperAnimeBaseSpeed__9daAlink_cFUsff)
//	8013DF10: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8013DF1C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainUp__9daAlink_cFv.s"
}
#pragma pop

/* 8013DF30-8013E034 0104+00 s=1 e=0 z=0  None .text      procWolfGanonCatchInit__9daAlink_cFv */
//	8013DF44: 804061C0 (g_dComIfG_gameInfo)
//	8013DF48: 804061C0 (g_dComIfG_gameInfo)
//	8013DF60: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	8013DF94: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013DFA0: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8013DFBC: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8013DFCC: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8013DFE4: 80452D00 (lit_6895)
//	8013E008: 801211C0 (setFootEffectProcType__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGanonCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGanonCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013E034-8013E240 020C+00 s=1 e=0 z=0  None .text      procWolfGanonCatch__9daAlink_cFv */
//	8013E068: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8013E070: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	8013E098: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8013E0AC: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	8013E0BC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013E0D0: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8013E0D8: 80452CA4 (lit_6021)
//	8013E0E8: 800B3494 (getDirectionFromAngle__9daAlink_cFs)
//	8013E104: 80452CC0 (lit_6108)
//	8013E108: 80452CB8 (lit_6040)
//	8013E10C: 80270740 (cLib_chaseF__FPfff)
//	8013E144: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8013E168: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8013E180: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8013E194: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	8013E1B8: 80452D3C (lit_7808)
//	8013E1D4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013E1F4: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8013E204: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8013E218: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8013E220: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGanonCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGanonCatch__9daAlink_cFv.s"
}
#pragma pop

/* 8013E240-8013E2A8 0068+00 s=1 e=0 z=0  None .text      procWolfChainReadyInit__9daAlink_cFv */
//	8013E258: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013E264: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8013E270: 8038F578 (m__23daAlinkHIO_wlAtNjump_c0)
//	8013E274: 8038F578 (m__23daAlinkHIO_wlAtNjump_c0)
//	8013E278: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013E27C:
// 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013E2A8-8013E6C0 0418+00 s=1 e=0 z=0  None .text      procWolfChainReady__9daAlink_cFv */
//	8013E2F0: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8013E2F4: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8013E2FC: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
//	8013E308: 80452CC4 (lit_6109)
//	8013E31C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8013E334: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8013E358: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8013E37C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8013E39C: 80452CC0 (lit_6108)
//	8013E3AC: 80347138 (PSVECSquareMag)
//	8013E3B0: 80452CC0 (lit_6108)
//	8013E3C0: 80452CE8 (lit_6846)
//	8013E3C8: 80452CF0 (lit_6847)
//	8013E410: 80452CF8 (lit_6848)
//	8013E41C: 80450AE0 (__float_nan)
//	8013E420: 80450AE0 (__float_nan)
//	8013E48C: 80450AE0 (__float_nan)
//	8013E490: 80450AE0 (__float_nan)
//	8013E4A0: 80347138 (PSVECSquareMag)
//	8013E4A4: 80452CC0 (lit_6108)
//	8013E4B4: 80452CE8 (lit_6846)
//	8013E4BC: 80452CF0 (lit_6847)
//	8013E504: 80452CF8 (lit_6848)
//	8013E510: 80450AE0 (__float_nan)
//	8013E514: 80450AE0 (__float_nan)
//	8013E580: 80450AE0 (__float_nan)
//	8013E584: 80450AE0 (__float_nan)
//	8013E594: 80267150 (atan2sY_XZ__4cXyzCFv)
//	8013E5A4: 80452CB8 (lit_6040)
//	8013E5A8: 80452DD4 (lit_11442)
//	8013E5E0: 80452CB0 (lit_6025)
//	8013E5FC: 80452C98 (lit_5943)
//	8013E654: 8034739C (PSVECSquareDistance)
//	8013E658: 80452D5C (lit_8322)
//	8013E668: 8013E6C0 (procWolfChainWaitInit__9daAlink_cFv)
//	8013E684: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8013E688: 8038F0A8 (m__24daAlinkHIO_wlAutoJump_c0)
//	8013E690: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainReady__9daAlink_cFv.s"
}
#pragma pop

/* 8013E6C0-8013E80C 014C+00 s=1 e=0 z=0  None .text      procWolfChainWaitInit__9daAlink_cFv */
//	8013E6E0: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013E6EC: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013E6F0: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013E6F4: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013E72C:
// 80452CC0 (lit_6108) 	8013E738: 800BB770 (setSpecialGravity__9daAlink_cFffi) 	8013E73C: 80452CC0
//(lit_6108) 	8013E74C: 8038F858 (m__21daAlinkHIO_wlChain_c0) 	8013E750: 8038F858
//(m__21daAlinkHIO_wlChain_c0) 	8013E774: 80452CE0 (lit_6845) 	8013E780: 80452E64 (lit_14954)
//	8013E78C: 80452C98 (lit_5943)
//	8013E798: 80439A20 (sincosTable___5JMath)
//	8013E79C: 80439A20 (sincosTable___5JMath)
//	8013E7C4: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013E80C-8013ED44 0538+00 s=1 e=0 z=0  None .text      procWolfChainWait__9daAlink_cFv */
//	8013E824: 803621DC (_savegpr_29)
//	8013E83C: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013E840: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013E860: 80452CC0 (lit_6108)
//	8013E870: 80347138 (PSVECSquareMag)
//	8013E874: 80452CC0 (lit_6108)
//	8013E884: 80452CE8 (lit_6846)
//	8013E88C: 80452CF0 (lit_6847)
//	8013E8D4: 80452CF8 (lit_6848)
//	8013E8E0: 80450AE0 (__float_nan)
//	8013E8E4: 80450AE0 (__float_nan)
//	8013E950: 80450AE0 (__float_nan)
//	8013E954: 80450AE0 (__float_nan)
//	8013E960: 80267128 (atan2sX_Z__4cXyzCFv)
//	8013E97C: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	8013E980: 8038F1A0 (m__24daAlinkHIO_wlWallHang_c0)
//	8013E988: 8012EDD0 (procWolfFallInit__9daAlink_cFif)
//	8013E9C4: 804531C8 (lit_52882)
//	8013E9E0: 80452CC0 (lit_6108)
//	8013E9E8: 80452CB8 (lit_6040)
//	8013E9F4: 804061C0 (g_dComIfG_gameInfo)
//	8013E9F8: 804061C0 (g_dComIfG_gameInfo)
//	8013EA0C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8013EA28: 80452D50 (lit_8247)
//	8013EA34: 80439A20 (sincosTable___5JMath)
//	8013EA38: 80439A20 (sincosTable___5JMath)
//	8013EA4C: 804531CC (lit_52883)
//	8013EA50: 80452C98 (lit_5943)
//	8013EA54: 80452CA4 (lit_6021)
//	8013EA58: 80452CB0 (lit_6025)
//	8013EA80: 80452D44 (lit_7977)
//	8013EAB4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8013EAD4: 80452CA4 (lit_6021)
//	8013EAE8: 80439A20 (sincosTable___5JMath)
//	8013EAEC: 80439A20 (sincosTable___5JMath)
//	8013EB1C: 80452E64 (lit_14954)
//	8013EB34: 80347090 (PSVECAdd)
//	8013EB40: 80266F48 (normalizeZP__4cXyzFv)
//	8013EB58: 80266B84 (__ml__4cXyzCFf)
//	8013EB68: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8013EB90: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8013EB9C: 804531D0 (lit_52884)
//	8013EBA0: 80266B84 (__ml__4cXyzCFf)
//	8013EBBC: 803DD470 (now__14mDoMtx_stack_c)
//	8013EBC0: 803DD470 (now__14mDoMtx_stack_c)
//	8013EBD0: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8013EBD4: 803DD470 (now__14mDoMtx_stack_c)
//	8013EBD8: 803DD470 (now__14mDoMtx_stack_c)
//	8013EBE4: 80346D6C (PSMTXMultVec)
//	8013EBF8: 80267674 (cM_atan2s__Fff)
//	8013EC14: 80452CC0 (lit_6108)
//	8013EC2C: 80267674 (cM_atan2s__Fff)
//	8013EC50: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013EC60: 80452CA4 (lit_6021)
//	8013EC70: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013EC74: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013EC88: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013EC8C: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013ECB8: 80452CC0 (lit_6108)
//	8013ECC8: 80452CB0 (lit_6025)
//	8013ECEC: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8013ECF4: 80452CB0 (lit_6025)
//	8013ED30: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainWait__9daAlink_cFv.s"
}
#pragma pop

/* 8013ED44-8013F1F0 04AC+00 s=1 e=0 z=0  None .text      procWolfDigInit__9daAlink_cFv */
//	8013ED5C: 803621DC (_savegpr_29)
//	8013EDC0: 804061C0 (g_dComIfG_gameInfo)
//	8013EDC4: 804061C0 (g_dComIfG_gameInfo)
//	8013EDDC: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	8013EE00: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013EE90: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8013EEA4: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	8013EEB8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8013EECC: 803650D0 (abs)
//	8013EEF8: 80439A20 (sincosTable___5JMath)
//	8013EEFC: 80439A20 (sincosTable___5JMath)
//	8013EF08: 80452D00 (lit_6895)
//	8013EFA0: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8013EFAC: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	8013EFB0: 80439A20 (sincosTable___5JMath)
//	8013EFB4: 80439A20 (sincosTable___5JMath)
//	8013EFCC: 80452D00 (lit_6895)
//	8013F018: 80452F6C (lit_24591)
//	8013F030: 80452D50 (lit_8247)
//	8013F038: 80181640 (dCam_getBody__Fv)
//	8013F040: 80163028 (SetTrimTypeForce__9dCamera_cFl)
//	8013F048: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013F04C: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013F054: 804531D4 (lit_53012)
//	8013F068: 80452CC0 (lit_6108)
//	8013F070: 80452DC4 (lit_10194)
//	8013F080: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013F084: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013F094: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8013F098: 80452CC0 (lit_6108)
//	8013F0A0: 8042561C (l_wolfBaseAnime)
//	8013F0A4: 8042561C (l_wolfBaseAnime)
//	8013F0C8: 80452D30 (lit_7625)
//	8013F0EC: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8013F0F0: 804061C0 (g_dComIfG_gameInfo)
//	8013F0F4: 804061C0 (g_dComIfG_gameInfo)
//	8013F104: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8013F114: 80450690 (l_autoUpHeight)
//	8013F128: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	8013F13C: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	8013F15C: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
//	8013F16C: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	8013F170: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	8013F174: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	8013F180: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	8013F1A0: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	8013F1A4: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	8013F1A8: 80268148 (SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo)
//	8013F1B8: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	8013F1DC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDigInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDigInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013F1F0-8013F4A8 02B8+00 s=1 e=0 z=0  None .text      procWolfDig__9daAlink_cFv */
//	8013F200: 803621DC (_savegpr_29)
//	8013F230: 80181640 (dCam_getBody__Fv)
//	8013F238: 80163028 (SetTrimTypeForce__9dCamera_cFl)
//	8013F268: 804061C0 (g_dComIfG_gameInfo)
//	8013F26C: 804061C0 (g_dComIfG_gameInfo)
//	8013F294: 80075774 (MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb)
//	8013F2A4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8013F2B4: 80347090 (PSVECAdd)
//	8013F2C8: 80452C9C (lit_5944)
//	8013F310: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	8013F318: 801239B0 (setWolfDigEffect__9daAlink_cFv)
//	8013F324: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013F344: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013F348: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013F350: 80129848
//(setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c) 	8013F360:
// 801239B0 (setWolfDigEffect__9daAlink_cFv) 	8013F3A0: 80115C20 (checkEventRun__9daAlink_cCFv)
//	8013F3BC: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8013F3C8: 8012D1A8 (procWolfWaitInit__9daAlink_cFv)
//	8013F3D8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013F3F8: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	8013F400: 80452EB4 (lit_17382)
//	8013F410: 80452EEC (lit_19382)
//	8013F454: 801239B0 (setWolfDigEffect__9daAlink_cFv)
//	8013F464: 80451018 (m_midnaActor__9daPy_py_c)
//	8013F494: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDig() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDig__9daAlink_cFv.s"
}
#pragma pop

/* 8013F4A8-8013F7C4 031C+00 s=2 e=0 z=0  None .text      procWolfDigThroughInit__9daAlink_cFi */
//	8013F4B8: 803621D8 (_savegpr_28)
//	8013F4D4: 804061C0 (g_dComIfG_gameInfo)
//	8013F4D8: 804061C0 (g_dComIfG_gameInfo)
//	8013F4F0: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	8013F514: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013F52C: 8001A79C (fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8013F5C4: 80181640 (dCam_getBody__Fv)
//	8013F5D0: 80392094 (d_a_d_a_alink__stringBase0)
//	8013F5D4: 80392094 (d_a_d_a_alink__stringBase0)
//	8013F5EC: 80088A7C (StartEventCamera__9dCamera_cFiie)
//	8013F5F4: 80452CE0 (lit_6845)
//	8013F618: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	8013F624: 804061C0 (g_dComIfG_gameInfo)
//	8013F628: 804061C0 (g_dComIfG_gameInfo)
//	8013F630: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	8013F634: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	8013F63C: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	8013F65C: 80439A20 (sincosTable___5JMath)
//	8013F660: 80439A20 (sincosTable___5JMath)
//	8013F66C: 80452CE0 (lit_6845)
//	8013F6A4: 804531E0 (smokeID)
//	8013F6AC: 804531D8 (snowID)
//	8013F6B8: 804061C0 (g_dComIfG_gameInfo)
//	8013F6BC: 804061C0 (g_dComIfG_gameInfo)
//	8013F6FC: 80452CB8 (lit_6040)
//	8013F700: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8013F738: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8013F744: 800AF8A0 (setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM)
//	8013F748: 80452CC0 (lit_6108)
//	8013F760: 800BB770 (setSpecialGravity__9daAlink_cFffi)
//	8013F764: 8042561C (l_wolfBaseAnime)
//	8013F768: 8042561C (l_wolfBaseAnime)
//	8013F7B0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDigThroughInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDigThroughInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013F7C4-8013F90C 0148+00 s=1 e=0 z=0  None .text      procWolfDigThrough__9daAlink_cFv */
//	8013F81C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013F834: 804061C0 (g_dComIfG_gameInfo)
//	8013F838: 804061C0 (g_dComIfG_gameInfo)
//	8013F850: 80034F80 (setRoom__13dSv_restart_cFRC4cXyzsSc)
//	8013F858: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8013F860: 80452CA4 (lit_6021)
//	8013F874: 80129B44 (checkNextActionWolf__9daAlink_cFi)
//	8013F88C: 8013890C (procWolfSwimEndWaitInit__9daAlink_cFi)
//	8013F8A8: 80452DF0 (lit_13382)
//	8013F8AC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8013F8C4: 80452D50 (lit_8247)
//	8013F8C8: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDigThrough() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDigThrough__9daAlink_cFv.s"
}
#pragma pop

/* 8013F90C-8013FA14 0108+00 s=1 e=0 z=0  None .text      setSmellSave__9daAlink_cFv */
//	8013F920: 804061C0 (g_dComIfG_gameInfo)
//	8013F924: 804061C0 (g_dComIfG_gameInfo)
//	8013F93C: 800349A4 (offEventBit__11dSv_event_cFUs)
//	8013F948: 80238410 (setSmellType__12dMsgObject_cFUc)
//	8013F958: 804061C0 (g_dComIfG_gameInfo)
//	8013F95C: 804061C0 (g_dComIfG_gameInfo)
//	8013F968: 8003498C (onEventBit__11dSv_event_cFUs)
//	8013F978: 804061C0 (g_dComIfG_gameInfo)
//	8013F97C: 804061C0 (g_dComIfG_gameInfo)
//	8013F98C: 80035200 (onSwitch__10dSv_info_cFii)
//	8013F99C: 804061C0 (g_dComIfG_gameInfo)
//	8013F9A0: 804061C0 (g_dComIfG_gameInfo)
//	8013F9B0: 80035200 (onSwitch__10dSv_info_cFii)
//	8013F9C0: 804061C0 (g_dComIfG_gameInfo)
//	8013F9C4: 804061C0 (g_dComIfG_gameInfo)
//	8013F9D0: 8003498C (onEventBit__11dSv_event_cFUs)
//	8013F9E0: 804061C0 (g_dComIfG_gameInfo)
//	8013F9E4: 804061C0 (g_dComIfG_gameInfo)
//	8013F9F0: 8003498C (onEventBit__11dSv_event_cFUs)
//	8013F9FC: 8011A688 (setGetSubBgm__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSmellSave() {
    nofralloc
#include "asm/d/a/d_a_alink/setSmellSave__9daAlink_cFv.s"
}
#pragma pop

/* 8013FA14-8013FC24 0210+00 s=1 e=0 z=0  None .text      procWolfGetSmellInit__9daAlink_cFv */
//	8013FA28: 804061C0 (g_dComIfG_gameInfo)
//	8013FA2C: 804061C0 (g_dComIfG_gameInfo)
//	8013FA44: 8004316C (compulsory__14dEvt_control_cFPvPCcUs)
//	8013FA68: 800C1F6C (commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC)
//	8013FA74: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013FA78: 8038F858 (m__21daAlinkHIO_wlChain_c0)
//	8013FA84: 801296D8 (setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff)
//	8013FA94: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
//	8013FAA0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8013FAB8: 80439A20 (sincosTable___5JMath)
//	8013FABC: 80439A20 (sincosTable___5JMath)
//	8013FACC: 80452D50 (lit_8247)
//	8013FB08: 8015ECB8 (setData__16daPy_actorKeep_cFP10fopAc_ac_c)
//	8013FB40: 804061C0 (g_dComIfG_gameInfo)
//	8013FB44: 804061C0 (g_dComIfG_gameInfo)
//	8013FBB4: 804061C0 (g_dComIfG_gameInfo)
//	8013FBB8: 804061C0 (g_dComIfG_gameInfo)
//	8013FBC4: 800349BC (isEventBit__11dSv_event_cCFUs)
//	8013FBE0: 80452CC0 (lit_6108)
//	8013FBE8: 8042561C (l_wolfBaseAnime)
//	8013FBEC: 8042561C (l_wolfBaseAnime)
//	8013FC08: 80127C54 (onWolfEyeUp__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGetSmellInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGetSmellInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013FC24-8013FF28 0304+00 s=1 e=0 z=0  None .text      procWolfGetSmell__9daAlink_cFv */
//	8013FC58: 804061C0 (g_dComIfG_gameInfo)
//	8013FC5C: 804061C0 (g_dComIfG_gameInfo)
//	8013FC68: 80042518 (reset__14dEvt_control_cFPv)
//	8013FC6C: 804061C0 (g_dComIfG_gameInfo)
//	8013FC70: 804061C0 (g_dComIfG_gameInfo)
//	8013FC90: 80392094 (d_a_d_a_alink__stringBase0)
//	8013FC94: 80392094 (d_a_d_a_alink__stringBase0)
//	8013FCAC: 8001B3CC (fopAcM_orderOtherEvent__FP10fopAc_ac_cPCcUsUsUs)
//	8013FCB8: 80392094 (d_a_d_a_alink__stringBase0)
//	8013FCBC: 80392094 (d_a_d_a_alink__stringBase0)
//	8013FCD4: 8001B3CC (fopAcM_orderOtherEvent__FP10fopAc_ac_cPCcUsUsUs)
//	8013FCF0: 804061C0 (g_dComIfG_gameInfo)
//	8013FCF4: 804061C0 (g_dComIfG_gameInfo)
//	8013FD00: 8003498C (onEventBit__11dSv_event_cFUs)
//	8013FD04: 804061C0 (g_dComIfG_gameInfo)
//	8013FD08: 804061C0 (g_dComIfG_gameInfo)
//	8013FD14: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8013FD30: 8012880C (checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM)
//	8013FD48: 800BF0B8 (voiceStartLevel__9daAlink_cFUl)
//	8013FD7C: 8024A2D8 (doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci)
//	8013FD9C: 80117C90 (resetSpecialEvent__9daAlink_cFv)
//	8013FDB0: 804061C0 (g_dComIfG_gameInfo)
//	8013FDB4: 804061C0 (g_dComIfG_gameInfo)
//	8013FDCC: 8013F90C (setSmellSave__9daAlink_cFv)
//	8013FE20: 80452CB8 (lit_6040)
//	8013FE24: 80452D30 (lit_7625)
//	8013FE2C: 80452CC4 (lit_6109)
//	8013FE30: 80129704 (setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf)
//	8013FE34: 804061C0 (g_dComIfG_gameInfo)
//	8013FE38: 804061C0 (g_dComIfG_gameInfo)
//	8013FE78: 80181640 (dCam_getBody__Fv)
//	8013FE8C: 80088A7C (StartEventCamera__9dCamera_cFiie)
//	8013FEA8: 8013F90C (setSmellSave__9daAlink_cFv)
//	8013FECC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8013FEE0: 80129678 (setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM)
//	8013FF08: 80249F90 (init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGetSmell() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGetSmell__9daAlink_cFv.s"
}
#pragma pop

/* 8013FF28-8013FF90 0068+00 s=2 e=0 z=0  None .text      setArcName__9daAlink_cFi */
//	8013FF30: 80452C50 (l_wArcName)
//	8013FF3C: 804061C0 (g_dComIfG_gameInfo)
//	8013FF40: 804061C0 (g_dComIfG_gameInfo)
//	8013FF50: 80452C58 (l_bArcName)
//	8013FF64: 80452C68 (l_zArcName)
//	8013FF78: 80452C70 (l_mArcName)
//	8013FF84: 80452C60 (l_kArcName)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setArcName(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setArcName__9daAlink_cFi.s"
}
#pragma pop

/* 8013FF90-8013FFD8 0048+00 s=2 e=0 z=0  None .text      setShieldArcName__9daAlink_cFv */
//	8013FF90: 804061C0 (g_dComIfG_gameInfo)
//	8013FF94: 804061C0 (g_dComIfG_gameInfo)
//	8013FFAC: 80452C80 (l_cWShdArcName)
//	8013FFC0: 80452C88 (l_sWShdArcName)
//	8013FFCC: 80452C78 (l_hyShdArcName)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShieldArcName() {
    nofralloc
#include "asm/d/a/d_a_alink/setShieldArcName__9daAlink_cFv.s"
}
#pragma pop

/* 8013FFD8-80140038 0060+00 s=1 e=0 z=0  None .text setOriginalHeap__9daAlink_cFPP10JKRExpHeapUl
 */
//	80140000: 8000ED50 (mDoExt_getGameHeap__Fv)
//	80140018: 802CEE2C (create__10JKRExpHeapFUlP7JKRHeapb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setOriginalHeap(JKRExpHeap** param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setOriginalHeap__9daAlink_cFPP10JKRExpHeapUl.s"
}
#pragma pop

/* 80140038-80140064 002C+00 s=1 e=0 z=0  None .text      setClothesChange__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setClothesChange(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setClothesChange__9daAlink_cFi.s"
}
#pragma pop

/* 80140064-80140070 000C+00 s=0 e=1 z=0  None .text      setShieldChange__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShieldChange() {
    nofralloc
#include "asm/d/a/d_a_alink/setShieldChange__9daAlink_cFv.s"
}
#pragma pop

/* 80140070-801401F8 0188+00 s=3 e=0 z=0  None .text      loadModelDVD__9daAlink_cFv */
//	801400A8: 8009CA28 (remove__8dEyeHL_cFv)
//	801400B0: 8009CA28 (remove__8dEyeHL_cFv)
//	801400DC: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	801400E4: 80266624 (cPhs_Reset__FP30request_of_phase_process_class)
//	801400EC: 802CE5CC (freeAll__7JKRHeapFv)
//	80140118: 8013FF28 (setArcName__9daAlink_cFi)
//	8014012C: 8013FF28 (setArcName__9daAlink_cFi)
//	80140154: 80126F3C (changeLink__9daAlink_cFi)
//	80140168: 8002CFC0 (dComIfG_resLoad__FP30request_of_phase_process_classPCcP7JKRHeap)
//	801401A4: 80126F3C (changeLink__9daAlink_cFi)
//	801401B0: 80126928 (changeWolf__9daAlink_cFv)
//	801401C0: 80126F3C (changeLink__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadModelDVD() {
    nofralloc
#include "asm/d/a/d_a_alink/loadModelDVD__9daAlink_cFv.s"
}
#pragma pop

/* 801401F8-80140274 007C+00 s=2 e=0 z=0  None .text      setShieldModel__9daAlink_cFv */
//	80140214: 8015F168 (setAnimeHeap__14daPy_anmHeap_cFv)
//	80140224: 804061C0 (g_dComIfG_gameInfo)
//	80140228: 804061C0 (g_dComIfG_gameInfo)
//	80140238: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8014024C: 800A3D7C (initModel__9daAlink_cFP12J3DModelDataUlUl)
//	80140258: 8000F1CC (mDoExt_setCurrentHeap__FP7JKRHeap)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShieldModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setShieldModel__9daAlink_cFv.s"
}
#pragma pop

/* 80140274-80140338 00C4+00 s=2 e=0 z=0  None .text      loadShieldModelDVD__9daAlink_cFv */
//	801402B8: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	801402C0: 80266624 (cPhs_Reset__FP30request_of_phase_process_class)
//	801402C8: 802CE5CC (freeAll__7JKRHeapFv)
//	801402D0: 8013FF90 (setShieldArcName__9daAlink_cFv)
//	801402EC: 8002CFC0 (dComIfG_resLoad__FP30request_of_phase_process_classPCcP7JKRHeap)
//	80140304: 801401F8 (setShieldModel__9daAlink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadShieldModelDVD() {
    nofralloc
#include "asm/d/a/d_a_alink/loadShieldModelDVD__9daAlink_cFv.s"
}
#pragma pop

/* 80140338-80140550 0218+00 s=3 e=0 z=0  None .text      changeModelDataDirect__9daAlink_cFi */
//	801403B0: 8009EC28 (daAlink_modelCallBack__FP8J3DJointi)
//	801403B4: 8009EC28 (daAlink_modelCallBack__FP8J3DJointi)
//	801403EC: 8009EF38 (daAlink_headModelCallBack__FP8J3DJointi)
//	801403F0: 8009EF38 (daAlink_headModelCallBack__FP8J3DJointi)
//	80140438: 8032FBC8 (entryTexNoAnimator__16J3DMaterialTableFP16J3DAnmTexPattern)
//	80140450: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	80140510: 8009EF38 (daAlink_headModelCallBack__FP8J3DJointi)
//	80140514: 8009EF38 (daAlink_headModelCallBack__FP8J3DJointi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeModelDataDirect(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeModelDataDirect__9daAlink_cFi.s"
}
#pragma pop

/* 80140550-801406A8 0158+00 s=3 e=0 z=0  None .text      changeModelDataDirectWolf__9daAlink_cFi */
//	801405C8: 8009EFF0 (daAlink_wolfModelCallBack__FP8J3DJointi)
//	801405CC: 8009EFF0 (daAlink_wolfModelCallBack__FP8J3DJointi)
//	80140614: 8032FBC8 (entryTexNoAnimator__16J3DMaterialTableFP16J3DAnmTexPattern)
//	8014062C: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeModelDataDirectWolf(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeModelDataDirectWolf__9daAlink_cFi.s"
}
#pragma pop

/* 801406A8-80140888 01E0+00 s=0 e=1 z=0  None .text      initStatusWindow__9daAlink_cFv */
//	801406B8: 803621D0 (_savegpr_26)
//	801406D4: 802CECEC (__nwa__FUli)
//	801406FC: 80140550 (changeModelDataDirectWolf__9daAlink_cFi)
//	80140714: 800BFDB0 (checkZoraWearAbility__9daAlink_cCFv)
//	80140724: 80101890 (checkZoraWearMaskDraw__9daAlink_cFv)
//	80140748: 80140338 (changeModelDataDirect__9daAlink_cFi)
//	8014074C: 804061C0 (g_dComIfG_gameInfo)
//	80140750: 804061C0 (g_dComIfG_gameInfo)
//	80140764: 802D5ECC (readIdxResource__10JKRArchiveFPvUlUl)
//	8014076C: 802CEC4C (__nw__FUl)
//	80140778: 803A3354 (__vt__12J3DFrameCtrl)
//	8014077C: 803A3354 (__vt__12J3DFrameCtrl)
//	80140788: 803283FC (init__12J3DFrameCtrlFs)
//	801407A0: 80337B40 (load__20J3DAnmLoaderDataBaseFPCv24J3DAnmLoaderDataBaseFlag)
//	801407B4: 80452CB8 (lit_6040)
//	801407C4: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	801407D0: 802CECEC (__nwa__FUli)
//	801407E8: 802D5ECC (readIdxResource__10JKRArchiveFPvUlUl)
//	801407F4: 80337B40 (load__20J3DAnmLoaderDataBaseFPCv24J3DAnmLoaderDataBaseFlag)
//	801407FC: 80452CC0 (lit_6108)
//	80140808: 8032B09C (searchUpdateMaterialID__16J3DAnmTexPatternFP12J3DModelData)
//	80140818: 8032FBC8 (entryTexNoAnimator__16J3DMaterialTableFP16J3DAnmTexPattern)
//	80140824: 802CECEC (__nwa__FUli)
//	8014083C: 802D5ECC (readIdxResource__10JKRArchiveFPvUlUl)
//	80140848: 80337B40 (load__20J3DAnmLoaderDataBaseFPCv24J3DAnmLoaderDataBaseFlag)
//	80140850: 80452CC0 (lit_6108)
//	8014085C: 8032B1D4 (searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP12J3DModelData)
//	8014086C: 8032FCC4 (entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	80140874: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initStatusWindow() {
    nofralloc
#include "asm/d/a/d_a_alink/initStatusWindow__9daAlink_cFv.s"
}
#pragma pop

/* 80140888-80140984 00FC+00 s=0 e=1 z=0  None .text      statusWindowExecute__9daAlink_cFPC4cXyzs
 */
//	80140898: 803621DC (_savegpr_29)
//	801408A8: 80140070 (loadModelDVD__9daAlink_cFv)
//	801408CC: 80140274 (loadShieldModelDVD__9daAlink_cFv)
//	801408D8: 800A4910 (setSelectEquipItem__9daAlink_cFi)
//	801408F4: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	801408F8: 803DD470 (now__14mDoMtx_stack_c)
//	801408FC: 803DD470 (now__14mDoMtx_stack_c)
//	80140904: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80140908: 803DD470 (now__14mDoMtx_stack_c)
//	8014090C: 803DD470 (now__14mDoMtx_stack_c)
//	80140918: 803464B0 (PSMTXCopy)
//	80140920: 8000D428 (play__14mDoExt_baseAnmFv)
//	80140930: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	80140958: 800A9F4C (setWolfItemMatrix__9daAlink_cFv)
//	80140968: 800A9450 (setItemMatrix__9daAlink_cFi)
//	80140970: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::statusWindowExecute(cXyz const* param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/statusWindowExecute__9daAlink_cFPC4cXyzs.s"
}
#pragma pop

/* 80140984-80140AC8 0144+00 s=0 e=1 z=0  None .text      statusWindowDraw__9daAlink_cFv */
//	80140994: 803621DC (_savegpr_29)
//	801409A8: 8042CA54 (g_env_light)
//	801409AC: 8042CA54 (g_env_light)
//	801409BC: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	801409C4: 800CC7DC (initTevCustomColor__9daAlink_cFv)
//	801409D8: 804531E8 (waterColor)
//	801409DC: 800CC364 (setWaterDropColor__9daAlink_cFPC13J3DGXColorS10)
//	801409E4: 800CAFC8 (setDrawHand__9daAlink_cFv)
//	801409F0: 800CC298 (basicModelDraw__9daAlink_cFP8J3DModel)
//	80140A08: 800CC298 (basicModelDraw__9daAlink_cFP8J3DModel)
//	80140A14: 800CC298 (basicModelDraw__9daAlink_cFP8J3DModel)
//	80140A20: 800CC298 (basicModelDraw__9daAlink_cFP8J3DModel)
//	80140A44: 800CC298 (basicModelDraw__9daAlink_cFP8J3DModel)
//	80140A5C: 800CB480 (checkSwordDraw__9daAlink_cFv)
//	80140A70: 800CC298 (basicModelDraw__9daAlink_cFP8J3DModel)
//	80140A74: 804061C0 (g_dComIfG_gameInfo)
//	80140A78: 804061C0 (g_dComIfG_gameInfo)
//	80140A90: 800CC298 (basicModelDraw__9daAlink_cFP8J3DModel)
//	80140A98: 800CB53C (checkShieldDraw__9daAlink_cFv)
//	80140AAC: 800CC298 (basicModelDraw__9daAlink_cFP8J3DModel)
//	80140AB4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::statusWindowDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/statusWindowDraw__9daAlink_cFv.s"
}
#pragma pop

/* 80140AC8-80140B88 00C0+00 s=0 e=1 z=0  None .text      resetStatusWindow__9daAlink_cFv */
//	80140AF8: 80140550 (changeModelDataDirectWolf__9daAlink_cFi)
//	80140B04: 80140338 (changeModelDataDirect__9daAlink_cFi)
//	80140B0C: 800A8CE4 (setMatrix__9daAlink_cFv)
//	80140B38: 800A4910 (setSelectEquipItem__9daAlink_cFi)
//	80140B4C: 800A9F4C (setWolfItemMatrix__9daAlink_cFv)
//	80140B5C: 800A9450 (setItemMatrix__9daAlink_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetStatusWindow() {
    nofralloc
#include "asm/d/a/d_a_alink/resetStatusWindow__9daAlink_cFv.s"
}
#pragma pop

/* 80140B88-80140B98 0010+00 s=1 e=0 z=0  None .text      __ct__12daAlinkHIO_cFv */
//	80140B88: 803B321C (__vt__12daAlinkHIO_c)
//	80140B8C: 803B321C (__vt__12daAlinkHIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlinkHIO_c::daAlinkHIO_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__12daAlinkHIO_cFv.s"
}
#pragma pop

/* 80140B98-80140BD4 003C+00 s=1 e=0 z=0  None .text      __dt__17daAlinkHIO_wolf_cFv */
//	80140BB8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlinkHIO_wolf_c::~daAlinkHIO_wolf_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__17daAlinkHIO_wolf_cFv.s"
}
#pragma pop

/* 80140BD4-80140C10 003C+00 s=1 e=0 z=0  None .text      __dt__16daAlinkHIO_cut_cFv */
//	80140BF4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlinkHIO_cut_c::~daAlinkHIO_cut_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__16daAlinkHIO_cut_cFv.s"
}
#pragma pop

/* 80140C10-80140C80 0070+00 s=1 e=0 z=0  None .text      __dt__12daAlinkHIO_cFv */
//	80140C30: 803B321C (__vt__12daAlinkHIO_c)
//	80140C34: 803B321C (__vt__12daAlinkHIO_c)
//	80140C44: 80140B98 (__dt__17daAlinkHIO_wolf_cFv)
//	80140C50: 80140BD4 (__dt__16daAlinkHIO_cut_cFv)
//	80140C60: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlinkHIO_c::~daAlinkHIO_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__12daAlinkHIO_cFv.s"
}
#pragma pop

/* 80140C80-80140CDC 005C+00 s=1 e=0 z=0  None .text      __dt__8dEyeHL_cFv */
//	80140CA0: 803B2E80 (__vt__8dEyeHL_c)
//	80140CA4: 803B2E80 (__vt__8dEyeHL_c)
//	80140CAC: 8009CA28 (remove__8dEyeHL_cFv)
//	80140CBC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dEyeHL_c::~dEyeHL_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__8dEyeHL_cFv.s"
}
#pragma pop

/* 80140CDC-80140D24 0048+00 s=0 e=1 z=0  None .text      __dt__18daPy_sightPacket_cFv */
//	80140CF4: 803BA14C (__vt__18daPy_sightPacket_c)
//	80140CF8: 803BA14C (__vt__18daPy_sightPacket_c)
//	80140D08: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daPy_sightPacket_c::~daPy_sightPacket_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__18daPy_sightPacket_cFv.s"
}
#pragma pop

/* 80140D24-80140D80 005C+00 s=3 e=0 z=0  None .text      __dt__16daPy_frameCtrl_cFv */
//	80140D3C: 803B2E20 (__vt__16daPy_frameCtrl_c)
//	80140D40: 803B2E20 (__vt__16daPy_frameCtrl_c)
//	80140D4C: 803A3354 (__vt__12J3DFrameCtrl)
//	80140D50: 803A3354 (__vt__12J3DFrameCtrl)
//	80140D64: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daPy_frameCtrl_c::~daPy_frameCtrl_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__16daPy_frameCtrl_cFv.s"
}
#pragma pop

/* 80140D80-80140DCC 004C+00 s=1 e=0 z=0  None .text      __ct__16daPy_frameCtrl_cFv */
//	80140D94: 803A3354 (__vt__12J3DFrameCtrl)
//	80140D98: 803A3354 (__vt__12J3DFrameCtrl)
//	80140DA4: 803283FC (init__12J3DFrameCtrlFs)
//	80140DA8: 803B2E20 (__vt__16daPy_frameCtrl_c)
//	80140DAC: 803B2E20 (__vt__16daPy_frameCtrl_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daPy_frameCtrl_c::daPy_frameCtrl_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__16daPy_frameCtrl_cFv.s"
}
#pragma pop

/* 80140DCC-80140DF0 0024+00 s=1 e=0 z=0  None .text      __defctor__14daPy_anmHeap_cFv */
//	80140DDC: 8015ED10 (__ct__14daPy_anmHeap_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_anmHeap_c::__defctor() {
    nofralloc
#include "asm/d/a/d_a_alink/__defctor__14daPy_anmHeap_cFv.s"
}
#pragma pop

/* 80140DF0-80140E2C 003C+00 s=2 e=0 z=0  None .text      __dt__19mDoExt_AnmRatioPackFv */
//	80140E10: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_AnmRatioPack::~mDoExt_AnmRatioPack() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__19mDoExt_AnmRatioPackFv.s"
}
#pragma pop

/* 80140E2C-80140E40 0014+00 s=1 e=0 z=0  None .text      __ct__19mDoExt_AnmRatioPackFv */
//	80140E2C: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_AnmRatioPack::mDoExt_AnmRatioPack() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__19mDoExt_AnmRatioPackFv.s"
}
#pragma pop

/* 80140E40-80140EB8 0078+00 s=4 e=0 z=0  None .text      __dt__16dBgS_LinkRoofChkFv */
//	80140E60: 803B2EC8 (__vt__16dBgS_LinkRoofChk)
//	80140E64: 803B2EC8 (__vt__16dBgS_LinkRoofChk)
//	80140E88: 80079090 (__dt__12dBgS_RoofChkFv)
//	80140E98: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_LinkRoofChk::~dBgS_LinkRoofChk() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__16dBgS_LinkRoofChkFv.s"
}
#pragma pop

/* 80140EB8-80140F30 0078+00 s=4 e=0 z=0  None .text      __dt__15dBgS_LinkGndChkFv */
//	80140ED8: 803B2EF8 (__vt__15dBgS_LinkGndChk)
//	80140EDC: 803B2EF8 (__vt__15dBgS_LinkGndChk)
//	80140F00: 800775F0 (__dt__11dBgS_GndChkFv)
//	80140F10: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_LinkGndChk::~dBgS_LinkGndChk() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__15dBgS_LinkGndChkFv.s"
}
#pragma pop

/* 80140F30-80140FA0 0070+00 s=3 e=0 z=0  None .text      __dt__13dBgS_LinkAcchFv */
//	80140F50: 803B2F28 (__vt__13dBgS_LinkAcch)
//	80140F54: 803B2F28 (__vt__13dBgS_LinkAcch)
//	80140F70: 80075F94 (__dt__9dBgS_AcchFv)
//	80140F80: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_LinkAcch::~dBgS_LinkAcch() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__13dBgS_LinkAcchFv.s"
}
#pragma pop

/* 80140FA0-80141020 0080+00 s=1 e=0 z=0  None .text      __ct__8dCcD_CpsFv */
//	80140FB4: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80140FB8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80140FBC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80140FC4: 803A7218 (__vt__8cM3dGAab)
//	80140FC8: 803A7218 (__vt__8cM3dGAab)
//	80140FD4: 8026EF88 (__ct__8cM3dGCpsFv)
//	80140FD8: 803C3608 (__vt__12cCcD_CpsAttr)
//	80140FDC: 803C3608 (__vt__12cCcD_CpsAttr)
//	80140FEC: 803AC170 (__vt__8dCcD_Cps)
//	80140FF0: 803AC170 (__vt__8dCcD_Cps)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_Cps::dCcD_Cps() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__8dCcD_CpsFv.s"
}
#pragma pop

/* 80141020-801410A4 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_CylFv */
//	80141034: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80141038: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8014103C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80141044: 803A7218 (__vt__8cM3dGAab)
//	80141048: 803A7218 (__vt__8cM3dGAab)
//	80141050: 803A720C (__vt__8cM3dGCyl)
//	80141054: 803A720C (__vt__8cM3dGCyl)
//	8014105C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80141060: 803C35A4 (__vt__12cCcD_CylAttr)
//	80141070: 803AC050 (__vt__8dCcD_Cyl)
//	80141074: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_Cyl::dCcD_Cyl() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__8dCcD_CylFv.s"
}
#pragma pop

/* 801410A4-801410EC 0048+00 s=0 e=1 z=0  None .text      __dt__9cCcD_SttsFv */
//	801410BC: 803C3728 (__vt__9cCcD_Stts)
//	801410C0: 803C3728 (__vt__9cCcD_Stts)
//	801410D0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_Stts::~cCcD_Stts() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__9cCcD_SttsFv.s"
}
#pragma pop

/* 801410EC-8014111C 0030+00 s=1 e=0 z=0  None .text      __ct__16daPy_actorKeep_cFv */
//	80141100: 8015ECFC (clearData__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daPy_actorKeep_c::daPy_actorKeep_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__16daPy_actorKeep_cFv.s"
}
#pragma pop

/* 8014111C-8014112C 0010+00 s=1 e=0 z=0  None .text
 * onNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::onNoResetFlg2(daPy_py_c::daPy_FLG2 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/onNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2.s"
}
#pragma pop

/* 8014112C-8014113C 0010+00 s=1 e=0 z=0  None .text
 * offNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::offNoResetFlg0(daPy_py_c::daPy_FLG0 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/offNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0.s"
}
#pragma pop

/* 8014113C-80141190 0054+00 s=1 e=0 z=0  None .text      mDoAud_seStartLevel__FUlPC3VecUlSc */
//	80141158: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80141168: 80452CB8 (lit_6040)
//	80141170: 80452CBC (lit_6041)
//	8014117C: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoAud_seStartLevel(u32 param_0, Vec const* param_1, u32 param_2, s8 param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/mDoAud_seStartLevel__FUlPC3VecUlSc.s"
}
#pragma pop

/* 80141190-8014119C 000C+00 s=1 e=0 z=0  None .text
 * checkEndResetFlg2__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG2     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkEndResetFlg2(daPy_py_c::daPy_ERFLG2 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkEndResetFlg2__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG2.s"
}
#pragma pop

/* 8014119C-801411B0 0014+00 s=1 e=0 z=0  None .text      dComIfGp_setBottleStatus__FUcUc */
//	8014119C: 804061C0 (g_dComIfG_gameInfo)
//	801411A0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_setBottleStatus(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_setBottleStatus__FUcUc.s"
}
#pragma pop

/* 801411B0-801411D4 0024+00 s=1 e=0 z=0  None .text      getSumouMode__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getSumouMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSumouMode__9daPy_py_cCFv.s"
}
#pragma pop

/* 801411D4-801411E0 000C+00 s=1 e=0 z=0  None .text
 * checkNoResetFlg3__9daPy_py_cCFQ29daPy_py_c9daPy_FLG3         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkNoResetFlg3(daPy_py_c::daPy_FLG3 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoResetFlg3__9daPy_py_cCFQ29daPy_py_c9daPy_FLG3.s"
}
#pragma pop

/* 801411E0-801411F0 0010+00 s=1 e=0 z=0  None .text      onCondition__11dEvt_info_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dEvt_info_c::onCondition(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/onCondition__11dEvt_info_cFUs.s"
}
#pragma pop

/* 801411F0-80141200 0010+00 s=1 e=4 z=0  None .text      __ct__8cM3dGPlaFv */
//	801411F0: 803A37C0 (__vt__8cM3dGPla)
//	801411F4: 803A37C0 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGPla::cM3dGPla() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__8cM3dGPlaFv.s"
}
#pragma pop

/* 80141200-80141210 0010+00 s=1 e=0 z=0  None .text      offCondition__11dEvt_info_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dEvt_info_c::offCondition(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/offCondition__11dEvt_info_cFUs.s"
}
#pragma pop

/* 80141210-80141230 0020+00 s=1 e=0 z=0  None .text      checkShieldGet__9daPy_py_cFv */
//	80141210: 804061C0 (g_dComIfG_gameInfo)
//	80141214: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkShieldGet() {
    nofralloc
#include "asm/d/a/d_a_alink/checkShieldGet__9daPy_py_cFv.s"
}
#pragma pop

/* 80141230-80141264 0034+00 s=1 e=0 z=0  None .text      fopAcM_onSwitch__FPC10fopAc_ac_ci */
//	80141240: 804061C0 (g_dComIfG_gameInfo)
//	80141244: 804061C0 (g_dComIfG_gameInfo)
//	80141250: 80035200 (onSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void fopAcM_onSwitch(fopAc_ac_c const* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/fopAcM_onSwitch__FPC10fopAc_ac_ci.s"
}
#pragma pop

/* 80141264-80141294 0030+00 s=1 e=0 z=0  None .text      dComIfGs_isItemFirstBit__FUc */
//	80141274: 804061C0 (g_dComIfG_gameInfo)
//	80141278: 804061C0 (g_dComIfG_gameInfo)
//	80141280: 80033EC8 (isFirstBit__21dSv_player_get_item_cCFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGs_isItemFirstBit(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGs_isItemFirstBit__FUc.s"
}
#pragma pop

/* 80141294-801412A0 000C+00 s=1 e=0 z=0  None .text
 * dStage_stagInfo_GetSaveTbl__FP21stage_stag_info_class        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dStage_stagInfo_GetSaveTbl(stage_stag_info_class* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dStage_stagInfo_GetSaveTbl__FP21stage_stag_info_class.s"
}
#pragma pop

/* 801412A0-801412B0 0010+00 s=1 e=0 z=0  None .text      dComIfGp_getStage__Fv */
//	801412A0: 804061C0 (g_dComIfG_gameInfo)
//	801412A4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_getStage() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getStage__Fv.s"
}
#pragma pop

/* 801412B0-801412BC 000C+00 s=1 e=0 z=0  None .text      checkEquipHeavyBoots__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkEquipHeavyBoots() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkEquipHeavyBoots__9daPy_py_cCFv.s"
}
#pragma pop

/* 801412BC-801412C4 0008+00 s=1 e=4 z=0  None .text      fopAcM_GetName__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopAcM_GetName(void* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/fopAcM_GetName__FPv.s"
}
#pragma pop

/* 801412C4-801412D4 0010+00 s=1 e=0 z=0  None .text
 * onNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::onNoResetFlg0(daPy_py_c::daPy_FLG0 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/onNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0.s"
}
#pragma pop

/* 801412D4-801412F8 0024+00 s=1 e=0 z=0  None .text      isOrderOK__14dEvt_control_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dEvt_control_c::isOrderOK() {
    nofralloc
#include "asm/d/a/d_a_alink/isOrderOK__14dEvt_control_cFv.s"
}
#pragma pop

/* 801412F8-80141308 0010+00 s=1 e=0 z=0  None .text      dComIfGp_getEvent__Fv */
//	801412F8: 804061C0 (g_dComIfG_gameInfo)
//	801412FC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_getEvent() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getEvent__Fv.s"
}
#pragma pop

/* 80141308-80141324 001C+00 s=1 e=0 z=0  None .text      dComIfGp_checkPlayerStatus0__FiUl */
//	80141308: 804061C0 (g_dComIfG_gameInfo)
//	8014130C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_checkPlayerStatus0(int param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_checkPlayerStatus0__FiUl.s"
}
#pragma pop

/* 80141324-80141340 001C+00 s=1 e=0 z=0  None .text      dComIfGp_checkPlayerStatus1__FiUl */
//	80141324: 804061C0 (g_dComIfG_gameInfo)
//	80141328: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_checkPlayerStatus1(int param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_checkPlayerStatus1__FiUl.s"
}
#pragma pop

/* 80141340-8014134C 000C+00 s=1 e=0 z=0  None .text
 * checkEndResetFlg1__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG1     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkEndResetFlg1(daPy_py_c::daPy_ERFLG1 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkEndResetFlg1__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG1.s"
}
#pragma pop

/* 8014134C-8014135C 0010+00 s=1 e=0 z=0  None .text      dComIfGp_getEventManager__Fv */
//	8014134C: 804061C0 (g_dComIfG_gameInfo)
//	80141350: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_getEventManager() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getEventManager__Fv.s"
}
#pragma pop

/* 8014135C-8014136C 0010+00 s=1 e=0 z=0  None .text
 * offNoResetFlg1__9daPy_py_cFQ29daPy_py_c9daPy_FLG1            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::offNoResetFlg1(daPy_py_c::daPy_FLG1 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/offNoResetFlg1__9daPy_py_cFQ29daPy_py_c9daPy_FLG1.s"
}
#pragma pop

/* 8014136C-8014137C 0010+00 s=1 e=0 z=0  None .text
 * offNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::offNoResetFlg2(daPy_py_c::daPy_FLG2 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/offNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2.s"
}
#pragma pop

/* 8014137C-80141388 000C+00 s=1 e=0 z=0  None .text      setSpecialDemoType__11daPy_demo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_demo_c::setSpecialDemoType() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpecialDemoType__11daPy_demo_cFv.s"
}
#pragma pop

/* 80141388-8014139C 0014+00 s=1 e=0 z=0  None .text      checkCommandCatch__11dEvt_info_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dEvt_info_c::checkCommandCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCommandCatch__11dEvt_info_cFv.s"
}
#pragma pop

/* 8014139C-801413CC 0030+00 s=1 e=1 z=0  None .text      dComIfGs_isEventBit__FUs */
//	801413AC: 804061C0 (g_dComIfG_gameInfo)
//	801413B0: 804061C0 (g_dComIfG_gameInfo)
//	801413B8: 800349BC (isEventBit__11dSv_event_cCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dComIfGs_isEventBit(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGs_isEventBit__FUs.s"
}
#pragma pop

/* 801413CC-801413D8 000C+00 s=1 e=0 z=0  None .text      checkWolf__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkWolf() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolf__9daPy_py_cCFv.s"
}
#pragma pop

/* 801413D8-801413F8 0020+00 s=1 e=0 z=0  None .text      checkSwordGet__9daPy_py_cFv */
//	801413D8: 804061C0 (g_dComIfG_gameInfo)
//	801413DC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkSwordGet() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwordGet__9daPy_py_cFv.s"
}
#pragma pop

/* 801413F8-80141404 000C+00 s=1 e=0 z=0  None .text
 * checkResetFlg0__9daPy_py_cCFQ29daPy_py_c10daPy_RFLG0         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkResetFlg0(daPy_py_c::daPy_RFLG0 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkResetFlg0__9daPy_py_cCFQ29daPy_py_c10daPy_RFLG0.s"
}
#pragma pop

/* 80141404-80141410 000C+00 s=1 e=0 z=0  None .text      ChkGroundHit__9dBgS_AcchCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgS_Acch::ChkGroundHit() const {
    nofralloc
#include "asm/d/a/d_a_alink/ChkGroundHit__9dBgS_AcchCFv.s"
}
#pragma pop

/* 80141410-8014141C 000C+00 s=1 e=0 z=0  None .text
 * checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkNoResetFlg0(daPy_py_c::daPy_FLG0 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0.s"
}
#pragma pop

/* 8014141C-80141438 001C+00 s=1 e=0 z=0  None .text      dComIfGp_getPlayerCameraID__Fi */
//	8014141C: 804061C0 (g_dComIfG_gameInfo)
//	80141420: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_getPlayerCameraID(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getPlayerCameraID__Fi.s"
}
#pragma pop

/* 80141438-80141450 0018+00 s=1 e=0 z=0  None .text      dComIfGp_event_chkEventFlag__FUs */
//	80141438: 804061C0 (g_dComIfG_gameInfo)
//	8014143C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_event_chkEventFlag(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_event_chkEventFlag__FUs.s"
}
#pragma pop

/* 80141450-80141464 0014+00 s=1 e=0 z=0  None .text      checkCommandDoor__11dEvt_info_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dEvt_info_c::checkCommandDoor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCommandDoor__11dEvt_info_cFv.s"
}
#pragma pop

/* 80141464-801414A4 0040+00 s=1 e=0 z=0  None .text
 * dComIfGp_evmng_getMyStaffId__FPCcP10fopAc_ac_ci              */
//	8014147C: 804061C0 (g_dComIfG_gameInfo)
//	80141480: 804061C0 (g_dComIfG_gameInfo)
//	80141490: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_evmng_getMyStaffId(char const* param_0, fopAc_ac_c* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_evmng_getMyStaffId__FPCcP10fopAc_ac_ci.s"
}
#pragma pop

/* 801414A4-801414C0 001C+00 s=1 e=0 z=0  None .text      dComIfGp_event_runCheck__Fv */
//	801414A4: 804061C0 (g_dComIfG_gameInfo)
//	801414A8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_event_runCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_event_runCheck__Fv.s"
}
#pragma pop

/* 801414C0-801414CC 000C+00 s=1 e=0 z=0  None .text
 * checkNoResetFlg2__9daPy_py_cCFQ29daPy_py_c9daPy_FLG2         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkNoResetFlg2(daPy_py_c::daPy_FLG2 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoResetFlg2__9daPy_py_cCFQ29daPy_py_c9daPy_FLG2.s"
}
#pragma pop

/* 801414CC-801414D8 000C+00 s=1 e=2 z=0  None .text      checkMagneBootsOn__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkMagneBootsOn() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkMagneBootsOn__9daPy_py_cCFv.s"
}
#pragma pop

/* 801414D8-801414E8 0010+00 s=1 e=2 z=0  None .text      dComIfGp_getHorseActor__Fv */
//	801414D8: 804061C0 (g_dComIfG_gameInfo)
//	801414DC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dComIfGp_getHorseActor() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getHorseActor__Fv.s"
}
#pragma pop

/* 801414E8-801414F4 000C+00 s=1 e=0 z=0  None .text      checkBoarSingleBattle__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkBoarSingleBattle() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoarSingleBattle__9daPy_py_cCFv.s"
}
#pragma pop

/* 801414F4-80141500 000C+00 s=1 e=0 z=0  None .text
 * checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::checkEndResetFlg0(daPy_py_c::daPy_ERFLG0 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0.s"
}
#pragma pop

/* 80141500-80141508 0008+00 s=1 e=0 z=0  None .text      getMidnaAtnPos__9daPy_py_cCFv */
bool daPy_py_c::getMidnaAtnPos() const {
    return false;
}

/* 80141508-8014150C 0004+00 s=1 e=0 z=0  None .text      setMidnaMsgNum__9daPy_py_cFP10fopAc_ac_cUs
 */
void daPy_py_c::setMidnaMsgNum(fopAc_ac_c* param_0, u16 param_1) {
    /* empty function */
}

/* 8014150C-80141514 0008+00 s=1 e=0 z=0  None .text      getModelMtx__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getModelMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/getModelMtx__9daPy_py_cFv.s"
}
#pragma pop

/* 80141514-8014151C 0008+00 s=1 e=0 z=0  None .text      getInvMtx__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getInvMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/getInvMtx__9daPy_py_cFv.s"
}
#pragma pop

/* 8014151C-80141524 0008+00 s=1 e=0 z=0  None .text      getShadowTalkAtnPos__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getShadowTalkAtnPos() {
    nofralloc
#include "asm/d/a/d_a_alink/getShadowTalkAtnPos__9daPy_py_cFv.s"
}
#pragma pop

/* 80141524-8014152C 0008+00 s=1 e=0 z=0  None .text      getLeftItemMatrix__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getLeftItemMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getLeftItemMatrix__9daPy_py_cFv.s"
}
#pragma pop

/* 8014152C-80141534 0008+00 s=1 e=0 z=0  None .text      getRightItemMatrix__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getRightItemMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getRightItemMatrix__9daPy_py_cFv.s"
}
#pragma pop

/* 80141534-8014153C 0008+00 s=1 e=0 z=0  None .text      getLeftHandMatrix__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getLeftHandMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getLeftHandMatrix__9daPy_py_cFv.s"
}
#pragma pop

/* 8014153C-80141544 0008+00 s=1 e=0 z=0  None .text      getRightHandMatrix__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getRightHandMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getRightHandMatrix__9daPy_py_cFv.s"
}
#pragma pop

/* 80141544-8014154C 0008+00 s=1 e=0 z=0  None .text      getLinkBackBone1Matrix__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getLinkBackBone1Matrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getLinkBackBone1Matrix__9daPy_py_cFv.s"
}
#pragma pop

/* 8014154C-80141554 0008+00 s=1 e=0 z=0  None .text      getWolfMouthMatrix__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getWolfMouthMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfMouthMatrix__9daPy_py_cFv.s"
}
#pragma pop

/* 80141554-8014155C 0008+00 s=1 e=0 z=0  None .text      getWolfBackbone2Matrix__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getWolfBackbone2Matrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfBackbone2Matrix__9daPy_py_cFv.s"
}
#pragma pop

/* 8014155C-80141564 0008+00 s=1 e=0 z=0  None .text      getBottleMtx__9daPy_py_cFv */
bool daPy_py_c::getBottleMtx() {
    return false;
}

/* 80141564-8014156C 0008+00 s=1 e=0 z=0  None .text      checkPlayerGuard__9daPy_py_cCFv */
bool daPy_py_c::checkPlayerGuard() const {
    return false;
}

/* 8014156C-80141574 0008+00 s=1 e=0 z=0  None .text      checkAutoJump__9daPy_py_cCFv */
bool daPy_py_c::checkAutoJump() const {
    return false;
}

/* 80141574-8014157C 0008+00 s=1 e=0 z=0  None .text      checkSideStep__9daPy_py_cCFv */
bool daPy_py_c::checkSideStep() const {
    return false;
}

/* 8014157C-80141584 0008+00 s=1 e=0 z=0  None .text      checkWolfTriggerJump__9daPy_py_cCFv */
bool daPy_py_c::checkWolfTriggerJump() const {
    return false;
}

/* 80141584-8014158C 0008+00 s=1 e=0 z=0  None .text      checkGuardBreakMode__9daPy_py_cCFv */
bool daPy_py_c::checkGuardBreakMode() const {
    return false;
}

/* 8014158C-80141594 0008+00 s=1 e=0 z=0  None .text      checkLv3Slide__9daPy_py_cCFv */
bool daPy_py_c::checkLv3Slide() const {
    return false;
}

/* 80141594-8014159C 0008+00 s=1 e=0 z=0  None .text      checkWolfHowlDemoMode__9daPy_py_cCFv */
bool daPy_py_c::checkWolfHowlDemoMode() const {
    return false;
}

/* 8014159C-801415A4 0008+00 s=1 e=0 z=0  None .text      checkChainBlockPushPull__9daPy_py_cFv */
bool daPy_py_c::checkChainBlockPushPull() {
    return false;
}

/* 801415A4-801415AC 0008+00 s=1 e=0 z=0  None .text      checkElecDamage__9daPy_py_cCFv */
bool daPy_py_c::checkElecDamage() const {
    return false;
}

/* 801415AC-801415B4 0008+00 s=1 e=0 z=0  None .text      checkEmptyBottleSwing__9daPy_py_cCFv */
bool daPy_py_c::checkEmptyBottleSwing() const {
    return false;
}

/* 801415B4-801415BC 0008+00 s=1 e=0 z=0  None .text      checkBottleSwingMode__9daPy_py_cCFv */
bool daPy_py_c::checkBottleSwingMode() const {
    return false;
}

/* 801415BC-801415C4 0008+00 s=1 e=0 z=0  None .text      checkHawkWait__9daPy_py_cCFv */
bool daPy_py_c::checkHawkWait() const {
    return false;
}

/* 801415C4-801415CC 0008+00 s=1 e=0 z=0  None .text      checkGoatThrow__9daPy_py_cCFv */
bool daPy_py_c::checkGoatThrow() const {
    return false;
}

/* 801415CC-801415D4 0008+00 s=1 e=0 z=0  None .text      checkGoatThrowAfter__9daPy_py_cCFv */
bool daPy_py_c::checkGoatThrowAfter() const {
    return false;
}

/* 801415D4-801415DC 0008+00 s=1 e=0 z=0  None .text      checkWolfTagLockJump__9daPy_py_cCFv */
bool daPy_py_c::checkWolfTagLockJump() const {
    return false;
}

/* 801415DC-801415E4 0008+00 s=1 e=0 z=0  None .text      checkWolfTagLockJumpLand__9daPy_py_cCFv */
bool daPy_py_c::checkWolfTagLockJumpLand() const {
    return false;
}

/* 801415E4-801415EC 0008+00 s=1 e=0 z=0  None .text      checkWolfRope__9daPy_py_cFv */
bool daPy_py_c::checkWolfRope() {
    return false;
}

/* 801415EC-801415F4 0008+00 s=1 e=0 z=0  None .text      checkWolfRopeHang__9daPy_py_cCFv */
bool daPy_py_c::checkWolfRopeHang() const {
    return false;
}

/* 801415F4-801415FC 0008+00 s=1 e=0 z=0  None .text      checkRollJump__9daPy_py_cCFv */
bool daPy_py_c::checkRollJump() const {
    return false;
}

/* 801415FC-80141604 0008+00 s=1 e=0 z=0  None .text      checkGoronRideWait__9daPy_py_cCFv */
bool daPy_py_c::checkGoronRideWait() const {
    return false;
}

/* 80141604-8014160C 0008+00 s=1 e=0 z=0  None .text      checkWolfChain__9daPy_py_cCFv */
bool daPy_py_c::checkWolfChain() const {
    return false;
}

/* 8014160C-80141614 0008+00 s=1 e=0 z=0  None .text      checkWolfWait__9daPy_py_cCFv */
bool daPy_py_c::checkWolfWait() const {
    return false;
}

/* 80141614-8014161C 0008+00 s=1 e=0 z=0  None .text      checkWolfJumpAttack__9daPy_py_cCFv */
bool daPy_py_c::checkWolfJumpAttack() const {
    return false;
}

/* 8014161C-80141624 0008+00 s=1 e=0 z=0  None .text      checkWolfRSit__9daPy_py_cCFv */
bool daPy_py_c::checkWolfRSit() const {
    return false;
}

/* 80141624-8014162C 0008+00 s=2 e=0 z=0  None .text      checkBubbleFly__9daPy_py_cCFv */
bool daPy_py_c::checkBubbleFly() const {
    return false;
}

/* 8014162C-80141634 0008+00 s=1 e=0 z=0  None .text      checkBottleDrinkEnd__9daPy_py_cCFv */
bool daPy_py_c::checkBottleDrinkEnd() const {
    return false;
}

/* 80141634-8014163C 0008+00 s=1 e=0 z=0  None .text      checkWolfDig__9daPy_py_cCFv */
bool daPy_py_c::checkWolfDig() const {
    return false;
}

/* 8014163C-80141644 0008+00 s=1 e=0 z=0  None .text      checkCutCharge__9daPy_py_cCFv */
bool daPy_py_c::checkCutCharge() const {
    return false;
}

/* 80141644-8014164C 0008+00 s=1 e=0 z=0  None .text      checkCutTurnCharge__9daPy_py_cCFv */
bool daPy_py_c::checkCutTurnCharge() const {
    return false;
}

/* 8014164C-80141654 0008+00 s=1 e=0 z=0  None .text      checkCutLargeJumpCharge__9daPy_py_cCFv */
bool daPy_py_c::checkCutLargeJumpCharge() const {
    return false;
}

/* 80141654-8014165C 0008+00 s=2 e=0 z=0  None .text      getBokoFlamePos__9daPy_py_cFP4cXyz */
bool daPy_py_c::getBokoFlamePos(cXyz* param_0) {
    return false;
}

/* 8014165C-80141664 0008+00 s=1 e=0 z=0  None .text      checkComboCutTurn__9daPy_py_cCFv */
bool daPy_py_c::checkComboCutTurn() const {
    return false;
}

/* 80141664-8014166C 0008+00 s=1 e=0 z=0  None .text      checkClimbMove__9daPy_py_cCFv */
bool daPy_py_c::checkClimbMove() const {
    return false;
}

/* 8014166C-80141674 0008+00 s=1 e=0 z=0  None .text      checkGrassWhistle__9daPy_py_cCFv */
bool daPy_py_c::checkGrassWhistle() const {
    return false;
}

/* 80141674-8014167C 0008+00 s=1 e=0 z=0  None .text      checkBoarRun__9daPy_py_cCFv */
bool daPy_py_c::checkBoarRun() const {
    return false;
}

/* 8014167C-80141684 0008+00 s=2 e=0 z=0  None .text      checkFmChainPut__9daPy_py_cCFv */
bool daPy_py_c::checkFmChainPut() const {
    return false;
}

/* 80141684-8014168C 0008+00 s=2 e=0 z=0  None .text      checkHorseElecDamage__9daPy_py_cCFv */
bool daPy_py_c::checkHorseElecDamage() const {
    return false;
}

/* 8014168C-80141694 0008+00 s=1 e=0 z=0  None .text      getBaseAnimeFrameRate__9daPy_py_cCFv */
//	8014168C: 80452CB8 (lit_6040)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getBaseAnimeFrameRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBaseAnimeFrameRate__9daPy_py_cCFv.s"
}
#pragma pop

/* 80141694-8014169C 0008+00 s=1 e=0 z=0  None .text      getBaseAnimeFrame__9daPy_py_cCFv */
//	80141694: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getBaseAnimeFrame() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBaseAnimeFrame__9daPy_py_cCFv.s"
}
#pragma pop

/* 8014169C-801416A0 0004+00 s=1 e=0 z=0  None .text      setAnimeFrame__9daPy_py_cFf */
void daPy_py_c::setAnimeFrame(f32 param_0) {
    /* empty function */
}

/* 801416A0-801416A8 0008+00 s=1 e=0 z=0  None .text      checkWolfLock__9daPy_py_cCFP10fopAc_ac_c
 */
bool daPy_py_c::checkWolfLock(fopAc_ac_c* param_0) const {
    return false;
}

/* 801416A8-801416B0 0008+00 s=1 e=0 z=0  None .text      cancelWolfLock__9daPy_py_cFP10fopAc_ac_c
 */
bool daPy_py_c::cancelWolfLock(fopAc_ac_c* param_0) {
    return false;
}

/* 801416B0-801416B8 0008+00 s=1 e=0 z=0  None .text      getItemID__9daPy_py_cCFv */
s32 daPy_py_c::getItemID() const {
    return -1;
}

/* 801416B8-801416C0 0008+00 s=1 e=0 z=0  None .text exchangeGrabActor__9daPy_py_cFP10fopAc_ac_c
 */
bool daPy_py_c::exchangeGrabActor(fopAc_ac_c* param_0) {
    return false;
}

/* 801416C0-801416C8 0008+00 s=1 e=0 z=0  None .text      setForceGrab__9daPy_py_cFP10fopAc_ac_cii
 */
bool daPy_py_c::setForceGrab(fopAc_ac_c* param_0, int param_1, int param_2) {
    return false;
}

/* 801416C8-801416CC 0004+00 s=1 e=0 z=0  None .text      setForcePutPos__9daPy_py_cFRC4cXyz */
void daPy_py_c::setForcePutPos(cXyz const& param_0) {
    /* empty function */
}

/* 801416CC-801416D4 0008+00 s=1 e=0 z=0  None .text      checkPlayerNoDraw__9daPy_py_cFv */
bool daPy_py_c::checkPlayerNoDraw() {
    return false;
}

/* 801416D4-801416DC 0008+00 s=2 e=0 z=0  None .text      checkRopeTag__9daPy_py_cFv */
bool daPy_py_c::checkRopeTag() {
    return false;
}

/* 801416DC-801416E0 0004+00 s=1 e=0 z=0  None .text      voiceStart__9daPy_py_cFUl */
void daPy_py_c::voiceStart(u32 param_0) {
    /* empty function */
}

/* 801416E0-801416E4 0004+00 s=1 e=0 z=0  None .text      seStartOnlyReverb__9daPy_py_cFUl */
void daPy_py_c::seStartOnlyReverb(u32 param_0) {
    /* empty function */
}

/* 801416E4-801416E8 0004+00 s=1 e=0 z=0  None .text      seStartOnlyReverbLevel__9daPy_py_cFUl */
void daPy_py_c::seStartOnlyReverbLevel(u32 param_0) {
    /* empty function */
}

/* 801416E8-801416EC 0004+00 s=1 e=0 z=0  None .text      setOutPower__9daPy_py_cFfsi */
void daPy_py_c::setOutPower(f32 param_0, s16 param_1, int param_2) {
    /* empty function */
}

/* 801416EC-801416F0 0004+00 s=1 e=0 z=0  None .text
 * setGrabCollisionOffset__9daPy_py_cFffP13cBgS_PolyInfo        */
void daPy_py_c::setGrabCollisionOffset(f32 param_0, f32 param_1, cBgS_PolyInfo* param_2) {
    /* empty function */
}

/* 801416F0-801416F4 0004+00 s=2 e=0 z=0  None .text      onMagneGrab__9daPy_py_cFff */
void daPy_py_c::onMagneGrab(f32 param_0, f32 param_1) {
    /* empty function */
}

/* 801416F4-801416FC 0008+00 s=1 e=0 z=0  None .text      getModelJointMtx__9daPy_py_cFUs */
bool daPy_py_c::getModelJointMtx(u16 param_0) {
    return false;
}

/* 801416FC-80141704 0008+00 s=1 e=0 z=0  None .text      getHeadMtx__9daPy_py_cFv */
bool daPy_py_c::getHeadMtx() {
    return false;
}

/* 80141704-8014170C 0008+00 s=1 e=0 z=0  None .text setHookshotCarryOffset__9daPy_py_cFUiPC4cXyz
 */
bool daPy_py_c::setHookshotCarryOffset(unsigned int param_0, cXyz const* param_1) {
    return false;
}

/* 8014170C-80141714 0008+00 s=1 e=0 z=0  None .text      checkIronBallReturn__9daPy_py_cCFv */
bool daPy_py_c::checkIronBallReturn() const {
    return false;
}

/* 80141714-8014171C 0008+00 s=1 e=0 z=0  None .text      checkIronBallGroundStop__9daPy_py_cCFv */
bool daPy_py_c::checkIronBallGroundStop() const {
    return false;
}

/* 8014171C-80141724 0008+00 s=1 e=0 z=0  None .text
 * checkSingleBoarBattleSecondBowReady__9daPy_py_cCFv           */
bool daPy_py_c::checkSingleBoarBattleSecondBowReady() const {
    return false;
}

/* 80141724-8014172C 0008+00 s=2 e=0 z=0  None .text      checkPointSubWindowMode__9daPy_py_cCFv */
bool daPy_py_c::checkPointSubWindowMode() const {
    return false;
}

/* 8014172C-80141730 0004+00 s=1 e=0 z=0  None .text      setClothesChange__9daPy_py_cFi */
void daPy_py_c::setClothesChange(int param_0) {
    /* empty function */
}

/* 80141730-80141734 0004+00 s=1 e=0 z=0  None .text      setPlayerPosAndAngle__9daPy_py_cFPA4_f */
void daPy_py_c::setPlayerPosAndAngle(f32 (*param_0)[4]) {
    /* empty function */
}

/* 80141734-80141738 0004+00 s=1 e=0 z=0  None .text
 * setPlayerPosAndAngle__9daPy_py_cFPC4cXyzPC5csXyz             */
void daPy_py_c::setPlayerPosAndAngle(cXyz const* param_0, csXyz const* param_1) {
    /* empty function */
}

/* 80141738-8014173C 0004+00 s=1 e=0 z=0  None .text      setPlayerPosAndAngle__9daPy_py_cFPC4cXyzsi
 */
void daPy_py_c::setPlayerPosAndAngle(cXyz const* param_0, s16 param_1, int param_2) {
    /* empty function */
}

/* 8014173C-80141744 0008+00 s=1 e=0 z=0  None .text      setThrowDamage__9daPy_py_cFsffiii */
bool daPy_py_c::setThrowDamage(s16 param_0, f32 param_1, f32 param_2, int param_3, int param_4,
                               int param_5) {
    return false;
}

/* 80141744-8014174C 0008+00 s=1 e=0 z=0  None .text      checkSetNpcTks__9daPy_py_cFP4cXyzii */
bool daPy_py_c::checkSetNpcTks(cXyz* param_0, int param_1, int param_2) {
    return false;
}

/* 8014174C-80141754 0008+00 s=1 e=0 z=0  None .text      setRollJump__9daPy_py_cFffs */
bool daPy_py_c::setRollJump(f32 param_0, f32 param_1, s16 param_2) {
    return false;
}

/* 80141754-80141758 0004+00 s=1 e=0 z=0  None .text      playerStartCollisionSE__9daPy_py_cFUlUl */
void daPy_py_c::playerStartCollisionSE(u32 param_0, u32 param_1) {
    /* empty function */
}

/* 80141758-8014175C 0004+00 s=2 e=0 z=0  None .text      changeTextureAnime__9daPy_py_cFUsUsi */
void daPy_py_c::changeTextureAnime(u16 param_0, u16 param_1, int param_2) {
    /* empty function */
}

/* 8014175C-80141760 0004+00 s=2 e=0 z=0  None .text      cancelChangeTextureAnime__9daPy_py_cFv */
void daPy_py_c::cancelChangeTextureAnime() {
    /* empty function */
}

/* 80141760-80141764 0004+00 s=1 e=0 z=0  None .text      cancelDungeonWarpReadyNeck__9daPy_py_cFv
 */
void daPy_py_c::cancelDungeonWarpReadyNeck() {
    /* empty function */
}

/* 80141764-80141768 0004+00 s=1 e=0 z=0  None .text
 * onSceneChangeArea__9daPy_py_cFUcUcP10fopAc_ac_c              */
void daPy_py_c::onSceneChangeArea(u8 param_0, u8 param_1, fopAc_ac_c* param_2) {
    /* empty function */
}

/* 80141768-8014176C 0004+00 s=1 e=0 z=0  None .text
 * onSceneChangeAreaJump__9daPy_py_cFUcUcP10fopAc_ac_c          */
void daPy_py_c::onSceneChangeAreaJump(u8 param_0, u8 param_1, fopAc_ac_c* param_2) {
    /* empty function */
}

/* 8014176C-80141770 0004+00 s=1 e=0 z=0  None .text      onSceneChangeDead__9daPy_py_cFUci */
void daPy_py_c::onSceneChangeDead(u8 param_0, int param_1) {
    /* empty function */
}

/* 80141770-80141778 0008+00 s=1 e=0 z=0  None .text      getSpinnerActor__9daPy_py_cFv */
bool daPy_py_c::getSpinnerActor() {
    return false;
}

/* 80141778-80141780 0008+00 s=1 e=0 z=0  None .text      checkHorseRideNotReady__9daPy_py_cCFv */
bool daPy_py_c::checkHorseRideNotReady() const {
    return false;
}

/* 80141780-80141788 0008+00 s=1 e=0 z=0  None .text      checkArrowChargeEnd__9daPy_py_cCFv */
bool daPy_py_c::checkArrowChargeEnd() const {
    return false;
}

/* 80141788-80141790 0008+00 s=1 e=0 z=0  None .text      getSearchBallScale__9daPy_py_cCFv */
//	80141788: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getSearchBallScale() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSearchBallScale__9daPy_py_cCFv.s"
}
#pragma pop

/* 80141790-80141798 0008+00 s=1 e=0 z=0  None .text      checkFastShotTime__9daPy_py_cFv */
bool daPy_py_c::checkFastShotTime() {
    return false;
}

/* 80141798-801417A0 0008+00 s=1 e=0 z=0  None .text      checkNoEquipItem__9daPy_py_cCFv */
bool daPy_py_c::checkNoEquipItem() const {
    return true;
}

/* 801417A0-801417A8 0008+00 s=2 e=0 z=0  None .text      checkFireMaterial__9daPy_py_cCFv */
bool daPy_py_c::checkFireMaterial() const {
    return false;
}

/* 801417A8-801417B0 0008+00 s=1 e=0 z=0  None .text      checkKandelaarSwing__9daPy_py_cCFi */
bool daPy_py_c::checkKandelaarSwing(int param_0) const {
    return false;
}

/* 801417B0-801417B8 0008+00 s=1 e=0 z=0  None .text      getBoardCutTurnOffsetAngleY__9daPy_py_cCFv
 */
bool daPy_py_c::getBoardCutTurnOffsetAngleY() const {
    return false;
}

/* 801417B8-801417C0 0008+00 s=2 e=0 z=0  None .text      getMagneHitPos__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getMagneHitPos() {
    nofralloc
#include "asm/d/a/d_a_alink/getMagneHitPos__9daPy_py_cFv.s"
}
#pragma pop

/* 801417C0-801417C8 0008+00 s=1 e=0 z=0  None .text      getMagneBootsTopVec__9daPy_py_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getMagneBootsTopVec() {
    nofralloc
#include "asm/d/a/d_a_alink/getMagneBootsTopVec__9daPy_py_cFv.s"
}
#pragma pop

/* 801417C8-801417D0 0008+00 s=1 e=0 z=0  None .text      checkUseKandelaar__9daPy_py_cFi */
bool daPy_py_c::checkUseKandelaar(int param_0) {
    return false;
}

/* 801417D0-801417D4 0004+00 s=1 e=0 z=0  None .text      setDkCaught__9daPy_py_cFP10fopAc_ac_c */
void daPy_py_c::setDkCaught(fopAc_ac_c* param_0) {
    /* empty function */
}

/* 801417D4-801417D8 0004+00 s=1 e=0 z=0  None .text      onPressedDamage__9daPy_py_cFRC4cXyzs */
void daPy_py_c::onPressedDamage(cXyz const& param_0, s16 param_1) {
    /* empty function */
}

/* 801417D8-801417E0 0008+00 s=1 e=0 z=0  None .text checkPriActorOwn__9daPy_py_cCFPC10fopAc_ac_c
 */
bool daPy_py_c::checkPriActorOwn(fopAc_ac_c const* param_0) const {
    return false;
}

/* 801417E0-801417E8 0008+00 s=1 e=0 z=0  None .text
 * onWolfEnemyBiteAll__9daPy_py_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2 */
bool daPy_py_c::onWolfEnemyBiteAll(fopAc_ac_c* param_0, daPy_py_c::daPy_FLG2 param_1) {
    return false;
}

/* 801417E8-801417F0 0008+00 s=1 e=0 z=0  None .text
 * checkWolfEnemyBiteAllOwn__9daPy_py_cCFPC10fopAc_ac_c         */
bool daPy_py_c::checkWolfEnemyBiteAllOwn(fopAc_ac_c const* param_0) const {
    return false;
}

/* 801417F0-801417F4 0004+00 s=1 e=0 z=0  None .text      setWolfEnemyHangBiteAngle__9daPy_py_cFs */
void daPy_py_c::setWolfEnemyHangBiteAngle(s16 param_0) {
    /* empty function */
}

/* 801417F4-801417F8 0004+00 s=1 e=0 z=0  None .text      setKandelaarMtx__9daPy_py_cFPA4_fii */
void daPy_py_c::setKandelaarMtx(f32 (*param_0)[4], int param_1, int param_2) {
    /* empty function */
}

/* 801417F8-80141800 0008+00 s=1 e=0 z=0  None .text getStickAngleFromPlayerShape__9daPy_py_cCFPs
 */
bool daPy_py_c::getStickAngleFromPlayerShape(s16* param_0) const {
    return false;
}

/* 80141800-80141808 0008+00 s=1 e=0 z=0  None .text      checkSpinnerPathMove__9daPy_py_cFv */
bool daPy_py_c::checkSpinnerPathMove() {
    return false;
}

/* 80141808-80141810 0008+00 s=1 e=0 z=0  None .text      checkSpinnerTriggerAttack__9daPy_py_cFv */
bool daPy_py_c::checkSpinnerTriggerAttack() {
    return false;
}

/* 80141810-80141814 0004+00 s=1 e=0 z=0  None .text      onSpinnerPathForceRemove__9daPy_py_cFv */
void daPy_py_c::onSpinnerPathForceRemove() {
    /* empty function */
}

/* 80141814-8014181C 0008+00 s=1 e=0 z=0  None .text      getIronBallBgHit__9daPy_py_cCFv */
bool daPy_py_c::getIronBallBgHit() const {
    return false;
}

/* 8014181C-80141824 0008+00 s=1 e=0 z=0  None .text      getIronBallCenterPos__9daPy_py_cFv */
bool daPy_py_c::getIronBallCenterPos() {
    return false;
}

/* 80141824-8014182C 0008+00 s=1 e=0 z=0  None .text      checkCanoeFishingGetLeft__9daPy_py_cCFv */
bool daPy_py_c::checkCanoeFishingGetLeft() const {
    return false;
}

/* 8014182C-80141834 0008+00 s=1 e=0 z=0  None .text      checkCanoeFishingGetRight__9daPy_py_cCFv
 */
bool daPy_py_c::checkCanoeFishingGetRight() const {
    return false;
}

/* 80141834-8014183C 0008+00 s=1 e=0 z=0  None .text      checkBeeChildDrink__9daPy_py_cCFv */
bool daPy_py_c::checkBeeChildDrink() const {
    return false;
}

/* 8014183C-80141840 0004+00 s=1 e=0 z=0  None .text      skipPortalObjWarp__9daPy_py_cFv */
void daPy_py_c::skipPortalObjWarp() {
    /* empty function */
}

/* 80141840-80141848 0008+00 s=1 e=0 z=0  None .text      checkTreasureRupeeReturn__9daPy_py_cCFi */
bool daPy_py_c::checkTreasureRupeeReturn(int param_0) const {
    return false;
}

/* 80141848-8014184C 0004+00 s=1 e=0 z=0  None .text      setSumouReady__9daPy_py_cFP10fopAc_ac_c */
void daPy_py_c::setSumouReady(fopAc_ac_c* param_0) {
    /* empty function */
}

/* 8014184C-80141854 0008+00 s=1 e=0 z=0  None .text      checkAcceptDungeonWarpAlink__9daPy_py_cFi
 */
bool daPy_py_c::checkAcceptDungeonWarpAlink(int param_0) {
    return false;
}

/* 80141854-8014185C 0008+00 s=1 e=0 z=0  None .text      getSumouCounter__9daPy_py_cCFv */
bool daPy_py_c::getSumouCounter() const {
    return false;
}

/* 8014185C-80141864 0008+00 s=1 e=0 z=0  None .text      checkSumouWithstand__9daPy_py_cCFv */
bool daPy_py_c::checkSumouWithstand() const {
    return false;
}

/* 80141864-80141868 0004+00 s=1 e=0 z=0  None .text      cancelGoronThrowEvent__9daPy_py_cFv */
void daPy_py_c::cancelGoronThrowEvent() {
    /* empty function */
}

/* 80141868-8014186C 0004+00 s=1 e=0 z=0  None .text      setSumouGraspCancelCount__9daPy_py_cFi */
void daPy_py_c::setSumouGraspCancelCount(int param_0) {
    /* empty function */
}

/* 8014186C-80141870 0004+00 s=1 e=0 z=0  None .text      setSumouPushBackDirection__9daPy_py_cFs */
void daPy_py_c::setSumouPushBackDirection(s16 param_0) {
    /* empty function */
}

/* 80141870-80141874 0004+00 s=1 e=0 z=0  None .text      setSumouLoseHeadUp__9daPy_py_cFv */
void daPy_py_c::setSumouLoseHeadUp() {
    /* empty function */
}

/* 80141874-8014187C 0008+00 s=1 e=0 z=0  None .text      getGiantPuzzleAimAngle__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getGiantPuzzleAimAngle() const {
    nofralloc
#include "asm/d/a/d_a_alink/getGiantPuzzleAimAngle__9daPy_py_cCFv.s"
}
#pragma pop

/* 8014187C-80141880 0004+00 s=1 e=0 z=0  None .text      setGoronSideMove__9daPy_py_cFP10fopAc_ac_c
 */
void daPy_py_c::setGoronSideMove(fopAc_ac_c* param_0) {
    /* empty function */
}

/* 80141880-80141884 0004+00 s=1 e=0 z=0  None .text      setCargoCarry__9daPy_py_cFP10fopAc_ac_c */
void daPy_py_c::setCargoCarry(fopAc_ac_c* param_0) {
    /* empty function */
}

/* 80141884-8014188C 0008+00 s=2 e=0 z=0  None .text      getDpdFarFlg__9daPy_py_cCFv */
bool daPy_py_c::getDpdFarFlg() const {
    return false;
}

/* 8014188C-80141894 0008+00 s=1 e=0 z=0  None .text      getHookshotTopPos__9daPy_py_cFv */
bool daPy_py_c::getHookshotTopPos() {
    return false;
}

/* 80141894-8014189C 0008+00 s=1 e=0 z=0  None .text      checkHookshotReturnMode__9daPy_py_cCFv */
bool daPy_py_c::checkHookshotReturnMode() const {
    return false;
}

/* 8014189C-801418A4 0008+00 s=1 e=0 z=0  None .text checkHookshotShootReturnMode__9daPy_py_cCFv
 */
bool daPy_py_c::checkHookshotShootReturnMode() const {
    return false;
}

/* 801418A4-801418AC 0008+00 s=1 e=0 z=0  None .text      checkOctaIealHang__9daPy_py_cCFv */
bool daPy_py_c::checkOctaIealHang() const {
    return false;
}

/* 801418AC-801418B0 0004+00 s=1 e=0 z=0  None .text      cancelOctaIealHang__9daPy_py_cFv */
void daPy_py_c::cancelOctaIealHang() {
    /* empty function */
}

/* 801418B0-801418B4 0004+00 s=1 e=0 z=0  None .text      cancelDragonHangBackJump__9daPy_py_cFv */
void daPy_py_c::cancelDragonHangBackJump() {
    /* empty function */
}

/* 801418B4-801418B8 0004+00 s=1 e=0 z=0  None .text      setOctaIealWildHang__9daPy_py_cFv */
void daPy_py_c::setOctaIealWildHang() {
    /* empty function */
}

/* 801418B8-801418C0 0008+00 s=1 e=0 z=0  None .text      checkDragonHangRide__9daPy_py_cCFv */
bool daPy_py_c::checkDragonHangRide() const {
    return false;
}

/* 801418C0-801418C4 0004+00 s=1 e=0 z=0  None .text changeDragonActor__9daPy_py_cFP10fopAc_ac_c
 */
void daPy_py_c::changeDragonActor(fopAc_ac_c* param_0) {
    /* empty function */
}

/* 801418C4-801418CC 0008+00 s=1 e=0 z=0  None .text      getClothesChangeWaitTimer__9daPy_py_cCFv
 */
bool daPy_py_c::getClothesChangeWaitTimer() const {
    return false;
}

/* 801418CC-801418D4 0008+00 s=1 e=0 z=0  None .text      getShieldChangeWaitTimer__9daPy_py_cCFv */
bool daPy_py_c::getShieldChangeWaitTimer() const {
    return false;
}

/* 801418D4-801418DC 0008+00 s=1 e=0 z=0  None .text      getSwordChangeWaitTimer__9daPy_py_cCFv */
bool daPy_py_c::getSwordChangeWaitTimer() const {
    return false;
}

/* 801418DC-801418E4 0008+00 s=1 e=0 z=0  None .text      checkMetamorphose__9daPy_py_cCFv */
bool daPy_py_c::checkMetamorphose() const {
    return false;
}

/* 801418E4-801418EC 0008+00 s=1 e=0 z=0  None .text      checkWolfDownAttackPullOut__9daPy_py_cCFv
 */
bool daPy_py_c::checkWolfDownAttackPullOut() const {
    return false;
}

/* 801418EC-801418F4 0008+00 s=1 e=0 z=0  None .text      checkBootsOrArmorHeavy__9daPy_py_cCFv */
bool daPy_py_c::checkBootsOrArmorHeavy() const {
    return false;
}

/* 801418F4-801418FC 0008+00 s=1 e=0 z=0  None .text      getBottleOpenAppearItem__9daPy_py_cCFv */
s32 daPy_py_c::getBottleOpenAppearItem() const {
    return -1;
}

/* 801418FC-80141904 0008+00 s=1 e=0 z=0  None .text      checkItemSwordEquip__9daPy_py_cCFv */
bool daPy_py_c::checkItemSwordEquip() const {
    return false;
}

/* 80141904-8014190C 0008+00 s=1 e=0 z=0  None .text      getSinkShapeOffset__9daPy_py_cCFv */
//	80141904: 80452CC0 (lit_6108)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getSinkShapeOffset() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSinkShapeOffset__9daPy_py_cCFv.s"
}
#pragma pop

/* 8014190C-80141914 0008+00 s=1 e=0 z=0  None .text      checkSinkDead__9daPy_py_cCFv */
bool daPy_py_c::checkSinkDead() const {
    return false;
}

/* 80141914-8014191C 0008+00 s=1 e=0 z=0  None .text      checkHorseStart__9daPy_py_cFv */
bool daPy_py_c::checkHorseStart() {
    return false;
}

/* 8014191C-80141924 0008+00 s=1 e=0 z=0  None .text      getWolfHowlMgrP__9daPy_py_cFv */
bool daPy_py_c::getWolfHowlMgrP() {
    return false;
}

/* 80141924-8014192C 0008+00 s=1 e=0 z=0  None .text      checkWolfHowlSuccessAnime__9daPy_py_cCFv
 */
bool daPy_py_c::checkWolfHowlSuccessAnime() const {
    return false;
}

/* 8014192C-80141934 0008+00 s=1 e=0 z=0  None .text      checkCopyRodTopUse__9daPy_py_cFv */
bool daPy_py_c::checkCopyRodTopUse() {
    return false;
}

/* 80141934-8014193C 0008+00 s=1 e=0 z=0  None .text      checkCopyRodEquip__9daPy_py_cCFv */
bool daPy_py_c::checkCopyRodEquip() const {
    return false;
}

/* 8014193C-80141944 0008+00 s=1 e=0 z=0  None .text      checkCutJumpMode__9daPy_py_cCFv */
bool daPy_py_c::checkCutJumpMode() const {
    return false;
}

/* 80141944-8014194C 0008+00 s=1 e=0 z=0  None .text      getZeldaActor__9daHorse_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daHorse_c::getZeldaActor() {
    nofralloc
#include "asm/d/a/d_a_alink/getZeldaActor__9daHorse_cFv.s"
}
#pragma pop

/* 8014194C-8014195C 0010+00 s=1 e=0 z=0  None .text      dComIfGp_getDoStatus__Fv */
//	8014194C: 804061C0 (g_dComIfG_gameInfo)
//	80141950: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_getDoStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getDoStatus__Fv.s"
}
#pragma pop

/* 8014195C-8014196C 0010+00 s=1 e=5 z=0  None .text      __ct__4cXyzFfff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz::cXyz(f32 param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__4cXyzFfff.s"
}
#pragma pop

/* 8014196C-80141988 001C+00 s=1 e=0 z=0  None .text      dMeter2Info_offUseButton__Fi */
//	8014196C: 80430188 (g_meter2_info)
//	80141970: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dMeter2Info_offUseButton(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dMeter2Info_offUseButton__Fi.s"
}
#pragma pop

/* 80141988-80141990 0008+00 s=1 e=0 z=0  None .text      setLinkState__14Z2CreatureLinkFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2CreatureLink::setLinkState(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setLinkState__14Z2CreatureLinkFUc.s"
}
#pragma pop

/* 80141990-801419A0 0010+00 s=1 e=0 z=0  None .text      dComIfGs_getRupee__Fv */
//	80141990: 804061C0 (g_dComIfG_gameInfo)
//	80141994: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGs_getRupee() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGs_getRupee__Fv.s"
}
#pragma pop

/* 801419A0-801419B8 0018+00 s=1 e=0 z=0  None .text      dComIfGp_setItemRupeeCount__Fl */
//	801419A0: 804061C0 (g_dComIfG_gameInfo)
//	801419A4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dComIfGp_setItemRupeeCount(s32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_setItemRupeeCount__Fl.s"
}
#pragma pop

/* 801419B8-801419F4 003C+00 s=1 e=0 z=0  None .text      dMeter2Info_setFloatingMessage__FUssb */
//	801419D0: 80430188 (g_meter2_info)
//	801419D4: 80430188 (g_meter2_info)
//	801419E0: 8021C0E0 (setFloatingMessage__13dMeter2Info_cFUssb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dMeter2Info_setFloatingMessage(u16 param_0, s16 param_1, bool param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/dMeter2Info_setFloatingMessage__FUssb.s"
}
#pragma pop

/* 801419F4-80141A04 0010+00 s=1 e=0 z=0  None .text      onForcePanic__9daMidna_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daMidna_c::onForcePanic() {
    nofralloc
#include "asm/d/a/d_a_alink/onForcePanic__9daMidna_cFv.s"
}
#pragma pop

/* 80141A04-80141A10 000C+00 s=1 e=0 z=0  None .text      checkForceNormalColor__9daMidna_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daMidna_c::checkForceNormalColor() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkForceNormalColor__9daMidna_cCFv.s"
}
#pragma pop

/* 80141A10-80141A1C 000C+00 s=1 e=0 z=0  None .text      checkForceTiredColor__9daMidna_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daMidna_c::checkForceTiredColor() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkForceTiredColor__9daMidna_cCFv.s"
}
#pragma pop

/* 80141A1C-80141A84 0068+00 s=1 e=0 z=0  None .text      checkMidnaTired__9daMidna_cFv */
//	80141A30: 804061C0 (g_dComIfG_gameInfo)
//	80141A34: 804061C0 (g_dComIfG_gameInfo)
//	80141A40: 80032BEC (isTransformLV__21dSv_player_status_b_cCFi)
//	80141A4C: 804061C0 (g_dComIfG_gameInfo)
//	80141A50: 804061C0 (g_dComIfG_gameInfo)
//	80141A5C: 800349BC (isEventBit__11dSv_event_cCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daMidna_c::checkMidnaTired() {
    nofralloc
#include "asm/d/a/d_a_alink/checkMidnaTired__9daMidna_cFv.s"
}
#pragma pop

/* 80141A84-80141A94 0010+00 s=1 e=0 z=0  None .text      onNoServiceWait__9daMidna_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daMidna_c::onNoServiceWait() {
    nofralloc
#include "asm/d/a/d_a_alink/onNoServiceWait__9daMidna_cFv.s"
}
#pragma pop

/* 80141A94-80141ACC 0038+00 s=1 e=0 z=0  None .text      setControllActorData__8daCrod_cFv */
//	80141AAC: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	80141AB4: 8015EC48 (setActor__16daPy_actorKeep_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daCrod_c::setControllActorData() {
    nofralloc
#include "asm/d/a/d_a_alink/setControllActorData__8daCrod_cFv.s"
}
#pragma pop

/* 80141ACC-80141AE8 001C+00 s=1 e=0 z=0  None .text
 * PrmAbstract<Q312daObjMovebox5Act_c5Prm_e>__5daObjFPC10fopAc_ac_cQ312daObjMovebox5Act_c5Prm_eQ312daObjMovebox5Act_c5Prm_e
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObj::PrmAbstract__template0(fopAc_ac_c const* param_0,
                                       daObjMovebox::Act_c::Prm_e param_1,
                                       daObjMovebox::Act_c::Prm_e param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/func_80141ACC.s"
}
#pragma pop

/* 80141AE8-80141B04 001C+00 s=1 e=4 z=0  None .text      cLib_calcTimer<Uc>__FPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_calcTimer__template0(u8* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/func_80141AE8.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453344-80453348 0004+00 s=1 e=0 z=0  None .sdata2    @77808 */
SECTION_SDATA2 static f32 lit_77808 = 1.2427899837493896f;

/* 80453348-8045334C 0004+00 s=1 e=0 z=0  None .sdata2    @77809 */
SECTION_SDATA2 static f32 lit_77809 = 102.00054168701172f;

/* 8045334C-80453350 0004+00 s=1 e=0 z=0  None .sdata2    @77810 */
SECTION_SDATA2 static f32 lit_77810 = -4.248938083648682f;

/* 80453350-80453354 0004+00 s=1 e=0 z=0  None .sdata2    @77811 */
SECTION_SDATA2 static f32 lit_77811 = 89.0f;

/* 80453354-80453358 0004+00 s=1 e=0 z=0  None .sdata2    @77812 */
SECTION_SDATA2 static f32 lit_77812 = -5.267045021057129f;

/* 80453358-8045335C 0004+00 s=1 e=0 z=0  None .sdata2    @77813 */
SECTION_SDATA2 static f32 lit_77813 = 4.313951015472412f;

/* 8045335C-80453360 0004+00 s=1 e=0 z=0  None .sdata2    @77814 */
SECTION_SDATA2 static f32 lit_77814 = 93.9443588256836f;

/* 80453360-80453364 0004+00 s=1 e=0 z=0  None .sdata2    @77815 */
SECTION_SDATA2 static f32 lit_77815 = -5.207283020019531f;

/* 80453364-80453368 0004+00 s=1 e=0 z=0  None .sdata2    @77816 */
SECTION_SDATA2 static f32 lit_77816 = -4.30098819732666f;

/* 80453368-8045336C 0004+00 s=1 e=0 z=0  None .sdata2    @77817 */
SECTION_SDATA2 static f32 lit_77817 = 93.95594787597656f;

/* 8045336C-80453370 0004+00 s=1 e=0 z=0  None .sdata2    @77818 */
SECTION_SDATA2 static f32 lit_77818 = -5.218503952026367f;

/* 80453370-80453374 0004+00 s=1 e=0 z=0  None .sdata2    @77819 */
SECTION_SDATA2 static f32 lit_77819 = 225.6999969482422f;

/* 80453374-80453378 0004+00 s=1 e=0 z=0  None .sdata2    @77820 */
SECTION_SDATA2 static f32 lit_77820 = 1.809999942779541f;

/* 80453378-8045337C 0004+00 s=1 e=0 z=0  None .sdata2    @77821 */
SECTION_SDATA2 static f32 lit_77821 = 186.1699981689453f;

/* 8045337C-80453380 0004+00 s=1 e=0 z=0  None .sdata2    @77822 */
SECTION_SDATA2 static f32 lit_77822 = -20.290000915527344f;

/* 80453380-80453384 0004+00 s=1 e=0 z=0  None .sdata2    @77823 */
SECTION_SDATA2 static f32 lit_77823 = -68.208984375f;

/* 80453384-80453388 0004+00 s=1 e=0 z=0  None .sdata2    @77824 */
SECTION_SDATA2 static f32 lit_77824 = 41.60992431640625f;

/* 80453388-8045338C 0004+00 s=1 e=0 z=0  None .sdata2    @77825 */
SECTION_SDATA2 static f32 lit_77825 = 0.8837890028953552f;

/* 8045338C-80453390 0004+00 s=1 e=0 z=0  None .sdata2    @77826 */
SECTION_SDATA2 static f32 lit_77826 = -72.0f;

/* 80453390-80453394 0004+00 s=1 e=0 z=0  None .sdata2    @77827 */
SECTION_SDATA2 static f32 lit_77827 = 88.63934326171875f;

/* 80453394-80453398 0004+00 s=1 e=0 z=0  None .sdata2    @77828 */
SECTION_SDATA2 static f32 lit_77828 = -28.49793243408203f;

/* 80453398-8045339C 0004+00 s=1 e=0 z=0  None .sdata2    @77829 */
SECTION_SDATA2 static f32 lit_77829 = 0.11516399681568146f;

/* 8045339C-804533A0 0004+00 s=1 e=0 z=0  None .sdata2    @77830 */
SECTION_SDATA2 static f32 lit_77830 = 68.33629608154297f;

/* 804533A0-804533A8 0004+04 s=1 e=0 z=0  None .sdata2    @77831 */
SECTION_SDATA2 static f32 lit_77831[1 + 1 /* padding */] = {
    -7.667817115783691f,
    /* padding */
    0.0f,
};

/* 80141B04-801446D4 2BD0+00 s=0 e=0 z=0  None .text      __sinit_d_a_alink_cpp */
//	80141B14: 803621DC (_savegpr_29)
//	80141B18: 803AF990 (cNullVec__6Z2Calc)
//	80141B1C: 803AF990 (cNullVec__6Z2Calc)
//	80141B20: 80425508 (lit_4409)
//	80141B24: 80425508 (lit_4409)
//	80141B28: 80453344 (lit_77808)
//	80141B30: 80453348 (lit_77809)
//	80141B3C: 80452D3C (lit_7808)
//	80141B48: 80009184 (__dt__4cXyzFv)
//	80141B4C: 80009184 (__dt__4cXyzFv)
//	80141B54: 80361C24 (__register_global_object)
//	80141B58: 8045334C (lit_77810)
//	80141B60: 80453350 (lit_77811)
//	80141B6C: 80453354 (lit_77812)
//	80141B74: 80009184 (__dt__4cXyzFv)
//	80141B78: 80009184 (__dt__4cXyzFv)
//	80141B80: 80361C24 (__register_global_object)
//	80141B84: 80453058 (lit_37152)
//	80141B8C: 804531CC (lit_52883)
//	80141B98: 804531C4 (lit_52536)
//	80141BA0: 80009184 (__dt__4cXyzFv)
//	80141BA4: 80009184 (__dt__4cXyzFv)
//	80141BAC: 80361C24 (__register_global_object)
//	80141BB0: 80453358 (lit_77813)
//	80141BB8: 8045335C (lit_77814)
//	80141BC4: 80453360 (lit_77815)
//	80141BCC: 80009184 (__dt__4cXyzFv)
//	80141BD0: 80009184 (__dt__4cXyzFv)
//	80141BD8: 80361C24 (__register_global_object)
//	80141BDC: 80453364 (lit_77816)
//	80141BE4: 80453368 (lit_77817)
//	80141BF0: 8045336C (lit_77818)
//	80141BF8: 80009184 (__dt__4cXyzFv)
//	80141BFC: 80009184 (__dt__4cXyzFv)
//	80141C04: 80361C24 (__register_global_object)
//	80141C14: 80453370 (lit_77819)
//	80141C20: 80453374 (lit_77820)
//	80141C30: 80009184 (__dt__4cXyzFv)
//	80141C34: 80009184 (__dt__4cXyzFv)
//	80141C3C: 80361C24 (__register_global_object)
//	80141C4C: 80453378 (lit_77821)
//	80141C58: 8045337C (lit_77822)
//	80141C68: 80009184 (__dt__4cXyzFv)
//	80141C6C: 80009184 (__dt__4cXyzFv)
//	80141C74: 80361C24 (__register_global_object)
//	80141C78: 80453380 (lit_77823)
//	80141C80: 80453384 (lit_77824)
//	80141C8C: 80453388 (lit_77825)
//	80141C94: 80009184 (__dt__4cXyzFv)
//	80141C98: 80009184 (__dt__4cXyzFv)
//	80141CA0: 80361C24 (__register_global_object)
//	80141CA4: 80452CC0 (lit_6108)
//	80141CAC: 80452E64 (lit_14954)
//	80141CBC: 80009184 (__dt__4cXyzFv)
//	80141CC0: 80009184 (__dt__4cXyzFv)
//	80141CC8: 80361C24 (__register_global_object)
//	80141CCC: 80453344 (lit_77808)
//	80141CDC: 80453164 (lit_46462)
//	80141CE8: 8045338C (lit_77826)
//	80141CF8: 80009184 (__dt__4cXyzFv)
//	80141CFC: 80009184 (__dt__4cXyzFv)
//	80141D04: 80361C24 (__register_global_object)
//	80141D08: 80452CC0 (lit_6108)
//	80141D18: 80452E28 (lit_14621)
//	80141D28: 80009184 (__dt__4cXyzFv)
//	80141D2C: 80009184 (__dt__4cXyzFv)
//	80141D34: 80361C24 (__register_global_object)
//	80141D38: 80452CB8 (lit_6040)
//	80141D40: 80453390 (lit_77827)
//	80141D4C: 80453394 (lit_77828)
//	80141D54: 80009184 (__dt__4cXyzFv)
//	80141D58: 80009184 (__dt__4cXyzFv)
//	80141D60: 80361C24 (__register_global_object)
//	80141D64: 80453398 (lit_77829)
//	80141D6C: 8045339C (lit_77830)
//	80141D78: 804533A0 (lit_77831)
//	80141D80: 80009184 (__dt__4cXyzFv)
//	80141D84: 80009184 (__dt__4cXyzFv)
//	80141D8C: 80361C24 (__register_global_object)
//	80143E94: 803A2180 (__ptmf_null)
//	80143E98: 803A2180 (__ptmf_null)
//	801445E0: 80452C98 (lit_5943)
//	801445F4: 80009184 (__dt__4cXyzFv)
//	801445F8: 80009184 (__dt__4cXyzFv)
//	80144600: 80361C24 (__register_global_object)
//	80144698: 80452C98 (lit_5943)
//	801446AC: 80009184 (__dt__4cXyzFv)
//	801446B0: 80009184 (__dt__4cXyzFv)
//	801446B8: 80361C24 (__register_global_object)
//	801446C0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_a_alink_cpp() {
    nofralloc
#include "asm/d/a/d_a_alink/__sinit_d_a_alink_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
SECTION_CTORS void* const _ctors_80141B04 = (void*)__sinit_d_a_alink_cpp;
#pragma pop

/* 801446D4-801446DC 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv */
//	801446D8: 800D0C6C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_801446D4() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446D4.s"
}
#pragma pop

/* 801446DC-801446E4 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv */
//	801446E0: 800D0C6C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_801446DC() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446DC.s"
}
#pragma pop

/* 801446E4-801446EC 0008+00 s=1 e=0 z=0  None .text      @36@__dt__13dBgS_LinkAcchFv */
//	801446E8: 80140F30 (__dt__13dBgS_LinkAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_801446E4() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446E4.s"
}
#pragma pop

/* 801446EC-801446F4 0008+00 s=1 e=0 z=0  None .text      @20@__dt__13dBgS_LinkAcchFv */
//	801446F0: 80140F30 (__dt__13dBgS_LinkAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_801446EC() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446EC.s"
}
#pragma pop

/* 801446F4-801446FC 0008+00 s=1 e=0 z=0  None .text      @20@__dt__15dBgS_LinkGndChkFv */
//	801446F8: 80140EB8 (__dt__15dBgS_LinkGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_801446F4() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446F4.s"
}
#pragma pop

/* 801446FC-80144704 0008+00 s=1 e=0 z=0  None .text      @76@__dt__15dBgS_LinkGndChkFv */
//	80144700: 80140EB8 (__dt__15dBgS_LinkGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_801446FC() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446FC.s"
}
#pragma pop

/* 80144704-8014470C 0008+00 s=1 e=0 z=0  None .text      @60@__dt__15dBgS_LinkGndChkFv */
//	80144708: 80140EB8 (__dt__15dBgS_LinkGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80144704() {
    nofralloc
#include "asm/d/a/d_a_alink/func_80144704.s"
}
#pragma pop

/* 8014470C-80144714 0008+00 s=1 e=0 z=0  None .text      @16@__dt__16dBgS_LinkRoofChkFv */
//	80144710: 80140E40 (__dt__16dBgS_LinkRoofChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8014470C() {
    nofralloc
#include "asm/d/a/d_a_alink/func_8014470C.s"
}
#pragma pop

/* 80144714-8014471C 0008+00 s=1 e=0 z=0  None .text      @52@__dt__16dBgS_LinkRoofChkFv */
//	80144718: 80140E40 (__dt__16dBgS_LinkRoofChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80144714() {
    nofralloc
#include "asm/d/a/d_a_alink/func_80144714.s"
}
#pragma pop

/* 8014471C-80144724 0008+00 s=1 e=0 z=0  None .text      @36@__dt__16dBgS_LinkRoofChkFv */
//	80144720: 80140E40 (__dt__16dBgS_LinkRoofChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8014471C() {
    nofralloc
#include "asm/d/a/d_a_alink/func_8014471C.s"
}
#pragma pop
