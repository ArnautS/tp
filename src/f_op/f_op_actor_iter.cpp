// 
// Generated By: dol2asm
// Translation Unit: f_op/f_op_actor_iter
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "f_op/f_op_actor_iter.h"

// 
// Types:
// 

struct node_list_class {
};

struct node_class {
};

struct method_filter {
};

struct judge_filter {
};

struct create_tag_class {
};

// 
// Forward References:
// 

// False False
//  int (*)(void*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Executor(int (*)(void*, void*), void*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);

// False False
//  int (*)(void*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Executor__FPFPvPv_iPv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();

// 
// External References:
// 

// False False
//  node_list_class* False
// 	 node_list_class False
//  int (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void cLsIt_Method(node_list_class*, int (*)(node_class*, void*), void*);
// False False
//  node_list_class* False
// 	 node_list_class False
//  void* (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void cLsIt_Judge(node_list_class*, void* (*)(node_class*, void*), void*);
// False False
//  create_tag_class* False
// 	 create_tag_class False
//  method_filter* False
// 	 method_filter False
void cTgIt_MethodCall(create_tag_class*, method_filter*);
// False False
//  create_tag_class* False
// 	 create_tag_class False
//  judge_filter* False
// 	 judge_filter False
void cTgIt_JudgeFilter(create_tag_class*, judge_filter*);

// False False
//  node_list_class* False
// 	 node_list_class False
//  int (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void cLsIt_Method__FP15node_list_classPFP10node_classPv_iPv();
// False False
//  node_list_class* False
// 	 node_list_class False
//  void* (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void cLsIt_Judge__FP15node_list_classPFP10node_classPv_PvPv();
// False False
//  create_tag_class* False
// 	 create_tag_class False
//  method_filter* False
// 	 method_filter False
extern "C" void cTgIt_MethodCall__FP16create_tag_classP13method_filter();
// False False
//  create_tag_class* False
// 	 create_tag_class False
//  judge_filter* False
// 	 judge_filter False
extern "C" void cTgIt_JudgeFilter__FP16create_tag_classP12judge_filter();
extern "C" extern u8 g_fopAcTg_Queue[12 + 4 /* padding */];

// 
// Declarations:
// 

/* 800197BC-800197F8 003C+00 s=0 e=5 z=3  None .text      fopAcIt_Executor__FPFPvPv_iPv                                */
//	800197D0: 803A35E0 (g_fopAcTg_Queue)
//	800197D4: 803A35E0 (g_fopAcTg_Queue)
//	800197D8: 80266A7C (cTgIt_MethodCall__FP16create_tag_classP13method_filter)
//	800197DC: 80266A7C (cTgIt_MethodCall__FP16create_tag_classP13method_filter)
//	800197E4: 80266060 (cLsIt_Method__FP15node_list_classPFP10node_classPv_iPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  int (*)(void*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
asm void fopAcIt_Executor(int (*)(void*, void*), void* param_1) {
	nofralloc
#include "asm/f_op/f_op_actor_iter/fopAcIt_Executor__FPFPvPv_iPv.s"
}
#pragma pop


/* 800197F8-80019834 003C+00 s=0 e=67 z=388  None .text      fopAcIt_Judge__FPFPvPv_PvPv                                  */
//	8001980C: 803A35E0 (g_fopAcTg_Queue)
//	80019810: 803A35E0 (g_fopAcTg_Queue)
//	80019814: 80266AB0 (cTgIt_JudgeFilter__FP16create_tag_classP12judge_filter)
//	80019818: 80266AB0 (cTgIt_JudgeFilter__FP16create_tag_classP12judge_filter)
//	80019820: 80266098 (cLsIt_Judge__FP15node_list_classPFP10node_classPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
asm void fopAcIt_Judge(void* (*)(void*, void*), void* param_1) {
	nofralloc
#include "asm/f_op/f_op_actor_iter/fopAcIt_Judge__FPFPvPv_PvPv.s"
}
#pragma pop


