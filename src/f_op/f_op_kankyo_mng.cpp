// 
// Generated By: dol2asm
// Translation Unit: f_op/f_op_kankyo_mng
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "f_op/f_op_kankyo_mng.h"

// 
// Types:
// 

struct layer_class {
};

struct dPa_levelEcallBack {
};

struct cXyz {
};

struct csXyz {
};

struct _GXColor {
};

struct dKy_tevstr_c {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct cMl {
	/* 80263228 */ // False False
//  int False
//  u32 False
void memalignB(int, u32);
};

// 
// Forward References:
// 

// True False
static void fopKyM_CreateAppend();
// True False
//  int False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
static void createAppend(int, cXyz*, cXyz*);
// False False
//  void* False
// 	 void False
void fopKyM_Delete(void*);
// True False
//  s16 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
static void fopKyM_Create(s16, int (*)(void*), void*);
// False False
//  s16 False
//  int False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
void fopKyM_create(s16, int, cXyz*, cXyz*, int (*)(void*));
// False False
//  s16 False
//  int False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
void fopKyM_fastCreate(s16, int, cXyz*, cXyz*, int (*)(void*));
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  int False
void fopKyM_createWpillar(cXyz const*, f32, int);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void fopKyM_createMpillar(cXyz const*, f32);

// True False
extern "C" static void fopKyM_CreateAppend__Fv();
// True False
//  int False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" static void createAppend__FiP4cXyzP4cXyz();
// False False
//  void* False
// 	 void False
extern "C" void fopKyM_Delete__FPv();
// True False
//  s16 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" static void fopKyM_Create__FsPFPv_iPv();
// False False
//  s16 False
//  int False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
extern "C" void fopKyM_create__FsiP4cXyzP4cXyzPFPv_i();
// False False
//  s16 False
//  int False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
extern "C" void fopKyM_fastCreate__FsiP4cXyzP4cXyzPFPv_i();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  int False
extern "C" void fopKyM_createWpillar__FPC4cXyzfi();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void fopKyM_createMpillar__FPC4cXyzf();

// 
// External References:
// 

// False False
void fpcLy_CurrentLayer();
// False False
//  void* False
// 	 void False
void fpcM_Delete(void*);
// False False
//  s16 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcM_FastCreate(s16, int (*)(void*), void*, void*);
// False False
//  layer_class* False
// 	 layer_class False
//  s16 False
//  int (*)(void*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSCtRq_Request(layer_class*, s16, int (*)(void*, void*), void*, void*);
// False False
//  void* False
// 	 void False
//  int False
//  u32 False
void cLib_memSet(void*, int, u32);

// False False
extern "C" void fpcLy_CurrentLayer__Fv();
// False False
//  void* False
// 	 void False
extern "C" void fpcM_Delete__FPv();
// False False
//  s16 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcM_FastCreate__FsPFPv_iPvPv();
// False False
//  layer_class* False
// 	 layer_class False
//  s16 False
//  int (*)(void*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSCtRq_Request__FP11layer_classsPFPvPv_iPvPv();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  u32 False
extern "C" void memalignB__3cMlFiUl();
// False False
//  void* False
// 	 void False
//  int False
//  u32 False
extern "C" void cLib_memSet__FPviUl();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 g_dComIfG_gameInfo[122384];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80451C68-80451C70 0004+04 s=2 e=0 z=0  None .sdata2    @3713                                                        */
SECTION_SDATA2 static f32 lit_3713[1 + 1 /* padding */] = {
	1.0f,
	/* padding */
	0.0f,
};

/* 8001F660-8001F6B8 0058+00 s=2 e=0 z=0  None .text      fopKyM_CreateAppend__Fv                                      */
//	8001F678: 80263228 (memalignB__3cMlFiUl)
//	8001F68C: 8026F95C (cLib_memSet__FPviUl)
//	8001F690: 80451C68 (lit_3713)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm static void fopKyM_CreateAppend() {
	nofralloc
#include "asm/f_op/f_op_kankyo_mng/fopKyM_CreateAppend__Fv.s"
}
#pragma pop


/* 8001F6B8-8001F748 0090+00 s=2 e=0 z=0  None .text      createAppend__FiP4cXyzP4cXyz                                 */
//	8001F6C8: 803621DC (_savegpr_29)
//	8001F6D8: 8001F660 (fopKyM_CreateAppend__Fv)
//	8001F734: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
asm static void createAppend(int param_0, cXyz* param_1, cXyz* param_2) {
	nofralloc
#include "asm/f_op/f_op_kankyo_mng/createAppend__FiP4cXyzP4cXyz.s"
}
#pragma pop


/* 8001F748-8001F768 0020+00 s=0 e=3 z=1  None .text      fopKyM_Delete__FPv                                           */
//	8001F754: 80022118 (fpcM_Delete__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
asm void fopKyM_Delete(void* param_0) {
	nofralloc
#include "asm/f_op/f_op_kankyo_mng/fopKyM_Delete__FPv.s"
}
#pragma pop


/* 8001F768-8001F7B8 0050+00 s=2 e=0 z=0  None .text      fopKyM_Create__FsPFPv_iPv                                    */
//	8001F778: 803621DC (_savegpr_29)
//	8001F788: 800216F4 (fpcLy_CurrentLayer__Fv)
//	8001F79C: 80023D94 (fpcSCtRq_Request__FP11layer_classsPFPvPv_iPvPv)
//	8001F7A4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s16 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
asm static void fopKyM_Create(s16 param_0, int (*)(void*), void* param_2) {
	nofralloc
#include "asm/f_op/f_op_kankyo_mng/fopKyM_Create__FsPFPv_iPv.s"
}
#pragma pop


/* 8001F7B8-8001F818 0060+00 s=0 e=3 z=1  None .text      fopKyM_create__FsiP4cXyzP4cXyzPFPv_i                         */
//	8001F7E0: 8001F6B8 (createAppend__FiP4cXyzP4cXyz)
//	8001F7FC: 8001F768 (fopKyM_Create__FsPFPv_iPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  s16 False
//  int False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
asm void fopKyM_create(s16 param_0, int param_1, cXyz* param_2, cXyz* param_3, int (*)(void*)) {
	nofralloc
#include "asm/f_op/f_op_kankyo_mng/fopKyM_create__FsiP4cXyzP4cXyzPFPv_i.s"
}
#pragma pop


/* 8001F818-8001F87C 0064+00 s=0 e=1 z=0  None .text      fopKyM_fastCreate__FsiP4cXyzP4cXyzPFPv_i                     */
//	8001F840: 8001F6B8 (createAppend__FiP4cXyzP4cXyz)
//	8001F860: 800222F4 (fpcM_FastCreate__FsPFPv_iPvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  s16 False
//  int False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
asm void fopKyM_fastCreate(s16 param_0, int param_1, cXyz* param_2, cXyz* param_3, int (*)(void*)) {
	nofralloc
#include "asm/f_op/f_op_kankyo_mng/fopKyM_fastCreate__FsiP4cXyzP4cXyzPFPv_i.s"
}
#pragma pop


/* 8001F87C-8001F90C 0090+00 s=0 e=6 z=37  None .text      fopKyM_createWpillar__FPC4cXyzfi                             */
//	8001F8A4: 8001F660 (fopKyM_CreateAppend__Fv)
//	8001F8E8: 8001F768 (fopKyM_Create__FsPFPv_iPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  int False
asm void fopKyM_createWpillar(cXyz const* param_0, f32 param_1, int param_2) {
	nofralloc
#include "asm/f_op/f_op_kankyo_mng/fopKyM_createWpillar__FPC4cXyzfi.s"
}
#pragma pop


/* ############################################################################################## */
/* 804505C0-804505C8 0004+04 s=1 e=0 z=0  None .sdata     m_name$3788                                                  */
SECTION_SDATA static u8 m_name[4 + 4 /* padding */] = {
	0x87, 0x57, 0x87, 0x58,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 8001F90C-8001F9B4 00A8+00 s=0 e=0 z=3  None .text      fopKyM_createMpillar__FPC4cXyzf                              */
//	8001F91C: 803621D8 (_savegpr_28)
//	8001F938: 804061C0 (g_dComIfG_gameInfo)
//	8001F93C: 804061C0 (g_dComIfG_gameInfo)
//	8001F964: 804505C0 (m_name)
//	8001F980: 80451C68 (lit_3713)
//	8001F984: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8001F9A0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
asm void fopKyM_createMpillar(cXyz const* param_0, f32 param_1) {
	nofralloc
#include "asm/f_op/f_op_kankyo_mng/fopKyM_createMpillar__FPC4cXyzf.s"
}
#pragma pop


