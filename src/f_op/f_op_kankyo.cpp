//
// Generated By: dol2asm
// Translation Unit: f_op/f_op_kankyo
//

#include "f_op/f_op_kankyo.h"
#include "f_pc/f_pc_manager.h"
#include "d/com/d_com_inf_game.h"
#include "d/s/d_s_play.h"
#include "dol2asm.h"
#include "dolphin/types.h"

// //
// // External References:
// //

extern "C" void fopDwTg_ToDrawQ__FP16create_tag_classi();
extern "C" void fopDwTg_DrawQTo__FP16create_tag_class();
extern "C" void fopDwTg_Init__FP16create_tag_classPv();
extern "C" void fpcBs_MakeOfType__FPi();
extern "C" void fpcLf_GetPriority__FPC14leafdraw_class();
extern "C" void fpcLf_DrawMethod__FP21leafdraw_method_classPv();
extern "C" void fpcMtd_Execute__FP20process_method_classPv();
extern "C" void fpcMtd_IsDelete__FP20process_method_classPv();
extern "C" void fpcMtd_Delete__FP20process_method_classPv();
extern "C" void fpcMtd_Create__FP20process_method_classPv();

//
// Declarations:
//

/* 8001F284-8001F2C0 019BC4 003C+00 1/0 0/0 0/0 .text            fopKy_Draw__FPv */
static int fopKy_Draw(void* param_0) {
    int ret;

    if (!dComIfGp_isPauseFlag()) {
        ret = fpcLf_DrawMethod(((msg_class*)param_0)->field_0xd8, param_0);
    }

    return ret;
}

/* 8001F2C0-8001F314 019C00 0054+00 1/0 0/0 0/0 .text            fopKy_Execute__FPv */
static int fopKy_Execute(void* param_0) {
    int ret;

    if (dScnPly_c::isPause() && (!dComIfGp_isPauseFlag() || fpcM_GetName(param_0) == 0x15)) {
        ret = fpcMtd_Execute(((process_method_class*)((msg_class*)param_0)->field_0xd8),param_0);
    }

    return ret;
}

/* 8001F314-8001F368 019C54 0054+00 1/0 0/0 0/0 .text            fopKy_IsDelete__FPv */
static int fopKy_IsDelete(void* param_0) {
    int ret;
    msg_class* msg = (msg_class*)param_0;
    leafdraw_method_class* leaf_mtd = msg->field_0xd8;
    process_method_class* proc_mtd = (process_method_class*)leaf_mtd;
    ret = fpcMtd_IsDelete(proc_mtd,msg);

    if (ret == 1) {
        fopDwTg_DrawQTo(&msg->field_0xc4);
    }

    return ret;
}

/* 8001F368-8001F3B4 019CA8 004C+00 1/0 0/0 0/0 .text            fopKy_Delete__FPv */
static int fopKy_Delete(void* param_0) {
    msg_class* msg = (msg_class*)param_0;
    leafdraw_method_class* leaf_mtd = msg->field_0xd8;
    process_method_class* proc_mtd = (process_method_class*)leaf_mtd;
    int ret = fpcMtd_Delete(proc_mtd,msg);
    fopDwTg_DrawQTo(&msg->field_0xc4);
    return ret;
}

/* ############################################################################################## */
/* 80450CE8-80450CF0 0001E8 0004+04 1/1 0/0 0/0 .sbss            fopKy_KANKYO_TYPE */
static u8 fopKy_KANKYO_TYPE[4 + 4 /* padding */];

/* 8001F3B4-8001F488 019CF4 00D4+00 1/0 0/0 0/0 .text            fopKy_Create__FPv */
#ifdef NONMATCHING
// regalloc
class append_class {
public:
    cXyz field_0x00;
    cXyz field_0x0c;
    u32 field_0x18;
};

class unk_class {
public:
    u8 field_0x00[0xdc];
    cXyz field_0xdc;
    cXyz field_0xe8;
    u32 field_0xf4;
};

static int fopKy_Create(void* param_0) {
    msg_class* msg = (msg_class*)param_0;

    if (fpcM_IsFirstCreating(param_0)) {
        leaf_process_profile_definition* profile = fpcM_GetProfile(param_0);

        msg->field_0xc0 = fpcBs_MakeOfType((int*)fopKy_KANKYO_TYPE);
        msg->field_0xd8 = profile->mBase.mMethods;

        fopDwTg_Init((create_tag_class*)(&msg->field_0xc4), msg);
        append_class* append = (append_class*)fopKyM_GetAppend(msg);

        if (append) {
            ((unk_class*)msg)->field_0xdc = append->field_0x00;
            ((unk_class*)msg)->field_0xe8 = append->field_0x0c;
            ((unk_class*)msg)->field_0xf4 = append->field_0x18;
        }
    }

    int ret = fpcMtd_Create((process_method_class*)(msg->field_0xd8), msg);
    if (ret == 4) {
        s16 priority = fpcM_DrawPriority(msg);
        fopDwTg_ToDrawQ((create_tag_class*)(&msg->field_0xc4),priority);
    }

    return ret;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void fopKy_Create(void* param_0) {
    nofralloc
#include "asm/f_op/f_op_kankyo/fopKy_Create__FPv.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 803A3940-803A3958 -00001 0014+04 0/0 7/0 0/0 .data            g_fopKy_Method */
void* g_fopKy_Method[5] = {
    fopKy_Create,
    fopKy_Delete,
    fopKy_Execute,
    fopKy_IsDelete,
    fopKy_Draw
};
