// 
// Generated By: dol2asm
// Translation Unit: a/obj/d_a_obj_item
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "a/obj/d_a_obj_item.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 8026702C */ // False False
//  bool False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
bool operator==(Vec const&) const;
	/* 8026706C */ // False False
//  bool False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
bool operator!=(Vec const&) const;
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct fopAcM_lc_c {
	/* 8001DC68 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void lineCheck(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct daPy_py_c {
	/* 8015DFD8 */ // True False
void getItemPos() const;
	/* 8015DFF4 */ // False False
void getLeftHandPos() const;
};

struct daPy_boomerangMove_c {
	/* 8015E5B0 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void initOffset(cXyz const*);
	/* 8015E654 */ // False False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
void posMove(cXyz*, s16*, fopAc_ac_c*, s16);
	/* 8015E87C */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void bgCheckAfterOffset(cXyz const*);
};

struct daItem_c {
	/* 8015B0C4 */ // True False
void initBaseMtx();
	/* 8015B108 */ // True False
void setBaseMtx();
	/* 8015B190 */ // True False
void setBaseMtx_0();
	/* 8015B1C8 */ // True False
void setBaseMtx_1();
	/* 8015B3D8 */ // True False
void CreateInit();
	/* 8015B7BC */ // True False
void setCullInfo();
	/* 8015B7D4 */ // True False
void _daItem_create();
	/* 8015BA9C */ // True False
void _daItem_execute();
	/* 8015BD84 */ // True False
void _daItem_draw();
	/* 8015BDE8 */ // True False
void _daItem_delete();
	/* 8015BE60 */ // True False
void procInitNormal();
	/* 8015BEA4 */ // True False
void procMainNormal();
	/* 8015BFE8 */ // True False
//  void False
void procMainEnemyCarry();
	/* 8015BFEC */ // True False
void procInitForceGet();
	/* 8015C038 */ // True False
void procMainForceGet();
	/* 8015C058 */ // True False
void procInitSimpleGetDemo();
	/* 8015C134 */ // True False
void procMainSimpleGetDemo();
	/* 8015C200 */ // True False
void procInitGetDemoEvent();
	/* 8015C2A4 */ // True False
void procWaitGetDemoEvent();
	/* 8015C3BC */ // True False
void procMainGetDemoEvent();
	/* 8015C41C */ // True False
void procInitBoomerangCarry();
	/* 8015C514 */ // True False
void procMainBoomerangCarry();
	/* 8015C5F4 */ // True False
void procInitSwOnWait();
	/* 8015C648 */ // True False
void procMainSwOnWait();
	/* 8015C708 */ // True False
void procInitBoomHitWait();
	/* 8015C738 */ // True False
void procMainBoomHitWait();
	/* 8015CAB8 */ // True False
void move_proc_call();
	/* 8015CC4C */ // True False
void mode_wait_init();
	/* 8015CC88 */ // True False
void mode_water_init();
	/* 8015CCD0 */ // True False
void mode_wait();
	/* 8015CDCC */ // True False
void mode_water();
	/* 8015CE94 */ // True False
void setTevStr();
	/* 8015CEEC */ // True False
void itemGetNextExecute();
	/* 8015D0A8 */ // True False
void itemGet();
	/* 8015D370 */ // True False
void checkCountTimer();
	/* 8015D3CC */ // True False
void checkPlayerGet();
	/* 8015D410 */ // True False
void checkYogan();
	/* 8015D480 */ // True False
void deleteItem();
	/* 8015D4AC */ // True False
void itemActionForRupee();
	/* 8015D56C */ // True False
void itemActionForHeart();
	/* 8015D688 */ // True False
void itemActionForArrow();
	/* 8015D700 */ // True False
void itemActionForBoomerang();
	/* 8015D734 */ // True False
void bg_check();
	/* 8015D834 */ // True False
void set_bound_se();
	/* 8015D95C */ // True False
void CountTimer();
	/* 8015D9F0 */ // True False
void initAction();
	/* 8015DAAC */ // True False
void initFlag();
	/* 8015DBF0 */ // True False
void initScale();
	/* 8015DC40 */ // True False
//  int False
void initSpeed(int);
	/* 8015DE38 */ // True False
void initAngle();
};

struct daItemBase_c {
	/* 80037A64 */ // False False
void hide();
	/* 80037A74 */ // False False
void show();
	/* 80037A84 */ // False False
void changeDraw();
	/* 80037ACC */ // False False
void chkDraw();
	/* 80144724 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void DeleteBase(char const*);
	/* 8014474C */ // False False
//  bool False
bool clothCreate();
	/* 80144754 */ // False False
//  bool False
bool __CreateHeap();
	/* 80144B94 */ // False False
void DrawBase();
	/* 80144C30 */ // False False
void RotateYBase();
	/* 80144C7C */ // False False
void setListStart();
	/* 80144CC4 */ // False False
void settingBeforeDraw();
	/* 80144D70 */ // False False
void setShadow();
	/* 80144EDC */ // False False
void animEntry();
	/* 8014503C */ // False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void animPlay(f32, f32, f32, f32, f32, f32);
	/* 80145144 */ // False False
//  int False
void chkFlag(int);
	/* 80145164 */ // False False
void getTevFrm();
	/* 80145180 */ // False False
void getBtpFrm();
	/* 8014519C */ // False False
void getShadowSize();
	/* 801451B4 */ // False False
void getCollisionH();
	/* 801451D0 */ // False False
void getCollisionR();
	/* 8015B0B8 */ // False False
void getData();
};

struct dSv_player_get_item_c {
	/* 80033E94 */ // False False
//  u8 False
void offFirstBit(u8);
};

struct dSv_info_c {
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
	/* 800354E0 */ // False False
//  int False
//  int False
void onItem(int, int);
	/* 80035590 */ // False False
//  int False
//  int False
void isItem(int, int) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dPa_levelEcallBack {
};

struct dPa_followEcallBack {
	/* 80049580 */ // False False
//  u8 False
//  u8 False
dPa_followEcallBack(u8, u8);
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 800436EC */ // False False
//  unsigned int False
void setPtI_Id(unsigned int);
};

struct dEvent_manager_c {
	/* 80047ADC */ // False False
//  char const* False
// 	 char const False
// 		 char False
void endCheckOld(char const*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084658 */ // False False
void ChkCoHit();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
};

struct cBgS_PolyInfo {
};

struct dBgS {
	/* 80074B40 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void ChkMoveBG_NoDABg(cBgS_PolyInfo const&);
	/* 80074E50 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyAtt0(cBgS_PolyInfo const&);
};

struct dBgS_Acch {
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
	/* 80077388 */ // False False
void SetMoveBGOnly();
	/* 800773A4 */ // False False
void ClrMoveBGOnly();
};

struct cM3dGPla {
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cBgS {
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct Z2SoundObjSimple {
	/* 8015BA3C */ // False False
~Z2SoundObjSimple();
	/* 802BE844 */ // False False
Z2SoundObjSimple();
};

struct Z2SoundObjBase {
	/* 802BDF48 */ // False False
~Z2SoundObjBase();
	/* 802BDFF8 */ // False False
void deleteObject();
	/* 802BE4A4 */ // False False
//  u32 False
//  u32 False
//  Z2SoundObjBase* False
// 	 Z2SoundObjBase False
void startCollisionSE(u32, u32, Z2SoundObjBase*);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

// 
// Forward References:
// 

// True False
//  cXyz* False
// 	 cXyz False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  f32 False
static void Reflect(cXyz*, cBgS_PolyInfo const&, f32);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
static void itemGetCoCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
static void itemGetTgCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
// True False
//  daItem_c* False
// 	 daItem_c False
static void daItem_Draw(daItem_c*);
// True False
//  daItem_c* False
// 	 daItem_c False
static void daItem_Execute(daItem_c*);
// True False
//  daItem_c* False
// 	 daItem_c False
static void daItem_Delete(daItem_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daItem_Create(fopAc_ac_c*);

// True False
//  cXyz* False
// 	 cXyz False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  f32 False
extern "C" static void Reflect__FP4cXyzRC13cBgS_PolyInfof();
// False False
extern "C" void getData__12daItemBase_cFv();
// True False
extern "C" void initBaseMtx__8daItem_cFv();
// True False
extern "C" void setBaseMtx__8daItem_cFv();
// True False
extern "C" void setBaseMtx_0__8daItem_cFv();
// True False
extern "C" void setBaseMtx_1__8daItem_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" static void itemGetCoCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" static void itemGetTgCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// True False
extern "C" void CreateInit__8daItem_cFv();
// True False
extern "C" void setCullInfo__8daItem_cFv();
// True False
extern "C" void _daItem_create__8daItem_cFv();
// False False
extern "C" void __dt__16Z2SoundObjSimpleFv();
// True False
extern "C" void _daItem_execute__8daItem_cFv();
// True False
extern "C" void _daItem_draw__8daItem_cFv();
// True False
extern "C" void _daItem_delete__8daItem_cFv();
// True False
extern "C" void procInitNormal__8daItem_cFv();
// True False
extern "C" void procMainNormal__8daItem_cFv();
// True False
//  void False
extern "C" void procMainEnemyCarry__8daItem_cFv();
// True False
extern "C" void procInitForceGet__8daItem_cFv();
// True False
extern "C" void procMainForceGet__8daItem_cFv();
// True False
extern "C" void procInitSimpleGetDemo__8daItem_cFv();
// True False
extern "C" void procMainSimpleGetDemo__8daItem_cFv();
// True False
extern "C" void procInitGetDemoEvent__8daItem_cFv();
// True False
extern "C" void procWaitGetDemoEvent__8daItem_cFv();
// True False
extern "C" void procMainGetDemoEvent__8daItem_cFv();
// True False
extern "C" void procInitBoomerangCarry__8daItem_cFv();
// True False
extern "C" void procMainBoomerangCarry__8daItem_cFv();
// True False
extern "C" void procInitSwOnWait__8daItem_cFv();
// True False
extern "C" void procMainSwOnWait__8daItem_cFv();
// True False
extern "C" void procInitBoomHitWait__8daItem_cFv();
// True False
extern "C" void procMainBoomHitWait__8daItem_cFv();
// True False
extern "C" void move_proc_call__8daItem_cFv();
// True False
extern "C" void mode_wait_init__8daItem_cFv();
// True False
extern "C" void mode_water_init__8daItem_cFv();
// True False
extern "C" void mode_wait__8daItem_cFv();
// True False
extern "C" void mode_water__8daItem_cFv();
// True False
extern "C" void setTevStr__8daItem_cFv();
// True False
extern "C" void itemGetNextExecute__8daItem_cFv();
// True False
extern "C" void itemGet__8daItem_cFv();
// True False
extern "C" void checkCountTimer__8daItem_cFv();
// True False
extern "C" void checkPlayerGet__8daItem_cFv();
// True False
extern "C" void checkYogan__8daItem_cFv();
// True False
extern "C" void deleteItem__8daItem_cFv();
// True False
extern "C" void itemActionForRupee__8daItem_cFv();
// True False
extern "C" void itemActionForHeart__8daItem_cFv();
// True False
extern "C" void itemActionForArrow__8daItem_cFv();
// True False
extern "C" void itemActionForBoomerang__8daItem_cFv();
// True False
extern "C" void bg_check__8daItem_cFv();
// True False
extern "C" void set_bound_se__8daItem_cFv();
// True False
extern "C" void CountTimer__8daItem_cFv();
// True False
extern "C" void initAction__8daItem_cFv();
// True False
extern "C" void initFlag__8daItem_cFv();
// True False
extern "C" void initScale__8daItem_cFv();
// True False
//  int False
extern "C" void initSpeed__8daItem_cFi();
// True False
extern "C" void initAngle__8daItem_cFv();
// True False
//  daItem_c* False
// 	 daItem_c False
extern "C" static void daItem_Draw__FP8daItem_c();
// True False
//  daItem_c* False
// 	 daItem_c False
extern "C" static void daItem_Execute__FP8daItem_c();
// True False
//  daItem_c* False
// 	 daItem_c False
extern "C" static void daItem_Delete__FP8daItem_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daItem_Create__FP10fopAc_ac_c();
// False False
extern "C" void __sinit_d_a_obj_item_cpp();
// True False
extern "C" void getItemPos__9daPy_py_cCFv();
// False False
extern "C" void getLeftHandPos__9daPy_py_cCFv();
extern "C" extern char const* const a_obj_d_a_obj_item__stringBase0;
extern "C" extern void* a_obj_d_a_obj_item__lit_4679[3];
extern "C" extern void* a_obj_d_a_obj_item__lit_4680[3];
extern "C" extern u8 data_803B9DC4[24];
extern "C" extern void* lit_5240[3];
extern "C" extern void* lit_5241[3];
extern "C" extern void* lit_5242[3];
extern "C" extern void* lit_5243[3];
extern "C" extern void* lit_5244[3];
extern "C" extern void* lit_5245[3];
extern "C" extern void* lit_5246[3];
extern "C" extern void* lit_5247[3];
extern "C" extern void* lit_5248[3];
extern "C" extern void* g_profile_ITEM[12];
extern "C" extern void* __vt__8daItem_c[17 + 36 /* padding */];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  unsigned int False
void fopAcM_delete(unsigned int);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
void fopAcM_orderItemEvent(fopAc_ac_c*, u16, u16);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_createItemForTrBoxDemo(cXyz const*, int, int, int, csXyz const*, cXyz const*);
// False False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
void fopAcM_effHamonSet(u32*, cXyz const*, f32, f32);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void CheckFieldItemCreateHeap(fopAc_ac_c*);
// False False
//  u8 False
void execItemGet(u8);
// False False
//  u8 False
//  int False
void checkItemGet(u8, int);
// False False
//  u8 False
void isHeart(u8);
// False True
//  u8* False
// 	 u8 False
void cLib_calcTimer__template0(u8*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  unsigned int False
extern "C" void fopAcM_delete__FUi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderItemEvent__FP10fopAc_ac_cUsUs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_createItemForTrBoxDemo__FPC4cXyziiiPC5csXyzPC4cXyz();
// False False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
extern "C" void fopAcM_effHamonSet__FPUlPC4cXyzff();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u8 False
extern "C" void offFirstBit__21dSv_player_get_item_cFUc();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  int False
//  int False
extern "C" void onItem__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isItem__10dSv_info_cCFii();
// False False
extern "C" void hide__12daItemBase_cFv();
// False False
extern "C" void show__12daItemBase_cFv();
// False False
extern "C" void changeDraw__12daItemBase_cFv();
// False False
extern "C" void chkDraw__12daItemBase_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void CheckFieldItemCreateHeap__FP10fopAc_ac_c();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  unsigned int False
extern "C" void setPtI_Id__14dEvt_control_cFUi();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void endCheckOld__16dEvent_manager_cFPCc();
// False False
//  u8 False
//  u8 False
extern "C" void __ct__19dPa_followEcallBackFUcUc();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void ChkMoveBG_NoDABg__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void SetMoveBGOnly__9dBgS_AcchFv();
// False False
extern "C" void ClrMoveBGOnly__9dBgS_AcchFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  u8 False
extern "C" void execItemGet__FUc();
// False False
//  u8 False
//  int False
extern "C" void checkItemGet__FUci();
// False False
//  u8 False
extern "C" void isHeart__FUc();
// False True
//  u8* False
// 	 u8 False
extern "C" void func_80141AE8();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void DeleteBase__12daItemBase_cFPCc();
// False False
//  bool False
extern "C" bool clothCreate__12daItemBase_cFv();
// False False
//  bool False
extern "C" bool __CreateHeap__12daItemBase_cFv();
// False False
extern "C" void DrawBase__12daItemBase_cFv();
// False False
extern "C" void RotateYBase__12daItemBase_cFv();
// False False
extern "C" void setListStart__12daItemBase_cFv();
// False False
extern "C" void settingBeforeDraw__12daItemBase_cFv();
// False False
extern "C" void setShadow__12daItemBase_cFv();
// False False
extern "C" void animEntry__12daItemBase_cFv();
// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void animPlay__12daItemBase_cFffffff();
// False False
//  int False
extern "C" void chkFlag__12daItemBase_cFi();
// False False
extern "C" void getTevFrm__12daItemBase_cFv();
// False False
extern "C" void getBtpFrm__12daItemBase_cFv();
// False False
extern "C" void getShadowSize__12daItemBase_cFv();
// False False
extern "C" void getCollisionH__12daItemBase_cFv();
// False False
extern "C" void getCollisionR__12daItemBase_cFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void initOffset__20daPy_boomerangMove_cFPC4cXyz();
// False False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
extern "C" void posMove__20daPy_boomerangMove_cFP4cXyzPsP10fopAc_ac_cs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
//  bool False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" bool __eq__4cXyzCFRC3Vec();
// False False
//  bool False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" bool __ne__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void __dt__14Z2SoundObjBaseFv();
// False False
extern "C" void deleteObject__14Z2SoundObjBaseFv();
// False False
//  u32 False
//  u32 False
//  Z2SoundObjBase* False
// 	 Z2SoundObjBase False
extern "C" void startCollisionSE__14Z2SoundObjBaseFUlUlP14Z2SoundObjBase();
// False False
extern "C" void __ct__16Z2SoundObjSimpleFv();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXInverse();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void C_VECReflect();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void __cvt_fp2unsigned();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const m_data__12daItemBase_c[56];
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* field_item_res__10dItem_data[1020];
extern "C" extern u8 item_info__10dItem_data[1020 + 4 /* padding */];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12daItemBase_c[17 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__16Z2SoundObjSimple[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern u8 data_80451010[8];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80453550-80453558 0004+04 s=11 e=0 z=0  None .sdata2    @3857                                                        */
SECTION_SDATA2 static f32 lit_3857[1 + 1 /* padding */] = {
	0.0f,
	/* padding */
	0.0f,
};

/* 80453558-80453560 0008+00 s=2 e=0 z=0  None .sdata2    @3858                                                        */
SECTION_SDATA2 static f64 lit_3858 = 0.5;

/* 80453560-80453568 0008+00 s=2 e=0 z=0  None .sdata2    @3859                                                        */
SECTION_SDATA2 static f64 lit_3859 = 3.0;

/* 80453568-80453570 0008+00 s=2 e=0 z=0  None .sdata2    @3860                                                        */
SECTION_SDATA2 static u8 lit_3860[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8015ADCC-8015B0B8 02EC+00 s=1 e=0 z=0  None .text      Reflect__FP4cXyzRC13cBgS_PolyInfof                           */
//	8015ADF4: 803A37C0 (__vt__8cM3dGPla)
//	8015ADF8: 803A37C0 (__vt__8cM3dGPla)
//	8015AE00: 804061C0 (g_dComIfG_gameInfo)
//	8015AE04: 804061C0 (g_dComIfG_gameInfo)
//	8015AE10: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8015AE28: 80453550 (lit_3857)
//	8015AE38: 80347138 (PSVECSquareMag)
//	8015AE3C: 80453550 (lit_3857)
//	8015AE4C: 80453558 (lit_3858)
//	8015AE54: 80453560 (lit_3859)
//	8015AE9C: 80453568 (lit_3860)
//	8015AEA8: 80450AE0 (__float_nan)
//	8015AEAC: 80450AE0 (__float_nan)
//	8015AF18: 80450AE0 (__float_nan)
//	8015AF1C: 80450AE0 (__float_nan)
//	8015AF34: 803472C8 (C_VECReflect)
//	8015AF44: 80266B84 (__ml__4cXyzCFf)
//	8015AF54: 80266B84 (__ml__4cXyzCFf)
//	8015AF7C: 80453550 (lit_3857)
//	8015AF8C: 80347138 (PSVECSquareMag)
//	8015AF90: 80453550 (lit_3857)
//	8015AFA0: 80453558 (lit_3858)
//	8015AFA8: 80453560 (lit_3859)
//	8015AFF0: 80453568 (lit_3860)
//	8015AFFC: 80450AE0 (__float_nan)
//	8015B000: 80450AE0 (__float_nan)
//	8015B06C: 80450AE0 (__float_nan)
//	8015B070: 80450AE0 (__float_nan)
//	8015B074: 803A37C0 (__vt__8cM3dGPla)
//	8015B078: 803A37C0 (__vt__8cM3dGPla)
//	8015B084: 803A37C0 (__vt__8cM3dGPla)
//	8015B088: 803A37C0 (__vt__8cM3dGPla)
//	8015B090: 80453550 (lit_3857)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz* False
// 	 cXyz False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  f32 False
asm static void Reflect(cXyz* param_0, cBgS_PolyInfo const& param_1, f32 param_2) {
	nofralloc
#include "asm/a/obj/d_a_obj_item/Reflect__FP4cXyzRC13cBgS_PolyInfof.s"
}
#pragma pop


/* 8015B0B8-8015B0C4 000C+00 s=10 e=1 z=1  None .text      getData__12daItemBase_cFv                                    */
//	8015B0B8: 803792B0 (m_data__12daItemBase_c)
//	8015B0BC: 803792B0 (m_data__12daItemBase_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void daItemBase_c::getData() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/getData__12daItemBase_cFv.s"
}
#pragma pop


/* 8015B0C4-8015B108 0044+00 s=1 e=0 z=0  None .text      initBaseMtx__8daItem_cFv                                     */
//	8015B0F4: 8015B108 (setBaseMtx__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::initBaseMtx() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/initBaseMtx__8daItem_cFv.s"
}
#pragma pop


/* 8015B108-8015B190 0088+00 s=2 e=0 z=0  None .text      setBaseMtx__8daItem_cFv                                      */
//	8015B158: 8015B1C8 (setBaseMtx_1__8daItem_cFv)
//	8015B164: 8015B190 (setBaseMtx_0__8daItem_cFv)
//	8015B168: 803DD470 (now__14mDoMtx_stack_c)
//	8015B16C: 803DD470 (now__14mDoMtx_stack_c)
//	8015B178: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::setBaseMtx() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/setBaseMtx__8daItem_cFv.s"
}
#pragma pop


/* 8015B190-8015B1C8 0038+00 s=1 e=0 z=0  None .text      setBaseMtx_0__8daItem_cFv                                    */
//	8015B1A8: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8015B1B0: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::setBaseMtx_0() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/setBaseMtx_0__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80453570-80453574 0004+00 s=3 e=0 z=0  None .sdata2    @3923                                                        */
SECTION_SDATA2 static f32 lit_3923 = 0.5f;

/* 8015B1C8-8015B254 008C+00 s=1 e=0 z=0  None .text      setBaseMtx_1__8daItem_cFv                                    */
//	8015B1F8: 80453570 (lit_3923)
//	8015B20C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8015B210: 80453550 (lit_3857)
//	8015B21C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8015B224: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	8015B228: 80453550 (lit_3857)
//	8015B234: 8000CD9C (transM__14mDoMtx_stack_cFfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::setBaseMtx_1() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/setBaseMtx_1__8daItem_cFv.s"
}
#pragma pop


/* 8015B254-8015B320 00CC+00 s=2 e=0 z=0  None .text      itemGetCoCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	8015B274: 8015D3CC (checkPlayerGet__8daItem_cFv)
//	8015B288: 804061C0 (g_dComIfG_gameInfo)
//	8015B28C: 804061C0 (g_dComIfG_gameInfo)
//	8015B2DC: 804061C0 (g_dComIfG_gameInfo)
//	8015B2E0: 804061C0 (g_dComIfG_gameInfo)
//	8015B304: 8015CEEC (itemGetNextExecute__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
asm static void itemGetCoCallBack(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
	nofralloc
#include "asm/a/obj/d_a_obj_item/itemGetCoCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop


/* 8015B320-8015B3D8 00B8+00 s=2 e=0 z=0  None .text      itemGetTgCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	8015B340: 8015D3CC (checkPlayerGet__8daItem_cFv)
//	8015B35C: 8015CEEC (itemGetNextExecute__8daItem_cFv)
//	8015B374: 804061C0 (g_dComIfG_gameInfo)
//	8015B378: 804061C0 (g_dComIfG_gameInfo)
//	8015B3A4: 8015C41C (procInitBoomerangCarry__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
asm static void itemGetTgCallBack(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
	nofralloc
#include "asm/a/obj/d_a_obj_item/itemGetTgCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop


/* ############################################################################################## */
/* 803B9DA0-803B9DAC 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B9DAC-803B9DB8 000C+00 s=0 e=0 z=0  None .data      @4679                                                        */
SECTION_DATA void* a_obj_d_a_obj_item__lit_4679[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)mode_wait__8daItem_cFv,
};

/* 803B9DB8-803B9DC4 000C+00 s=0 e=0 z=0  None .data      @4680                                                        */
SECTION_DATA void* a_obj_d_a_obj_item__lit_4680[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)mode_water__8daItem_cFv,
};

/* 803B9DC4-803B9DDC 0018+00 s=0 e=0 z=0  None .data      mode_proc$4678                                               */
SECTION_DATA u8 data_803B9DC4[24] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B9DDC-803B9E04 0028+00 s=1 e=0 z=0  None .data      @5171                                                        */
SECTION_DATA static void* lit_5171[10] = {
	(void*)(((char*)initFlag__8daItem_cFv)+0x28),
	(void*)(((char*)initFlag__8daItem_cFv)+0x50),
	(void*)(((char*)initFlag__8daItem_cFv)+0x28),
	(void*)(((char*)initFlag__8daItem_cFv)+0x78),
	(void*)(((char*)initFlag__8daItem_cFv)+0x114),
	(void*)(((char*)initFlag__8daItem_cFv)+0xA0),
	(void*)(((char*)initFlag__8daItem_cFv)+0xC8),
	(void*)(((char*)initFlag__8daItem_cFv)+0xF0),
	(void*)(((char*)initFlag__8daItem_cFv)+0x28),
	(void*)(((char*)initFlag__8daItem_cFv)+0x28),
};

/* 803B9E04-803B9E2C 0028+00 s=1 e=0 z=0  None .data      @5193                                                        */
SECTION_DATA static void* lit_5193[10] = {
	(void*)(((char*)initScale__8daItem_cFv)+0x28),
	(void*)(((char*)initScale__8daItem_cFv)+0x3C),
	(void*)(((char*)initScale__8daItem_cFv)+0x3C),
	(void*)(((char*)initScale__8daItem_cFv)+0x3C),
	(void*)(((char*)initScale__8daItem_cFv)+0x3C),
	(void*)(((char*)initScale__8daItem_cFv)+0x28),
	(void*)(((char*)initScale__8daItem_cFv)+0x3C),
	(void*)(((char*)initScale__8daItem_cFv)+0x3C),
	(void*)(((char*)initScale__8daItem_cFv)+0x28),
	(void*)(((char*)initScale__8daItem_cFv)+0x3C),
};

/* 803B9E2C-803B9E38 000C+00 s=0 e=0 z=0  None .data      @5240                                                        */
SECTION_DATA void* lit_5240[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procMainNormal__8daItem_cFv,
};

/* 803B9E38-803B9E44 000C+00 s=0 e=0 z=0  None .data      @5241                                                        */
SECTION_DATA void* lit_5241[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procMainEnemyCarry__8daItem_cFv,
};

/* 803B9E44-803B9E50 000C+00 s=0 e=0 z=0  None .data      @5242                                                        */
SECTION_DATA void* lit_5242[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procMainSimpleGetDemo__8daItem_cFv,
};

/* 803B9E50-803B9E5C 000C+00 s=0 e=0 z=0  None .data      @5243                                                        */
SECTION_DATA void* lit_5243[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procWaitGetDemoEvent__8daItem_cFv,
};

/* 803B9E5C-803B9E68 000C+00 s=0 e=0 z=0  None .data      @5244                                                        */
SECTION_DATA void* lit_5244[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procMainGetDemoEvent__8daItem_cFv,
};

/* 803B9E68-803B9E74 000C+00 s=0 e=0 z=0  None .data      @5245                                                        */
SECTION_DATA void* lit_5245[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procMainBoomerangCarry__8daItem_cFv,
};

/* 803B9E74-803B9E80 000C+00 s=0 e=0 z=0  None .data      @5246                                                        */
SECTION_DATA void* lit_5246[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procMainSwOnWait__8daItem_cFv,
};

/* 803B9E80-803B9E8C 000C+00 s=0 e=0 z=0  None .data      @5247                                                        */
SECTION_DATA void* lit_5247[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procMainBoomHitWait__8daItem_cFv,
};

/* 803B9E8C-803B9E98 000C+00 s=0 e=0 z=0  None .data      @5248                                                        */
SECTION_DATA void* lit_5248[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procMainForceGet__8daItem_cFv,
};

/* 803B9E98-803B9F10 0078+00 s=1 e=0 z=0  None .data      mFuncPtr__8daItem_c                                          */
SECTION_DATA static u8 mFuncPtr__8daItem_c[120] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B9F10-803B9F54 0044+00 s=1 e=0 z=0  None .data      m_cyl_src__8daItem_c                                         */
SECTION_DATA static u8 m_cyl_src__8daItem_c[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
	0x42, 0x48, 0x00, 0x00,
};

/* 80453574-80453578 0004+00 s=1 e=0 z=0  None .sdata2    @4067                                                        */
SECTION_SDATA2 static f32 lit_4067 = 30.0f;

/* 80453578-8045357C 0004+00 s=1 e=0 z=0  None .sdata2    @4068                                                        */
SECTION_SDATA2 static f32 lit_4068 = 10000.0f;

/* 8045357C-80453580 0004+00 s=7 e=0 z=0  None .sdata2    @4069                                                        */
SECTION_SDATA2 static f32 lit_4069 = 1.0f;

/* 80453580-80453588 0004+04 s=2 e=0 z=0  None .sdata2    @4070                                                        */
SECTION_SDATA2 static f32 lit_4070[1 + 1 /* padding */] = {
	150.0f,
	/* padding */
	0.0f,
};

/* 80453588-80453590 0008+00 s=3 e=0 z=0  None .sdata2    @4072                                                        */
SECTION_SDATA2 static f64 lit_4072 = 4503599627370496.0 /* cast u32 to float */;

/* 8015B3D8-8015B7BC 03E4+00 s=1 e=0 z=0  None .text      CreateInit__8daItem_cFv                                      */
//	8015B3F8: 80453574 (lit_4067)
//	8015B400: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	8015B42C: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	8015B450: 80453578 (lit_4068)
//	8015B468: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	8015B470: 803B9F10 (m_cyl_src__8daItem_c)
//	8015B474: 803B9F10 (m_cyl_src__8daItem_c)
//	8015B478: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	8015B484: 8015B254 (itemGetCoCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015B488: 8015B254 (itemGetCoCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015B490: 8015B320 (itemGetTgCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015B494: 8015B320 (itemGetTgCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015B49C: 803AED78 (item_info__10dItem_data)
//	8015B4A0: 803AED78 (item_info__10dItem_data)
//	8015B4B4: 80453588 (lit_4072)
//	8015B4E4: 8045357C (lit_4069)
//	8015B4FC: 8026F200 (SetR__8cM3dGCylFf)
//	8015B508: 8026F1F8 (SetH__8cM3dGCylFf)
//	8015B510: 8015B7BC (setCullInfo__8daItem_cFv)
//	8015B518: 8015B0B8 (getData__12daItemBase_cFv)
//	8015B528: 8015B0B8 (getData__12daItemBase_cFv)
//	8015B538: 8015BE60 (procInitNormal__8daItem_cFv)
//	8015B540: 80037A74 (show__12daItemBase_cFv)
//	8015B544: 8045357C (lit_4069)
//	8015B588: 80037A64 (hide__12daItemBase_cFv)
//	8015B590: 8015C708 (procInitBoomHitWait__8daItem_cFv)
//	8015B59C: 8015BFEC (procInitForceGet__8daItem_cFv)
//	8015B5A8: 8015C058 (procInitSimpleGetDemo__8daItem_cFv)
//	8015B5B0: 8015C134 (procMainSimpleGetDemo__8daItem_cFv)
//	8015B5CC: 804061C0 (g_dComIfG_gameInfo)
//	8015B5D0: 804061C0 (g_dComIfG_gameInfo)
//	8015B5DC: 80035360 (isSwitch__10dSv_info_cCFii)
//	8015B5EC: 80037A64 (hide__12daItemBase_cFv)
//	8015B600: 8015C5F4 (procInitSwOnWait__8daItem_cFv)
//	8015B608: 8015D9F0 (initAction__8daItem_cFv)
//	8015B610: 8015B0C4 (initBaseMtx__8daItem_cFv)
//	8015B618: 8045357C (lit_4069)
//	8015B630: 8014503C (animPlay__12daItemBase_cFffffff)
//	8015B644: 8015CEEC (itemGetNextExecute__8daItem_cFv)
//	8015B668: 804061C0 (g_dComIfG_gameInfo)
//	8015B66C: 804061C0 (g_dComIfG_gameInfo)
//	8015B6B0: 8045357C (lit_4069)
//	8015B6B4: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8015B6F4: 804061C0 (g_dComIfG_gameInfo)
//	8015B6F8: 804061C0 (g_dComIfG_gameInfo)
//	8015B700: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8015B714: 80453580 (lit_4070)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::CreateInit() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/CreateInit__8daItem_cFv.s"
}
#pragma pop


/* 8015B7BC-8015B7D4 0018+00 s=1 e=0 z=0  None .text      setCullInfo__8daItem_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::setCullInfo() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/setCullInfo__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803B9F54-803B9F74 0020+00 s=1 e=0 z=0  None .data      l_daItem_Method                                              */
SECTION_DATA static void* l_daItem_Method[8] = {
	(void*)daItem_Create__FP10fopAc_ac_c,
	(void*)daItem_Delete__FP8daItem_c,
	(void*)daItem_Execute__FP8daItem_c,
	(void*)NULL,
	(void*)daItem_Draw__FP8daItem_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 803B9F74-803B9FA4 0030+00 s=0 e=0 z=1  None .data      g_profile_ITEM                                               */
SECTION_DATA void* g_profile_ITEM[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02180000,
	(void*)&g_fpcLf_Method,
	(void*)0x000009C4,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00EC0000,
	(void*)&l_daItem_Method,
	(void*)0x000C0100,
	(void*)0x000F0000,
};

/* 803B9FA4-803BA078 0044+90 s=1 e=0 z=0  None .data      __vt__8daItem_c                                              */
SECTION_DATA void* __vt__8daItem_c[17 + 36 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)DrawBase__12daItemBase_cFv,
	(void*)setListStart__12daItemBase_cFv,
	(void*)settingBeforeDraw__12daItemBase_cFv,
	(void*)setTevStr__8daItem_cFv,
	(void*)setShadow__12daItemBase_cFv,
	(void*)animEntry__12daItemBase_cFv,
	(void*)RotateYBase__12daItemBase_cFv,
	(void*)clothCreate__12daItemBase_cFv,
	(void*)__CreateHeap__12daItemBase_cFv,
	(void*)chkFlag__12daItemBase_cFi,
	(void*)getTevFrm__12daItemBase_cFv,
	(void*)getBtpFrm__12daItemBase_cFv,
	(void*)getShadowSize__12daItemBase_cFv,
	(void*)getCollisionH__12daItemBase_cFv,
	(void*)getCollisionR__12daItemBase_cFv,
	/* padding */
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
};

/* 8015B7D4-8015BA3C 0268+00 s=1 e=0 z=0  None .text      _daItem_create__8daItem_cFv                                  */
//	8015B7E4: 803621D8 (_savegpr_28)
//	8015B808: 80018B64 (__ct__10fopAc_ac_cFv)
//	8015B80C: 803B3610 (__vt__12daItemBase_c)
//	8015B810: 803B3610 (__vt__12daItemBase_c)
//	8015B820: 800760A0 (__ct__9dBgS_AcchFv)
//	8015B824: 803B35C8 (__vt__12dBgS_ObjAcch)
//	8015B828: 803B35C8 (__vt__12dBgS_ObjAcch)
//	8015B844: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	8015B84C: 80075EAC (__ct__12dBgS_AcchCirFv)
//	8015B850: 803C3728 (__vt__9cCcD_Stts)
//	8015B854: 803C3728 (__vt__9cCcD_Stts)
//	8015B860: 80083760 (__ct__10dCcD_GSttsFv)
//	8015B864: 803AC2E4 (__vt__9dCcD_Stts)
//	8015B868: 803AC2E4 (__vt__9dCcD_Stts)
//	8015B880: 80083A28 (__ct__12dCcD_GObjInfFv)
//	8015B884: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8015B888: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8015B890: 803A7218 (__vt__8cM3dGAab)
//	8015B894: 803A7218 (__vt__8cM3dGAab)
//	8015B89C: 803A720C (__vt__8cM3dGCyl)
//	8015B8A0: 803A720C (__vt__8cM3dGCyl)
//	8015B8A8: 803C35A4 (__vt__12cCcD_CylAttr)
//	8015B8AC: 803C35A4 (__vt__12cCcD_CylAttr)
//	8015B8BC: 803AC050 (__vt__8dCcD_Cyl)
//	8015B8C0: 803AC050 (__vt__8dCcD_Cyl)
//	8015B8D8: 803B9FA4 (__vt__8daItem_c)
//	8015B8DC: 803B9FA4 (__vt__8daItem_c)
//	8015B8E8: 802BE844 (__ct__16Z2SoundObjSimpleFv)
//	8015B8F8: 80049580 (__ct__19dPa_followEcallBackFUcUc)
//	8015B950: 803AED78 (item_info__10dItem_data)
//	8015B954: 803AED78 (item_info__10dItem_data)
//	8015B978: 804061C0 (g_dComIfG_gameInfo)
//	8015B97C: 804061C0 (g_dComIfG_gameInfo)
//	8015B98C: 80035590 (isItem__10dSv_info_cCFii)
//	8015B9B0: 8015B3D8 (CreateInit__8daItem_cFv)
//	8015B9C0: 803ADD88 (field_item_res__10dItem_data)
//	8015B9C4: 803ADD88 (field_item_res__10dItem_data)
//	8015B9D0: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	8015B9E0: 803ADD88 (field_item_res__10dItem_data)
//	8015B9E4: 803ADD88 (field_item_res__10dItem_data)
//	8015B9FC: 80037B78 (CheckFieldItemCreateHeap__FP10fopAc_ac_c)
//	8015BA00: 80037B78 (CheckFieldItemCreateHeap__FP10fopAc_ac_c)
//	8015BA04: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	8015BA1C: 8015B3D8 (CreateInit__8daItem_cFv)
//	8015BA28: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::_daItem_create() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/_daItem_create__8daItem_cFv.s"
}
#pragma pop


/* 8015BA3C-8015BA9C 0060+00 s=0 e=1 z=0  None .text      __dt__16Z2SoundObjSimpleFv                                   */
//	8015BA5C: 803CAD10 (__vt__16Z2SoundObjSimple)
//	8015BA60: 803CAD10 (__vt__16Z2SoundObjSimple)
//	8015BA6C: 802BDF48 (__dt__14Z2SoundObjBaseFv)
//	8015BA7C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm Z2SoundObjSimple::~Z2SoundObjSimple() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/__dt__16Z2SoundObjSimpleFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80453590-80453594 0004+00 s=1 e=0 z=0  None .sdata2    @4320                                                        */
SECTION_SDATA2 static f32 lit_4320 = 300.0f;

/* 80453594-80453598 0004+00 s=1 e=0 z=0  None .sdata2    @4321                                                        */
SECTION_SDATA2 static f32 lit_4321 = 18.0f;

/* 8015BA9C-8015BD84 02E8+00 s=1 e=0 z=0  None .text      _daItem_execute__8daItem_cFv                                 */
//	8015BAC8: 8015D95C (CountTimer__8daItem_cFv)
//	8015BAE4: 803AED78 (item_info__10dItem_data)
//	8015BAE8: 803AED78 (item_info__10dItem_data)
//	8015BB00: 80453588 (lit_4072)
//	8015BB18: 80453570 (lit_3923)
//	8015BB44: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	8015BB54: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	8015BB80: 802BE4A4 (startCollisionSE__14Z2SoundObjBaseFUlUlP14Z2SoundObjBase)
//	8015BB8C: 803B9E98 (mFuncPtr__8daItem_c)
//	8015BB90: 803B9E98 (mFuncPtr__8daItem_c)
//	8015BB98: 80362018 (__ptmf_test)
//	8015BBB0: 803B9E98 (mFuncPtr__8daItem_c)
//	8015BBB4: 803B9E98 (mFuncPtr__8daItem_c)
//	8015BBBC: 80362084 (__ptmf_scall)
//	8015BBE0: 804061C0 (g_dComIfG_gameInfo)
//	8015BBE4: 804061C0 (g_dComIfG_gameInfo)
//	8015BBEC: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8015BBF0: 80453590 (lit_4320)
//	8015BC00: 8015CEEC (itemGetNextExecute__8daItem_cFv)
//	8015BC40: 80453570 (lit_3923)
//	8015BC58: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	8015BC60: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	8015BC64: 803DD470 (now__14mDoMtx_stack_c)
//	8015BC68: 803DD470 (now__14mDoMtx_stack_c)
//	8015BC70: 803465B0 (PSMTXInverse)
//	8015BC74: 803DD470 (now__14mDoMtx_stack_c)
//	8015BC78: 803DD470 (now__14mDoMtx_stack_c)
//	8015BC84: 80346D6C (PSMTXMultVec)
//	8015BC88: 804061C0 (g_dComIfG_gameInfo)
//	8015BC8C: 804061C0 (g_dComIfG_gameInfo)
//	8015BCC0: 8045357C (lit_4069)
//	8015BCD8: 8014503C (animPlay__12daItemBase_cFffffff)
//	8015BCE0: 8015B108 (setBaseMtx__8daItem_cFv)
//	8015BCEC: 8002D06C (dComIfGp_getReverb__Fi)
//	8015BD60: 80453594 (lit_4321)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::_daItem_execute() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/_daItem_execute__8daItem_cFv.s"
}
#pragma pop


/* 8015BD84-8015BDE8 0064+00 s=1 e=0 z=0  None .text      _daItem_draw__8daItem_cFv                                    */
//	8015BDAC: 80037ACC (chkDraw__12daItemBase_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::_daItem_draw() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/_daItem_draw__8daItem_cFv.s"
}
#pragma pop


/* 8015BDE8-8015BE60 0078+00 s=1 e=0 z=0  None .text      _daItem_delete__8daItem_cFv                                  */
//	8015BE00: 802BDFF8 (deleteObject__14Z2SoundObjBaseFv)
//	8015BE34: 803ADD88 (field_item_res__10dItem_data)
//	8015BE38: 803ADD88 (field_item_res__10dItem_data)
//	8015BE44: 80144724 (DeleteBase__12daItemBase_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::_daItem_delete() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/_daItem_delete__8daItem_cFv.s"
}
#pragma pop


/* 8015BE60-8015BEA4 0044+00 s=4 e=0 z=0  None .text      procInitNormal__8daItem_cFv                                  */
//	8015BE84: 800773A4 (ClrMoveBGOnly__9dBgS_AcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procInitNormal() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procInitNormal__8daItem_cFv.s"
}
#pragma pop


/* 8015BEA4-8015BFE8 0144+00 s=1 e=0 z=0  None .text      procMainNormal__8daItem_cFv                                  */
//	8015BED0: 8015CAB8 (move_proc_call__8daItem_cFv)
//	8015BEDC: 8026706C (__ne__4cXyzCFRC3Vec)
//	8015BEEC: 8015B0B8 (getData__12daItemBase_cFv)
//	8015BF00: 8015B0B8 (getData__12daItemBase_cFv)
//	8015BF14: 8015B0B8 (getData__12daItemBase_cFv)
//	8015BF30: 80270740 (cLib_chaseF__FPfff)
//	8015BF40: 80270740 (cLib_chaseF__FPfff)
//	8015BF50: 80270740 (cLib_chaseF__FPfff)
//	8015BF70: 8015D480 (deleteItem__8daItem_cFv)
//	8015BF78: 8015B0B8 (getData__12daItemBase_cFv)
//	8015BF98: 80037A84 (changeDraw__12daItemBase_cFv)
//	8015BFA4: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	8015BFA8: 804061C0 (g_dComIfG_gameInfo)
//	8015BFAC: 804061C0 (g_dComIfG_gameInfo)
//	8015BFB8: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procMainNormal() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procMainNormal__8daItem_cFv.s"
}
#pragma pop


/* 8015BFE8-8015BFEC 0004+00 s=1 e=0 z=0  None .text      procMainEnemyCarry__8daItem_cFv                              */
// True False
//  void False
void daItem_c::procMainEnemyCarry() {
	/* empty function */
}


/* 8015BFEC-8015C038 004C+00 s=1 e=0 z=0  None .text      procInitForceGet__8daItem_cFv                                */
//	8015C010: 800773A4 (ClrMoveBGOnly__9dBgS_AcchFv)
//	8015C020: 8015CEEC (itemGetNextExecute__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procInitForceGet() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procInitForceGet__8daItem_cFv.s"
}
#pragma pop


/* 8015C038-8015C058 0020+00 s=1 e=0 z=0  None .text      procMainForceGet__8daItem_cFv                                */
//	8015C044: 8015C058 (procInitSimpleGetDemo__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procMainForceGet() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procMainForceGet__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80453598-8045359C 0004+00 s=3 e=0 z=0  None .sdata2    @4404                                                        */
SECTION_SDATA2 static f32 lit_4404 = 15.0f;

/* 8015C058-8015C134 00DC+00 s=4 e=0 z=0  None .text      procInitSimpleGetDemo__8daItem_cFv                           */
//	8015C06C: 804061C0 (g_dComIfG_gameInfo)
//	8015C070: 804061C0 (g_dComIfG_gameInfo)
//	8015C07C: 8015DFD8 (getItemPos__9daPy_py_cCFv)
//	8015C09C: 80453598 (lit_4404)
//	8015C0D0: 8015B0B8 (getData__12daItemBase_cFv)
//	8015C0D8: 80453550 (lit_3857)
//	8015C0EC: 8015B0B8 (getData__12daItemBase_cFv)
//	8015C0FC: 80037A74 (show__12daItemBase_cFv)
//	8015C104: 8015B0B8 (getData__12daItemBase_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procInitSimpleGetDemo() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procInitSimpleGetDemo__8daItem_cFv.s"
}
#pragma pop


/* 8015C134-8015C200 00CC+00 s=2 e=0 z=0  None .text      procMainSimpleGetDemo__8daItem_cFv                           */
//	8015C148: 804061C0 (g_dComIfG_gameInfo)
//	8015C14C: 804061C0 (g_dComIfG_gameInfo)
//	8015C158: 8015DFD8 (getItemPos__9daPy_py_cCFv)
//	8015C174: 80453598 (lit_4404)
//	8015C190: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	8015C1A8: 804061C0 (g_dComIfG_gameInfo)
//	8015C1AC: 804061C0 (g_dComIfG_gameInfo)
//	8015C1E8: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procMainSimpleGetDemo() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procMainSimpleGetDemo__8daItem_cFv.s"
}
#pragma pop


/* 8015C200-8015C2A4 00A4+00 s=1 e=0 z=0  None .text      procInitGetDemoEvent__8daItem_cFv                            */
//	8015C214: 80037A64 (hide__12daItemBase_cFv)
//	8015C254: 8001B9D0 (fopAcM_orderItemEvent__FP10fopAc_ac_cUsUs)
//	8015C280: 8001BC74 (fopAcM_createItemForTrBoxDemo__FPC4cXyziiiPC5csXyzPC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procInitGetDemoEvent() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procInitGetDemoEvent__8daItem_cFv.s"
}
#pragma pop


/* 8015C2A4-8015C3BC 0118+00 s=1 e=0 z=0  None .text      procWaitGetDemoEvent__8daItem_cFv                            */
//	8015C2E0: 804061C0 (g_dComIfG_gameInfo)
//	8015C2E4: 804061C0 (g_dComIfG_gameInfo)
//	8015C2EC: 800436EC (setPtI_Id__14dEvt_control_cFUi)
//	8015C308: 8001B9D0 (fopAcM_orderItemEvent__FP10fopAc_ac_cUsUs)
//	8015C320: 80141AE8 (func_80141AE8)
//	8015C334: 80097EE0 (checkItemGet__FUci)
//	8015C344: 80019CB8 (fopAcM_delete__FUi)
//	8015C350: 80097EE0 (checkItemGet__FUci)
//	8015C35C: 8015C058 (procInitSimpleGetDemo__8daItem_cFv)
//	8015C364: 8015D0A8 (itemGet__8daItem_cFv)
//	8015C370: 804061C0 (g_dComIfG_gameInfo)
//	8015C374: 804061C0 (g_dComIfG_gameInfo)
//	8015C380: 80033E94 (offFirstBit__21dSv_player_get_item_cFUc)
//	8015C394: 8001B9D0 (fopAcM_orderItemEvent__FP10fopAc_ac_cUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procWaitGetDemoEvent() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procWaitGetDemoEvent__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80393D88-80393D98 0010+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80393D88 = "DEFAULT_GETITEM";
#pragma pop

/* 8015C3BC-8015C41C 0060+00 s=1 e=0 z=0  None .text      procMainGetDemoEvent__8daItem_cFv                            */
//	8015C3D4: 804061C0 (g_dComIfG_gameInfo)
//	8015C3D8: 804061C0 (g_dComIfG_gameInfo)
//	8015C3E0: 80393D88 (a_obj_d_a_obj_item__stringBase0)
//	8015C3E4: 80393D88 (a_obj_d_a_obj_item__stringBase0)
//	8015C3E8: 80047ADC (endCheckOld__16dEvent_manager_cFPCc)
//	8015C3F8: 80042468 (reset__14dEvt_control_cFv)
//	8015C400: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procMainGetDemoEvent() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procMainGetDemoEvent__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 8045359C-804535A0 0004+00 s=2 e=0 z=0  None .sdata2    @4506                                                        */
SECTION_SDATA2 static f32 lit_4506 = 2.0f;

/* 8015C41C-8015C514 00F8+00 s=1 e=0 z=0  None .text      procInitBoomerangCarry__8daItem_cFv                          */
//	8015C460: 8015E5B0 (initOffset__20daPy_boomerangMove_cFPC4cXyz)
//	8015C464: 803AED78 (item_info__10dItem_data)
//	8015C468: 803AED78 (item_info__10dItem_data)
//	8015C484: 8045359C (lit_4506)
//	8015C488: 80453588 (lit_4072)
//	8015C4A4: 8026F200 (SetR__8cM3dGCylFf)
//	8015C4AC: 8045359C (lit_4506)
//	8015C4B4: 80453588 (lit_4072)
//	8015C4D0: 8026F1F8 (SetH__8cM3dGCylFf)
//	8015C4F0: 800773A4 (ClrMoveBGOnly__9dBgS_AcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procInitBoomerangCarry() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procInitBoomerangCarry__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804535A0-804535A4 0004+00 s=2 e=0 z=0  None .sdata2    @4524                                                        */
SECTION_SDATA2 static f32 lit_4524 = 200.0f;

/* 8015C514-8015C5F4 00E0+00 s=1 e=0 z=0  None .text      procMainBoomerangCarry__8daItem_cFv                          */
//	8015C524: 803621DC (_savegpr_29)
//	8015C52C: 804061C0 (g_dComIfG_gameInfo)
//	8015C530: 804061C0 (g_dComIfG_gameInfo)
//	8015C54C: 8015E654 (posMove__20daPy_boomerangMove_cFP4cXyzPsP10fopAc_ac_cs)
//	8015C560: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8015C564: 804535A0 (lit_4524)
//	8015C57C: 8001DC68 (lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8015C58C: 8015CEEC (itemGetNextExecute__8daItem_cFv)
//	8015C598: 8015BE60 (procInitNormal__8daItem_cFv)
//	8015C5A0: 804061C0 (g_dComIfG_gameInfo)
//	8015C5A4: 804061C0 (g_dComIfG_gameInfo)
//	8015C5AC: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8015C5B8: 8015E87C (bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz)
//	8015C5C4: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	8015C5C8: 804061C0 (g_dComIfG_gameInfo)
//	8015C5CC: 804061C0 (g_dComIfG_gameInfo)
//	8015C5D8: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8015C5E0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procMainBoomerangCarry() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procMainBoomerangCarry__8daItem_cFv.s"
}
#pragma pop


/* 8015C5F4-8015C648 0054+00 s=1 e=0 z=0  None .text      procInitSwOnWait__8daItem_cFv                                */
//	8015C608: 80037A64 (hide__12daItemBase_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procInitSwOnWait() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procInitSwOnWait__8daItem_cFv.s"
}
#pragma pop


/* 8015C648-8015C708 00C0+00 s=1 e=0 z=0  None .text      procMainSwOnWait__8daItem_cFv                                */
//	8015C65C: 804061C0 (g_dComIfG_gameInfo)
//	8015C660: 804061C0 (g_dComIfG_gameInfo)
//	8015C670: 80035360 (isSwitch__10dSv_info_cCFii)
//	8015C680: 804061C0 (g_dComIfG_gameInfo)
//	8015C684: 804061C0 (g_dComIfG_gameInfo)
//	8015C68C: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8015C6A0: 80453580 (lit_4070)
//	8015C6D8: 80141AE8 (func_80141AE8)
//	8015C6E8: 80037A74 (show__12daItemBase_cFv)
//	8015C6F0: 8015BE60 (procInitNormal__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procMainSwOnWait() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procMainSwOnWait__8daItem_cFv.s"
}
#pragma pop


/* 8015C708-8015C738 0030+00 s=1 e=0 z=0  None .text      procInitBoomHitWait__8daItem_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procInitBoomHitWait() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procInitBoomHitWait__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804535A4-804535A8 0004+00 s=2 e=0 z=0  None .sdata2    @4665                                                        */
SECTION_SDATA2 static f32 lit_4665 = 100.0f;

/* 804535A8-804535B0 0004+04 s=2 e=0 z=0  None .sdata2    @4666                                                        */
SECTION_SDATA2 static f32 lit_4666[1 + 1 /* padding */] = {
	16383.0f,
	/* padding */
	0.0f,
};

/* 804535B0-804535B8 0008+00 s=3 e=0 z=0  None .sdata2    @4668                                                        */
SECTION_SDATA2 static f64 lit_4668 = 4503601774854144.0 /* cast s32 to float */;

/* 8015C738-8015CAB8 0380+00 s=1 e=0 z=0  None .text      procMainBoomHitWait__8daItem_cFv                             */
//	8015C75C: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	8015C76C: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	8015C798: 80037A74 (show__12daItemBase_cFv)
//	8015C7C8: 8015DC40 (initSpeed__8daItem_cFi)
//	8015C7D4: 8015B254 (itemGetCoCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015C7D8: 8015B254 (itemGetCoCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015C7E0: 8015B320 (itemGetTgCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015C7E4: 8015B320 (itemGetTgCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015C810: 8015BE60 (procInitNormal__8daItem_cFv)
//	8015C818: 804061C0 (g_dComIfG_gameInfo)
//	8015C81C: 804061C0 (g_dComIfG_gameInfo)
//	8015C848: 8015DFF4 (getLeftHandPos__9daPy_py_cCFv)
//	8015C858: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8015C878: 80347138 (PSVECSquareMag)
//	8015C87C: 80453550 (lit_3857)
//	8015C88C: 80453558 (lit_3858)
//	8015C894: 80453560 (lit_3859)
//	8015C8DC: 80453568 (lit_3860)
//	8015C8E8: 80450AE0 (__float_nan)
//	8015C8EC: 80450AE0 (__float_nan)
//	8015C958: 80450AE0 (__float_nan)
//	8015C95C: 80450AE0 (__float_nan)
//	8015C960: 804535A0 (lit_4524)
//	8015C96C: 80453550 (lit_3857)
//	8015C978: 804535A4 (lit_4665)
//	8015C980: 803DD470 (now__14mDoMtx_stack_c)
//	8015C984: 803DD470 (now__14mDoMtx_stack_c)
//	8015C98C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8015C990: 803DD470 (now__14mDoMtx_stack_c)
//	8015C994: 803DD470 (now__14mDoMtx_stack_c)
//	8015C9A0: 80346D6C (PSMTXMultVec)
//	8015C9B0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8015C9CC: 804535A8 (lit_4666)
//	8015C9D0: 8026798C (cM_rndFX__Ff)
//	8015C9D8: 804535B0 (lit_4668)
//	8015CA0C: 80037A74 (show__12daItemBase_cFv)
//	8015CA3C: 8015DC40 (initSpeed__8daItem_cFi)
//	8015CA48: 8015B254 (itemGetCoCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015CA4C: 8015B254 (itemGetCoCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015CA54: 8015B320 (itemGetTgCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015CA58: 8015B320 (itemGetTgCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8015CA7C: 8015BE60 (procInitNormal__8daItem_cFv)
//	8015CA88: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	8015CA8C: 804061C0 (g_dComIfG_gameInfo)
//	8015CA90: 804061C0 (g_dComIfG_gameInfo)
//	8015CA9C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::procMainBoomHitWait() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/procMainBoomHitWait__8daItem_cFv.s"
}
#pragma pop


/* 8015CAB8-8015CC4C 0194+00 s=1 e=0 z=0  None .text      move_proc_call__8daItem_cFv                                  */
//	8015CAC8: 803621DC (_savegpr_29)
//	8015CAD0: 803B9DA0 (cNullVec__6Z2Calc)
//	8015CAD4: 803B9DA0 (cNullVec__6Z2Calc)
//	8015CAD8: 80451010 (data_80451010)
//	8015CB1C: 80451010 (data_80451010)
//	8015CB64: 804061C0 (g_dComIfG_gameInfo)
//	8015CB68: 804061C0 (g_dComIfG_gameInfo)
//	8015CB74: 80074B40 (ChkMoveBG_NoDABg__4dBgSFRC13cBgS_PolyInfo)
//	8015CB84: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	8015CB98: 8026702C (__eq__4cXyzCFRC3Vec)
//	8015CBC0: 80077388 (SetMoveBGOnly__9dBgS_AcchFv)
//	8015CBE8: 800773A4 (ClrMoveBGOnly__9dBgS_AcchFv)
//	8015CBF0: 8015D410 (checkYogan__8daItem_cFv)
//	8015CC14: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	8015CC2C: 80362084 (__ptmf_scall)
//	8015CC38: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::move_proc_call() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/move_proc_call__8daItem_cFv.s"
}
#pragma pop


/* 8015CC4C-8015CC88 003C+00 s=1 e=0 z=0  None .text      mode_wait_init__8daItem_cFv                                  */
//	8015CC68: 8015B0B8 (getData__12daItemBase_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::mode_wait_init() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/mode_wait_init__8daItem_cFv.s"
}
#pragma pop


/* 8015CC88-8015CCD0 0048+00 s=1 e=0 z=0  None .text      mode_water_init__8daItem_cFv                                 */
//	8015CC90: 80453550 (lit_3857)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::mode_water_init() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/mode_water_init__8daItem_cFv.s"
}
#pragma pop


/* 8015CCD0-8015CDCC 00FC+00 s=1 e=0 z=0  None .text      mode_wait__8daItem_cFv                                       */
//	8015CCF4: 80453550 (lit_3857)
//	8015CD54: 8015D56C (itemActionForHeart__8daItem_cFv)
//	8015CD60: 8015D688 (itemActionForArrow__8daItem_cFv)
//	8015CD6C: 8015D700 (itemActionForBoomerang__8daItem_cFv)
//	8015CD78: 8015D4AC (itemActionForRupee__8daItem_cFv)
//	8015CDA8: 8015CC88 (mode_water_init__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::mode_wait() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/mode_wait__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804535B8-804535BC 0004+00 s=1 e=0 z=0  None .sdata2    @4781                                                        */
SECTION_SDATA2 static f32 lit_4781 = 1.0f / 10.0f;

/* 8015CDCC-8015CE94 00C8+00 s=1 e=0 z=0  None .text      mode_water__8daItem_cFv                                      */
//	8015CDE4: 804061C0 (g_dComIfG_gameInfo)
//	8015CDE8: 804061C0 (g_dComIfG_gameInfo)
//	8015CDF0: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8015CE14: 8015CC4C (mode_wait_init__8daItem_cFv)
//	8015CE20: 8045357C (lit_4069)
//	8015CE58: 80453570 (lit_3923)
//	8015CE64: 804535B8 (lit_4781)
//	8015CE68: 8001D10C (fopAcM_effHamonSet__FPUlPC4cXyzff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::mode_water() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/mode_water__8daItem_cFv.s"
}
#pragma pop


/* 8015CE94-8015CEEC 0058+00 s=1 e=0 z=0  None .text      setTevStr__8daItem_cFv                                       */
//	8015CEA8: 8042CA54 (g_env_light)
//	8015CEAC: 8042CA54 (g_env_light)
//	8015CEBC: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	8015CEC0: 8042CA54 (g_env_light)
//	8015CEC4: 8042CA54 (g_env_light)
//	8015CED4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::setTevStr() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/setTevStr__8daItem_cFv.s"
}
#pragma pop


/* 8015CEEC-8015D0A8 01BC+00 s=6 e=0 z=0  None .text      itemGetNextExecute__8daItem_cFv                              */
//	8015CEFC: 803621DC (_savegpr_29)
//	8015CF6C: 8015C058 (procInitSimpleGetDemo__8daItem_cFv)
//	8015CF74: 8015D0A8 (itemGet__8daItem_cFv)
//	8015CF7C: 804061C0 (g_dComIfG_gameInfo)
//	8015CF80: 804061C0 (g_dComIfG_gameInfo)
//	8015CFC4: 80097EE0 (checkItemGet__FUci)
//	8015CFD8: 8015C058 (procInitSimpleGetDemo__8daItem_cFv)
//	8015CFE0: 8015D0A8 (itemGet__8daItem_cFv)
//	8015CFEC: 804061C0 (g_dComIfG_gameInfo)
//	8015CFF0: 804061C0 (g_dComIfG_gameInfo)
//	8015CFFC: 80033E94 (offFirstBit__21dSv_player_get_item_cFUc)
//	8015D00C: 80097EE0 (checkItemGet__FUci)
//	8015D01C: 8015C200 (procInitGetDemoEvent__8daItem_cFv)
//	8015D028: 8015C058 (procInitSimpleGetDemo__8daItem_cFv)
//	8015D030: 8015D0A8 (itemGet__8daItem_cFv)
//	8015D038: 8015C200 (procInitGetDemoEvent__8daItem_cFv)
//	8015D03C: 804061C0 (g_dComIfG_gameInfo)
//	8015D040: 804061C0 (g_dComIfG_gameInfo)
//	8015D050: 800354E0 (onItem__10dSv_info_cFii)
//	8015D094: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::itemGetNextExecute() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/itemGetNextExecute__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804535BC-804535C0 0004+00 s=3 e=0 z=0  None .sdata2    @4923                                                        */
SECTION_SDATA2 static f32 lit_4923 = -1.0f;

/* 8015D0A8-8015D370 02C8+00 s=2 e=0 z=0  None .text      itemGet__8daItem_cFv                                         */
//	8015D128: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D13C: 8045357C (lit_4069)
//	8015D144: 804535BC (lit_4923)
//	8015D150: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8015D158: 80097E8C (execItemGet__FUc)
//	8015D168: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D17C: 8045357C (lit_4069)
//	8015D184: 804535BC (lit_4923)
//	8015D190: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8015D198: 80097E8C (execItemGet__FUc)
//	8015D1A8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D1BC: 8045357C (lit_4069)
//	8015D1C4: 804535BC (lit_4923)
//	8015D1D0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8015D1D8: 80097E8C (execItemGet__FUc)
//	8015D1E8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D1FC: 8045357C (lit_4069)
//	8015D204: 804535BC (lit_4923)
//	8015D210: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8015D218: 80097E8C (execItemGet__FUc)
//	8015D228: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D23C: 8045357C (lit_4069)
//	8015D244: 804535BC (lit_4923)
//	8015D250: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8015D258: 80097E8C (execItemGet__FUc)
//	8015D268: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D27C: 8045357C (lit_4069)
//	8015D284: 804535BC (lit_4923)
//	8015D290: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8015D298: 80097E8C (execItemGet__FUc)
//	8015D2A8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D2BC: 8045357C (lit_4069)
//	8015D2C4: 804535BC (lit_4923)
//	8015D2D0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8015D2D8: 80097E8C (execItemGet__FUc)
//	8015D2E8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D2FC: 8045357C (lit_4069)
//	8015D304: 804535BC (lit_4923)
//	8015D310: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8015D318: 80097E8C (execItemGet__FUc)
//	8015D328: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D33C: 8045357C (lit_4069)
//	8015D344: 804535BC (lit_4923)
//	8015D350: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8015D358: 80097E8C (execItemGet__FUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::itemGet() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/itemGet__8daItem_cFv.s"
}
#pragma pop


/* 8015D370-8015D3CC 005C+00 s=1 e=0 z=0  None .text      checkCountTimer__8daItem_cFv                                 */
//	8015D394: 804061C0 (g_dComIfG_gameInfo)
//	8015D398: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::checkCountTimer() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/checkCountTimer__8daItem_cFv.s"
}
#pragma pop


/* 8015D3CC-8015D410 0044+00 s=2 e=0 z=0  None .text      checkPlayerGet__8daItem_cFv                                  */
//	8015D3E0: 8015B0B8 (getData__12daItemBase_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::checkPlayerGet() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/checkPlayerGet__8daItem_cFv.s"
}
#pragma pop


/* 8015D410-8015D480 0070+00 s=1 e=0 z=0  None .text      checkYogan__8daItem_cFv                                      */
//	8015D434: 804535A4 (lit_4665)
//	8015D448: 804061C0 (g_dComIfG_gameInfo)
//	8015D44C: 804061C0 (g_dComIfG_gameInfo)
//	8015D458: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	8015D468: 8015D480 (deleteItem__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::checkYogan() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/checkYogan__8daItem_cFv.s"
}
#pragma pop


/* 8015D480-8015D4AC 002C+00 s=2 e=0 z=0  None .text      deleteItem__8daItem_cFv                                      */
//	8015D498: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::deleteItem() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/deleteItem__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804535C0-804535C4 0004+00 s=1 e=0 z=0  None .sdata2    @4979                                                        */
SECTION_SDATA2 static f32 lit_4979 = 19.0f / 20.0f;

/* 8015D4AC-8015D56C 00C0+00 s=1 e=0 z=0  None .text      itemActionForRupee__8daItem_cFv                              */
//	8015D4C4: 804061C0 (g_dComIfG_gameInfo)
//	8015D4C8: 804061C0 (g_dComIfG_gameInfo)
//	8015D4D0: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8015D4D8: 8015D734 (bg_check__8daItem_cFv)
//	8015D500: 804535C0 (lit_4979)
//	8015D534: 8015B0B8 (getData__12daItemBase_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::itemActionForRupee() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/itemActionForRupee__8daItem_cFv.s"
}
#pragma pop


/* 8015D56C-8015D688 011C+00 s=1 e=0 z=0  None .text      itemActionForHeart__8daItem_cFv                              */
//	8015D58C: 80453550 (lit_3857)
//	8015D5A0: 8015B0B8 (getData__12daItemBase_cFv)
//	8015D5A8: 80453550 (lit_3857)
//	8015D5BC: 804061C0 (g_dComIfG_gameInfo)
//	8015D5C0: 804061C0 (g_dComIfG_gameInfo)
//	8015D5C8: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8015D5F4: 80453550 (lit_3857)
//	8015D5FC: 804535BC (lit_4923)
//	8015D610: 80453550 (lit_3857)
//	8015D620: 8015B0B8 (getData__12daItemBase_cFv)
//	8015D62C: 8015B0B8 (getData__12daItemBase_cFv)
//	8015D640: 80439A20 (sincosTable___5JMath)
//	8015D644: 80439A20 (sincosTable___5JMath)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::itemActionForHeart() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/itemActionForHeart__8daItem_cFv.s"
}
#pragma pop


/* 8015D688-8015D700 0078+00 s=1 e=0 z=0  None .text      itemActionForArrow__8daItem_cFv                              */
//	8015D6A0: 804061C0 (g_dComIfG_gameInfo)
//	8015D6A4: 804061C0 (g_dComIfG_gameInfo)
//	8015D6AC: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8015D6B4: 8015D734 (bg_check__8daItem_cFv)
//	8015D6CC: 80453550 (lit_3857)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::itemActionForArrow() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/itemActionForArrow__8daItem_cFv.s"
}
#pragma pop


/* 8015D700-8015D734 0034+00 s=1 e=0 z=0  None .text      itemActionForBoomerang__8daItem_cFv                          */
//	8015D70C: 804061C0 (g_dComIfG_gameInfo)
//	8015D710: 804061C0 (g_dComIfG_gameInfo)
//	8015D71C: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::itemActionForBoomerang() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/itemActionForBoomerang__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804535C4-804535C8 0004+00 s=3 e=0 z=0  None .sdata2    @5050                                                        */
SECTION_SDATA2 static f32 lit_5050 = 5.0f;

/* 804535C8-804535CC 0004+00 s=1 e=0 z=0  None .sdata2    @5051                                                        */
SECTION_SDATA2 static f32 lit_5051 = 3.0f;

/* 8015D734-8015D834 0100+00 s=2 e=0 z=0  None .text      bg_check__8daItem_cFv                                        */
//	8015D758: 804535C4 (lit_5050)
//	8015D76C: 8045357C (lit_4069)
//	8015D770: 8015ADCC (Reflect__FP4cXyzRC13cBgS_PolyInfof)
//	8015D77C: 80267674 (cM_atan2s__Fff)
//	8015D7AC: 804535C4 (lit_5050)
//	8015D7BC: 8015B0B8 (getData__12daItemBase_cFv)
//	8015D7CC: 8015ADCC (Reflect__FP4cXyzRC13cBgS_PolyInfof)
//	8015D7D4: 8015B0B8 (getData__12daItemBase_cFv)
//	8015D7F0: 804535C8 (lit_5051)
//	8015D7FC: 80453550 (lit_3857)
//	8015D81C: 8015D834 (set_bound_se__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::bg_check() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/bg_check__8daItem_cFv.s"
}
#pragma pop


/* 8015D834-8015D95C 0128+00 s=1 e=0 z=0  None .text      set_bound_se__8daItem_cFv                                    */
//	8015D864: 8045359C (lit_4506)
//	8015D86C: 803620AC (__cvt_fp2unsigned)
//	8015D8C0: 8002D06C (dComIfGp_getReverb__Fi)
//	8015D8D4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D8E4: 8045357C (lit_4069)
//	8015D8EC: 804535BC (lit_4923)
//	8015D8F8: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8015D908: 8002D06C (dComIfGp_getReverb__Fi)
//	8015D91C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8015D92C: 8045357C (lit_4069)
//	8015D934: 804535BC (lit_4923)
//	8015D940: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::set_bound_se() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/set_bound_se__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804506A8-804506B0 0004+04 s=1 e=0 z=0  None .sdata     m_timer_max__8daItem_c                                       */
SECTION_SDATA static u32 m_timer_max__8daItem_c[1 + 1 /* padding */] = {
	0x00002710,
	/* padding */
	0x00000000,
};

/* 8015D95C-8015D9F0 0094+00 s=1 e=0 z=0  None .text      CountTimer__8daItem_cFv                                      */
//	8015D980: 804506A8 (m_timer_max__8daItem_c)
//	8015D998: 8015D370 (checkCountTimer__8daItem_cFv)
//	8015D9D4: 80141AE8 (func_80141AE8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::CountTimer() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/CountTimer__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804535CC-804535D0 0004+00 s=1 e=0 z=0  None .sdata2    @5110                                                        */
SECTION_SDATA2 static f32 lit_5110 = 20.0f;

/* 8015D9F0-8015DAAC 00BC+00 s=1 e=0 z=0  None .text      initAction__8daItem_cFv                                      */
//	8015DA04: 8015DAAC (initFlag__8daItem_cFv)
//	8015DA0C: 8015DBF0 (initScale__8daItem_cFv)
//	8015DA18: 8015DC40 (initSpeed__8daItem_cFi)
//	8015DA20: 8015DE38 (initAngle__8daItem_cFv)
//	8015DA28: 8009B77C (isHeart__FUc)
//	8015DA34: 804535C4 (lit_5050)
//	8015DA38: 80267954 (cM_rndF__Ff)
//	8015DA3C: 804535CC (lit_5110)
//	8015DA44: 80453598 (lit_4404)
//	8015DA54: 8015B0B8 (getData__12daItemBase_cFv)
//	8015DA5C: 804535B0 (lit_4668)
//	8015DA78: 8026798C (cM_rndFX__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::initAction() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/initAction__8daItem_cFv.s"
}
#pragma pop


/* 8015DAAC-8015DBF0 0144+00 s=2 e=0 z=0  None .text      initFlag__8daItem_cFv                                        */
//	8015DABC: 803B9DDC (lit_5171)
//	8015DAC0: 803B9DDC (lit_5171)
//	8015DBC0: 803AED78 (item_info__10dItem_data)
//	8015DBC4: 803AED78 (item_info__10dItem_data)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::initFlag() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/initFlag__8daItem_cFv.s"
}
#pragma pop


/* 8015DBF0-8015DC40 0050+00 s=2 e=0 z=0  None .text      initScale__8daItem_cFv                                       */
//	8015DC00: 803B9E04 (lit_5193)
//	8015DC04: 803B9E04 (lit_5193)
//	8015DC18: 80453550 (lit_3857)
//	8015DC2C: 8045357C (lit_4069)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::initScale() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/initScale__8daItem_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804535D0-804535D4 0004+00 s=1 e=0 z=0  None .sdata2    @5230                                                        */
SECTION_SDATA2 static f32 lit_5230 = 7.0f / 10.0f;

/* 804535D4-804535D8 0004+00 s=1 e=0 z=0  None .sdata2    @5231                                                        */
SECTION_SDATA2 static f32 lit_5231 = 6.0f / 5.0f;

/* 804535D8-804535DC 0004+00 s=1 e=0 z=0  None .sdata2    @5232                                                        */
SECTION_SDATA2 static f32 lit_5232 = 11.0f / 20.0f;

/* 804535DC-804535E0 0004+00 s=1 e=0 z=0  None .sdata2    @5233                                                        */
SECTION_SDATA2 static f32 lit_5233 = 50.0f;

/* 8015DC40-8015DE38 01F8+00 s=2 e=0 z=0  None .text      initSpeed__8daItem_cFi                                       */
//	8015DC60: 803621DC (_savegpr_29)
//	8015DC6C: 804061C0 (g_dComIfG_gameInfo)
//	8015DC70: 804061C0 (g_dComIfG_gameInfo)
//	8015DC78: 804535C4 (lit_5050)
//	8015DC7C: 8026798C (cM_rndFX__Ff)
//	8015DC88: 8015B0B8 (getData__12daItemBase_cFv)
//	8015DC98: 8015B0B8 (getData__12daItemBase_cFv)
//	8015DCCC: 80453550 (lit_3857)
//	8015DCEC: 8015B0B8 (getData__12daItemBase_cFv)
//	8015DCF8: 8015B0B8 (getData__12daItemBase_cFv)
//	8015DD10: 8015B0B8 (getData__12daItemBase_cFv)
//	8015DD18: 804535D0 (lit_5230)
//	8015DD24: 8015B0B8 (getData__12daItemBase_cFv)
//	8015DD2C: 804535D0 (lit_5230)
//	8015DD34: 804535A8 (lit_4666)
//	8015DD38: 8026798C (cM_rndFX__Ff)
//	8015DD40: 804535B0 (lit_4668)
//	8015DD80: 8015B0B8 (getData__12daItemBase_cFv)
//	8015DD88: 804535D4 (lit_5231)
//	8015DD94: 8015B0B8 (getData__12daItemBase_cFv)
//	8015DD9C: 804535D8 (lit_5232)
//	8015DDA4: 80453550 (lit_3857)
//	8015DDB0: 804535DC (lit_5233)
//	8015DDB8: 803DD470 (now__14mDoMtx_stack_c)
//	8015DDBC: 803DD470 (now__14mDoMtx_stack_c)
//	8015DDC4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8015DDC8: 803DD470 (now__14mDoMtx_stack_c)
//	8015DDCC: 803DD470 (now__14mDoMtx_stack_c)
//	8015DDD8: 80346D6C (PSMTXMultVec)
//	8015DDE8: 80347090 (PSVECAdd)
//	8015DDF0: 8015B0B8 (getData__12daItemBase_cFv)
//	8015DDFC: 80453550 (lit_3857)
//	8015DE24: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daItem_c::initSpeed(int param_0) {
	nofralloc
#include "asm/a/obj/d_a_obj_item/initSpeed__8daItem_cFi.s"
}
#pragma pop


/* 8015DE38-8015DE50 0018+00 s=1 e=0 z=0  None .text      initAngle__8daItem_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItem_c::initAngle() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/initAngle__8daItem_cFv.s"
}
#pragma pop


/* 8015DE50-8015DE70 0020+00 s=1 e=0 z=0  None .text      daItem_Draw__FP8daItem_c                                     */
//	8015DE5C: 8015BD84 (_daItem_draw__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daItem_c* False
// 	 daItem_c False
asm static void daItem_Draw(daItem_c* param_0) {
	nofralloc
#include "asm/a/obj/d_a_obj_item/daItem_Draw__FP8daItem_c.s"
}
#pragma pop


/* 8015DE70-8015DE90 0020+00 s=1 e=0 z=0  None .text      daItem_Execute__FP8daItem_c                                  */
//	8015DE7C: 8015BA9C (_daItem_execute__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daItem_c* False
// 	 daItem_c False
asm static void daItem_Execute(daItem_c* param_0) {
	nofralloc
#include "asm/a/obj/d_a_obj_item/daItem_Execute__FP8daItem_c.s"
}
#pragma pop


/* 8015DE90-8015DEB0 0020+00 s=1 e=0 z=0  None .text      daItem_Delete__FP8daItem_c                                   */
//	8015DE9C: 8015BDE8 (_daItem_delete__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daItem_c* False
// 	 daItem_c False
asm static void daItem_Delete(daItem_c* param_0) {
	nofralloc
#include "asm/a/obj/d_a_obj_item/daItem_Delete__FP8daItem_c.s"
}
#pragma pop


/* 8015DEB0-8015DED0 0020+00 s=1 e=0 z=0  None .text      daItem_Create__FP10fopAc_ac_c                                */
//	8015DEBC: 8015B7D4 (_daItem_create__8daItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daItem_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/a/obj/d_a_obj_item/daItem_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 8015DED0-8015DFD8 0108+00 s=0 e=0 z=0  None .text      __sinit_d_a_obj_item_cpp                                     */
//	8015DED0: 803B9DA0 (cNullVec__6Z2Calc)
//	8015DED4: 803B9DA0 (cNullVec__6Z2Calc)
//	8015DFB4: 803A2180 (__ptmf_null)
//	8015DFB8: 803A2180 (__ptmf_null)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_item_cpp() {
	nofralloc
#include "asm/a/obj/d_a_obj_item/__sinit_d_a_obj_item_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_8015DED0 = (void*)__sinit_d_a_obj_item_cpp;
#pragma pop


/* 8015DFD8-8015DFF4 001C+00 s=2 e=0 z=0  None .text      getItemPos__9daPy_py_cCFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daPy_py_c::getItemPos() const {
	nofralloc
#include "asm/a/obj/d_a_obj_item/getItemPos__9daPy_py_cCFv.s"
}
#pragma pop


/* 8015DFF4-8015E010 001C+00 s=1 e=1 z=0  None .text      getLeftHandPos__9daPy_py_cCFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void daPy_py_c::getLeftHandPos() const {
	nofralloc
#include "asm/a/obj/d_a_obj_item/getLeftHandPos__9daPy_py_cCFv.s"
}
#pragma pop


