//
// Generated By: dol2asm
// Translation Unit: m_Do/m_Do_MemCardRWmng
//

#include "m_Do/m_Do_MemCardRWmng.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct mDoMemCdRWm_HeaderData {};

struct CARDFileInfo {};

//
// Forward References:
//

void mDoMemCdRWm_Store(CARDFileInfo*, void*, u32);
void mDoMemCdRWm_Restore(CARDFileInfo*, void*, u32);
static void mDoMemCdRWm_BuildHeader(mDoMemCdRWm_HeaderData*);
static void mDoMemCdRWm_SetCardStat(CARDFileInfo*);
static void mDoMemCdRWm_CheckCardStat(CARDFileInfo*);
static void mDoMemCdRWm_CalcCheckSum(void*, u32);
static void mDoMemCdRWm_CalcCheckSumGameData(void*, u32);
void mDoMemCdRWm_TestCheckSumGameData(void*);
void mDoMemCdRWm_SetCheckSumGameData(u8*, u8);

extern "C" void mDoMemCdRWm_Store__FP12CARDFileInfoPvUl();
extern "C" void mDoMemCdRWm_Restore__FP12CARDFileInfoPvUl();
extern "C" static void mDoMemCdRWm_BuildHeader__FP22mDoMemCdRWm_HeaderData();
extern "C" static void mDoMemCdRWm_SetCardStat__FP12CARDFileInfo();
extern "C" static void mDoMemCdRWm_CheckCardStat__FP12CARDFileInfo();
extern "C" static void mDoMemCdRWm_CalcCheckSum__FPvUl();
extern "C" static void mDoMemCdRWm_CalcCheckSumGameData__FPvUl();
extern "C" void mDoMemCdRWm_TestCheckSumGameData__FPv();
extern "C" void mDoMemCdRWm_SetCheckSumGameData__FPUcUc();
extern "C" extern char const* const m_Do_m_Do_MemCardRWmng__stringBase0;

//
// External References:
//

SECTION_INIT void memset();
SECTION_INIT void memcpy();
extern "C" void OSGetTime();
extern "C" void OSTicksToCalendarTime();
extern "C" void CARDRead();
extern "C" void CARDWrite();
extern "C" void CARDGetStatus();
extern "C" void CARDSetStatus();
extern "C" void CARDGetSerialNo();
extern "C" void _savegpr_20();
extern "C" void _savegpr_28();
extern "C" void _restgpr_20();
extern "C" void _restgpr_28();
extern "C" void snprintf();
extern "C" extern u8 g_mDoMemCd_control[8192];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

//
// Declarations:
//

/* ############################################################################################## */
/* 803ECF40-803F0F40 4000+00 s=2 e=0 z=0  None .bss       sTmpBuf */
static u8 sTmpBuf[16384];

/* 80017498-8001769C 0204+00 s=0 e=1 z=0  None .text      mDoMemCdRWm_Store__FP12CARDFileInfoPvUl */
//	800174A8: 803621D8 (_savegpr_28)
//	800174B8: 803ECF40 (sTmpBuf)
//	800174BC: 803ECF40 (sTmpBuf)
//	800174C0: 8001787C (mDoMemCdRWm_BuildHeader__FP22mDoMemCdRWm_HeaderData)
//	800174C8: 803ECF40 (sTmpBuf)
//	800174CC: 803ECF40 (sTmpBuf)
//	800174D8: 80358C48 (CARDWrite)
//	800174EC: 80017B4C (mDoMemCdRWm_CheckCardStat__FP12CARDFileInfo)
//	800174F8: 803ECF40 (sTmpBuf)
//	800174FC: 803ECF40 (sTmpBuf)
//	80017508: 80003458 (memset)
//	80017510: 803ECF40 (sTmpBuf)
//	80017514: 803ECF40 (sTmpBuf)
//	80017520: 80358C48 (CARDWrite)
//	80017534: 803ECF40 (sTmpBuf)
//	80017538: 803ECF40 (sTmpBuf)
//	80017544: 80358C48 (CARDWrite)
//	80017554: 803ECF40 (sTmpBuf)
//	80017558: 803ECF40 (sTmpBuf)
//	80017564: 80003458 (memset)
//	80017568: 803ECF40 (sTmpBuf)
//	8001756C: 803ECF40 (sTmpBuf)
//	80017588: 80003540 (memcpy)
//	8001759C: 80017C74 (mDoMemCdRWm_CalcCheckSum__FPvUl)
//	800175AC: 803ECF40 (sTmpBuf)
//	800175B0: 803ECF40 (sTmpBuf)
//	800175BC: 80358C48 (CARDWrite)
//	800175D0: 803ECF40 (sTmpBuf)
//	800175D4: 803ECF40 (sTmpBuf)
//	800175E0: 803588CC (CARDRead)
//	800175F0: 803ECF40 (sTmpBuf)
//	800175F4: 803ECF40 (sTmpBuf)
//	800175FC: 80017C74 (mDoMemCdRWm_CalcCheckSum__FPvUl)
//	80017614: 803ECF40 (sTmpBuf)
//	80017618: 803ECF40 (sTmpBuf)
//	80017624: 80358C48 (CARDWrite)
//	80017638: 803ECF40 (sTmpBuf)
//	8001763C: 803ECF40 (sTmpBuf)
//	80017648: 803588CC (CARDRead)
//	80017658: 803ECF40 (sTmpBuf)
//	8001765C: 803ECF40 (sTmpBuf)
//	80017664: 80017C74 (mDoMemCdRWm_CalcCheckSum__FPvUl)
//	8001767C: 800179E4 (mDoMemCdRWm_SetCardStat__FP12CARDFileInfo)
//	80017688: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoMemCdRWm_Store(CARDFileInfo* param_0, void* param_1, u32 param_2) {
    nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_Store__FP12CARDFileInfoPvUl.s"
}
#pragma pop

/* 8001769C-8001787C 01E0+00 s=0 e=1 z=0  None .text      mDoMemCdRWm_Restore__FP12CARDFileInfoPvUl
 */
//	800176AC: 803621B8 (_savegpr_20)
//	800176C0: 803ECF40 (sTmpBuf)
//	800176C4: 803ECF40 (sTmpBuf)
//	800176D8: 803588CC (CARDRead)
//	800176EC: 80017CEC (mDoMemCdRWm_TestCheckSumGameData__FPv)
//	800176F8: 80017CEC (mDoMemCdRWm_TestCheckSumGameData__FPv)
//	80017704: 80017CEC (mDoMemCdRWm_TestCheckSumGameData__FPv)
//	8001771C: 803588CC (CARDRead)
//	80017730: 80017CEC (mDoMemCdRWm_TestCheckSumGameData__FPv)
//	8001773C: 80017CEC (mDoMemCdRWm_TestCheckSumGameData__FPv)
//	80017748: 80017CEC (mDoMemCdRWm_TestCheckSumGameData__FPv)
//	8001776C: 80003540 (memcpy)
//	80017790: 80003540 (memcpy)
//	800177B4: 80003540 (memcpy)
//	800177C0: 80017B4C (mDoMemCdRWm_CheckCardStat__FP12CARDFileInfo)
//	800177EC: 80358C48 (CARDWrite)
//	8001780C: 80358C48 (CARDWrite)
//	80017828: 80003540 (memcpy)
//	80017830: 803EAF40 (g_mDoMemCd_control)
//	80017834: 803EAF40 (g_mDoMemCd_control)
//	80017844: 80359158 (CARDGetSerialNo)
//	80017850: 803EAF40 (g_mDoMemCd_control)
//	80017854: 803EAF40 (g_mDoMemCd_control)
//	80017868: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoMemCdRWm_Restore(CARDFileInfo* param_0, void* param_1, u32 param_2) {
    nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_Restore__FP12CARDFileInfoPvUl.s"
}
#pragma pop

/* ############################################################################################## */
/* 80374408-80374460 0051+07 s=1 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80374408 = "Zelda: Twilight Princess";
SECTION_DEAD char const* const stringBase_80374421 = "%d/%d Save Data";
SECTION_DEAD char const* const stringBase_80374431 = "zelda2_gc_banner.bti";
SECTION_DEAD char const* const stringBase_80374446 = "zelda2_gc_icon.bti";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80374459 = "\0\0\0\0\0\0";
#pragma pop

/* 8001787C-800179E4 0168+00 s=1 e=0 z=0  None .text
 * mDoMemCdRWm_BuildHeader__FP22mDoMemCdRWm_HeaderData          */
//	8001788C: 803621D8 (_savegpr_28)
//	8001789C: 80374408 (m_Do_m_Do_MemCardRWmng__stringBase0)
//	800178A0: 80374408 (m_Do_m_Do_MemCardRWmng__stringBase0)
//	800178A8: 803665BC (snprintf)
//	800178AC: 803426FC (OSGetTime)
//	800178B4: 80342974 (OSTicksToCalendarTime)
//	800178C0: 80374408 (m_Do_m_Do_MemCardRWmng__stringBase0)
//	800178C4: 80374408 (m_Do_m_Do_MemCardRWmng__stringBase0)
//	800178DC: 803665BC (snprintf)
//	800178E0: 804061C0 (g_dComIfG_gameInfo)
//	800178E4: 804061C0 (g_dComIfG_gameInfo)
//	800178EC: 80374408 (m_Do_m_Do_MemCardRWmng__stringBase0)
//	800178F0: 80374408 (m_Do_m_Do_MemCardRWmng__stringBase0)
//	80017910: 80374408 (m_Do_m_Do_MemCardRWmng__stringBase0)
//	80017914: 80374408 (m_Do_m_Do_MemCardRWmng__stringBase0)
//	80017948: 80003540 (memcpy)
//	8001795C: 80003540 (memcpy)
//	80017970: 80003540 (memcpy)
//	80017984: 80003540 (memcpy)
//	80017998: 80003540 (memcpy)
//	800179B4: 80003540 (memcpy)
//	800179D0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoMemCdRWm_BuildHeader(mDoMemCdRWm_HeaderData* param_0) {
    nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_BuildHeader__FP22mDoMemCdRWm_HeaderData.s"
}
#pragma pop

/* 800179E4-80017B4C 0168+00 s=1 e=0 z=0  None .text      mDoMemCdRWm_SetCardStat__FP12CARDFileInfo
 */
//	800179FC: 803EAF40 (g_mDoMemCd_control)
//	80017A00: 803EAF40 (g_mDoMemCd_control)
//	80017A10: 80358E88 (CARDGetStatus)
//	80017B30: 80359110 (CARDSetStatus)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoMemCdRWm_SetCardStat(CARDFileInfo* param_0) {
    nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_SetCardStat__FP12CARDFileInfo.s"
}
#pragma pop

/* 80017B4C-80017C74 0128+00 s=2 e=0 z=0  None .text mDoMemCdRWm_CheckCardStat__FP12CARDFileInfo
 */
//	80017B5C: 803EAF40 (g_mDoMemCd_control)
//	80017B60: 803EAF40 (g_mDoMemCd_control)
//	80017B70: 80358E88 (CARDGetStatus)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoMemCdRWm_CheckCardStat(CARDFileInfo* param_0) {
    nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_CheckCardStat__FP12CARDFileInfo.s"
}
#pragma pop

/* 80017C74-80017CB4 0040+00 s=1 e=0 z=0  None .text      mDoMemCdRWm_CalcCheckSum__FPvUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoMemCdRWm_CalcCheckSum(void* param_0, u32 param_1) {
    nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_CalcCheckSum__FPvUl.s"
}
#pragma pop

/* 80017CB4-80017CEC 0038+00 s=2 e=0 z=0  None .text      mDoMemCdRWm_CalcCheckSumGameData__FPvUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoMemCdRWm_CalcCheckSumGameData(void* param_0, u32 param_1) {
    nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_CalcCheckSumGameData__FPvUl.s"
}
#pragma pop

/* 80017CEC-80017D38 004C+00 s=1 e=4 z=0  None .text      mDoMemCdRWm_TestCheckSumGameData__FPv */
//	80017D04: 80017CB4 (mDoMemCdRWm_CalcCheckSumGameData__FPvUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoMemCdRWm_TestCheckSumGameData(void* param_0) {
    nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_TestCheckSumGameData__FPv.s"
}
#pragma pop

/* 80017D38-80017D7C 0044+00 s=0 e=4 z=0  None .text      mDoMemCdRWm_SetCheckSumGameData__FPUcUc */
//	80017D5C: 80017CB4 (mDoMemCdRWm_CalcCheckSumGameData__FPvUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoMemCdRWm_SetCheckSumGameData(u8* param_0, u8 param_1) {
    nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_SetCheckSumGameData__FPUcUc.s"
}
#pragma pop
