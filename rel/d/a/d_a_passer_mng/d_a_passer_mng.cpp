// 
// Generated By: dol2asm
// Translation Unit: d_a_passer_mng
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/d_a_passer_mng/d_a_passer_mng.h"

// 
// Types:
// 

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daPasserMng_c {
	/* 80D45738 */ // True False
void execute();
	/* 80D4597C */ // True False
void getPasserParam();
	/* 80D45E14 */ // True False
//  u32 False
void getLuggageParamHigh(u32);
	/* 80D46768 */ // True False
void create();
	/* 80D467C0 */ // True False
void create_init();
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dPath {
};

struct csXyz {
	/* 802673F4 */ // False False
//  s16 False
//  s16 False
//  s16 False
csXyz(s16, s16, s16);
};

struct cXyz {
};

struct Vec {
};

// 
// Forward References:
// 

// True False
//  daPasserMng_c* False
// 	 daPasserMng_c False
static void daPasserMng_Execute(daPasserMng_c*);
// True False
//  bool False
//  daPasserMng_c* False
// 	 daPasserMng_c False
static bool daPasserMng_IsDelete(daPasserMng_c*);
// True False
//  daPasserMng_c* False
// 	 daPasserMng_c False
static void daPasserMng_Delete(daPasserMng_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daPasserMng_Create(fopAc_ac_c*);
// False True
//  int False
//  int False
void cLib_getRndValue__template0(int, int);

// True False
//  daPasserMng_c* False
// 	 daPasserMng_c False
extern "C" static void daPasserMng_Execute__FP13daPasserMng_c();
// True False
extern "C" void execute__13daPasserMng_cFv();
// True False
extern "C" void getPasserParam__13daPasserMng_cFv();
// True False
//  u32 False
extern "C" void getLuggageParamHigh__13daPasserMng_cFUl();
// True False
//  bool False
//  daPasserMng_c* False
// 	 daPasserMng_c False
extern "C" static bool daPasserMng_IsDelete__FP13daPasserMng_c();
// True False
//  daPasserMng_c* False
// 	 daPasserMng_c False
extern "C" static void daPasserMng_Delete__FP13daPasserMng_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daPasserMng_Create__FP10fopAc_ac_c();
// True False
extern "C" void create__13daPasserMng_cFv();
// True False
extern "C" void create_init__13daPasserMng_cFv();
// False True
//  int False
//  int False
extern "C" void func_80D46B9C();
extern "C" extern void* g_profile_PASSER_MNG[12];

// 
// External References:
// 

// False False
//  unsigned int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void fopAcM_SearchByID(unsigned int, fopAc_ac_c**);
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
void fopAcM_createChild(s16, unsigned int, u32, cXyz const*, int, csXyz const*, cXyz const*, s8, int (*)(void*));
// False False
//  dPath const* False
// 	 dPath const False
// 		 dPath False
//  int False
void dPath_GetPnt(dPath const*, int);
// False False
//  int False
//  int False
void dPath_GetRoomPath(int, int);
// False False
void dKy_getdaytime_hour();
// False False
void dKy_getdaytime_minute();
// False False
void dKy_getDarktime_hour();
// False False
void dKy_getDarktime_minute();
// False False
void dKy_getDarktime_week();
// False False
void dKy_get_dayofweek();
// False False
void dKy_darkworld_check();
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const&, Vec const&);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new[](u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete[](void*);

// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  unsigned int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void fopAcM_SearchByID__FUiPP10fopAc_ac_c();
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  dPath const* False
// 	 dPath const False
// 		 dPath False
//  int False
extern "C" void dPath_GetPnt__FPC5dPathi();
// False False
//  int False
//  int False
extern "C" void dPath_GetRoomPath__Fii();
// False False
extern "C" void dKy_getdaytime_hour__Fv();
// False False
extern "C" void dKy_getdaytime_minute__Fv();
// False False
extern "C" void dKy_getDarktime_hour__Fv();
// False False
extern "C" void dKy_getDarktime_minute__Fv();
// False False
extern "C" void dKy_getDarktime_week__Fv();
// False False
extern "C" void dKy_get_dayofweek__Fv();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
//  s16 False
//  s16 False
//  s16 False
extern "C" void __ct__5csXyzFsss();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FRC3VecRC3Vec();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nwa__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dla__FPv();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

// 
// Declarations:
// 

/* 80D45718-80D45738 0020+00 s=1 e=0 z=0  None .text      daPasserMng_Execute__FP13daPasserMng_c                       */
//	80D45724: 80D45738 (execute__13daPasserMng_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daPasserMng_c* False
// 	 daPasserMng_c False
asm static void daPasserMng_Execute(daPasserMng_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_passer_mng/d_a_passer_mng/daPasserMng_Execute__FP13daPasserMng_c.s"
}
#pragma pop


/* 80D45738-80D4597C 0244+00 s=1 e=0 z=0  None .text      execute__13daPasserMng_cFv                                   */
//	80D45748: 803621D0 (_savegpr_26)
//	80D45750: 801AC57C (dKy_darkworld_check__Fv)
//	80D4575C: 8019FB30 (dKy_getDarktime_minute__Fv)
//	80D45768: 8019FA3C (dKy_getdaytime_minute__Fv)
//	80D45770: 801AC57C (dKy_darkworld_check__Fv)
//	80D4577C: 8019FAF4 (dKy_getDarktime_hour__Fv)
//	80D45784: 8019FA10 (dKy_getdaytime_hour__Fv)
//	80D457B4: 801AC57C (dKy_darkworld_check__Fv)
//	80D457C0: 8019FBBC (dKy_getDarktime_week__Fv)
//	80D457CC: 801A8B38 (dKy_get_dayofweek__Fv)
//	80D45810: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	80D4586C: 802673F4 (__ct__5csXyzFsss)
//	80D45890: 80D4597C (getPasserParam__13daPasserMng_cFv)
//	80D458BC: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	80D45968: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daPasserMng_c::execute() {
	nofralloc
#include "asm/rel/d/a/d_a_passer_mng/d_a_passer_mng/execute__13daPasserMng_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D46C20-80D46C40 0020+00 s=1 e=0 z=0  None .rodata    groupA                                                       */
SECTION_RODATA static u8 const groupA[32] = {
	0x07, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x04, 0x50, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00, 0x07,
	0x01, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x1B, 0x01, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1D,
};

/* 80D46C40-80D46C64 0024+00 s=1 e=0 z=0  None .rodata    groupB                                                       */
SECTION_RODATA static u8 const groupB[36] = {
	0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x12,
	0x10, 0x00, 0x00, 0x13, 0x40, 0x00, 0x00, 0x09, 0x40, 0x00, 0x00, 0x08, 0x50, 0x00, 0x00, 0x0A,
	0x01, 0x00, 0x00, 0x0B,
};

/* 80D46C64-80D46C88 0024+00 s=1 e=0 z=0  None .rodata    groupC                                                       */
SECTION_RODATA static u8 const groupC[36] = {
	0x08, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x01, 0x50, 0x00, 0x00, 0x02,
	0x01, 0x00, 0x00, 0x03, 0x21, 0x00, 0x00, 0x17, 0x10, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x19,
	0x10, 0x00, 0x00, 0x1A,
};

/* 80D46C88-80D46CA8 0020+00 s=1 e=0 z=0  None .rodata    groupD                                                       */
SECTION_RODATA static u8 const groupD[32] = {
	0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x14, 0x21, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x16,
	0x11, 0x00, 0x00, 0x0C, 0x50, 0x00, 0x00, 0x0E, 0x40, 0x00, 0x00, 0x0F, 0x01, 0x00, 0x00, 0x0D,
};

/* 80D46CB0-80D46CC0 0010+00 s=1 e=0 z=0  None .data      mGroupTbl__13daPasserMng_c                                   */
SECTION_DATA static void* mGroupTbl__13daPasserMng_c[4] = {
	(void*)&groupA,
	(void*)&groupB,
	(void*)&groupC,
	(void*)&groupD,
};

/* 80D46CC0-80D46D38 0078+00 s=1 e=0 z=0  None .data      @4134                                                        */
SECTION_DATA static void* lit_4134[30] = {
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x168),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x168),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x184),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x1CC),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x200),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x200),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x248),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x27C),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x184),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x184),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x184),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x1CC),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x200),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x200),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x248),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x184),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x2B0),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x2F8),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x340),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x394),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x3C8),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x3FC),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x430),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x2B0),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x2F8),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x340),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x394),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x3C8),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x3FC),
	(void*)(((char*)getPasserParam__13daPasserMng_cFv)+0x430),
};

/* 80D4597C-80D45E14 0498+00 s=3 e=0 z=0  None .text      getPasserParam__13daPasserMng_cFv                            */
//	80D4598C: 803621DC (_savegpr_29)
//	80D459D0: 80D46CB0 (mGroupTbl__13daPasserMng_c)
//	80D459D4: 80D46CB0 (mGroupTbl__13daPasserMng_c)
//	80D459E4: 80D46B9C (func_80D46B9C)
//	80D45AB0: 80D45E14 (getLuggageParamHigh__13daPasserMng_cFUl)
//	80D45ACC: 80D46CC0 (lit_4134)
//	80D45AD0: 80D46CC0 (lit_4134)
//	80D45AEC: 80D46B9C (func_80D46B9C)
//	80D45B08: 80D46B9C (func_80D46B9C)
//	80D45B50: 80D46B9C (func_80D46B9C)
//	80D45B84: 80D46B9C (func_80D46B9C)
//	80D45BCC: 80D46B9C (func_80D46B9C)
//	80D45C00: 80D46B9C (func_80D46B9C)
//	80D45C34: 80D46B9C (func_80D46B9C)
//	80D45C7C: 80D46B9C (func_80D46B9C)
//	80D45CC4: 80D46B9C (func_80D46B9C)
//	80D45D18: 80D46B9C (func_80D46B9C)
//	80D45D4C: 80D46B9C (func_80D46B9C)
//	80D45D80: 80D46B9C (func_80D46B9C)
//	80D45DB4: 80D46B9C (func_80D46B9C)
//	80D45E00: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daPasserMng_c::getPasserParam() {
	nofralloc
#include "asm/rel/d/a/d_a_passer_mng/d_a_passer_mng/getPasserParam__13daPasserMng_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D46D38-80D46DB0 0078+00 s=1 e=0 z=0  None .data      @4305                                                        */
SECTION_DATA static void* lit_4305[30] = {
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x34),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x34),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x50),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x110),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x1B0),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x1B0),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x27C),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x31C),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x50),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x50),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x50),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x110),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x1B0),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x1B0),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x27C),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x50),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x3BC),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x488),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x548),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x620),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x6C0),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x760),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x814),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x3BC),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x488),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x548),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x620),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x6C0),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x760),
	(void*)(((char*)getLuggageParamHigh__13daPasserMng_cFUl)+0x814),
};

/* 80D45E14-80D466FC 08E8+00 s=2 e=0 z=0  None .text      getLuggageParamHigh__13daPasserMng_cFUl                      */
//	80D45E30: 80D46D38 (lit_4305)
//	80D45E34: 80D46D38 (lit_4305)
//	80D45E50: 80D46B9C (func_80D46B9C)
//	80D45E64: 804061C0 (g_dComIfG_gameInfo)
//	80D45E68: 804061C0 (g_dComIfG_gameInfo)
//	80D45E70: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D45E74: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D45E7C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D45E90: 80D46B9C (func_80D46B9C)
//	80D45EE4: 80D46B9C (func_80D46B9C)
//	80D45F24: 804061C0 (g_dComIfG_gameInfo)
//	80D45F28: 804061C0 (g_dComIfG_gameInfo)
//	80D45F30: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D45F34: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D45F3C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D45F50: 80D46B9C (func_80D46B9C)
//	80D45F98: 80D46B9C (func_80D46B9C)
//	80D45FC4: 804061C0 (g_dComIfG_gameInfo)
//	80D45FC8: 804061C0 (g_dComIfG_gameInfo)
//	80D45FD0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D45FD4: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D45FDC: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D45FF0: 80D46B9C (func_80D46B9C)
//	80D46044: 80D46B9C (func_80D46B9C)
//	80D46090: 804061C0 (g_dComIfG_gameInfo)
//	80D46094: 804061C0 (g_dComIfG_gameInfo)
//	80D4609C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D460A0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D460A8: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D460BC: 80D46B9C (func_80D46B9C)
//	80D46104: 80D46B9C (func_80D46B9C)
//	80D46130: 804061C0 (g_dComIfG_gameInfo)
//	80D46134: 804061C0 (g_dComIfG_gameInfo)
//	80D4613C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D46140: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D46148: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D4615C: 80D46B9C (func_80D46B9C)
//	80D461A4: 80D46B9C (func_80D46B9C)
//	80D461D0: 804061C0 (g_dComIfG_gameInfo)
//	80D461D4: 804061C0 (g_dComIfG_gameInfo)
//	80D461DC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D461E0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D461E8: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D461FC: 80D46B9C (func_80D46B9C)
//	80D46250: 80D46B9C (func_80D46B9C)
//	80D4629C: 804061C0 (g_dComIfG_gameInfo)
//	80D462A0: 804061C0 (g_dComIfG_gameInfo)
//	80D462A8: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D462AC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D462B4: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D462C8: 80D46B9C (func_80D46B9C)
//	80D4631C: 80D46B9C (func_80D46B9C)
//	80D4635C: 804061C0 (g_dComIfG_gameInfo)
//	80D46360: 804061C0 (g_dComIfG_gameInfo)
//	80D46368: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D4636C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D46374: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D46388: 80D46B9C (func_80D46B9C)
//	80D463E8: 80D46B9C (func_80D46B9C)
//	80D46434: 804061C0 (g_dComIfG_gameInfo)
//	80D46438: 804061C0 (g_dComIfG_gameInfo)
//	80D46440: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D46444: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D4644C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D46460: 80D46B9C (func_80D46B9C)
//	80D464A8: 80D46B9C (func_80D46B9C)
//	80D464D4: 804061C0 (g_dComIfG_gameInfo)
//	80D464D8: 804061C0 (g_dComIfG_gameInfo)
//	80D464E0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D464E4: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D464EC: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D46500: 80D46B9C (func_80D46B9C)
//	80D46548: 80D46B9C (func_80D46B9C)
//	80D46574: 804061C0 (g_dComIfG_gameInfo)
//	80D46578: 804061C0 (g_dComIfG_gameInfo)
//	80D46580: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D46584: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D4658C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D465A0: 80D46B9C (func_80D46B9C)
//	80D465E8: 80D46B9C (func_80D46B9C)
//	80D46628: 804061C0 (g_dComIfG_gameInfo)
//	80D4662C: 804061C0 (g_dComIfG_gameInfo)
//	80D46634: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D46638: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D46640: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D46654: 80D46B9C (func_80D46B9C)
//	80D466A8: 80D46B9C (func_80D46B9C)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void daPasserMng_c::getLuggageParamHigh(u32 param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_passer_mng/d_a_passer_mng/getLuggageParamHigh__13daPasserMng_cFUl.s"
}
#pragma pop


/* 80D466FC-80D46704 0008+00 s=1 e=0 z=0  None .text      daPasserMng_IsDelete__FP13daPasserMng_c                      */
// True False
//  bool False
//  daPasserMng_c* False
// 	 daPasserMng_c False
static bool daPasserMng_IsDelete(daPasserMng_c* param_0) {
	return true;
}


/* 80D46704-80D46748 0044+00 s=1 e=0 z=0  None .text      daPasserMng_Delete__FP13daPasserMng_c                        */
//	80D46720: 802CED60 (__dla__FPv)
//	80D4672C: 80018C8C (__dt__10fopAc_ac_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daPasserMng_c* False
// 	 daPasserMng_c False
asm static void daPasserMng_Delete(daPasserMng_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_passer_mng/d_a_passer_mng/daPasserMng_Delete__FP13daPasserMng_c.s"
}
#pragma pop


/* 80D46748-80D46768 0020+00 s=1 e=0 z=0  None .text      daPasserMng_Create__FP10fopAc_ac_c                           */
//	80D46754: 80D46768 (create__13daPasserMng_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daPasserMng_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_passer_mng/d_a_passer_mng/daPasserMng_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80D46768-80D467C0 0058+00 s=1 e=0 z=0  None .text      create__13daPasserMng_cFv                                    */
//	80D46790: 80018B64 (__ct__10fopAc_ac_cFv)
//	80D467A4: 80D467C0 (create_init__13daPasserMng_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daPasserMng_c::create() {
	nofralloc
#include "asm/rel/d/a/d_a_passer_mng/d_a_passer_mng/create__13daPasserMng_cFv.s"
}
#pragma pop


/* 80D467C0-80D46B9C 03DC+00 s=1 e=0 z=0  None .text      create_init__13daPasserMng_cFv                               */
//	80D467D0: 803621CC (_savegpr_25)
//	80D46800: 800517EC (dPath_GetRoomPath__Fii)
//	80D46810: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80D46820: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80D46848: 80270C3C (cLib_targetAngleY__FRC3VecRC3Vec)
//	80D46858: 802CECC4 (__nwa__FUl)
//	80D46868: 801AC57C (dKy_darkworld_check__Fv)
//	80D46874: 8019FB30 (dKy_getDarktime_minute__Fv)
//	80D46880: 8019FA3C (dKy_getdaytime_minute__Fv)
//	80D46888: 801AC57C (dKy_darkworld_check__Fv)
//	80D46894: 8019FAF4 (dKy_getDarktime_hour__Fv)
//	80D4689C: 8019FA10 (dKy_getdaytime_hour__Fv)
//	80D468BC: 801AC57C (dKy_darkworld_check__Fv)
//	80D468C8: 8019FBBC (dKy_getDarktime_week__Fv)
//	80D468D4: 801A8B38 (dKy_get_dayofweek__Fv)
//	80D46A0C: 802CECC4 (__nwa__FUl)
//	80D46A30: 80D46B9C (func_80D46B9C)
//	80D46A94: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80D46AA8: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80D46AD0: 80270C3C (cLib_targetAngleY__FRC3VecRC3Vec)
//	80D46AE8: 802673F4 (__ct__5csXyzFsss)
//	80D46B0C: 80D4597C (getPasserParam__13daPasserMng_cFv)
//	80D46B38: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	80D46B80: 802CED60 (__dla__FPv)
//	80D46B88: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daPasserMng_c::create_init() {
	nofralloc
#include "asm/rel/d/a/d_a_passer_mng/d_a_passer_mng/create_init__13daPasserMng_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D46CA8-80D46CB0 0008+00 s=1 e=0 z=0  None .rodata    @4430                                                        */
SECTION_RODATA static u8 const lit_4430[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80D46B9C-80D46C18 007C+00 s=3 e=0 z=0  None .text      cLib_getRndValue<i>__Fii                                     */
//	80D46BB0: 80D46CA8 (lit_4430)
//	80D46BB4: 80D46CA8 (lit_4430)
//	80D46BD0: 80267954 (cM_rndF__Ff)
//	80D46BD4: 80D46CA8 (lit_4430)
//	80D46BD8: 80D46CA8 (lit_4430)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int False
//  int False
asm void cLib_getRndValue__template0(int param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_passer_mng/d_a_passer_mng/func_80D46B9C.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D46DB0-80D46DD0 0020+00 s=1 e=0 z=0  None .data      l_daPasserMng_Method                                         */
SECTION_DATA static void* l_daPasserMng_Method[8] = {
	(void*)daPasserMng_Create__FP10fopAc_ac_c,
	(void*)daPasserMng_Delete__FP13daPasserMng_c,
	(void*)daPasserMng_Execute__FP13daPasserMng_c,
	(void*)daPasserMng_IsDelete__FP13daPasserMng_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80D46DD0-80D46E00 0030+00 s=0 e=0 z=1  None .data      g_profile_PASSER_MNG                                         */
SECTION_DATA void* g_profile_PASSER_MNG[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x028E0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000598,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01950000,
	(void*)&l_daPasserMng_Method,
	(void*)0x00040100,
	(void*)NULL,
};

