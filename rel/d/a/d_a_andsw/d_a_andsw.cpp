// 
// Generated By: dol2asm
// Translation Unit: d_a_andsw
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/d_a_andsw/d_a_andsw.h"

// 
// Types:
// 

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct daAndsw_c {
	/* 80457978 */ // True False
void Create();
	/* 804579B8 */ // True False
void create();
	/* 80457A20 */ // True False
void execute();
	/* 80457ABC */ // True False
//  bool False
bool _delete();
};

struct dSv_info_c {
	/* 800352B0 */ // False False
//  int False
//  int False
void offSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

// 
// Forward References:
// 

// True False
//  daAndsw_c* False
// 	 daAndsw_c False
static void daAndsw_Execute(daAndsw_c*);
// True False
//  daAndsw_c* False
// 	 daAndsw_c False
static void daAndsw_Delete(daAndsw_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daAndsw_Create(fopAc_ac_c*);

// True False
extern "C" void Create__9daAndsw_cFv();
// True False
extern "C" void create__9daAndsw_cFv();
// True False
extern "C" void execute__9daAndsw_cFv();
// True False
//  bool False
extern "C" bool _delete__9daAndsw_cFv();
// True False
//  daAndsw_c* False
// 	 daAndsw_c False
extern "C" static void daAndsw_Execute__FP9daAndsw_c();
// True False
//  daAndsw_c* False
// 	 daAndsw_c False
extern "C" static void daAndsw_Delete__FP9daAndsw_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daAndsw_Create__FP10fopAc_ac_c();
extern "C" extern void* g_profile_ANDSW[12];

// 
// External References:
// 

// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);

// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  int False
//  int False
extern "C" void offSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

// 
// Declarations:
// 

/* 80457978-804579B8 0040+00 s=1 e=0 z=0  None .text      Create__9daAndsw_cFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daAndsw_c::Create() {
	nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/Create__9daAndsw_cFv.s"
}
#pragma pop


/* 804579B8-80457A20 0068+00 s=1 e=0 z=0  None .text      create__9daAndsw_cFv                                         */
//	804579E0: 80018B64 (__ct__10fopAc_ac_cFv)
//	804579F4: 80457978 (Create__9daAndsw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daAndsw_c::create() {
	nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/func_804579B8.s"
}
#pragma pop


/* 80457A20-80457ABC 009C+00 s=1 e=0 z=0  None .text      execute__9daAndsw_cFv                                        */
//	80457A34: 804061C0 (g_dComIfG_gameInfo)
//	80457A38: 804061C0 (g_dComIfG_gameInfo)
//	80457A48: 80035360 (isSwitch__10dSv_info_cCFii)
//	80457A74: 804061C0 (g_dComIfG_gameInfo)
//	80457A78: 804061C0 (g_dComIfG_gameInfo)
//	80457A88: 800352B0 (offSwitch__10dSv_info_cFii)
//	80457AA0: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daAndsw_c::execute() {
	nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/execute__9daAndsw_cFv.s"
}
#pragma pop


/* 80457ABC-80457AC4 0008+00 s=1 e=0 z=0  None .text      _delete__9daAndsw_cFv                                        */
// True False
//  bool False
bool daAndsw_c::_delete() {
	return true;
}


/* 80457AC4-80457AE4 0020+00 s=1 e=0 z=0  None .text      daAndsw_Execute__FP9daAndsw_c                                */
//	80457AD0: 80457A20 (execute__9daAndsw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daAndsw_c* False
// 	 daAndsw_c False
asm static void daAndsw_Execute(daAndsw_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/daAndsw_Execute__FP9daAndsw_c.s"
}
#pragma pop


/* 80457AE4-80457B04 0020+00 s=1 e=0 z=0  None .text      daAndsw_Delete__FP9daAndsw_c                                 */
//	80457AF0: 80457ABC (_delete__9daAndsw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daAndsw_c* False
// 	 daAndsw_c False
asm static void daAndsw_Delete(daAndsw_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/daAndsw_Delete__FP9daAndsw_c.s"
}
#pragma pop


/* 80457B04-80457B24 0020+00 s=1 e=0 z=0  None .text      daAndsw_Create__FP10fopAc_ac_c                               */
//	80457B10: 804579B8 (create__9daAndsw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daAndsw_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/daAndsw_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80457B2C-80457B4C 0020+00 s=1 e=0 z=0  None .data      l_daAndsw_Method                                             */
SECTION_DATA static void* l_daAndsw_Method[8] = {
	(void*)daAndsw_Create__FP10fopAc_ac_c,
	(void*)daAndsw_Delete__FP9daAndsw_c,
	(void*)daAndsw_Execute__FP9daAndsw_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80457B4C-80457B7C 0030+00 s=0 e=0 z=1  None .data      g_profile_ANDSW                                              */
SECTION_DATA void* g_profile_ANDSW[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02300000,
	(void*)&g_fpcLf_Method,
	(void*)0x0000056C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x012E0000,
	(void*)&l_daAndsw_Method,
	(void*)0x00040000,
	(void*)0x000E0000,
};

