// 
// Generated By: dol2asm
// Translation Unit: d_a_b_gnd
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/b/d_a_b_gnd/d_a_b_gnd.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct mDoMtx_stack_c {
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
	/* 806009F8 */ // True False
//  Vec* False
// 	 Vec False
void multVecZero(Vec*);
};

struct _GXColor {
};

struct mDoGph_gInf_c {
	/* 80007FD8 */ // False False
//  f32 False
//  _GXColor& False
// 	 _GXColor False
void fadeOut(f32, _GXColor&);
};

struct mDoExt_morf_c {
	/* 806024AC */ // True False
//  f32 False
void setFrame(f32);
	/* 806024EC */ // True False
void isStop();
};

struct J3DAnmTexPattern {
};

struct J3DMaterialTable {
};

struct mDoExt_btpAnm {
	/* 8000D54C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTexPattern* False
// 	 J3DAnmTexPattern False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTexPattern*, int, int, f32, s16, s16);
	/* 8000D5E8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  s16 False
void entry(J3DMaterialTable*, s16);
};

struct J3DAnmTextureSRTKey {
};

struct mDoExt_btkAnm {
	/* 8000D63C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTevRegKey {
};

struct mDoExt_brkAnm {
	/* 8000D70C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct mDoExt_McaMorf {
	/* 8000FC4C */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  int False
//  void* False
// 	 void False
//  u32 False
//  u32 False
mDoExt_McaMorf(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, int, void*, u32, u32);
	/* 800105C8 */ // False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
void play(Vec*, u32, s8);
	/* 80010680 */ // False False
void entryDL();
	/* 800106AC */ // False False
void modelCalc();
};

struct mDoExt_3DlineMat_c {
};

struct mDoExt_3DlineMatSortPacket {
	/* 80014738 */ // False False
//  mDoExt_3DlineMat_c* False
// 	 mDoExt_3DlineMat_c False
void setMat(mDoExt_3DlineMat_c*);
};

struct dKy_tevstr_c {
};

struct ResTIMG {
};

struct mDoExt_3DlineMat1_c {
	/* 80013360 */ // False False
//  u16 False
//  u16 False
//  ResTIMG* False
// 	 ResTIMG False
//  int False
void init(u16, u16, ResTIMG*, int);
	/* 80013FB0 */ // False False
//  int False
//  _GXColor& False
// 	 _GXColor False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void update(int, _GXColor&, dKy_tevstr_c*);
	/* 80601D24 */ // True False
mDoExt_3DlineMat1_c();
};

struct mDoCPd_c {
	/* 80602368 */ // True False
//  u32 False
void getTrigA(u32);
};

struct g_himo_s {
	/* 80601D40 */ // True False
~g_himo_s();
	/* 80601DA0 */ // True False
g_himo_s();
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 805F53A4 */ // True False
~cXyz();
	/* 80601DE8 */ // True False
cXyz();
	/* 8060248C */ // True False
//  f32 False
//  f32 False
//  f32 False
cXyz(f32, f32, f32);
	/* 8060234C */ // True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
cXyz(cXyz const&);
	/* 806025C4 */ // True False
//  f32 False
//  f32 False
//  f32 False
void set(f32, f32, f32);
	/* 806025D4 */ // True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void operator=(cXyz const&);
};

struct fopEn_enemy_c {
	/* 80600A1C */ // True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void setDownPos(cXyz const*);
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct daPy_py_c {
	/* 8015F398 */ // False False
void checkMasterSwordEquip();
	/* 80602338 */ // True False
void cancelOriginalDemo();
	/* 80602590 */ // True False
//  u32 False
//  int False
//  int False
//  s16 False
void changeDemoMode(u32, int, int, s16);
	/* 806025A4 */ // True False
void changeOriginalDemo();
};

struct daHorse_c {
	/* 806025B8 */ // True False
//  u32 False
//  int False
void changeDemoMode(u32, int);
	/* 806025F0 */ // True False
void changeOriginalDemo();
};

struct daB_GND_HIO_c {
	/* 805F4A4C */ // True False
daB_GND_HIO_c();
	/* 80602230 */ // True False
~daB_GND_HIO_c();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
	/* 8006FB10 */ // False False
//  int False
//  int False
//  cXyz False
void StartQuake(int, int, cXyz);
	/* 8006FD94 */ // False False
//  int False
void StopQuake(int);
};

struct dSv_danBit_c {
	/* 80034B98 */ // False False
//  int False
void onSwitch(int);
	/* 80034BE8 */ // False False
//  int False
void isSwitch(int) const;
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
	/* 802673F4 */ // False False
//  s16 False
//  s16 False
//  s16 False
csXyz(s16, s16, s16);
	/* 80600A38 */ // True False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void operator=(csXyz const&);
};

struct dPa_control_c {
	struct level_c {
		/* 8004B8B4 */ // False False
//  u32 False
void forceOnEventMove(u32);
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004C218 */ // False False
//  u16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
void setHitMark(u16, fopAc_ac_c*, cXyz const*, csXyz const*, cXyz const*, u32);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F90 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void init(fopAc_ac_c*, int, int, fopAc_ac_c**);
	/* 8024A2D8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void doFlow(fopAc_ac_c*, fopAc_ac_c**, int);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct J3DModel {
	/* 80602404 */ // True False
//  int False
void getAnmMtx(int);
};

struct dDlst_shadowControl_c {
	/* 80055F1C */ // False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
void addReal(u32, J3DModel*);
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_SrcCyl {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 80601F24 */ // True False
~dCcD_Sph();
	/* 80601FF0 */ // True False
dCcD_Sph();
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 80602074 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dCamera_c {
	/* 801614AC */ // False False
void Start();
	/* 801614D0 */ // False False
void Stop();
	/* 8016300C */ // False False
//  s32 False
void SetTrimSize(s32);
	/* 80180AE0 */ // False False
//  cXyz False
//  cXyz False
//  f32 False
//  s16 False
void Set(cXyz, cXyz, f32, s16);
	/* 80180C18 */ // False False
//  cXyz False
//  cXyz False
void Reset(cXyz, cXyz);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjGndChk_Spl {
	/* 800777B0 */ // False False
dBgS_ObjGndChk_Spl();
	/* 80077848 */ // False False
~dBgS_ObjGndChk_Spl();
};

struct dBgS_ObjAcch {
	/* 806020D0 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80602140 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80601E94 */ // True False
~cM3dGSph();
};

struct cM3dGPla {
	/* 805F5EF4 */ // True False
~cM3dGPla();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80601E4C */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80601EDC */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 806021E8 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_LinChk {
};

struct cBgS_GndChk {
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
	/* 80267D0C */ // False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void SetPos(Vec const*);
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct b_gnd_class {
	/* 80601960 */ // True False
b_gnd_class();
};

struct _GXTexObj {
};

struct Z2StatusMgr {
	/* 802B61E8 */ // False False
//  char* False
// 	 char False
void setDemoName(char*);
};

struct Z2SoundObjSimple {
	/* 802BE844 */ // False False
Z2SoundObjSimple();
	/* 80601DEC */ // True False
~Z2SoundObjSimple();
};

struct Z2SoundObjBase {
	/* 802BDF48 */ // False False
~Z2SoundObjBase();
	/* 802BDFF8 */ // False False
void deleteObject();
};

struct Z2SeqMgr {
	/* 802AF010 */ // False False
//  u32 False
//  u32 False
//  s32 False
void bgmStart(u32, u32, s32);
	/* 802AF408 */ // False False
//  u32 False
//  s32 False
void bgmStop(u32, s32);
	/* 802AFB94 */ // False False
//  u32 False
void bgmStreamPrepare(u32);
	/* 802AFE18 */ // False False
void bgmStreamPlay();
	/* 802AFF8C */ // False False
//  s32 False
void changeBgmStatus(s32);
};

struct Z2SeMgr {
	/* 802AD9F4 */ // False False
//  f32 False
//  u32 False
void seMoveVolumeAll(f32, u32);
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C10B4 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
//  u8 False
void init(Vec*, Vec*, Vec*, u8, u8, u8);
	/* 802C1B7C */ // False False
//  bool False
void setLinkSearch(bool);
	/* 802C1B90 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void setEnemyName(char const*);
};

struct JPABaseEmitter {
	/* 8027EC60 */ // False False
void deleteAllParticle();
};

struct J3DLightObj {
	/* 806021B0 */ // True False
J3DLightObj();
};

struct J3DLightInfo {
	/* 803256C4 */ // False False
//  J3DLightInfo const& False
// 	 J3DLightInfo const False
// 		 J3DLightInfo False
void operator=(J3DLightInfo const&);
};

struct J3DJoint {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
	/* 80601468 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void anm_init(b_gnd_class*, int, f32, u8, f32);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void h_anm_init(b_gnd_class*, int, f32, u8, f32);
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
static void nodeCallBack(J3DJoint*, int);
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
static void h_nodeCallBack(J3DJoint*, int);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void daB_GND_Draw(b_gnd_class*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void shot_s_sub(void*, void*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void gake_check(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void saku_jump_check(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_h_wait(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_h_wait2(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_h_run_a(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_h_run_p(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_h_jump(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_h_end(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_g_wait(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_g_attack(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_g_defence(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_g_jump(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_g_side(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_g_tuba(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_g_damage(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_g_down(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void b_gnd_g_end(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void damage_check(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void eff_set_h(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void eff_set(b_gnd_class*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_fkdel_sub(void*, void*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_objgbdel_sub(void*, void*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void h_damage_check(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void action(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  int False
static void ball_bg_check(b_gnd_class*, int);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  cXyz* False
// 	 cXyz False
//  int False
//  s8 False
static void himo_control1(b_gnd_class*, cXyz*, int, s8);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  cXyz* False
// 	 cXyz False
//  int False
//  s8 False
static void himo_control2(b_gnd_class*, cXyz*, int, s8);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  f32 False
static void cam_3d_morf(b_gnd_class*, f32);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void cam_spd_set(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void demo_camera(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void anm_se_set(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void daB_GND_Execute(b_gnd_class*);
// True False
//  bool False
//  b_gnd_class* False
// 	 b_gnd_class False
static bool daB_GND_IsDelete(b_gnd_class*);
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
static void daB_GND_Delete(b_gnd_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daB_GND_Create(fopAc_ac_c*);
// True False
//  u32 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
static void dComIfGp_particle_set(u32, u16, cXyz const*, csXyz const*, cXyz const*);
// True False
//  u16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
static void dComIfGp_setHitMark(u16, fopAc_ac_c*, cXyz const*, csXyz const*, cXyz const*, u32);
// True False
//  u8 False
//  u8 False
static void dComIfGp_setDoStatusForce(u8, u8);
// True False
static void daPy_getPlayerActorClass();
// True False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
static void dComIfGp_particle_set(u16, cXyz const*, csXyz const*, cXyz const*);
// True False
//  int False
static void dComIfGp_getCamera(int);
// True False
//  int False
static void dComIfGp_getPlayerCameraID(int);
// True False
//  int False
static void dComIfGp_getPlayer(int);

// True False
extern "C" void __ct__13daB_GND_HIO_cFv();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void anm_init__FP11b_gnd_classifUcf();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void h_anm_init__FP11b_gnd_classifUcf();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" static void nodeCallBack__FP8J3DJointi();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" static void h_nodeCallBack__FP8J3DJointi();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void daB_GND_Draw__FP11b_gnd_class();
// True False
extern "C" void __dt__4cXyzFv();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void shot_s_sub__FPvPv();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void gake_check__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void saku_jump_check__FP11b_gnd_class();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_h_wait__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_h_wait2__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_h_run_a__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_h_run_p__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_h_jump__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_h_end__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_g_wait__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_g_attack__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_g_defence__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_g_jump__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_g_side__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_g_tuba__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_g_damage__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_g_down__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void b_gnd_g_end__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void damage_check__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void eff_set_h__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void eff_set__FP11b_gnd_class();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_fkdel_sub__FPvPv();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_objgbdel_sub__FPvPv();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void h_damage_check__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void action__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  int False
extern "C" static void ball_bg_check__FP11b_gnd_classi();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  cXyz* False
// 	 cXyz False
//  int False
//  s8 False
extern "C" static void himo_control1__FP11b_gnd_classP4cXyziSc();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  cXyz* False
// 	 cXyz False
//  int False
//  s8 False
extern "C" static void himo_control2__FP11b_gnd_classP4cXyziSc();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  f32 False
extern "C" static void cam_3d_morf__FP11b_gnd_classf();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void cam_spd_set__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void demo_camera__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void anm_se_set__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void daB_GND_Execute__FP11b_gnd_class();
// True False
//  Vec* False
// 	 Vec False
extern "C" void multVecZero__14mDoMtx_stack_cFP3Vec();
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void setDownPos__13fopEn_enemy_cFPC4cXyz();
// True False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void __as__5csXyzFRC5csXyz();
// True False
//  bool False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static bool daB_GND_IsDelete__FP11b_gnd_class();
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
extern "C" static void daB_GND_Delete__FP11b_gnd_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daB_GND_Create__FP10fopAc_ac_c();
// True False
extern "C" void __ct__11b_gnd_classFv();
// True False
extern "C" void __ct__19mDoExt_3DlineMat1_cFv();
// True False
extern "C" void __dt__8g_himo_sFv();
// True False
extern "C" void __ct__8g_himo_sFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__16Z2SoundObjSimpleFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__8dCcD_SphFv();
// True False
extern "C" void __ct__8dCcD_SphFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __ct__11J3DLightObjFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__13daB_GND_HIO_cFv();
// False False
extern "C" void __sinit_d_a_b_gnd_cpp();
// True False
extern "C" static void __arraydtor();
// True False
extern "C" static void func_80602328();
// True False
extern "C" static void func_80602330();
// True False
extern "C" void cancelOriginalDemo__9daPy_py_cFv();
// True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void __ct__4cXyzFRC4cXyz();
// True False
//  u32 False
extern "C" void getTrigA__8mDoCPd_cFUl();
// True False
//  u32 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" static void dComIfGp_particle_set__FUlUsPC4cXyzPC5csXyzPC4cXyz();
// True False
//  int False
extern "C" void getAnmMtx__8J3DModelFi();
// True False
//  u16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
extern "C" static void dComIfGp_setHitMark__FUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl();
// True False
//  u8 False
//  u8 False
extern "C" static void dComIfGp_setDoStatusForce__FUcUc();
// True False
//  f32 False
//  f32 False
//  f32 False
extern "C" void __ct__4cXyzFfff();
// True False
extern "C" static void daPy_getPlayerActorClass__Fv();
// True False
//  f32 False
extern "C" void setFrame__13mDoExt_morf_cFf();
// True False
extern "C" void isStop__13mDoExt_morf_cFv();
// True False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" static void dComIfGp_particle_set__FUsPC4cXyzPC5csXyzPC4cXyz();
// True False
//  u32 False
//  int False
//  int False
//  s16 False
extern "C" void changeDemoMode__9daPy_py_cFUliis();
// True False
extern "C" void changeOriginalDemo__9daPy_py_cFv();
// True False
//  u32 False
//  int False
extern "C" void changeDemoMode__9daHorse_cFUli();
// True False
//  f32 False
//  f32 False
//  f32 False
extern "C" void set__4cXyzFfff();
// True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void __as__4cXyzFRC4cXyz();
// True False
extern "C" void changeOriginalDemo__9daHorse_cFv();
// True False
//  int False
extern "C" static void dComIfGp_getCamera__Fi();
// True False
//  int False
extern "C" static void dComIfGp_getPlayerCameraID__Fi();
// True False
//  int False
extern "C" static void dComIfGp_getPlayer__Fi();
extern "C" extern u32 const lit_3816;
extern "C" extern u32 const lit_3817;
extern "C" extern u32 const lit_3818;
extern "C" extern u32 const lit_3819;
extern "C" extern u32 const lit_4102;
extern "C" extern u32 const lit_4103;
extern "C" extern u8 const lit_4154[8];
extern "C" extern u8 const lit_4155[8];
extern "C" extern u8 const lit_4156[8];
extern "C" extern u32 const lit_4157;
extern "C" extern u32 const lit_4312;
extern "C" extern u32 const lit_4313;
extern "C" extern u32 const lit_4314;
extern "C" extern u32 const lit_4315;
extern "C" extern u32 const lit_4316;
extern "C" extern u32 const lit_4317;
extern "C" extern u32 const lit_4318;
extern "C" extern u32 const lit_4319;
extern "C" extern u32 const lit_4320;
extern "C" extern u32 const lit_4321;
extern "C" extern u32 const lit_4436;
extern "C" extern u32 const lit_4437;
extern "C" extern u32 const lit_4438;
extern "C" extern u32 const lit_4439;
extern "C" extern u32 const lit_4503;
extern "C" extern u32 const lit_4504;
extern "C" extern u32 const lit_4505;
extern "C" extern u32 const lit_4506;
extern "C" extern u32 const lit_4960;
extern "C" extern u32 const lit_4961;
extern "C" extern u32 const lit_4962;
extern "C" extern u32 const lit_4963;
extern "C" extern u32 const lit_4964;
extern "C" extern u32 const lit_4965;
extern "C" extern u32 const lit_4966;
extern "C" extern u32 const lit_4967;
extern "C" extern u32 const lit_4968;
extern "C" extern u32 const lit_4970;
extern "C" extern u32 const lit_4971;
extern "C" extern u32 const lit_4972;
extern "C" extern u32 const lit_4973;
extern "C" extern u32 const lit_4974;
extern "C" extern u32 const lit_5101;
extern "C" extern u32 const lit_5102;
extern "C" extern u32 const lit_5103;
extern "C" extern u32 const lit_5104;
extern "C" extern u32 const lit_5105;
extern "C" extern u32 const lit_5137;
extern "C" extern u32 const lit_5138;
extern "C" extern u32 const lit_5206;
extern "C" extern u32 const lit_5207;
extern "C" extern u32 const lit_5208;
extern "C" extern u32 const lit_5209;
extern "C" extern u32 const lit_5210;
extern "C" extern u32 const lit_5211;
extern "C" extern u32 const lit_5305;
extern "C" extern u32 const lit_5306;
extern "C" extern u32 const lit_5307;
extern "C" extern u32 const lit_5536;
extern "C" extern u32 const lit_5537;
extern "C" extern u32 const lit_5538;
extern "C" extern u32 const lit_5539;
extern "C" extern u32 const lit_5540;
extern "C" extern u32 const lit_5541;
extern "C" extern u32 const lit_5634;
extern "C" extern u32 const lit_5635;
extern "C" extern u32 const lit_5702;
extern "C" extern u32 const lit_5751;
extern "C" extern u32 const lit_5894;
extern "C" extern u32 const lit_5895;
extern "C" extern u32 const lit_6508;
extern "C" extern u32 const lit_6509;
extern "C" extern u32 const lit_6510;
extern "C" extern u32 const lit_6631;
extern "C" extern u32 const lit_7202;
extern "C" extern u32 const lit_7203;
extern "C" extern u32 const lit_7204;
extern "C" extern u32 const lit_7205;
extern "C" extern u32 const lit_7206;
extern "C" extern u32 const lit_7207;
extern "C" extern u32 const lit_7208;
extern "C" extern u32 const lit_7209;
extern "C" extern u32 const lit_7210;
extern "C" extern u32 const lit_7211;
extern "C" extern u32 const lit_7212;
extern "C" extern u32 const lit_7213;
extern "C" extern u32 const lit_7214;
extern "C" extern u32 const lit_7215;
extern "C" extern u32 const lit_7216;
extern "C" extern u32 const lit_7217;
extern "C" extern u32 const lit_7218;
extern "C" extern u32 const lit_7219;
extern "C" extern u32 const lit_7220;
extern "C" extern u32 const lit_7221;
extern "C" extern u32 const lit_7222;
extern "C" extern u32 const lit_7223;
extern "C" extern u32 const lit_7224;
extern "C" extern u32 const lit_7225;
extern "C" extern u32 const lit_7226;
extern "C" extern u32 const lit_7227;
extern "C" extern u32 const lit_7228;
extern "C" extern u32 const lit_7229;
extern "C" extern u32 const lit_7230;
extern "C" extern u32 const lit_7231;
extern "C" extern u32 const lit_7232;
extern "C" extern u32 const lit_7233;
extern "C" extern u32 const lit_7234;
extern "C" extern u32 const lit_7235;
extern "C" extern u32 const lit_7236;
extern "C" extern u32 const lit_7237;
extern "C" extern u32 const lit_7238;
extern "C" extern u32 const lit_7239;
extern "C" extern u32 const lit_7240;
extern "C" extern u32 const lit_7241;
extern "C" extern u32 const lit_7242;
extern "C" extern u32 const lit_7243;
extern "C" extern u32 const lit_7244;
extern "C" extern u32 const lit_7245;
extern "C" extern u32 const lit_7246;
extern "C" extern u32 const lit_7247;
extern "C" extern u32 const lit_7248;
extern "C" extern u32 const lit_7249;
extern "C" extern u32 const lit_7250;
extern "C" extern u32 const lit_7251;
extern "C" extern u32 const lit_7252;
extern "C" extern u32 const lit_7253;
extern "C" extern u32 const lit_7254;
extern "C" extern u32 const lit_7255;
extern "C" extern u32 const lit_7256;
extern "C" extern u32 const lit_7257;
extern "C" extern u32 const lit_7258;
extern "C" extern u32 const lit_7259;
extern "C" extern u32 const lit_7260;
extern "C" extern u32 const lit_7261;
extern "C" extern u32 const lit_7262;
extern "C" extern u32 const lit_7263;
extern "C" extern u32 const lit_7264;
extern "C" extern u32 const lit_7265;
extern "C" extern u32 const lit_7266;
extern "C" extern u32 const lit_7267;
extern "C" extern u32 const lit_7268;
extern "C" extern u32 const lit_7269;
extern "C" extern u32 const lit_7270;
extern "C" extern u32 const lit_7271;
extern "C" extern u32 const lit_7272;
extern "C" extern u32 const lit_7273;
extern "C" extern u32 const lit_7274;
extern "C" extern u32 const lit_7275;
extern "C" extern u32 const lit_7276;
extern "C" extern u32 const lit_7277;
extern "C" extern u32 const lit_7278;
extern "C" extern u32 const lit_7279;
extern "C" extern u32 const lit_7280;
extern "C" extern u32 const lit_7281;
extern "C" extern u32 const lit_7282;
extern "C" extern u32 const lit_7283;
extern "C" extern u32 const lit_7284;
extern "C" extern u32 const lit_7285;
extern "C" extern u32 const lit_7286;
extern "C" extern u32 const lit_7287;
extern "C" extern u32 const lit_7288;
extern "C" extern u32 const lit_7289;
extern "C" extern u32 const lit_7743;
extern "C" extern u32 const lit_7744;
extern "C" extern u32 const lit_7745;
extern "C" extern u32 const lit_7746;
extern "C" extern u32 const lit_7747;
extern "C" extern u32 const lit_7748;
extern "C" extern u32 const lit_7749;
extern "C" extern u32 const lit_7750;
extern "C" extern u32 const lit_7751;
extern "C" extern u32 const lit_7752;
extern "C" extern u32 const lit_7753;
extern "C" extern u32 const lit_7754;
extern "C" extern u32 const lit_7755;
extern "C" extern u32 const lit_7756;
extern "C" extern u32 const lit_7757;
extern "C" extern u32 const lit_8733;
extern "C" extern u32 const lit_8734;
extern "C" extern u32 const lit_8735;
extern "C" extern u32 const lit_8736;
extern "C" extern u32 const lit_8737;
extern "C" extern u32 const lit_8738;
extern "C" extern u32 const lit_8739;
extern "C" extern u32 const lit_8740;
extern "C" extern u32 const lit_8741;
extern "C" extern u32 const lit_8742;
extern "C" extern u32 const lit_8743;
extern "C" extern u32 const lit_8744;
extern "C" extern u32 const lit_8745;
extern "C" extern u32 const lit_8746;
extern "C" extern u32 const lit_8747;
extern "C" extern u32 const lit_8748;
extern "C" extern u32 const lit_8749;
extern "C" extern u32 const lit_8750;
extern "C" extern u32 const lit_8751;
extern "C" extern u32 const lit_8752;
extern "C" extern u8 const data_806029A4[8];
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_80602ADC[6 + 2 /* padding */];
extern "C" extern u8 data_80602CD4[16];
extern "C" extern u8 data_80602CE4[12];
extern "C" extern u8 data_80602CF0[10 + 2 /* padding */];
extern "C" extern u8 data_80602CFC[20];
extern "C" extern u8 data_80602D28[64];
extern "C" extern u8 data_80602D68[64];
extern "C" extern u8 data_80602DA8[64];
extern "C" extern u8 data_80602DE8[64];
extern "C" extern u8 data_80602E28[68];
extern "C" extern void* g_profile_B_GND[12];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__18mDoExt_3DlineMat_c[5];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__13daB_GND_HIO_c[3];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_3810[12];
extern "C" extern u8 lit_4187[12 + 4 /* padding */];
extern "C" extern u8 data_80602FE0[12];
extern "C" extern u8 lit_4509[12];
extern "C" extern u8 data_8060305C[4];
extern "C" extern u8 data_80603060[4];
extern "C" extern u8 data_80603064[4];
extern "C" extern u8 data_80603068[4];
extern "C" extern u8 data_8060306C[4];
extern "C" extern u8 data_80603070[4];
extern "C" extern u8 data_80603074[4];
extern "C" extern u8 data_80603078[4];
extern "C" extern u8 data_8060307C[4];
extern "C" extern u8 data_80603080[4];
extern "C" extern u8 data_80603084[4];
extern "C" extern u8 data_80603088[4];
extern "C" extern u8 data_8060308C[4];
extern "C" extern u8 data_80603090[4];
extern "C" extern u8 data_80603094[4];
extern "C" extern u8 data_80603098[4];
extern "C" extern u8 data_8060309C[4];
extern "C" extern u8 data_806030A0[4];
extern "C" extern u8 data_806030A4[4];
extern "C" extern u8 data_806030A8[4];
extern "C" extern u8 data_806030AC[4];
extern "C" extern u8 data_806030B0[4];
extern "C" extern u8 data_806030B4[4];
extern "C" extern u8 data_806030B8[4];
extern "C" extern u8 data_806030BC[4];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
void fopAcM_create(s16, u32, cXyz const*, int, csXyz const*, cXyz const*, s8);
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
void fopAcM_createChild(s16, unsigned int, u32, cXyz const*, int, csXyz const*, cXyz const*, s8, int (*)(void*));
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderPotentialEvent(fopAc_ac_c*, u16, u16, u16);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_getTalkEventPartner(fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  s16 False
void fopAcM_plAngleCheck(fopAc_ac_c const*, s16);
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
void fopAcM_effSmokeSet1(u32*, u32*, cXyz const*, csXyz const*, f32, dKy_tevstr_c const*, int);
// False False
//  u32 False
void fopMsgM_messageSetDemo(u32);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fpcEx_Search(void* (*)(void*, void*), void*);
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeForPName(void*, void*);
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeByID(void*, void*);
// False False
//  int False
//  f32 False
//  u32 False
//  s8 False
//  s16 False
//  int False
void dStage_changeScene(int, f32, u32, s8, s16, int);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  int False
//  int False
void dComIfGs_onOneZoneSwitch(int, int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
void cc_pl_cut_bit_get();
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void def_se_set(Z2Creature*, cCcD_Obj*, u32, fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);
// False False
//  u8 False
//  u8 False
//  f32 False
void dKy_custom_colset(u8, u8, f32);
// False False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s8 False
//  u8 False
void dKy_tevstr_init(dKy_tevstr_c*, s8, u8);
// False False
//  cBgS_PolyInfo const* False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void dKy_pol_sound_get(cBgS_PolyInfo const*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32 False
void cBgW_CheckBGround(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void MtxTrans(f32, f32, f32, u8);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void MtxPosition(cXyz*, cXyz*);
// False False
void MtxPush();
// False False
void MtxPull();
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 False
//  _GXColor& False
// 	 _GXColor False
extern "C" void fadeOut__13mDoGph_gInf_cFfR8_GXColor();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTexPattern* False
// 	 J3DAnmTexPattern False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btpAnmFP16J3DMaterialTableP16J3DAnmTexPatterniifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  s16 False
extern "C" void entry__13mDoExt_btpAnmFP16J3DMaterialTables();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  int False
//  void* False
// 	 void False
//  u32 False
//  u32 False
extern "C" void __ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl();
// False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
extern "C" void play__14mDoExt_McaMorfFP3VecUlSc();
// False False
extern "C" void entryDL__14mDoExt_McaMorfFv();
// False False
extern "C" void modelCalc__14mDoExt_McaMorfFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  u16 False
//  u16 False
//  ResTIMG* False
// 	 ResTIMG False
//  int False
extern "C" void init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi();
// False False
//  int False
//  _GXColor& False
// 	 _GXColor False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c();
// False False
//  mDoExt_3DlineMat_c* False
// 	 mDoExt_3DlineMat_c False
extern "C" void setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
extern "C" void fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc();
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_getTalkEventPartner__FPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  s16 False
extern "C" void fopAcM_plAngleCheck__FPC10fopAc_ac_cs();
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
extern "C" void fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci();
// False False
//  u32 False
extern "C" void fopMsgM_messageSetDemo__FUl();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fpcEx_Search__FPFPvPv_PvPv();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeForPName__FPvPv();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeByID__FPvPv();
// False False
//  int False
//  f32 False
//  u32 False
//  s8 False
//  s16 False
//  int False
extern "C" void dStage_changeScene__FifUlScsi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void dComIfGs_onOneZoneSwitch__Fii();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  int False
extern "C" void onSwitch__12dSv_danBit_cFi();
// False False
//  int False
extern "C" void isSwitch__12dSv_danBit_cCFi();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  u32 False
extern "C" void forceOnEventMove__Q213dPa_control_c7level_cFUl();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
extern "C" void setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartQuake__12dVibration_cFii4cXyz();
// False False
//  int False
extern "C" void StopQuake__12dVibration_cFi();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __dt__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
extern "C" void cc_pl_cut_bit_get__Fv();
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
extern "C" void checkMasterSwordEquip__9daPy_py_cFv();
// False False
extern "C" void Start__9dCamera_cFv();
// False False
extern "C" void Stop__9dCamera_cFv();
// False False
//  s32 False
extern "C" void SetTrimSize__9dCamera_cFl();
// False False
//  cXyz False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void Set__9dCamera_cF4cXyz4cXyzfs();
// False False
//  cXyz False
//  cXyz False
extern "C" void Reset__9dCamera_cF4cXyz4cXyz();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  u8 False
//  u8 False
//  f32 False
extern "C" void dKy_custom_colset__FUcUcf();
// False False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s8 False
//  u8 False
extern "C" void dKy_tevstr_init__FP12dKy_tevstr_cScUc();
// False False
//  cBgS_PolyInfo const* False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void dKy_pol_sound_get__FPC13cBgS_PolyInfo();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
//  s16 False
//  s16 False
//  s16 False
extern "C" void __ct__5csXyzFsss();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void SetPos__11cBgS_GndChkFPC3Vec();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
//  f32 False
extern "C" void cBgW_CheckBGround__Ff();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void MtxTrans__FfffUc();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void MtxPosition__FP4cXyzP4cXyz();
// False False
extern "C" void MtxPush__Fv();
// False False
extern "C" void MtxPull__Fv();
// False False
extern "C" void deleteAllParticle__14JPABaseEmitterFv();
// False False
//  f32 False
//  u32 False
extern "C" void seMoveVolumeAll__7Z2SeMgrFfUl();
// False False
//  u32 False
//  u32 False
//  s32 False
extern "C" void bgmStart__8Z2SeqMgrFUlUll();
// False False
//  u32 False
//  s32 False
extern "C" void bgmStop__8Z2SeqMgrFUll();
// False False
//  u32 False
extern "C" void bgmStreamPrepare__8Z2SeqMgrFUl();
// False False
extern "C" void bgmStreamPlay__8Z2SeqMgrFv();
// False False
//  s32 False
extern "C" void changeBgmStatus__8Z2SeqMgrFl();
// False False
//  char* False
// 	 char False
extern "C" void setDemoName__11Z2StatusMgrFPc();
// False False
extern "C" void __dt__14Z2SoundObjBaseFv();
// False False
extern "C" void deleteObject__14Z2SoundObjBaseFv();
// False False
extern "C" void __ct__16Z2SoundObjSimpleFv();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecP3VecUcUcUc();
// False False
//  bool False
extern "C" void setLinkSearch__15Z2CreatureEnemyFb();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void setEnemyName__15Z2CreatureEnemyFPCc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  J3DLightInfo const& False
// 	 J3DLightInfo const False
// 		 J3DLightInfo False
extern "C" void __as__12J3DLightInfoFRC12J3DLightInfo();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXScale();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSubtract();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void __save_gpr();
// False False
extern "C" void _savegpr_20();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void __restore_gpr();
// False False
extern "C" void _restgpr_20();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const j3dDefaultLightInfo[52];
extern "C" extern void* __vt__19mDoExt_3DlineMat1_c[5];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__16Z2SoundObjSimple[8];
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 g_blackColor;
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
extern "C" extern u8 struct_80451124[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80602664-80602668 0004+00 s=32 e=0 z=0  None .rodata    @3815                                                        */
SECTION_RODATA static u32 const lit_3815 = 0x3F800000;

/* 806029D0-806029DC 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806029DC-806029F0 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 806029F0-806029F4 0004+00 s=1 e=0 z=0  None .data      l_color$3983                                                 */
SECTION_DATA static u8 l_color[4] = {
	0x14, 0x0F, 0x00, 0xFF,
};

/* 806029F4-80602A04 0010+00 s=1 e=0 z=0  None .data      chk_x$4163                                                   */
SECTION_DATA static u8 chk_x[16] = {
	0x46, 0x5D, 0x5C, 0x00, 0x47, 0x07, 0xD7, 0x00, 0xC6, 0xBC, 0xC8, 0x00, 0xC6, 0x35, 0xAC, 0x00,
};

/* 80602A04-80602A14 0010+00 s=1 e=0 z=0  None .data      chk_z$4164                                                   */
SECTION_DATA static u8 chk_z[16] = {
	0x46, 0xAA, 0x1E, 0x00, 0xC6, 0x80, 0xA6, 0x00, 0x46, 0x18, 0x4C, 0x00, 0x46, 0xB0, 0x92, 0x00,
};

/* 80602A14-80602A6C 0058+00 s=1 e=0 z=0  None .data      @4975                                                        */
SECTION_DATA static void* lit_4975[22] = {
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x10C),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x10C),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x3E4),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x45C),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x48C),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x4E8),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x548),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x5D8),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x624),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x6A8),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x6E0),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x724),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x768),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x874),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x874),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x874),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x874),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x874),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x874),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x874),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x7AC),
	(void*)(((char*)b_gnd_h_run_a__FP11b_gnd_class)+0x80C),
};

/* 80602A6C-80602A88 001C+00 s=1 e=0 z=0  None .data      @5308                                                        */
SECTION_DATA static void* lit_5308[7] = {
	(void*)(((char*)b_gnd_g_wait__FP11b_gnd_class)+0xE8),
	(void*)(((char*)b_gnd_g_wait__FP11b_gnd_class)+0x128),
	(void*)(((char*)b_gnd_g_wait__FP11b_gnd_class)+0x1D4),
	(void*)(((char*)b_gnd_g_wait__FP11b_gnd_class)+0x2F0),
	(void*)(((char*)b_gnd_g_wait__FP11b_gnd_class)+0x3A4),
	(void*)(((char*)b_gnd_g_wait__FP11b_gnd_class)+0x32C),
	(void*)(((char*)b_gnd_g_wait__FP11b_gnd_class)+0x384),
};

/* 80602A88-80602AD4 004C+00 s=1 e=0 z=0  None .data      @5543                                                        */
SECTION_DATA static void* lit_5543[19] = {
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0xA0),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0xC4),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x174),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x198),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x240),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x264),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x2F0),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x314),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x3DC),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x400),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x4A0),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x4CC),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x544),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x5F0),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x8B0),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x728),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x75C),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x7B4),
	(void*)(((char*)b_gnd_g_attack__FP11b_gnd_class)+0x84C),
};

/* 80602AD4-80602ADC 0006+02 s=1 e=0 z=0  None .data      w_eff_name$6034                                              */
SECTION_DATA static u8 w_eff_name[6 + 2 /* padding */] = {
	0x82, 0x5B, 0x82, 0x5C, 0x82, 0x5D,
	/* padding */
	0x00, 0x00,
};

/* 80602ADC-80602AE4 0006+02 s=0 e=0 z=0  None .data      w_eff_name2$6035                                             */
SECTION_DATA u8 data_80602ADC[6 + 2 /* padding */] = {
	0x82, 0x58, 0x82, 0x59, 0x82, 0x5A,
	/* padding */
	0x00, 0x00,
};

/* 80602AE4-80602AEC 0006+02 s=1 e=0 z=0  None .data      e_name$6046                                                  */
SECTION_DATA static u8 e_name_6046[6 + 2 /* padding */] = {
	0x8B, 0x95, 0x8B, 0x96, 0x8B, 0x97,
	/* padding */
	0x00, 0x00,
};

/* 80602AEC-80602B48 005C+00 s=1 e=0 z=0  None .data      @6511                                                        */
SECTION_DATA static void* lit_6511[23] = {
	(void*)(((char*)action__FP11b_gnd_class)+0x1A4),
	(void*)(((char*)action__FP11b_gnd_class)+0xA8),
	(void*)(((char*)action__FP11b_gnd_class)+0xB4),
	(void*)(((char*)action__FP11b_gnd_class)+0xC0),
	(void*)(((char*)action__FP11b_gnd_class)+0xD0),
	(void*)(((char*)action__FP11b_gnd_class)+0xE0),
	(void*)(((char*)action__FP11b_gnd_class)+0xEC),
	(void*)(((char*)action__FP11b_gnd_class)+0x1A4),
	(void*)(((char*)action__FP11b_gnd_class)+0x1A4),
	(void*)(((char*)action__FP11b_gnd_class)+0x1A4),
	(void*)(((char*)action__FP11b_gnd_class)+0x108),
	(void*)(((char*)action__FP11b_gnd_class)+0x118),
	(void*)(((char*)action__FP11b_gnd_class)+0x128),
	(void*)(((char*)action__FP11b_gnd_class)+0x134),
	(void*)(((char*)action__FP11b_gnd_class)+0x148),
	(void*)(((char*)action__FP11b_gnd_class)+0x1A4),
	(void*)(((char*)action__FP11b_gnd_class)+0x1A4),
	(void*)(((char*)action__FP11b_gnd_class)+0x1A4),
	(void*)(((char*)action__FP11b_gnd_class)+0x1A4),
	(void*)(((char*)action__FP11b_gnd_class)+0x158),
	(void*)(((char*)action__FP11b_gnd_class)+0x164),
	(void*)(((char*)action__FP11b_gnd_class)+0x178),
	(void*)(((char*)action__FP11b_gnd_class)+0x190),
};

/* 80602B48-80602B4C 0004+00 s=1 e=0 z=0  None .data      e_name$6757                                                  */
SECTION_DATA static u8 e_name_6757[4] = {
	0x8B, 0x9B, 0x8B, 0x9C,
};

/* 80602B4C-80602B50 0004+00 s=1 e=0 z=0  None .data      e_name$6846                                                  */
SECTION_DATA static u8 e_name_6846[4] = {
	0x8B, 0x98, 0x8B, 0x99,
};

/* 80602B50-80602CD4 0184+00 s=1 e=0 z=0  None .data      @7290                                                        */
SECTION_DATA static void* lit_7290[97] = {
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0xA4),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x19C),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x19C),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x19C),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x3E8),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x518),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x660),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x6EC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x86C),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x994),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0xBAC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0xC80),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0xD7C),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0xF04),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0xFB0),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x1668),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x171C),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x1824),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x18D8),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x1A00),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x1B28),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x1C20),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x1CA0),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x1D84),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x1ED8),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x1F68),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x1FCC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21DC),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x2088),
	(void*)(((char*)demo_camera__FP11b_gnd_class)+0x21A8),
};

/* 80602CD4-80602CE4 0010+00 s=0 e=0 z=0  None .data      footJ$7816                                                   */
SECTION_DATA u8 data_80602CD4[16] = {
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x22,
};

/* 80602CE4-80602CF0 000C+00 s=0 e=0 z=0  None .data      b_id$7902                                                    */
SECTION_DATA u8 data_80602CE4[12] = {
	0x8A, 0x37, 0x8A, 0x38, 0x8A, 0x39, 0x8A, 0x3A, 0x8A, 0x3B, 0x8C, 0x24,
};

/* 80602CF0-80602CFC 000A+02 s=0 e=0 z=0  None .data      b_id2$7903                                                   */
SECTION_DATA u8 data_80602CF0[10 + 2 /* padding */] = {
	0x8A, 0x3D, 0x8A, 0x3E, 0x8A, 0x3F, 0x8A, 0x40, 0x8A, 0x41,
	/* padding */
	0x00, 0x00,
};

/* 80602CFC-80602D10 0014+00 s=0 e=0 z=0  None .data      bun_xs$7913                                                  */
SECTION_DATA u8 data_80602CFC[20] = {
	0xC3, 0x16, 0x00, 0x00, 0xC2, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00,
	0x43, 0x16, 0x00, 0x00,
};

/* 80602D10-80602D28 0018+00 s=1 e=0 z=0  None .data      btk_d$8802                                                   */
SECTION_DATA static u8 btk_d[24] = {
	0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x74,
	0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x72,
};

/* 80602D28-80602D68 0040+00 s=0 e=0 z=0  None .data      h_cc_sph_src$9127                                            */
SECTION_DATA u8 data_80602D28[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
	0x04, 0x00, 0x60, 0x20, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x75, 0x0B, 0x00, 0x07, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 80602D68-80602DA8 0040+00 s=0 e=0 z=0  None .data      cc_sph_src$9128                                              */
SECTION_DATA u8 data_80602D68[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x04, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 80602DA8-80602DE8 0040+00 s=0 e=0 z=0  None .data      at_sph_src$9129                                              */
SECTION_DATA u8 data_80602DA8[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
};

/* 80602DE8-80602E28 0040+00 s=0 e=0 z=0  None .data      def_sph_src$9130                                             */
SECTION_DATA u8 data_80602DE8[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xDC, 0xFB, 0xFD, 0xFD, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x09, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
};

/* 80602E28-80602E6C 0044+00 s=0 e=0 z=0  None .data      co_cyl_src$9131                                              */
SECTION_DATA u8 data_80602E28[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
	0x43, 0x48, 0x00, 0x00,
};

/* 80602E6C-80602E8C 0020+00 s=1 e=0 z=0  None .data      l_daB_GND_Method                                             */
SECTION_DATA static void* l_daB_GND_Method[8] = {
	(void*)daB_GND_Create__FP10fopAc_ac_c,
	(void*)daB_GND_Delete__FP11b_gnd_class,
	(void*)daB_GND_Execute__FP11b_gnd_class,
	(void*)daB_GND_IsDelete__FP11b_gnd_class,
	(void*)daB_GND_Draw__FP11b_gnd_class,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80602E8C-80602EBC 0030+00 s=0 e=0 z=1  None .data      g_profile_B_GND                                              */
SECTION_DATA void* g_profile_B_GND[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x020E0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00002790,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00D60000,
	(void*)&l_daB_GND_Method,
	(void*)0x00044000,
	(void*)0x020E0000,
};

/* 80602EBC-80602EC8 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80602EC8-80602ED4 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80602ED4-80602EE0 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80602EE0-80602EF4 0014+00 s=2 e=0 z=0  None .data      __vt__18mDoExt_3DlineMat_c                                   */
SECTION_DATA void* __vt__18mDoExt_3DlineMat_c[5] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80602EF4-80602F00 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80602F00-80602F0C 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80602F0C-80602F18 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80602F18-80602F3C 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80602330,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80602328,
};

/* 80602F3C-80602F48 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80602F48-80602F54 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 80602F54-80602F60 000C+00 s=2 e=0 z=0  None .data      __vt__13daB_GND_HIO_c                                        */
SECTION_DATA void* __vt__13daB_GND_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__13daB_GND_HIO_cFv,
};

/* 805F4A4C-805F4A94 0048+00 s=1 e=0 z=0  None .text      __ct__13daB_GND_HIO_cFv                                      */
//	805F4A4C: 80602664 (lit_3815)
//	805F4A50: 80602664 (lit_3815)
//	805F4A54: 80602F54 (__vt__13daB_GND_HIO_c)
//	805F4A58: 80602F54 (__vt__13daB_GND_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daB_GND_HIO_c::daB_GND_HIO_c() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__ct__13daB_GND_HIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80602668-8060266C 0004+00 s=0 e=0 z=0  None .rodata    @3816                                                        */
SECTION_RODATA u32 const lit_3816 = 0x42640000;

/* 8060266C-80602670 0004+00 s=0 e=0 z=0  None .rodata    @3817                                                        */
SECTION_RODATA u32 const lit_3817 = 0x42820000;

/* 80602670-80602674 0004+00 s=0 e=0 z=0  None .rodata    @3818                                                        */
SECTION_RODATA u32 const lit_3818 = 0x42980000;

/* 80602674-80602678 0004+00 s=0 e=0 z=0  None .rodata    @3819                                                        */
SECTION_RODATA u32 const lit_3819 = 0x42200000;

/* 80602678-8060267C 0004+00 s=4 e=0 z=0  None .rodata    @3835                                                        */
SECTION_RODATA static u8 const lit_3835[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 8060267C-80602680 0004+00 s=2 e=0 z=0  None .rodata    @3836                                                        */
SECTION_RODATA static u32 const lit_3836 = 0xBF800000;

/* 80602680-80602684 0004+00 s=1 e=0 z=0  None .rodata    @3902                                                        */
SECTION_RODATA static u32 const lit_3902 = 0x3F400000;

/* 80602684-8060268C 0008+00 s=2 e=0 z=0  None .rodata    @3904                                                        */
SECTION_RODATA static u8 const lit_3904[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 8060268C-80602690 0004+00 s=0 e=0 z=0  None .rodata    @4102                                                        */
SECTION_RODATA u32 const lit_4102 = 0x42C80000;

/* 80602690-80602694 0004+00 s=0 e=0 z=0  None .rodata    @4103                                                        */
SECTION_RODATA u32 const lit_4103 = 0x453B8000;

/* 80602694-8060269C 0008+00 s=0 e=0 z=0  None .rodata    @4154                                                        */
SECTION_RODATA u8 const lit_4154[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8060269C-806026A4 0008+00 s=0 e=0 z=0  None .rodata    @4155                                                        */
SECTION_RODATA u8 const lit_4155[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806026A4-806026AC 0008+00 s=0 e=0 z=0  None .rodata    @4156                                                        */
SECTION_RODATA u8 const lit_4156[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806026AC-806026B0 0004+00 s=0 e=0 z=0  None .rodata    @4157                                                        */
SECTION_RODATA u32 const lit_4157 = 0x447A0000;

/* 806026B0-806026B4 0004+00 s=0 e=0 z=0  None .rodata    @4312                                                        */
SECTION_RODATA u32 const lit_4312 = 0xC59C4000;

/* 806026B4-806026B8 0004+00 s=0 e=0 z=0  None .rodata    @4313                                                        */
SECTION_RODATA u32 const lit_4313 = 0x45BB8000;

/* 806026B8-806026BC 0004+00 s=0 e=0 z=0  None .rodata    @4314                                                        */
SECTION_RODATA u32 const lit_4314 = 0x43480000;

/* 806026BC-806026C0 0004+00 s=0 e=0 z=0  None .rodata    @4315                                                        */
SECTION_RODATA u32 const lit_4315 = 0x44FA0000;

/* 806026C0-806026C4 0004+00 s=0 e=0 z=0  None .rodata    @4316                                                        */
SECTION_RODATA u32 const lit_4316 = 0x437A0000;

/* 806026C4-806026C8 0004+00 s=0 e=0 z=0  None .rodata    @4317                                                        */
SECTION_RODATA u32 const lit_4317 = 0x43FA0000;

/* 806026C8-806026CC 0004+00 s=0 e=0 z=0  None .rodata    @4318                                                        */
SECTION_RODATA u32 const lit_4318 = 0xC61C4000;

/* 806026CC-806026D0 0004+00 s=0 e=0 z=0  None .rodata    @4319                                                        */
SECTION_RODATA u32 const lit_4319 = 0x442F0000;

/* 806026D0-806026D4 0004+00 s=0 e=0 z=0  None .rodata    @4320                                                        */
SECTION_RODATA u32 const lit_4320 = 0xC42F0000;

/* 806026D4-806026D8 0004+00 s=0 e=0 z=0  None .rodata    @4321                                                        */
SECTION_RODATA u32 const lit_4321 = 0x451C4000;

/* 806026D8-806026DC 0004+00 s=0 e=0 z=0  None .rodata    @4436                                                        */
SECTION_RODATA u32 const lit_4436 = 0x41200000;

/* 806026DC-806026E0 0004+00 s=0 e=0 z=0  None .rodata    @4437                                                        */
SECTION_RODATA u32 const lit_4437 = 0x43160000;

/* 806026E0-806026E4 0004+00 s=0 e=0 z=0  None .rodata    @4438                                                        */
SECTION_RODATA u32 const lit_4438 = 0x44610000;

/* 806026E4-806026E8 0004+00 s=0 e=0 z=0  None .rodata    @4439                                                        */
SECTION_RODATA u32 const lit_4439 = 0x43AF0000;

/* 806026E8-806026EC 0004+00 s=2 e=0 z=0  None .rodata    @4460                                                        */
SECTION_RODATA static u32 const lit_4460 = 0x40000000;

/* 806026EC-806026F0 0004+00 s=0 e=0 z=0  None .rodata    @4503                                                        */
SECTION_RODATA u32 const lit_4503 = 0x3F000000;

/* 806026F0-806026F4 0004+00 s=0 e=0 z=0  None .rodata    @4504                                                        */
SECTION_RODATA u32 const lit_4504 = 0x40400000;

/* 806026F4-806026F8 0004+00 s=0 e=0 z=0  None .rodata    @4505                                                        */
SECTION_RODATA u32 const lit_4505 = 0x457A0000;

/* 806026F8-806026FC 0004+00 s=0 e=0 z=0  None .rodata    @4506                                                        */
SECTION_RODATA u32 const lit_4506 = 0x45EA6000;

/* 806026FC-80602700 0004+00 s=0 e=0 z=0  None .rodata    @4960                                                        */
SECTION_RODATA u32 const lit_4960 = 0x41F00000;

/* 80602700-80602704 0004+00 s=0 e=0 z=0  None .rodata    @4961                                                        */
SECTION_RODATA u32 const lit_4961 = 0x40A00000;

/* 80602704-80602708 0004+00 s=0 e=0 z=0  None .rodata    @4962                                                        */
SECTION_RODATA u32 const lit_4962 = 0x459C4000;

/* 80602708-8060270C 0004+00 s=0 e=0 z=0  None .rodata    @4963                                                        */
SECTION_RODATA u32 const lit_4963 = 0x41700000;

/* 8060270C-80602710 0004+00 s=0 e=0 z=0  None .rodata    @4964                                                        */
SECTION_RODATA u32 const lit_4964 = 0x44480000;

/* 80602710-80602714 0004+00 s=0 e=0 z=0  None .rodata    @4965                                                        */
SECTION_RODATA u32 const lit_4965 = 0x45DAC000;

/* 80602714-80602718 0004+00 s=0 e=0 z=0  None .rodata    @4966                                                        */
SECTION_RODATA u32 const lit_4966 = 0x43960000;

/* 80602718-8060271C 0004+00 s=0 e=0 z=0  None .rodata    @4967                                                        */
SECTION_RODATA u32 const lit_4967 = 0x44160000;

/* 8060271C-80602720 0004+00 s=0 e=0 z=0  None .rodata    @4968                                                        */
SECTION_RODATA u32 const lit_4968 = 0x3F99999A;

/* 80602720-80602724 0004+00 s=1 e=0 z=0  None .rodata    @4969                                                        */
SECTION_RODATA static u32 const lit_4969 = 0x40200000;

/* 80602724-80602728 0004+00 s=0 e=0 z=0  None .rodata    @4970                                                        */
SECTION_RODATA u32 const lit_4970 = 0x3FA66666;

/* 80602728-8060272C 0004+00 s=0 e=0 z=0  None .rodata    @4971                                                        */
SECTION_RODATA u32 const lit_4971 = 0x3DCCCCCD;

/* 8060272C-80602730 0004+00 s=0 e=0 z=0  None .rodata    @4972                                                        */
SECTION_RODATA u32 const lit_4972 = 0x463B8000;

/* 80602730-80602734 0004+00 s=0 e=0 z=0  None .rodata    @4973                                                        */
SECTION_RODATA u32 const lit_4973 = 0xC53AD000;

/* 80602734-80602738 0004+00 s=0 e=0 z=0  None .rodata    @4974                                                        */
SECTION_RODATA u32 const lit_4974 = 0x44AA8000;

/* 80602738-8060273C 0004+00 s=0 e=0 z=0  None .rodata    @5101                                                        */
SECTION_RODATA u32 const lit_5101 = 0x43C80000;

/* 8060273C-80602740 0004+00 s=0 e=0 z=0  None .rodata    @5102                                                        */
SECTION_RODATA u32 const lit_5102 = 0x44D48000;

/* 80602740-80602744 0004+00 s=0 e=0 z=0  None .rodata    @5103                                                        */
SECTION_RODATA u32 const lit_5103 = 0x44098000;

/* 80602744-80602748 0004+00 s=0 e=0 z=0  None .rodata    @5104                                                        */
SECTION_RODATA u32 const lit_5104 = 0xC3480000;

/* 80602748-8060274C 0004+00 s=0 e=0 z=0  None .rodata    @5105                                                        */
SECTION_RODATA u32 const lit_5105 = 0x3FB33333;

/* 8060274C-80602750 0004+00 s=0 e=0 z=0  None .rodata    @5137                                                        */
SECTION_RODATA u32 const lit_5137 = 0x425C0000;

/* 80602750-80602754 0004+00 s=0 e=0 z=0  None .rodata    @5138                                                        */
SECTION_RODATA u32 const lit_5138 = 0x3FC00000;

/* 80602754-80602758 0004+00 s=0 e=0 z=0  None .rodata    @5206                                                        */
SECTION_RODATA u32 const lit_5206 = 0x42480000;

/* 80602758-8060275C 0004+00 s=0 e=0 z=0  None .rodata    @5207                                                        */
SECTION_RODATA u32 const lit_5207 = 0x4019999A;

/* 8060275C-80602760 0004+00 s=0 e=0 z=0  None .rodata    @5208                                                        */
SECTION_RODATA u32 const lit_5208 = 0x442F4000;

/* 80602760-80602764 0004+00 s=0 e=0 z=0  None .rodata    @5209                                                        */
SECTION_RODATA u32 const lit_5209 = 0xC5B90000;

/* 80602764-80602768 0004+00 s=0 e=0 z=0  None .rodata    @5210                                                        */
SECTION_RODATA u32 const lit_5210 = 0x40800000;

/* 80602768-8060276C 0004+00 s=0 e=0 z=0  None .rodata    @5211                                                        */
SECTION_RODATA u32 const lit_5211 = 0x41600000;

/* 8060276C-80602770 0004+00 s=0 e=0 z=0  None .rodata    @5305                                                        */
SECTION_RODATA u32 const lit_5305 = 0x4089999A;

/* 80602770-80602774 0004+00 s=0 e=0 z=0  None .rodata    @5306                                                        */
SECTION_RODATA u32 const lit_5306 = 0x3E99999A;

/* 80602774-80602778 0004+00 s=0 e=0 z=0  None .rodata    @5307                                                        */
SECTION_RODATA u32 const lit_5307 = 0x44228000;

/* 80602778-8060277C 0004+00 s=0 e=0 z=0  None .rodata    @5536                                                        */
SECTION_RODATA u32 const lit_5536 = 0x3F19999A;

/* 8060277C-80602780 0004+00 s=0 e=0 z=0  None .rodata    @5537                                                        */
SECTION_RODATA u32 const lit_5537 = 0x3F333333;

/* 80602780-80602784 0004+00 s=0 e=0 z=0  None .rodata    @5538                                                        */
SECTION_RODATA u32 const lit_5538 = 0x40551EB8;

/* 80602784-80602788 0004+00 s=0 e=0 z=0  None .rodata    @5539                                                        */
SECTION_RODATA u32 const lit_5539 = 0x43E10000;

/* 80602788-8060278C 0004+00 s=0 e=0 z=0  None .rodata    @5540                                                        */
SECTION_RODATA u32 const lit_5540 = 0x42700000;

/* 8060278C-80602790 0004+00 s=0 e=0 z=0  None .rodata    @5541                                                        */
SECTION_RODATA u32 const lit_5541 = 0x41A00000;

/* 80602790-80602794 0004+00 s=0 e=0 z=0  None .rodata    @5634                                                        */
SECTION_RODATA u32 const lit_5634 = 0x3EB33333;

/* 80602794-80602798 0004+00 s=0 e=0 z=0  None .rodata    @5635                                                        */
SECTION_RODATA u32 const lit_5635 = 0x41C80000;

/* 80602798-8060279C 0004+00 s=0 e=0 z=0  None .rodata    @5702                                                        */
SECTION_RODATA u32 const lit_5702 = 0x428C0000;

/* 8060279C-806027A0 0004+00 s=0 e=0 z=0  None .rodata    @5751                                                        */
SECTION_RODATA u32 const lit_5751 = 0x40C00000;

/* 806027A0-806027A4 0004+00 s=0 e=0 z=0  None .rodata    @5894                                                        */
SECTION_RODATA u32 const lit_5894 = 0x420C0000;

/* 806027A4-806027A8 0004+00 s=0 e=0 z=0  None .rodata    @5895                                                        */
SECTION_RODATA u32 const lit_5895 = 0x41100000;

/* 806027A8-806027AC 0004+00 s=0 e=0 z=0  None .rodata    @6508                                                        */
SECTION_RODATA u32 const lit_6508 = 0x43BE0000;

/* 806027AC-806027B0 0004+00 s=0 e=0 z=0  None .rodata    @6509                                                        */
SECTION_RODATA u32 const lit_6509 = 0xC3E10000;

/* 806027B0-806027B4 0004+00 s=0 e=0 z=0  None .rodata    @6510                                                        */
SECTION_RODATA u32 const lit_6510 = 0x40E00000;

/* 806027B4-806027B8 0004+00 s=0 e=0 z=0  None .rodata    @6631                                                        */
SECTION_RODATA u32 const lit_6631 = 0x3ECCCCCD;

/* 806027B8-806027BC 0004+00 s=0 e=0 z=0  None .rodata    @7202                                                        */
SECTION_RODATA u32 const lit_7202 = 0xC3FA0000;

/* 806027BC-806027C0 0004+00 s=0 e=0 z=0  None .rodata    @7203                                                        */
SECTION_RODATA u32 const lit_7203 = 0xC3960000;

/* 806027C0-806027C4 0004+00 s=0 e=0 z=0  None .rodata    @7204                                                        */
SECTION_RODATA u32 const lit_7204 = 0xC47A0000;

/* 806027C4-806027C8 0004+00 s=0 e=0 z=0  None .rodata    @7205                                                        */
SECTION_RODATA u32 const lit_7205 = 0x44898000;

/* 806027C8-806027CC 0004+00 s=0 e=0 z=0  None .rodata    @7206                                                        */
SECTION_RODATA u32 const lit_7206 = 0xC4FA0000;

/* 806027CC-806027D0 0004+00 s=0 e=0 z=0  None .rodata    @7207                                                        */
SECTION_RODATA u32 const lit_7207 = 0xC3C80000;

/* 806027D0-806027D4 0004+00 s=0 e=0 z=0  None .rodata    @7208                                                        */
SECTION_RODATA u32 const lit_7208 = 0x44A4C000;

/* 806027D4-806027D8 0004+00 s=0 e=0 z=0  None .rodata    @7209                                                        */
SECTION_RODATA u32 const lit_7209 = 0xC4A96000;

/* 806027D8-806027DC 0004+00 s=0 e=0 z=0  None .rodata    @7210                                                        */
SECTION_RODATA u32 const lit_7210 = 0x3E4CCCCD;

/* 806027DC-806027E0 0004+00 s=0 e=0 z=0  None .rodata    @7211                                                        */
SECTION_RODATA u32 const lit_7211 = 0xC4BB8000;

/* 806027E0-806027E4 0004+00 s=0 e=0 z=0  None .rodata    @7212                                                        */
SECTION_RODATA u32 const lit_7212 = 0xC57A0000;

/* 806027E4-806027E8 0004+00 s=0 e=0 z=0  None .rodata    @7213                                                        */
SECTION_RODATA u32 const lit_7213 = 0xC38F0000;

/* 806027E8-806027EC 0004+00 s=0 e=0 z=0  None .rodata    @7214                                                        */
SECTION_RODATA u32 const lit_7214 = 0xC4DE8000;

/* 806027EC-806027F0 0004+00 s=0 e=0 z=0  None .rodata    @7215                                                        */
SECTION_RODATA u32 const lit_7215 = 0x43C28000;

/* 806027F0-806027F4 0004+00 s=0 e=0 z=0  None .rodata    @7216                                                        */
SECTION_RODATA u32 const lit_7216 = 0x44A5C000;

/* 806027F4-806027F8 0004+00 s=0 e=0 z=0  None .rodata    @7217                                                        */
SECTION_RODATA u32 const lit_7217 = 0xC5134000;

/* 806027F8-806027FC 0004+00 s=0 e=0 z=0  None .rodata    @7218                                                        */
SECTION_RODATA u32 const lit_7218 = 0x3CF5C28F;

/* 806027FC-80602800 0004+00 s=0 e=0 z=0  None .rodata    @7219                                                        */
SECTION_RODATA u32 const lit_7219 = 0x429E0000;

/* 80602800-80602804 0004+00 s=0 e=0 z=0  None .rodata    @7220                                                        */
SECTION_RODATA u32 const lit_7220 = 0x44A32000;

/* 80602804-80602808 0004+00 s=0 e=0 z=0  None .rodata    @7221                                                        */
SECTION_RODATA u32 const lit_7221 = 0xC480A000;

/* 80602808-8060280C 0004+00 s=0 e=0 z=0  None .rodata    @7222                                                        */
SECTION_RODATA u32 const lit_7222 = 0x42AC0000;

/* 8060280C-80602810 0004+00 s=0 e=0 z=0  None .rodata    @7223                                                        */
SECTION_RODATA u32 const lit_7223 = 0x44A52000;

/* 80602810-80602814 0004+00 s=0 e=0 z=0  None .rodata    @7224                                                        */
SECTION_RODATA u32 const lit_7224 = 0xC49FA000;

/* 80602814-80602818 0004+00 s=0 e=0 z=0  None .rodata    @7225                                                        */
SECTION_RODATA u32 const lit_7225 = 0xC2480000;

/* 80602818-8060281C 0004+00 s=0 e=0 z=0  None .rodata    @7226                                                        */
SECTION_RODATA u32 const lit_7226 = 0x3F0CCCCD;

/* 8060281C-80602820 0004+00 s=0 e=0 z=0  None .rodata    @7227                                                        */
SECTION_RODATA u32 const lit_7227 = 0x42A00000;

/* 80602820-80602824 0004+00 s=0 e=0 z=0  None .rodata    @7228                                                        */
SECTION_RODATA u32 const lit_7228 = 0x438C0000;

/* 80602824-80602828 0004+00 s=0 e=0 z=0  None .rodata    @7229                                                        */
SECTION_RODATA u32 const lit_7229 = 0x43540000;

/* 80602828-8060282C 0004+00 s=0 e=0 z=0  None .rodata    @7230                                                        */
SECTION_RODATA u32 const lit_7230 = 0x43AA0000;

/* 8060282C-80602830 0004+00 s=0 e=0 z=0  None .rodata    @7231                                                        */
SECTION_RODATA u32 const lit_7231 = 0x43340000;

/* 80602830-80602834 0004+00 s=0 e=0 z=0  None .rodata    @7232                                                        */
SECTION_RODATA u32 const lit_7232 = 0x43820000;

/* 80602834-80602838 0004+00 s=0 e=0 z=0  None .rodata    @7233                                                        */
SECTION_RODATA u32 const lit_7233 = 0x3F666666;

/* 80602838-8060283C 0004+00 s=0 e=0 z=0  None .rodata    @7234                                                        */
SECTION_RODATA u32 const lit_7234 = 0x44460000;

/* 8060283C-80602840 0004+00 s=0 e=0 z=0  None .rodata    @7235                                                        */
SECTION_RODATA u32 const lit_7235 = 0x44C76000;

/* 80602840-80602844 0004+00 s=0 e=0 z=0  None .rodata    @7236                                                        */
SECTION_RODATA u32 const lit_7236 = 0x44910000;

/* 80602844-80602848 0004+00 s=0 e=0 z=0  None .rodata    @7237                                                        */
SECTION_RODATA u32 const lit_7237 = 0x446A8000;

/* 80602848-8060284C 0004+00 s=0 e=0 z=0  None .rodata    @7238                                                        */
SECTION_RODATA u32 const lit_7238 = 0x44D16000;

/* 8060284C-80602850 0004+00 s=0 e=0 z=0  None .rodata    @7239                                                        */
SECTION_RODATA u32 const lit_7239 = 0x44A72000;

/* 80602850-80602854 0004+00 s=0 e=0 z=0  None .rodata    @7240                                                        */
SECTION_RODATA u32 const lit_7240 = 0x41400000;

/* 80602854-80602858 0004+00 s=0 e=0 z=0  None .rodata    @7241                                                        */
SECTION_RODATA u32 const lit_7241 = 0xC2A20000;

/* 80602858-8060285C 0004+00 s=0 e=0 z=0  None .rodata    @7242                                                        */
SECTION_RODATA u32 const lit_7242 = 0x44ADE000;

/* 8060285C-80602860 0004+00 s=0 e=0 z=0  None .rodata    @7243                                                        */
SECTION_RODATA u32 const lit_7243 = 0xC5060000;

/* 80602860-80602864 0004+00 s=0 e=0 z=0  None .rodata    @7244                                                        */
SECTION_RODATA u32 const lit_7244 = 0x42140000;

/* 80602864-80602868 0004+00 s=0 e=0 z=0  None .rodata    @7245                                                        */
SECTION_RODATA u32 const lit_7245 = 0x44AAC000;

/* 80602868-8060286C 0004+00 s=0 e=0 z=0  None .rodata    @7246                                                        */
SECTION_RODATA u32 const lit_7246 = 0xC4E92000;

/* 8060286C-80602870 0004+00 s=0 e=0 z=0  None .rodata    @7247                                                        */
SECTION_RODATA u32 const lit_7247 = 0x44A90000;

/* 80602870-80602874 0004+00 s=0 e=0 z=0  None .rodata    @7248                                                        */
SECTION_RODATA u32 const lit_7248 = 0xC4E94000;

/* 80602874-80602878 0004+00 s=0 e=0 z=0  None .rodata    @7249                                                        */
SECTION_RODATA u32 const lit_7249 = 0x43010000;

/* 80602878-8060287C 0004+00 s=0 e=0 z=0  None .rodata    @7250                                                        */
SECTION_RODATA u32 const lit_7250 = 0x44A9C000;

/* 8060287C-80602880 0004+00 s=0 e=0 z=0  None .rodata    @7251                                                        */
SECTION_RODATA u32 const lit_7251 = 0xC5075000;

/* 80602880-80602884 0004+00 s=0 e=0 z=0  None .rodata    @7252                                                        */
SECTION_RODATA u32 const lit_7252 = 0x3D8F5C29;

/* 80602884-80602888 0004+00 s=0 e=0 z=0  None .rodata    @7253                                                        */
SECTION_RODATA u32 const lit_7253 = 0x3B03126F;

/* 80602888-8060288C 0004+00 s=0 e=0 z=0  None .rodata    @7254                                                        */
SECTION_RODATA u32 const lit_7254 = 0x42CA0000;

/* 8060288C-80602890 0004+00 s=0 e=0 z=0  None .rodata    @7255                                                        */
SECTION_RODATA u32 const lit_7255 = 0x4496C000;

/* 80602890-80602894 0004+00 s=0 e=0 z=0  None .rodata    @7256                                                        */
SECTION_RODATA u32 const lit_7256 = 0xC4118000;

/* 80602894-80602898 0004+00 s=0 e=0 z=0  None .rodata    @7257                                                        */
SECTION_RODATA u32 const lit_7257 = 0x431A0000;

/* 80602898-8060289C 0004+00 s=0 e=0 z=0  None .rodata    @7258                                                        */
SECTION_RODATA u32 const lit_7258 = 0x4495E000;

/* 8060289C-806028A0 0004+00 s=0 e=0 z=0  None .rodata    @7259                                                        */
SECTION_RODATA u32 const lit_7259 = 0xC44CC000;

/* 806028A0-806028A4 0004+00 s=0 e=0 z=0  None .rodata    @7260                                                        */
SECTION_RODATA u32 const lit_7260 = 0x43070000;

/* 806028A4-806028A8 0004+00 s=0 e=0 z=0  None .rodata    @7261                                                        */
SECTION_RODATA u32 const lit_7261 = 0x3CA3D70A;

/* 806028A8-806028AC 0004+00 s=0 e=0 z=0  None .rodata    @7262                                                        */
SECTION_RODATA u32 const lit_7262 = 0xC247999A;

/* 806028AC-806028B0 0004+00 s=0 e=0 z=0  None .rodata    @7263                                                        */
SECTION_RODATA u32 const lit_7263 = 0x42400000;

/* 806028B0-806028B4 0004+00 s=0 e=0 z=0  None .rodata    @7264                                                        */
SECTION_RODATA u32 const lit_7264 = 0xBECCCCCD;

/* 806028B4-806028B8 0004+00 s=0 e=0 z=0  None .rodata    @7265                                                        */
SECTION_RODATA u32 const lit_7265 = 0x3E19999A;

/* 806028B8-806028BC 0004+00 s=0 e=0 z=0  None .rodata    @7266                                                        */
SECTION_RODATA u32 const lit_7266 = 0x44AF0000;

/* 806028BC-806028C0 0004+00 s=0 e=0 z=0  None .rodata    @7267                                                        */
SECTION_RODATA u32 const lit_7267 = 0x425ECCCD;

/* 806028C0-806028C4 0004+00 s=0 e=0 z=0  None .rodata    @7268                                                        */
SECTION_RODATA u32 const lit_7268 = 0x448F4000;

/* 806028C4-806028C8 0004+00 s=0 e=0 z=0  None .rodata    @7269                                                        */
SECTION_RODATA u32 const lit_7269 = 0xC3170000;

/* 806028C8-806028CC 0004+00 s=0 e=0 z=0  None .rodata    @7270                                                        */
SECTION_RODATA u32 const lit_7270 = 0xC3030000;

/* 806028CC-806028D0 0004+00 s=0 e=0 z=0  None .rodata    @7271                                                        */
SECTION_RODATA u32 const lit_7271 = 0xC31C0000;

/* 806028D0-806028D4 0004+00 s=0 e=0 z=0  None .rodata    @7272                                                        */
SECTION_RODATA u32 const lit_7272 = 0x42B40000;

/* 806028D4-806028D8 0004+00 s=0 e=0 z=0  None .rodata    @7273                                                        */
SECTION_RODATA u32 const lit_7273 = 0x449C4000;

/* 806028D8-806028DC 0004+00 s=0 e=0 z=0  None .rodata    @7274                                                        */
SECTION_RODATA u32 const lit_7274 = 0xC2640000;

/* 806028DC-806028E0 0004+00 s=0 e=0 z=0  None .rodata    @7275                                                        */
SECTION_RODATA u32 const lit_7275 = 0xC2A00000;

/* 806028E0-806028E4 0004+00 s=0 e=0 z=0  None .rodata    @7276                                                        */
SECTION_RODATA u32 const lit_7276 = 0x44948000;

/* 806028E4-806028E8 0004+00 s=0 e=0 z=0  None .rodata    @7277                                                        */
SECTION_RODATA u32 const lit_7277 = 0xC2D40000;

/* 806028E8-806028EC 0004+00 s=0 e=0 z=0  None .rodata    @7278                                                        */
SECTION_RODATA u32 const lit_7278 = 0x44B2C000;

/* 806028EC-806028F0 0004+00 s=0 e=0 z=0  None .rodata    @7279                                                        */
SECTION_RODATA u32 const lit_7279 = 0x44C86000;

/* 806028F0-806028F4 0004+00 s=0 e=0 z=0  None .rodata    @7280                                                        */
SECTION_RODATA u32 const lit_7280 = 0xC4FE2000;

/* 806028F4-806028F8 0004+00 s=0 e=0 z=0  None .rodata    @7281                                                        */
SECTION_RODATA u32 const lit_7281 = 0xC28C0000;

/* 806028F8-806028FC 0004+00 s=0 e=0 z=0  None .rodata    @7282                                                        */
SECTION_RODATA u32 const lit_7282 = 0x44C38000;

/* 806028FC-80602900 0004+00 s=0 e=0 z=0  None .rodata    @7283                                                        */
SECTION_RODATA u32 const lit_7283 = 0xC4EB8000;

/* 80602900-80602904 0004+00 s=0 e=0 z=0  None .rodata    @7284                                                        */
SECTION_RODATA u32 const lit_7284 = 0xC0A00000;

/* 80602904-80602908 0004+00 s=0 e=0 z=0  None .rodata    @7285                                                        */
SECTION_RODATA u32 const lit_7285 = 0x3D4CCCCD;

/* 80602908-8060290C 0004+00 s=0 e=0 z=0  None .rodata    @7286                                                        */
SECTION_RODATA u32 const lit_7286 = 0x3C23D70A;

/* 8060290C-80602910 0004+00 s=0 e=0 z=0  None .rodata    @7287                                                        */
SECTION_RODATA u32 const lit_7287 = 0xC4160000;

/* 80602910-80602914 0004+00 s=0 e=0 z=0  None .rodata    @7288                                                        */
SECTION_RODATA u32 const lit_7288 = 0xC37A0000;

/* 80602914-80602918 0004+00 s=0 e=0 z=0  None .rodata    @7289                                                        */
SECTION_RODATA u32 const lit_7289 = 0x42F00000;

/* 80602918-8060291C 0004+00 s=0 e=0 z=0  None .rodata    @7743                                                        */
SECTION_RODATA u32 const lit_7743 = 0x41A80000;

/* 8060291C-80602920 0004+00 s=0 e=0 z=0  None .rodata    @7744                                                        */
SECTION_RODATA u32 const lit_7744 = 0x41D00000;

/* 80602920-80602924 0004+00 s=0 e=0 z=0  None .rodata    @7745                                                        */
SECTION_RODATA u32 const lit_7745 = 0x41880000;

/* 80602924-80602928 0004+00 s=0 e=0 z=0  None .rodata    @7746                                                        */
SECTION_RODATA u32 const lit_7746 = 0x41840000;

/* 80602928-8060292C 0004+00 s=0 e=0 z=0  None .rodata    @7747                                                        */
SECTION_RODATA u32 const lit_7747 = 0x41180000;

/* 8060292C-80602930 0004+00 s=0 e=0 z=0  None .rodata    @7748                                                        */
SECTION_RODATA u32 const lit_7748 = 0x41500000;

/* 80602930-80602934 0004+00 s=0 e=0 z=0  None .rodata    @7749                                                        */
SECTION_RODATA u32 const lit_7749 = 0x41980000;

/* 80602934-80602938 0004+00 s=0 e=0 z=0  None .rodata    @7750                                                        */
SECTION_RODATA u32 const lit_7750 = 0x41000000;

/* 80602938-8060293C 0004+00 s=0 e=0 z=0  None .rodata    @7751                                                        */
SECTION_RODATA u32 const lit_7751 = 0x41300000;

/* 8060293C-80602940 0004+00 s=0 e=0 z=0  None .rodata    @7752                                                        */
SECTION_RODATA u32 const lit_7752 = 0x41E00000;

/* 80602940-80602944 0004+00 s=0 e=0 z=0  None .rodata    @7753                                                        */
SECTION_RODATA u32 const lit_7753 = 0x41F80000;

/* 80602944-80602948 0004+00 s=0 e=0 z=0  None .rodata    @7754                                                        */
SECTION_RODATA u32 const lit_7754 = 0x42000000;

/* 80602948-8060294C 0004+00 s=0 e=0 z=0  None .rodata    @7755                                                        */
SECTION_RODATA u32 const lit_7755 = 0x41900000;

/* 8060294C-80602950 0004+00 s=0 e=0 z=0  None .rodata    @7756                                                        */
SECTION_RODATA u32 const lit_7756 = 0x41C00000;

/* 80602950-80602954 0004+00 s=0 e=0 z=0  None .rodata    @7757                                                        */
SECTION_RODATA u32 const lit_7757 = 0x41D80000;

/* 80602954-80602958 0004+00 s=0 e=0 z=0  None .rodata    @8733                                                        */
SECTION_RODATA u32 const lit_8733 = 0xC1A00000;

/* 80602958-8060295C 0004+00 s=0 e=0 z=0  None .rodata    @8734                                                        */
SECTION_RODATA u32 const lit_8734 = 0xC2C80000;

/* 8060295C-80602960 0004+00 s=0 e=0 z=0  None .rodata    @8735                                                        */
SECTION_RODATA u32 const lit_8735 = 0x40F00000;

/* 80602960-80602964 0004+00 s=0 e=0 z=0  None .rodata    @8736                                                        */
SECTION_RODATA u32 const lit_8736 = 0xCE6E6B28;

/* 80602964-80602968 0004+00 s=0 e=0 z=0  None .rodata    @8737                                                        */
SECTION_RODATA u32 const lit_8737 = 0xC1F00000;

/* 80602968-8060296C 0004+00 s=0 e=0 z=0  None .rodata    @8738                                                        */
SECTION_RODATA u32 const lit_8738 = 0xC4960000;

/* 8060296C-80602970 0004+00 s=0 e=0 z=0  None .rodata    @8739                                                        */
SECTION_RODATA u32 const lit_8739 = 0x42A39EB8;

/* 80602970-80602974 0004+00 s=0 e=0 z=0  None .rodata    @8740                                                        */
SECTION_RODATA u32 const lit_8740 = 0x40228F5C;

/* 80602974-80602978 0004+00 s=0 e=0 z=0  None .rodata    @8741                                                        */
SECTION_RODATA u32 const lit_8741 = 0x4039999A;

/* 80602978-8060297C 0004+00 s=0 e=0 z=0  None .rodata    @8742                                                        */
SECTION_RODATA u32 const lit_8742 = 0xC3020000;

/* 8060297C-80602980 0004+00 s=0 e=0 z=0  None .rodata    @8743                                                        */
SECTION_RODATA u32 const lit_8743 = 0x43020000;

/* 80602980-80602984 0004+00 s=0 e=0 z=0  None .rodata    @8744                                                        */
SECTION_RODATA u32 const lit_8744 = 0x469C4000;

/* 80602984-80602988 0004+00 s=0 e=0 z=0  None .rodata    @8745                                                        */
SECTION_RODATA u32 const lit_8745 = 0x464B2000;

/* 80602988-8060298C 0004+00 s=0 e=0 z=0  None .rodata    @8746                                                        */
SECTION_RODATA u32 const lit_8746 = 0xC69C4000;

/* 8060298C-80602990 0004+00 s=0 e=0 z=0  None .rodata    @8747                                                        */
SECTION_RODATA u32 const lit_8747 = 0x47C35000;

/* 80602990-80602994 0004+00 s=0 e=0 z=0  None .rodata    @8748                                                        */
SECTION_RODATA u32 const lit_8748 = 0xC6524000;

/* 80602994-80602998 0004+00 s=0 e=0 z=0  None .rodata    @8749                                                        */
SECTION_RODATA u32 const lit_8749 = 0xC1880000;

/* 80602998-8060299C 0004+00 s=0 e=0 z=0  None .rodata    @8750                                                        */
SECTION_RODATA u32 const lit_8750 = 0x3E800000;

/* 8060299C-806029A0 0004+00 s=0 e=0 z=0  None .rodata    @8751                                                        */
SECTION_RODATA u32 const lit_8751 = 0x44BB8000;

/* 806029A0-806029A4 0004+00 s=0 e=0 z=0  None .rodata    @8752                                                        */
SECTION_RODATA u32 const lit_8752 = 0xC1700000;

/* 806029A4-806029AC 0008+00 s=0 e=0 z=0  None .rodata    blur_model$8822                                              */
SECTION_RODATA u8 const data_806029A4[8] = {
	0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x65,
};

/* 806029AC-806029CD 0021+00 s=6 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_806029AC = "B_gnd";
SECTION_DEAD char const* const stringBase_806029B2 = "B_hg";
SECTION_DEAD char const* const stringBase_806029B7 = "force_start";
SECTION_DEAD char const* const stringBase_806029C3 = "force_end";
#pragma pop

/* 805F4A94-805F4B48 00B4+00 s=15 e=0 z=0  None .text      anm_init__FP11b_gnd_classifUcf                               */
//	805F4AD8: 806029AC (stringBase0)
//	805F4ADC: 806029AC (stringBase0)
//	805F4AE0: 804061C0 (g_dComIfG_gameInfo)
//	805F4AE4: 804061C0 (g_dComIfG_gameInfo)
//	805F4AF4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	805F4B0C: 80602678 (lit_3835)
//	805F4B10: 80602678 (lit_3835)
//	805F4B14: 8060267C (lit_3836)
//	805F4B18: 8060267C (lit_3836)
//	805F4B1C: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void anm_init(b_gnd_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/anm_init__FP11b_gnd_classifUcf.s"
}
#pragma pop


/* 805F4B48-805F4C00 00B8+00 s=7 e=0 z=0  None .text      h_anm_init__FP11b_gnd_classifUcf                             */
//	805F4B8C: 806029AC (stringBase0)
//	805F4B90: 806029AC (stringBase0)
//	805F4B98: 804061C0 (g_dComIfG_gameInfo)
//	805F4B9C: 804061C0 (g_dComIfG_gameInfo)
//	805F4BAC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	805F4BC4: 80602678 (lit_3835)
//	805F4BC8: 80602678 (lit_3835)
//	805F4BCC: 8060267C (lit_3836)
//	805F4BD0: 8060267C (lit_3836)
//	805F4BD4: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void h_anm_init(b_gnd_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/h_anm_init__FP11b_gnd_classifUcf.s"
}
#pragma pop


/* 805F4C00-805F4DCC 01CC+00 s=1 e=0 z=0  None .text      nodeCallBack__FP8J3DJointi                                   */
//	805F4C10: 803621D8 (_savegpr_28)
//	805F4C20: 80434AC8 (j3dSys)
//	805F4C24: 80434AC8 (j3dSys)
//	805F4C48: 80450768 (calc_mtx)
//	805F4C4C: 80450768 (calc_mtx)
//	805F4C54: 803464B0 (PSMTXCopy)
//	805F4C60: 80450768 (calc_mtx)
//	805F4C64: 80450768 (calc_mtx)
//	805F4C7C: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805F4C8C: 80450768 (calc_mtx)
//	805F4C90: 80450768 (calc_mtx)
//	805F4C98: 80602680 (lit_3902)
//	805F4C9C: 80602680 (lit_3902)
//	805F4CA4: 80602684 (lit_3904)
//	805F4CA8: 80602684 (lit_3904)
//	805F4CD4: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805F4CD8: 80450768 (calc_mtx)
//	805F4CDC: 80450768 (calc_mtx)
//	805F4CF0: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	805F4D00: 80450768 (calc_mtx)
//	805F4D04: 80450768 (calc_mtx)
//	805F4D10: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805F4D20: 80450768 (calc_mtx)
//	805F4D24: 80450768 (calc_mtx)
//	805F4D30: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	805F4D40: 80450768 (calc_mtx)
//	805F4D44: 80450768 (calc_mtx)
//	805F4D50: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805F4D60: 80450768 (calc_mtx)
//	805F4D64: 80450768 (calc_mtx)
//	805F4D78: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805F4D7C: 80450768 (calc_mtx)
//	805F4D80: 80450768 (calc_mtx)
//	805F4D94: 803464B0 (PSMTXCopy)
//	805F4D98: 80450768 (calc_mtx)
//	805F4D9C: 80450768 (calc_mtx)
//	805F4DA4: 80434BE4 (mCurrentMtx__6J3DSys)
//	805F4DA8: 80434BE4 (mCurrentMtx__6J3DSys)
//	805F4DAC: 803464B0 (PSMTXCopy)
//	805F4DB8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm static void nodeCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/nodeCallBack__FP8J3DJointi.s"
}
#pragma pop


/* 805F4DCC-805F4F38 016C+00 s=1 e=0 z=0  None .text      h_nodeCallBack__FP8J3DJointi                                 */
//	805F4DDC: 803621D8 (_savegpr_28)
//	805F4DEC: 80434AC8 (j3dSys)
//	805F4DF0: 80434AC8 (j3dSys)
//	805F4E14: 80450768 (calc_mtx)
//	805F4E18: 80450768 (calc_mtx)
//	805F4E20: 803464B0 (PSMTXCopy)
//	805F4E34: 80450768 (calc_mtx)
//	805F4E38: 80450768 (calc_mtx)
//	805F4E50: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	805F4E68: 80450768 (calc_mtx)
//	805F4E6C: 80450768 (calc_mtx)
//	805F4E84: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	805F4E9C: 80450768 (calc_mtx)
//	805F4EA0: 80450768 (calc_mtx)
//	805F4EB4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	805F4ECC: 80450768 (calc_mtx)
//	805F4ED0: 80450768 (calc_mtx)
//	805F4EE4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	805F4EE8: 80450768 (calc_mtx)
//	805F4EEC: 80450768 (calc_mtx)
//	805F4F00: 803464B0 (PSMTXCopy)
//	805F4F04: 80450768 (calc_mtx)
//	805F4F08: 80450768 (calc_mtx)
//	805F4F10: 80434BE4 (mCurrentMtx__6J3DSys)
//	805F4F14: 80434BE4 (mCurrentMtx__6J3DSys)
//	805F4F18: 803464B0 (PSMTXCopy)
//	805F4F24: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm static void h_nodeCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/h_nodeCallBack__FP8J3DJointi.s"
}
#pragma pop


/* 805F4F38-805F53A4 046C+00 s=1 e=0 z=0  None .text      daB_GND_Draw__FP11b_gnd_class                                */
//	805F4F48: 803621CC (_savegpr_25)
//	805F4F50: 80602664 (lit_3815)
//	805F4F54: 80602664 (lit_3815)
//	805F4F74: 8042CA54 (g_env_light)
//	805F4F78: 8042CA54 (g_env_light)
//	805F4F88: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	805F4FA8: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	805F4FBC: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	805F4FDC: 8000D5E8 (entry__13mDoExt_btpAnmFP16J3DMaterialTables)
//	805F4FE0: 8042CA54 (g_env_light)
//	805F4FE4: 8042CA54 (g_env_light)
//	805F4FF0: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	805F4FF8: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	805F4FFC: 8042CA54 (g_env_light)
//	805F5000: 8042CA54 (g_env_light)
//	805F5010: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	805F5014: 8042CA54 (g_env_light)
//	805F5018: 8042CA54 (g_env_light)
//	805F5028: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	805F5030: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	805F5040: 8042CA54 (g_env_light)
//	805F5044: 8042CA54 (g_env_light)
//	805F5060: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	805F50B0: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	805F50C0: 8042CA54 (g_env_light)
//	805F50C4: 8042CA54 (g_env_light)
//	805F50D4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	805F50DC: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	805F50F4: 8042CA54 (g_env_light)
//	805F50F8: 8042CA54 (g_env_light)
//	805F5104: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	805F5120: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	805F5148: 8000D5E8 (entry__13mDoExt_btpAnmFP16J3DMaterialTables)
//	805F5150: 80010680 (entryDL__14mDoExt_McaMorfFv)
//	805F5170: 8042CA54 (g_env_light)
//	805F5174: 8042CA54 (g_env_light)
//	805F518C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	805F5194: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	805F51C4: 8042CA54 (g_env_light)
//	805F51C8: 8042CA54 (g_env_light)
//	805F51D4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	805F51DC: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	805F522C: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	805F5230: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	805F5234: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	805F523C: 804061C0 (g_dComIfG_gameInfo)
//	805F5240: 804061C0 (g_dComIfG_gameInfo)
//	805F5254: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	805F5270: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	805F5290: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	805F52B8: 806029F0 (l_color)
//	805F52BC: 806029F0 (l_color)
//	805F52C4: 80013FB0 (update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c)
//	805F52E0: 804061C0 (g_dComIfG_gameInfo)
//	805F52E4: 804061C0 (g_dComIfG_gameInfo)
//	805F52FC: 80014738 (setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c)
//	805F5308: 806029F0 (l_color)
//	805F530C: 806029F0 (l_color)
//	805F5314: 80013FB0 (update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c)
//	805F5340: 80014738 (setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c)
//	805F534C: 806029F0 (l_color)
//	805F5350: 806029F0 (l_color)
//	805F5358: 80013FB0 (update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c)
//	805F5384: 80014738 (setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c)
//	805F5390: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void daB_GND_Draw(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/daB_GND_Draw__FP11b_gnd_class.s"
}
#pragma pop


/* 805F53A4-805F53E0 003C+00 s=6 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	805F53C4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__4cXyzFv.s"
}
#pragma pop


/* 805F53E0-805F5574 0194+00 s=1 e=0 z=0  None .text      shot_s_sub__FPvPv                                            */
//	805F53F0: 803621DC (_savegpr_29)
//	805F53FC: 80602664 (lit_3815)
//	805F5400: 80602664 (lit_3815)
//	805F5404: 80018CE0 (fopAc_IsActor__FPv)
//	805F543C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805F545C: 80347138 (PSVECSquareMag)
//	805F54CC: 80450AE0 (__float_nan)
//	805F54D0: 80450AE0 (__float_nan)
//	805F553C: 80450AE0 (__float_nan)
//	805F5540: 80450AE0 (__float_nan)
//	805F5560: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void shot_s_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/shot_s_sub__FPvPv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80602F68-80602F6C 0001+03 s=3 e=0 z=0  None .bss       @1109                                                        */
static u8 lit_1109[1 + 3 /* padding */];

/* 805F5574-805F5BE8 0674+00 s=1 e=0 z=0  None .text      gake_check__FP11b_gnd_class                                  */
//	805F5594: 803621CC (_savegpr_25)
//	805F559C: 80602F68 (lit_1109)
//	805F55A0: 80602F68 (lit_1109)
//	805F55A4: 80602664 (lit_3815)
//	805F55A8: 80602664 (lit_3815)
//	805F55B0: 8007757C (__ct__11dBgS_GndChkFv)
//	805F55FC: 806029F4 (chk_x)
//	805F5600: 806029F4 (chk_x)
//	805F5604: 80602A04 (chk_z)
//	805F5608: 80602A04 (chk_z)
//	805F5634: 80267674 (cM_atan2s__Fff)
//	805F5690: 800775F0 (__dt__11dBgS_GndChkFv)
//	805F56A4: 800775F0 (__dt__11dBgS_GndChkFv)
//	805F56C0: 80450768 (calc_mtx)
//	805F56C4: 80450768 (calc_mtx)
//	805F56D0: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805F56F4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F5704: 80347090 (PSVECAdd)
//	805F5710: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	805F5714: 804061C0 (g_dComIfG_gameInfo)
//	805F5718: 804061C0 (g_dComIfG_gameInfo)
//	805F5728: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805F5778: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F5788: 80347090 (PSVECAdd)
//	805F5794: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	805F57A0: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805F57F8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F5808: 80347090 (PSVECAdd)
//	805F5814: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	805F5820: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805F5874: 805F53A4 (__dt__4cXyzFv)
//	805F5878: 805F53A4 (__dt__4cXyzFv)
//	805F5880: 805F49D8 (__register_global_object)
//	805F58D0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805F58F0: 80347138 (PSVECSquareMag)
//	805F5960: 80450AE0 (__float_nan)
//	805F5964: 80450AE0 (__float_nan)
//	805F59D0: 80450AE0 (__float_nan)
//	805F59D4: 80450AE0 (__float_nan)
//	805F59EC: 80267674 (cM_atan2s__Fff)
//	805F59F4: 80450768 (calc_mtx)
//	805F59F8: 80450768 (calc_mtx)
//	805F5A00: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805F5A20: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F5A84: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F5A94: 80347090 (PSVECAdd)
//	805F5AA0: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	805F5AAC: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805F5ACC: 800775F0 (__dt__11dBgS_GndChkFv)
//	805F5AE8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F5AF8: 80347090 (PSVECAdd)
//	805F5B04: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	805F5B10: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805F5B30: 800775F0 (__dt__11dBgS_GndChkFv)
//	805F5B5C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F5B6C: 80347090 (PSVECAdd)
//	805F5B78: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	805F5B84: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805F5BA4: 800775F0 (__dt__11dBgS_GndChkFv)
//	805F5BB8: 800775F0 (__dt__11dBgS_GndChkFv)
//	805F5BD4: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void gake_check(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/gake_check__FP11b_gnd_class.s"
}
#pragma pop


/* 805F5BE8-805F5EF4 030C+00 s=1 e=0 z=0  None .text      saku_jump_check__FP11b_gnd_class                             */
//	805F5BF8: 803621DC (_savegpr_29)
//	805F5BFC: 80602664 (lit_3815)
//	805F5C00: 80602664 (lit_3815)
//	805F5C20: 80077C68 (__ct__11dBgS_LinChkFv)
//	805F5C24: 80602F48 (__vt__8cM3dGPla)
//	805F5C28: 80602F48 (__vt__8cM3dGPla)
//	805F5C30: 80450768 (calc_mtx)
//	805F5C34: 80450768 (calc_mtx)
//	805F5C40: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805F5C44: 80450768 (calc_mtx)
//	805F5C48: 80450768 (calc_mtx)
//	805F5C54: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805F5C78: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F5C88: 80347090 (PSVECAdd)
//	805F5CD0: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	805F5CD4: 804061C0 (g_dComIfG_gameInfo)
//	805F5CD8: 804061C0 (g_dComIfG_gameInfo)
//	805F5CE8: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	805F5D00: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	805F5D10: 802681E4 (cBgW_CheckBGround__Ff)
//	805F5D1C: 80602F48 (__vt__8cM3dGPla)
//	805F5D20: 80602F48 (__vt__8cM3dGPla)
//	805F5D30: 80077CDC (__dt__11dBgS_LinChkFv)
//	805F5D6C: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	805F5D78: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	805F5D90: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	805F5DA0: 802681E4 (cBgW_CheckBGround__Ff)
//	805F5DDC: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F5DEC: 80347090 (PSVECAdd)
//	805F5E00: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	805F5E0C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	805F5E34: 80602F48 (__vt__8cM3dGPla)
//	805F5E38: 80602F48 (__vt__8cM3dGPla)
//	805F5E48: 80077CDC (__dt__11dBgS_LinChkFv)
//	805F5E60: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805F5E7C: 80267674 (cM_atan2s__Fff)
//	805F5EA0: 80602F48 (__vt__8cM3dGPla)
//	805F5EA4: 80602F48 (__vt__8cM3dGPla)
//	805F5EB4: 80077CDC (__dt__11dBgS_LinChkFv)
//	805F5EC0: 80602F48 (__vt__8cM3dGPla)
//	805F5EC4: 80602F48 (__vt__8cM3dGPla)
//	805F5ED4: 80077CDC (__dt__11dBgS_LinChkFv)
//	805F5EE0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void saku_jump_check(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/saku_jump_check__FP11b_gnd_class.s"
}
#pragma pop


/* 805F5EF4-805F5F3C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	805F5F0C: 80602F48 (__vt__8cM3dGPla)
//	805F5F10: 80602F48 (__vt__8cM3dGPla)
//	805F5F20: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 805F5F3C-805F6068 012C+00 s=1 e=0 z=0  None .text      b_gnd_h_wait__FP11b_gnd_class                                */
//	805F5F4C: 803621DC (_savegpr_29)
//	805F5F54: 80602664 (lit_3815)
//	805F5F58: 80602664 (lit_3815)
//	805F5F8C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805F5F90: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805F5FAC: 802AF010 (bgmStart__8Z2SeqMgrFUlUll)
//	805F5FC4: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F5FDC: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F6010: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F604C: 8026FA80 (cLib_addCalc0__FPfff)
//	805F6054: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_h_wait(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_h_wait__FP11b_gnd_class.s"
}
#pragma pop


/* 805F6068-805F6290 0228+00 s=1 e=0 z=0  None .text      b_gnd_h_wait2__FP11b_gnd_class                               */
//	805F6078: 803621D8 (_savegpr_28)
//	805F6080: 80602664 (lit_3815)
//	805F6084: 80602664 (lit_3815)
//	805F60F0: 80267954 (cM_rndF__Ff)
//	805F613C: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F6154: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F6170: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F6188: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F61B4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F61C8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F6210: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F6228: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F6274: 8026FA80 (cLib_addCalc0__FPfff)
//	805F627C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_h_wait2(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_h_wait2__FP11b_gnd_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 80602F6C-80602F70 0001+03 s=0 e=0 z=0  None .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 80602F70-80602F74 0001+03 s=0 e=0 z=0  None .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 80602F74-80602F78 0001+03 s=0 e=0 z=0  None .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 80602F78-80602F7C 0001+03 s=0 e=0 z=0  None .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 80602F7C-80602F80 0001+03 s=0 e=0 z=0  None .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 80602F80-80602F84 0001+03 s=0 e=0 z=0  None .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 80602F84-80602F88 0001+03 s=0 e=0 z=0  None .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 80602F88-80602F8C 0001+03 s=0 e=0 z=0  None .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 80602F8C-80602F90 0001+03 s=0 e=0 z=0  None .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 80602F90-80602F94 0001+03 s=0 e=0 z=0  None .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 80602F94-80602F98 0001+03 s=0 e=0 z=0  None .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 80602F98-80602F9C 0001+03 s=0 e=0 z=0  None .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 80602F9C-80602FA0 0001+03 s=0 e=0 z=0  None .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 80602FA0-80602FA4 0001+03 s=0 e=0 z=0  None .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 80602FA4-80602FA8 0004+00 s=1 e=0 z=0  None .bss       None                                                         */
static u8 struct_80602FA4[4];

/* 80602FA8-80602FB4 000C+00 s=0 e=0 z=0  None .bss       @3810                                                        */
u8 lit_3810[12];

/* 80602FB4-80602FD0 001C+00 s=3 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[28];

/* 80602FD0-80602FE0 000C+04 s=0 e=0 z=0  None .bss       @4187                                                        */
u8 lit_4187[12 + 4 /* padding */];

/* 80602FE0-80602FEC 000C+00 s=0 e=0 z=0  None .bss       k_pos$4186                                                   */
u8 data_80602FE0[12];

/* 80602FEC-80602FF8 000C+00 s=0 e=0 z=0  None .bss       @4509                                                        */
u8 lit_4509[12];

/* 80602FF8-8060305C 0060+04 s=2 e=0 z=0  None .bss       b_path                                                       */
static u8 b_path[96 + 4 /* padding */];

/* 805F6290-805F6FA4 0D14+00 s=2 e=0 z=0  None .text      b_gnd_h_run_a__FP11b_gnd_class                               */
//	805F62D0: 803621B8 (_savegpr_20)
//	805F62D8: 80602664 (lit_3815)
//	805F62DC: 80602664 (lit_3815)
//	805F62E0: 804061C0 (g_dComIfG_gameInfo)
//	805F62E4: 804061C0 (g_dComIfG_gameInfo)
//	805F6318: 804061C0 (g_dComIfG_gameInfo)
//	805F631C: 804061C0 (g_dComIfG_gameInfo)
//	805F6384: 80602A14 (lit_4975)
//	805F6388: 80602A14 (lit_4975)
//	805F63BC: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F63D4: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F63FC: 80602FF8 (b_path)
//	805F6400: 80602FF8 (b_path)
//	805F6418: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805F6440: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805F6460: 80347138 (PSVECSquareMag)
//	805F64CC: 80450AE0 (__float_nan)
//	805F64D0: 80450AE0 (__float_nan)
//	805F653C: 80450AE0 (__float_nan)
//	805F6540: 80450AE0 (__float_nan)
//	805F6550: 80347138 (PSVECSquareMag)
//	805F65BC: 80450AE0 (__float_nan)
//	805F65C0: 80450AE0 (__float_nan)
//	805F662C: 80450AE0 (__float_nan)
//	805F6630: 80450AE0 (__float_nan)
//	805F6658: 80267954 (cM_rndF__Ff)
//	805F6700: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F6760: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F6798: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F6848: 80267954 (cM_rndF__Ff)
//	805F6888: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F68A0: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F6900: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F6960: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F69D0: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F69EC: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F6A3C: 80602FB4 (l_HIO)
//	805F6A40: 80602FB4 (l_HIO)
//	805F6A74: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F6A8C: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F6B1C: 80602FF8 (b_path)
//	805F6B20: 80602FF8 (b_path)
//	805F6B2C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805F6B88: 80602FF8 (b_path)
//	805F6B8C: 80602FF8 (b_path)
//	805F6B98: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805F6BB4: 80267674 (cM_atan2s__Fff)
//	805F6C18: 80267674 (cM_atan2s__Fff)
//	805F6C8C: 80267954 (cM_rndF__Ff)
//	805F6CB0: 80439A20 (sincosTable___5JMath)
//	805F6CB4: 80439A20 (sincosTable___5JMath)
//	805F6D10: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F6D34: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F6D44: 80602FB4 (l_HIO)
//	805F6D48: 80602FB4 (l_HIO)
//	805F6D60: 804061C0 (g_dComIfG_gameInfo)
//	805F6D64: 804061C0 (g_dComIfG_gameInfo)
//	805F6D70: 80602FB4 (l_HIO)
//	805F6D74: 80602FB4 (l_HIO)
//	805F6DA4: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	805F6DC0: 80602FB4 (l_HIO)
//	805F6DC4: 80602FB4 (l_HIO)
//	805F6DF0: 80602FB4 (l_HIO)
//	805F6DF4: 80602FB4 (l_HIO)
//	805F6E2C: 8026FA3C (cLib_addCalc2__FPffff)
//	805F6E78: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F6EB0: 8026FA3C (cLib_addCalc2__FPffff)
//	805F6ED8: 80450768 (calc_mtx)
//	805F6EDC: 80450768 (calc_mtx)
//	805F6EEC: 80602FF8 (b_path)
//	805F6EF0: 80602FF8 (b_path)
//	805F6EFC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805F6F04: 80267954 (cM_rndF__Ff)
//	805F6F18: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F6F90: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_h_run_a(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_h_run_a__FP11b_gnd_class.s"
}
#pragma pop


/* 805F6FA4-805F74F4 0550+00 s=1 e=0 z=0  None .text      b_gnd_h_run_p__FP11b_gnd_class                               */
//	805F6FD4: 803621CC (_savegpr_25)
//	805F6FDC: 80602664 (lit_3815)
//	805F6FE0: 80602664 (lit_3815)
//	805F6FE4: 804061C0 (g_dComIfG_gameInfo)
//	805F6FE8: 804061C0 (g_dComIfG_gameInfo)
//	805F7018: 804061C0 (g_dComIfG_gameInfo)
//	805F701C: 804061C0 (g_dComIfG_gameInfo)
//	805F70DC: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F70F4: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F7140: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F71A4: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F71EC: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F7208: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F7254: 80450768 (calc_mtx)
//	805F7258: 80450768 (calc_mtx)
//	805F7264: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805F72AC: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F72BC: 80347090 (PSVECAdd)
//	805F72CC: 803470B4 (PSVECSubtract)
//	805F72D8: 80267674 (cM_atan2s__Fff)
//	805F72F0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F7304: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F7310: 80602FB4 (l_HIO)
//	805F7314: 80602FB4 (l_HIO)
//	805F737C: 80602FB4 (l_HIO)
//	805F7380: 80602FB4 (l_HIO)
//	805F7434: 8026FA3C (cLib_addCalc2__FPffff)
//	805F7480: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F74B8: 8026FA3C (cLib_addCalc2__FPffff)
//	805F74E0: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_h_run_p(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_h_run_p__FP11b_gnd_class.s"
}
#pragma pop


/* 805F74F4-805F76C4 01D0+00 s=1 e=0 z=0  None .text      b_gnd_h_jump__FP11b_gnd_class                                */
//	805F750C: 80602664 (lit_3815)
//	805F7510: 80602664 (lit_3815)
//	805F7558: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F7570: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F75CC: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F75E4: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F7610: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F7628: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F7690: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F76A8: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_h_jump(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_h_jump__FP11b_gnd_class.s"
}
#pragma pop


/* 805F76C4-805F7A10 034C+00 s=1 e=0 z=0  None .text      b_gnd_h_end__FP11b_gnd_class                                 */
//	805F76D4: 803621D8 (_savegpr_28)
//	805F76DC: 80602664 (lit_3815)
//	805F76E0: 80602664 (lit_3815)
//	805F76EC: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F76F0: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F76F8: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F7740: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805F7744: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805F7758: 802AF408 (bgmStop__8Z2SeqMgrFUll)
//	805F7778: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805F7790: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F78A0: 804061C0 (g_dComIfG_gameInfo)
//	805F78A4: 804061C0 (g_dComIfG_gameInfo)
//	805F78EC: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	805F7904: 8026FA80 (cLib_addCalc0__FPfff)
//	805F7920: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F7924: 804061C0 (g_dComIfG_gameInfo)
//	805F7928: 804061C0 (g_dComIfG_gameInfo)
//	805F7978: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	805F79FC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_h_end(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_h_end__FP11b_gnd_class.s"
}
#pragma pop


/* 805F7A10-805F7E88 0478+00 s=2 e=0 z=0  None .text      b_gnd_g_wait__FP11b_gnd_class                                */
//	805F7A28: 803621D4 (_savegpr_27)
//	805F7A30: 80602664 (lit_3815)
//	805F7A34: 80602664 (lit_3815)
//	805F7A48: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F7A4C: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F7A54: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F7A64: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	805F7A68: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	805F7A70: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F7AE0: 80602A6C (lit_5308)
//	805F7AE4: 80602A6C (lit_5308)
//	805F7B14: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F7B1C: 80267954 (cM_rndF__Ff)
//	805F7B68: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F7B70: 80267954 (cM_rndF__Ff)
//	805F7BAC: 80267954 (cM_rndF__Ff)
//	805F7C5C: 80267954 (cM_rndF__Ff)
//	805F7CCC: 80267954 (cM_rndF__Ff)
//	805F7D5C: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F7DC4: 8026FA3C (cLib_addCalc2__FPffff)
//	805F7DF4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F7E24: 80439A20 (sincosTable___5JMath)
//	805F7E28: 80439A20 (sincosTable___5JMath)
//	805F7E74: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_g_wait(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_g_wait__FP11b_gnd_class.s"
}
#pragma pop


/* 805F7E88-805F878C 0904+00 s=2 e=0 z=0  None .text      b_gnd_g_attack__FP11b_gnd_class                              */
//	805F7EA8: 803621CC (_savegpr_25)
//	805F7EB0: 80602664 (lit_3815)
//	805F7EB4: 80602664 (lit_3815)
//	805F7EB8: 804061C0 (g_dComIfG_gameInfo)
//	805F7EBC: 804061C0 (g_dComIfG_gameInfo)
//	805F7EEC: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F7EF0: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F7EF8: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F7F10: 80602A88 (lit_5543)
//	805F7F14: 80602A88 (lit_5543)
//	805F7F44: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8018: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F80E4: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8194: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8280: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F833C: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F83B8: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F83FC: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	805F841C: 804061C0 (g_dComIfG_gameInfo)
//	805F8420: 804061C0 (g_dComIfG_gameInfo)
//	805F8468: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8550: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	805F8560: 804061C0 (g_dComIfG_gameInfo)
//	805F8564: 804061C0 (g_dComIfG_gameInfo)
//	805F857C: 800873D4 (cc_pl_cut_bit_get__Fv)
//	805F85C4: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8630: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F86C4: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8748: 8026FA3C (cLib_addCalc2__FPffff)
//	805F875C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F8778: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_g_attack(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_g_attack__FP11b_gnd_class.s"
}
#pragma pop


/* 805F878C-805F8C20 0494+00 s=1 e=0 z=0  None .text      b_gnd_g_defence__FP11b_gnd_class                             */
//	805F879C: 803621D4 (_savegpr_27)
//	805F87A4: 80602664 (lit_3815)
//	805F87A8: 80602664 (lit_3815)
//	805F87CC: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F87D0: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F87D8: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F87E8: 800873D4 (cc_pl_cut_bit_get__Fv)
//	805F8820: 80267954 (cM_rndF__Ff)
//	805F8850: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F886C: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8894: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F88B0: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8904: 804061C0 (g_dComIfG_gameInfo)
//	805F8908: 804061C0 (g_dComIfG_gameInfo)
//	805F8934: 80267954 (cM_rndF__Ff)
//	805F8964: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8980: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F89A8: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F89C4: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8A20: 80267954 (cM_rndF__Ff)
//	805F8A34: 80267954 (cM_rndF__Ff)
//	805F8A58: 804061C0 (g_dComIfG_gameInfo)
//	805F8A5C: 804061C0 (g_dComIfG_gameInfo)
//	805F8A84: 800873D4 (cc_pl_cut_bit_get__Fv)
//	805F8B98: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8BB4: 8026FA3C (cLib_addCalc2__FPffff)
//	805F8BC8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F8BD0: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	805F8C0C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_g_defence(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_g_defence__FP11b_gnd_class.s"
}
#pragma pop


/* 805F8C20-805F8F88 0368+00 s=1 e=0 z=0  None .text      b_gnd_g_jump__FP11b_gnd_class                                */
//	805F8C30: 803621D8 (_savegpr_28)
//	805F8C38: 80602664 (lit_3815)
//	805F8C3C: 80602664 (lit_3815)
//	805F8C4C: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F8C50: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F8C58: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F8CAC: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8D08: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8D28: 80267954 (cM_rndF__Ff)
//	805F8D3C: 8026798C (cM_rndFX__Ff)
//	805F8D60: 80267954 (cM_rndF__Ff)
//	805F8D74: 8026798C (cM_rndFX__Ff)
//	805F8DB8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F8E18: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8E90: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F8EE8: 80267954 (cM_rndF__Ff)
//	805F8F54: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F8F74: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_g_jump(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_g_jump__FP11b_gnd_class.s"
}
#pragma pop


/* 805F8F88-805F9220 0298+00 s=1 e=0 z=0  None .text      b_gnd_g_side__FP11b_gnd_class                                */
//	805F8F98: 803621DC (_savegpr_29)
//	805F8FA0: 80602664 (lit_3815)
//	805F8FA4: 80602664 (lit_3815)
//	805F8FB0: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F8FB4: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F8FBC: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F8FF8: 80267954 (cM_rndF__Ff)
//	805F901C: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F9044: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F9084: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805F90B4: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F90D0: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F9120: 8026FA80 (cLib_addCalc0__FPfff)
//	805F91A4: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F91C4: 80267954 (cM_rndF__Ff)
//	805F91FC: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F920C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_g_side(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_g_side__FP11b_gnd_class.s"
}
#pragma pop


/* 805F9220-805F92FC 00DC+00 s=1 e=0 z=0  None .text      b_gnd_g_tuba__FP11b_gnd_class                                */
//	805F9230: 803621DC (_savegpr_29)
//	805F9238: 80602664 (lit_3815)
//	805F923C: 80602664 (lit_3815)
//	805F9248: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F924C: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F9254: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F9294: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F92C8: 804061C0 (g_dComIfG_gameInfo)
//	805F92CC: 804061C0 (g_dComIfG_gameInfo)
//	805F92E0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	805F92E8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_g_tuba(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_g_tuba__FP11b_gnd_class.s"
}
#pragma pop


/* 805F92FC-805F94A8 01AC+00 s=1 e=0 z=0  None .text      b_gnd_g_damage__FP11b_gnd_class                              */
//	805F930C: 803621D4 (_savegpr_27)
//	805F9314: 80602664 (lit_3815)
//	805F9318: 80602664 (lit_3815)
//	805F931C: 804061C0 (g_dComIfG_gameInfo)
//	805F9320: 804061C0 (g_dComIfG_gameInfo)
//	805F9344: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F9348: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F9350: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F9380: 80267954 (cM_rndF__Ff)
//	805F93A4: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F93C0: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F948C: 8026FA3C (cLib_addCalc2__FPffff)
//	805F9494: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_g_damage(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_g_damage__FP11b_gnd_class.s"
}
#pragma pop


/* 805F94A8-805F98A0 03F8+00 s=1 e=0 z=0  None .text      b_gnd_g_down__FP11b_gnd_class                                */
//	805F94B8: 803621D8 (_savegpr_28)
//	805F94C0: 80602664 (lit_3815)
//	805F94C4: 80602664 (lit_3815)
//	805F94E4: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F94E8: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F94F0: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F9558: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F9574: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F95E8: 8026FA80 (cLib_addCalc0__FPfff)
//	805F9608: 803DD470 (now__14mDoMtx_stack_c)
//	805F960C: 803DD470 (now__14mDoMtx_stack_c)
//	805F9610: 803464B0 (PSMTXCopy)
//	805F9614: 803DD470 (now__14mDoMtx_stack_c)
//	805F9618: 803DD470 (now__14mDoMtx_stack_c)
//	805F9650: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	805F9668: 804061C0 (g_dComIfG_gameInfo)
//	805F966C: 804061C0 (g_dComIfG_gameInfo)
//	805F9680: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	805F973C: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F9750: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	805F9790: 804061C0 (g_dComIfG_gameInfo)
//	805F9794: 804061C0 (g_dComIfG_gameInfo)
//	805F97C0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805F97C4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805F97D8: 802AF408 (bgmStop__8Z2SeqMgrFUll)
//	805F97E8: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	805F9808: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805F988C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_g_down(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_g_down__FP11b_gnd_class.s"
}
#pragma pop


/* 805F98A0-805F98F8 0058+00 s=1 e=0 z=0  None .text      b_gnd_g_end__FP11b_gnd_class                                 */
//	805F98C4: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F98C8: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F98D0: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void b_gnd_g_end(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/b_gnd_g_end__FP11b_gnd_class.s"
}
#pragma pop


/* 805F98F8-805F9BE4 02EC+00 s=1 e=0 z=0  None .text      damage_check__FP11b_gnd_class                                */
//	805F9908: 803621C4 (_savegpr_23)
//	805F9910: 80602664 (lit_3815)
//	805F9914: 80602664 (lit_3815)
//	805F9918: 804061C0 (g_dComIfG_gameInfo)
//	805F991C: 804061C0 (g_dComIfG_gameInfo)
//	805F9928: 80083830 (Move__10dCcD_GSttsFv)
//	805F9954: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F9958: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805F9960: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805F9980: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	805F9990: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	805F99A0: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	805F9B10: 80450768 (calc_mtx)
//	805F9B14: 80450768 (calc_mtx)
//	805F9B1C: 803464B0 (PSMTXCopy)
//	805F9B24: 8026798C (cM_rndFX__Ff)
//	805F9B30: 8026798C (cM_rndFX__Ff)
//	805F9B44: 8026798C (cM_rndFX__Ff)
//	805F9B54: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F9B58: 804061C0 (g_dComIfG_gameInfo)
//	805F9B5C: 804061C0 (g_dComIfG_gameInfo)
//	805F9B7C: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	805F9BA8: 80451125 (struct_80451124)
//	805F9BAC: 80451125 (struct_80451124)
//	805F9BD0: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void damage_check(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/damage_check__FP11b_gnd_class.s"
}
#pragma pop


/* 805F9BE4-805FA2FC 0718+00 s=1 e=0 z=0  None .text      eff_set_h__FP11b_gnd_class                                   */
//	805F9BFC: 803621C8 (_savegpr_24)
//	805F9C04: 80602664 (lit_3815)
//	805F9C08: 80602664 (lit_3815)
//	805F9C24: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805F9C4C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805F9C70: 8007757C (__ct__11dBgS_GndChkFv)
//	805F9C78: 800777B0 (__ct__18dBgS_ObjGndChk_SplFv)
//	805F9CA8: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	805F9CB4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	805F9CC0: 804061C0 (g_dComIfG_gameInfo)
//	805F9CC4: 804061C0 (g_dComIfG_gameInfo)
//	805F9CD4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805F9CE4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805F9D34: 80450768 (calc_mtx)
//	805F9D38: 80450768 (calc_mtx)
//	805F9D40: 803464B0 (PSMTXCopy)
//	805F9D4C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F9D84: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	805F9D94: 804061C0 (g_dComIfG_gameInfo)
//	805F9D98: 804061C0 (g_dComIfG_gameInfo)
//	805F9DE8: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	805F9E08: 80450768 (calc_mtx)
//	805F9E0C: 80450768 (calc_mtx)
//	805F9E14: 803464B0 (PSMTXCopy)
//	805F9E20: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F9E58: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	805F9E68: 804061C0 (g_dComIfG_gameInfo)
//	805F9E6C: 804061C0 (g_dComIfG_gameInfo)
//	805F9EBC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	805F9EDC: 80450768 (calc_mtx)
//	805F9EE0: 80450768 (calc_mtx)
//	805F9EE8: 803464B0 (PSMTXCopy)
//	805F9EF4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805F9F2C: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	805F9F3C: 804061C0 (g_dComIfG_gameInfo)
//	805F9F40: 804061C0 (g_dComIfG_gameInfo)
//	805F9F90: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	805F9FB0: 80450768 (calc_mtx)
//	805F9FB4: 80450768 (calc_mtx)
//	805F9FBC: 803464B0 (PSMTXCopy)
//	805F9FC8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FA000: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	805FA010: 804061C0 (g_dComIfG_gameInfo)
//	805FA014: 804061C0 (g_dComIfG_gameInfo)
//	805FA064: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	805FA09C: 80450768 (calc_mtx)
//	805FA0A0: 80450768 (calc_mtx)
//	805FA0A8: 803464B0 (PSMTXCopy)
//	805FA0B4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FA0F4: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	805FA120: 802673F4 (__ct__5csXyzFsss)
//	805FA12C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805FA140: 804061C0 (g_dComIfG_gameInfo)
//	805FA144: 804061C0 (g_dComIfG_gameInfo)
//	805FA148: 80602AD4 (w_eff_name)
//	805FA14C: 80602AD4 (w_eff_name)
//	805FA19C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	805FA1E8: 803DD470 (now__14mDoMtx_stack_c)
//	805FA1EC: 803DD470 (now__14mDoMtx_stack_c)
//	805FA1F0: 803464B0 (PSMTXCopy)
//	805FA1F4: 803DD470 (now__14mDoMtx_stack_c)
//	805FA1F8: 803DD470 (now__14mDoMtx_stack_c)
//	805FA220: 804061C0 (g_dComIfG_gameInfo)
//	805FA224: 804061C0 (g_dComIfG_gameInfo)
//	805FA228: 80602AE4 (e_name_6046)
//	805FA22C: 80602AE4 (e_name_6046)
//	805FA27C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	805FA2CC: 80077848 (__dt__18dBgS_ObjGndChk_SplFv)
//	805FA2D8: 800775F0 (__dt__11dBgS_GndChkFv)
//	805FA2E8: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void eff_set_h(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/eff_set_h__FP11b_gnd_class.s"
}
#pragma pop


/* 805FA2FC-805FA3E4 00E8+00 s=1 e=0 z=0  None .text      eff_set__FP11b_gnd_class                                     */
//	805FA30C: 803621D4 (_savegpr_27)
//	805FA348: 806026E8 (lit_4460)
//	805FA34C: 806026E8 (lit_4460)
//	805FA358: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	805FA374: 80602720 (lit_4969)
//	805FA378: 80602720 (lit_4969)
//	805FA3AC: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	805FA3D0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void eff_set(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/eff_set__FP11b_gnd_class.s"
}
#pragma pop


/* 805FA3E4-805FA430 004C+00 s=2 e=0 z=0  None .text      s_fkdel_sub__FPvPv                                           */
//	805FA3F8: 80018CE0 (fopAc_IsActor__FPv)
//	805FA414: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_fkdel_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/s_fkdel_sub__FPvPv.s"
}
#pragma pop


/* 805FA430-805FA47C 004C+00 s=1 e=0 z=0  None .text      s_objgbdel_sub__FPvPv                                        */
//	805FA444: 80018CE0 (fopAc_IsActor__FPv)
//	805FA460: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_objgbdel_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/s_objgbdel_sub__FPvPv.s"
}
#pragma pop


/* 805FA47C-805FA758 02DC+00 s=1 e=0 z=0  None .text      h_damage_check__FP11b_gnd_class                              */
//	805FA48C: 803621CC (_savegpr_25)
//	805FA494: 80602664 (lit_3815)
//	805FA498: 80602664 (lit_3815)
//	805FA4A0: 80083830 (Move__10dCcD_GSttsFv)
//	805FA4B8: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805FA4BC: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805FA4C4: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805FA4E4: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	805FA4F4: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	805FA504: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	805FA554: 805FA3E4 (s_fkdel_sub__FPvPv)
//	805FA558: 805FA3E4 (s_fkdel_sub__FPvPv)
//	805FA560: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	805FA5F0: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	805FA600: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	805FA6D0: 80450768 (calc_mtx)
//	805FA6D4: 80450768 (calc_mtx)
//	805FA6DC: 803464B0 (PSMTXCopy)
//	805FA6E4: 8026798C (cM_rndFX__Ff)
//	805FA6F0: 8026798C (cM_rndFX__Ff)
//	805FA704: 8026798C (cM_rndFX__Ff)
//	805FA714: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FA718: 804061C0 (g_dComIfG_gameInfo)
//	805FA71C: 804061C0 (g_dComIfG_gameInfo)
//	805FA73C: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	805FA744: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void h_damage_check(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/h_damage_check__FP11b_gnd_class.s"
}
#pragma pop


/* 805FA758-805FAFF0 0898+00 s=2 e=0 z=0  None .text      action__FP11b_gnd_class                                      */
//	805FA770: 803621C8 (_savegpr_24)
//	805FA778: 80602664 (lit_3815)
//	805FA77C: 80602664 (lit_3815)
//	805FA780: 804061C0 (g_dComIfG_gameInfo)
//	805FA784: 804061C0 (g_dComIfG_gameInfo)
//	805FA790: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	805FA7A0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	805FA7E8: 80602AEC (lit_6511)
//	805FA7EC: 80602AEC (lit_6511)
//	805FA804: 805F5F3C (b_gnd_h_wait__FP11b_gnd_class)
//	805FA810: 805F6068 (b_gnd_h_wait2__FP11b_gnd_class)
//	805FA81C: 805F6290 (b_gnd_h_run_a__FP11b_gnd_class)
//	805FA82C: 805F6FA4 (b_gnd_h_run_p__FP11b_gnd_class)
//	805FA83C: 805F74F4 (b_gnd_h_jump__FP11b_gnd_class)
//	805FA848: 805F76C4 (b_gnd_h_end__FP11b_gnd_class)
//	805FA864: 805F7A10 (b_gnd_g_wait__FP11b_gnd_class)
//	805FA874: 805F7E88 (b_gnd_g_attack__FP11b_gnd_class)
//	805FA884: 805F878C (b_gnd_g_defence__FP11b_gnd_class)
//	805FA890: 805F8C20 (b_gnd_g_jump__FP11b_gnd_class)
//	805FA8A4: 805F8F88 (b_gnd_g_side__FP11b_gnd_class)
//	805FA8B4: 805F9220 (b_gnd_g_tuba__FP11b_gnd_class)
//	805FA8C0: 805F92FC (b_gnd_g_damage__FP11b_gnd_class)
//	805FA8D4: 805F94A8 (b_gnd_g_down__FP11b_gnd_class)
//	805FA8EC: 805F98A0 (b_gnd_g_end__FP11b_gnd_class)
//	805FA904: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	805FA948: 805F5BE8 (saku_jump_check__FP11b_gnd_class)
//	805FA970: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	805FA99C: 805F53E0 (shot_s_sub__FPvPv)
//	805FA9A0: 805F53E0 (shot_s_sub__FPvPv)
//	805FA9A8: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	805FAA1C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805FAA24: 80347138 (PSVECSquareMag)
//	805FAA94: 80450AE0 (__float_nan)
//	805FAA98: 80450AE0 (__float_nan)
//	805FAB04: 80450AE0 (__float_nan)
//	805FAB08: 80450AE0 (__float_nan)
//	805FAB24: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805FAB2C: 80347138 (PSVECSquareMag)
//	805FAB9C: 80450AE0 (__float_nan)
//	805FABA0: 80450AE0 (__float_nan)
//	805FAC0C: 80450AE0 (__float_nan)
//	805FAC10: 80450AE0 (__float_nan)
//	805FAC20: 804061C0 (g_dComIfG_gameInfo)
//	805FAC24: 804061C0 (g_dComIfG_gameInfo)
//	805FAC90: 800873D4 (cc_pl_cut_bit_get__Fv)
//	805FACD0: 8001CFD8 (fopAcM_plAngleCheck__FPC10fopAc_ac_cs)
//	805FACE0: 8015F398 (checkMasterSwordEquip__9daPy_py_cFv)
//	805FAD30: 80267954 (cM_rndF__Ff)
//	805FAD64: 80267954 (cM_rndF__Ff)
//	805FADF0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805FAE1C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805FAE70: 80267674 (cM_atan2s__Fff)
//	805FAEAC: 80267674 (cM_atan2s__Fff)
//	805FAF04: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805FAF18: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805FAF34: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805FAF98: 80267954 (cM_rndF__Ff)
//	805FAFC4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805FAFDC: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void action(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/action__FP11b_gnd_class.s"
}
#pragma pop


/* 805FAFF0-805FB0F0 0100+00 s=1 e=0 z=0  None .text      ball_bg_check__FP11b_gnd_classi                              */
//	805FB010: 80077C68 (__ct__11dBgS_LinChkFv)
//	805FB044: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805FB050: 806026E8 (lit_4460)
//	805FB054: 806026E8 (lit_4460)
//	805FB058: 80266B84 (__ml__4cXyzCFf)
//	805FB068: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	805FB094: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	805FB098: 804061C0 (g_dComIfG_gameInfo)
//	805FB09C: 804061C0 (g_dComIfG_gameInfo)
//	805FB0A8: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	805FB0BC: 80077CDC (__dt__11dBgS_LinChkFv)
//	805FB0D0: 80077CDC (__dt__11dBgS_LinChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  int False
asm static void ball_bg_check(b_gnd_class* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/ball_bg_check__FP11b_gnd_classi.s"
}
#pragma pop


/* 805FB0F0-805FB414 0324+00 s=1 e=0 z=0  None .text      himo_control1__FP11b_gnd_classP4cXyziSc                      */
//	805FB130: 803621C8 (_savegpr_24)
//	805FB140: 80602664 (lit_3815)
//	805FB144: 80602664 (lit_3815)
//	805FB16C: 80450768 (calc_mtx)
//	805FB170: 80450768 (calc_mtx)
//	805FB17C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FB180: 80450768 (calc_mtx)
//	805FB184: 80450768 (calc_mtx)
//	805FB190: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805FB1C4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FB1E4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FB244: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FB27C: 80439A20 (sincosTable___5JMath)
//	805FB280: 80439A20 (sincosTable___5JMath)
//	805FB290: 80450768 (calc_mtx)
//	805FB294: 80450768 (calc_mtx)
//	805FB330: 80267674 (cM_atan2s__Fff)
//	805FB358: 80267674 (cM_atan2s__Fff)
//	805FB36C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FB378: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805FB384: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FB400: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  cXyz* False
// 	 cXyz False
//  int False
//  s8 False
asm static void himo_control1(b_gnd_class* param_0, cXyz* param_1, int param_2, s8 param_3) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/himo_control1__FP11b_gnd_classP4cXyziSc.s"
}
#pragma pop


/* 805FB414-805FB620 020C+00 s=1 e=0 z=0  None .text      himo_control2__FP11b_gnd_classP4cXyziSc                      */
//	805FB444: 803621C4 (_savegpr_23)
//	805FB450: 80602664 (lit_3815)
//	805FB454: 80602664 (lit_3815)
//	805FB4B0: 80450768 (calc_mtx)
//	805FB4B4: 80450768 (calc_mtx)
//	805FB4E4: 80267674 (cM_atan2s__Fff)
//	805FB50C: 80267674 (cM_atan2s__Fff)
//	805FB520: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FB52C: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805FB538: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FB60C: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  cXyz* False
// 	 cXyz False
//  int False
//  s8 False
asm static void himo_control2(b_gnd_class* param_0, cXyz* param_1, int param_2, s8 param_3) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/himo_control2__FP11b_gnd_classP4cXyziSc.s"
}
#pragma pop


/* 805FB620-805FB704 00E4+00 s=1 e=0 z=0  None .text      cam_3d_morf__FP11b_gnd_classf                                */
//	805FB658: 8026FA3C (cLib_addCalc2__FPffff)
//	805FB674: 8026FA3C (cLib_addCalc2__FPffff)
//	805FB690: 8026FA3C (cLib_addCalc2__FPffff)
//	805FB6AC: 8026FA3C (cLib_addCalc2__FPffff)
//	805FB6C8: 8026FA3C (cLib_addCalc2__FPffff)
//	805FB6E4: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
//  f32 False
asm static void cam_3d_morf(b_gnd_class* param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/cam_3d_morf__FP11b_gnd_classf.s"
}
#pragma pop


/* 805FB704-805FB7A4 00A0+00 s=1 e=0 z=0  None .text      cam_spd_set__FP11b_gnd_class                                 */
//	805FB794: 80602678 (lit_3835)
//	805FB798: 80602678 (lit_3835)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void cam_spd_set(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/cam_spd_set__FP11b_gnd_class.s"
}
#pragma pop


/* 805FB7A4-805FDAE0 233C+00 s=2 e=0 z=0  None .text      demo_camera__FP11b_gnd_class                                 */
//	805FB7B4: 803621C0 (_savegpr_22)
//	805FB7BC: 80602664 (lit_3815)
//	805FB7C0: 80602664 (lit_3815)
//	805FB7C8: 80602638 (dComIfGp_getPlayer__Fi)
//	805FB7D4: 8060261C (dComIfGp_getPlayerCameraID__Fi)
//	805FB7D8: 80602604 (dComIfGp_getCamera__Fi)
//	805FB7E4: 80602604 (dComIfGp_getCamera__Fi)
//	805FB7F0: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805FB7F4: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805FB7FC: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805FB804: 8042CA54 (g_env_light)
//	805FB808: 8042CA54 (g_env_light)
//	805FB818: 804061C0 (g_dComIfG_gameInfo)
//	805FB81C: 804061C0 (g_dComIfG_gameInfo)
//	805FB830: 80602B50 (lit_7290)
//	805FB834: 80602B50 (lit_7290)
//	805FB868: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	805FB880: 801614D0 (Stop__9dCamera_cFv)
//	805FB8A0: 806025F0 (changeOriginalDemo__9daHorse_cFv)
//	805FB8A8: 806025A4 (changeOriginalDemo__9daPy_py_cFv)
//	805FB8B4: 8016300C (SetTrimSize__9dCamera_cFl)
//	805FB8C0: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FB8E4: 80362084 (__ptmf_scall)
//	805FB8FC: 806025C4 (set__4cXyzFfff)
//	805FB910: 806025C4 (set__4cXyzFfff)
//	805FB91C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FB920: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FB92C: 806029AC (stringBase0)
//	805FB930: 806029AC (stringBase0)
//	805FB938: 802B61E8 (setDemoName__11Z2StatusMgrFPc)
//	805FB958: 80267954 (cM_rndF__Ff)
//	805FB978: 8026798C (cM_rndFX__Ff)
//	805FB984: 8026798C (cM_rndFX__Ff)
//	805FB990: 8026798C (cM_rndFX__Ff)
//	805FB9A8: 8026FA3C (cLib_addCalc2__FPffff)
//	805FB9BC: 8026FA3C (cLib_addCalc2__FPffff)
//	805FB9D0: 8026FA3C (cLib_addCalc2__FPffff)
//	805FBA18: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FBA1C: 80450768 (calc_mtx)
//	805FBA20: 80450768 (calc_mtx)
//	805FBA2C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FBAA8: 8026FA3C (cLib_addCalc2__FPffff)
//	805FBAB4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FBAC4: 80347090 (PSVECAdd)
//	805FBAF0: 806025C4 (set__4cXyzFfff)
//	805FBB04: 80362084 (__ptmf_scall)
//	805FBB18: 806025B8 (changeDemoMode__9daHorse_cFUli)
//	805FBB30: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FBB58: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FBB5C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FBB70: 802AFB94 (bgmStreamPrepare__8Z2SeqMgrFUl)
//	805FBB74: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FBB78: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FBB84: 802AFE18 (bgmStreamPlay__8Z2SeqMgrFv)
//	805FBBAC: 806025B8 (changeDemoMode__9daHorse_cFUli)
//	805FBBC4: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FBBD8: 806025C4 (set__4cXyzFfff)
//	805FBBEC: 8026FA3C (cLib_addCalc2__FPffff)
//	805FBC00: 8026FA3C (cLib_addCalc2__FPffff)
//	805FBC14: 8026FA3C (cLib_addCalc2__FPffff)
//	805FBC30: 806025C4 (set__4cXyzFfff)
//	805FBC44: 80362084 (__ptmf_scall)
//	805FBC58: 8026FA80 (cLib_addCalc0__FPfff)
//	805FBC9C: 806025C4 (set__4cXyzFfff)
//	805FBCB0: 80362084 (__ptmf_scall)
//	805FBCCC: 806025C4 (set__4cXyzFfff)
//	805FBCE0: 806025C4 (set__4cXyzFfff)
//	805FBD0C: 8026FA3C (cLib_addCalc2__FPffff)
//	805FBD38: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FBD5C: 80602B48 (e_name_6757)
//	805FBD60: 80602B48 (e_name_6757)
//	805FBD74: 8060251C (dComIfGp_particle_set__FUsPC4cXyzPC5csXyzPC4cXyz)
//	805FBDB4: 806025C4 (set__4cXyzFfff)
//	805FBDC8: 806025C4 (set__4cXyzFfff)
//	805FBDE4: 806025C4 (set__4cXyzFfff)
//	805FBDF8: 80362084 (__ptmf_scall)
//	805FBE34: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FBE74: 806025B8 (changeDemoMode__9daHorse_cFUli)
//	805FBE8C: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FBE90: 80450768 (calc_mtx)
//	805FBE94: 80450768 (calc_mtx)
//	805FBEA0: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FBEC4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FBF4C: 8026FA3C (cLib_addCalc2__FPffff)
//	805FBF60: 8026FA3C (cLib_addCalc2__FPffff)
//	805FBF74: 806024EC (isStop__13mDoExt_morf_cFv)
//	805FBF94: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FBFD0: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FC010: 80450768 (calc_mtx)
//	805FC014: 80450768 (calc_mtx)
//	805FC020: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FC044: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FC054: 80347090 (PSVECAdd)
//	805FC098: 806024EC (isStop__13mDoExt_morf_cFv)
//	805FC0B8: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FC10C: 806025C4 (set__4cXyzFfff)
//	805FC144: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FC1A0: 80249F90 (init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c)
//	805FC1B4: 8024A2D8 (doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci)
//	805FC1DC: 8026FA3C (cLib_addCalc2__FPffff)
//	805FC1EC: 80450768 (calc_mtx)
//	805FC1F0: 80450768 (calc_mtx)
//	805FC1FC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FC220: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FC230: 80347090 (PSVECAdd)
//	805FC2CC: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FC2D8: 806024AC (setFrame__13mDoExt_morf_cFf)
//	805FC300: 806025C4 (set__4cXyzFfff)
//	805FC314: 806025C4 (set__4cXyzFfff)
//	805FC328: 806025C4 (set__4cXyzFfff)
//	805FC360: 8024A2D8 (doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci)
//	805FC39C: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FC3CC: 806025C4 (set__4cXyzFfff)
//	805FC3F4: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	805FC404: 8026FA80 (cLib_addCalc0__FPfff)
//	805FC41C: 8026FA3C (cLib_addCalc2__FPffff)
//	805FC43C: 806025B8 (changeDemoMode__9daHorse_cFUli)
//	805FC450: 806025C4 (set__4cXyzFfff)
//	805FC464: 806025C4 (set__4cXyzFfff)
//	805FC478: 806025C4 (set__4cXyzFfff)
//	805FC48C: 806025C4 (set__4cXyzFfff)
//	805FC494: 805FB704 (cam_spd_set__FP11b_gnd_class)
//	805FC4C0: 805FB620 (cam_3d_morf__FP11b_gnd_classf)
//	805FC4D4: 8026FA3C (cLib_addCalc2__FPffff)
//	805FC504: 806025C4 (set__4cXyzFfff)
//	805FC518: 806025C4 (set__4cXyzFfff)
//	805FC530: 8026FA3C (cLib_addCalc2__FPffff)
//	805FC554: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FC568: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FC58C: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FC598: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FC59C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FC5B8: 802AF010 (bgmStart__8Z2SeqMgrFUlUll)
//	805FC5D4: 8001FFC4 (fopMsgM_messageSetDemo__FUl)
//	805FC5E8: 806024EC (isStop__13mDoExt_morf_cFv)
//	805FC608: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FC634: 80267954 (cM_rndF__Ff)
//	805FC664: 8002DA9C (dComIfGs_onOneZoneSwitch__Fii)
//	805FC668: 804061C0 (g_dComIfG_gameInfo)
//	805FC66C: 804061C0 (g_dComIfG_gameInfo)
//	805FC678: 80034B98 (onSwitch__12dSv_danBit_cFi)
//	805FC67C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FC680: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FC68C: 806029AC (stringBase0)
//	805FC690: 806029AC (stringBase0)
//	805FC698: 802B61E8 (setDemoName__11Z2StatusMgrFPc)
//	805FC6C8: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	805FC6E0: 801614D0 (Stop__9dCamera_cFv)
//	805FC704: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FC71C: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FC720: 806025A4 (changeOriginalDemo__9daPy_py_cFv)
//	805FC724: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FC738: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FC73C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FC740: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FC750: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	805FC780: 8060248C (__ct__4cXyzFfff)
//	805FC784: 804061C0 (g_dComIfG_gameInfo)
//	805FC788: 804061C0 (g_dComIfG_gameInfo)
//	805FC79C: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	805FC7A8: 80602478 (dComIfGp_setDoStatusForce__FUcUc)
//	805FC7AC: 80450768 (calc_mtx)
//	805FC7B0: 80450768 (calc_mtx)
//	805FC7BC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FC7E4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FC7F4: 80347090 (PSVECAdd)
//	805FC83C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FC87C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805FC88C: 80266B84 (__ml__4cXyzCFf)
//	805FC89C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	805FC8A8: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FC8D8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FC8E8: 80347090 (PSVECAdd)
//	805FC900: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FC90C: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FC920: 8060248C (__ct__4cXyzFfff)
//	805FC93C: 80602418 (dComIfGp_setHitMark__FUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	805FC96C: 80602404 (getAnmMtx__8J3DModelFi)
//	805FC970: 80450768 (calc_mtx)
//	805FC974: 80450768 (calc_mtx)
//	805FC97C: 803464B0 (PSMTXCopy)
//	805FC990: 806025C4 (set__4cXyzFfff)
//	805FC99C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FC9AC: 80602B4C (e_name_6846)
//	805FC9B0: 80602B4C (e_name_6846)
//	805FC9CC: 80602384 (dComIfGp_particle_set__FUlUsPC4cXyzPC5csXyzPC4cXyz)
//	805FCA24: 80267954 (cM_rndF__Ff)
//	805FCA44: 8026798C (cM_rndFX__Ff)
//	805FCA50: 8026798C (cM_rndFX__Ff)
//	805FCA5C: 8026798C (cM_rndFX__Ff)
//	805FCA7C: 8026FA3C (cLib_addCalc2__FPffff)
//	805FCA98: 8026FA3C (cLib_addCalc2__FPffff)
//	805FCAB4: 8026FA3C (cLib_addCalc2__FPffff)
//	805FCABC: 80602368 (getTrigA__8mDoCPd_cFUl)
//	805FCB2C: 8026FA3C (cLib_addCalc2__FPffff)
//	805FCB68: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FCB6C: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FCB80: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FCB84: 804061C0 (g_dComIfG_gameInfo)
//	805FCB88: 804061C0 (g_dComIfG_gameInfo)
//	805FCB94: 8006FD94 (StopQuake__12dVibration_cFi)
//	805FCB98: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FCB9C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FCBAC: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	805FCBE8: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FCBEC: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FCC00: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FCC04: 804061C0 (g_dComIfG_gameInfo)
//	805FCC08: 804061C0 (g_dComIfG_gameInfo)
//	805FCC14: 8006FD94 (StopQuake__12dVibration_cFi)
//	805FCC18: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FCC1C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FCC2C: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	805FCC98: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FCC9C: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FCCB0: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FCCBC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FCCC0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FCCD0: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	805FCD38: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FCD3C: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FCD50: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FCD5C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FCD60: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FCD70: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	805FCDCC: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FCDD0: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FCDE4: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FCDF0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FCDF4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FCE04: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	805FCE18: 806024EC (isStop__13mDoExt_morf_cFv)
//	805FCE50: 80450768 (calc_mtx)
//	805FCE54: 80450768 (calc_mtx)
//	805FCE60: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FCE84: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FCE94: 80347090 (PSVECAdd)
//	805FCEA0: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FCEDC: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FCF00: 8026FA3C (cLib_addCalc2__FPffff)
//	805FCF14: 8026FA3C (cLib_addCalc2__FPffff)
//	805FCF28: 8026FA3C (cLib_addCalc2__FPffff)
//	805FCF38: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FCF64: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FCF78: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FCF84: 8060234C (__ct__4cXyzFRC4cXyz)
//	805FCFB0: 80602418 (dComIfGp_setHitMark__FUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	805FCFDC: 80450768 (calc_mtx)
//	805FCFE0: 80450768 (calc_mtx)
//	805FCFEC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FD010: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FD020: 80347090 (PSVECAdd)
//	805FD02C: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FD09C: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	805FD0B4: 801614D0 (Stop__9dCamera_cFv)
//	805FD0D0: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FD0D4: 806025A4 (changeOriginalDemo__9daPy_py_cFv)
//	805FD0D8: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FD0EC: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FD100: 806025C4 (set__4cXyzFfff)
//	805FD104: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FD134: 806025C4 (set__4cXyzFfff)
//	805FD140: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FD150: 80450768 (calc_mtx)
//	805FD154: 80450768 (calc_mtx)
//	805FD160: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FD184: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FD194: 80347090 (PSVECAdd)
//	805FD1A0: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FD1C8: 8026FA3C (cLib_addCalc2__FPffff)
//	805FD1F4: 8026FA3C (cLib_addCalc2__FPffff)
//	805FD208: 8026FA3C (cLib_addCalc2__FPffff)
//	805FD23C: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FD250: 8060248C (__ct__4cXyzFfff)
//	805FD254: 804061C0 (g_dComIfG_gameInfo)
//	805FD258: 804061C0 (g_dComIfG_gameInfo)
//	805FD26C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	805FD270: 805FA430 (s_objgbdel_sub__FPvPv)
//	805FD274: 805FA430 (s_objgbdel_sub__FPvPv)
//	805FD27C: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	805FD288: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FD28C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FD29C: 802AD9F4 (seMoveVolumeAll__7Z2SeMgrFfUl)
//	805FD2DC: 80450768 (calc_mtx)
//	805FD2E0: 80450768 (calc_mtx)
//	805FD2EC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FD300: 806025C4 (set__4cXyzFfff)
//	805FD30C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FD320: 806025C4 (set__4cXyzFfff)
//	805FD32C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FD334: 806024EC (isStop__13mDoExt_morf_cFv)
//	805FD354: 805F4A94 (anm_init__FP11b_gnd_classifUcf)
//	805FD374: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FD378: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FD388: 802AD9F4 (seMoveVolumeAll__7Z2SeMgrFfUl)
//	805FD3A4: 806025C4 (set__4cXyzFfff)
//	805FD3B8: 80362084 (__ptmf_scall)
//	805FD3C4: 80450768 (calc_mtx)
//	805FD3C8: 80450768 (calc_mtx)
//	805FD3D4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FD3E8: 806025C4 (set__4cXyzFfff)
//	805FD3F4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FD408: 806025C4 (set__4cXyzFfff)
//	805FD414: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FD454: 803DD470 (now__14mDoMtx_stack_c)
//	805FD458: 803DD470 (now__14mDoMtx_stack_c)
//	805FD468: 803468E8 (PSMTXTrans)
//	805FD46C: 803DD470 (now__14mDoMtx_stack_c)
//	805FD470: 803DD470 (now__14mDoMtx_stack_c)
//	805FD478: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	805FD484: 803DD470 (now__14mDoMtx_stack_c)
//	805FD488: 803DD470 (now__14mDoMtx_stack_c)
//	805FD490: 803464B0 (PSMTXCopy)
//	805FD498: 8000D428 (play__14mDoExt_baseAnmFv)
//	805FD4A0: 8000D428 (play__14mDoExt_baseAnmFv)
//	805FD4B4: 800105C8 (play__14mDoExt_McaMorfFP3VecUlSc)
//	805FD4BC: 800106AC (modelCalc__14mDoExt_McaMorfFv)
//	805FD4D0: 806025C4 (set__4cXyzFfff)
//	805FD4E4: 806025C4 (set__4cXyzFfff)
//	805FD538: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FD54C: 80450768 (calc_mtx)
//	805FD550: 80450768 (calc_mtx)
//	805FD568: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FD598: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FD5A8: 80347090 (PSVECAdd)
//	805FD5C8: 8026FA3C (cLib_addCalc2__FPffff)
//	805FD608: 8026FA3C (cLib_addCalc2__FPffff)
//	805FD618: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FD62C: 80602590 (changeDemoMode__9daPy_py_cFUliis)
//	805FD640: 80450604 (g_blackColor)
//	805FD644: 80450604 (g_blackColor)
//	805FD648: 80007FD8 (fadeOut__13mDoGph_gInf_cFfR8_GXColor)
//	805FD674: 80027170 (dStage_changeScene__FifUlScsi)
//	805FD69C: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	805FD6B4: 801614D0 (Stop__9dCamera_cFv)
//	805FD6D0: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FD6D4: 806025A4 (changeOriginalDemo__9daPy_py_cFv)
//	805FD6DC: 806025F0 (changeOriginalDemo__9daHorse_cFv)
//	805FD6E8: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FD6F4: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FD71C: 806025C4 (set__4cXyzFfff)
//	805FD730: 80362084 (__ptmf_scall)
//	805FD78C: 806025C4 (set__4cXyzFfff)
//	805FD7B4: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	805FD7D4: 806025C4 (set__4cXyzFfff)
//	805FD808: 806025C4 (set__4cXyzFfff)
//	805FD814: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FD84C: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	805FD870: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FD874: 806025A4 (changeOriginalDemo__9daPy_py_cFv)
//	805FD87C: 806025F0 (changeOriginalDemo__9daHorse_cFv)
//	805FD890: 806025C4 (set__4cXyzFfff)
//	805FD8A4: 80362084 (__ptmf_scall)
//	805FD8BC: 806025C4 (set__4cXyzFfff)
//	805FD8F0: 806025C4 (set__4cXyzFfff)
//	805FD8FC: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FD91C: 806025C4 (set__4cXyzFfff)
//	805FD944: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	805FD964: 804061C0 (g_dComIfG_gameInfo)
//	805FD968: 804061C0 (g_dComIfG_gameInfo)
//	805FD970: 80042468 (reset__14dEvt_control_cFv)
//	805FD994: 80450768 (calc_mtx)
//	805FD998: 80450768 (calc_mtx)
//	805FD9A4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FD9C8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FD9D8: 80347090 (PSVECAdd)
//	805FD9E4: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FDA00: 8060234C (__ct__4cXyzFRC4cXyz)
//	805FDA0C: 8060234C (__ct__4cXyzFRC4cXyz)
//	805FDA1C: 80180C18 (Reset__9dCamera_cF4cXyz4cXyz)
//	805FDA24: 801614AC (Start__9dCamera_cFv)
//	805FDA30: 8016300C (SetTrimSize__9dCamera_cFl)
//	805FDA34: 804061C0 (g_dComIfG_gameInfo)
//	805FDA38: 804061C0 (g_dComIfG_gameInfo)
//	805FDA40: 80042468 (reset__14dEvt_control_cFv)
//	805FDA44: 8060249C (daPy_getPlayerActorClass__Fv)
//	805FDA48: 80602338 (cancelOriginalDemo__9daPy_py_cFv)
//	805FDA68: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FDA74: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FDA80: 8060234C (__ct__4cXyzFRC4cXyz)
//	805FDA8C: 8060234C (__ct__4cXyzFRC4cXyz)
//	805FDAA4: 80180AE0 (Set__9dCamera_cF4cXyz4cXyzfs)
//	805FDACC: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void demo_camera(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/demo_camera__FP11b_gnd_class.s"
}
#pragma pop


/* 805FDAE0-805FEC58 1178+00 s=1 e=0 z=0  None .text      anm_se_set__FP11b_gnd_class                                  */
//	805FDAF8: 80602664 (lit_3815)
//	805FDAFC: 80602664 (lit_3815)
//	805FDB18: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDB3C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDB8C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDBDC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDC34: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDC84: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDCD4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDD2C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDD7C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDDC8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDDE0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDE34: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDE84: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDEC8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDF10: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDF60: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDFA4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FDFEC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE03C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE0B4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE0CC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE120: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE138: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE150: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE198: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE1DC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE224: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE274: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE2F0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE36C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE3B4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE424: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE474: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE510: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE560: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE5A4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE5EC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE604: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE64C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE69C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE70C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE77C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE7CC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE84C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE8C4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE940: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE9B0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE9C8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE9E0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FE9F8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FEA48: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FEA98: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FEAE8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FEB2C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FEB7C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FEBC0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	805FEC08: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void anm_se_set(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/anm_se_set__FP11b_gnd_class.s"
}
#pragma pop


/* 805FEC58-806009F8 1DA0+00 s=2 e=0 z=0  None .text      daB_GND_Execute__FP11b_gnd_class                             */
//	805FEC90: 803621A0 (__save_gpr)
//	805FEC98: 806029D0 (cNullVec__6Z2Calc)
//	805FEC9C: 806029D0 (cNullVec__6Z2Calc)
//	805FECA0: 80602664 (lit_3815)
//	805FECA4: 80602664 (lit_3815)
//	805FECA8: 804061C0 (g_dComIfG_gameInfo)
//	805FECAC: 804061C0 (g_dComIfG_gameInfo)
//	805FECE0: 804061C0 (g_dComIfG_gameInfo)
//	805FECE4: 804061C0 (g_dComIfG_gameInfo)
//	805FED20: 8042CA54 (g_env_light)
//	805FED24: 8042CA54 (g_env_light)
//	805FED50: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805FED54: 80023590 (fpcSch_JudgeByID__FPvPv)
//	805FED5C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805FED7C: 805F4B48 (h_anm_init__FP11b_gnd_classifUcf)
//	805FED88: 805FA3E4 (s_fkdel_sub__FPvPv)
//	805FED8C: 805FA3E4 (s_fkdel_sub__FPvPv)
//	805FED94: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	805FEDA8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FEDAC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805FEDC8: 802AF010 (bgmStart__8Z2SeqMgrFUlUll)
//	805FEDD4: 8002DA9C (dComIfGs_onOneZoneSwitch__Fii)
//	805FEDE4: 804061C0 (g_dComIfG_gameInfo)
//	805FEDE8: 804061C0 (g_dComIfG_gameInfo)
//	805FEDFC: 80451018 (m_midnaActor__9daPy_py_c)
//	805FEE00: 80451018 (m_midnaActor__9daPy_py_c)
//	805FEE08: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	805FEE94: 805FA758 (action__FP11b_gnd_class)
//	805FEE9C: 805FB7A4 (demo_camera__FP11b_gnd_class)
//	805FEEB0: 805FA47C (h_damage_check__FP11b_gnd_class)
//	805FEEB8: 805F5574 (gake_check__FP11b_gnd_class)
//	805FEEE4: 8007757C (__ct__11dBgS_GndChkFv)
//	805FEEE8: 80450768 (calc_mtx)
//	805FEEEC: 80450768 (calc_mtx)
//	805FEEF8: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FEF18: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FEF28: 80347090 (PSVECAdd)
//	805FEF3C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FEF4C: 80347090 (PSVECAdd)
//	805FEF70: 80267D0C (SetPos__11cBgS_GndChkFPC3Vec)
//	805FEF7C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805FEFA4: 80267D0C (SetPos__11cBgS_GndChkFPC3Vec)
//	805FEFB0: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	805FEFDC: 80267674 (cM_atan2s__Fff)
//	805FEFF8: 800775F0 (__dt__11dBgS_GndChkFv)
//	805FF004: 805F98F8 (damage_check__FP11b_gnd_class)
//	805FF018: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805FF02C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805FF038: 80450768 (calc_mtx)
//	805FF03C: 80450768 (calc_mtx)
//	805FF048: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FF068: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FF088: 80347090 (PSVECAdd)
//	805FF0D4: 80450768 (calc_mtx)
//	805FF0D8: 80450768 (calc_mtx)
//	805FF0E4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FF0F0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FF100: 80347090 (PSVECAdd)
//	805FF110: 8026FA80 (cLib_addCalc0__FPfff)
//	805FF120: 80450768 (calc_mtx)
//	805FF124: 80450768 (calc_mtx)
//	805FF130: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FF150: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FF160: 80347090 (PSVECAdd)
//	805FF170: 80347090 (PSVECAdd)
//	805FF17C: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	805FF18C: 803470B4 (PSVECSubtract)
//	805FF19C: 803470B4 (PSVECSubtract)
//	805FF1A8: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FF1B4: 80600A38 (__as__5csXyzFRC5csXyz)
//	805FF1C4: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	805FF1D4: 803DD470 (now__14mDoMtx_stack_c)
//	805FF1D8: 803DD470 (now__14mDoMtx_stack_c)
//	805FF1E8: 803468E8 (PSMTXTrans)
//	805FF1EC: 803DD470 (now__14mDoMtx_stack_c)
//	805FF1F0: 803DD470 (now__14mDoMtx_stack_c)
//	805FF1F8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	805FF1FC: 803DD470 (now__14mDoMtx_stack_c)
//	805FF200: 803DD470 (now__14mDoMtx_stack_c)
//	805FF208: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805FF20C: 803DD470 (now__14mDoMtx_stack_c)
//	805FF210: 803DD470 (now__14mDoMtx_stack_c)
//	805FF224: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	805FF238: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805FF23C: 80602FB4 (l_HIO)
//	805FF240: 80602FB4 (l_HIO)
//	805FF258: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	805FF264: 803DD470 (now__14mDoMtx_stack_c)
//	805FF268: 803DD470 (now__14mDoMtx_stack_c)
//	805FF270: 803464B0 (PSMTXCopy)
//	805FF2A4: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	805FF2BC: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	805FF2DC: 8002D06C (dComIfGp_getReverb__Fi)
//	805FF2EC: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	805FF2F4: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	805FF304: 80450768 (calc_mtx)
//	805FF308: 80450768 (calc_mtx)
//	805FF310: 803464B0 (PSMTXCopy)
//	805FF334: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FF340: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	805FF34C: 8026F708 (SetR__8cM3dGSphFf)
//	805FF35C: 80450768 (calc_mtx)
//	805FF360: 80450768 (calc_mtx)
//	805FF368: 803464B0 (PSMTXCopy)
//	805FF38C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FF398: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	805FF3A4: 8026F708 (SetR__8cM3dGSphFf)
//	805FF400: 804061C0 (g_dComIfG_gameInfo)
//	805FF404: 804061C0 (g_dComIfG_gameInfo)
//	805FF414: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	805FF420: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	805FF434: 80450768 (calc_mtx)
//	805FF438: 80450768 (calc_mtx)
//	805FF458: 803464B0 (PSMTXCopy)
//	805FF470: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FF484: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	805FF490: 8026F708 (SetR__8cM3dGSphFf)
//	805FF504: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	805FF538: 80270E5C (MtxTrans__FfffUc)
//	805FF53C: 80450768 (calc_mtx)
//	805FF540: 80450768 (calc_mtx)
//	805FF54C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	805FF550: 80450768 (calc_mtx)
//	805FF554: 80450768 (calc_mtx)
//	805FF560: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805FF564: 80450768 (calc_mtx)
//	805FF568: 80450768 (calc_mtx)
//	805FF574: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	805FF588: 80450768 (calc_mtx)
//	805FF58C: 80450768 (calc_mtx)
//	805FF594: 803464B0 (PSMTXCopy)
//	805FF598: 80450768 (calc_mtx)
//	805FF59C: 80450768 (calc_mtx)
//	805FF5A8: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	805FF5BC: 80270E5C (MtxTrans__FfffUc)
//	805FF5C8: 80450768 (calc_mtx)
//	805FF5CC: 80450768 (calc_mtx)
//	805FF5D8: 803464B0 (PSMTXCopy)
//	805FF5E4: 8002D06C (dComIfGp_getReverb__Fi)
//	805FF5F4: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	805FF618: 80439A20 (sincosTable___5JMath)
//	805FF61C: 80439A20 (sincosTable___5JMath)
//	805FF64C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805FF670: 80439A20 (sincosTable___5JMath)
//	805FF674: 80439A20 (sincosTable___5JMath)
//	805FF6CC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805FF6E0: 8000D428 (play__14mDoExt_baseAnmFv)
//	805FF714: 8000D428 (play__14mDoExt_baseAnmFv)
//	805FF728: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	805FF754: 80450768 (calc_mtx)
//	805FF758: 80450768 (calc_mtx)
//	805FF760: 803464B0 (PSMTXCopy)
//	805FF774: 80270E5C (MtxTrans__FfffUc)
//	805FF778: 80450768 (calc_mtx)
//	805FF77C: 80450768 (calc_mtx)
//	805FF788: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	805FF78C: 80450768 (calc_mtx)
//	805FF790: 80450768 (calc_mtx)
//	805FF79C: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805FF7A0: 80450768 (calc_mtx)
//	805FF7A4: 80450768 (calc_mtx)
//	805FF7B0: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	805FF7D8: 80450768 (calc_mtx)
//	805FF7DC: 80450768 (calc_mtx)
//	805FF7E4: 803464B0 (PSMTXCopy)
//	805FF7E8: 80450768 (calc_mtx)
//	805FF7EC: 80450768 (calc_mtx)
//	805FF7FC: 803464B0 (PSMTXCopy)
//	805FF81C: 80270E5C (MtxTrans__FfffUc)
//	805FF820: 80450768 (calc_mtx)
//	805FF824: 80450768 (calc_mtx)
//	805FF830: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805FF834: 80450768 (calc_mtx)
//	805FF838: 80450768 (calc_mtx)
//	805FF844: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	805FF848: 80450768 (calc_mtx)
//	805FF84C: 80450768 (calc_mtx)
//	805FF858: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	805FF85C: 80450768 (calc_mtx)
//	805FF860: 80450768 (calc_mtx)
//	805FF870: 803464B0 (PSMTXCopy)
//	805FF884: 80450768 (calc_mtx)
//	805FF888: 80450768 (calc_mtx)
//	805FF890: 803464B0 (PSMTXCopy)
//	805FF894: 80450768 (calc_mtx)
//	805FF898: 80450768 (calc_mtx)
//	805FF8A8: 803464B0 (PSMTXCopy)
//	805FF8D8: 80450768 (calc_mtx)
//	805FF8DC: 80450768 (calc_mtx)
//	805FF8E8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	805FF8EC: 80450768 (calc_mtx)
//	805FF8F0: 80450768 (calc_mtx)
//	805FF8FC: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805FF900: 80450768 (calc_mtx)
//	805FF904: 80450768 (calc_mtx)
//	805FF918: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	805FF92C: 80270E5C (MtxTrans__FfffUc)
//	805FF930: 80450768 (calc_mtx)
//	805FF934: 80450768 (calc_mtx)
//	805FF950: 803464B0 (PSMTXCopy)
//	805FF960: 80450768 (calc_mtx)
//	805FF964: 80450768 (calc_mtx)
//	805FF96C: 803464B0 (PSMTXCopy)
//	805FF9B0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	805FF9E0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FF9EC: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FFA04: 8026F708 (SetR__8cM3dGSphFf)
//	805FFA44: 8026F708 (SetR__8cM3dGSphFf)
//	805FFA68: 80450768 (calc_mtx)
//	805FFA6C: 80450768 (calc_mtx)
//	805FFA74: 803464B0 (PSMTXCopy)
//	805FFA90: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FFA9C: 8026F708 (SetR__8cM3dGSphFf)
//	805FFAC0: 80450768 (calc_mtx)
//	805FFAC4: 80450768 (calc_mtx)
//	805FFACC: 803464B0 (PSMTXCopy)
//	805FFAE8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FFAF4: 8026F708 (SetR__8cM3dGSphFf)
//	805FFB24: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FFB80: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	805FFB84: 804061C0 (g_dComIfG_gameInfo)
//	805FFB88: 804061C0 (g_dComIfG_gameInfo)
//	805FFB98: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	805FFB9C: 80450768 (calc_mtx)
//	805FFBA0: 80450768 (calc_mtx)
//	805FFBAC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805FFBB0: 80450768 (calc_mtx)
//	805FFBB4: 80450768 (calc_mtx)
//	805FFBC0: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	805FFBE0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FFBF0: 80347090 (PSVECAdd)
//	805FFC08: 8026F708 (SetR__8cM3dGSphFf)
//	805FFC14: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	805FFC20: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	805FFC48: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	805FFC54: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	805FFC5C: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	805FFC6C: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	805FFC80: 80087514 (def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c)
//	805FFC98: 80450768 (calc_mtx)
//	805FFC9C: 80450768 (calc_mtx)
//	805FFCA4: 803464B0 (PSMTXCopy)
//	805FFCC0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FFCCC: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FFD38: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	805FFD44: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	805FFD50: 8026F708 (SetR__8cM3dGSphFf)
//	805FFD60: 80450768 (calc_mtx)
//	805FFD64: 80450768 (calc_mtx)
//	805FFD6C: 803464B0 (PSMTXCopy)
//	805FFD78: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FFD84: 80600A1C (setDownPos__13fopEn_enemy_cFPC4cXyz)
//	805FFD94: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	805FFDA0: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	805FFDAC: 8026F708 (SetR__8cM3dGSphFf)
//	805FFDBC: 80450768 (calc_mtx)
//	805FFDC0: 80450768 (calc_mtx)
//	805FFDC8: 803464B0 (PSMTXCopy)
//	805FFDE4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FFDF4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	805FFE00: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	805FFE0C: 8026F708 (SetR__8cM3dGSphFf)
//	805FFE6C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	805FFE8C: 803DD470 (now__14mDoMtx_stack_c)
//	805FFE90: 803DD470 (now__14mDoMtx_stack_c)
//	805FFE94: 803464B0 (PSMTXCopy)
//	805FFE9C: 806009F8 (multVecZero__14mDoMtx_stack_cFP3Vec)
//	805FFEAC: 803DD470 (now__14mDoMtx_stack_c)
//	805FFEB0: 803DD470 (now__14mDoMtx_stack_c)
//	805FFEB4: 803464B0 (PSMTXCopy)
//	805FFEBC: 806009F8 (multVecZero__14mDoMtx_stack_cFP3Vec)
//	805FFED8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FFEEC: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	805FFEF8: 8026F200 (SetR__8cM3dGCylFf)
//	805FFF04: 8026F1F8 (SetH__8cM3dGCylFf)
//	805FFF10: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	805FFF64: 80450768 (calc_mtx)
//	805FFF68: 80450768 (calc_mtx)
//	805FFF70: 803464B0 (PSMTXCopy)
//	805FFF8C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	805FFFA0: 8026FA3C (cLib_addCalc2__FPffff)
//	805FFFBC: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FFFC8: 806025D4 (__as__4cXyzFRC4cXyz)
//	805FFFE8: 803470B4 (PSVECSubtract)
//	80600000: 80267674 (cM_atan2s__Fff)
//	80600014: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80600044: 80267674 (cM_atan2s__Fff)
//	8060005C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80600070: 8026FA3C (cLib_addCalc2__FPffff)
//	80600074: 80450768 (calc_mtx)
//	80600078: 80450768 (calc_mtx)
//	80600084: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80600088: 80450768 (calc_mtx)
//	8060008C: 80450768 (calc_mtx)
//	80600098: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806000B8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806000C8: 80347090 (PSVECAdd)
//	806000D8: 80347090 (PSVECAdd)
//	8060011C: 80450768 (calc_mtx)
//	80600120: 80450768 (calc_mtx)
//	8060012C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80600134: 80267954 (cM_rndF__Ff)
//	80600148: 80267954 (cM_rndF__Ff)
//	80600180: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80600190: 806025D4 (__as__4cXyzFRC4cXyz)
//	8060019C: 806025D4 (__as__4cXyzFRC4cXyz)
//	806001DC: 80602384 (dComIfGp_particle_set__FUlUsPC4cXyzPC5csXyzPC4cXyz)
//	8060020C: 804061C0 (g_dComIfG_gameInfo)
//	80600210: 804061C0 (g_dComIfG_gameInfo)
//	80600224: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	80600230: 8027EC60 (deleteAllParticle__14JPABaseEmitterFv)
//	80600240: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	80600270: 8060251C (dComIfGp_particle_set__FUsPC4cXyzPC5csXyzPC4cXyz)
//	806002AC: 802673F4 (__ct__5csXyzFsss)
//	806002C0: 804061C0 (g_dComIfG_gameInfo)
//	806002C4: 804061C0 (g_dComIfG_gameInfo)
//	80600320: 806025D4 (__as__4cXyzFRC4cXyz)
//	80600330: 80347090 (PSVECAdd)
//	80600360: 80602384 (dComIfGp_particle_set__FUlUsPC4cXyzPC5csXyzPC4cXyz)
//	80600384: 805FAFF0 (ball_bg_check__FP11b_gnd_classi)
//	806003B4: 8060251C (dComIfGp_particle_set__FUsPC4cXyzPC5csXyzPC4cXyz)
//	806003D8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806003E4: 806025D4 (__as__4cXyzFRC4cXyz)
//	806003F0: 80267674 (cM_atan2s__Fff)
//	8060041C: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	8060047C: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	80600488: 8027EC60 (deleteAllParticle__14JPABaseEmitterFv)
//	80600498: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	806004CC: 80023590 (fpcSch_JudgeByID__FPvPv)
//	806004D0: 80023590 (fpcSch_JudgeByID__FPvPv)
//	806004D8: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	806004EC: 806025D4 (__as__4cXyzFRC4cXyz)
//	806004FC: 80450768 (calc_mtx)
//	80600500: 80450768 (calc_mtx)
//	80600508: 803464B0 (PSMTXCopy)
//	8060052C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8060053C: 80450768 (calc_mtx)
//	80600540: 80450768 (calc_mtx)
//	80600548: 803464B0 (PSMTXCopy)
//	8060056C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80600578: 803DD470 (now__14mDoMtx_stack_c)
//	8060057C: 803DD470 (now__14mDoMtx_stack_c)
//	806005CC: 803468E8 (PSMTXTrans)
//	806005E8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806005F4: 806025D4 (__as__4cXyzFRC4cXyz)
//	8060061C: 80267674 (cM_atan2s__Fff)
//	80600628: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80600654: 80267674 (cM_atan2s__Fff)
//	80600664: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80600674: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80600690: 803464B0 (PSMTXCopy)
//	80600704: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80600720: 8026FA3C (cLib_addCalc2__FPffff)
//	80600738: 80450768 (calc_mtx)
//	8060073C: 80450768 (calc_mtx)
//	80600744: 803464B0 (PSMTXCopy)
//	80600748: 80270F1C (MtxPush__Fv)
//	8060076C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80600780: 805FB0F0 (himo_control1__FP11b_gnd_classP4cXyziSc)
//	80600784: 80270F58 (MtxPull__Fv)
//	806007A8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806007BC: 805FB0F0 (himo_control1__FP11b_gnd_classP4cXyziSc)
//	806007CC: 80450768 (calc_mtx)
//	806007D0: 80450768 (calc_mtx)
//	806007D8: 803464B0 (PSMTXCopy)
//	806007FC: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80600808: 806025D4 (__as__4cXyzFRC4cXyz)
//	8060081C: 805FB414 (himo_control2__FP11b_gnd_classP4cXyziSc)
//	80600830: 805FB414 (himo_control2__FP11b_gnd_classP4cXyziSc)
//	80600844: 805F9BE4 (eff_set_h__FP11b_gnd_class)
//	80600850: 8002D06C (dComIfGp_getReverb__Fi)
//	80600880: 8002D06C (dComIfGp_getReverb__Fi)
//	806008BC: 805FA2FC (eff_set__FP11b_gnd_class)
//	806008C4: 805FDAE0 (anm_se_set__FP11b_gnd_class)
//	806008EC: 801A880C (dKy_custom_colset__FUcUcf)
//	8060090C: 801A880C (dKy_custom_colset__FUcUcf)
//	8060092C: 801A880C (dKy_custom_colset__FUcUcf)
//	8060094C: 801A880C (dKy_custom_colset__FUcUcf)
//	8060096C: 801A880C (dKy_custom_colset__FUcUcf)
//	8060098C: 801A880C (dKy_custom_colset__FUcUcf)
//	806009B0: 8026FA3C (cLib_addCalc2__FPffff)
//	806009E4: 803621EC (__restore_gpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void daB_GND_Execute(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/daB_GND_Execute__FP11b_gnd_class.s"
}
#pragma pop


/* 806009F8-80600A1C 0024+00 s=1 e=0 z=0  None .text      multVecZero__14mDoMtx_stack_cFP3Vec                          */
//	806009F8: 803DD470 (now__14mDoMtx_stack_c)
//	806009FC: 803DD470 (now__14mDoMtx_stack_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  Vec* False
// 	 Vec False
asm void mDoMtx_stack_c::multVecZero(Vec* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/multVecZero__14mDoMtx_stack_cFP3Vec.s"
}
#pragma pop


/* 80600A1C-80600A38 001C+00 s=1 e=0 z=0  None .text      setDownPos__13fopEn_enemy_cFPC4cXyz                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
asm void fopEn_enemy_c::setDownPos(cXyz const* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/setDownPos__13fopEn_enemy_cFPC4cXyz.s"
}
#pragma pop


/* 80600A38-80600A54 001C+00 s=1 e=0 z=0  None .text      __as__5csXyzFRC5csXyz                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
asm void csXyz::operator=(csXyz const& param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__as__5csXyzFRC5csXyz.s"
}
#pragma pop


/* 80600A54-80600A5C 0008+00 s=1 e=0 z=0  None .text      daB_GND_IsDelete__FP11b_gnd_class                            */
// True False
//  bool False
//  b_gnd_class* False
// 	 b_gnd_class False
static bool daB_GND_IsDelete(b_gnd_class* param_0) {
	return true;
}


/* 80600A5C-80600B14 00B8+00 s=1 e=0 z=0  None .text      daB_GND_Delete__FP11b_gnd_class                              */
//	80600A6C: 803621DC (_savegpr_29)
//	80600A78: 806029AC (stringBase0)
//	80600A7C: 806029AC (stringBase0)
//	80600A80: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80600A88: 806029AC (stringBase0)
//	80600A8C: 806029AC (stringBase0)
//	80600A94: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80600AA8: 80602FA5 (struct_80602FA4)
//	80600AAC: 80602FA5 (struct_80602FA4)
//	80600AC0: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80600AC8: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80600AD0: 802BDFF8 (deleteObject__14Z2SoundObjBaseFv)
//	80600AE4: 802BDFF8 (deleteObject__14Z2SoundObjBaseFv)
//	80600B00: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  b_gnd_class* False
// 	 b_gnd_class False
asm static void daB_GND_Delete(b_gnd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/daB_GND_Delete__FP11b_gnd_class.s"
}
#pragma pop


/* 80600B14-80601468 0954+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	80600B2C: 803621C0 (_savegpr_22)
//	80600B34: 80602664 (lit_3815)
//	80600B38: 80602664 (lit_3815)
//	80600B40: 802CEC4C (__nw__FUl)
//	80600B4C: 806029AC (stringBase0)
//	80600B50: 806029AC (stringBase0)
//	80600B58: 804061C0 (g_dComIfG_gameInfo)
//	80600B5C: 804061C0 (g_dComIfG_gameInfo)
//	80600B70: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80600B78: 806029AC (stringBase0)
//	80600B7C: 806029AC (stringBase0)
//	80600B8C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80600BD0: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80600C04: 805F4C00 (nodeCallBack__FP8J3DJointi)
//	80600C08: 805F4C00 (nodeCallBack__FP8J3DJointi)
//	80600C38: 803DD470 (now__14mDoMtx_stack_c)
//	80600C3C: 803DD470 (now__14mDoMtx_stack_c)
//	80600C4C: 80346968 (PSMTXScale)
//	80600C50: 803DD470 (now__14mDoMtx_stack_c)
//	80600C54: 803DD470 (now__14mDoMtx_stack_c)
//	80600C5C: 803464B0 (PSMTXCopy)
//	80600C64: 802CEC4C (__nw__FUl)
//	80600C70: 80602F3C (__vt__12J3DFrameCtrl)
//	80600C74: 80602F3C (__vt__12J3DFrameCtrl)
//	80600C80: 803283FC (init__12J3DFrameCtrlFs)
//	80600CA4: 806029AC (stringBase0)
//	80600CA8: 806029AC (stringBase0)
//	80600CB0: 804061C0 (g_dComIfG_gameInfo)
//	80600CB4: 804061C0 (g_dComIfG_gameInfo)
//	80600CC8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80600CF8: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80600D14: 806029AC (stringBase0)
//	80600D18: 806029AC (stringBase0)
//	80600D1C: 80602D10 (btk_d)
//	80600D20: 80602D10 (btk_d)
//	80600D28: 802CEC4C (__nw__FUl)
//	80600D34: 80602F3C (__vt__12J3DFrameCtrl)
//	80600D38: 80602F3C (__vt__12J3DFrameCtrl)
//	80600D44: 803283FC (init__12J3DFrameCtrlFs)
//	80600D7C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80600DAC: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80600DD4: 802CEC4C (__nw__FUl)
//	80600DE0: 80602F3C (__vt__12J3DFrameCtrl)
//	80600DE4: 80602F3C (__vt__12J3DFrameCtrl)
//	80600DF0: 803283FC (init__12J3DFrameCtrlFs)
//	80600E14: 806029AC (stringBase0)
//	80600E18: 806029AC (stringBase0)
//	80600E28: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80600E58: 8000D54C (init__13mDoExt_btpAnmFP16J3DMaterialTableP16J3DAnmTexPatterniifss)
//	80600E6C: 806029AC (stringBase0)
//	80600E70: 806029AC (stringBase0)
//	80600E80: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80600E90: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80600EAC: 803DD470 (now__14mDoMtx_stack_c)
//	80600EB0: 803DD470 (now__14mDoMtx_stack_c)
//	80600EC0: 80346968 (PSMTXScale)
//	80600EC4: 803DD470 (now__14mDoMtx_stack_c)
//	80600EC8: 803DD470 (now__14mDoMtx_stack_c)
//	80600ED4: 803464B0 (PSMTXCopy)
//	80600ED8: 806029AC (stringBase0)
//	80600EDC: 806029AC (stringBase0)
//	80600EEC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80600EFC: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80600F18: 803DD470 (now__14mDoMtx_stack_c)
//	80600F1C: 803DD470 (now__14mDoMtx_stack_c)
//	80600F2C: 80346968 (PSMTXScale)
//	80600F30: 803DD470 (now__14mDoMtx_stack_c)
//	80600F34: 803DD470 (now__14mDoMtx_stack_c)
//	80600F40: 803464B0 (PSMTXCopy)
//	80600F4C: 806029AC (stringBase0)
//	80600F50: 806029AC (stringBase0)
//	80600F5C: 803DD470 (now__14mDoMtx_stack_c)
//	80600F60: 803DD470 (now__14mDoMtx_stack_c)
//	80600F74: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80600F80: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80600FB0: 80346968 (PSMTXScale)
//	80600FC0: 803464B0 (PSMTXCopy)
//	80600FD4: 806029AC (stringBase0)
//	80600FD8: 806029AC (stringBase0)
//	80600FE8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80600FFC: 803DD470 (now__14mDoMtx_stack_c)
//	80601000: 803DD470 (now__14mDoMtx_stack_c)
//	80601010: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80601040: 80346968 (PSMTXScale)
//	80601050: 803464B0 (PSMTXCopy)
//	80601068: 802CEC4C (__nw__FUl)
//	80601074: 806029AC (stringBase0)
//	80601078: 806029AC (stringBase0)
//	8060108C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80601094: 806029AC (stringBase0)
//	80601098: 806029AC (stringBase0)
//	806010AC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806010F0: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80601124: 805F4DCC (h_nodeCallBack__FP8J3DJointi)
//	80601128: 805F4DCC (h_nodeCallBack__FP8J3DJointi)
//	80601158: 803DD470 (now__14mDoMtx_stack_c)
//	8060115C: 803DD470 (now__14mDoMtx_stack_c)
//	8060116C: 80346968 (PSMTXScale)
//	80601170: 803DD470 (now__14mDoMtx_stack_c)
//	80601174: 803DD470 (now__14mDoMtx_stack_c)
//	8060117C: 803464B0 (PSMTXCopy)
//	8060118C: 806029AC (stringBase0)
//	80601190: 806029AC (stringBase0)
//	806011A4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806011C0: 80013360 (init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi)
//	80601200: 806029AC (stringBase0)
//	80601204: 806029AC (stringBase0)
//	80601218: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80601230: 80013360 (init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi)
//	80601268: 802CEC4C (__nw__FUl)
//	80601274: 806029AC (stringBase0)
//	80601278: 806029AC (stringBase0)
//	80601288: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80601290: 806029AC (stringBase0)
//	80601294: 806029AC (stringBase0)
//	806012A4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806012EC: 8000FC4C (__ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl)
//	8060131C: 802CEC4C (__nw__FUl)
//	80601328: 80602F3C (__vt__12J3DFrameCtrl)
//	8060132C: 80602F3C (__vt__12J3DFrameCtrl)
//	80601338: 803283FC (init__12J3DFrameCtrlFs)
//	8060135C: 806029AC (stringBase0)
//	80601360: 806029AC (stringBase0)
//	80601370: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806013A0: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	806013B8: 802CEC4C (__nw__FUl)
//	806013C4: 80602F3C (__vt__12J3DFrameCtrl)
//	806013C8: 80602F3C (__vt__12J3DFrameCtrl)
//	806013D4: 803283FC (init__12J3DFrameCtrlFs)
//	806013F8: 806029AC (stringBase0)
//	806013FC: 806029AC (stringBase0)
//	8060140C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8060143C: 8000D54C (init__13mDoExt_btpAnmFP16J3DMaterialTableP16J3DAnmTexPatterniifss)
//	80601454: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80601468-806014B0 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80601480: 80602F3C (__vt__12J3DFrameCtrl)
//	80601484: 80602F3C (__vt__12J3DFrameCtrl)
//	80601494: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 806014B0-80601960 04B0+00 s=1 e=0 z=0  None .text      daB_GND_Create__FP10fopAc_ac_c                               */
//	806014C8: 803621C4 (_savegpr_23)
//	806014D0: 806029D0 (cNullVec__6Z2Calc)
//	806014D4: 806029D0 (cNullVec__6Z2Calc)
//	806014D8: 80602F68 (lit_1109)
//	806014DC: 80602F68 (lit_1109)
//	806014E0: 80602664 (lit_3815)
//	806014E4: 80602664 (lit_3815)
//	806014FC: 80601960 (__ct__11b_gnd_classFv)
//	80601510: 806029AC (stringBase0)
//	80601514: 806029AC (stringBase0)
//	80601518: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80601524: 806029AC (stringBase0)
//	80601528: 806029AC (stringBase0)
//	80601530: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80601554: 80600B14 (useHeapInit__FP10fopAc_ac_c)
//	80601558: 80600B14 (useHeapInit__FP10fopAc_ac_c)
//	80601564: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	806015C4: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	806015D8: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	80601604: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80601614: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	8060163C: 80450768 (calc_mtx)
//	80601640: 80450768 (calc_mtx)
//	80601650: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80601658: 80267954 (cM_rndF__Ff)
//	8060166C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806016D8: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	806016FC: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80601710: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80601730: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80601774: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806017B4: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806017E0: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80601814: 802C10B4 (init__15Z2CreatureEnemyFP3VecP3VecP3VecUcUcUc)
//	8060181C: 806029AC (stringBase0)
//	80601820: 806029AC (stringBase0)
//	80601824: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	8060183C: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	80601844: 806029AC (stringBase0)
//	80601848: 806029AC (stringBase0)
//	8060184C: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	80601858: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	8060186C: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	8060189C: 801A88EC (dKy_tevstr_init__FP12dKy_tevstr_cScUc)
//	806018B0: 804061C0 (g_dComIfG_gameInfo)
//	806018B4: 804061C0 (g_dComIfG_gameInfo)
//	806018C0: 80034BE8 (isSwitch__12dSv_danBit_cCFi)
//	80601938: 805FEC58 (daB_GND_Execute__FP11b_gnd_class)
//	8060194C: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daB_GND_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/daB_GND_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80601960-80601D24 03C4+00 s=1 e=0 z=0  None .text      __ct__11b_gnd_classFv                                        */
//	80601970: 803621D4 (_savegpr_27)
//	80601978: 80018B64 (__ct__10fopAc_ac_cFv)
//	80601980: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	80601988: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	80601994: 803A1EC8 (j3dDefaultLightInfo)
//	80601998: 803A1EC8 (j3dDefaultLightInfo)
//	8060199C: 803256C4 (__as__12J3DLightInfoFRC12J3DLightInfo)
//	806019A4: 806021B0 (__ct__11J3DLightObjFv)
//	806019A8: 806021B0 (__ct__11J3DLightObjFv)
//	806019B8: 80361D60 (__construct_array)
//	806019C0: 80075EAC (__ct__12dBgS_AcchCirFv)
//	806019CC: 800760A0 (__ct__9dBgS_AcchFv)
//	806019D0: 80602F18 (__vt__12dBgS_ObjAcch)
//	806019D4: 80602F18 (__vt__12dBgS_ObjAcch)
//	806019F0: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	806019F4: 803C3728 (__vt__9cCcD_Stts)
//	806019F8: 803C3728 (__vt__9cCcD_Stts)
//	80601A04: 80083760 (__ct__10dCcD_GSttsFv)
//	80601A08: 803AC2E4 (__vt__9dCcD_Stts)
//	80601A0C: 803AC2E4 (__vt__9dCcD_Stts)
//	80601A20: 80601FF0 (__ct__8dCcD_SphFv)
//	80601A24: 80601FF0 (__ct__8dCcD_SphFv)
//	80601A28: 80601F24 (__dt__8dCcD_SphFv)
//	80601A2C: 80601F24 (__dt__8dCcD_SphFv)
//	80601A38: 80361D60 (__construct_array)
//	80601A40: 80601FF0 (__ct__8dCcD_SphFv)
//	80601A44: 80601FF0 (__ct__8dCcD_SphFv)
//	80601A48: 80601F24 (__dt__8dCcD_SphFv)
//	80601A4C: 80601F24 (__dt__8dCcD_SphFv)
//	80601A58: 80361D60 (__construct_array)
//	80601A5C: 803C3728 (__vt__9cCcD_Stts)
//	80601A60: 803C3728 (__vt__9cCcD_Stts)
//	80601A6C: 80083760 (__ct__10dCcD_GSttsFv)
//	80601A70: 803AC2E4 (__vt__9dCcD_Stts)
//	80601A74: 803AC2E4 (__vt__9dCcD_Stts)
//	80601A84: 80601FF0 (__ct__8dCcD_SphFv)
//	80601A88: 80601FF0 (__ct__8dCcD_SphFv)
//	80601A8C: 80601F24 (__dt__8dCcD_SphFv)
//	80601A90: 80601F24 (__dt__8dCcD_SphFv)
//	80601A9C: 80361D60 (__construct_array)
//	80601AA8: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80601AAC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80601AB0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80601AB8: 80602F0C (__vt__8cM3dGAab)
//	80601ABC: 80602F0C (__vt__8cM3dGAab)
//	80601AC4: 80602F00 (__vt__8cM3dGSph)
//	80601AC8: 80602F00 (__vt__8cM3dGSph)
//	80601AD0: 803C3540 (__vt__12cCcD_SphAttr)
//	80601AD4: 803C3540 (__vt__12cCcD_SphAttr)
//	80601AE4: 803ABFC0 (__vt__8dCcD_Sph)
//	80601AE8: 803ABFC0 (__vt__8dCcD_Sph)
//	80601B08: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80601B0C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80601B10: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80601B18: 80602F0C (__vt__8cM3dGAab)
//	80601B1C: 80602F0C (__vt__8cM3dGAab)
//	80601B24: 80602F00 (__vt__8cM3dGSph)
//	80601B28: 80602F00 (__vt__8cM3dGSph)
//	80601B30: 803C3540 (__vt__12cCcD_SphAttr)
//	80601B34: 803C3540 (__vt__12cCcD_SphAttr)
//	80601B40: 803ABFC0 (__vt__8dCcD_Sph)
//	80601B44: 803ABFC0 (__vt__8dCcD_Sph)
//	80601B5C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80601B60: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80601B64: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80601B6C: 80602F0C (__vt__8cM3dGAab)
//	80601B70: 80602F0C (__vt__8cM3dGAab)
//	80601B78: 80602EF4 (__vt__8cM3dGCyl)
//	80601B7C: 80602EF4 (__vt__8cM3dGCyl)
//	80601B84: 803C35A4 (__vt__12cCcD_CylAttr)
//	80601B88: 803C35A4 (__vt__12cCcD_CylAttr)
//	80601B98: 803AC050 (__vt__8dCcD_Cyl)
//	80601B9C: 803AC050 (__vt__8dCcD_Cyl)
//	80601BB8: 802BE844 (__ct__16Z2SoundObjSimpleFv)
//	80601BC0: 80601DE8 (__ct__4cXyzFv)
//	80601BC4: 80601DE8 (__ct__4cXyzFv)
//	80601BC8: 805F53A4 (__dt__4cXyzFv)
//	80601BCC: 805F53A4 (__dt__4cXyzFv)
//	80601BD8: 80361D60 (__construct_array)
//	80601BE0: 80601DE8 (__ct__4cXyzFv)
//	80601BE4: 80601DE8 (__ct__4cXyzFv)
//	80601BE8: 805F53A4 (__dt__4cXyzFv)
//	80601BEC: 805F53A4 (__dt__4cXyzFv)
//	80601BF8: 80361D60 (__construct_array)
//	80601C00: 80601DE8 (__ct__4cXyzFv)
//	80601C04: 80601DE8 (__ct__4cXyzFv)
//	80601C08: 805F53A4 (__dt__4cXyzFv)
//	80601C0C: 805F53A4 (__dt__4cXyzFv)
//	80601C18: 80361D60 (__construct_array)
//	80601C20: 802BE844 (__ct__16Z2SoundObjSimpleFv)
//	80601C24: 802BE844 (__ct__16Z2SoundObjSimpleFv)
//	80601C28: 80601DEC (__dt__16Z2SoundObjSimpleFv)
//	80601C2C: 80601DEC (__dt__16Z2SoundObjSimpleFv)
//	80601C38: 80361D60 (__construct_array)
//	80601C40: 80601DE8 (__ct__4cXyzFv)
//	80601C44: 80601DE8 (__ct__4cXyzFv)
//	80601C48: 805F53A4 (__dt__4cXyzFv)
//	80601C4C: 805F53A4 (__dt__4cXyzFv)
//	80601C58: 80361D60 (__construct_array)
//	80601C60: 80601DA0 (__ct__8g_himo_sFv)
//	80601C64: 80601DA0 (__ct__8g_himo_sFv)
//	80601C68: 80601D40 (__dt__8g_himo_sFv)
//	80601C6C: 80601D40 (__dt__8g_himo_sFv)
//	80601C78: 80361D60 (__construct_array)
//	80601C80: 80601D24 (__ct__19mDoExt_3DlineMat1_cFv)
//	80601C84: 80601D24 (__ct__19mDoExt_3DlineMat1_cFv)
//	80601C94: 80361D60 (__construct_array)
//	80601C98: 80602EE0 (__vt__18mDoExt_3DlineMat_c)
//	80601C9C: 80602EE0 (__vt__18mDoExt_3DlineMat_c)
//	80601CA4: 803A3248 (__vt__19mDoExt_3DlineMat1_c)
//	80601CA8: 803A3248 (__vt__19mDoExt_3DlineMat1_c)
//	80601CB8: 803A1EC8 (j3dDefaultLightInfo)
//	80601CBC: 803A1EC8 (j3dDefaultLightInfo)
//	80601CC0: 803256C4 (__as__12J3DLightInfoFRC12J3DLightInfo)
//	80601CC8: 806021B0 (__ct__11J3DLightObjFv)
//	80601CCC: 806021B0 (__ct__11J3DLightObjFv)
//	80601CDC: 80361D60 (__construct_array)
//	80601CE4: 80601DE8 (__ct__4cXyzFv)
//	80601CE8: 80601DE8 (__ct__4cXyzFv)
//	80601CEC: 805F53A4 (__dt__4cXyzFv)
//	80601CF0: 805F53A4 (__dt__4cXyzFv)
//	80601CFC: 80361D60 (__construct_array)
//	80601D04: 80249F00 (__ct__10dMsgFlow_cFv)
//	80601D10: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm b_gnd_class::b_gnd_class() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__ct__11b_gnd_classFv.s"
}
#pragma pop


/* 80601D24-80601D40 001C+00 s=1 e=0 z=0  None .text      __ct__19mDoExt_3DlineMat1_cFv                                */
//	80601D24: 80602EE0 (__vt__18mDoExt_3DlineMat_c)
//	80601D28: 80602EE0 (__vt__18mDoExt_3DlineMat_c)
//	80601D30: 803A3248 (__vt__19mDoExt_3DlineMat1_c)
//	80601D34: 803A3248 (__vt__19mDoExt_3DlineMat1_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm mDoExt_3DlineMat1_c::mDoExt_3DlineMat1_c() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__ct__19mDoExt_3DlineMat1_cFv.s"
}
#pragma pop


/* 80601D40-80601DA0 0060+00 s=1 e=0 z=0  None .text      __dt__8g_himo_sFv                                            */
//	80601D60: 805F53A4 (__dt__4cXyzFv)
//	80601D64: 805F53A4 (__dt__4cXyzFv)
//	80601D70: 80361CE8 (__destroy_arr)
//	80601D80: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm g_himo_s::~g_himo_s() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__8g_himo_sFv.s"
}
#pragma pop


/* 80601DA0-80601DE8 0048+00 s=1 e=0 z=0  None .text      __ct__8g_himo_sFv                                            */
//	80601DB4: 80601DE8 (__ct__4cXyzFv)
//	80601DB8: 80601DE8 (__ct__4cXyzFv)
//	80601DBC: 805F53A4 (__dt__4cXyzFv)
//	80601DC0: 805F53A4 (__dt__4cXyzFv)
//	80601DCC: 80361D60 (__construct_array)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm g_himo_s::g_himo_s() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__ct__8g_himo_sFv.s"
}
#pragma pop


/* 80601DE8-80601DEC 0004+00 s=3 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80601DEC-80601E4C 0060+00 s=1 e=0 z=0  None .text      __dt__16Z2SoundObjSimpleFv                                   */
//	80601E0C: 803CAD10 (__vt__16Z2SoundObjSimple)
//	80601E10: 803CAD10 (__vt__16Z2SoundObjSimple)
//	80601E1C: 802BDF48 (__dt__14Z2SoundObjBaseFv)
//	80601E2C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm Z2SoundObjSimple::~Z2SoundObjSimple() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__16Z2SoundObjSimpleFv.s"
}
#pragma pop


/* 80601E4C-80601E94 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80601E64: 80602EF4 (__vt__8cM3dGCyl)
//	80601E68: 80602EF4 (__vt__8cM3dGCyl)
//	80601E78: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80601E94-80601EDC 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80601EAC: 80602F00 (__vt__8cM3dGSph)
//	80601EB0: 80602F00 (__vt__8cM3dGSph)
//	80601EC0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80601EDC-80601F24 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80601EF4: 80602F0C (__vt__8cM3dGAab)
//	80601EF8: 80602F0C (__vt__8cM3dGAab)
//	80601F08: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80601F24-80601FF0 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_SphFv                                            */
//	80601F44: 803ABFC0 (__vt__8dCcD_Sph)
//	80601F48: 803ABFC0 (__vt__8dCcD_Sph)
//	80601F68: 803C3540 (__vt__12cCcD_SphAttr)
//	80601F6C: 803C3540 (__vt__12cCcD_SphAttr)
//	80601F84: 80602F00 (__vt__8cM3dGSph)
//	80601F88: 80602F00 (__vt__8cM3dGSph)
//	80601F98: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80601F9C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80601FAC: 80602F0C (__vt__8cM3dGAab)
//	80601FB0: 80602F0C (__vt__8cM3dGAab)
//	80601FC0: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80601FD0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::~dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__8dCcD_SphFv.s"
}
#pragma pop


/* 80601FF0-80602074 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_SphFv                                            */
//	80602004: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80602008: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8060200C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80602014: 80602F0C (__vt__8cM3dGAab)
//	80602018: 80602F0C (__vt__8cM3dGAab)
//	80602020: 80602F00 (__vt__8cM3dGSph)
//	80602024: 80602F00 (__vt__8cM3dGSph)
//	8060202C: 803C3540 (__vt__12cCcD_SphAttr)
//	80602030: 803C3540 (__vt__12cCcD_SphAttr)
//	80602040: 803ABFC0 (__vt__8dCcD_Sph)
//	80602044: 803ABFC0 (__vt__8dCcD_Sph)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__ct__8dCcD_SphFv.s"
}
#pragma pop


/* 80602074-806020D0 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	8060208C: 80602ED4 (__vt__10dCcD_GStts)
//	80602090: 80602ED4 (__vt__10dCcD_GStts)
//	8060209C: 80602EC8 (__vt__10cCcD_GStts)
//	806020A0: 80602EC8 (__vt__10cCcD_GStts)
//	806020B4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 806020D0-80602140 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	806020F0: 80602F18 (__vt__12dBgS_ObjAcch)
//	806020F4: 80602F18 (__vt__12dBgS_ObjAcch)
//	80602110: 80075F94 (__dt__9dBgS_AcchFv)
//	80602120: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80602140-806021B0 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80602160: 80602EBC (__vt__12dBgS_AcchCir)
//	80602164: 80602EBC (__vt__12dBgS_AcchCir)
//	80602174: 8026EF18 (__dt__8cM3dGCirFv)
//	80602180: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80602190: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 806021B0-806021E8 0038+00 s=1 e=0 z=0  None .text      __ct__11J3DLightObjFv                                        */
//	806021C4: 803A1EC8 (j3dDefaultLightInfo)
//	806021C8: 803A1EC8 (j3dDefaultLightInfo)
//	806021CC: 803256C4 (__as__12J3DLightInfoFRC12J3DLightInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DLightObj::J3DLightObj() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__ct__11J3DLightObjFv.s"
}
#pragma pop


/* 806021E8-80602230 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80602200: 80602EC8 (__vt__10cCcD_GStts)
//	80602204: 80602EC8 (__vt__10cCcD_GStts)
//	80602214: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80602230-80602278 0048+00 s=2 e=0 z=0  None .text      __dt__13daB_GND_HIO_cFv                                      */
//	80602248: 80602F54 (__vt__13daB_GND_HIO_c)
//	8060224C: 80602F54 (__vt__13daB_GND_HIO_c)
//	8060225C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daB_GND_HIO_c::~daB_GND_HIO_c() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__dt__13daB_GND_HIO_cFv.s"
}
#pragma pop


/* 80602278-806022F0 0078+00 s=0 e=1 z=0  None .text      __sinit_d_a_b_gnd_cpp                                        */
//	80602288: 80602F68 (lit_1109)
//	8060228C: 80602F68 (lit_1109)
//	80602294: 805F4A4C (__ct__13daB_GND_HIO_cFv)
//	80602298: 80602230 (__dt__13daB_GND_HIO_cFv)
//	8060229C: 80602230 (__dt__13daB_GND_HIO_cFv)
//	806022A4: 805F49D8 (__register_global_object)
//	806022AC: 80601DE8 (__ct__4cXyzFv)
//	806022B0: 80601DE8 (__ct__4cXyzFv)
//	806022B4: 805F53A4 (__dt__4cXyzFv)
//	806022B8: 805F53A4 (__dt__4cXyzFv)
//	806022C4: 80361D60 (__construct_array)
//	806022CC: 806022F0 (__arraydtor)
//	806022D0: 806022F0 (__arraydtor)
//	806022D8: 805F49D8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_b_gnd_cpp() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__sinit_d_a_b_gnd_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80602278 = (void*)__sinit_d_a_b_gnd_cpp;
#pragma pop


/* 806022F0-80602328 0038+00 s=1 e=0 z=0  None .text      __arraydtor$4508                                             */
//	806022FC: 80602FF8 (b_path)
//	80602300: 80602FF8 (b_path)
//	80602304: 805F53A4 (__dt__4cXyzFv)
//	80602308: 805F53A4 (__dt__4cXyzFv)
//	80602314: 80361CE8 (__destroy_arr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void __arraydtor() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__arraydtor.s"
}
#pragma pop


/* 80602328-80602330 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	8060232C: 806020D0 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80602328() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/func_80602328.s"
}
#pragma pop


/* 80602330-80602338 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80602334: 806020D0 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80602330() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/func_80602330.s"
}
#pragma pop


/* 80602338-8060234C 0014+00 s=1 e=0 z=0  None .text      cancelOriginalDemo__9daPy_py_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daPy_py_c::cancelOriginalDemo() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/cancelOriginalDemo__9daPy_py_cFv.s"
}
#pragma pop


/* 8060234C-80602368 001C+00 s=1 e=0 z=0  None .text      __ct__4cXyzFRC4cXyz                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
asm cXyz::cXyz(cXyz const& param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__ct__4cXyzFRC4cXyz.s"
}
#pragma pop


/* 80602368-80602384 001C+00 s=1 e=0 z=0  None .text      getTrigA__8mDoCPd_cFUl                                       */
//	8060236C: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	80602370: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void mDoCPd_c::getTrigA(u32 param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/getTrigA__8mDoCPd_cFUl.s"
}
#pragma pop


/* 80602384-80602404 0080+00 s=2 e=0 z=0  None .text      dComIfGp_particle_set__FUlUsPC4cXyzPC5csXyzPC4cXyz           */
//	806023A4: 804061C0 (g_dComIfG_gameInfo)
//	806023A8: 804061C0 (g_dComIfG_gameInfo)
//	806023E8: 80602664 (lit_3815)
//	806023EC: 80602664 (lit_3815)
//	806023F0: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
asm static void dComIfGp_particle_set(u32 param_0, u16 param_1, cXyz const* param_2, csXyz const* param_3, cXyz const* param_4) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/dComIfGp_particle_set__FUlUsPC4cXyzPC5csXyzPC4cXyz.s"
}
#pragma pop


/* 80602404-80602418 0014+00 s=1 e=0 z=0  None .text      getAnmMtx__8J3DModelFi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DModel::getAnmMtx(int param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/getAnmMtx__8J3DModelFi.s"
}
#pragma pop


/* 80602418-80602478 0060+00 s=1 e=0 z=0  None .text      dComIfGp_setHitMark__FUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl */
//	80602440: 804061C0 (g_dComIfG_gameInfo)
//	80602444: 804061C0 (g_dComIfG_gameInfo)
//	80602460: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
asm static void dComIfGp_setHitMark(u16 param_0, fopAc_ac_c* param_1, cXyz const* param_2, csXyz const* param_3, cXyz const* param_4, u32 param_5) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/dComIfGp_setHitMark__FUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl.s"
}
#pragma pop


/* 80602478-8060248C 0014+00 s=1 e=0 z=0  None .text      dComIfGp_setDoStatusForce__FUcUc                             */
//	80602478: 804061C0 (g_dComIfG_gameInfo)
//	8060247C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  u8 False
asm static void dComIfGp_setDoStatusForce(u8 param_0, u8 param_1) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/dComIfGp_setDoStatusForce__FUcUc.s"
}
#pragma pop


/* 8060248C-8060249C 0010+00 s=1 e=0 z=0  None .text      __ct__4cXyzFfff                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
//  f32 False
asm cXyz::cXyz(f32 param_0, f32 param_1, f32 param_2) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__ct__4cXyzFfff.s"
}
#pragma pop


/* 8060249C-806024AC 0010+00 s=1 e=0 z=0  None .text      daPy_getPlayerActorClass__Fv                                 */
//	8060249C: 804061C0 (g_dComIfG_gameInfo)
//	806024A0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm static void daPy_getPlayerActorClass() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/daPy_getPlayerActorClass__Fv.s"
}
#pragma pop


/* 806024AC-806024EC 0040+00 s=1 e=0 z=0  None .text      setFrame__13mDoExt_morf_cFf                                  */
//	806024C0: 80602684 (lit_3904)
//	806024C4: 80602684 (lit_3904)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
asm void mDoExt_morf_c::setFrame(f32 param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/setFrame__13mDoExt_morf_cFf.s"
}
#pragma pop


/* 806024EC-8060251C 0030+00 s=1 e=0 z=0  None .text      isStop__13mDoExt_morf_cFv                                    */
//	806024FC: 80602678 (lit_3835)
//	80602500: 80602678 (lit_3835)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void mDoExt_morf_c::isStop() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/isStop__13mDoExt_morf_cFv.s"
}
#pragma pop


/* 8060251C-80602590 0074+00 s=2 e=0 z=0  None .text      dComIfGp_particle_set__FUsPC4cXyzPC5csXyzPC4cXyz             */
//	80602538: 804061C0 (g_dComIfG_gameInfo)
//	8060253C: 804061C0 (g_dComIfG_gameInfo)
//	80602574: 80602664 (lit_3815)
//	80602578: 80602664 (lit_3815)
//	8060257C: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
asm static void dComIfGp_particle_set(u16 param_0, cXyz const* param_1, csXyz const* param_2, cXyz const* param_3) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/dComIfGp_particle_set__FUsPC4cXyzPC5csXyzPC4cXyz.s"
}
#pragma pop


/* 80602590-806025A4 0014+00 s=1 e=0 z=0  None .text      changeDemoMode__9daPy_py_cFUliis                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  int False
//  int False
//  s16 False
asm void daPy_py_c::changeDemoMode(u32 param_0, int param_1, int param_2, s16 param_3) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/changeDemoMode__9daPy_py_cFUliis.s"
}
#pragma pop


/* 806025A4-806025B8 0014+00 s=1 e=0 z=0  None .text      changeOriginalDemo__9daPy_py_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daPy_py_c::changeOriginalDemo() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/changeOriginalDemo__9daPy_py_cFv.s"
}
#pragma pop


/* 806025B8-806025C4 000C+00 s=1 e=0 z=0  None .text      changeDemoMode__9daHorse_cFUli                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  int False
asm void daHorse_c::changeDemoMode(u32 param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/changeDemoMode__9daHorse_cFUli.s"
}
#pragma pop


/* 806025C4-806025D4 0010+00 s=1 e=0 z=0  None .text      set__4cXyzFfff                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
//  f32 False
asm void cXyz::set(f32 param_0, f32 param_1, f32 param_2) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/set__4cXyzFfff.s"
}
#pragma pop


/* 806025D4-806025F0 001C+00 s=2 e=0 z=0  None .text      __as__4cXyzFRC4cXyz                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
asm void cXyz::operator=(cXyz const& param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/__as__4cXyzFRC4cXyz.s"
}
#pragma pop


/* 806025F0-80602604 0014+00 s=1 e=0 z=0  None .text      changeOriginalDemo__9daHorse_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::changeOriginalDemo() {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/changeOriginalDemo__9daHorse_cFv.s"
}
#pragma pop


/* 80602604-8060261C 0018+00 s=1 e=0 z=0  None .text      dComIfGp_getCamera__Fi                                       */
//	80602604: 804061C0 (g_dComIfG_gameInfo)
//	80602608: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm static void dComIfGp_getCamera(int param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/dComIfGp_getCamera__Fi.s"
}
#pragma pop


/* 8060261C-80602638 001C+00 s=1 e=0 z=0  None .text      dComIfGp_getPlayerCameraID__Fi                               */
//	8060261C: 804061C0 (g_dComIfG_gameInfo)
//	80602620: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm static void dComIfGp_getPlayerCameraID(int param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/dComIfGp_getPlayerCameraID__Fi.s"
}
#pragma pop


/* 80602638-80602650 0018+00 s=1 e=0 z=0  None .text      dComIfGp_getPlayer__Fi                                       */
//	80602638: 804061C0 (g_dComIfG_gameInfo)
//	8060263C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm static void dComIfGp_getPlayer(int param_0) {
	nofralloc
#include "asm/rel/d/a/b/d_a_b_gnd/d_a_b_gnd/dComIfGp_getPlayer__Fi.s"
}
#pragma pop


/* ############################################################################################## */
/* 8060305C-80603060 0004+00 s=0 e=0 z=0  None .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_8060305C[4];

/* 80603060-80603064 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_80603060[4];

/* 80603064-80603068 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_80603064[4];

/* 80603068-8060306C 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_80603068[4];

/* 8060306C-80603070 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_8060306C[4];

/* 80603070-80603074 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_80603070[4];

/* 80603074-80603078 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_80603074[4];

/* 80603078-8060307C 0004+00 s=0 e=0 z=0  None .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_80603078[4];

/* 8060307C-80603080 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_8060307C[4];

/* 80603080-80603084 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_80603080[4];

/* 80603084-80603088 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_80603084[4];

/* 80603088-8060308C 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_80603088[4];

/* 8060308C-80603090 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_8060308C[4];

/* 80603090-80603094 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_80603090[4];

/* 80603094-80603098 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_80603094[4];

/* 80603098-8060309C 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_80603098[4];

/* 8060309C-806030A0 0004+00 s=0 e=0 z=0  None .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_8060309C[4];

/* 806030A0-806030A4 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_806030A0[4];

/* 806030A4-806030A8 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_806030A4[4];

/* 806030A8-806030AC 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_806030A8[4];

/* 806030AC-806030B0 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_806030AC[4];

/* 806030B0-806030B4 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_806030B0[4];

/* 806030B4-806030B8 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_806030B4[4];

/* 806030B8-806030BC 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_806030B8[4];

/* 806030BC-806030C0 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_806030BC[4];

