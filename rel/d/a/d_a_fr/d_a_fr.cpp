// 
// Generated By: dol2asm
// Translation Unit: d_a_fr
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/d_a_fr/d_a_fr.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct J3DAnmTextureSRTKey {
};

struct J3DMaterialTable {
};

struct mDoExt_btkAnm {
	/* 8000D63C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct Vec {
};

struct J3DAnmTransform {
};

struct J3DModelData {
};

struct mDoExt_McaMorf {
	/* 8000FC4C */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  int False
//  void* False
// 	 void False
//  u32 False
//  u32 False
mDoExt_McaMorf(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, int, void*, u32, u32);
	/* 8001037C */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  void* False
// 	 void False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32, void*);
	/* 800105C8 */ // False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
void play(Vec*, u32, s8);
	/* 80010680 */ // False False
void entryDL();
	/* 800106AC */ // False False
void modelCalc();
};

struct fr_class {
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct daFr_HIO_c {
	/* 805198EC */ // True False
daFr_HIO_c();
	/* 8051B920 */ // True False
~daFr_HIO_c();
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F90 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void init(fopAc_ac_c*, int, int, fopAc_ac_c**);
	/* 8024A2D8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void doFlow(fopAc_ac_c*, fopAc_ac_c**, int);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjGndChk_Spl {
	/* 800777B0 */ // False False
dBgS_ObjGndChk_Spl();
	/* 80077848 */ // False False
~dBgS_ObjGndChk_Spl();
};

struct dBgS_ObjAcch {
	/* 8051B8B0 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
};

struct dBgS {
};

struct csXyz {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGSph {
	/* 8051B820 */ // True False
~cM3dGSph();
};

struct cM3dGAab {
	/* 8051B868 */ // True False
~cM3dGAab();
};

struct cBgS_PolyInfo {
};

struct cBgS_LinChk {
};

struct cBgS_GndChk {
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
};

struct _GXTexObj {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 8051B550 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  fr_class* False
// 	 fr_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void anm_init(fr_class*, int, f32, u8, f32);
// True False
//  fr_class* False
// 	 fr_class False
static void daFr_Draw(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void sibuki_set(fr_class*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_wd_sub(void*, void*);
// True False
//  fr_class* False
// 	 fr_class False
static void wd_check(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void way_bg_check(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void fr_normal(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void fr_away(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void fr_s_normal(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void fr_s_wait(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void fr_s_away(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void fr_eat(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void swim_on(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void swim_off(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void fr_message(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void action(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void message(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void daFr_Execute(fr_class*);
// True False
//  bool False
//  fr_class* False
// 	 fr_class False
static bool daFr_IsDelete(fr_class*);
// True False
//  fr_class* False
// 	 fr_class False
static void daFr_Delete(fr_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapIfrt(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daFr_Create(fopAc_ac_c*);

// True False
extern "C" void __ct__10daFr_HIO_cFv();
// True False
//  fr_class* False
// 	 fr_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void anm_init__FP8fr_classifUcf();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void daFr_Draw__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void sibuki_set__FP8fr_class();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_wd_sub__FPvPv();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void wd_check__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void way_bg_check__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void fr_normal__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void fr_away__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void fr_s_normal__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void fr_s_wait__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void fr_s_away__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void fr_eat__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void swim_on__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void swim_off__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void fr_message__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void action__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void message__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void daFr_Execute__FP8fr_class();
// True False
//  bool False
//  fr_class* False
// 	 fr_class False
extern "C" static bool daFr_IsDelete__FP8fr_class();
// True False
//  fr_class* False
// 	 fr_class False
extern "C" static void daFr_Delete__FP8fr_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapIfrt__FP10fopAc_ac_c();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daFr_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__10daFr_HIO_cFv();
// False False
extern "C" void __sinit_d_a_fr_cpp();
// True False
extern "C" static void func_8051B9A4();
// True False
extern "C" static void func_8051B9AC();
extern "C" extern u32 const lit_3651;
extern "C" extern u32 const lit_3652;
extern "C" extern u32 const lit_3653;
extern "C" extern u32 const lit_3654;
extern "C" extern u32 const lit_3655;
extern "C" extern u8 const lit_3762[8];
extern "C" extern u8 const lit_3763[8];
extern "C" extern u8 const lit_3764[8];
extern "C" extern u32 const lit_3765;
extern "C" extern u32 const lit_3796;
extern "C" extern u32 const lit_3849;
extern "C" extern u32 const lit_3850;
extern "C" extern u32 const lit_3851;
extern "C" extern u32 const lit_3901;
extern "C" extern u32 const lit_3902;
extern "C" extern u32 const lit_3903;
extern "C" extern u32 const lit_3904;
extern "C" extern u32 const lit_3957;
extern "C" extern u32 const lit_3958;
extern "C" extern u32 const lit_3959;
extern "C" extern u32 const lit_3960;
extern "C" extern u32 const lit_3981;
extern "C" extern u32 const lit_3982;
extern "C" extern u32 const lit_3983;
extern "C" extern u32 const lit_4108;
extern "C" extern u32 const lit_4109;
extern "C" extern u32 const lit_4110;
extern "C" extern u32 const lit_4111;
extern "C" extern u32 const lit_4112;
extern "C" extern u32 const lit_4144;
extern "C" extern u32 const lit_4145;
extern "C" extern u32 const lit_4158;
extern "C" extern u32 const lit_4224;
extern "C" extern u32 const lit_4225;
extern "C" extern u8 const lit_4322[8];
extern "C" extern u32 const lit_4466;
extern "C" extern u32 const lit_4467;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_FR[12];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__10daFr_HIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
void cDmrNowMidnaTalk();
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  bool False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  f32* False
// 	 f32 False
//  f32 False
bool fopAcM_riverStream(cXyz*, s16*, f32*, f32);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  int False
void fopKyM_createWpillar(cXyz const*, f32, int);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fpcEx_Search(void* (*)(void*, void*), void*);
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeByID(void*, void*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setSimpleShadow(cXyz*, f32, f32, cBgS_PolyInfo&, s16, f32, _GXTexObj*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void MtxPosition(cXyz*, cXyz*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  int False
//  void* False
// 	 void False
//  u32 False
//  u32 False
extern "C" void __ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  void* False
// 	 void False
extern "C" void setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv();
// False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
extern "C" void play__14mDoExt_McaMorfFP3VecUlSc();
// False False
extern "C" void entryDL__14mDoExt_McaMorfFv();
// False False
extern "C" void modelCalc__14mDoExt_McaMorfFv();
// False False
extern "C" void cDmrNowMidnaTalk__Fv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  bool False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  f32* False
// 	 f32 False
//  f32 False
extern "C" bool fopAcM_riverStream__FP4cXyzPsPff();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  int False
extern "C" void fopKyM_createWpillar__FPC4cXyzfi();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fpcEx_Search__FPFPvPv_PvPv();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeByID__FPvPv();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __dt__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void MtxPosition__FP4cXyzP4cXyz();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 8051B9C8-8051B9CC 0004+00 s=15 e=0 z=0  None .rodata    @3649                                                        */
SECTION_RODATA static u32 const lit_3649 = 0x41200000;

/* 8051BA94-8051BB60 00CC+00 s=1 e=0 z=0  None .data      @4226                                                        */
SECTION_DATA static void* lit_4226[51] = {
	(void*)(((char*)action__FP8fr_class)+0x68),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0x78),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0x88),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xC8),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0x98),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xA4),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xB0),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xCC),
	(void*)(((char*)action__FP8fr_class)+0xBC),
};

/* 8051BB60-8051BB80 0020+00 s=1 e=0 z=0  None .data      l_daFr_Method                                                */
SECTION_DATA static void* l_daFr_Method[8] = {
	(void*)daFr_Create__FP10fopAc_ac_c,
	(void*)daFr_Delete__FP8fr_class,
	(void*)daFr_Execute__FP8fr_class,
	(void*)daFr_IsDelete__FP8fr_class,
	(void*)daFr_Draw__FP8fr_class,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 8051BB80-8051BBB0 0030+00 s=0 e=0 z=1  None .data      g_profile_FR                                                 */
SECTION_DATA void* g_profile_FR[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0008FFFD,
	(void*)0x02E20000,
	(void*)&g_fpcLf_Method,
	(void*)0x000009E8,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00EB0000,
	(void*)&l_daFr_Method,
	(void*)0x08040100,
	(void*)0x04000000,
};

/* 8051BBB0-8051BBBC 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 8051BBBC-8051BBC8 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 8051BBC8-8051BBEC 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_8051B9AC,
	(void*)NULL,
	(void*)NULL,
	(void*)func_8051B9A4,
};

/* 8051BBEC-8051BBF8 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 8051BBF8-8051BC04 000C+00 s=2 e=0 z=0  None .data      __vt__10daFr_HIO_c                                           */
SECTION_DATA void* __vt__10daFr_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10daFr_HIO_cFv,
};

/* 805198EC-8051994C 0060+00 s=1 e=0 z=0  None .text      __ct__10daFr_HIO_cFv                                         */
//	805198EC: 8051B9C8 (lit_3649)
//	805198F0: 8051B9C8 (lit_3649)
//	805198F4: 8051BBF8 (__vt__10daFr_HIO_c)
//	805198F8: 8051BBF8 (__vt__10daFr_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daFr_HIO_c::daFr_HIO_c() {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/__ct__10daFr_HIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 8051B9CC-8051B9D0 0004+00 s=1 e=0 z=0  None .rodata    @3650                                                        */
SECTION_RODATA static u32 const lit_3650 = 0x41A00000;

/* 8051B9D0-8051B9D4 0004+00 s=0 e=0 z=0  None .rodata    @3651                                                        */
SECTION_RODATA u32 const lit_3651 = 0xC0A00000;

/* 8051B9D4-8051B9D8 0004+00 s=0 e=0 z=0  None .rodata    @3652                                                        */
SECTION_RODATA u32 const lit_3652 = 0x43960000;

/* 8051B9D8-8051B9DC 0004+00 s=0 e=0 z=0  None .rodata    @3653                                                        */
SECTION_RODATA u32 const lit_3653 = 0x41700000;

/* 8051B9DC-8051B9E0 0004+00 s=0 e=0 z=0  None .rodata    @3654                                                        */
SECTION_RODATA u32 const lit_3654 = 0x40A00000;

/* 8051B9E0-8051B9E4 0004+00 s=0 e=0 z=0  None .rodata    @3655                                                        */
SECTION_RODATA u32 const lit_3655 = 0x40C00000;

/* 8051B9E4-8051B9E8 0004+00 s=2 e=0 z=0  None .rodata    @3669                                                        */
SECTION_RODATA static u8 const lit_3669[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 8051B9E8-8051B9EC 0004+00 s=1 e=0 z=0  None .rodata    @3670                                                        */
SECTION_RODATA static u32 const lit_3670 = 0xBF800000;

/* 8051B9EC-8051B9F0 0004+00 s=2 e=0 z=0  None .rodata    @3691                                                        */
SECTION_RODATA static u32 const lit_3691 = 0x3F800000;

/* 8051B9F0-8051B9F8 0004+04 s=1 e=0 z=0  None .rodata    @3700                                                        */
SECTION_RODATA static u32 const lit_3700[1 + 1 /* padding */] = {
	0x3E99999A,
	/* padding */
	0x00000000,
};

/* 8051B9F8-8051BA00 0008+00 s=0 e=0 z=0  None .rodata    @3762                                                        */
SECTION_RODATA u8 const lit_3762[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8051BA00-8051BA08 0008+00 s=0 e=0 z=0  None .rodata    @3763                                                        */
SECTION_RODATA u8 const lit_3763[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8051BA08-8051BA10 0008+00 s=0 e=0 z=0  None .rodata    @3764                                                        */
SECTION_RODATA u8 const lit_3764[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8051BA10-8051BA14 0004+00 s=0 e=0 z=0  None .rodata    @3765                                                        */
SECTION_RODATA u32 const lit_3765 = 0x41B00000;

/* 8051BA14-8051BA18 0004+00 s=0 e=0 z=0  None .rodata    @3796                                                        */
SECTION_RODATA u32 const lit_3796 = 0x42480000;

/* 8051BA18-8051BA1C 0004+00 s=0 e=0 z=0  None .rodata    @3849                                                        */
SECTION_RODATA u32 const lit_3849 = 0x3F4CCCCD;

/* 8051BA1C-8051BA20 0004+00 s=0 e=0 z=0  None .rodata    @3850                                                        */
SECTION_RODATA u32 const lit_3850 = 0x40000000;

/* 8051BA20-8051BA24 0004+00 s=0 e=0 z=0  None .rodata    @3851                                                        */
SECTION_RODATA u32 const lit_3851 = 0x3F000000;

/* 8051BA24-8051BA28 0004+00 s=0 e=0 z=0  None .rodata    @3901                                                        */
SECTION_RODATA u32 const lit_3901 = 0x40400000;

/* 8051BA28-8051BA2C 0004+00 s=0 e=0 z=0  None .rodata    @3902                                                        */
SECTION_RODATA u32 const lit_3902 = 0x40800000;

/* 8051BA2C-8051BA30 0004+00 s=0 e=0 z=0  None .rodata    @3903                                                        */
SECTION_RODATA u32 const lit_3903 = 0x45FA0000;

/* 8051BA30-8051BA34 0004+00 s=0 e=0 z=0  None .rodata    @3904                                                        */
SECTION_RODATA u32 const lit_3904 = 0x43480000;

/* 8051BA34-8051BA38 0004+00 s=0 e=0 z=0  None .rodata    @3957                                                        */
SECTION_RODATA u32 const lit_3957 = 0x3FC00000;

/* 8051BA38-8051BA3C 0004+00 s=0 e=0 z=0  None .rodata    @3958                                                        */
SECTION_RODATA u32 const lit_3958 = 0x42C80000;

/* 8051BA3C-8051BA40 0004+00 s=0 e=0 z=0  None .rodata    @3959                                                        */
SECTION_RODATA u32 const lit_3959 = 0x3E4CCCCD;

/* 8051BA40-8051BA44 0004+00 s=0 e=0 z=0  None .rodata    @3960                                                        */
SECTION_RODATA u32 const lit_3960 = 0x3D4CCCCD;

/* 8051BA44-8051BA48 0004+00 s=0 e=0 z=0  None .rodata    @3981                                                        */
SECTION_RODATA u32 const lit_3981 = 0x41F00000;

/* 8051BA48-8051BA4C 0004+00 s=0 e=0 z=0  None .rodata    @3982                                                        */
SECTION_RODATA u32 const lit_3982 = 0x41500000;

/* 8051BA4C-8051BA50 0004+00 s=0 e=0 z=0  None .rodata    @3983                                                        */
SECTION_RODATA u32 const lit_3983 = 0x3E19999A;

/* 8051BA50-8051BA54 0004+00 s=0 e=0 z=0  None .rodata    @4108                                                        */
SECTION_RODATA u32 const lit_4108 = 0x3FAA3D71;

/* 8051BA54-8051BA58 0004+00 s=0 e=0 z=0  None .rodata    @4109                                                        */
SECTION_RODATA u32 const lit_4109 = 0xC59C4000;

/* 8051BA58-8051BA5C 0004+00 s=0 e=0 z=0  None .rodata    @4110                                                        */
SECTION_RODATA u32 const lit_4110 = 0x442F0000;

/* 8051BA5C-8051BA60 0004+00 s=0 e=0 z=0  None .rodata    @4111                                                        */
SECTION_RODATA u32 const lit_4111 = 0x3DCCCCCD;

/* 8051BA60-8051BA64 0004+00 s=0 e=0 z=0  None .rodata    @4112                                                        */
SECTION_RODATA u32 const lit_4112 = 0x43FA0000;

/* 8051BA64-8051BA68 0004+00 s=0 e=0 z=0  None .rodata    @4144                                                        */
SECTION_RODATA u32 const lit_4144 = 0xC3FA0000;

/* 8051BA68-8051BA6C 0004+00 s=0 e=0 z=0  None .rodata    @4145                                                        */
SECTION_RODATA u32 const lit_4145 = 0x3ECCCCCD;

/* 8051BA6C-8051BA70 0004+00 s=0 e=0 z=0  None .rodata    @4158                                                        */
SECTION_RODATA u32 const lit_4158 = 0x43C80000;

/* 8051BA70-8051BA74 0004+00 s=0 e=0 z=0  None .rodata    @4224                                                        */
SECTION_RODATA u32 const lit_4224 = 0xC2A00000;

/* 8051BA74-8051BA78 0004+00 s=0 e=0 z=0  None .rodata    @4225                                                        */
SECTION_RODATA u32 const lit_4225 = 0x3EB33333;

/* 8051BA78-8051BA80 0008+00 s=0 e=0 z=0  None .rodata    @4322                                                        */
SECTION_RODATA u8 const lit_4322[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 8051BA80-8051BA84 0004+00 s=0 e=0 z=0  None .rodata    @4466                                                        */
SECTION_RODATA u32 const lit_4466 = 0x3F400000;

/* 8051BA84-8051BA88 0004+00 s=0 e=0 z=0  None .rodata    @4467                                                        */
SECTION_RODATA u32 const lit_4467 = 0x47800000;

/* 8051BA88-8051BA93 000B+00 s=4 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_8051BA88 = "Fr";
SECTION_DEAD char const* const stringBase_8051BA8B = "F_SP127";
#pragma pop

/* 8051994C-805199F4 00A8+00 s=7 e=0 z=0  None .text      anm_init__FP8fr_classifUcf                                   */
//	80519980: 8051BA88 (stringBase0)
//	80519984: 8051BA88 (stringBase0)
//	80519988: 804061C0 (g_dComIfG_gameInfo)
//	8051998C: 804061C0 (g_dComIfG_gameInfo)
//	8051999C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	805199B4: 8051B9E4 (lit_3669)
//	805199B8: 8051B9E4 (lit_3669)
//	805199BC: 8051B9E8 (lit_3670)
//	805199C0: 8051B9E8 (lit_3670)
//	805199C8: 8001037C (setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void anm_init(fr_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/anm_init__FP8fr_classifUcf.s"
}
#pragma pop


/* 805199F4-80519AB8 00C4+00 s=1 e=0 z=0  None .text      daFr_Draw__FP8fr_class                                       */
//	80519A14: 8042CA54 (g_env_light)
//	80519A18: 8042CA54 (g_env_light)
//	80519A28: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80519A2C: 8042CA54 (g_env_light)
//	80519A30: 8042CA54 (g_env_light)
//	80519A3C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80519A50: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80519A58: 80010680 (entryDL__14mDoExt_McaMorfFv)
//	80519A70: 8051B9C8 (lit_3649)
//	80519A74: 8051B9C8 (lit_3649)
//	80519A88: 8051B9EC (lit_3691)
//	80519A8C: 8051B9EC (lit_3691)
//	80519A90: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80519A94: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80519A98: 8002D0B4 (dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void daFr_Draw(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/daFr_Draw__FP8fr_class.s"
}
#pragma pop


/* 80519AB8-80519B14 005C+00 s=1 e=0 z=0  None .text      sibuki_set__FP8fr_class                                      */
//	80519AEC: 8051B9F0 (lit_3700)
//	80519AF0: 8051B9F0 (lit_3700)
//	80519B00: 8001F87C (fopKyM_createWpillar__FPC4cXyzfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void sibuki_set(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/sibuki_set__FP8fr_class.s"
}
#pragma pop


/* 80519B14-80519B60 004C+00 s=1 e=0 z=0  None .text      s_wd_sub__FPvPv                                              */
//	80519B28: 80018CE0 (fopAc_IsActor__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_wd_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/s_wd_sub__FPvPv.s"
}
#pragma pop


/* 80519B60-80519D28 01C8+00 s=1 e=0 z=0  None .text      wd_check__FP8fr_class                                        */
//	80519B80: 803621D4 (_savegpr_27)
//	80519B88: 8051B9C8 (lit_3649)
//	80519B8C: 8051B9C8 (lit_3649)
//	80519B90: 80519B14 (s_wd_sub__FPvPv)
//	80519B94: 80519B14 (s_wd_sub__FPvPv)
//	80519B9C: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	80519BCC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80519BEC: 80347138 (PSVECSquareMag)
//	80519C58: 80450AE0 (__float_nan)
//	80519C5C: 80450AE0 (__float_nan)
//	80519CC8: 80450AE0 (__float_nan)
//	80519CCC: 80450AE0 (__float_nan)
//	80519D14: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void wd_check(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/wd_check__FP8fr_class.s"
}
#pragma pop


/* 80519D28-80519E24 00FC+00 s=4 e=0 z=0  None .text      way_bg_check__FP8fr_class                                    */
//	80519D3C: 8051B9C8 (lit_3649)
//	80519D40: 8051B9C8 (lit_3649)
//	80519D6C: 80450768 (calc_mtx)
//	80519D70: 80450768 (calc_mtx)
//	80519D7C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80519D9C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80519DAC: 80347090 (PSVECAdd)
//	80519DB4: 80077C68 (__ct__11dBgS_LinChkFv)
//	80519DC8: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80519DCC: 804061C0 (g_dComIfG_gameInfo)
//	80519DD0: 804061C0 (g_dComIfG_gameInfo)
//	80519DDC: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80519DF0: 80077CDC (__dt__11dBgS_LinChkFv)
//	80519E04: 80077CDC (__dt__11dBgS_LinChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void way_bg_check(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/way_bg_check__FP8fr_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 8051BC10-8051BC14 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_8051BC10[4];

/* 8051BC14-8051BC20 000C+00 s=1 e=0 z=0  None .bss       @3644                                                        */
static u8 lit_3644[12];

/* 8051BC20-8051BC4C 002C+00 s=9 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[44];

/* 80519E24-8051A0D8 02B4+00 s=1 e=0 z=0  None .text      fr_normal__FP8fr_class                                       */
//	80519E34: 803621DC (_savegpr_29)
//	80519E3C: 8051B9C8 (lit_3649)
//	80519E40: 8051B9C8 (lit_3649)
//	80519E80: 80267954 (cM_rndF__Ff)
//	80519E9C: 8051994C (anm_init__FP8fr_classifUcf)
//	80519EA4: 80267954 (cM_rndF__Ff)
//	80519F10: 8051994C (anm_init__FP8fr_classifUcf)
//	80519F5C: 8051994C (anm_init__FP8fr_classifUcf)
//	80519F60: 8051BC20 (l_HIO)
//	80519F64: 8051BC20 (l_HIO)
//	80519F74: 8026798C (cM_rndFX__Ff)
//	80519F84: 8051BC20 (l_HIO)
//	80519F88: 8051BC20 (l_HIO)
//	80519F98: 8026798C (cM_rndFX__Ff)
//	80519FAC: 80519D28 (way_bg_check__FP8fr_class)
//	80519FCC: 8051BC20 (l_HIO)
//	80519FD0: 8051BC20 (l_HIO)
//	80519FE0: 8026798C (cM_rndFX__Ff)
//	80519FFC: 8026798C (cM_rndFX__Ff)
//	8051A018: 80267674 (cM_atan2s__Fff)
//	8051A02C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8051A078: 8051994C (anm_init__FP8fr_classifUcf)
//	8051A0C4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void fr_normal(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/fr_normal__FP8fr_class.s"
}
#pragma pop


/* 8051A0D8-8051A318 0240+00 s=1 e=0 z=0  None .text      fr_away__FP8fr_class                                         */
//	8051A0E8: 803621DC (_savegpr_29)
//	8051A0F0: 8051B9C8 (lit_3649)
//	8051A0F4: 8051B9C8 (lit_3649)
//	8051A144: 8051994C (anm_init__FP8fr_classifUcf)
//	8051A190: 8051994C (anm_init__FP8fr_classifUcf)
//	8051A194: 8051BC20 (l_HIO)
//	8051A198: 8051BC20 (l_HIO)
//	8051A1A8: 8026798C (cM_rndFX__Ff)
//	8051A1B8: 8051BC20 (l_HIO)
//	8051A1BC: 8051BC20 (l_HIO)
//	8051A1CC: 8026798C (cM_rndFX__Ff)
//	8051A1E0: 80519D28 (way_bg_check__FP8fr_class)
//	8051A204: 804061C0 (g_dComIfG_gameInfo)
//	8051A208: 804061C0 (g_dComIfG_gameInfo)
//	8051A210: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8051A21C: 8026798C (cM_rndFX__Ff)
//	8051A248: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8051A294: 8051994C (anm_init__FP8fr_classifUcf)
//	8051A2E4: 8051BC20 (l_HIO)
//	8051A2E8: 8051BC20 (l_HIO)
//	8051A304: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void fr_away(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/fr_away__FP8fr_class.s"
}
#pragma pop


/* 8051A318-8051A558 0240+00 s=1 e=0 z=0  None .text      fr_s_normal__FP8fr_class                                     */
//	8051A330: 8051B9C8 (lit_3649)
//	8051A334: 8051B9C8 (lit_3649)
//	8051A360: 80267954 (cM_rndF__Ff)
//	8051A37C: 8051994C (anm_init__FP8fr_classifUcf)
//	8051A38C: 80267954 (cM_rndF__Ff)
//	8051A3AC: 8051BC20 (l_HIO)
//	8051A3B0: 8051BC20 (l_HIO)
//	8051A3F4: 8051BC20 (l_HIO)
//	8051A3F8: 8051BC20 (l_HIO)
//	8051A410: 8026FA3C (cLib_addCalc2__FPffff)
//	8051A450: 80519D28 (way_bg_check__FP8fr_class)
//	8051A470: 8051BC20 (l_HIO)
//	8051A474: 8051BC20 (l_HIO)
//	8051A484: 8026798C (cM_rndFX__Ff)
//	8051A4A0: 8026798C (cM_rndFX__Ff)
//	8051A4BC: 80267674 (cM_atan2s__Fff)
//	8051A4D0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8051A510: 8051BC20 (l_HIO)
//	8051A514: 8051BC20 (l_HIO)
//	8051A520: 8026FA80 (cLib_addCalc0__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void fr_s_normal(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/fr_s_normal__FP8fr_class.s"
}
#pragma pop


/* 8051A558-8051A620 00C8+00 s=1 e=0 z=0  None .text      fr_s_wait__FP8fr_class                                       */
//	8051A570: 8051B9C8 (lit_3649)
//	8051A574: 8051B9C8 (lit_3649)
//	8051A5AC: 8051994C (anm_init__FP8fr_classifUcf)
//	8051A5B4: 80267954 (cM_rndF__Ff)
//	8051A5E8: 8026FA80 (cLib_addCalc0__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void fr_s_wait(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/fr_s_wait__FP8fr_class.s"
}
#pragma pop


/* 8051A620-8051A820 0200+00 s=1 e=0 z=0  None .text      fr_s_away__FP8fr_class                                       */
//	8051A630: 803621DC (_savegpr_29)
//	8051A638: 8051B9C8 (lit_3649)
//	8051A63C: 8051B9C8 (lit_3649)
//	8051A668: 80267954 (cM_rndF__Ff)
//	8051A684: 8051994C (anm_init__FP8fr_classifUcf)
//	8051A6C0: 8051BC20 (l_HIO)
//	8051A6C4: 8051BC20 (l_HIO)
//	8051A6DC: 8026FA3C (cLib_addCalc2__FPffff)
//	8051A71C: 80519D28 (way_bg_check__FP8fr_class)
//	8051A740: 804061C0 (g_dComIfG_gameInfo)
//	8051A744: 804061C0 (g_dComIfG_gameInfo)
//	8051A74C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8051A758: 8026798C (cM_rndFX__Ff)
//	8051A784: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8051A790: 8051BC20 (l_HIO)
//	8051A794: 8051BC20 (l_HIO)
//	8051A7F4: 8051BC20 (l_HIO)
//	8051A7F8: 8051BC20 (l_HIO)
//	8051A804: 8026FA80 (cLib_addCalc0__FPfff)
//	8051A80C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void fr_s_away(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/fr_s_away__FP8fr_class.s"
}
#pragma pop


/* 8051A820-8051A904 00E4+00 s=1 e=0 z=0  None .text      fr_eat__FP8fr_class                                          */
//	8051A840: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8051A844: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8051A84C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8051A85C: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	8051A890: 8051B9CC (lit_3650)
//	8051A894: 8051B9CC (lit_3650)
//	8051A89C: 8051B9E4 (lit_3669)
//	8051A8A0: 8051B9E4 (lit_3669)
//	8051A8A4: 8051994C (anm_init__FP8fr_classifUcf)
//	8051A8B0: 8051B9E4 (lit_3669)
//	8051A8B4: 8051B9E4 (lit_3669)
//	8051A8E8: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void fr_eat(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/fr_eat__FP8fr_class.s"
}
#pragma pop


/* 8051A904-8051AA9C 0198+00 s=2 e=0 z=0  None .text      swim_on__FP8fr_class                                         */
//	8051A914: 803621DC (_savegpr_29)
//	8051A91C: 8051B9C8 (lit_3649)
//	8051A920: 8051B9C8 (lit_3649)
//	8051A960: 80439A20 (sincosTable___5JMath)
//	8051A964: 80439A20 (sincosTable___5JMath)
//	8051A9E4: 8026FA3C (cLib_addCalc2__FPffff)
//	8051A9F8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8051AA08: 80439A20 (sincosTable___5JMath)
//	8051AA0C: 80439A20 (sincosTable___5JMath)
//	8051AA38: 804061C0 (g_dComIfG_gameInfo)
//	8051AA3C: 804061C0 (g_dComIfG_gameInfo)
//	8051AA60: 8051BC20 (l_HIO)
//	8051AA64: 8051BC20 (l_HIO)
//	8051AA88: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void swim_on(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/swim_on__FP8fr_class.s"
}
#pragma pop


/* 8051AA9C-8051AC2C 0190+00 s=1 e=0 z=0  None .text      swim_off__FP8fr_class                                        */
//	8051AAB4: 8051B9C8 (lit_3649)
//	8051AAB8: 8051B9C8 (lit_3649)
//	8051AAC8: 8026FA80 (cLib_addCalc0__FPfff)
//	8051AB5C: 8051A904 (swim_on__FP8fr_class)
//	8051AB64: 80519AB8 (sibuki_set__FP8fr_class)
//	8051AB84: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8051AB88: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8051ABB4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8051ABC8: 804061C0 (g_dComIfG_gameInfo)
//	8051ABCC: 804061C0 (g_dComIfG_gameInfo)
//	8051ABF0: 8051BC20 (l_HIO)
//	8051ABF4: 8051BC20 (l_HIO)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void swim_off(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/swim_off__FP8fr_class.s"
}
#pragma pop


/* 8051AC2C-8051AD04 00D8+00 s=1 e=0 z=0  None .text      fr_message__FP8fr_class                                      */
//	8051AC44: 8051B9C8 (lit_3649)
//	8051AC48: 8051B9C8 (lit_3649)
//	8051AC6C: 80267954 (cM_rndF__Ff)
//	8051AC88: 8051994C (anm_init__FP8fr_classifUcf)
//	8051ACA4: 8026FA80 (cLib_addCalc0__FPfff)
//	8051ACAC: 804061C0 (g_dComIfG_gameInfo)
//	8051ACB0: 804061C0 (g_dComIfG_gameInfo)
//	8051ACB8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8051ACCC: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void fr_message(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/fr_message__FP8fr_class.s"
}
#pragma pop


/* 8051AD04-8051B04C 0348+00 s=2 e=0 z=0  None .text      action__FP8fr_class                                          */
//	8051AD1C: 803621D8 (_savegpr_28)
//	8051AD24: 8051B9C8 (lit_3649)
//	8051AD28: 8051B9C8 (lit_3649)
//	8051AD30: 8051BC20 (l_HIO)
//	8051AD34: 8051BC20 (l_HIO)
//	8051AD54: 8051BA94 (lit_4226)
//	8051AD58: 8051BA94 (lit_4226)
//	8051AD6C: 80519E24 (fr_normal__FP8fr_class)
//	8051AD7C: 8051A0D8 (fr_away__FP8fr_class)
//	8051AD8C: 8051AC2C (fr_message__FP8fr_class)
//	8051AD9C: 8051A318 (fr_s_normal__FP8fr_class)
//	8051ADA8: 8051A558 (fr_s_wait__FP8fr_class)
//	8051ADB4: 8051A620 (fr_s_away__FP8fr_class)
//	8051ADC0: 8051A820 (fr_eat__FP8fr_class)
//	8051ADE8: 804061C0 (g_dComIfG_gameInfo)
//	8051ADEC: 804061C0 (g_dComIfG_gameInfo)
//	8051AE3C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8051AE40: 80450768 (calc_mtx)
//	8051AE44: 80450768 (calc_mtx)
//	8051AE50: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8051AE70: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8051AEA0: 80266B84 (__ml__4cXyzCFf)
//	8051AEB0: 80266B84 (__ml__4cXyzCFf)
//	8051AEC0: 80347090 (PSVECAdd)
//	8051AF04: 800777B0 (__ct__18dBgS_ObjGndChk_SplFv)
//	8051AF18: 80519B60 (wd_check__FP8fr_class)
//	8051AF34: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8051AF38: 804061C0 (g_dComIfG_gameInfo)
//	8051AF3C: 804061C0 (g_dComIfG_gameInfo)
//	8051AF48: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8051AF84: 8051AA9C (swim_off__FP8fr_class)
//	8051AF9C: 8051A904 (swim_on__FP8fr_class)
//	8051AFB0: 8001D1F4 (fopAcM_riverStream__FP4cXyzPsPff)
//	8051AFB8: 804061C0 (g_dComIfG_gameInfo)
//	8051AFBC: 804061C0 (g_dComIfG_gameInfo)
//	8051AFC4: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8051B028: 80077848 (__dt__18dBgS_ObjGndChk_SplFv)
//	8051B038: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void action(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/action__FP8fr_class.s"
}
#pragma pop


/* 8051B04C-8051B170 0124+00 s=1 e=0 z=0  None .text      message__FP8fr_class                                         */
//	8051B084: 8024A2D8 (doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci)
//	8051B090: 804061C0 (g_dComIfG_gameInfo)
//	8051B094: 804061C0 (g_dComIfG_gameInfo)
//	8051B09C: 80042468 (reset__14dEvt_control_cFv)
//	8051B0B0: 804061C0 (g_dComIfG_gameInfo)
//	8051B0B4: 804061C0 (g_dComIfG_gameInfo)
//	8051B0E4: 80249F90 (init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c)
//	8051B108: 804061C0 (g_dComIfG_gameInfo)
//	8051B10C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void message(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/message__FP8fr_class.s"
}
#pragma pop


/* 8051B170-8051B354 01E4+00 s=2 e=0 z=0  None .text      daFr_Execute__FP8fr_class                                    */
//	8051B188: 8051B9C8 (lit_3649)
//	8051B18C: 8051B9C8 (lit_3649)
//	8051B190: 800182A8 (cDmrNowMidnaTalk__Fv)
//	8051B1B8: 804061C0 (g_dComIfG_gameInfo)
//	8051B1BC: 804061C0 (g_dComIfG_gameInfo)
//	8051B1C4: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8051B21C: 8051AD04 (action__FP8fr_class)
//	8051B220: 803DD470 (now__14mDoMtx_stack_c)
//	8051B224: 803DD470 (now__14mDoMtx_stack_c)
//	8051B23C: 803468E8 (PSMTXTrans)
//	8051B240: 803DD470 (now__14mDoMtx_stack_c)
//	8051B244: 803DD470 (now__14mDoMtx_stack_c)
//	8051B24C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8051B250: 803DD470 (now__14mDoMtx_stack_c)
//	8051B254: 803DD470 (now__14mDoMtx_stack_c)
//	8051B25C: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8051B260: 803DD470 (now__14mDoMtx_stack_c)
//	8051B264: 803DD470 (now__14mDoMtx_stack_c)
//	8051B26C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	8051B27C: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	8051B288: 803DD470 (now__14mDoMtx_stack_c)
//	8051B28C: 803DD470 (now__14mDoMtx_stack_c)
//	8051B294: 803464B0 (PSMTXCopy)
//	8051B2A8: 800105C8 (play__14mDoExt_McaMorfFP3VecUlSc)
//	8051B2DC: 800106AC (modelCalc__14mDoExt_McaMorfFv)
//	8051B334: 8051B04C (message__FP8fr_class)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void daFr_Execute(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/daFr_Execute__FP8fr_class.s"
}
#pragma pop


/* 8051B354-8051B35C 0008+00 s=1 e=0 z=0  None .text      daFr_IsDelete__FP8fr_class                                   */
// True False
//  bool False
//  fr_class* False
// 	 fr_class False
static bool daFr_IsDelete(fr_class* param_0) {
	return true;
}


/* 8051B35C-8051B3B0 0054+00 s=1 e=0 z=0  None .text      daFr_Delete__FP8fr_class                                     */
//	8051B374: 8051BA88 (stringBase0)
//	8051B378: 8051BA88 (stringBase0)
//	8051B37C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	8051B390: 8051BC10 (data_8051BC10)
//	8051B394: 8051BC10 (data_8051BC10)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fr_class* False
// 	 fr_class False
asm static void daFr_Delete(fr_class* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/daFr_Delete__FP8fr_class.s"
}
#pragma pop


/* 8051B3B0-8051B550 01A0+00 s=1 e=0 z=0  None .text      useHeapIfrt__FP10fopAc_ac_c                                  */
//	8051B3C0: 803621D8 (_savegpr_28)
//	8051B3CC: 802CEC4C (__nw__FUl)
//	8051B3D8: 8051BA88 (stringBase0)
//	8051B3DC: 8051BA88 (stringBase0)
//	8051B3E4: 804061C0 (g_dComIfG_gameInfo)
//	8051B3E8: 804061C0 (g_dComIfG_gameInfo)
//	8051B3FC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8051B404: 8051BA88 (stringBase0)
//	8051B408: 8051BA88 (stringBase0)
//	8051B418: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8051B458: 8051B9EC (lit_3691)
//	8051B45C: 8051B9EC (lit_3691)
//	8051B468: 8000FC4C (__ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl)
//	8051B498: 802CEC4C (__nw__FUl)
//	8051B4A4: 8051BBEC (__vt__12J3DFrameCtrl)
//	8051B4A8: 8051BBEC (__vt__12J3DFrameCtrl)
//	8051B4B4: 803283FC (init__12J3DFrameCtrlFs)
//	8051B4D8: 8051BA88 (stringBase0)
//	8051B4DC: 8051BA88 (stringBase0)
//	8051B4E4: 804061C0 (g_dComIfG_gameInfo)
//	8051B4E8: 804061C0 (g_dComIfG_gameInfo)
//	8051B4F8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8051B51C: 8051B9EC (lit_3691)
//	8051B520: 8051B9EC (lit_3691)
//	8051B52C: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	8051B53C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapIfrt(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/useHeapIfrt__FP10fopAc_ac_c.s"
}
#pragma pop


/* 8051B550-8051B598 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	8051B568: 8051BBEC (__vt__12J3DFrameCtrl)
//	8051B56C: 8051BBEC (__vt__12J3DFrameCtrl)
//	8051B57C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 8051B598-8051B820 0288+00 s=1 e=0 z=0  None .text      daFr_Create__FP10fopAc_ac_c                                  */
//	8051B5A8: 803621D8 (_savegpr_28)
//	8051B5B0: 8051B9C8 (lit_3649)
//	8051B5B4: 8051B9C8 (lit_3649)
//	8051B5D0: 80018B64 (__ct__10fopAc_ac_cFv)
//	8051B5D8: 80075EAC (__ct__12dBgS_AcchCirFv)
//	8051B5E4: 800760A0 (__ct__9dBgS_AcchFv)
//	8051B5E8: 8051BBC8 (__vt__12dBgS_ObjAcch)
//	8051B5EC: 8051BBC8 (__vt__12dBgS_ObjAcch)
//	8051B608: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	8051B60C: 803C3728 (__vt__9cCcD_Stts)
//	8051B610: 803C3728 (__vt__9cCcD_Stts)
//	8051B61C: 80083760 (__ct__10dCcD_GSttsFv)
//	8051B620: 803AC2E4 (__vt__9dCcD_Stts)
//	8051B624: 803AC2E4 (__vt__9dCcD_Stts)
//	8051B63C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	8051B640: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8051B644: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8051B64C: 8051BBBC (__vt__8cM3dGAab)
//	8051B650: 8051BBBC (__vt__8cM3dGAab)
//	8051B658: 8051BBB0 (__vt__8cM3dGSph)
//	8051B65C: 8051BBB0 (__vt__8cM3dGSph)
//	8051B664: 803C3540 (__vt__12cCcD_SphAttr)
//	8051B668: 803C3540 (__vt__12cCcD_SphAttr)
//	8051B678: 803ABFC0 (__vt__8dCcD_Sph)
//	8051B67C: 803ABFC0 (__vt__8dCcD_Sph)
//	8051B698: 80249F00 (__ct__10dMsgFlow_cFv)
//	8051B6AC: 8051BA88 (stringBase0)
//	8051B6B0: 8051BA88 (stringBase0)
//	8051B6B4: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	8051B6E8: 8051B3B0 (useHeapIfrt__FP10fopAc_ac_c)
//	8051B6EC: 8051B3B0 (useHeapIfrt__FP10fopAc_ac_c)
//	8051B6F4: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	8051B708: 8051BC10 (data_8051BC10)
//	8051B70C: 8051BC10 (data_8051BC10)
//	8051B728: 8051BC20 (l_HIO)
//	8051B72C: 8051BC20 (l_HIO)
//	8051B744: 804061C0 (g_dComIfG_gameInfo)
//	8051B748: 804061C0 (g_dComIfG_gameInfo)
//	8051B750: 8051BA88 (stringBase0)
//	8051B754: 8051BA88 (stringBase0)
//	8051B75C: 80368994 (strcmp)
//	8051B7A8: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	8051B7B8: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	8051B7E8: 80267954 (cM_rndF__Ff)
//	8051B800: 8051B170 (daFr_Execute__FP8fr_class)
//	8051B80C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daFr_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/daFr_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 8051B820-8051B868 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	8051B838: 8051BBB0 (__vt__8cM3dGSph)
//	8051B83C: 8051BBB0 (__vt__8cM3dGSph)
//	8051B84C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 8051B868-8051B8B0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	8051B880: 8051BBBC (__vt__8cM3dGAab)
//	8051B884: 8051BBBC (__vt__8cM3dGAab)
//	8051B894: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 8051B8B0-8051B920 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	8051B8D0: 8051BBC8 (__vt__12dBgS_ObjAcch)
//	8051B8D4: 8051BBC8 (__vt__12dBgS_ObjAcch)
//	8051B8F0: 80075F94 (__dt__9dBgS_AcchFv)
//	8051B900: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 8051B920-8051B968 0048+00 s=2 e=0 z=0  None .text      __dt__10daFr_HIO_cFv                                         */
//	8051B938: 8051BBF8 (__vt__10daFr_HIO_c)
//	8051B93C: 8051BBF8 (__vt__10daFr_HIO_c)
//	8051B94C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daFr_HIO_c::~daFr_HIO_c() {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/__dt__10daFr_HIO_cFv.s"
}
#pragma pop


/* 8051B968-8051B9A4 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_fr_cpp                                           */
//	8051B974: 8051BC20 (l_HIO)
//	8051B978: 8051BC20 (l_HIO)
//	8051B97C: 805198EC (__ct__10daFr_HIO_cFv)
//	8051B980: 8051B920 (__dt__10daFr_HIO_cFv)
//	8051B984: 8051B920 (__dt__10daFr_HIO_cFv)
//	8051B988: 8051BC14 (lit_3644)
//	8051B98C: 8051BC14 (lit_3644)
//	8051B990: 80519878 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_fr_cpp() {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/__sinit_d_a_fr_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_8051B968 = (void*)__sinit_d_a_fr_cpp;
#pragma pop


/* 8051B9A4-8051B9AC 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	8051B9A8: 8051B8B0 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_8051B9A4() {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/func_8051B9A4.s"
}
#pragma pop


/* 8051B9AC-8051B9B4 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	8051B9B0: 8051B8B0 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_8051B9AC() {
	nofralloc
#include "asm/rel/d/a/d_a_fr/d_a_fr/func_8051B9AC.s"
}
#pragma pop


