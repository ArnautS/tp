// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_hb
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_hb/d_a_obj_hb.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct obj_hb_class {
};

struct mDoMtx_stack_c {
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct Vec {
};

struct mDoExt_McaMorf {
	/* 800105C8 */ // False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
void play(Vec*, u32, s8);
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800842C0 */ // False False
void ChkAtHit();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084658 */ // False False
void ChkCoHit();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjGndChk_Spl {
	/* 800777B0 */ // False False
dBgS_ObjGndChk_Spl();
	/* 80077848 */ // False False
~dBgS_ObjGndChk_Spl();
};

struct dBgS_ObjAcch {
	/* 80C1B578 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct dAttention_c {
	/* 8007353C */ // False False
//  s32 False
void LockonTarget(s32);
	/* 800737E4 */ // False False
void LockonTruth();
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80C1B4E8 */ // True False
~cM3dGSph();
};

struct cM3dGAab {
	/* 80C1B530 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cBgS_PolyInfo {
};

struct cBgS_LinChk {
};

struct cBgS_GndChk {
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
	/* 80267D0C */ // False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void SetPos(Vec const*);
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
};

struct _GXTexObj {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C06F4 */ // False False
void stopAnime();
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  obj_hb_class* False
// 	 obj_hb_class False
static void daOBJ_HB_Draw(obj_hb_class*);
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
static void obj_hb_carry(obj_hb_class*);
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
static void wall_angle_get(obj_hb_class*);
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
static void water_check(obj_hb_class*);
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
static void obj_hb_set(obj_hb_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  csXyz* False
// 	 csXyz False
static void getGroundAngle(fopAc_ac_c*, csXyz*);
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
static void obj_hb_drop(obj_hb_class*);
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
static void obj_hb_float(obj_hb_class*);
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
static void action(obj_hb_class*);
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
static void daOBJ_HB_Execute(obj_hb_class*);
// True False
//  bool False
//  obj_hb_class* False
// 	 obj_hb_class False
static bool daOBJ_HB_IsDelete(obj_hb_class*);
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
static void daOBJ_HB_Delete(obj_hb_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daOBJ_HB_Create(fopAc_ac_c*);

// True False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static void daOBJ_HB_Draw__FP12obj_hb_class();
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static void obj_hb_carry__FP12obj_hb_class();
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static void wall_angle_get__FP12obj_hb_class();
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static void water_check__FP12obj_hb_class();
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static void obj_hb_set__FP12obj_hb_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  csXyz* False
// 	 csXyz False
extern "C" static void getGroundAngle__FP10fopAc_ac_cP5csXyz();
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static void obj_hb_drop__FP12obj_hb_class();
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static void obj_hb_float__FP12obj_hb_class();
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static void action__FP12obj_hb_class();
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static void daOBJ_HB_Execute__FP12obj_hb_class();
// True False
//  bool False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static bool daOBJ_HB_IsDelete__FP12obj_hb_class();
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
extern "C" static void daOBJ_HB_Delete__FP12obj_hb_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daOBJ_HB_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" static void func_80C1B5E8();
// True False
extern "C" static void func_80C1B5F0();
extern "C" extern u32 const lit_3666;
extern "C" extern u32 const lit_3668;
extern "C" extern u32 const lit_3735;
extern "C" extern u32 const lit_3736;
extern "C" extern u32 const lit_3737;
extern "C" extern u32 const lit_3738;
extern "C" extern u32 const lit_3792;
extern "C" extern u32 const lit_3793;
extern "C" extern u32 const lit_3794;
extern "C" extern u32 const lit_3795;
extern "C" extern u32 const lit_3818;
extern "C" extern u32 const lit_3819;
extern "C" extern u32 const lit_3820;
extern "C" extern u32 const lit_3821;
extern "C" extern u32 const lit_3822;
extern "C" extern u32 const lit_3824;
extern "C" extern u32 const lit_3855;
extern "C" extern u32 const lit_3856;
extern "C" extern u32 const lit_4043;
extern "C" extern u32 const lit_4044;
extern "C" extern u32 const lit_4045;
extern "C" extern u32 const lit_4046;
extern "C" extern u32 const lit_4047;
extern "C" extern u32 const lit_4048;
extern "C" extern u32 const lit_4049;
extern "C" extern u32 const lit_4050;
extern "C" extern u32 const lit_4051;
extern "C" extern u32 const lit_4052;
extern "C" extern u32 const lit_4053;
extern "C" extern u32 const lit_4054;
extern "C" extern u8 const lit_4055[8];
extern "C" extern u8 const lit_4056[8];
extern "C" extern u8 const lit_4057[8];
extern "C" extern u32 const lit_4058;
extern "C" extern u32 const lit_4059;
extern "C" extern u32 const lit_4060[1 + 1 /* padding */];
extern "C" extern u8 const lit_4062[8];
extern "C" extern u32 const lit_4122;
extern "C" extern u32 const lit_4123;
extern "C" extern u32 const lit_4124;
extern "C" extern u32 const lit_4125;
extern "C" extern u32 const lit_4126;
extern "C" extern u32 const lit_4127;
extern "C" extern u32 const lit_4293;
extern "C" extern u32 const lit_4294;
extern "C" extern u32 const lit_4295;
extern "C" extern u32 const lit_4296;
extern "C" extern u32 const lit_4297;
extern "C" extern u32 const lit_4298;
extern "C" extern u32 const lit_4299;
extern "C" extern u32 const lit_4300;
extern "C" extern u32 const lit_4301;
extern "C" extern u32 const lit_4302;
extern "C" extern u32 const lit_4303;
extern "C" extern u32 const lit_4457;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_OBJ_HB[12];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
void fopAcM_createChild(s16, unsigned int, u32, cXyz const*, int, csXyz const*, cXyz const*, s8, int (*)(void*));
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
void fopAcM_createDisappear(fopAc_ac_c const*, cXyz const*, u8, u8, u8);
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
void fopAcM_effSmokeSet1(u32*, u32*, cXyz const*, csXyz const*, f32, dKy_tevstr_c const*, int);
// False False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
void fopAcM_effHamonSet(u32*, cXyz const*, f32, f32);
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeByID(void*, void*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void def_se_set(Z2Creature*, cCcD_Obj*, u32, fopAc_ac_c*);
// False False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void at_power_check(dCcU_AtInfo*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void MtxPosition(cXyz*, cXyz*);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
extern "C" void play__14mDoExt_McaMorfFP3VecUlSc();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
extern "C" void fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc();
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
extern "C" void fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci();
// False False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
extern "C" void fopAcM_effHamonSet__FPUlPC4cXyzff();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeByID__FPvPv();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  s32 False
extern "C" void LockonTarget__12dAttention_cFl();
// False False
extern "C" void LockonTruth__12dAttention_cFv();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __dt__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkAtHit__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c();
// False False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void at_power_check__FP11dCcU_AtInfo();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void SetPos__11cBgS_GndChkFPC3Vec();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void MtxPosition__FP4cXyzP4cXyz();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
extern "C" void stopAnime__10Z2CreatureFv();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern u8 data_80C1B7E0[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80C1B600-80C1B604 0004+00 s=9 e=0 z=0  None .rodata    @3665                                                        */
SECTION_RODATA static u32 const lit_3665 = 0x42C80000;

/* 80C195B8-80C19688 00D0+00 s=1 e=0 z=0  None .text      daOBJ_HB_Draw__FP12obj_hb_class                              */
//	80C195D0: 80C1B600 (lit_3665)
//	80C195D4: 80C1B600 (lit_3665)
//	80C195D8: 8042CA54 (g_env_light)
//	80C195DC: 8042CA54 (g_env_light)
//	80C195EC: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80C195F0: 8042CA54 (g_env_light)
//	80C195F4: 8042CA54 (g_env_light)
//	80C19604: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C1960C: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80C1965C: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80C19660: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80C19664: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
asm static void daOBJ_HB_Draw(obj_hb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/daOBJ_HB_Draw__FP12obj_hb_class.s"
}
#pragma pop


/* 80C19688-80C1988C 0204+00 s=1 e=0 z=0  None .text      obj_hb_carry__FP12obj_hb_class                               */
//	80C19698: 803621D8 (_savegpr_28)
//	80C196A0: 80C1B600 (lit_3665)
//	80C196A4: 80C1B600 (lit_3665)
//	80C196A8: 804061C0 (g_dComIfG_gameInfo)
//	80C196AC: 804061C0 (g_dComIfG_gameInfo)
//	80C19798: 804061C0 (g_dComIfG_gameInfo)
//	80C1979C: 804061C0 (g_dComIfG_gameInfo)
//	80C197AC: 800737E4 (LockonTruth__12dAttention_cFv)
//	80C197D8: 8007353C (LockonTarget__12dAttention_cFl)
//	80C1985C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C19870: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C19878: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
asm static void obj_hb_carry(obj_hb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/obj_hb_carry__FP12obj_hb_class.s"
}
#pragma pop


/* 80C1988C-80C19A2C 01A0+00 s=1 e=0 z=0  None .text      wall_angle_get__FP12obj_hb_class                             */
//	80C198A4: 803621D4 (_savegpr_27)
//	80C198A8: 80C1B600 (lit_3665)
//	80C198AC: 80C1B600 (lit_3665)
//	80C198B8: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C198BC: 80450768 (calc_mtx)
//	80C198C0: 80450768 (calc_mtx)
//	80C198CC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80C198EC: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80C198FC: 80347090 (PSVECAdd)
//	80C19920: 804061C0 (g_dComIfG_gameInfo)
//	80C19924: 804061C0 (g_dComIfG_gameInfo)
//	80C19940: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80C1995C: 80347090 (PSVECAdd)
//	80C19970: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C1997C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C199AC: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C199D4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C199F0: 80267674 (cM_atan2s__Fff)
//	80C19A04: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C19A18: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
asm static void wall_angle_get(obj_hb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/wall_angle_get__FP12obj_hb_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C1B604-80C1B608 0004+00 s=0 e=0 z=0  None .rodata    @3666                                                        */
SECTION_RODATA u32 const lit_3666 = 0x43C80000;

/* 80C1B608-80C1B60C 0004+00 s=1 e=0 z=0  None .rodata    @3667                                                        */
SECTION_RODATA static u8 const lit_3667[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80C1B60C-80C1B610 0004+00 s=0 e=0 z=0  None .rodata    @3668                                                        */
SECTION_RODATA u32 const lit_3668 = 0x3F800000;

/* 80C1B610-80C1B614 0004+00 s=0 e=0 z=0  None .rodata    @3735                                                        */
SECTION_RODATA u32 const lit_3735 = 0x41200000;

/* 80C1B614-80C1B618 0004+00 s=0 e=0 z=0  None .rodata    @3736                                                        */
SECTION_RODATA u32 const lit_3736 = 0x41F00000;

/* 80C1B618-80C1B61C 0004+00 s=0 e=0 z=0  None .rodata    @3737                                                        */
SECTION_RODATA u32 const lit_3737 = 0x3E800000;

/* 80C1B61C-80C1B620 0004+00 s=0 e=0 z=0  None .rodata    @3738                                                        */
SECTION_RODATA u32 const lit_3738 = 0x447A0000;

/* 80C1B620-80C1B624 0004+00 s=0 e=0 z=0  None .rodata    @3792                                                        */
SECTION_RODATA u32 const lit_3792 = 0xC2480000;

/* 80C1B624-80C1B628 0004+00 s=0 e=0 z=0  None .rodata    @3793                                                        */
SECTION_RODATA u32 const lit_3793 = 0x40A00000;

/* 80C1B628-80C1B62C 0004+00 s=0 e=0 z=0  None .rodata    @3794                                                        */
SECTION_RODATA u32 const lit_3794 = 0x43480000;

/* 80C1B62C-80C1B630 0004+00 s=0 e=0 z=0  None .rodata    @3795                                                        */
SECTION_RODATA u32 const lit_3795 = 0xBF800000;

/* 80C1B630-80C1B634 0004+00 s=1 e=0 z=0  None .rodata    @3804                                                        */
SECTION_RODATA static u32 const lit_3804 = 0x43FA0000;

/* 80C19A2C-80C19AD8 00AC+00 s=1 e=0 z=0  None .text      water_check__FP12obj_hb_class                                */
//	80C19A44: 800777B0 (__ct__18dBgS_ObjGndChk_SplFv)
//	80C19A50: 80C1B630 (lit_3804)
//	80C19A54: 80C1B630 (lit_3804)
//	80C19A74: 80267D0C (SetPos__11cBgS_GndChkFPC3Vec)
//	80C19A78: 804061C0 (g_dComIfG_gameInfo)
//	80C19A7C: 804061C0 (g_dComIfG_gameInfo)
//	80C19A88: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80C19AA8: 80077848 (__dt__18dBgS_ObjGndChk_SplFv)
//	80C19ABC: 80077848 (__dt__18dBgS_ObjGndChk_SplFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
asm static void water_check(obj_hb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/water_check__FP12obj_hb_class.s"
}
#pragma pop


/* 80C19AD8-80C19BEC 0114+00 s=1 e=0 z=0  None .text      obj_hb_set__FP12obj_hb_class                                 */
//	80C19AF0: 80C1B600 (lit_3665)
//	80C19AF4: 80C1B600 (lit_3665)
//	80C19B54: 8026FA3C (cLib_addCalc2__FPffff)
//	80C19B68: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
asm static void obj_hb_set(obj_hb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/obj_hb_set__FP12obj_hb_class.s"
}
#pragma pop


/* 80C19BEC-80C19DA8 01BC+00 s=1 e=0 z=0  None .text      getGroundAngle__FP10fopAc_ac_cP5csXyz                        */
//	80C19BFC: 803621D0 (_savegpr_26)
//	80C19C08: 80C1B600 (lit_3665)
//	80C19C0C: 80C1B600 (lit_3665)
//	80C19C14: 8007757C (__ct__11dBgS_GndChkFv)
//	80C19C48: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80C19C4C: 804061C0 (g_dComIfG_gameInfo)
//	80C19C50: 804061C0 (g_dComIfG_gameInfo)
//	80C19C60: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80C19CA4: 80267D0C (SetPos__11cBgS_GndChkFPC3Vec)
//	80C19CB0: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80C19CDC: 80267674 (cM_atan2s__Fff)
//	80C19D20: 80267D0C (SetPos__11cBgS_GndChkFPC3Vec)
//	80C19D2C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80C19D58: 80267674 (cM_atan2s__Fff)
//	80C19D88: 800775F0 (__dt__11dBgS_GndChkFv)
//	80C19D94: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  csXyz* False
// 	 csXyz False
asm static void getGroundAngle(fopAc_ac_c* param_0, csXyz* param_1) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/getGroundAngle__FP10fopAc_ac_cP5csXyz.s"
}
#pragma pop


/* 80C19DA8-80C1A490 06E8+00 s=1 e=0 z=0  None .text      obj_hb_drop__FP12obj_hb_class                                */
//	80C19DB8: 803621DC (_savegpr_29)
//	80C19DC0: 80C1B600 (lit_3665)
//	80C19DC4: 80C1B600 (lit_3665)
//	80C19DD4: 8026FA80 (cLib_addCalc0__FPfff)
//	80C19E48: 80C1988C (wall_angle_get__FP12obj_hb_class)
//	80C19F38: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	80C19F90: 8026798C (cM_rndFX__Ff)
//	80C19FC0: 8026FA80 (cLib_addCalc0__FPfff)
//	80C19FDC: 80450768 (calc_mtx)
//	80C19FE0: 80450768 (calc_mtx)
//	80C19FEC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80C1A00C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80C1A0FC: 8026F708 (SetR__8cM3dGSphFf)
//	80C1A118: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	80C1A144: 80023590 (fpcSch_JudgeByID__FPvPv)
//	80C1A148: 80023590 (fpcSch_JudgeByID__FPvPv)
//	80C1A150: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80C1A168: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C1A170: 80347138 (PSVECSquareMag)
//	80C1A1E0: 80450AE0 (__float_nan)
//	80C1A1E4: 80450AE0 (__float_nan)
//	80C1A250: 80450AE0 (__float_nan)
//	80C1A254: 80450AE0 (__float_nan)
//	80C1A274: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A288: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A29C: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A2B0: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A308: 80C19BEC (getGroundAngle__FP10fopAc_ac_cP5csXyz)
//	80C1A314: 80450768 (calc_mtx)
//	80C1A318: 80450768 (calc_mtx)
//	80C1A324: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	80C1A328: 80450768 (calc_mtx)
//	80C1A32C: 80450768 (calc_mtx)
//	80C1A338: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80C1A358: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80C1A368: 80347138 (PSVECSquareMag)
//	80C1A3D8: 80450AE0 (__float_nan)
//	80C1A3DC: 80450AE0 (__float_nan)
//	80C1A448: 80450AE0 (__float_nan)
//	80C1A44C: 80450AE0 (__float_nan)
//	80C1A46C: 80347090 (PSVECAdd)
//	80C1A47C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
asm static void obj_hb_drop(obj_hb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/obj_hb_drop__FP12obj_hb_class.s"
}
#pragma pop


/* 80C1A490-80C1A748 02B8+00 s=1 e=0 z=0  None .text      obj_hb_float__FP12obj_hb_class                               */
//	80C1A4A0: 803621DC (_savegpr_29)
//	80C1A4A8: 80C1B600 (lit_3665)
//	80C1A4AC: 80C1B600 (lit_3665)
//	80C1A4BC: 8026FA80 (cLib_addCalc0__FPfff)
//	80C1A4CC: 80347090 (PSVECAdd)
//	80C1A548: 8001D10C (fopAcM_effHamonSet__FPUlPC4cXyzff)
//	80C1A558: 80439A20 (sincosTable___5JMath)
//	80C1A55C: 80439A20 (sincosTable___5JMath)
//	80C1A590: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A5A0: 80439A20 (sincosTable___5JMath)
//	80C1A5A4: 80439A20 (sincosTable___5JMath)
//	80C1A5FC: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A60C: 80439A20 (sincosTable___5JMath)
//	80C1A610: 80439A20 (sincosTable___5JMath)
//	80C1A678: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A690: 804061C0 (g_dComIfG_gameInfo)
//	80C1A694: 804061C0 (g_dComIfG_gameInfo)
//	80C1A69C: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80C1A6B4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80C1A6C8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C1A6D0: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	80C1A6FC: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A718: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A72C: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A734: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
asm static void obj_hb_float(obj_hb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/obj_hb_float__FP12obj_hb_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C1B708-80C1B710 0008+00 s=1 e=0 z=0  None .data      w_eff_id$4176                                                */
SECTION_DATA static u8 w_eff_id[8] = {
	0x01, 0xB8, 0x01, 0xB9, 0x01, 0xBA, 0x01, 0xBB,
};

/* 80C1A748-80C1AF80 0838+00 s=1 e=0 z=0  None .text      action__FP12obj_hb_class                                     */
//	80C1A758: 803621C8 (_savegpr_24)
//	80C1A760: 80C1B600 (lit_3665)
//	80C1A764: 80C1B600 (lit_3665)
//	80C1A77C: 8026F708 (SetR__8cM3dGSphFf)
//	80C1A7B0: 80C19AD8 (obj_hb_set__FP12obj_hb_class)
//	80C1A7C4: 80C19DA8 (obj_hb_drop__FP12obj_hb_class)
//	80C1A7E0: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	80C1A864: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1A86C: 804061C0 (g_dComIfG_gameInfo)
//	80C1A870: 804061C0 (g_dComIfG_gameInfo)
//	80C1A878: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80C1A8AC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C1A8B4: 804061C0 (g_dComIfG_gameInfo)
//	80C1A8B8: 804061C0 (g_dComIfG_gameInfo)
//	80C1A8C0: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80C1A8D0: 80C1A490 (obj_hb_float__FP12obj_hb_class)
//	80C1A8D8: 804061C0 (g_dComIfG_gameInfo)
//	80C1A8DC: 804061C0 (g_dComIfG_gameInfo)
//	80C1A8E4: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80C1A8F0: 80C19688 (obj_hb_carry__FP12obj_hb_class)
//	80C1A900: 804061C0 (g_dComIfG_gameInfo)
//	80C1A904: 804061C0 (g_dComIfG_gameInfo)
//	80C1A90C: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80C1A920: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80C1A938: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80C1A950: 80087514 (def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c)
//	80C1A958: 804061C0 (g_dComIfG_gameInfo)
//	80C1A95C: 804061C0 (g_dComIfG_gameInfo)
//	80C1A964: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80C1A978: 80087A58 (at_power_check__FP11dCcU_AtInfo)
//	80C1A9B0: 80267954 (cM_rndF__Ff)
//	80C1A9C4: 80267954 (cM_rndF__Ff)
//	80C1A9E4: 80267954 (cM_rndF__Ff)
//	80C1AA30: 8026798C (cM_rndFX__Ff)
//	80C1AA6C: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	80C1AA98: 8026798C (cM_rndFX__Ff)
//	80C1AAB8: 8026798C (cM_rndFX__Ff)
//	80C1AAF0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C1AB04: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C1AB18: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C1AB2C: 80439A20 (sincosTable___5JMath)
//	80C1AB30: 80439A20 (sincosTable___5JMath)
//	80C1AB84: 8026FA80 (cLib_addCalc0__FPfff)
//	80C1AB98: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C1ABA8: 80C19A2C (water_check__FP12obj_hb_class)
//	80C1ABE0: 80450768 (calc_mtx)
//	80C1ABE4: 80450768 (calc_mtx)
//	80C1ABF0: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80C1AC14: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80C1AC94: 804061C0 (g_dComIfG_gameInfo)
//	80C1AC98: 804061C0 (g_dComIfG_gameInfo)
//	80C1AC9C: 80C1B708 (w_eff_id)
//	80C1ACA0: 80C1B708 (w_eff_id)
//	80C1ACF0: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C1AD60: 80439A20 (sincosTable___5JMath)
//	80C1AD64: 80439A20 (sincosTable___5JMath)
//	80C1ADA4: 8026FA3C (cLib_addCalc2__FPffff)
//	80C1ADB4: 803DD470 (now__14mDoMtx_stack_c)
//	80C1ADB8: 803DD470 (now__14mDoMtx_stack_c)
//	80C1ADC8: 803468E8 (PSMTXTrans)
//	80C1ADCC: 803DD470 (now__14mDoMtx_stack_c)
//	80C1ADD0: 803DD470 (now__14mDoMtx_stack_c)
//	80C1ADD8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C1ADDC: 803DD470 (now__14mDoMtx_stack_c)
//	80C1ADE0: 803DD470 (now__14mDoMtx_stack_c)
//	80C1ADF4: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80C1ADF8: 803DD470 (now__14mDoMtx_stack_c)
//	80C1ADFC: 803DD470 (now__14mDoMtx_stack_c)
//	80C1AE10: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80C1AE20: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80C1AE24: 803DD470 (now__14mDoMtx_stack_c)
//	80C1AE28: 803DD470 (now__14mDoMtx_stack_c)
//	80C1AE30: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80C1AE40: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80C1AE50: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80C1AE54: 803DD470 (now__14mDoMtx_stack_c)
//	80C1AE58: 803DD470 (now__14mDoMtx_stack_c)
//	80C1AE64: 803464B0 (PSMTXCopy)
//	80C1AE68: 80450768 (calc_mtx)
//	80C1AE6C: 80450768 (calc_mtx)
//	80C1AE78: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	80C1AEA0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80C1AEB0: 80347090 (PSVECAdd)
//	80C1AED8: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80C1AEDC: 804061C0 (g_dComIfG_gameInfo)
//	80C1AEE0: 804061C0 (g_dComIfG_gameInfo)
//	80C1AEEC: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80C1AEF8: 80023590 (fpcSch_JudgeByID__FPvPv)
//	80C1AEFC: 80023590 (fpcSch_JudgeByID__FPvPv)
//	80C1AF04: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80C1AF2C: 800105C8 (play__14mDoExt_McaMorfFP3VecUlSc)
//	80C1AF4C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C1AF6C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
asm static void action(obj_hb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/action__FP12obj_hb_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C1B634-80C1B638 0004+00 s=0 e=0 z=0  None .rodata    @3818                                                        */
SECTION_RODATA u32 const lit_3818 = 0x3CF5C28F;

/* 80C1B638-80C1B63C 0004+00 s=0 e=0 z=0  None .rodata    @3819                                                        */
SECTION_RODATA u32 const lit_3819 = 0x3F19999A;

/* 80C1B63C-80C1B640 0004+00 s=0 e=0 z=0  None .rodata    @3820                                                        */
SECTION_RODATA u32 const lit_3820 = 0x3D4CCCCD;

/* 80C1B640-80C1B644 0004+00 s=0 e=0 z=0  None .rodata    @3821                                                        */
SECTION_RODATA u32 const lit_3821 = 0x3CA3D70A;

/* 80C1B644-80C1B648 0004+00 s=0 e=0 z=0  None .rodata    @3822                                                        */
SECTION_RODATA u32 const lit_3822 = 0x44480000;

/* 80C1B648-80C1B64C 0004+00 s=1 e=0 z=0  None .rodata    @3823                                                        */
SECTION_RODATA static u32 const lit_3823 = 0x44FA0000;

/* 80C1AF80-80C1B124 01A4+00 s=2 e=0 z=0  None .text      daOBJ_HB_Execute__FP12obj_hb_class                           */
//	80C1AFE4: 80C1A748 (action__FP12obj_hb_class)
//	80C1AFF0: 8002D06C (dComIfGp_getReverb__Fi)
//	80C1B01C: 80C1B648 (lit_3823)
//	80C1B020: 80C1B648 (lit_3823)
//	80C1B05C: 80C1B608 (lit_3667)
//	80C1B060: 80C1B608 (lit_3667)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
asm static void daOBJ_HB_Execute(obj_hb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/daOBJ_HB_Execute__FP12obj_hb_class.s"
}
#pragma pop


/* 80C1B124-80C1B12C 0008+00 s=1 e=0 z=0  None .text      daOBJ_HB_IsDelete__FP12obj_hb_class                          */
// True False
//  bool False
//  obj_hb_class* False
// 	 obj_hb_class False
static bool daOBJ_HB_IsDelete(obj_hb_class* param_0) {
	return true;
}


/* ############################################################################################## */
/* 80C1B64C-80C1B650 0004+00 s=0 e=0 z=0  None .rodata    @3824                                                        */
SECTION_RODATA u32 const lit_3824 = 0x41C80000;

/* 80C1B650-80C1B654 0004+00 s=0 e=0 z=0  None .rodata    @3855                                                        */
SECTION_RODATA u32 const lit_3855 = 0x42480000;

/* 80C1B654-80C1B658 0004+00 s=0 e=0 z=0  None .rodata    @3856                                                        */
SECTION_RODATA u32 const lit_3856 = 0xCE6E6B28;

/* 80C1B658-80C1B65C 0004+00 s=0 e=0 z=0  None .rodata    @4043                                                        */
SECTION_RODATA u32 const lit_4043 = 0x41A00000;

/* 80C1B65C-80C1B660 0004+00 s=0 e=0 z=0  None .rodata    @4044                                                        */
SECTION_RODATA u32 const lit_4044 = 0xBE99999A;

/* 80C1B660-80C1B664 0004+00 s=0 e=0 z=0  None .rodata    @4045                                                        */
SECTION_RODATA u32 const lit_4045 = 0x3F000000;

/* 80C1B664-80C1B668 0004+00 s=0 e=0 z=0  None .rodata    @4046                                                        */
SECTION_RODATA u32 const lit_4046 = 0xC1F00000;

/* 80C1B668-80C1B66C 0004+00 s=0 e=0 z=0  None .rodata    @4047                                                        */
SECTION_RODATA u32 const lit_4047 = 0x3F4CCCCD;

/* 80C1B66C-80C1B670 0004+00 s=0 e=0 z=0  None .rodata    @4048                                                        */
SECTION_RODATA u32 const lit_4048 = 0xBECCCCCD;

/* 80C1B670-80C1B674 0004+00 s=0 e=0 z=0  None .rodata    @4049                                                        */
SECTION_RODATA u32 const lit_4049 = 0x3F400000;

/* 80C1B674-80C1B678 0004+00 s=0 e=0 z=0  None .rodata    @4050                                                        */
SECTION_RODATA u32 const lit_4050 = 0x455AC000;

/* 80C1B678-80C1B67C 0004+00 s=0 e=0 z=0  None .rodata    @4051                                                        */
SECTION_RODATA u32 const lit_4051 = 0x44A28000;

/* 80C1B67C-80C1B680 0004+00 s=0 e=0 z=0  None .rodata    @4052                                                        */
SECTION_RODATA u32 const lit_4052 = 0x40000000;

/* 80C1B680-80C1B684 0004+00 s=0 e=0 z=0  None .rodata    @4053                                                        */
SECTION_RODATA u32 const lit_4053 = 0xC0A00000;

/* 80C1B684-80C1B688 0004+00 s=0 e=0 z=0  None .rodata    @4054                                                        */
SECTION_RODATA u32 const lit_4054 = 0x42700000;

/* 80C1B688-80C1B690 0008+00 s=0 e=0 z=0  None .rodata    @4055                                                        */
SECTION_RODATA u8 const lit_4055[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C1B690-80C1B698 0008+00 s=0 e=0 z=0  None .rodata    @4056                                                        */
SECTION_RODATA u8 const lit_4056[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C1B698-80C1B6A0 0008+00 s=0 e=0 z=0  None .rodata    @4057                                                        */
SECTION_RODATA u8 const lit_4057[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C1B6A0-80C1B6A4 0004+00 s=0 e=0 z=0  None .rodata    @4058                                                        */
SECTION_RODATA u32 const lit_4058 = 0x43960000;

/* 80C1B6A4-80C1B6A8 0004+00 s=0 e=0 z=0  None .rodata    @4059                                                        */
SECTION_RODATA u32 const lit_4059 = 0x3E99999A;

/* 80C1B6A8-80C1B6B0 0004+04 s=0 e=0 z=0  None .rodata    @4060                                                        */
SECTION_RODATA u32 const lit_4060[1 + 1 /* padding */] = {
	0x41000000,
	/* padding */
	0x00000000,
};

/* 80C1B6B0-80C1B6B8 0008+00 s=0 e=0 z=0  None .rodata    @4062                                                        */
SECTION_RODATA u8 const lit_4062[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80C1B6B8-80C1B6BC 0004+00 s=0 e=0 z=0  None .rodata    @4122                                                        */
SECTION_RODATA u32 const lit_4122 = 0x3F733333;

/* 80C1B6BC-80C1B6C0 0004+00 s=0 e=0 z=0  None .rodata    @4123                                                        */
SECTION_RODATA u32 const lit_4123 = 0x3DCCCCCD;

/* 80C1B6C0-80C1B6C4 0004+00 s=0 e=0 z=0  None .rodata    @4124                                                        */
SECTION_RODATA u32 const lit_4124 = 0x42200000;

/* 80C1B6C4-80C1B6C8 0004+00 s=0 e=0 z=0  None .rodata    @4125                                                        */
SECTION_RODATA u32 const lit_4125 = 0x3B83126F;

/* 80C1B6C8-80C1B6CC 0004+00 s=0 e=0 z=0  None .rodata    @4126                                                        */
SECTION_RODATA u32 const lit_4126 = 0x44BB8000;

/* 80C1B6CC-80C1B6D0 0004+00 s=0 e=0 z=0  None .rodata    @4127                                                        */
SECTION_RODATA u32 const lit_4127 = 0x43020000;

/* 80C1B6D0-80C1B6D4 0004+00 s=0 e=0 z=0  None .rodata    @4293                                                        */
SECTION_RODATA u32 const lit_4293 = 0x45ABE000;

/* 80C1B6D4-80C1B6D8 0004+00 s=0 e=0 z=0  None .rodata    @4294                                                        */
SECTION_RODATA u32 const lit_4294 = 0x459C4000;

/* 80C1B6D8-80C1B6DC 0004+00 s=0 e=0 z=0  None .rodata    @4295                                                        */
SECTION_RODATA u32 const lit_4295 = 0x453B8000;

/* 80C1B6DC-80C1B6E0 0004+00 s=0 e=0 z=0  None .rodata    @4296                                                        */
SECTION_RODATA u32 const lit_4296 = 0x457A0000;

/* 80C1B6E0-80C1B6E4 0004+00 s=0 e=0 z=0  None .rodata    @4297                                                        */
SECTION_RODATA u32 const lit_4297 = 0x3F333333;

/* 80C1B6E4-80C1B6E8 0004+00 s=0 e=0 z=0  None .rodata    @4298                                                        */
SECTION_RODATA u32 const lit_4298 = 0xC0000000;

/* 80C1B6E8-80C1B6EC 0004+00 s=0 e=0 z=0  None .rodata    @4299                                                        */
SECTION_RODATA u32 const lit_4299 = 0x40200000;

/* 80C1B6EC-80C1B6F0 0004+00 s=0 e=0 z=0  None .rodata    @4300                                                        */
SECTION_RODATA u32 const lit_4300 = 0xC1400000;

/* 80C1B6F0-80C1B6F4 0004+00 s=0 e=0 z=0  None .rodata    @4301                                                        */
SECTION_RODATA u32 const lit_4301 = 0x3C23D70A;

/* 80C1B6F4-80C1B6F8 0004+00 s=0 e=0 z=0  None .rodata    @4302                                                        */
SECTION_RODATA u32 const lit_4302 = 0x3E4CCCCD;

/* 80C1B6F8-80C1B6FC 0004+00 s=0 e=0 z=0  None .rodata    @4303                                                        */
SECTION_RODATA u32 const lit_4303 = 0x469C4000;

/* 80C1B6FC-80C1B700 0004+00 s=0 e=0 z=0  None .rodata    @4457                                                        */
SECTION_RODATA u32 const lit_4457 = 0x477FFF00;

/* 80C1B700-80C1B705 0005+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80C1B700 = "E_HB";
#pragma pop

/* 80C1B12C-80C1B188 005C+00 s=1 e=0 z=0  None .text      daOBJ_HB_Delete__FP12obj_hb_class                            */
//	80C1B144: 80C1B700 (stringBase0)
//	80C1B148: 80C1B700 (stringBase0)
//	80C1B14C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80C1B154: 802C06F4 (stopAnime__10Z2CreatureFv)
//	80C1B158: 80C1B7E0 (data_80C1B7E0)
//	80C1B15C: 80C1B7E0 (data_80C1B7E0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  obj_hb_class* False
// 	 obj_hb_class False
asm static void daOBJ_HB_Delete(obj_hb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/daOBJ_HB_Delete__FP12obj_hb_class.s"
}
#pragma pop


/* 80C1B188-80C1B1F4 006C+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	80C1B19C: 80C1B700 (stringBase0)
//	80C1B1A0: 80C1B700 (stringBase0)
//	80C1B1A8: 804061C0 (g_dComIfG_gameInfo)
//	80C1B1AC: 804061C0 (g_dComIfG_gameInfo)
//	80C1B1BC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C1B1CC: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C1B710-80C1B750 0040+00 s=1 e=0 z=0  None .data      cc_sph_src$4381                                              */
SECTION_DATA static u8 cc_sph_src[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x75, 0x05, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0A, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 80C1B750-80C1B770 0020+00 s=1 e=0 z=0  None .data      l_daOBJ_HB_Method                                            */
SECTION_DATA static void* l_daOBJ_HB_Method[8] = {
	(void*)daOBJ_HB_Create__FP10fopAc_ac_c,
	(void*)daOBJ_HB_Delete__FP12obj_hb_class,
	(void*)daOBJ_HB_Execute__FP12obj_hb_class,
	(void*)daOBJ_HB_IsDelete__FP12obj_hb_class,
	(void*)daOBJ_HB_Draw__FP12obj_hb_class,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80C1B770-80C1B7A0 0030+00 s=0 e=0 z=1  None .data      g_profile_OBJ_HB                                             */
SECTION_DATA void* g_profile_OBJ_HB[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0008FFFD,
	(void*)0x02FE0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000A8C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02C10000,
	(void*)&l_daOBJ_HB_Method,
	(void*)0x00040100,
	(void*)NULL,
};

/* 80C1B7A0-80C1B7AC 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80C1B7AC-80C1B7B8 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80C1B7B8-80C1B7DC 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C1B5F0,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C1B5E8,
};

/* 80C1B1F4-80C1B4E8 02F4+00 s=1 e=0 z=0  None .text      daOBJ_HB_Create__FP10fopAc_ac_c                              */
//	80C1B204: 803621D8 (_savegpr_28)
//	80C1B20C: 80C1B600 (lit_3665)
//	80C1B210: 80C1B600 (lit_3665)
//	80C1B22C: 80018B64 (__ct__10fopAc_ac_cFv)
//	80C1B234: 802C03C8 (__ct__10Z2CreatureFv)
//	80C1B23C: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80C1B248: 800760A0 (__ct__9dBgS_AcchFv)
//	80C1B24C: 80C1B7B8 (__vt__12dBgS_ObjAcch)
//	80C1B250: 80C1B7B8 (__vt__12dBgS_ObjAcch)
//	80C1B26C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C1B270: 803C3728 (__vt__9cCcD_Stts)
//	80C1B274: 803C3728 (__vt__9cCcD_Stts)
//	80C1B280: 80083760 (__ct__10dCcD_GSttsFv)
//	80C1B284: 803AC2E4 (__vt__9dCcD_Stts)
//	80C1B288: 803AC2E4 (__vt__9dCcD_Stts)
//	80C1B2A0: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80C1B2A4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C1B2A8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C1B2B0: 80C1B7AC (__vt__8cM3dGAab)
//	80C1B2B4: 80C1B7AC (__vt__8cM3dGAab)
//	80C1B2BC: 80C1B7A0 (__vt__8cM3dGSph)
//	80C1B2C0: 80C1B7A0 (__vt__8cM3dGSph)
//	80C1B2C8: 803C3540 (__vt__12cCcD_SphAttr)
//	80C1B2CC: 803C3540 (__vt__12cCcD_SphAttr)
//	80C1B2DC: 803ABFC0 (__vt__8dCcD_Sph)
//	80C1B2E0: 803ABFC0 (__vt__8dCcD_Sph)
//	80C1B308: 80C1B700 (stringBase0)
//	80C1B30C: 80C1B700 (stringBase0)
//	80C1B310: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80C1B32C: 80C1B188 (useHeapInit__FP10fopAc_ac_c)
//	80C1B330: 80C1B188 (useHeapInit__FP10fopAc_ac_c)
//	80C1B33C: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80C1B378: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80C1B380: 80C1B710 (cc_sph_src)
//	80C1B384: 80C1B710 (cc_sph_src)
//	80C1B388: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80C1B3BC: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80C1B3CC: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80C1B3E4: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80C1B3F4: 80267954 (cM_rndF__Ff)
//	80C1B494: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	80C1B4B0: 80267954 (cM_rndF__Ff)
//	80C1B4C8: 80C1AF80 (daOBJ_HB_Execute__FP12obj_hb_class)
//	80C1B4D4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daOBJ_HB_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/daOBJ_HB_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80C1B4E8-80C1B530 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80C1B500: 80C1B7A0 (__vt__8cM3dGSph)
//	80C1B504: 80C1B7A0 (__vt__8cM3dGSph)
//	80C1B514: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80C1B530-80C1B578 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80C1B548: 80C1B7AC (__vt__8cM3dGAab)
//	80C1B54C: 80C1B7AC (__vt__8cM3dGAab)
//	80C1B55C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80C1B578-80C1B5E8 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80C1B598: 80C1B7B8 (__vt__12dBgS_ObjAcch)
//	80C1B59C: 80C1B7B8 (__vt__12dBgS_ObjAcch)
//	80C1B5B8: 80075F94 (__dt__9dBgS_AcchFv)
//	80C1B5C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80C1B5E8-80C1B5F0 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80C1B5EC: 80C1B578 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C1B5E8() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/func_80C1B5E8.s"
}
#pragma pop


/* 80C1B5F0-80C1B5F8 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80C1B5F4: 80C1B578 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C1B5F0() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_hb/d_a_obj_hb/func_80C1B5F0.s"
}
#pragma pop


