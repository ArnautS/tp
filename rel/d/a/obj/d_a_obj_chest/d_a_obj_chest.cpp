// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_chest
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_chest/d_a_obj_chest.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct csXyz {
	/* 8026745C */ // False False
//  csXyz& False
// 	 csXyz False
void operator+=(csXyz&);
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct fopAc_ac_c {
};

struct fopAcM_gc_c {
	/* 8001DCBC */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void gndCheck(cXyz const*);
};

struct daObjChest_c {
	/* 80BC8EF8 */ // True False
void initBaseMtx();
	/* 80BC8F34 */ // True False
void setBaseMtx();
	/* 80BC9088 */ // True False
void Create();
	/* 80BC9240 */ // True False
void CreateHeap();
	/* 80BC92B0 */ // True False
void create();
	/* 80BC970C */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80BC9764 */ // True False
void action();
	/* 80BC9808 */ // True False
void actionWait();
	/* 80BC9BF0 */ // True False
void actionMove();
	/* 80BC9DFC */ // True False
//  void False
void actionEnd();
	/* 80BC9E00 */ // True False
void Draw();
	/* 80BC9EA4 */ // True False
void Delete();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80BC95D0 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
	/* 80BC93F0 */ // True False
~dCcD_Cyl();
	/* 80BC94BC */ // True False
dCcD_Cyl();
};

struct dBgW {
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80BC969C */ // True False
~dBgS_ObjAcch();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80BC962C */ // True False
~dBgS_AcchCir();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
};

struct cM3dGCyl {
	/* 80BC9540 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80BC9588 */ // True False
~cM3dGAab();
};

struct cCcD_GStts {
	/* 80BC9F64 */ // True False
~cCcD_GStts();
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  daObjChest_c* False
// 	 daObjChest_c False
static void daObjChest_Draw(daObjChest_c*);
// True False
//  daObjChest_c* False
// 	 daObjChest_c False
static void daObjChest_Execute(daObjChest_c*);
// True False
//  daObjChest_c* False
// 	 daObjChest_c False
static void daObjChest_Delete(daObjChest_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjChest_Create(fopAc_ac_c*);
// False True
//  u8* False
// 	 u8 False
void cLib_calcTimer__template0(u8*);
// False True
//  u16* False
// 	 u16 False
void cLib_calcTimer__template1(u16*);

// True False
extern "C" void initBaseMtx__12daObjChest_cFv();
// True False
extern "C" void setBaseMtx__12daObjChest_cFv();
// True False
extern "C" void Create__12daObjChest_cFv();
// True False
extern "C" void CreateHeap__12daObjChest_cFv();
// True False
extern "C" void create__12daObjChest_cFv();
// True False
extern "C" void __dt__8dCcD_CylFv();
// True False
extern "C" void __ct__8dCcD_CylFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__12daObjChest_cFPPA3_A4_f();
// True False
extern "C" void action__12daObjChest_cFv();
// True False
extern "C" void actionWait__12daObjChest_cFv();
// True False
extern "C" void actionMove__12daObjChest_cFv();
// True False
//  void False
extern "C" void actionEnd__12daObjChest_cFv();
// True False
extern "C" void Draw__12daObjChest_cFv();
// True False
extern "C" void Delete__12daObjChest_cFv();
// True False
//  daObjChest_c* False
// 	 daObjChest_c False
extern "C" static void daObjChest_Draw__FP12daObjChest_c();
// True False
//  daObjChest_c* False
// 	 daObjChest_c False
extern "C" static void daObjChest_Execute__FP12daObjChest_c();
// True False
//  daObjChest_c* False
// 	 daObjChest_c False
extern "C" static void daObjChest_Delete__FP12daObjChest_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjChest_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// False True
//  u8* False
// 	 u8 False
extern "C" void func_80BC9FAC();
// False True
//  u16* False
// 	 u16 False
extern "C" void func_80BC9FC8();
// True False
extern "C" static void func_80BC9FE4();
// True False
extern "C" static void func_80BC9FEC();
extern "C" extern u32 const lit_3730;
extern "C" extern u8 const lit_3731[4];
extern "C" extern u32 const lit_3732;
extern "C" extern u32 const lit_3733;
extern "C" extern u32 const lit_4015;
extern "C" extern u32 const lit_4016;
extern "C" extern u32 const lit_4017;
extern "C" extern u32 const lit_4018;
extern "C" extern u32 const lit_4019;
extern "C" extern u32 const lit_4020;
extern "C" extern u32 const lit_4021;
extern "C" extern u32 const lit_4022;
extern "C" extern u32 const lit_4023[1 + 1 /* padding */];
extern "C" extern u8 const lit_4024[8];
extern "C" extern u8 const lit_4025[8];
extern "C" extern u8 const lit_4026[8];
extern "C" extern u32 const lit_4027;
extern "C" extern u32 const lit_4070;
extern "C" extern u32 const lit_4071;
extern "C" extern u32 const lit_4072;
extern "C" extern u32 const lit_4073;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_3876[3];
extern "C" extern void* lit_3877[3];
extern "C" extern void* lit_3878[3];
extern "C" extern u8 data_80BCA100[36];
extern "C" extern void* g_profile_Obj_Chest[12];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12daObjChest_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
void fopAcM_create(s16, u32, cXyz const*, int, csXyz const*, cXyz const*, s8);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
extern "C" void fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  csXyz& False
// 	 csXyz False
extern "C" void __apl__5csXyzFR5csXyz();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECScale();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 data_80BCA200[4];

// 
// Declarations:
// 

/* 80BC8EF8-80BC8F34 003C+00 s=1 e=0 z=0  None .text      initBaseMtx__12daObjChest_cFv                                */
//	80BC8F20: 80BC8F34 (setBaseMtx__12daObjChest_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjChest_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/initBaseMtx__12daObjChest_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BC9FFC-80BCA040 0044+00 s=3 e=0 z=0  None .rodata    l_cyl_src                                                    */
SECTION_RODATA static u8 const l_cyl_src[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
	0x43, 0x82, 0x00, 0x00,
};

/* 80BCA040-80BCA044 0004+00 s=1 e=0 z=0  None .rodata    @3679                                                        */
SECTION_RODATA static u32 const lit_3679 = 0x3F800000;

/* 80BCA044-80BCA04C 0008+00 s=1 e=0 z=0  None .rodata    @3681                                                        */
SECTION_RODATA static u8 const lit_3681[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80BC8F34-80BC9088 0154+00 s=2 e=0 z=0  None .text      setBaseMtx__12daObjChest_cFv                                 */
//	80BC8F7C: 80BCA044 (lit_3681)
//	80BC8F80: 80BCA044 (lit_3681)
//	80BC8FBC: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BC8FC0: 803DD470 (now__14mDoMtx_stack_c)
//	80BC8FC4: 803DD470 (now__14mDoMtx_stack_c)
//	80BC8FCC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80BC8FD0: 803DD470 (now__14mDoMtx_stack_c)
//	80BC8FD4: 803DD470 (now__14mDoMtx_stack_c)
//	80BC8FF0: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80BC8FF4: 803DD470 (now__14mDoMtx_stack_c)
//	80BC8FF8: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9004: 803464B0 (PSMTXCopy)
//	80BC9034: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BC9038: 803DD470 (now__14mDoMtx_stack_c)
//	80BC903C: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9044: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80BC904C: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80BC9050: 80BCA040 (lit_3679)
//	80BC9054: 80BCA040 (lit_3679)
//	80BC9060: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80BC9064: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9068: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9070: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjChest_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/setBaseMtx__12daObjChest_cFv.s"
}
#pragma pop


/* 80BC9088-80BC9240 01B8+00 s=1 e=0 z=0  None .text      Create__12daObjChest_cFv                                     */
//	80BC9098: 803621D0 (_savegpr_26)
//	80BC90A0: 80BC9FFC (l_cyl_src)
//	80BC90A4: 80BC9FFC (l_cyl_src)
//	80BC90B0: 804061C0 (g_dComIfG_gameInfo)
//	80BC90B4: 804061C0 (g_dComIfG_gameInfo)
//	80BC90C0: 80035360 (isSwitch__10dSv_info_cCFii)
//	80BC9110: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BC9114: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9118: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9120: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80BC9124: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9128: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9130: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80BC9134: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9138: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9144: 80346D6C (PSMTXMultVec)
//	80BC914C: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80BC9158: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80BC915C: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80BC9184: 80BC8EF8 (initBaseMtx__12daObjChest_cFv)
//	80BC91A0: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80BC91CC: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80BC91E0: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80BC91FC: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80BC9220: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80BC922C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjChest_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/Create__12daObjChest_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BCA04C-80BCA050 0004+00 s=0 e=0 z=0  None .rodata    @3730                                                        */
SECTION_RODATA u32 const lit_3730 = 0x40A00000;

/* 80BCA050-80BCA054 0004+00 s=0 e=0 z=0  None .rodata    @3731                                                        */
SECTION_RODATA u8 const lit_3731[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80BCA054-80BCA058 0004+00 s=0 e=0 z=0  None .rodata    @3732                                                        */
SECTION_RODATA u32 const lit_3732 = 0x43160000;

/* 80BCA058-80BCA05C 0004+00 s=0 e=0 z=0  None .rodata    @3733                                                        */
SECTION_RODATA u32 const lit_3733 = 0x41F00000;

/* 80BCA05C-80BCA060 0004+00 s=0 e=0 z=0  None .rodata    @4015                                                        */
SECTION_RODATA u32 const lit_4015 = 0x428C0000;

/* 80BCA060-80BCA064 0004+00 s=0 e=0 z=0  None .rodata    @4016                                                        */
SECTION_RODATA u32 const lit_4016 = 0x42B40000;

/* 80BCA064-80BCA068 0004+00 s=0 e=0 z=0  None .rodata    @4017                                                        */
SECTION_RODATA u32 const lit_4017 = 0x43E10000;

/* 80BCA068-80BCA06C 0004+00 s=0 e=0 z=0  None .rodata    @4018                                                        */
SECTION_RODATA u32 const lit_4018 = 0x42C80000;

/* 80BCA06C-80BCA070 0004+00 s=0 e=0 z=0  None .rodata    @4019                                                        */
SECTION_RODATA u32 const lit_4019 = 0x3F000000;

/* 80BCA070-80BCA074 0004+00 s=0 e=0 z=0  None .rodata    @4020                                                        */
SECTION_RODATA u32 const lit_4020 = 0x3F333333;

/* 80BCA074-80BCA078 0004+00 s=0 e=0 z=0  None .rodata    @4021                                                        */
SECTION_RODATA u32 const lit_4021 = 0xBF800000;

/* 80BCA078-80BCA07C 0004+00 s=0 e=0 z=0  None .rodata    @4022                                                        */
SECTION_RODATA u32 const lit_4022 = 0x42480000;

/* 80BCA07C-80BCA084 0004+04 s=0 e=0 z=0  None .rodata    @4023                                                        */
SECTION_RODATA u32 const lit_4023[1 + 1 /* padding */] = {
	0xC2480000,
	/* padding */
	0x00000000,
};

/* 80BCA084-80BCA08C 0008+00 s=0 e=0 z=0  None .rodata    @4024                                                        */
SECTION_RODATA u8 const lit_4024[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BCA08C-80BCA094 0008+00 s=0 e=0 z=0  None .rodata    @4025                                                        */
SECTION_RODATA u8 const lit_4025[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BCA094-80BCA09C 0008+00 s=0 e=0 z=0  None .rodata    @4026                                                        */
SECTION_RODATA u8 const lit_4026[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BCA09C-80BCA0A0 0004+00 s=0 e=0 z=0  None .rodata    @4027                                                        */
SECTION_RODATA u32 const lit_4027 = 0x43820000;

/* 80BCA0A0-80BCA0A4 0004+00 s=0 e=0 z=0  None .rodata    @4070                                                        */
SECTION_RODATA u32 const lit_4070 = 0x46800000;

/* 80BCA0A4-80BCA0A8 0004+00 s=0 e=0 z=0  None .rodata    @4071                                                        */
SECTION_RODATA u32 const lit_4071 = 0xC0800000;

/* 80BCA0A8-80BCA0AC 0004+00 s=0 e=0 z=0  None .rodata    @4072                                                        */
SECTION_RODATA u32 const lit_4072 = 0x40200000;

/* 80BCA0AC-80BCA0B0 0004+00 s=0 e=0 z=0  None .rodata    @4073                                                        */
SECTION_RODATA u32 const lit_4073 = 0x3FD55555;

/* 80BCA0B0-80BCA0B8 0008+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80BCA0B0 = "H_Tansu";
#pragma pop

/* 80BCA0B8-80BCA0C4 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BCA0C4-80BCA0D8 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80BCA0D8-80BCA0DC 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80BC9240-80BC92B0 0070+00 s=1 e=0 z=0  None .text      CreateHeap__12daObjChest_cFv                                 */
//	80BC9254: 80BCA0D8 (l_arcName)
//	80BC9258: 80BCA0D8 (l_arcName)
//	80BC9264: 804061C0 (g_dComIfG_gameInfo)
//	80BC9268: 804061C0 (g_dComIfG_gameInfo)
//	80BC9278: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BC9288: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjChest_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/CreateHeap__12daObjChest_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BCA0DC-80BCA0E8 000C+00 s=0 e=0 z=0  None .data      @3876                                                        */
SECTION_DATA void* lit_3876[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionWait__12daObjChest_cFv,
};

/* 80BCA0E8-80BCA0F4 000C+00 s=0 e=0 z=0  None .data      @3877                                                        */
SECTION_DATA void* lit_3877[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionMove__12daObjChest_cFv,
};

/* 80BCA0F4-80BCA100 000C+00 s=0 e=0 z=0  None .data      @3878                                                        */
SECTION_DATA void* lit_3878[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionEnd__12daObjChest_cFv,
};

/* 80BCA100-80BCA124 0024+00 s=0 e=0 z=0  None .data      l_func$3875                                                  */
SECTION_DATA u8 data_80BCA100[36] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80BCA124-80BCA144 0020+00 s=1 e=0 z=0  None .data      l_daObjChest_Method                                          */
SECTION_DATA static void* l_daObjChest_Method[8] = {
	(void*)daObjChest_Create__FP10fopAc_ac_c,
	(void*)daObjChest_Delete__FP12daObjChest_c,
	(void*)daObjChest_Execute__FP12daObjChest_c,
	(void*)NULL,
	(void*)daObjChest_Draw__FP12daObjChest_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80BCA144-80BCA174 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Chest                                          */
SECTION_DATA void* g_profile_Obj_Chest[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00830000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000AA4,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x025B0000,
	(void*)&l_daObjChest_Method,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80BCA174-80BCA180 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80BCA180-80BCA18C 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80BCA18C-80BCA198 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80BCA198-80BCA1A4 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80BCA1A4-80BCA1B0 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80BCA1B0-80BCA1D4 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BC9FEC,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BC9FE4,
};

/* 80BCA1D4-80BCA1FC 0028+00 s=1 e=0 z=0  None .data      __vt__12daObjChest_c                                         */
SECTION_DATA void* __vt__12daObjChest_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__12daObjChest_cFv,
	(void*)Create__12daObjChest_cFv,
	(void*)Execute__12daObjChest_cFPPA3_A4_f,
	(void*)Draw__12daObjChest_cFv,
	(void*)Delete__12daObjChest_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80BC92B0-80BC93F0 0140+00 s=1 e=0 z=0  None .text      create__12daObjChest_cFv                                     */
//	80BC92C0: 803621DC (_savegpr_29)
//	80BC92E0: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80BC92E4: 80BCA1D4 (__vt__12daObjChest_c)
//	80BC92E8: 80BCA1D4 (__vt__12daObjChest_c)
//	80BC92F8: 800760A0 (__ct__9dBgS_AcchFv)
//	80BC92FC: 80BCA1B0 (__vt__12dBgS_ObjAcch)
//	80BC9300: 80BCA1B0 (__vt__12dBgS_ObjAcch)
//	80BC931C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80BC9324: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80BC9328: 803C3728 (__vt__9cCcD_Stts)
//	80BC932C: 803C3728 (__vt__9cCcD_Stts)
//	80BC9338: 80083760 (__ct__10dCcD_GSttsFv)
//	80BC933C: 803AC2E4 (__vt__9dCcD_Stts)
//	80BC9340: 803AC2E4 (__vt__9dCcD_Stts)
//	80BC9354: 80BC94BC (__ct__8dCcD_CylFv)
//	80BC9358: 80BC94BC (__ct__8dCcD_CylFv)
//	80BC935C: 80BC93F0 (__dt__8dCcD_CylFv)
//	80BC9360: 80BC93F0 (__dt__8dCcD_CylFv)
//	80BC936C: 80361D60 (__construct_array)
//	80BC9380: 80BCA0D8 (l_arcName)
//	80BC9384: 80BCA0D8 (l_arcName)
//	80BC938C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80BC93A0: 80BCA0D8 (l_arcName)
//	80BC93A4: 80BCA0D8 (l_arcName)
//	80BC93B0: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80BC93B4: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80BC93C0: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80BC93DC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjChest_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/func_80BC92B0.s"
}
#pragma pop


/* 80BC93F0-80BC94BC 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_CylFv                                            */
//	80BC9410: 803AC050 (__vt__8dCcD_Cyl)
//	80BC9414: 803AC050 (__vt__8dCcD_Cyl)
//	80BC9434: 803C35A4 (__vt__12cCcD_CylAttr)
//	80BC9438: 803C35A4 (__vt__12cCcD_CylAttr)
//	80BC9450: 80BCA1A4 (__vt__8cM3dGCyl)
//	80BC9454: 80BCA1A4 (__vt__8cM3dGCyl)
//	80BC9464: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BC9468: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BC9478: 80BCA198 (__vt__8cM3dGAab)
//	80BC947C: 80BCA198 (__vt__8cM3dGAab)
//	80BC948C: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80BC949C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::~dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/__dt__8dCcD_CylFv.s"
}
#pragma pop


/* 80BC94BC-80BC9540 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_CylFv                                            */
//	80BC94D0: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80BC94D4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BC94D8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BC94E0: 80BCA198 (__vt__8cM3dGAab)
//	80BC94E4: 80BCA198 (__vt__8cM3dGAab)
//	80BC94EC: 80BCA1A4 (__vt__8cM3dGCyl)
//	80BC94F0: 80BCA1A4 (__vt__8cM3dGCyl)
//	80BC94F8: 803C35A4 (__vt__12cCcD_CylAttr)
//	80BC94FC: 803C35A4 (__vt__12cCcD_CylAttr)
//	80BC950C: 803AC050 (__vt__8dCcD_Cyl)
//	80BC9510: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/__ct__8dCcD_CylFv.s"
}
#pragma pop


/* 80BC9540-80BC9588 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80BC9558: 80BCA1A4 (__vt__8cM3dGCyl)
//	80BC955C: 80BCA1A4 (__vt__8cM3dGCyl)
//	80BC956C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80BC9588-80BC95D0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80BC95A0: 80BCA198 (__vt__8cM3dGAab)
//	80BC95A4: 80BCA198 (__vt__8cM3dGAab)
//	80BC95B4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80BC95D0-80BC962C 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80BC95E8: 80BCA18C (__vt__10dCcD_GStts)
//	80BC95EC: 80BCA18C (__vt__10dCcD_GStts)
//	80BC95F8: 80BCA180 (__vt__10cCcD_GStts)
//	80BC95FC: 80BCA180 (__vt__10cCcD_GStts)
//	80BC9610: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80BC962C-80BC969C 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80BC964C: 80BCA174 (__vt__12dBgS_AcchCir)
//	80BC9650: 80BCA174 (__vt__12dBgS_AcchCir)
//	80BC9660: 8026EF18 (__dt__8cM3dGCirFv)
//	80BC966C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80BC967C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80BC969C-80BC970C 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80BC96BC: 80BCA1B0 (__vt__12dBgS_ObjAcch)
//	80BC96C0: 80BCA1B0 (__vt__12dBgS_ObjAcch)
//	80BC96DC: 80075F94 (__dt__9dBgS_AcchFv)
//	80BC96EC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80BC970C-80BC9764 0058+00 s=1 e=0 z=0  None .text      Execute__12daObjChest_cFPPA3_A4_f                            */
//	80BC9734: 80BC9764 (action__12daObjChest_cFv)
//	80BC9744: 80BC8F34 (setBaseMtx__12daObjChest_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjChest_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/Execute__12daObjChest_cFPPA3_A4_f.s"
}
#pragma pop


/* 80BC9764-80BC9808 00A4+00 s=1 e=0 z=0  None .text      action__12daObjChest_cFv                                     */
//	80BC9770: 80BCA0B8 (cNullVec__6Z2Calc)
//	80BC9774: 80BCA0B8 (cNullVec__6Z2Calc)
//	80BC9778: 80BCA200 (data_80BCA200)
//	80BC977C: 80BCA200 (data_80BCA200)
//	80BC97F0: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjChest_c::action() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/action__12daObjChest_cFv.s"
}
#pragma pop


/* 80BC9808-80BC9BF0 03E8+00 s=1 e=0 z=0  None .text      actionWait__12daObjChest_cFv                                 */
//	80BC9840: 803621C4 (_savegpr_23)
//	80BC9848: 80BC9FFC (l_cyl_src)
//	80BC984C: 80BC9FFC (l_cyl_src)
//	80BC9850: 804061C0 (g_dComIfG_gameInfo)
//	80BC9854: 804061C0 (g_dComIfG_gameInfo)
//	80BC986C: 80BC9FC8 (func_80BC9FC8)
//	80BC987C: 80267954 (cM_rndF__Ff)
//	80BC989C: 8026798C (cM_rndFX__Ff)
//	80BC98BC: 80267954 (cM_rndF__Ff)
//	80BC98E8: 8002D06C (dComIfGp_getReverb__Fi)
//	80BC98FC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BC9900: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BC9928: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80BC992C: 804061C0 (g_dComIfG_gameInfo)
//	80BC9930: 804061C0 (g_dComIfG_gameInfo)
//	80BC9944: 80035360 (isSwitch__10dSv_info_cCFii)
//	80BC9950: 804061C0 (g_dComIfG_gameInfo)
//	80BC9954: 804061C0 (g_dComIfG_gameInfo)
//	80BC9994: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9998: 803DD470 (now__14mDoMtx_stack_c)
//	80BC99E0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BC99EC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80BC9A04: 80346D6C (PSMTXMultVec)
//	80BC9A18: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BC9A24: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80BC9A34: 80346D6C (PSMTXMultVec)
//	80BC9A68: 8034739C (PSVECSquareDistance)
//	80BC9AD4: 80450AE0 (__float_nan)
//	80BC9AD8: 80450AE0 (__float_nan)
//	80BC9B44: 80450AE0 (__float_nan)
//	80BC9B48: 80450AE0 (__float_nan)
//	80BC9B84: 804061C0 (g_dComIfG_gameInfo)
//	80BC9B88: 804061C0 (g_dComIfG_gameInfo)
//	80BC9B9C: 80035200 (onSwitch__10dSv_info_cFii)
//	80BC9BDC: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjChest_c::actionWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/actionWait__12daObjChest_cFv.s"
}
#pragma pop


/* 80BC9BF0-80BC9DFC 020C+00 s=1 e=0 z=0  None .text      actionMove__12daObjChest_cFv                                 */
//	80BC9C08: 80BC9FFC (l_cyl_src)
//	80BC9C0C: 80BC9FFC (l_cyl_src)
//	80BC9C14: 80BC9FAC (func_80BC9FAC)
//	80BC9C34: 8026745C (__apl__5csXyzFR5csXyz)
//	80BC9CC4: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BC9CC8: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9CCC: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9CD4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80BC9CD8: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9CDC: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9CE4: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80BC9CE8: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9CEC: 803DD470 (now__14mDoMtx_stack_c)
//	80BC9CF8: 80346D6C (PSMTXMultVec)
//	80BC9D00: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80BC9D0C: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80BC9D10: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80BC9D3C: 803470D8 (PSVECScale)
//	80BC9D5C: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	80BC9D74: 804061C0 (g_dComIfG_gameInfo)
//	80BC9D78: 804061C0 (g_dComIfG_gameInfo)
//	80BC9D8C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80BC9D98: 8002D06C (dComIfGp_getReverb__Fi)
//	80BC9DAC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BC9DB0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BC9DD8: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjChest_c::actionMove() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/actionMove__12daObjChest_cFv.s"
}
#pragma pop


/* 80BC9DFC-80BC9E00 0004+00 s=1 e=0 z=0  None .text      actionEnd__12daObjChest_cFv                                  */
// True False
//  void False
void daObjChest_c::actionEnd() {
	/* empty function */
}


/* 80BC9E00-80BC9EA4 00A4+00 s=1 e=0 z=0  None .text      Draw__12daObjChest_cFv                                       */
//	80BC9E18: 8042CA54 (g_env_light)
//	80BC9E1C: 8042CA54 (g_env_light)
//	80BC9E2C: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80BC9E30: 8042CA54 (g_env_light)
//	80BC9E34: 8042CA54 (g_env_light)
//	80BC9E44: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80BC9E48: 804061C0 (g_dComIfG_gameInfo)
//	80BC9E4C: 804061C0 (g_dComIfG_gameInfo)
//	80BC9E54: 80434AC8 (j3dSys)
//	80BC9E58: 80434AC8 (j3dSys)
//	80BC9E6C: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80BC9E70: 804061C0 (g_dComIfG_gameInfo)
//	80BC9E74: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjChest_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/Draw__12daObjChest_cFv.s"
}
#pragma pop


/* 80BC9EA4-80BC9ED8 0034+00 s=1 e=0 z=0  None .text      Delete__12daObjChest_cFv                                     */
//	80BC9EB0: 80BCA0D8 (l_arcName)
//	80BC9EB4: 80BCA0D8 (l_arcName)
//	80BC9EC0: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjChest_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/Delete__12daObjChest_cFv.s"
}
#pragma pop


/* 80BC9ED8-80BC9F04 002C+00 s=1 e=0 z=0  None .text      daObjChest_Draw__FP12daObjChest_c                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjChest_c* False
// 	 daObjChest_c False
asm static void daObjChest_Draw(daObjChest_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/daObjChest_Draw__FP12daObjChest_c.s"
}
#pragma pop


/* 80BC9F04-80BC9F24 0020+00 s=1 e=0 z=0  None .text      daObjChest_Execute__FP12daObjChest_c                         */
//	80BC9F10: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjChest_c* False
// 	 daObjChest_c False
asm static void daObjChest_Execute(daObjChest_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/daObjChest_Execute__FP12daObjChest_c.s"
}
#pragma pop


/* 80BC9F24-80BC9F44 0020+00 s=1 e=0 z=0  None .text      daObjChest_Delete__FP12daObjChest_c                          */
//	80BC9F30: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjChest_c* False
// 	 daObjChest_c False
asm static void daObjChest_Delete(daObjChest_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/daObjChest_Delete__FP12daObjChest_c.s"
}
#pragma pop


/* 80BC9F44-80BC9F64 0020+00 s=1 e=0 z=0  None .text      daObjChest_Create__FP10fopAc_ac_c                            */
//	80BC9F50: 80BC92B0 (create__12daObjChest_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjChest_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/daObjChest_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80BC9F64-80BC9FAC 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80BC9F7C: 80BCA180 (__vt__10cCcD_GStts)
//	80BC9F80: 80BCA180 (__vt__10cCcD_GStts)
//	80BC9F90: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80BC9FAC-80BC9FC8 001C+00 s=1 e=0 z=0  None .text      cLib_calcTimer<Uc>__FPUc                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  u8* False
// 	 u8 False
asm void cLib_calcTimer__template0(u8* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/func_80BC9FAC.s"
}
#pragma pop


/* 80BC9FC8-80BC9FE4 001C+00 s=1 e=0 z=0  None .text      cLib_calcTimer<Us>__FPUs                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  u16* False
// 	 u16 False
asm void cLib_calcTimer__template1(u16* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/func_80BC9FC8.s"
}
#pragma pop


/* 80BC9FE4-80BC9FEC 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80BC9FE8: 80BC969C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BC9FE4() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/func_80BC9FE4.s"
}
#pragma pop


/* 80BC9FEC-80BC9FF4 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80BC9FF0: 80BC969C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BC9FEC() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_chest/d_a_obj_chest/func_80BC9FEC.s"
}
#pragma pop


