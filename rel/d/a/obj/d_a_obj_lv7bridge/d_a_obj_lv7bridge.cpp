// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_lv7bridge
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CDD4 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transM(cXyz const&);
};

struct J3DAnmTransform {
};

struct J3DModelData {
};

struct mDoExt_bckAnm {
	/* 8000D7DC */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
//  bool False
void init(J3DAnmTransform*, int, int, f32, s16, s16, bool);
	/* 8000D9CC */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
void entry(J3DModelData*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct fopAc_ac_c {
};

struct daObjLv7Brg_c {
	/* 80C863EC */ // True False
void search_swspinner();
	/* 80C86454 */ // True False
void initBaseMtx();
	/* 80C864B4 */ // True False
void setBaseMtx();
	/* 80C865B8 */ // True False
void Create();
	/* 80C867CC */ // True False
void CreateHeap();
	/* 80C86A44 */ // True False
void create1st();
	/* 80C86B40 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80C86E68 */ // True False
void action();
	/* 80C86F44 */ // True False
void mode_action();
	/* 80C87210 */ // True False
//  void False
void mode_end();
	/* 80C87214 */ // True False
void calcCoPos();
	/* 80C87304 */ // True False
void Draw();
	/* 80C87458 */ // True False
void Delete();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
	/* 8006FB10 */ // False False
//  int False
//  int False
//  cXyz False
void StartQuake(int, int, cXyz);
	/* 8006FD94 */ // False False
//  int False
void StopQuake(int);
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80C87798 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
	/* 80C875B8 */ // True False
~dCcD_Cyl();
	/* 80C87684 */ // True False
dCcD_Cyl();
};

struct dBgW_Base {
};

struct dBgW {
	/* 8007B970 */ // False False
dBgW();
	/* 8007B9C0 */ // False False
void Move();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80C87864 */ // True False
~dBgS_ObjAcch();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80C877F4 */ // True False
~dBgS_AcchCir();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
};

struct dBgS {
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 80C87708 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80C87750 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80C87940 */ // True False
~cCcD_GStts();
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgD_t {
};

struct cBgW {
	/* 80079F38 */ // False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void Set(cBgD_t*, u32, f32 (* )[3][4]);
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80C869FC */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void searchSwSpinner(void*, void*);
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
static void daObjLv7Brg_create1st(daObjLv7Brg_c*);
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
static void daObjLv7Brg_MoveBGDelete(daObjLv7Brg_c*);
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
static void daObjLv7Brg_MoveBGExecute(daObjLv7Brg_c*);
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
static void daObjLv7Brg_MoveBGDraw(daObjLv7Brg_c*);

// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void searchSwSpinner__FPvPv();
// True False
extern "C" void search_swspinner__13daObjLv7Brg_cFv();
// True False
extern "C" void initBaseMtx__13daObjLv7Brg_cFv();
// True False
extern "C" void setBaseMtx__13daObjLv7Brg_cFv();
// True False
extern "C" void Create__13daObjLv7Brg_cFv();
// True False
extern "C" void CreateHeap__13daObjLv7Brg_cFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
extern "C" void create1st__13daObjLv7Brg_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__13daObjLv7Brg_cFPPA3_A4_f();
// True False
extern "C" void action__13daObjLv7Brg_cFv();
// True False
extern "C" void mode_action__13daObjLv7Brg_cFv();
// True False
//  void False
extern "C" void mode_end__13daObjLv7Brg_cFv();
// True False
extern "C" void calcCoPos__13daObjLv7Brg_cFv();
// True False
extern "C" void Draw__13daObjLv7Brg_cFv();
// True False
extern "C" void Delete__13daObjLv7Brg_cFv();
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
extern "C" static void daObjLv7Brg_create1st__FP13daObjLv7Brg_c();
// True False
extern "C" void __dt__8dCcD_CylFv();
// True False
extern "C" void __ct__8dCcD_CylFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
extern "C" static void daObjLv7Brg_MoveBGDelete__FP13daObjLv7Brg_c();
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
extern "C" static void daObjLv7Brg_MoveBGExecute__FP13daObjLv7Brg_c();
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
extern "C" static void daObjLv7Brg_MoveBGDraw__FP13daObjLv7Brg_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" static void func_80C87988();
// True False
extern "C" static void func_80C87990();
extern "C" extern u8 const l_eff_id[18 + 2 /* padding */];
extern "C" extern u8 const data_80C879E0[8];
extern "C" extern u32 const lit_3830;
extern "C" extern u32 const lit_3935;
extern "C" extern u32 const lit_3936;
extern "C" extern u32 const lit_4027;
extern "C" extern u32 const lit_4028;
extern "C" extern u32 const lit_4029;
extern "C" extern u32 const lit_4030;
extern "C" extern u32 const lit_4031;
extern "C" extern u32 const lit_4032;
extern "C" extern u32 const lit_4067;
extern "C" extern u32 const lit_4068;
extern "C" extern u32 const lit_4069;
extern "C" extern u32 const lit_4070;
extern "C" extern u32 const lit_4071;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_3941[3];
extern "C" extern void* lit_3942[3];
extern "C" extern u8 data_80C87AB8[24];
extern "C" extern void* g_profile_Obj_Lv7Bridge[12];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__13daObjLv7Brg_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fpcEx_Search(void* (*)(void*, void*), void*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_Typical(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc(f32*, f32, f32, f32, f32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transM__14mDoMtx_stack_cFRC4cXyz();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
//  bool False
extern "C" void init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
extern "C" void entry__13mDoExt_bckAnmFP12J3DModelDataf();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fpcEx_Search__FPFPvPv_PvPv();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartQuake__12dVibration_cFii4cXyz();
// False False
//  int False
extern "C" void StopQuake__12dVibration_cFi();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_Typical__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
// False False
extern "C" void __ct__4dBgWFv();
// False False
extern "C" void Move__4dBgWFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc__FPfffff();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void __cvt_fp2unsigned();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 data_80C87BB8[4];

// 
// Declarations:
// 

/* 80C86378-80C863EC 0074+00 s=1 e=0 z=0  None .text      searchSwSpinner__FPvPv                                       */
//	80C86398: 80018CE0 (fopAc_IsActor__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void searchSwSpinner(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/searchSwSpinner__FPvPv.s"
}
#pragma pop


/* 80C863EC-80C86454 0068+00 s=1 e=0 z=0  None .text      search_swspinner__13daObjLv7Brg_cFv                          */
//	80C86414: 80C86378 (searchSwSpinner__FPvPv)
//	80C86418: 80C86378 (searchSwSpinner__FPvPv)
//	80C86420: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::search_swspinner() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/search_swspinner__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* 80C86454-80C864B4 0060+00 s=1 e=0 z=0  None .text      initBaseMtx__13daObjLv7Brg_cFv                               */
//	80C864A0: 80C864B4 (setBaseMtx__13daObjLv7Brg_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/initBaseMtx__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C879A0-80C879A8 0008+00 s=4 e=0 z=0  None .rodata    l_bmd                                                        */
SECTION_RODATA static u8 const l_bmd[8] = {
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0A,
};

/* 80C879A8-80C879B0 0008+00 s=1 e=0 z=0  None .rodata    l_dzb                                                        */
SECTION_RODATA static u8 const l_dzb[8] = {
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0D,
};

/* 80C879B0-80C879C4 0012+02 s=0 e=0 z=0  None .rodata    l_eff_id                                                     */
SECTION_RODATA u8 const l_eff_id[18 + 2 /* padding */] = {
	0x8B, 0x55, 0x8B, 0x56, 0x8B, 0x57, 0x8B, 0x58, 0x8B, 0x59, 0x8B, 0x5A, 0x8B, 0x5B, 0x8B, 0x5C,
	0x8B, 0x5D,
	/* padding */
	0x00, 0x00,
};

/* 80C879C4-80C879CC 0008+00 s=1 e=0 z=0  None .rodata    l_heap_size                                                  */
SECTION_RODATA static u8 const l_heap_size[8] = {
	0x00, 0x00, 0x60, 0x00, 0x00, 0x02, 0x00, 0x00,
};

/* 80C879CC-80C879D0 0004+00 s=3 e=0 z=0  None .rodata    @3697                                                        */
SECTION_RODATA static u8 const lit_3697[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80C864B4-80C865B8 0104+00 s=2 e=0 z=0  None .text      setBaseMtx__13daObjLv7Brg_cFv                                */
//	80C864D0: 80C879CC (lit_3697)
//	80C864D4: 80C879CC (lit_3697)
//	80C864FC: 803DD470 (now__14mDoMtx_stack_c)
//	80C86500: 803DD470 (now__14mDoMtx_stack_c)
//	80C86508: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80C8650C: 803DD470 (now__14mDoMtx_stack_c)
//	80C86510: 803DD470 (now__14mDoMtx_stack_c)
//	80C8651C: 80346D6C (PSMTXMultVec)
//	80C86524: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C8652C: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	80C86530: 803DD470 (now__14mDoMtx_stack_c)
//	80C86534: 803DD470 (now__14mDoMtx_stack_c)
//	80C8653C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C86540: 803DD470 (now__14mDoMtx_stack_c)
//	80C86544: 803DD470 (now__14mDoMtx_stack_c)
//	80C86550: 803464B0 (PSMTXCopy)
//	80C86554: 803DD470 (now__14mDoMtx_stack_c)
//	80C86558: 803DD470 (now__14mDoMtx_stack_c)
//	80C86560: 803464B0 (PSMTXCopy)
//	80C86574: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C8657C: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	80C86580: 803DD470 (now__14mDoMtx_stack_c)
//	80C86584: 803DD470 (now__14mDoMtx_stack_c)
//	80C8658C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C86590: 803DD470 (now__14mDoMtx_stack_c)
//	80C86594: 803DD470 (now__14mDoMtx_stack_c)
//	80C865A0: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/setBaseMtx__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C879D0-80C879D4 0004+00 s=1 e=0 z=0  None .rodata    @3767                                                        */
SECTION_RODATA static u32 const lit_3767 = 0x459F6000;

/* 80C879D4-80C879D8 0004+00 s=1 e=0 z=0  None .rodata    @3768                                                        */
SECTION_RODATA static u32 const lit_3768 = 0x42C80000;

/* 80C879D8-80C879E0 0008+00 s=1 e=0 z=0  None .rodata    @3770                                                        */
SECTION_RODATA static u8 const lit_3770[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80C879E0-80C879E8 0008+00 s=0 e=0 z=0  None .rodata    l_bck$3780                                                   */
SECTION_RODATA u8 const data_80C879E0[8] = {
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06,
};

/* 80C879E8-80C879EC 0004+00 s=0 e=0 z=0  None .rodata    @3830                                                        */
SECTION_RODATA u32 const lit_3830 = 0x3F800000;

/* 80C879EC-80C879F0 0004+00 s=0 e=0 z=0  None .rodata    @3935                                                        */
SECTION_RODATA u32 const lit_3935 = 0x451F6000;

/* 80C879F0-80C879F4 0004+00 s=0 e=0 z=0  None .rodata    @3936                                                        */
SECTION_RODATA u32 const lit_3936 = 0x45EF1000;

/* 80C879F4-80C879F8 0004+00 s=0 e=0 z=0  None .rodata    @4027                                                        */
SECTION_RODATA u32 const lit_4027 = 0x41F00000;

/* 80C879F8-80C879FC 0004+00 s=0 e=0 z=0  None .rodata    @4028                                                        */
SECTION_RODATA u32 const lit_4028 = 0xC2340000;

/* 80C879FC-80C87A00 0004+00 s=0 e=0 z=0  None .rodata    @4029                                                        */
SECTION_RODATA u32 const lit_4029 = 0x3CA3D70A;

/* 80C87A00-80C87A04 0004+00 s=0 e=0 z=0  None .rodata    @4030                                                        */
SECTION_RODATA u32 const lit_4030 = 0x3DCCCCCD;

/* 80C87A04-80C87A08 0004+00 s=0 e=0 z=0  None .rodata    @4031                                                        */
SECTION_RODATA u32 const lit_4031 = 0x42FE0000;

/* 80C87A08-80C87A0C 0004+00 s=0 e=0 z=0  None .rodata    @4032                                                        */
SECTION_RODATA u32 const lit_4032 = 0xBF800000;

/* 80C87A0C-80C87A10 0004+00 s=0 e=0 z=0  None .rodata    @4067                                                        */
SECTION_RODATA u32 const lit_4067 = 0x4528C000;

/* 80C87A10-80C87A14 0004+00 s=0 e=0 z=0  None .rodata    @4068                                                        */
SECTION_RODATA u32 const lit_4068 = 0xC2A00000;

/* 80C87A14-80C87A18 0004+00 s=0 e=0 z=0  None .rodata    @4069                                                        */
SECTION_RODATA u32 const lit_4069 = 0x43E10000;

/* 80C87A18-80C87A1C 0004+00 s=0 e=0 z=0  None .rodata    @4070                                                        */
SECTION_RODATA u32 const lit_4070 = 0xC3E10000;

/* 80C87A1C-80C87A20 0004+00 s=0 e=0 z=0  None .rodata    @4071                                                        */
SECTION_RODATA u32 const lit_4071 = 0xC528C000;

/* 80C87A20-80C87A34 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C87A20[20] = {
	/* 80C87A20 000A stringBase_80C87A20 @stringBase0 */
	0x4F, 0x62, 0x6A, 0x5F, 0x6C, 0x37, 0x62, 0x72, 0x67, 0x00,
	/* 80C87A2A 000A data_80C87A2A None */
	0x4B, 0x5F, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x00, 0x00,
};

/* 80C87A34-80C87A40 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C87A40-80C87A54 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80C87A54-80C87A5C 0008+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName[2] = {
	(void*)(((char*)&struct_80C87A20)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80C87A20)+0xA) /* None */,
};

/* 80C87A5C-80C87AA0 0044+00 s=1 e=0 z=0  None .data      l_cyl_src                                                    */
SECTION_DATA static u8 l_cyl_src[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
	0x43, 0x7A, 0x00, 0x00,
};

/* 80C865B8-80C867CC 0214+00 s=1 e=0 z=0  None .text      Create__13daObjLv7Brg_cFv                                    */
//	80C865C8: 803621D0 (_savegpr_26)
//	80C865EC: 804061C0 (g_dComIfG_gameInfo)
//	80C865F0: 804061C0 (g_dComIfG_gameInfo)
//	80C86604: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C8661C: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C86628: 804061C0 (g_dComIfG_gameInfo)
//	80C8662C: 804061C0 (g_dComIfG_gameInfo)
//	80C86638: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80C86648: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C86654: 804061C0 (g_dComIfG_gameInfo)
//	80C86658: 804061C0 (g_dComIfG_gameInfo)
//	80C86668: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80C8667C: 80C879D8 (lit_3770)
//	80C86680: 80C879D8 (lit_3770)
//	80C866A4: 804061C0 (g_dComIfG_gameInfo)
//	80C866A8: 804061C0 (g_dComIfG_gameInfo)
//	80C866BC: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C866C8: 80C879D0 (lit_3767)
//	80C866CC: 80C879D0 (lit_3767)
//	80C866EC: 804061C0 (g_dComIfG_gameInfo)
//	80C866F0: 804061C0 (g_dComIfG_gameInfo)
//	80C86704: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C86710: 80C879D0 (lit_3767)
//	80C86714: 80C879D0 (lit_3767)
//	80C86724: 80C879D4 (lit_3768)
//	80C86728: 80C879D4 (lit_3768)
//	80C86734: 80C86454 (initBaseMtx__13daObjLv7Brg_cFv)
//	80C86750: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80C86764: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80C86770: 80C87A5C (l_cyl_src)
//	80C86774: 80C87A5C (l_cyl_src)
//	80C86788: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80C867A4: 80C87214 (calcCoPos__13daObjLv7Brg_cFv)
//	80C867AC: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
//	80C867B8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/Create__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C87AA0-80C87AAC 000C+00 s=0 e=0 z=0  None .data      @3941                                                        */
SECTION_DATA void* lit_3941[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)mode_action__13daObjLv7Brg_cFv,
};

/* 80C87AAC-80C87AB8 000C+00 s=0 e=0 z=0  None .data      @3942                                                        */
SECTION_DATA void* lit_3942[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)mode_end__13daObjLv7Brg_cFv,
};

/* 80C87AB8-80C87AD0 0018+00 s=0 e=0 z=0  None .data      mode_proc$3940                                               */
SECTION_DATA u8 data_80C87AB8[24] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C87AD0-80C87AF0 0020+00 s=1 e=0 z=0  None .data      daObjLv7Brg_METHODS                                          */
SECTION_DATA static void* daObjLv7Brg_METHODS[8] = {
	(void*)daObjLv7Brg_create1st__FP13daObjLv7Brg_c,
	(void*)daObjLv7Brg_MoveBGDelete__FP13daObjLv7Brg_c,
	(void*)daObjLv7Brg_MoveBGExecute__FP13daObjLv7Brg_c,
	(void*)NULL,
	(void*)daObjLv7Brg_MoveBGDraw__FP13daObjLv7Brg_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80C87AF0-80C87B20 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Lv7Bridge                                      */
SECTION_DATA void* g_profile_Obj_Lv7Bridge[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00B50000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000AA4,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02360000,
	(void*)&daObjLv7Brg_METHODS,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80C87B20-80C87B2C 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80C87B2C-80C87B38 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80C87B38-80C87B44 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80C87B44-80C87B50 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80C87B50-80C87B5C 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80C87B5C-80C87B80 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C87990,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C87988,
};

/* 80C87B80-80C87B8C 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80C867CC-80C869FC 0230+00 s=1 e=0 z=0  None .text      CreateHeap__13daObjLv7Brg_cFv                                */
//	80C867DC: 803621C4 (_savegpr_23)
//	80C867E4: 80C879A0 (l_bmd)
//	80C867E8: 80C879A0 (l_bmd)
//	80C867F4: 80C87A54 (l_arcName)
//	80C867F8: 80C87A54 (l_arcName)
//	80C86808: 804061C0 (g_dComIfG_gameInfo)
//	80C8680C: 804061C0 (g_dComIfG_gameInfo)
//	80C86820: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C86830: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80C8685C: 80C87A54 (l_arcName)
//	80C86860: 80C87A54 (l_arcName)
//	80C86874: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C86884: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80C868A8: 80C87A54 (l_arcName)
//	80C868AC: 80C87A54 (l_arcName)
//	80C868CC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C868D8: 802CEC4C (__nw__FUl)
//	80C868E4: 80C87B80 (__vt__12J3DFrameCtrl)
//	80C868E8: 80C87B80 (__vt__12J3DFrameCtrl)
//	80C868F4: 803283FC (init__12J3DFrameCtrlFs)
//	80C86930: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	80C86958: 802CEC4C (__nw__FUl)
//	80C86964: 8007B970 (__ct__4dBgWFv)
//	80C86984: 80C87A54 (l_arcName)
//	80C86988: 80C87A54 (l_arcName)
//	80C8699C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C869B0: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
//	80C869BC: 80075A24 (dBgS_MoveBGProc_Typical__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80C869C0: 80075A24 (dBgS_MoveBGProc_Typical__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80C869E8: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/CreateHeap__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* 80C869FC-80C86A44 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80C86A14: 80C87B80 (__vt__12J3DFrameCtrl)
//	80C86A18: 80C87B80 (__vt__12J3DFrameCtrl)
//	80C86A28: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80C86A44-80C86B40 00FC+00 s=1 e=0 z=0  None .text      create1st__13daObjLv7Brg_cFv                                 */
//	80C86ABC: 80C87A54 (l_arcName)
//	80C86AC0: 80C87A54 (l_arcName)
//	80C86AC8: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80C86AE4: 80C87A54 (l_arcName)
//	80C86AE8: 80C87A54 (l_arcName)
//	80C86AF0: 80C879A8 (l_dzb)
//	80C86AF4: 80C879A8 (l_dzb)
//	80C86AFC: 80075A24 (dBgS_MoveBGProc_Typical__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80C86B00: 80075A24 (dBgS_MoveBGProc_Typical__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80C86B04: 80C879C4 (l_heap_size)
//	80C86B08: 80C879C4 (l_heap_size)
//	80C86B14: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::create1st() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/create1st__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* 80C86B40-80C86E68 0328+00 s=1 e=0 z=0  None .text      Execute__13daObjLv7Brg_cFPPA3_A4_f                           */
//	80C86B50: 803621D0 (_savegpr_26)
//	80C86B5C: 80C879A0 (l_bmd)
//	80C86B60: 80C879A0 (l_bmd)
//	80C86B64: 80C863EC (search_swspinner__13daObjLv7Brg_cFv)
//	80C86B6C: 80C86E68 (action__13daObjLv7Brg_cFv)
//	80C86B7C: 80C864B4 (setBaseMtx__13daObjLv7Brg_cFv)
//	80C86BA8: 803DD470 (now__14mDoMtx_stack_c)
//	80C86BAC: 803DD470 (now__14mDoMtx_stack_c)
//	80C86BB4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80C86BB8: 803DD470 (now__14mDoMtx_stack_c)
//	80C86BBC: 803DD470 (now__14mDoMtx_stack_c)
//	80C86BC8: 80346D6C (PSMTXMultVec)
//	80C86BD0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C86BD8: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	80C86BDC: 803DD470 (now__14mDoMtx_stack_c)
//	80C86BE0: 803DD470 (now__14mDoMtx_stack_c)
//	80C86BE8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C86BEC: 803DD470 (now__14mDoMtx_stack_c)
//	80C86BF0: 803DD470 (now__14mDoMtx_stack_c)
//	80C86C34: 803DD470 (now__14mDoMtx_stack_c)
//	80C86C38: 803DD470 (now__14mDoMtx_stack_c)
//	80C86C40: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80C86C44: 803DD470 (now__14mDoMtx_stack_c)
//	80C86C48: 803DD470 (now__14mDoMtx_stack_c)
//	80C86C54: 80346D6C (PSMTXMultVec)
//	80C86C5C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C86C64: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	80C86C68: 803DD470 (now__14mDoMtx_stack_c)
//	80C86C6C: 803DD470 (now__14mDoMtx_stack_c)
//	80C86C74: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C86CAC: 8000D428 (play__14mDoExt_baseAnmFv)
//	80C86CD8: 803DD470 (now__14mDoMtx_stack_c)
//	80C86CDC: 803DD470 (now__14mDoMtx_stack_c)
//	80C86CE4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80C86CE8: 803DD470 (now__14mDoMtx_stack_c)
//	80C86CEC: 803DD470 (now__14mDoMtx_stack_c)
//	80C86CF8: 80346D6C (PSMTXMultVec)
//	80C86D00: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C86D08: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	80C86D0C: 803DD470 (now__14mDoMtx_stack_c)
//	80C86D10: 803DD470 (now__14mDoMtx_stack_c)
//	80C86D18: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C86D3C: 804061C0 (g_dComIfG_gameInfo)
//	80C86D40: 804061C0 (g_dComIfG_gameInfo)
//	80C86D88: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C86DBC: 8000D428 (play__14mDoExt_baseAnmFv)
//	80C86DCC: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C86DD8: 804061C0 (g_dComIfG_gameInfo)
//	80C86DDC: 804061C0 (g_dComIfG_gameInfo)
//	80C86DE8: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80C86DF8: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C86E04: 804061C0 (g_dComIfG_gameInfo)
//	80C86E08: 804061C0 (g_dComIfG_gameInfo)
//	80C86E18: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80C86E30: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C86E40: 8007B9C0 (Move__4dBgWFv)
//	80C86E54: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjLv7Brg_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/Execute__13daObjLv7Brg_cFPPA3_A4_f.s"
}
#pragma pop


/* 80C86E68-80C86F44 00DC+00 s=1 e=0 z=0  None .text      action__13daObjLv7Brg_cFv                                    */
//	80C86E80: 80C87A34 (cNullVec__6Z2Calc)
//	80C86E84: 80C87A34 (cNullVec__6Z2Calc)
//	80C86E88: 80C87BB8 (data_80C87BB8)
//	80C86E8C: 80C87BB8 (data_80C87BB8)
//	80C86EEC: 80362084 (__ptmf_scall)
//	80C86EF8: 80C879CC (lit_3697)
//	80C86EFC: 80C879CC (lit_3697)
//	80C86F08: 804061C0 (g_dComIfG_gameInfo)
//	80C86F0C: 804061C0 (g_dComIfG_gameInfo)
//	80C86F1C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80C86F28: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::action() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/action__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* 80C86F44-80C87210 02CC+00 s=1 e=0 z=0  None .text      mode_action__13daObjLv7Brg_cFv                               */
//	80C86F64: 803621DC (_savegpr_29)
//	80C86F6C: 80C879A0 (l_bmd)
//	80C86F70: 80C879A0 (l_bmd)
//	80C86F7C: 804061C0 (g_dComIfG_gameInfo)
//	80C86F80: 804061C0 (g_dComIfG_gameInfo)
//	80C86F94: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C86FE8: 8026F97C (cLib_addCalc__FPfffff)
//	80C8701C: 803620AC (__cvt_fp2unsigned)
//	80C8702C: 8002D06C (dComIfGp_getReverb__Fi)
//	80C87040: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C87044: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C8706C: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80C87098: 804061C0 (g_dComIfG_gameInfo)
//	80C8709C: 804061C0 (g_dComIfG_gameInfo)
//	80C870B0: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	80C870CC: 804061C0 (g_dComIfG_gameInfo)
//	80C870D0: 804061C0 (g_dComIfG_gameInfo)
//	80C870E0: 8006FD94 (StopQuake__12dVibration_cFi)
//	80C87110: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80C8712C: 804061C0 (g_dComIfG_gameInfo)
//	80C87130: 804061C0 (g_dComIfG_gameInfo)
//	80C87140: 8006FD94 (StopQuake__12dVibration_cFi)
//	80C8715C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C87160: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C8718C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80C871B4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80C871C4: 804061C0 (g_dComIfG_gameInfo)
//	80C871C8: 804061C0 (g_dComIfG_gameInfo)
//	80C871DC: 80035200 (onSwitch__10dSv_info_cFii)
//	80C871FC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::mode_action() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/mode_action__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* 80C87210-80C87214 0004+00 s=1 e=0 z=0  None .text      mode_end__13daObjLv7Brg_cFv                                  */
// True False
//  void False
void daObjLv7Brg_c::mode_end() {
	/* empty function */
}


/* 80C87214-80C87304 00F0+00 s=1 e=0 z=0  None .text      calcCoPos__13daObjLv7Brg_cFv                                 */
//	80C87224: 803621D4 (_savegpr_27)
//	80C8722C: 80C879A0 (l_bmd)
//	80C87230: 80C879A0 (l_bmd)
//	80C8728C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C87290: 803DD470 (now__14mDoMtx_stack_c)
//	80C87294: 803DD470 (now__14mDoMtx_stack_c)
//	80C8729C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C872A8: 803DD470 (now__14mDoMtx_stack_c)
//	80C872AC: 803DD470 (now__14mDoMtx_stack_c)
//	80C872C0: 80346D6C (PSMTXMultVec)
//	80C872DC: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80C872E8: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80C872F0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::calcCoPos() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/calcCoPos__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* 80C87304-80C87458 0154+00 s=1 e=0 z=0  None .text      Draw__13daObjLv7Brg_cFv                                      */
//	80C8731C: 80C879CC (lit_3697)
//	80C87320: 80C879CC (lit_3697)
//	80C87338: 8042CA54 (g_env_light)
//	80C8733C: 8042CA54 (g_env_light)
//	80C8734C: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80C87350: 8042CA54 (g_env_light)
//	80C87354: 8042CA54 (g_env_light)
//	80C87364: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C87368: 804061C0 (g_dComIfG_gameInfo)
//	80C8736C: 804061C0 (g_dComIfG_gameInfo)
//	80C87374: 80434AC8 (j3dSys)
//	80C87378: 80434AC8 (j3dSys)
//	80C8738C: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80C8739C: 8042CA54 (g_env_light)
//	80C873A0: 8042CA54 (g_env_light)
//	80C873B0: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C87400: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	80C87408: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80C87424: 804061C0 (g_dComIfG_gameInfo)
//	80C87428: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/Draw__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* 80C87458-80C874CC 0074+00 s=1 e=0 z=0  None .text      Delete__13daObjLv7Brg_cFv                                    */
//	80C87478: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C87484: 804061C0 (g_dComIfG_gameInfo)
//	80C87488: 804061C0 (g_dComIfG_gameInfo)
//	80C87494: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80C874A4: 80C87A54 (l_arcName)
//	80C874A8: 80C87A54 (l_arcName)
//	80C874B0: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjLv7Brg_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/Delete__13daObjLv7Brg_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C87B8C-80C87BB4 0028+00 s=1 e=0 z=0  None .data      __vt__13daObjLv7Brg_c                                        */
SECTION_DATA void* __vt__13daObjLv7Brg_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__13daObjLv7Brg_cFv,
	(void*)Create__13daObjLv7Brg_cFv,
	(void*)Execute__13daObjLv7Brg_cFPPA3_A4_f,
	(void*)Draw__13daObjLv7Brg_cFv,
	(void*)Delete__13daObjLv7Brg_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80C874CC-80C875B8 00EC+00 s=1 e=0 z=0  None .text      daObjLv7Brg_create1st__FP13daObjLv7Brg_c                     */
//	80C874DC: 803621DC (_savegpr_29)
//	80C874FC: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80C87500: 80C87B8C (__vt__13daObjLv7Brg_c)
//	80C87504: 80C87B8C (__vt__13daObjLv7Brg_c)
//	80C87514: 800760A0 (__ct__9dBgS_AcchFv)
//	80C87518: 80C87B5C (__vt__12dBgS_ObjAcch)
//	80C8751C: 80C87B5C (__vt__12dBgS_ObjAcch)
//	80C87538: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C87540: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80C87544: 803C3728 (__vt__9cCcD_Stts)
//	80C87548: 803C3728 (__vt__9cCcD_Stts)
//	80C87554: 80083760 (__ct__10dCcD_GSttsFv)
//	80C87558: 803AC2E4 (__vt__9dCcD_Stts)
//	80C8755C: 803AC2E4 (__vt__9dCcD_Stts)
//	80C87570: 80C87684 (__ct__8dCcD_CylFv)
//	80C87574: 80C87684 (__ct__8dCcD_CylFv)
//	80C87578: 80C875B8 (__dt__8dCcD_CylFv)
//	80C8757C: 80C875B8 (__dt__8dCcD_CylFv)
//	80C87588: 80361D60 (__construct_array)
//	80C8759C: 80C86A44 (create1st__13daObjLv7Brg_cFv)
//	80C875A4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
asm static void daObjLv7Brg_create1st(daObjLv7Brg_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/daObjLv7Brg_create1st__FP13daObjLv7Brg_c.s"
}
#pragma pop


/* 80C875B8-80C87684 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_CylFv                                            */
//	80C875D8: 803AC050 (__vt__8dCcD_Cyl)
//	80C875DC: 803AC050 (__vt__8dCcD_Cyl)
//	80C875FC: 803C35A4 (__vt__12cCcD_CylAttr)
//	80C87600: 803C35A4 (__vt__12cCcD_CylAttr)
//	80C87618: 80C87B50 (__vt__8cM3dGCyl)
//	80C8761C: 80C87B50 (__vt__8cM3dGCyl)
//	80C8762C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C87630: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C87640: 80C87B44 (__vt__8cM3dGAab)
//	80C87644: 80C87B44 (__vt__8cM3dGAab)
//	80C87654: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80C87664: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::~dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/__dt__8dCcD_CylFv.s"
}
#pragma pop


/* 80C87684-80C87708 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_CylFv                                            */
//	80C87698: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80C8769C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C876A0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C876A8: 80C87B44 (__vt__8cM3dGAab)
//	80C876AC: 80C87B44 (__vt__8cM3dGAab)
//	80C876B4: 80C87B50 (__vt__8cM3dGCyl)
//	80C876B8: 80C87B50 (__vt__8cM3dGCyl)
//	80C876C0: 803C35A4 (__vt__12cCcD_CylAttr)
//	80C876C4: 803C35A4 (__vt__12cCcD_CylAttr)
//	80C876D4: 803AC050 (__vt__8dCcD_Cyl)
//	80C876D8: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/__ct__8dCcD_CylFv.s"
}
#pragma pop


/* 80C87708-80C87750 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80C87720: 80C87B50 (__vt__8cM3dGCyl)
//	80C87724: 80C87B50 (__vt__8cM3dGCyl)
//	80C87734: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80C87750-80C87798 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80C87768: 80C87B44 (__vt__8cM3dGAab)
//	80C8776C: 80C87B44 (__vt__8cM3dGAab)
//	80C8777C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80C87798-80C877F4 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80C877B0: 80C87B38 (__vt__10dCcD_GStts)
//	80C877B4: 80C87B38 (__vt__10dCcD_GStts)
//	80C877C0: 80C87B2C (__vt__10cCcD_GStts)
//	80C877C4: 80C87B2C (__vt__10cCcD_GStts)
//	80C877D8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80C877F4-80C87864 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80C87814: 80C87B20 (__vt__12dBgS_AcchCir)
//	80C87818: 80C87B20 (__vt__12dBgS_AcchCir)
//	80C87828: 8026EF18 (__dt__8cM3dGCirFv)
//	80C87834: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80C87844: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80C87864-80C878D4 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80C87884: 80C87B5C (__vt__12dBgS_ObjAcch)
//	80C87888: 80C87B5C (__vt__12dBgS_ObjAcch)
//	80C878A4: 80075F94 (__dt__9dBgS_AcchFv)
//	80C878B4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80C878D4-80C878F4 0020+00 s=1 e=0 z=0  None .text      daObjLv7Brg_MoveBGDelete__FP13daObjLv7Brg_c                  */
//	80C878E0: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
asm static void daObjLv7Brg_MoveBGDelete(daObjLv7Brg_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/daObjLv7Brg_MoveBGDelete__FP13daObjLv7Brg_c.s"
}
#pragma pop


/* 80C878F4-80C87914 0020+00 s=1 e=0 z=0  None .text      daObjLv7Brg_MoveBGExecute__FP13daObjLv7Brg_c                 */
//	80C87900: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
asm static void daObjLv7Brg_MoveBGExecute(daObjLv7Brg_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/daObjLv7Brg_MoveBGExecute__FP13daObjLv7Brg_c.s"
}
#pragma pop


/* 80C87914-80C87940 002C+00 s=1 e=0 z=0  None .text      daObjLv7Brg_MoveBGDraw__FP13daObjLv7Brg_c                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjLv7Brg_c* False
// 	 daObjLv7Brg_c False
asm static void daObjLv7Brg_MoveBGDraw(daObjLv7Brg_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/daObjLv7Brg_MoveBGDraw__FP13daObjLv7Brg_c.s"
}
#pragma pop


/* 80C87940-80C87988 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80C87958: 80C87B2C (__vt__10cCcD_GStts)
//	80C8795C: 80C87B2C (__vt__10cCcD_GStts)
//	80C8796C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80C87988-80C87990 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80C8798C: 80C87864 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C87988() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/func_80C87988.s"
}
#pragma pop


/* 80C87990-80C87998 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80C87994: 80C87864 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C87990() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv7bridge/d_a_obj_lv7bridge/func_80C87990.s"
}
#pragma pop


