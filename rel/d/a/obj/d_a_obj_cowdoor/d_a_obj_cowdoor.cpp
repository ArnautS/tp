// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_cowdoor
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct fopAc_ac_c {
};

struct daCowdoor_c {
	/* 80BCC7F8 */ // True False
void setBaseMtx();
	/* 80BCC86C */ // True False
void Create();
	/* 80BCC8C4 */ // True False
void CreateHeap();
	/* 80BCC93C */ // True False
void create();
	/* 80BCCA1C */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80BCCA48 */ // True False
void Draw();
	/* 80BCCAEC */ // True False
void Delete();
};

struct cXyz {
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C37C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, char const*, dRes_info_c*, int);
	/* 8003C6B8 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
void getObjectResName2Index(char const*, char const*);
};

struct dBgW {
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  daCowdoor_c* False
// 	 daCowdoor_c False
static void daCowdoor_Draw(daCowdoor_c*);
// True False
//  daCowdoor_c* False
// 	 daCowdoor_c False
static void daCowdoor_Execute(daCowdoor_c*);
// True False
//  daCowdoor_c* False
// 	 daCowdoor_c False
static void daCowdoor_Delete(daCowdoor_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daCowdoor_Create(fopAc_ac_c*);

// True False
extern "C" void setBaseMtx__11daCowdoor_cFv();
// True False
extern "C" void Create__11daCowdoor_cFv();
// True False
extern "C" void CreateHeap__11daCowdoor_cFv();
// True False
extern "C" void create__11daCowdoor_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__11daCowdoor_cFPPA3_A4_f();
// True False
extern "C" void Draw__11daCowdoor_cFv();
// True False
extern "C" void Delete__11daCowdoor_cFv();
// True False
//  daCowdoor_c* False
// 	 daCowdoor_c False
extern "C" static void daCowdoor_Draw__FP11daCowdoor_c();
// True False
//  daCowdoor_c* False
// 	 daCowdoor_c False
extern "C" static void daCowdoor_Execute__FP11daCowdoor_c();
// True False
//  daCowdoor_c* False
// 	 daCowdoor_c False
extern "C" static void daCowdoor_Delete__FP11daCowdoor_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daCowdoor_Create__FP10fopAc_ac_c();
extern "C" extern void* g_profile_Obj_Cowdoor[12];
extern "C" extern void* __vt__11daCowdoor_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getObjectResName2Index__14dRes_control_cFPCcPCc();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];

// 
// Declarations:
// 

/* 80BCC7F8-80BCC86C 0074+00 s=2 e=0 z=0  None .text      setBaseMtx__11daCowdoor_cFv                                  */
//	80BCC80C: 803DD470 (now__14mDoMtx_stack_c)
//	80BCC810: 803DD470 (now__14mDoMtx_stack_c)
//	80BCC820: 803468E8 (PSMTXTrans)
//	80BCC824: 803DD470 (now__14mDoMtx_stack_c)
//	80BCC828: 803DD470 (now__14mDoMtx_stack_c)
//	80BCC830: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80BCC834: 803DD470 (now__14mDoMtx_stack_c)
//	80BCC838: 803DD470 (now__14mDoMtx_stack_c)
//	80BCC844: 803464B0 (PSMTXCopy)
//	80BCC848: 803DD470 (now__14mDoMtx_stack_c)
//	80BCC84C: 803DD470 (now__14mDoMtx_stack_c)
//	80BCC854: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCowdoor_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/setBaseMtx__11daCowdoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BCCBB4-80BCCBB8 0004+00 s=1 e=0 z=0  None .rodata    @3648                                                        */
SECTION_RODATA static u32 const lit_3648 = 0x40A00000;

/* 80BCC86C-80BCC8C4 0058+00 s=1 e=0 z=0  None .text      Create__11daCowdoor_cFv                                      */
//	80BCC880: 80BCC7F8 (setBaseMtx__11daCowdoor_cFv)
//	80BCC89C: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80BCC8A0: 80BCCBB4 (lit_3648)
//	80BCC8A4: 80BCCBB4 (lit_3648)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCowdoor_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/Create__11daCowdoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BCCBB8-80BCCBDC 0024+00 s=3 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80BCCBB8[36] = {
	/* 80BCCBB8 0009 stringBase_80BCCBB8 @stringBase0 */
	0x41, 0x5F, 0x55, 0x48, 0x44, 0x6F, 0x6F, 0x72, 0x00,
	/* 80BCCBC1 000D data_80BCCBC1 None */
	0x41, 0x5F, 0x55, 0x48, 0x44, 0x6F, 0x6F, 0x72, 0x2E, 0x62, 0x6D, 0x64, 0x00,
	/* 80BCCBCE 000E data_80BCCBCE None */
	0x41, 0x5F, 0x55, 0x48, 0x44, 0x6F, 0x6F, 0x72, 0x2E, 0x64, 0x7A, 0x62, 0x00, 0x00,
};

/* 80BCCBDC-80BCCBE0 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)(((char*)&struct_80BCCBB8)+0x0) /* @stringBase0 */;

/* 80BCCBE0-80BCCBE4 0004+00 s=1 e=0 z=0  None .data      l_bmdName                                                    */
SECTION_DATA static void* l_bmdName = (void*)(((char*)&struct_80BCCBB8)+0x9) /* None */;

/* 80BCC8C4-80BCC93C 0078+00 s=1 e=0 z=0  None .text      CreateHeap__11daCowdoor_cFv                                  */
//	80BCC8D8: 80BCCBDC (l_arcName)
//	80BCC8DC: 80BCCBDC (l_arcName)
//	80BCC8E4: 80BCCBE0 (l_bmdName)
//	80BCC8E8: 80BCCBE0 (l_bmdName)
//	80BCC8F0: 804061C0 (g_dComIfG_gameInfo)
//	80BCC8F4: 804061C0 (g_dComIfG_gameInfo)
//	80BCC904: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80BCC914: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCowdoor_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/CreateHeap__11daCowdoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BCCBE4-80BCCBE8 0004+00 s=1 e=0 z=0  None .data      l_dzbName                                                    */
SECTION_DATA static void* l_dzbName = (void*)(((char*)&struct_80BCCBB8)+0x16) /* None */;

/* 80BCCBE8-80BCCC08 0020+00 s=1 e=0 z=0  None .data      l_daCowdoor_Method                                           */
SECTION_DATA static void* l_daCowdoor_Method[8] = {
	(void*)daCowdoor_Create__FP10fopAc_ac_c,
	(void*)daCowdoor_Delete__FP11daCowdoor_c,
	(void*)daCowdoor_Execute__FP11daCowdoor_c,
	(void*)NULL,
	(void*)daCowdoor_Draw__FP11daCowdoor_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80BCCC08-80BCCC38 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Cowdoor                                        */
SECTION_DATA void* g_profile_Obj_Cowdoor[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x005D0000,
	(void*)&g_fpcLf_Method,
	(void*)0x000005AC,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01BF0000,
	(void*)&l_daCowdoor_Method,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80BCCC38-80BCCC60 0028+00 s=1 e=0 z=0  None .data      __vt__11daCowdoor_c                                          */
SECTION_DATA void* __vt__11daCowdoor_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__11daCowdoor_cFv,
	(void*)Create__11daCowdoor_cFv,
	(void*)Execute__11daCowdoor_cFPPA3_A4_f,
	(void*)Draw__11daCowdoor_cFv,
	(void*)Delete__11daCowdoor_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80BCC93C-80BCCA1C 00E0+00 s=1 e=0 z=0  None .text      create__11daCowdoor_cFv                                      */
//	80BCC964: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80BCC968: 80BCCC38 (__vt__11daCowdoor_c)
//	80BCC96C: 80BCCC38 (__vt__11daCowdoor_c)
//	80BCC984: 80BCCBDC (l_arcName)
//	80BCC988: 80BCCBDC (l_arcName)
//	80BCC990: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80BCC9A0: 804061C0 (g_dComIfG_gameInfo)
//	80BCC9A4: 804061C0 (g_dComIfG_gameInfo)
//	80BCC9AC: 80BCCBDC (l_arcName)
//	80BCC9B0: 80BCCBDC (l_arcName)
//	80BCC9B8: 80BCCBE4 (l_dzbName)
//	80BCC9BC: 80BCCBE4 (l_dzbName)
//	80BCC9C8: 8003C6B8 (getObjectResName2Index__14dRes_control_cFPCcPCc)
//	80BCC9D4: 80BCCBDC (l_arcName)
//	80BCC9D8: 80BCCBDC (l_arcName)
//	80BCC9E0: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80BCC9E4: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80BCC9F0: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCowdoor_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/func_80BCC93C.s"
}
#pragma pop


/* 80BCCA1C-80BCCA48 002C+00 s=1 e=0 z=0  None .text      Execute__11daCowdoor_cFPPA3_A4_f                             */
//	80BCCA30: 80BCC7F8 (setBaseMtx__11daCowdoor_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daCowdoor_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/Execute__11daCowdoor_cFPPA3_A4_f.s"
}
#pragma pop


/* 80BCCA48-80BCCAEC 00A4+00 s=1 e=0 z=0  None .text      Draw__11daCowdoor_cFv                                        */
//	80BCCA60: 8042CA54 (g_env_light)
//	80BCCA64: 8042CA54 (g_env_light)
//	80BCCA74: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80BCCA78: 8042CA54 (g_env_light)
//	80BCCA7C: 8042CA54 (g_env_light)
//	80BCCA8C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80BCCA90: 804061C0 (g_dComIfG_gameInfo)
//	80BCCA94: 804061C0 (g_dComIfG_gameInfo)
//	80BCCA9C: 80434AC8 (j3dSys)
//	80BCCAA0: 80434AC8 (j3dSys)
//	80BCCAB4: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80BCCAB8: 804061C0 (g_dComIfG_gameInfo)
//	80BCCABC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCowdoor_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/Draw__11daCowdoor_cFv.s"
}
#pragma pop


/* 80BCCAEC-80BCCB20 0034+00 s=1 e=0 z=0  None .text      Delete__11daCowdoor_cFv                                      */
//	80BCCAF8: 80BCCBDC (l_arcName)
//	80BCCAFC: 80BCCBDC (l_arcName)
//	80BCCB08: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCowdoor_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/Delete__11daCowdoor_cFv.s"
}
#pragma pop


/* 80BCCB20-80BCCB4C 002C+00 s=1 e=0 z=0  None .text      daCowdoor_Draw__FP11daCowdoor_c                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daCowdoor_c* False
// 	 daCowdoor_c False
asm static void daCowdoor_Draw(daCowdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/daCowdoor_Draw__FP11daCowdoor_c.s"
}
#pragma pop


/* 80BCCB4C-80BCCB6C 0020+00 s=1 e=0 z=0  None .text      daCowdoor_Execute__FP11daCowdoor_c                           */
//	80BCCB58: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daCowdoor_c* False
// 	 daCowdoor_c False
asm static void daCowdoor_Execute(daCowdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/daCowdoor_Execute__FP11daCowdoor_c.s"
}
#pragma pop


/* 80BCCB6C-80BCCB8C 0020+00 s=1 e=0 z=0  None .text      daCowdoor_Delete__FP11daCowdoor_c                            */
//	80BCCB78: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daCowdoor_c* False
// 	 daCowdoor_c False
asm static void daCowdoor_Delete(daCowdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/daCowdoor_Delete__FP11daCowdoor_c.s"
}
#pragma pop


/* 80BCCB8C-80BCCBAC 0020+00 s=1 e=0 z=0  None .text      daCowdoor_Create__FP10fopAc_ac_c                             */
//	80BCCB98: 80BCC93C (create__11daCowdoor_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daCowdoor_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/daCowdoor_Create__FP10fopAc_ac_c.s"
}
#pragma pop


