// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_tgake
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
};

struct fopAc_ac_c {
};

struct daObjGake_c {
	/* 80D0BC18 */ // True False
void initBaseMtx();
	/* 80D0BC54 */ // True False
void setBaseMtx();
	/* 80D0BCB8 */ // True False
void Create();
	/* 80D0BD30 */ // True False
void CreateHeap();
	/* 80D0BDA0 */ // True False
void create1st();
	/* 80D0BE24 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80D0BF7C */ // True False
void Draw();
	/* 80D0C034 */ // True False
void Delete();
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dBgW_Base {
};

struct dBgW {
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS {
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  daObjGake_c* False
// 	 daObjGake_c False
static void daObjGake_create1st(daObjGake_c*);
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
static void daObjGake_MoveBGDelete(daObjGake_c*);
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
static void daObjGake_MoveBGExecute(daObjGake_c*);
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
static void daObjGake_MoveBGDraw(daObjGake_c*);

// True False
extern "C" void initBaseMtx__11daObjGake_cFv();
// True False
extern "C" void setBaseMtx__11daObjGake_cFv();
// True False
extern "C" void Create__11daObjGake_cFv();
// True False
extern "C" void CreateHeap__11daObjGake_cFv();
// True False
extern "C" void create1st__11daObjGake_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__11daObjGake_cFPPA3_A4_f();
// True False
extern "C" void Draw__11daObjGake_cFv();
// True False
extern "C" void Delete__11daObjGake_cFv();
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
extern "C" static void daObjGake_create1st__FP11daObjGake_c();
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
extern "C" static void daObjGake_MoveBGDelete__FP11daObjGake_c();
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
extern "C" static void daObjGake_MoveBGExecute__FP11daObjGake_c();
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
extern "C" static void daObjGake_MoveBGDraw__FP11daObjGake_c();
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_Gake[12];
extern "C" extern void* __vt__11daObjGake_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
extern "C" void PSMTXCopy();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];

// 
// Declarations:
// 

/* 80D0BC18-80D0BC54 003C+00 s=1 e=0 z=0  None .text      initBaseMtx__11daObjGake_cFv                                 */
//	80D0BC40: 80D0BC54 (setBaseMtx__11daObjGake_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGake_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/initBaseMtx__11daObjGake_cFv.s"
}
#pragma pop


/* 80D0BC54-80D0BCB8 0064+00 s=1 e=0 z=0  None .text      setBaseMtx__11daObjGake_cFv                                  */
//	80D0BC6C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80D0BC70: 803DD470 (now__14mDoMtx_stack_c)
//	80D0BC74: 803DD470 (now__14mDoMtx_stack_c)
//	80D0BC7C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80D0BC80: 803DD470 (now__14mDoMtx_stack_c)
//	80D0BC84: 803DD470 (now__14mDoMtx_stack_c)
//	80D0BC90: 803464B0 (PSMTXCopy)
//	80D0BC94: 803DD470 (now__14mDoMtx_stack_c)
//	80D0BC98: 803DD470 (now__14mDoMtx_stack_c)
//	80D0BCA0: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGake_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/setBaseMtx__11daObjGake_cFv.s"
}
#pragma pop


/* 80D0BCB8-80D0BD30 0078+00 s=1 e=0 z=0  None .text      Create__11daObjGake_cFv                                      */
//	80D0BCF0: 80D0BC18 (initBaseMtx__11daObjGake_cFv)
//	80D0BD0C: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80D0BD14: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGake_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/Create__11daObjGake_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D0C13C-80D0C144 0008+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80D0C13C = "A_TGake";
#pragma pop

/* 80D0C144-80D0C148 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80D0BD30-80D0BDA0 0070+00 s=1 e=0 z=0  None .text      CreateHeap__11daObjGake_cFv                                  */
//	80D0BD44: 80D0C144 (l_arcName)
//	80D0BD48: 80D0C144 (l_arcName)
//	80D0BD54: 804061C0 (g_dComIfG_gameInfo)
//	80D0BD58: 804061C0 (g_dComIfG_gameInfo)
//	80D0BD68: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D0BD78: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGake_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/CreateHeap__11daObjGake_cFv.s"
}
#pragma pop


/* 80D0BDA0-80D0BE24 0084+00 s=1 e=0 z=0  None .text      create1st__11daObjGake_cFv                                   */
//	80D0BDB8: 80D0C144 (l_arcName)
//	80D0BDBC: 80D0C144 (l_arcName)
//	80D0BDC4: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80D0BDD8: 80D0C144 (l_arcName)
//	80D0BDDC: 80D0C144 (l_arcName)
//	80D0BDE8: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80D0BDEC: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80D0BDF8: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGake_c::create1st() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/create1st__11daObjGake_cFv.s"
}
#pragma pop


/* 80D0BE24-80D0BF7C 0158+00 s=1 e=0 z=0  None .text      Execute__11daObjGake_cFPPA3_A4_f                             */
//	80D0BE4C: 804061C0 (g_dComIfG_gameInfo)
//	80D0BE50: 804061C0 (g_dComIfG_gameInfo)
//	80D0BE5C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D0BE60: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D0BE68: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D0BE80: 804061C0 (g_dComIfG_gameInfo)
//	80D0BE84: 804061C0 (g_dComIfG_gameInfo)
//	80D0BE90: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D0BE94: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D0BE9C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D0BEB4: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80D0BEC0: 804061C0 (g_dComIfG_gameInfo)
//	80D0BEC4: 804061C0 (g_dComIfG_gameInfo)
//	80D0BED0: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80D0BEF0: 804061C0 (g_dComIfG_gameInfo)
//	80D0BEF4: 804061C0 (g_dComIfG_gameInfo)
//	80D0BF00: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D0BF04: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D0BF0C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D0BF24: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80D0BF30: 804061C0 (g_dComIfG_gameInfo)
//	80D0BF34: 804061C0 (g_dComIfG_gameInfo)
//	80D0BF44: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjGake_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/Execute__11daObjGake_cFPPA3_A4_f.s"
}
#pragma pop


/* 80D0BF7C-80D0C034 00B8+00 s=1 e=0 z=0  None .text      Draw__11daObjGake_cFv                                        */
//	80D0BFA8: 8042CA54 (g_env_light)
//	80D0BFAC: 8042CA54 (g_env_light)
//	80D0BFBC: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80D0BFC0: 8042CA54 (g_env_light)
//	80D0BFC4: 8042CA54 (g_env_light)
//	80D0BFD4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80D0BFD8: 804061C0 (g_dComIfG_gameInfo)
//	80D0BFDC: 804061C0 (g_dComIfG_gameInfo)
//	80D0BFE4: 80434AC8 (j3dSys)
//	80D0BFE8: 80434AC8 (j3dSys)
//	80D0BFFC: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80D0C000: 804061C0 (g_dComIfG_gameInfo)
//	80D0C004: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGake_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/Draw__11daObjGake_cFv.s"
}
#pragma pop


/* 80D0C034-80D0C068 0034+00 s=1 e=0 z=0  None .text      Delete__11daObjGake_cFv                                      */
//	80D0C040: 80D0C144 (l_arcName)
//	80D0C044: 80D0C144 (l_arcName)
//	80D0C050: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGake_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/Delete__11daObjGake_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D0C148-80D0C168 0020+00 s=1 e=0 z=0  None .data      daObjGake_METHODS                                            */
SECTION_DATA static void* daObjGake_METHODS[8] = {
	(void*)daObjGake_create1st__FP11daObjGake_c,
	(void*)daObjGake_MoveBGDelete__FP11daObjGake_c,
	(void*)daObjGake_MoveBGExecute__FP11daObjGake_c,
	(void*)NULL,
	(void*)daObjGake_MoveBGDraw__FP11daObjGake_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80D0C168-80D0C198 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Gake                                           */
SECTION_DATA void* g_profile_Obj_Gake[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00BA0000,
	(void*)&g_fpcLf_Method,
	(void*)0x000005B4,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02380000,
	(void*)&daObjGake_METHODS,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80D0C198-80D0C1C0 0028+00 s=1 e=0 z=0  None .data      __vt__11daObjGake_c                                          */
SECTION_DATA void* __vt__11daObjGake_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__11daObjGake_cFv,
	(void*)Create__11daObjGake_cFv,
	(void*)Execute__11daObjGake_cFPPA3_A4_f,
	(void*)Draw__11daObjGake_cFv,
	(void*)Delete__11daObjGake_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80D0C068-80D0C0C8 0060+00 s=1 e=0 z=0  None .text      daObjGake_create1st__FP11daObjGake_c                         */
//	80D0C090: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80D0C094: 80D0C198 (__vt__11daObjGake_c)
//	80D0C098: 80D0C198 (__vt__11daObjGake_c)
//	80D0C0B0: 80D0BDA0 (create1st__11daObjGake_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
asm static void daObjGake_create1st(daObjGake_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/daObjGake_create1st__FP11daObjGake_c.s"
}
#pragma pop


/* 80D0C0C8-80D0C0E8 0020+00 s=1 e=0 z=0  None .text      daObjGake_MoveBGDelete__FP11daObjGake_c                      */
//	80D0C0D4: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
asm static void daObjGake_MoveBGDelete(daObjGake_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/daObjGake_MoveBGDelete__FP11daObjGake_c.s"
}
#pragma pop


/* 80D0C0E8-80D0C108 0020+00 s=1 e=0 z=0  None .text      daObjGake_MoveBGExecute__FP11daObjGake_c                     */
//	80D0C0F4: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
asm static void daObjGake_MoveBGExecute(daObjGake_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/daObjGake_MoveBGExecute__FP11daObjGake_c.s"
}
#pragma pop


/* 80D0C108-80D0C134 002C+00 s=1 e=0 z=0  None .text      daObjGake_MoveBGDraw__FP11daObjGake_c                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjGake_c* False
// 	 daObjGake_c False
asm static void daObjGake_MoveBGDraw(daObjGake_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_tgake/d_a_obj_tgake/daObjGake_MoveBGDraw__FP11daObjGake_c.s"
}
#pragma pop


