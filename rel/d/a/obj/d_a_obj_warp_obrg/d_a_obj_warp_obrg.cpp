// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_warp_obrg
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct J3DAnmTextureSRTKey {
};

struct J3DMaterialTable {
};

struct mDoExt_btkAnm {
	/* 8000D63C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTransform {
};

struct J3DModelData {
};

struct mDoExt_bckAnm {
	/* 8000D7DC */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
//  bool False
void init(J3DAnmTransform*, int, int, f32, s16, s16, bool);
	/* 8000D9CC */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
void entry(J3DModelData*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct fopAc_ac_c {
};

struct daObjWarpOBrg_c {
	/* 80D299B8 */ // True False
void initBaseMtx();
	/* 80D29A00 */ // True False
void setBaseMtx();
	/* 80D29ACC */ // True False
void Create();
	/* 80D29BB4 */ // True False
void CreateHeap();
	/* 80D29E7C */ // True False
void create1st();
	/* 80D2A008 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80D2A04C */ // True False
void event_proc_call();
	/* 80D2A194 */ // True False
void actionWait();
	/* 80D2A4CC */ // True False
void actionOrderEvent();
	/* 80D2A740 */ // True False
void actionTalkEvent();
	/* 80D2A7C4 */ // True False
void actionWarpEvent();
	/* 80D2A93C */ // True False
void actionOrderEventDst();
	/* 80D2A9E4 */ // True False
void actionWarpEventDst();
	/* 80D2AA30 */ // True False
//  void False
void actionDead();
	/* 80D2AA34 */ // True False
void demoProc();
	/* 80D2B3BC */ // True False
void checkTalkDistance();
	/* 80D2B534 */ // True False
void calcMidnaWaitPos();
	/* 80D2B5C8 */ // True False
void Draw();
	/* 80D2B6C0 */ // True False
void Delete();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dSv_event_c {
	/* 8003498C */ // False False
//  u16 False
void onEventBit(u16);
	/* 800349A4 */ // False False
//  u16 False
void offEventBit(u16);
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F90 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void init(fopAc_ac_c*, int, int, fopAc_ac_c**);
	/* 8024A2D8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void doFlow(fopAc_ac_c*, fopAc_ac_c**, int);
	/* 8024A528 */ // False False
//  int* False
// 	 int False
void getEventId(int*);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 80042914 */ // False False
//  void* False
// 	 void False
//  int (*)(void*, int) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 int False
//  int False
void setSkipProc(void*, int (*)(void*, int), int);
	/* 8004365C */ // False False
//  void* False
// 	 void False
void setPt2(void*);
};

struct dEvent_manager_c {
	/* 80047758 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
void getEventIdx(fopAc_ac_c*, char const*, u8);
	/* 800479F8 */ // False False
//  s16 False
void startCheck(s16);
	/* 80047A78 */ // False False
//  s16 False
void endCheck(s16);
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 800480EC */ // False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getMySubstanceP(int, char const*, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800483E8 */ // False False
void getRunEventName();
};

struct dBgW_Base {
};

struct dBgW {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dAttHint_c {
	/* 800738FC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void request(fopAc_ac_c*, int);
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct JGeometry {
	template <typename A1>
	struct TVec3 { };
	/* TVec3<f32> */
	struct TVec3__template0 {
	};

};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
	/* 80D29E34 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
static void daObjWarpOBrg_create1st(daObjWarpOBrg_c*);
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
static void daObjWarpOBrg_MoveBGDelete(daObjWarpOBrg_c*);
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
static void daObjWarpOBrg_MoveBGExecute(daObjWarpOBrg_c*);
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
static void daObjWarpOBrg_MoveBGDraw(daObjWarpOBrg_c*);
// False True
//  u8* False
// 	 u8 False
void cLib_calcTimer__template0(u8*);

// True False
extern "C" void initBaseMtx__15daObjWarpOBrg_cFv();
// True False
extern "C" void setBaseMtx__15daObjWarpOBrg_cFv();
// True False
extern "C" void Create__15daObjWarpOBrg_cFv();
// True False
extern "C" void CreateHeap__15daObjWarpOBrg_cFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
extern "C" void create1st__15daObjWarpOBrg_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__15daObjWarpOBrg_cFPPA3_A4_f();
// True False
extern "C" void event_proc_call__15daObjWarpOBrg_cFv();
// True False
extern "C" void actionWait__15daObjWarpOBrg_cFv();
// True False
extern "C" void actionOrderEvent__15daObjWarpOBrg_cFv();
// True False
extern "C" void actionTalkEvent__15daObjWarpOBrg_cFv();
// True False
extern "C" void actionWarpEvent__15daObjWarpOBrg_cFv();
// True False
extern "C" void actionOrderEventDst__15daObjWarpOBrg_cFv();
// True False
extern "C" void actionWarpEventDst__15daObjWarpOBrg_cFv();
// True False
//  void False
extern "C" void actionDead__15daObjWarpOBrg_cFv();
// True False
extern "C" void demoProc__15daObjWarpOBrg_cFv();
// True False
extern "C" void checkTalkDistance__15daObjWarpOBrg_cFv();
// True False
extern "C" void calcMidnaWaitPos__15daObjWarpOBrg_cFv();
// True False
extern "C" void Draw__15daObjWarpOBrg_cFv();
// True False
extern "C" void Delete__15daObjWarpOBrg_cFv();
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
extern "C" static void daObjWarpOBrg_create1st__FP15daObjWarpOBrg_c();
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
extern "C" static void daObjWarpOBrg_MoveBGDelete__FP15daObjWarpOBrg_c();
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
extern "C" static void daObjWarpOBrg_MoveBGExecute__FP15daObjWarpOBrg_c();
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
extern "C" static void daObjWarpOBrg_MoveBGDraw__FP15daObjWarpOBrg_c();
// False True
//  u8* False
// 	 u8 False
extern "C" void func_80D2B7D4();
extern "C" extern u8 const l_dzb_idx[8];
extern "C" extern u8 const l_btk_idx[8];
extern "C" extern u8 const l_beam_eff[10 + 2 /* padding */];
extern "C" extern u8 const l_disapp_eff[10 + 2 /* padding */];
extern "C" extern u8 const l_app_eff[6 + 2 /* padding */];
extern "C" extern u8 const lit_3834[4];
extern "C" extern u8 const lit_3836[8];
extern "C" extern u32 const lit_3882;
extern "C" extern u32 const lit_3883;
extern "C" extern u8 const lit_3885[8];
extern "C" extern u8 const lit_3999[8];
extern "C" extern u8 const lit_4000[8];
extern "C" extern u8 const lit_4001[8];
extern "C" extern u32 const lit_4002;
extern "C" extern u32 const lit_4003;
extern "C" extern u32 const lit_4004;
extern "C" extern u32 const lit_4599;
extern "C" extern u32 const lit_4600;
extern "C" extern u32 const lit_4601;
extern "C" extern u32 const lit_4602;
extern "C" extern u32 const lit_4603;
extern "C" extern u32 const lit_4604;
extern "C" extern u32 const lit_4605;
extern "C" extern u32 const lit_4606;
extern "C" extern u32 const lit_4607;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_3894[3];
extern "C" extern void* lit_3895[3];
extern "C" extern void* lit_3896[3];
extern "C" extern void* lit_3897[3];
extern "C" extern void* lit_3898[3];
extern "C" extern void* lit_3899[3];
extern "C" extern void* lit_3900[3];
extern "C" extern u8 data_80D2B99C[84];
extern "C" extern void* g_profile_Obj_OrdinBrg[12];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__15daObjWarpOBrg_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u8 False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderOtherEventId(fopAc_ac_c*, s16, u8, u16, u16, u16);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  u8 False
void dComIfGp_TargetWarpPt_set(u8);
// False False
void dComIfGp_TransportWarp_check();
// False False
//  void* False
// 	 void False
//  int False
void dEv_noFinishSkipProc(void*, int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_targetAngleX(cXyz const*, cXyz const*);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
//  bool False
extern "C" void init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
extern "C" void entry__13mDoExt_bckAnmFP12J3DModelDataf();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u8 False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  u8 False
extern "C" void dComIfGp_TargetWarpPt_set__FUc();
// False False
extern "C" void dComIfGp_TransportWarp_check__Fv();
// False False
//  u16 False
extern "C" void onEventBit__11dSv_event_cFUs();
// False False
//  u16 False
extern "C" void offEventBit__11dSv_event_cFUs();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  void* False
// 	 void False
//  int False
extern "C" void dEv_noFinishSkipProc__FPvi();
// False False
//  void* False
// 	 void False
//  int (*)(void*, int) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 int False
//  int False
extern "C" void setSkipProc__14dEvt_control_cFPvPFPvi_ii();
// False False
//  void* False
// 	 void False
extern "C" void setPt2__14dEvt_control_cFPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
// False False
//  s16 False
extern "C" void startCheck__16dEvent_manager_cFs();
// False False
//  s16 False
extern "C" void endCheck__16dEvent_manager_cFs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void getRunEventName__16dEvent_manager_cFv();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void request__10dAttHint_cFP10fopAc_ac_ci();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
// False False
//  int* False
// 	 int False
extern "C" void getEventId__10dMsgFlow_cFPi();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_targetAngleX__FPC4cXyzPC4cXyz();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_802807E0();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void strcmp();
extern "C" extern u8 const tempBitLabels__20dSv_event_tmp_flag_c[370 + 2 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 data_80D2BA88[4];

// 
// Declarations:
// 

/* 80D299B8-80D29A00 0048+00 s=1 e=0 z=0  None .text      initBaseMtx__15daObjWarpOBrg_cFv                             */
//	80D299EC: 80D29A00 (setBaseMtx__15daObjWarpOBrg_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/initBaseMtx__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D2B7F8-80D2B800 0008+00 s=6 e=0 z=0  None .rodata    l_bmd_idx                                                    */
SECTION_RODATA static u8 const l_bmd_idx[8] = {
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0B,
};

/* 80D2B800-80D2B808 0008+00 s=0 e=0 z=0  None .rodata    l_dzb_idx                                                    */
SECTION_RODATA u8 const l_dzb_idx[8] = {
	0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x13,
};

/* 80D2B808-80D2B810 0008+00 s=1 e=0 z=0  None .rodata    l_bck_idx                                                    */
SECTION_RODATA static u8 const l_bck_idx[8] = {
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07,
};

/* 80D2B810-80D2B818 0008+00 s=0 e=0 z=0  None .rodata    l_btk_idx                                                    */
SECTION_RODATA u8 const l_btk_idx[8] = {
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0F,
};

/* 80D2B818-80D2B824 000A+02 s=0 e=0 z=0  None .rodata    l_beam_eff                                                   */
SECTION_RODATA u8 const l_beam_eff[10 + 2 /* padding */] = {
	0x8B, 0x4B, 0x8B, 0x4C, 0x8B, 0x4D, 0x8B, 0x4E, 0x8B, 0x53,
	/* padding */
	0x00, 0x00,
};

/* 80D2B824-80D2B830 000A+02 s=0 e=0 z=0  None .rodata    l_disapp_eff                                                 */
SECTION_RODATA u8 const l_disapp_eff[10 + 2 /* padding */] = {
	0x8B, 0x38, 0x8B, 0x39, 0x8B, 0x3A, 0x8B, 0x3B, 0x8B, 0x35,
	/* padding */
	0x00, 0x00,
};

/* 80D2B830-80D2B838 0006+02 s=0 e=0 z=0  None .rodata    l_app_eff                                                    */
SECTION_RODATA u8 const l_app_eff[6 + 2 /* padding */] = {
	0x8B, 0x34, 0x8B, 0x36, 0x8B, 0x37,
	/* padding */
	0x00, 0x00,
};

/* 80D2B838-80D2B844 000C+00 s=1 e=0 z=0  None .rodata    l_midna_wait_offset                                          */
SECTION_RODATA static u8 const l_midna_wait_offset[12] = {
	0x42, 0xC8, 0x00, 0x00, 0xC4, 0x9E, 0x20, 0x00, 0xC4, 0x3E, 0x00, 0x00,
};

/* 80D2B844-80D2B848 0004+00 s=0 e=0 z=0  None .rodata    @3834                                                        */
SECTION_RODATA u8 const lit_3834[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80D2B848-80D2B850 0008+00 s=0 e=0 z=0  None .rodata    @3836                                                        */
SECTION_RODATA u8 const lit_3836[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80D2B850-80D2B854 0004+00 s=0 e=0 z=0  None .rodata    @3882                                                        */
SECTION_RODATA u32 const lit_3882 = 0x41200000;

/* 80D2B854-80D2B858 0004+00 s=0 e=0 z=0  None .rodata    @3883                                                        */
SECTION_RODATA u32 const lit_3883 = 0x44098000;

/* 80D2B858-80D2B860 0008+00 s=0 e=0 z=0  None .rodata    @3885                                                        */
SECTION_RODATA u8 const lit_3885[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D2B860-80D2B868 0008+00 s=0 e=0 z=0  None .rodata    @3999                                                        */
SECTION_RODATA u8 const lit_3999[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D2B868-80D2B870 0008+00 s=0 e=0 z=0  None .rodata    @4000                                                        */
SECTION_RODATA u8 const lit_4000[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D2B870-80D2B878 0008+00 s=0 e=0 z=0  None .rodata    @4001                                                        */
SECTION_RODATA u8 const lit_4001[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D2B878-80D2B87C 0004+00 s=0 e=0 z=0  None .rodata    @4002                                                        */
SECTION_RODATA u32 const lit_4002 = 0x40A00000;

/* 80D2B87C-80D2B880 0004+00 s=0 e=0 z=0  None .rodata    @4003                                                        */
SECTION_RODATA u32 const lit_4003 = 0x3F800000;

/* 80D2B880-80D2B884 0004+00 s=0 e=0 z=0  None .rodata    @4004                                                        */
SECTION_RODATA u32 const lit_4004 = 0xBF800000;

/* 80D2B884-80D2B888 0004+00 s=0 e=0 z=0  None .rodata    @4599                                                        */
SECTION_RODATA u32 const lit_4599 = 0xC1200000;

/* 80D2B888-80D2B88C 0004+00 s=0 e=0 z=0  None .rodata    @4600                                                        */
SECTION_RODATA u32 const lit_4600 = 0xC2820000;

/* 80D2B88C-80D2B890 0004+00 s=0 e=0 z=0  None .rodata    @4601                                                        */
SECTION_RODATA u32 const lit_4601 = 0x425C0000;

/* 80D2B890-80D2B894 0004+00 s=0 e=0 z=0  None .rodata    @4602                                                        */
SECTION_RODATA u32 const lit_4602 = 0xC3FA0000;

/* 80D2B894-80D2B898 0004+00 s=0 e=0 z=0  None .rodata    @4603                                                        */
SECTION_RODATA u32 const lit_4603 = 0x3C23D70A;

/* 80D2B898-80D2B89C 0004+00 s=0 e=0 z=0  None .rodata    @4604                                                        */
SECTION_RODATA u32 const lit_4604 = 0x42200000;

/* 80D2B89C-80D2B8A0 0004+00 s=0 e=0 z=0  None .rodata    @4605                                                        */
SECTION_RODATA u32 const lit_4605 = 0x43B78000;

/* 80D2B8A0-80D2B8A4 0004+00 s=0 e=0 z=0  None .rodata    @4606                                                        */
SECTION_RODATA u32 const lit_4606 = 0x42F00000;

/* 80D2B8A4-80D2B8A8 0004+00 s=0 e=0 z=0  None .rodata    @4607                                                        */
SECTION_RODATA u32 const lit_4607 = 0x43770000;

/* 80D2B8A8-80D2B8AC 0004+00 s=1 e=0 z=0  None .rodata    @4666                                                        */
SECTION_RODATA static u32 const lit_4666 = 0x437A0000;

/* 80D2B8AC-80D2B914 0068+00 s=6 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80D2B8AC[104] = {
	/* 80D2B8AC 0009 stringBase_80D2B8AC @stringBase0 */
	0x4F, 0x62, 0x6A, 0x5F, 0x6F, 0x62, 0x72, 0x67, 0x00,
	/* 80D2B8B5 0014 data_80D2B8B5 None */
	0x50, 0x4F, 0x52, 0x54, 0x41, 0x4C, 0x5F, 0x57, 0x41, 0x52, 0x50, 0x5F, 0x4F, 0x42, 0x52, 0x49,
	0x44, 0x47, 0x45, 0x00,
	/* 80D2B8C9 0018 data_80D2B8C9 None */
	0x50, 0x4F, 0x52, 0x54, 0x41, 0x4C, 0x5F, 0x57, 0x41, 0x52, 0x50, 0x5F, 0x4F, 0x55, 0x54, 0x5F,
	0x4F, 0x42, 0x52, 0x49, 0x44, 0x47, 0x45, 0x00,
	/* 80D2B8E1 0008 data_80D2B8E1 None */
	0x57, 0x61, 0x72, 0x70, 0x4F, 0x42, 0x31, 0x00,
	/* 80D2B8E9 0008 data_80D2B8E9 None */
	0x57, 0x61, 0x72, 0x70, 0x4F, 0x42, 0x32, 0x00,
	/* 80D2B8F1 0005 data_80D2B8F1 None */
	0x57, 0x41, 0x49, 0x54, 0x00,
	/* 80D2B8F6 000B data_80D2B8F6 None */
	0x4F, 0x42, 0x4A, 0x5F, 0x44, 0x49, 0x53, 0x41, 0x50, 0x50, 0x00,
	/* 80D2B901 0008 data_80D2B901 None */
	0x4F, 0x42, 0x4A, 0x5F, 0x41, 0x50, 0x50, 0x00,
	/* 80D2B909 000B data_80D2B909 None */
	0x42, 0x45, 0x41, 0x4D, 0x00, 0x54, 0x69, 0x6D, 0x65, 0x72, 0x00,
};

/* 80D2B914-80D2B920 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D2B920-80D2B934 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80D2B934-80D2B938 0004+00 s=6 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)(((char*)&struct_80D2B8AC)+0x0) /* @stringBase0 */;

/* 80D29A00-80D29ACC 00CC+00 s=1 e=0 z=0  None .text      setBaseMtx__15daObjWarpOBrg_cFv                              */
//	80D29A18: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80D29A20: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80D29A24: 803DD470 (now__14mDoMtx_stack_c)
//	80D29A28: 803DD470 (now__14mDoMtx_stack_c)
//	80D29A34: 803464B0 (PSMTXCopy)
//	80D29A44: 80D2B934 (l_arcName)
//	80D29A48: 80D2B934 (l_arcName)
//	80D29A54: 80D2B808 (l_bck_idx)
//	80D29A58: 80D2B808 (l_bck_idx)
//	80D29A60: 804061C0 (g_dComIfG_gameInfo)
//	80D29A64: 804061C0 (g_dComIfG_gameInfo)
//	80D29A74: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D29A90: 803DD470 (now__14mDoMtx_stack_c)
//	80D29A94: 803DD470 (now__14mDoMtx_stack_c)
//	80D29AA4: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80D29AA8: 803DD470 (now__14mDoMtx_stack_c)
//	80D29AAC: 803DD470 (now__14mDoMtx_stack_c)
//	80D29AB4: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/setBaseMtx__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D2B938-80D2B940 0008+00 s=1 e=0 z=0  None .data      l_portal_warp_name                                           */
SECTION_DATA static void* l_portal_warp_name[2] = {
	(void*)(((char*)&struct_80D2B8AC)+0x9) /* None */,
	(void*)(((char*)&struct_80D2B8AC)+0x1D) /* None */,
};

/* 80D29ACC-80D29BB4 00E8+00 s=1 e=0 z=0  None .text      Create__15daObjWarpOBrg_cFv                                  */
//	80D29AE0: 80D299B8 (initBaseMtx__15daObjWarpOBrg_cFv)
//	80D29AF0: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80D29B00: 80D2B934 (l_arcName)
//	80D29B04: 80D2B934 (l_arcName)
//	80D29B0C: 804061C0 (g_dComIfG_gameInfo)
//	80D29B10: 804061C0 (g_dComIfG_gameInfo)
//	80D29B24: 80D2B938 (l_portal_warp_name)
//	80D29B28: 80D2B938 (l_portal_warp_name)
//	80D29B34: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	80D29B40: 80D2B534 (calcMidnaWaitPos__15daObjWarpOBrg_cFv)
//	80D29B5C: 804061C0 (g_dComIfG_gameInfo)
//	80D29B60: 804061C0 (g_dComIfG_gameInfo)
//	80D29B74: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D29B98: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/Create__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D2B940-80D2B948 0008+00 s=3 e=0 z=0  None .data      l_staff_name                                                 */
SECTION_DATA static void* l_staff_name[2] = {
	(void*)(((char*)&struct_80D2B8AC)+0x35) /* None */,
	(void*)(((char*)&struct_80D2B8AC)+0x3D) /* None */,
};

/* 80D2B948-80D2B954 000C+00 s=0 e=0 z=0  None .data      @3894                                                        */
SECTION_DATA void* lit_3894[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionWait__15daObjWarpOBrg_cFv,
};

/* 80D2B954-80D2B960 000C+00 s=0 e=0 z=0  None .data      @3895                                                        */
SECTION_DATA void* lit_3895[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOrderEvent__15daObjWarpOBrg_cFv,
};

/* 80D2B960-80D2B96C 000C+00 s=0 e=0 z=0  None .data      @3896                                                        */
SECTION_DATA void* lit_3896[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionTalkEvent__15daObjWarpOBrg_cFv,
};

/* 80D2B96C-80D2B978 000C+00 s=0 e=0 z=0  None .data      @3897                                                        */
SECTION_DATA void* lit_3897[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionWarpEvent__15daObjWarpOBrg_cFv,
};

/* 80D2B978-80D2B984 000C+00 s=0 e=0 z=0  None .data      @3898                                                        */
SECTION_DATA void* lit_3898[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionDead__15daObjWarpOBrg_cFv,
};

/* 80D2B984-80D2B990 000C+00 s=0 e=0 z=0  None .data      @3899                                                        */
SECTION_DATA void* lit_3899[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOrderEventDst__15daObjWarpOBrg_cFv,
};

/* 80D2B990-80D2B99C 000C+00 s=0 e=0 z=0  None .data      @3900                                                        */
SECTION_DATA void* lit_3900[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionWarpEventDst__15daObjWarpOBrg_cFv,
};

/* 80D2B99C-80D2B9F0 0054+00 s=0 e=0 z=0  None .data      l_func$3893                                                  */
SECTION_DATA u8 data_80D2B99C[84] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80D2B9F0-80D2BA00 0010+00 s=1 e=0 z=0  None .data      action_table$4165                                            */
SECTION_DATA static void* action_table[4] = {
	(void*)(((char*)&struct_80D2B8AC)+0x45) /* None */,
	(void*)(((char*)&struct_80D2B8AC)+0x4A) /* None */,
	(void*)(((char*)&struct_80D2B8AC)+0x55) /* None */,
	(void*)(((char*)&struct_80D2B8AC)+0x5D) /* None */,
};

/* 80D2BA00-80D2BA20 0020+00 s=1 e=0 z=0  None .data      daObjWarpOBrg_METHODS                                        */
SECTION_DATA static void* daObjWarpOBrg_METHODS[8] = {
	(void*)daObjWarpOBrg_create1st__FP15daObjWarpOBrg_c,
	(void*)daObjWarpOBrg_MoveBGDelete__FP15daObjWarpOBrg_c,
	(void*)daObjWarpOBrg_MoveBGExecute__FP15daObjWarpOBrg_c,
	(void*)NULL,
	(void*)daObjWarpOBrg_MoveBGDraw__FP15daObjWarpOBrg_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80D2BA20-80D2BA50 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_OrdinBrg                                       */
SECTION_DATA void* g_profile_Obj_OrdinBrg[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00DB0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000640,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02130000,
	(void*)&daObjWarpOBrg_METHODS,
	(void*)0x00040000,
	(void*)0x030E0000,
};

/* 80D2BA50-80D2BA5C 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80D29BB4-80D29E34 0280+00 s=1 e=0 z=0  None .text      CreateHeap__15daObjWarpOBrg_cFv                              */
//	80D29BC4: 803621D0 (_savegpr_26)
//	80D29BCC: 80D2B7F8 (l_bmd_idx)
//	80D29BD0: 80D2B7F8 (l_bmd_idx)
//	80D29BD4: 80D2B934 (l_arcName)
//	80D29BD8: 80D2B934 (l_arcName)
//	80D29BF0: 804061C0 (g_dComIfG_gameInfo)
//	80D29BF4: 804061C0 (g_dComIfG_gameInfo)
//	80D29C08: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D29C1C: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80D29C38: 80D2B934 (l_arcName)
//	80D29C3C: 80D2B934 (l_arcName)
//	80D29C5C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D29C68: 802CEC4C (__nw__FUl)
//	80D29C74: 80D2BA50 (__vt__12J3DFrameCtrl)
//	80D29C78: 80D2BA50 (__vt__12J3DFrameCtrl)
//	80D29C84: 803283FC (init__12J3DFrameCtrlFs)
//	80D29CBC: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	80D29CDC: 804061C0 (g_dComIfG_gameInfo)
//	80D29CE0: 804061C0 (g_dComIfG_gameInfo)
//	80D29CF4: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D29D28: 80D2B934 (l_arcName)
//	80D29D2C: 80D2B934 (l_arcName)
//	80D29D4C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D29D58: 802CEC4C (__nw__FUl)
//	80D29D64: 80D2BA50 (__vt__12J3DFrameCtrl)
//	80D29D68: 80D2BA50 (__vt__12J3DFrameCtrl)
//	80D29D74: 803283FC (init__12J3DFrameCtrlFs)
//	80D29DAC: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80D29DCC: 804061C0 (g_dComIfG_gameInfo)
//	80D29DD0: 804061C0 (g_dComIfG_gameInfo)
//	80D29DE4: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D29E20: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/CreateHeap__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D29E34-80D29E7C 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80D29E4C: 80D2BA50 (__vt__12J3DFrameCtrl)
//	80D29E50: 80D2BA50 (__vt__12J3DFrameCtrl)
//	80D29E60: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80D29E7C-80D2A008 018C+00 s=1 e=0 z=0  None .text      create1st__15daObjWarpOBrg_cFv                               */
//	80D29E94: 80D2B7F8 (l_bmd_idx)
//	80D29E98: 80D2B7F8 (l_bmd_idx)
//	80D29EE4: 804061C0 (g_dComIfG_gameInfo)
//	80D29EE8: 804061C0 (g_dComIfG_gameInfo)
//	80D29EF0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D29EF4: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D29EFC: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D29F10: 804061C0 (g_dComIfG_gameInfo)
//	80D29F14: 804061C0 (g_dComIfG_gameInfo)
//	80D29F1C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D29F20: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D29F28: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80D29F40: 80D2B934 (l_arcName)
//	80D29F44: 80D2B934 (l_arcName)
//	80D29F4C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80D29F74: 80D2B934 (l_arcName)
//	80D29F78: 80D2B934 (l_arcName)
//	80D29F8C: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80D29F90: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80D29F98: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::create1st() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/create1st__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2A008-80D2A04C 0044+00 s=1 e=0 z=0  None .text      Execute__15daObjWarpOBrg_cFPPA3_A4_f                         */
//	80D2A024: 80D2A04C (event_proc_call__15daObjWarpOBrg_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjWarpOBrg_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/Execute__15daObjWarpOBrg_cFPPA3_A4_f.s"
}
#pragma pop


/* 80D2A04C-80D2A194 0148+00 s=1 e=0 z=0  None .text      event_proc_call__15daObjWarpOBrg_cFv                         */
//	80D2A060: 80D2B914 (cNullVec__6Z2Calc)
//	80D2A064: 80D2B914 (cNullVec__6Z2Calc)
//	80D2A068: 80D2BA88 (data_80D2BA88)
//	80D2A06C: 80D2BA88 (data_80D2BA88)
//	80D2A160: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::event_proc_call() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/event_proc_call__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2A194-80D2A4CC 0338+00 s=1 e=0 z=0  None .text      actionWait__15daObjWarpOBrg_cFv                              */
//	80D2A1A4: 803621D8 (_savegpr_28)
//	80D2A1AC: 80D2B7F8 (l_bmd_idx)
//	80D2A1B0: 80D2B7F8 (l_bmd_idx)
//	80D2A1B4: 80451018 (m_midnaActor__9daPy_py_c)
//	80D2A1B8: 80451018 (m_midnaActor__9daPy_py_c)
//	80D2A1C4: 804061C0 (g_dComIfG_gameInfo)
//	80D2A1C8: 804061C0 (g_dComIfG_gameInfo)
//	80D2A214: 8034739C (PSVECSquareDistance)
//	80D2A284: 80450AE0 (__float_nan)
//	80D2A288: 80450AE0 (__float_nan)
//	80D2A2F4: 80450AE0 (__float_nan)
//	80D2A2F8: 80450AE0 (__float_nan)
//	80D2A310: 8002FA98 (dComIfGp_TargetWarpPt_set__FUc)
//	80D2A328: 80249F90 (init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c)
//	80D2A338: 804061C0 (g_dComIfG_gameInfo)
//	80D2A33C: 804061C0 (g_dComIfG_gameInfo)
//	80D2A350: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D2A360: 80D2B3BC (checkTalkDistance__15daObjWarpOBrg_cFv)
//	80D2A378: 804061C0 (g_dComIfG_gameInfo)
//	80D2A37C: 804061C0 (g_dComIfG_gameInfo)
//	80D2A3A8: 800738FC (request__10dAttHint_cFP10fopAc_ac_ci)
//	80D2A3D4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2A3D8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2A404: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D2A41C: 800479F8 (startCheck__16dEvent_manager_cFs)
//	80D2A42C: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	80D2A430: 80D2B8AC (struct_80D2B8AC)
//	80D2A434: 80D2B8AC (struct_80D2B8AC)
//	80D2A43C: 80368994 (strcmp)
//	80D2A454: 80D2B940 (l_staff_name)
//	80D2A458: 80D2B940 (l_staff_name)
//	80D2A468: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80D2A484: 800428DC (dEv_noFinishSkipProc__FPvi)
//	80D2A488: 800428DC (dEv_noFinishSkipProc__FPvi)
//	80D2A490: 80042914 (setSkipProc__14dEvt_control_cFPvPFPvi_ii)
//	80D2A4B0: 8004365C (setPt2__14dEvt_control_cFPv)
//	80D2A4B8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::actionWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/actionWait__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2A4CC-80D2A740 0274+00 s=1 e=0 z=0  None .text      actionOrderEvent__15daObjWarpOBrg_cFv                        */
//	80D2A4DC: 803621D8 (_savegpr_28)
//	80D2A4E4: 80D2B7F8 (l_bmd_idx)
//	80D2A4E8: 80D2B7F8 (l_bmd_idx)
//	80D2A4EC: 80451018 (m_midnaActor__9daPy_py_c)
//	80D2A4F0: 80451018 (m_midnaActor__9daPy_py_c)
//	80D2A530: 8034739C (PSVECSquareDistance)
//	80D2A5A0: 80450AE0 (__float_nan)
//	80D2A5A4: 80450AE0 (__float_nan)
//	80D2A610: 80450AE0 (__float_nan)
//	80D2A614: 80450AE0 (__float_nan)
//	80D2A62C: 8002FA98 (dComIfGp_TargetWarpPt_set__FUc)
//	80D2A644: 80249F90 (init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c)
//	80D2A654: 804061C0 (g_dComIfG_gameInfo)
//	80D2A658: 804061C0 (g_dComIfG_gameInfo)
//	80D2A668: 800479F8 (startCheck__16dEvent_manager_cFs)
//	80D2A680: 80D2B940 (l_staff_name)
//	80D2A684: 80D2B940 (l_staff_name)
//	80D2A694: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80D2A6B0: 800428DC (dEv_noFinishSkipProc__FPvi)
//	80D2A6B4: 800428DC (dEv_noFinishSkipProc__FPvi)
//	80D2A6BC: 80042914 (setSkipProc__14dEvt_control_cFPvPFPvi_ii)
//	80D2A6DC: 8004365C (setPt2__14dEvt_control_cFPv)
//	80D2A6F4: 80D2B3BC (checkTalkDistance__15daObjWarpOBrg_cFv)
//	80D2A72C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::actionOrderEvent() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/actionOrderEvent__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2A740-80D2A7C4 0084+00 s=1 e=0 z=0  None .text      actionTalkEvent__15daObjWarpOBrg_cFv                         */
//	80D2A764: 8024A2D8 (doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci)
//	80D2A778: 804061C0 (g_dComIfG_gameInfo)
//	80D2A77C: 804061C0 (g_dComIfG_gameInfo)
//	80D2A784: 80042468 (reset__14dEvt_control_cFv)
//	80D2A790: 8024A528 (getEventId__10dMsgFlow_cFPi)
//	80D2A7A4: 80430188 (g_meter2_info)
//	80D2A7A8: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::actionTalkEvent() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/actionTalkEvent__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2A7C4-80D2A93C 0178+00 s=1 e=0 z=0  None .text      actionWarpEvent__15daObjWarpOBrg_cFv                         */
//	80D2A7DC: 804061C0 (g_dComIfG_gameInfo)
//	80D2A7E0: 804061C0 (g_dComIfG_gameInfo)
//	80D2A7EC: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80D2A7FC: 80D2AA34 (demoProc__15daObjWarpOBrg_cFv)
//	80D2A80C: 804061C0 (g_dComIfG_gameInfo)
//	80D2A810: 804061C0 (g_dComIfG_gameInfo)
//	80D2A81C: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A820: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A828: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80D2A830: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A834: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A83C: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80D2A844: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A848: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A850: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80D2A858: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A85C: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A864: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80D2A86C: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A870: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A878: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80D2A880: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A884: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A88C: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80D2A894: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A898: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A8A0: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80D2A8A8: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A8AC: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A8B4: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80D2A8BC: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A8C0: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A8C8: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80D2A8D0: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A8D4: 803790C0 (tempBitLabels__20dSv_event_tmp_flag_c)
//	80D2A8DC: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80D2A8E0: 804061C0 (g_dComIfG_gameInfo)
//	80D2A8E4: 804061C0 (g_dComIfG_gameInfo)
//	80D2A8FC: 8002FAE8 (dComIfGp_TransportWarp_check__Fv)
//	80D2A908: 804061C0 (g_dComIfG_gameInfo)
//	80D2A90C: 804061C0 (g_dComIfG_gameInfo)
//	80D2A914: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D2A918: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D2A920: 8003498C (onEventBit__11dSv_event_cFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::actionWarpEvent() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/actionWarpEvent__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2A93C-80D2A9E4 00A8+00 s=1 e=0 z=0  None .text      actionOrderEventDst__15daObjWarpOBrg_cFv                     */
//	80D2A95C: 804061C0 (g_dComIfG_gameInfo)
//	80D2A960: 804061C0 (g_dComIfG_gameInfo)
//	80D2A970: 80D2B940 (l_staff_name)
//	80D2A974: 80D2B940 (l_staff_name)
//	80D2A984: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80D2A98C: 804061C0 (g_dComIfG_gameInfo)
//	80D2A990: 804061C0 (g_dComIfG_gameInfo)
//	80D2A9A4: 80035200 (onSwitch__10dSv_info_cFii)
//	80D2A9CC: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::actionOrderEventDst() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/actionOrderEventDst__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2A9E4-80D2AA30 004C+00 s=1 e=0 z=0  None .text      actionWarpEventDst__15daObjWarpOBrg_cFv                      */
//	80D2A9F8: 804061C0 (g_dComIfG_gameInfo)
//	80D2A9FC: 804061C0 (g_dComIfG_gameInfo)
//	80D2AA08: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80D2AA18: 80D2AA34 (demoProc__15daObjWarpOBrg_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::actionWarpEventDst() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/actionWarpEventDst__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2AA30-80D2AA34 0004+00 s=1 e=0 z=0  None .text      actionDead__15daObjWarpOBrg_cFv                              */
// True False
//  void False
void daObjWarpOBrg_c::actionDead() {
	/* empty function */
}


/* 80D2AA34-80D2B3BC 0988+00 s=2 e=0 z=0  None .text      demoProc__15daObjWarpOBrg_cFv                                */
//	80D2AA44: 803621B4 (_savegpr_19)
//	80D2AA4C: 80D2B7F8 (l_bmd_idx)
//	80D2AA50: 80D2B7F8 (l_bmd_idx)
//	80D2AA54: 80451018 (m_midnaActor__9daPy_py_c)
//	80D2AA58: 80451018 (m_midnaActor__9daPy_py_c)
//	80D2AA5C: 804061C0 (g_dComIfG_gameInfo)
//	80D2AA60: 804061C0 (g_dComIfG_gameInfo)
//	80D2AA74: 80D2B9F0 (action_table)
//	80D2AA78: 80D2B9F0 (action_table)
//	80D2AA88: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80D2AA98: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80D2AAD4: 80D2B8AC (struct_80D2B8AC)
//	80D2AAD8: 80D2B8AC (struct_80D2B8AC)
//	80D2AAE4: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80D2AB14: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80D2AB28: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80D2AB2C: 8002FAE8 (dComIfGp_TransportWarp_check__Fv)
//	80D2AB38: 804061C0 (g_dComIfG_gameInfo)
//	80D2AB3C: 804061C0 (g_dComIfG_gameInfo)
//	80D2AB44: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D2AB48: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80D2AB50: 8003498C (onEventBit__11dSv_event_cFUs)
//	80D2AB88: 804061C0 (g_dComIfG_gameInfo)
//	80D2AB8C: 804061C0 (g_dComIfG_gameInfo)
//	80D2ABD4: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80D2AC4C: 804061C0 (g_dComIfG_gameInfo)
//	80D2AC50: 804061C0 (g_dComIfG_gameInfo)
//	80D2AC98: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80D2ACDC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2ACE0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2AD0C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D2AD28: 803DD470 (now__14mDoMtx_stack_c)
//	80D2AD2C: 803DD470 (now__14mDoMtx_stack_c)
//	80D2AD30: 804061C0 (g_dComIfG_gameInfo)
//	80D2AD34: 804061C0 (g_dComIfG_gameInfo)
//	80D2AD94: 803DD470 (now__14mDoMtx_stack_c)
//	80D2AD98: 803DD470 (now__14mDoMtx_stack_c)
//	80D2AD9C: 803464B0 (PSMTXCopy)
//	80D2ADA0: 803DD470 (now__14mDoMtx_stack_c)
//	80D2ADA4: 803DD470 (now__14mDoMtx_stack_c)
//	80D2ADB0: 80346D6C (PSMTXMultVec)
//	80D2ADC0: 803DD470 (now__14mDoMtx_stack_c)
//	80D2ADC4: 803DD470 (now__14mDoMtx_stack_c)
//	80D2ADC8: 803464B0 (PSMTXCopy)
//	80D2ADD8: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80D2ADFC: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80D2AE0C: 80270C74 (cLib_targetAngleX__FPC4cXyzPC4cXyz)
//	80D2AE60: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80D2AE88: 8034739C (PSVECSquareDistance)
//	80D2AEF8: 80450AE0 (__float_nan)
//	80D2AEFC: 80450AE0 (__float_nan)
//	80D2AF68: 80450AE0 (__float_nan)
//	80D2AF6C: 80450AE0 (__float_nan)
//	80D2AF98: 802807E0 (func_802807E0)
//	80D2AFBC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2AFC0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2AFEC: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D2B01C: 80D2B7D4 (func_80D2B7D4)
//	80D2B030: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80D2B03C: 8000D428 (play__14mDoExt_baseAnmFv)
//	80D2B048: 8000D428 (play__14mDoExt_baseAnmFv)
//	80D2B090: 802807E0 (func_802807E0)
//	80D2B0AC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80D2B0C4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2B0C8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2B0F4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D2B104: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80D2B11C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2B120: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2B14C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D2B1B0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80D2B1BC: 80D2B7D4 (func_80D2B7D4)
//	80D2B1CC: 8000D428 (play__14mDoExt_baseAnmFv)
//	80D2B1D8: 8000D428 (play__14mDoExt_baseAnmFv)
//	80D2B1E0: 80D2B934 (l_arcName)
//	80D2B1E4: 80D2B934 (l_arcName)
//	80D2B1FC: 804061C0 (g_dComIfG_gameInfo)
//	80D2B200: 804061C0 (g_dComIfG_gameInfo)
//	80D2B210: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D2B264: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80D2B27C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2B280: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D2B2AC: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D2B2BC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80D2B2EC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80D2B31C: 802807E0 (func_802807E0)
//	80D2B390: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80D2B3A0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80D2B3A8: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::demoProc() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/demoProc__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2B3BC-80D2B534 0178+00 s=2 e=0 z=0  None .text      checkTalkDistance__15daObjWarpOBrg_cFv                       */
//	80D2B3D4: 80D2B7F8 (l_bmd_idx)
//	80D2B3D8: 80D2B7F8 (l_bmd_idx)
//	80D2B3DC: 804061C0 (g_dComIfG_gameInfo)
//	80D2B3E0: 804061C0 (g_dComIfG_gameInfo)
//	80D2B41C: 8034739C (PSVECSquareDistance)
//	80D2B48C: 80450AE0 (__float_nan)
//	80D2B490: 80450AE0 (__float_nan)
//	80D2B4FC: 80450AE0 (__float_nan)
//	80D2B500: 80450AE0 (__float_nan)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::checkTalkDistance() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/checkTalkDistance__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2B534-80D2B5C8 0094+00 s=1 e=0 z=0  None .text      calcMidnaWaitPos__15daObjWarpOBrg_cFv                        */
//	80D2B548: 80D2B838 (l_midna_wait_offset)
//	80D2B54C: 80D2B838 (l_midna_wait_offset)
//	80D2B568: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80D2B570: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80D2B574: 803DD470 (now__14mDoMtx_stack_c)
//	80D2B578: 803DD470 (now__14mDoMtx_stack_c)
//	80D2B584: 80346D6C (PSMTXMultVec)
//	80D2B5A4: 80D2B8A8 (lit_4666)
//	80D2B5A8: 80D2B8A8 (lit_4666)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::calcMidnaWaitPos() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/calcMidnaWaitPos__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2B5C8-80D2B6C0 00F8+00 s=1 e=0 z=0  None .text      Draw__15daObjWarpOBrg_cFv                                    */
//	80D2B5EC: 8042CA54 (g_env_light)
//	80D2B5F0: 8042CA54 (g_env_light)
//	80D2B600: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80D2B608: 8042CA54 (g_env_light)
//	80D2B60C: 8042CA54 (g_env_light)
//	80D2B61C: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80D2B620: 8042CA54 (g_env_light)
//	80D2B624: 8042CA54 (g_env_light)
//	80D2B634: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80D2B638: 804061C0 (g_dComIfG_gameInfo)
//	80D2B63C: 804061C0 (g_dComIfG_gameInfo)
//	80D2B644: 80434AC8 (j3dSys)
//	80D2B648: 80434AC8 (j3dSys)
//	80D2B668: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	80D2B680: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80D2B688: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80D2B68C: 804061C0 (g_dComIfG_gameInfo)
//	80D2B690: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/Draw__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* 80D2B6C0-80D2B6F4 0034+00 s=1 e=0 z=0  None .text      Delete__15daObjWarpOBrg_cFv                                  */
//	80D2B6CC: 80D2B934 (l_arcName)
//	80D2B6D0: 80D2B934 (l_arcName)
//	80D2B6DC: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjWarpOBrg_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/Delete__15daObjWarpOBrg_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D2BA5C-80D2BA84 0028+00 s=1 e=0 z=0  None .data      __vt__15daObjWarpOBrg_c                                      */
SECTION_DATA void* __vt__15daObjWarpOBrg_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__15daObjWarpOBrg_cFv,
	(void*)Create__15daObjWarpOBrg_cFv,
	(void*)Execute__15daObjWarpOBrg_cFPPA3_A4_f,
	(void*)Draw__15daObjWarpOBrg_cFv,
	(void*)Delete__15daObjWarpOBrg_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80D2B6F4-80D2B768 0074+00 s=1 e=0 z=0  None .text      daObjWarpOBrg_create1st__FP15daObjWarpOBrg_c                 */
//	80D2B724: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80D2B728: 80D2BA5C (__vt__15daObjWarpOBrg_c)
//	80D2B72C: 80D2BA5C (__vt__15daObjWarpOBrg_c)
//	80D2B738: 80249F00 (__ct__10dMsgFlow_cFv)
//	80D2B74C: 80D29E7C (create1st__15daObjWarpOBrg_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
asm static void daObjWarpOBrg_create1st(daObjWarpOBrg_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/daObjWarpOBrg_create1st__FP15daObjWarpOBrg_c.s"
}
#pragma pop


/* 80D2B768-80D2B788 0020+00 s=1 e=0 z=0  None .text      daObjWarpOBrg_MoveBGDelete__FP15daObjWarpOBrg_c              */
//	80D2B774: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
asm static void daObjWarpOBrg_MoveBGDelete(daObjWarpOBrg_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/daObjWarpOBrg_MoveBGDelete__FP15daObjWarpOBrg_c.s"
}
#pragma pop


/* 80D2B788-80D2B7A8 0020+00 s=1 e=0 z=0  None .text      daObjWarpOBrg_MoveBGExecute__FP15daObjWarpOBrg_c             */
//	80D2B794: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
asm static void daObjWarpOBrg_MoveBGExecute(daObjWarpOBrg_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/daObjWarpOBrg_MoveBGExecute__FP15daObjWarpOBrg_c.s"
}
#pragma pop


/* 80D2B7A8-80D2B7D4 002C+00 s=1 e=0 z=0  None .text      daObjWarpOBrg_MoveBGDraw__FP15daObjWarpOBrg_c                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjWarpOBrg_c* False
// 	 daObjWarpOBrg_c False
asm static void daObjWarpOBrg_MoveBGDraw(daObjWarpOBrg_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/daObjWarpOBrg_MoveBGDraw__FP15daObjWarpOBrg_c.s"
}
#pragma pop


/* 80D2B7D4-80D2B7F0 001C+00 s=1 e=0 z=0  None .text      cLib_calcTimer<Uc>__FPUc                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  u8* False
// 	 u8 False
asm void cLib_calcTimer__template0(u8* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_warp_obrg/d_a_obj_warp_obrg/func_80D2B7D4.s"
}
#pragma pop


