// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_shield
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_shield/d_a_obj_shield.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct cXyz {
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
};

struct fopAcM_gc_c {
	/* 8001DCBC */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void gndCheck(cXyz const*);
};

struct daPy_py_c {
	/* 8015F4F0 */ // False False
//  cXyz* False
// 	 cXyz False
void setLookPos(cXyz*);
};

struct daItemShield_c {
	/* 80CD6D9C */ // True False
void initBaseMtx();
	/* 80CD6DD8 */ // True False
void setBaseMtx();
	/* 80CD7094 */ // True False
void Create();
	/* 80CD724C */ // True False
//  bool False
bool __CreateHeap();
	/* 80CD7254 */ // True False
void create();
	/* 80CD75EC */ // True False
void bg_check();
	/* 80CD7734 */ // True False
void action_proc_call();
	/* 80CD77F0 */ // True False
void actionInit();
	/* 80CD7828 */ // True False
void actionWaitInit();
	/* 80CD7890 */ // True False
void actionWait();
	/* 80CD7C68 */ // True False
void initActionOrderGetDemo();
	/* 80CD7D04 */ // True False
void actionOrderGetDemo();
	/* 80CD7D80 */ // True False
void actionGetDemo();
	/* 80CD7E00 */ // True False
void event_proc_call();
	/* 80CD7EBC */ // True False
void actionWaitCamDemo();
	/* 80CD7F20 */ // True False
void actionOrderCamDemo();
	/* 80CD7F88 */ // True False
void actionCamDemo();
	/* 80CD7FE4 */ // True False
//  void False
void actionCamDemoEnd();
	/* 80CD7FE8 */ // True False
void execute();
	/* 80CD80EC */ // True False
void draw();
	/* 80CD8140 */ // True False
void _delete();
};

struct daItemBase_c {
	/* 80037A64 */ // False False
void hide();
	/* 80037A74 */ // False False
void show();
	/* 80037ACC */ // False False
void chkDraw();
	/* 80144724 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void DeleteBase(char const*);
	/* 8014474C */ // False False
//  bool False
bool clothCreate();
	/* 80144B94 */ // False False
void DrawBase();
	/* 80144C30 */ // False False
void RotateYBase();
	/* 80144C7C */ // False False
void setListStart();
	/* 80144CC4 */ // False False
void settingBeforeDraw();
	/* 80144D18 */ // False False
void setTevStr();
	/* 80144D70 */ // False False
void setShadow();
	/* 80144EDC */ // False False
void animEntry();
	/* 80145144 */ // False False
//  int False
void chkFlag(int);
	/* 80145164 */ // False False
void getTevFrm();
	/* 80145180 */ // False False
void getBtpFrm();
	/* 8014519C */ // False False
void getShadowSize();
	/* 801451B4 */ // False False
void getCollisionH();
	/* 801451D0 */ // False False
void getCollisionR();
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 800436EC */ // False False
//  unsigned int False
void setPtI_Id(unsigned int);
};

struct dEvent_manager_c {
	/* 80047758 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
void getEventIdx(fopAc_ac_c*, char const*, u8);
	/* 80047A78 */ // False False
//  s16 False
void endCheck(s16);
	/* 80047ADC */ // False False
//  char const* False
// 	 char const False
// 		 char False
void endCheckOld(char const*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80CD74B0 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084658 */ // False False
void ChkCoHit();
};

struct dCcD_GAtTgCoCommonBase {
	/* 80083688 */ // False False
void GetAc();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80CD757C */ // True False
~dBgS_ObjAcch();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80CD750C */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct csXyz {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGPla {
	/* 80CD6D54 */ // True False
~cM3dGPla();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80CD7420 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80CD7468 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80CD81F8 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS {
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

// 
// Forward References:
// 

// True False
//  cXyz* False
// 	 cXyz False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  f32 False
static void Reflect(cXyz*, cBgS_PolyInfo const&, f32);
// True False
//  daItemShield_c* False
// 	 daItemShield_c False
static void daItemShield_Draw(daItemShield_c*);
// True False
//  daItemShield_c* False
// 	 daItemShield_c False
static void daItemShield_Execute(daItemShield_c*);
// True False
//  daItemShield_c* False
// 	 daItemShield_c False
static void daItemShield_Delete(daItemShield_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daItemShield_Create(fopAc_ac_c*);
// False True
//  u8* False
// 	 u8 False
void cLib_calcTimer__template0(u8*);

// True False
//  cXyz* False
// 	 cXyz False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  f32 False
extern "C" static void Reflect__FP4cXyzRC13cBgS_PolyInfof();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
extern "C" void initBaseMtx__14daItemShield_cFv();
// True False
extern "C" void setBaseMtx__14daItemShield_cFv();
// True False
extern "C" void Create__14daItemShield_cFv();
// True False
//  bool False
extern "C" bool __CreateHeap__14daItemShield_cFv();
// True False
extern "C" void create__14daItemShield_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void bg_check__14daItemShield_cFv();
// True False
extern "C" void action_proc_call__14daItemShield_cFv();
// True False
extern "C" void actionInit__14daItemShield_cFv();
// True False
extern "C" void actionWaitInit__14daItemShield_cFv();
// True False
extern "C" void actionWait__14daItemShield_cFv();
// True False
extern "C" void initActionOrderGetDemo__14daItemShield_cFv();
// True False
extern "C" void actionOrderGetDemo__14daItemShield_cFv();
// True False
extern "C" void actionGetDemo__14daItemShield_cFv();
// True False
extern "C" void event_proc_call__14daItemShield_cFv();
// True False
extern "C" void actionWaitCamDemo__14daItemShield_cFv();
// True False
extern "C" void actionOrderCamDemo__14daItemShield_cFv();
// True False
extern "C" void actionCamDemo__14daItemShield_cFv();
// True False
//  void False
extern "C" void actionCamDemoEnd__14daItemShield_cFv();
// True False
extern "C" void execute__14daItemShield_cFv();
// True False
extern "C" void draw__14daItemShield_cFv();
// True False
extern "C" void _delete__14daItemShield_cFv();
// True False
//  daItemShield_c* False
// 	 daItemShield_c False
extern "C" static void daItemShield_Draw__FP14daItemShield_c();
// True False
//  daItemShield_c* False
// 	 daItemShield_c False
extern "C" static void daItemShield_Execute__FP14daItemShield_c();
// True False
//  daItemShield_c* False
// 	 daItemShield_c False
extern "C" static void daItemShield_Delete__FP14daItemShield_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daItemShield_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// False True
//  u8* False
// 	 u8 False
extern "C" void func_80CD8240();
// True False
extern "C" static void func_80CD825C();
// True False
extern "C" static void func_80CD8264();
extern "C" extern u8 const lit_3856[4];
extern "C" extern u8 const lit_3857[8];
extern "C" extern u8 const lit_3858[8];
extern "C" extern u8 const lit_3859[8];
extern "C" extern u32 const lit_3953[1 + 1 /* padding */];
extern "C" extern u8 const lit_3954[8];
extern "C" extern u32 const lit_3955;
extern "C" extern u32 const lit_3956;
extern "C" extern u32 const lit_3957;
extern "C" extern u32 const lit_3958;
extern "C" extern u8 const lit_3960[8];
extern "C" extern u32 const lit_4003;
extern "C" extern u32 const lit_4004;
extern "C" extern u8 const lit_4006[8];
extern "C" extern u32 const lit_4180;
extern "C" extern u32 const lit_4181;
extern "C" extern u32 const lit_4182;
extern "C" extern u32 const lit_4183;
extern "C" extern u32 const lit_4184;
extern "C" extern u32 const lit_4336;
extern "C" extern u32 const lit_4337;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_4189[3];
extern "C" extern void* lit_4190[3];
extern "C" extern void* lit_4191[3];
extern "C" extern void* lit_4192[3];
extern "C" extern u8 data_80CD838C[48];
extern "C" extern void* lit_4383[3];
extern "C" extern void* lit_4384[3];
extern "C" extern void* lit_4385[3];
extern "C" extern void* lit_4386[3];
extern "C" extern u8 data_80CD83EC[48];
extern "C" extern void* g_profile_Obj_Shield[12];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__14daItemShield_c[17];
extern "C" extern void* __vt__8cM3dGPla[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u8 False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderOtherEventId(fopAc_ac_c*, s16, u8, u16, u16, u16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
void fopAcM_orderItemEvent(fopAc_ac_c*, u16, u16);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_createItemForTrBoxDemo(cXyz const*, int, int, int, csXyz const*, cXyz const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void CheckFieldItemCreateHeap(fopAc_ac_c*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u8 False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderItemEvent__FP10fopAc_ac_cUsUs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_createItemForTrBoxDemo__FPC4cXyziiiPC5csXyzPC4cXyz();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
extern "C" void hide__12daItemBase_cFv();
// False False
extern "C" void show__12daItemBase_cFv();
// False False
extern "C" void chkDraw__12daItemBase_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void CheckFieldItemCreateHeap__FP10fopAc_ac_c();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  unsigned int False
extern "C" void setPtI_Id__14dEvt_control_cFUi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
// False False
//  s16 False
extern "C" void endCheck__16dEvent_manager_cFs();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void endCheckOld__16dEvent_manager_cFPCc();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void GetAc__22dCcD_GAtTgCoCommonBaseFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void DeleteBase__12daItemBase_cFPCc();
// False False
//  bool False
extern "C" bool clothCreate__12daItemBase_cFv();
// False False
extern "C" void DrawBase__12daItemBase_cFv();
// False False
extern "C" void RotateYBase__12daItemBase_cFv();
// False False
extern "C" void setListStart__12daItemBase_cFv();
// False False
extern "C" void settingBeforeDraw__12daItemBase_cFv();
// False False
extern "C" void setTevStr__12daItemBase_cFv();
// False False
extern "C" void setShadow__12daItemBase_cFv();
// False False
extern "C" void animEntry__12daItemBase_cFv();
// False False
//  int False
extern "C" void chkFlag__12daItemBase_cFi();
// False False
extern "C" void getTevFrm__12daItemBase_cFv();
// False False
extern "C" void getBtpFrm__12daItemBase_cFv();
// False False
extern "C" void getShadowSize__12daItemBase_cFv();
// False False
extern "C" void getCollisionH__12daItemBase_cFv();
// False False
extern "C" void getCollisionR__12daItemBase_cFv();
// False False
//  cXyz* False
// 	 cXyz False
extern "C" void setLookPos__9daPy_py_cFP4cXyz();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void C_VECReflect();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* field_item_res__10dItem_data[1020];
extern "C" extern u8 item_info__10dItem_data[1020 + 4 /* padding */];
extern "C" extern void* __vt__12daItemBase_c[17 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 struct_80CD8520[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80CD8274-80CD82B8 0044+00 s=5 e=0 z=0  None .rodata    l_cyl_src                                                    */
SECTION_RODATA static u8 const l_cyl_src[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
	0x42, 0x20, 0x00, 0x00,
};

/* 80CD833C-80CD8348 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CD8348-80CD835C 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80CD835C-80CD8368 000C+00 s=0 e=0 z=0  None .data      @4189                                                        */
SECTION_DATA void* lit_4189[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionInit__14daItemShield_cFv,
};

/* 80CD8368-80CD8374 000C+00 s=0 e=0 z=0  None .data      @4190                                                        */
SECTION_DATA void* lit_4190[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionWait__14daItemShield_cFv,
};

/* 80CD8374-80CD8380 000C+00 s=0 e=0 z=0  None .data      @4191                                                        */
SECTION_DATA void* lit_4191[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOrderGetDemo__14daItemShield_cFv,
};

/* 80CD8380-80CD838C 000C+00 s=0 e=0 z=0  None .data      @4192                                                        */
SECTION_DATA void* lit_4192[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionGetDemo__14daItemShield_cFv,
};

/* 80CD838C-80CD83BC 0030+00 s=0 e=0 z=0  None .data      l_actionFunc$4188                                            */
SECTION_DATA u8 data_80CD838C[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CD83BC-80CD83C8 000C+00 s=0 e=0 z=0  None .data      @4383                                                        */
SECTION_DATA void* lit_4383[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionWaitCamDemo__14daItemShield_cFv,
};

/* 80CD83C8-80CD83D4 000C+00 s=0 e=0 z=0  None .data      @4384                                                        */
SECTION_DATA void* lit_4384[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOrderCamDemo__14daItemShield_cFv,
};

/* 80CD83D4-80CD83E0 000C+00 s=0 e=0 z=0  None .data      @4385                                                        */
SECTION_DATA void* lit_4385[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionCamDemo__14daItemShield_cFv,
};

/* 80CD83E0-80CD83EC 000C+00 s=0 e=0 z=0  None .data      @4386                                                        */
SECTION_DATA void* lit_4386[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionCamDemoEnd__14daItemShield_cFv,
};

/* 80CD83EC-80CD841C 0030+00 s=0 e=0 z=0  None .data      l_func$4382                                                  */
SECTION_DATA u8 data_80CD83EC[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CD841C-80CD843C 0020+00 s=1 e=0 z=0  None .data      l_daItemShield_Method                                        */
SECTION_DATA static void* l_daItemShield_Method[8] = {
	(void*)daItemShield_Create__FP10fopAc_ac_c,
	(void*)daItemShield_Delete__FP14daItemShield_c,
	(void*)daItemShield_Execute__FP14daItemShield_c,
	(void*)NULL,
	(void*)daItemShield_Draw__FP14daItemShield_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80CD843C-80CD846C 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Shield                                         */
SECTION_DATA void* g_profile_Obj_Shield[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x021C0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000958,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00F00000,
	(void*)&l_daItemShield_Method,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80CD846C-80CD8478 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80CD8478-80CD8484 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80CD8484-80CD8490 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80CD8490-80CD849C 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80CD849C-80CD84A8 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80CD84A8-80CD84CC 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80CD8264,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80CD825C,
};

/* 80CD84CC-80CD8510 0044+00 s=1 e=0 z=0  None .data      __vt__14daItemShield_c                                       */
SECTION_DATA void* __vt__14daItemShield_c[17] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)DrawBase__12daItemBase_cFv,
	(void*)setListStart__12daItemBase_cFv,
	(void*)settingBeforeDraw__12daItemBase_cFv,
	(void*)setTevStr__12daItemBase_cFv,
	(void*)setShadow__12daItemBase_cFv,
	(void*)animEntry__12daItemBase_cFv,
	(void*)RotateYBase__12daItemBase_cFv,
	(void*)clothCreate__12daItemBase_cFv,
	(void*)__CreateHeap__14daItemShield_cFv,
	(void*)chkFlag__12daItemBase_cFi,
	(void*)getTevFrm__12daItemBase_cFv,
	(void*)getBtpFrm__12daItemBase_cFv,
	(void*)getShadowSize__12daItemBase_cFv,
	(void*)getCollisionH__12daItemBase_cFv,
	(void*)getCollisionR__12daItemBase_cFv,
};

/* 80CD8510-80CD851C 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 80CD6A58-80CD6D54 02FC+00 s=1 e=0 z=0  None .text      Reflect__FP4cXyzRC13cBgS_PolyInfof                           */
//	80CD6A84: 80CD8274 (l_cyl_src)
//	80CD6A88: 80CD8274 (l_cyl_src)
//	80CD6A8C: 80CD8510 (__vt__8cM3dGPla)
//	80CD6A90: 80CD8510 (__vt__8cM3dGPla)
//	80CD6A98: 804061C0 (g_dComIfG_gameInfo)
//	80CD6A9C: 804061C0 (g_dComIfG_gameInfo)
//	80CD6AA8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80CD6AD0: 80347138 (PSVECSquareMag)
//	80CD6B40: 80450AE0 (__float_nan)
//	80CD6B44: 80450AE0 (__float_nan)
//	80CD6BB0: 80450AE0 (__float_nan)
//	80CD6BB4: 80450AE0 (__float_nan)
//	80CD6BCC: 803472C8 (C_VECReflect)
//	80CD6BDC: 80266B84 (__ml__4cXyzCFf)
//	80CD6BEC: 80266B84 (__ml__4cXyzCFf)
//	80CD6C24: 80347138 (PSVECSquareMag)
//	80CD6C94: 80450AE0 (__float_nan)
//	80CD6C98: 80450AE0 (__float_nan)
//	80CD6D04: 80450AE0 (__float_nan)
//	80CD6D08: 80450AE0 (__float_nan)
//	80CD6D0C: 80CD8510 (__vt__8cM3dGPla)
//	80CD6D10: 80CD8510 (__vt__8cM3dGPla)
//	80CD6D1C: 80CD8510 (__vt__8cM3dGPla)
//	80CD6D20: 80CD8510 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz* False
// 	 cXyz False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  f32 False
asm static void Reflect(cXyz* param_0, cBgS_PolyInfo const& param_1, f32 param_2) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/Reflect__FP4cXyzRC13cBgS_PolyInfof.s"
}
#pragma pop


/* 80CD6D54-80CD6D9C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	80CD6D6C: 80CD8510 (__vt__8cM3dGPla)
//	80CD6D70: 80CD8510 (__vt__8cM3dGPla)
//	80CD6D80: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 80CD6D9C-80CD6DD8 003C+00 s=1 e=0 z=0  None .text      initBaseMtx__14daItemShield_cFv                              */
//	80CD6DC4: 80CD6DD8 (setBaseMtx__14daItemShield_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/initBaseMtx__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD6DD8-80CD7094 02BC+00 s=2 e=0 z=0  None .text      setBaseMtx__14daItemShield_cFv                               */
//	80CD6DF0: 80CD8274 (l_cyl_src)
//	80CD6DF4: 80CD8274 (l_cyl_src)
//	80CD6E0C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80CD6F2C: 80439A20 (sincosTable___5JMath)
//	80CD6F30: 80439A20 (sincosTable___5JMath)
//	80CD6FE0: 803DD470 (now__14mDoMtx_stack_c)
//	80CD6FE4: 803DD470 (now__14mDoMtx_stack_c)
//	80CD6FF4: 803468E8 (PSMTXTrans)
//	80CD6FF8: 803DD470 (now__14mDoMtx_stack_c)
//	80CD6FFC: 803DD470 (now__14mDoMtx_stack_c)
//	80CD700C: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80CD7028: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80CD702C: 803DD470 (now__14mDoMtx_stack_c)
//	80CD7030: 803DD470 (now__14mDoMtx_stack_c)
//	80CD7038: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80CD7048: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80CD7050: 803DD470 (now__14mDoMtx_stack_c)
//	80CD7054: 803DD470 (now__14mDoMtx_stack_c)
//	80CD7064: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80CD7068: 803DD470 (now__14mDoMtx_stack_c)
//	80CD706C: 803DD470 (now__14mDoMtx_stack_c)
//	80CD7078: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/setBaseMtx__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7094-80CD724C 01B8+00 s=1 e=0 z=0  None .text      Create__14daItemShield_cFv                                   */
//	80CD70AC: 80CD8274 (l_cyl_src)
//	80CD70B0: 80CD8274 (l_cyl_src)
//	80CD70B4: 80CD6D9C (initBaseMtx__14daItemShield_cFv)
//	80CD70D0: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80CD70FC: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80CD7110: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80CD711C: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80CD7128: 803AED78 (item_info__10dItem_data)
//	80CD712C: 803AED78 (item_info__10dItem_data)
//	80CD715C: 8026F200 (SetR__8cM3dGCylFf)
//	80CD7160: 803AED78 (item_info__10dItem_data)
//	80CD7164: 803AED78 (item_info__10dItem_data)
//	80CD7194: 8026F1F8 (SetH__8cM3dGCylFf)
//	80CD71A4: 80CD7828 (actionWaitInit__14daItemShield_cFv)
//	80CD71A8: 804061C0 (g_dComIfG_gameInfo)
//	80CD71AC: 804061C0 (g_dComIfG_gameInfo)
//	80CD71C0: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CD71EC: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80CD71F8: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80CD71FC: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80CD7210: 804061C0 (g_dComIfG_gameInfo)
//	80CD7214: 804061C0 (g_dComIfG_gameInfo)
//	80CD7228: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/Create__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD724C-80CD7254 0008+00 s=1 e=0 z=0  None .text      __CreateHeap__14daItemShield_cFv                             */
// True False
//  bool False
bool daItemShield_c::__CreateHeap() {
	return true;
}


/* 80CD7254-80CD7420 01CC+00 s=1 e=0 z=0  None .text      create__14daItemShield_cFv                                   */
//	80CD7264: 803621DC (_savegpr_29)
//	80CD7284: 80018B64 (__ct__10fopAc_ac_cFv)
//	80CD7288: 803B3610 (__vt__12daItemBase_c)
//	80CD728C: 803B3610 (__vt__12daItemBase_c)
//	80CD729C: 800760A0 (__ct__9dBgS_AcchFv)
//	80CD72A0: 80CD84A8 (__vt__12dBgS_ObjAcch)
//	80CD72A4: 80CD84A8 (__vt__12dBgS_ObjAcch)
//	80CD72C0: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80CD72C8: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80CD72CC: 803C3728 (__vt__9cCcD_Stts)
//	80CD72D0: 803C3728 (__vt__9cCcD_Stts)
//	80CD72DC: 80083760 (__ct__10dCcD_GSttsFv)
//	80CD72E0: 803AC2E4 (__vt__9dCcD_Stts)
//	80CD72E4: 803AC2E4 (__vt__9dCcD_Stts)
//	80CD72FC: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80CD7300: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CD7304: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CD730C: 80CD849C (__vt__8cM3dGAab)
//	80CD7310: 80CD849C (__vt__8cM3dGAab)
//	80CD7318: 80CD8490 (__vt__8cM3dGCyl)
//	80CD731C: 80CD8490 (__vt__8cM3dGCyl)
//	80CD7324: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CD7328: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CD7338: 803AC050 (__vt__8dCcD_Cyl)
//	80CD733C: 803AC050 (__vt__8dCcD_Cyl)
//	80CD7354: 80CD84CC (__vt__14daItemShield_c)
//	80CD7358: 80CD84CC (__vt__14daItemShield_c)
//	80CD7374: 804061C0 (g_dComIfG_gameInfo)
//	80CD7378: 804061C0 (g_dComIfG_gameInfo)
//	80CD738C: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CD73A8: 803ADD88 (field_item_res__10dItem_data)
//	80CD73AC: 803ADD88 (field_item_res__10dItem_data)
//	80CD73B8: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80CD73CC: 80037B78 (CheckFieldItemCreateHeap__FP10fopAc_ac_c)
//	80CD73D0: 80037B78 (CheckFieldItemCreateHeap__FP10fopAc_ac_c)
//	80CD73D8: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80CD73F0: 80CD7094 (Create__14daItemShield_cFv)
//	80CD740C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/func_80CD7254.s"
}
#pragma pop


/* 80CD7420-80CD7468 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80CD7438: 80CD8490 (__vt__8cM3dGCyl)
//	80CD743C: 80CD8490 (__vt__8cM3dGCyl)
//	80CD744C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80CD7468-80CD74B0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80CD7480: 80CD849C (__vt__8cM3dGAab)
//	80CD7484: 80CD849C (__vt__8cM3dGAab)
//	80CD7494: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80CD74B0-80CD750C 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80CD74C8: 80CD8484 (__vt__10dCcD_GStts)
//	80CD74CC: 80CD8484 (__vt__10dCcD_GStts)
//	80CD74D8: 80CD8478 (__vt__10cCcD_GStts)
//	80CD74DC: 80CD8478 (__vt__10cCcD_GStts)
//	80CD74F0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80CD750C-80CD757C 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80CD752C: 80CD846C (__vt__12dBgS_AcchCir)
//	80CD7530: 80CD846C (__vt__12dBgS_AcchCir)
//	80CD7540: 8026EF18 (__dt__8cM3dGCirFv)
//	80CD754C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80CD755C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80CD757C-80CD75EC 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80CD759C: 80CD84A8 (__vt__12dBgS_ObjAcch)
//	80CD75A0: 80CD84A8 (__vt__12dBgS_ObjAcch)
//	80CD75BC: 80075F94 (__dt__9dBgS_AcchFv)
//	80CD75CC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80CD75EC-80CD7734 0148+00 s=1 e=0 z=0  None .text      bg_check__14daItemShield_cFv                                 */
//	80CD7604: 80CD8274 (l_cyl_src)
//	80CD7608: 80CD8274 (l_cyl_src)
//	80CD7634: 80CD6A58 (Reflect__FP4cXyzRC13cBgS_PolyInfof)
//	80CD7640: 80267674 (cM_atan2s__Fff)
//	80CD7688: 80CD6A58 (Reflect__FP4cXyzRC13cBgS_PolyInfof)
//	80CD76D8: 8002D06C (dComIfGp_getReverb__Fi)
//	80CD76EC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CD76F0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CD7718: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::bg_check() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/bg_check__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7734-80CD77F0 00BC+00 s=1 e=0 z=0  None .text      action_proc_call__14daItemShield_cFv                         */
//	80CD7740: 80CD833C (cNullVec__6Z2Calc)
//	80CD7744: 80CD833C (cNullVec__6Z2Calc)
//	80CD7748: 80CD8520 (struct_80CD8520)
//	80CD774C: 80CD8520 (struct_80CD8520)
//	80CD77D8: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::action_proc_call() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/action_proc_call__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD77F0-80CD7828 0038+00 s=1 e=0 z=0  None .text      actionInit__14daItemShield_cFv                               */
//	80CD7804: 80037A74 (show__12daItemBase_cFv)
//	80CD780C: 80CD7828 (actionWaitInit__14daItemShield_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::actionInit() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/actionInit__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7828-80CD7890 0068+00 s=2 e=0 z=0  None .text      actionWaitInit__14daItemShield_cFv                           */
//	80CD786C: 80037A74 (show__12daItemBase_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::actionWaitInit() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/actionWaitInit__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7890-80CD7C68 03D8+00 s=1 e=0 z=0  None .text      actionWait__14daItemShield_cFv                               */
//	80CD78A8: 80CD8274 (l_cyl_src)
//	80CD78AC: 80CD8274 (l_cyl_src)
//	80CD78B0: 804061C0 (g_dComIfG_gameInfo)
//	80CD78B4: 804061C0 (g_dComIfG_gameInfo)
//	80CD7908: 8034739C (PSVECSquareDistance)
//	80CD7978: 80450AE0 (__float_nan)
//	80CD797C: 80450AE0 (__float_nan)
//	80CD79E8: 80450AE0 (__float_nan)
//	80CD79EC: 80450AE0 (__float_nan)
//	80CD7A2C: 8002D06C (dComIfGp_getReverb__Fi)
//	80CD7A40: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CD7A44: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CD7A6C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CD7A8C: 804061C0 (g_dComIfG_gameInfo)
//	80CD7A90: 804061C0 (g_dComIfG_gameInfo)
//	80CD7AA4: 80035200 (onSwitch__10dSv_info_cFii)
//	80CD7AB0: 8002D06C (dComIfGp_getReverb__Fi)
//	80CD7AC4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CD7AC8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CD7AF0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CD7B1C: 80CD8240 (func_80CD8240)
//	80CD7B40: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	80CD7B48: 804061C0 (g_dComIfG_gameInfo)
//	80CD7B4C: 804061C0 (g_dComIfG_gameInfo)
//	80CD7B54: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80CD7B5C: 80CD75EC (bg_check__14daItemShield_cFv)
//	80CD7BEC: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	80CD7BFC: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	80CD7C08: 804061C0 (g_dComIfG_gameInfo)
//	80CD7C0C: 804061C0 (g_dComIfG_gameInfo)
//	80CD7C28: 80CD7C68 (initActionOrderGetDemo__14daItemShield_cFv)
//	80CD7C34: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80CD7C38: 804061C0 (g_dComIfG_gameInfo)
//	80CD7C3C: 804061C0 (g_dComIfG_gameInfo)
//	80CD7C48: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::actionWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/actionWait__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7C68-80CD7D04 009C+00 s=1 e=0 z=0  None .text      initActionOrderGetDemo__14daItemShield_cFv                   */
//	80CD7CA0: 80037A64 (hide__12daItemBase_cFv)
//	80CD7CB0: 8001B9D0 (fopAcM_orderItemEvent__FP10fopAc_ac_cUsUs)
//	80CD7CDC: 8001BC74 (fopAcM_createItemForTrBoxDemo__FPC4cXyziiiPC5csXyzPC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::initActionOrderGetDemo() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/initActionOrderGetDemo__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7D04-80CD7D80 007C+00 s=1 e=0 z=0  None .text      actionOrderGetDemo__14daItemShield_cFv                       */
//	80CD7D3C: 804061C0 (g_dComIfG_gameInfo)
//	80CD7D40: 804061C0 (g_dComIfG_gameInfo)
//	80CD7D48: 800436EC (setPtI_Id__14dEvt_control_cFUi)
//	80CD7D58: 8001B9D0 (fopAcM_orderItemEvent__FP10fopAc_ac_cUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::actionOrderGetDemo() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/actionOrderGetDemo__14daItemShield_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CD82B8-80CD82BC 0004+00 s=0 e=0 z=0  None .rodata    @3856                                                        */
SECTION_RODATA u8 const lit_3856[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80CD82BC-80CD82C4 0008+00 s=0 e=0 z=0  None .rodata    @3857                                                        */
SECTION_RODATA u8 const lit_3857[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CD82C4-80CD82CC 0008+00 s=0 e=0 z=0  None .rodata    @3858                                                        */
SECTION_RODATA u8 const lit_3858[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CD82CC-80CD82D4 0008+00 s=0 e=0 z=0  None .rodata    @3859                                                        */
SECTION_RODATA u8 const lit_3859[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CD82D4-80CD82DC 0004+04 s=0 e=0 z=0  None .rodata    @3953                                                        */
SECTION_RODATA u32 const lit_3953[1 + 1 /* padding */] = {
	0x3F6147AE,
	/* padding */
	0x00000000,
};

/* 80CD82DC-80CD82E4 0008+00 s=0 e=0 z=0  None .rodata    @3954                                                        */
SECTION_RODATA u8 const lit_3954[8] = {
	0x40, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CD82E4-80CD82E8 0004+00 s=0 e=0 z=0  None .rodata    @3955                                                        */
SECTION_RODATA u32 const lit_3955 = 0xC1A00000;

/* 80CD82E8-80CD82EC 0004+00 s=0 e=0 z=0  None .rodata    @3956                                                        */
SECTION_RODATA u32 const lit_3956 = 0xC1700000;

/* 80CD82EC-80CD82F0 0004+00 s=0 e=0 z=0  None .rodata    @3957                                                        */
SECTION_RODATA u32 const lit_3957 = 0x41A00000;

/* 80CD82F0-80CD82F4 0004+00 s=0 e=0 z=0  None .rodata    @3958                                                        */
SECTION_RODATA u32 const lit_3958 = 0x41700000;

/* 80CD82F4-80CD82FC 0008+00 s=0 e=0 z=0  None .rodata    @3960                                                        */
SECTION_RODATA u8 const lit_3960[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80CD82FC-80CD8300 0004+00 s=0 e=0 z=0  None .rodata    @4003                                                        */
SECTION_RODATA u32 const lit_4003 = 0x41F00000;

/* 80CD8300-80CD8304 0004+00 s=0 e=0 z=0  None .rodata    @4004                                                        */
SECTION_RODATA u32 const lit_4004 = 0xC0800000;

/* 80CD8304-80CD830C 0008+00 s=0 e=0 z=0  None .rodata    @4006                                                        */
SECTION_RODATA u8 const lit_4006[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CD830C-80CD8310 0004+00 s=0 e=0 z=0  None .rodata    @4180                                                        */
SECTION_RODATA u32 const lit_4180 = 0x40A00000;

/* 80CD8310-80CD8314 0004+00 s=0 e=0 z=0  None .rodata    @4181                                                        */
SECTION_RODATA u32 const lit_4181 = 0x3F800000;

/* 80CD8314-80CD8318 0004+00 s=0 e=0 z=0  None .rodata    @4182                                                        */
SECTION_RODATA u32 const lit_4182 = 0x3F333333;

/* 80CD8318-80CD831C 0004+00 s=0 e=0 z=0  None .rodata    @4183                                                        */
SECTION_RODATA u32 const lit_4183 = 0x40400000;

/* 80CD831C-80CD8320 0004+00 s=0 e=0 z=0  None .rodata    @4184                                                        */
SECTION_RODATA u32 const lit_4184 = 0xBF800000;

/* 80CD8320-80CD8324 0004+00 s=1 e=0 z=0  None .rodata    @4335                                                        */
SECTION_RODATA static u32 const lit_4335 = 0x43FA0000;

/* 80CD8324-80CD8328 0004+00 s=0 e=0 z=0  None .rodata    @4336                                                        */
SECTION_RODATA u32 const lit_4336 = 0xC1C80000;

/* 80CD8328-80CD832C 0004+00 s=0 e=0 z=0  None .rodata    @4337                                                        */
SECTION_RODATA u32 const lit_4337 = 0x3F666666;

/* 80CD832C-80CD833C 0010+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80CD832C = "DEFAULT_GETITEM";
#pragma pop

/* 80CD7D80-80CD7E00 0080+00 s=1 e=0 z=0  None .text      actionGetDemo__14daItemShield_cFv                            */
//	80CD7D98: 804061C0 (g_dComIfG_gameInfo)
//	80CD7D9C: 804061C0 (g_dComIfG_gameInfo)
//	80CD7DA4: 80CD832C (stringBase0)
//	80CD7DA8: 80CD832C (stringBase0)
//	80CD7DAC: 80047ADC (endCheckOld__16dEvent_manager_cFPCc)
//	80CD7DBC: 80042468 (reset__14dEvt_control_cFv)
//	80CD7DC4: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80CD7DC8: 804061C0 (g_dComIfG_gameInfo)
//	80CD7DCC: 804061C0 (g_dComIfG_gameInfo)
//	80CD7DE0: 80035200 (onSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::actionGetDemo() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/actionGetDemo__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7E00-80CD7EBC 00BC+00 s=1 e=0 z=0  None .text      event_proc_call__14daItemShield_cFv                          */
//	80CD7E0C: 80CD833C (cNullVec__6Z2Calc)
//	80CD7E10: 80CD833C (cNullVec__6Z2Calc)
//	80CD7E14: 80CD8521 (struct_80CD8520)
//	80CD7E18: 80CD8521 (struct_80CD8520)
//	80CD7EA4: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::event_proc_call() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/event_proc_call__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7EBC-80CD7F20 0064+00 s=1 e=0 z=0  None .text      actionWaitCamDemo__14daItemShield_cFv                        */
//	80CD7EFC: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::actionWaitCamDemo() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/actionWaitCamDemo__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7F20-80CD7F88 0068+00 s=1 e=0 z=0  None .text      actionOrderCamDemo__14daItemShield_cFv                       */
//	80CD7F64: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::actionOrderCamDemo() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/actionOrderCamDemo__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7F88-80CD7FE4 005C+00 s=1 e=0 z=0  None .text      actionCamDemo__14daItemShield_cFv                            */
//	80CD7FA0: 804061C0 (g_dComIfG_gameInfo)
//	80CD7FA4: 804061C0 (g_dComIfG_gameInfo)
//	80CD7FB0: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80CD7FC8: 80042468 (reset__14dEvt_control_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::actionCamDemo() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/actionCamDemo__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD7FE4-80CD7FE8 0004+00 s=1 e=0 z=0  None .text      actionCamDemoEnd__14daItemShield_cFv                         */
// True False
//  void False
void daItemShield_c::actionCamDemoEnd() {
	/* empty function */
}


/* 80CD7FE8-80CD80EC 0104+00 s=1 e=0 z=0  None .text      execute__14daItemShield_cFv                                  */
//	80CD8020: 80CD7734 (action_proc_call__14daItemShield_cFv)
//	80CD8028: 80CD7E00 (event_proc_call__14daItemShield_cFv)
//	80CD8070: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80CD8088: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80CD8090: 80CD6DD8 (setBaseMtx__14daItemShield_cFv)
//	80CD8098: 804061C0 (g_dComIfG_gameInfo)
//	80CD809C: 804061C0 (g_dComIfG_gameInfo)
//	80CD80A4: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80CD80A8: 80CD8320 (lit_4335)
//	80CD80AC: 80CD8320 (lit_4335)
//	80CD80BC: 8015F4F0 (setLookPos__9daPy_py_cFP4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::execute() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/execute__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD80EC-80CD8140 0054+00 s=1 e=0 z=0  None .text      draw__14daItemShield_cFv                                     */
//	80CD8100: 80037ACC (chkDraw__12daItemBase_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/draw__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD8140-80CD8178 0038+00 s=1 e=0 z=0  None .text      _delete__14daItemShield_cFv                                  */
//	80CD8154: 803ADD88 (field_item_res__10dItem_data)
//	80CD8158: 803ADD88 (field_item_res__10dItem_data)
//	80CD8160: 80144724 (DeleteBase__12daItemBase_cFPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daItemShield_c::_delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/_delete__14daItemShield_cFv.s"
}
#pragma pop


/* 80CD8178-80CD8198 0020+00 s=1 e=0 z=0  None .text      daItemShield_Draw__FP14daItemShield_c                        */
//	80CD8184: 80CD80EC (draw__14daItemShield_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daItemShield_c* False
// 	 daItemShield_c False
asm static void daItemShield_Draw(daItemShield_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/daItemShield_Draw__FP14daItemShield_c.s"
}
#pragma pop


/* 80CD8198-80CD81B8 0020+00 s=1 e=0 z=0  None .text      daItemShield_Execute__FP14daItemShield_c                     */
//	80CD81A4: 80CD7FE8 (execute__14daItemShield_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daItemShield_c* False
// 	 daItemShield_c False
asm static void daItemShield_Execute(daItemShield_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/daItemShield_Execute__FP14daItemShield_c.s"
}
#pragma pop


/* 80CD81B8-80CD81D8 0020+00 s=1 e=0 z=0  None .text      daItemShield_Delete__FP14daItemShield_c                      */
//	80CD81C4: 80CD8140 (_delete__14daItemShield_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daItemShield_c* False
// 	 daItemShield_c False
asm static void daItemShield_Delete(daItemShield_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/daItemShield_Delete__FP14daItemShield_c.s"
}
#pragma pop


/* 80CD81D8-80CD81F8 0020+00 s=1 e=0 z=0  None .text      daItemShield_Create__FP10fopAc_ac_c                          */
//	80CD81E4: 80CD7254 (create__14daItemShield_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daItemShield_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/daItemShield_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80CD81F8-80CD8240 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80CD8210: 80CD8478 (__vt__10cCcD_GStts)
//	80CD8214: 80CD8478 (__vt__10cCcD_GStts)
//	80CD8224: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80CD8240-80CD825C 001C+00 s=1 e=0 z=0  None .text      cLib_calcTimer<Uc>__FPUc                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  u8* False
// 	 u8 False
asm void cLib_calcTimer__template0(u8* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/func_80CD8240.s"
}
#pragma pop


/* 80CD825C-80CD8264 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80CD8260: 80CD757C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80CD825C() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/func_80CD825C.s"
}
#pragma pop


/* 80CD8264-80CD826C 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80CD8268: 80CD757C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80CD8264() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_shield/d_a_obj_shield/func_80CD8264.s"
}
#pragma pop


