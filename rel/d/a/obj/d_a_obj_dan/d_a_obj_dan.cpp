// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_dan
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_dan/d_a_obj_dan.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CE70 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void scaleM(cXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct J3DAnmTextureSRTKey {
};

struct J3DMaterialTable {
};

struct mDoExt_btkAnm {
	/* 8000D63C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTevRegKey {
};

struct mDoExt_brkAnm {
	/* 8000D70C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
};

struct daPy_boomerangMove_c {
	/* 8015E5B0 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void initOffset(cXyz const*);
	/* 8015E654 */ // False False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
void posMove(cXyz*, s16*, fopAc_ac_c*, s16);
	/* 8015E87C */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void bgCheckAfterOffset(cXyz const*);
};

struct daObj_DanHIO_c {
	/* 80BDA58C */ // True False
daObj_DanHIO_c();
	/* 80BDC2F0 */ // True False
~daObj_DanHIO_c();
};

struct daObjDAN_c {
	/* 80BDA5B4 */ // True False
void InitCcSph();
	/* 80BDA620 */ // True False
void SetCcSph();
	/* 80BDA698 */ // True False
void CreateHeap();
	/* 80BDAA3C */ // True False
void SpeedSet();
	/* 80BDAA9C */ // True False
void LinkChk();
	/* 80BDAB14 */ // True False
void MoveAction();
	/* 80BDAC10 */ // True False
void DamageAction();
	/* 80BDAFDC */ // True False
void Action();
	/* 80BDB074 */ // True False
void checkGroundPos();
	/* 80BDB0D8 */ // True False
void Insect_Release();
	/* 80BDB0E8 */ // True False
void Z_BufferChk();
	/* 80BDB264 */ // True False
void ParticleSet();
	/* 80BDB388 */ // True False
void ObjHit();
	/* 80BDB4E0 */ // True False
void BoomChk();
	/* 80BDB62C */ // True False
void Execute();
	/* 80BDB928 */ // True False
void Delete();
	/* 80BDB990 */ // True False
void setBaseMtx();
	/* 80BDBB0C */ // True False
void CreateChk();
	/* 80BDBCB8 */ // True False
void create();
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dMenu_Insect_c {
	/* 801D9F3C */ // False False
//  u8 False
void isCatchNotGiveInsect(u8);
};

struct dInsect_c {
	/* 8015E010 */ // False False
dInsect_c();
	/* 8015E078 */ // False False
void Insect_GetDemoMain();
};

struct dDlst_peekZ_c {
	/* 80056018 */ // False False
//  s16 False
//  s16 False
//  u32* False
// 	 u32 False
void newData(s16, s16, u32*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084548 */ // False False
void GetTgHitGObj();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjGndChk {
	/* 80BDC170 */ // True False
~dBgS_ObjGndChk();
};

struct dBgS_ObjAcch {
	/* 80BDC1E8 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
	/* 800773A4 */ // False False
void ClrMoveBGOnly();
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80BDC258 */ // True False
~cM3dGSph();
};

struct cM3dGAab {
	/* 80BDC2A0 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cBgS_PolyInfo {
};

struct cBgS_GndChk {
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
};

struct cBgS {
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
};

struct _GXTexObj {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80BDA9B0 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjDAN_Create(fopAc_ac_c*);
// True False
//  daObjDAN_c* False
// 	 daObjDAN_c False
static void daObjDAN_Delete(daObjDAN_c*);
// True False
//  daObjDAN_c* False
// 	 daObjDAN_c False
static void daObjDAN_Draw(daObjDAN_c*);
// True False
//  daObjDAN_c* False
// 	 daObjDAN_c False
static void daObjDAN_Execute(daObjDAN_c*);
// True False
//  bool False
//  daObjDAN_c* False
// 	 daObjDAN_c False
static bool daObjDAN_IsDelete(daObjDAN_c*);

// True False
extern "C" void __ct__14daObj_DanHIO_cFv();
// True False
extern "C" void InitCcSph__10daObjDAN_cFv();
// True False
extern "C" void SetCcSph__10daObjDAN_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void CreateHeap__10daObjDAN_cFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjDAN_Create__FP10fopAc_ac_c();
// True False
//  daObjDAN_c* False
// 	 daObjDAN_c False
extern "C" static void daObjDAN_Delete__FP10daObjDAN_c();
// True False
extern "C" void SpeedSet__10daObjDAN_cFv();
// True False
extern "C" void LinkChk__10daObjDAN_cFv();
// True False
extern "C" void MoveAction__10daObjDAN_cFv();
// True False
extern "C" void DamageAction__10daObjDAN_cFv();
// True False
extern "C" void Action__10daObjDAN_cFv();
// True False
extern "C" void checkGroundPos__10daObjDAN_cFv();
// True False
extern "C" void Insect_Release__10daObjDAN_cFv();
// True False
extern "C" void Z_BufferChk__10daObjDAN_cFv();
// True False
extern "C" void ParticleSet__10daObjDAN_cFv();
// True False
extern "C" void ObjHit__10daObjDAN_cFv();
// True False
extern "C" void BoomChk__10daObjDAN_cFv();
// True False
extern "C" void Execute__10daObjDAN_cFv();
// True False
extern "C" void Delete__10daObjDAN_cFv();
// True False
extern "C" void setBaseMtx__10daObjDAN_cFv();
// True False
//  daObjDAN_c* False
// 	 daObjDAN_c False
extern "C" static void daObjDAN_Draw__FP10daObjDAN_c();
// True False
//  daObjDAN_c* False
// 	 daObjDAN_c False
extern "C" static void daObjDAN_Execute__FP10daObjDAN_c();
// True False
extern "C" void CreateChk__10daObjDAN_cFv();
// True False
extern "C" void create__10daObjDAN_cFv();
// True False
extern "C" void __dt__14dBgS_ObjGndChkFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
//  bool False
//  daObjDAN_c* False
// 	 daObjDAN_c False
extern "C" static bool daObjDAN_IsDelete__FP10daObjDAN_c();
// True False
extern "C" void __dt__14daObj_DanHIO_cFv();
// False False
extern "C" void __sinit_d_a_obj_dan_cpp();
// True False
extern "C" static void func_80BDC374();
// True False
extern "C" static void func_80BDC37C();
// True False
extern "C" static void func_80BDC384();
// True False
extern "C" static void func_80BDC38C();
// True False
extern "C" static void func_80BDC394();
extern "C" extern u32 const lit_4045;
extern "C" extern u32 const lit_4046;
extern "C" extern u32 const lit_4047;
extern "C" extern u32 const lit_4048;
extern "C" extern u32 const lit_4049;
extern "C" extern u32 const lit_4051;
extern "C" extern u32 const lit_4052;
extern "C" extern u32 const lit_4126;
extern "C" extern u32 const lit_4127;
extern "C" extern u32 const lit_4128[1 + 1 /* padding */];
extern "C" extern u32 const lit_4188;
extern "C" extern u32 const lit_4236;
extern "C" extern u32 const lit_4237;
extern "C" extern u32 const lit_4286;
extern "C" extern u32 const lit_4521;
extern "C" extern u32 const lit_4522;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_Dan[12];
extern "C" extern void* __vt__14dBgS_ObjGndChk[12];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__10daObjDAN_c[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__14daObj_DanHIO_c[3];

// 
// External References:
// 

// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
void mDoLib_project(Vec*, Vec*);
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
void mDoLib_pos2camera(Vec*, Vec*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setSimpleShadow(cXyz*, f32, f32, cBgS_PolyInfo&, s16, f32, _GXTexObj*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseAngleS(s16*, s16, s16);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void scaleM__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
extern "C" void mDoLib_project__FP3VecP3Vec();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
extern "C" void mDoLib_pos2camera__FP3VecP3Vec();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  s16 False
//  s16 False
//  u32* False
// 	 u32 False
extern "C" void newData__13dDlst_peekZ_cFssPUl();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void ClrMoveBGOnly__9dBgS_AcchFv();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitGObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
extern "C" void __ct__9dInsect_cFv();
// False False
extern "C" void Insect_GetDemoMain__9dInsect_cFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void initOffset__20daPy_boomerangMove_cFPC4cXyz();
// False False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
extern "C" void posMove__20daPy_boomerangMove_cFP4cXyzPsP10fopAc_ac_cs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  u8 False
extern "C" void isCatchNotGiveInsect__14dMenu_Insect_cFUc();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseAngleS__FPsss();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80BDC3B0-80BDC3B4 0004+00 s=9 e=0 z=0  None .rodata    @3775                                                        */
SECTION_RODATA static u32 const lit_3775 = 0x3F800000;

/* 80BDC47C-80BDC49C 0020+00 s=1 e=0 z=0  None .data      l_daObjDAN_Method                                            */
SECTION_DATA static void* l_daObjDAN_Method[8] = {
	(void*)daObjDAN_Create__FP10fopAc_ac_c,
	(void*)daObjDAN_Delete__FP10daObjDAN_c,
	(void*)daObjDAN_Execute__FP10daObjDAN_c,
	(void*)daObjDAN_IsDelete__FP10daObjDAN_c,
	(void*)daObjDAN_Draw__FP10daObjDAN_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80BDC49C-80BDC4CC 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Dan                                            */
SECTION_DATA void* g_profile_Obj_Dan[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01440000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000A6C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01E10000,
	(void*)&l_daObjDAN_Method,
	(void*)0x000C0120,
	(void*)0x030E0000,
};

/* 80BDC4CC-80BDC4FC 0030+00 s=2 e=0 z=0  None .data      __vt__14dBgS_ObjGndChk                                       */
SECTION_DATA void* __vt__14dBgS_ObjGndChk[12] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14dBgS_ObjGndChkFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BDC384,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BDC394,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BDC38C,
};

/* 80BDC4FC-80BDC520 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BDC37C,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BDC374,
};

/* 80BDC520-80BDC52C 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80BDC52C-80BDC538 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80BDC538-80BDC544 000C+00 s=1 e=0 z=0  None .data      __vt__10daObjDAN_c                                           */
SECTION_DATA void* __vt__10daObjDAN_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)Insect_Release__10daObjDAN_cFv,
};

/* 80BDC544-80BDC550 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80BDC550-80BDC55C 000C+00 s=2 e=0 z=0  None .data      __vt__14daObj_DanHIO_c                                       */
SECTION_DATA void* __vt__14daObj_DanHIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14daObj_DanHIO_cFv,
};

/* 80BDA58C-80BDA5B4 0028+00 s=1 e=0 z=0  None .text      __ct__14daObj_DanHIO_cFv                                     */
//	80BDA58C: 80BDC550 (__vt__14daObj_DanHIO_c)
//	80BDA590: 80BDC550 (__vt__14daObj_DanHIO_c)
//	80BDA5A0: 80BDC3B0 (lit_3775)
//	80BDA5A4: 80BDC3B0 (lit_3775)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_DanHIO_c::daObj_DanHIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/__ct__14daObj_DanHIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BDC3B4-80BDC3F4 0040+00 s=1 e=0 z=0  None .rodata    ccSphSrc$3779                                                */
SECTION_RODATA static u8 const ccSphSrc[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x40, 0x02, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 80BDA5B4-80BDA620 006C+00 s=1 e=0 z=0  None .text      InitCcSph__10daObjDAN_cFv                                    */
//	80BDA5D8: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80BDA5E0: 80BDC3B4 (ccSphSrc)
//	80BDA5E4: 80BDC3B4 (ccSphSrc)
//	80BDA5E8: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80BDA5FC: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::InitCcSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/InitCcSph__10daObjDAN_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BDC3F4-80BDC3F8 0004+00 s=1 e=0 z=0  None .rodata    @3788                                                        */
SECTION_RODATA static u32 const lit_3788 = 0x41A00000;

/* 80BDA620-80BDA678 0058+00 s=1 e=0 z=0  None .text      SetCcSph__10daObjDAN_cFv                                     */
//	80BDA63C: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80BDA644: 80BDC3F4 (lit_3788)
//	80BDA648: 80BDC3F4 (lit_3788)
//	80BDA64C: 8026F708 (SetR__8cM3dGSphFf)
//	80BDA650: 804061C0 (g_dComIfG_gameInfo)
//	80BDA654: 804061C0 (g_dComIfG_gameInfo)
//	80BDA660: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::SetCcSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/SetCcSph__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDA678-80BDA698 0020+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	80BDA684: 80BDA698 (CreateHeap__10daObjDAN_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BDC3F8-80BDC3FC 0004+00 s=1 e=0 z=0  None .rodata    @3923                                                        */
SECTION_RODATA static u32 const lit_3923 = 0x3DCCCCCD;

/* 80BDC3FC-80BDC400 0004+00 s=1 e=0 z=0  None .rodata    @3924                                                        */
SECTION_RODATA static u32 const lit_3924 = 0x41200000;

/* 80BDC400-80BDC404 0004+00 s=2 e=0 z=0  None .rodata    @3938                                                        */
SECTION_RODATA static u32 const lit_3938 = 0x42480000;

/* 80BDC404-80BDC408 0004+00 s=3 e=0 z=0  None .rodata    @3939                                                        */
SECTION_RODATA static u8 const lit_3939[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80BDC408-80BDC40C 0004+00 s=1 e=0 z=0  None .rodata    @3960                                                        */
SECTION_RODATA static u32 const lit_3960 = 0x44098000;

/* 80BDC40C-80BDC410 0004+00 s=0 e=0 z=0  None .rodata    @4045                                                        */
SECTION_RODATA u32 const lit_4045 = 0x3FC00000;

/* 80BDC410-80BDC414 0004+00 s=0 e=0 z=0  None .rodata    @4046                                                        */
SECTION_RODATA u32 const lit_4046 = 0x40A00000;

/* 80BDC414-80BDC418 0004+00 s=0 e=0 z=0  None .rodata    @4047                                                        */
SECTION_RODATA u32 const lit_4047 = 0xBF800000;

/* 80BDC418-80BDC41C 0004+00 s=0 e=0 z=0  None .rodata    @4048                                                        */
SECTION_RODATA u32 const lit_4048 = 0xC0400000;

/* 80BDC41C-80BDC420 0004+00 s=0 e=0 z=0  None .rodata    @4049                                                        */
SECTION_RODATA u32 const lit_4049 = 0x3F000000;

/* 80BDC420-80BDC424 0004+00 s=1 e=0 z=0  None .rodata    @4050                                                        */
SECTION_RODATA static u32 const lit_4050 = 0x41700000;

/* 80BDC424-80BDC428 0004+00 s=0 e=0 z=0  None .rodata    @4051                                                        */
SECTION_RODATA u32 const lit_4051 = 0xBF000000;

/* 80BDC428-80BDC42C 0004+00 s=0 e=0 z=0  None .rodata    @4052                                                        */
SECTION_RODATA u32 const lit_4052 = 0x40000000;

/* 80BDC42C-80BDC430 0002+02 s=1 e=0 z=0  None .rodata    l_dan_itemno                                                 */
SECTION_RODATA static u16 const l_dan_itemno[1 + 1 /* padding */] = {
	0xCACB,
	/* padding */
	0x0000,
};

/* 80BDC430-80BDC434 0004+00 s=0 e=0 z=0  None .rodata    @4126                                                        */
SECTION_RODATA u32 const lit_4126 = 0x44180000;

/* 80BDC434-80BDC438 0004+00 s=0 e=0 z=0  None .rodata    @4127                                                        */
SECTION_RODATA u32 const lit_4127 = 0x43E00000;

/* 80BDC438-80BDC440 0004+04 s=0 e=0 z=0  None .rodata    @4128                                                        */
SECTION_RODATA u32 const lit_4128[1 + 1 /* padding */] = {
	0x4B7FFFFF,
	/* padding */
	0x00000000,
};

/* 80BDC440-80BDC448 0008+00 s=1 e=0 z=0  None .rodata    @4158                                                        */
SECTION_RODATA static u8 const lit_4158[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDC448-80BDC44C 0004+00 s=0 e=0 z=0  None .rodata    @4188                                                        */
SECTION_RODATA u32 const lit_4188 = 0x42C80000;

/* 80BDC44C-80BDC450 0004+00 s=0 e=0 z=0  None .rodata    @4236                                                        */
SECTION_RODATA u32 const lit_4236 = 0x41F00000;

/* 80BDC450-80BDC454 0004+00 s=0 e=0 z=0  None .rodata    @4237                                                        */
SECTION_RODATA u32 const lit_4237 = 0x43160000;

/* 80BDC454-80BDC458 0004+00 s=0 e=0 z=0  None .rodata    @4286                                                        */
SECTION_RODATA u32 const lit_4286 = 0x461C4000;

/* 80BDC458-80BDC45C 0004+00 s=1 e=0 z=0  None .rodata    @4311                                                        */
SECTION_RODATA static u32 const lit_4311 = 0xC0800000;

/* 80BDC45C-80BDC460 0004+00 s=1 e=0 z=0  None .rodata    @4354                                                        */
SECTION_RODATA static u32 const lit_4354 = 0xBF19999A;

/* 80BDC460-80BDC464 0004+00 s=1 e=0 z=0  None .rodata    l_musiya_num                                                 */
SECTION_RODATA static u32 const l_musiya_num = 0x019B019C;

/* 80BDC464-80BDC468 0004+00 s=0 e=0 z=0  None .rodata    @4521                                                        */
SECTION_RODATA u32 const lit_4521 = 0xCE6E6B28;

/* 80BDC468-80BDC46C 0004+00 s=0 e=0 z=0  None .rodata    @4522                                                        */
SECTION_RODATA u32 const lit_4522 = 0xC2480000;

/* 80BDC46C-80BDC47A 000E+00 s=7 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80BDC46C = "I_Dan";
SECTION_DEAD char const* const stringBase_80BDC472 = "R_SP160";
#pragma pop

/* 80BDA698-80BDA9B0 0318+00 s=1 e=0 z=0  None .text      CreateHeap__10daObjDAN_cFv                                   */
//	80BDA6A8: 803621D8 (_savegpr_28)
//	80BDA6B0: 80BDC46C (stringBase0)
//	80BDA6B4: 80BDC46C (stringBase0)
//	80BDA6BC: 804061C0 (g_dComIfG_gameInfo)
//	80BDA6C0: 804061C0 (g_dComIfG_gameInfo)
//	80BDA6D4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDA6E0: 802CEC4C (__nw__FUl)
//	80BDA6EC: 80BDC46C (stringBase0)
//	80BDA6F0: 80BDC46C (stringBase0)
//	80BDA700: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDA738: 80BDC3B0 (lit_3775)
//	80BDA73C: 80BDC3B0 (lit_3775)
//	80BDA748: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80BDA778: 802CEC4C (__nw__FUl)
//	80BDA784: 80BDC544 (__vt__12J3DFrameCtrl)
//	80BDA788: 80BDC544 (__vt__12J3DFrameCtrl)
//	80BDA794: 803283FC (init__12J3DFrameCtrlFs)
//	80BDA7C4: 80BDC46C (stringBase0)
//	80BDA7C8: 80BDC46C (stringBase0)
//	80BDA7D8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDA7F4: 80BDC3B0 (lit_3775)
//	80BDA7F8: 80BDC3B0 (lit_3775)
//	80BDA804: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80BDA818: 80BDC46C (stringBase0)
//	80BDA81C: 80BDC46C (stringBase0)
//	80BDA82C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDA848: 80BDC3B0 (lit_3775)
//	80BDA84C: 80BDC3B0 (lit_3775)
//	80BDA858: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80BDA870: 802CEC4C (__nw__FUl)
//	80BDA87C: 80BDC544 (__vt__12J3DFrameCtrl)
//	80BDA880: 80BDC544 (__vt__12J3DFrameCtrl)
//	80BDA88C: 803283FC (init__12J3DFrameCtrlFs)
//	80BDA8BC: 80BDC46C (stringBase0)
//	80BDA8C0: 80BDC46C (stringBase0)
//	80BDA8D0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDA8EC: 80BDC3B0 (lit_3775)
//	80BDA8F0: 80BDC3B0 (lit_3775)
//	80BDA8FC: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80BDA914: 802CEC4C (__nw__FUl)
//	80BDA920: 80BDC544 (__vt__12J3DFrameCtrl)
//	80BDA924: 80BDC544 (__vt__12J3DFrameCtrl)
//	80BDA930: 803283FC (init__12J3DFrameCtrlFs)
//	80BDA940: 80BDC46C (stringBase0)
//	80BDA944: 80BDC46C (stringBase0)
//	80BDA954: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDA970: 80BDC3B0 (lit_3775)
//	80BDA974: 80BDC3B0 (lit_3775)
//	80BDA980: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80BDA99C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/CreateHeap__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDA9B0-80BDA9F8 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80BDA9C8: 80BDC544 (__vt__12J3DFrameCtrl)
//	80BDA9CC: 80BDC544 (__vt__12J3DFrameCtrl)
//	80BDA9DC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80BDA9F8-80BDAA18 0020+00 s=1 e=0 z=0  None .text      daObjDAN_Create__FP10fopAc_ac_c                              */
//	80BDAA04: 80BDBCB8 (create__10daObjDAN_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjDAN_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/daObjDAN_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80BDAA18-80BDAA3C 0024+00 s=1 e=0 z=0  None .text      daObjDAN_Delete__FP10daObjDAN_c                              */
//	80BDAA24: 80BDB928 (Delete__10daObjDAN_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjDAN_c* False
// 	 daObjDAN_c False
asm static void daObjDAN_Delete(daObjDAN_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/daObjDAN_Delete__FP10daObjDAN_c.s"
}
#pragma pop


/* 80BDAA3C-80BDAA9C 0060+00 s=2 e=0 z=0  None .text      SpeedSet__10daObjDAN_cFv                                     */
//	80BDAA58: 80BDC3F8 (lit_3923)
//	80BDAA5C: 80BDC3F8 (lit_3923)
//	80BDAA60: 80BDC3FC (lit_3924)
//	80BDAA64: 80BDC3FC (lit_3924)
//	80BDAA68: 8026FA3C (cLib_addCalc2__FPffff)
//	80BDAA7C: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::SpeedSet() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/SpeedSet__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDAA9C-80BDAB14 0078+00 s=1 e=0 z=0  None .text      LinkChk__10daObjDAN_cFv                                      */
//	80BDAAB4: 804061C0 (g_dComIfG_gameInfo)
//	80BDAAB8: 804061C0 (g_dComIfG_gameInfo)
//	80BDAAC4: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80BDAAC8: 80BDC400 (lit_3938)
//	80BDAACC: 80BDC400 (lit_3938)
//	80BDAADC: 80BDC404 (lit_3939)
//	80BDAAE0: 80BDC404 (lit_3939)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::LinkChk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/LinkChk__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDAB14-80BDAC10 00FC+00 s=2 e=0 z=0  None .text      MoveAction__10daObjDAN_cFv                                   */
//	80BDAB40: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80BDAB5C: 80BDC408 (lit_3960)
//	80BDAB60: 80BDC408 (lit_3960)
//	80BDAB64: 8026798C (cM_rndFX__Ff)
//	80BDAB74: 80BDC408 (lit_3960)
//	80BDAB78: 80BDC408 (lit_3960)
//	80BDAB7C: 8026798C (cM_rndFX__Ff)
//	80BDAB90: 80267674 (cM_atan2s__Fff)
//	80BDAB98: 80BDC400 (lit_3938)
//	80BDAB9C: 80BDC400 (lit_3938)
//	80BDABA0: 80267954 (cM_rndF__Ff)
//	80BDABA4: 80BDC400 (lit_3938)
//	80BDABA8: 80BDC400 (lit_3938)
//	80BDABC4: 80BDAA3C (SpeedSet__10daObjDAN_cFv)
//	80BDABCC: 80BDAA9C (LinkChk__10daObjDAN_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::MoveAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/MoveAction__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDAC10-80BDAFDC 03CC+00 s=2 e=0 z=0  None .text      DamageAction__10daObjDAN_cFv                                 */
//	80BDAC20: 803621D8 (_savegpr_28)
//	80BDAC28: 80BDC3B0 (lit_3775)
//	80BDAC2C: 80BDC3B0 (lit_3775)
//	80BDAC30: 804061C0 (g_dComIfG_gameInfo)
//	80BDAC34: 804061C0 (g_dComIfG_gameInfo)
//	80BDAC68: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80BDACC0: 80BDC46C (stringBase0)
//	80BDACC4: 80BDC46C (stringBase0)
//	80BDACCC: 804061C0 (g_dComIfG_gameInfo)
//	80BDACD0: 804061C0 (g_dComIfG_gameInfo)
//	80BDACE0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDAD00: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80BDADCC: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80BDAE78: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80BDAE90: 80BDC46C (stringBase0)
//	80BDAE94: 80BDC46C (stringBase0)
//	80BDAE9C: 804061C0 (g_dComIfG_gameInfo)
//	80BDAEA0: 804061C0 (g_dComIfG_gameInfo)
//	80BDAEB0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDAED0: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80BDAF24: 80270B90 (cLib_chaseAngleS__FPsss)
//	80BDAF78: 80BDC46C (stringBase0)
//	80BDAF7C: 80BDC46C (stringBase0)
//	80BDAF84: 804061C0 (g_dComIfG_gameInfo)
//	80BDAF88: 804061C0 (g_dComIfG_gameInfo)
//	80BDAF98: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDAFB8: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80BDAFC0: 80BDAA3C (SpeedSet__10daObjDAN_cFv)
//	80BDAFC8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::DamageAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/DamageAction__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDAFDC-80BDB074 0098+00 s=1 e=0 z=0  None .text      Action__10daObjDAN_cFv                                       */
//	80BDB048: 80BDAB14 (MoveAction__10daObjDAN_cFv)
//	80BDB054: 80BDAC10 (DamageAction__10daObjDAN_cFv)
//	80BDB05C: 8015E078 (Insect_GetDemoMain__9dInsect_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::Action() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/Action__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDB074-80BDB0D8 0064+00 s=1 e=0 z=0  None .text      checkGroundPos__10daObjDAN_cFv                               */
//	80BDB0A8: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80BDB0AC: 804061C0 (g_dComIfG_gameInfo)
//	80BDB0B0: 804061C0 (g_dComIfG_gameInfo)
//	80BDB0BC: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::checkGroundPos() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/checkGroundPos__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDB0D8-80BDB0E8 0010+00 s=1 e=0 z=0  None .text      Insect_Release__10daObjDAN_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::Insect_Release() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/Insect_Release__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDB0E8-80BDB264 017C+00 s=1 e=0 z=0  None .text      Z_BufferChk__10daObjDAN_cFv                                  */
//	80BDB110: 80BDC3B0 (lit_3775)
//	80BDB114: 80BDC3B0 (lit_3775)
//	80BDB144: 80015310 (mDoLib_project__FP3VecP3Vec)
//	80BDB148: 804061C0 (g_dComIfG_gameInfo)
//	80BDB14C: 804061C0 (g_dComIfG_gameInfo)
//	80BDB1A0: 804061C0 (g_dComIfG_gameInfo)
//	80BDB1A4: 804061C0 (g_dComIfG_gameInfo)
//	80BDB1CC: 80056018 (newData__13dDlst_peekZ_cFssPUl)
//	80BDB1D0: 804061C0 (g_dComIfG_gameInfo)
//	80BDB1D4: 804061C0 (g_dComIfG_gameInfo)
//	80BDB1EC: 800154EC (mDoLib_pos2camera__FP3VecP3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::Z_BufferChk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/Z_BufferChk__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDB264-80BDB388 0124+00 s=1 e=0 z=0  None .text      ParticleSet__10daObjDAN_cFv                                  */
//	80BDB28C: 80BDC440 (lit_4158)
//	80BDB290: 80BDC440 (lit_4158)
//	80BDB2B4: 80BDC404 (lit_3939)
//	80BDB2B8: 80BDC404 (lit_3939)
//	80BDB2BC: 80BDC3B0 (lit_3775)
//	80BDB2C0: 80BDC3B0 (lit_3775)
//	80BDB2C8: 8026FA3C (cLib_addCalc2__FPffff)
//	80BDB2D4: 80BDC3B0 (lit_3775)
//	80BDB2D8: 80BDC3B0 (lit_3775)
//	80BDB2E4: 8026FA3C (cLib_addCalc2__FPffff)
//	80BDB2E8: 804061C0 (g_dComIfG_gameInfo)
//	80BDB2EC: 804061C0 (g_dComIfG_gameInfo)
//	80BDB334: 80BDC3B0 (lit_3775)
//	80BDB338: 80BDC3B0 (lit_3775)
//	80BDB33C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80BDB354: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::ParticleSet() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/ParticleSet__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDB388-80BDB4E0 0158+00 s=1 e=0 z=0  None .text      ObjHit__10daObjDAN_cFv                                       */
//	80BDB3A0: 80BDC3B0 (lit_3775)
//	80BDB3A4: 80BDC3B0 (lit_3775)
//	80BDB3AC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80BDB3BC: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80BDB3E4: 800773A4 (ClrMoveBGOnly__9dBgS_AcchFv)
//	80BDB3F8: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80BDB404: 8015E5B0 (initOffset__20daPy_boomerangMove_cFPC4cXyz)
//	80BDB424: 804061C0 (g_dComIfG_gameInfo)
//	80BDB428: 804061C0 (g_dComIfG_gameInfo)
//	80BDB468: 80BDC46C (stringBase0)
//	80BDB46C: 80BDC46C (stringBase0)
//	80BDB474: 804061C0 (g_dComIfG_gameInfo)
//	80BDB478: 804061C0 (g_dComIfG_gameInfo)
//	80BDB488: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDB4A8: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::ObjHit() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/ObjHit__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDB4E0-80BDB62C 014C+00 s=1 e=0 z=0  None .text      BoomChk__10daObjDAN_cFv                                      */
//	80BDB4F0: 803621DC (_savegpr_29)
//	80BDB4F8: 80BDC3B0 (lit_3775)
//	80BDB4FC: 80BDC3B0 (lit_3775)
//	80BDB500: 804061C0 (g_dComIfG_gameInfo)
//	80BDB504: 804061C0 (g_dComIfG_gameInfo)
//	80BDB52C: 8015E654 (posMove__20daPy_boomerangMove_cFP4cXyzPsP10fopAc_ac_cs)
//	80BDB548: 8015E87C (bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz)
//	80BDB590: 8015E87C (bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz)
//	80BDB5A4: 80BDC46C (stringBase0)
//	80BDB5A8: 80BDC46C (stringBase0)
//	80BDB5B0: 804061C0 (g_dComIfG_gameInfo)
//	80BDB5B4: 804061C0 (g_dComIfG_gameInfo)
//	80BDB5C4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDB5E4: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80BDB618: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::BoomChk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/BoomChk__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDB62C-80BDB928 02FC+00 s=1 e=0 z=0  None .text      Execute__10daObjDAN_cFv                                      */
//	80BDB644: 80BDC3B0 (lit_3775)
//	80BDB648: 80BDC3B0 (lit_3775)
//	80BDB6B0: 8015E078 (Insect_GetDemoMain__9dInsect_cFv)
//	80BDB6B8: 80BDB264 (ParticleSet__10daObjDAN_cFv)
//	80BDB6C4: 80BDB074 (checkGroundPos__10daObjDAN_cFv)
//	80BDB734: 80BDAFDC (Action__10daObjDAN_cFv)
//	80BDB75C: 804061C0 (g_dComIfG_gameInfo)
//	80BDB760: 804061C0 (g_dComIfG_gameInfo)
//	80BDB7AC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80BDB7B8: 80BDB388 (ObjHit__10daObjDAN_cFv)
//	80BDB7C0: 80BDB4E0 (BoomChk__10daObjDAN_cFv)
//	80BDB814: 80BDA620 (SetCcSph__10daObjDAN_cFv)
//	80BDB81C: 80BDB264 (ParticleSet__10daObjDAN_cFv)
//	80BDB87C: 80BDAB14 (MoveAction__10daObjDAN_cFv)
//	80BDB888: 80BDAC10 (DamageAction__10daObjDAN_cFv)
//	80BDB8C0: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	80BDB8C8: 804061C0 (g_dComIfG_gameInfo)
//	80BDB8CC: 804061C0 (g_dComIfG_gameInfo)
//	80BDB8D4: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80BDB8E0: 8002D06C (dComIfGp_getReverb__Fi)
//	80BDB8F0: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	80BDB8F8: 8000D428 (play__14mDoExt_baseAnmFv)
//	80BDB900: 8000D428 (play__14mDoExt_baseAnmFv)
//	80BDB908: 80BDB990 (setBaseMtx__10daObjDAN_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::Execute() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/Execute__10daObjDAN_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BDC568-80BDC56C 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_80BDC568[4];

/* 80BDB928-80BDB990 0068+00 s=1 e=0 z=0  None .text      Delete__10daObjDAN_cFv                                       */
//	80BDB940: 80BDC46C (stringBase0)
//	80BDB944: 80BDC46C (stringBase0)
//	80BDB948: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80BDB95C: 80BDC568 (data_80BDC568)
//	80BDB960: 80BDC568 (data_80BDC568)
//	80BDB974: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/Delete__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDB990-80BDBA0C 007C+00 s=1 e=0 z=0  None .text      setBaseMtx__10daObjDAN_cFv                                   */
//	80BDB9A4: 80BDC404 (lit_3939)
//	80BDB9A8: 80BDC404 (lit_3939)
//	80BDB9B0: 80BDC458 (lit_4311)
//	80BDB9B4: 80BDC458 (lit_4311)
//	80BDB9C4: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BDB9CC: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80BDB9D4: 8000CE70 (scaleM__14mDoMtx_stack_cFRC4cXyz)
//	80BDB9E0: 803DD470 (now__14mDoMtx_stack_c)
//	80BDB9E4: 803DD470 (now__14mDoMtx_stack_c)
//	80BDB9EC: 803464B0 (PSMTXCopy)
//	80BDB9F4: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/setBaseMtx__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDBA0C-80BDBAEC 00E0+00 s=1 e=0 z=0  None .text      daObjDAN_Draw__FP10daObjDAN_c                                */
//	80BDBA30: 80BDB0E8 (Z_BufferChk__10daObjDAN_cFv)
//	80BDBA3C: 8042CA54 (g_env_light)
//	80BDBA40: 8042CA54 (g_env_light)
//	80BDBA50: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80BDBA54: 8042CA54 (g_env_light)
//	80BDBA58: 8042CA54 (g_env_light)
//	80BDBA64: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80BDBA78: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80BDBA8C: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	80BDBA94: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	80BDBAAC: 80BDC420 (lit_4050)
//	80BDBAB0: 80BDC420 (lit_4050)
//	80BDBABC: 80BDC45C (lit_4354)
//	80BDBAC0: 80BDC45C (lit_4354)
//	80BDBAC4: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80BDBAC8: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80BDBACC: 8002D0B4 (dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjDAN_c* False
// 	 daObjDAN_c False
asm static void daObjDAN_Draw(daObjDAN_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/daObjDAN_Draw__FP10daObjDAN_c.s"
}
#pragma pop


/* 80BDBAEC-80BDBB0C 0020+00 s=2 e=0 z=0  None .text      daObjDAN_Execute__FP10daObjDAN_c                             */
//	80BDBAF8: 80BDB62C (Execute__10daObjDAN_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjDAN_c* False
// 	 daObjDAN_c False
asm static void daObjDAN_Execute(daObjDAN_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/daObjDAN_Execute__FP10daObjDAN_c.s"
}
#pragma pop


/* 80BDBB0C-80BDBCB8 01AC+00 s=1 e=0 z=0  None .text      CreateChk__10daObjDAN_cFv                                    */
//	80BDBB4C: 804061C0 (g_dComIfG_gameInfo)
//	80BDBB50: 804061C0 (g_dComIfG_gameInfo)
//	80BDBB5C: 80BDC460 (l_musiya_num)
//	80BDBB60: 80BDC460 (l_musiya_num)
//	80BDBB68: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80BDBB6C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80BDBB74: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80BDBB84: 80BDC460 (l_musiya_num)
//	80BDBB88: 80BDC460 (l_musiya_num)
//	80BDBB94: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80BDBB98: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80BDBBA0: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80BDBBB4: 80BDC46C (stringBase0)
//	80BDBBB8: 80BDC46C (stringBase0)
//	80BDBBC0: 804061C0 (g_dComIfG_gameInfo)
//	80BDBBC4: 804061C0 (g_dComIfG_gameInfo)
//	80BDBBCC: 80368994 (strcmp)
//	80BDBBD8: 804061C0 (g_dComIfG_gameInfo)
//	80BDBBDC: 804061C0 (g_dComIfG_gameInfo)
//	80BDBBF0: 80BDC42C (l_dan_itemno)
//	80BDBBF4: 80BDC42C (l_dan_itemno)
//	80BDBBFC: 801D9F3C (isCatchNotGiveInsect__14dMenu_Insect_cFUc)
//	80BDBC1C: 804061C0 (g_dComIfG_gameInfo)
//	80BDBC20: 804061C0 (g_dComIfG_gameInfo)
//	80BDBC2C: 80BDC460 (l_musiya_num)
//	80BDBC30: 80BDC460 (l_musiya_num)
//	80BDBC3C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80BDBC40: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80BDBC48: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80BDBC60: 804061C0 (g_dComIfG_gameInfo)
//	80BDBC64: 804061C0 (g_dComIfG_gameInfo)
//	80BDBC70: 80BDC460 (l_musiya_num)
//	80BDBC74: 80BDC460 (l_musiya_num)
//	80BDBC80: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80BDBC84: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80BDBC8C: 800349BC (isEventBit__11dSv_event_cCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::CreateChk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/CreateChk__10daObjDAN_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BDC56C-80BDC578 000C+00 s=1 e=0 z=0  None .bss       @3770                                                        */
static u8 lit_3770[12];

/* 80BDC578-80BDC588 0010+00 s=2 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[16];

/* 80BDBCB8-80BDC170 04B8+00 s=1 e=0 z=0  None .text      create__10daObjDAN_cFv                                       */
//	80BDBCC8: 803621CC (_savegpr_25)
//	80BDBCD0: 80BDC3B0 (lit_3775)
//	80BDBCD4: 80BDC3B0 (lit_3775)
//	80BDBCF0: 8015E010 (__ct__9dInsect_cFv)
//	80BDBCF4: 80BDC538 (__vt__10daObjDAN_c)
//	80BDBCF8: 80BDC538 (__vt__10daObjDAN_c)
//	80BDBD00: 803C3728 (__vt__9cCcD_Stts)
//	80BDBD04: 803C3728 (__vt__9cCcD_Stts)
//	80BDBD10: 80083760 (__ct__10dCcD_GSttsFv)
//	80BDBD14: 803AC2E4 (__vt__9dCcD_Stts)
//	80BDBD18: 803AC2E4 (__vt__9dCcD_Stts)
//	80BDBD30: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80BDBD34: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BDBD38: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BDBD40: 80BDC52C (__vt__8cM3dGAab)
//	80BDBD44: 80BDC52C (__vt__8cM3dGAab)
//	80BDBD4C: 80BDC520 (__vt__8cM3dGSph)
//	80BDBD50: 80BDC520 (__vt__8cM3dGSph)
//	80BDBD58: 803C3540 (__vt__12cCcD_SphAttr)
//	80BDBD5C: 803C3540 (__vt__12cCcD_SphAttr)
//	80BDBD6C: 803ABFC0 (__vt__8dCcD_Sph)
//	80BDBD70: 803ABFC0 (__vt__8dCcD_Sph)
//	80BDBD8C: 8007757C (__ct__11dBgS_GndChkFv)
//	80BDBD94: 802C03C8 (__ct__10Z2CreatureFv)
//	80BDBD9C: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80BDBDA8: 800760A0 (__ct__9dBgS_AcchFv)
//	80BDBDAC: 80BDC4FC (__vt__12dBgS_ObjAcch)
//	80BDBDB0: 80BDC4FC (__vt__12dBgS_ObjAcch)
//	80BDBDCC: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80BDBDE0: 80BDC46C (stringBase0)
//	80BDBDE4: 80BDC46C (stringBase0)
//	80BDBDE8: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80BDBE80: 80BDC578 (l_HIO)
//	80BDBE84: 80BDC578 (l_HIO)
//	80BDBEA4: 80BDC578 (l_HIO)
//	80BDBEA8: 80BDC578 (l_HIO)
//	80BDBEC0: 80BDBB0C (CreateChk__10daObjDAN_cFv)
//	80BDBED8: 80BDA678 (useHeapInit__FP10fopAc_ac_c)
//	80BDBEDC: 80BDA678 (useHeapInit__FP10fopAc_ac_c)
//	80BDBEE4: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80BDBEF8: 80BDC568 (data_80BDC568)
//	80BDBEFC: 80BDC568 (data_80BDC568)
//	80BDBF18: 80BDC578 (l_HIO)
//	80BDBF1C: 80BDC578 (l_HIO)
//	80BDBF30: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80BDBF5C: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80BDBF88: 80BDA5B4 (InitCcSph__10daObjDAN_cFv)
//	80BDBF98: 80BDC46C (stringBase0)
//	80BDBF9C: 80BDC46C (stringBase0)
//	80BDBFA4: 804061C0 (g_dComIfG_gameInfo)
//	80BDBFA8: 804061C0 (g_dComIfG_gameInfo)
//	80BDBFB0: 80368994 (strcmp)
//	80BDBFBC: 804061C0 (g_dComIfG_gameInfo)
//	80BDBFC0: 804061C0 (g_dComIfG_gameInfo)
//	80BDBFF4: 80BDC46C (stringBase0)
//	80BDBFF8: 80BDC46C (stringBase0)
//	80BDC00C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BDC02C: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80BDC04C: 8007757C (__ct__11dBgS_GndChkFv)
//	80BDC050: 80BDC4CC (__vt__14dBgS_ObjGndChk)
//	80BDC054: 80BDC4CC (__vt__14dBgS_ObjGndChk)
//	80BDC078: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80BDC0A8: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80BDC0AC: 804061C0 (g_dComIfG_gameInfo)
//	80BDC0B0: 804061C0 (g_dComIfG_gameInfo)
//	80BDC0BC: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80BDC0F8: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	80BDC10C: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	80BDC124: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80BDC12C: 80BDBAEC (daObjDAN_Execute__FP10daObjDAN_c)
//	80BDC130: 80BDC4CC (__vt__14dBgS_ObjGndChk)
//	80BDC134: 80BDC4CC (__vt__14dBgS_ObjGndChk)
//	80BDC150: 800775F0 (__dt__11dBgS_GndChkFv)
//	80BDC15C: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDAN_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/create__10daObjDAN_cFv.s"
}
#pragma pop


/* 80BDC170-80BDC1E8 0078+00 s=4 e=0 z=0  None .text      __dt__14dBgS_ObjGndChkFv                                     */
//	80BDC190: 80BDC4CC (__vt__14dBgS_ObjGndChk)
//	80BDC194: 80BDC4CC (__vt__14dBgS_ObjGndChk)
//	80BDC1B8: 800775F0 (__dt__11dBgS_GndChkFv)
//	80BDC1C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjGndChk::~dBgS_ObjGndChk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/__dt__14dBgS_ObjGndChkFv.s"
}
#pragma pop


/* 80BDC1E8-80BDC258 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80BDC208: 80BDC4FC (__vt__12dBgS_ObjAcch)
//	80BDC20C: 80BDC4FC (__vt__12dBgS_ObjAcch)
//	80BDC228: 80075F94 (__dt__9dBgS_AcchFv)
//	80BDC238: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80BDC258-80BDC2A0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80BDC270: 80BDC520 (__vt__8cM3dGSph)
//	80BDC274: 80BDC520 (__vt__8cM3dGSph)
//	80BDC284: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80BDC2A0-80BDC2E8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80BDC2B8: 80BDC52C (__vt__8cM3dGAab)
//	80BDC2BC: 80BDC52C (__vt__8cM3dGAab)
//	80BDC2CC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80BDC2E8-80BDC2F0 0008+00 s=1 e=0 z=0  None .text      daObjDAN_IsDelete__FP10daObjDAN_c                            */
// True False
//  bool False
//  daObjDAN_c* False
// 	 daObjDAN_c False
static bool daObjDAN_IsDelete(daObjDAN_c* param_0) {
	return true;
}


/* 80BDC2F0-80BDC338 0048+00 s=2 e=0 z=0  None .text      __dt__14daObj_DanHIO_cFv                                     */
//	80BDC308: 80BDC550 (__vt__14daObj_DanHIO_c)
//	80BDC30C: 80BDC550 (__vt__14daObj_DanHIO_c)
//	80BDC31C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_DanHIO_c::~daObj_DanHIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/__dt__14daObj_DanHIO_cFv.s"
}
#pragma pop


/* 80BDC338-80BDC374 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_dan_cpp                                      */
//	80BDC344: 80BDC578 (l_HIO)
//	80BDC348: 80BDC578 (l_HIO)
//	80BDC34C: 80BDA58C (__ct__14daObj_DanHIO_cFv)
//	80BDC350: 80BDC2F0 (__dt__14daObj_DanHIO_cFv)
//	80BDC354: 80BDC2F0 (__dt__14daObj_DanHIO_cFv)
//	80BDC358: 80BDC56C (lit_3770)
//	80BDC35C: 80BDC56C (lit_3770)
//	80BDC360: 80BDA518 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_dan_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/__sinit_d_a_obj_dan_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80BDC338 = (void*)__sinit_d_a_obj_dan_cpp;
#pragma pop


/* 80BDC374-80BDC37C 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80BDC378: 80BDC1E8 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BDC374() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/func_80BDC374.s"
}
#pragma pop


/* 80BDC37C-80BDC384 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80BDC380: 80BDC1E8 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BDC37C() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/func_80BDC37C.s"
}
#pragma pop


/* 80BDC384-80BDC38C 0008+00 s=1 e=0 z=0  None .text      @20@__dt__14dBgS_ObjGndChkFv                                 */
//	80BDC388: 80BDC170 (__dt__14dBgS_ObjGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BDC384() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/func_80BDC384.s"
}
#pragma pop


/* 80BDC38C-80BDC394 0008+00 s=1 e=0 z=0  None .text      @76@__dt__14dBgS_ObjGndChkFv                                 */
//	80BDC390: 80BDC170 (__dt__14dBgS_ObjGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BDC38C() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/func_80BDC38C.s"
}
#pragma pop


/* 80BDC394-80BDC39C 0008+00 s=1 e=0 z=0  None .text      @60@__dt__14dBgS_ObjGndChkFv                                 */
//	80BDC398: 80BDC170 (__dt__14dBgS_ObjGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BDC394() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dan/d_a_obj_dan/func_80BDC394.s"
}
#pragma pop


