// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_rfHole
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoHIO_entry_c {
	/* 80CB8EBC */ // True False
~mDoHIO_entry_c();
};

struct fopAc_ac_c {
};

struct dBgW {
};

struct daRfHole_c {
	/* 80CB8F04 */ // True False
void setBaseMtx();
	/* 80CB8F8C */ // True False
void CreateHeap();
	/* 80CB8FF8 */ // True False
void create();
	/* 80CB9148 */ // True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void rideCallBack(dBgW*, fopAc_ac_c*, fopAc_ac_c*);
	/* 80CB9194 */ // True False
void playerAreaCheck();
	/* 80CB940C */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80CB9464 */ // True False
void holeProc();
	/* 80CB9520 */ // True False
void init_modeWait();
	/* 80CB952C */ // True False
void modeWait();
	/* 80CB9558 */ // True False
void init_modeBreak();
	/* 80CB96AC */ // True False
void modeBreak();
	/* 80CB96CC */ // True False
void init_modeBreakEff();
	/* 80CB971C */ // True False
void modeBreakEff();
	/* 80CB973C */ // True False
void init_modeEnd();
	/* 80CB9748 */ // True False
void modeEnd();
	/* 80CB9768 */ // True False
void setBreakEffect();
	/* 80CB9878 */ // True False
void Draw();
	/* 80CB991C */ // True False
void Delete();
};

struct daRfHole_HIO_c {
	/* 80CB8E6C */ // True False
daRfHole_HIO_c();
	/* 80CB99D8 */ // True False
~daRfHole_HIO_c();
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 80078690 */ // False False
//  bool False
bool Create();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  daRfHole_c* False
// 	 daRfHole_c False
static void daRfHole_Draw(daRfHole_c*);
// True False
//  daRfHole_c* False
// 	 daRfHole_c False
static void daRfHole_Execute(daRfHole_c*);
// True False
//  daRfHole_c* False
// 	 daRfHole_c False
static void daRfHole_Delete(daRfHole_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daRfHole_Create(fopAc_ac_c*);

// True False
extern "C" void __ct__14daRfHole_HIO_cFv();
// True False
extern "C" void __dt__14mDoHIO_entry_cFv();
// True False
extern "C" void setBaseMtx__10daRfHole_cFv();
// True False
extern "C" void CreateHeap__10daRfHole_cFv();
// True False
extern "C" void create__10daRfHole_cFv();
// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void rideCallBack__10daRfHole_cFP4dBgWP10fopAc_ac_cP10fopAc_ac_c();
// True False
extern "C" void playerAreaCheck__10daRfHole_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__10daRfHole_cFPPA3_A4_f();
// True False
extern "C" void holeProc__10daRfHole_cFv();
// True False
extern "C" void init_modeWait__10daRfHole_cFv();
// True False
extern "C" void modeWait__10daRfHole_cFv();
// True False
extern "C" void init_modeBreak__10daRfHole_cFv();
// True False
extern "C" void modeBreak__10daRfHole_cFv();
// True False
extern "C" void init_modeBreakEff__10daRfHole_cFv();
// True False
extern "C" void modeBreakEff__10daRfHole_cFv();
// True False
extern "C" void init_modeEnd__10daRfHole_cFv();
// True False
extern "C" void modeEnd__10daRfHole_cFv();
// True False
extern "C" void setBreakEffect__10daRfHole_cFv();
// True False
extern "C" void Draw__10daRfHole_cFv();
// True False
extern "C" void Delete__10daRfHole_cFv();
// True False
//  daRfHole_c* False
// 	 daRfHole_c False
extern "C" static void daRfHole_Draw__FP10daRfHole_c();
// True False
//  daRfHole_c* False
// 	 daRfHole_c False
extern "C" static void daRfHole_Execute__FP10daRfHole_c();
// True False
//  daRfHole_c* False
// 	 daRfHole_c False
extern "C" static void daRfHole_Delete__FP10daRfHole_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daRfHole_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__14daRfHole_HIO_cFv();
// False False
extern "C" void __sinit_d_a_obj_rfHole_cpp();
extern "C" extern u32 const lit_3650;
extern "C" extern u8 const lit_3651[4 + 4 /* padding */];
extern "C" extern u8 const lit_3817[8];
extern "C" extern u8 const lit_3818[8];
extern "C" extern u8 const lit_3819[8];
extern "C" extern u32 const lit_3820;
extern "C" extern u32 const lit_3821;
extern "C" extern u8 const data_80CB9AB4[10 + 2 /* padding */];
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_3835[3];
extern "C" extern void* lit_3836[3];
extern "C" extern void* lit_3837[3];
extern "C" extern void* lit_3838[3];
extern "C" extern u8 data_80CB9B1C[48];
extern "C" extern void* g_profile_Obj_RfHole[12];
extern "C" extern void* __vt__10daRfHole_c[10];
extern "C" extern void* __vt__14daRfHole_HIO_c[3];
extern "C" extern void* __vt__14mDoHIO_entry_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotS(f32 (* )[4], s16, s16, s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotS__FPA4_fsss();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool Create__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80CB9A84-80CB9A88 0004+00 s=4 e=0 z=0  None .rodata    @3649                                                        */
SECTION_RODATA static u32 const lit_3649 = 0x43020000;

/* 80CB9ACC-80CB9AD8 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CB9AD8-80CB9AEC 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80CB9AEC-80CB9AF8 000C+00 s=0 e=0 z=0  None .data      @3835                                                        */
SECTION_DATA void* lit_3835[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeWait__10daRfHole_cFv,
};

/* 80CB9AF8-80CB9B04 000C+00 s=0 e=0 z=0  None .data      @3836                                                        */
SECTION_DATA void* lit_3836[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeBreak__10daRfHole_cFv,
};

/* 80CB9B04-80CB9B10 000C+00 s=0 e=0 z=0  None .data      @3837                                                        */
SECTION_DATA void* lit_3837[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeBreakEff__10daRfHole_cFv,
};

/* 80CB9B10-80CB9B1C 000C+00 s=0 e=0 z=0  None .data      @3838                                                        */
SECTION_DATA void* lit_3838[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeEnd__10daRfHole_cFv,
};

/* 80CB9B1C-80CB9B4C 0030+00 s=0 e=0 z=0  None .data      mode_proc$3834                                               */
SECTION_DATA u8 data_80CB9B1C[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CB9B4C-80CB9B6C 0020+00 s=1 e=0 z=0  None .data      l_daRfHole_Method                                            */
SECTION_DATA static void* l_daRfHole_Method[8] = {
	(void*)daRfHole_Create__FP10fopAc_ac_c,
	(void*)daRfHole_Delete__FP10daRfHole_c,
	(void*)daRfHole_Execute__FP10daRfHole_c,
	(void*)NULL,
	(void*)daRfHole_Draw__FP10daRfHole_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80CB9B6C-80CB9B9C 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_RfHole                                         */
SECTION_DATA void* g_profile_Obj_RfHole[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00430000,
	(void*)&g_fpcLf_Method,
	(void*)0x000005B4,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02020000,
	(void*)&l_daRfHole_Method,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80CB9B9C-80CB9BC4 0028+00 s=1 e=0 z=0  None .data      __vt__10daRfHole_c                                           */
SECTION_DATA void* __vt__10daRfHole_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__10daRfHole_cFv,
	(void*)Create__16dBgS_MoveBgActorFv,
	(void*)Execute__10daRfHole_cFPPA3_A4_f,
	(void*)Draw__10daRfHole_cFv,
	(void*)Delete__10daRfHole_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80CB9BC4-80CB9BD0 000C+00 s=2 e=0 z=0  None .data      __vt__14daRfHole_HIO_c                                       */
SECTION_DATA void* __vt__14daRfHole_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14daRfHole_HIO_cFv,
};

/* 80CB9BD0-80CB9BDC 000C+00 s=3 e=0 z=0  None .data      __vt__14mDoHIO_entry_c                                       */
SECTION_DATA void* __vt__14mDoHIO_entry_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14mDoHIO_entry_cFv,
};

/* 80CB8E6C-80CB8EBC 0050+00 s=1 e=0 z=0  None .text      __ct__14daRfHole_HIO_cFv                                     */
//	80CB8E6C: 80CB9A84 (lit_3649)
//	80CB8E70: 80CB9A84 (lit_3649)
//	80CB8E74: 80CB9BD0 (__vt__14mDoHIO_entry_c)
//	80CB8E78: 80CB9BD0 (__vt__14mDoHIO_entry_c)
//	80CB8E80: 80CB9BC4 (__vt__14daRfHole_HIO_c)
//	80CB8E84: 80CB9BC4 (__vt__14daRfHole_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daRfHole_HIO_c::daRfHole_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/__ct__14daRfHole_HIO_cFv.s"
}
#pragma pop


/* 80CB8EBC-80CB8F04 0048+00 s=1 e=0 z=0  None .text      __dt__14mDoHIO_entry_cFv                                     */
//	80CB8ED4: 80CB9BD0 (__vt__14mDoHIO_entry_c)
//	80CB8ED8: 80CB9BD0 (__vt__14mDoHIO_entry_c)
//	80CB8EE8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm mDoHIO_entry_c::~mDoHIO_entry_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/__dt__14mDoHIO_entry_cFv.s"
}
#pragma pop


/* 80CB8F04-80CB8F8C 0088+00 s=2 e=0 z=0  None .text      setBaseMtx__10daRfHole_cFv                                   */
//	80CB8F18: 803DD470 (now__14mDoMtx_stack_c)
//	80CB8F1C: 803DD470 (now__14mDoMtx_stack_c)
//	80CB8F2C: 803468E8 (PSMTXTrans)
//	80CB8F30: 803DD470 (now__14mDoMtx_stack_c)
//	80CB8F34: 803DD470 (now__14mDoMtx_stack_c)
//	80CB8F44: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80CB8F64: 803DD470 (now__14mDoMtx_stack_c)
//	80CB8F68: 803DD470 (now__14mDoMtx_stack_c)
//	80CB8F74: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/setBaseMtx__10daRfHole_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CB9A88-80CB9A8C 0004+00 s=0 e=0 z=0  None .rodata    @3650                                                        */
SECTION_RODATA u32 const lit_3650 = 0x43480000;

/* 80CB9A8C-80CB9A94 0004+04 s=0 e=0 z=0  None .rodata    @3651                                                        */
SECTION_RODATA u8 const lit_3651[4 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 80CB9A94-80CB9A9C 0008+00 s=0 e=0 z=0  None .rodata    @3817                                                        */
SECTION_RODATA u8 const lit_3817[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CB9A9C-80CB9AA4 0008+00 s=0 e=0 z=0  None .rodata    @3818                                                        */
SECTION_RODATA u8 const lit_3818[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CB9AA4-80CB9AAC 0008+00 s=0 e=0 z=0  None .rodata    @3819                                                        */
SECTION_RODATA u8 const lit_3819[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CB9AAC-80CB9AB0 0004+00 s=0 e=0 z=0  None .rodata    @3820                                                        */
SECTION_RODATA u32 const lit_3820 = 0x3F800000;

/* 80CB9AB0-80CB9AB4 0004+00 s=0 e=0 z=0  None .rodata    @3821                                                        */
SECTION_RODATA u32 const lit_3821 = 0xBF800000;

/* 80CB9AB4-80CB9AC0 000A+02 s=0 e=0 z=0  None .rodata    particle_id$3917                                             */
SECTION_RODATA u8 const data_80CB9AB4[10 + 2 /* padding */] = {
	0x83, 0xB0, 0x83, 0xB1, 0x83, 0xB2, 0x83, 0xB3, 0x83, 0xB4,
	/* padding */
	0x00, 0x00,
};

/* 80CB9AC0-80CB9AC9 0009+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80CB9AC0 = "Otosiana";
#pragma pop

/* 80CB8F8C-80CB8FF8 006C+00 s=1 e=0 z=0  None .text      CreateHeap__10daRfHole_cFv                                   */
//	80CB8FA0: 80CB9AC0 (stringBase0)
//	80CB8FA4: 80CB9AC0 (stringBase0)
//	80CB8FAC: 804061C0 (g_dComIfG_gameInfo)
//	80CB8FB0: 804061C0 (g_dComIfG_gameInfo)
//	80CB8FC0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CB8FD0: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/CreateHeap__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB8FF8-80CB9148 0150+00 s=1 e=0 z=0  None .text      create__10daRfHole_cFv                                       */
//	80CB9024: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80CB9028: 80CB9B9C (__vt__10daRfHole_c)
//	80CB902C: 80CB9B9C (__vt__10daRfHole_c)
//	80CB9044: 80CB9AC0 (stringBase0)
//	80CB9048: 80CB9AC0 (stringBase0)
//	80CB904C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80CB9060: 80CB9AC0 (stringBase0)
//	80CB9064: 80CB9AC0 (stringBase0)
//	80CB906C: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80CB9070: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80CB907C: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80CB90A8: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80CB90AC: 804061C0 (g_dComIfG_gameInfo)
//	80CB90B0: 804061C0 (g_dComIfG_gameInfo)
//	80CB90C4: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CB90D4: 80CB973C (init_modeEnd__10daRfHole_cFv)
//	80CB90F4: 80CB9148 (rideCallBack__10daRfHole_cFP4dBgWP10fopAc_ac_cP10fopAc_ac_c)
//	80CB90F8: 80CB9148 (rideCallBack__10daRfHole_cFP4dBgWP10fopAc_ac_cP10fopAc_ac_c)
//	80CB9108: 80CB9520 (init_modeWait__10daRfHole_cFv)
//	80CB9114: 80CB96CC (init_modeBreakEff__10daRfHole_cFv)
//	80CB9128: 80CB8F04 (setBaseMtx__10daRfHole_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/create__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB9148-80CB9194 004C+00 s=1 e=0 z=0  None .text      rideCallBack__10daRfHole_cFP4dBgWP10fopAc_ac_cP10fopAc_ac_c  */
//	80CB916C: 80CB9194 (playerAreaCheck__10daRfHole_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daRfHole_c::rideCallBack(dBgW* param_0, fopAc_ac_c* param_1, fopAc_ac_c* param_2) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/rideCallBack__10daRfHole_cFP4dBgWP10fopAc_ac_cP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CB9BE8-80CB9BF4 000C+00 s=1 e=0 z=0  None .bss       @3643                                                        */
static u8 lit_3643[12];

/* 80CB9BF4-80CB9C0C 0018+00 s=4 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[24];

/* 80CB9194-80CB940C 0278+00 s=1 e=0 z=0  None .text      playerAreaCheck__10daRfHole_cFv                              */
//	80CB91A4: 803621D8 (_savegpr_28)
//	80CB91AC: 80CB9A84 (lit_3649)
//	80CB91B0: 80CB9A84 (lit_3649)
//	80CB91B4: 804061C0 (g_dComIfG_gameInfo)
//	80CB91B8: 804061C0 (g_dComIfG_gameInfo)
//	80CB91C0: 80CB9BF4 (l_HIO)
//	80CB91C4: 80CB9BF4 (l_HIO)
//	80CB91DC: 803DD470 (now__14mDoMtx_stack_c)
//	80CB91E0: 803DD470 (now__14mDoMtx_stack_c)
//	80CB91F0: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	80CB91F4: 803DD470 (now__14mDoMtx_stack_c)
//	80CB91F8: 803DD470 (now__14mDoMtx_stack_c)
//	80CB9204: 80346D6C (PSMTXMultVec)
//	80CB9214: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80CB923C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80CB926C: 80347138 (PSVECSquareMag)
//	80CB92DC: 80450AE0 (__float_nan)
//	80CB92E0: 80450AE0 (__float_nan)
//	80CB934C: 80450AE0 (__float_nan)
//	80CB9350: 80450AE0 (__float_nan)
//	80CB9358: 80CB9BF4 (l_HIO)
//	80CB935C: 80CB9BF4 (l_HIO)
//	80CB9378: 80CB9BF4 (l_HIO)
//	80CB937C: 80CB9BF4 (l_HIO)
//	80CB93A8: 8002D06C (dComIfGp_getReverb__Fi)
//	80CB93BC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CB93C0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CB93E8: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CB93F8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::playerAreaCheck() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/playerAreaCheck__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB940C-80CB9464 0058+00 s=1 e=0 z=0  None .text      Execute__10daRfHole_cFPPA3_A4_f                              */
//	80CB9428: 80CB9464 (holeProc__10daRfHole_cFv)
//	80CB943C: 80CB8F04 (setBaseMtx__10daRfHole_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daRfHole_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/Execute__10daRfHole_cFPPA3_A4_f.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CB9C0C-80CB9C10 0004+00 s=1 e=0 z=0  None .bss       None                                                         */
static u8 data_80CB9C0C[4];

/* 80CB9464-80CB9520 00BC+00 s=1 e=0 z=0  None .text      holeProc__10daRfHole_cFv                                     */
//	80CB9470: 80CB9ACC (cNullVec__6Z2Calc)
//	80CB9474: 80CB9ACC (cNullVec__6Z2Calc)
//	80CB9478: 80CB9C0C (data_80CB9C0C)
//	80CB947C: 80CB9C0C (data_80CB9C0C)
//	80CB9508: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::holeProc() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/holeProc__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB9520-80CB952C 000C+00 s=1 e=0 z=0  None .text      init_modeWait__10daRfHole_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::init_modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/init_modeWait__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB952C-80CB9558 002C+00 s=1 e=0 z=0  None .text      modeWait__10daRfHole_cFv                                     */
//	80CB9544: 80CB9558 (init_modeBreak__10daRfHole_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/modeWait__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB9558-80CB96AC 0154+00 s=1 e=0 z=0  None .text      init_modeBreak__10daRfHole_cFv                               */
//	80CB9570: 80CB9A84 (lit_3649)
//	80CB9574: 80CB9A84 (lit_3649)
//	80CB9578: 80CB9768 (setBreakEffect__10daRfHole_cFv)
//	80CB9590: 804061C0 (g_dComIfG_gameInfo)
//	80CB9594: 804061C0 (g_dComIfG_gameInfo)
//	80CB959C: 80CB9BF4 (l_HIO)
//	80CB95A0: 80CB9BF4 (l_HIO)
//	80CB95B0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80CB95B4: 80CB9BF4 (l_HIO)
//	80CB95B8: 80CB9BF4 (l_HIO)
//	80CB95D0: 803DD470 (now__14mDoMtx_stack_c)
//	80CB95D4: 803DD470 (now__14mDoMtx_stack_c)
//	80CB95E4: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	80CB95E8: 803DD470 (now__14mDoMtx_stack_c)
//	80CB95EC: 803DD470 (now__14mDoMtx_stack_c)
//	80CB95F8: 80346D6C (PSMTXMultVec)
//	80CB9608: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80CB962C: 8002D06C (dComIfGp_getReverb__Fi)
//	80CB9640: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CB9644: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CB966C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CB9670: 804061C0 (g_dComIfG_gameInfo)
//	80CB9674: 804061C0 (g_dComIfG_gameInfo)
//	80CB9688: 80035200 (onSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::init_modeBreak() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/init_modeBreak__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB96AC-80CB96CC 0020+00 s=1 e=0 z=0  None .text      modeBreak__10daRfHole_cFv                                    */
//	80CB96B8: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::modeBreak() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/modeBreak__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB96CC-80CB971C 0050+00 s=1 e=0 z=0  None .text      init_modeBreakEff__10daRfHole_cFv                            */
//	80CB96E0: 80CB9768 (setBreakEffect__10daRfHole_cFv)
//	80CB96E4: 804061C0 (g_dComIfG_gameInfo)
//	80CB96E8: 804061C0 (g_dComIfG_gameInfo)
//	80CB96FC: 80035200 (onSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::init_modeBreakEff() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/init_modeBreakEff__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB971C-80CB973C 0020+00 s=1 e=0 z=0  None .text      modeBreakEff__10daRfHole_cFv                                 */
//	80CB9728: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::modeBreakEff() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/modeBreakEff__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB973C-80CB9748 000C+00 s=1 e=0 z=0  None .text      init_modeEnd__10daRfHole_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::init_modeEnd() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/init_modeEnd__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB9748-80CB9768 0020+00 s=1 e=0 z=0  None .text      modeEnd__10daRfHole_cFv                                      */
//	80CB9754: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::modeEnd() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/modeEnd__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB9768-80CB9878 0110+00 s=2 e=0 z=0  None .text      setBreakEffect__10daRfHole_cFv                               */
//	80CB9778: 803621D0 (_savegpr_26)
//	80CB9780: 80CB9A84 (lit_3649)
//	80CB9784: 80CB9A84 (lit_3649)
//	80CB9788: 80CB9BF4 (l_HIO)
//	80CB978C: 80CB9BF4 (l_HIO)
//	80CB97A4: 803DD470 (now__14mDoMtx_stack_c)
//	80CB97A8: 803DD470 (now__14mDoMtx_stack_c)
//	80CB97B8: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	80CB97BC: 803DD470 (now__14mDoMtx_stack_c)
//	80CB97C0: 803DD470 (now__14mDoMtx_stack_c)
//	80CB97CC: 80346D6C (PSMTXMultVec)
//	80CB97DC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80CB9800: 804061C0 (g_dComIfG_gameInfo)
//	80CB9804: 804061C0 (g_dComIfG_gameInfo)
//	80CB984C: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80CB9864: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::setBreakEffect() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/setBreakEffect__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB9878-80CB991C 00A4+00 s=1 e=0 z=0  None .text      Draw__10daRfHole_cFv                                         */
//	80CB9890: 8042CA54 (g_env_light)
//	80CB9894: 8042CA54 (g_env_light)
//	80CB98A4: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80CB98A8: 8042CA54 (g_env_light)
//	80CB98AC: 8042CA54 (g_env_light)
//	80CB98BC: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80CB98C0: 804061C0 (g_dComIfG_gameInfo)
//	80CB98C4: 804061C0 (g_dComIfG_gameInfo)
//	80CB98CC: 80434AC8 (j3dSys)
//	80CB98D0: 80434AC8 (j3dSys)
//	80CB98E4: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80CB98E8: 804061C0 (g_dComIfG_gameInfo)
//	80CB98EC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/Draw__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB991C-80CB994C 0030+00 s=1 e=0 z=0  None .text      Delete__10daRfHole_cFv                                       */
//	80CB9928: 80CB9AC0 (stringBase0)
//	80CB992C: 80CB9AC0 (stringBase0)
//	80CB9934: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRfHole_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/Delete__10daRfHole_cFv.s"
}
#pragma pop


/* 80CB994C-80CB9978 002C+00 s=1 e=0 z=0  None .text      daRfHole_Draw__FP10daRfHole_c                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daRfHole_c* False
// 	 daRfHole_c False
asm static void daRfHole_Draw(daRfHole_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/daRfHole_Draw__FP10daRfHole_c.s"
}
#pragma pop


/* 80CB9978-80CB9998 0020+00 s=1 e=0 z=0  None .text      daRfHole_Execute__FP10daRfHole_c                             */
//	80CB9984: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daRfHole_c* False
// 	 daRfHole_c False
asm static void daRfHole_Execute(daRfHole_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/daRfHole_Execute__FP10daRfHole_c.s"
}
#pragma pop


/* 80CB9998-80CB99B8 0020+00 s=1 e=0 z=0  None .text      daRfHole_Delete__FP10daRfHole_c                              */
//	80CB99A4: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daRfHole_c* False
// 	 daRfHole_c False
asm static void daRfHole_Delete(daRfHole_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/daRfHole_Delete__FP10daRfHole_c.s"
}
#pragma pop


/* 80CB99B8-80CB99D8 0020+00 s=1 e=0 z=0  None .text      daRfHole_Create__FP10fopAc_ac_c                              */
//	80CB99C4: 80CB8FF8 (create__10daRfHole_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daRfHole_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/daRfHole_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80CB99D8-80CB9A34 005C+00 s=2 e=0 z=0  None .text      __dt__14daRfHole_HIO_cFv                                     */
//	80CB99F0: 80CB9BC4 (__vt__14daRfHole_HIO_c)
//	80CB99F4: 80CB9BC4 (__vt__14daRfHole_HIO_c)
//	80CB9A00: 80CB9BD0 (__vt__14mDoHIO_entry_c)
//	80CB9A04: 80CB9BD0 (__vt__14mDoHIO_entry_c)
//	80CB9A18: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daRfHole_HIO_c::~daRfHole_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/__dt__14daRfHole_HIO_cFv.s"
}
#pragma pop


/* 80CB9A34-80CB9A70 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_rfHole_cpp                                   */
//	80CB9A40: 80CB9BF4 (l_HIO)
//	80CB9A44: 80CB9BF4 (l_HIO)
//	80CB9A48: 80CB8E6C (__ct__14daRfHole_HIO_cFv)
//	80CB9A4C: 80CB99D8 (__dt__14daRfHole_HIO_cFv)
//	80CB9A50: 80CB99D8 (__dt__14daRfHole_HIO_cFv)
//	80CB9A54: 80CB9BE8 (lit_3643)
//	80CB9A58: 80CB9BE8 (lit_3643)
//	80CB9A5C: 80CB8DF8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_rfHole_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole/__sinit_d_a_obj_rfHole_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80CB9A34 = (void*)__sinit_d_a_obj_rfHole_cpp;
#pragma pop


