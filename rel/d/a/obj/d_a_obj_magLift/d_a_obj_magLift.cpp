// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_magLift
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoHIO_entry_c {
	/* 80C8DA58 */ // True False
~mDoHIO_entry_c();
};

struct fopAc_ac_c {
};

struct daMagLift_c {
	/* 80C8DAA0 */ // True False
void setBaseMtx();
	/* 80C8DB28 */ // True False
void CreateHeap();
	/* 80C8DB94 */ // True False
void create();
	/* 80C8DD38 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80C8DD88 */ // True False
void moveLift();
	/* 80C8DE98 */ // True False
void modeAcc();
	/* 80C8DF20 */ // True False
void init_modeMove();
	/* 80C8DF2C */ // True False
void modeMove();
	/* 80C8E1EC */ // True False
void init_modeBrk();
	/* 80C8E1F8 */ // True False
void modeBrk();
	/* 80C8E260 */ // True False
void init_modeWaitInit();
	/* 80C8E26C */ // True False
void modeWaitInit();
	/* 80C8E2A0 */ // True False
void init_modeWait();
	/* 80C8E2AC */ // True False
void modeWait();
	/* 80C8E2B8 */ // True False
void init_modeMoveWait();
	/* 80C8E2C4 */ // True False
void modeMoveWait();
	/* 80C8E318 */ // True False
//  void False
void modeDead();
	/* 80C8E31C */ // True False
void setNextPoint();
	/* 80C8E450 */ // True False
void Draw();
	/* 80C8E4F4 */ // True False
void Delete();
};

struct daMagLift_HIO_c {
	/* 80C8DA2C */ // True False
daMagLift_HIO_c();
	/* 80C8E5B0 */ // True False
~daMagLift_HIO_c();
};

struct dSv_info_c {
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 8026702C */ // False False
//  bool False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
bool operator==(Vec const&) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dBgW {
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 80078690 */ // False False
//  bool False
bool Create();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  daMagLift_c* False
// 	 daMagLift_c False
static void daMagLift_Draw(daMagLift_c*);
// True False
//  daMagLift_c* False
// 	 daMagLift_c False
static void daMagLift_Execute(daMagLift_c*);
// True False
//  daMagLift_c* False
// 	 daMagLift_c False
static void daMagLift_Delete(daMagLift_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daMagLift_Create(fopAc_ac_c*);

// True False
extern "C" void __ct__15daMagLift_HIO_cFv();
// True False
extern "C" void __dt__14mDoHIO_entry_cFv();
// True False
extern "C" void setBaseMtx__11daMagLift_cFv();
// True False
extern "C" void CreateHeap__11daMagLift_cFv();
// True False
extern "C" void create__11daMagLift_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__11daMagLift_cFPPA3_A4_f();
// True False
extern "C" void moveLift__11daMagLift_cFv();
// True False
extern "C" void modeAcc__11daMagLift_cFv();
// True False
extern "C" void init_modeMove__11daMagLift_cFv();
// True False
extern "C" void modeMove__11daMagLift_cFv();
// True False
extern "C" void init_modeBrk__11daMagLift_cFv();
// True False
extern "C" void modeBrk__11daMagLift_cFv();
// True False
extern "C" void init_modeWaitInit__11daMagLift_cFv();
// True False
extern "C" void modeWaitInit__11daMagLift_cFv();
// True False
extern "C" void init_modeWait__11daMagLift_cFv();
// True False
extern "C" void modeWait__11daMagLift_cFv();
// True False
extern "C" void init_modeMoveWait__11daMagLift_cFv();
// True False
extern "C" void modeMoveWait__11daMagLift_cFv();
// True False
//  void False
extern "C" void modeDead__11daMagLift_cFv();
// True False
extern "C" void setNextPoint__11daMagLift_cFv();
// True False
extern "C" void Draw__11daMagLift_cFv();
// True False
extern "C" void Delete__11daMagLift_cFv();
// True False
//  daMagLift_c* False
// 	 daMagLift_c False
extern "C" static void daMagLift_Draw__FP11daMagLift_c();
// True False
//  daMagLift_c* False
// 	 daMagLift_c False
extern "C" static void daMagLift_Execute__FP11daMagLift_c();
// True False
//  daMagLift_c* False
// 	 daMagLift_c False
extern "C" static void daMagLift_Delete__FP11daMagLift_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daMagLift_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__15daMagLift_HIO_cFv();
// False False
extern "C" void __sinit_d_a_obj_magLift_cpp();
extern "C" extern u32 const lit_3759;
extern "C" extern u32 const lit_3760;
extern "C" extern u32 const lit_3761;
extern "C" extern u8 const lit_3834[8];
extern "C" extern u8 const lit_3835[8];
extern "C" extern u8 const lit_3836[8];
extern "C" extern u32 const lit_3837;
extern "C" extern u32 const lit_3838;
extern "C" extern u32 const lit_3852;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_3736[3];
extern "C" extern void* lit_3737[3];
extern "C" extern void* lit_3738[3];
extern "C" extern void* lit_3739[3];
extern "C" extern void* lit_3740[3];
extern "C" extern void* lit_3741[3];
extern "C" extern void* lit_3742[3];
extern "C" extern u8 data_80C8E750[96];
extern "C" extern void* g_profile_Obj_MagLift[12];
extern "C" extern void* __vt__11daMagLift_c[10];
extern "C" extern void* __vt__15daMagLift_HIO_c[3];
extern "C" extern void* __vt__14mDoHIO_entry_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
//  int False
void dPath_GetRoomPath(int, int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalcPos(cXyz*, cXyz const&, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  int False
//  int False
extern "C" void dPath_GetRoomPath__Fii();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool Create__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  bool False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" bool __eq__4cXyzCFRC3Vec();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalcPos__FP4cXyzRC4cXyzfff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __ptmf_scall();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80C8E6DC-80C8E6E8 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C8E6E8-80C8E6FC 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80C8E6FC-80C8E708 000C+00 s=0 e=0 z=0  None .data      @3736                                                        */
SECTION_DATA void* lit_3736[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeAcc__11daMagLift_cFv,
};

/* 80C8E708-80C8E714 000C+00 s=0 e=0 z=0  None .data      @3737                                                        */
SECTION_DATA void* lit_3737[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeMove__11daMagLift_cFv,
};

/* 80C8E714-80C8E720 000C+00 s=0 e=0 z=0  None .data      @3738                                                        */
SECTION_DATA void* lit_3738[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeBrk__11daMagLift_cFv,
};

/* 80C8E720-80C8E72C 000C+00 s=0 e=0 z=0  None .data      @3739                                                        */
SECTION_DATA void* lit_3739[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeWait__11daMagLift_cFv,
};

/* 80C8E72C-80C8E738 000C+00 s=0 e=0 z=0  None .data      @3740                                                        */
SECTION_DATA void* lit_3740[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeWaitInit__11daMagLift_cFv,
};

/* 80C8E738-80C8E744 000C+00 s=0 e=0 z=0  None .data      @3741                                                        */
SECTION_DATA void* lit_3741[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeDead__11daMagLift_cFv,
};

/* 80C8E744-80C8E750 000C+00 s=0 e=0 z=0  None .data      @3742                                                        */
SECTION_DATA void* lit_3742[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeMoveWait__11daMagLift_cFv,
};

/* 80C8E750-80C8E7B0 0060+00 s=0 e=0 z=0  None .data      mode_proc$3735                                               */
SECTION_DATA u8 data_80C8E750[96] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C8E7B0-80C8E7D0 0020+00 s=1 e=0 z=0  None .data      l_daMagLift_Method                                           */
SECTION_DATA static void* l_daMagLift_Method[8] = {
	(void*)daMagLift_Create__FP10fopAc_ac_c,
	(void*)daMagLift_Delete__FP11daMagLift_c,
	(void*)daMagLift_Execute__FP11daMagLift_c,
	(void*)NULL,
	(void*)daMagLift_Draw__FP11daMagLift_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80C8E7D0-80C8E800 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_MagLift                                        */
SECTION_DATA void* g_profile_Obj_MagLift[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00370000,
	(void*)&g_fpcLf_Method,
	(void*)0x000005D4,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01EC0000,
	(void*)&l_daMagLift_Method,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80C8E800-80C8E828 0028+00 s=1 e=0 z=0  None .data      __vt__11daMagLift_c                                          */
SECTION_DATA void* __vt__11daMagLift_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__11daMagLift_cFv,
	(void*)Create__16dBgS_MoveBgActorFv,
	(void*)Execute__11daMagLift_cFPPA3_A4_f,
	(void*)Draw__11daMagLift_cFv,
	(void*)Delete__11daMagLift_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80C8E828-80C8E834 000C+00 s=2 e=0 z=0  None .data      __vt__15daMagLift_HIO_c                                      */
SECTION_DATA void* __vt__15daMagLift_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daMagLift_HIO_cFv,
};

/* 80C8E834-80C8E840 000C+00 s=3 e=0 z=0  None .data      __vt__14mDoHIO_entry_c                                       */
SECTION_DATA void* __vt__14mDoHIO_entry_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14mDoHIO_entry_cFv,
};

/* 80C8DA2C-80C8DA58 002C+00 s=1 e=0 z=0  None .text      __ct__15daMagLift_HIO_cFv                                    */
//	80C8DA2C: 80C8E834 (__vt__14mDoHIO_entry_c)
//	80C8DA30: 80C8E834 (__vt__14mDoHIO_entry_c)
//	80C8DA38: 80C8E828 (__vt__15daMagLift_HIO_c)
//	80C8DA3C: 80C8E828 (__vt__15daMagLift_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daMagLift_HIO_c::daMagLift_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/__ct__15daMagLift_HIO_cFv.s"
}
#pragma pop


/* 80C8DA58-80C8DAA0 0048+00 s=1 e=0 z=0  None .text      __dt__14mDoHIO_entry_cFv                                     */
//	80C8DA70: 80C8E834 (__vt__14mDoHIO_entry_c)
//	80C8DA74: 80C8E834 (__vt__14mDoHIO_entry_c)
//	80C8DA84: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm mDoHIO_entry_c::~mDoHIO_entry_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/__dt__14mDoHIO_entry_cFv.s"
}
#pragma pop


/* 80C8DAA0-80C8DB28 0088+00 s=2 e=0 z=0  None .text      setBaseMtx__11daMagLift_cFv                                  */
//	80C8DAB4: 803DD470 (now__14mDoMtx_stack_c)
//	80C8DAB8: 803DD470 (now__14mDoMtx_stack_c)
//	80C8DAC8: 803468E8 (PSMTXTrans)
//	80C8DACC: 803DD470 (now__14mDoMtx_stack_c)
//	80C8DAD0: 803DD470 (now__14mDoMtx_stack_c)
//	80C8DAE0: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80C8DB00: 803DD470 (now__14mDoMtx_stack_c)
//	80C8DB04: 803DD470 (now__14mDoMtx_stack_c)
//	80C8DB10: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/setBaseMtx__11daMagLift_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C8E65C-80C8E69C 0040+00 s=4 e=0 z=0  None .rodata    mSpeed__11daMagLift_c                                        */
SECTION_RODATA static u8 const mSpeed__11daMagLift_c[64] = {
	0x40, 0xA0, 0x00, 0x00, 0x40, 0xD5, 0x55, 0x55, 0x41, 0x05, 0x55, 0x55, 0x41, 0x20, 0x00, 0x00,
	0x41, 0x3A, 0xAA, 0xAB, 0x41, 0x55, 0x55, 0x55, 0x41, 0x70, 0x00, 0x00, 0x41, 0x85, 0x55, 0x55,
	0x41, 0x92, 0xAA, 0xAB, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xAD, 0x55, 0x55, 0x41, 0xBA, 0xAA, 0xAB,
	0x41, 0xC8, 0x00, 0x00, 0x41, 0xD5, 0x55, 0x55, 0x41, 0xE2, 0xAA, 0xAB, 0x40, 0x55, 0x55, 0x55,
};

/* 80C8E69C-80C8E6A0 0004+00 s=1 e=0 z=0  None .rodata    @3718                                                        */
SECTION_RODATA static u8 const lit_3718[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80C8E6A0-80C8E6A4 0004+00 s=0 e=0 z=0  None .rodata    @3759                                                        */
SECTION_RODATA u32 const lit_3759 = 0x41F00000;

/* 80C8E6A4-80C8E6A8 0004+00 s=0 e=0 z=0  None .rodata    @3760                                                        */
SECTION_RODATA u32 const lit_3760 = 0x3F800000;

/* 80C8E6A8-80C8E6AC 0004+00 s=0 e=0 z=0  None .rodata    @3761                                                        */
SECTION_RODATA u32 const lit_3761 = 0x3DCCCCCD;

/* 80C8E6AC-80C8E6B4 0008+00 s=0 e=0 z=0  None .rodata    @3834                                                        */
SECTION_RODATA u8 const lit_3834[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C8E6B4-80C8E6BC 0008+00 s=0 e=0 z=0  None .rodata    @3835                                                        */
SECTION_RODATA u8 const lit_3835[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C8E6BC-80C8E6C4 0008+00 s=0 e=0 z=0  None .rodata    @3836                                                        */
SECTION_RODATA u8 const lit_3836[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C8E6C4-80C8E6C8 0004+00 s=0 e=0 z=0  None .rodata    @3837                                                        */
SECTION_RODATA u32 const lit_3837 = 0x3E99999A;

/* 80C8E6C8-80C8E6CC 0004+00 s=0 e=0 z=0  None .rodata    @3838                                                        */
SECTION_RODATA u32 const lit_3838 = 0x43960000;

/* 80C8E6CC-80C8E6D0 0004+00 s=0 e=0 z=0  None .rodata    @3852                                                        */
SECTION_RODATA u32 const lit_3852 = 0x3F000000;

/* 80C8E6D0-80C8E6DA 000A+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80C8E6D0 = "L_maglift";
#pragma pop

/* 80C8DB28-80C8DB94 006C+00 s=1 e=0 z=0  None .text      CreateHeap__11daMagLift_cFv                                  */
//	80C8DB3C: 80C8E6D0 (stringBase0)
//	80C8DB40: 80C8E6D0 (stringBase0)
//	80C8DB48: 804061C0 (g_dComIfG_gameInfo)
//	80C8DB4C: 804061C0 (g_dComIfG_gameInfo)
//	80C8DB5C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C8DB6C: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/CreateHeap__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8DB94-80C8DD38 01A4+00 s=1 e=0 z=0  None .text      create__11daMagLift_cFv                                      */
//	80C8DBC0: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80C8DBC4: 80C8E800 (__vt__11daMagLift_c)
//	80C8DBC8: 80C8E800 (__vt__11daMagLift_c)
//	80C8DBE0: 80C8E6D0 (stringBase0)
//	80C8DBE4: 80C8E6D0 (stringBase0)
//	80C8DBE8: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80C8DBFC: 80C8E6D0 (stringBase0)
//	80C8DC00: 80C8E6D0 (stringBase0)
//	80C8DC08: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80C8DC0C: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80C8DC18: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80C8DC40: 800517EC (dPath_GetRoomPath__Fii)
//	80C8DC88: 80C8E65C (mSpeed__11daMagLift_c)
//	80C8DC8C: 80C8E65C (mSpeed__11daMagLift_c)
//	80C8DC98: 80C8E69C (lit_3718)
//	80C8DC9C: 80C8E69C (lit_3718)
//	80C8DCB8: 80C8E260 (init_modeWaitInit__11daMagLift_cFv)
//	80C8DCC0: 804061C0 (g_dComIfG_gameInfo)
//	80C8DCC4: 804061C0 (g_dComIfG_gameInfo)
//	80C8DCD0: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C8DCE8: 80C8E260 (init_modeWaitInit__11daMagLift_cFv)
//	80C8DCF4: 80C8E2B8 (init_modeMoveWait__11daMagLift_cFv)
//	80C8DD10: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80C8DD18: 80C8DAA0 (setBaseMtx__11daMagLift_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/create__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8DD38-80C8DD88 0050+00 s=1 e=0 z=0  None .text      Execute__11daMagLift_cFPPA3_A4_f                             */
//	80C8DD54: 80C8DD88 (moveLift__11daMagLift_cFv)
//	80C8DD68: 80C8DAA0 (setBaseMtx__11daMagLift_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daMagLift_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/Execute__11daMagLift_cFPPA3_A4_f.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C8E848-80C8E854 000C+00 s=1 e=0 z=0  None .bss       @3619                                                        */
static u8 lit_3619[12];

/* 80C8E854-80C8E85C 0008+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[8];

/* 80C8E85C-80C8E860 0004+00 s=1 e=0 z=0  None .bss       None                                                         */
static u8 data_80C8E85C[4];

/* 80C8DD88-80C8DE98 0110+00 s=1 e=0 z=0  None .text      moveLift__11daMagLift_cFv                                    */
//	80C8DD94: 80C8E6DC (cNullVec__6Z2Calc)
//	80C8DD98: 80C8E6DC (cNullVec__6Z2Calc)
//	80C8DDA8: 80C8E85C (data_80C8E85C)
//	80C8DDAC: 80C8E85C (data_80C8E85C)
//	80C8DE80: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::moveLift() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/moveLift__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8DE98-80C8DF20 0088+00 s=1 e=0 z=0  None .text      modeAcc__11daMagLift_cFv                                     */
//	80C8DEB0: 80C8E65C (mSpeed__11daMagLift_c)
//	80C8DEB4: 80C8E65C (mSpeed__11daMagLift_c)
//	80C8DEC8: 80270740 (cLib_chaseF__FPfff)
//	80C8DEDC: 8026702C (__eq__4cXyzCFRC3Vec)
//	80C8DEEC: 80C8DF20 (init_modeMove__11daMagLift_cFv)
//	80C8DF04: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::modeAcc() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/modeAcc__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8DF20-80C8DF2C 000C+00 s=1 e=0 z=0  None .text      init_modeMove__11daMagLift_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::init_modeMove() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/init_modeMove__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8DF2C-80C8E1EC 02C0+00 s=1 e=0 z=0  None .text      modeMove__11daMagLift_cFv                                    */
//	80C8DF4C: 80C8E65C (mSpeed__11daMagLift_c)
//	80C8DF50: 80C8E65C (mSpeed__11daMagLift_c)
//	80C8DF90: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C8DF98: 80347138 (PSVECSquareMag)
//	80C8E008: 80450AE0 (__float_nan)
//	80C8E00C: 80450AE0 (__float_nan)
//	80C8E078: 80450AE0 (__float_nan)
//	80C8E07C: 80450AE0 (__float_nan)
//	80C8E0B4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C8E0BC: 80347138 (PSVECSquareMag)
//	80C8E12C: 80450AE0 (__float_nan)
//	80C8E130: 80450AE0 (__float_nan)
//	80C8E19C: 80450AE0 (__float_nan)
//	80C8E1A0: 80450AE0 (__float_nan)
//	80C8E1B0: 80C8E1EC (init_modeBrk__11daMagLift_cFv)
//	80C8E1C8: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::modeMove() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/modeMove__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E1EC-80C8E1F8 000C+00 s=1 e=0 z=0  None .text      init_modeBrk__11daMagLift_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::init_modeBrk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/init_modeBrk__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E1F8-80C8E260 0068+00 s=1 e=0 z=0  None .text      modeBrk__11daMagLift_cFv                                     */
//	80C8E210: 80C8E65C (mSpeed__11daMagLift_c)
//	80C8E214: 80C8E65C (mSpeed__11daMagLift_c)
//	80C8E22C: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80C8E244: 80C8E260 (init_modeWaitInit__11daMagLift_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::modeBrk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/modeBrk__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E260-80C8E26C 000C+00 s=3 e=0 z=0  None .text      init_modeWaitInit__11daMagLift_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::init_modeWaitInit() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/init_modeWaitInit__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E26C-80C8E2A0 0034+00 s=1 e=0 z=0  None .text      modeWaitInit__11daMagLift_cFv                                */
//	80C8E280: 80C8E31C (setNextPoint__11daMagLift_cFv)
//	80C8E288: 80C8E2A0 (init_modeWait__11daMagLift_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::modeWaitInit() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/modeWaitInit__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E2A0-80C8E2AC 000C+00 s=1 e=0 z=0  None .text      init_modeWait__11daMagLift_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::init_modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/init_modeWait__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E2AC-80C8E2B8 000C+00 s=1 e=0 z=0  None .text      modeWait__11daMagLift_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/modeWait__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E2B8-80C8E2C4 000C+00 s=1 e=0 z=0  None .text      init_modeMoveWait__11daMagLift_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::init_modeMoveWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/init_modeMoveWait__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E2C4-80C8E318 0054+00 s=1 e=0 z=0  None .text      modeMoveWait__11daMagLift_cFv                                */
//	80C8E2D8: 804061C0 (g_dComIfG_gameInfo)
//	80C8E2DC: 804061C0 (g_dComIfG_gameInfo)
//	80C8E2F0: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C8E300: 80C8E260 (init_modeWaitInit__11daMagLift_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::modeMoveWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/modeMoveWait__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E318-80C8E31C 0004+00 s=1 e=0 z=0  None .text      modeDead__11daMagLift_cFv                                    */
// True False
//  void False
void daMagLift_c::modeDead() {
	/* empty function */
}


/* 80C8E31C-80C8E450 0134+00 s=1 e=0 z=0  None .text      setNextPoint__11daMagLift_cFv                                */
//	80C8E354: 800517EC (dPath_GetRoomPath__Fii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::setNextPoint() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/setNextPoint__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E450-80C8E4F4 00A4+00 s=1 e=0 z=0  None .text      Draw__11daMagLift_cFv                                        */
//	80C8E468: 8042CA54 (g_env_light)
//	80C8E46C: 8042CA54 (g_env_light)
//	80C8E47C: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80C8E480: 8042CA54 (g_env_light)
//	80C8E484: 8042CA54 (g_env_light)
//	80C8E494: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C8E498: 804061C0 (g_dComIfG_gameInfo)
//	80C8E49C: 804061C0 (g_dComIfG_gameInfo)
//	80C8E4A4: 80434AC8 (j3dSys)
//	80C8E4A8: 80434AC8 (j3dSys)
//	80C8E4BC: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80C8E4C0: 804061C0 (g_dComIfG_gameInfo)
//	80C8E4C4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/Draw__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E4F4-80C8E524 0030+00 s=1 e=0 z=0  None .text      Delete__11daMagLift_cFv                                      */
//	80C8E500: 80C8E6D0 (stringBase0)
//	80C8E504: 80C8E6D0 (stringBase0)
//	80C8E50C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daMagLift_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/Delete__11daMagLift_cFv.s"
}
#pragma pop


/* 80C8E524-80C8E550 002C+00 s=1 e=0 z=0  None .text      daMagLift_Draw__FP11daMagLift_c                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daMagLift_c* False
// 	 daMagLift_c False
asm static void daMagLift_Draw(daMagLift_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/daMagLift_Draw__FP11daMagLift_c.s"
}
#pragma pop


/* 80C8E550-80C8E570 0020+00 s=1 e=0 z=0  None .text      daMagLift_Execute__FP11daMagLift_c                           */
//	80C8E55C: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daMagLift_c* False
// 	 daMagLift_c False
asm static void daMagLift_Execute(daMagLift_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/daMagLift_Execute__FP11daMagLift_c.s"
}
#pragma pop


/* 80C8E570-80C8E590 0020+00 s=1 e=0 z=0  None .text      daMagLift_Delete__FP11daMagLift_c                            */
//	80C8E57C: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daMagLift_c* False
// 	 daMagLift_c False
asm static void daMagLift_Delete(daMagLift_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/daMagLift_Delete__FP11daMagLift_c.s"
}
#pragma pop


/* 80C8E590-80C8E5B0 0020+00 s=1 e=0 z=0  None .text      daMagLift_Create__FP10fopAc_ac_c                             */
//	80C8E59C: 80C8DB94 (create__11daMagLift_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daMagLift_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/daMagLift_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80C8E5B0-80C8E60C 005C+00 s=2 e=0 z=0  None .text      __dt__15daMagLift_HIO_cFv                                    */
//	80C8E5C8: 80C8E828 (__vt__15daMagLift_HIO_c)
//	80C8E5CC: 80C8E828 (__vt__15daMagLift_HIO_c)
//	80C8E5D8: 80C8E834 (__vt__14mDoHIO_entry_c)
//	80C8E5DC: 80C8E834 (__vt__14mDoHIO_entry_c)
//	80C8E5F0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daMagLift_HIO_c::~daMagLift_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/__dt__15daMagLift_HIO_cFv.s"
}
#pragma pop


/* 80C8E60C-80C8E648 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_magLift_cpp                                  */
//	80C8E618: 80C8E854 (l_HIO)
//	80C8E61C: 80C8E854 (l_HIO)
//	80C8E620: 80C8DA2C (__ct__15daMagLift_HIO_cFv)
//	80C8E624: 80C8E5B0 (__dt__15daMagLift_HIO_cFv)
//	80C8E628: 80C8E5B0 (__dt__15daMagLift_HIO_cFv)
//	80C8E62C: 80C8E848 (lit_3619)
//	80C8E630: 80C8E848 (lit_3619)
//	80C8E634: 80C8D9B8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_magLift_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_magLift/d_a_obj_magLift/__sinit_d_a_obj_magLift_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80C8E60C = (void*)__sinit_d_a_obj_magLift_cpp;
#pragma pop


