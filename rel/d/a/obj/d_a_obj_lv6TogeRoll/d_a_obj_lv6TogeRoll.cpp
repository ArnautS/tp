// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_lv6TogeRoll
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoHIO_entry_c {
	/* 80C77C80 */ // True False
~mDoHIO_entry_c();
};

struct fopAc_ac_c {
};

struct daTogeRoll_c {
	/* 80C77CC8 */ // True False
void setBaseMtx();
	/* 80C77D50 */ // True False
void CreateHeap();
	/* 80C77DBC */ // True False
void create();
	/* 80C78294 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80C78638 */ // True False
void moveTogeRoll();
	/* 80C78A8C */ // True False
void init_modeBound();
	/* 80C78B7C */ // True False
void modeBound();
	/* 80C78BD8 */ // True False
void modeBound2();
	/* 80C78C34 */ // True False
void init_modeBoundWait();
	/* 80C78C50 */ // True False
void modeBoundWait();
	/* 80C78CA8 */ // True False
void init_modeAcc();
	/* 80C78CB4 */ // True False
void modeAcc();
	/* 80C78DA0 */ // True False
void init_modeMove();
	/* 80C78DAC */ // True False
void modeMove();
	/* 80C790C4 */ // True False
void init_modeBrk();
	/* 80C790D0 */ // True False
void modeBrk();
	/* 80C792CC */ // True False
void init_modeWaitInit();
	/* 80C792E4 */ // True False
void modeWaitInit();
	/* 80C79318 */ // True False
void init_modeWait();
	/* 80C79324 */ // True False
void modeWait();
	/* 80C79344 */ // True False
void init_modeBreak();
	/* 80C793C8 */ // True False
void modeBreak();
	/* 80C795E8 */ // True False
void setNextPoint();
	/* 80C79714 */ // True False
void Draw();
	/* 80C797B8 */ // True False
void Delete();
};

struct daTogeRoll_HIO_c {
	/* 80C77C2C */ // True False
daTogeRoll_HIO_c();
	/* 80C798D0 */ // True False
~daTogeRoll_HIO_c();
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266F48 */ // False False
void normalizeZP();
	/* 8026702C */ // False False
//  bool False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
bool operator==(Vec const&) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_SrcCps {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 80C780A0 */ // True False
~dCcD_Sph();
	/* 80C7816C */ // True False
dCcD_Sph();
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 80C78238 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084548 */ // False False
void GetTgHitGObj();
	/* 8008457C */ // False False
void GetTgHitObjSe();
	/* 800845B0 */ // False False
//  u8 False
//  int False
void getHitSeID(u8, int);
	/* 80084658 */ // False False
void ChkCoHit();
	/* 800846F0 */ // False False
void GetCoHitObj();
};

struct dCcD_Cps {
	/* 800847D0 */ // False False
//  dCcD_SrcCps const& False
// 	 dCcD_SrcCps const False
// 		 dCcD_SrcCps False
void Set(dCcD_SrcCps const&);
};

struct dBgW {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 80078690 */ // False False
//  bool False
bool Create();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80C781F0 */ // True False
~cM3dGSph();
};

struct cM3dGCpsS {
};

struct cM3dGCps {
	/* 8026EF88 */ // False False
cM3dGCps();
	/* 8026F03C */ // False False
//  cM3dGCpsS const& False
// 	 cM3dGCpsS const False
// 		 cM3dGCpsS False
void Set(cM3dGCpsS const&);
};

struct cM3dGAab {
	/* 80C78058 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
	/* 80263A48 */ // False False
void GetAc();
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80C79888 */ // True False
~cCcD_GStts();
};

struct Z2SoundObjSimple {
	/* 802BE844 */ // False False
Z2SoundObjSimple();
};

struct Z2SoundObjBase {
	/* 802BDFF8 */ // False False
void deleteObject();
	/* 802BE4A4 */ // False False
//  u32 False
//  u32 False
//  Z2SoundObjBase* False
// 	 Z2SoundObjBase False
void startCollisionSE(u32, u32, Z2SoundObjBase*);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  daTogeRoll_c* False
// 	 daTogeRoll_c False
static void daTogeRoll_Draw(daTogeRoll_c*);
// True False
//  daTogeRoll_c* False
// 	 daTogeRoll_c False
static void daTogeRoll_Execute(daTogeRoll_c*);
// True False
//  daTogeRoll_c* False
// 	 daTogeRoll_c False
static void daTogeRoll_Delete(daTogeRoll_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daTogeRoll_Create(fopAc_ac_c*);

// True False
extern "C" void __ct__16daTogeRoll_HIO_cFv();
// True False
extern "C" void __dt__14mDoHIO_entry_cFv();
// True False
extern "C" void setBaseMtx__12daTogeRoll_cFv();
// True False
extern "C" void CreateHeap__12daTogeRoll_cFv();
// True False
extern "C" void create__12daTogeRoll_cFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__8dCcD_SphFv();
// True False
extern "C" void __ct__8dCcD_SphFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__12daTogeRoll_cFPPA3_A4_f();
// True False
extern "C" void moveTogeRoll__12daTogeRoll_cFv();
// True False
extern "C" void init_modeBound__12daTogeRoll_cFv();
// True False
extern "C" void modeBound__12daTogeRoll_cFv();
// True False
extern "C" void modeBound2__12daTogeRoll_cFv();
// True False
extern "C" void init_modeBoundWait__12daTogeRoll_cFv();
// True False
extern "C" void modeBoundWait__12daTogeRoll_cFv();
// True False
extern "C" void init_modeAcc__12daTogeRoll_cFv();
// True False
extern "C" void modeAcc__12daTogeRoll_cFv();
// True False
extern "C" void init_modeMove__12daTogeRoll_cFv();
// True False
extern "C" void modeMove__12daTogeRoll_cFv();
// True False
extern "C" void init_modeBrk__12daTogeRoll_cFv();
// True False
extern "C" void modeBrk__12daTogeRoll_cFv();
// True False
extern "C" void init_modeWaitInit__12daTogeRoll_cFv();
// True False
extern "C" void modeWaitInit__12daTogeRoll_cFv();
// True False
extern "C" void init_modeWait__12daTogeRoll_cFv();
// True False
extern "C" void modeWait__12daTogeRoll_cFv();
// True False
extern "C" void init_modeBreak__12daTogeRoll_cFv();
// True False
extern "C" void modeBreak__12daTogeRoll_cFv();
// True False
extern "C" void setNextPoint__12daTogeRoll_cFv();
// True False
extern "C" void Draw__12daTogeRoll_cFv();
// True False
extern "C" void Delete__12daTogeRoll_cFv();
// True False
//  daTogeRoll_c* False
// 	 daTogeRoll_c False
extern "C" static void daTogeRoll_Draw__FP12daTogeRoll_c();
// True False
//  daTogeRoll_c* False
// 	 daTogeRoll_c False
extern "C" static void daTogeRoll_Execute__FP12daTogeRoll_c();
// True False
//  daTogeRoll_c* False
// 	 daTogeRoll_c False
extern "C" static void daTogeRoll_Delete__FP12daTogeRoll_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daTogeRoll_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__16daTogeRoll_HIO_cFv();
// False False
extern "C" void __sinit_d_a_obj_lv6TogeRoll_cpp();
extern "C" extern u32 const lit_3652;
extern "C" extern u32 const lit_3959;
extern "C" extern u32 const lit_3960;
extern "C" extern u32 const lit_3961;
extern "C" extern u32 const lit_3962;
extern "C" extern u8 const lit_3964[8];
extern "C" extern u8 const lit_4071[8];
extern "C" extern u8 const lit_4072[8];
extern "C" extern u8 const lit_4073[8];
extern "C" extern u32 const lit_4074;
extern "C" extern u32 const lit_4075;
extern "C" extern u32 const lit_4076;
extern "C" extern u32 const lit_4156;
extern "C" extern u32 const lit_4239;
extern "C" extern u32 const lit_4285;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_3971[3];
extern "C" extern void* lit_3972[3];
extern "C" extern void* lit_3973[3];
extern "C" extern void* lit_3974[3];
extern "C" extern void* lit_3975[3];
extern "C" extern void* lit_3976[3];
extern "C" extern void* lit_3977[3];
extern "C" extern void* lit_3978[3];
extern "C" extern void* lit_3979[3];
extern "C" extern u8 data_80C79C04[108];
extern "C" extern void* g_profile_Obj_Lv6TogeRoll[12];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12daTogeRoll_c[10];
extern "C" extern void* __vt__16daTogeRoll_HIO_c[3];
extern "C" extern void* __vt__14mDoHIO_entry_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotS(f32 (* )[4], s16, s16, s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  int False
//  int False
void dPath_GetRoomPath(int, int);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  f32 False
//  Vec* False
// 	 Vec False
void cM3d_InDivPos2(Vec const*, Vec const*, f32, Vec*);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalcPos(cXyz*, cXyz const&, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotS__FPA4_fsss();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
extern "C" void dPath_GetRoomPath__Fii();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool Create__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitGObj__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObjSe__12dCcD_GObjInfFv();
// False False
//  u8 False
//  int False
extern "C" void getHitSeID__12dCcD_GObjInfFUci();
// False False
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetCoHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCps const& False
// 	 dCcD_SrcCps const False
// 		 dCcD_SrcCps False
extern "C" void Set__8dCcD_CpsFRC11dCcD_SrcCps();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void GetAc__8cCcD_ObjFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
extern "C" void normalizeZP__4cXyzFv();
// False False
//  bool False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" bool __eq__4cXyzCFRC3Vec();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  f32 False
//  Vec* False
// 	 Vec False
extern "C" void cM3d_InDivPos2__FPC3VecPC3VecfP3Vec();
// False False
extern "C" void __ct__8cM3dGCpsFv();
// False False
//  cM3dGCpsS const& False
// 	 cM3dGCpsS const False
// 		 cM3dGCpsS False
extern "C" void Set__8cM3dGCpsFRC9cM3dGCpsS();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalcPos__FP4cXyzRC4cXyzfff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void deleteObject__14Z2SoundObjBaseFv();
// False False
//  u32 False
//  u32 False
//  Z2SoundObjBase* False
// 	 Z2SoundObjBase False
extern "C" void startCollisionSE__14Z2SoundObjBaseFUlUlP14Z2SoundObjBase();
// False False
extern "C" void __ct__16Z2SoundObjSimpleFv();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECDotProduct();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void __cvt_fp2unsigned();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cps[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CpsAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80C799E4-80C799E8 0004+00 s=6 e=0 z=0  None .rodata    @3651                                                        */
SECTION_RODATA static u32 const lit_3651 = 0x41200000;

/* 80C79AEC-80C79AF8 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C79AF8-80C79B0C 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80C79B0C-80C79B4C 0040+00 s=2 e=0 z=0  None .data      mCcDSph__12daTogeRoll_c                                      */
SECTION_DATA static u8 mCcDSph__12daTogeRoll_c[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C79B4C-80C79B98 004C+00 s=2 e=0 z=0  None .data      mCcDCps__12daTogeRoll_c                                      */
SECTION_DATA static u8 mCcDCps__12daTogeRoll_c[76] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x89, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00,
};

/* 80C79B98-80C79BA4 000C+00 s=0 e=0 z=0  None .data      @3971                                                        */
SECTION_DATA void* lit_3971[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeAcc__12daTogeRoll_cFv,
};

/* 80C79BA4-80C79BB0 000C+00 s=0 e=0 z=0  None .data      @3972                                                        */
SECTION_DATA void* lit_3972[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeMove__12daTogeRoll_cFv,
};

/* 80C79BB0-80C79BBC 000C+00 s=0 e=0 z=0  None .data      @3973                                                        */
SECTION_DATA void* lit_3973[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeBrk__12daTogeRoll_cFv,
};

/* 80C79BBC-80C79BC8 000C+00 s=0 e=0 z=0  None .data      @3974                                                        */
SECTION_DATA void* lit_3974[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeWait__12daTogeRoll_cFv,
};

/* 80C79BC8-80C79BD4 000C+00 s=0 e=0 z=0  None .data      @3975                                                        */
SECTION_DATA void* lit_3975[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeWaitInit__12daTogeRoll_cFv,
};

/* 80C79BD4-80C79BE0 000C+00 s=0 e=0 z=0  None .data      @3976                                                        */
SECTION_DATA void* lit_3976[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeBreak__12daTogeRoll_cFv,
};

/* 80C79BE0-80C79BEC 000C+00 s=0 e=0 z=0  None .data      @3977                                                        */
SECTION_DATA void* lit_3977[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeBound__12daTogeRoll_cFv,
};

/* 80C79BEC-80C79BF8 000C+00 s=0 e=0 z=0  None .data      @3978                                                        */
SECTION_DATA void* lit_3978[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeBound2__12daTogeRoll_cFv,
};

/* 80C79BF8-80C79C04 000C+00 s=0 e=0 z=0  None .data      @3979                                                        */
SECTION_DATA void* lit_3979[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeBoundWait__12daTogeRoll_cFv,
};

/* 80C79C04-80C79C70 006C+00 s=0 e=0 z=0  None .data      mode_proc$3970                                               */
SECTION_DATA u8 data_80C79C04[108] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C79C70-80C79C90 0020+00 s=1 e=0 z=0  None .data      l_daTogeRoll_Method                                          */
SECTION_DATA static void* l_daTogeRoll_Method[8] = {
	(void*)daTogeRoll_Create__FP10fopAc_ac_c,
	(void*)daTogeRoll_Delete__FP12daTogeRoll_c,
	(void*)daTogeRoll_Execute__FP12daTogeRoll_c,
	(void*)NULL,
	(void*)daTogeRoll_Draw__FP12daTogeRoll_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80C79C90-80C79CC0 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Lv6TogeRoll                                    */
SECTION_DATA void* g_profile_Obj_Lv6TogeRoll[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00930000,
	(void*)&g_fpcLf_Method,
	(void*)0x0000117C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x026D0000,
	(void*)&l_daTogeRoll_Method,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80C79CC0-80C79CCC 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80C79CCC-80C79CD8 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80C79CD8-80C79CE4 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80C79CE4-80C79CF0 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80C79CF0-80C79D18 0028+00 s=1 e=0 z=0  None .data      __vt__12daTogeRoll_c                                         */
SECTION_DATA void* __vt__12daTogeRoll_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__12daTogeRoll_cFv,
	(void*)Create__16dBgS_MoveBgActorFv,
	(void*)Execute__12daTogeRoll_cFPPA3_A4_f,
	(void*)Draw__12daTogeRoll_cFv,
	(void*)Delete__12daTogeRoll_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80C79D18-80C79D24 000C+00 s=2 e=0 z=0  None .data      __vt__16daTogeRoll_HIO_c                                     */
SECTION_DATA void* __vt__16daTogeRoll_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__16daTogeRoll_HIO_cFv,
};

/* 80C79D24-80C79D30 000C+00 s=3 e=0 z=0  None .data      __vt__14mDoHIO_entry_c                                       */
SECTION_DATA void* __vt__14mDoHIO_entry_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14mDoHIO_entry_cFv,
};

/* 80C77C2C-80C77C80 0054+00 s=1 e=0 z=0  None .text      __ct__16daTogeRoll_HIO_cFv                                   */
//	80C77C2C: 80C799E4 (lit_3651)
//	80C77C30: 80C799E4 (lit_3651)
//	80C77C34: 80C79D24 (__vt__14mDoHIO_entry_c)
//	80C77C38: 80C79D24 (__vt__14mDoHIO_entry_c)
//	80C77C40: 80C79D18 (__vt__16daTogeRoll_HIO_c)
//	80C77C44: 80C79D18 (__vt__16daTogeRoll_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daTogeRoll_HIO_c::daTogeRoll_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/__ct__16daTogeRoll_HIO_cFv.s"
}
#pragma pop


/* 80C77C80-80C77CC8 0048+00 s=1 e=0 z=0  None .text      __dt__14mDoHIO_entry_cFv                                     */
//	80C77C98: 80C79D24 (__vt__14mDoHIO_entry_c)
//	80C77C9C: 80C79D24 (__vt__14mDoHIO_entry_c)
//	80C77CAC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm mDoHIO_entry_c::~mDoHIO_entry_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/__dt__14mDoHIO_entry_cFv.s"
}
#pragma pop


/* 80C77CC8-80C77D50 0088+00 s=2 e=0 z=0  None .text      setBaseMtx__12daTogeRoll_cFv                                 */
//	80C77CDC: 803DD470 (now__14mDoMtx_stack_c)
//	80C77CE0: 803DD470 (now__14mDoMtx_stack_c)
//	80C77CF0: 803468E8 (PSMTXTrans)
//	80C77CF4: 803DD470 (now__14mDoMtx_stack_c)
//	80C77CF8: 803DD470 (now__14mDoMtx_stack_c)
//	80C77D08: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80C77D28: 803DD470 (now__14mDoMtx_stack_c)
//	80C77D2C: 803DD470 (now__14mDoMtx_stack_c)
//	80C77D38: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/setBaseMtx__12daTogeRoll_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C799E8-80C799EC 0004+00 s=0 e=0 z=0  None .rodata    @3652                                                        */
SECTION_RODATA u32 const lit_3652 = 0x3E99999A;

/* 80C799EC-80C799F0 0004+00 s=2 e=0 z=0  None .rodata    @3653                                                        */
SECTION_RODATA static u32 const lit_3653 = 0x42480000;

/* 80C799F0-80C79A20 0030+00 s=1 e=0 z=0  None .rodata    mCcDObjInfo__12daTogeRoll_c                                  */
SECTION_RODATA static u8 const mCcDObjInfo__12daTogeRoll_c[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
	0xDA, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x79, 0x01, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x0A, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C79A20-80C79A50 0030+00 s=1 e=0 z=0  None .rodata    mCcDObjInfo2__12daTogeRoll_c                                 */
SECTION_RODATA static u8 const mCcDObjInfo2__12daTogeRoll_c[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xDA, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
};

/* 80C79A50-80C79A90 0040+00 s=1 e=0 z=0  None .rodata    mSpeed__12daTogeRoll_c                                       */
SECTION_RODATA static u8 const mSpeed__12daTogeRoll_c[64] = {
	0x41, 0x20, 0x00, 0x00, 0x41, 0x85, 0x55, 0x55, 0x41, 0xBA, 0xAA, 0xAB, 0x41, 0xC8, 0x00, 0x00,
	0x41, 0xD5, 0x55, 0x55, 0x41, 0xE2, 0xAA, 0xAB, 0x41, 0xF0, 0x00, 0x00, 0x41, 0xFD, 0x55, 0x55,
	0x42, 0x05, 0x55, 0x55, 0x42, 0x20, 0x00, 0x00, 0x42, 0x3A, 0xAA, 0xAB, 0x42, 0x55, 0x55, 0x55,
	0x42, 0x70, 0x00, 0x00, 0x42, 0x85, 0x55, 0x55, 0x42, 0xA6, 0xAA, 0xAB, 0x40, 0x55, 0x55, 0x55,
};

/* 80C79A90-80C79A94 0004+00 s=4 e=0 z=0  None .rodata    @3958                                                        */
SECTION_RODATA static u8 const lit_3958[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80C79A94-80C79A98 0004+00 s=0 e=0 z=0  None .rodata    @3959                                                        */
SECTION_RODATA u32 const lit_3959 = 0x428C0000;

/* 80C79A98-80C79A9C 0004+00 s=0 e=0 z=0  None .rodata    @3960                                                        */
SECTION_RODATA u32 const lit_3960 = 0x43780000;

/* 80C79A9C-80C79AA0 0004+00 s=0 e=0 z=0  None .rodata    @3961                                                        */
SECTION_RODATA u32 const lit_3961 = 0x43870000;

/* 80C79AA0-80C79AA4 0004+00 s=0 e=0 z=0  None .rodata    @3962                                                        */
SECTION_RODATA u32 const lit_3962 = 0x41F00000;

/* 80C79AA4-80C79AAC 0008+00 s=0 e=0 z=0  None .rodata    @3964                                                        */
SECTION_RODATA u8 const lit_3964[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80C79AAC-80C79AB4 0008+00 s=0 e=0 z=0  None .rodata    @4071                                                        */
SECTION_RODATA u8 const lit_4071[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C79AB4-80C79ABC 0008+00 s=0 e=0 z=0  None .rodata    @4072                                                        */
SECTION_RODATA u8 const lit_4072[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C79ABC-80C79AC4 0008+00 s=0 e=0 z=0  None .rodata    @4073                                                        */
SECTION_RODATA u8 const lit_4073[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C79AC4-80C79AC8 0004+00 s=0 e=0 z=0  None .rodata    @4074                                                        */
SECTION_RODATA u32 const lit_4074 = 0x43360B61;

/* 80C79AC8-80C79ACC 0004+00 s=0 e=0 z=0  None .rodata    @4075                                                        */
SECTION_RODATA u32 const lit_4075 = 0x43B40000;

/* 80C79ACC-80C79AD0 0004+00 s=0 e=0 z=0  None .rodata    @4076                                                        */
SECTION_RODATA u32 const lit_4076 = 0x439D1463;

/* 80C79AD0-80C79AD4 0004+00 s=4 e=0 z=0  None .rodata    @4110                                                        */
SECTION_RODATA static u32 const lit_4110 = 0x3F800000;

/* 80C79AD4-80C79AD8 0004+00 s=0 e=0 z=0  None .rodata    @4156                                                        */
SECTION_RODATA u32 const lit_4156 = 0x3DCCCCCD;

/* 80C79AD8-80C79ADC 0004+00 s=1 e=0 z=0  None .rodata    @4157                                                        */
SECTION_RODATA static u32 const lit_4157 = 0xBF800000;

/* 80C79ADC-80C79AE0 0004+00 s=0 e=0 z=0  None .rodata    @4239                                                        */
SECTION_RODATA u32 const lit_4239 = 0x43960000;

/* 80C79AE0-80C79AE4 0004+00 s=0 e=0 z=0  None .rodata    @4285                                                        */
SECTION_RODATA u32 const lit_4285 = 0x3F000000;

/* 80C79AE4-80C79AEC 0008+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80C79AE4 = "togeRol";
#pragma pop

/* 80C77D50-80C77DBC 006C+00 s=1 e=0 z=0  None .text      CreateHeap__12daTogeRoll_cFv                                 */
//	80C77D64: 80C79AE4 (stringBase0)
//	80C77D68: 80C79AE4 (stringBase0)
//	80C77D70: 804061C0 (g_dComIfG_gameInfo)
//	80C77D74: 804061C0 (g_dComIfG_gameInfo)
//	80C77D84: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C77D94: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/CreateHeap__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C77DBC-80C78058 029C+00 s=1 e=0 z=0  None .text      create__12daTogeRoll_cFv                                     */
//	80C77DCC: 803621CC (_savegpr_25)
//	80C77DEC: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80C77DF0: 80C79CF0 (__vt__12daTogeRoll_c)
//	80C77DF4: 80C79CF0 (__vt__12daTogeRoll_c)
//	80C77DFC: 803C3728 (__vt__9cCcD_Stts)
//	80C77E00: 803C3728 (__vt__9cCcD_Stts)
//	80C77E0C: 80083760 (__ct__10dCcD_GSttsFv)
//	80C77E10: 803AC2E4 (__vt__9dCcD_Stts)
//	80C77E14: 803AC2E4 (__vt__9dCcD_Stts)
//	80C77E28: 80C7816C (__ct__8dCcD_SphFv)
//	80C77E2C: 80C7816C (__ct__8dCcD_SphFv)
//	80C77E30: 80C780A0 (__dt__8dCcD_SphFv)
//	80C77E34: 80C780A0 (__dt__8dCcD_SphFv)
//	80C77E40: 80361D60 (__construct_array)
//	80C77E4C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80C77E50: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C77E54: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C77E5C: 80C79CE4 (__vt__8cM3dGAab)
//	80C77E60: 80C79CE4 (__vt__8cM3dGAab)
//	80C77E6C: 8026EF88 (__ct__8cM3dGCpsFv)
//	80C77E70: 803C3608 (__vt__12cCcD_CpsAttr)
//	80C77E74: 803C3608 (__vt__12cCcD_CpsAttr)
//	80C77E84: 803AC170 (__vt__8dCcD_Cps)
//	80C77E88: 803AC170 (__vt__8dCcD_Cps)
//	80C77EA4: 802BE844 (__ct__16Z2SoundObjSimpleFv)
//	80C77EB8: 80C79AE4 (stringBase0)
//	80C77EBC: 80C79AE4 (stringBase0)
//	80C77EC0: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80C77ED4: 80C79AE4 (stringBase0)
//	80C77ED8: 80C79AE4 (stringBase0)
//	80C77EEC: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80C77F14: 800517EC (dPath_GetRoomPath__Fii)
//	80C77F34: 80C799EC (lit_3653)
//	80C77F38: 80C799EC (lit_3653)
//	80C77F68: 80C79A50 (mSpeed__12daTogeRoll_c)
//	80C77F6C: 80C79A50 (mSpeed__12daTogeRoll_c)
//	80C77F7C: 80C792CC (init_modeWaitInit__12daTogeRoll_cFv)
//	80C77F98: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80C77FA0: 80C77CC8 (setBaseMtx__12daTogeRoll_cFv)
//	80C77FB4: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80C77FC0: 80C79B0C (mCcDSph__12daTogeRoll_c)
//	80C77FC4: 80C79B0C (mCcDSph__12daTogeRoll_c)
//	80C77FD8: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80C77FF4: 80C79B4C (mCcDCps__12daTogeRoll_c)
//	80C77FF8: 80C79B4C (mCcDCps__12daTogeRoll_c)
//	80C77FFC: 800847D0 (Set__8dCcD_CpsFRC11dCcD_SrcCps)
//	80C78044: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/create__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C78058-80C780A0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80C78070: 80C79CE4 (__vt__8cM3dGAab)
//	80C78074: 80C79CE4 (__vt__8cM3dGAab)
//	80C78084: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80C780A0-80C7816C 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_SphFv                                            */
//	80C780C0: 803ABFC0 (__vt__8dCcD_Sph)
//	80C780C4: 803ABFC0 (__vt__8dCcD_Sph)
//	80C780E4: 803C3540 (__vt__12cCcD_SphAttr)
//	80C780E8: 803C3540 (__vt__12cCcD_SphAttr)
//	80C78100: 80C79CD8 (__vt__8cM3dGSph)
//	80C78104: 80C79CD8 (__vt__8cM3dGSph)
//	80C78114: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C78118: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C78128: 80C79CE4 (__vt__8cM3dGAab)
//	80C7812C: 80C79CE4 (__vt__8cM3dGAab)
//	80C7813C: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80C7814C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::~dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/__dt__8dCcD_SphFv.s"
}
#pragma pop


/* 80C7816C-80C781F0 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_SphFv                                            */
//	80C78180: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80C78184: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C78188: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C78190: 80C79CE4 (__vt__8cM3dGAab)
//	80C78194: 80C79CE4 (__vt__8cM3dGAab)
//	80C7819C: 80C79CD8 (__vt__8cM3dGSph)
//	80C781A0: 80C79CD8 (__vt__8cM3dGSph)
//	80C781A8: 803C3540 (__vt__12cCcD_SphAttr)
//	80C781AC: 803C3540 (__vt__12cCcD_SphAttr)
//	80C781BC: 803ABFC0 (__vt__8dCcD_Sph)
//	80C781C0: 803ABFC0 (__vt__8dCcD_Sph)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/__ct__8dCcD_SphFv.s"
}
#pragma pop


/* 80C781F0-80C78238 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80C78208: 80C79CD8 (__vt__8cM3dGSph)
//	80C7820C: 80C79CD8 (__vt__8cM3dGSph)
//	80C7821C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80C78238-80C78294 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80C78250: 80C79CCC (__vt__10dCcD_GStts)
//	80C78254: 80C79CCC (__vt__10dCcD_GStts)
//	80C78260: 80C79CC0 (__vt__10cCcD_GStts)
//	80C78264: 80C79CC0 (__vt__10cCcD_GStts)
//	80C78278: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80C78294-80C78638 03A4+00 s=1 e=0 z=0  None .text      Execute__12daTogeRoll_cFPPA3_A4_f                            */
//	80C782C4: 803621C0 (_savegpr_22)
//	80C782D0: 80C799E4 (lit_3651)
//	80C782D4: 80C799E4 (lit_3651)
//	80C782D8: 80C78638 (moveTogeRoll__12daTogeRoll_cFv)
//	80C782E4: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80C782F4: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80C78300: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80C7830C: 8008457C (GetTgHitObjSe__12dCcD_GObjInfFv)
//	80C78314: 800845B0 (getHitSeID__12dCcD_GObjInfFUci)
//	80C7832C: 80C79344 (init_modeBreak__12daTogeRoll_cFv)
//	80C78348: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80C78358: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80C78364: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80C78370: 8008457C (GetTgHitObjSe__12dCcD_GObjInfFv)
//	80C78378: 800845B0 (getHitSeID__12dCcD_GObjInfFUci)
//	80C78390: 80C79344 (init_modeBreak__12daTogeRoll_cFv)
//	80C783BC: 80263A48 (GetAc__8cCcD_ObjFv)
//	80C7840C: 802BE4A4 (startCollisionSE__14Z2SoundObjBaseFUlUlP14Z2SoundObjBase)
//	80C7842C: 804061C0 (g_dComIfG_gameInfo)
//	80C78430: 804061C0 (g_dComIfG_gameInfo)
//	80C7844C: 803DD470 (now__14mDoMtx_stack_c)
//	80C78450: 803DD470 (now__14mDoMtx_stack_c)
//	80C78490: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	80C784A0: 80346D6C (PSMTXMultVec)
//	80C784C8: 80347090 (PSVECAdd)
//	80C784DC: 8026F708 (SetR__8cM3dGSphFf)
//	80C784E8: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80C784F4: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80C7851C: 803DD470 (now__14mDoMtx_stack_c)
//	80C78520: 803DD470 (now__14mDoMtx_stack_c)
//	80C78530: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	80C78534: 803DD470 (now__14mDoMtx_stack_c)
//	80C78538: 803DD470 (now__14mDoMtx_stack_c)
//	80C78544: 80346D6C (PSMTXMultVec)
//	80C78554: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80C7857C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C785A8: 8026F03C (Set__8cM3dGCpsFRC9cM3dGCpsS)
//	80C785B4: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80C785BC: 80083830 (Move__10dCcD_GSttsFv)
//	80C785C8: 8002D06C (dComIfGp_getReverb__Fi)
//	80C785F8: 80C77CC8 (setBaseMtx__12daTogeRoll_cFv)
//	80C78624: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daTogeRoll_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/Execute__12daTogeRoll_cFPPA3_A4_f.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C79D38-80C79D44 000C+00 s=1 e=0 z=0  None .bss       @3645                                                        */
static u8 lit_3645[12];

/* 80C79D44-80C79D58 0014+00 s=4 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[20];

/* 80C79D58-80C79D5C 0004+00 s=1 e=0 z=0  None .bss       None                                                         */
static u8 data_80C79D58[4];

/* 80C78638-80C78A8C 0454+00 s=1 e=0 z=0  None .text      moveTogeRoll__12daTogeRoll_cFv                               */
//	80C78648: 803621D0 (_savegpr_26)
//	80C78650: 80C79AEC (cNullVec__6Z2Calc)
//	80C78654: 80C79AEC (cNullVec__6Z2Calc)
//	80C78658: 80C799E4 (lit_3651)
//	80C7865C: 80C799E4 (lit_3651)
//	80C7866C: 80C79D58 (data_80C79D58)
//	80C78670: 80C79D58 (data_80C79D58)
//	80C78784: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	80C78794: 800846F0 (GetCoHitObj__12dCcD_GObjInfFv)
//	80C78798: 80263A48 (GetAc__8cCcD_ObjFv)
//	80C787D4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C787FC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C78820: 80347194 (PSVECDotProduct)
//	80C78838: 80C78A8C (init_modeBound__12daTogeRoll_cFv)
//	80C7887C: 80362084 (__ptmf_scall)
//	80C78890: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C788B8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C788DC: 80266F48 (normalizeZP__4cXyzFv)
//	80C78914: 80347138 (PSVECSquareMag)
//	80C78984: 80450AE0 (__float_nan)
//	80C78988: 80450AE0 (__float_nan)
//	80C789F4: 80450AE0 (__float_nan)
//	80C789F8: 80450AE0 (__float_nan)
//	80C78A78: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::moveTogeRoll() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/moveTogeRoll__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C78A8C-80C78B7C 00F0+00 s=1 e=0 z=0  None .text      init_modeBound__12daTogeRoll_cFv                             */
//	80C78AA8: 80C79A90 (lit_3958)
//	80C78AAC: 80C79A90 (lit_3958)
//	80C78AB4: 80C795E8 (setNextPoint__12daTogeRoll_cFv)
//	80C78AD0: 80C79D44 (l_HIO)
//	80C78AD4: 80C79D44 (l_HIO)
//	80C78AEC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C78B10: 80266F48 (normalizeZP__4cXyzFv)
//	80C78B34: 80C79D44 (l_HIO)
//	80C78B38: 80C79D44 (l_HIO)
//	80C78B44: 802685B0 (cM3d_InDivPos2__FPC3VecPC3VecfP3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::init_modeBound() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/init_modeBound__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C78B7C-80C78BD8 005C+00 s=1 e=0 z=0  None .text      modeBound__12daTogeRoll_cFv                                  */
//	80C78B98: 80C79AD0 (lit_4110)
//	80C78B9C: 80C79AD0 (lit_4110)
//	80C78BA8: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80C78BAC: 80C79A90 (lit_3958)
//	80C78BB0: 80C79A90 (lit_3958)
//	80C78BC0: 80C78C34 (init_modeBoundWait__12daTogeRoll_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::modeBound() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/modeBound__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C78BD8-80C78C34 005C+00 s=1 e=0 z=0  None .text      modeBound2__12daTogeRoll_cFv                                 */
//	80C78BF4: 80C79AD0 (lit_4110)
//	80C78BF8: 80C79AD0 (lit_4110)
//	80C78C04: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80C78C08: 80C79A90 (lit_3958)
//	80C78C0C: 80C79A90 (lit_3958)
//	80C78C1C: 80C78C34 (init_modeBoundWait__12daTogeRoll_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::modeBound2() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/modeBound2__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C78C34-80C78C50 001C+00 s=2 e=0 z=0  None .text      init_modeBoundWait__12daTogeRoll_cFv                         */
//	80C78C34: 80C79D44 (l_HIO)
//	80C78C38: 80C79D44 (l_HIO)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::init_modeBoundWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/init_modeBoundWait__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C78C50-80C78CA8 0058+00 s=1 e=0 z=0  None .text      modeBoundWait__12daTogeRoll_cFv                              */
//	80C78C94: 80C79318 (init_modeWait__12daTogeRoll_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::modeBoundWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/modeBoundWait__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C78CA8-80C78CB4 000C+00 s=1 e=0 z=0  None .text      init_modeAcc__12daTogeRoll_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::init_modeAcc() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/init_modeAcc__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C78CB4-80C78DA0 00EC+00 s=1 e=0 z=0  None .text      modeAcc__12daTogeRoll_cFv                                    */
//	80C78CC4: 803621D8 (_savegpr_28)
//	80C78CCC: 80C799E4 (lit_3651)
//	80C78CD0: 80C799E4 (lit_3651)
//	80C78CDC: 80C79D44 (l_HIO)
//	80C78CE0: 80C79D44 (l_HIO)
//	80C78CEC: 80270740 (cLib_chaseF__FPfff)
//	80C78D08: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80C78D14: 8002D06C (dComIfGp_getReverb__Fi)
//	80C78D20: 803620AC (__cvt_fp2unsigned)
//	80C78D34: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C78D38: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C78D60: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80C78D74: 8026702C (__eq__4cXyzCFRC3Vec)
//	80C78D84: 80C78DA0 (init_modeMove__12daTogeRoll_cFv)
//	80C78D8C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::modeAcc() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/modeAcc__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C78DA0-80C78DAC 000C+00 s=1 e=0 z=0  None .text      init_modeMove__12daTogeRoll_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::init_modeMove() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/init_modeMove__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C78DAC-80C790C4 0318+00 s=1 e=0 z=0  None .text      modeMove__12daTogeRoll_cFv                                   */
//	80C78DC4: 803621DC (_savegpr_29)
//	80C78DCC: 80C799E4 (lit_3651)
//	80C78DD0: 80C799E4 (lit_3651)
//	80C78E10: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C78E18: 80347138 (PSVECSquareMag)
//	80C78E88: 80450AE0 (__float_nan)
//	80C78E8C: 80450AE0 (__float_nan)
//	80C78EF8: 80450AE0 (__float_nan)
//	80C78EFC: 80450AE0 (__float_nan)
//	80C78F3C: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80C78F48: 8002D06C (dComIfGp_getReverb__Fi)
//	80C78F54: 803620AC (__cvt_fp2unsigned)
//	80C78F68: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C78F6C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C78F94: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80C78FA4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C78FAC: 80347138 (PSVECSquareMag)
//	80C7901C: 80450AE0 (__float_nan)
//	80C79020: 80450AE0 (__float_nan)
//	80C7908C: 80450AE0 (__float_nan)
//	80C79090: 80450AE0 (__float_nan)
//	80C790A0: 80C790C4 (init_modeBrk__12daTogeRoll_cFv)
//	80C790B0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::modeMove() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/modeMove__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C790C4-80C790D0 000C+00 s=1 e=0 z=0  None .text      init_modeBrk__12daTogeRoll_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::init_modeBrk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/init_modeBrk__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C790D0-80C792CC 01FC+00 s=1 e=0 z=0  None .text      modeBrk__12daTogeRoll_cFv                                    */
//	80C790F0: 803621DC (_savegpr_29)
//	80C790F8: 80C799E4 (lit_3651)
//	80C790FC: 80C799E4 (lit_3651)
//	80C7912C: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80C79140: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C79148: 80347138 (PSVECSquareMag)
//	80C791B8: 80450AE0 (__float_nan)
//	80C791BC: 80450AE0 (__float_nan)
//	80C79228: 80450AE0 (__float_nan)
//	80C7922C: 80450AE0 (__float_nan)
//	80C79240: 8002D06C (dComIfGp_getReverb__Fi)
//	80C79258: 803620AC (__cvt_fp2unsigned)
//	80C79260: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C79264: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C7928C: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80C792A0: 80C792CC (init_modeWaitInit__12daTogeRoll_cFv)
//	80C792B8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::modeBrk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/modeBrk__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C792CC-80C792E4 0018+00 s=2 e=0 z=0  None .text      init_modeWaitInit__12daTogeRoll_cFv                          */
//	80C792CC: 80C79A90 (lit_3958)
//	80C792D0: 80C79A90 (lit_3958)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::init_modeWaitInit() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/init_modeWaitInit__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C792E4-80C79318 0034+00 s=1 e=0 z=0  None .text      modeWaitInit__12daTogeRoll_cFv                               */
//	80C792F8: 80C795E8 (setNextPoint__12daTogeRoll_cFv)
//	80C79300: 80C79318 (init_modeWait__12daTogeRoll_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::modeWaitInit() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/modeWaitInit__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C79318-80C79324 000C+00 s=2 e=0 z=0  None .text      init_modeWait__12daTogeRoll_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::init_modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/init_modeWait__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C79324-80C79344 0020+00 s=1 e=0 z=0  None .text      modeWait__12daTogeRoll_cFv                                   */
//	80C79330: 80C78CA8 (init_modeAcc__12daTogeRoll_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/modeWait__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C79344-80C793C8 0084+00 s=1 e=0 z=0  None .text      init_modeBreak__12daTogeRoll_cFv                             */
//	80C79360: 8002D06C (dComIfGp_getReverb__Fi)
//	80C79374: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C79378: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C7938C: 80C79AD0 (lit_4110)
//	80C79390: 80C79AD0 (lit_4110)
//	80C79398: 80C79AD8 (lit_4157)
//	80C7939C: 80C79AD8 (lit_4157)
//	80C793A8: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::init_modeBreak() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/init_modeBreak__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C793C8-80C795E8 0220+00 s=1 e=0 z=0  None .text      modeBreak__12daTogeRoll_cFv                                  */
//	80C793FC: 804061C0 (g_dComIfG_gameInfo)
//	80C79400: 804061C0 (g_dComIfG_gameInfo)
//	80C79440: 80C79AD0 (lit_4110)
//	80C79444: 80C79AD0 (lit_4110)
//	80C79448: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C7948C: 80C79AD0 (lit_4110)
//	80C79490: 80C79AD0 (lit_4110)
//	80C79494: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C794D8: 80C79AD0 (lit_4110)
//	80C794DC: 80C79AD0 (lit_4110)
//	80C794E0: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C79524: 80C79AD0 (lit_4110)
//	80C79528: 80C79AD0 (lit_4110)
//	80C7952C: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C79570: 80C79AD0 (lit_4110)
//	80C79574: 80C79AD0 (lit_4110)
//	80C79578: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C795BC: 80C79AD0 (lit_4110)
//	80C795C0: 80C79AD0 (lit_4110)
//	80C795C4: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C795CC: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::modeBreak() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/modeBreak__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C795E8-80C79714 012C+00 s=2 e=0 z=0  None .text      setNextPoint__12daTogeRoll_cFv                               */
//	80C79620: 800517EC (dPath_GetRoomPath__Fii)
//	80C796DC: 80C799EC (lit_3653)
//	80C796E0: 80C799EC (lit_3653)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::setNextPoint() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/setNextPoint__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C79714-80C797B8 00A4+00 s=1 e=0 z=0  None .text      Draw__12daTogeRoll_cFv                                       */
//	80C7972C: 8042CA54 (g_env_light)
//	80C79730: 8042CA54 (g_env_light)
//	80C79740: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80C79744: 8042CA54 (g_env_light)
//	80C79748: 8042CA54 (g_env_light)
//	80C79758: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C7975C: 804061C0 (g_dComIfG_gameInfo)
//	80C79760: 804061C0 (g_dComIfG_gameInfo)
//	80C79768: 80434AC8 (j3dSys)
//	80C7976C: 80434AC8 (j3dSys)
//	80C79780: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80C79784: 804061C0 (g_dComIfG_gameInfo)
//	80C79788: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/Draw__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C797B8-80C797FC 0044+00 s=1 e=0 z=0  None .text      Delete__12daTogeRoll_cFv                                     */
//	80C797D0: 802BDFF8 (deleteObject__14Z2SoundObjBaseFv)
//	80C797D8: 80C79AE4 (stringBase0)
//	80C797DC: 80C79AE4 (stringBase0)
//	80C797E0: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTogeRoll_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/Delete__12daTogeRoll_cFv.s"
}
#pragma pop


/* 80C797FC-80C79828 002C+00 s=1 e=0 z=0  None .text      daTogeRoll_Draw__FP12daTogeRoll_c                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTogeRoll_c* False
// 	 daTogeRoll_c False
asm static void daTogeRoll_Draw(daTogeRoll_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/daTogeRoll_Draw__FP12daTogeRoll_c.s"
}
#pragma pop


/* 80C79828-80C79848 0020+00 s=1 e=0 z=0  None .text      daTogeRoll_Execute__FP12daTogeRoll_c                         */
//	80C79834: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTogeRoll_c* False
// 	 daTogeRoll_c False
asm static void daTogeRoll_Execute(daTogeRoll_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/daTogeRoll_Execute__FP12daTogeRoll_c.s"
}
#pragma pop


/* 80C79848-80C79868 0020+00 s=1 e=0 z=0  None .text      daTogeRoll_Delete__FP12daTogeRoll_c                          */
//	80C79854: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTogeRoll_c* False
// 	 daTogeRoll_c False
asm static void daTogeRoll_Delete(daTogeRoll_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/daTogeRoll_Delete__FP12daTogeRoll_c.s"
}
#pragma pop


/* 80C79868-80C79888 0020+00 s=1 e=0 z=0  None .text      daTogeRoll_Create__FP10fopAc_ac_c                            */
//	80C79874: 80C77DBC (create__12daTogeRoll_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daTogeRoll_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/daTogeRoll_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80C79888-80C798D0 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80C798A0: 80C79CC0 (__vt__10cCcD_GStts)
//	80C798A4: 80C79CC0 (__vt__10cCcD_GStts)
//	80C798B4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80C798D0-80C7992C 005C+00 s=2 e=0 z=0  None .text      __dt__16daTogeRoll_HIO_cFv                                   */
//	80C798E8: 80C79D18 (__vt__16daTogeRoll_HIO_c)
//	80C798EC: 80C79D18 (__vt__16daTogeRoll_HIO_c)
//	80C798F8: 80C79D24 (__vt__14mDoHIO_entry_c)
//	80C798FC: 80C79D24 (__vt__14mDoHIO_entry_c)
//	80C79910: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daTogeRoll_HIO_c::~daTogeRoll_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/__dt__16daTogeRoll_HIO_cFv.s"
}
#pragma pop


/* 80C7992C-80C799D0 00A4+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_lv6TogeRoll_cpp                              */
//	80C79938: 80C79D44 (l_HIO)
//	80C7993C: 80C79D44 (l_HIO)
//	80C79940: 80C77C2C (__ct__16daTogeRoll_HIO_cFv)
//	80C79944: 80C798D0 (__dt__16daTogeRoll_HIO_cFv)
//	80C79948: 80C798D0 (__dt__16daTogeRoll_HIO_cFv)
//	80C7994C: 80C79D38 (lit_3645)
//	80C79950: 80C79D38 (lit_3645)
//	80C79954: 80C77BB8 (__register_global_object)
//	80C79958: 80C79B0C (mCcDSph__12daTogeRoll_c)
//	80C7995C: 80C79B0C (mCcDSph__12daTogeRoll_c)
//	80C79964: 80C799F0 (mCcDObjInfo__12daTogeRoll_c)
//	80C79968: 80C799F0 (mCcDObjInfo__12daTogeRoll_c)
//	80C7998C: 80C79B4C (mCcDCps__12daTogeRoll_c)
//	80C79990: 80C79B4C (mCcDCps__12daTogeRoll_c)
//	80C79998: 80C79A20 (mCcDObjInfo2__12daTogeRoll_c)
//	80C7999C: 80C79A20 (mCcDObjInfo2__12daTogeRoll_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_lv6TogeRoll_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv6TogeRoll/d_a_obj_lv6TogeRoll/__sinit_d_a_obj_lv6TogeRoll_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80C7992C = (void*)__sinit_d_a_obj_lv6TogeRoll_cpp;
#pragma pop


