// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_bkdoor
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct fopAc_ac_c {
};

struct daObjBkDoor_c {
	/* 80578D4C */ // True False
void initBaseMtx();
	/* 80578D88 */ // True False
void setBaseMtx();
	/* 80578E14 */ // True False
void Create();
	/* 80578EA0 */ // True False
void CreateHeap();
	/* 80578F20 */ // True False
void create1st();
	/* 80578FC0 */ // True False
void openCheck();
	/* 8057902C */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 805792E4 */ // True False
void Draw();
	/* 80579388 */ // True False
void Delete();
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct cXyz {
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dBgW {
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void search_door(void*, void*);
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
static void daObjBkDoor_create1st(daObjBkDoor_c*);
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
static void daObjBkDoor_MoveBGDelete(daObjBkDoor_c*);
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
static void daObjBkDoor_MoveBGExecute(daObjBkDoor_c*);
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
static void daObjBkDoor_MoveBGDraw(daObjBkDoor_c*);

// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void search_door__FPvPv();
// True False
extern "C" void initBaseMtx__13daObjBkDoor_cFv();
// True False
extern "C" void setBaseMtx__13daObjBkDoor_cFv();
// True False
extern "C" void Create__13daObjBkDoor_cFv();
// True False
extern "C" void CreateHeap__13daObjBkDoor_cFv();
// True False
extern "C" void create1st__13daObjBkDoor_cFv();
// True False
extern "C" void openCheck__13daObjBkDoor_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__13daObjBkDoor_cFPPA3_A4_f();
// True False
extern "C" void Draw__13daObjBkDoor_cFv();
// True False
extern "C" void Delete__13daObjBkDoor_cFv();
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
extern "C" static void daObjBkDoor_create1st__FP13daObjBkDoor_c();
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
extern "C" static void daObjBkDoor_MoveBGDelete__FP13daObjBkDoor_c();
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
extern "C" static void daObjBkDoor_MoveBGExecute__FP13daObjBkDoor_c();
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
extern "C" static void daObjBkDoor_MoveBGDraw__FP13daObjBkDoor_c();
extern "C" extern u8 const l_col_offsetX[20];
extern "C" extern u8 const l_roll_crash_check_areaL[48];
extern "C" extern u8 const l_roll_crash_check_areaR[48];
extern "C" extern u32 const lit_3817;
extern "C" extern u32 const lit_3818;
extern "C" extern u32 const lit_3819;
extern "C" extern u32 const lit_3820;
extern "C" extern u32 const lit_3821;
extern "C" extern u32 const lit_3822;
extern "C" extern u32 const lit_3823;
extern "C" extern u32 const lit_3824;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_BkDoor[12];
extern "C" extern void* __vt__13daObjBkDoor_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void dLib_checkActorInRectangle(fopAc_ac_c*, fopAc_ac_c*, cXyz const*, cXyz const*);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void dLib_checkActorInRectangle__FP10fopAc_ac_cP10fopAc_ac_cPC4cXyzPC4cXyz();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _restgpr_27();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* 80578D18-80578D4C 0034+00 s=1 e=0 z=0  None .text      search_door__FPvPv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void search_door(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/search_door__FPvPv.s"
}
#pragma pop


/* 80578D4C-80578D88 003C+00 s=1 e=0 z=0  None .text      initBaseMtx__13daObjBkDoor_cFv                               */
//	80578D74: 80578D88 (setBaseMtx__13daObjBkDoor_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBkDoor_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/initBaseMtx__13daObjBkDoor_cFv.s"
}
#pragma pop


/* 80578D88-80578E14 008C+00 s=2 e=0 z=0  None .text      setBaseMtx__13daObjBkDoor_cFv                                */
//	80578D9C: 803DD470 (now__14mDoMtx_stack_c)
//	80578DA0: 803DD470 (now__14mDoMtx_stack_c)
//	80578DB0: 803468E8 (PSMTXTrans)
//	80578DB4: 803DD470 (now__14mDoMtx_stack_c)
//	80578DB8: 803DD470 (now__14mDoMtx_stack_c)
//	80578DC0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80578DC4: 803DD470 (now__14mDoMtx_stack_c)
//	80578DC8: 803DD470 (now__14mDoMtx_stack_c)
//	80578DD8: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80578DDC: 803DD470 (now__14mDoMtx_stack_c)
//	80578DE0: 803DD470 (now__14mDoMtx_stack_c)
//	80578DEC: 803464B0 (PSMTXCopy)
//	80578DF0: 803DD470 (now__14mDoMtx_stack_c)
//	80578DF4: 803DD470 (now__14mDoMtx_stack_c)
//	80578DFC: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBkDoor_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/setBaseMtx__13daObjBkDoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80579490-80579498 0008+00 s=2 e=0 z=0  None .rodata    l_bmd                                                        */
SECTION_RODATA static u8 const l_bmd[8] = {
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05,
};

/* 80579498-805794A0 0008+00 s=1 e=0 z=0  None .rodata    l_dzb                                                        */
SECTION_RODATA static u8 const l_dzb[8] = {
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09,
};

/* 805794A0-805794B4 0014+00 s=0 e=0 z=0  None .rodata    l_col_offsetX                                                */
SECTION_RODATA u8 const l_col_offsetX[20] = {
	0x42, 0xA0, 0x00, 0x00, 0x43, 0x20, 0x00, 0x00, 0x43, 0x70, 0x00, 0x00, 0x43, 0xA0, 0x00, 0x00,
	0x43, 0xC8, 0x00, 0x00,
};

/* 805794B4-805794E4 0030+00 s=0 e=0 z=0  None .rodata    l_roll_crash_check_areaL                                     */
SECTION_RODATA u8 const l_roll_crash_check_areaL[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x0C, 0x00, 0x00, 0x44, 0x89, 0x80, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xC3, 0x0C, 0x00, 0x00, 0x44, 0x89, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x43, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x0C, 0x00, 0x00,
};

/* 805794E4-80579514 0030+00 s=0 e=0 z=0  None .rodata    l_roll_crash_check_areaR                                     */
SECTION_RODATA u8 const l_roll_crash_check_areaR[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x0C, 0x00, 0x00, 0xC4, 0x89, 0x80, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xC3, 0x0C, 0x00, 0x00, 0xC4, 0x89, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x43, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x0C, 0x00, 0x00,
};

/* 80579514-80579518 0004+00 s=1 e=0 z=0  None .rodata    @3702                                                        */
SECTION_RODATA static u32 const lit_3702 = 0x40000000;

/* 80578E14-80578EA0 008C+00 s=1 e=0 z=0  None .text      Create__13daObjBkDoor_cFv                                    */
//	80578E28: 804061C0 (g_dComIfG_gameInfo)
//	80578E2C: 804061C0 (g_dComIfG_gameInfo)
//	80578E34: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80578E38: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80578E40: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80578E5C: 80578D4C (initBaseMtx__13daObjBkDoor_cFv)
//	80578E78: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80578E7C: 80579514 (lit_3702)
//	80578E80: 80579514 (lit_3702)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBkDoor_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/Create__13daObjBkDoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80579518-8057951C 0004+00 s=0 e=0 z=0  None .rodata    @3817                                                        */
SECTION_RODATA u32 const lit_3817 = 0xC4160000;

/* 8057951C-80579520 0004+00 s=0 e=0 z=0  None .rodata    @3818                                                        */
SECTION_RODATA u32 const lit_3818 = 0x44160000;

/* 80579520-80579524 0004+00 s=0 e=0 z=0  None .rodata    @3819                                                        */
SECTION_RODATA u32 const lit_3819 = 0x442F0000;

/* 80579524-80579528 0004+00 s=0 e=0 z=0  None .rodata    @3820                                                        */
SECTION_RODATA u32 const lit_3820 = 0x3F800000;

/* 80579528-8057952C 0004+00 s=0 e=0 z=0  None .rodata    @3821                                                        */
SECTION_RODATA u32 const lit_3821 = 0xBF800000;

/* 8057952C-80579530 0004+00 s=0 e=0 z=0  None .rodata    @3822                                                        */
SECTION_RODATA u32 const lit_3822 = 0xC42F0000;

/* 80579530-80579534 0004+00 s=0 e=0 z=0  None .rodata    @3823                                                        */
SECTION_RODATA u32 const lit_3823 = 0x3DCCCCCD;

/* 80579534-80579538 0004+00 s=0 e=0 z=0  None .rodata    @3824                                                        */
SECTION_RODATA u32 const lit_3824 = 0x41A00000;

/* 80579538-80579541 0009+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80579538 = "A_BkDoor";
#pragma pop

/* 80579544-80579548 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80578EA0-80578F20 0080+00 s=1 e=0 z=0  None .text      CreateHeap__13daObjBkDoor_cFv                                */
//	80578EB4: 80579544 (l_arcName)
//	80578EB8: 80579544 (l_arcName)
//	80578EC8: 80579490 (l_bmd)
//	80578ECC: 80579490 (l_bmd)
//	80578ED4: 804061C0 (g_dComIfG_gameInfo)
//	80578ED8: 804061C0 (g_dComIfG_gameInfo)
//	80578EE8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80578EF8: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBkDoor_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/CreateHeap__13daObjBkDoor_cFv.s"
}
#pragma pop


/* 80578F20-80578FC0 00A0+00 s=1 e=0 z=0  None .text      create1st__13daObjBkDoor_cFv                                 */
//	80578F44: 80579544 (l_arcName)
//	80578F48: 80579544 (l_arcName)
//	80578F50: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80578F64: 80579544 (l_arcName)
//	80578F68: 80579544 (l_arcName)
//	80578F78: 80579498 (l_dzb)
//	80578F7C: 80579498 (l_dzb)
//	80578F84: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80578F88: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80578F94: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBkDoor_c::create1st() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/create1st__13daObjBkDoor_cFv.s"
}
#pragma pop


/* 80578FC0-8057902C 006C+00 s=1 e=0 z=0  None .text      openCheck__13daObjBkDoor_cFv                                 */
//	80578FE0: 80578D18 (search_door__FPvPv)
//	80578FE4: 80578D18 (search_door__FPvPv)
//	80578FEC: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBkDoor_c::openCheck() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/openCheck__13daObjBkDoor_cFv.s"
}
#pragma pop


/* 8057902C-805792E4 02B8+00 s=1 e=0 z=0  None .text      Execute__13daObjBkDoor_cFPPA3_A4_f                           */
//	8057903C: 803621D4 (_savegpr_27)
//	80579048: 80579490 (l_bmd)
//	8057904C: 80579490 (l_bmd)
//	80579050: 804061C0 (g_dComIfG_gameInfo)
//	80579054: 804061C0 (g_dComIfG_gameInfo)
//	80579060: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80579064: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	8057906C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80579084: 80578FC0 (openCheck__13daObjBkDoor_cFv)
//	8057914C: 80032654 (dLib_checkActorInRectangle__FP10fopAc_ac_cP10fopAc_ac_cPC4cXyzPC4cXyz)
//	80579180: 8002D06C (dComIfGp_getReverb__Fi)
//	80579194: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80579198: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805791C0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	805791D0: 8002D06C (dComIfGp_getReverb__Fi)
//	805791E4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	805791E8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80579210: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80579234: 8002D06C (dComIfGp_getReverb__Fi)
//	80579248: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8057924C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80579274: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80579284: 80578D88 (setBaseMtx__13daObjBkDoor_cFv)
//	80579294: 80439A20 (sincosTable___5JMath)
//	80579298: 80439A20 (sincosTable___5JMath)
//	805792C4: 8026FA80 (cLib_addCalc0__FPfff)
//	805792D0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjBkDoor_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/Execute__13daObjBkDoor_cFPPA3_A4_f.s"
}
#pragma pop


/* 805792E4-80579388 00A4+00 s=1 e=0 z=0  None .text      Draw__13daObjBkDoor_cFv                                      */
//	805792FC: 8042CA54 (g_env_light)
//	80579300: 8042CA54 (g_env_light)
//	80579310: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80579314: 8042CA54 (g_env_light)
//	80579318: 8042CA54 (g_env_light)
//	80579328: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	8057932C: 804061C0 (g_dComIfG_gameInfo)
//	80579330: 804061C0 (g_dComIfG_gameInfo)
//	80579338: 80434AC8 (j3dSys)
//	8057933C: 80434AC8 (j3dSys)
//	80579350: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80579354: 804061C0 (g_dComIfG_gameInfo)
//	80579358: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBkDoor_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/Draw__13daObjBkDoor_cFv.s"
}
#pragma pop


/* 80579388-805793BC 0034+00 s=1 e=0 z=0  None .text      Delete__13daObjBkDoor_cFv                                    */
//	80579394: 80579544 (l_arcName)
//	80579398: 80579544 (l_arcName)
//	805793A4: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBkDoor_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/Delete__13daObjBkDoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80579548-80579568 0020+00 s=1 e=0 z=0  None .data      daObjBkDoor_METHODS                                          */
SECTION_DATA static void* daObjBkDoor_METHODS[8] = {
	(void*)daObjBkDoor_create1st__FP13daObjBkDoor_c,
	(void*)daObjBkDoor_MoveBGDelete__FP13daObjBkDoor_c,
	(void*)daObjBkDoor_MoveBGExecute__FP13daObjBkDoor_c,
	(void*)NULL,
	(void*)daObjBkDoor_MoveBGDraw__FP13daObjBkDoor_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80579568-80579598 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_BkDoor                                         */
SECTION_DATA void* g_profile_Obj_BkDoor[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00620000,
	(void*)&g_fpcLf_Method,
	(void*)0x000005C0,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01C30000,
	(void*)&daObjBkDoor_METHODS,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80579598-805795C0 0028+00 s=1 e=0 z=0  None .data      __vt__13daObjBkDoor_c                                        */
SECTION_DATA void* __vt__13daObjBkDoor_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__13daObjBkDoor_cFv,
	(void*)Create__13daObjBkDoor_cFv,
	(void*)Execute__13daObjBkDoor_cFPPA3_A4_f,
	(void*)Draw__13daObjBkDoor_cFv,
	(void*)Delete__13daObjBkDoor_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 805793BC-8057941C 0060+00 s=1 e=0 z=0  None .text      daObjBkDoor_create1st__FP13daObjBkDoor_c                     */
//	805793E4: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	805793E8: 80579598 (__vt__13daObjBkDoor_c)
//	805793EC: 80579598 (__vt__13daObjBkDoor_c)
//	80579404: 80578F20 (create1st__13daObjBkDoor_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
asm static void daObjBkDoor_create1st(daObjBkDoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/daObjBkDoor_create1st__FP13daObjBkDoor_c.s"
}
#pragma pop


/* 8057941C-8057943C 0020+00 s=1 e=0 z=0  None .text      daObjBkDoor_MoveBGDelete__FP13daObjBkDoor_c                  */
//	80579428: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
asm static void daObjBkDoor_MoveBGDelete(daObjBkDoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/daObjBkDoor_MoveBGDelete__FP13daObjBkDoor_c.s"
}
#pragma pop


/* 8057943C-8057945C 0020+00 s=1 e=0 z=0  None .text      daObjBkDoor_MoveBGExecute__FP13daObjBkDoor_c                 */
//	80579448: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
asm static void daObjBkDoor_MoveBGExecute(daObjBkDoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/daObjBkDoor_MoveBGExecute__FP13daObjBkDoor_c.s"
}
#pragma pop


/* 8057945C-80579488 002C+00 s=1 e=0 z=0  None .text      daObjBkDoor_MoveBGDraw__FP13daObjBkDoor_c                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjBkDoor_c* False
// 	 daObjBkDoor_c False
asm static void daObjBkDoor_MoveBGDraw(daObjBkDoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bkdoor/d_a_obj_bkdoor/daObjBkDoor_MoveBGDraw__FP13daObjBkDoor_c.s"
}
#pragma pop


