// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_kbacket
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266F48 */ // False False
void normalizeZP();
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CE70 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void scaleM(cXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daObj_KBacket_c {
	/* 80585E4C */ // True False
~daObj_KBacket_c();
	/* 80586048 */ // True False
void create();
	/* 80586604 */ // True False
void CreateHeap();
	/* 80586704 */ // True False
void Delete();
	/* 80586738 */ // True False
void Execute();
	/* 8058742C */ // True False
void Draw();
	/* 805875A0 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 805875C0 */ // True False
void setEnvTevColor();
	/* 8058761C */ // True False
void setRoomNo();
	/* 80587660 */ // True False
void reset();
	/* 80587694 */ // True False
void setMtx();
	/* 805877C4 */ // True False
//  s16 False
//  int False
void calcRollAngle(s16, int);
	/* 80587864 */ // True False
//  s16 False
//  s16* False
// 	 s16 False
void getWallAngle(s16, s16*);
	/* 805879F4 */ // True False
void setSmokePrtcl();
	/* 80587A70 */ // True False
void setWaterPrtcl();
	/* 80587B68 */ // True False
void setHamonPrtcl();
};

struct daObj_KBacket_Param_c {
	/* 80587D18 */ // True False
~daObj_KBacket_Param_c();
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B8B4 */ // False False
//  u32 False
void forceOnEventMove(u32);
	};

	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct _GXTexObj {
};

struct dDlst_shadowControl_c {
	/* 80055F84 */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void setSimple(cXyz*, f32, f32, cXyz*, s16, f32, _GXTexObj*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80586538 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80586594 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 805864C8 */ // True False
~dBgS_AcchCir();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct dBgS {
	/* 80074BE8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyColor(cBgS_PolyInfo const&);
	/* 80075100 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomId(cBgS_PolyInfo const&);
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGPla {
	/* 80587558 */ // True False
~cM3dGPla();
};

struct cM3dGLin {
	/* 805863F0 */ // True False
~cM3dGLin();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80586438 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80586480 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80587C40 */ // True False
~cCcD_GStts();
};

struct cBgS_LinChk {
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daObj_KBacket_Create(void*);
// True False
//  void* False
// 	 void False
static void daObj_KBacket_Delete(void*);
// True False
//  void* False
// 	 void False
static void daObj_KBacket_Execute(void*);
// True False
//  void* False
// 	 void False
static void daObj_KBacket_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daObj_KBacket_IsDelete(void*);
// False True
//  int* False
// 	 int False
void cLib_calcTimer__template0(int*);

// True False
extern "C" void __dt__15daObj_KBacket_cFv();
// True False
extern "C" void create__15daObj_KBacket_cFv();
// True False
extern "C" void __dt__8cM3dGLinFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void CreateHeap__15daObj_KBacket_cFv();
// True False
extern "C" void Delete__15daObj_KBacket_cFv();
// True False
extern "C" void Execute__15daObj_KBacket_cFv();
// True False
extern "C" void Draw__15daObj_KBacket_cFv();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__15daObj_KBacket_cFP10fopAc_ac_c();
// True False
extern "C" void setEnvTevColor__15daObj_KBacket_cFv();
// True False
extern "C" void setRoomNo__15daObj_KBacket_cFv();
// True False
extern "C" void reset__15daObj_KBacket_cFv();
// True False
extern "C" void setMtx__15daObj_KBacket_cFv();
// True False
//  s16 False
//  int False
extern "C" void calcRollAngle__15daObj_KBacket_cFsi();
// True False
//  s16 False
//  s16* False
// 	 s16 False
extern "C" void getWallAngle__15daObj_KBacket_cFsPs();
// True False
extern "C" void setSmokePrtcl__15daObj_KBacket_cFv();
// True False
extern "C" void setWaterPrtcl__15daObj_KBacket_cFv();
// True False
extern "C" void setHamonPrtcl__15daObj_KBacket_cFv();
// True False
//  void* False
// 	 void False
extern "C" static void daObj_KBacket_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daObj_KBacket_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daObj_KBacket_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daObj_KBacket_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daObj_KBacket_IsDelete__FPv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// False True
//  int* False
// 	 int False
extern "C" void func_80587C88();
// False False
extern "C" void __sinit_d_a_obj_kbacket_cpp();
// True False
extern "C" void __dt__21daObj_KBacket_Param_cFv();
// True False
extern "C" static void func_80587D60();
// True False
extern "C" static void func_80587D68();
extern "C" extern u32 const lit_3965;
extern "C" extern u8 const lit_3967[4];
extern "C" extern u32 const lit_3968;
extern "C" extern u32 const lit_3969;
extern "C" extern u32 const lit_4463;
extern "C" extern u32 const lit_4464;
extern "C" extern u32 const lit_4465;
extern "C" extern u32 const lit_4466;
extern "C" extern u32 const lit_4467;
extern "C" extern u32 const lit_4468;
extern "C" extern u32 const lit_4470;
extern "C" extern u32 const lit_4471;
extern "C" extern u32 const lit_4472;
extern "C" extern u32 const lit_4473;
extern "C" extern u32 const lit_4474;
extern "C" extern u32 const lit_4475;
extern "C" extern u32 const lit_4476;
extern "C" extern u32 const lit_4477;
extern "C" extern u32 const lit_4478;
extern "C" extern u32 const lit_4480;
extern "C" extern u32 const lit_4481;
extern "C" extern u32 const lit_4482;
extern "C" extern u32 const lit_4484;
extern "C" extern u32 const lit_4485;
extern "C" extern u32 const lit_4486;
extern "C" extern u32 const lit_4487[1 + 1 /* padding */];
extern "C" extern u32 const lit_4649;
extern "C" extern u32 const lit_4650;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* g_profile_OBJ_KBACKET[12];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGLin[3];
extern "C" extern void* __vt__15daObj_KBacket_c[3];
extern "C" extern void* __vt__21daObj_KBacket_Param_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  unsigned int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void fopAcM_SearchByID(unsigned int, fopAc_ac_c**);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_calcSpeed(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMove(fopAc_ac_c*, cXyz const*);
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
void fopAcM_effSmokeSet1(u32*, u32*, cXyz const*, csXyz const*, f32, dKy_tevstr_c const*, int);
// False False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
void fopAcM_effHamonSet(u32*, cXyz const*, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_carryOffRevise(fopAc_ac_c*);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32* False
// 	 f32 False
void fopAcM_getWaterY(cXyz const*, f32*);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cXyz* False
// 	 cXyz False
//  int* False
// 	 int False
//  int False
void fopAcM_getWaterStream(cXyz const*, cBgS_PolyInfo const&, cXyz*, int*, int);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  cBgS_PolyInfo* False
// 	 cBgS_PolyInfo False
//  s16 False
void daNpcF_getGroundAngle(cBgS_PolyInfo*, s16);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc(f32*, f32, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseAngleS(s16*, s16, s16);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void scaleM__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  unsigned int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void fopAcM_SearchByID__FUiPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_calcSpeed__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMove__FP10fopAc_ac_cPC4cXyz();
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
extern "C" void fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci();
// False False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
extern "C" void fopAcM_effHamonSet__FPUlPC4cXyzff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_carryOffRevise__FP10fopAc_ac_c();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32* False
// 	 f32 False
extern "C" void fopAcM_getWaterY__FPC4cXyzPf();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cXyz* False
// 	 cXyz False
//  int* False
// 	 int False
//  int False
extern "C" void fopAcM_getWaterStream__FPC4cXyzRC13cBgS_PolyInfoP4cXyzPii();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
extern "C" void forceOnEventMove__Q213dPa_control_c7level_cFUl();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyColor__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  cBgS_PolyInfo* False
// 	 cBgS_PolyInfo False
//  s16 False
extern "C" void daNpcF_getGroundAngle__FP13cBgS_PolyInfos();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
extern "C" void normalizeZP__4cXyzFv();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc__FPfffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseAngleS__FPsss();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void abs();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u8 struct_80450D64[4];
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80587D84-80587DB0 002C+00 s=3 e=0 z=0  None .rodata    m__21daObj_KBacket_Param_c                                   */
SECTION_RODATA static u8 const m__21daObj_KBacket_Param_c[44] = {
	0x00, 0x00, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
	0x42, 0x92, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
	0x42, 0x14, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80587DB0-80587DE0 0030+00 s=1 e=0 z=0  None .rodata    l_ccDObjData                                                 */
SECTION_RODATA static u8 const l_ccDObjData[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80587DE0-80587DE4 0004+00 s=0 e=0 z=0  None .rodata    @3965                                                        */
SECTION_RODATA u32 const lit_3965 = 0xC2480000;

/* 80587DE4-80587DE8 0004+00 s=1 e=0 z=0  None .rodata    @3966                                                        */
SECTION_RODATA static u32 const lit_3966 = 0x42480000;

/* 80587DE8-80587DEC 0004+00 s=0 e=0 z=0  None .rodata    @3967                                                        */
SECTION_RODATA u8 const lit_3967[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80587DEC-80587DF0 0004+00 s=0 e=0 z=0  None .rodata    @3968                                                        */
SECTION_RODATA u32 const lit_3968 = 0x42280000;

/* 80587DF0-80587DF4 0004+00 s=0 e=0 z=0  None .rodata    @3969                                                        */
SECTION_RODATA u32 const lit_3969 = 0xCE6E6B28;

/* 80587DF4-80587DF8 0004+00 s=0 e=0 z=0  None .rodata    @4463                                                        */
SECTION_RODATA u32 const lit_4463 = 0x43360B61;

/* 80587DF8-80587DFC 0004+00 s=0 e=0 z=0  None .rodata    @4464                                                        */
SECTION_RODATA u32 const lit_4464 = 0x3E99999A;

/* 80587DFC-80587E00 0004+00 s=0 e=0 z=0  None .rodata    @4465                                                        */
SECTION_RODATA u32 const lit_4465 = 0x3F000000;

/* 80587E00-80587E04 0004+00 s=0 e=0 z=0  None .rodata    @4466                                                        */
SECTION_RODATA u32 const lit_4466 = 0x453B8000;

/* 80587E04-80587E08 0004+00 s=0 e=0 z=0  None .rodata    @4467                                                        */
SECTION_RODATA u32 const lit_4467 = 0x3FC66666;

/* 80587E08-80587E0C 0004+00 s=0 e=0 z=0  None .rodata    @4468                                                        */
SECTION_RODATA u32 const lit_4468 = 0x3E19999A;

/* 80587E0C-80587E10 0004+00 s=2 e=0 z=0  None .rodata    @4469                                                        */
SECTION_RODATA static u32 const lit_4469 = 0x3F800000;

/* 80587E10-80587E14 0004+00 s=0 e=0 z=0  None .rodata    @4470                                                        */
SECTION_RODATA u32 const lit_4470 = 0x3F400000;

/* 80587E14-80587E18 0004+00 s=0 e=0 z=0  None .rodata    @4471                                                        */
SECTION_RODATA u32 const lit_4471 = 0x44FA0000;

/* 80587E18-80587E1C 0004+00 s=0 e=0 z=0  None .rodata    @4472                                                        */
SECTION_RODATA u32 const lit_4472 = 0x40000000;

/* 80587E1C-80587E20 0004+00 s=0 e=0 z=0  None .rodata    @4473                                                        */
SECTION_RODATA u32 const lit_4473 = 0x3F4CCCCD;

/* 80587E20-80587E24 0004+00 s=0 e=0 z=0  None .rodata    @4474                                                        */
SECTION_RODATA u32 const lit_4474 = 0x41300000;

/* 80587E24-80587E28 0004+00 s=0 e=0 z=0  None .rodata    @4475                                                        */
SECTION_RODATA u32 const lit_4475 = 0x3DCCCCCD;

/* 80587E28-80587E2C 0004+00 s=0 e=0 z=0  None .rodata    @4476                                                        */
SECTION_RODATA u32 const lit_4476 = 0x447A0000;

/* 80587E2C-80587E30 0004+00 s=0 e=0 z=0  None .rodata    @4477                                                        */
SECTION_RODATA u32 const lit_4477 = 0xBF800000;

/* 80587E30-80587E34 0004+00 s=0 e=0 z=0  None .rodata    @4478                                                        */
SECTION_RODATA u32 const lit_4478 = 0xC1F00000;

/* 80587E34-80587E38 0004+00 s=1 e=0 z=0  None .rodata    @4479                                                        */
SECTION_RODATA static u32 const lit_4479 = 0x3F333333;

/* 80587E38-80587E3C 0004+00 s=0 e=0 z=0  None .rodata    @4480                                                        */
SECTION_RODATA u32 const lit_4480 = 0xBECCCCCD;

/* 80587E3C-80587E40 0004+00 s=0 e=0 z=0  None .rodata    @4481                                                        */
SECTION_RODATA u32 const lit_4481 = 0x44960000;

/* 80587E40-80587E44 0004+00 s=0 e=0 z=0  None .rodata    @4482                                                        */
SECTION_RODATA u32 const lit_4482 = 0x44610000;

/* 80587E44-80587E48 0004+00 s=1 e=0 z=0  None .rodata    @4483                                                        */
SECTION_RODATA static u32 const lit_4483 = 0x3D4CCCCD;

/* 80587E48-80587E4C 0004+00 s=0 e=0 z=0  None .rodata    @4484                                                        */
SECTION_RODATA u32 const lit_4484 = 0x42C80000;

/* 80587E4C-80587E50 0004+00 s=0 e=0 z=0  None .rodata    @4485                                                        */
SECTION_RODATA u32 const lit_4485 = 0x3E800000;

/* 80587E50-80587E54 0004+00 s=0 e=0 z=0  None .rodata    @4486                                                        */
SECTION_RODATA u32 const lit_4486 = 0x41F00000;

/* 80587E54-80587E5C 0004+04 s=0 e=0 z=0  None .rodata    @4487                                                        */
SECTION_RODATA u32 const lit_4487[1 + 1 /* padding */] = {
	0x3EA8F5C3,
	/* padding */
	0x00000000,
};

/* 80587E5C-80587E64 0008+00 s=1 e=0 z=0  None .rodata    @4489                                                        */
SECTION_RODATA static u8 const lit_4489[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80587E64-80587E68 0004+00 s=0 e=0 z=0  None .rodata    @4649                                                        */
SECTION_RODATA u32 const lit_4649 = 0x40A00000;

/* 80587E68-80587E6C 0004+00 s=0 e=0 z=0  None .rodata    @4650                                                        */
SECTION_RODATA u32 const lit_4650 = 0x43480000;

/* 80587E6C-80587E70 0004+00 s=2 e=0 z=0  None .rodata    @4666                                                        */
SECTION_RODATA static u32 const lit_4666 = 0x3F19999A;

/* 80587E70-80587E78 0008+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80587E70 = "Kakashi";
#pragma pop

/* 80587E78-80587E84 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80587E84-80587E98 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80587E98-80587EA8 0010+00 s=2 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[16] = {
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00,
};

/* 80587EA8-80587EAC 0004+00 s=2 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList = (void*)&stringBase0;

/* 80587EAC-80587EF0 0044+00 s=1 e=0 z=0  None .data      l_ccDCyl                                                     */
SECTION_DATA static u8 l_ccDCyl[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80587EF0-80587EF8 0008+00 s=1 e=0 z=0  None .data      emttrId$4670                                                 */
SECTION_DATA static u8 emttrId[8] = {
	0x01, 0xB8, 0x01, 0xB9, 0x01, 0xBA, 0x01, 0xBB,
};

/* 80587EF8-80587F18 0020+00 s=1 e=0 z=0  None .data      daObj_KBacket_MethodTable                                    */
SECTION_DATA static void* daObj_KBacket_MethodTable[8] = {
	(void*)daObj_KBacket_Create__FPv,
	(void*)daObj_KBacket_Delete__FPv,
	(void*)daObj_KBacket_Execute__FPv,
	(void*)daObj_KBacket_IsDelete__FPv,
	(void*)daObj_KBacket_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80587F18-80587F48 0030+00 s=0 e=0 z=1  None .data      g_profile_OBJ_KBACKET                                        */
SECTION_DATA void* g_profile_OBJ_KBACKET[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0008FFFD,
	(void*)0x02F60000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000A54,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02CA0000,
	(void*)&daObj_KBacket_MethodTable,
	(void*)0x00044100,
	(void*)0x000E0000,
};

/* 80587F48-80587F54 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 80587F54-80587F78 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80587D68,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80587D60,
};

/* 80587F78-80587F84 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80587F84-80587F90 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80587F90-80587F9C 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80587F9C-80587FA8 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80587FA8-80587FB4 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80587FB4-80587FC0 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGLin                                              */
SECTION_DATA void* __vt__8cM3dGLin[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGLinFv,
};

/* 80587FC0-80587FCC 000C+00 s=2 e=0 z=0  None .data      __vt__15daObj_KBacket_c                                      */
SECTION_DATA void* __vt__15daObj_KBacket_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daObj_KBacket_cFv,
};

/* 80585E4C-80586048 01FC+00 s=1 e=0 z=0  None .text      __dt__15daObj_KBacket_cFv                                    */
//	80585E6C: 80587FC0 (__vt__15daObj_KBacket_c)
//	80585E70: 80587FC0 (__vt__15daObj_KBacket_c)
//	80585E7C: 80587E98 (l_bmdData)
//	80585E80: 80587E98 (l_bmdData)
//	80585E98: 80587EA8 (l_resNameList)
//	80585E9C: 80587EA8 (l_resNameList)
//	80585EA4: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80585EB0: 80077CDC (__dt__11dBgS_LinChkFv)
//	80585EBC: 80587FB4 (__vt__8cM3dGLin)
//	80585EC0: 80587FB4 (__vt__8cM3dGLin)
//	80585ED0: 803AC050 (__vt__8dCcD_Cyl)
//	80585ED4: 803AC050 (__vt__8dCcD_Cyl)
//	80585EF4: 803C35A4 (__vt__12cCcD_CylAttr)
//	80585EF8: 803C35A4 (__vt__12cCcD_CylAttr)
//	80585F10: 80587FA8 (__vt__8cM3dGCyl)
//	80585F14: 80587FA8 (__vt__8cM3dGCyl)
//	80585F24: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80585F28: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80585F38: 80587F9C (__vt__8cM3dGAab)
//	80585F3C: 80587F9C (__vt__8cM3dGAab)
//	80585F4C: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80585F58: 80267C94 (__dt__11cBgS_GndChkFv)
//	80585F64: 80587F90 (__vt__12dBgS_AcchCir)
//	80585F68: 80587F90 (__vt__12dBgS_AcchCir)
//	80585F78: 8026EF18 (__dt__8cM3dGCirFv)
//	80585F84: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80585F90: 803AC2E4 (__vt__9dCcD_Stts)
//	80585F94: 803AC2E4 (__vt__9dCcD_Stts)
//	80585FAC: 80587F84 (__vt__10dCcD_GStts)
//	80585FB0: 80587F84 (__vt__10dCcD_GStts)
//	80585FC0: 80587F78 (__vt__10cCcD_GStts)
//	80585FC4: 80587F78 (__vt__10cCcD_GStts)
//	80585FD4: 803C3728 (__vt__9cCcD_Stts)
//	80585FD8: 803C3728 (__vt__9cCcD_Stts)
//	80585FE8: 80587F54 (__vt__12dBgS_ObjAcch)
//	80585FEC: 80587F54 (__vt__12dBgS_ObjAcch)
//	8058600C: 80075F94 (__dt__9dBgS_AcchFv)
//	80586018: 80018C8C (__dt__10fopAc_ac_cFv)
//	80586028: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_KBacket_c::~daObj_KBacket_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__dt__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 80586048-805863F0 03A8+00 s=1 e=0 z=0  None .text      create__15daObj_KBacket_cFv                                  */
//	80586058: 803621D4 (_savegpr_27)
//	80586060: 80587E78 (cNullVec__6Z2Calc)
//	80586064: 80587E78 (cNullVec__6Z2Calc)
//	80586068: 80587D84 (m__21daObj_KBacket_Param_c)
//	8058606C: 80587D84 (m__21daObj_KBacket_Param_c)
//	80586088: 80018B64 (__ct__10fopAc_ac_cFv)
//	8058608C: 80587FC0 (__vt__15daObj_KBacket_c)
//	80586090: 80587FC0 (__vt__15daObj_KBacket_c)
//	805860A0: 800760A0 (__ct__9dBgS_AcchFv)
//	805860A4: 80587F54 (__vt__12dBgS_ObjAcch)
//	805860A8: 80587F54 (__vt__12dBgS_ObjAcch)
//	805860C4: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	805860C8: 803C3728 (__vt__9cCcD_Stts)
//	805860CC: 803C3728 (__vt__9cCcD_Stts)
//	805860D8: 80083760 (__ct__10dCcD_GSttsFv)
//	805860DC: 803AC2E4 (__vt__9dCcD_Stts)
//	805860E0: 803AC2E4 (__vt__9dCcD_Stts)
//	805860F4: 80075EAC (__ct__12dBgS_AcchCirFv)
//	805860FC: 80267C1C (__ct__11cBgS_GndChkFv)
//	80586108: 80083A28 (__ct__12dCcD_GObjInfFv)
//	8058610C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80586110: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80586118: 80587F9C (__vt__8cM3dGAab)
//	8058611C: 80587F9C (__vt__8cM3dGAab)
//	80586124: 80587FA8 (__vt__8cM3dGCyl)
//	80586128: 80587FA8 (__vt__8cM3dGCyl)
//	80586130: 803C35A4 (__vt__12cCcD_CylAttr)
//	80586134: 803C35A4 (__vt__12cCcD_CylAttr)
//	80586144: 803AC050 (__vt__8dCcD_Cyl)
//	80586148: 803AC050 (__vt__8dCcD_Cyl)
//	80586160: 80587FB4 (__vt__8cM3dGLin)
//	80586164: 80587FB4 (__vt__8cM3dGLin)
//	80586170: 80077C68 (__ct__11dBgS_LinChkFv)
//	805861D0: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	805861E4: 805875A0 (createHeapCallBack__15daObj_KBacket_cFP10fopAc_ac_c)
//	805861E8: 805875A0 (createHeapCallBack__15daObj_KBacket_cFP10fopAc_ac_c)
//	805861F0: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	8058622C: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80586234: 80587660 (reset__15daObj_KBacket_cFv)
//	80586258: 80439A20 (sincosTable___5JMath)
//	8058625C: 80439A20 (sincosTable___5JMath)
//	805862E4: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80586308: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80586314: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80586324: 804061C0 (g_dComIfG_gameInfo)
//	80586328: 804061C0 (g_dComIfG_gameInfo)
//	80586330: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	805863C0: 805875C0 (setEnvTevColor__15daObj_KBacket_cFv)
//	805863C8: 8058761C (setRoomNo__15daObj_KBacket_cFv)
//	805863D0: 80586738 (Execute__15daObj_KBacket_cFv)
//	805863DC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/create__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 805863F0-80586438 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGLinFv                                            */
//	80586408: 80587FB4 (__vt__8cM3dGLin)
//	8058640C: 80587FB4 (__vt__8cM3dGLin)
//	8058641C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGLin::~cM3dGLin() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__dt__8cM3dGLinFv.s"
}
#pragma pop


/* 80586438-80586480 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80586450: 80587FA8 (__vt__8cM3dGCyl)
//	80586454: 80587FA8 (__vt__8cM3dGCyl)
//	80586464: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80586480-805864C8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80586498: 80587F9C (__vt__8cM3dGAab)
//	8058649C: 80587F9C (__vt__8cM3dGAab)
//	805864AC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 805864C8-80586538 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	805864E8: 80587F90 (__vt__12dBgS_AcchCir)
//	805864EC: 80587F90 (__vt__12dBgS_AcchCir)
//	805864FC: 8026EF18 (__dt__8cM3dGCirFv)
//	80586508: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80586518: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80586538-80586594 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80586550: 80587F84 (__vt__10dCcD_GStts)
//	80586554: 80587F84 (__vt__10dCcD_GStts)
//	80586560: 80587F78 (__vt__10cCcD_GStts)
//	80586564: 80587F78 (__vt__10cCcD_GStts)
//	80586578: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80586594-80586604 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	805865B4: 80587F54 (__vt__12dBgS_ObjAcch)
//	805865B8: 80587F54 (__vt__12dBgS_ObjAcch)
//	805865D4: 80075F94 (__dt__9dBgS_AcchFv)
//	805865E4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80586604-80586704 0100+00 s=1 e=0 z=0  None .text      CreateHeap__15daObj_KBacket_cFv                              */
//	80586634: 80587E98 (l_bmdData)
//	80586638: 80587E98 (l_bmdData)
//	80586644: 80587EA8 (l_resNameList)
//	80586648: 80587EA8 (l_resNameList)
//	80586654: 804061C0 (g_dComIfG_gameInfo)
//	80586658: 804061C0 (g_dComIfG_gameInfo)
//	80586668: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80586670: 80587E98 (l_bmdData)
//	80586674: 80587E98 (l_bmdData)
//	80586680: 80587EA8 (l_resNameList)
//	80586684: 80587EA8 (l_resNameList)
//	80586690: 804061C0 (g_dComIfG_gameInfo)
//	80586694: 804061C0 (g_dComIfG_gameInfo)
//	805866A4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	805866C4: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/CreateHeap__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 80586704-80586738 0034+00 s=1 e=0 z=0  None .text      Delete__15daObj_KBacket_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/Delete__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 80586738-8058742C 0CF4+00 s=2 e=0 z=0  None .text      Execute__15daObj_KBacket_cFv                                 */
//	80586750: 803621D0 (_savegpr_26)
//	80586758: 80587D84 (m__21daObj_KBacket_Param_c)
//	8058675C: 80587D84 (m__21daObj_KBacket_Param_c)
//	80586794: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	805868C4: 80451180 (G_CM3D_F_ABS_MIN)
//	805868C8: 80451180 (G_CM3D_F_ABS_MIN)
//	8058690C: 80439A20 (sincosTable___5JMath)
//	80586910: 80439A20 (sincosTable___5JMath)
//	80586944: 8001D1FC (fopAcM_carryOffRevise__FP10fopAc_ac_c)
//	80586974: 8001D890 (fopAcM_getWaterY__FPC4cXyzPf)
//	80586A0C: 80587A70 (setWaterPrtcl__15daObj_KBacket_cFv)
//	80586A64: 8001D9A8 (fopAcM_getWaterStream__FPC4cXyzRC13cBgS_PolyInfoP4cXyzPii)
//	80586A78: 80266F48 (normalizeZP__4cXyzFv)
//	80586A84: 80267674 (cM_atan2s__Fff)
//	80586A98: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80586AAC: 80267674 (cM_atan2s__Fff)
//	80586AE0: 80270B90 (cLib_chaseAngleS__FPsss)
//	80586B24: 8026FA3C (cLib_addCalc2__FPffff)
//	80586B60: 8026FA3C (cLib_addCalc2__FPffff)
//	80586B74: 80270740 (cLib_chaseF__FPfff)
//	80586B9C: 80587864 (getWallAngle__15daObj_KBacket_cFsPs)
//	80586BB4: 8026798C (cM_rndFX__Ff)
//	80586BD8: 8026798C (cM_rndFX__Ff)
//	80586C3C: 8026FA3C (cLib_addCalc2__FPffff)
//	80586C4C: 80587B68 (setHamonPrtcl__15daObj_KBacket_cFv)
//	80586C8C: 8026F97C (cLib_addCalc__FPfffff)
//	80586CA8: 8026F97C (cLib_addCalc__FPfffff)
//	80586D48: 80587864 (getWallAngle__15daObj_KBacket_cFsPs)
//	80586D70: 8026798C (cM_rndFX__Ff)
//	80586DDC: 8002D06C (dComIfGp_getReverb__Fi)
//	80586DF0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80586DF4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80586E1C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80586E54: 805879F4 (setSmokePrtcl__15daObj_KBacket_cFv)
//	80586E9C: 8002D06C (dComIfGp_getReverb__Fi)
//	80586EB0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80586EB4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80586EDC: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80586F14: 805879F4 (setSmokePrtcl__15daObj_KBacket_cFv)
//	80586F50: 8002D06C (dComIfGp_getReverb__Fi)
//	80586F64: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80586F68: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80586F90: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80587030: 8026FA3C (cLib_addCalc2__FPffff)
//	80587048: 8026FA3C (cLib_addCalc2__FPffff)
//	80587058: 80439A20 (sincosTable___5JMath)
//	8058705C: 80439A20 (sincosTable___5JMath)
//	805870BC: 80270B90 (cLib_chaseAngleS__FPsss)
//	80587120: 80267674 (cM_atan2s__Fff)
//	80587188: 8026FA3C (cLib_addCalc2__FPffff)
//	80587190: 8001A60C (fopAcM_calcSpeed__FP10fopAc_ac_c)
//	805871A8: 80439A20 (sincosTable___5JMath)
//	805871AC: 80439A20 (sincosTable___5JMath)
//	805871EC: 80347090 (PSVECAdd)
//	805871F8: 8001A660 (fopAcM_posMove__FP10fopAc_ac_cPC4cXyz)
//	80587200: 804061C0 (g_dComIfG_gameInfo)
//	80587204: 804061C0 (g_dComIfG_gameInfo)
//	8058720C: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	805872A0: 8015556C (daNpcF_getGroundAngle__FP13cBgS_PolyInfos)
//	805872AC: 805875C0 (setEnvTevColor__15daObj_KBacket_cFv)
//	805872B4: 8058761C (setRoomNo__15daObj_KBacket_cFv)
//	805872B8: 80450D64 (struct_80450D64)
//	805872BC: 80450D64 (struct_80450D64)
//	805872FC: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	8058733C: 80587694 (setMtx__15daObj_KBacket_cFv)
//	8058735C: 805877C4 (calcRollAngle__15daObj_KBacket_cFsi)
//	8058738C: 805877C4 (calcRollAngle__15daObj_KBacket_cFsi)
//	8058739C: 8026F200 (SetR__8cM3dGCylFf)
//	805873AC: 8026F1F8 (SetH__8cM3dGCylFf)
//	805873B8: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	805873BC: 804061C0 (g_dComIfG_gameInfo)
//	805873C0: 804061C0 (g_dComIfG_gameInfo)
//	805873CC: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	805873F4: 80587C88 (func_80587C88)
//	805873FC: 80587C88 (func_80587C88)
//	80587418: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::Execute() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/Execute__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 8058742C-80587558 012C+00 s=1 e=0 z=0  None .text      Draw__15daObj_KBacket_cFv                                    */
//	8058744C: 8042CA54 (g_env_light)
//	80587450: 8042CA54 (g_env_light)
//	80587460: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80587464: 8042CA54 (g_env_light)
//	80587468: 8042CA54 (g_env_light)
//	80587478: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80587480: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	8058748C: 804061C0 (g_dComIfG_gameInfo)
//	80587490: 804061C0 (g_dComIfG_gameInfo)
//	805874AC: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	805874C8: 80587F48 (__vt__8cM3dGPla)
//	805874CC: 80587F48 (__vt__8cM3dGPla)
//	805874D4: 804061C0 (g_dComIfG_gameInfo)
//	805874D8: 804061C0 (g_dComIfG_gameInfo)
//	805874E8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	805874F4: 804061C0 (g_dComIfG_gameInfo)
//	805874F8: 804061C0 (g_dComIfG_gameInfo)
//	80587508: 80587DE4 (lit_3966)
//	8058750C: 80587DE4 (lit_3966)
//	80587518: 80587E0C (lit_4469)
//	8058751C: 80587E0C (lit_4469)
//	80587520: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80587524: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80587528: 80055F84 (setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj)
//	8058752C: 80587F48 (__vt__8cM3dGPla)
//	80587530: 80587F48 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/Draw__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 80587558-805875A0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	80587570: 80587F48 (__vt__8cM3dGPla)
//	80587574: 80587F48 (__vt__8cM3dGPla)
//	80587584: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 805875A0-805875C0 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__15daObj_KBacket_cFP10fopAc_ac_c          */
//	805875AC: 80586604 (CreateHeap__15daObj_KBacket_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daObj_KBacket_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/createHeapCallBack__15daObj_KBacket_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 805875C0-8058761C 005C+00 s=2 e=0 z=0  None .text      setEnvTevColor__15daObj_KBacket_cFv                          */
//	805875D8: 804061C0 (g_dComIfG_gameInfo)
//	805875DC: 804061C0 (g_dComIfG_gameInfo)
//	805875EC: 80074BE8 (GetPolyColor__4dBgSFRC13cBgS_PolyInfo)
//	805875FC: 80075100 (GetRoomId__4dBgSFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::setEnvTevColor() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/setEnvTevColor__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 8058761C-80587660 0044+00 s=2 e=0 z=0  None .text      setRoomNo__15daObj_KBacket_cFv                               */
//	80587630: 804061C0 (g_dComIfG_gameInfo)
//	80587634: 804061C0 (g_dComIfG_gameInfo)
//	80587640: 80075100 (GetRoomId__4dBgSFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::setRoomNo() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/setRoomNo__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 80587660-80587694 0034+00 s=1 e=0 z=0  None .text      reset__15daObj_KBacket_cFv                                   */
//	80587680: 80003458 (memset)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::reset() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/reset__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 80587694-805877C4 0130+00 s=1 e=0 z=0  None .text      setMtx__15daObj_KBacket_cFv                                  */
//	805876A4: 803621DC (_savegpr_29)
//	805876C0: 80587E5C (lit_4489)
//	805876C4: 80587E5C (lit_4489)
//	805876E0: 80439A20 (sincosTable___5JMath)
//	805876E4: 80439A20 (sincosTable___5JMath)
//	80587728: 803DD470 (now__14mDoMtx_stack_c)
//	8058772C: 803DD470 (now__14mDoMtx_stack_c)
//	8058773C: 803468E8 (PSMTXTrans)
//	80587744: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	8058775C: 803DD470 (now__14mDoMtx_stack_c)
//	80587760: 803DD470 (now__14mDoMtx_stack_c)
//	80587764: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80587780: 803DD470 (now__14mDoMtx_stack_c)
//	80587784: 803DD470 (now__14mDoMtx_stack_c)
//	8058778C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80587794: 8000CE70 (scaleM__14mDoMtx_stack_cFRC4cXyz)
//	80587798: 803DD470 (now__14mDoMtx_stack_c)
//	8058779C: 803DD470 (now__14mDoMtx_stack_c)
//	805877A8: 803464B0 (PSMTXCopy)
//	805877B0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::setMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/setMtx__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 805877C4-80587864 00A0+00 s=1 e=0 z=0  None .text      calcRollAngle__15daObj_KBacket_cFsi                          */
//	805877D4: 803621DC (_savegpr_29)
//	805877F0: 803650D0 (abs)
//	80587850: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s16 False
//  int False
asm void daObj_KBacket_c::calcRollAngle(s16 param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/calcRollAngle__15daObj_KBacket_cFsi.s"
}
#pragma pop


/* 80587864-805879F4 0190+00 s=1 e=0 z=0  None .text      getWallAngle__15daObj_KBacket_cFsPs                          */
//	8058787C: 803621CC (_savegpr_25)
//	80587888: 80587D84 (m__21daObj_KBacket_Param_c)
//	8058788C: 80587D84 (m__21daObj_KBacket_Param_c)
//	80587890: 803DD470 (now__14mDoMtx_stack_c)
//	80587894: 803DD470 (now__14mDoMtx_stack_c)
//	80587898: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	805878B0: 803DD470 (now__14mDoMtx_stack_c)
//	805878B4: 803DD470 (now__14mDoMtx_stack_c)
//	805878C0: 80346D6C (PSMTXMultVec)
//	805878D0: 80347090 (PSVECAdd)
//	805878F4: 804061C0 (g_dComIfG_gameInfo)
//	805878F8: 804061C0 (g_dComIfG_gameInfo)
//	80587900: 803DD470 (now__14mDoMtx_stack_c)
//	80587904: 803DD470 (now__14mDoMtx_stack_c)
//	80587920: 80346D6C (PSMTXMultVec)
//	8058793C: 80347090 (PSVECAdd)
//	80587950: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8058795C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	805879A8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	805879C4: 80267674 (cM_atan2s__Fff)
//	805879E0: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s16 False
//  s16* False
// 	 s16 False
asm void daObj_KBacket_c::getWallAngle(s16 param_0, s16* param_1) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/getWallAngle__15daObj_KBacket_cFsPs.s"
}
#pragma pop


/* 805879F4-80587A70 007C+00 s=1 e=0 z=0  None .text      setSmokePrtcl__15daObj_KBacket_cFv                           */
//	80587A1C: 80587E6C (lit_4666)
//	80587A20: 80587E6C (lit_4666)
//	80587A2C: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	80587A30: 804061C0 (g_dComIfG_gameInfo)
//	80587A34: 804061C0 (g_dComIfG_gameInfo)
//	80587A44: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	80587A54: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::setSmokePrtcl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/setSmokePrtcl__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 80587A70-80587B68 00F8+00 s=1 e=0 z=0  None .text      setWaterPrtcl__15daObj_KBacket_cFv                           */
//	80587A80: 803621C8 (_savegpr_24)
//	80587A88: 80587E6C (lit_4666)
//	80587A8C: 80587E6C (lit_4666)
//	80587AC0: 804061C0 (g_dComIfG_gameInfo)
//	80587AC4: 804061C0 (g_dComIfG_gameInfo)
//	80587AC8: 80587EF0 (emttrId)
//	80587ACC: 80587EF0 (emttrId)
//	80587AD0: 80587E0C (lit_4469)
//	80587AD4: 80587E0C (lit_4469)
//	80587B24: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80587B38: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	80587B54: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::setWaterPrtcl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/setWaterPrtcl__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 80587B68-80587BB8 0050+00 s=1 e=0 z=0  None .text      setHamonPrtcl__15daObj_KBacket_cFv                           */
//	80587B90: 80587E34 (lit_4479)
//	80587B94: 80587E34 (lit_4479)
//	80587B98: 80587E44 (lit_4483)
//	80587B9C: 80587E44 (lit_4483)
//	80587BA4: 8001D10C (fopAcM_effHamonSet__FPUlPC4cXyzff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_KBacket_c::setHamonPrtcl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/setHamonPrtcl__15daObj_KBacket_cFv.s"
}
#pragma pop


/* 80587BB8-80587BD8 0020+00 s=1 e=0 z=0  None .text      daObj_KBacket_Create__FPv                                    */
//	80587BC4: 80586048 (create__15daObj_KBacket_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daObj_KBacket_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/daObj_KBacket_Create__FPv.s"
}
#pragma pop


/* 80587BD8-80587BF8 0020+00 s=1 e=0 z=0  None .text      daObj_KBacket_Delete__FPv                                    */
//	80587BE4: 80586704 (Delete__15daObj_KBacket_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daObj_KBacket_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/daObj_KBacket_Delete__FPv.s"
}
#pragma pop


/* 80587BF8-80587C18 0020+00 s=1 e=0 z=0  None .text      daObj_KBacket_Execute__FPv                                   */
//	80587C04: 80586738 (Execute__15daObj_KBacket_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daObj_KBacket_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/daObj_KBacket_Execute__FPv.s"
}
#pragma pop


/* 80587C18-80587C38 0020+00 s=1 e=0 z=0  None .text      daObj_KBacket_Draw__FPv                                      */
//	80587C24: 8058742C (Draw__15daObj_KBacket_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daObj_KBacket_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/daObj_KBacket_Draw__FPv.s"
}
#pragma pop


/* 80587C38-80587C40 0008+00 s=1 e=0 z=0  None .text      daObj_KBacket_IsDelete__FPv                                  */
// True False
//  bool False
//  void* False
// 	 void False
static bool daObj_KBacket_IsDelete(void* param_0) {
	return true;
}


/* 80587C40-80587C88 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80587C58: 80587F78 (__vt__10cCcD_GStts)
//	80587C5C: 80587F78 (__vt__10cCcD_GStts)
//	80587C6C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80587C88-80587CA4 001C+00 s=1 e=0 z=0  None .text      cLib_calcTimer<i>__FPi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int* False
// 	 int False
asm void cLib_calcTimer__template0(int* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/func_80587C88.s"
}
#pragma pop


/* ############################################################################################## */
/* 80587FCC-80587FD8 000C+00 s=2 e=0 z=0  None .data      __vt__21daObj_KBacket_Param_c                                */
SECTION_DATA void* __vt__21daObj_KBacket_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__21daObj_KBacket_Param_cFv,
};

/* 80587FE0-80587FEC 000C+00 s=1 e=0 z=0  None .bss       @3810                                                        */
static u8 lit_3810[12];

/* 80587FEC-80587FF0 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80587CA4-80587D18 0074+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_kbacket_cpp                                  */
//	80587CB0: 80587EAC (l_ccDCyl)
//	80587CB4: 80587EAC (l_ccDCyl)
//	80587CBC: 80587DB0 (l_ccDObjData)
//	80587CC0: 80587DB0 (l_ccDObjData)
//	80587CE4: 80587FCC (__vt__21daObj_KBacket_Param_c)
//	80587CE8: 80587FCC (__vt__21daObj_KBacket_Param_c)
//	80587CEC: 80587FEC (l_HIO)
//	80587CF0: 80587FEC (l_HIO)
//	80587CF4: 80587D18 (__dt__21daObj_KBacket_Param_cFv)
//	80587CF8: 80587D18 (__dt__21daObj_KBacket_Param_cFv)
//	80587CFC: 80587FE0 (lit_3810)
//	80587D00: 80587FE0 (lit_3810)
//	80587D04: 80585DD8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_kbacket_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__sinit_d_a_obj_kbacket_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80587CA4 = (void*)__sinit_d_a_obj_kbacket_cpp;
#pragma pop


/* 80587D18-80587D60 0048+00 s=2 e=0 z=0  None .text      __dt__21daObj_KBacket_Param_cFv                              */
//	80587D30: 80587FCC (__vt__21daObj_KBacket_Param_c)
//	80587D34: 80587FCC (__vt__21daObj_KBacket_Param_c)
//	80587D44: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_KBacket_Param_c::~daObj_KBacket_Param_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/__dt__21daObj_KBacket_Param_cFv.s"
}
#pragma pop


/* 80587D60-80587D68 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80587D64: 80586594 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80587D60() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/func_80587D60.s"
}
#pragma pop


/* 80587D68-80587D70 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80587D6C: 80586594 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80587D68() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kbacket/d_a_obj_kbacket/func_80587D68.s"
}
#pragma pop


