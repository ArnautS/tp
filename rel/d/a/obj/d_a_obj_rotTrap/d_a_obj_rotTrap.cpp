// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_rotTrap
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoHIO_entry_c {
	/* 80CBF8F8 */ // True False
~mDoHIO_entry_c();
};

struct fopAc_ac_c {
};

struct daRotTrap_c {
	/* 80CBF940 */ // True False
void setBaseMtx();
	/* 80CBF9D8 */ // True False
void CreateHeap();
	/* 80CBFAC8 */ // True False
void create();
	/* 80CBFEC4 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80CBFF1C */ // True False
void procMain();
	/* 80CC00AC */ // True False
void init_modeWait();
	/* 80CC0120 */ // True False
void modeWait();
	/* 80CC0180 */ // True False
void init_modeAcc();
	/* 80CC027C */ // True False
void modeAcc();
	/* 80CC034C */ // True False
void init_modeMove();
	/* 80CC0360 */ // True False
void modeMove();
	/* 80CC0440 */ // True False
void seSet();
	/* 80CC0548 */ // True False
void Draw();
	/* 80CC05EC */ // True False
void Delete();
};

struct daRotTrap_HIO_c {
	/* 80CBF8AC */ // True False
daRotTrap_HIO_c();
	/* 80CC0728 */ // True False
~daRotTrap_HIO_c();
};

struct cXyz {
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dSv_info_c {
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 80CBFE68 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
	/* 80CBFC88 */ // True False
~dCcD_Cyl();
	/* 80CBFD54 */ // True False
dCcD_Cyl();
};

struct dBgW_Base {
};

struct dBgW {
	/* 8007B970 */ // False False
dBgW();
	/* 8007B9C0 */ // False False
void Move();
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 80078690 */ // False False
//  bool False
bool Create();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS {
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80CBFDD8 */ // True False
~cM3dGCyl();
};

struct cM3dGAab {
	/* 80CBFE20 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80CC06E0 */ // True False
~cCcD_GStts();
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgD_t {
};

struct cBgW {
	/* 80079F38 */ // False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void Set(cBgD_t*, u32, f32 (* )[3][4]);
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  daRotTrap_c* False
// 	 daRotTrap_c False
static void daRotTrap_Draw(daRotTrap_c*);
// True False
//  daRotTrap_c* False
// 	 daRotTrap_c False
static void daRotTrap_Execute(daRotTrap_c*);
// True False
//  daRotTrap_c* False
// 	 daRotTrap_c False
static void daRotTrap_Delete(daRotTrap_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daRotTrap_Create(fopAc_ac_c*);

// True False
extern "C" void __ct__15daRotTrap_HIO_cFv();
// True False
extern "C" void __dt__14mDoHIO_entry_cFv();
// True False
extern "C" void setBaseMtx__11daRotTrap_cFv();
// True False
extern "C" void CreateHeap__11daRotTrap_cFv();
// True False
extern "C" void create__11daRotTrap_cFv();
// True False
extern "C" void __dt__8dCcD_CylFv();
// True False
extern "C" void __ct__8dCcD_CylFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__11daRotTrap_cFPPA3_A4_f();
// True False
extern "C" void procMain__11daRotTrap_cFv();
// True False
extern "C" void init_modeWait__11daRotTrap_cFv();
// True False
extern "C" void modeWait__11daRotTrap_cFv();
// True False
extern "C" void init_modeAcc__11daRotTrap_cFv();
// True False
extern "C" void modeAcc__11daRotTrap_cFv();
// True False
extern "C" void init_modeMove__11daRotTrap_cFv();
// True False
extern "C" void modeMove__11daRotTrap_cFv();
// True False
extern "C" void seSet__11daRotTrap_cFv();
// True False
extern "C" void Draw__11daRotTrap_cFv();
// True False
extern "C" void Delete__11daRotTrap_cFv();
// True False
//  daRotTrap_c* False
// 	 daRotTrap_c False
extern "C" static void daRotTrap_Draw__FP11daRotTrap_c();
// True False
//  daRotTrap_c* False
// 	 daRotTrap_c False
extern "C" static void daRotTrap_Execute__FP11daRotTrap_c();
// True False
//  daRotTrap_c* False
// 	 daRotTrap_c False
extern "C" static void daRotTrap_Delete__FP11daRotTrap_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daRotTrap_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__15daRotTrap_HIO_cFv();
// False False
extern "C" void __sinit_d_a_obj_rotTrap_cpp();
extern "C" extern u8 const lit_3921[4];
extern "C" extern u32 const lit_3923;
extern "C" extern u32 const lit_3924;
extern "C" extern u32 const lit_3925;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 atPos[168];
extern "C" extern u8 atR[56];
extern "C" extern void* lit_3851[3];
extern "C" extern void* lit_3852[3];
extern "C" extern void* lit_3853[3];
extern "C" extern u8 data_80CC09C8[36];
extern "C" extern void* g_profile_Obj_RotTrap[12];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__11daRotTrap_c[10];
extern "C" extern void* __vt__15daRotTrap_HIO_c[3];
extern "C" extern void* __vt__14mDoHIO_entry_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotS(f32 (* )[4], s16, s16, s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseAngleS(s16*, s16, s16);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotS__FPA4_fsss();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool Create__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
// False False
extern "C" void __ct__4dBgWFv();
// False False
extern "C" void Move__4dBgWFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseAngleS__FPsss();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_20();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _restgpr_20();
// False False
extern "C" void _restgpr_25();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80CC0808-80CC080C 0004+00 s=3 e=0 z=0  None .rodata    @3649                                                        */
SECTION_RODATA static u32 const lit_3649 = 0x40900000;

/* 80CC0860-80CC086C 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CC086C-80CC0880 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80CC0880-80CC08C4 0044+00 s=2 e=0 z=0  None .data      mCcDCyl__11daRotTrap_c                                       */
SECTION_DATA static u8 mCcDCyl__11daRotTrap_c[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80CC08C4-80CC096C 00A8+00 s=0 e=0 z=0  None .data      atPos                                                        */
SECTION_DATA u8 atPos[168] = {
	0xC2, 0x14, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0xC3, 0x48, 0x00, 0x00, 0xC2, 0x14, 0x00, 0x00,
	0x43, 0x02, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00, 0xC2, 0x14, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00,
	0xC3, 0xC8, 0x00, 0x00, 0xC2, 0x14, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0xC3, 0xFA, 0x00, 0x00,
	0xC2, 0x14, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0xC4, 0x16, 0x00, 0x00, 0xC2, 0x14, 0x00, 0x00,
	0x43, 0x02, 0x00, 0x00, 0xC4, 0x2F, 0x00, 0x00, 0xC2, 0x14, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00,
	0xC4, 0x48, 0x00, 0x00, 0x42, 0x14, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00,
	0x42, 0x14, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00, 0x42, 0x14, 0x00, 0x00,
	0x43, 0x02, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00, 0x42, 0x14, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00,
	0x43, 0xFA, 0x00, 0x00, 0x42, 0x14, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0x44, 0x16, 0x00, 0x00,
	0x42, 0x14, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0x44, 0x2F, 0x00, 0x00, 0x42, 0x14, 0x00, 0x00,
	0x43, 0x02, 0x00, 0x00, 0x44, 0x48, 0x00, 0x00,
};

/* 80CC096C-80CC09A4 0038+00 s=0 e=0 z=0  None .data      atR                                                          */
SECTION_DATA u8 atR[56] = {
	0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
	0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
	0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
	0x42, 0x48, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
};

/* 80CC09A4-80CC09B0 000C+00 s=0 e=0 z=0  None .data      @3851                                                        */
SECTION_DATA void* lit_3851[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeWait__11daRotTrap_cFv,
};

/* 80CC09B0-80CC09BC 000C+00 s=0 e=0 z=0  None .data      @3852                                                        */
SECTION_DATA void* lit_3852[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeAcc__11daRotTrap_cFv,
};

/* 80CC09BC-80CC09C8 000C+00 s=0 e=0 z=0  None .data      @3853                                                        */
SECTION_DATA void* lit_3853[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeMove__11daRotTrap_cFv,
};

/* 80CC09C8-80CC09EC 0024+00 s=0 e=0 z=0  None .data      mode_proc$3850                                               */
SECTION_DATA u8 data_80CC09C8[36] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80CC09EC-80CC0A0C 0020+00 s=1 e=0 z=0  None .data      l_daRotTrap_Method                                           */
SECTION_DATA static void* l_daRotTrap_Method[8] = {
	(void*)daRotTrap_Create__FP10fopAc_ac_c,
	(void*)daRotTrap_Delete__FP11daRotTrap_c,
	(void*)daRotTrap_Execute__FP11daRotTrap_c,
	(void*)NULL,
	(void*)daRotTrap_Draw__FP11daRotTrap_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80CC0A0C-80CC0A3C 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_RotTrap                                        */
SECTION_DATA void* g_profile_Obj_RotTrap[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x004B0000,
	(void*)&g_fpcLf_Method,
	(void*)0x0000173C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x020D0000,
	(void*)&l_daRotTrap_Method,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80CC0A3C-80CC0A48 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80CC0A48-80CC0A54 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80CC0A54-80CC0A60 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80CC0A60-80CC0A6C 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80CC0A6C-80CC0A94 0028+00 s=1 e=0 z=0  None .data      __vt__11daRotTrap_c                                          */
SECTION_DATA void* __vt__11daRotTrap_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__11daRotTrap_cFv,
	(void*)Create__16dBgS_MoveBgActorFv,
	(void*)Execute__11daRotTrap_cFPPA3_A4_f,
	(void*)Draw__11daRotTrap_cFv,
	(void*)Delete__11daRotTrap_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80CC0A94-80CC0AA0 000C+00 s=2 e=0 z=0  None .data      __vt__15daRotTrap_HIO_c                                      */
SECTION_DATA void* __vt__15daRotTrap_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daRotTrap_HIO_cFv,
};

/* 80CC0AA0-80CC0AAC 000C+00 s=3 e=0 z=0  None .data      __vt__14mDoHIO_entry_c                                       */
SECTION_DATA void* __vt__14mDoHIO_entry_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14mDoHIO_entry_cFv,
};

/* 80CBF8AC-80CBF8F8 004C+00 s=1 e=0 z=0  None .text      __ct__15daRotTrap_HIO_cFv                                    */
//	80CBF8AC: 80CC0AA0 (__vt__14mDoHIO_entry_c)
//	80CBF8B0: 80CC0AA0 (__vt__14mDoHIO_entry_c)
//	80CBF8B8: 80CC0A94 (__vt__15daRotTrap_HIO_c)
//	80CBF8BC: 80CC0A94 (__vt__15daRotTrap_HIO_c)
//	80CBF8CC: 80CC0808 (lit_3649)
//	80CBF8D0: 80CC0808 (lit_3649)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daRotTrap_HIO_c::daRotTrap_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/__ct__15daRotTrap_HIO_cFv.s"
}
#pragma pop


/* 80CBF8F8-80CBF940 0048+00 s=1 e=0 z=0  None .text      __dt__14mDoHIO_entry_cFv                                     */
//	80CBF910: 80CC0AA0 (__vt__14mDoHIO_entry_c)
//	80CBF914: 80CC0AA0 (__vt__14mDoHIO_entry_c)
//	80CBF924: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm mDoHIO_entry_c::~mDoHIO_entry_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/__dt__14mDoHIO_entry_cFv.s"
}
#pragma pop


/* 80CBF940-80CBF9D8 0098+00 s=2 e=0 z=0  None .text      setBaseMtx__11daRotTrap_cFv                                  */
//	80CBF954: 803DD470 (now__14mDoMtx_stack_c)
//	80CBF958: 803DD470 (now__14mDoMtx_stack_c)
//	80CBF968: 803468E8 (PSMTXTrans)
//	80CBF96C: 803DD470 (now__14mDoMtx_stack_c)
//	80CBF970: 803DD470 (now__14mDoMtx_stack_c)
//	80CBF980: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80CBF9A0: 803DD470 (now__14mDoMtx_stack_c)
//	80CBF9A4: 803DD470 (now__14mDoMtx_stack_c)
//	80CBF9B0: 803464B0 (PSMTXCopy)
//	80CBF9B4: 803DD470 (now__14mDoMtx_stack_c)
//	80CBF9B8: 803DD470 (now__14mDoMtx_stack_c)
//	80CBF9C0: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/setBaseMtx__11daRotTrap_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CC080C-80CC083C 0030+00 s=1 e=0 z=0  None .rodata    mCcDObjInfo__11daRotTrap_c                                   */
SECTION_RODATA static u8 const mCcDObjInfo__11daRotTrap_c[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CC083C-80CC0840 0004+00 s=1 e=0 z=0  None .rodata    @3880                                                        */
SECTION_RODATA static u32 const lit_3880 = 0x42340000;

/* 80CC0840-80CC0844 0004+00 s=0 e=0 z=0  None .rodata    @3921                                                        */
SECTION_RODATA u8 const lit_3921[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80CC0844-80CC0848 0004+00 s=2 e=0 z=0  None .rodata    @3922                                                        */
SECTION_RODATA static u32 const lit_3922 = 0x3F800000;

/* 80CC0848-80CC084C 0004+00 s=0 e=0 z=0  None .rodata    @3923                                                        */
SECTION_RODATA u32 const lit_3923 = 0x43360B61;

/* 80CC084C-80CC0850 0004+00 s=0 e=0 z=0  None .rodata    @3924                                                        */
SECTION_RODATA u32 const lit_3924 = 0x43B40000;

/* 80CC0850-80CC0854 0004+00 s=0 e=0 z=0  None .rodata    @3925                                                        */
SECTION_RODATA u32 const lit_3925 = 0x41F00000;

/* 80CC0854-80CC0858 0004+00 s=2 e=0 z=0  None .rodata    @3940                                                        */
SECTION_RODATA static u32 const lit_3940 = 0xBF800000;

/* 80CC0858-80CC085F 0007+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80CC0858 = "P_kama";
#pragma pop

/* 80CBF9D8-80CBFAC8 00F0+00 s=1 e=0 z=0  None .text      CreateHeap__11daRotTrap_cFv                                  */
//	80CBF9F0: 80CC0858 (stringBase0)
//	80CBF9F4: 80CC0858 (stringBase0)
//	80CBF9FC: 804061C0 (g_dComIfG_gameInfo)
//	80CBFA00: 804061C0 (g_dComIfG_gameInfo)
//	80CBFA14: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CBFA24: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80CBFA44: 802CEC4C (__nw__FUl)
//	80CBFA50: 8007B970 (__ct__4dBgWFv)
//	80CBFA68: 80CC0858 (stringBase0)
//	80CBFA6C: 80CC0858 (stringBase0)
//	80CBFA7C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CBFA90: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/CreateHeap__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CBFAC8-80CBFC88 01C0+00 s=1 e=0 z=0  None .text      create__11daRotTrap_cFv                                      */
//	80CBFAD8: 803621CC (_savegpr_25)
//	80CBFAF8: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80CBFAFC: 80CC0A6C (__vt__11daRotTrap_c)
//	80CBFB00: 80CC0A6C (__vt__11daRotTrap_c)
//	80CBFB08: 803C3728 (__vt__9cCcD_Stts)
//	80CBFB0C: 803C3728 (__vt__9cCcD_Stts)
//	80CBFB18: 80083760 (__ct__10dCcD_GSttsFv)
//	80CBFB1C: 803AC2E4 (__vt__9dCcD_Stts)
//	80CBFB20: 803AC2E4 (__vt__9dCcD_Stts)
//	80CBFB34: 80CBFD54 (__ct__8dCcD_CylFv)
//	80CBFB38: 80CBFD54 (__ct__8dCcD_CylFv)
//	80CBFB3C: 80CBFC88 (__dt__8dCcD_CylFv)
//	80CBFB40: 80CBFC88 (__dt__8dCcD_CylFv)
//	80CBFB4C: 80361D60 (__construct_array)
//	80CBFB60: 80CC0858 (stringBase0)
//	80CBFB64: 80CC0858 (stringBase0)
//	80CBFB68: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80CBFB7C: 80CC0858 (stringBase0)
//	80CBFB80: 80CC0858 (stringBase0)
//	80CBFB88: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80CBFB8C: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80CBFB98: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80CBFBC4: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80CBFBD8: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80CBFBE4: 80CC0880 (mCcDCyl__11daRotTrap_c)
//	80CBFBE8: 80CC0880 (mCcDCyl__11daRotTrap_c)
//	80CBFBFC: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80CBFC2C: 80CC034C (init_modeMove__11daRotTrap_cFv)
//	80CBFC34: 804061C0 (g_dComIfG_gameInfo)
//	80CBFC38: 804061C0 (g_dComIfG_gameInfo)
//	80CBFC44: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CBFC54: 80CC034C (init_modeMove__11daRotTrap_cFv)
//	80CBFC60: 80CC00AC (init_modeWait__11daRotTrap_cFv)
//	80CBFC68: 80CBF940 (setBaseMtx__11daRotTrap_cFv)
//	80CBFC74: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/create__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CBFC88-80CBFD54 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_CylFv                                            */
//	80CBFCA8: 803AC050 (__vt__8dCcD_Cyl)
//	80CBFCAC: 803AC050 (__vt__8dCcD_Cyl)
//	80CBFCCC: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CBFCD0: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CBFCE8: 80CC0A60 (__vt__8cM3dGCyl)
//	80CBFCEC: 80CC0A60 (__vt__8cM3dGCyl)
//	80CBFCFC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CBFD00: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CBFD10: 80CC0A54 (__vt__8cM3dGAab)
//	80CBFD14: 80CC0A54 (__vt__8cM3dGAab)
//	80CBFD24: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80CBFD34: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::~dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/__dt__8dCcD_CylFv.s"
}
#pragma pop


/* 80CBFD54-80CBFDD8 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_CylFv                                            */
//	80CBFD68: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80CBFD6C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CBFD70: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CBFD78: 80CC0A54 (__vt__8cM3dGAab)
//	80CBFD7C: 80CC0A54 (__vt__8cM3dGAab)
//	80CBFD84: 80CC0A60 (__vt__8cM3dGCyl)
//	80CBFD88: 80CC0A60 (__vt__8cM3dGCyl)
//	80CBFD90: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CBFD94: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CBFDA4: 803AC050 (__vt__8dCcD_Cyl)
//	80CBFDA8: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/__ct__8dCcD_CylFv.s"
}
#pragma pop


/* 80CBFDD8-80CBFE20 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80CBFDF0: 80CC0A60 (__vt__8cM3dGCyl)
//	80CBFDF4: 80CC0A60 (__vt__8cM3dGCyl)
//	80CBFE04: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80CBFE20-80CBFE68 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80CBFE38: 80CC0A54 (__vt__8cM3dGAab)
//	80CBFE3C: 80CC0A54 (__vt__8cM3dGAab)
//	80CBFE4C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80CBFE68-80CBFEC4 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80CBFE80: 80CC0A48 (__vt__10dCcD_GStts)
//	80CBFE84: 80CC0A48 (__vt__10dCcD_GStts)
//	80CBFE90: 80CC0A3C (__vt__10cCcD_GStts)
//	80CBFE94: 80CC0A3C (__vt__10cCcD_GStts)
//	80CBFEA8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80CBFEC4-80CBFF1C 0058+00 s=1 e=0 z=0  None .text      Execute__11daRotTrap_cFPPA3_A4_f                             */
//	80CBFEE0: 80CBFF1C (procMain__11daRotTrap_cFv)
//	80CBFEF4: 80CBF940 (setBaseMtx__11daRotTrap_cFv)
//	80CBFEFC: 80083830 (Move__10dCcD_GSttsFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daRotTrap_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/Execute__11daRotTrap_cFPPA3_A4_f.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CC0AB8-80CC0AC4 000C+00 s=1 e=0 z=0  None .bss       @3643                                                        */
static u8 lit_3643[12];

/* 80CC0AC4-80CC0AD4 0010+00 s=4 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[16];

/* 80CC0AD4-80CC0AD8 0004+00 s=1 e=0 z=0  None .bss       None                                                         */
static u8 data_80CC0AD4[4];

/* 80CBFF1C-80CC00AC 0190+00 s=1 e=0 z=0  None .text      procMain__11daRotTrap_cFv                                    */
//	80CBFF2C: 803621B8 (_savegpr_20)
//	80CBFF34: 80CC0860 (cNullVec__6Z2Calc)
//	80CBFF38: 80CC0860 (cNullVec__6Z2Calc)
//	80CBFF3C: 80CC0AD4 (data_80CC0AD4)
//	80CBFF40: 80CC0AD4 (data_80CC0AD4)
//	80CBFFB8: 80362084 (__ptmf_scall)
//	80CBFFD0: 804061C0 (g_dComIfG_gameInfo)
//	80CBFFD4: 804061C0 (g_dComIfG_gameInfo)
//	80CBFFDC: 803DD470 (now__14mDoMtx_stack_c)
//	80CBFFE0: 803DD470 (now__14mDoMtx_stack_c)
//	80CBFFE8: 80CC083C (lit_3880)
//	80CBFFEC: 80CC083C (lit_3880)
//	80CC0000: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	80CC0030: 80346D6C (PSMTXMultVec)
//	80CC0040: 80347090 (PSVECAdd)
//	80CC0054: 8026F200 (SetR__8cM3dGCylFf)
//	80CC0060: 8026F1F8 (SetH__8cM3dGCylFf)
//	80CC006C: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80CC0078: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80CC0098: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::procMain() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/procMain__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CC00AC-80CC0120 0074+00 s=1 e=0 z=0  None .text      init_modeWait__11daRotTrap_cFv                               */
//	80CC00CC: 804061C0 (g_dComIfG_gameInfo)
//	80CC00D0: 804061C0 (g_dComIfG_gameInfo)
//	80CC00D8: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80CC00E8: 804061C0 (g_dComIfG_gameInfo)
//	80CC00EC: 804061C0 (g_dComIfG_gameInfo)
//	80CC00F8: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80CC0100: 8007B9C0 (Move__4dBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::init_modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/init_modeWait__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CC0120-80CC0180 0060+00 s=1 e=0 z=0  None .text      modeWait__11daRotTrap_cFv                                    */
//	80CC0134: 804061C0 (g_dComIfG_gameInfo)
//	80CC0138: 804061C0 (g_dComIfG_gameInfo)
//	80CC0148: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC0158: 80CC0180 (init_modeAcc__11daRotTrap_cFv)
//	80CC0168: 8007B9C0 (Move__4dBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/modeWait__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CC0180-80CC027C 00FC+00 s=1 e=0 z=0  None .text      init_modeAcc__11daRotTrap_cFv                                */
//	80CC0198: 80CC0808 (lit_3649)
//	80CC019C: 80CC0808 (lit_3649)
//	80CC01AC: 804061C0 (g_dComIfG_gameInfo)
//	80CC01B0: 804061C0 (g_dComIfG_gameInfo)
//	80CC01B8: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80CC01C0: 8007B9C0 (Move__4dBgWFv)
//	80CC01D0: 804061C0 (g_dComIfG_gameInfo)
//	80CC01D4: 804061C0 (g_dComIfG_gameInfo)
//	80CC01E0: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80CC01F8: 804061C0 (g_dComIfG_gameInfo)
//	80CC01FC: 804061C0 (g_dComIfG_gameInfo)
//	80CC0204: 80CC0AC4 (l_HIO)
//	80CC0208: 80CC0AC4 (l_HIO)
//	80CC0218: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80CC0228: 80CC0AC4 (l_HIO)
//	80CC022C: 80CC0AC4 (l_HIO)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::init_modeAcc() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/init_modeAcc__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CC027C-80CC034C 00D0+00 s=1 e=0 z=0  None .text      modeAcc__11daRotTrap_cFv                                     */
//	80CC029C: 8002D06C (dComIfGp_getReverb__Fi)
//	80CC02B0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC02B4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC02C8: 80CC0844 (lit_3922)
//	80CC02CC: 80CC0844 (lit_3922)
//	80CC02D4: 80CC0854 (lit_3940)
//	80CC02D8: 80CC0854 (lit_3940)
//	80CC02E4: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CC02F0: 80CC0AC4 (l_HIO)
//	80CC02F4: 80CC0AC4 (l_HIO)
//	80CC0304: 80270B90 (cLib_chaseAngleS__FPsss)
//	80CC0320: 80CC0440 (seSet__11daRotTrap_cFv)
//	80CC0330: 80CC034C (init_modeMove__11daRotTrap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::modeAcc() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/modeAcc__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CC034C-80CC0360 0014+00 s=2 e=0 z=0  None .text      init_modeMove__11daRotTrap_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::init_modeMove() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/init_modeMove__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CC0360-80CC0440 00E0+00 s=1 e=0 z=0  None .text      modeMove__11daRotTrap_cFv                                    */
//	80CC0378: 80CC0808 (lit_3649)
//	80CC037C: 80CC0808 (lit_3649)
//	80CC0388: 8002D06C (dComIfGp_getReverb__Fi)
//	80CC039C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC03A0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC03C8: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CC03D8: 80CC0AC4 (l_HIO)
//	80CC03DC: 80CC0AC4 (l_HIO)
//	80CC0424: 80CC0440 (seSet__11daRotTrap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::modeMove() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/modeMove__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CC0440-80CC0548 0108+00 s=2 e=0 z=0  None .text      seSet__11daRotTrap_cFv                                       */
//	80CC0474: 8002D06C (dComIfGp_getReverb__Fi)
//	80CC0488: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC048C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC04A0: 80CC0844 (lit_3922)
//	80CC04A4: 80CC0844 (lit_3922)
//	80CC04AC: 80CC0854 (lit_3940)
//	80CC04B0: 80CC0854 (lit_3940)
//	80CC04BC: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CC04E0: 8002D06C (dComIfGp_getReverb__Fi)
//	80CC04F4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC04F8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC050C: 80CC0844 (lit_3922)
//	80CC0510: 80CC0844 (lit_3922)
//	80CC0518: 80CC0854 (lit_3940)
//	80CC051C: 80CC0854 (lit_3940)
//	80CC0528: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::seSet() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/seSet__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CC0548-80CC05EC 00A4+00 s=1 e=0 z=0  None .text      Draw__11daRotTrap_cFv                                        */
//	80CC0560: 8042CA54 (g_env_light)
//	80CC0564: 8042CA54 (g_env_light)
//	80CC0574: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80CC0578: 8042CA54 (g_env_light)
//	80CC057C: 8042CA54 (g_env_light)
//	80CC058C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80CC0590: 804061C0 (g_dComIfG_gameInfo)
//	80CC0594: 804061C0 (g_dComIfG_gameInfo)
//	80CC059C: 80434AC8 (j3dSys)
//	80CC05A0: 80434AC8 (j3dSys)
//	80CC05B4: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80CC05B8: 804061C0 (g_dComIfG_gameInfo)
//	80CC05BC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/Draw__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CC05EC-80CC0654 0068+00 s=1 e=0 z=0  None .text      Delete__11daRotTrap_cFv                                      */
//	80CC0604: 80CC0858 (stringBase0)
//	80CC0608: 80CC0858 (stringBase0)
//	80CC060C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80CC061C: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80CC0628: 804061C0 (g_dComIfG_gameInfo)
//	80CC062C: 804061C0 (g_dComIfG_gameInfo)
//	80CC0638: 80074250 (Release__4cBgSFP9dBgW_Base)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daRotTrap_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/Delete__11daRotTrap_cFv.s"
}
#pragma pop


/* 80CC0654-80CC0680 002C+00 s=1 e=0 z=0  None .text      daRotTrap_Draw__FP11daRotTrap_c                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daRotTrap_c* False
// 	 daRotTrap_c False
asm static void daRotTrap_Draw(daRotTrap_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/daRotTrap_Draw__FP11daRotTrap_c.s"
}
#pragma pop


/* 80CC0680-80CC06A0 0020+00 s=1 e=0 z=0  None .text      daRotTrap_Execute__FP11daRotTrap_c                           */
//	80CC068C: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daRotTrap_c* False
// 	 daRotTrap_c False
asm static void daRotTrap_Execute(daRotTrap_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/daRotTrap_Execute__FP11daRotTrap_c.s"
}
#pragma pop


/* 80CC06A0-80CC06C0 0020+00 s=1 e=0 z=0  None .text      daRotTrap_Delete__FP11daRotTrap_c                            */
//	80CC06AC: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daRotTrap_c* False
// 	 daRotTrap_c False
asm static void daRotTrap_Delete(daRotTrap_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/daRotTrap_Delete__FP11daRotTrap_c.s"
}
#pragma pop


/* 80CC06C0-80CC06E0 0020+00 s=1 e=0 z=0  None .text      daRotTrap_Create__FP10fopAc_ac_c                             */
//	80CC06CC: 80CBFAC8 (create__11daRotTrap_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daRotTrap_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/daRotTrap_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80CC06E0-80CC0728 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80CC06F8: 80CC0A3C (__vt__10cCcD_GStts)
//	80CC06FC: 80CC0A3C (__vt__10cCcD_GStts)
//	80CC070C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80CC0728-80CC0784 005C+00 s=2 e=0 z=0  None .text      __dt__15daRotTrap_HIO_cFv                                    */
//	80CC0740: 80CC0A94 (__vt__15daRotTrap_HIO_c)
//	80CC0744: 80CC0A94 (__vt__15daRotTrap_HIO_c)
//	80CC0750: 80CC0AA0 (__vt__14mDoHIO_entry_c)
//	80CC0754: 80CC0AA0 (__vt__14mDoHIO_entry_c)
//	80CC0768: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daRotTrap_HIO_c::~daRotTrap_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/__dt__15daRotTrap_HIO_cFv.s"
}
#pragma pop


/* 80CC0784-80CC07F4 0070+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_rotTrap_cpp                                  */
//	80CC0790: 80CC0AC4 (l_HIO)
//	80CC0794: 80CC0AC4 (l_HIO)
//	80CC0798: 80CBF8AC (__ct__15daRotTrap_HIO_cFv)
//	80CC079C: 80CC0728 (__dt__15daRotTrap_HIO_cFv)
//	80CC07A0: 80CC0728 (__dt__15daRotTrap_HIO_cFv)
//	80CC07A4: 80CC0AB8 (lit_3643)
//	80CC07A8: 80CC0AB8 (lit_3643)
//	80CC07AC: 80CBF838 (__register_global_object)
//	80CC07B0: 80CC0880 (mCcDCyl__11daRotTrap_c)
//	80CC07B4: 80CC0880 (mCcDCyl__11daRotTrap_c)
//	80CC07BC: 80CC080C (mCcDObjInfo__11daRotTrap_c)
//	80CC07C0: 80CC080C (mCcDObjInfo__11daRotTrap_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_rotTrap_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rotTrap/d_a_obj_rotTrap/__sinit_d_a_obj_rotTrap_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80CC0784 = (void*)__sinit_d_a_obj_rotTrap_cpp;
#pragma pop


