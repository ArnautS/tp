// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_zdoor
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct fopAc_ac_c {
};

struct daZdoor_c {
	/* 80D3F65C */ // True False
void init_cyl();
	/* 80D3F740 */ // True False
void set_cyl();
	/* 80D3F884 */ // True False
void setBaseMtx();
	/* 80D3F8F8 */ // True False
void Create();
	/* 80D3F970 */ // True False
void CreateHeap();
	/* 80D3F9F0 */ // True False
void create1st();
	/* 80D3FACC */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80D3FCE8 */ // True False
void Draw();
	/* 80D3FD8C */ // True False
void Delete();
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C37C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, char const*, dRes_info_c*, int);
	/* 8003C6B8 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
void getObjectResName2Index(char const*, char const*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
	/* 80D3FFA8 */ // True False
~dCcD_Cyl();
	/* 80D40074 */ // True False
dCcD_Cyl();
};

struct dBgW {
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80D400F8 */ // True False
~dBgS_ObjAcch();
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
};

struct cM3dGCylS {
};

struct cM3dGCyl {
	/* 8026F114 */ // False False
//  cM3dGCylS const& False
// 	 cM3dGCylS const False
// 		 cM3dGCylS False
void Set(cM3dGCylS const&);
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 80D3FF18 */ // True False
~cM3dGCyl();
};

struct cM3dGAab {
	/* 80D3FF60 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  daZdoor_c* False
// 	 daZdoor_c False
static void checkPlayerPos(daZdoor_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
static void doorCoHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
static void doorTgHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
static void daZdoor_create1st(daZdoor_c*);
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
static void daZdoor_MoveBGDelete(daZdoor_c*);
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
static void daZdoor_MoveBGExecute(daZdoor_c*);
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
static void daZdoor_MoveBGDraw(daZdoor_c*);

// True False
//  daZdoor_c* False
// 	 daZdoor_c False
extern "C" static void checkPlayerPos__FP9daZdoor_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" static void doorCoHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" static void doorTgHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// True False
extern "C" void init_cyl__9daZdoor_cFv();
// True False
extern "C" void set_cyl__9daZdoor_cFv();
// True False
extern "C" void setBaseMtx__9daZdoor_cFv();
// True False
extern "C" void Create__9daZdoor_cFv();
// True False
extern "C" void CreateHeap__9daZdoor_cFv();
// True False
extern "C" void create1st__9daZdoor_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__9daZdoor_cFPPA3_A4_f();
// True False
extern "C" void Draw__9daZdoor_cFv();
// True False
extern "C" void Delete__9daZdoor_cFv();
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
extern "C" static void daZdoor_create1st__FP9daZdoor_c();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__8dCcD_CylFv();
// True False
extern "C" void __ct__8dCcD_CylFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
extern "C" static void daZdoor_MoveBGDelete__FP9daZdoor_c();
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
extern "C" static void daZdoor_MoveBGExecute__FP9daZdoor_c();
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
extern "C" static void daZdoor_MoveBGDraw__FP9daZdoor_c();
// True False
extern "C" static void func_80D401D4();
// True False
extern "C" static void func_80D401DC();
extern "C" extern u8 const l_open_limit_max[6 + 2 /* padding */];
extern "C" extern u8 const l_open_limit_min[6 + 2 /* padding */];
extern "C" extern u32 const lit_3796;
extern "C" extern u32 const lit_3797;
extern "C" extern u32 const lit_3798;
extern "C" extern u32 const lit_3799;
extern "C" extern u32 const lit_3906;
extern "C" extern u32 const lit_3907;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_ZDoor[12];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__9daZdoor_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getObjectResName2Index__14dRes_control_cFPCcPCc();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  cM3dGCylS const& False
// 	 cM3dGCylS const False
// 		 cM3dGCylS False
extern "C" void Set__8cM3dGCylFRC9cM3dGCylS();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80D401EC-80D40228 003C+00 s=3 e=0 z=0  None .rodata    l_cyl_data                                                   */
SECTION_RODATA static u8 const l_cyl_data[60] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
	0x43, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x42, 0x0C, 0x00, 0x00, 0x43, 0xAF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00,
};

/* 80D40228-80D40264 003C+00 s=1 e=0 z=0  None .rodata    l_cyl_data2                                                  */
SECTION_RODATA static u8 const l_cyl_data2[60] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
	0x43, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x42, 0xA0, 0x00, 0x00, 0x43, 0xAF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00,
};

/* 80D40264-80D4026C 0006+02 s=0 e=0 z=0  None .rodata    l_open_limit_max                                             */
SECTION_RODATA u8 const l_open_limit_max[6 + 2 /* padding */] = {
	0x4E, 0x20, 0x55, 0x55, 0x00, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 80D4026C-80D40274 0006+02 s=0 e=0 z=0  None .rodata    l_open_limit_min                                             */
SECTION_RODATA u8 const l_open_limit_min[6 + 2 /* padding */] = {
	0x13, 0x88, 0xAA, 0xAB, 0xAE, 0x39,
	/* padding */
	0x00, 0x00,
};

/* 80D40274-80D4027C 0006+02 s=2 e=0 z=0  None .rodata    l_open_speed                                                 */
SECTION_RODATA static u8 const l_open_speed[6 + 2 /* padding */] = {
	0x00, 0xFA, 0x02, 0x00, 0x02, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 80D4027C-80D40280 0004+00 s=1 e=0 z=0  None .rodata    @3658                                                        */
SECTION_RODATA static u8 const lit_3658[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80D3F438-80D3F4DC 00A4+00 s=2 e=0 z=0  None .text      checkPlayerPos__FP9daZdoor_c                                 */
//	80D3F44C: 804061C0 (g_dComIfG_gameInfo)
//	80D3F450: 804061C0 (g_dComIfG_gameInfo)
//	80D3F464: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80D3F480: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F484: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F494: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80D3F498: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F49C: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F4A8: 80346D6C (PSMTXMultVec)
//	80D3F4B4: 80D4027C (lit_3658)
//	80D3F4B8: 80D4027C (lit_3658)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
asm static void checkPlayerPos(daZdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/checkPlayerPos__FP9daZdoor_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D40280-80D40284 0004+00 s=1 e=0 z=0  None .rodata    @3679                                                        */
SECTION_RODATA static u32 const lit_3679 = 0x40400000;

/* 80D3F4DC-80D3F570 0094+00 s=1 e=0 z=0  None .text      doorCoHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	80D3F4F4: 804061C0 (g_dComIfG_gameInfo)
//	80D3F4F8: 804061C0 (g_dComIfG_gameInfo)
//	80D3F50C: 80D40274 (l_open_speed)
//	80D3F510: 80D40274 (l_open_speed)
//	80D3F52C: 80D40280 (lit_3679)
//	80D3F530: 80D40280 (lit_3679)
//	80D3F53C: 80D3F438 (checkPlayerPos__FP9daZdoor_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
asm static void doorCoHitCallBack(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/func_80D3F4DC.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D40284-80D4028C 0004+04 s=1 e=0 z=0  None .rodata    @3712                                                        */
SECTION_RODATA static u32 const lit_3712[1 + 1 /* padding */] = {
	0x40000000,
	/* padding */
	0x00000000,
};

/* 80D4028C-80D40294 0008+00 s=1 e=0 z=0  None .rodata    @3714                                                        */
SECTION_RODATA static u8 const lit_3714[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80D3F570-80D3F65C 00EC+00 s=1 e=0 z=0  None .text      doorTgHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	80D3F588: 804061C0 (g_dComIfG_gameInfo)
//	80D3F58C: 804061C0 (g_dComIfG_gameInfo)
//	80D3F5A8: 80D40274 (l_open_speed)
//	80D3F5AC: 80D40274 (l_open_speed)
//	80D3F5C8: 804061C0 (g_dComIfG_gameInfo)
//	80D3F5CC: 804061C0 (g_dComIfG_gameInfo)
//	80D3F5EC: 80D4028C (lit_3714)
//	80D3F5F0: 80D4028C (lit_3714)
//	80D3F60C: 80D40284 (lit_3712)
//	80D3F610: 80D40284 (lit_3712)
//	80D3F628: 80D3F438 (checkPlayerPos__FP9daZdoor_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
asm static void doorTgHitCallBack(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/func_80D3F570.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D40310-80D40354 0044+00 s=1 e=0 z=0  None .data      l_cyl_src                                                    */
SECTION_DATA static u8 l_cyl_src[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
	0x43, 0xC8, 0x00, 0x00,
};

/* 80D40354-80D40398 0044+00 s=1 e=0 z=0  None .data      l_cyl_src2                                                   */
SECTION_DATA static u8 l_cyl_src2[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
	0x43, 0xC8, 0x00, 0x00,
};

/* 80D3F65C-80D3F740 00E4+00 s=1 e=0 z=0  None .text      init_cyl__9daZdoor_cFv                                       */
//	80D3F66C: 803621C4 (_savegpr_23)
//	80D3F684: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80D3F690: 80D40310 (l_cyl_src)
//	80D3F694: 80D40310 (l_cyl_src)
//	80D3F69C: 80D3F4DC (doorCoHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80D3F6A0: 80D3F4DC (doorCoHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80D3F6A4: 80D3F570 (doorTgHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80D3F6A8: 80D3F570 (doorTgHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80D3F6AC: 80D401EC (l_cyl_data)
//	80D3F6B0: 80D401EC (l_cyl_data)
//	80D3F6C0: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80D3F6E0: 8026F114 (Set__8cM3dGCylFRC9cM3dGCylS)
//	80D3F6F8: 80D40354 (l_cyl_src2)
//	80D3F6FC: 80D40354 (l_cyl_src2)
//	80D3F700: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80D3F718: 80D40228 (l_cyl_data2)
//	80D3F71C: 80D40228 (l_cyl_data2)
//	80D3F724: 8026F114 (Set__8cM3dGCylFRC9cM3dGCylS)
//	80D3F72C: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daZdoor_c::init_cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/init_cyl__9daZdoor_cFv.s"
}
#pragma pop


/* 80D3F740-80D3F884 0144+00 s=1 e=0 z=0  None .text      set_cyl__9daZdoor_cFv                                        */
//	80D3F750: 803621D0 (_savegpr_26)
//	80D3F758: 80D401EC (l_cyl_data)
//	80D3F75C: 80D401EC (l_cyl_data)
//	80D3F7E0: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F7E4: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F81C: 803468E8 (PSMTXTrans)
//	80D3F828: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80D3F838: 80346D6C (PSMTXMultVec)
//	80D3F848: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80D3F868: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80D3F870: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daZdoor_c::set_cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/set_cyl__9daZdoor_cFv.s"
}
#pragma pop


/* 80D3F884-80D3F8F8 0074+00 s=2 e=0 z=0  None .text      setBaseMtx__9daZdoor_cFv                                     */
//	80D3F898: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F89C: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F8AC: 803468E8 (PSMTXTrans)
//	80D3F8B0: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F8B4: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F8BC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80D3F8C0: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F8C4: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F8D0: 803464B0 (PSMTXCopy)
//	80D3F8D4: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F8D8: 803DD470 (now__14mDoMtx_stack_c)
//	80D3F8E0: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daZdoor_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/setBaseMtx__9daZdoor_cFv.s"
}
#pragma pop


/* 80D3F8F8-80D3F970 0078+00 s=1 e=0 z=0  None .text      Create__9daZdoor_cFv                                         */
//	80D3F90C: 80D3F884 (setBaseMtx__9daZdoor_cFv)
//	80D3F920: 80D3F65C (init_cyl__9daZdoor_cFv)
//	80D3F930: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daZdoor_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/Create__9daZdoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D40294-80D40298 0004+00 s=0 e=0 z=0  None .rodata    @3796                                                        */
SECTION_RODATA u32 const lit_3796 = 0x42700000;

/* 80D40298-80D4029C 0004+00 s=0 e=0 z=0  None .rodata    @3797                                                        */
SECTION_RODATA u32 const lit_3797 = 0x42F00000;

/* 80D4029C-80D402A0 0004+00 s=0 e=0 z=0  None .rodata    @3798                                                        */
SECTION_RODATA u32 const lit_3798 = 0x43340000;

/* 80D402A0-80D402A4 0004+00 s=0 e=0 z=0  None .rodata    @3799                                                        */
SECTION_RODATA u32 const lit_3799 = 0x43700000;

/* 80D402A4-80D402A8 0004+00 s=1 e=0 z=0  None .rodata    estimateSizeTbl$3848                                         */
SECTION_RODATA static u8 const estimateSizeTbl[4] = {
	0x0C, 0xF0, 0x0D, 0x30,
};

/* 80D402A8-80D402AC 0004+00 s=0 e=0 z=0  None .rodata    @3906                                                        */
SECTION_RODATA u32 const lit_3906 = 0x3F800000;

/* 80D402AC-80D402B0 0004+00 s=0 e=0 z=0  None .rodata    @3907                                                        */
SECTION_RODATA u32 const lit_3907 = 0xBF800000;

/* 80D402B0-80D402B8 0008+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80D402B0 = "J_Zdoor";
#pragma pop

/* 80D402B8-80D402C0 0008+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const data_80D402B8[8] = {
	0x4A, 0x5F, 0x52, 0x64, 0x6F, 0x6F, 0x72, 0x00,
};

/* 80D402C0-80D402C8 0008+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const data_80D402C0[8] = {
	0x4A, 0x5F, 0x53, 0x54, 0x64, 0x6F, 0x61, 0x00,
};

/* 80D402C8-80D402D4 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const data_80D402C8[12] = {
	0x4A, 0x5F, 0x5A, 0x64, 0x6F, 0x6F, 0x72, 0x2E, 0x62, 0x6D, 0x64, 0x00,
};

/* 80D402D4-80D402E0 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const data_80D402D4[12] = {
	0x4A, 0x5F, 0x52, 0x64, 0x6F, 0x6F, 0x72, 0x2E, 0x62, 0x6D, 0x64, 0x00,
};

/* 80D402E0-80D402EC 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const data_80D402E0[12] = {
	0x4A, 0x5F, 0x53, 0x54, 0x64, 0x6F, 0x61, 0x2E, 0x62, 0x6D, 0x64, 0x00,
};

/* 80D40398-80D403A4 000C+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName[3] = {
	(void*)&stringBase0,
	(void*)&data_80D402B8,
	(void*)&data_80D402C0,
};

/* 80D403A4-80D403B0 000C+00 s=1 e=0 z=0  None .data      l_bmdName                                                    */
SECTION_DATA static void* l_bmdName[3] = {
	(void*)&data_80D402C8,
	(void*)&data_80D402D4,
	(void*)&data_80D402E0,
};

/* 80D3F970-80D3F9F0 0080+00 s=1 e=0 z=0  None .text      CreateHeap__9daZdoor_cFv                                     */
//	80D3F98C: 80D40398 (l_arcName)
//	80D3F990: 80D40398 (l_arcName)
//	80D3F998: 80D403A4 (l_bmdName)
//	80D3F99C: 80D403A4 (l_bmdName)
//	80D3F9A4: 804061C0 (g_dComIfG_gameInfo)
//	80D3F9A8: 804061C0 (g_dComIfG_gameInfo)
//	80D3F9B8: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80D3F9C8: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daZdoor_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/CreateHeap__9daZdoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D402EC-80D402F8 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const data_80D402EC[12] = {
	0x4A, 0x5F, 0x5A, 0x64, 0x6F, 0x6F, 0x72, 0x2E, 0x64, 0x7A, 0x62, 0x00,
};

/* 80D402F8-80D40304 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const data_80D402F8[12] = {
	0x4A, 0x5F, 0x52, 0x64, 0x6F, 0x6F, 0x72, 0x2E, 0x64, 0x7A, 0x62, 0x00,
};

/* 80D40304-80D40310 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const data_80D40304[12] = {
	0x4A, 0x5F, 0x53, 0x54, 0x64, 0x6F, 0x61, 0x2E, 0x64, 0x7A, 0x62, 0x00,
};

/* 80D403B0-80D403BC 000C+00 s=1 e=0 z=0  None .data      l_dzbName                                                    */
SECTION_DATA static void* l_dzbName[3] = {
	(void*)&data_80D402EC,
	(void*)&data_80D402F8,
	(void*)&data_80D40304,
};

/* 80D3F9F0-80D3FACC 00DC+00 s=1 e=0 z=0  None .text      create1st__9daZdoor_cFv                                      */
//	80D3FA1C: 80D40398 (l_arcName)
//	80D3FA20: 80D40398 (l_arcName)
//	80D3FA28: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80D3FA40: 804061C0 (g_dComIfG_gameInfo)
//	80D3FA44: 804061C0 (g_dComIfG_gameInfo)
//	80D3FA4C: 80D40398 (l_arcName)
//	80D3FA50: 80D40398 (l_arcName)
//	80D3FA58: 80D403B0 (l_dzbName)
//	80D3FA5C: 80D403B0 (l_dzbName)
//	80D3FA68: 8003C6B8 (getObjectResName2Index__14dRes_control_cFPCcPCc)
//	80D3FA7C: 80D40398 (l_arcName)
//	80D3FA80: 80D40398 (l_arcName)
//	80D3FA90: 80D402A4 (estimateSizeTbl)
//	80D3FA94: 80D402A4 (estimateSizeTbl)
//	80D3FAA0: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daZdoor_c::create1st() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/create1st__9daZdoor_cFv.s"
}
#pragma pop


/* 80D3FACC-80D3FCE8 021C+00 s=1 e=0 z=0  None .text      Execute__9daZdoor_cFPPA3_A4_f                                */
//	80D3FADC: 803621D0 (_savegpr_26)
//	80D3FAE8: 80D401EC (l_cyl_data)
//	80D3FAEC: 80D401EC (l_cyl_data)
//	80D3FAF4: 80D3F740 (set_cyl__9daZdoor_cFv)
//	80D3FB24: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80D3FBE8: 8002D06C (dComIfGp_getReverb__Fi)
//	80D3FBFC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D3FC00: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D3FC28: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D3FC38: 8002D06C (dComIfGp_getReverb__Fi)
//	80D3FC4C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D3FC50: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D3FC78: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D3FC80: 80D3F884 (setBaseMtx__9daZdoor_cFv)
//	80D3FC94: 804061C0 (g_dComIfG_gameInfo)
//	80D3FC98: 804061C0 (g_dComIfG_gameInfo)
//	80D3FCAC: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80D3FCC8: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80D3FCD4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daZdoor_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/Execute__9daZdoor_cFPPA3_A4_f.s"
}
#pragma pop


/* 80D3FCE8-80D3FD8C 00A4+00 s=1 e=0 z=0  None .text      Draw__9daZdoor_cFv                                           */
//	80D3FD00: 8042CA54 (g_env_light)
//	80D3FD04: 8042CA54 (g_env_light)
//	80D3FD14: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80D3FD18: 8042CA54 (g_env_light)
//	80D3FD1C: 8042CA54 (g_env_light)
//	80D3FD2C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80D3FD30: 804061C0 (g_dComIfG_gameInfo)
//	80D3FD34: 804061C0 (g_dComIfG_gameInfo)
//	80D3FD3C: 80434AC8 (j3dSys)
//	80D3FD40: 80434AC8 (j3dSys)
//	80D3FD54: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80D3FD58: 804061C0 (g_dComIfG_gameInfo)
//	80D3FD5C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daZdoor_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/Draw__9daZdoor_cFv.s"
}
#pragma pop


/* 80D3FD8C-80D3FDCC 0040+00 s=1 e=0 z=0  None .text      Delete__9daZdoor_cFv                                         */
//	80D3FDA8: 80D40398 (l_arcName)
//	80D3FDAC: 80D40398 (l_arcName)
//	80D3FDB4: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daZdoor_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/Delete__9daZdoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D403BC-80D403DC 0020+00 s=1 e=0 z=0  None .data      daZdoor_METHODS                                              */
SECTION_DATA static void* daZdoor_METHODS[8] = {
	(void*)daZdoor_create1st__FP9daZdoor_c,
	(void*)daZdoor_MoveBGDelete__FP9daZdoor_c,
	(void*)daZdoor_MoveBGExecute__FP9daZdoor_c,
	(void*)NULL,
	(void*)daZdoor_MoveBGDraw__FP9daZdoor_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80D403DC-80D4040C 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_ZDoor                                          */
SECTION_DATA void* g_profile_Obj_ZDoor[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00320000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000E34,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00180000,
	(void*)&daZdoor_METHODS,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80D4040C-80D40418 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80D40418-80D40424 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80D40424-80D40448 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80D401DC,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80D401D4,
};

/* 80D40448-80D40470 0028+00 s=1 e=0 z=0  None .data      __vt__9daZdoor_c                                             */
SECTION_DATA void* __vt__9daZdoor_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__9daZdoor_cFv,
	(void*)Create__9daZdoor_cFv,
	(void*)Execute__9daZdoor_cFPPA3_A4_f,
	(void*)Draw__9daZdoor_cFv,
	(void*)Delete__9daZdoor_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80D3FDCC-80D3FF18 014C+00 s=1 e=0 z=0  None .text      daZdoor_create1st__FP9daZdoor_c                              */
//	80D3FDDC: 803621DC (_savegpr_29)
//	80D3FDFC: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80D3FE00: 80D40448 (__vt__9daZdoor_c)
//	80D3FE04: 80D40448 (__vt__9daZdoor_c)
//	80D3FE14: 800760A0 (__ct__9dBgS_AcchFv)
//	80D3FE18: 80D40424 (__vt__12dBgS_ObjAcch)
//	80D3FE1C: 80D40424 (__vt__12dBgS_ObjAcch)
//	80D3FE38: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80D3FE40: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80D3FE44: 803C3728 (__vt__9cCcD_Stts)
//	80D3FE48: 803C3728 (__vt__9cCcD_Stts)
//	80D3FE54: 80083760 (__ct__10dCcD_GSttsFv)
//	80D3FE58: 803AC2E4 (__vt__9dCcD_Stts)
//	80D3FE5C: 803AC2E4 (__vt__9dCcD_Stts)
//	80D3FE70: 80D40074 (__ct__8dCcD_CylFv)
//	80D3FE74: 80D40074 (__ct__8dCcD_CylFv)
//	80D3FE78: 80D3FFA8 (__dt__8dCcD_CylFv)
//	80D3FE7C: 80D3FFA8 (__dt__8dCcD_CylFv)
//	80D3FE88: 80361D60 (__construct_array)
//	80D3FE94: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80D3FE98: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D3FE9C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D3FEA4: 80D40418 (__vt__8cM3dGAab)
//	80D3FEA8: 80D40418 (__vt__8cM3dGAab)
//	80D3FEB0: 80D4040C (__vt__8cM3dGCyl)
//	80D3FEB4: 80D4040C (__vt__8cM3dGCyl)
//	80D3FEBC: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D3FEC0: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D3FED0: 803AC050 (__vt__8dCcD_Cyl)
//	80D3FED4: 803AC050 (__vt__8dCcD_Cyl)
//	80D3FEFC: 80D3F9F0 (create1st__9daZdoor_cFv)
//	80D3FF04: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
asm static void daZdoor_create1st(daZdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/daZdoor_create1st__FP9daZdoor_c.s"
}
#pragma pop


/* 80D3FF18-80D3FF60 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80D3FF30: 80D4040C (__vt__8cM3dGCyl)
//	80D3FF34: 80D4040C (__vt__8cM3dGCyl)
//	80D3FF44: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80D3FF60-80D3FFA8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80D3FF78: 80D40418 (__vt__8cM3dGAab)
//	80D3FF7C: 80D40418 (__vt__8cM3dGAab)
//	80D3FF8C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80D3FFA8-80D40074 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_CylFv                                            */
//	80D3FFC8: 803AC050 (__vt__8dCcD_Cyl)
//	80D3FFCC: 803AC050 (__vt__8dCcD_Cyl)
//	80D3FFEC: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D3FFF0: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D40008: 80D4040C (__vt__8cM3dGCyl)
//	80D4000C: 80D4040C (__vt__8cM3dGCyl)
//	80D4001C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D40020: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D40030: 80D40418 (__vt__8cM3dGAab)
//	80D40034: 80D40418 (__vt__8cM3dGAab)
//	80D40044: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80D40054: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::~dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/__dt__8dCcD_CylFv.s"
}
#pragma pop


/* 80D40074-80D400F8 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_CylFv                                            */
//	80D40088: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80D4008C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D40090: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D40098: 80D40418 (__vt__8cM3dGAab)
//	80D4009C: 80D40418 (__vt__8cM3dGAab)
//	80D400A4: 80D4040C (__vt__8cM3dGCyl)
//	80D400A8: 80D4040C (__vt__8cM3dGCyl)
//	80D400B0: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D400B4: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D400C4: 803AC050 (__vt__8dCcD_Cyl)
//	80D400C8: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/__ct__8dCcD_CylFv.s"
}
#pragma pop


/* 80D400F8-80D40168 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80D40118: 80D40424 (__vt__12dBgS_ObjAcch)
//	80D4011C: 80D40424 (__vt__12dBgS_ObjAcch)
//	80D40138: 80075F94 (__dt__9dBgS_AcchFv)
//	80D40148: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80D40168-80D40188 0020+00 s=1 e=0 z=0  None .text      daZdoor_MoveBGDelete__FP9daZdoor_c                           */
//	80D40174: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
asm static void daZdoor_MoveBGDelete(daZdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/daZdoor_MoveBGDelete__FP9daZdoor_c.s"
}
#pragma pop


/* 80D40188-80D401A8 0020+00 s=1 e=0 z=0  None .text      daZdoor_MoveBGExecute__FP9daZdoor_c                          */
//	80D40194: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
asm static void daZdoor_MoveBGExecute(daZdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/daZdoor_MoveBGExecute__FP9daZdoor_c.s"
}
#pragma pop


/* 80D401A8-80D401D4 002C+00 s=1 e=0 z=0  None .text      daZdoor_MoveBGDraw__FP9daZdoor_c                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daZdoor_c* False
// 	 daZdoor_c False
asm static void daZdoor_MoveBGDraw(daZdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/daZdoor_MoveBGDraw__FP9daZdoor_c.s"
}
#pragma pop


/* 80D401D4-80D401DC 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80D401D8: 80D400F8 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80D401D4() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/func_80D401D4.s"
}
#pragma pop


/* 80D401DC-80D401E4 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80D401E0: 80D400F8 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80D401DC() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_zdoor/d_a_obj_zdoor/func_80D401DC.s"
}
#pragma pop


