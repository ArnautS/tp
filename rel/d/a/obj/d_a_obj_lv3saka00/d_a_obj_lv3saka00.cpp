//
// Generated By: dol2asm
// Translation Unit: d_a_obj_lv3saka00
//

#include "rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct request_of_phase_process_class {};

struct fopAc_ac_c {};

struct daObjLv3saka_c {
    /* 80C5BE58 */ void initBaseMtx();
    /* 80C5BE78 */ void setBaseMtx();
    /* 80C5BED8 */ void Create();
    /* 80C5BFA0 */ void CreateHeap();
    /* 80C5C058 */ void create1st();
    /* 80C5C0FC */ void Execute(f32 (**)[3][4]);
    /* 80C5C17C */ void setNrmDzb();
    /* 80C5C1F8 */ void setWtrDzb();
    /* 80C5C274 */ bool Draw();
    /* 80C5C27C */ void Delete();
};

struct dSv_info_c {
    /* 80035360 */ void isSwitch(int, int) const;
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dBgW_Base {};

struct dBgW {
    /* 8007B970 */ dBgW();
    /* 8007B9C0 */ void Move();
};

struct cXyz {};

struct cBgS_PolyInfo {};

struct csXyz {};

struct dBgS_MoveBgActor {
    /* 80078624 */ dBgS_MoveBgActor();
    /* 800786B0 */ bool IsDelete();
    /* 800786B8 */ bool ToFore();
    /* 800786C0 */ bool ToBack();
    /* 800787BC */ void MoveBGCreate(char const*, int,
                                     void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*,
                                              csXyz*, csXyz*),
                                     u32, f32 (*)[3][4]);
    /* 800788DC */ void MoveBGDelete();
    /* 80078950 */ void MoveBGExecute();
};

struct dBgS {
    /* 80074A08 */ void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct cBgW_BgId {
    /* 802681D4 */ void ChkUsed() const;
};

struct cBgD_t {};

struct cBgW {
    /* 80079F38 */ void Set(cBgD_t*, u32, f32 (*)[3][4]);
};

struct cBgS {
    /* 80074250 */ void Release(dBgW_Base*);
};

//
// Forward References:
//

static void daObjLv3saka_create1st(daObjLv3saka_c*);
static void daObjLv3saka_MoveBGDelete(daObjLv3saka_c*);
static void daObjLv3saka_MoveBGExecute(daObjLv3saka_c*);
static void daObjLv3saka_MoveBGDraw(daObjLv3saka_c*);

extern "C" void initBaseMtx__14daObjLv3saka_cFv();
extern "C" void setBaseMtx__14daObjLv3saka_cFv();
extern "C" void Create__14daObjLv3saka_cFv();
extern "C" void CreateHeap__14daObjLv3saka_cFv();
extern "C" void create1st__14daObjLv3saka_cFv();
extern "C" void Execute__14daObjLv3saka_cFPPA3_A4_f();
extern "C" void setNrmDzb__14daObjLv3saka_cFv();
extern "C" void setWtrDzb__14daObjLv3saka_cFv();
extern "C" bool Draw__14daObjLv3saka_cFv();
extern "C" void Delete__14daObjLv3saka_cFv();
extern "C" static void daObjLv3saka_create1st__FP14daObjLv3saka_c();
extern "C" static void daObjLv3saka_MoveBGDelete__FP14daObjLv3saka_c();
extern "C" static void daObjLv3saka_MoveBGExecute__FP14daObjLv3saka_c();
extern "C" static void daObjLv3saka_MoveBGDraw__FP14daObjLv3saka_c();
extern "C" extern void* g_profile_Obj_Lv3R10Saka[12];
extern "C" extern void* __vt__14daObjLv3saka_c[10];

//
// External References:
//

void mDoMtx_YrotM(f32 (*)[4], s16);
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
void* operator new(u32);

extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void Release__4cBgSFP9dBgW_Base();
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
extern "C" void __ct__16dBgS_MoveBgActorFv();
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
extern "C" void
MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
extern "C" void __ct__4dBgWFv();
extern "C" void Move__4dBgWFv();
extern "C" void ChkUsed__9cBgW_BgIdCFv();
extern "C" void* __nw__FUl();
extern "C" void PSMTXCopy();
extern "C" void PSMTXTrans();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

//
// Declarations:
//

/* 80C5BE58-80C5BE78 0020+00 s=1 e=0 z=0  None .text      initBaseMtx__14daObjLv3saka_cFv */
//	80C5BE64: 80C5BE78 (setBaseMtx__14daObjLv3saka_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::initBaseMtx() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/initBaseMtx__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5BE78-80C5BED8 0060+00 s=2 e=0 z=0  None .text      setBaseMtx__14daObjLv3saka_cFv */
//	80C5BE8C: 803DD470 (now__14mDoMtx_stack_c)
//	80C5BE90: 803DD470 (now__14mDoMtx_stack_c)
//	80C5BEA0: 803468E8 (PSMTXTrans)
//	80C5BEA4: 803DD470 (now__14mDoMtx_stack_c)
//	80C5BEA8: 803DD470 (now__14mDoMtx_stack_c)
//	80C5BEB0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C5BEB4: 803DD470 (now__14mDoMtx_stack_c)
//	80C5BEB8: 803DD470 (now__14mDoMtx_stack_c)
//	80C5BEC0: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::setBaseMtx() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/setBaseMtx__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5BED8-80C5BFA0 00C8+00 s=1 e=0 z=0  None .text      Create__14daObjLv3saka_cFv */
//	80C5BEEC: 804061C0 (g_dComIfG_gameInfo)
//	80C5BEF0: 804061C0 (g_dComIfG_gameInfo)
//	80C5BF04: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C5BF14: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C5BF20: 804061C0 (g_dComIfG_gameInfo)
//	80C5BF24: 804061C0 (g_dComIfG_gameInfo)
//	80C5BF30: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80C5BF34: 804061C0 (g_dComIfG_gameInfo)
//	80C5BF38: 804061C0 (g_dComIfG_gameInfo)
//	80C5BF48: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80C5BF50: 8007B9C0 (Move__4dBgWFv)
//	80C5BF58: 80C5BE58 (initBaseMtx__14daObjLv3saka_cFv)
//	80C5BF5C: 804061C0 (g_dComIfG_gameInfo)
//	80C5BF60: 804061C0 (g_dComIfG_gameInfo)
//	80C5BF74: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C5BF84: 8007B9C0 (Move__4dBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::Create() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/Create__14daObjLv3saka_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80C5C3C4-80C5C3CC 0008+00 s=1 e=0 z=0  None .rodata    l_dzbIdx */
SECTION_RODATA static u8 const l_dzbIdx[8] = {
    0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03,
};

/* 80C5C3CC-80C5C3D4 0008+00 s=1 e=0 z=0  None .rodata    l_dzbIdx2 */
SECTION_RODATA static u8 const l_dzbIdx2[8] = {
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04,
};

/* 80C5C3D4-80C5C3DC 0008+00 s=1 e=0 z=0  None .rodata    l_heap_size */
SECTION_RODATA static u8 const l_heap_size[8] = {
    0x00, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x29, 0x00,
};

/* 80C5C3DC-80C5C3F0 0014+00 s=1 e=0 z=0  None .rodata    None */
SECTION_RODATA static u8 const struct_80C5C3DC[20] = {
    /* 80C5C3DC 0009 stringBase_80C5C3DC @stringBase0 */
    0x4F,
    0x62,
    0x6A,
    0x5F,
    0x73,
    0x61,
    0x6B,
    0x61,
    0x00,
    /* 80C5C3E5 000B data_80C5C3E5 None */
    0x4F,
    0x62,
    0x6A,
    0x5F,
    0x73,
    0x61,
    0x6B,
    0x61,
    0x32,
    0x00,
    0x00,
};

/* 80C5C3F0-80C5C3F8 0008+00 s=3 e=0 z=0  None .data      l_arcName */
SECTION_DATA static void* l_arcName[2] = {
    (void*)(((char*)&struct_80C5C3DC) + 0x0) /* @stringBase0 */,
    (void*)(((char*)&struct_80C5C3DC) + 0x9) /* None */,
};

/* 80C5BFA0-80C5C058 00B8+00 s=1 e=0 z=0  None .text      CreateHeap__14daObjLv3saka_cFv */
//	80C5BFB8: 802CEC4C (__nw__FUl)
//	80C5BFC4: 8007B970 (__ct__4dBgWFv)
//	80C5BFE4: 80C5C3F0 (l_arcName)
//	80C5BFE8: 80C5C3F0 (l_arcName)
//	80C5BFF0: 80C5C3CC (l_dzbIdx2)
//	80C5BFF4: 80C5C3CC (l_dzbIdx2)
//	80C5BFFC: 804061C0 (g_dComIfG_gameInfo)
//	80C5C000: 804061C0 (g_dComIfG_gameInfo)
//	80C5C010: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C5C024: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::CreateHeap() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/CreateHeap__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5C058-80C5C0FC 00A4+00 s=1 e=0 z=0  None .text      create1st__14daObjLv3saka_cFv */
//	80C5C078: 80C5C3F0 (l_arcName)
//	80C5C07C: 80C5C3F0 (l_arcName)
//	80C5C084: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80C5C0A0: 80C5C3F0 (l_arcName)
//	80C5C0A4: 80C5C3F0 (l_arcName)
//	80C5C0AC: 80C5C3C4 (l_dzbIdx)
//	80C5C0B0: 80C5C3C4 (l_dzbIdx)
//	80C5C0B8: 80075AD8
//(dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz) 	80C5C0BC:
//80075AD8
//(dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz) 	80C5C0C0:
//80C5C3D4 (l_heap_size) 	80C5C0C4: 80C5C3D4 (l_heap_size) 	80C5C0D0: 800787BC
//(MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::create1st() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/create1st__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5C0FC-80C5C17C 0080+00 s=1 e=0 z=0  None .text      Execute__14daObjLv3saka_cFPPA3_A4_f */
//	80C5C118: 804061C0 (g_dComIfG_gameInfo)
//	80C5C11C: 804061C0 (g_dComIfG_gameInfo)
//	80C5C130: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C5C140: 80C5C1F8 (setWtrDzb__14daObjLv3saka_cFv)
//	80C5C14C: 80C5C17C (setNrmDzb__14daObjLv3saka_cFv)
//	80C5C15C: 80C5BE78 (setBaseMtx__14daObjLv3saka_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::Execute(f32 (**param_0)[3][4]) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/Execute__14daObjLv3saka_cFPPA3_A4_f.s"
}
#pragma pop

/* 80C5C17C-80C5C1F8 007C+00 s=1 e=0 z=0  None .text      setNrmDzb__14daObjLv3saka_cFv */
//	80C5C194: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C5C1A4: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C5C1B0: 804061C0 (g_dComIfG_gameInfo)
//	80C5C1B4: 804061C0 (g_dComIfG_gameInfo)
//	80C5C1C0: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80C5C1C4: 804061C0 (g_dComIfG_gameInfo)
//	80C5C1C8: 804061C0 (g_dComIfG_gameInfo)
//	80C5C1D8: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80C5C1E0: 8007B9C0 (Move__4dBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::setNrmDzb() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/setNrmDzb__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5C1F8-80C5C274 007C+00 s=1 e=0 z=0  None .text      setWtrDzb__14daObjLv3saka_cFv */
//	80C5C210: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C5C220: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C5C22C: 804061C0 (g_dComIfG_gameInfo)
//	80C5C230: 804061C0 (g_dComIfG_gameInfo)
//	80C5C23C: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80C5C240: 804061C0 (g_dComIfG_gameInfo)
//	80C5C244: 804061C0 (g_dComIfG_gameInfo)
//	80C5C254: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80C5C25C: 8007B9C0 (Move__4dBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::setWtrDzb() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/setWtrDzb__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5C274-80C5C27C 0008+00 s=1 e=0 z=0  None .text      Draw__14daObjLv3saka_cFv */
bool daObjLv3saka_c::Draw() {
    return true;
}

/* 80C5C27C-80C5C2F0 0074+00 s=1 e=0 z=0  None .text      Delete__14daObjLv3saka_cFv */
//	80C5C29C: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C5C2A8: 804061C0 (g_dComIfG_gameInfo)
//	80C5C2AC: 804061C0 (g_dComIfG_gameInfo)
//	80C5C2B8: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80C5C2C8: 80C5C3F0 (l_arcName)
//	80C5C2CC: 80C5C3F0 (l_arcName)
//	80C5C2D4: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::Delete() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/Delete__14daObjLv3saka_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80C5C3F8-80C5C418 0020+00 s=1 e=0 z=0  None .data      daObjLv3saka_METHODS */
SECTION_DATA static void* daObjLv3saka_METHODS[8] = {
    (void*)daObjLv3saka_create1st__FP14daObjLv3saka_c,
    (void*)daObjLv3saka_MoveBGDelete__FP14daObjLv3saka_c,
    (void*)daObjLv3saka_MoveBGExecute__FP14daObjLv3saka_c,
    (void*)NULL,
    (void*)daObjLv3saka_MoveBGDraw__FP14daObjLv3saka_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80C5C418-80C5C448 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Lv3R10Saka */
SECTION_DATA void* g_profile_Obj_Lv3R10Saka[12] = {
    (void*)0xFFFFFFFD, (void*)0x0003FFFD,
    (void*)0x00D40000, (void*)&g_fpcLf_Method,
    (void*)0x000005AC, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x02100000, (void*)&daObjLv3saka_METHODS,
    (void*)0x00040100, (void*)0x000E0000,
};

/* 80C5C448-80C5C470 0028+00 s=1 e=0 z=0  None .data      __vt__14daObjLv3saka_c */
SECTION_DATA void* __vt__14daObjLv3saka_c[10] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)CreateHeap__14daObjLv3saka_cFv,
    (void*)Create__14daObjLv3saka_cFv,
    (void*)Execute__14daObjLv3saka_cFPPA3_A4_f,
    (void*)Draw__14daObjLv3saka_cFv,
    (void*)Delete__14daObjLv3saka_cFv,
    (void*)IsDelete__16dBgS_MoveBgActorFv,
    (void*)ToFore__16dBgS_MoveBgActorFv,
    (void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80C5C2F0-80C5C350 0060+00 s=1 e=0 z=0  None .text      daObjLv3saka_create1st__FP14daObjLv3saka_c
 */
//	80C5C318: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80C5C31C: 80C5C448 (__vt__14daObjLv3saka_c)
//	80C5C320: 80C5C448 (__vt__14daObjLv3saka_c)
//	80C5C338: 80C5C058 (create1st__14daObjLv3saka_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjLv3saka_create1st(daObjLv3saka_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/daObjLv3saka_create1st__FP14daObjLv3saka_c.s"
}
#pragma pop

/* 80C5C350-80C5C370 0020+00 s=1 e=0 z=0  None .text daObjLv3saka_MoveBGDelete__FP14daObjLv3saka_c
 */
//	80C5C35C: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjLv3saka_MoveBGDelete(daObjLv3saka_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/daObjLv3saka_MoveBGDelete__FP14daObjLv3saka_c.s"
}
#pragma pop

/* 80C5C370-80C5C390 0020+00 s=1 e=0 z=0  None .text
 * daObjLv3saka_MoveBGExecute__FP14daObjLv3saka_c               */
//	80C5C37C: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjLv3saka_MoveBGExecute(daObjLv3saka_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/daObjLv3saka_MoveBGExecute__FP14daObjLv3saka_c.s"
}
#pragma pop

/* 80C5C390-80C5C3BC 002C+00 s=1 e=0 z=0  None .text daObjLv3saka_MoveBGDraw__FP14daObjLv3saka_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjLv3saka_MoveBGDraw(daObjLv3saka_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/daObjLv3saka_MoveBGDraw__FP14daObjLv3saka_c.s"
}
#pragma pop
