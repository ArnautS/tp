// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_scannon_crs
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct J3DAnmTextureSRTKey {
};

struct J3DMaterialTable {
	/* 8032F7B4 */ // False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
void removeTexMtxAnimator(J3DAnmTextureSRTKey*);
};

struct mDoExt_btkAnm {
	/* 8000D63C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTransform {
};

struct J3DModelData {
};

struct mDoExt_bckAnm {
	/* 8000D7DC */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
//  bool False
void init(J3DAnmTransform*, int, int, f32, s16, s16, bool);
	/* 8000D9CC */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
void entry(J3DModelData*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daMidna_c {
};

struct JPABaseEmitter {
};

struct daSCannonCrs_c {
	/* 80CC973C */ // True False
daSCannonCrs_c();
	/* 80CC983C */ // True False
~daSCannonCrs_c();
	/* 80CC9910 */ // True False
void create();
	/* 80CC9B10 */ // True False
void Delete();
	/* 80CC9B80 */ // True False
void draw();
	/* 80CC9C64 */ // True False
void execute();
	/* 80CC9CA4 */ // True False
//  daMidna_c* False
// 	 daMidna_c False
void middleExe(daMidna_c*);
	/* 80CC9D60 */ // True False
//  daMidna_c* False
// 	 daMidna_c False
void exeModeWait(daMidna_c*);
	/* 80CC9F34 */ // True False
//  daMidna_c* False
// 	 daMidna_c False
void exeModePreWait(daMidna_c*);
	/* 80CC9F80 */ // True False
//  daMidna_c* False
// 	 daMidna_c False
void exeModeOrderEvt(daMidna_c*);
	/* 80CCA240 */ // True False
//  daMidna_c* False
// 	 daMidna_c False
void exeModeTalkEvt(daMidna_c*);
	/* 80CCA2CC */ // True False
//  daMidna_c* False
// 	 daMidna_c False
void exeModeWarpEvt(daMidna_c*);
	/* 80CCA344 */ // True False
//  void False
//  daMidna_c* False
// 	 daMidna_c False
void exeModeEnd(daMidna_c*);
	/* 80CCA348 */ // True False
void demoExe();
	/* 80CCA74C */ // True False
void init();
	/* 80CCA848 */ // True False
void setModelMtx();
	/* 80CCA8CC */ // True False
void createHeap();
	/* 80CCAAC4 */ // True False
void chkInTalkRange();
	/* 80CCAB24 */ // True False
//  u16 False
//  int False
//  u16 const* False
// 	 u16 const False
// 		 u16 False
//  JPABaseEmitter** False
// 	 JPABaseEmitter* False
// 		 JPABaseEmitter False
void initEmtRt(u16, int, u16 const*, JPABaseEmitter**);
	/* 80CCAC48 */ // True False
//  u16 False
//  int False
//  JPABaseEmitter** False
// 	 JPABaseEmitter* False
// 		 JPABaseEmitter False
void exeEmtRt(u16, int, JPABaseEmitter**);
	/* 80CCACD0 */ // True False
void callMidnaBeamEmt();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
	/* 8006FB10 */ // False False
//  int False
//  int False
//  cXyz False
void StartQuake(int, int, cXyz);
	/* 8006FD94 */ // False False
//  int False
void StopQuake(int);
};

struct dSv_memBit_c {
	/* 80034810 */ // False False
//  int False
void onSwitch(int);
};

struct dSv_event_c {
	/* 8003498C */ // False False
//  u16 False
void onEventBit(u16);
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
	/* 80249F90 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void init(fopAc_ac_c*, int, int, fopAc_ac_c**);
	/* 8024A2D8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void doFlow(fopAc_ac_c*, fopAc_ac_c**, int);
	/* 8024A528 */ // False False
//  int* False
// 	 int False
void getEventId(int*);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 80042914 */ // False False
//  void* False
// 	 void False
//  int (*)(void*, int) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 int False
//  int False
void setSkipProc(void*, int (*)(void*, int), int);
	/* 8004365C */ // False False
//  void* False
// 	 void False
void setPt2(void*);
};

struct dEvent_manager_c {
	/* 80047758 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
void getEventIdx(fopAc_ac_c*, char const*, u8);
	/* 800479F8 */ // False False
//  s16 False
void startCheck(s16);
	/* 80047A78 */ // False False
//  s16 False
void endCheck(s16);
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800483E8 */ // False False
void getRunEventName();
};

struct dBgW_Base {
};

struct dBgW {
	/* 8007B970 */ // False False
dBgW();
};

struct dBgS {
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct dAttHint_c {
	/* 800738FC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void request(fopAc_ac_c*, int);
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgD_t {
};

struct cBgW {
	/* 80079F38 */ // False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void Set(cBgD_t*, u32, f32 (* )[3][4]);
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct JUTNameTab {
	/* 802DEAF8 */ // False False
//  u16 False
void getName(u16) const;
};

struct JGeometry {
	template <typename A1>
	struct TVec3 { };
	/* TVec3<f32> */
	struct TVec3__template0 {
	};

};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
	/* 80CC97F4 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daSCannonCrs_c_createHeap(fopAc_ac_c*);
// True False
//  void* False
// 	 void False
//  int False
static void eventCallBack(void*, int);
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
static void daSCannonCrs_create(daSCannonCrs_c*);
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
static void daSCannonCrs_Delete(daSCannonCrs_c*);
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
static void daSCannonCrs_execute(daSCannonCrs_c*);
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
static void daSCannonCrs_draw(daSCannonCrs_c*);

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daSCannonCrs_c_createHeap__FP10fopAc_ac_c();
// True False
//  void* False
// 	 void False
//  int False
extern "C" static void eventCallBack__FPvi();
// True False
extern "C" void __ct__14daSCannonCrs_cFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
extern "C" void __dt__14daSCannonCrs_cFv();
// True False
extern "C" void create__14daSCannonCrs_cFv();
// True False
extern "C" void Delete__14daSCannonCrs_cFv();
// True False
extern "C" void draw__14daSCannonCrs_cFv();
// True False
extern "C" void execute__14daSCannonCrs_cFv();
// True False
//  daMidna_c* False
// 	 daMidna_c False
extern "C" void middleExe__14daSCannonCrs_cFP9daMidna_c();
// True False
//  daMidna_c* False
// 	 daMidna_c False
extern "C" void exeModeWait__14daSCannonCrs_cFP9daMidna_c();
// True False
//  daMidna_c* False
// 	 daMidna_c False
extern "C" void exeModePreWait__14daSCannonCrs_cFP9daMidna_c();
// True False
//  daMidna_c* False
// 	 daMidna_c False
extern "C" void exeModeOrderEvt__14daSCannonCrs_cFP9daMidna_c();
// True False
//  daMidna_c* False
// 	 daMidna_c False
extern "C" void exeModeTalkEvt__14daSCannonCrs_cFP9daMidna_c();
// True False
//  daMidna_c* False
// 	 daMidna_c False
extern "C" void exeModeWarpEvt__14daSCannonCrs_cFP9daMidna_c();
// True False
//  void False
//  daMidna_c* False
// 	 daMidna_c False
extern "C" void exeModeEnd__14daSCannonCrs_cFP9daMidna_c();
// True False
extern "C" void demoExe__14daSCannonCrs_cFv();
// True False
extern "C" void init__14daSCannonCrs_cFv();
// True False
extern "C" void setModelMtx__14daSCannonCrs_cFv();
// True False
extern "C" void createHeap__14daSCannonCrs_cFv();
// True False
extern "C" void chkInTalkRange__14daSCannonCrs_cFv();
// True False
//  u16 False
//  int False
//  u16 const* False
// 	 u16 const False
// 		 u16 False
//  JPABaseEmitter** False
// 	 JPABaseEmitter* False
// 		 JPABaseEmitter False
extern "C" void initEmtRt__14daSCannonCrs_cFUsiPCUsPP14JPABaseEmitter();
// True False
//  u16 False
//  int False
//  JPABaseEmitter** False
// 	 JPABaseEmitter* False
// 		 JPABaseEmitter False
extern "C" void exeEmtRt__14daSCannonCrs_cFUsiPP14JPABaseEmitter();
// True False
extern "C" void callMidnaBeamEmt__14daSCannonCrs_cFv();
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
extern "C" static void daSCannonCrs_create__FP14daSCannonCrs_c();
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
extern "C" static void daSCannonCrs_Delete__FP14daSCannonCrs_c();
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
extern "C" static void daSCannonCrs_execute__FP14daSCannonCrs_c();
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
extern "C" static void daSCannonCrs_draw__FP14daSCannonCrs_c();
// False False
extern "C" void __sinit_d_a_obj_scannon_crs_cpp();
extern "C" extern u8 const BEAM_PARTICLE_NAME[8];
extern "C" extern u32 const lit_3822;
extern "C" extern u32 const lit_3823;
extern "C" extern u32 const lit_3824;
extern "C" extern u32 const lit_3825;
extern "C" extern u32 const lit_3949;
extern "C" extern u32 const lit_3950;
extern "C" extern u32 const lit_3951;
extern "C" extern u32 const lit_3953;
extern "C" extern u8 const lit_4034[8];
extern "C" extern u8 const lit_4035[8];
extern "C" extern u8 const lit_4036[8];
extern "C" extern u32 const lit_4037;
extern "C" extern u32 const lit_4189;
extern "C" extern u32 const lit_4190;
extern "C" extern u32 const lit_4191;
extern "C" extern u8 const data_80CCB0E0[12];
extern "C" extern u32 const lit_4205;
extern "C" extern u32 const lit_4206[1 + 1 /* padding */];
extern "C" extern u8 const lit_4208[8];
extern "C" extern u8 const data_80CCB100[12];
extern "C" extern u32 const lit_4434;
extern "C" extern u32 const lit_4435;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_3890[3];
extern "C" extern void* lit_3891[3];
extern "C" extern void* lit_3892[3];
extern "C" extern void* lit_3893[3];
extern "C" extern void* lit_3894[3];
extern "C" extern void* lit_3895[3];
extern "C" extern void* g_profile_Obj_SCannonCrs[12];
extern "C" extern void* __vt__14daSCannonCrs_c[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u8 False
void dComIfGp_TargetWarpPt_set(u8);
// False False
void dComIfGp_TransportWarp_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
//  bool False
extern "C" void init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
extern "C" void entry__13mDoExt_bckAnmFP12J3DModelDataf();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u8 False
extern "C" void dComIfGp_TargetWarpPt_set__FUc();
// False False
extern "C" void dComIfGp_TransportWarp_check__Fv();
// False False
//  int False
extern "C" void onSwitch__12dSv_memBit_cFi();
// False False
//  u16 False
extern "C" void onEventBit__11dSv_event_cFUs();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  void* False
// 	 void False
//  int (*)(void*, int) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 int False
//  int False
extern "C" void setSkipProc__14dEvt_control_cFPvPFPvi_ii();
// False False
//  void* False
// 	 void False
extern "C" void setPt2__14dEvt_control_cFPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
// False False
//  s16 False
extern "C" void startCheck__16dEvent_manager_cFs();
// False False
//  s16 False
extern "C" void endCheck__16dEvent_manager_cFs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void getRunEventName__16dEvent_manager_cFv();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartQuake__12dVibration_cFii4cXyz();
// False False
//  int False
extern "C" void StopQuake__12dVibration_cFi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void request__10dAttHint_cFP10fopAc_ac_ci();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
// False False
extern "C" void __ct__4dBgWFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
// False False
//  int* False
// 	 int False
extern "C" void getEventId__10dMsgFlow_cFPi();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_802807E0();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  u16 False
extern "C" void getName__10JUTNameTabCFUs();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
extern "C" void removeTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* 80CC9678-80CC9698 0020+00 s=1 e=0 z=0  None .text      daSCannonCrs_c_createHeap__FP10fopAc_ac_c                    */
//	80CC9684: 80CCA8CC (createHeap__14daSCannonCrs_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daSCannonCrs_c_createHeap(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/daSCannonCrs_c_createHeap__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80CC9698-80CC973C 00A4+00 s=1 e=0 z=0  None .text      eventCallBack__FPvi                                          */
//	80CC96B8: 804061C0 (g_dComIfG_gameInfo)
//	80CC96BC: 804061C0 (g_dComIfG_gameInfo)
//	80CC96E4: 8002FA98 (dComIfGp_TargetWarpPt_set__FUc)
//	80CC96E8: 8002FAE8 (dComIfGp_TransportWarp_check__Fv)
//	80CC96F4: 804061C0 (g_dComIfG_gameInfo)
//	80CC96F8: 804061C0 (g_dComIfG_gameInfo)
//	80CC9700: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80CC9704: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80CC970C: 8003498C (onEventBit__11dSv_event_cFUs)
//	80CC9710: 804061C0 (g_dComIfG_gameInfo)
//	80CC9714: 804061C0 (g_dComIfG_gameInfo)
//	80CC9720: 80034810 (onSwitch__12dSv_memBit_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  int False
asm static void eventCallBack(void* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/eventCallBack__FPvi.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CCB080-80CCB088 0008+00 s=6 e=0 z=0  None .rodata    DISAP_PARTICLE_NAME                                          */
SECTION_RODATA static u8 const DISAP_PARTICLE_NAME[8] = {
	0x8B, 0x2B, 0x8B, 0x2C, 0x8B, 0x2D, 0x8B, 0x2E,
};

/* 80CCB088-80CCB090 0008+00 s=0 e=0 z=0  None .rodata    BEAM_PARTICLE_NAME                                           */
SECTION_RODATA u8 const BEAM_PARTICLE_NAME[8] = {
	0x8B, 0x43, 0x8B, 0x44, 0x8B, 0x45, 0x8B, 0x46,
};

/* 80CCB090-80CCB094 0004+00 s=0 e=0 z=0  None .rodata    @3822                                                        */
SECTION_RODATA u32 const lit_3822 = 0xC3FA0000;

/* 80CCB094-80CCB098 0004+00 s=0 e=0 z=0  None .rodata    @3823                                                        */
SECTION_RODATA u32 const lit_3823 = 0xC2C80000;

/* 80CCB098-80CCB09C 0004+00 s=0 e=0 z=0  None .rodata    @3824                                                        */
SECTION_RODATA u32 const lit_3824 = 0x43FA0000;

/* 80CCB09C-80CCB0A0 0004+00 s=0 e=0 z=0  None .rodata    @3825                                                        */
SECTION_RODATA u32 const lit_3825 = 0x451C4000;

/* 80CCB0A0-80CCB0A4 0004+00 s=0 e=0 z=0  None .rodata    @3949                                                        */
SECTION_RODATA u32 const lit_3949 = 0x45947000;

/* 80CCB0A4-80CCB0A8 0004+00 s=0 e=0 z=0  None .rodata    @3950                                                        */
SECTION_RODATA u32 const lit_3950 = 0xC4BE0000;

/* 80CCB0A8-80CCB0AC 0004+00 s=0 e=0 z=0  None .rodata    @3951                                                        */
SECTION_RODATA u32 const lit_3951 = 0xC573C000;

/* 80CCB0AC-80CCB0B0 0004+00 s=1 e=0 z=0  None .rodata    @3952                                                        */
SECTION_RODATA static u32 const lit_3952 = 0x3F800000;

/* 80CCB0B0-80CCB0B4 0004+00 s=0 e=0 z=0  None .rodata    @3953                                                        */
SECTION_RODATA u32 const lit_3953 = 0xBF800000;

/* 80CCB0B4-80CCB0B8 0004+00 s=1 e=0 z=0  None .rodata    @4033                                                        */
SECTION_RODATA static u8 const lit_4033[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80CCB0B8-80CCB0C0 0008+00 s=0 e=0 z=0  None .rodata    @4034                                                        */
SECTION_RODATA u8 const lit_4034[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CCB0C0-80CCB0C8 0008+00 s=0 e=0 z=0  None .rodata    @4035                                                        */
SECTION_RODATA u8 const lit_4035[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CCB0C8-80CCB0D0 0008+00 s=0 e=0 z=0  None .rodata    @4036                                                        */
SECTION_RODATA u8 const lit_4036[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CCB0D0-80CCB0D4 0004+00 s=0 e=0 z=0  None .rodata    @4037                                                        */
SECTION_RODATA u32 const lit_4037 = 0x40A00000;

/* 80CCB0D4-80CCB0D8 0004+00 s=0 e=0 z=0  None .rodata    @4189                                                        */
SECTION_RODATA u32 const lit_4189 = 0x420C0000;

/* 80CCB0D8-80CCB0DC 0004+00 s=0 e=0 z=0  None .rodata    @4190                                                        */
SECTION_RODATA u32 const lit_4190 = 0x42B00000;

/* 80CCB0DC-80CCB0E0 0004+00 s=0 e=0 z=0  None .rodata    @4191                                                        */
SECTION_RODATA u32 const lit_4191 = 0x43700000;

/* 80CCB0E0-80CCB0EC 000C+00 s=0 e=0 z=0  None .rodata    MIDNA_WAIT_POS_OFFSET$4195                                   */
SECTION_RODATA u8 const data_80CCB0E0[12] = {
	0x42, 0xC8, 0x00, 0x00, 0x44, 0x61, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00,
};

/* 80CCB0EC-80CCB0F0 0004+00 s=0 e=0 z=0  None .rodata    @4205                                                        */
SECTION_RODATA u32 const lit_4205 = 0x43480000;

/* 80CCB0F0-80CCB0F8 0004+04 s=0 e=0 z=0  None .rodata    @4206                                                        */
SECTION_RODATA u32 const lit_4206[1 + 1 /* padding */] = {
	0x41200000,
	/* padding */
	0x00000000,
};

/* 80CCB0F8-80CCB100 0008+00 s=0 e=0 z=0  None .rodata    @4208                                                        */
SECTION_RODATA u8 const lit_4208[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80CCB100-80CCB10C 000C+00 s=0 e=0 z=0  None .rodata    MIDNA_BEAM_OFFSET$4360                                       */
SECTION_RODATA u8 const data_80CCB100[12] = {
	0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CCB10C-80CCB110 0004+00 s=0 e=0 z=0  None .rodata    @4434                                                        */
SECTION_RODATA u32 const lit_4434 = 0x43C80000;

/* 80CCB110-80CCB114 0004+00 s=0 e=0 z=0  None .rodata    @4435                                                        */
SECTION_RODATA u32 const lit_4435 = 0x3C23D70A;

/* 80CCB114-80CCB11C 0008+00 s=4 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80CCB114 = "SCanCrs";
#pragma pop

/* 80CCB11C-80CCB150 0034+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80CCB11C[52] = {
	/* 80CCB11C 0026 data_80CCB11C None */
	0x53, 0x4B, 0x59, 0x5F, 0x43, 0x41, 0x4E, 0x4E, 0x4F, 0x4E, 0x5F, 0x57, 0x41, 0x52, 0x50, 0x5F,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x00, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5F, 0x70, 0x00, 0x63,
	0x65, 0x6E, 0x74, 0x65, 0x72, 0x00,
	/* 80CCB142 0005 data_80CCB142 None */
	0x57, 0x41, 0x49, 0x54, 0x00,
	/* 80CCB147 0009 data_80CCB147 None */
	0x42, 0x45, 0x41, 0x4D, 0x5F, 0x48, 0x49, 0x54, 0x00,
};

/* 80CCB150-80CCB15C 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80CCB150[12] = {
	/* 80CCB150 0006 data_80CCB150 None */
	0x52, 0x45, 0x41, 0x44, 0x59, 0x00,
	/* 80CCB156 0006 data_80CCB156 None */
	0x55, 0x50, 0x00, 0x00, 0x00, 0x00,
};

/* 80CCB15C-80CCB168 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CCB168-80CCB17C 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80CCB17C-80CCB180 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80CCB180-80CCB184 0004+00 s=1 e=0 z=0  None .data      l_eventName                                                  */
SECTION_DATA static void* l_eventName = (void*)(((char*)&struct_80CCB11C)+0x0) /* None */;

/* 80CCB184-80CCB188 0004+00 s=2 e=0 z=0  None .data      l_staffName                                                  */
SECTION_DATA static void* l_staffName = (void*)&stringBase0;

/* 80CCB188-80CCB194 000C+00 s=0 e=0 z=0  None .data      @3890                                                        */
SECTION_DATA void* lit_3890[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)exeModeWait__14daSCannonCrs_cFP9daMidna_c,
};

/* 80CCB194-80CCB1A0 000C+00 s=0 e=0 z=0  None .data      @3891                                                        */
SECTION_DATA void* lit_3891[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)exeModePreWait__14daSCannonCrs_cFP9daMidna_c,
};

/* 80CCB1A0-80CCB1AC 000C+00 s=0 e=0 z=0  None .data      @3892                                                        */
SECTION_DATA void* lit_3892[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)exeModeOrderEvt__14daSCannonCrs_cFP9daMidna_c,
};

/* 80CCB1AC-80CCB1B8 000C+00 s=0 e=0 z=0  None .data      @3893                                                        */
SECTION_DATA void* lit_3893[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)exeModeTalkEvt__14daSCannonCrs_cFP9daMidna_c,
};

/* 80CCB1B8-80CCB1C4 000C+00 s=0 e=0 z=0  None .data      @3894                                                        */
SECTION_DATA void* lit_3894[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)exeModeWarpEvt__14daSCannonCrs_cFP9daMidna_c,
};

/* 80CCB1C4-80CCB1D0 000C+00 s=0 e=0 z=0  None .data      @3895                                                        */
SECTION_DATA void* lit_3895[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)exeModeEnd__14daSCannonCrs_cFP9daMidna_c,
};

/* 80CCB1D0-80CCB218 0048+00 s=1 e=0 z=0  None .data      s_exeProc__14daSCannonCrs_c                                  */
SECTION_DATA static u8 s_exeProc__14daSCannonCrs_c[72] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CCB218-80CCB228 0010+00 s=1 e=0 z=0  None .data      CUT_TYPE_TABLE$4066                                          */
SECTION_DATA static void* CUT_TYPE_TABLE[4] = {
	(void*)(((char*)&struct_80CCB11C)+0x26) /* None */,
	(void*)(((char*)&struct_80CCB11C)+0x2B) /* None */,
	(void*)(((char*)&struct_80CCB150)+0x0) /* None */,
	(void*)(((char*)&struct_80CCB150)+0x6) /* None */,
};

/* 80CCB228-80CCB248 0020+00 s=1 e=0 z=0  None .data      daSCannonCrs_METHODS                                         */
SECTION_DATA static void* daSCannonCrs_METHODS[8] = {
	(void*)daSCannonCrs_create__FP14daSCannonCrs_c,
	(void*)daSCannonCrs_Delete__FP14daSCannonCrs_c,
	(void*)daSCannonCrs_execute__FP14daSCannonCrs_c,
	(void*)NULL,
	(void*)daSCannonCrs_draw__FP14daSCannonCrs_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80CCB248-80CCB278 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_SCannonCrs                                     */
SECTION_DATA void* g_profile_Obj_SCannonCrs[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x018E0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000674,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02E00000,
	(void*)&daSCannonCrs_METHODS,
	(void*)0x00044180,
	(void*)0x030E0000,
};

/* 80CCB278-80CCB284 000C+00 s=2 e=0 z=0  None .data      __vt__14daSCannonCrs_c                                       */
SECTION_DATA void* __vt__14daSCannonCrs_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14daSCannonCrs_cFv,
};

/* 80CCB284-80CCB290 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80CC973C-80CC97F4 00B8+00 s=2 e=0 z=0  None .text      __ct__14daSCannonCrs_cFv                                     */
//	80CC9754: 80018B64 (__ct__10fopAc_ac_cFv)
//	80CC9758: 80CCB278 (__vt__14daSCannonCrs_c)
//	80CC975C: 80CCB278 (__vt__14daSCannonCrs_c)
//	80CC9768: 80249F00 (__ct__10dMsgFlow_cFv)
//	80CC9770: 80CCB284 (__vt__12J3DFrameCtrl)
//	80CC9774: 80CCB284 (__vt__12J3DFrameCtrl)
//	80CC9784: 803283FC (init__12J3DFrameCtrlFs)
//	80CC9794: 80CCB284 (__vt__12J3DFrameCtrl)
//	80CC9798: 80CCB284 (__vt__12J3DFrameCtrl)
//	80CC97A8: 803283FC (init__12J3DFrameCtrlFs)
//	80CC97C4: 80003458 (memset)
//	80CC97D4: 80003458 (memset)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daSCannonCrs_c::daSCannonCrs_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/__ct__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CC97F4-80CC983C 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80CC980C: 80CCB284 (__vt__12J3DFrameCtrl)
//	80CC9810: 80CCB284 (__vt__12J3DFrameCtrl)
//	80CC9820: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80CC983C-80CC9910 00D4+00 s=1 e=0 z=0  None .text      __dt__14daSCannonCrs_cFv                                     */
//	80CC985C: 80CCB278 (__vt__14daSCannonCrs_c)
//	80CC9860: 80CCB278 (__vt__14daSCannonCrs_c)
//	80CC9874: 80CCB17C (l_arcName)
//	80CC9878: 80CCB17C (l_arcName)
//	80CC9880: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80CC989C: 80CCB284 (__vt__12J3DFrameCtrl)
//	80CC98A0: 80CCB284 (__vt__12J3DFrameCtrl)
//	80CC98C0: 80CCB284 (__vt__12J3DFrameCtrl)
//	80CC98C4: 80CCB284 (__vt__12J3DFrameCtrl)
//	80CC98D4: 80249F48 (__dt__10dMsgFlow_cFv)
//	80CC98E0: 80018C8C (__dt__10fopAc_ac_cFv)
//	80CC98F0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daSCannonCrs_c::~daSCannonCrs_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/__dt__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CC9910-80CC9B10 0200+00 s=1 e=0 z=0  None .text      create__14daSCannonCrs_cFv                                   */
//	80CC9920: 803621D4 (_savegpr_27)
//	80CC9928: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CC992C: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CC9944: 80CC973C (__ct__14daSCannonCrs_cFv)
//	80CC9954: 804061C0 (g_dComIfG_gameInfo)
//	80CC9958: 804061C0 (g_dComIfG_gameInfo)
//	80CC9960: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80CC9964: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80CC996C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80CC9990: 80CCB17C (l_arcName)
//	80CC9994: 80CCB17C (l_arcName)
//	80CC999C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80CC99B0: 80CC9678 (daSCannonCrs_c_createHeap__FP10fopAc_ac_c)
//	80CC99B4: 80CC9678 (daSCannonCrs_c_createHeap__FP10fopAc_ac_c)
//	80CC99C0: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80CC99D4: 804061C0 (g_dComIfG_gameInfo)
//	80CC99D8: 804061C0 (g_dComIfG_gameInfo)
//	80CC99EC: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80CC9A04: 80CCA74C (init__14daSCannonCrs_cFv)
//	80CC9A0C: 80CCA848 (setModelMtx__14daSCannonCrs_cFv)
//	80CC9A38: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80CC9A48: 80CCB17C (l_arcName)
//	80CC9A4C: 80CCB17C (l_arcName)
//	80CC9A5C: 80CCB180 (l_eventName)
//	80CC9A60: 80CCB180 (l_eventName)
//	80CC9A6C: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	80CC9A84: 80CCB114 (stringBase0)
//	80CC9A88: 80CCB114 (stringBase0)
//	80CC9A98: 802DEAF8 (getName__10JUTNameTabCFUs)
//	80CC9AA0: 80368994 (strcmp)
//	80CC9ABC: 802DEAF8 (getName__10JUTNameTabCFUs)
//	80CC9AC0: 80CCB114 (stringBase0)
//	80CC9AC4: 80CCB114 (stringBase0)
//	80CC9ACC: 80368994 (strcmp)
//	80CC9AFC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daSCannonCrs_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/create__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CC9B10-80CC9B80 0070+00 s=1 e=0 z=0  None .text      Delete__14daSCannonCrs_cFv                                   */
//	80CC9B30: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80CC9B3C: 804061C0 (g_dComIfG_gameInfo)
//	80CC9B40: 804061C0 (g_dComIfG_gameInfo)
//	80CC9B4C: 80074250 (Release__4cBgSFP9dBgW_Base)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daSCannonCrs_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/Delete__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CC9B80-80CC9C64 00E4+00 s=1 e=0 z=0  None .text      draw__14daSCannonCrs_cFv                                     */
//	80CC9B98: 8042CA54 (g_env_light)
//	80CC9B9C: 8042CA54 (g_env_light)
//	80CC9BAC: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80CC9BB0: 8042CA54 (g_env_light)
//	80CC9BB4: 8042CA54 (g_env_light)
//	80CC9BC4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80CC9BC8: 804061C0 (g_dComIfG_gameInfo)
//	80CC9BCC: 804061C0 (g_dComIfG_gameInfo)
//	80CC9BD4: 80434AC8 (j3dSys)
//	80CC9BD8: 80434AC8 (j3dSys)
//	80CC9BF8: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	80CC9C10: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80CC9C18: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80CC9C2C: 8032F7B4 (removeTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey)
//	80CC9C30: 804061C0 (g_dComIfG_gameInfo)
//	80CC9C34: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daSCannonCrs_c::draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/draw__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CC9C64-80CC9CA4 0040+00 s=1 e=0 z=0  None .text      execute__14daSCannonCrs_cFv                                  */
//	80CC9C70: 80451018 (m_midnaActor__9daPy_py_c)
//	80CC9C74: 80451018 (m_midnaActor__9daPy_py_c)
//	80CC9C8C: 80CC9CA4 (middleExe__14daSCannonCrs_cFP9daMidna_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daSCannonCrs_c::execute() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/execute__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CC9CA4-80CC9D60 00BC+00 s=1 e=0 z=0  None .text      middleExe__14daSCannonCrs_cFP9daMidna_c                      */
//	80CC9CDC: 80CCB1D0 (s_exeProc__14daSCannonCrs_c)
//	80CC9CE0: 80CCB1D0 (s_exeProc__14daSCannonCrs_c)
//	80CC9CE8: 80362018 (__ptmf_test)
//	80CC9D04: 80CCB1D0 (s_exeProc__14daSCannonCrs_c)
//	80CC9D08: 80CCB1D0 (s_exeProc__14daSCannonCrs_c)
//	80CC9D10: 80362084 (__ptmf_scall)
//	80CC9D34: 80CCA848 (setModelMtx__14daSCannonCrs_cFv)
//	80CC9D3C: 8000D428 (play__14mDoExt_baseAnmFv)
//	80CC9D44: 8000D428 (play__14mDoExt_baseAnmFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daMidna_c* False
// 	 daMidna_c False
asm void daSCannonCrs_c::middleExe(daMidna_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/middleExe__14daSCannonCrs_cFP9daMidna_c.s"
}
#pragma pop


/* 80CC9D60-80CC9F34 01D4+00 s=1 e=0 z=0  None .text      exeModeWait__14daSCannonCrs_cFP9daMidna_c                    */
//	80CC9D70: 803621D4 (_savegpr_27)
//	80CC9D7C: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CC9D80: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CC9D84: 804061C0 (g_dComIfG_gameInfo)
//	80CC9D88: 804061C0 (g_dComIfG_gameInfo)
//	80CC9D98: 800479F8 (startCheck__16dEvent_manager_cFs)
//	80CC9DA8: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	80CC9DAC: 80CCB114 (stringBase0)
//	80CC9DB0: 80CCB114 (stringBase0)
//	80CC9DB8: 80368994 (strcmp)
//	80CC9DCC: 8004365C (setPt2__14dEvt_control_cFPv)
//	80CC9DD0: 804061C0 (g_dComIfG_gameInfo)
//	80CC9DD4: 804061C0 (g_dComIfG_gameInfo)
//	80CC9E1C: 80CCB184 (l_staffName)
//	80CC9E20: 80CCB184 (l_staffName)
//	80CC9E30: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80CC9E48: 80CCAAC4 (chkInTalkRange__14daSCannonCrs_cFv)
//	80CC9E54: 804061C0 (g_dComIfG_gameInfo)
//	80CC9E58: 804061C0 (g_dComIfG_gameInfo)
//	80CC9EA8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC9EAC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC9ED8: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CC9EEC: 8002FA98 (dComIfGp_TargetWarpPt_set__FUc)
//	80CC9F20: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daMidna_c* False
// 	 daMidna_c False
asm void daSCannonCrs_c::exeModeWait(daMidna_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/exeModeWait__14daSCannonCrs_cFP9daMidna_c.s"
}
#pragma pop


/* 80CC9F34-80CC9F80 004C+00 s=1 e=0 z=0  None .text      exeModePreWait__14daSCannonCrs_cFP9daMidna_c                 */
//	80CC9F54: 804061C0 (g_dComIfG_gameInfo)
//	80CC9F58: 804061C0 (g_dComIfG_gameInfo)
//	80CC9F60: 80042468 (reset__14dEvt_control_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daMidna_c* False
// 	 daMidna_c False
asm void daSCannonCrs_c::exeModePreWait(daMidna_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/exeModePreWait__14daSCannonCrs_cFP9daMidna_c.s"
}
#pragma pop


/* 80CC9F80-80CCA240 02C0+00 s=1 e=0 z=0  None .text      exeModeOrderEvt__14daSCannonCrs_cFP9daMidna_c                */
//	80CC9F90: 803621D8 (_savegpr_28)
//	80CC9F98: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CC9F9C: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CC9FDC: 8034739C (PSVECSquareDistance)
//	80CCA04C: 80450AE0 (__float_nan)
//	80CCA050: 80450AE0 (__float_nan)
//	80CCA0BC: 80450AE0 (__float_nan)
//	80CCA0C0: 80450AE0 (__float_nan)
//	80CCA0F0: 80249F90 (init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c)
//	80CCA0FC: 8002FA98 (dComIfGp_TargetWarpPt_set__FUc)
//	80CCA104: 804061C0 (g_dComIfG_gameInfo)
//	80CCA108: 804061C0 (g_dComIfG_gameInfo)
//	80CCA118: 800479F8 (startCheck__16dEvent_manager_cFs)
//	80CCA12C: 8004365C (setPt2__14dEvt_control_cFPv)
//	80CCA130: 804061C0 (g_dComIfG_gameInfo)
//	80CCA134: 804061C0 (g_dComIfG_gameInfo)
//	80CCA17C: 80CCB184 (l_staffName)
//	80CCA180: 80CCB184 (l_staffName)
//	80CCA190: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80CCA1B0: 804061C0 (g_dComIfG_gameInfo)
//	80CCA1B4: 804061C0 (g_dComIfG_gameInfo)
//	80CCA200: 800738FC (request__10dAttHint_cFP10fopAc_ac_ci)
//	80CCA208: 80CCAAC4 (chkInTalkRange__14daSCannonCrs_cFv)
//	80CCA22C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daMidna_c* False
// 	 daMidna_c False
asm void daSCannonCrs_c::exeModeOrderEvt(daMidna_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/exeModeOrderEvt__14daSCannonCrs_cFP9daMidna_c.s"
}
#pragma pop


/* 80CCA240-80CCA2CC 008C+00 s=1 e=0 z=0  None .text      exeModeTalkEvt__14daSCannonCrs_cFP9daMidna_c                 */
//	80CCA264: 8024A2D8 (doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci)
//	80CCA280: 804061C0 (g_dComIfG_gameInfo)
//	80CCA284: 804061C0 (g_dComIfG_gameInfo)
//	80CCA28C: 80042468 (reset__14dEvt_control_cFv)
//	80CCA298: 8024A528 (getEventId__10dMsgFlow_cFPi)
//	80CCA2AC: 80430188 (g_meter2_info)
//	80CCA2B0: 80430188 (g_meter2_info)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daMidna_c* False
// 	 daMidna_c False
asm void daSCannonCrs_c::exeModeTalkEvt(daMidna_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/exeModeTalkEvt__14daSCannonCrs_cFP9daMidna_c.s"
}
#pragma pop


/* 80CCA2CC-80CCA344 0078+00 s=1 e=0 z=0  None .text      exeModeWarpEvt__14daSCannonCrs_cFP9daMidna_c                 */
//	80CCA2E4: 804061C0 (g_dComIfG_gameInfo)
//	80CCA2E8: 804061C0 (g_dComIfG_gameInfo)
//	80CCA2F4: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80CCA314: 80CC9698 (eventCallBack__FPvi)
//	80CCA318: 80CC9698 (eventCallBack__FPvi)
//	80CCA320: 80042914 (setSkipProc__14dEvt_control_cFPvPFPvi_ii)
//	80CCA328: 80CCA348 (demoExe__14daSCannonCrs_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daMidna_c* False
// 	 daMidna_c False
asm void daSCannonCrs_c::exeModeWarpEvt(daMidna_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/exeModeWarpEvt__14daSCannonCrs_cFP9daMidna_c.s"
}
#pragma pop


/* 80CCA344-80CCA348 0004+00 s=1 e=0 z=0  None .text      exeModeEnd__14daSCannonCrs_cFP9daMidna_c                     */
// True False
//  void False
//  daMidna_c* False
// 	 daMidna_c False
void daSCannonCrs_c::exeModeEnd(daMidna_c* param_0) {
	/* empty function */
}


/* 80CCA348-80CCA74C 0404+00 s=1 e=0 z=0  None .text      demoExe__14daSCannonCrs_cFv                                  */
//	80CCA358: 803621D0 (_savegpr_26)
//	80CCA360: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CCA364: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CCA368: 804061C0 (g_dComIfG_gameInfo)
//	80CCA36C: 804061C0 (g_dComIfG_gameInfo)
//	80CCA37C: 80CCB218 (CUT_TYPE_TABLE)
//	80CCA380: 80CCB218 (CUT_TYPE_TABLE)
//	80CCA390: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80CCA3A8: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80CCA400: 8002D06C (dComIfGp_getReverb__Fi)
//	80CCA414: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CCA418: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CCA444: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CCA450: 8002D06C (dComIfGp_getReverb__Fi)
//	80CCA464: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CCA468: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CCA490: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CCA498: 80CCACD0 (callMidnaBeamEmt__14daSCannonCrs_cFv)
//	80CCA4B0: 80CCAB24 (initEmtRt__14daSCannonCrs_cFUsiPCUsPP14JPABaseEmitter)
//	80CCA4E4: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	80CCA524: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80CCA54C: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	80CCA558: 8002FA98 (dComIfGp_TargetWarpPt_set__FUc)
//	80CCA55C: 8002FAE8 (dComIfGp_TransportWarp_check__Fv)
//	80CCA568: 804061C0 (g_dComIfG_gameInfo)
//	80CCA56C: 804061C0 (g_dComIfG_gameInfo)
//	80CCA574: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80CCA578: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80CCA580: 8003498C (onEventBit__11dSv_event_cFUs)
//	80CCA584: 804061C0 (g_dComIfG_gameInfo)
//	80CCA588: 804061C0 (g_dComIfG_gameInfo)
//	80CCA594: 80034810 (onSwitch__12dSv_memBit_cFi)
//	80CCA5C8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80CCA5D8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80CCA5EC: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80CCA600: 80CCAC48 (exeEmtRt__14daSCannonCrs_cFUsiPP14JPABaseEmitter)
//	80CCA610: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80CCA624: 8006FD94 (StopQuake__12dVibration_cFi)
//	80CCA630: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80CCA658: 8006FD94 (StopQuake__12dVibration_cFi)
//	80CCA664: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80CCA684: 80CCAB24 (initEmtRt__14daSCannonCrs_cFUsiPCUsPP14JPABaseEmitter)
//	80CCA690: 8002D06C (dComIfGp_getReverb__Fi)
//	80CCA6A4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CCA6A8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CCA6D0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CCA6F8: 80CCAC48 (exeEmtRt__14daSCannonCrs_cFUsiPP14JPABaseEmitter)
//	80CCA730: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80CCA738: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daSCannonCrs_c::demoExe() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/demoExe__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CCA74C-80CCA848 00FC+00 s=1 e=0 z=0  None .text      init__14daSCannonCrs_cFv                                     */
//	80CCA764: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CCA768: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CCA78C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80CCA794: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80CCA798: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA79C: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA7A8: 80346D6C (PSMTXMultVec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daSCannonCrs_c::init() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/init__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CCA848-80CCA8CC 0084+00 s=2 e=0 z=0  None .text      setModelMtx__14daSCannonCrs_cFv                              */
//	80CCA85C: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA860: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA870: 803468E8 (PSMTXTrans)
//	80CCA874: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA878: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA880: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80CCA884: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA888: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA890: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80CCA894: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA898: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA8A0: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80CCA8A4: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA8A8: 803DD470 (now__14mDoMtx_stack_c)
//	80CCA8B4: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daSCannonCrs_c::setModelMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/setModelMtx__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CCA8CC-80CCAAC4 01F8+00 s=1 e=0 z=0  None .text      createHeap__14daSCannonCrs_cFv                               */
//	80CCA8DC: 803621DC (_savegpr_29)
//	80CCA8E4: 80CCB17C (l_arcName)
//	80CCA8E8: 80CCB17C (l_arcName)
//	80CCA8F4: 804061C0 (g_dComIfG_gameInfo)
//	80CCA8F8: 804061C0 (g_dComIfG_gameInfo)
//	80CCA90C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CCA920: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80CCA93C: 80CCB17C (l_arcName)
//	80CCA940: 80CCB17C (l_arcName)
//	80CCA954: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CCA968: 80CCB0B4 (lit_4033)
//	80CCA96C: 80CCB0B4 (lit_4033)
//	80CCA97C: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	80CCA990: 80CCB17C (l_arcName)
//	80CCA994: 80CCB17C (l_arcName)
//	80CCA9A8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CCA9C0: 80CCB0B4 (lit_4033)
//	80CCA9C4: 80CCB0B4 (lit_4033)
//	80CCA9D0: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80CCA9E8: 802CEC4C (__nw__FUl)
//	80CCA9F4: 8007B970 (__ct__4dBgWFv)
//	80CCAA14: 803DD470 (now__14mDoMtx_stack_c)
//	80CCAA18: 803DD470 (now__14mDoMtx_stack_c)
//	80CCAA28: 803468E8 (PSMTXTrans)
//	80CCAA2C: 803DD470 (now__14mDoMtx_stack_c)
//	80CCAA30: 803DD470 (now__14mDoMtx_stack_c)
//	80CCAA38: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80CCAA3C: 803DD470 (now__14mDoMtx_stack_c)
//	80CCAA40: 803DD470 (now__14mDoMtx_stack_c)
//	80CCAA48: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80CCAA4C: 803DD470 (now__14mDoMtx_stack_c)
//	80CCAA50: 803DD470 (now__14mDoMtx_stack_c)
//	80CCAA58: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80CCAA5C: 803DD470 (now__14mDoMtx_stack_c)
//	80CCAA60: 803DD470 (now__14mDoMtx_stack_c)
//	80CCAA68: 803464B0 (PSMTXCopy)
//	80CCAA6C: 80CCB17C (l_arcName)
//	80CCAA70: 80CCB17C (l_arcName)
//	80CCAA84: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CCAA98: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
//	80CCAAB0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daSCannonCrs_c::createHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/createHeap__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CCAAC4-80CCAB24 0060+00 s=2 e=0 z=0  None .text      chkInTalkRange__14daSCannonCrs_cFv                           */
//	80CCAAD8: 804061C0 (g_dComIfG_gameInfo)
//	80CCAADC: 804061C0 (g_dComIfG_gameInfo)
//	80CCAAFC: 8034739C (PSVECSquareDistance)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daSCannonCrs_c::chkInTalkRange() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/chkInTalkRange__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CCAB24-80CCAC48 0124+00 s=1 e=0 z=0  None .text      initEmtRt__14daSCannonCrs_cFUsiPCUsPP14JPABaseEmitter        */
//	80CCAB34: 803621C4 (_savegpr_23)
//	80CCAB88: 80CCB0AC (lit_3952)
//	80CCAB8C: 80CCB0AC (lit_3952)
//	80CCABAC: 804061C0 (g_dComIfG_gameInfo)
//	80CCABB0: 804061C0 (g_dComIfG_gameInfo)
//	80CCABF8: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80CCAC18: 802807E0 (func_802807E0)
//	80CCAC34: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
//  int False
//  u16 const* False
// 	 u16 const False
// 		 u16 False
//  JPABaseEmitter** False
// 	 JPABaseEmitter* False
// 		 JPABaseEmitter False
asm void daSCannonCrs_c::initEmtRt(u16 param_0, int param_1, u16 const* param_2, JPABaseEmitter** param_3) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/initEmtRt__14daSCannonCrs_cFUsiPCUsPP14JPABaseEmitter.s"
}
#pragma pop


/* 80CCAC48-80CCACD0 0088+00 s=1 e=0 z=0  None .text      exeEmtRt__14daSCannonCrs_cFUsiPP14JPABaseEmitter             */
//	80CCAC58: 803621D4 (_savegpr_27)
//	80CCACA4: 802807E0 (func_802807E0)
//	80CCACBC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
//  int False
//  JPABaseEmitter** False
// 	 JPABaseEmitter* False
// 		 JPABaseEmitter False
asm void daSCannonCrs_c::exeEmtRt(u16 param_0, int param_1, JPABaseEmitter** param_2) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/exeEmtRt__14daSCannonCrs_cFUsiPP14JPABaseEmitter.s"
}
#pragma pop


/* 80CCACD0-80CCAF20 0250+00 s=1 e=0 z=0  None .text      callMidnaBeamEmt__14daSCannonCrs_cFv                         */
//	80CCACE8: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CCACEC: 80CCB080 (DISAP_PARTICLE_NAME)
//	80CCACF0: 80451018 (m_midnaActor__9daPy_py_c)
//	80CCACF4: 80451018 (m_midnaActor__9daPy_py_c)
//	80CCAD1C: 80346D6C (PSMTXMultVec)
//	80CCAD4C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80CCAD68: 80267674 (cM_atan2s__Fff)
//	80CCAD9C: 80267674 (cM_atan2s__Fff)
//	80CCADC0: 804061C0 (g_dComIfG_gameInfo)
//	80CCADC4: 804061C0 (g_dComIfG_gameInfo)
//	80CCAE04: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80CCAE14: 80347138 (PSVECSquareMag)
//	80CCAE84: 80450AE0 (__float_nan)
//	80CCAE88: 80450AE0 (__float_nan)
//	80CCAEF4: 80450AE0 (__float_nan)
//	80CCAEF8: 80450AE0 (__float_nan)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daSCannonCrs_c::callMidnaBeamEmt() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/callMidnaBeamEmt__14daSCannonCrs_cFv.s"
}
#pragma pop


/* 80CCAF20-80CCAF74 0054+00 s=1 e=0 z=0  None .text      daSCannonCrs_create__FP14daSCannonCrs_c                      */
//	80CCAF48: 80CC973C (__ct__14daSCannonCrs_cFv)
//	80CCAF5C: 80CC9910 (create__14daSCannonCrs_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
asm static void daSCannonCrs_create(daSCannonCrs_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/daSCannonCrs_create__FP14daSCannonCrs_c.s"
}
#pragma pop


/* 80CCAF74-80CCAF94 0020+00 s=1 e=0 z=0  None .text      daSCannonCrs_Delete__FP14daSCannonCrs_c                      */
//	80CCAF80: 80CC9B10 (Delete__14daSCannonCrs_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
asm static void daSCannonCrs_Delete(daSCannonCrs_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/daSCannonCrs_Delete__FP14daSCannonCrs_c.s"
}
#pragma pop


/* 80CCAF94-80CCAFB4 0020+00 s=1 e=0 z=0  None .text      daSCannonCrs_execute__FP14daSCannonCrs_c                     */
//	80CCAFA0: 80CC9C64 (execute__14daSCannonCrs_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
asm static void daSCannonCrs_execute(daSCannonCrs_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/daSCannonCrs_execute__FP14daSCannonCrs_c.s"
}
#pragma pop


/* 80CCAFB4-80CCAFD4 0020+00 s=1 e=0 z=0  None .text      daSCannonCrs_draw__FP14daSCannonCrs_c                        */
//	80CCAFC0: 80CC9B80 (draw__14daSCannonCrs_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daSCannonCrs_c* False
// 	 daSCannonCrs_c False
asm static void daSCannonCrs_draw(daSCannonCrs_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/daSCannonCrs_draw__FP14daSCannonCrs_c.s"
}
#pragma pop


/* 80CCAFD4-80CCB074 00A0+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_scannon_crs_cpp                              */
//	80CCAFD4: 80CCB15C (cNullVec__6Z2Calc)
//	80CCAFD8: 80CCB15C (cNullVec__6Z2Calc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_scannon_crs_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_scannon_crs/d_a_obj_scannon_crs/__sinit_d_a_obj_scannon_crs_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80CCAFD4 = (void*)__sinit_d_a_obj_scannon_crs_cpp;
#pragma pop


