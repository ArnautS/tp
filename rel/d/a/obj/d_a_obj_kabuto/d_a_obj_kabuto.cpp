// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_kabuto
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CE70 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void scaleM(cXyz const&);
	/* 8000CF0C */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotS(csXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct J3DAnmTextureSRTKey {
};

struct J3DMaterialTable {
};

struct mDoExt_btkAnm {
	/* 8000D63C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTevRegKey {
};

struct mDoExt_brkAnm {
	/* 8000D70C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
};

struct daPy_boomerangMove_c {
	/* 8015E5B0 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void initOffset(cXyz const*);
	/* 8015E654 */ // False False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
void posMove(cXyz*, s16*, fopAc_ac_c*, s16);
	/* 8015E87C */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void bgCheckAfterOffset(cXyz const*);
};

struct daObj_KabHIO_c {
	/* 80C2AE6C */ // True False
daObj_KabHIO_c();
	/* 80C2E068 */ // True False
~daObj_KabHIO_c();
};

struct daObjKABUTO_c {
	/* 80C2AEA4 */ // True False
void InitCcSph();
	/* 80C2AF10 */ // True False
void SetCcSph();
	/* 80C2AF88 */ // True False
void CreateHeap();
	/* 80C2B36C */ // True False
void ShopWaitAction();
	/* 80C2B4D4 */ // True False
void WaitAction();
	/* 80C2B618 */ // True False
void WallCheck();
	/* 80C2B88C */ // True False
void SpeedSet();
	/* 80C2B998 */ // True False
void WallWalk();
	/* 80C2BDE8 */ // True False
void WalkAction();
	/* 80C2BFE8 */ // True False
void MoveAction();
	/* 80C2C7C8 */ // True False
void Z_BufferChk();
	/* 80C2C944 */ // True False
void Action();
	/* 80C2CA08 */ // True False
void ShopAction();
	/* 80C2CAC4 */ // True False
void Insect_Release();
	/* 80C2CADC */ // True False
void ParticleSet();
	/* 80C2CC18 */ // True False
void Execute();
	/* 80C2D21C */ // True False
void ObjHit();
	/* 80C2D3A4 */ // True False
void Delete();
	/* 80C2D40C */ // True False
void setBaseMtx();
	/* 80C2D578 */ // True False
void CreateChk();
	/* 80C2D724 */ // True False
void create();
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dMenu_Insect_c {
	/* 801D9F3C */ // False False
//  u8 False
void isCatchNotGiveInsect(u8);
};

struct dInsect_c {
	/* 8015E010 */ // False False
dInsect_c();
	/* 8015E078 */ // False False
void Insect_GetDemoMain();
};

struct dDlst_peekZ_c {
	/* 80056018 */ // False False
//  s16 False
//  s16 False
//  u32* False
// 	 u32 False
void newData(s16, s16, u32*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084548 */ // False False
void GetTgHitGObj();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80C2DF60 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80C2DFD0 */ // True False
~cM3dGSph();
};

struct cM3dGPla {
	/* 80C2B844 */ // True False
~cM3dGPla();
};

struct cM3dGAab {
	/* 80C2E018 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cBgS_PolyInfo {
};

struct cBgS_LinChk {
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct _GXTexObj {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80C2B2E0 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjKABUTO_Create(fopAc_ac_c*);
// True False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
static void daObjKABUTO_Delete(daObjKABUTO_c*);
// True False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
static void daObjKABUTO_Draw(daObjKABUTO_c*);
// True False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
static void daObjKABUTO_Execute(daObjKABUTO_c*);
// True False
//  bool False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
static bool daObjKABUTO_IsDelete(daObjKABUTO_c*);

// True False
extern "C" void __ct__14daObj_KabHIO_cFv();
// True False
extern "C" void InitCcSph__13daObjKABUTO_cFv();
// True False
extern "C" void SetCcSph__13daObjKABUTO_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void CreateHeap__13daObjKABUTO_cFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjKABUTO_Create__FP10fopAc_ac_c();
// True False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
extern "C" static void daObjKABUTO_Delete__FP13daObjKABUTO_c();
// True False
extern "C" void ShopWaitAction__13daObjKABUTO_cFv();
// True False
extern "C" void WaitAction__13daObjKABUTO_cFv();
// True False
extern "C" void WallCheck__13daObjKABUTO_cFv();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
extern "C" void SpeedSet__13daObjKABUTO_cFv();
// True False
extern "C" void WallWalk__13daObjKABUTO_cFv();
// True False
extern "C" void WalkAction__13daObjKABUTO_cFv();
// True False
extern "C" void MoveAction__13daObjKABUTO_cFv();
// True False
extern "C" void Z_BufferChk__13daObjKABUTO_cFv();
// True False
extern "C" void Action__13daObjKABUTO_cFv();
// True False
extern "C" void ShopAction__13daObjKABUTO_cFv();
// True False
extern "C" void Insect_Release__13daObjKABUTO_cFv();
// True False
extern "C" void ParticleSet__13daObjKABUTO_cFv();
// True False
extern "C" void Execute__13daObjKABUTO_cFv();
// True False
extern "C" void ObjHit__13daObjKABUTO_cFv();
// True False
extern "C" void Delete__13daObjKABUTO_cFv();
// True False
extern "C" void setBaseMtx__13daObjKABUTO_cFv();
// True False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
extern "C" static void daObjKABUTO_Draw__FP13daObjKABUTO_c();
// True False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
extern "C" static void daObjKABUTO_Execute__FP13daObjKABUTO_c();
// True False
extern "C" void CreateChk__13daObjKABUTO_cFv();
// True False
extern "C" void create__13daObjKABUTO_cFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
//  bool False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
extern "C" static bool daObjKABUTO_IsDelete__FP13daObjKABUTO_c();
// True False
extern "C" void __dt__14daObj_KabHIO_cFv();
// False False
extern "C" void __sinit_d_a_obj_kabuto_cpp();
// True False
extern "C" static void func_80C2E0EC();
// True False
extern "C" static void func_80C2E0F4();
extern "C" extern u32 const lit_3776;
extern "C" extern u32 const lit_3777;
extern "C" extern u32 const lit_3934;
extern "C" extern u32 const lit_3935;
extern "C" extern u32 const lit_3936;
extern "C" extern u32 const lit_3937;
extern "C" extern u32 const lit_3957[1 + 1 /* padding */];
extern "C" extern u8 const lit_4010[8];
extern "C" extern u8 const lit_4011[8];
extern "C" extern u8 const lit_4012[8];
extern "C" extern u32 const lit_4036;
extern "C" extern u32 const lit_4037;
extern "C" extern u32 const lit_4038;
extern "C" extern u32 const lit_4039;
extern "C" extern u32 const lit_4140;
extern "C" extern u32 const lit_4141;
extern "C" extern u32 const lit_4142;
extern "C" extern u32 const lit_4143;
extern "C" extern u32 const lit_4176;
extern "C" extern u32 const lit_4322;
extern "C" extern u32 const lit_4323;
extern "C" extern u32 const lit_4324;
extern "C" extern u32 const lit_4325;
extern "C" extern u32 const lit_4326;
extern "C" extern u32 const lit_4327;
extern "C" extern u32 const lit_4367;
extern "C" extern u32 const lit_4368;
extern "C" extern u32 const lit_4369;
extern "C" extern u32 const lit_4473;
extern "C" extern u32 const lit_4474;
extern "C" extern u32 const lit_4496;
extern "C" extern u32 const lit_4684;
extern "C" extern u32 const lit_5055;
extern "C" extern u32 const lit_5056;
extern "C" extern u32 const lit_5057;
extern "C" extern u32 const lit_5058;
extern "C" extern u32 const lit_5059;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_Kabuto[12];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__13daObjKABUTO_c[3];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__14daObj_KabHIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
void mDoLib_project(Vec*, Vec*);
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
void mDoLib_pos2camera(Vec*, Vec*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setSimpleShadow(cXyz*, f32, f32, cBgS_PolyInfo&, s16, f32, _GXTexObj*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseAngleS(s16*, s16, s16);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_offsetPos(cXyz*, cXyz const*, s16, cXyz const*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void scaleM__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotS__14mDoMtx_stack_cFRC5csXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
extern "C" void mDoLib_project__FP3VecP3Vec();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
extern "C" void mDoLib_pos2camera__FP3VecP3Vec();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  s16 False
//  s16 False
//  u32* False
// 	 u32 False
extern "C" void newData__13dDlst_peekZ_cFssPUl();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitGObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
extern "C" void __ct__9dInsect_cFv();
// False False
extern "C" void Insect_GetDemoMain__9dInsect_cFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void initOffset__20daPy_boomerangMove_cFPC4cXyz();
// False False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
extern "C" void posMove__20daPy_boomerangMove_cFP4cXyzPsP10fopAc_ac_cs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  u8 False
extern "C" void isCatchNotGiveInsect__14dMenu_Insect_cFUc();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseAngleS__FPsss();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u32 __float_nan;
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80C2E110-80C2E114 0004+00 s=13 e=0 z=0  None .rodata    @3775                                                        */
SECTION_RODATA static u32 const lit_3775 = 0x3FC00000;

/* 80C2E228-80C2E248 0020+00 s=1 e=0 z=0  None .data      l_daObjKABUTO_Method                                         */
SECTION_DATA static void* l_daObjKABUTO_Method[8] = {
	(void*)daObjKABUTO_Create__FP10fopAc_ac_c,
	(void*)daObjKABUTO_Delete__FP13daObjKABUTO_c,
	(void*)daObjKABUTO_Execute__FP13daObjKABUTO_c,
	(void*)daObjKABUTO_IsDelete__FP13daObjKABUTO_c,
	(void*)daObjKABUTO_Draw__FP13daObjKABUTO_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80C2E248-80C2E278 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Kabuto                                         */
SECTION_DATA void* g_profile_Obj_Kabuto[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01400000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000A14,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01DD0000,
	(void*)&l_daObjKABUTO_Method,
	(void*)0x000C0120,
	(void*)0x030E0000,
};

/* 80C2E278-80C2E29C 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C2E0F4,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C2E0EC,
};

/* 80C2E29C-80C2E2A8 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80C2E2A8-80C2E2B4 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80C2E2B4-80C2E2C0 000C+00 s=1 e=0 z=0  None .data      __vt__13daObjKABUTO_c                                        */
SECTION_DATA void* __vt__13daObjKABUTO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)Insect_Release__13daObjKABUTO_cFv,
};

/* 80C2E2C0-80C2E2CC 000C+00 s=5 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 80C2E2CC-80C2E2D8 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80C2E2D8-80C2E2E4 000C+00 s=2 e=0 z=0  None .data      __vt__14daObj_KabHIO_c                                       */
SECTION_DATA void* __vt__14daObj_KabHIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14daObj_KabHIO_cFv,
};

/* 80C2AE6C-80C2AEA4 0038+00 s=1 e=0 z=0  None .text      __ct__14daObj_KabHIO_cFv                                     */
//	80C2AE6C: 80C2E110 (lit_3775)
//	80C2AE70: 80C2E110 (lit_3775)
//	80C2AE74: 80C2E2D8 (__vt__14daObj_KabHIO_c)
//	80C2AE78: 80C2E2D8 (__vt__14daObj_KabHIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_KabHIO_c::daObj_KabHIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/__ct__14daObj_KabHIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C2E114-80C2E118 0004+00 s=0 e=0 z=0  None .rodata    @3776                                                        */
SECTION_RODATA u32 const lit_3776 = 0x3F99999A;

/* 80C2E118-80C2E11C 0004+00 s=0 e=0 z=0  None .rodata    @3777                                                        */
SECTION_RODATA u32 const lit_3777 = 0xBF19999A;

/* 80C2E11C-80C2E15C 0040+00 s=1 e=0 z=0  None .rodata    ccSphSrc$3781                                                */
SECTION_RODATA static u8 const ccSphSrc[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x40, 0x02, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
};

/* 80C2AEA4-80C2AF10 006C+00 s=1 e=0 z=0  None .text      InitCcSph__13daObjKABUTO_cFv                                 */
//	80C2AEC8: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80C2AED0: 80C2E11C (ccSphSrc)
//	80C2AED4: 80C2E11C (ccSphSrc)
//	80C2AED8: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80C2AEEC: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::InitCcSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/InitCcSph__13daObjKABUTO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C2E15C-80C2E160 0004+00 s=1 e=0 z=0  None .rodata    @3790                                                        */
SECTION_RODATA static u32 const lit_3790 = 0x41A00000;

/* 80C2AF10-80C2AF68 0058+00 s=1 e=0 z=0  None .text      SetCcSph__13daObjKABUTO_cFv                                  */
//	80C2AF2C: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80C2AF34: 80C2E15C (lit_3790)
//	80C2AF38: 80C2E15C (lit_3790)
//	80C2AF3C: 8026F708 (SetR__8cM3dGSphFf)
//	80C2AF40: 804061C0 (g_dComIfG_gameInfo)
//	80C2AF44: 804061C0 (g_dComIfG_gameInfo)
//	80C2AF50: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::SetCcSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/SetCcSph__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2AF68-80C2AF88 0020+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	80C2AF74: 80C2AF88 (CreateHeap__13daObjKABUTO_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C2E160-80C2E164 0004+00 s=2 e=0 z=0  None .rodata    @3896                                                        */
SECTION_RODATA static u32 const lit_3896 = 0x3F800000;

/* 80C2E164-80C2E168 0004+00 s=1 e=0 z=0  None .rodata    @3933                                                        */
SECTION_RODATA static u8 const lit_3933[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80C2E168-80C2E16C 0004+00 s=0 e=0 z=0  None .rodata    @3934                                                        */
SECTION_RODATA u32 const lit_3934 = 0x40A00000;

/* 80C2E16C-80C2E170 0004+00 s=0 e=0 z=0  None .rodata    @3935                                                        */
SECTION_RODATA u32 const lit_3935 = 0xBF800000;

/* 80C2E170-80C2E174 0004+00 s=0 e=0 z=0  None .rodata    @3936                                                        */
SECTION_RODATA u32 const lit_3936 = 0x42480000;

/* 80C2E174-80C2E178 0004+00 s=0 e=0 z=0  None .rodata    @3937                                                        */
SECTION_RODATA u32 const lit_3937 = 0x42C80000;

/* 80C2E178-80C2E180 0004+04 s=0 e=0 z=0  None .rodata    @3957                                                        */
SECTION_RODATA u32 const lit_3957[1 + 1 /* padding */] = {
	0x44BB8000,
	/* padding */
	0x00000000,
};

/* 80C2E180-80C2E188 0008+00 s=0 e=0 z=0  None .rodata    @4010                                                        */
SECTION_RODATA u8 const lit_4010[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C2E188-80C2E190 0008+00 s=0 e=0 z=0  None .rodata    @4011                                                        */
SECTION_RODATA u8 const lit_4011[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C2E190-80C2E198 0008+00 s=0 e=0 z=0  None .rodata    @4012                                                        */
SECTION_RODATA u8 const lit_4012[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C2E198-80C2E19C 0004+00 s=0 e=0 z=0  None .rodata    @4036                                                        */
SECTION_RODATA u32 const lit_4036 = 0x3ECCCCCD;

/* 80C2E19C-80C2E1A0 0004+00 s=0 e=0 z=0  None .rodata    @4037                                                        */
SECTION_RODATA u32 const lit_4037 = 0x41200000;

/* 80C2E1A0-80C2E1A4 0004+00 s=0 e=0 z=0  None .rodata    @4038                                                        */
SECTION_RODATA u32 const lit_4038 = 0x3DCCCCCD;

/* 80C2E1A4-80C2E1A8 0004+00 s=0 e=0 z=0  None .rodata    @4039                                                        */
SECTION_RODATA u32 const lit_4039 = 0x3F000000;

/* 80C2E1A8-80C2E1AC 0004+00 s=0 e=0 z=0  None .rodata    @4140                                                        */
SECTION_RODATA u32 const lit_4140 = 0x40400000;

/* 80C2E1AC-80C2E1B0 0004+00 s=0 e=0 z=0  None .rodata    @4141                                                        */
SECTION_RODATA u32 const lit_4141 = 0xC2C80000;

/* 80C2E1B0-80C2E1B4 0004+00 s=0 e=0 z=0  None .rodata    @4142                                                        */
SECTION_RODATA u32 const lit_4142 = 0x42200000;

/* 80C2E1B4-80C2E1B8 0004+00 s=0 e=0 z=0  None .rodata    @4143                                                        */
SECTION_RODATA u32 const lit_4143 = 0x3E99999A;

/* 80C2E1B8-80C2E1BC 0004+00 s=0 e=0 z=0  None .rodata    @4176                                                        */
SECTION_RODATA u32 const lit_4176 = 0x3E4CCCCD;

/* 80C2E1BC-80C2E1C0 0004+00 s=0 e=0 z=0  None .rodata    @4322                                                        */
SECTION_RODATA u32 const lit_4322 = 0x41F00000;

/* 80C2E1C0-80C2E1C4 0004+00 s=0 e=0 z=0  None .rodata    @4323                                                        */
SECTION_RODATA u32 const lit_4323 = 0x42A00000;

/* 80C2E1C4-80C2E1C8 0004+00 s=0 e=0 z=0  None .rodata    @4324                                                        */
SECTION_RODATA u32 const lit_4324 = 0x41000000;

/* 80C2E1C8-80C2E1CC 0004+00 s=0 e=0 z=0  None .rodata    @4325                                                        */
SECTION_RODATA u32 const lit_4325 = 0x43480000;

/* 80C2E1CC-80C2E1D0 0004+00 s=0 e=0 z=0  None .rodata    @4326                                                        */
SECTION_RODATA u32 const lit_4326 = 0x41300000;

/* 80C2E1D0-80C2E1D4 0004+00 s=0 e=0 z=0  None .rodata    @4327                                                        */
SECTION_RODATA u32 const lit_4327 = 0x44834000;

/* 80C2E1D4-80C2E1D8 0004+00 s=0 e=0 z=0  None .rodata    @4367                                                        */
SECTION_RODATA u32 const lit_4367 = 0x44180000;

/* 80C2E1D8-80C2E1DC 0004+00 s=0 e=0 z=0  None .rodata    @4368                                                        */
SECTION_RODATA u32 const lit_4368 = 0x43E00000;

/* 80C2E1DC-80C2E1E0 0004+00 s=0 e=0 z=0  None .rodata    @4369                                                        */
SECTION_RODATA u32 const lit_4369 = 0x4B7FFFFF;

/* 80C2E1E0-80C2E1E4 0002+02 s=1 e=0 z=0  None .rodata    l_kab_itemno                                                 */
SECTION_RODATA static u16 const l_kab_itemno[1 + 1 /* padding */] = {
	0xC0C1,
	/* padding */
	0x0000,
};

/* 80C2E1E4-80C2E1E8 0004+00 s=0 e=0 z=0  None .rodata    @4473                                                        */
SECTION_RODATA u32 const lit_4473 = 0x3D4CCCCD;

/* 80C2E1E8-80C2E1EC 0004+00 s=0 e=0 z=0  None .rodata    @4474                                                        */
SECTION_RODATA u32 const lit_4474 = 0xBE4CCCCD;

/* 80C2E1EC-80C2E1F0 0004+00 s=0 e=0 z=0  None .rodata    @4496                                                        */
SECTION_RODATA u32 const lit_4496 = 0xC1100000;

/* 80C2E1F0-80C2E1F8 0008+00 s=1 e=0 z=0  None .rodata    @4545                                                        */
SECTION_RODATA static u8 const lit_4545[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C2E1F8-80C2E1FC 0004+00 s=0 e=0 z=0  None .rodata    @4684                                                        */
SECTION_RODATA u32 const lit_4684 = 0x461C4000;

/* 80C2E1FC-80C2E200 0004+00 s=1 e=0 z=0  None .rodata    @4779                                                        */
SECTION_RODATA static u32 const lit_4779 = 0x41700000;

/* 80C2E200-80C2E204 0004+00 s=1 e=0 z=0  None .rodata    l_musiya_num                                                 */
SECTION_RODATA static u32 const l_musiya_num = 0x01910192;

/* 80C2E204-80C2E208 0004+00 s=0 e=0 z=0  None .rodata    @5055                                                        */
SECTION_RODATA u32 const lit_5055 = 0x43FA0000;

/* 80C2E208-80C2E20C 0004+00 s=0 e=0 z=0  None .rodata    @5056                                                        */
SECTION_RODATA u32 const lit_5056 = 0xC3480000;

/* 80C2E20C-80C2E210 0004+00 s=0 e=0 z=0  None .rodata    @5057                                                        */
SECTION_RODATA u32 const lit_5057 = 0xC47A0000;

/* 80C2E210-80C2E214 0004+00 s=0 e=0 z=0  None .rodata    @5058                                                        */
SECTION_RODATA u32 const lit_5058 = 0xC2480000;

/* 80C2E214-80C2E218 0004+00 s=0 e=0 z=0  None .rodata    @5059                                                        */
SECTION_RODATA u32 const lit_5059 = 0x3F8CCCCD;

/* 80C2E218-80C2E226 000E+00 s=10 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80C2E218 = "Kab_m";
SECTION_DEAD char const* const stringBase_80C2E21E = "R_SP160";
#pragma pop

/* 80C2AF88-80C2B2E0 0358+00 s=1 e=0 z=0  None .text      CreateHeap__13daObjKABUTO_cFv                                */
//	80C2AF98: 803621DC (_savegpr_29)
//	80C2AFAC: 80C2E218 (stringBase0)
//	80C2AFB0: 80C2E218 (stringBase0)
//	80C2AFB8: 804061C0 (g_dComIfG_gameInfo)
//	80C2AFBC: 804061C0 (g_dComIfG_gameInfo)
//	80C2AFCC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2AFD8: 80C2E218 (stringBase0)
//	80C2AFDC: 80C2E218 (stringBase0)
//	80C2AFE4: 804061C0 (g_dComIfG_gameInfo)
//	80C2AFE8: 804061C0 (g_dComIfG_gameInfo)
//	80C2AFF8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2B004: 802CEC4C (__nw__FUl)
//	80C2B010: 80C2E218 (stringBase0)
//	80C2B014: 80C2E218 (stringBase0)
//	80C2B01C: 804061C0 (g_dComIfG_gameInfo)
//	80C2B020: 804061C0 (g_dComIfG_gameInfo)
//	80C2B030: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2B068: 80C2E110 (lit_3775)
//	80C2B06C: 80C2E110 (lit_3775)
//	80C2B078: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80C2B0A8: 802CEC4C (__nw__FUl)
//	80C2B0B4: 80C2E2CC (__vt__12J3DFrameCtrl)
//	80C2B0B8: 80C2E2CC (__vt__12J3DFrameCtrl)
//	80C2B0C4: 803283FC (init__12J3DFrameCtrlFs)
//	80C2B0F4: 80C2E218 (stringBase0)
//	80C2B0F8: 80C2E218 (stringBase0)
//	80C2B100: 804061C0 (g_dComIfG_gameInfo)
//	80C2B104: 804061C0 (g_dComIfG_gameInfo)
//	80C2B114: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2B130: 80C2E160 (lit_3896)
//	80C2B134: 80C2E160 (lit_3896)
//	80C2B140: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80C2B154: 80C2E218 (stringBase0)
//	80C2B158: 80C2E218 (stringBase0)
//	80C2B160: 804061C0 (g_dComIfG_gameInfo)
//	80C2B164: 804061C0 (g_dComIfG_gameInfo)
//	80C2B174: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2B190: 80C2E160 (lit_3896)
//	80C2B194: 80C2E160 (lit_3896)
//	80C2B1A0: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80C2B1B8: 802CEC4C (__nw__FUl)
//	80C2B1C4: 80C2E2CC (__vt__12J3DFrameCtrl)
//	80C2B1C8: 80C2E2CC (__vt__12J3DFrameCtrl)
//	80C2B1D4: 803283FC (init__12J3DFrameCtrlFs)
//	80C2B204: 80C2E218 (stringBase0)
//	80C2B208: 80C2E218 (stringBase0)
//	80C2B210: 804061C0 (g_dComIfG_gameInfo)
//	80C2B214: 804061C0 (g_dComIfG_gameInfo)
//	80C2B224: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2B240: 80C2E160 (lit_3896)
//	80C2B244: 80C2E160 (lit_3896)
//	80C2B250: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80C2B264: 80C2E218 (stringBase0)
//	80C2B268: 80C2E218 (stringBase0)
//	80C2B270: 804061C0 (g_dComIfG_gameInfo)
//	80C2B274: 804061C0 (g_dComIfG_gameInfo)
//	80C2B284: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2B2A0: 80C2E160 (lit_3896)
//	80C2B2A4: 80C2E160 (lit_3896)
//	80C2B2B0: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80C2B2CC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/CreateHeap__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2B2E0-80C2B328 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80C2B2F8: 80C2E2CC (__vt__12J3DFrameCtrl)
//	80C2B2FC: 80C2E2CC (__vt__12J3DFrameCtrl)
//	80C2B30C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80C2B328-80C2B348 0020+00 s=1 e=0 z=0  None .text      daObjKABUTO_Create__FP10fopAc_ac_c                           */
//	80C2B334: 80C2D724 (create__13daObjKABUTO_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjKABUTO_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/daObjKABUTO_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80C2B348-80C2B36C 0024+00 s=1 e=0 z=0  None .text      daObjKABUTO_Delete__FP13daObjKABUTO_c                        */
//	80C2B354: 80C2D3A4 (Delete__13daObjKABUTO_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
asm static void daObjKABUTO_Delete(daObjKABUTO_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/daObjKABUTO_Delete__FP13daObjKABUTO_c.s"
}
#pragma pop


/* 80C2B36C-80C2B4D4 0168+00 s=1 e=0 z=0  None .text      ShopWaitAction__13daObjKABUTO_cFv                            */
//	80C2B384: 80C2E110 (lit_3775)
//	80C2B388: 80C2E110 (lit_3775)
//	80C2B3B0: 80C2E218 (stringBase0)
//	80C2B3B4: 80C2E218 (stringBase0)
//	80C2B3BC: 804061C0 (g_dComIfG_gameInfo)
//	80C2B3C0: 804061C0 (g_dComIfG_gameInfo)
//	80C2B3D0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2B3F0: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2B404: 80267954 (cM_rndF__Ff)
//	80C2B454: 80267954 (cM_rndF__Ff)
//	80C2B4A0: 80267954 (cM_rndF__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::ShopWaitAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/ShopWaitAction__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2B4D4-80C2B618 0144+00 s=1 e=0 z=0  None .text      WaitAction__13daObjKABUTO_cFv                                */
//	80C2B4EC: 80C2E110 (lit_3775)
//	80C2B4F0: 80C2E110 (lit_3775)
//	80C2B518: 80C2E218 (stringBase0)
//	80C2B51C: 80C2E218 (stringBase0)
//	80C2B524: 804061C0 (g_dComIfG_gameInfo)
//	80C2B528: 804061C0 (g_dComIfG_gameInfo)
//	80C2B538: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2B558: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2B56C: 80267954 (cM_rndF__Ff)
//	80C2B58C: 804061C0 (g_dComIfG_gameInfo)
//	80C2B590: 804061C0 (g_dComIfG_gameInfo)
//	80C2B598: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80C2B5D8: 80267954 (cM_rndF__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::WaitAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/WaitAction__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2B618-80C2B844 022C+00 s=1 e=0 z=0  None .text      WallCheck__13daObjKABUTO_cFv                                 */
//	80C2B628: 803621DC (_savegpr_29)
//	80C2B630: 80C2E110 (lit_3775)
//	80C2B634: 80C2E110 (lit_3775)
//	80C2B63C: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C2B644: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2B658: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C2B65C: 804061C0 (g_dComIfG_gameInfo)
//	80C2B660: 804061C0 (g_dComIfG_gameInfo)
//	80C2B670: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C2B67C: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2B680: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2B694: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C2B6DC: 8034739C (PSVECSquareDistance)
//	80C2B74C: 80450AE0 (__float_nan)
//	80C2B750: 80450AE0 (__float_nan)
//	80C2B7BC: 80450AE0 (__float_nan)
//	80C2B7C0: 80450AE0 (__float_nan)
//	80C2B7D0: 80267674 (cM_atan2s__Fff)
//	80C2B7E4: 80267674 (cM_atan2s__Fff)
//	80C2B7F4: 80267674 (cM_atan2s__Fff)
//	80C2B7FC: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2B800: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2B810: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2B824: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2B830: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::WallCheck() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/WallCheck__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2B844-80C2B88C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	80C2B85C: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2B860: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2B870: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 80C2B88C-80C2B998 010C+00 s=1 e=0 z=0  None .text      SpeedSet__13daObjKABUTO_cFv                                  */
//	80C2B8A4: 80C2E110 (lit_3775)
//	80C2B8A8: 80C2E110 (lit_3775)
//	80C2B8E4: 8000CF0C (ZXYrotS__14mDoMtx_stack_cFRC5csXyz)
//	80C2B8E8: 803DD470 (now__14mDoMtx_stack_c)
//	80C2B8EC: 803DD470 (now__14mDoMtx_stack_c)
//	80C2B8F4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C2B8F8: 803DD470 (now__14mDoMtx_stack_c)
//	80C2B8FC: 803DD470 (now__14mDoMtx_stack_c)
//	80C2B908: 80346D6C (PSMTXMultVec)
//	80C2B94C: 8026FA3C (cLib_addCalc2__FPffff)
//	80C2B960: 8026FA3C (cLib_addCalc2__FPffff)
//	80C2B974: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::SpeedSet() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/SpeedSet__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2B998-80C2BDE8 0450+00 s=1 e=0 z=0  None .text      WallWalk__13daObjKABUTO_cFv                                  */
//	80C2B9B0: 803621DC (_savegpr_29)
//	80C2B9B8: 80C2E110 (lit_3775)
//	80C2B9BC: 80C2E110 (lit_3775)
//	80C2BA08: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C2BA10: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C2BA18: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2BA20: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2BA28: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C2BA30: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80C2BA34: 803DD470 (now__14mDoMtx_stack_c)
//	80C2BA38: 803DD470 (now__14mDoMtx_stack_c)
//	80C2BA40: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C2BA44: 803DD470 (now__14mDoMtx_stack_c)
//	80C2BA48: 803DD470 (now__14mDoMtx_stack_c)
//	80C2BA54: 80346D6C (PSMTXMultVec)
//	80C2BA58: 803DD470 (now__14mDoMtx_stack_c)
//	80C2BA5C: 803DD470 (now__14mDoMtx_stack_c)
//	80C2BA68: 80346D6C (PSMTXMultVec)
//	80C2BA7C: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C2BA80: 804061C0 (g_dComIfG_gameInfo)
//	80C2BA84: 804061C0 (g_dComIfG_gameInfo)
//	80C2BA94: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C2BAA8: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2BAAC: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2BAC0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C2BACC: 80267674 (cM_atan2s__Fff)
//	80C2BB00: 8034739C (PSVECSquareDistance)
//	80C2BB70: 80450AE0 (__float_nan)
//	80C2BB74: 80450AE0 (__float_nan)
//	80C2BBE0: 80450AE0 (__float_nan)
//	80C2BBE4: 80450AE0 (__float_nan)
//	80C2BC2C: 8034739C (PSVECSquareDistance)
//	80C2BC9C: 80450AE0 (__float_nan)
//	80C2BCA0: 80450AE0 (__float_nan)
//	80C2BD0C: 80450AE0 (__float_nan)
//	80C2BD10: 80450AE0 (__float_nan)
//	80C2BD48: 80267674 (cM_atan2s__Fff)
//	80C2BD5C: 80267674 (cM_atan2s__Fff)
//	80C2BD78: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2BD7C: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2BDA4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C2BDB8: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2BDC4: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2BDD4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::WallWalk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/WallWalk__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2BDE8-80C2BFE8 0200+00 s=2 e=0 z=0  None .text      WalkAction__13daObjKABUTO_cFv                                */
//	80C2BE08: 80C2E110 (lit_3775)
//	80C2BE0C: 80C2E110 (lit_3775)
//	80C2BE64: 80C2E218 (stringBase0)
//	80C2BE68: 80C2E218 (stringBase0)
//	80C2BE70: 804061C0 (g_dComIfG_gameInfo)
//	80C2BE74: 804061C0 (g_dComIfG_gameInfo)
//	80C2BE84: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2BEA4: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2BECC: 80267954 (cM_rndF__Ff)
//	80C2BEFC: 8026798C (cM_rndFX__Ff)
//	80C2BF08: 8026798C (cM_rndFX__Ff)
//	80C2BF24: 80267674 (cM_atan2s__Fff)
//	80C2BF30: 80267954 (cM_rndF__Ff)
//	80C2BF5C: 80267954 (cM_rndF__Ff)
//	80C2BFA4: 80267954 (cM_rndF__Ff)
//	80C2BFC4: 80C2B998 (WallWalk__13daObjKABUTO_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::WalkAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/WalkAction__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2BFE8-80C2C7C8 07E0+00 s=2 e=0 z=0  None .text      MoveAction__13daObjKABUTO_cFv                                */
//	80C2BFF8: 803621D8 (_savegpr_28)
//	80C2C000: 80C2E110 (lit_3775)
//	80C2C004: 80C2E110 (lit_3775)
//	80C2C040: 804061C0 (g_dComIfG_gameInfo)
//	80C2C044: 804061C0 (g_dComIfG_gameInfo)
//	80C2C064: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C2C090: 80C2E218 (stringBase0)
//	80C2C094: 80C2E218 (stringBase0)
//	80C2C09C: 804061C0 (g_dComIfG_gameInfo)
//	80C2C0A0: 804061C0 (g_dComIfG_gameInfo)
//	80C2C0B0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2C0D0: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2C120: 8000CF0C (ZXYrotS__14mDoMtx_stack_cFRC5csXyz)
//	80C2C124: 803DD470 (now__14mDoMtx_stack_c)
//	80C2C128: 803DD470 (now__14mDoMtx_stack_c)
//	80C2C134: 80346D6C (PSMTXMultVec)
//	80C2C13C: 80267954 (cM_rndF__Ff)
//	80C2C168: 80267954 (cM_rndF__Ff)
//	80C2C18C: 80267954 (cM_rndF__Ff)
//	80C2C1AC: 80267954 (cM_rndF__Ff)
//	80C2C1FC: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80C2C20C: 8034739C (PSVECSquareDistance)
//	80C2C27C: 80450AE0 (__float_nan)
//	80C2C280: 80450AE0 (__float_nan)
//	80C2C2EC: 80450AE0 (__float_nan)
//	80C2C2F0: 80450AE0 (__float_nan)
//	80C2C320: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C2C338: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C2C344: 8034739C (PSVECSquareDistance)
//	80C2C3B4: 80450AE0 (__float_nan)
//	80C2C3B8: 80450AE0 (__float_nan)
//	80C2C424: 80450AE0 (__float_nan)
//	80C2C428: 80450AE0 (__float_nan)
//	80C2C470: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80C2C488: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	80C2C4E8: 80C2E218 (stringBase0)
//	80C2C4EC: 80C2E218 (stringBase0)
//	80C2C4F4: 804061C0 (g_dComIfG_gameInfo)
//	80C2C4F8: 804061C0 (g_dComIfG_gameInfo)
//	80C2C508: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2C528: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2C56C: 80C2E218 (stringBase0)
//	80C2C570: 80C2E218 (stringBase0)
//	80C2C578: 804061C0 (g_dComIfG_gameInfo)
//	80C2C57C: 804061C0 (g_dComIfG_gameInfo)
//	80C2C58C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2C5AC: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2C5D0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C2C5F0: 8026798C (cM_rndFX__Ff)
//	80C2C604: 8026798C (cM_rndFX__Ff)
//	80C2C618: 80267674 (cM_atan2s__Fff)
//	80C2C624: 80267954 (cM_rndF__Ff)
//	80C2C644: 80267954 (cM_rndF__Ff)
//	80C2C664: 80267954 (cM_rndF__Ff)
//	80C2C674: 80267954 (cM_rndF__Ff)
//	80C2C694: 80C2B88C (SpeedSet__13daObjKABUTO_cFv)
//	80C2C6B4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C2C6C8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C2C6E0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C2C6F4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C2C710: 80270B90 (cLib_chaseAngleS__FPsss)
//	80C2C718: 80C2B618 (WallCheck__13daObjKABUTO_cFv)
//	80C2C760: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C2C7AC: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2C7B4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::MoveAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/MoveAction__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2C7C8-80C2C944 017C+00 s=1 e=0 z=0  None .text      Z_BufferChk__13daObjKABUTO_cFv                               */
//	80C2C7F0: 80C2E110 (lit_3775)
//	80C2C7F4: 80C2E110 (lit_3775)
//	80C2C824: 80015310 (mDoLib_project__FP3VecP3Vec)
//	80C2C828: 804061C0 (g_dComIfG_gameInfo)
//	80C2C82C: 804061C0 (g_dComIfG_gameInfo)
//	80C2C880: 804061C0 (g_dComIfG_gameInfo)
//	80C2C884: 804061C0 (g_dComIfG_gameInfo)
//	80C2C8AC: 80056018 (newData__13dDlst_peekZ_cFssPUl)
//	80C2C8B0: 804061C0 (g_dComIfG_gameInfo)
//	80C2C8B4: 804061C0 (g_dComIfG_gameInfo)
//	80C2C8CC: 800154EC (mDoLib_pos2camera__FP3VecP3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::Z_BufferChk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/Z_BufferChk__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2C944-80C2CA08 00C4+00 s=1 e=0 z=0  None .text      Action__13daObjKABUTO_cFv                                    */
//	80C2C980: 80C2B4D4 (WaitAction__13daObjKABUTO_cFv)
//	80C2C988: 80C2BDE8 (WalkAction__13daObjKABUTO_cFv)
//	80C2C9BC: 80C2BFE8 (MoveAction__13daObjKABUTO_cFv)
//	80C2C9C4: 8015E078 (Insect_GetDemoMain__9dInsect_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::Action() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/Action__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2CA08-80C2CAC4 00BC+00 s=1 e=0 z=0  None .text      ShopAction__13daObjKABUTO_cFv                                */
//	80C2CA44: 80C2B36C (ShopWaitAction__13daObjKABUTO_cFv)
//	80C2CA4C: 80C2BDE8 (WalkAction__13daObjKABUTO_cFv)
//	80C2CA80: 80C2BFE8 (MoveAction__13daObjKABUTO_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::ShopAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/ShopAction__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2CAC4-80C2CADC 0018+00 s=1 e=0 z=0  None .text      Insect_Release__13daObjKABUTO_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::Insect_Release() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/Insect_Release__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2CADC-80C2CC18 013C+00 s=1 e=0 z=0  None .text      ParticleSet__13daObjKABUTO_cFv                               */
//	80C2CB04: 80C2E1F0 (lit_4545)
//	80C2CB08: 80C2E1F0 (lit_4545)
//	80C2CB2C: 80C2E164 (lit_3933)
//	80C2CB30: 80C2E164 (lit_3933)
//	80C2CB34: 80C2E160 (lit_3896)
//	80C2CB38: 80C2E160 (lit_3896)
//	80C2CB3C: 80270740 (cLib_chaseF__FPfff)
//	80C2CB4C: 80C2E160 (lit_3896)
//	80C2CB50: 80C2E160 (lit_3896)
//	80C2CB54: 80270740 (cLib_chaseF__FPfff)
//	80C2CB58: 804061C0 (g_dComIfG_gameInfo)
//	80C2CB5C: 804061C0 (g_dComIfG_gameInfo)
//	80C2CBA4: 80C2E160 (lit_3896)
//	80C2CBA8: 80C2E160 (lit_3896)
//	80C2CBAC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C2CBC4: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	80C2CBE4: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::ParticleSet() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/ParticleSet__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2CC18-80C2D21C 0604+00 s=1 e=0 z=0  None .text      Execute__13daObjKABUTO_cFv                                   */
//	80C2CC28: 803621D8 (_savegpr_28)
//	80C2CC30: 80C2E110 (lit_3775)
//	80C2CC34: 80C2E110 (lit_3775)
//	80C2CC9C: 8015E078 (Insect_GetDemoMain__9dInsect_cFv)
//	80C2CCA4: 80C2CADC (ParticleSet__13daObjKABUTO_cFv)
//	80C2CCB0: 804061C0 (g_dComIfG_gameInfo)
//	80C2CCB4: 804061C0 (g_dComIfG_gameInfo)
//	80C2CD24: 80C2C944 (Action__13daObjKABUTO_cFv)
//	80C2CD44: 804061C0 (g_dComIfG_gameInfo)
//	80C2CD48: 804061C0 (g_dComIfG_gameInfo)
//	80C2CD94: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C2CDA0: 80C2AF10 (SetCcSph__13daObjKABUTO_cFv)
//	80C2CDA8: 80C2D21C (ObjHit__13daObjKABUTO_cFv)
//	80C2CE08: 8015E654 (posMove__20daPy_boomerangMove_cFP4cXyzPsP10fopAc_ac_cs)
//	80C2CE1C: 8015E87C (bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz)
//	80C2CE38: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C2CE40: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2CE54: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C2CE58: 804061C0 (g_dComIfG_gameInfo)
//	80C2CE5C: 804061C0 (g_dComIfG_gameInfo)
//	80C2CE6C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C2CE78: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2CE7C: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2CE90: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C2CF14: 8034739C (PSVECSquareDistance)
//	80C2CF84: 80450AE0 (__float_nan)
//	80C2CF88: 80450AE0 (__float_nan)
//	80C2CFF4: 80450AE0 (__float_nan)
//	80C2CFF8: 80450AE0 (__float_nan)
//	80C2D008: 80267674 (cM_atan2s__Fff)
//	80C2D01C: 80267674 (cM_atan2s__Fff)
//	80C2D02C: 80267674 (cM_atan2s__Fff)
//	80C2D034: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2D038: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2D054: 80C2E218 (stringBase0)
//	80C2D058: 80C2E218 (stringBase0)
//	80C2D060: 804061C0 (g_dComIfG_gameInfo)
//	80C2D064: 804061C0 (g_dComIfG_gameInfo)
//	80C2D074: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2D094: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2D0A4: 80267954 (cM_rndF__Ff)
//	80C2D0F0: 80267954 (cM_rndF__Ff)
//	80C2D130: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2D184: 80C2CADC (ParticleSet__13daObjKABUTO_cFv)
//	80C2D18C: 80C2CA08 (ShopAction__13daObjKABUTO_cFv)
//	80C2D1BC: 804061C0 (g_dComIfG_gameInfo)
//	80C2D1C0: 804061C0 (g_dComIfG_gameInfo)
//	80C2D1C8: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80C2D1D0: 8000D428 (play__14mDoExt_baseAnmFv)
//	80C2D1D8: 8000D428 (play__14mDoExt_baseAnmFv)
//	80C2D1E4: 8002D06C (dComIfGp_getReverb__Fi)
//	80C2D1F4: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	80C2D1FC: 80C2D40C (setBaseMtx__13daObjKABUTO_cFv)
//	80C2D208: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::Execute() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/Execute__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2D21C-80C2D3A4 0188+00 s=1 e=0 z=0  None .text      ObjHit__13daObjKABUTO_cFv                                    */
//	80C2D234: 80C2E110 (lit_3775)
//	80C2D238: 80C2E110 (lit_3775)
//	80C2D240: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80C2D250: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80C2D278: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80C2D284: 8015E5B0 (initOffset__20daPy_boomerangMove_cFPC4cXyz)
//	80C2D2AC: 804061C0 (g_dComIfG_gameInfo)
//	80C2D2B0: 804061C0 (g_dComIfG_gameInfo)
//	80C2D2F8: 80C2E218 (stringBase0)
//	80C2D2FC: 80C2E218 (stringBase0)
//	80C2D304: 804061C0 (g_dComIfG_gameInfo)
//	80C2D308: 804061C0 (g_dComIfG_gameInfo)
//	80C2D318: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2D338: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2D348: 80267954 (cM_rndF__Ff)
//	80C2D35C: 80267954 (cM_rndF__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::ObjHit() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/ObjHit__13daObjKABUTO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C2E2F0-80C2E2F4 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_80C2E2F0[4];

/* 80C2D3A4-80C2D40C 0068+00 s=1 e=0 z=0  None .text      Delete__13daObjKABUTO_cFv                                    */
//	80C2D3BC: 80C2E218 (stringBase0)
//	80C2D3C0: 80C2E218 (stringBase0)
//	80C2D3C4: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80C2D3D8: 80C2E2F0 (data_80C2E2F0)
//	80C2D3DC: 80C2E2F0 (data_80C2E2F0)
//	80C2D3F0: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/Delete__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2D40C-80C2D474 0068+00 s=1 e=0 z=0  None .text      setBaseMtx__13daObjKABUTO_cFv                                */
//	80C2D424: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C2D42C: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80C2D434: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80C2D43C: 8000CE70 (scaleM__14mDoMtx_stack_cFRC4cXyz)
//	80C2D448: 803DD470 (now__14mDoMtx_stack_c)
//	80C2D44C: 803DD470 (now__14mDoMtx_stack_c)
//	80C2D454: 803464B0 (PSMTXCopy)
//	80C2D45C: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/setBaseMtx__13daObjKABUTO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C2E2F4-80C2E300 000C+00 s=1 e=0 z=0  None .bss       @3770                                                        */
static u8 lit_3770[12];

/* 80C2E300-80C2E314 0014+00 s=3 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[20];

/* 80C2D474-80C2D558 00E4+00 s=1 e=0 z=0  None .text      daObjKABUTO_Draw__FP13daObjKABUTO_c                          */
//	80C2D498: 80C2C7C8 (Z_BufferChk__13daObjKABUTO_cFv)
//	80C2D4A4: 8042CA54 (g_env_light)
//	80C2D4A8: 8042CA54 (g_env_light)
//	80C2D4B8: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80C2D4BC: 8042CA54 (g_env_light)
//	80C2D4C0: 8042CA54 (g_env_light)
//	80C2D4CC: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C2D4E0: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80C2D4F4: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	80C2D4FC: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	80C2D514: 80C2E1FC (lit_4779)
//	80C2D518: 80C2E1FC (lit_4779)
//	80C2D524: 80C2E300 (l_HIO)
//	80C2D528: 80C2E300 (l_HIO)
//	80C2D530: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80C2D534: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80C2D538: 8002D0B4 (dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
asm static void daObjKABUTO_Draw(daObjKABUTO_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/daObjKABUTO_Draw__FP13daObjKABUTO_c.s"
}
#pragma pop


/* 80C2D558-80C2D578 0020+00 s=2 e=0 z=0  None .text      daObjKABUTO_Execute__FP13daObjKABUTO_c                       */
//	80C2D564: 80C2CC18 (Execute__13daObjKABUTO_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
asm static void daObjKABUTO_Execute(daObjKABUTO_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/daObjKABUTO_Execute__FP13daObjKABUTO_c.s"
}
#pragma pop


/* 80C2D578-80C2D724 01AC+00 s=1 e=0 z=0  None .text      CreateChk__13daObjKABUTO_cFv                                 */
//	80C2D5B8: 804061C0 (g_dComIfG_gameInfo)
//	80C2D5BC: 804061C0 (g_dComIfG_gameInfo)
//	80C2D5C8: 80C2E200 (l_musiya_num)
//	80C2D5CC: 80C2E200 (l_musiya_num)
//	80C2D5D4: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C2D5D8: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C2D5E0: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80C2D5F0: 80C2E200 (l_musiya_num)
//	80C2D5F4: 80C2E200 (l_musiya_num)
//	80C2D600: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C2D604: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C2D60C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80C2D620: 80C2E218 (stringBase0)
//	80C2D624: 80C2E218 (stringBase0)
//	80C2D62C: 804061C0 (g_dComIfG_gameInfo)
//	80C2D630: 804061C0 (g_dComIfG_gameInfo)
//	80C2D638: 80368994 (strcmp)
//	80C2D644: 804061C0 (g_dComIfG_gameInfo)
//	80C2D648: 804061C0 (g_dComIfG_gameInfo)
//	80C2D65C: 80C2E1E0 (l_kab_itemno)
//	80C2D660: 80C2E1E0 (l_kab_itemno)
//	80C2D668: 801D9F3C (isCatchNotGiveInsect__14dMenu_Insect_cFUc)
//	80C2D688: 804061C0 (g_dComIfG_gameInfo)
//	80C2D68C: 804061C0 (g_dComIfG_gameInfo)
//	80C2D698: 80C2E200 (l_musiya_num)
//	80C2D69C: 80C2E200 (l_musiya_num)
//	80C2D6A8: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C2D6AC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C2D6B4: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80C2D6CC: 804061C0 (g_dComIfG_gameInfo)
//	80C2D6D0: 804061C0 (g_dComIfG_gameInfo)
//	80C2D6DC: 80C2E200 (l_musiya_num)
//	80C2D6E0: 80C2E200 (l_musiya_num)
//	80C2D6EC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C2D6F0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C2D6F8: 800349BC (isEventBit__11dSv_event_cCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::CreateChk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/CreateChk__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2D724-80C2DF60 083C+00 s=1 e=0 z=0  None .text      create__13daObjKABUTO_cFv                                    */
//	80C2D734: 803621C8 (_savegpr_24)
//	80C2D73C: 80C2E110 (lit_3775)
//	80C2D740: 80C2E110 (lit_3775)
//	80C2D75C: 8015E010 (__ct__9dInsect_cFv)
//	80C2D760: 80C2E2B4 (__vt__13daObjKABUTO_c)
//	80C2D764: 80C2E2B4 (__vt__13daObjKABUTO_c)
//	80C2D76C: 803C3728 (__vt__9cCcD_Stts)
//	80C2D770: 803C3728 (__vt__9cCcD_Stts)
//	80C2D77C: 80083760 (__ct__10dCcD_GSttsFv)
//	80C2D780: 803AC2E4 (__vt__9dCcD_Stts)
//	80C2D784: 803AC2E4 (__vt__9dCcD_Stts)
//	80C2D79C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80C2D7A0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C2D7A4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C2D7AC: 80C2E2A8 (__vt__8cM3dGAab)
//	80C2D7B0: 80C2E2A8 (__vt__8cM3dGAab)
//	80C2D7B8: 80C2E29C (__vt__8cM3dGSph)
//	80C2D7BC: 80C2E29C (__vt__8cM3dGSph)
//	80C2D7C4: 803C3540 (__vt__12cCcD_SphAttr)
//	80C2D7C8: 803C3540 (__vt__12cCcD_SphAttr)
//	80C2D7D8: 803ABFC0 (__vt__8dCcD_Sph)
//	80C2D7DC: 803ABFC0 (__vt__8dCcD_Sph)
//	80C2D7F8: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80C2D804: 800760A0 (__ct__9dBgS_AcchFv)
//	80C2D808: 80C2E278 (__vt__12dBgS_ObjAcch)
//	80C2D80C: 80C2E278 (__vt__12dBgS_ObjAcch)
//	80C2D828: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2D830: 802C03C8 (__ct__10Z2CreatureFv)
//	80C2D844: 80C2E218 (stringBase0)
//	80C2D848: 80C2E218 (stringBase0)
//	80C2D84C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80C2D8DC: 80C2D578 (CreateChk__13daObjKABUTO_cFv)
//	80C2D8F4: 80C2AF68 (useHeapInit__FP10fopAc_ac_c)
//	80C2D8F8: 80C2AF68 (useHeapInit__FP10fopAc_ac_c)
//	80C2D900: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80C2D914: 80C2E2F0 (data_80C2E2F0)
//	80C2D918: 80C2E2F0 (data_80C2E2F0)
//	80C2D934: 80C2E300 (l_HIO)
//	80C2D938: 80C2E300 (l_HIO)
//	80C2D988: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C2D994: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2D9A0: 804061C0 (g_dComIfG_gameInfo)
//	80C2D9A4: 804061C0 (g_dComIfG_gameInfo)
//	80C2D9C4: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	80C2D9E0: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	80C2D9F4: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C2D9FC: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2DA08: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C2DA14: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2DA18: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2DA2C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C2DA74: 8034739C (PSVECSquareDistance)
//	80C2DAE4: 80450AE0 (__float_nan)
//	80C2DAE8: 80450AE0 (__float_nan)
//	80C2DB54: 80450AE0 (__float_nan)
//	80C2DB58: 80450AE0 (__float_nan)
//	80C2DB68: 80267674 (cM_atan2s__Fff)
//	80C2DB7C: 80267674 (cM_atan2s__Fff)
//	80C2DB8C: 80267674 (cM_atan2s__Fff)
//	80C2DB98: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2DB9C: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2DBF4: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C2DBFC: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2DC08: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C2DC14: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2DC18: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2DC2C: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C2DC74: 8034739C (PSVECSquareDistance)
//	80C2DCE4: 80450AE0 (__float_nan)
//	80C2DCE8: 80450AE0 (__float_nan)
//	80C2DD54: 80450AE0 (__float_nan)
//	80C2DD58: 80450AE0 (__float_nan)
//	80C2DD68: 80267674 (cM_atan2s__Fff)
//	80C2DD7C: 80267674 (cM_atan2s__Fff)
//	80C2DD8C: 80267674 (cM_atan2s__Fff)
//	80C2DD94: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2DD98: 80C2E2C0 (__vt__8cM3dGPla)
//	80C2DDA8: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2DDBC: 80C2E218 (stringBase0)
//	80C2DDC0: 80C2E218 (stringBase0)
//	80C2DDC8: 804061C0 (g_dComIfG_gameInfo)
//	80C2DDCC: 804061C0 (g_dComIfG_gameInfo)
//	80C2DDD4: 80368994 (strcmp)
//	80C2DDE0: 804061C0 (g_dComIfG_gameInfo)
//	80C2DDE4: 804061C0 (g_dComIfG_gameInfo)
//	80C2DE18: 80C2AEA4 (InitCcSph__13daObjKABUTO_cFv)
//	80C2DE28: 80C2E218 (stringBase0)
//	80C2DE2C: 80C2E218 (stringBase0)
//	80C2DE34: 804061C0 (g_dComIfG_gameInfo)
//	80C2DE38: 804061C0 (g_dComIfG_gameInfo)
//	80C2DE40: 80368994 (strcmp)
//	80C2DE4C: 804061C0 (g_dComIfG_gameInfo)
//	80C2DE50: 804061C0 (g_dComIfG_gameInfo)
//	80C2DE64: 80C2AEA4 (InitCcSph__13daObjKABUTO_cFv)
//	80C2DE90: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80C2DEB4: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	80C2DEC8: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	80C2DF30: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80C2DF40: 80C2D558 (daObjKABUTO_Execute__FP13daObjKABUTO_c)
//	80C2DF4C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKABUTO_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/create__13daObjKABUTO_cFv.s"
}
#pragma pop


/* 80C2DF60-80C2DFD0 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80C2DF80: 80C2E278 (__vt__12dBgS_ObjAcch)
//	80C2DF84: 80C2E278 (__vt__12dBgS_ObjAcch)
//	80C2DFA0: 80075F94 (__dt__9dBgS_AcchFv)
//	80C2DFB0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80C2DFD0-80C2E018 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80C2DFE8: 80C2E29C (__vt__8cM3dGSph)
//	80C2DFEC: 80C2E29C (__vt__8cM3dGSph)
//	80C2DFFC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80C2E018-80C2E060 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80C2E030: 80C2E2A8 (__vt__8cM3dGAab)
//	80C2E034: 80C2E2A8 (__vt__8cM3dGAab)
//	80C2E044: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80C2E060-80C2E068 0008+00 s=1 e=0 z=0  None .text      daObjKABUTO_IsDelete__FP13daObjKABUTO_c                      */
// True False
//  bool False
//  daObjKABUTO_c* False
// 	 daObjKABUTO_c False
static bool daObjKABUTO_IsDelete(daObjKABUTO_c* param_0) {
	return true;
}


/* 80C2E068-80C2E0B0 0048+00 s=2 e=0 z=0  None .text      __dt__14daObj_KabHIO_cFv                                     */
//	80C2E080: 80C2E2D8 (__vt__14daObj_KabHIO_c)
//	80C2E084: 80C2E2D8 (__vt__14daObj_KabHIO_c)
//	80C2E094: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_KabHIO_c::~daObj_KabHIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/__dt__14daObj_KabHIO_cFv.s"
}
#pragma pop


/* 80C2E0B0-80C2E0EC 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_kabuto_cpp                                   */
//	80C2E0BC: 80C2E300 (l_HIO)
//	80C2E0C0: 80C2E300 (l_HIO)
//	80C2E0C4: 80C2AE6C (__ct__14daObj_KabHIO_cFv)
//	80C2E0C8: 80C2E068 (__dt__14daObj_KabHIO_cFv)
//	80C2E0CC: 80C2E068 (__dt__14daObj_KabHIO_cFv)
//	80C2E0D0: 80C2E2F4 (lit_3770)
//	80C2E0D4: 80C2E2F4 (lit_3770)
//	80C2E0D8: 80C2ADF8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_kabuto_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/__sinit_d_a_obj_kabuto_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80C2E0B0 = (void*)__sinit_d_a_obj_kabuto_cpp;
#pragma pop


/* 80C2E0EC-80C2E0F4 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80C2E0F0: 80C2DF60 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C2E0EC() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/func_80C2E0EC.s"
}
#pragma pop


/* 80C2E0F4-80C2E0FC 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80C2E0F8: 80C2DF60 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C2E0F4() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kabuto/d_a_obj_kabuto/func_80C2E0F4.s"
}
#pragma pop


