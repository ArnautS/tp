// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_swspinner
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
};

struct fopAc_ac_c {
};

struct daObjSwSpinner_c {
	/* 80D00174 */ // True False
void initBaseMtx();
	/* 80D001CC */ // True False
void setBaseMtx();
	/* 80D00284 */ // True False
void Create();
	/* 80D0035C */ // True False
void CreateHeap();
	/* 80D00498 */ // True False
void create1st();
	/* 80D00518 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80D00890 */ // True False
void Draw();
	/* 80D00954 */ // True False
void Delete();
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 800352B0 */ // False False
//  int False
//  int False
void offSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dBgW_Base {
};

struct dBgW {
	/* 8007B970 */ // False False
dBgW();
	/* 8007B9C0 */ // False False
void Move();
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS {
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgD_t {
};

struct cBgW {
	/* 80079F38 */ // False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void Set(cBgD_t*, u32, f32 (* )[3][4]);
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void search_spinner_sub(void*, void*);
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
static void daObjSwSpinner_create1st(daObjSwSpinner_c*);
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
static void daObjSwSpinner_MoveBGDelete(daObjSwSpinner_c*);
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
static void daObjSwSpinner_MoveBGExecute(daObjSwSpinner_c*);
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
static void daObjSwSpinner_MoveBGDraw(daObjSwSpinner_c*);

// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void search_spinner_sub__FPvPv();
// True False
extern "C" void initBaseMtx__16daObjSwSpinner_cFv();
// True False
extern "C" void setBaseMtx__16daObjSwSpinner_cFv();
// True False
extern "C" void Create__16daObjSwSpinner_cFv();
// True False
extern "C" void CreateHeap__16daObjSwSpinner_cFv();
// True False
extern "C" void create1st__16daObjSwSpinner_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__16daObjSwSpinner_cFPPA3_A4_f();
// True False
extern "C" void Draw__16daObjSwSpinner_cFv();
// True False
extern "C" void Delete__16daObjSwSpinner_cFv();
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
extern "C" static void daObjSwSpinner_create1st__FP16daObjSwSpinner_c();
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
extern "C" static void daObjSwSpinner_MoveBGDelete__FP16daObjSwSpinner_c();
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
extern "C" static void daObjSwSpinner_MoveBGExecute__FP16daObjSwSpinner_c();
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
extern "C" static void daObjSwSpinner_MoveBGDraw__FP16daObjSwSpinner_c();
extern "C" extern u8 const lit_3718[8];
extern "C" extern u8 const lit_3719[8];
extern "C" extern u8 const lit_3720[8];
extern "C" extern u32 const lit_3721;
extern "C" extern u32 const lit_3773;
extern "C" extern u32 const lit_3774;
extern "C" extern u32 const lit_3919;
extern "C" extern u32 const lit_3920;
extern "C" extern u32 const lit_3921;
extern "C" extern u32 const lit_3922;
extern "C" extern u32 const lit_3923;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_SwSpinner[12];
extern "C" extern void* __vt__16daObjSwSpinner_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc(f32*, f32, f32, f32, f32);
// False False
//  s16 False
//  s16 False
void cLib_distanceAngleS(s16, s16);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void offSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
// False False
extern "C" void __ct__4dBgWFv();
// False False
extern "C" void Move__4dBgWFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc__FPfffff();
// False False
//  s16 False
//  s16 False
extern "C" void cLib_distanceAngleS__Fss();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80D00A94-80D00A9C 0004+04 s=3 e=0 z=0  None .rodata    @3717                                                        */
SECTION_RODATA static u8 const lit_3717[4 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 80CFFF78-80D00174 01FC+00 s=1 e=0 z=0  None .text      search_spinner_sub__FPvPv                                    */
//	80CFFF88: 803621DC (_savegpr_29)
//	80CFFF90: 80D00A94 (lit_3717)
//	80CFFF94: 80D00A94 (lit_3717)
//	80CFFFA0: 80018CE0 (fopAc_IsActor__FPv)
//	80CFFFEC: 8034739C (PSVECSquareDistance)
//	80D0005C: 80450AE0 (__float_nan)
//	80D00060: 80450AE0 (__float_nan)
//	80D000CC: 80450AE0 (__float_nan)
//	80D000D0: 80450AE0 (__float_nan)
//	80D00160: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void search_spinner_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/search_spinner_sub__FPvPv.s"
}
#pragma pop


/* 80D00174-80D001CC 0058+00 s=1 e=0 z=0  None .text      initBaseMtx__16daObjSwSpinner_cFv                            */
//	80D001B8: 80D001CC (setBaseMtx__16daObjSwSpinner_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwSpinner_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/initBaseMtx__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D001CC-80D00284 00B8+00 s=2 e=0 z=0  None .text      setBaseMtx__16daObjSwSpinner_cFv                             */
//	80D001E4: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80D001E8: 803DD470 (now__14mDoMtx_stack_c)
//	80D001EC: 803DD470 (now__14mDoMtx_stack_c)
//	80D001F4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80D001F8: 803DD470 (now__14mDoMtx_stack_c)
//	80D001FC: 803DD470 (now__14mDoMtx_stack_c)
//	80D00208: 803464B0 (PSMTXCopy)
//	80D0020C: 803DD470 (now__14mDoMtx_stack_c)
//	80D00210: 803DD470 (now__14mDoMtx_stack_c)
//	80D00218: 803464B0 (PSMTXCopy)
//	80D0021C: 803DD470 (now__14mDoMtx_stack_c)
//	80D00220: 803DD470 (now__14mDoMtx_stack_c)
//	80D00238: 803468E8 (PSMTXTrans)
//	80D0023C: 803DD470 (now__14mDoMtx_stack_c)
//	80D00240: 803DD470 (now__14mDoMtx_stack_c)
//	80D00248: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80D0024C: 803DD470 (now__14mDoMtx_stack_c)
//	80D00250: 803DD470 (now__14mDoMtx_stack_c)
//	80D0025C: 803464B0 (PSMTXCopy)
//	80D00260: 803DD470 (now__14mDoMtx_stack_c)
//	80D00264: 803DD470 (now__14mDoMtx_stack_c)
//	80D0026C: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwSpinner_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/setBaseMtx__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D00284-80D0035C 00D8+00 s=1 e=0 z=0  None .text      Create__16daObjSwSpinner_cFv                                 */
//	80D0029C: 80D00A94 (lit_3717)
//	80D002A0: 80D00A94 (lit_3717)
//	80D002A4: 804061C0 (g_dComIfG_gameInfo)
//	80D002A8: 804061C0 (g_dComIfG_gameInfo)
//	80D002BC: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D00300: 80D00174 (initBaseMtx__16daObjSwSpinner_cFv)
//	80D0031C: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80D00320: 804061C0 (g_dComIfG_gameInfo)
//	80D00324: 804061C0 (g_dComIfG_gameInfo)
//	80D00334: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80D0033C: 8007B9C0 (Move__4dBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwSpinner_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/Create__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D00A9C-80D00AA4 0008+00 s=0 e=0 z=0  None .rodata    @3718                                                        */
SECTION_RODATA u8 const lit_3718[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D00AA4-80D00AAC 0008+00 s=0 e=0 z=0  None .rodata    @3719                                                        */
SECTION_RODATA u8 const lit_3719[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D00AAC-80D00AB4 0008+00 s=0 e=0 z=0  None .rodata    @3720                                                        */
SECTION_RODATA u8 const lit_3720[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D00AB4-80D00AB8 0004+00 s=0 e=0 z=0  None .rodata    @3721                                                        */
SECTION_RODATA u32 const lit_3721 = 0x42C80000;

/* 80D00AB8-80D00ABC 0004+00 s=0 e=0 z=0  None .rodata    @3773                                                        */
SECTION_RODATA u32 const lit_3773 = 0x42480000;

/* 80D00ABC-80D00AC0 0004+00 s=0 e=0 z=0  None .rodata    @3774                                                        */
SECTION_RODATA u32 const lit_3774 = 0x41F00000;

/* 80D00AC0-80D00AC4 0004+00 s=0 e=0 z=0  None .rodata    @3919                                                        */
SECTION_RODATA u32 const lit_3919 = 0x3DCCCCCD;

/* 80D00AC4-80D00AC8 0004+00 s=0 e=0 z=0  None .rodata    @3920                                                        */
SECTION_RODATA u32 const lit_3920 = 0x41200000;

/* 80D00AC8-80D00ACC 0004+00 s=0 e=0 z=0  None .rodata    @3921                                                        */
SECTION_RODATA u32 const lit_3921 = 0x40000000;

/* 80D00ACC-80D00AD0 0004+00 s=0 e=0 z=0  None .rodata    @3922                                                        */
SECTION_RODATA u32 const lit_3922 = 0x3F800000;

/* 80D00AD0-80D00AD4 0004+00 s=0 e=0 z=0  None .rodata    @3923                                                        */
SECTION_RODATA u32 const lit_3923 = 0xBF800000;

/* 80D00AD4-80D00ADE 000A+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80D00AD4 = "P_Sswitch";
#pragma pop

/* 80D00AE0-80D00AE4 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80D0035C-80D00498 013C+00 s=1 e=0 z=0  None .text      CreateHeap__16daObjSwSpinner_cFv                             */
//	80D00374: 80D00AE0 (l_arcName)
//	80D00378: 80D00AE0 (l_arcName)
//	80D00384: 804061C0 (g_dComIfG_gameInfo)
//	80D00388: 804061C0 (g_dComIfG_gameInfo)
//	80D0039C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D003AC: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80D003C8: 80D00AE0 (l_arcName)
//	80D003CC: 80D00AE0 (l_arcName)
//	80D003E0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D003F0: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80D00410: 802CEC4C (__nw__FUl)
//	80D0041C: 8007B970 (__ct__4dBgWFv)
//	80D00434: 80D00AE0 (l_arcName)
//	80D00438: 80D00AE0 (l_arcName)
//	80D0044C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D00460: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwSpinner_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/CreateHeap__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D00498-80D00518 0080+00 s=1 e=0 z=0  None .text      create1st__16daObjSwSpinner_cFv                              */
//	80D004B0: 80D00AE0 (l_arcName)
//	80D004B4: 80D00AE0 (l_arcName)
//	80D004BC: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80D004D0: 80D00AE0 (l_arcName)
//	80D004D4: 80D00AE0 (l_arcName)
//	80D004EC: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwSpinner_c::create1st() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/create1st__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D00518-80D00890 0378+00 s=1 e=0 z=0  None .text      Execute__16daObjSwSpinner_cFPPA3_A4_f                        */
//	80D00528: 803621D8 (_savegpr_28)
//	80D00534: 80D00A94 (lit_3717)
//	80D00538: 80D00A94 (lit_3717)
//	80D00554: 80CFFF78 (search_spinner_sub__FPvPv)
//	80D00558: 80CFFF78 (search_spinner_sub__FPvPv)
//	80D00560: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80D005B4: 80270E24 (cLib_distanceAngleS__Fss)
//	80D005E0: 804061C0 (g_dComIfG_gameInfo)
//	80D005E4: 804061C0 (g_dComIfG_gameInfo)
//	80D005F8: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D00618: 8026F97C (cLib_addCalc__FPfffff)
//	80D00680: 8002D06C (dComIfGp_getReverb__Fi)
//	80D00694: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D00698: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D006C0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D006EC: 804061C0 (g_dComIfG_gameInfo)
//	80D006F0: 804061C0 (g_dComIfG_gameInfo)
//	80D00704: 80035200 (onSwitch__10dSv_info_cFii)
//	80D0070C: 804061C0 (g_dComIfG_gameInfo)
//	80D00710: 804061C0 (g_dComIfG_gameInfo)
//	80D00724: 800352B0 (offSwitch__10dSv_info_cFii)
//	80D0072C: 804061C0 (g_dComIfG_gameInfo)
//	80D00730: 804061C0 (g_dComIfG_gameInfo)
//	80D00744: 800352B0 (offSwitch__10dSv_info_cFii)
//	80D00768: 8002D06C (dComIfGp_getReverb__Fi)
//	80D0077C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D00780: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D007A8: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D007C0: 8002D06C (dComIfGp_getReverb__Fi)
//	80D007D4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D007D8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D00800: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D00810: 80D001CC (setBaseMtx__16daObjSwSpinner_cFv)
//	80D00818: 8007B9C0 (Move__4dBgWFv)
//	80D00844: 804061C0 (g_dComIfG_gameInfo)
//	80D00848: 804061C0 (g_dComIfG_gameInfo)
//	80D0085C: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D0087C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjSwSpinner_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/Execute__16daObjSwSpinner_cFPPA3_A4_f.s"
}
#pragma pop


/* 80D00890-80D00954 00C4+00 s=1 e=0 z=0  None .text      Draw__16daObjSwSpinner_cFv                                   */
//	80D008A8: 8042CA54 (g_env_light)
//	80D008AC: 8042CA54 (g_env_light)
//	80D008BC: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80D008C0: 8042CA54 (g_env_light)
//	80D008C4: 8042CA54 (g_env_light)
//	80D008D4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80D008D8: 8042CA54 (g_env_light)
//	80D008DC: 8042CA54 (g_env_light)
//	80D008EC: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80D008F0: 804061C0 (g_dComIfG_gameInfo)
//	80D008F4: 804061C0 (g_dComIfG_gameInfo)
//	80D008FC: 80434AC8 (j3dSys)
//	80D00900: 80434AC8 (j3dSys)
//	80D00914: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80D0091C: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80D00920: 804061C0 (g_dComIfG_gameInfo)
//	80D00924: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwSpinner_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/Draw__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D00954-80D009C0 006C+00 s=1 e=0 z=0  None .text      Delete__16daObjSwSpinner_cFv                                 */
//	80D00974: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80D00980: 804061C0 (g_dComIfG_gameInfo)
//	80D00984: 804061C0 (g_dComIfG_gameInfo)
//	80D00990: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80D00998: 80D00AE0 (l_arcName)
//	80D0099C: 80D00AE0 (l_arcName)
//	80D009A4: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwSpinner_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/Delete__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D00AE4-80D00B04 0020+00 s=1 e=0 z=0  None .data      daObjSwSpinner_METHODS                                       */
SECTION_DATA static void* daObjSwSpinner_METHODS[8] = {
	(void*)daObjSwSpinner_create1st__FP16daObjSwSpinner_c,
	(void*)daObjSwSpinner_MoveBGDelete__FP16daObjSwSpinner_c,
	(void*)daObjSwSpinner_MoveBGExecute__FP16daObjSwSpinner_c,
	(void*)NULL,
	(void*)daObjSwSpinner_MoveBGDraw__FP16daObjSwSpinner_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80D00B04-80D00B34 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_SwSpinner                                      */
SECTION_DATA void* g_profile_Obj_SwSpinner[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00B30000,
	(void*)&g_fpcLf_Method,
	(void*)0x000005F4,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x022F0000,
	(void*)&daObjSwSpinner_METHODS,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80D00B34-80D00B5C 0028+00 s=1 e=0 z=0  None .data      __vt__16daObjSwSpinner_c                                     */
SECTION_DATA void* __vt__16daObjSwSpinner_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__16daObjSwSpinner_cFv,
	(void*)Create__16daObjSwSpinner_cFv,
	(void*)Execute__16daObjSwSpinner_cFPPA3_A4_f,
	(void*)Draw__16daObjSwSpinner_cFv,
	(void*)Delete__16daObjSwSpinner_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80D009C0-80D00A20 0060+00 s=1 e=0 z=0  None .text      daObjSwSpinner_create1st__FP16daObjSwSpinner_c               */
//	80D009E8: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80D009EC: 80D00B34 (__vt__16daObjSwSpinner_c)
//	80D009F0: 80D00B34 (__vt__16daObjSwSpinner_c)
//	80D00A08: 80D00498 (create1st__16daObjSwSpinner_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
asm static void daObjSwSpinner_create1st(daObjSwSpinner_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/daObjSwSpinner_create1st__FP16daObjSwSpinner_c.s"
}
#pragma pop


/* 80D00A20-80D00A40 0020+00 s=1 e=0 z=0  None .text      daObjSwSpinner_MoveBGDelete__FP16daObjSwSpinner_c            */
//	80D00A2C: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
asm static void daObjSwSpinner_MoveBGDelete(daObjSwSpinner_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/daObjSwSpinner_MoveBGDelete__FP16daObjSwSpinner_c.s"
}
#pragma pop


/* 80D00A40-80D00A60 0020+00 s=1 e=0 z=0  None .text      daObjSwSpinner_MoveBGExecute__FP16daObjSwSpinner_c           */
//	80D00A4C: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
asm static void daObjSwSpinner_MoveBGExecute(daObjSwSpinner_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/daObjSwSpinner_MoveBGExecute__FP16daObjSwSpinner_c.s"
}
#pragma pop


/* 80D00A60-80D00A8C 002C+00 s=1 e=0 z=0  None .text      daObjSwSpinner_MoveBGDraw__FP16daObjSwSpinner_c              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjSwSpinner_c* False
// 	 daObjSwSpinner_c False
asm static void daObjSwSpinner_MoveBGDraw(daObjSwSpinner_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/daObjSwSpinner_MoveBGDraw__FP16daObjSwSpinner_c.s"
}
#pragma pop


