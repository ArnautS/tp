// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_lv3Water
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoHIO_entry_c {
	/* 80C587F0 */ // True False
~mDoHIO_entry_c();
};

struct J3DAnmTextureSRTKey {
};

struct J3DMaterialTable {
};

struct mDoExt_btkAnm {
	/* 8000D63C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct fopAc_ac_c {
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daLv3Water_c {
	/* 80C58838 */ // True False
void setBaseMtx();
	/* 80C5891C */ // True False
void CreateHeap();
	/* 80C58ABC */ // True False
void create();
	/* 80C58D68 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80C58E20 */ // True False
void effectSet();
	/* 80C596F4 */ // True False
void mode_proc_wait();
	/* 80C59754 */ // True False
void mode_init_levelCtrl();
	/* 80C597FC */ // True False
void mode_proc_levelCtrl();
	/* 80C598BC */ // True False
void Draw();
	/* 80C59AA0 */ // True False
void Delete();
	/* 80C59AE0 */ // True False
void eventStart();
	/* 80C59D80 */ // True False
~daLv3Water_c();
};

struct daLv3Water_HIO_c {
	/* 80C587CC */ // True False
daLv3Water_HIO_c();
	/* 80C59C34 */ // True False
~daLv3Water_HIO_c();
};

struct dSv_info_c {
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct cXyz {
};

struct dKy_tevstr_c {
};

struct J3DModelData {
	/* 8032600C */ // False False
//  u16 False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
void simpleCalcMaterial(u16, f32 (* )[4]);
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dEvLib_callback_c {
	/* 8004886C */ // False False
void eventUpdate();
	/* 80048940 */ // False False
//  int False
//  int False
//  int False
void orderEvent(int, int, int);
	/* 80C59D20 */ // True False
~dEvLib_callback_c();
	/* 80C59D68 */ // True False
//  bool False
bool eventStart();
	/* 80C59D70 */ // True False
//  bool False
bool eventRun();
	/* 80C59D78 */ // True False
//  bool False
bool eventEnd();
};

struct dBgW_Base {
};

struct dBgW {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 80078690 */ // False False
//  bool False
bool Create();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS {
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DTexMtxInfo {
	/* 80325794 */ // False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
void setEffectMtx(f32 (* )[4]);
};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80C58D20 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  daLv3Water_c* False
// 	 daLv3Water_c False
static void daLv3Water_Draw(daLv3Water_c*);
// True False
//  daLv3Water_c* False
// 	 daLv3Water_c False
static void daLv3Water_Execute(daLv3Water_c*);
// True False
//  daLv3Water_c* False
// 	 daLv3Water_c False
static void daLv3Water_Delete(daLv3Water_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daLv3Water_Create(fopAc_ac_c*);

// True False
extern "C" void __ct__16daLv3Water_HIO_cFv();
// True False
extern "C" void __dt__14mDoHIO_entry_cFv();
// True False
extern "C" void setBaseMtx__12daLv3Water_cFv();
// True False
extern "C" void CreateHeap__12daLv3Water_cFv();
// True False
extern "C" void create__12daLv3Water_cFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__12daLv3Water_cFPPA3_A4_f();
// True False
extern "C" void effectSet__12daLv3Water_cFv();
// True False
extern "C" void mode_proc_wait__12daLv3Water_cFv();
// True False
extern "C" void mode_init_levelCtrl__12daLv3Water_cFv();
// True False
extern "C" void mode_proc_levelCtrl__12daLv3Water_cFv();
// True False
extern "C" void Draw__12daLv3Water_cFv();
// True False
extern "C" void Delete__12daLv3Water_cFv();
// True False
extern "C" void eventStart__12daLv3Water_cFv();
// True False
//  daLv3Water_c* False
// 	 daLv3Water_c False
extern "C" static void daLv3Water_Draw__FP12daLv3Water_c();
// True False
//  daLv3Water_c* False
// 	 daLv3Water_c False
extern "C" static void daLv3Water_Execute__FP12daLv3Water_c();
// True False
//  daLv3Water_c* False
// 	 daLv3Water_c False
extern "C" static void daLv3Water_Delete__FP12daLv3Water_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daLv3Water_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__16daLv3Water_HIO_cFv();
// False False
extern "C" void __sinit_d_a_obj_lv3Water_cpp();
// True False
extern "C" static void func_80C59D10();
// True False
extern "C" static void func_80C59D18();
// True False
extern "C" void __dt__17dEvLib_callback_cFv();
// True False
//  bool False
extern "C" bool eventStart__17dEvLib_callback_cFv();
// True False
//  bool False
extern "C" bool eventRun__17dEvLib_callback_cFv();
// True False
//  bool False
extern "C" bool eventEnd__17dEvLib_callback_cFv();
// True False
extern "C" void __dt__12daLv3Water_cFv();
extern "C" extern u8 const l_btkIdx[84];
extern "C" extern u8 const l_bmdIdrIdx[84];
extern "C" extern u8 const l_btkIdrIdx[84];
extern "C" extern u32 const lit_4173;
extern "C" extern u8 const lit_4174[4];
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_3830[3];
extern "C" extern void* lit_3831[3];
extern "C" extern void* g_profile_Obj_Lv3Water[12];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__17dEvLib_callback_c[6];
extern "C" extern void* __vt__12daLv3Water_c[18];
extern "C" extern void* __vt__16daLv3Water_HIO_c[3];
extern "C" extern void* __vt__14mDoHIO_entry_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  int False
//  int False
//  u8 False
void fopMsgM_valueIncrease(int, int, u8);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  int False
//  int False
//  u8 False
extern "C" void fopMsgM_valueIncrease__FiiUc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void eventUpdate__17dEvLib_callback_cFv();
// False False
//  int False
//  int False
//  int False
extern "C" void orderEvent__17dEvLib_callback_cFiii();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool Create__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void setEffectMtx__13J3DTexMtxInfoFPA4_f();
// False False
//  u16 False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void simpleCalcMaterial__12J3DModelDataFUsPA4_f();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void C_MTXLightPerspective();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const j3dDefaultMtx[48];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__16dBgS_MoveBgActor[10];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80C59E70-80C59EC4 0054+00 s=2 e=0 z=0  None .rodata    l_bmdIdx                                                     */
SECTION_RODATA static u8 const l_bmdIdx[84] = {
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x05,
};

/* 80C59EC4-80C59F18 0054+00 s=1 e=0 z=0  None .rodata    l_dzbIdx                                                     */
SECTION_RODATA static u8 const l_dzbIdx[84] = {
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0B,
	0x00, 0x00, 0x00, 0x0B,
};

/* 80C59F18-80C59F6C 0054+00 s=0 e=0 z=0  None .rodata    l_btkIdx                                                     */
SECTION_RODATA u8 const l_btkIdx[84] = {
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x08,
};

/* 80C59F6C-80C59FC0 0054+00 s=0 e=0 z=0  None .rodata    l_bmdIdrIdx                                                  */
SECTION_RODATA u8 const l_bmdIdrIdx[84] = {
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80C59FC0-80C5A014 0054+00 s=0 e=0 z=0  None .rodata    l_btkIdrIdx                                                  */
SECTION_RODATA u8 const l_btkIdrIdx[84] = {
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80C5A014-80C5A018 0004+00 s=3 e=0 z=0  None .rodata    @3737                                                        */
SECTION_RODATA static u32 const lit_3737 = 0x3F800000;

/* 80C5A018-80C5A048 002A+06 s=1 e=0 z=0  None .rodata    estimateSizeTbl$3746                                         */
SECTION_RODATA static u8 const estimateSizeTbl[42 + 6 /* padding */] = {
	0x1C, 0xE0, 0x4F, 0x90, 0x1C, 0x80, 0x1C, 0x30, 0x1C, 0x30, 0x1C, 0x30, 0x1C, 0x30, 0x80, 0x00,
	0x27, 0xD0, 0x24, 0x90, 0x1E, 0x60, 0x1C, 0x80, 0x1C, 0x80, 0x1C, 0x80, 0x4F, 0x90, 0x28, 0x80,
	0x29, 0xD0, 0x2B, 0x00, 0x20, 0x40, 0x13, 0x60, 0x13, 0x60,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C5A048-80C5A050 0008+00 s=1 e=0 z=0  None .rodata    @3812                                                        */
SECTION_RODATA static u8 const lit_3812[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80C5A050-80C5A058 0004+04 s=1 e=0 z=0  None .rodata    @4068                                                        */
SECTION_RODATA static u32 const lit_4068[1 + 1 /* padding */] = {
	0xBF800000,
	/* padding */
	0x00000000,
};

/* 80C5A058-80C5A060 0008+00 s=1 e=0 z=0  None .rodata    @4080                                                        */
SECTION_RODATA static u8 const lit_4080[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C5A060-80C5A064 0004+00 s=0 e=0 z=0  None .rodata    @4173                                                        */
SECTION_RODATA u32 const lit_4173 = 0xBC23D70A;

/* 80C5A064-80C5A068 0004+00 s=0 e=0 z=0  None .rodata    @4174                                                        */
SECTION_RODATA u8 const lit_4174[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80C5A068-80C5A07C 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C5A068[20] = {
	/* 80C5A068 000A stringBase_80C5A068 @stringBase0 */
	0x4B, 0x72, 0x31, 0x30, 0x77, 0x61, 0x74, 0x65, 0x72, 0x00,
	/* 80C5A072 000A data_80C5A072 None */
	0x4B, 0x72, 0x31, 0x30, 0x77, 0x61, 0x74, 0x30, 0x31, 0x00,
};

/* 80C5A07C-80C5A090 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C5A07C[20] = {
	/* 80C5A07C 000A data_80C5A07C None */
	0x4B, 0x72, 0x30, 0x32, 0x77, 0x61, 0x74, 0x30, 0x30, 0x00,
	/* 80C5A086 000A data_80C5A086 None */
	0x4B, 0x72, 0x30, 0x33, 0x77, 0x61, 0x74, 0x30, 0x30, 0x00,
};

/* 80C5A090-80C5A0A4 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C5A090[20] = {
	/* 80C5A090 000A data_80C5A090 None */
	0x4B, 0x72, 0x30, 0x33, 0x77, 0x61, 0x74, 0x30, 0x31, 0x00,
	/* 80C5A09A 000A data_80C5A09A None */
	0x4B, 0x72, 0x30, 0x33, 0x77, 0x61, 0x74, 0x30, 0x32, 0x00,
};

/* 80C5A0A4-80C5A0B8 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C5A0A4[20] = {
	/* 80C5A0A4 000A data_80C5A0A4 None */
	0x4B, 0x72, 0x30, 0x33, 0x77, 0x61, 0x74, 0x30, 0x33, 0x00,
	/* 80C5A0AE 000A data_80C5A0AE None */
	0x4B, 0x72, 0x30, 0x33, 0x77, 0x61, 0x74, 0x30, 0x34, 0x00,
};

/* 80C5A0B8-80C5A0CC 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C5A0B8[20] = {
	/* 80C5A0B8 000A data_80C5A0B8 None */
	0x4B, 0x72, 0x30, 0x37, 0x77, 0x61, 0x74, 0x30, 0x30, 0x00,
	/* 80C5A0C2 000A data_80C5A0C2 None */
	0x4B, 0x72, 0x30, 0x38, 0x77, 0x61, 0x74, 0x30, 0x30, 0x00,
};

/* 80C5A0CC-80C5A0E0 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C5A0CC[20] = {
	/* 80C5A0CC 000A data_80C5A0CC None */
	0x4B, 0x72, 0x30, 0x38, 0x77, 0x61, 0x74, 0x30, 0x31, 0x00,
	/* 80C5A0D6 000A data_80C5A0D6 None */
	0x4B, 0x72, 0x30, 0x32, 0x77, 0x61, 0x74, 0x30, 0x31, 0x00,
};

/* 80C5A0E0-80C5A0F4 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C5A0E0[20] = {
	/* 80C5A0E0 000A data_80C5A0E0 None */
	0x4B, 0x72, 0x30, 0x32, 0x77, 0x61, 0x74, 0x30, 0x32, 0x00,
	/* 80C5A0EA 000A data_80C5A0EA None */
	0x4B, 0x72, 0x30, 0x32, 0x77, 0x61, 0x74, 0x30, 0x33, 0x00,
};

/* 80C5A0F4-80C5A108 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C5A0F4[20] = {
	/* 80C5A0F4 000A data_80C5A0F4 None */
	0x4B, 0x72, 0x31, 0x31, 0x77, 0x61, 0x74, 0x30, 0x30, 0x00,
	/* 80C5A0FE 000A data_80C5A0FE None */
	0x4B, 0x72, 0x31, 0x32, 0x77, 0x61, 0x74, 0x30, 0x30, 0x00,
};

/* 80C5A108-80C5A11C 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C5A108[20] = {
	/* 80C5A108 000A data_80C5A108 None */
	0x4B, 0x72, 0x31, 0x33, 0x77, 0x61, 0x74, 0x30, 0x30, 0x00,
	/* 80C5A112 000A data_80C5A112 None */
	0x4B, 0x72, 0x31, 0x33, 0x77, 0x61, 0x74, 0x30, 0x31, 0x00,
};

/* 80C5A11C-80C5A130 0014+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80C5A11C[20] = {
	/* 80C5A11C 000A data_80C5A11C None */
	0x4B, 0x72, 0x31, 0x33, 0x77, 0x61, 0x74, 0x30, 0x32, 0x00,
	/* 80C5A126 000A data_80C5A126 None */
	0x4B, 0x72, 0x30, 0x33, 0x77, 0x61, 0x74, 0x30, 0x35, 0x00,
};

/* 80C5A130-80C5A13C 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const data_80C5A130[12] = {
	0x4B, 0x72, 0x30, 0x33, 0x77, 0x61, 0x74, 0x30, 0x36, 0x00, 0x00, 0x00,
};

/* 80C5A13C-80C5A148 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C5A148-80C5A15C 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80C5A15C-80C5A1B0 0054+00 s=3 e=0 z=0  None .data      l_resNameIdx                                                 */
SECTION_DATA static void* l_resNameIdx[21] = {
	(void*)(((char*)&struct_80C5A068)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80C5A068)+0xA) /* None */,
	(void*)(((char*)&struct_80C5A07C)+0x0) /* None */,
	(void*)(((char*)&struct_80C5A07C)+0xA) /* None */,
	(void*)(((char*)&struct_80C5A090)+0x0) /* None */,
	(void*)(((char*)&struct_80C5A090)+0xA) /* None */,
	(void*)(((char*)&struct_80C5A0A4)+0x0) /* None */,
	(void*)(((char*)&struct_80C5A0A4)+0xA) /* None */,
	(void*)(((char*)&struct_80C5A0B8)+0x0) /* None */,
	(void*)(((char*)&struct_80C5A0B8)+0xA) /* None */,
	(void*)(((char*)&struct_80C5A0CC)+0x0) /* None */,
	(void*)(((char*)&struct_80C5A0CC)+0xA) /* None */,
	(void*)(((char*)&struct_80C5A0E0)+0x0) /* None */,
	(void*)(((char*)&struct_80C5A0E0)+0xA) /* None */,
	(void*)(((char*)&struct_80C5A0F4)+0x0) /* None */,
	(void*)(((char*)&struct_80C5A0F4)+0xA) /* None */,
	(void*)(((char*)&struct_80C5A108)+0x0) /* None */,
	(void*)(((char*)&struct_80C5A108)+0xA) /* None */,
	(void*)(((char*)&struct_80C5A11C)+0x0) /* None */,
	(void*)(((char*)&struct_80C5A11C)+0xA) /* None */,
	(void*)&data_80C5A130,
};

/* 80C5A1B0-80C5A1BC 000C+00 s=0 e=0 z=0  None .data      @3830                                                        */
SECTION_DATA void* lit_3830[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)mode_proc_wait__12daLv3Water_cFv,
};

/* 80C5A1BC-80C5A1C8 000C+00 s=0 e=0 z=0  None .data      @3831                                                        */
SECTION_DATA void* lit_3831[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)mode_proc_levelCtrl__12daLv3Water_cFv,
};

/* 80C5A1C8-80C5A1E0 0018+00 s=1 e=0 z=0  None .data      l_mode_func                                                  */
SECTION_DATA static u8 l_mode_func[24] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C5A1E0-80C5A228 0048+00 s=1 e=0 z=0  None .data      @4043                                                        */
SECTION_DATA static void* lit_4043[18] = {
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x290),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x3C),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x118),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x474),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x8BC),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x778),
	(void*)(((char*)effectSet__12daLv3Water_cFv)+0x600),
};

/* 80C5A228-80C5A248 0020+00 s=1 e=0 z=0  None .data      l_daLv3Water_Method                                          */
SECTION_DATA static void* l_daLv3Water_Method[8] = {
	(void*)daLv3Water_Create__FP10fopAc_ac_c,
	(void*)daLv3Water_Delete__FP12daLv3Water_c,
	(void*)daLv3Water_Execute__FP12daLv3Water_c,
	(void*)NULL,
	(void*)daLv3Water_Draw__FP12daLv3Water_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80C5A248-80C5A278 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Lv3Water                                       */
SECTION_DATA void* g_profile_Obj_Lv3Water[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00D50000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000628,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02680000,
	(void*)&l_daLv3Water_Method,
	(void*)0x00044000,
	(void*)0x000E0000,
};

/* 80C5A278-80C5A284 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80C5A284-80C5A29C 0018+00 s=3 e=0 z=0  None .data      __vt__17dEvLib_callback_c                                    */
SECTION_DATA void* __vt__17dEvLib_callback_c[6] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__17dEvLib_callback_cFv,
	(void*)eventStart__17dEvLib_callback_cFv,
	(void*)eventRun__17dEvLib_callback_cFv,
	(void*)eventEnd__17dEvLib_callback_cFv,
};

/* 80C5A29C-80C5A2E4 0048+00 s=2 e=0 z=0  None .data      __vt__12daLv3Water_c                                         */
SECTION_DATA void* __vt__12daLv3Water_c[18] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__12daLv3Water_cFv,
	(void*)Create__16dBgS_MoveBgActorFv,
	(void*)Execute__12daLv3Water_cFPPA3_A4_f,
	(void*)Draw__12daLv3Water_cFv,
	(void*)Delete__12daLv3Water_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C59D18,
	(void*)func_80C59D10,
	(void*)eventRun__17dEvLib_callback_cFv,
	(void*)eventEnd__17dEvLib_callback_cFv,
	(void*)__dt__12daLv3Water_cFv,
	(void*)eventStart__12daLv3Water_cFv,
};

/* 80C5A2E4-80C5A2F0 000C+00 s=2 e=0 z=0  None .data      __vt__16daLv3Water_HIO_c                                     */
SECTION_DATA void* __vt__16daLv3Water_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__16daLv3Water_HIO_cFv,
};

/* 80C5A2F0-80C5A2FC 000C+00 s=3 e=0 z=0  None .data      __vt__14mDoHIO_entry_c                                       */
SECTION_DATA void* __vt__14mDoHIO_entry_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14mDoHIO_entry_cFv,
};

/* 80C587CC-80C587F0 0024+00 s=1 e=0 z=0  None .text      __ct__16daLv3Water_HIO_cFv                                   */
//	80C587CC: 80C5A2F0 (__vt__14mDoHIO_entry_c)
//	80C587D0: 80C5A2F0 (__vt__14mDoHIO_entry_c)
//	80C587D8: 80C5A2E4 (__vt__16daLv3Water_HIO_c)
//	80C587DC: 80C5A2E4 (__vt__16daLv3Water_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daLv3Water_HIO_c::daLv3Water_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/__ct__16daLv3Water_HIO_cFv.s"
}
#pragma pop


/* 80C587F0-80C58838 0048+00 s=1 e=0 z=0  None .text      __dt__14mDoHIO_entry_cFv                                     */
//	80C58808: 80C5A2F0 (__vt__14mDoHIO_entry_c)
//	80C5880C: 80C5A2F0 (__vt__14mDoHIO_entry_c)
//	80C5881C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm mDoHIO_entry_c::~mDoHIO_entry_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/__dt__14mDoHIO_entry_cFv.s"
}
#pragma pop


/* 80C58838-80C5891C 00E4+00 s=2 e=0 z=0  None .text      setBaseMtx__12daLv3Water_cFv                                 */
//	80C58858: 803DD470 (now__14mDoMtx_stack_c)
//	80C5885C: 803DD470 (now__14mDoMtx_stack_c)
//	80C5886C: 803468E8 (PSMTXTrans)
//	80C58870: 803DD470 (now__14mDoMtx_stack_c)
//	80C58874: 803DD470 (now__14mDoMtx_stack_c)
//	80C5887C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C5889C: 803DD470 (now__14mDoMtx_stack_c)
//	80C588A0: 803DD470 (now__14mDoMtx_stack_c)
//	80C588AC: 803464B0 (PSMTXCopy)
//	80C588B0: 803DD470 (now__14mDoMtx_stack_c)
//	80C588B4: 803DD470 (now__14mDoMtx_stack_c)
//	80C588C4: 803468E8 (PSMTXTrans)
//	80C588C8: 803DD470 (now__14mDoMtx_stack_c)
//	80C588CC: 803DD470 (now__14mDoMtx_stack_c)
//	80C588D4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C588F4: 803DD470 (now__14mDoMtx_stack_c)
//	80C588F8: 803DD470 (now__14mDoMtx_stack_c)
//	80C58904: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daLv3Water_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/setBaseMtx__12daLv3Water_cFv.s"
}
#pragma pop


/* 80C5891C-80C58ABC 01A0+00 s=1 e=0 z=0  None .text      CreateHeap__12daLv3Water_cFv                                 */
//	80C5892C: 803621D8 (_savegpr_28)
//	80C58934: 80C59E70 (l_bmdIdx)
//	80C58938: 80C59E70 (l_bmdIdx)
//	80C58944: 80C5A15C (l_resNameIdx)
//	80C58948: 80C5A15C (l_resNameIdx)
//	80C58958: 804061C0 (g_dComIfG_gameInfo)
//	80C5895C: 804061C0 (g_dComIfG_gameInfo)
//	80C58970: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C58984: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80C589A8: 80C5A15C (l_resNameIdx)
//	80C589AC: 80C5A15C (l_resNameIdx)
//	80C589C4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C589E8: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80C58A04: 80C5A15C (l_resNameIdx)
//	80C58A08: 80C5A15C (l_resNameIdx)
//	80C58A18: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C58A2C: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80C58A50: 80C5A15C (l_resNameIdx)
//	80C58A54: 80C5A15C (l_resNameIdx)
//	80C58A6C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C58A90: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80C58AA8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daLv3Water_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/CreateHeap__12daLv3Water_cFv.s"
}
#pragma pop


/* 80C58ABC-80C58D20 0264+00 s=1 e=0 z=0  None .text      create__12daLv3Water_cFv                                     */
//	80C58ACC: 803621DC (_savegpr_29)
//	80C58AEC: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80C58AF0: 80C5A284 (__vt__17dEvLib_callback_c)
//	80C58AF4: 80C5A284 (__vt__17dEvLib_callback_c)
//	80C58B08: 80C5A29C (__vt__12daLv3Water_c)
//	80C58B0C: 80C5A29C (__vt__12daLv3Water_c)
//	80C58B20: 80C5A278 (__vt__12J3DFrameCtrl)
//	80C58B24: 80C5A278 (__vt__12J3DFrameCtrl)
//	80C58B34: 803283FC (init__12J3DFrameCtrlFs)
//	80C58B44: 80C5A278 (__vt__12J3DFrameCtrl)
//	80C58B48: 80C5A278 (__vt__12J3DFrameCtrl)
//	80C58B58: 803283FC (init__12J3DFrameCtrlFs)
//	80C58B88: 80C5A15C (l_resNameIdx)
//	80C58B8C: 80C5A15C (l_resNameIdx)
//	80C58B94: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80C58BB0: 80C5A15C (l_resNameIdx)
//	80C58BB4: 80C5A15C (l_resNameIdx)
//	80C58BBC: 80C59EC4 (l_dzbIdx)
//	80C58BC0: 80C59EC4 (l_dzbIdx)
//	80C58BD0: 80C5A018 (estimateSizeTbl)
//	80C58BD4: 80C5A018 (estimateSizeTbl)
//	80C58BE0: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80C58BFC: 80C5A048 (lit_3812)
//	80C58C00: 80C5A048 (lit_3812)
//	80C58C28: 804061C0 (g_dComIfG_gameInfo)
//	80C58C2C: 804061C0 (g_dComIfG_gameInfo)
//	80C58C38: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C58C94: 804061C0 (g_dComIfG_gameInfo)
//	80C58C98: 804061C0 (g_dComIfG_gameInfo)
//	80C58CA0: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80C58CF8: 80C58838 (setBaseMtx__12daLv3Water_cFv)
//	80C58D0C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daLv3Water_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/create__12daLv3Water_cFv.s"
}
#pragma pop


/* 80C58D20-80C58D68 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80C58D38: 80C5A278 (__vt__12J3DFrameCtrl)
//	80C58D3C: 80C5A278 (__vt__12J3DFrameCtrl)
//	80C58D4C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80C58D68-80C58E20 00B8+00 s=1 e=0 z=0  None .text      Execute__12daLv3Water_cFPPA3_A4_f                            */
//	80C58D88: 8000D428 (play__14mDoExt_baseAnmFv)
//	80C58D9C: 8000D428 (play__14mDoExt_baseAnmFv)
//	80C58DA4: 8004886C (eventUpdate__17dEvLib_callback_cFv)
//	80C58DB0: 804061C0 (g_dComIfG_gameInfo)
//	80C58DB4: 804061C0 (g_dComIfG_gameInfo)
//	80C58DC0: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C58DD4: 80C5A1C8 (l_mode_func)
//	80C58DD8: 80C5A1C8 (l_mode_func)
//	80C58DE0: 80362084 (__ptmf_scall)
//	80C58DEC: 80C58E20 (effectSet__12daLv3Water_cFv)
//	80C58E00: 80C58838 (setBaseMtx__12daLv3Water_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daLv3Water_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/Execute__12daLv3Water_cFPPA3_A4_f.s"
}
#pragma pop


/* 80C58E20-80C596F4 08D4+00 s=2 e=0 z=0  None .text      effectSet__12daLv3Water_cFv                                  */
//	80C58E44: 80C5A1E0 (lit_4043)
//	80C58E48: 80C5A1E0 (lit_4043)
//	80C58E5C: 804061C0 (g_dComIfG_gameInfo)
//	80C58E60: 804061C0 (g_dComIfG_gameInfo)
//	80C58E70: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C58E7C: 804061C0 (g_dComIfG_gameInfo)
//	80C58E80: 804061C0 (g_dComIfG_gameInfo)
//	80C58ECC: 80C5A014 (lit_3737)
//	80C58ED0: 80C5A014 (lit_3737)
//	80C58ED4: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C58F24: 80C5A014 (lit_3737)
//	80C58F28: 80C5A014 (lit_3737)
//	80C58F2C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C58F44: 804061C0 (g_dComIfG_gameInfo)
//	80C58F48: 804061C0 (g_dComIfG_gameInfo)
//	80C58F94: 80C5A014 (lit_3737)
//	80C58F98: 80C5A014 (lit_3737)
//	80C58F9C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C58FEC: 80C5A014 (lit_3737)
//	80C58FF0: 80C5A014 (lit_3737)
//	80C58FF4: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C59044: 80C5A014 (lit_3737)
//	80C59048: 80C5A014 (lit_3737)
//	80C5904C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C5909C: 80C5A014 (lit_3737)
//	80C590A0: 80C5A014 (lit_3737)
//	80C590A4: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C590B0: 804061C0 (g_dComIfG_gameInfo)
//	80C590B4: 804061C0 (g_dComIfG_gameInfo)
//	80C590C4: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C590D0: 804061C0 (g_dComIfG_gameInfo)
//	80C590D4: 804061C0 (g_dComIfG_gameInfo)
//	80C59120: 80C5A014 (lit_3737)
//	80C59124: 80C5A014 (lit_3737)
//	80C59128: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C59178: 80C5A014 (lit_3737)
//	80C5917C: 80C5A014 (lit_3737)
//	80C59180: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C591D0: 80C5A014 (lit_3737)
//	80C591D4: 80C5A014 (lit_3737)
//	80C591D8: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C59228: 80C5A014 (lit_3737)
//	80C5922C: 80C5A014 (lit_3737)
//	80C59230: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C59280: 80C5A014 (lit_3737)
//	80C59284: 80C5A014 (lit_3737)
//	80C59288: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C59294: 804061C0 (g_dComIfG_gameInfo)
//	80C59298: 804061C0 (g_dComIfG_gameInfo)
//	80C592A8: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C592B4: 804061C0 (g_dComIfG_gameInfo)
//	80C592B8: 804061C0 (g_dComIfG_gameInfo)
//	80C59304: 80C5A014 (lit_3737)
//	80C59308: 80C5A014 (lit_3737)
//	80C5930C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C5935C: 80C5A014 (lit_3737)
//	80C59360: 80C5A014 (lit_3737)
//	80C59364: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C593B4: 80C5A014 (lit_3737)
//	80C593B8: 80C5A014 (lit_3737)
//	80C593BC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C5940C: 80C5A014 (lit_3737)
//	80C59410: 80C5A014 (lit_3737)
//	80C59414: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C5942C: 804061C0 (g_dComIfG_gameInfo)
//	80C59430: 804061C0 (g_dComIfG_gameInfo)
//	80C5947C: 80C5A014 (lit_3737)
//	80C59480: 80C5A014 (lit_3737)
//	80C59484: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C594D4: 80C5A014 (lit_3737)
//	80C594D8: 80C5A014 (lit_3737)
//	80C594DC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C5952C: 80C5A014 (lit_3737)
//	80C59530: 80C5A014 (lit_3737)
//	80C59534: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C59584: 80C5A014 (lit_3737)
//	80C59588: 80C5A014 (lit_3737)
//	80C5958C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C595A4: 804061C0 (g_dComIfG_gameInfo)
//	80C595A8: 804061C0 (g_dComIfG_gameInfo)
//	80C595F4: 80C5A014 (lit_3737)
//	80C595F8: 80C5A014 (lit_3737)
//	80C595FC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C5964C: 80C5A014 (lit_3737)
//	80C59650: 80C5A014 (lit_3737)
//	80C59654: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C5965C: 804061C0 (g_dComIfG_gameInfo)
//	80C59660: 804061C0 (g_dComIfG_gameInfo)
//	80C59670: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C5967C: 804061C0 (g_dComIfG_gameInfo)
//	80C59680: 804061C0 (g_dComIfG_gameInfo)
//	80C596CC: 80C5A014 (lit_3737)
//	80C596D0: 80C5A014 (lit_3737)
//	80C596D4: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daLv3Water_c::effectSet() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/effectSet__12daLv3Water_cFv.s"
}
#pragma pop


/* 80C596F4-80C59754 0060+00 s=1 e=0 z=0  None .text      mode_proc_wait__12daLv3Water_cFv                             */
//	80C5972C: 80048940 (orderEvent__17dEvLib_callback_cFiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daLv3Water_c::mode_proc_wait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/mode_proc_wait__12daLv3Water_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C5A308-80C5A314 000C+00 s=1 e=0 z=0  None .bss       @3657                                                        */
static u8 lit_3657[12];

/* 80C5A314-80C5A31C 0008+00 s=2 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[8];

/* 80C59754-80C597FC 00A8+00 s=1 e=0 z=0  None .text      mode_init_levelCtrl__12daLv3Water_cFv                        */
//	80C59770: 80C5A314 (l_HIO)
//	80C59774: 80C5A314 (l_HIO)
//	80C59794: 8002D06C (dComIfGp_getReverb__Fi)
//	80C597A8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C597AC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80C597C0: 80C5A014 (lit_3737)
//	80C597C4: 80C5A014 (lit_3737)
//	80C597CC: 80C5A050 (lit_4068)
//	80C597D0: 80C5A050 (lit_4068)
//	80C597DC: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daLv3Water_c::mode_init_levelCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/mode_init_levelCtrl__12daLv3Water_cFv.s"
}
#pragma pop


/* 80C597FC-80C598BC 00C0+00 s=1 e=0 z=0  None .text      mode_proc_levelCtrl__12daLv3Water_cFv                        */
//	80C59834: 80020160 (fopMsgM_valueIncrease__FiiUc)
//	80C59844: 80C5A014 (lit_3737)
//	80C59848: 80C5A014 (lit_3737)
//	80C59870: 80C5A058 (lit_4080)
//	80C59874: 80C5A058 (lit_4080)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daLv3Water_c::mode_proc_levelCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/mode_proc_levelCtrl__12daLv3Water_cFv.s"
}
#pragma pop


/* 80C598BC-80C59AA0 01E4+00 s=1 e=0 z=0  None .text      Draw__12daLv3Water_cFv                                       */
//	80C598CC: 803621CC (_savegpr_25)
//	80C598D4: 80C59E70 (l_bmdIdx)
//	80C598D8: 80C59E70 (l_bmdIdx)
//	80C598F0: 8042CA54 (g_env_light)
//	80C598F4: 8042CA54 (g_env_light)
//	80C59904: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80C59908: 8042CA54 (g_env_light)
//	80C5990C: 8042CA54 (g_env_light)
//	80C5991C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C5992C: 8042CA54 (g_env_light)
//	80C59930: 8042CA54 (g_env_light)
//	80C5993C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C59954: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80C59974: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80C59978: 804061C0 (g_dComIfG_gameInfo)
//	80C5997C: 804061C0 (g_dComIfG_gameInfo)
//	80C59984: 80434AC8 (j3dSys)
//	80C59988: 80434AC8 (j3dSys)
//	80C59994: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80C59998: 804061C0 (g_dComIfG_gameInfo)
//	80C5999C: 804061C0 (g_dComIfG_gameInfo)
//	80C599A4: 80434AC8 (j3dSys)
//	80C599A8: 80434AC8 (j3dSys)
//	80C59A20: 804061C0 (g_dComIfG_gameInfo)
//	80C59A24: 804061C0 (g_dComIfG_gameInfo)
//	80C59A48: 80346C18 (C_MTXLightPerspective)
//	80C59A54: 80325794 (setEffectMtx__13J3DTexMtxInfoFPA4_f)
//	80C59A60: 803A1E5C (j3dDefaultMtx)
//	80C59A64: 803A1E5C (j3dDefaultMtx)
//	80C59A68: 8032600C (simpleCalcMaterial__12J3DModelDataFUsPA4_f)
//	80C59A70: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80C59A8C: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daLv3Water_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/Draw__12daLv3Water_cFv.s"
}
#pragma pop


/* 80C59AA0-80C59AE0 0040+00 s=1 e=0 z=0  None .text      Delete__12daLv3Water_cFv                                     */
//	80C59ABC: 80C5A15C (l_resNameIdx)
//	80C59AC0: 80C5A15C (l_resNameIdx)
//	80C59AC8: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daLv3Water_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/Delete__12daLv3Water_cFv.s"
}
#pragma pop


/* 80C59AE0-80C59BA8 00C8+00 s=2 e=0 z=0  None .text      eventStart__12daLv3Water_cFv                                 */
//	80C59B48: 804061C0 (g_dComIfG_gameInfo)
//	80C59B4C: 804061C0 (g_dComIfG_gameInfo)
//	80C59B58: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80C59B8C: 80C59754 (mode_init_levelCtrl__12daLv3Water_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daLv3Water_c::eventStart() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/eventStart__12daLv3Water_cFv.s"
}
#pragma pop


/* 80C59BA8-80C59BD4 002C+00 s=1 e=0 z=0  None .text      daLv3Water_Draw__FP12daLv3Water_c                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daLv3Water_c* False
// 	 daLv3Water_c False
asm static void daLv3Water_Draw(daLv3Water_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/daLv3Water_Draw__FP12daLv3Water_c.s"
}
#pragma pop


/* 80C59BD4-80C59BF4 0020+00 s=1 e=0 z=0  None .text      daLv3Water_Execute__FP12daLv3Water_c                         */
//	80C59BE0: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daLv3Water_c* False
// 	 daLv3Water_c False
asm static void daLv3Water_Execute(daLv3Water_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/daLv3Water_Execute__FP12daLv3Water_c.s"
}
#pragma pop


/* 80C59BF4-80C59C14 0020+00 s=1 e=0 z=0  None .text      daLv3Water_Delete__FP12daLv3Water_c                          */
//	80C59C00: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daLv3Water_c* False
// 	 daLv3Water_c False
asm static void daLv3Water_Delete(daLv3Water_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/daLv3Water_Delete__FP12daLv3Water_c.s"
}
#pragma pop


/* 80C59C14-80C59C34 0020+00 s=1 e=0 z=0  None .text      daLv3Water_Create__FP10fopAc_ac_c                            */
//	80C59C20: 80C58ABC (create__12daLv3Water_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daLv3Water_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/daLv3Water_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80C59C34-80C59C90 005C+00 s=2 e=0 z=0  None .text      __dt__16daLv3Water_HIO_cFv                                   */
//	80C59C4C: 80C5A2E4 (__vt__16daLv3Water_HIO_c)
//	80C59C50: 80C5A2E4 (__vt__16daLv3Water_HIO_c)
//	80C59C5C: 80C5A2F0 (__vt__14mDoHIO_entry_c)
//	80C59C60: 80C5A2F0 (__vt__14mDoHIO_entry_c)
//	80C59C74: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daLv3Water_HIO_c::~daLv3Water_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/__dt__16daLv3Water_HIO_cFv.s"
}
#pragma pop


/* 80C59C90-80C59D10 0080+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_lv3Water_cpp                                 */
//	80C59CA0: 80C5A13C (cNullVec__6Z2Calc)
//	80C59CA4: 80C5A13C (cNullVec__6Z2Calc)
//	80C59CA8: 80C5A314 (l_HIO)
//	80C59CAC: 80C5A314 (l_HIO)
//	80C59CB0: 80C587CC (__ct__16daLv3Water_HIO_cFv)
//	80C59CB4: 80C59C34 (__dt__16daLv3Water_HIO_cFv)
//	80C59CB8: 80C59C34 (__dt__16daLv3Water_HIO_cFv)
//	80C59CBC: 80C5A308 (lit_3657)
//	80C59CC0: 80C5A308 (lit_3657)
//	80C59CC4: 80C58758 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_lv3Water_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/__sinit_d_a_obj_lv3Water_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80C59C90 = (void*)__sinit_d_a_obj_lv3Water_cpp;
#pragma pop


/* 80C59D10-80C59D18 0008+00 s=1 e=0 z=0  None .text      @1448@eventStart__12daLv3Water_cFv                           */
//	80C59D14: 80C59AE0 (eventStart__12daLv3Water_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C59D10() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/func_80C59D10.s"
}
#pragma pop


/* 80C59D18-80C59D20 0008+00 s=1 e=0 z=0  None .text      @1448@__dt__12daLv3Water_cFv                                 */
//	80C59D1C: 80C59D80 (__dt__12daLv3Water_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C59D18() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/func_80C59D18.s"
}
#pragma pop


/* 80C59D20-80C59D68 0048+00 s=1 e=0 z=0  None .text      __dt__17dEvLib_callback_cFv                                  */
//	80C59D38: 80C5A284 (__vt__17dEvLib_callback_c)
//	80C59D3C: 80C5A284 (__vt__17dEvLib_callback_c)
//	80C59D4C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dEvLib_callback_c::~dEvLib_callback_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/__dt__17dEvLib_callback_cFv.s"
}
#pragma pop


/* 80C59D68-80C59D70 0008+00 s=1 e=0 z=0  None .text      eventStart__17dEvLib_callback_cFv                            */
// True False
//  bool False
bool dEvLib_callback_c::eventStart() {
	return true;
}


/* 80C59D70-80C59D78 0008+00 s=2 e=0 z=0  None .text      eventRun__17dEvLib_callback_cFv                              */
// True False
//  bool False
bool dEvLib_callback_c::eventRun() {
	return true;
}


/* 80C59D78-80C59D80 0008+00 s=2 e=0 z=0  None .text      eventEnd__17dEvLib_callback_cFv                              */
// True False
//  bool False
bool dEvLib_callback_c::eventEnd() {
	return true;
}


/* 80C59D80-80C59E5C 00DC+00 s=2 e=0 z=0  None .text      __dt__12daLv3Water_cFv                                       */
//	80C59DA0: 80C5A29C (__vt__12daLv3Water_c)
//	80C59DA4: 80C5A29C (__vt__12daLv3Water_c)
//	80C59DCC: 80C5A278 (__vt__12J3DFrameCtrl)
//	80C59DD0: 80C5A278 (__vt__12J3DFrameCtrl)
//	80C59DF0: 80C5A278 (__vt__12J3DFrameCtrl)
//	80C59DF4: 80C5A278 (__vt__12J3DFrameCtrl)
//	80C59E04: 80C5A284 (__vt__17dEvLib_callback_c)
//	80C59E08: 80C5A284 (__vt__17dEvLib_callback_c)
//	80C59E18: 803AB9A0 (__vt__16dBgS_MoveBgActor)
//	80C59E1C: 803AB9A0 (__vt__16dBgS_MoveBgActor)
//	80C59E2C: 80018C8C (__dt__10fopAc_ac_cFv)
//	80C59E3C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daLv3Water_c::~daLv3Water_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3Water/d_a_obj_lv3Water/__dt__12daLv3Water_cFv.s"
}
#pragma pop


