// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_bhbridge
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct fopAc_ac_c {
};

struct fopAcM_wt_c {
	/* 8001DD84 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void waterCheck(cXyz const*);
};

struct daObjBhbridge_c {
	/* 80BB5318 */ // True False
//  s16& False
// 	 s16 False
//  f32 False
//  s16 False
//  f32 False
void RideOn_Angle(s16&, f32, s16, f32);
	/* 80BB5380 */ // True False
void Check_RideOn();
	/* 80BB558C */ // True False
void initBaseMtx();
	/* 80BB55B8 */ // True False
void setBaseMtx();
	/* 80BB5934 */ // True False
void CreateHeap();
	/* 80BB59AC */ // True False
void Create();
	/* 80BB5A14 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80BB5E10 */ // True False
void Draw();
	/* 80BB5EB4 */ // True False
void Delete();
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C37C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, char const*, dRes_info_c*, int);
	/* 8003C6B8 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
void getObjectResName2Index(char const*, char const*);
};

struct dBgW {
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjGndChk_Spl {
	/* 800777B0 */ // False False
dBgS_ObjGndChk_Spl();
	/* 80077848 */ // False False
~dBgS_ObjGndChk_Spl();
};

struct dBgS_ObjAcch {
	/* 80BB58C4 */ // True False
~dBgS_ObjAcch();
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cBgS_GndChk {
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
};

struct cBgS {
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void rideCallBack(dBgW*, fopAc_ac_c*, fopAc_ac_c*);
// True False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
static void daObjBhbridge_Draw(daObjBhbridge_c*);
// True False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
static void daObjBhbridge_Execute(daObjBhbridge_c*);
// True False
//  bool False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
static bool daObjBhbridge_IsDelete(daObjBhbridge_c*);
// True False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
static void daObjBhbridge_Delete(daObjBhbridge_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjBhbridge_Create(fopAc_ac_c*);

// True False
//  s16& False
// 	 s16 False
//  f32 False
//  s16 False
//  f32 False
extern "C" void RideOn_Angle__15daObjBhbridge_cFRsfsf();
// True False
extern "C" void Check_RideOn__15daObjBhbridge_cFv();
// True False
extern "C" void initBaseMtx__15daObjBhbridge_cFv();
// True False
extern "C" void setBaseMtx__15daObjBhbridge_cFv();
// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c();
// True False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
extern "C" static void daObjBhbridge_Draw__FP15daObjBhbridge_c();
// True False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
extern "C" static void daObjBhbridge_Execute__FP15daObjBhbridge_c();
// True False
//  bool False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
extern "C" static bool daObjBhbridge_IsDelete__FP15daObjBhbridge_c();
// True False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
extern "C" static void daObjBhbridge_Delete__FP15daObjBhbridge_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjBhbridge_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void CreateHeap__15daObjBhbridge_cFv();
// True False
extern "C" void Create__15daObjBhbridge_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__15daObjBhbridge_cFPPA3_A4_f();
// True False
extern "C" void Draw__15daObjBhbridge_cFv();
// True False
extern "C" void Delete__15daObjBhbridge_cFv();
// True False
extern "C" static void func_80BB5EE8();
// True False
extern "C" static void func_80BB5EF0();
extern "C" extern u8 const lit_3703[4 + 4 /* padding */];
extern "C" extern u8 const lit_3704[8];
extern "C" extern u8 const lit_3705[8];
extern "C" extern u8 const lit_3706[8];
extern "C" extern u32 const lit_3707;
extern "C" extern u32 const lit_3708;
extern "C" extern u32 const lit_3709;
extern "C" extern u32 const lit_3833;
extern "C" extern u32 const lit_3834;
extern "C" extern u32 const lit_3853;
extern "C" extern u32 const lit_3854;
extern "C" extern u32 const lit_3855;
extern "C" extern u32 const lit_3856;
extern "C" extern u32 const lit_3857;
extern "C" extern u32 const lit_3891;
extern "C" extern u32 const lit_3892;
extern "C" extern u32 const lit_3893;
extern "C" extern u32 const lit_3894;
extern "C" extern u32 const lit_3895;
extern "C" extern u32 const lit_3896;
extern "C" extern u32 const lit_3897;
extern "C" extern u32 const lit_3898;
extern "C" extern u32 const lit_3899;
extern "C" extern u32 const lit_3900;
extern "C" extern u32 const lit_3901;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_Bhbridge[12];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__15daObjBhbridge_c[10];

// 
// External References:
// 

// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc(f32*, f32, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void waterCheck__11fopAcM_wt_cFPC4cXyz();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getObjectResName2Index__14dRes_control_cFPCcPCc();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __dt__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc__FPfffff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mWaterY__11fopAcM_wt_c[1 + 1 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80BB5F00-80BB5F08 0008+00 s=5 e=0 z=0  None .rodata    @3655                                                        */
SECTION_RODATA static u8 const lit_3655[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80BB5318-80BB5380 0068+00 s=1 e=0 z=0  None .text      RideOn_Angle__15daObjBhbridge_cFRsfsf                        */
//	80BB532C: 80BB5F00 (lit_3655)
//	80BB5330: 80BB5F00 (lit_3655)
//	80BB536C: 80270540 (cLib_addCalcAngleS__FPsssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s16& False
// 	 s16 False
//  f32 False
//  s16 False
//  f32 False
asm void daObjBhbridge_c::RideOn_Angle(s16& param_0, f32 param_1, s16 param_2, f32 param_3) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/RideOn_Angle__15daObjBhbridge_cFRsfsf.s"
}
#pragma pop


/* 80BB5380-80BB558C 020C+00 s=1 e=0 z=0  None .text      Check_RideOn__15daObjBhbridge_cFv                            */
//	80BB53A0: 803621D0 (_savegpr_26)
//	80BB53A8: 80BB5F00 (lit_3655)
//	80BB53AC: 80BB5F00 (lit_3655)
//	80BB53B0: 804061C0 (g_dComIfG_gameInfo)
//	80BB53B4: 804061C0 (g_dComIfG_gameInfo)
//	80BB53D4: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80BB53E4: 8034739C (PSVECSquareDistance)
//	80BB5454: 80450AE0 (__float_nan)
//	80BB5458: 80450AE0 (__float_nan)
//	80BB54C4: 80450AE0 (__float_nan)
//	80BB54C8: 80450AE0 (__float_nan)
//	80BB54CC: 80439A20 (sincosTable___5JMath)
//	80BB54D0: 80439A20 (sincosTable___5JMath)
//	80BB5500: 80BB5318 (RideOn_Angle__15daObjBhbridge_cFRsfsf)
//	80BB555C: 8026F97C (cLib_addCalc__FPfffff)
//	80BB5578: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBhbridge_c::Check_RideOn() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/Check_RideOn__15daObjBhbridge_cFv.s"
}
#pragma pop


/* 80BB558C-80BB55B8 002C+00 s=1 e=0 z=0  None .text      initBaseMtx__15daObjBhbridge_cFv                             */
//	80BB55A4: 80BB55B8 (setBaseMtx__15daObjBhbridge_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBhbridge_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/initBaseMtx__15daObjBhbridge_cFv.s"
}
#pragma pop


/* 80BB55B8-80BB5614 005C+00 s=2 e=0 z=0  None .text      setBaseMtx__15daObjBhbridge_cFv                              */
//	80BB55D0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BB55D8: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80BB55DC: 803DD470 (now__14mDoMtx_stack_c)
//	80BB55E0: 803DD470 (now__14mDoMtx_stack_c)
//	80BB55EC: 803464B0 (PSMTXCopy)
//	80BB55F0: 803DD470 (now__14mDoMtx_stack_c)
//	80BB55F4: 803DD470 (now__14mDoMtx_stack_c)
//	80BB55FC: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBhbridge_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/setBaseMtx__15daObjBhbridge_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BB5F08-80BB5F10 0004+04 s=0 e=0 z=0  None .rodata    @3703                                                        */
SECTION_RODATA u8 const lit_3703[4 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 80BB5F10-80BB5F18 0008+00 s=0 e=0 z=0  None .rodata    @3704                                                        */
SECTION_RODATA u8 const lit_3704[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BB5F18-80BB5F20 0008+00 s=0 e=0 z=0  None .rodata    @3705                                                        */
SECTION_RODATA u8 const lit_3705[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BB5F20-80BB5F28 0008+00 s=0 e=0 z=0  None .rodata    @3706                                                        */
SECTION_RODATA u8 const lit_3706[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BB5F28-80BB5F2C 0004+00 s=0 e=0 z=0  None .rodata    @3707                                                        */
SECTION_RODATA u32 const lit_3707 = 0x43340000;

/* 80BB5F2C-80BB5F30 0004+00 s=0 e=0 z=0  None .rodata    @3708                                                        */
SECTION_RODATA u32 const lit_3708 = 0x3D4CCCCD;

/* 80BB5F30-80BB5F34 0004+00 s=0 e=0 z=0  None .rodata    @3709                                                        */
SECTION_RODATA u32 const lit_3709 = 0x42C80000;

/* 80BB5F34-80BB5F38 0004+00 s=1 e=0 z=0  None .rodata    @3758                                                        */
SECTION_RODATA static u32 const lit_3758 = 0xBF800000;

/* 80BB5F38-80BB5F3C 0004+00 s=1 e=0 z=0  None .rodata    @3759                                                        */
SECTION_RODATA static u32 const lit_3759 = 0xC0C00000;

/* 80BB5614-80BB5678 0064+00 s=1 e=0 z=0  None .text      rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c              */
//	80BB5620: 804061C0 (g_dComIfG_gameInfo)
//	80BB5624: 804061C0 (g_dComIfG_gameInfo)
//	80BB5644: 80BB5F34 (lit_3758)
//	80BB5648: 80BB5F34 (lit_3758)
//	80BB5654: 80BB5F38 (lit_3759)
//	80BB5658: 80BB5F38 (lit_3759)
//	80BB5664: 80BB5380 (Check_RideOn__15daObjBhbridge_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void rideCallBack(dBgW* param_0, fopAc_ac_c* param_1, fopAc_ac_c* param_2) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c.s"
}
#pragma pop


/* 80BB5678-80BB56A4 002C+00 s=1 e=0 z=0  None .text      daObjBhbridge_Draw__FP15daObjBhbridge_c                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
asm static void daObjBhbridge_Draw(daObjBhbridge_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/daObjBhbridge_Draw__FP15daObjBhbridge_c.s"
}
#pragma pop


/* 80BB56A4-80BB56C4 0020+00 s=1 e=0 z=0  None .text      daObjBhbridge_Execute__FP15daObjBhbridge_c                   */
//	80BB56B0: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
asm static void daObjBhbridge_Execute(daObjBhbridge_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/daObjBhbridge_Execute__FP15daObjBhbridge_c.s"
}
#pragma pop


/* 80BB56C4-80BB56CC 0008+00 s=1 e=0 z=0  None .text      daObjBhbridge_IsDelete__FP15daObjBhbridge_c                  */
// True False
//  bool False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
static bool daObjBhbridge_IsDelete(daObjBhbridge_c* param_0) {
	return true;
}


/* 80BB56CC-80BB56F0 0024+00 s=1 e=0 z=0  None .text      daObjBhbridge_Delete__FP15daObjBhbridge_c                    */
//	80BB56D8: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjBhbridge_c* False
// 	 daObjBhbridge_c False
asm static void daObjBhbridge_Delete(daObjBhbridge_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/daObjBhbridge_Delete__FP15daObjBhbridge_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BB5F3C-80BB5F40 0004+00 s=0 e=0 z=0  None .rodata    @3833                                                        */
SECTION_RODATA u32 const lit_3833 = 0x43960000;

/* 80BB5F40-80BB5F44 0004+00 s=0 e=0 z=0  None .rodata    @3834                                                        */
SECTION_RODATA u32 const lit_3834 = 0xCE6E6B28;

/* 80BB5F44-80BB5F48 0004+00 s=0 e=0 z=0  None .rodata    @3853                                                        */
SECTION_RODATA u32 const lit_3853 = 0xC3C80000;

/* 80BB5F48-80BB5F4C 0004+00 s=0 e=0 z=0  None .rodata    @3854                                                        */
SECTION_RODATA u32 const lit_3854 = 0xC4480000;

/* 80BB5F4C-80BB5F50 0004+00 s=0 e=0 z=0  None .rodata    @3855                                                        */
SECTION_RODATA u32 const lit_3855 = 0xC47A0000;

/* 80BB5F50-80BB5F54 0004+00 s=0 e=0 z=0  None .rodata    @3856                                                        */
SECTION_RODATA u32 const lit_3856 = 0x43C80000;

/* 80BB5F54-80BB5F58 0004+00 s=0 e=0 z=0  None .rodata    @3857                                                        */
SECTION_RODATA u32 const lit_3857 = 0x447A0000;

/* 80BB5F58-80BB5F5C 0004+00 s=0 e=0 z=0  None .rodata    @3891                                                        */
SECTION_RODATA u32 const lit_3891 = 0x3F800000;

/* 80BB5F5C-80BB5F60 0004+00 s=0 e=0 z=0  None .rodata    @3892                                                        */
SECTION_RODATA u32 const lit_3892 = 0x44540000;

/* 80BB5F60-80BB5F64 0004+00 s=0 e=0 z=0  None .rodata    @3893                                                        */
SECTION_RODATA u32 const lit_3893 = 0x40000000;

/* 80BB5F64-80BB5F68 0004+00 s=0 e=0 z=0  None .rodata    @3894                                                        */
SECTION_RODATA u32 const lit_3894 = 0x44000000;

/* 80BB5F68-80BB5F6C 0004+00 s=0 e=0 z=0  None .rodata    @3895                                                        */
SECTION_RODATA u32 const lit_3895 = 0x43800000;

/* 80BB5F6C-80BB5F70 0004+00 s=0 e=0 z=0  None .rodata    @3896                                                        */
SECTION_RODATA u32 const lit_3896 = 0x41300000;

/* 80BB5F70-80BB5F74 0004+00 s=0 e=0 z=0  None .rodata    @3897                                                        */
SECTION_RODATA u32 const lit_3897 = 0x40A00000;

/* 80BB5F74-80BB5F78 0004+00 s=0 e=0 z=0  None .rodata    @3898                                                        */
SECTION_RODATA u32 const lit_3898 = 0x3DCCCCCD;

/* 80BB5F78-80BB5F7C 0004+00 s=0 e=0 z=0  None .rodata    @3899                                                        */
SECTION_RODATA u32 const lit_3899 = 0x41700000;

/* 80BB5F7C-80BB5F80 0004+00 s=0 e=0 z=0  None .rodata    @3900                                                        */
SECTION_RODATA u32 const lit_3900 = 0x3F000000;

/* 80BB5F80-80BB5F84 0004+00 s=0 e=0 z=0  None .rodata    @3901                                                        */
SECTION_RODATA u32 const lit_3901 = 0x3E4CCCCD;

/* 80BB5F84-80BB5FAB 0027+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80BB5F84 = "BHBridge";
SECTION_DEAD char const* const stringBase_80BB5F8D = "M_BHbridge.dzb";
SECTION_DEAD char const* const stringBase_80BB5F9C = "M_BHbridge.bmd";
#pragma pop

/* 80BB5FAC-80BB5FB0 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80BB5FB0-80BB5FD0 0020+00 s=1 e=0 z=0  None .data      l_daObjBhbridge_Method                                       */
SECTION_DATA static void* l_daObjBhbridge_Method[8] = {
	(void*)daObjBhbridge_Create__FP10fopAc_ac_c,
	(void*)daObjBhbridge_Delete__FP15daObjBhbridge_c,
	(void*)daObjBhbridge_Execute__FP15daObjBhbridge_c,
	(void*)daObjBhbridge_IsDelete__FP15daObjBhbridge_c,
	(void*)daObjBhbridge_Draw__FP15daObjBhbridge_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80BB5FD0-80BB6000 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Bhbridge                                       */
SECTION_DATA void* g_profile_Obj_Bhbridge[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00690000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000810,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01CB0000,
	(void*)&l_daObjBhbridge_Method,
	(void*)0x00040180,
	(void*)0x000E0000,
};

/* 80BB6000-80BB6024 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BB5EF0,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BB5EE8,
};

/* 80BB6024-80BB604C 0028+00 s=1 e=0 z=0  None .data      __vt__15daObjBhbridge_c                                      */
SECTION_DATA void* __vt__15daObjBhbridge_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__15daObjBhbridge_cFv,
	(void*)Create__15daObjBhbridge_cFv,
	(void*)Execute__15daObjBhbridge_cFPPA3_A4_f,
	(void*)Draw__15daObjBhbridge_cFv,
	(void*)Delete__15daObjBhbridge_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80BB56F0-80BB58C4 01D4+00 s=1 e=0 z=0  None .text      daObjBhbridge_Create__FP10fopAc_ac_c                         */
//	80BB5700: 803621D8 (_savegpr_28)
//	80BB5704: 80BB5F00 (lit_3655)
//	80BB5708: 80BB5F00 (lit_3655)
//	80BB5728: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80BB572C: 80BB6024 (__vt__15daObjBhbridge_c)
//	80BB5730: 80BB6024 (__vt__15daObjBhbridge_c)
//	80BB5740: 800760A0 (__ct__9dBgS_AcchFv)
//	80BB5744: 80BB6000 (__vt__12dBgS_ObjAcch)
//	80BB5748: 80BB6000 (__vt__12dBgS_ObjAcch)
//	80BB5764: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80BB576C: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80BB5780: 80BB5FAC (l_arcName)
//	80BB5784: 80BB5FAC (l_arcName)
//	80BB578C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80BB579C: 804061C0 (g_dComIfG_gameInfo)
//	80BB57A0: 804061C0 (g_dComIfG_gameInfo)
//	80BB57A8: 80BB5FAC (l_arcName)
//	80BB57AC: 80BB5FAC (l_arcName)
//	80BB57B4: 80BB5F84 (stringBase0)
//	80BB57B8: 80BB5F84 (stringBase0)
//	80BB57C4: 8003C6B8 (getObjectResName2Index__14dRes_control_cFPCcPCc)
//	80BB57D0: 80BB5FAC (l_arcName)
//	80BB57D4: 80BB5FAC (l_arcName)
//	80BB57DC: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80BB57E0: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80BB57EC: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80BB5828: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80BB5830: 804061C0 (g_dComIfG_gameInfo)
//	80BB5834: 804061C0 (g_dComIfG_gameInfo)
//	80BB5840: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80BB5868: 800777B0 (__ct__18dBgS_ObjGndChk_SplFv)
//	80BB5874: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80BB5880: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80BB58A4: 80077848 (__dt__18dBgS_ObjGndChk_SplFv)
//	80BB58B0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjBhbridge_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/daObjBhbridge_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80BB58C4-80BB5934 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80BB58E4: 80BB6000 (__vt__12dBgS_ObjAcch)
//	80BB58E8: 80BB6000 (__vt__12dBgS_ObjAcch)
//	80BB5904: 80075F94 (__dt__9dBgS_AcchFv)
//	80BB5914: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80BB5934-80BB59AC 0078+00 s=1 e=0 z=0  None .text      CreateHeap__15daObjBhbridge_cFv                              */
//	80BB5948: 80BB5FAC (l_arcName)
//	80BB594C: 80BB5FAC (l_arcName)
//	80BB5954: 80BB5F84 (stringBase0)
//	80BB5958: 80BB5F84 (stringBase0)
//	80BB5960: 804061C0 (g_dComIfG_gameInfo)
//	80BB5964: 804061C0 (g_dComIfG_gameInfo)
//	80BB5974: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80BB5984: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBhbridge_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/CreateHeap__15daObjBhbridge_cFv.s"
}
#pragma pop


/* 80BB59AC-80BB5A14 0068+00 s=1 e=0 z=0  None .text      Create__15daObjBhbridge_cFv                                  */
//	80BB59C0: 80BB5F00 (lit_3655)
//	80BB59C4: 80BB5F00 (lit_3655)
//	80BB59E0: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80BB59E8: 80BB558C (initBaseMtx__15daObjBhbridge_cFv)
//	80BB59EC: 80BB5614 (rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c)
//	80BB59F0: 80BB5614 (rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBhbridge_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/Create__15daObjBhbridge_cFv.s"
}
#pragma pop


/* 80BB5A14-80BB5E10 03FC+00 s=1 e=0 z=0  None .text      Execute__15daObjBhbridge_cFPPA3_A4_f                         */
//	80BB5A2C: 803621DC (_savegpr_29)
//	80BB5A38: 80BB5F00 (lit_3655)
//	80BB5A3C: 80BB5F00 (lit_3655)
//	80BB5A60: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
//	80BB5A78: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB5A7C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB5AA8: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80BB5AAC: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	80BB5AB0: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	80BB5B90: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB5B94: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB5BC0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80BB5BEC: 80439A20 (sincosTable___5JMath)
//	80BB5BF0: 80439A20 (sincosTable___5JMath)
//	80BB5C2C: 8026F97C (cLib_addCalc__FPfffff)
//	80BB5C44: 80439A20 (sincosTable___5JMath)
//	80BB5C48: 80439A20 (sincosTable___5JMath)
//	80BB5CB4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BB5CC8: 80439A20 (sincosTable___5JMath)
//	80BB5CCC: 80439A20 (sincosTable___5JMath)
//	80BB5D30: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BB5D54: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BB5D6C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BB5D84: 8026F97C (cLib_addCalc__FPfffff)
//	80BB5D9C: 8026F97C (cLib_addCalc__FPfffff)
//	80BB5DB4: 8026F97C (cLib_addCalc__FPfffff)
//	80BB5DD4: 80BB55B8 (setBaseMtx__15daObjBhbridge_cFv)
//	80BB5DDC: 804061C0 (g_dComIfG_gameInfo)
//	80BB5DE0: 804061C0 (g_dComIfG_gameInfo)
//	80BB5DE8: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80BB5DFC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjBhbridge_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/Execute__15daObjBhbridge_cFPPA3_A4_f.s"
}
#pragma pop


/* 80BB5E10-80BB5EB4 00A4+00 s=1 e=0 z=0  None .text      Draw__15daObjBhbridge_cFv                                    */
//	80BB5E28: 8042CA54 (g_env_light)
//	80BB5E2C: 8042CA54 (g_env_light)
//	80BB5E3C: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80BB5E40: 8042CA54 (g_env_light)
//	80BB5E44: 8042CA54 (g_env_light)
//	80BB5E54: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80BB5E58: 804061C0 (g_dComIfG_gameInfo)
//	80BB5E5C: 804061C0 (g_dComIfG_gameInfo)
//	80BB5E64: 80434AC8 (j3dSys)
//	80BB5E68: 80434AC8 (j3dSys)
//	80BB5E7C: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80BB5E80: 804061C0 (g_dComIfG_gameInfo)
//	80BB5E84: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBhbridge_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/Draw__15daObjBhbridge_cFv.s"
}
#pragma pop


/* 80BB5EB4-80BB5EE8 0034+00 s=1 e=0 z=0  None .text      Delete__15daObjBhbridge_cFv                                  */
//	80BB5EC0: 80BB5FAC (l_arcName)
//	80BB5EC4: 80BB5FAC (l_arcName)
//	80BB5ED0: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjBhbridge_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/Delete__15daObjBhbridge_cFv.s"
}
#pragma pop


/* 80BB5EE8-80BB5EF0 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80BB5EEC: 80BB58C4 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BB5EE8() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/func_80BB5EE8.s"
}
#pragma pop


/* 80BB5EF0-80BB5EF8 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80BB5EF4: 80BB58C4 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BB5EF0() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bhbridge/d_a_obj_bhbridge/func_80BB5EF0.s"
}
#pragma pop


