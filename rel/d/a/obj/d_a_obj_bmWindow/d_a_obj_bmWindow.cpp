// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_bmWindow
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
};

struct mDoHIO_entry_c {
	/* 80BB8308 */ // True False
~mDoHIO_entry_c();
};

struct fopAc_ac_c {
};

struct fOpAcm_HIO_entry_c {
	/* 80BB82AC */ // True False
~fOpAcm_HIO_entry_c();
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

struct daBmWindow_c {
	/* 80BB8350 */ // True False
void setBaseMtx();
	/* 80BB8400 */ // True False
void CreateHeap();
	/* 80BB846C */ // True False
void create();
	/* 80BB88D8 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80BB8930 */ // True False
void windowProc();
	/* 80BB8B3C */ // True False
void init_modeWait();
	/* 80BB8B48 */ // True False
void modeWait();
	/* 80BB8FDC */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void checkActorInRectangle(fopAc_ac_c*, cXyz const*, cXyz const*);
	/* 80BB90E0 */ // True False
void init_modeBreak();
	/* 80BB920C */ // True False
void modeBreak();
	/* 80BB922C */ // True False
void init_modeBreakEff();
	/* 80BB9304 */ // True False
void modeBreakEff();
	/* 80BB9324 */ // True False
//  int False
void setBreakEffect(int);
	/* 80BB9494 */ // True False
void Draw();
	/* 80BB9548 */ // True False
void Delete();
};

struct daBmWindow_HIO_c {
	/* 80BB820C */ // True False
daBmWindow_HIO_c();
	/* 80BB964C */ // True False
~daBmWindow_HIO_c();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 80BB887C */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
	/* 80BB869C */ // True False
~dCcD_Cyl();
	/* 80BB8768 */ // True False
dCcD_Cyl();
};

struct dBgW_Base {
};

struct dBgW {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 80078690 */ // False False
//  bool False
bool Create();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80BB87EC */ // True False
~cM3dGCyl();
};

struct cM3dGAab {
	/* 80BB8834 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80BB9604 */ // True False
~cCcD_GStts();
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  daBmWindow_c* False
// 	 daBmWindow_c False
static void daBmWindow_Draw(daBmWindow_c*);
// True False
//  daBmWindow_c* False
// 	 daBmWindow_c False
static void daBmWindow_Execute(daBmWindow_c*);
// True False
//  daBmWindow_c* False
// 	 daBmWindow_c False
static void daBmWindow_Delete(daBmWindow_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daBmWindow_Create(fopAc_ac_c*);

// True False
extern "C" void __ct__16daBmWindow_HIO_cFv();
// True False
extern "C" void __dt__18fOpAcm_HIO_entry_cFv();
// True False
extern "C" void __dt__14mDoHIO_entry_cFv();
// True False
extern "C" void setBaseMtx__12daBmWindow_cFv();
// True False
extern "C" void CreateHeap__12daBmWindow_cFv();
// True False
extern "C" void create__12daBmWindow_cFv();
// True False
extern "C" void __dt__8dCcD_CylFv();
// True False
extern "C" void __ct__8dCcD_CylFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__12daBmWindow_cFPPA3_A4_f();
// True False
extern "C" void windowProc__12daBmWindow_cFv();
// True False
extern "C" void init_modeWait__12daBmWindow_cFv();
// True False
extern "C" void modeWait__12daBmWindow_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void checkActorInRectangle__12daBmWindow_cFP10fopAc_ac_cPC4cXyzPC4cXyz();
// True False
extern "C" void init_modeBreak__12daBmWindow_cFv();
// True False
extern "C" void modeBreak__12daBmWindow_cFv();
// True False
extern "C" void init_modeBreakEff__12daBmWindow_cFv();
// True False
extern "C" void modeBreakEff__12daBmWindow_cFv();
// True False
//  int False
extern "C" void setBreakEffect__12daBmWindow_cFi();
// True False
extern "C" void Draw__12daBmWindow_cFv();
// True False
extern "C" void Delete__12daBmWindow_cFv();
// True False
//  daBmWindow_c* False
// 	 daBmWindow_c False
extern "C" static void daBmWindow_Draw__FP12daBmWindow_c();
// True False
//  daBmWindow_c* False
// 	 daBmWindow_c False
extern "C" static void daBmWindow_Execute__FP12daBmWindow_c();
// True False
//  daBmWindow_c* False
// 	 daBmWindow_c False
extern "C" static void daBmWindow_Delete__FP12daBmWindow_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daBmWindow_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__16daBmWindow_HIO_cFv();
// False False
extern "C" void __sinit_d_a_obj_bmWindow_cpp();
extern "C" extern u32 const lit_3654;
extern "C" extern u32 const lit_3655;
extern "C" extern u32 const lit_3656;
extern "C" extern u32 const lit_3657;
extern "C" extern u32 const lit_3658;
extern "C" extern u32 const lit_3659;
extern "C" extern u32 const lit_3660;
extern "C" extern u32 const lit_3661;
extern "C" extern u8 const l_check_area[48];
extern "C" extern u32 const lit_3997;
extern "C" extern u32 const lit_3998;
extern "C" extern u32 const lit_3999;
extern "C" extern u32 const lit_4000;
extern "C" extern u32 const lit_4001;
extern "C" extern u32 const lit_4002;
extern "C" extern u32 const lit_4003;
extern "C" extern u8 const lit_4005[8];
extern "C" extern u8 const lit_4007[8];
extern "C" extern u8 const data_80BB97F4[12];
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_3865[3];
extern "C" extern void* lit_3866[3];
extern "C" extern void* lit_3867[3];
extern "C" extern u8 data_80BB9894[36];
extern "C" extern void* g_profile_Obj_BmWindow[12];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__12daBmWindow_c[10];
extern "C" extern void* __vt__16daBmWindow_HIO_c[3];
extern "C" extern void* __vt__18fOpAcm_HIO_entry_c[3];
extern "C" extern void* __vt__14mDoHIO_entry_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotS(f32 (* )[4], s16, s16, s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
void fopAcM_setEffectMtx(fopAc_ac_c const*, J3DModelData const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc(f32*, f32, f32, f32, f32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotS__FPA4_fsss();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
extern "C" void fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool Create__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc__FPfffff();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80BB973C-80BB9740 0004+00 s=5 e=0 z=0  None .rodata    @3653                                                        */
SECTION_RODATA static u32 const lit_3653 = 0x42B40000;

/* 80BB980C-80BB9818 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BB9818-80BB982C 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80BB982C-80BB9870 0044+00 s=2 e=0 z=0  None .data      mCcDCyl__12daBmWindow_c                                      */
SECTION_DATA static u8 mCcDCyl__12daBmWindow_c[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80BB9870-80BB987C 000C+00 s=0 e=0 z=0  None .data      @3865                                                        */
SECTION_DATA void* lit_3865[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeWait__12daBmWindow_cFv,
};

/* 80BB987C-80BB9888 000C+00 s=0 e=0 z=0  None .data      @3866                                                        */
SECTION_DATA void* lit_3866[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeBreak__12daBmWindow_cFv,
};

/* 80BB9888-80BB9894 000C+00 s=0 e=0 z=0  None .data      @3867                                                        */
SECTION_DATA void* lit_3867[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeBreakEff__12daBmWindow_cFv,
};

/* 80BB9894-80BB98B8 0024+00 s=0 e=0 z=0  None .data      mode_proc$3864                                               */
SECTION_DATA u8 data_80BB9894[36] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80BB98B8-80BB98D8 0020+00 s=1 e=0 z=0  None .data      l_daBmWindow_Method                                          */
SECTION_DATA static void* l_daBmWindow_Method[8] = {
	(void*)daBmWindow_Create__FP10fopAc_ac_c,
	(void*)daBmWindow_Delete__FP12daBmWindow_c,
	(void*)daBmWindow_Execute__FP12daBmWindow_c,
	(void*)NULL,
	(void*)daBmWindow_Draw__FP12daBmWindow_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80BB98D8-80BB9908 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_BmWindow                                       */
SECTION_DATA void* g_profile_Obj_BmWindow[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00420000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000EE0,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02010000,
	(void*)&l_daBmWindow_Method,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80BB9908-80BB9914 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80BB9914-80BB9920 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80BB9920-80BB992C 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80BB992C-80BB9938 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80BB9938-80BB9960 0028+00 s=1 e=0 z=0  None .data      __vt__12daBmWindow_c                                         */
SECTION_DATA void* __vt__12daBmWindow_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__12daBmWindow_cFv,
	(void*)Create__16dBgS_MoveBgActorFv,
	(void*)Execute__12daBmWindow_cFPPA3_A4_f,
	(void*)Draw__12daBmWindow_cFv,
	(void*)Delete__12daBmWindow_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80BB9960-80BB996C 000C+00 s=2 e=0 z=0  None .data      __vt__16daBmWindow_HIO_c                                     */
SECTION_DATA void* __vt__16daBmWindow_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__16daBmWindow_HIO_cFv,
};

/* 80BB996C-80BB9978 000C+00 s=3 e=0 z=0  None .data      __vt__18fOpAcm_HIO_entry_c                                   */
SECTION_DATA void* __vt__18fOpAcm_HIO_entry_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18fOpAcm_HIO_entry_cFv,
};

/* 80BB9978-80BB9984 000C+00 s=4 e=0 z=0  None .data      __vt__14mDoHIO_entry_c                                       */
SECTION_DATA void* __vt__14mDoHIO_entry_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14mDoHIO_entry_cFv,
};

/* 80BB820C-80BB82AC 00A0+00 s=1 e=0 z=0  None .text      __ct__16daBmWindow_HIO_cFv                                   */
//	80BB820C: 80BB973C (lit_3653)
//	80BB8210: 80BB973C (lit_3653)
//	80BB8214: 80BB9978 (__vt__14mDoHIO_entry_c)
//	80BB8218: 80BB9978 (__vt__14mDoHIO_entry_c)
//	80BB8220: 80BB996C (__vt__18fOpAcm_HIO_entry_c)
//	80BB8224: 80BB996C (__vt__18fOpAcm_HIO_entry_c)
//	80BB822C: 80BB9960 (__vt__16daBmWindow_HIO_c)
//	80BB8230: 80BB9960 (__vt__16daBmWindow_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daBmWindow_HIO_c::daBmWindow_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__ct__16daBmWindow_HIO_cFv.s"
}
#pragma pop


/* 80BB82AC-80BB8308 005C+00 s=1 e=0 z=0  None .text      __dt__18fOpAcm_HIO_entry_cFv                                 */
//	80BB82C4: 80BB996C (__vt__18fOpAcm_HIO_entry_c)
//	80BB82C8: 80BB996C (__vt__18fOpAcm_HIO_entry_c)
//	80BB82D4: 80BB9978 (__vt__14mDoHIO_entry_c)
//	80BB82D8: 80BB9978 (__vt__14mDoHIO_entry_c)
//	80BB82EC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm fOpAcm_HIO_entry_c::~fOpAcm_HIO_entry_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__dt__18fOpAcm_HIO_entry_cFv.s"
}
#pragma pop


/* 80BB8308-80BB8350 0048+00 s=1 e=0 z=0  None .text      __dt__14mDoHIO_entry_cFv                                     */
//	80BB8320: 80BB9978 (__vt__14mDoHIO_entry_c)
//	80BB8324: 80BB9978 (__vt__14mDoHIO_entry_c)
//	80BB8334: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm mDoHIO_entry_c::~mDoHIO_entry_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__dt__14mDoHIO_entry_cFv.s"
}
#pragma pop


/* 80BB8350-80BB8400 00B0+00 s=2 e=0 z=0  None .text      setBaseMtx__12daBmWindow_cFv                                 */
//	80BB8364: 803DD470 (now__14mDoMtx_stack_c)
//	80BB8368: 803DD470 (now__14mDoMtx_stack_c)
//	80BB8378: 803468E8 (PSMTXTrans)
//	80BB837C: 803DD470 (now__14mDoMtx_stack_c)
//	80BB8380: 803DD470 (now__14mDoMtx_stack_c)
//	80BB8390: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80BB8394: 803DD470 (now__14mDoMtx_stack_c)
//	80BB8398: 803DD470 (now__14mDoMtx_stack_c)
//	80BB83A8: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80BB83B8: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80BB83D8: 803DD470 (now__14mDoMtx_stack_c)
//	80BB83DC: 803DD470 (now__14mDoMtx_stack_c)
//	80BB83E8: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/setBaseMtx__12daBmWindow_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BB9740-80BB9744 0004+00 s=0 e=0 z=0  None .rodata    @3654                                                        */
SECTION_RODATA u32 const lit_3654 = 0x42340000;

/* 80BB9744-80BB9748 0004+00 s=0 e=0 z=0  None .rodata    @3655                                                        */
SECTION_RODATA u32 const lit_3655 = 0x42C80000;

/* 80BB9748-80BB974C 0004+00 s=0 e=0 z=0  None .rodata    @3656                                                        */
SECTION_RODATA u32 const lit_3656 = 0x3D4CCCCD;

/* 80BB974C-80BB9750 0004+00 s=0 e=0 z=0  None .rodata    @3657                                                        */
SECTION_RODATA u32 const lit_3657 = 0x40A00000;

/* 80BB9750-80BB9754 0004+00 s=0 e=0 z=0  None .rodata    @3658                                                        */
SECTION_RODATA u32 const lit_3658 = 0x3DCCCCCD;

/* 80BB9754-80BB9758 0004+00 s=0 e=0 z=0  None .rodata    @3659                                                        */
SECTION_RODATA u32 const lit_3659 = 0x40400000;

/* 80BB9758-80BB975C 0004+00 s=0 e=0 z=0  None .rodata    @3660                                                        */
SECTION_RODATA u32 const lit_3660 = 0x3C23D70A;

/* 80BB975C-80BB9760 0004+00 s=0 e=0 z=0  None .rodata    @3661                                                        */
SECTION_RODATA u32 const lit_3661 = 0x3F800000;

/* 80BB9760-80BB9790 0030+00 s=1 e=0 z=0  None .rodata    mCcDObjInfo__12daBmWindow_c                                  */
SECTION_RODATA static u8 const mCcDObjInfo__12daBmWindow_c[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFA, 0xFD, 0xBF, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA6, 0x00, 0x00, 0x00, 0x00,
};

/* 80BB9790-80BB97C0 0030+00 s=0 e=0 z=0  None .rodata    l_check_area                                                 */
SECTION_RODATA u8 const l_check_area[48] = {
	0xC2, 0xC8, 0x00, 0x00, 0xC2, 0x48, 0x00, 0x00, 0xC3, 0x48, 0x00, 0x00, 0xC2, 0xC8, 0x00, 0x00,
	0x43, 0x91, 0x00, 0x00, 0xC3, 0x48, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x43, 0x91, 0x00, 0x00,
	0x43, 0x48, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0xC2, 0x48, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00,
};

/* 80BB97C0-80BB97C4 0004+00 s=2 e=0 z=0  None .rodata    @3769                                                        */
SECTION_RODATA static u8 const lit_3769[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80BB97C4-80BB97C8 0004+00 s=1 e=0 z=0  None .rodata    @3897                                                        */
SECTION_RODATA static u32 const lit_3897 = 0x43360B61;

/* 80BB97C8-80BB97CC 0004+00 s=0 e=0 z=0  None .rodata    @3997                                                        */
SECTION_RODATA u32 const lit_3997 = 0x43480000;

/* 80BB97CC-80BB97D0 0004+00 s=0 e=0 z=0  None .rodata    @3998                                                        */
SECTION_RODATA u32 const lit_3998 = 0xBF800000;

/* 80BB97D0-80BB97D4 0004+00 s=0 e=0 z=0  None .rodata    @3999                                                        */
SECTION_RODATA u32 const lit_3999 = 0x41F00000;

/* 80BB97D4-80BB97D8 0004+00 s=0 e=0 z=0  None .rodata    @4000                                                        */
SECTION_RODATA u32 const lit_4000 = 0x41200000;

/* 80BB97D8-80BB97DC 0004+00 s=0 e=0 z=0  None .rodata    @4001                                                        */
SECTION_RODATA u32 const lit_4001 = 0x422C0000;

/* 80BB97DC-80BB97E0 0004+00 s=0 e=0 z=0  None .rodata    @4002                                                        */
SECTION_RODATA u32 const lit_4002 = 0x43000000;

/* 80BB97E0-80BB97E4 0004+00 s=0 e=0 z=0  None .rodata    @4003                                                        */
SECTION_RODATA u32 const lit_4003 = 0x43960000;

/* 80BB97E4-80BB97EC 0008+00 s=0 e=0 z=0  None .rodata    @4005                                                        */
SECTION_RODATA u8 const lit_4005[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BB97EC-80BB97F4 0008+00 s=0 e=0 z=0  None .rodata    @4007                                                        */
SECTION_RODATA u8 const lit_4007[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80BB97F4-80BB9800 000C+00 s=0 e=0 z=0  None .rodata    particle_id$4102                                             */
SECTION_RODATA u8 const data_80BB97F4[12] = {
	0x85, 0x06, 0x85, 0x07, 0x85, 0x08, 0x85, 0x09, 0x85, 0x0A, 0x85, 0x0B,
};

/* 80BB9800-80BB9809 0009+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80BB9800 = "H_Window";
#pragma pop

/* 80BB8400-80BB846C 006C+00 s=1 e=0 z=0  None .text      CreateHeap__12daBmWindow_cFv                                 */
//	80BB8414: 80BB9800 (stringBase0)
//	80BB8418: 80BB9800 (stringBase0)
//	80BB8420: 804061C0 (g_dComIfG_gameInfo)
//	80BB8424: 804061C0 (g_dComIfG_gameInfo)
//	80BB8434: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80BB8444: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/CreateHeap__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB846C-80BB869C 0230+00 s=1 e=0 z=0  None .text      create__12daBmWindow_cFv                                     */
//	80BB847C: 803621CC (_savegpr_25)
//	80BB849C: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80BB84A0: 80BB9938 (__vt__12daBmWindow_c)
//	80BB84A4: 80BB9938 (__vt__12daBmWindow_c)
//	80BB84AC: 803C3728 (__vt__9cCcD_Stts)
//	80BB84B0: 803C3728 (__vt__9cCcD_Stts)
//	80BB84BC: 80083760 (__ct__10dCcD_GSttsFv)
//	80BB84C0: 803AC2E4 (__vt__9dCcD_Stts)
//	80BB84C4: 803AC2E4 (__vt__9dCcD_Stts)
//	80BB84D8: 80BB8768 (__ct__8dCcD_CylFv)
//	80BB84DC: 80BB8768 (__ct__8dCcD_CylFv)
//	80BB84E0: 80BB869C (__dt__8dCcD_CylFv)
//	80BB84E4: 80BB869C (__dt__8dCcD_CylFv)
//	80BB84F0: 80361D60 (__construct_array)
//	80BB8500: 804061C0 (g_dComIfG_gameInfo)
//	80BB8504: 804061C0 (g_dComIfG_gameInfo)
//	80BB8518: 80035360 (isSwitch__10dSv_info_cCFii)
//	80BB8530: 80BB9800 (stringBase0)
//	80BB8534: 80BB9800 (stringBase0)
//	80BB8538: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80BB854C: 80BB9800 (stringBase0)
//	80BB8550: 80BB9800 (stringBase0)
//	80BB8558: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80BB855C: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80BB8568: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80BB8594: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80BB85A8: 80BB97C0 (lit_3769)
//	80BB85AC: 80BB97C0 (lit_3769)
//	80BB8608: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80BB8614: 80BB982C (mCcDCyl__12daBmWindow_c)
//	80BB8618: 80BB982C (mCcDCyl__12daBmWindow_c)
//	80BB862C: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80BB8660: 80BB8B3C (init_modeWait__12daBmWindow_cFv)
//	80BB866C: 80BB922C (init_modeBreakEff__12daBmWindow_cFv)
//	80BB867C: 80BB8350 (setBaseMtx__12daBmWindow_cFv)
//	80BB8688: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/create__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB869C-80BB8768 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_CylFv                                            */
//	80BB86BC: 803AC050 (__vt__8dCcD_Cyl)
//	80BB86C0: 803AC050 (__vt__8dCcD_Cyl)
//	80BB86E0: 803C35A4 (__vt__12cCcD_CylAttr)
//	80BB86E4: 803C35A4 (__vt__12cCcD_CylAttr)
//	80BB86FC: 80BB992C (__vt__8cM3dGCyl)
//	80BB8700: 80BB992C (__vt__8cM3dGCyl)
//	80BB8710: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BB8714: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BB8724: 80BB9920 (__vt__8cM3dGAab)
//	80BB8728: 80BB9920 (__vt__8cM3dGAab)
//	80BB8738: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80BB8748: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::~dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__dt__8dCcD_CylFv.s"
}
#pragma pop


/* 80BB8768-80BB87EC 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_CylFv                                            */
//	80BB877C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80BB8780: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BB8784: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BB878C: 80BB9920 (__vt__8cM3dGAab)
//	80BB8790: 80BB9920 (__vt__8cM3dGAab)
//	80BB8798: 80BB992C (__vt__8cM3dGCyl)
//	80BB879C: 80BB992C (__vt__8cM3dGCyl)
//	80BB87A4: 803C35A4 (__vt__12cCcD_CylAttr)
//	80BB87A8: 803C35A4 (__vt__12cCcD_CylAttr)
//	80BB87B8: 803AC050 (__vt__8dCcD_Cyl)
//	80BB87BC: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__ct__8dCcD_CylFv.s"
}
#pragma pop


/* 80BB87EC-80BB8834 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80BB8804: 80BB992C (__vt__8cM3dGCyl)
//	80BB8808: 80BB992C (__vt__8cM3dGCyl)
//	80BB8818: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80BB8834-80BB887C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80BB884C: 80BB9920 (__vt__8cM3dGAab)
//	80BB8850: 80BB9920 (__vt__8cM3dGAab)
//	80BB8860: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80BB887C-80BB88D8 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80BB8894: 80BB9914 (__vt__10dCcD_GStts)
//	80BB8898: 80BB9914 (__vt__10dCcD_GStts)
//	80BB88A4: 80BB9908 (__vt__10cCcD_GStts)
//	80BB88A8: 80BB9908 (__vt__10cCcD_GStts)
//	80BB88BC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80BB88D8-80BB8930 0058+00 s=1 e=0 z=0  None .text      Execute__12daBmWindow_cFPPA3_A4_f                            */
//	80BB88F4: 80BB8930 (windowProc__12daBmWindow_cFv)
//	80BB8908: 80083830 (Move__10dCcD_GSttsFv)
//	80BB8910: 80BB8350 (setBaseMtx__12daBmWindow_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daBmWindow_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/Execute__12daBmWindow_cFPPA3_A4_f.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BB9990-80BB999C 000C+00 s=1 e=0 z=0  None .bss       @3645                                                        */
static u8 lit_3645[12];

/* 80BB999C-80BB99D8 003C+00 s=3 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[60];

/* 80BB99D8-80BB99DC 0004+00 s=1 e=0 z=0  None .bss       None                                                         */
static u8 data_80BB99D8[4];

/* 80BB8930-80BB8B3C 020C+00 s=1 e=0 z=0  None .text      windowProc__12daBmWindow_cFv                                 */
//	80BB8948: 80BB980C (cNullVec__6Z2Calc)
//	80BB894C: 80BB980C (cNullVec__6Z2Calc)
//	80BB8950: 80BB99D8 (data_80BB99D8)
//	80BB8954: 80BB99D8 (data_80BB99D8)
//	80BB89CC: 80362084 (__ptmf_scall)
//	80BB89D4: 80BB97C4 (lit_3897)
//	80BB89D8: 80BB97C4 (lit_3897)
//	80BB89F0: 80439A20 (sincosTable___5JMath)
//	80BB89F4: 80439A20 (sincosTable___5JMath)
//	80BB8A6C: 80BB97C0 (lit_3769)
//	80BB8A70: 80BB97C0 (lit_3769)
//	80BB8A80: 8026F97C (cLib_addCalc__FPfffff)
//	80BB8A84: 80BB97C4 (lit_3897)
//	80BB8A88: 80BB97C4 (lit_3897)
//	80BB8AE4: 80439A20 (sincosTable___5JMath)
//	80BB8AE8: 80439A20 (sincosTable___5JMath)
//	80BB8B00: 80BB97C0 (lit_3769)
//	80BB8B04: 80BB97C0 (lit_3769)
//	80BB8B14: 8026F97C (cLib_addCalc__FPfffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::windowProc() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/windowProc__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB8B3C-80BB8B48 000C+00 s=1 e=0 z=0  None .text      init_modeWait__12daBmWindow_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::init_modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/init_modeWait__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB8B48-80BB8FDC 0494+00 s=1 e=0 z=0  None .text      modeWait__12daBmWindow_cFv                                   */
//	80BB8B78: 803621C4 (_savegpr_23)
//	80BB8B80: 80BB973C (lit_3653)
//	80BB8B84: 80BB973C (lit_3653)
//	80BB8B88: 804061C0 (g_dComIfG_gameInfo)
//	80BB8B8C: 804061C0 (g_dComIfG_gameInfo)
//	80BB8C1C: 80BB8FDC (checkActorInRectangle__12daBmWindow_cFP10fopAc_ac_cPC4cXyzPC4cXyz)
//	80BB8C2C: 80BB90E0 (init_modeBreak__12daBmWindow_cFv)
//	80BB8C5C: 80BB8FDC (checkActorInRectangle__12daBmWindow_cFP10fopAc_ac_cPC4cXyzPC4cXyz)
//	80BB8CB0: 8002D06C (dComIfGp_getReverb__Fi)
//	80BB8CC4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB8CC8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB8CF0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80BB8D04: 80BB90E0 (init_modeBreak__12daBmWindow_cFv)
//	80BB8D24: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80BB8D34: 80BB90E0 (init_modeBreak__12daBmWindow_cFv)
//	80BB8D58: 80BB999C (l_HIO)
//	80BB8D5C: 80BB999C (l_HIO)
//	80BB8DE4: 80267954 (cM_rndF__Ff)
//	80BB8E04: 80BB999C (l_HIO)
//	80BB8E08: 80BB999C (l_HIO)
//	80BB8E44: 8002D06C (dComIfGp_getReverb__Fi)
//	80BB8E58: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB8E5C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB8E84: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80BB8EA4: 804061C0 (g_dComIfG_gameInfo)
//	80BB8EA8: 804061C0 (g_dComIfG_gameInfo)
//	80BB8EC4: 803DD470 (now__14mDoMtx_stack_c)
//	80BB8EC8: 803DD470 (now__14mDoMtx_stack_c)
//	80BB8F08: 8000C208 (mDoMtx_ZXYrotS__FPA4_fsss)
//	80BB8F18: 80346D6C (PSMTXMultVec)
//	80BB8F40: 80347090 (PSVECAdd)
//	80BB8F54: 8026F200 (SetR__8cM3dGCylFf)
//	80BB8F60: 8026F1F8 (SetH__8cM3dGCylFf)
//	80BB8F6C: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80BB8F7C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80BB8FC8: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/modeWait__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB8FDC-80BB90E0 0104+00 s=1 e=0 z=0  None .text      checkActorInRectangle__12daBmWindow_cFP10fopAc_ac_cPC4cXyzPC4cXyz */
//	80BB8FEC: 803621DC (_savegpr_29)
//	80BB9008: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80BB9024: 803DD470 (now__14mDoMtx_stack_c)
//	80BB9028: 803DD470 (now__14mDoMtx_stack_c)
//	80BB9038: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80BB903C: 803DD470 (now__14mDoMtx_stack_c)
//	80BB9040: 803DD470 (now__14mDoMtx_stack_c)
//	80BB904C: 80346D6C (PSMTXMultVec)
//	80BB90CC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
asm void daBmWindow_c::checkActorInRectangle(fopAc_ac_c* param_0, cXyz const* param_1, cXyz const* param_2) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/checkActorInRectangle__12daBmWindow_cFP10fopAc_ac_cPC4cXyzPC4cXyz.s"
}
#pragma pop


/* 80BB90E0-80BB920C 012C+00 s=1 e=0 z=0  None .text      init_modeBreak__12daBmWindow_cFv                             */
//	80BB90F8: 80BB973C (lit_3653)
//	80BB90FC: 80BB973C (lit_3653)
//	80BB910C: 804061C0 (g_dComIfG_gameInfo)
//	80BB9110: 804061C0 (g_dComIfG_gameInfo)
//	80BB9118: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80BB9124: 80BB9324 (setBreakEffect__12daBmWindow_cFi)
//	80BB913C: 804061C0 (g_dComIfG_gameInfo)
//	80BB9140: 804061C0 (g_dComIfG_gameInfo)
//	80BB9148: 80BB999C (l_HIO)
//	80BB914C: 80BB999C (l_HIO)
//	80BB915C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80BB918C: 8002D06C (dComIfGp_getReverb__Fi)
//	80BB91A0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB91A4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB91CC: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80BB91D0: 804061C0 (g_dComIfG_gameInfo)
//	80BB91D4: 804061C0 (g_dComIfG_gameInfo)
//	80BB91E8: 80035200 (onSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::init_modeBreak() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/init_modeBreak__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB920C-80BB922C 0020+00 s=1 e=0 z=0  None .text      modeBreak__12daBmWindow_cFv                                  */
//	80BB9218: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::modeBreak() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/modeBreak__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB922C-80BB9304 00D8+00 s=1 e=0 z=0  None .text      init_modeBreakEff__12daBmWindow_cFv                          */
//	80BB9244: 80BB973C (lit_3653)
//	80BB9248: 80BB973C (lit_3653)
//	80BB9278: 8002D06C (dComIfGp_getReverb__Fi)
//	80BB928C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB9290: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BB92B8: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80BB92C4: 80BB9324 (setBreakEffect__12daBmWindow_cFi)
//	80BB92C8: 804061C0 (g_dComIfG_gameInfo)
//	80BB92CC: 804061C0 (g_dComIfG_gameInfo)
//	80BB92E0: 80035200 (onSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::init_modeBreakEff() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/init_modeBreakEff__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB9304-80BB9324 0020+00 s=1 e=0 z=0  None .text      modeBreakEff__12daBmWindow_cFv                               */
//	80BB9310: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::modeBreakEff() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/modeBreakEff__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB9324-80BB9494 0170+00 s=2 e=0 z=0  None .text      setBreakEffect__12daBmWindow_cFi                             */
//	80BB9334: 803621CC (_savegpr_25)
//	80BB9340: 80BB973C (lit_3653)
//	80BB9344: 80BB973C (lit_3653)
//	80BB9374: 804061C0 (g_dComIfG_gameInfo)
//	80BB9378: 804061C0 (g_dComIfG_gameInfo)
//	80BB938C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80BB93A8: 803DD470 (now__14mDoMtx_stack_c)
//	80BB93AC: 803DD470 (now__14mDoMtx_stack_c)
//	80BB93BC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80BB93C0: 803DD470 (now__14mDoMtx_stack_c)
//	80BB93C4: 803DD470 (now__14mDoMtx_stack_c)
//	80BB93D0: 80346D6C (PSMTXMultVec)
//	80BB9410: 804061C0 (g_dComIfG_gameInfo)
//	80BB9414: 804061C0 (g_dComIfG_gameInfo)
//	80BB9468: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80BB9480: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daBmWindow_c::setBreakEffect(int param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/setBreakEffect__12daBmWindow_cFi.s"
}
#pragma pop


/* 80BB9494-80BB9548 00B4+00 s=1 e=0 z=0  None .text      Draw__12daBmWindow_cFv                                       */
//	80BB94AC: 8042CA54 (g_env_light)
//	80BB94B0: 8042CA54 (g_env_light)
//	80BB94C0: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80BB94C4: 8042CA54 (g_env_light)
//	80BB94C8: 8042CA54 (g_env_light)
//	80BB94D8: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80BB94E8: 8001D42C (fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData)
//	80BB94EC: 804061C0 (g_dComIfG_gameInfo)
//	80BB94F0: 804061C0 (g_dComIfG_gameInfo)
//	80BB94F8: 80434AC8 (j3dSys)
//	80BB94FC: 80434AC8 (j3dSys)
//	80BB9510: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80BB9514: 804061C0 (g_dComIfG_gameInfo)
//	80BB9518: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/Draw__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB9548-80BB9578 0030+00 s=1 e=0 z=0  None .text      Delete__12daBmWindow_cFv                                     */
//	80BB9554: 80BB9800 (stringBase0)
//	80BB9558: 80BB9800 (stringBase0)
//	80BB9560: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daBmWindow_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/Delete__12daBmWindow_cFv.s"
}
#pragma pop


/* 80BB9578-80BB95A4 002C+00 s=1 e=0 z=0  None .text      daBmWindow_Draw__FP12daBmWindow_c                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daBmWindow_c* False
// 	 daBmWindow_c False
asm static void daBmWindow_Draw(daBmWindow_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/daBmWindow_Draw__FP12daBmWindow_c.s"
}
#pragma pop


/* 80BB95A4-80BB95C4 0020+00 s=1 e=0 z=0  None .text      daBmWindow_Execute__FP12daBmWindow_c                         */
//	80BB95B0: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daBmWindow_c* False
// 	 daBmWindow_c False
asm static void daBmWindow_Execute(daBmWindow_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/daBmWindow_Execute__FP12daBmWindow_c.s"
}
#pragma pop


/* 80BB95C4-80BB95E4 0020+00 s=1 e=0 z=0  None .text      daBmWindow_Delete__FP12daBmWindow_c                          */
//	80BB95D0: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daBmWindow_c* False
// 	 daBmWindow_c False
asm static void daBmWindow_Delete(daBmWindow_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/daBmWindow_Delete__FP12daBmWindow_c.s"
}
#pragma pop


/* 80BB95E4-80BB9604 0020+00 s=1 e=0 z=0  None .text      daBmWindow_Create__FP10fopAc_ac_c                            */
//	80BB95F0: 80BB846C (create__12daBmWindow_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daBmWindow_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/daBmWindow_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80BB9604-80BB964C 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80BB961C: 80BB9908 (__vt__10cCcD_GStts)
//	80BB9620: 80BB9908 (__vt__10cCcD_GStts)
//	80BB9630: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80BB964C-80BB96B8 006C+00 s=2 e=0 z=0  None .text      __dt__16daBmWindow_HIO_cFv                                   */
//	80BB9664: 80BB9960 (__vt__16daBmWindow_HIO_c)
//	80BB9668: 80BB9960 (__vt__16daBmWindow_HIO_c)
//	80BB9674: 80BB996C (__vt__18fOpAcm_HIO_entry_c)
//	80BB9678: 80BB996C (__vt__18fOpAcm_HIO_entry_c)
//	80BB9684: 80BB9978 (__vt__14mDoHIO_entry_c)
//	80BB9688: 80BB9978 (__vt__14mDoHIO_entry_c)
//	80BB969C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daBmWindow_HIO_c::~daBmWindow_HIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__dt__16daBmWindow_HIO_cFv.s"
}
#pragma pop


/* 80BB96B8-80BB9728 0070+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_bmWindow_cpp                                 */
//	80BB96C4: 80BB999C (l_HIO)
//	80BB96C8: 80BB999C (l_HIO)
//	80BB96CC: 80BB820C (__ct__16daBmWindow_HIO_cFv)
//	80BB96D0: 80BB964C (__dt__16daBmWindow_HIO_cFv)
//	80BB96D4: 80BB964C (__dt__16daBmWindow_HIO_cFv)
//	80BB96D8: 80BB9990 (lit_3645)
//	80BB96DC: 80BB9990 (lit_3645)
//	80BB96E0: 80BB8198 (__register_global_object)
//	80BB96E4: 80BB982C (mCcDCyl__12daBmWindow_c)
//	80BB96E8: 80BB982C (mCcDCyl__12daBmWindow_c)
//	80BB96F0: 80BB9760 (mCcDObjInfo__12daBmWindow_c)
//	80BB96F4: 80BB9760 (mCcDObjInfo__12daBmWindow_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_bmWindow_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_bmWindow/d_a_obj_bmWindow/__sinit_d_a_obj_bmWindow_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80BB96B8 = (void*)__sinit_d_a_obj_bmWindow_cpp;
#pragma pop


