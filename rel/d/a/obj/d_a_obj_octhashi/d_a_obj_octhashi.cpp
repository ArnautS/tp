// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_octhashi
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
	/* 80CA54A8 */ // True False
~cXyz();
	/* 80CA6250 */ // True False
cXyz();
};

struct csXyz {
	/* 802673F4 */ // False False
//  s16 False
//  s16 False
//  s16 False
csXyz(s16, s16, s16);
	/* 80CA624C */ // True False
csXyz();
	/* 8026745C */ // False False
//  csXyz& False
// 	 csXyz False
void operator+=(csXyz&);
	/* 80CA546C */ // True False
~csXyz();
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct fopAc_ac_c {
};

struct fopAcM_gc_c {
	/* 8001DCBC */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void gndCheck(cXyz const*);
};

struct daObjOCTHASHI_c {
	/* 80CA4BB8 */ // True False
void initCcCylinder();
	/* 80CA4DFC */ // True False
void SetCoSph();
	/* 80CA4EA4 */ // True False
void SetCoCyl();
	/* 80CA4F24 */ // True False
//  int False
void HakaiSet2(int);
	/* 80CA52F0 */ // True False
void HakaiMotion2();
	/* 80CA54E4 */ // True False
void CylAction();
	/* 80CA55C4 */ // True False
void SphAction();
	/* 80CA5844 */ // True False
void SphAction2();
	/* 80CA58F4 */ // True False
void Action();
	/* 80CA59BC */ // True False
void setBaseMtx();
	/* 80CA5AE0 */ // True False
void CreateHeap();
	/* 80CA5B98 */ // True False
void create();
	/* 80CA62A4 */ // True False
void Create();
	/* 80CA62F8 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80CA636C */ // True False
void Draw();
	/* 80CA6444 */ // True False
void Delete();
};

struct dSv_memBit_c {
	/* 80034934 */ // False False
//  int False
void isDungeonItem(int) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C37C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, char const*, dRes_info_c*, int);
	/* 8003C6B8 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
void getObjectResName2Index(char const*, char const*);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
	/* 80CA610C */ // True False
~dCcD_Stts();
	/* 80CA619C */ // True False
dCcD_Stts();
};

struct dCcD_SrcSph {
};

struct dCcD_SrcCyl {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 80CA5F74 */ // True False
~dCcD_Sph();
	/* 80CA6040 */ // True False
dCcD_Sph();
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80CA61F0 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084658 */ // False False
void ChkCoHit();
	/* 800846F0 */ // False False
void GetCoHitObj();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgW_Base {
};

struct dBgW {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80CA60C4 */ // True False
~cM3dGSph();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 80CA5EE4 */ // True False
~cM3dGCyl();
};

struct cM3dGAab {
	/* 80CA5F2C */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
	/* 80263A48 */ // False False
void GetAc();
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80CA625C */ // True False
~cCcD_GStts();
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjOCTHASHI_Create(fopAc_ac_c*);
// True False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
static void daObjOCTHASHI_Delete(daObjOCTHASHI_c*);
// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void rideCallBack(dBgW*, fopAc_ac_c*, fopAc_ac_c*);
// True False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
static void daObjOCTHASHI_Draw(daObjOCTHASHI_c*);
// True False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
static void daObjOCTHASHI_Execute(daObjOCTHASHI_c*);
// True False
//  bool False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
static bool daObjOCTHASHI_IsDelete(daObjOCTHASHI_c*);

// True False
extern "C" void initCcCylinder__15daObjOCTHASHI_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjOCTHASHI_Create__FP10fopAc_ac_c();
// True False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
extern "C" static void daObjOCTHASHI_Delete__FP15daObjOCTHASHI_c();
// True False
extern "C" void SetCoSph__15daObjOCTHASHI_cFv();
// True False
extern "C" void SetCoCyl__15daObjOCTHASHI_cFv();
// True False
//  int False
extern "C" void HakaiSet2__15daObjOCTHASHI_cFi();
// True False
extern "C" void HakaiMotion2__15daObjOCTHASHI_cFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void CylAction__15daObjOCTHASHI_cFv();
// True False
extern "C" void SphAction__15daObjOCTHASHI_cFv();
// True False
extern "C" void SphAction2__15daObjOCTHASHI_cFv();
// True False
extern "C" void Action__15daObjOCTHASHI_cFv();
// True False
extern "C" void setBaseMtx__15daObjOCTHASHI_cFv();
// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c();
// True False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
extern "C" static void daObjOCTHASHI_Draw__FP15daObjOCTHASHI_c();
// True False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
extern "C" static void daObjOCTHASHI_Execute__FP15daObjOCTHASHI_c();
// True False
extern "C" void CreateHeap__15daObjOCTHASHI_cFv();
// True False
extern "C" void create__15daObjOCTHASHI_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__8dCcD_SphFv();
// True False
extern "C" void __ct__8dCcD_SphFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__9dCcD_SttsFv();
// True False
extern "C" void __ct__9dCcD_SttsFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
//  bool False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
extern "C" static bool daObjOCTHASHI_IsDelete__FP15daObjOCTHASHI_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void Create__15daObjOCTHASHI_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__15daObjOCTHASHI_cFPPA3_A4_f();
// True False
extern "C" void Draw__15daObjOCTHASHI_cFv();
// True False
extern "C" void Delete__15daObjOCTHASHI_cFv();
extern "C" extern u32 const lit_3681;
extern "C" extern u32 const lit_3682;
extern "C" extern u32 const lit_3684;
extern "C" extern u32 const lit_3776;
extern "C" extern u32 const lit_3777;
extern "C" extern u32 const lit_3778;
extern "C" extern u32 const lit_3779;
extern "C" extern u32 const lit_3780;
extern "C" extern u32 const lit_3781;
extern "C" extern u32 const lit_3823[1 + 1 /* padding */];
extern "C" extern u8 const lit_3887[8];
extern "C" extern u8 const lit_3888[8];
extern "C" extern u8 const lit_3889[8];
extern "C" extern u32 const lit_3890;
extern "C" extern u32 const lit_3903;
extern "C" extern u32 const lit_3904;
extern "C" extern u32 const lit_3989;
extern "C" extern u32 const lit_3990;
extern "C" extern u32 const lit_3991;
extern "C" extern u32 const lit_3992;
extern "C" extern u32 const lit_3993;
extern "C" extern u32 const lit_3994;
extern "C" extern u32 const lit_3995;
extern "C" extern u32 const lit_4165;
extern "C" extern u32 const lit_4166;
extern "C" extern u32 const lit_4167;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_OCTHASHI[12];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__15daObjOCTHASHI_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void def_se_set(Z2Creature*, cCcD_Obj*, u32, fopAc_ac_c*);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
extern "C" void isDungeonItem__12dSv_memBit_cCFi();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getObjectResName2Index__14dRes_control_cFPCcPCc();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetCoHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void GetAc__8cCcD_ObjFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  s16 False
//  s16 False
//  s16 False
extern "C" void __ct__5csXyzFsss();
// False False
//  csXyz& False
// 	 csXyz False
extern "C" void __apl__5csXyzFR5csXyz();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECScale();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_20();
// False False
extern "C" void _savegpr_21();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _restgpr_20();
// False False
extern "C" void _restgpr_21();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 data_80CA6680[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80CA6480-80CA64C0 0040+00 s=6 e=0 z=0  None .rodata    ccSphSrc$3655                                                */
SECTION_RODATA static u8 const ccSphSrc[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13,
	0x00, 0x10, 0x40, 0x02, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x7F, 0x0A, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x0A, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
};

/* 80CA64C0-80CA64C4 0004+00 s=0 e=0 z=0  None .rodata    @3681                                                        */
SECTION_RODATA u32 const lit_3681 = 0x44480000;

/* 80CA64C4-80CA64C8 0004+00 s=0 e=0 z=0  None .rodata    @3682                                                        */
SECTION_RODATA u32 const lit_3682 = 0x42C80000;

/* 80CA64C8-80CA64CC 0004+00 s=1 e=0 z=0  None .rodata    @3683                                                        */
SECTION_RODATA static u8 const lit_3683[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80CA64CC-80CA64D0 0004+00 s=0 e=0 z=0  None .rodata    @3684                                                        */
SECTION_RODATA u32 const lit_3684 = 0x43C80000;

/* 80CA64D0-80CA64D8 0008+00 s=1 e=0 z=0  None .rodata    @3686                                                        */
SECTION_RODATA static u8 const lit_3686[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80CA64D8-80CA64DC 0004+00 s=1 e=0 z=0  None .rodata    @3713                                                        */
SECTION_RODATA static u32 const lit_3713 = 0x43EB0000;

/* 80CA64DC-80CA64E0 0004+00 s=1 e=0 z=0  None .rodata    @3718                                                        */
SECTION_RODATA static u32 const lit_3718 = 0x44458000;

/* 80CA64E0-80CA64E4 0004+00 s=0 e=0 z=0  None .rodata    @3776                                                        */
SECTION_RODATA u32 const lit_3776 = 0x41200000;

/* 80CA64E4-80CA64E8 0004+00 s=0 e=0 z=0  None .rodata    @3777                                                        */
SECTION_RODATA u32 const lit_3777 = 0x3F4CCCCD;

/* 80CA64E8-80CA64EC 0004+00 s=0 e=0 z=0  None .rodata    @3778                                                        */
SECTION_RODATA u32 const lit_3778 = 0x45FA0000;

/* 80CA64EC-80CA64F0 0004+00 s=0 e=0 z=0  None .rodata    @3779                                                        */
SECTION_RODATA u32 const lit_3779 = 0x3F19999A;

/* 80CA64F0-80CA64F4 0004+00 s=0 e=0 z=0  None .rodata    @3780                                                        */
SECTION_RODATA u32 const lit_3780 = 0x3F800000;

/* 80CA64F4-80CA64F8 0004+00 s=0 e=0 z=0  None .rodata    @3781                                                        */
SECTION_RODATA u32 const lit_3781 = 0x3F333333;

/* 80CA64F8-80CA6500 0004+04 s=0 e=0 z=0  None .rodata    @3823                                                        */
SECTION_RODATA u32 const lit_3823[1 + 1 /* padding */] = {
	0x40E00000,
	/* padding */
	0x00000000,
};

/* 80CA6500-80CA6508 0008+00 s=0 e=0 z=0  None .rodata    @3887                                                        */
SECTION_RODATA u8 const lit_3887[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CA6508-80CA6510 0008+00 s=0 e=0 z=0  None .rodata    @3888                                                        */
SECTION_RODATA u8 const lit_3888[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CA6510-80CA6518 0008+00 s=0 e=0 z=0  None .rodata    @3889                                                        */
SECTION_RODATA u8 const lit_3889[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CA6518-80CA651C 0004+00 s=0 e=0 z=0  None .rodata    @3890                                                        */
SECTION_RODATA u32 const lit_3890 = 0x44FA0000;

/* 80CA651C-80CA6520 0004+00 s=0 e=0 z=0  None .rodata    @3903                                                        */
SECTION_RODATA u32 const lit_3903 = 0x44180000;

/* 80CA6520-80CA6524 0004+00 s=0 e=0 z=0  None .rodata    @3904                                                        */
SECTION_RODATA u32 const lit_3904 = 0x43E00000;

/* 80CA6524-80CA6528 0004+00 s=0 e=0 z=0  None .rodata    @3989                                                        */
SECTION_RODATA u32 const lit_3989 = 0xC2200000;

/* 80CA6528-80CA652C 0004+00 s=0 e=0 z=0  None .rodata    @3990                                                        */
SECTION_RODATA u32 const lit_3990 = 0x3DA3D70A;

/* 80CA652C-80CA6530 0004+00 s=0 e=0 z=0  None .rodata    @3991                                                        */
SECTION_RODATA u32 const lit_3991 = 0xBF800000;

/* 80CA6530-80CA6534 0004+00 s=0 e=0 z=0  None .rodata    @3992                                                        */
SECTION_RODATA u32 const lit_3992 = 0x43FA0000;

/* 80CA6534-80CA6538 0004+00 s=0 e=0 z=0  None .rodata    @3993                                                        */
SECTION_RODATA u32 const lit_3993 = 0x41700000;

/* 80CA6538-80CA653C 0004+00 s=0 e=0 z=0  None .rodata    @3994                                                        */
SECTION_RODATA u32 const lit_3994 = 0xC1700000;

/* 80CA653C-80CA6540 0004+00 s=0 e=0 z=0  None .rodata    @3995                                                        */
SECTION_RODATA u32 const lit_3995 = 0x3F000000;

/* 80CA6540-80CA6544 0004+00 s=1 e=0 z=0  None .rodata    @4057                                                        */
SECTION_RODATA static u32 const lit_4057 = 0xC3C80000;

/* 80CA6544-80CA6548 0004+00 s=0 e=0 z=0  None .rodata    @4165                                                        */
SECTION_RODATA u32 const lit_4165 = 0xC47A0000;

/* 80CA6548-80CA654C 0004+00 s=0 e=0 z=0  None .rodata    @4166                                                        */
SECTION_RODATA u32 const lit_4166 = 0xC3FA0000;

/* 80CA654C-80CA6550 0004+00 s=0 e=0 z=0  None .rodata    @4167                                                        */
SECTION_RODATA u32 const lit_4167 = 0x447A0000;

/* 80CA6550-80CA6583 0033+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80CA6550 = "Octhashi";
SECTION_DEAD char const* const stringBase_80CA6559 = "S_octhashi00.bmd";
SECTION_DEAD char const* const stringBase_80CA656A = "D_MN01A";
SECTION_DEAD char const* const stringBase_80CA6572 = "S_octhashi00.dzb";
#pragma pop

/* 80CA6584-80CA6588 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80CA6588-80CA65CC 0044+00 s=1 e=0 z=0  None .data      ccCylSrc$3656                                                */
SECTION_DATA static u8 ccCylSrc[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x10, 0x40, 0x02, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x75, 0x0A, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x0A, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80CA4BB8-80CA4D98 01E0+00 s=1 e=0 z=0  None .text      initCcCylinder__15daObjOCTHASHI_cFv                          */
//	80CA4BE0: 803621BC (_savegpr_21)
//	80CA4BE8: 80CA6480 (ccSphSrc)
//	80CA4BEC: 80CA6480 (ccSphSrc)
//	80CA4BF0: 80CA6680 (data_80CA6680)
//	80CA4BF4: 80CA6680 (data_80CA6680)
//	80CA4C38: 80CA6588 (ccCylSrc)
//	80CA4C3C: 80CA6588 (ccCylSrc)
//	80CA4C5C: 803DD470 (now__14mDoMtx_stack_c)
//	80CA4C60: 803DD470 (now__14mDoMtx_stack_c)
//	80CA4C90: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80CA4C98: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80CA4CA4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80CA4CCC: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80CA4CFC: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80CA4D0C: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80CA4D3C: 80CA6588 (ccCylSrc)
//	80CA4D40: 80CA6588 (ccCylSrc)
//	80CA4D44: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80CA4D58: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80CA4D84: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::initCcCylinder() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/initCcCylinder__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA4D98-80CA4DB8 0020+00 s=1 e=0 z=0  None .text      daObjOCTHASHI_Create__FP10fopAc_ac_c                         */
//	80CA4DA4: 80CA5B98 (create__15daObjOCTHASHI_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjOCTHASHI_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/daObjOCTHASHI_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80CA4DB8-80CA4DFC 0044+00 s=1 e=0 z=0  None .text      daObjOCTHASHI_Delete__FP15daObjOCTHASHI_c                    */
//	80CA4DCC: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
asm static void daObjOCTHASHI_Delete(daObjOCTHASHI_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/daObjOCTHASHI_Delete__FP15daObjOCTHASHI_c.s"
}
#pragma pop


/* 80CA4DFC-80CA4EA4 00A8+00 s=1 e=0 z=0  None .text      SetCoSph__15daObjOCTHASHI_cFv                                */
//	80CA4E0C: 803621C8 (_savegpr_24)
//	80CA4E20: 804061C0 (g_dComIfG_gameInfo)
//	80CA4E24: 804061C0 (g_dComIfG_gameInfo)
//	80CA4E2C: 80CA64D8 (lit_3713)
//	80CA4E30: 80CA64D8 (lit_3713)
//	80CA4E54: 8026F708 (SetR__8cM3dGSphFf)
//	80CA4E64: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80CA4E70: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80CA4E90: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::SetCoSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/SetCoSph__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA4EA4-80CA4F24 0080+00 s=1 e=0 z=0  None .text      SetCoCyl__15daObjOCTHASHI_cFv                                */
//	80CA4EC0: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80CA4EC8: 80CA64DC (lit_3718)
//	80CA4ECC: 80CA64DC (lit_3718)
//	80CA4ED4: 80CA64D0 (lit_3686)
//	80CA4ED8: 80CA64D0 (lit_3686)
//	80CA4EF8: 8026F1F8 (SetH__8cM3dGCylFf)
//	80CA4EFC: 804061C0 (g_dComIfG_gameInfo)
//	80CA4F00: 804061C0 (g_dComIfG_gameInfo)
//	80CA4F0C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::SetCoCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/SetCoCyl__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA4F24-80CA52F0 03CC+00 s=1 e=0 z=0  None .text      HakaiSet2__15daObjOCTHASHI_cFi                               */
//	80CA4F5C: 803621B8 (_savegpr_20)
//	80CA4F68: 80CA6480 (ccSphSrc)
//	80CA4F6C: 80CA6480 (ccSphSrc)
//	80CA4F74: 804061C0 (g_dComIfG_gameInfo)
//	80CA4F78: 804061C0 (g_dComIfG_gameInfo)
//	80CA4F90: 803DD470 (now__14mDoMtx_stack_c)
//	80CA4F94: 803DD470 (now__14mDoMtx_stack_c)
//	80CA4FD8: 8026798C (cM_rndFX__Ff)
//	80CA500C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80CA501C: 80346D6C (PSMTXMultVec)
//	80CA5114: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80CA5144: 803DD470 (now__14mDoMtx_stack_c)
//	80CA5148: 803DD470 (now__14mDoMtx_stack_c)
//	80CA5190: 8026798C (cM_rndFX__Ff)
//	80CA51C8: 80346D6C (PSMTXMultVec)
//	80CA528C: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80CA52DC: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daObjOCTHASHI_c::HakaiSet2(int param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/HakaiSet2__15daObjOCTHASHI_cFi.s"
}
#pragma pop


/* 80CA52F0-80CA546C 017C+00 s=1 e=0 z=0  None .text      HakaiMotion2__15daObjOCTHASHI_cFv                            */
//	80CA5300: 803621BC (_savegpr_21)
//	80CA5308: 80CA6480 (ccSphSrc)
//	80CA530C: 80CA6480 (ccSphSrc)
//	80CA5334: 802673F4 (__ct__5csXyzFsss)
//	80CA5344: 804061C0 (g_dComIfG_gameInfo)
//	80CA5348: 804061C0 (g_dComIfG_gameInfo)
//	80CA535C: 8026745C (__apl__5csXyzFR5csXyz)
//	80CA5384: 80347090 (PSVECAdd)
//	80CA53EC: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80CA5458: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::HakaiMotion2() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/HakaiMotion2__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA546C-80CA54A8 003C+00 s=1 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80CA548C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__dt__5csXyzFv.s"
}
#pragma pop


/* 80CA54A8-80CA54E4 003C+00 s=1 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80CA54C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__dt__4cXyzFv.s"
}
#pragma pop


/* 80CA54E4-80CA55C4 00E0+00 s=1 e=0 z=0  None .text      CylAction__15daObjOCTHASHI_cFv                               */
//	80CA54FC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80CA5524: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80CA5538: 80087514 (def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c)
//	80CA5554: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	80CA5564: 800846F0 (GetCoHitObj__12dCcD_GObjInfFv)
//	80CA5590: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80CA559C: 804061C0 (g_dComIfG_gameInfo)
//	80CA55A0: 804061C0 (g_dComIfG_gameInfo)
//	80CA55AC: 80074250 (Release__4cBgSFP9dBgW_Base)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::CylAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/CylAction__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA55C4-80CA5844 0280+00 s=1 e=0 z=0  None .text      SphAction__15daObjOCTHASHI_cFv                               */
//	80CA55D4: 803621CC (_savegpr_25)
//	80CA55DC: 80CA6480 (ccSphSrc)
//	80CA55E0: 80CA6480 (ccSphSrc)
//	80CA55FC: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	80CA560C: 800846F0 (GetCoHitObj__12dCcD_GObjInfFv)
//	80CA5610: 80263A48 (GetAc__8cCcD_ObjFv)
//	80CA561C: 800846F0 (GetCoHitObj__12dCcD_GObjInfFv)
//	80CA5648: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80CA56DC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CA56E0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CA570C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CA5718: 80CA4F24 (HakaiSet2__15daObjOCTHASHI_cFi)
//	80CA5730: 8026798C (cM_rndFX__Ff)
//	80CA5750: 8026798C (cM_rndFX__Ff)
//	80CA576C: 8026798C (cM_rndFX__Ff)
//	80CA5784: 803DD470 (now__14mDoMtx_stack_c)
//	80CA5788: 803DD470 (now__14mDoMtx_stack_c)
//	80CA5790: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80CA5798: 803DD470 (now__14mDoMtx_stack_c)
//	80CA579C: 803DD470 (now__14mDoMtx_stack_c)
//	80CA57A4: 80346D6C (PSMTXMultVec)
//	80CA57D0: 80CA52F0 (HakaiMotion2__15daObjOCTHASHI_cFv)
//	80CA57FC: 803470D8 (PSVECScale)
//	80CA5810: 80347090 (PSVECAdd)
//	80CA5830: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::SphAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/SphAction__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA5844-80CA58F4 00B0+00 s=1 e=0 z=0  None .text      SphAction2__15daObjOCTHASHI_cFv                              */
//	80CA5854: 803621D8 (_savegpr_28)
//	80CA5874: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80CA5884: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80CA58B0: 80087514 (def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c)
//	80CA58E0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::SphAction2() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/SphAction2__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA58F4-80CA59BC 00C8+00 s=1 e=0 z=0  None .text      Action__15daObjOCTHASHI_cFv                                  */
//	80CA597C: 80CA54E4 (CylAction__15daObjOCTHASHI_cFv)
//	80CA5984: 80CA4EA4 (SetCoCyl__15daObjOCTHASHI_cFv)
//	80CA598C: 80CA55C4 (SphAction__15daObjOCTHASHI_cFv)
//	80CA5994: 80CA4DFC (SetCoSph__15daObjOCTHASHI_cFv)
//	80CA599C: 80CA5844 (SphAction2__15daObjOCTHASHI_cFv)
//	80CA59A4: 80CA4DFC (SetCoSph__15daObjOCTHASHI_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::Action() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/Action__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA59BC-80CA5A88 00CC+00 s=1 e=0 z=0  None .text      setBaseMtx__15daObjOCTHASHI_cFv                              */
//	80CA59CC: 803621C8 (_savegpr_24)
//	80CA59E4: 80CA64C8 (lit_3683)
//	80CA59E8: 80CA64C8 (lit_3683)
//	80CA59EC: 80CA6540 (lit_4057)
//	80CA59F0: 80CA6540 (lit_4057)
//	80CA59F4: 803DD470 (now__14mDoMtx_stack_c)
//	80CA59F8: 803DD470 (now__14mDoMtx_stack_c)
//	80CA5A08: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80CA5A10: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80CA5A1C: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80CA5A2C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80CA5A40: 803464B0 (PSMTXCopy)
//	80CA5A60: 803DD470 (now__14mDoMtx_stack_c)
//	80CA5A64: 803DD470 (now__14mDoMtx_stack_c)
//	80CA5A6C: 803464B0 (PSMTXCopy)
//	80CA5A74: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/setBaseMtx__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA5A88-80CA5A94 000C+00 s=1 e=0 z=0  None .text      rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void rideCallBack(dBgW* param_0, fopAc_ac_c* param_1, fopAc_ac_c* param_2) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c.s"
}
#pragma pop


/* 80CA5A94-80CA5AC0 002C+00 s=1 e=0 z=0  None .text      daObjOCTHASHI_Draw__FP15daObjOCTHASHI_c                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
asm static void daObjOCTHASHI_Draw(daObjOCTHASHI_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/daObjOCTHASHI_Draw__FP15daObjOCTHASHI_c.s"
}
#pragma pop


/* 80CA5AC0-80CA5AE0 0020+00 s=2 e=0 z=0  None .text      daObjOCTHASHI_Execute__FP15daObjOCTHASHI_c                   */
//	80CA5ACC: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
asm static void daObjOCTHASHI_Execute(daObjOCTHASHI_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/daObjOCTHASHI_Execute__FP15daObjOCTHASHI_c.s"
}
#pragma pop


/* 80CA5AE0-80CA5B98 00B8+00 s=1 e=0 z=0  None .text      CreateHeap__15daObjOCTHASHI_cFv                              */
//	80CA5AF0: 803621D4 (_savegpr_27)
//	80CA5AF8: 80CA6584 (l_arcName)
//	80CA5AFC: 80CA6584 (l_arcName)
//	80CA5B04: 80CA6550 (stringBase0)
//	80CA5B08: 80CA6550 (stringBase0)
//	80CA5B10: 804061C0 (g_dComIfG_gameInfo)
//	80CA5B14: 804061C0 (g_dComIfG_gameInfo)
//	80CA5B24: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80CA5B48: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80CA5B84: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/CreateHeap__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CA65CC-80CA65EC 0020+00 s=1 e=0 z=0  None .data      l_daObjOCTHASHI_Method                                       */
SECTION_DATA static void* l_daObjOCTHASHI_Method[8] = {
	(void*)daObjOCTHASHI_Create__FP10fopAc_ac_c,
	(void*)daObjOCTHASHI_Delete__FP15daObjOCTHASHI_c,
	(void*)daObjOCTHASHI_Execute__FP15daObjOCTHASHI_c,
	(void*)daObjOCTHASHI_IsDelete__FP15daObjOCTHASHI_c,
	(void*)daObjOCTHASHI_Draw__FP15daObjOCTHASHI_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80CA65EC-80CA661C 0030+00 s=0 e=0 z=1  None .data      g_profile_OCTHASHI                                           */
SECTION_DATA void* g_profile_OCTHASHI[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x006D0000,
	(void*)&g_fpcLf_Method,
	(void*)0x000014B0,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01D10000,
	(void*)&l_daObjOCTHASHI_Method,
	(void*)0x00040000,
	(void*)0x000E0000,
};

/* 80CA661C-80CA6628 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80CA6628-80CA6634 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80CA6634-80CA6640 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80CA6640-80CA664C 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80CA664C-80CA6658 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80CA6658-80CA6680 0028+00 s=1 e=0 z=0  None .data      __vt__15daObjOCTHASHI_c                                      */
SECTION_DATA void* __vt__15daObjOCTHASHI_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__15daObjOCTHASHI_cFv,
	(void*)Create__15daObjOCTHASHI_cFv,
	(void*)Execute__15daObjOCTHASHI_cFPPA3_A4_f,
	(void*)Draw__15daObjOCTHASHI_cFv,
	(void*)Delete__15daObjOCTHASHI_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80CA5B98-80CA5EE4 034C+00 s=1 e=0 z=0  None .text      create__15daObjOCTHASHI_cFv                                  */
//	80CA5BA8: 803621D8 (_savegpr_28)
//	80CA5BB0: 80CA6480 (ccSphSrc)
//	80CA5BB4: 80CA6480 (ccSphSrc)
//	80CA5BD0: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80CA5BD4: 80CA6658 (__vt__15daObjOCTHASHI_c)
//	80CA5BD8: 80CA6658 (__vt__15daObjOCTHASHI_c)
//	80CA5BE4: 80CA6250 (__ct__4cXyzFv)
//	80CA5BE8: 80CA6250 (__ct__4cXyzFv)
//	80CA5BEC: 80CA54A8 (__dt__4cXyzFv)
//	80CA5BF0: 80CA54A8 (__dt__4cXyzFv)
//	80CA5BFC: 80361D60 (__construct_array)
//	80CA5C04: 80CA6250 (__ct__4cXyzFv)
//	80CA5C08: 80CA6250 (__ct__4cXyzFv)
//	80CA5C0C: 80CA54A8 (__dt__4cXyzFv)
//	80CA5C10: 80CA54A8 (__dt__4cXyzFv)
//	80CA5C1C: 80361D60 (__construct_array)
//	80CA5C24: 80CA624C (__ct__5csXyzFv)
//	80CA5C28: 80CA624C (__ct__5csXyzFv)
//	80CA5C2C: 80CA546C (__dt__5csXyzFv)
//	80CA5C30: 80CA546C (__dt__5csXyzFv)
//	80CA5C3C: 80361D60 (__construct_array)
//	80CA5C44: 80CA624C (__ct__5csXyzFv)
//	80CA5C48: 80CA624C (__ct__5csXyzFv)
//	80CA5C4C: 80CA546C (__dt__5csXyzFv)
//	80CA5C50: 80CA546C (__dt__5csXyzFv)
//	80CA5C5C: 80361D60 (__construct_array)
//	80CA5C64: 802C03C8 (__ct__10Z2CreatureFv)
//	80CA5C6C: 80CA619C (__ct__9dCcD_SttsFv)
//	80CA5C70: 80CA619C (__ct__9dCcD_SttsFv)
//	80CA5C74: 80CA610C (__dt__9dCcD_SttsFv)
//	80CA5C78: 80CA610C (__dt__9dCcD_SttsFv)
//	80CA5C84: 80361D60 (__construct_array)
//	80CA5C8C: 80CA6040 (__ct__8dCcD_SphFv)
//	80CA5C90: 80CA6040 (__ct__8dCcD_SphFv)
//	80CA5C94: 80CA5F74 (__dt__8dCcD_SphFv)
//	80CA5C98: 80CA5F74 (__dt__8dCcD_SphFv)
//	80CA5CA4: 80361D60 (__construct_array)
//	80CA5CB0: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80CA5CB4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CA5CB8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CA5CC0: 80CA664C (__vt__8cM3dGAab)
//	80CA5CC4: 80CA664C (__vt__8cM3dGAab)
//	80CA5CCC: 80CA6640 (__vt__8cM3dGCyl)
//	80CA5CD0: 80CA6640 (__vt__8cM3dGCyl)
//	80CA5CD8: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CA5CDC: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CA5CEC: 803AC050 (__vt__8dCcD_Cyl)
//	80CA5CF0: 803AC050 (__vt__8dCcD_Cyl)
//	80CA5D4C: 80CA6584 (l_arcName)
//	80CA5D50: 80CA6584 (l_arcName)
//	80CA5D58: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80CA5D68: 804061C0 (g_dComIfG_gameInfo)
//	80CA5D6C: 804061C0 (g_dComIfG_gameInfo)
//	80CA5D78: 80034934 (isDungeonItem__12dSv_memBit_cCFi)
//	80CA5D84: 804061C0 (g_dComIfG_gameInfo)
//	80CA5D88: 804061C0 (g_dComIfG_gameInfo)
//	80CA5D98: 80CA6550 (stringBase0)
//	80CA5D9C: 80CA6550 (stringBase0)
//	80CA5DA8: 80368994 (strcmp)
//	80CA5DC4: 804061C0 (g_dComIfG_gameInfo)
//	80CA5DC8: 804061C0 (g_dComIfG_gameInfo)
//	80CA5DD0: 80CA6584 (l_arcName)
//	80CA5DD4: 80CA6584 (l_arcName)
//	80CA5DDC: 80CA6550 (stringBase0)
//	80CA5DE0: 80CA6550 (stringBase0)
//	80CA5DEC: 8003C6B8 (getObjectResName2Index__14dRes_control_cFPCcPCc)
//	80CA5DF8: 80CA6584 (l_arcName)
//	80CA5DFC: 80CA6584 (l_arcName)
//	80CA5E04: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80CA5E08: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80CA5E14: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80CA5E3C: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80CA5E58: 80CA4BB8 (initCcCylinder__15daObjOCTHASHI_cFv)
//	80CA5E80: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80CA5E8C: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80CA5E90: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80CA5EB4: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80CA5EC4: 80CA5AC0 (daObjOCTHASHI_Execute__FP15daObjOCTHASHI_c)
//	80CA5ED0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/create__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA5EE4-80CA5F2C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80CA5EFC: 80CA6640 (__vt__8cM3dGCyl)
//	80CA5F00: 80CA6640 (__vt__8cM3dGCyl)
//	80CA5F10: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80CA5F2C-80CA5F74 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80CA5F44: 80CA664C (__vt__8cM3dGAab)
//	80CA5F48: 80CA664C (__vt__8cM3dGAab)
//	80CA5F58: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80CA5F74-80CA6040 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_SphFv                                            */
//	80CA5F94: 803ABFC0 (__vt__8dCcD_Sph)
//	80CA5F98: 803ABFC0 (__vt__8dCcD_Sph)
//	80CA5FB8: 803C3540 (__vt__12cCcD_SphAttr)
//	80CA5FBC: 803C3540 (__vt__12cCcD_SphAttr)
//	80CA5FD4: 80CA6634 (__vt__8cM3dGSph)
//	80CA5FD8: 80CA6634 (__vt__8cM3dGSph)
//	80CA5FE8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CA5FEC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CA5FFC: 80CA664C (__vt__8cM3dGAab)
//	80CA6000: 80CA664C (__vt__8cM3dGAab)
//	80CA6010: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80CA6020: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::~dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__dt__8dCcD_SphFv.s"
}
#pragma pop


/* 80CA6040-80CA60C4 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_SphFv                                            */
//	80CA6054: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80CA6058: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CA605C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CA6064: 80CA664C (__vt__8cM3dGAab)
//	80CA6068: 80CA664C (__vt__8cM3dGAab)
//	80CA6070: 80CA6634 (__vt__8cM3dGSph)
//	80CA6074: 80CA6634 (__vt__8cM3dGSph)
//	80CA607C: 803C3540 (__vt__12cCcD_SphAttr)
//	80CA6080: 803C3540 (__vt__12cCcD_SphAttr)
//	80CA6090: 803ABFC0 (__vt__8dCcD_Sph)
//	80CA6094: 803ABFC0 (__vt__8dCcD_Sph)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__ct__8dCcD_SphFv.s"
}
#pragma pop


/* 80CA60C4-80CA610C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80CA60DC: 80CA6634 (__vt__8cM3dGSph)
//	80CA60E0: 80CA6634 (__vt__8cM3dGSph)
//	80CA60F0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80CA610C-80CA619C 0090+00 s=1 e=0 z=0  None .text      __dt__9dCcD_SttsFv                                           */
//	80CA6124: 803AC2E4 (__vt__9dCcD_Stts)
//	80CA6128: 803AC2E4 (__vt__9dCcD_Stts)
//	80CA6140: 80CA6628 (__vt__10dCcD_GStts)
//	80CA6144: 80CA6628 (__vt__10dCcD_GStts)
//	80CA6154: 80CA661C (__vt__10cCcD_GStts)
//	80CA6158: 80CA661C (__vt__10cCcD_GStts)
//	80CA6168: 803C3728 (__vt__9cCcD_Stts)
//	80CA616C: 803C3728 (__vt__9cCcD_Stts)
//	80CA6180: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Stts::~dCcD_Stts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__dt__9dCcD_SttsFv.s"
}
#pragma pop


/* 80CA619C-80CA61F0 0054+00 s=1 e=0 z=0  None .text      __ct__9dCcD_SttsFv                                           */
//	80CA61B0: 803C3728 (__vt__9cCcD_Stts)
//	80CA61B4: 803C3728 (__vt__9cCcD_Stts)
//	80CA61C0: 80083760 (__ct__10dCcD_GSttsFv)
//	80CA61C4: 803AC2E4 (__vt__9dCcD_Stts)
//	80CA61C8: 803AC2E4 (__vt__9dCcD_Stts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Stts::dCcD_Stts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__ct__9dCcD_SttsFv.s"
}
#pragma pop


/* 80CA61F0-80CA624C 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80CA6208: 80CA6628 (__vt__10dCcD_GStts)
//	80CA620C: 80CA6628 (__vt__10dCcD_GStts)
//	80CA6218: 80CA661C (__vt__10cCcD_GStts)
//	80CA621C: 80CA661C (__vt__10cCcD_GStts)
//	80CA6230: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80CA624C-80CA6250 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80CA6250-80CA6254 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80CA6254-80CA625C 0008+00 s=1 e=0 z=0  None .text      daObjOCTHASHI_IsDelete__FP15daObjOCTHASHI_c                  */
// True False
//  bool False
//  daObjOCTHASHI_c* False
// 	 daObjOCTHASHI_c False
static bool daObjOCTHASHI_IsDelete(daObjOCTHASHI_c* param_0) {
	return true;
}


/* 80CA625C-80CA62A4 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80CA6274: 80CA661C (__vt__10cCcD_GStts)
//	80CA6278: 80CA661C (__vt__10cCcD_GStts)
//	80CA6288: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80CA62A4-80CA62F8 0054+00 s=1 e=0 z=0  None .text      Create__15daObjOCTHASHI_cFv                                  */
//	80CA62B0: 80CA6480 (ccSphSrc)
//	80CA62B4: 80CA6480 (ccSphSrc)
//	80CA62B8: 80CA5A88 (rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c)
//	80CA62BC: 80CA5A88 (rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c)
//	80CA62E0: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/func_80CA62A4.s"
}
#pragma pop


/* 80CA62F8-80CA636C 0074+00 s=1 e=0 z=0  None .text      Execute__15daObjOCTHASHI_cFPPA3_A4_f                         */
//	80CA6314: 80CA58F4 (Action__15daObjOCTHASHI_cFv)
//	80CA6324: 80CA59BC (setBaseMtx__15daObjOCTHASHI_cFv)
//	80CA6330: 8002D06C (dComIfGp_getReverb__Fi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjOCTHASHI_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/Execute__15daObjOCTHASHI_cFPPA3_A4_f.s"
}
#pragma pop


/* 80CA636C-80CA6444 00D8+00 s=1 e=0 z=0  None .text      Draw__15daObjOCTHASHI_cFv                                    */
//	80CA637C: 803621D8 (_savegpr_28)
//	80CA6384: 8042CA54 (g_env_light)
//	80CA6388: 8042CA54 (g_env_light)
//	80CA6398: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80CA63A4: 8042CA54 (g_env_light)
//	80CA63A8: 8042CA54 (g_env_light)
//	80CA63C4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80CA63DC: 804061C0 (g_dComIfG_gameInfo)
//	80CA63E0: 804061C0 (g_dComIfG_gameInfo)
//	80CA63E8: 80434AC8 (j3dSys)
//	80CA63EC: 80434AC8 (j3dSys)
//	80CA6410: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80CA6430: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/Draw__15daObjOCTHASHI_cFv.s"
}
#pragma pop


/* 80CA6444-80CA6478 0034+00 s=1 e=0 z=0  None .text      Delete__15daObjOCTHASHI_cFv                                  */
//	80CA6450: 80CA6584 (l_arcName)
//	80CA6454: 80CA6584 (l_arcName)
//	80CA6460: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjOCTHASHI_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_octhashi/d_a_obj_octhashi/Delete__15daObjOCTHASHI_cFv.s"
}
#pragma pop


