//
// Generated By: dol2asm
// Translation Unit: d_a_obj_crvlh_down
//

#include "rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct request_of_phase_process_class {};

struct cXyz {};

struct csXyz {
    /* 802673F4 */ csXyz(s16, s16, s16);
};

struct mDoMtx_stack_c {
    /* 8000CD64 */ void transS(cXyz const&);
    /* 8000CF44 */ void ZXYrotM(csXyz const&);
};

struct fopAc_ac_c {};

struct fopAcM_gc_c {
    /* 8001DCBC */ void gndCheck(cXyz const*);
};

struct daObjCRVLH_UP_c {
    /* 80BD4F1C */ void HakaiSet();
};

struct daObjCRVLH_DW_c {
    /* 80BD4138 */ void initCcCylinder();
    /* 80BD41A4 */ void SetCcSyl();
    /* 80BD4268 */ void BgRelease();
    /* 80BD42D8 */ void Break();
    /* 80BD45A4 */ void Obj_Hit();
    /* 80BD4644 */ void setBaseMtx();
    /* 80BD46EC */ void CreateHeap();
    /* 80BD4764 */ void create();
    /* 80BD4A84 */ void Create();
    /* 80BD4AC8 */ void Execute(f32 (**)[3][4]);
    /* 80BD4C44 */ void Draw();
    /* 80BD4CC8 */ void Delete();
};

struct daObjCRVHAHEN_c {
    /* 80BD342C */ void HahenSet(cXyz, cXyz, cXyz, cXyz, f32);
};

struct dVibration_c {
    /* 8006FA24 */ void StartShock(int, int, cXyz);
};

struct dSv_info_c {
    /* 80035200 */ void onSwitch(int, int);
    /* 80035360 */ void isSwitch(int, int) const;
};

struct dKy_tevstr_c {};

struct J3DModelData {};

struct dScnKy_env_light_c {
    /* 801A37C4 */ void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
    /* 801A4DA0 */ void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C37C */ void getRes(char const*, char const*, dRes_info_c*, int);
    /* 8003C6B8 */ void getObjectResName2Index(char const*, char const*);
};

struct dPa_levelEcallBack {};

struct _GXColor {};

struct dPa_control_c {
    /* 8004CA90 */ void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*,
                            u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*,
                            cXyz const*, f32);
};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
};

struct dCcD_GObjInf {
    /* 80083A28 */ dCcD_GObjInf();
    /* 80084460 */ void ChkTgHit();
    /* 800844F8 */ void GetTgHitObj();
    /* 80084658 */ void ChkCoHit();
    /* 800846F0 */ void GetCoHitObj();
};

struct dCcD_Cyl {
    /* 800848B4 */ void Set(dCcD_SrcCyl const&);
};

struct dBgW_Base {};

struct dBgW {};

struct cBgS_PolyInfo {};

struct dBgS_MoveBgActor {
    /* 80078624 */ dBgS_MoveBgActor();
    /* 800786B0 */ bool IsDelete();
    /* 800786B8 */ bool ToFore();
    /* 800786C0 */ bool ToBack();
    /* 800787BC */ void MoveBGCreate(char const*, int,
                                     void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*,
                                              csXyz*, csXyz*),
                                     u32, f32 (*)[3][4]);
    /* 800788DC */ void MoveBGDelete();
    /* 80078950 */ void MoveBGExecute();
};

struct cM3dGCyl {
    /* 8026F1DC */ void SetC(cXyz const&);
    /* 8026F200 */ void SetR(f32);
    /* 80BD49EC */ ~cM3dGCyl();
};

struct cM3dGAab {
    /* 80BD4A34 */ ~cM3dGAab();
};

struct cCcD_Obj {
    /* 80263A48 */ void GetAc();
};

struct cCcS {
    /* 80264BA8 */ void Set(cCcD_Obj*);
};

struct cBgW_BgId {
    /* 802681D4 */ void ChkUsed() const;
};

struct cBgS {
    /* 80074250 */ void Release(dBgW_Base*);
};

struct Vec {};

struct JAISoundID {};

struct Z2SeMgr {
    /* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {};

//
// Forward References:
//

static void daObjCRVLH_DW_Create(fopAc_ac_c*);
static void daObjCRVLH_DW_Delete(daObjCRVLH_DW_c*);
static void daObjCRVLH_DW_Draw(daObjCRVLH_DW_c*);
static void daObjCRVLH_DW_Execute(daObjCRVLH_DW_c*);
static bool daObjCRVLH_DW_IsDelete(daObjCRVLH_DW_c*);

extern "C" void initCcCylinder__15daObjCRVLH_DW_cFv();
extern "C" void SetCcSyl__15daObjCRVLH_DW_cFv();
extern "C" static void daObjCRVLH_DW_Create__FP10fopAc_ac_c();
extern "C" static void daObjCRVLH_DW_Delete__FP15daObjCRVLH_DW_c();
extern "C" void BgRelease__15daObjCRVLH_DW_cFv();
extern "C" void Break__15daObjCRVLH_DW_cFv();
extern "C" void Obj_Hit__15daObjCRVLH_DW_cFv();
extern "C" void setBaseMtx__15daObjCRVLH_DW_cFv();
extern "C" static void daObjCRVLH_DW_Draw__FP15daObjCRVLH_DW_c();
extern "C" static void daObjCRVLH_DW_Execute__FP15daObjCRVLH_DW_c();
extern "C" void CreateHeap__15daObjCRVLH_DW_cFv();
extern "C" void create__15daObjCRVLH_DW_cFv();
extern "C" void __dt__8cM3dGCylFv();
extern "C" void __dt__8cM3dGAabFv();
extern "C" static bool daObjCRVLH_DW_IsDelete__FP15daObjCRVLH_DW_c();
extern "C" void Create__15daObjCRVLH_DW_cFv();
extern "C" void Execute__15daObjCRVLH_DW_cFPPA3_A4_f();
extern "C" void Draw__15daObjCRVLH_DW_cFv();
extern "C" void Delete__15daObjCRVLH_DW_cFv();
extern "C" extern u32 const lit_3754;
extern "C" extern u8 const lit_3755[4];
extern "C" extern u32 const lit_3756;
extern "C" extern u32 const lit_3911;
extern "C" extern u32 const lit_3912;
extern "C" extern u32 const lit_3913;
extern "C" extern u32 const lit_3914;
extern "C" extern u32 const lit_3990;
extern "C" extern u32 const lit_4039;
extern "C" extern u32 const lit_4040;
extern "C" extern u32 const lit_4041;
extern "C" extern u32 const lit_4042;
extern "C" extern u32 const lit_4043;
extern "C" extern u32 const lit_4044;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_CRVLH_DW[12];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__15daObjCRVLH_DW_c[10];

//
// External References:
//

void mDoExt_modelUpdateDL(J3DModel*);
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
void fopAcM_SearchByID(unsigned int, fopAc_ac_c**);
void fopAcM_delete(fopAc_ac_c*);
void fopAcM_createChild(s16, unsigned int, u32, cXyz const*, int, csXyz const*, cXyz const*, s8,
                        int (*)(void*));
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
void dComIfGp_getReverb(int);
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
void operator delete(void*);

extern "C" void OSReport();
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void fopAcM_SearchByID__FUiPP10fopAc_ac_c();
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void dComIfGp_getReverb__Fi();
extern "C" void onSwitch__10dSv_info_cFii();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
extern "C" void getObjectResName2Index__14dRes_control_cFPCcPCc();
extern "C" void
set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void StartShock__12dVibration_cFii4cXyz();
extern "C" void Release__4cBgSFP9dBgW_Base();
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
extern "C" void __ct__16dBgS_MoveBgActorFv();
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
extern "C" void
MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void __ct__12dCcD_GObjInfFv();
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
extern "C" void GetCoHitObj__12dCcD_GObjInfFv();
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
extern "C" void GetAc__8cCcD_ObjFv();
extern "C" void Set__4cCcSFP8cCcD_Obj();
extern "C" void __ct__5csXyzFsss();
extern "C" void ChkUsed__9cBgW_BgIdCFv();
extern "C" void SetC__8cM3dGCylFRC4cXyz();
extern "C" void SetR__8cM3dGCylFf();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void __dl__FPv();
extern "C" void PSMTXCopy();
extern "C" void _savegpr_29();
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" void HahenSet__15daObjCRVHAHEN_cF4cXyz4cXyz4cXyz4cXyzf();
extern "C" void HakaiSet__15daObjCRVLH_UP_cFv();

//
// Declarations:
//

/* ############################################################################################## */
/* 80BD4D04-80BD4D48 0044+00 s=5 e=0 z=0  None .rodata    ccCylSrc$3655 */
SECTION_RODATA static u8 const ccCylSrc[68] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x75,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x43, 0x7A, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
};

/* 80BD4138-80BD41A4 006C+00 s=1 e=0 z=0  None .text      initCcCylinder__15daObjCRVLH_DW_cFv */
//	80BD415C: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80BD4164: 80BD4D04 (ccCylSrc)
//	80BD4168: 80BD4D04 (ccCylSrc)
//	80BD416C: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80BD4180: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::initCcCylinder() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/initCcCylinder__15daObjCRVLH_DW_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BD4D48-80BD4D4C 0004+00 s=1 e=0 z=0  None .rodata    @3670 */
SECTION_RODATA static u32 const lit_3670 = 0x42C80000;

/* 80BD4D4C-80BD4D50 0004+00 s=1 e=0 z=0  None .rodata    @3671 */
SECTION_RODATA static u32 const lit_3671 = 0x43480000;

/* 80BD41A4-80BD4224 0080+00 s=1 e=0 z=0  None .text      SetCcSyl__15daObjCRVLH_DW_cFv */
//	80BD41D0: 80BD4D48 (lit_3670)
//	80BD41D4: 80BD4D48 (lit_3670)
//	80BD41E8: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80BD41F0: 80BD4D4C (lit_3671)
//	80BD41F4: 80BD4D4C (lit_3671)
//	80BD41F8: 8026F200 (SetR__8cM3dGCylFf)
//	80BD41FC: 804061C0 (g_dComIfG_gameInfo)
//	80BD4200: 804061C0 (g_dComIfG_gameInfo)
//	80BD420C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::SetCcSyl() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/SetCcSyl__15daObjCRVLH_DW_cFv.s"
}
#pragma pop

/* 80BD4224-80BD4244 0020+00 s=1 e=0 z=0  None .text      daObjCRVLH_DW_Create__FP10fopAc_ac_c */
//	80BD4230: 80BD4764 (create__15daObjCRVLH_DW_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjCRVLH_DW_Create(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/daObjCRVLH_DW_Create__FP10fopAc_ac_c.s"
}
#pragma pop

/* 80BD4244-80BD4268 0024+00 s=1 e=0 z=0  None .text      daObjCRVLH_DW_Delete__FP15daObjCRVLH_DW_c
 */
//	80BD4250: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjCRVLH_DW_Delete(daObjCRVLH_DW_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/daObjCRVLH_DW_Delete__FP15daObjCRVLH_DW_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BD4D50-80BD4D54 0004+00 s=0 e=0 z=0  None .rodata    @3754 */
SECTION_RODATA u32 const lit_3754 = 0x3F800000;

/* 80BD4D54-80BD4D58 0004+00 s=0 e=0 z=0  None .rodata    @3755 */
SECTION_RODATA u8 const lit_3755[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80BD4D58-80BD4D5C 0004+00 s=0 e=0 z=0  None .rodata    @3756 */
SECTION_RODATA u32 const lit_3756 = 0xBF800000;

/* 80BD4D5C-80BD4D60 0004+00 s=0 e=0 z=0  None .rodata    @3911 */
SECTION_RODATA u32 const lit_3911 = 0xC1100000;

/* 80BD4D60-80BD4D64 0004+00 s=0 e=0 z=0  None .rodata    @3912 */
SECTION_RODATA u32 const lit_3912 = 0xC3FA0000;

/* 80BD4D64-80BD4D68 0004+00 s=0 e=0 z=0  None .rodata    @3913 */
SECTION_RODATA u32 const lit_3913 = 0x43FA0000;

/* 80BD4D68-80BD4D6C 0004+00 s=0 e=0 z=0  None .rodata    @3914 */
SECTION_RODATA u32 const lit_3914 = 0x447A0000;

/* 80BD4D6C-80BD4D70 0004+00 s=0 e=0 z=0  None .rodata    @3990 */
SECTION_RODATA u32 const lit_3990 = 0xC47A0000;

/* 80BD4D70-80BD4D74 0004+00 s=0 e=0 z=0  None .rodata    @4039 */
SECTION_RODATA u32 const lit_4039 = 0x437A0000;

/* 80BD4D74-80BD4D78 0004+00 s=0 e=0 z=0  None .rodata    @4040 */
SECTION_RODATA u32 const lit_4040 = 0x42A00000;

/* 80BD4D78-80BD4D7C 0004+00 s=0 e=0 z=0  None .rodata    @4041 */
SECTION_RODATA u32 const lit_4041 = 0x41200000;

/* 80BD4D7C-80BD4D80 0004+00 s=0 e=0 z=0  None .rodata    @4042 */
SECTION_RODATA u32 const lit_4042 = 0x41F00000;

/* 80BD4D80-80BD4D84 0004+00 s=0 e=0 z=0  None .rodata    @4043 */
SECTION_RODATA u32 const lit_4043 = 0x41A00000;

/* 80BD4D84-80BD4D88 0004+00 s=0 e=0 z=0  None .rodata    @4044 */
SECTION_RODATA u32 const lit_4044 = 0x453B8000;

/* 80BD4D88-80BD4DC2 003A+00 s=4 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80BD4D88 = "CrvLH_Dw";
SECTION_DEAD char const* const stringBase_80BD4D91 = "Release Error\n";
SECTION_DEAD char const* const stringBase_80BD4DA0 = "U_CrvLH_Down.bmd";
SECTION_DEAD char const* const stringBase_80BD4DB1 = "U_CrvLH_Down.dzb";
#pragma pop

/* 80BD4268-80BD42D8 0070+00 s=1 e=0 z=0  None .text      BgRelease__15daObjCRVLH_DW_cFv */
//	80BD4288: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80BD4294: 804061C0 (g_dComIfG_gameInfo)
//	80BD4298: 804061C0 (g_dComIfG_gameInfo)
//	80BD42A4: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80BD42B0: 80BD4D88 (stringBase0)
//	80BD42B4: 80BD4D88 (stringBase0)
//	80BD42C0: 80006ABC (OSReport)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::BgRelease() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/BgRelease__15daObjCRVLH_DW_cFv.s"
}
#pragma pop

/* 80BD42D8-80BD45A4 02CC+00 s=1 e=0 z=0  None .text      Break__15daObjCRVLH_DW_cFv */
//	80BD42E8: 803621DC (_savegpr_29)
//	80BD42F0: 80BD4D04 (ccCylSrc)
//	80BD42F4: 80BD4D04 (ccCylSrc)
//	80BD42F8: 804061C0 (g_dComIfG_gameInfo)
//	80BD42FC: 804061C0 (g_dComIfG_gameInfo)
//	80BD4304: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80BD4324: 802673F4 (__ct__5csXyzFsss)
//	80BD4328: 804061C0 (g_dComIfG_gameInfo)
//	80BD432C: 804061C0 (g_dComIfG_gameInfo)
//	80BD4374: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80BD43BC: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80BD4404: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80BD444C: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80BD4494: 8004CA90
//(set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80BD44AC: 804061C0 (g_dComIfG_gameInfo)
//	80BD44B0: 804061C0 (g_dComIfG_gameInfo)
//	80BD44C4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80BD4504: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	80BD4514: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	80BD452C: 80BD4F1C (HakaiSet__15daObjCRVLH_UP_cFv)
//	80BD4534: 80BD4268 (BgRelease__15daObjCRVLH_DW_cFv)
//	80BD4548: 8002D06C (dComIfGp_getReverb__Fi)
//	80BD455C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BD4560: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BD4588: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80BD4590: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::Break() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/Break__15daObjCRVLH_DW_cFv.s"
}
#pragma pop

/* 80BD45A4-80BD4644 00A0+00 s=1 e=0 z=0  None .text      Obj_Hit__15daObjCRVLH_DW_cFv */
//	80BD45C8: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	80BD45D8: 800846F0 (GetCoHitObj__12dCcD_GObjInfFv)
//	80BD45DC: 80263A48 (GetAc__8cCcD_ObjFv)
//	80BD45FC: 80BD42D8 (Break__15daObjCRVLH_DW_cFv)
//	80BD4608: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80BD4618: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80BD462C: 80BD42D8 (Break__15daObjCRVLH_DW_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::Obj_Hit() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/Obj_Hit__15daObjCRVLH_DW_cFv.s"
}
#pragma pop

/* 80BD4644-80BD46A0 005C+00 s=1 e=0 z=0  None .text      setBaseMtx__15daObjCRVLH_DW_cFv */
//	80BD465C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BD4664: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80BD4668: 803DD470 (now__14mDoMtx_stack_c)
//	80BD466C: 803DD470 (now__14mDoMtx_stack_c)
//	80BD4678: 803464B0 (PSMTXCopy)
//	80BD467C: 803DD470 (now__14mDoMtx_stack_c)
//	80BD4680: 803DD470 (now__14mDoMtx_stack_c)
//	80BD4688: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::setBaseMtx() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/setBaseMtx__15daObjCRVLH_DW_cFv.s"
}
#pragma pop

/* 80BD46A0-80BD46CC 002C+00 s=1 e=0 z=0  None .text      daObjCRVLH_DW_Draw__FP15daObjCRVLH_DW_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjCRVLH_DW_Draw(daObjCRVLH_DW_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/daObjCRVLH_DW_Draw__FP15daObjCRVLH_DW_c.s"
}
#pragma pop

/* 80BD46CC-80BD46EC 0020+00 s=2 e=0 z=0  None .text      daObjCRVLH_DW_Execute__FP15daObjCRVLH_DW_c
 */
//	80BD46D8: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjCRVLH_DW_Execute(daObjCRVLH_DW_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/daObjCRVLH_DW_Execute__FP15daObjCRVLH_DW_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BD4DC4-80BD4DC8 0004+00 s=3 e=0 z=0  None .data      l_arcName */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80BD46EC-80BD4764 0078+00 s=1 e=0 z=0  None .text      CreateHeap__15daObjCRVLH_DW_cFv */
//	80BD4700: 80BD4DC4 (l_arcName)
//	80BD4704: 80BD4DC4 (l_arcName)
//	80BD470C: 80BD4D88 (stringBase0)
//	80BD4710: 80BD4D88 (stringBase0)
//	80BD4718: 804061C0 (g_dComIfG_gameInfo)
//	80BD471C: 804061C0 (g_dComIfG_gameInfo)
//	80BD472C: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80BD473C: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::CreateHeap() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/CreateHeap__15daObjCRVLH_DW_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BD4DC8-80BD4DE8 0020+00 s=1 e=0 z=0  None .data      l_daObjCRVLH_DW_Method */
SECTION_DATA static void* l_daObjCRVLH_DW_Method[8] = {
    (void*)daObjCRVLH_DW_Create__FP10fopAc_ac_c,
    (void*)daObjCRVLH_DW_Delete__FP15daObjCRVLH_DW_c,
    (void*)daObjCRVLH_DW_Execute__FP15daObjCRVLH_DW_c,
    (void*)daObjCRVLH_DW_IsDelete__FP15daObjCRVLH_DW_c,
    (void*)daObjCRVLH_DW_Draw__FP15daObjCRVLH_DW_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80BD4DE8-80BD4E18 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_CRVLH_DW */
SECTION_DATA void* g_profile_Obj_CRVLH_DW[12] = {
    (void*)0xFFFFFFFD, (void*)0x0003FFFD,
    (void*)0x00740000, (void*)&g_fpcLf_Method,
    (void*)0x0000074C, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x01D70000, (void*)&l_daObjCRVLH_DW_Method,
    (void*)0x00040180, (void*)0x000E0000,
};

/* 80BD4E18-80BD4E24 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGCyl */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGCylFv,
};

/* 80BD4E24-80BD4E30 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGAabFv,
};

/* 80BD4E30-80BD4E58 0028+00 s=1 e=0 z=0  None .data      __vt__15daObjCRVLH_DW_c */
SECTION_DATA void* __vt__15daObjCRVLH_DW_c[10] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)CreateHeap__15daObjCRVLH_DW_cFv,
    (void*)Create__15daObjCRVLH_DW_cFv,
    (void*)Execute__15daObjCRVLH_DW_cFPPA3_A4_f,
    (void*)Draw__15daObjCRVLH_DW_cFv,
    (void*)Delete__15daObjCRVLH_DW_cFv,
    (void*)IsDelete__16dBgS_MoveBgActorFv,
    (void*)ToFore__16dBgS_MoveBgActorFv,
    (void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80BD4764-80BD49EC 0288+00 s=1 e=0 z=0  None .text      create__15daObjCRVLH_DW_cFv */
//	80BD4774: 803621DC (_savegpr_29)
//	80BD477C: 80BD4D04 (ccCylSrc)
//	80BD4780: 80BD4D04 (ccCylSrc)
//	80BD479C: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80BD47A0: 80BD4E30 (__vt__15daObjCRVLH_DW_c)
//	80BD47A4: 80BD4E30 (__vt__15daObjCRVLH_DW_c)
//	80BD47AC: 803C3728 (__vt__9cCcD_Stts)
//	80BD47B0: 803C3728 (__vt__9cCcD_Stts)
//	80BD47BC: 80083760 (__ct__10dCcD_GSttsFv)
//	80BD47C0: 803AC2E4 (__vt__9dCcD_Stts)
//	80BD47C4: 803AC2E4 (__vt__9dCcD_Stts)
//	80BD47DC: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80BD47E0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BD47E4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80BD47EC: 80BD4E24 (__vt__8cM3dGAab)
//	80BD47F0: 80BD4E24 (__vt__8cM3dGAab)
//	80BD47F8: 80BD4E18 (__vt__8cM3dGCyl)
//	80BD47FC: 80BD4E18 (__vt__8cM3dGCyl)
//	80BD4804: 803C35A4 (__vt__12cCcD_CylAttr)
//	80BD4808: 803C35A4 (__vt__12cCcD_CylAttr)
//	80BD4818: 803AC050 (__vt__8dCcD_Cyl)
//	80BD481C: 803AC050 (__vt__8dCcD_Cyl)
//	80BD4844: 80BD4DC4 (l_arcName)
//	80BD4848: 80BD4DC4 (l_arcName)
//	80BD4850: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80BD4874: 804061C0 (g_dComIfG_gameInfo)
//	80BD4878: 804061C0 (g_dComIfG_gameInfo)
//	80BD4884: 80035360 (isSwitch__10dSv_info_cCFii)
//	80BD48A0: 804061C0 (g_dComIfG_gameInfo)
//	80BD48A4: 804061C0 (g_dComIfG_gameInfo)
//	80BD48AC: 80BD4DC4 (l_arcName)
//	80BD48B0: 80BD4DC4 (l_arcName)
//	80BD48B8: 80BD4D88 (stringBase0)
//	80BD48BC: 80BD4D88 (stringBase0)
//	80BD48C8: 8003C6B8 (getObjectResName2Index__14dRes_control_cFPCcPCc)
//	80BD48D4: 80BD4DC4 (l_arcName)
//	80BD48D8: 80BD4DC4 (l_arcName)
//	80BD48E0: 80075AD8
//(dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz) 	80BD48E4:
//80075AD8
//(dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz) 	80BD48F0:
//800787BC
//(MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80BD4908: 80BD4138 (initCcCylinder__15daObjCRVLH_DW_cFv)
//	80BD493C: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80BD4948: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80BD494C: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80BD4980: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80BD4988: 80BD46CC (daObjCRVLH_DW_Execute__FP15daObjCRVLH_DW_c)
//	80BD49C8: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	80BD49D8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::create() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/create__15daObjCRVLH_DW_cFv.s"
}
#pragma pop

/* 80BD49EC-80BD4A34 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv */
//	80BD4A04: 80BD4E18 (__vt__8cM3dGCyl)
//	80BD4A08: 80BD4E18 (__vt__8cM3dGCyl)
//	80BD4A18: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGCyl::~cM3dGCyl() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/__dt__8cM3dGCylFv.s"
}
#pragma pop

/* 80BD4A34-80BD4A7C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv */
//	80BD4A4C: 80BD4E24 (__vt__8cM3dGAab)
//	80BD4A50: 80BD4E24 (__vt__8cM3dGAab)
//	80BD4A60: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGAab::~cM3dGAab() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/__dt__8cM3dGAabFv.s"
}
#pragma pop

/* 80BD4A7C-80BD4A84 0008+00 s=1 e=0 z=0  None .text daObjCRVLH_DW_IsDelete__FP15daObjCRVLH_DW_c
 */
static bool daObjCRVLH_DW_IsDelete(daObjCRVLH_DW_c* param_0) {
    return true;
}

/* 80BD4A84-80BD4AC8 0044+00 s=1 e=0 z=0  None .text      Create__15daObjCRVLH_DW_cFv */
//	80BD4A90: 80BD4D04 (ccCylSrc)
//	80BD4A94: 80BD4D04 (ccCylSrc)
//	80BD4AB0: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::Create() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/func_80BD4A84.s"
}
#pragma pop

/* 80BD4AC8-80BD4C44 017C+00 s=1 e=0 z=0  None .text      Execute__15daObjCRVLH_DW_cFPPA3_A4_f */
//	80BD4AD8: 803621DC (_savegpr_29)
//	80BD4AE4: 80BD4D04 (ccCylSrc)
//	80BD4AE8: 80BD4D04 (ccCylSrc)
//	80BD4B04: 804061C0 (g_dComIfG_gameInfo)
//	80BD4B08: 804061C0 (g_dComIfG_gameInfo)
//	80BD4B14: 80035360 (isSwitch__10dSv_info_cCFii)
//	80BD4B20: 804061C0 (g_dComIfG_gameInfo)
//	80BD4B24: 804061C0 (g_dComIfG_gameInfo)
//	80BD4B34: 80035200 (onSwitch__10dSv_info_cFii)
//	80BD4B3C: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80BD4B44: 80BD45A4 (Obj_Hit__15daObjCRVLH_DW_cFv)
//	80BD4B5C: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	80BD4C04: 80BD342C (HahenSet__15daObjCRVHAHEN_cF4cXyz4cXyz4cXyz4cXyzf)
//	80BD4C14: 80BD41A4 (SetCcSyl__15daObjCRVLH_DW_cFv)
//	80BD4C24: 80BD4644 (setBaseMtx__15daObjCRVLH_DW_cFv)
//	80BD4C30: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::Execute(f32 (**param_0)[3][4]) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/Execute__15daObjCRVLH_DW_cFPPA3_A4_f.s"
}
#pragma pop

/* 80BD4C44-80BD4CC8 0084+00 s=1 e=0 z=0  None .text      Draw__15daObjCRVLH_DW_cFv */
//	80BD4C58: 8042CA54 (g_env_light)
//	80BD4C5C: 8042CA54 (g_env_light)
//	80BD4C6C: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80BD4C70: 8042CA54 (g_env_light)
//	80BD4C74: 8042CA54 (g_env_light)
//	80BD4C84: 801A4DA0
//(setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c) 	80BD4C88:
// 804061C0 (g_dComIfG_gameInfo) 	80BD4C8C: 804061C0 (g_dComIfG_gameInfo) 	80BD4C94: 80434AC8
// (j3dSys) 	80BD4C98: 80434AC8 (j3dSys) 	80BD4CAC: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::Draw() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/Draw__15daObjCRVLH_DW_cFv.s"
}
#pragma pop

/* 80BD4CC8-80BD4CFC 0034+00 s=1 e=0 z=0  None .text      Delete__15daObjCRVLH_DW_cFv */
//	80BD4CD4: 80BD4DC4 (l_arcName)
//	80BD4CD8: 80BD4DC4 (l_arcName)
//	80BD4CE4: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCRVLH_DW_c::Delete() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_crvlh_down/d_a_obj_crvlh_down/Delete__15daObjCRVLH_DW_cFv.s"
}
#pragma pop
