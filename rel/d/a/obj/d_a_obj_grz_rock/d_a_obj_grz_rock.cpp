// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_grz_rock
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct fopAc_ac_c {
};

struct daObjGrzRock_c {
	/* 80C14BD8 */ // True False
void setBaseMtx();
	/* 80C14C54 */ // True False
void setEnvTevColor();
	/* 80C14CB0 */ // True False
void setRoomNo();
	/* 80C14CF0 */ // True False
void setPrtcl();
	/* 80C14DA0 */ // True False
void Create();
	/* 80C14EE0 */ // True False
void CreateHeap();
	/* 80C14F50 */ // True False
void create();
	/* 80C1514C */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80C151A4 */ // True False
void Draw();
	/* 80C15248 */ // True False
void Delete();
};

struct dSv_info_c {
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct cXyz {
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
	/* 8003C6B8 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
void getObjectResName2Index(char const*, char const*);
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dBgW_Base {
};

struct dBgW {
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80C150DC */ // True False
~dBgS_ObjAcch();
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
};

struct dBgS {
	/* 80074BE8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyColor(cBgS_PolyInfo const&);
	/* 80075100 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomId(cBgS_PolyInfo const&);
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
static void daObjGrzRock_Draw(daObjGrzRock_c*);
// True False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
static void daObjGrzRock_Execute(daObjGrzRock_c*);
// True False
//  bool False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
static bool daObjGrzRock_IsDelete(daObjGrzRock_c*);
// True False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
static void daObjGrzRock_Delete(daObjGrzRock_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjGrzRock_create(fopAc_ac_c*);

// True False
extern "C" void setBaseMtx__14daObjGrzRock_cFv();
// True False
extern "C" void setEnvTevColor__14daObjGrzRock_cFv();
// True False
extern "C" void setRoomNo__14daObjGrzRock_cFv();
// True False
extern "C" void setPrtcl__14daObjGrzRock_cFv();
// True False
extern "C" void Create__14daObjGrzRock_cFv();
// True False
extern "C" void CreateHeap__14daObjGrzRock_cFv();
// True False
extern "C" void create__14daObjGrzRock_cFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__14daObjGrzRock_cFPPA3_A4_f();
// True False
extern "C" void Draw__14daObjGrzRock_cFv();
// True False
extern "C" void Delete__14daObjGrzRock_cFv();
// True False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
extern "C" static void daObjGrzRock_Draw__FP14daObjGrzRock_c();
// True False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
extern "C" static void daObjGrzRock_Execute__FP14daObjGrzRock_c();
// True False
//  bool False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
extern "C" static bool daObjGrzRock_IsDelete__FP14daObjGrzRock_c();
// True False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
extern "C" static void daObjGrzRock_Delete__FP14daObjGrzRock_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjGrzRock_create__FP10fopAc_ac_c();
// True False
extern "C" static void func_80C15348();
// True False
extern "C" static void func_80C15350();
extern "C" extern u32 const lit_3849;
extern "C" extern u32 const lit_3850;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_GrzRock[12];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__14daObjGrzRock_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getObjectResName2Index__14dRes_control_cFPCcPCc();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyColor__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];

// 
// Declarations:
// 

/* 80C14BD8-80C14C54 007C+00 s=2 e=0 z=0  None .text      setBaseMtx__14daObjGrzRock_cFv                               */
//	80C14BEC: 803DD470 (now__14mDoMtx_stack_c)
//	80C14BF0: 803DD470 (now__14mDoMtx_stack_c)
//	80C14C00: 803468E8 (PSMTXTrans)
//	80C14C04: 803DD470 (now__14mDoMtx_stack_c)
//	80C14C08: 803DD470 (now__14mDoMtx_stack_c)
//	80C14C18: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80C14C1C: 803DD470 (now__14mDoMtx_stack_c)
//	80C14C20: 803DD470 (now__14mDoMtx_stack_c)
//	80C14C2C: 803464B0 (PSMTXCopy)
//	80C14C30: 803DD470 (now__14mDoMtx_stack_c)
//	80C14C34: 803DD470 (now__14mDoMtx_stack_c)
//	80C14C3C: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGrzRock_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/setBaseMtx__14daObjGrzRock_cFv.s"
}
#pragma pop


/* 80C14C54-80C14CB0 005C+00 s=1 e=0 z=0  None .text      setEnvTevColor__14daObjGrzRock_cFv                           */
//	80C14C6C: 804061C0 (g_dComIfG_gameInfo)
//	80C14C70: 804061C0 (g_dComIfG_gameInfo)
//	80C14C80: 80074BE8 (GetPolyColor__4dBgSFRC13cBgS_PolyInfo)
//	80C14C90: 80075100 (GetRoomId__4dBgSFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGrzRock_c::setEnvTevColor() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/setEnvTevColor__14daObjGrzRock_cFv.s"
}
#pragma pop


/* 80C14CB0-80C14CF0 0040+00 s=1 e=0 z=0  None .text      setRoomNo__14daObjGrzRock_cFv                                */
//	80C14CC4: 804061C0 (g_dComIfG_gameInfo)
//	80C14CC8: 804061C0 (g_dComIfG_gameInfo)
//	80C14CD4: 80075100 (GetRoomId__4dBgSFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGrzRock_c::setRoomNo() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/setRoomNo__14daObjGrzRock_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C15360-80C1536C 000C+00 s=1 e=0 z=0  None .rodata    l_prticles_id$3832                                           */
SECTION_RODATA static u8 const l_prticles_id[12] = {
	0x89, 0xC2, 0x89, 0xC3, 0x89, 0xC4, 0x89, 0xC5, 0x89, 0xC6, 0x89, 0xC7,
};

/* 80C14CF0-80C14DA0 00B0+00 s=1 e=0 z=0  None .text      setPrtcl__14daObjGrzRock_cFv                                 */
//	80C14D00: 803621D0 (_savegpr_26)
//	80C14D08: 80C15360 (l_prticles_id)
//	80C14D0C: 80C15360 (l_prticles_id)
//	80C14D28: 804061C0 (g_dComIfG_gameInfo)
//	80C14D2C: 804061C0 (g_dComIfG_gameInfo)
//	80C14D74: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C14D8C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGrzRock_c::setPrtcl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/setPrtcl__14daObjGrzRock_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C1536C-80C15370 0004+00 s=0 e=0 z=0  None .rodata    @3849                                                        */
SECTION_RODATA u32 const lit_3849 = 0x3F59999A;

/* 80C15370-80C15374 0004+00 s=0 e=0 z=0  None .rodata    @3850                                                        */
SECTION_RODATA u32 const lit_3850 = 0x3F800000;

/* 80C15374-80C15378 0004+00 s=1 e=0 z=0  None .rodata    @3886                                                        */
SECTION_RODATA static u8 const lit_3886[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80C14DA0-80C14EE0 0140+00 s=1 e=0 z=0  None .text      Create__14daObjGrzRock_cFv                                   */
//	80C14DB4: 80C14BD8 (setBaseMtx__14daObjGrzRock_cFv)
//	80C14DF0: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80C14DF8: 80C15374 (lit_3886)
//	80C14DFC: 80C15374 (lit_3886)
//	80C14E04: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80C14E30: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80C14E38: 804061C0 (g_dComIfG_gameInfo)
//	80C14E3C: 804061C0 (g_dComIfG_gameInfo)
//	80C14E44: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80C14EBC: 80C14C54 (setEnvTevColor__14daObjGrzRock_cFv)
//	80C14EC4: 80C14CB0 (setRoomNo__14daObjGrzRock_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGrzRock_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/Create__14daObjGrzRock_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C15378-80C1538C 0014+00 s=2 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80C15378 = "grZRock";
SECTION_DEAD char const* const stringBase_80C15380 = "grZRock.dzb";
#pragma pop

/* 80C1538C-80C15390 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80C14EE0-80C14F50 0070+00 s=1 e=0 z=0  None .text      CreateHeap__14daObjGrzRock_cFv                               */
//	80C14EF4: 80C1538C (l_arcName)
//	80C14EF8: 80C1538C (l_arcName)
//	80C14F04: 804061C0 (g_dComIfG_gameInfo)
//	80C14F08: 804061C0 (g_dComIfG_gameInfo)
//	80C14F18: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C14F28: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGrzRock_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/CreateHeap__14daObjGrzRock_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C15390-80C153B0 0020+00 s=1 e=0 z=0  None .data      l_daObjGrzRock_Method                                        */
SECTION_DATA static void* l_daObjGrzRock_Method[8] = {
	(void*)daObjGrzRock_create__FP10fopAc_ac_c,
	(void*)daObjGrzRock_Delete__FP14daObjGrzRock_c,
	(void*)daObjGrzRock_Execute__FP14daObjGrzRock_c,
	(void*)daObjGrzRock_IsDelete__FP14daObjGrzRock_c,
	(void*)daObjGrzRock_Draw__FP14daObjGrzRock_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80C153B0-80C153E0 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_GrzRock                                        */
SECTION_DATA void* g_profile_Obj_GrzRock[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x008A0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000804,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02620000,
	(void*)&l_daObjGrzRock_Method,
	(void*)0x00044100,
	(void*)0x000E0000,
};

/* 80C153E0-80C15404 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C15350,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C15348,
};

/* 80C15404-80C1542C 0028+00 s=1 e=0 z=0  None .data      __vt__14daObjGrzRock_c                                       */
SECTION_DATA void* __vt__14daObjGrzRock_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__14daObjGrzRock_cFv,
	(void*)Create__14daObjGrzRock_cFv,
	(void*)Execute__14daObjGrzRock_cFPPA3_A4_f,
	(void*)Draw__14daObjGrzRock_cFv,
	(void*)Delete__14daObjGrzRock_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80C14F50-80C150DC 018C+00 s=1 e=0 z=0  None .text      create__14daObjGrzRock_cFv                                   */
//	80C14F60: 803621DC (_savegpr_29)
//	80C14F80: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80C14F84: 80C15404 (__vt__14daObjGrzRock_c)
//	80C14F88: 80C15404 (__vt__14daObjGrzRock_c)
//	80C14F98: 800760A0 (__ct__9dBgS_AcchFv)
//	80C14F9C: 80C153E0 (__vt__12dBgS_ObjAcch)
//	80C14FA0: 80C153E0 (__vt__12dBgS_ObjAcch)
//	80C14FBC: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C14FC4: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80C14FCC: 80267C1C (__ct__11cBgS_GndChkFv)
//	80C14FDC: 804061C0 (g_dComIfG_gameInfo)
//	80C14FE0: 804061C0 (g_dComIfG_gameInfo)
//	80C14FF4: 80035360 (isSwitch__10dSv_info_cCFii)
//	80C1500C: 80C1538C (l_arcName)
//	80C15010: 80C1538C (l_arcName)
//	80C1501C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80C15054: 804061C0 (g_dComIfG_gameInfo)
//	80C15058: 804061C0 (g_dComIfG_gameInfo)
//	80C15060: 80C1538C (l_arcName)
//	80C15064: 80C1538C (l_arcName)
//	80C1506C: 80C15378 (stringBase0)
//	80C15070: 80C15378 (stringBase0)
//	80C1507C: 8003C6B8 (getObjectResName2Index__14dRes_control_cFPCcPCc)
//	80C15088: 80C1538C (l_arcName)
//	80C1508C: 80C1538C (l_arcName)
//	80C15094: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80C15098: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80C150A4: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80C150C8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGrzRock_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/func_80C14F50.s"
}
#pragma pop


/* 80C150DC-80C1514C 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80C150FC: 80C153E0 (__vt__12dBgS_ObjAcch)
//	80C15100: 80C153E0 (__vt__12dBgS_ObjAcch)
//	80C1511C: 80075F94 (__dt__9dBgS_AcchFv)
//	80C1512C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80C1514C-80C151A4 0058+00 s=1 e=0 z=0  None .text      Execute__14daObjGrzRock_cFPPA3_A4_f                          */
//	80C1516C: 80C14CF0 (setPrtcl__14daObjGrzRock_cFv)
//	80C15174: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80C15188: 80C14BD8 (setBaseMtx__14daObjGrzRock_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjGrzRock_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/Execute__14daObjGrzRock_cFPPA3_A4_f.s"
}
#pragma pop


/* 80C151A4-80C15248 00A4+00 s=1 e=0 z=0  None .text      Draw__14daObjGrzRock_cFv                                     */
//	80C151BC: 8042CA54 (g_env_light)
//	80C151C0: 8042CA54 (g_env_light)
//	80C151D0: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80C151D4: 8042CA54 (g_env_light)
//	80C151D8: 8042CA54 (g_env_light)
//	80C151E8: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C151EC: 804061C0 (g_dComIfG_gameInfo)
//	80C151F0: 804061C0 (g_dComIfG_gameInfo)
//	80C151F8: 80434AC8 (j3dSys)
//	80C151FC: 80434AC8 (j3dSys)
//	80C15210: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80C15214: 804061C0 (g_dComIfG_gameInfo)
//	80C15218: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGrzRock_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/Draw__14daObjGrzRock_cFv.s"
}
#pragma pop


/* 80C15248-80C152B4 006C+00 s=1 e=0 z=0  None .text      Delete__14daObjGrzRock_cFv                                   */
//	80C1525C: 80C1538C (l_arcName)
//	80C15260: 80C1538C (l_arcName)
//	80C1526C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80C1527C: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80C15288: 804061C0 (g_dComIfG_gameInfo)
//	80C1528C: 804061C0 (g_dComIfG_gameInfo)
//	80C15298: 80074250 (Release__4cBgSFP9dBgW_Base)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjGrzRock_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/Delete__14daObjGrzRock_cFv.s"
}
#pragma pop


/* 80C152B4-80C152E0 002C+00 s=1 e=0 z=0  None .text      daObjGrzRock_Draw__FP14daObjGrzRock_c                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
asm static void daObjGrzRock_Draw(daObjGrzRock_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/daObjGrzRock_Draw__FP14daObjGrzRock_c.s"
}
#pragma pop


/* 80C152E0-80C15300 0020+00 s=1 e=0 z=0  None .text      daObjGrzRock_Execute__FP14daObjGrzRock_c                     */
//	80C152EC: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
asm static void daObjGrzRock_Execute(daObjGrzRock_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/daObjGrzRock_Execute__FP14daObjGrzRock_c.s"
}
#pragma pop


/* 80C15300-80C15308 0008+00 s=1 e=0 z=0  None .text      daObjGrzRock_IsDelete__FP14daObjGrzRock_c                    */
// True False
//  bool False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
static bool daObjGrzRock_IsDelete(daObjGrzRock_c* param_0) {
	return true;
}


/* 80C15308-80C15328 0020+00 s=1 e=0 z=0  None .text      daObjGrzRock_Delete__FP14daObjGrzRock_c                      */
//	80C15314: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjGrzRock_c* False
// 	 daObjGrzRock_c False
asm static void daObjGrzRock_Delete(daObjGrzRock_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/daObjGrzRock_Delete__FP14daObjGrzRock_c.s"
}
#pragma pop


/* 80C15328-80C15348 0020+00 s=1 e=0 z=0  None .text      daObjGrzRock_create__FP10fopAc_ac_c                          */
//	80C15334: 80C14F50 (create__14daObjGrzRock_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjGrzRock_create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/daObjGrzRock_create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80C15348-80C15350 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80C1534C: 80C150DC (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C15348() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/func_80C15348.s"
}
#pragma pop


/* 80C15350-80C15358 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80C15354: 80C150DC (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C15350() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_grz_rock/d_a_obj_grz_rock/func_80C15350.s"
}
#pragma pop


