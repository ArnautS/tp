// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_rstair
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
};

struct J3DAnmTextureSRTKey {
};

struct J3DMaterialTable {
};

struct mDoExt_btkAnm {
	/* 8000D63C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct fopAc_ac_c {
};

struct daObjRotStair_c {
	/* 80CC1558 */ // True False
void initBaseMtx();
	/* 80CC1614 */ // True False
void setBaseMtx();
	/* 80CC16B0 */ // True False
void Create();
	/* 80CC17F0 */ // True False
void CreateHeap();
	/* 80CC1A28 */ // True False
void create1st();
	/* 80CC1AF0 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80CC1BA4 */ // True False
void move_proc_call();
	/* 80CC1C30 */ // True False
void init_modeWait();
	/* 80CC1CF0 */ // True False
void modeWait();
	/* 80CC1DF8 */ // True False
void init_modeRotate();
	/* 80CC1EC8 */ // True False
void modeRotate();
	/* 80CC2024 */ // True False
void event_proc_call();
	/* 80CC20E0 */ // True False
void actionWait();
	/* 80CC2158 */ // True False
void actionOrderEvent();
	/* 80CC21C0 */ // True False
void actionEvent();
	/* 80CC221C */ // True False
//  void False
void actionDead();
	/* 80CC2220 */ // True False
void checkChangeSw();
	/* 80CC22A0 */ // True False
//  int False
void offSwitch(int);
	/* 80CC2310 */ // True False
void onWaterModel();
	/* 80CC2364 */ // True False
void offWaterModel();
	/* 80CC23C4 */ // True False
void Draw();
	/* 80CC25C0 */ // True False
void Delete();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dSv_info_c {
	/* 800352B0 */ // False False
//  int False
//  int False
void offSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
	/* 8032600C */ // False False
//  u16 False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
void simpleCalcMaterial(u16, f32 (* )[4]);
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047698 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u8 False
void getEventIdx(fopAc_ac_c*, u8);
	/* 80047A78 */ // False False
//  s16 False
void endCheck(s16);
};

struct dBgW_Base {
};

struct dBgW {
	/* 8007B970 */ // False False
dBgW();
	/* 8007B9C0 */ // False False
void Move();
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS {
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgD_t {
};

struct cBgW {
	/* 80079F38 */ // False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void Set(cBgD_t*, u32, f32 (* )[3][4]);
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DTexMtxInfo {
	/* 80325794 */ // False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
void setEffectMtx(f32 (* )[4]);
};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80CC19E0 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
static void daObjRotStair_create1st(daObjRotStair_c*);
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
static void daObjRotStair_MoveBGDelete(daObjRotStair_c*);
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
static void daObjRotStair_MoveBGExecute(daObjRotStair_c*);
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
static void daObjRotStair_MoveBGDraw(daObjRotStair_c*);

// True False
extern "C" void initBaseMtx__15daObjRotStair_cFv();
// True False
extern "C" void setBaseMtx__15daObjRotStair_cFv();
// True False
extern "C" void Create__15daObjRotStair_cFv();
// True False
extern "C" void CreateHeap__15daObjRotStair_cFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
extern "C" void create1st__15daObjRotStair_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__15daObjRotStair_cFPPA3_A4_f();
// True False
extern "C" void move_proc_call__15daObjRotStair_cFv();
// True False
extern "C" void init_modeWait__15daObjRotStair_cFv();
// True False
extern "C" void modeWait__15daObjRotStair_cFv();
// True False
extern "C" void init_modeRotate__15daObjRotStair_cFv();
// True False
extern "C" void modeRotate__15daObjRotStair_cFv();
// True False
extern "C" void event_proc_call__15daObjRotStair_cFv();
// True False
extern "C" void actionWait__15daObjRotStair_cFv();
// True False
extern "C" void actionOrderEvent__15daObjRotStair_cFv();
// True False
extern "C" void actionEvent__15daObjRotStair_cFv();
// True False
//  void False
extern "C" void actionDead__15daObjRotStair_cFv();
// True False
extern "C" void checkChangeSw__15daObjRotStair_cFv();
// True False
//  int False
extern "C" void offSwitch__15daObjRotStair_cFi();
// True False
extern "C" void onWaterModel__15daObjRotStair_cFv();
// True False
extern "C" void offWaterModel__15daObjRotStair_cFv();
// True False
extern "C" void Draw__15daObjRotStair_cFv();
// True False
extern "C" void Delete__15daObjRotStair_cFv();
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
extern "C" static void daObjRotStair_create1st__FP15daObjRotStair_c();
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
extern "C" static void daObjRotStair_MoveBGDelete__FP15daObjRotStair_c();
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
extern "C" static void daObjRotStair_MoveBGExecute__FP15daObjRotStair_c();
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
extern "C" static void daObjRotStair_MoveBGDraw__FP15daObjRotStair_c();
extern "C" extern u8 const l_wtr_btk[8];
extern "C" extern u32 const lit_3770;
extern "C" extern u8 const lit_3911[4];
extern "C" extern u32 const lit_3912;
extern "C" extern u32 const lit_4107;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 l_water_check_offset[12];
extern "C" extern void* lit_3811[3];
extern "C" extern void* lit_3812[3];
extern "C" extern u8 data_80CC2784[24];
extern "C" extern void* lit_3919[3];
extern "C" extern void* lit_3920[3];
extern "C" extern void* lit_3921[3];
extern "C" extern void* lit_3922[3];
extern "C" extern u8 data_80CC27CC[48];
extern "C" extern void* g_profile_Obj_RotStair[12];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__15daObjRotStair_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u8 False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderOtherEventId(fopAc_ac_c*, s16, u8, u16, u16, u16);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u8 False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void offSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u8 False
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cUc();
// False False
//  s16 False
extern "C" void endCheck__16dEvent_manager_cFs();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
// False False
extern "C" void __ct__4dBgWFv();
// False False
extern "C" void Move__4dBgWFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void setEffectMtx__13J3DTexMtxInfoFPA4_f();
// False False
//  u16 False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void simpleCalcMaterial__12J3DModelDataFUsPA4_f();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void C_MTXLightPerspective();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void abs();
extern "C" extern u8 const j3dDefaultMtx[48];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 struct_80CC2880[4];

// 
// Declarations:
// 

/* 80CC1558-80CC1614 00BC+00 s=1 e=0 z=0  None .text      initBaseMtx__15daObjRotStair_cFv                             */
//	80CC15C0: 80CC1614 (setBaseMtx__15daObjRotStair_cFv)
//	80CC15C4: 803DD470 (now__14mDoMtx_stack_c)
//	80CC15C8: 803DD470 (now__14mDoMtx_stack_c)
//	80CC15D4: 803464B0 (PSMTXCopy)
//	80CC15D8: 803DD470 (now__14mDoMtx_stack_c)
//	80CC15DC: 803DD470 (now__14mDoMtx_stack_c)
//	80CC15E8: 803464B0 (PSMTXCopy)
//	80CC15EC: 803DD470 (now__14mDoMtx_stack_c)
//	80CC15F0: 803DD470 (now__14mDoMtx_stack_c)
//	80CC15FC: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/initBaseMtx__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC1614-80CC16B0 009C+00 s=2 e=0 z=0  None .text      setBaseMtx__15daObjRotStair_cFv                              */
//	80CC162C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80CC1630: 803DD470 (now__14mDoMtx_stack_c)
//	80CC1634: 803DD470 (now__14mDoMtx_stack_c)
//	80CC163C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80CC1640: 803DD470 (now__14mDoMtx_stack_c)
//	80CC1644: 803DD470 (now__14mDoMtx_stack_c)
//	80CC164C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80CC1650: 803DD470 (now__14mDoMtx_stack_c)
//	80CC1654: 803DD470 (now__14mDoMtx_stack_c)
//	80CC165C: 803464B0 (PSMTXCopy)
//	80CC1660: 803DD470 (now__14mDoMtx_stack_c)
//	80CC1664: 803DD470 (now__14mDoMtx_stack_c)
//	80CC1670: 803464B0 (PSMTXCopy)
//	80CC1674: 803DD470 (now__14mDoMtx_stack_c)
//	80CC1678: 803DD470 (now__14mDoMtx_stack_c)
//	80CC1684: 803464B0 (PSMTXCopy)
//	80CC1688: 803DD470 (now__14mDoMtx_stack_c)
//	80CC168C: 803DD470 (now__14mDoMtx_stack_c)
//	80CC1698: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/setBaseMtx__15daObjRotStair_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CC2700-80CC2708 0008+00 s=3 e=0 z=0  None .rodata    l_wtr_bmd                                                    */
SECTION_RODATA static u8 const l_wtr_bmd[8] = {
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07,
};

/* 80CC2708-80CC2710 0008+00 s=0 e=0 z=0  None .rodata    l_wtr_btk                                                    */
SECTION_RODATA u8 const l_wtr_btk[8] = {
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0B,
};

/* 80CC2710-80CC2720 0010+00 s=2 e=0 z=0  None .rodata    l_target_angleY                                              */
SECTION_RODATA static u8 const l_target_angleY[16] = {
	0x7F, 0xFF, 0x40, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x7F, 0xFF, 0x40, 0x00,
};

/* 80CC16B0-80CC17F0 0140+00 s=1 e=0 z=0  None .text      Create__15daObjRotStair_cFv                                  */
//	80CC16C0: 803621D8 (_savegpr_28)
//	80CC16CC: 804061C0 (g_dComIfG_gameInfo)
//	80CC16D0: 804061C0 (g_dComIfG_gameInfo)
//	80CC16EC: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC1714: 804061C0 (g_dComIfG_gameInfo)
//	80CC1718: 804061C0 (g_dComIfG_gameInfo)
//	80CC1734: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC1764: 80CC2710 (l_target_angleY)
//	80CC1768: 80CC2710 (l_target_angleY)
//	80CC1778: 80CC1C30 (init_modeWait__15daObjRotStair_cFv)
//	80CC1780: 80CC1558 (initBaseMtx__15daObjRotStair_cFv)
//	80CC179C: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80CC17A8: 804061C0 (g_dComIfG_gameInfo)
//	80CC17AC: 804061C0 (g_dComIfG_gameInfo)
//	80CC17BC: 80047698 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cUc)
//	80CC17C8: 8007B9C0 (Move__4dBgWFv)
//	80CC17DC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/Create__15daObjRotStair_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CC2720-80CC2724 0004+00 s=0 e=0 z=0  None .rodata    @3770                                                        */
SECTION_RODATA u32 const lit_3770 = 0x3F800000;

/* 80CC2724-80CC2728 0004+00 s=0 e=0 z=0  None .rodata    @3911                                                        */
SECTION_RODATA u8 const lit_3911[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80CC2728-80CC272C 0004+00 s=0 e=0 z=0  None .rodata    @3912                                                        */
SECTION_RODATA u32 const lit_3912 = 0xBF800000;

/* 80CC272C-80CC2730 0004+00 s=0 e=0 z=0  None .rodata    @4107                                                        */
SECTION_RODATA u32 const lit_4107 = 0xBC23D70A;

/* 80CC2730-80CC273A 000A+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80CC2730 = "K_spkai00";
#pragma pop

/* 80CC273C-80CC2748 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CC2748-80CC275C 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80CC275C-80CC2760 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80CC2760-80CC276C 000C+00 s=0 e=0 z=0  None .data      l_water_check_offset                                         */
SECTION_DATA u8 l_water_check_offset[12] = {
	0x00, 0x00, 0x00, 0x00, 0x44, 0xFA, 0x00, 0x00, 0xC4, 0xFA, 0x00, 0x00,
};

/* 80CC276C-80CC2778 000C+00 s=0 e=0 z=0  None .data      @3811                                                        */
SECTION_DATA void* lit_3811[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeWait__15daObjRotStair_cFv,
};

/* 80CC2778-80CC2784 000C+00 s=0 e=0 z=0  None .data      @3812                                                        */
SECTION_DATA void* lit_3812[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeRotate__15daObjRotStair_cFv,
};

/* 80CC2784-80CC279C 0018+00 s=0 e=0 z=0  None .data      l_func$3810                                                  */
SECTION_DATA u8 data_80CC2784[24] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CC279C-80CC27A8 000C+00 s=0 e=0 z=0  None .data      @3919                                                        */
SECTION_DATA void* lit_3919[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionWait__15daObjRotStair_cFv,
};

/* 80CC27A8-80CC27B4 000C+00 s=0 e=0 z=0  None .data      @3920                                                        */
SECTION_DATA void* lit_3920[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOrderEvent__15daObjRotStair_cFv,
};

/* 80CC27B4-80CC27C0 000C+00 s=0 e=0 z=0  None .data      @3921                                                        */
SECTION_DATA void* lit_3921[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionEvent__15daObjRotStair_cFv,
};

/* 80CC27C0-80CC27CC 000C+00 s=0 e=0 z=0  None .data      @3922                                                        */
SECTION_DATA void* lit_3922[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionDead__15daObjRotStair_cFv,
};

/* 80CC27CC-80CC27FC 0030+00 s=0 e=0 z=0  None .data      l_func$3918                                                  */
SECTION_DATA u8 data_80CC27CC[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CC27FC-80CC281C 0020+00 s=1 e=0 z=0  None .data      daObjRotStair_METHODS                                        */
SECTION_DATA static void* daObjRotStair_METHODS[8] = {
	(void*)daObjRotStair_create1st__FP15daObjRotStair_c,
	(void*)daObjRotStair_MoveBGDelete__FP15daObjRotStair_c,
	(void*)daObjRotStair_MoveBGExecute__FP15daObjRotStair_c,
	(void*)NULL,
	(void*)daObjRotStair_MoveBGDraw__FP15daObjRotStair_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80CC281C-80CC284C 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_RotStair                                       */
SECTION_DATA void* g_profile_Obj_RotStair[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00C50000,
	(void*)&g_fpcLf_Method,
	(void*)0x000005E4,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02650000,
	(void*)&daObjRotStair_METHODS,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80CC284C-80CC2858 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80CC17F0-80CC19E0 01F0+00 s=1 e=0 z=0  None .text      CreateHeap__15daObjRotStair_cFv                              */
//	80CC1800: 803621B4 (_savegpr_19)
//	80CC1808: 80CC2700 (l_wtr_bmd)
//	80CC180C: 80CC2700 (l_wtr_bmd)
//	80CC1810: 80CC275C (l_arcName)
//	80CC1814: 80CC275C (l_arcName)
//	80CC1820: 804061C0 (g_dComIfG_gameInfo)
//	80CC1824: 804061C0 (g_dComIfG_gameInfo)
//	80CC1838: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CC1848: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80CC186C: 80CC275C (l_arcName)
//	80CC1870: 80CC275C (l_arcName)
//	80CC1890: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CC18A0: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80CC18D0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CC18DC: 802CEC4C (__nw__FUl)
//	80CC18E8: 80CC284C (__vt__12J3DFrameCtrl)
//	80CC18EC: 80CC284C (__vt__12J3DFrameCtrl)
//	80CC18F8: 803283FC (init__12J3DFrameCtrlFs)
//	80CC1930: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80CC1958: 802CEC4C (__nw__FUl)
//	80CC1964: 8007B970 (__ct__4dBgWFv)
//	80CC197C: 80CC275C (l_arcName)
//	80CC1980: 80CC275C (l_arcName)
//	80CC1994: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CC19A8: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
//	80CC19CC: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/CreateHeap__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC19E0-80CC1A28 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80CC19F8: 80CC284C (__vt__12J3DFrameCtrl)
//	80CC19FC: 80CC284C (__vt__12J3DFrameCtrl)
//	80CC1A0C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80CC1A28-80CC1AF0 00C8+00 s=1 e=0 z=0  None .text      create1st__15daObjRotStair_cFv                               */
//	80CC1A80: 80CC275C (l_arcName)
//	80CC1A84: 80CC275C (l_arcName)
//	80CC1A8C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80CC1AA0: 80CC275C (l_arcName)
//	80CC1AA4: 80CC275C (l_arcName)
//	80CC1AB0: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80CC1AB4: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80CC1AC4: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::create1st() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/create1st__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC1AF0-80CC1BA4 00B4+00 s=1 e=0 z=0  None .text      Execute__15daObjRotStair_cFPPA3_A4_f                         */
//	80CC1B00: 803621DC (_savegpr_29)
//	80CC1B0C: 80CC1BA4 (move_proc_call__15daObjRotStair_cFv)
//	80CC1B14: 80CC2024 (event_proc_call__15daObjRotStair_cFv)
//	80CC1B24: 80CC1614 (setBaseMtx__15daObjRotStair_cFv)
//	80CC1B38: 8007B9C0 (Move__4dBgWFv)
//	80CC1B40: 804061C0 (g_dComIfG_gameInfo)
//	80CC1B44: 804061C0 (g_dComIfG_gameInfo)
//	80CC1B60: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC1B7C: 8000D428 (play__14mDoExt_baseAnmFv)
//	80CC1B84: 8000D428 (play__14mDoExt_baseAnmFv)
//	80CC1B90: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjRotStair_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/Execute__15daObjRotStair_cFPPA3_A4_f.s"
}
#pragma pop


/* 80CC1BA4-80CC1C30 008C+00 s=1 e=0 z=0  None .text      move_proc_call__15daObjRotStair_cFv                          */
//	80CC1BB0: 80CC273C (cNullVec__6Z2Calc)
//	80CC1BB4: 80CC273C (cNullVec__6Z2Calc)
//	80CC1BB8: 80CC2880 (struct_80CC2880)
//	80CC1BBC: 80CC2880 (struct_80CC2880)
//	80CC1C18: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::move_proc_call() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/move_proc_call__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC1C30-80CC1CF0 00C0+00 s=2 e=0 z=0  None .text      init_modeWait__15daObjRotStair_cFv                           */
//	80CC1C68: 804061C0 (g_dComIfG_gameInfo)
//	80CC1C6C: 804061C0 (g_dComIfG_gameInfo)
//	80CC1C80: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC1C98: 804061C0 (g_dComIfG_gameInfo)
//	80CC1C9C: 804061C0 (g_dComIfG_gameInfo)
//	80CC1CB0: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC1CC0: 80CC2310 (onWaterModel__15daObjRotStair_cFv)
//	80CC1CCC: 80CC2364 (offWaterModel__15daObjRotStair_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::init_modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/init_modeWait__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC1CF0-80CC1DF8 0108+00 s=1 e=0 z=0  None .text      modeWait__15daObjRotStair_cFv                                */
//	80CC1D28: 804061C0 (g_dComIfG_gameInfo)
//	80CC1D2C: 804061C0 (g_dComIfG_gameInfo)
//	80CC1D40: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC1D58: 804061C0 (g_dComIfG_gameInfo)
//	80CC1D5C: 804061C0 (g_dComIfG_gameInfo)
//	80CC1D70: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC1D80: 80CC2310 (onWaterModel__15daObjRotStair_cFv)
//	80CC1D8C: 80CC2364 (offWaterModel__15daObjRotStair_cFv)
//	80CC1D94: 80CC2220 (checkChangeSw__15daObjRotStair_cFv)
//	80CC1DB8: 80CC2710 (l_target_angleY)
//	80CC1DBC: 80CC2710 (l_target_angleY)
//	80CC1DD4: 80CC22A0 (offSwitch__15daObjRotStair_cFi)
//	80CC1DDC: 80CC1DF8 (init_modeRotate__15daObjRotStair_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/modeWait__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC1DF8-80CC1EC8 00D0+00 s=1 e=0 z=0  None .text      init_modeRotate__15daObjRotStair_cFv                         */
//	80CC1E30: 804061C0 (g_dComIfG_gameInfo)
//	80CC1E34: 804061C0 (g_dComIfG_gameInfo)
//	80CC1E48: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC1E60: 804061C0 (g_dComIfG_gameInfo)
//	80CC1E64: 804061C0 (g_dComIfG_gameInfo)
//	80CC1E78: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC1E88: 80CC2310 (onWaterModel__15daObjRotStair_cFv)
//	80CC1E94: 80CC2364 (offWaterModel__15daObjRotStair_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::init_modeRotate() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/init_modeRotate__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC1EC8-80CC2024 015C+00 s=1 e=0 z=0  None .text      modeRotate__15daObjRotStair_cFv                              */
//	80CC1EE0: 80CC2700 (l_wtr_bmd)
//	80CC1EE4: 80CC2700 (l_wtr_bmd)
//	80CC1EF4: 803650D0 (abs)
//	80CC1F18: 804061C0 (g_dComIfG_gameInfo)
//	80CC1F1C: 804061C0 (g_dComIfG_gameInfo)
//	80CC1F30: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80CC1F3C: 8002D06C (dComIfGp_getReverb__Fi)
//	80CC1F50: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC1F54: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC1F7C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CC1F94: 80CC1C30 (init_modeWait__15daObjRotStair_cFv)
//	80CC1FBC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80CC1FC8: 8002D06C (dComIfGp_getReverb__Fi)
//	80CC1FDC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC1FE0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CC2008: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::modeRotate() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/modeRotate__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC2024-80CC20E0 00BC+00 s=1 e=0 z=0  None .text      event_proc_call__15daObjRotStair_cFv                         */
//	80CC2030: 80CC273C (cNullVec__6Z2Calc)
//	80CC2034: 80CC273C (cNullVec__6Z2Calc)
//	80CC2038: 80CC2881 (struct_80CC2880)
//	80CC203C: 80CC2881 (struct_80CC2880)
//	80CC20C8: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::event_proc_call() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/event_proc_call__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC20E0-80CC2158 0078+00 s=1 e=0 z=0  None .text      actionWait__15daObjRotStair_cFv                              */
//	80CC2134: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::actionWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/actionWait__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC2158-80CC21C0 0068+00 s=1 e=0 z=0  None .text      actionOrderEvent__15daObjRotStair_cFv                        */
//	80CC219C: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::actionOrderEvent() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/actionOrderEvent__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC21C0-80CC221C 005C+00 s=1 e=0 z=0  None .text      actionEvent__15daObjRotStair_cFv                             */
//	80CC21D8: 804061C0 (g_dComIfG_gameInfo)
//	80CC21DC: 804061C0 (g_dComIfG_gameInfo)
//	80CC21E8: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80CC2200: 80042468 (reset__14dEvt_control_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::actionEvent() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/actionEvent__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC221C-80CC2220 0004+00 s=1 e=0 z=0  None .text      actionDead__15daObjRotStair_cFv                              */
// True False
//  void False
void daObjRotStair_c::actionDead() {
	/* empty function */
}


/* 80CC2220-80CC22A0 0080+00 s=1 e=0 z=0  None .text      checkChangeSw__15daObjRotStair_cFv                           */
//	80CC2230: 803621DC (_savegpr_29)
//	80CC223C: 804061C0 (g_dComIfG_gameInfo)
//	80CC2240: 804061C0 (g_dComIfG_gameInfo)
//	80CC225C: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CC228C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::checkChangeSw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/checkChangeSw__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC22A0-80CC2310 0070+00 s=1 e=0 z=0  None .text      offSwitch__15daObjRotStair_cFi                               */
//	80CC22B0: 803621D8 (_savegpr_28)
//	80CC22C0: 804061C0 (g_dComIfG_gameInfo)
//	80CC22C4: 804061C0 (g_dComIfG_gameInfo)
//	80CC22E8: 800352B0 (offSwitch__10dSv_info_cFii)
//	80CC22FC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daObjRotStair_c::offSwitch(int param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/offSwitch__15daObjRotStair_cFi.s"
}
#pragma pop


/* 80CC2310-80CC2364 0054+00 s=3 e=0 z=0  None .text      onWaterModel__15daObjRotStair_cFv                            */
//	80CC2330: 804061C0 (g_dComIfG_gameInfo)
//	80CC2334: 804061C0 (g_dComIfG_gameInfo)
//	80CC2344: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::onWaterModel() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/onWaterModel__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC2364-80CC23C4 0060+00 s=3 e=0 z=0  None .text      offWaterModel__15daObjRotStair_cFv                           */
//	80CC2388: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80CC2394: 804061C0 (g_dComIfG_gameInfo)
//	80CC2398: 804061C0 (g_dComIfG_gameInfo)
//	80CC23A4: 80074250 (Release__4cBgSFP9dBgW_Base)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::offWaterModel() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/offWaterModel__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC23C4-80CC25C0 01FC+00 s=1 e=0 z=0  None .text      Draw__15daObjRotStair_cFv                                    */
//	80CC23D4: 803621D4 (_savegpr_27)
//	80CC23DC: 80CC2700 (l_wtr_bmd)
//	80CC23E0: 80CC2700 (l_wtr_bmd)
//	80CC23E4: 8042CA54 (g_env_light)
//	80CC23E8: 8042CA54 (g_env_light)
//	80CC23F8: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80CC23FC: 8042CA54 (g_env_light)
//	80CC2400: 8042CA54 (g_env_light)
//	80CC2410: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80CC2414: 804061C0 (g_dComIfG_gameInfo)
//	80CC2418: 804061C0 (g_dComIfG_gameInfo)
//	80CC2420: 80434AC8 (j3dSys)
//	80CC2424: 80434AC8 (j3dSys)
//	80CC2438: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80CC2448: 8042CA54 (g_env_light)
//	80CC244C: 8042CA54 (g_env_light)
//	80CC245C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80CC2460: 8042CA54 (g_env_light)
//	80CC2464: 8042CA54 (g_env_light)
//	80CC2474: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80CC248C: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80CC24A4: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80CC24A8: 804061C0 (g_dComIfG_gameInfo)
//	80CC24AC: 804061C0 (g_dComIfG_gameInfo)
//	80CC24BC: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80CC24C0: 804061C0 (g_dComIfG_gameInfo)
//	80CC24C4: 804061C0 (g_dComIfG_gameInfo)
//	80CC2538: 804061C0 (g_dComIfG_gameInfo)
//	80CC253C: 804061C0 (g_dComIfG_gameInfo)
//	80CC2560: 80346C18 (C_MTXLightPerspective)
//	80CC256C: 80325794 (setEffectMtx__13J3DTexMtxInfoFPA4_f)
//	80CC2578: 803A1E5C (j3dDefaultMtx)
//	80CC257C: 803A1E5C (j3dDefaultMtx)
//	80CC2580: 8032600C (simpleCalcMaterial__12J3DModelDataFUsPA4_f)
//	80CC2588: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80CC258C: 804061C0 (g_dComIfG_gameInfo)
//	80CC2590: 804061C0 (g_dComIfG_gameInfo)
//	80CC25AC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/Draw__15daObjRotStair_cFv.s"
}
#pragma pop


/* 80CC25C0-80CC262C 006C+00 s=1 e=0 z=0  None .text      Delete__15daObjRotStair_cFv                                  */
//	80CC25E0: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80CC25EC: 804061C0 (g_dComIfG_gameInfo)
//	80CC25F0: 804061C0 (g_dComIfG_gameInfo)
//	80CC25FC: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80CC2604: 80CC275C (l_arcName)
//	80CC2608: 80CC275C (l_arcName)
//	80CC2610: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjRotStair_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/Delete__15daObjRotStair_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CC2858-80CC2880 0028+00 s=1 e=0 z=0  None .data      __vt__15daObjRotStair_c                                      */
SECTION_DATA void* __vt__15daObjRotStair_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__15daObjRotStair_cFv,
	(void*)Create__15daObjRotStair_cFv,
	(void*)Execute__15daObjRotStair_cFPPA3_A4_f,
	(void*)Draw__15daObjRotStair_cFv,
	(void*)Delete__15daObjRotStair_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80CC262C-80CC268C 0060+00 s=1 e=0 z=0  None .text      daObjRotStair_create1st__FP15daObjRotStair_c                 */
//	80CC2654: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80CC2658: 80CC2858 (__vt__15daObjRotStair_c)
//	80CC265C: 80CC2858 (__vt__15daObjRotStair_c)
//	80CC2674: 80CC1A28 (create1st__15daObjRotStair_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
asm static void daObjRotStair_create1st(daObjRotStair_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/daObjRotStair_create1st__FP15daObjRotStair_c.s"
}
#pragma pop


/* 80CC268C-80CC26AC 0020+00 s=1 e=0 z=0  None .text      daObjRotStair_MoveBGDelete__FP15daObjRotStair_c              */
//	80CC2698: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
asm static void daObjRotStair_MoveBGDelete(daObjRotStair_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/daObjRotStair_MoveBGDelete__FP15daObjRotStair_c.s"
}
#pragma pop


/* 80CC26AC-80CC26CC 0020+00 s=1 e=0 z=0  None .text      daObjRotStair_MoveBGExecute__FP15daObjRotStair_c             */
//	80CC26B8: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
asm static void daObjRotStair_MoveBGExecute(daObjRotStair_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/daObjRotStair_MoveBGExecute__FP15daObjRotStair_c.s"
}
#pragma pop


/* 80CC26CC-80CC26F8 002C+00 s=1 e=0 z=0  None .text      daObjRotStair_MoveBGDraw__FP15daObjRotStair_c                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjRotStair_c* False
// 	 daObjRotStair_c False
asm static void daObjRotStair_MoveBGDraw(daObjRotStair_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_rstair/d_a_obj_rstair/daObjRotStair_MoveBGDraw__FP15daObjRotStair_c.s"
}
#pragma pop


