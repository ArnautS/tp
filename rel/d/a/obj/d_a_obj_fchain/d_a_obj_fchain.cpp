// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_fchain
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 80266F48 */ // False False
void normalizeZP();
	/* 80267128 */ // False False
void atan2sX_Z() const;
	/* 80267150 */ // False False
void atan2sY_XZ() const;
	/* 80BE6368 */ // True False
~cXyz();
	/* 80BE63A4 */ // True False
cXyz();
};

struct csXyz {
	/* 80BE6328 */ // True False
~csXyz();
	/* 80BE6364 */ // True False
csXyz();
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CDD4 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transM(cXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daObjFchain_shape_c {
	/* 80BE7194 */ // True False
void draw();
	/* 80BE73D4 */ // True False
~daObjFchain_shape_c();
};

struct daObjFchain_c {
	/* 80BE5FF8 */ // True False
void createHeap();
	/* 80BE6074 */ // True False
void create();
	/* 80BE63C8 */ // True False
~daObjFchain_c();
	/* 80BE64E0 */ // True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz* False
// 	 cXyz False
void checkPlayerFoot(cXyz const*, cXyz const*, cXyz*);
	/* 80BE66B4 */ // True False
//  cXyz* False
// 	 cXyz False
//  f32 False
void setGroundVec(cXyz*, f32);
	/* 80BE6868 */ // True False
void execute();
	/* 80BE7324 */ // True False
void draw();
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dEvent_manager_c {
	/* 800483E8 */ // False False
void getRunEventName();
};

struct J3DShape {
	/* 80315300 */ // False False
void loadPreDrawSetting() const;
};

struct J3DPacket;
struct J3DDrawBuffer {
	/* 8032548C */ // False False
//  J3DPacket* False
// 	 J3DPacket False
//  u16 False
void entryImm(J3DPacket*, u16);
};

struct J3DPacket {
	/* 80312750 */ // False False
//  bool False
//  J3DDrawBuffer* False
// 	 J3DDrawBuffer False
bool entry(J3DDrawBuffer*);
};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjFchain_createHeap(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjFchain_Create(fopAc_ac_c*);
// True False
//  daObjFchain_c* False
// 	 daObjFchain_c False
static void daObjFchain_Delete(daObjFchain_c*);
// True False
//  daObjFchain_c* False
// 	 daObjFchain_c False
static void daObjFchain_Execute(daObjFchain_c*);
// True False
//  daObjFchain_c* False
// 	 daObjFchain_c False
static void daObjFchain_Draw(daObjFchain_c*);

// True False
extern "C" void createHeap__13daObjFchain_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjFchain_createHeap__FP10fopAc_ac_c();
// True False
extern "C" void create__13daObjFchain_cFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjFchain_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__13daObjFchain_cFv();
// True False
//  daObjFchain_c* False
// 	 daObjFchain_c False
extern "C" static void daObjFchain_Delete__FP13daObjFchain_c();
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void checkPlayerFoot__13daObjFchain_cFPC4cXyzPC4cXyzP4cXyz();
// True False
//  cXyz* False
// 	 cXyz False
//  f32 False
extern "C" void setGroundVec__13daObjFchain_cFP4cXyzf();
// True False
extern "C" void execute__13daObjFchain_cFv();
// True False
//  daObjFchain_c* False
// 	 daObjFchain_c False
extern "C" static void daObjFchain_Execute__FP13daObjFchain_c();
// True False
extern "C" void draw__19daObjFchain_shape_cFv();
// True False
extern "C" void draw__13daObjFchain_cFv();
// True False
//  daObjFchain_c* False
// 	 daObjFchain_c False
extern "C" static void daObjFchain_Draw__FP13daObjFchain_c();
// True False
extern "C" void __dt__19daObjFchain_shape_cFv();
extern "C" extern u8 const data_80BE7440[12];
extern "C" extern u32 const lit_3710;
extern "C" extern u32 const lit_3711;
extern "C" extern u32 const lit_3712;
extern "C" extern u32 const lit_3713;
extern "C" extern u32 const lit_3714;
extern "C" extern u32 const lit_3715;
extern "C" extern u32 const lit_3716;
extern "C" extern u32 const lit_3717;
extern "C" extern u32 const lit_3718;
extern "C" extern u8 const lit_3720[8];
extern "C" extern u8 const lit_3809[4 + 4 /* padding */];
extern "C" extern u8 const lit_3810[8];
extern "C" extern u8 const lit_3811[8];
extern "C" extern u8 const lit_3812[8];
extern "C" extern u32 const lit_3813;
extern "C" extern u32 const lit_3814;
extern "C" extern u32 const lit_3857;
extern "C" extern u8 const data_80BE74A4[12];
extern "C" extern u32 const lit_4159;
extern "C" extern u32 const lit_4160;
extern "C" extern u32 const lit_4161;
extern "C" extern u32 const lit_4162;
extern "C" extern u32 const lit_4163;
extern "C" extern u32 const lit_4164;
extern "C" extern u32 const lit_4165;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_Fchain[12];
extern "C" extern void* __vt__19daObjFchain_shape_c[5];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
void dKy_setLight_again();
// False False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void dKy_GxFog_tevstr_set(dKy_tevstr_c*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
void cM_rnd();
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transM__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void getRunEventName__16dEvent_manager_cFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_setLight_again__Fv();
// False False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void dKy_GxFog_tevstr_set__FP12dKy_tevstr_c();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
extern "C" void normalizeZP__4cXyzFv();
// False False
extern "C" void atan2sX_Z__4cXyzCFv();
// False False
extern "C" void atan2sY_XZ__4cXyzCFv();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
extern "C" void cM_rnd__Fv();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  bool False
//  J3DDrawBuffer* False
// 	 J3DDrawBuffer False
extern "C" bool entry__9J3DPacketFP13J3DDrawBuffer();
// False False
extern "C" void loadPreDrawSetting__8J3DShapeCFv();
// False False
//  J3DPacket* False
// 	 J3DPacket False
//  u16 False
extern "C" void entryImm__13J3DDrawBufferFP9J3DPacketUs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECScale();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void GXLoadLightObjImm();
// False False
extern "C" void GXSetChanAmbColor();
// False False
extern "C" void GXSetChanMatColor();
// False False
extern "C" void GXLoadPosMtxImm();
// False False
extern "C" void GXLoadNrmMtxImm();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern f32 Zero__4cXyz[3];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 g_whiteColor;
extern "C" extern u32 __float_nan;
extern "C" extern u8 struct_80450D64[4];
extern "C" extern u8 sOldVcdVatCmd__8J3DShape[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80BE7438-80BE7440 0007+01 s=6 e=0 z=0  None .rodata    l_arcName                                                    */
SECTION_RODATA static u8 const l_arcName[7 + 1 /* padding */] = {
	0x46, 0x63, 0x68, 0x61, 0x69, 0x6E, 0x00,
	/* padding */
	0x00,
};

/* 80BE5FF8-80BE6054 005C+00 s=1 e=0 z=0  None .text      createHeap__13daObjFchain_cFv                                */
//	80BE600C: 80BE7438 (l_arcName)
//	80BE6010: 80BE7438 (l_arcName)
//	80BE6018: 804061C0 (g_dComIfG_gameInfo)
//	80BE601C: 804061C0 (g_dComIfG_gameInfo)
//	80BE602C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjFchain_c::createHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/createHeap__13daObjFchain_cFv.s"
}
#pragma pop


/* 80BE6054-80BE6074 0020+00 s=1 e=0 z=0  None .text      daObjFchain_createHeap__FP10fopAc_ac_c                       */
//	80BE6060: 80BE5FF8 (createHeap__13daObjFchain_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjFchain_createHeap(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/daObjFchain_createHeap__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BE74D8-80BE74F8 0020+00 s=1 e=0 z=0  None .data      l_daObjFchain_Method                                         */
SECTION_DATA static void* l_daObjFchain_Method[8] = {
	(void*)daObjFchain_Create__FP10fopAc_ac_c,
	(void*)daObjFchain_Delete__FP13daObjFchain_c,
	(void*)daObjFchain_Execute__FP13daObjFchain_c,
	(void*)NULL,
	(void*)daObjFchain_Draw__FP13daObjFchain_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80BE74F8-80BE7528 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Fchain                                         */
SECTION_DATA void* g_profile_Obj_Fchain[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01580000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000928,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00F60000,
	(void*)&l_daObjFchain_Method,
	(void*)0x00060000,
	(void*)0x030E0000,
};

/* 80BE7528-80BE753C 0014+00 s=3 e=0 z=0  None .data      __vt__19daObjFchain_shape_c                                  */
SECTION_DATA void* __vt__19daObjFchain_shape_c[5] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)entry__9J3DPacketFP13J3DDrawBuffer,
	(void*)draw__19daObjFchain_shape_cFv,
	(void*)__dt__19daObjFchain_shape_cFv,
};

/* 80BE6074-80BE6328 02B4+00 s=1 e=0 z=0  None .text      create__13daObjFchain_cFv                                    */
//	80BE60A4: 803621C8 (_savegpr_24)
//	80BE60AC: 80BE7438 (l_arcName)
//	80BE60B0: 80BE7438 (l_arcName)
//	80BE60CC: 80018B64 (__ct__10fopAc_ac_cFv)
//	80BE60D0: 803CD97C (__vt__9J3DPacket)
//	80BE60D4: 803CD97C (__vt__9J3DPacket)
//	80BE60EC: 80BE7528 (__vt__19daObjFchain_shape_c)
//	80BE60F0: 80BE7528 (__vt__19daObjFchain_shape_c)
//	80BE60FC: 80BE63A4 (__ct__4cXyzFv)
//	80BE6100: 80BE63A4 (__ct__4cXyzFv)
//	80BE6104: 80BE6368 (__dt__4cXyzFv)
//	80BE6108: 80BE6368 (__dt__4cXyzFv)
//	80BE6114: 80361D60 (__construct_array)
//	80BE611C: 80BE63A4 (__ct__4cXyzFv)
//	80BE6120: 80BE63A4 (__ct__4cXyzFv)
//	80BE6124: 80BE6368 (__dt__4cXyzFv)
//	80BE6128: 80BE6368 (__dt__4cXyzFv)
//	80BE6134: 80361D60 (__construct_array)
//	80BE613C: 80BE63A4 (__ct__4cXyzFv)
//	80BE6140: 80BE63A4 (__ct__4cXyzFv)
//	80BE6144: 80BE6368 (__dt__4cXyzFv)
//	80BE6148: 80BE6368 (__dt__4cXyzFv)
//	80BE6154: 80361D60 (__construct_array)
//	80BE615C: 80BE6364 (__ct__5csXyzFv)
//	80BE6160: 80BE6364 (__ct__5csXyzFv)
//	80BE6164: 80BE6328 (__dt__5csXyzFv)
//	80BE6168: 80BE6328 (__dt__5csXyzFv)
//	80BE6174: 80361D60 (__construct_array)
//	80BE618C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80BE61A0: 80BE6054 (daObjFchain_createHeap__FP10fopAc_ac_c)
//	80BE61A4: 80BE6054 (daObjFchain_createHeap__FP10fopAc_ac_c)
//	80BE61AC: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80BE61C0: 80450D64 (struct_80450D64)
//	80BE61C4: 80450D64 (struct_80450D64)
//	80BE6204: 803DD470 (now__14mDoMtx_stack_c)
//	80BE6208: 803DD470 (now__14mDoMtx_stack_c)
//	80BE6218: 8026798C (cM_rndFX__Ff)
//	80BE623C: 8026798C (cM_rndFX__Ff)
//	80BE6258: 8026786C (cM_rnd__Fv)
//	80BE6274: 80267954 (cM_rndF__Ff)
//	80BE62B0: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BE62BC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80BE62CC: 80346D6C (PSMTXMultVec)
//	80BE6314: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjFchain_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/create__13daObjFchain_cFv.s"
}
#pragma pop


/* 80BE6328-80BE6364 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80BE6348: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/__dt__5csXyzFv.s"
}
#pragma pop


/* 80BE6364-80BE6368 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80BE6368-80BE63A4 003C+00 s=2 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80BE6388: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/__dt__4cXyzFv.s"
}
#pragma pop


/* 80BE63A4-80BE63A8 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80BE63A8-80BE63C8 0020+00 s=1 e=0 z=0  None .text      daObjFchain_Create__FP10fopAc_ac_c                           */
//	80BE63B4: 80BE6074 (create__13daObjFchain_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjFchain_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/daObjFchain_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80BE63C8-80BE64B8 00F0+00 s=1 e=0 z=0  None .text      __dt__13daObjFchain_cFv                                      */
//	80BE63EC: 80BE7438 (l_arcName)
//	80BE63F0: 80BE7438 (l_arcName)
//	80BE63F4: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80BE63FC: 80BE6328 (__dt__5csXyzFv)
//	80BE6400: 80BE6328 (__dt__5csXyzFv)
//	80BE640C: 80361CE8 (__destroy_arr)
//	80BE6414: 80BE6368 (__dt__4cXyzFv)
//	80BE6418: 80BE6368 (__dt__4cXyzFv)
//	80BE6424: 80361CE8 (__destroy_arr)
//	80BE642C: 80BE6368 (__dt__4cXyzFv)
//	80BE6430: 80BE6368 (__dt__4cXyzFv)
//	80BE643C: 80361CE8 (__destroy_arr)
//	80BE6444: 80BE6368 (__dt__4cXyzFv)
//	80BE6448: 80BE6368 (__dt__4cXyzFv)
//	80BE6454: 80361CE8 (__destroy_arr)
//	80BE6460: 80BE7528 (__vt__19daObjFchain_shape_c)
//	80BE6464: 80BE7528 (__vt__19daObjFchain_shape_c)
//	80BE6474: 803CD97C (__vt__9J3DPacket)
//	80BE6478: 803CD97C (__vt__9J3DPacket)
//	80BE6488: 80018C8C (__dt__10fopAc_ac_cFv)
//	80BE6498: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObjFchain_c::~daObjFchain_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/__dt__13daObjFchain_cFv.s"
}
#pragma pop


/* 80BE64B8-80BE64E0 0028+00 s=1 e=0 z=0  None .text      daObjFchain_Delete__FP13daObjFchain_c                        */
//	80BE64C8: 80BE63C8 (__dt__13daObjFchain_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjFchain_c* False
// 	 daObjFchain_c False
asm static void daObjFchain_Delete(daObjFchain_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/daObjFchain_Delete__FP13daObjFchain_c.s"
}
#pragma pop


/* 80BE64E0-80BE66B4 01D4+00 s=1 e=0 z=0  None .text      checkPlayerFoot__13daObjFchain_cFPC4cXyzPC4cXyzP4cXyz        */
//	80BE6500: 80BE7438 (l_arcName)
//	80BE6504: 80BE7438 (l_arcName)
//	80BE650C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80BE653C: 80347138 (PSVECSquareMag)
//	80BE65AC: 80450AE0 (__float_nan)
//	80BE65B0: 80450AE0 (__float_nan)
//	80BE661C: 80450AE0 (__float_nan)
//	80BE6620: 80450AE0 (__float_nan)
//	80BE6660: 80266F48 (normalizeZP__4cXyzFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz* False
// 	 cXyz False
asm void daObjFchain_c::checkPlayerFoot(cXyz const* param_0, cXyz const* param_1, cXyz* param_2) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/checkPlayerFoot__13daObjFchain_cFPC4cXyzPC4cXyzP4cXyz.s"
}
#pragma pop


/* 80BE66B4-80BE6868 01B4+00 s=1 e=0 z=0  None .text      setGroundVec__13daObjFchain_cFP4cXyzf                        */
//	80BE66D8: 80BE7438 (l_arcName)
//	80BE66DC: 80BE7438 (l_arcName)
//	80BE66FC: 80347138 (PSVECSquareMag)
//	80BE676C: 80450AE0 (__float_nan)
//	80BE6770: 80450AE0 (__float_nan)
//	80BE67DC: 80450AE0 (__float_nan)
//	80BE67E0: 80450AE0 (__float_nan)
//	80BE6844: 80266F48 (normalizeZP__4cXyzFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz* False
// 	 cXyz False
//  f32 False
asm void daObjFchain_c::setGroundVec(cXyz* param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/setGroundVec__13daObjFchain_cFP4cXyzf.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BE7440-80BE744C 000C+00 s=0 e=0 z=0  None .rodata    localVec$3662                                                */
SECTION_RODATA u8 const data_80BE7440[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x10, 0x00, 0x00,
};

/* 80BE744C-80BE7450 0004+00 s=0 e=0 z=0  None .rodata    @3710                                                        */
SECTION_RODATA u32 const lit_3710 = 0x40400000;

/* 80BE7450-80BE7454 0004+00 s=0 e=0 z=0  None .rodata    @3711                                                        */
SECTION_RODATA u32 const lit_3711 = 0x45800000;

/* 80BE7454-80BE7458 0004+00 s=0 e=0 z=0  None .rodata    @3712                                                        */
SECTION_RODATA u32 const lit_3712 = 0x45000000;

/* 80BE7458-80BE745C 0004+00 s=0 e=0 z=0  None .rodata    @3713                                                        */
SECTION_RODATA u32 const lit_3713 = 0xC5800000;

/* 80BE745C-80BE7460 0004+00 s=0 e=0 z=0  None .rodata    @3714                                                        */
SECTION_RODATA u32 const lit_3714 = 0x3F800000;

/* 80BE7460-80BE7464 0004+00 s=0 e=0 z=0  None .rodata    @3715                                                        */
SECTION_RODATA u32 const lit_3715 = 0xBF800000;

/* 80BE7464-80BE7468 0004+00 s=0 e=0 z=0  None .rodata    @3716                                                        */
SECTION_RODATA u32 const lit_3716 = 0x3F000000;

/* 80BE7468-80BE746C 0004+00 s=0 e=0 z=0  None .rodata    @3717                                                        */
SECTION_RODATA u32 const lit_3717 = 0x44800000;

/* 80BE746C-80BE7470 0004+00 s=0 e=0 z=0  None .rodata    @3718                                                        */
SECTION_RODATA u32 const lit_3718 = 0x45400000;

/* 80BE7470-80BE7478 0008+00 s=0 e=0 z=0  None .rodata    @3720                                                        */
SECTION_RODATA u8 const lit_3720[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80BE7478-80BE7480 0004+04 s=0 e=0 z=0  None .rodata    @3809                                                        */
SECTION_RODATA u8 const lit_3809[4 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 80BE7480-80BE7488 0008+00 s=0 e=0 z=0  None .rodata    @3810                                                        */
SECTION_RODATA u8 const lit_3810[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BE7488-80BE7490 0008+00 s=0 e=0 z=0  None .rodata    @3811                                                        */
SECTION_RODATA u8 const lit_3811[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BE7490-80BE7498 0008+00 s=0 e=0 z=0  None .rodata    @3812                                                        */
SECTION_RODATA u8 const lit_3812[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BE7498-80BE749C 0004+00 s=0 e=0 z=0  None .rodata    @3813                                                        */
SECTION_RODATA u32 const lit_3813 = 0x40A00000;

/* 80BE749C-80BE74A0 0004+00 s=0 e=0 z=0  None .rodata    @3814                                                        */
SECTION_RODATA u32 const lit_3814 = 0x41A00000;

/* 80BE74A0-80BE74A4 0004+00 s=0 e=0 z=0  None .rodata    @3857                                                        */
SECTION_RODATA u32 const lit_3857 = 0x3DCCCCCD;

/* 80BE74A4-80BE74B0 000C+00 s=0 e=0 z=0  None .rodata    wolfChainBaseOffset$3862                                     */
SECTION_RODATA u8 const data_80BE74A4[12] = {
	0x41, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x40, 0x00, 0x00,
};

/* 80BE74B0-80BE74B4 0004+00 s=0 e=0 z=0  None .rodata    @4159                                                        */
SECTION_RODATA u32 const lit_4159 = 0xBFC00000;

/* 80BE74B4-80BE74B8 0004+00 s=0 e=0 z=0  None .rodata    @4160                                                        */
SECTION_RODATA u32 const lit_4160 = 0x41100000;

/* 80BE74B8-80BE74BC 0004+00 s=0 e=0 z=0  None .rodata    @4161                                                        */
SECTION_RODATA u32 const lit_4161 = 0x43460000;

/* 80BE74BC-80BE74C0 0004+00 s=0 e=0 z=0  None .rodata    @4162                                                        */
SECTION_RODATA u32 const lit_4162 = 0x3E99999A;

/* 80BE74C0-80BE74C4 0004+00 s=0 e=0 z=0  None .rodata    @4163                                                        */
SECTION_RODATA u32 const lit_4163 = 0x40600000;

/* 80BE74C4-80BE74C8 0004+00 s=0 e=0 z=0  None .rodata    @4164                                                        */
SECTION_RODATA u32 const lit_4164 = 0x44C00000;

/* 80BE74C8-80BE74CC 0004+00 s=0 e=0 z=0  None .rodata    @4165                                                        */
SECTION_RODATA u32 const lit_4165 = 0x40000000;

/* 80BE74CC-80BE74D6 000A+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80BE74CC = "demo06_01";
#pragma pop

/* 80BE6868-80BE7174 090C+00 s=1 e=0 z=0  None .text      execute__13daObjFchain_cFv                                   */
//	80BE6898: 803621C4 (_savegpr_23)
//	80BE68A0: 80BE7438 (l_arcName)
//	80BE68A4: 80BE7438 (l_arcName)
//	80BE68A8: 804061C0 (g_dComIfG_gameInfo)
//	80BE68AC: 804061C0 (g_dComIfG_gameInfo)
//	80BE68C4: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	80BE68D4: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	80BE68DC: 80BE74CC (stringBase0)
//	80BE68E0: 80BE74CC (stringBase0)
//	80BE68E4: 80368994 (strcmp)
//	80BE6944: 804061C0 (g_dComIfG_gameInfo)
//	80BE6948: 804061C0 (g_dComIfG_gameInfo)
//	80BE6970: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80BE6980: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80BE69AC: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80BE69D0: 80BE64E0 (checkPlayerFoot__13daObjFchain_cFPC4cXyzPC4cXyzP4cXyz)
//	80BE69E4: 80BE64E0 (checkPlayerFoot__13daObjFchain_cFPC4cXyzPC4cXyzP4cXyz)
//	80BE69F8: 80BE64E0 (checkPlayerFoot__13daObjFchain_cFPC4cXyzPC4cXyzP4cXyz)
//	80BE6A0C: 80BE64E0 (checkPlayerFoot__13daObjFchain_cFPC4cXyzPC4cXyzP4cXyz)
//	80BE6A30: 80266F48 (normalizeZP__4cXyzFv)
//	80BE6A40: 80266B84 (__ml__4cXyzCFf)
//	80BE6A50: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80BE6A88: 80BE66B4 (setGroundVec__13daObjFchain_cFP4cXyzf)
//	80BE6A98: 80266B84 (__ml__4cXyzCFf)
//	80BE6AA8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80BE6AEC: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80BE6B18: 80346D6C (PSMTXMultVec)
//	80BE6B28: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80BE6B48: 80347138 (PSVECSquareMag)
//	80BE6BB8: 80450AE0 (__float_nan)
//	80BE6BBC: 80450AE0 (__float_nan)
//	80BE6C28: 80450AE0 (__float_nan)
//	80BE6C2C: 80450AE0 (__float_nan)
//	80BE6C54: 80267674 (cM_atan2s__Fff)
//	80BE6CA0: 803470D8 (PSVECScale)
//	80BE6CB4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80BE6D10: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80BE6D20: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80BE6D58: 80266F48 (normalizeZP__4cXyzFv)
//	80BE6D68: 80266B84 (__ml__4cXyzCFf)
//	80BE6D78: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80BE6DB0: 80BE66B4 (setGroundVec__13daObjFchain_cFP4cXyzf)
//	80BE6DC0: 80266B84 (__ml__4cXyzCFf)
//	80BE6DD0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80BE6E34: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80BE6E44: 80266B84 (__ml__4cXyzCFf)
//	80BE6E84: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80BE6EA4: 80267150 (atan2sY_XZ__4cXyzCFv)
//	80BE6EC4: 80347138 (PSVECSquareMag)
//	80BE6F30: 80450AE0 (__float_nan)
//	80BE6F34: 80450AE0 (__float_nan)
//	80BE6FA0: 80450AE0 (__float_nan)
//	80BE6FA4: 80450AE0 (__float_nan)
//	80BE6FB4: 80267128 (atan2sX_Z__4cXyzCFv)
//	80BE6FC0: 80347138 (PSVECSquareMag)
//	80BE6FD8: 8026786C (cM_rnd__Fv)
//	80BE6FF8: 80267954 (cM_rndF__Ff)
//	80BE7084: 8026798C (cM_rndFX__Ff)
//	80BE70A8: 8026798C (cM_rndFX__Ff)
//	80BE7100: 80430CF4 (Zero__4cXyz)
//	80BE7104: 80430CF4 (Zero__4cXyz)
//	80BE7160: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjFchain_c::execute() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/execute__13daObjFchain_cFv.s"
}
#pragma pop


/* 80BE7174-80BE7194 0020+00 s=1 e=0 z=0  None .text      daObjFchain_Execute__FP13daObjFchain_c                       */
//	80BE7180: 80BE6868 (execute__13daObjFchain_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjFchain_c* False
// 	 daObjFchain_c False
asm static void daObjFchain_Execute(daObjFchain_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/daObjFchain_Execute__FP13daObjFchain_c.s"
}
#pragma pop


/* 80BE7194-80BE7324 0190+00 s=1 e=0 z=0  None .text      draw__19daObjFchain_shape_cFv                                */
//	80BE71A4: 803621C8 (_savegpr_24)
//	80BE71C8: 80434AC8 (j3dSys)
//	80BE71CC: 80434AC8 (j3dSys)
//	80BE71E8: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	80BE71EC: 804515D0 (sOldVcdVatCmd__8J3DShape)
//	80BE7208: 80315300 (loadPreDrawSetting__8J3DShapeCFv)
//	80BE723C: 8035D960 (GXSetChanAmbColor)
//	80BE7240: 80450608 (g_whiteColor)
//	80BE7244: 80450608 (g_whiteColor)
//	80BE7254: 8035DA48 (GXSetChanMatColor)
//	80BE7258: 801A75C0 (dKy_setLight_again__Fv)
//	80BE7260: 801A8650 (dKy_GxFog_tevstr_set__FP12dKy_tevstr_c)
//	80BE726C: 8035D8E4 (GXLoadLightObjImm)
//	80BE7270: 804061C0 (g_dComIfG_gameInfo)
//	80BE7274: 804061C0 (g_dComIfG_gameInfo)
//	80BE7280: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80BE7298: 80434AC8 (j3dSys)
//	80BE729C: 80434AC8 (j3dSys)
//	80BE72A0: 803DD470 (now__14mDoMtx_stack_c)
//	80BE72A4: 803DD470 (now__14mDoMtx_stack_c)
//	80BE72B8: 803464B0 (PSMTXCopy)
//	80BE72C0: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	80BE72C8: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80BE72D4: 8036024C (GXLoadPosMtxImm)
//	80BE72E0: 8036029C (GXLoadNrmMtxImm)
//	80BE7310: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjFchain_shape_c::draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/draw__19daObjFchain_shape_cFv.s"
}
#pragma pop


/* 80BE7324-80BE73B4 0090+00 s=1 e=0 z=0  None .text      draw__13daObjFchain_cFv                                      */
//	80BE7344: 8042CA54 (g_env_light)
//	80BE7348: 8042CA54 (g_env_light)
//	80BE7358: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80BE735C: 8042CA54 (g_env_light)
//	80BE7360: 8042CA54 (g_env_light)
//	80BE736C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80BE7384: 804061C0 (g_dComIfG_gameInfo)
//	80BE7388: 804061C0 (g_dComIfG_gameInfo)
//	80BE7398: 8032548C (entryImm__13J3DDrawBufferFP9J3DPacketUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjFchain_c::draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/draw__13daObjFchain_cFv.s"
}
#pragma pop


/* 80BE73B4-80BE73D4 0020+00 s=1 e=0 z=0  None .text      daObjFchain_Draw__FP13daObjFchain_c                          */
//	80BE73C0: 80BE7324 (draw__13daObjFchain_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjFchain_c* False
// 	 daObjFchain_c False
asm static void daObjFchain_Draw(daObjFchain_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/daObjFchain_Draw__FP13daObjFchain_c.s"
}
#pragma pop


/* 80BE73D4-80BE7430 005C+00 s=1 e=0 z=0  None .text      __dt__19daObjFchain_shape_cFv                                */
//	80BE73EC: 80BE7528 (__vt__19daObjFchain_shape_c)
//	80BE73F0: 80BE7528 (__vt__19daObjFchain_shape_c)
//	80BE73FC: 803CD97C (__vt__9J3DPacket)
//	80BE7400: 803CD97C (__vt__9J3DPacket)
//	80BE7414: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObjFchain_shape_c::~daObjFchain_shape_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_fchain/d_a_obj_fchain/__dt__19daObjFchain_shape_cFv.s"
}
#pragma pop


