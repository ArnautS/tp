// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_ss_item
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CE70 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void scaleM(cXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct fopAc_ac_c {
};

struct daObj_SSItem_c {
	/* 80CE6C18 */ // True False
~daObj_SSItem_c();
	/* 80CE6E68 */ // True False
void create();
	/* 80CE7298 */ // True False
void CreateHeap();
	/* 80CE7358 */ // True False
void Delete();
	/* 80CE738C */ // True False
void Execute();
	/* 80CE7610 */ // True False
void Draw();
	/* 80CE7758 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80CE7778 */ // True False
void setSoldOut();
	/* 80CE77CC */ // True False
void getProcessID();
	/* 80CE77F8 */ // False False
void getExchangeItemPtr();
	/* 80CE7838 */ // True False
void getResName();
	/* 80CE7850 */ // True False
void getTypeFromParam();
	/* 80CE789C */ // True False
void getFlowNodeNum();
	/* 80CE78D4 */ // True False
void getValue();
	/* 80CE78E0 */ // True False
void restart();
	/* 80CE7950 */ // True False
void initialize();
	/* 80CE7B04 */ // True False
//  int (daObj_SSItem_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daObj_SSItem_c False
void setProcess(int (daObj_SSItem_c::*)(void*));
	/* 80CE7BB4 */ // True False
void setParam();
	/* 80CE7C24 */ // True False
void setEnvTevColor();
	/* 80CE7C80 */ // True False
void setRoomNo();
	/* 80CE7CC4 */ // True False
void setMtx();
	/* 80CE7D28 */ // True False
void setAttnPos();
	/* 80CE7D5C */ // True False
//  void* False
// 	 void False
void wait(void*);
};

struct daObj_SSBase_c {
	/* 8015E3F8 */ // False False
daObj_SSBase_c();
	/* 8015E450 */ // False False
~daObj_SSBase_c();
};

struct daMyna_c {
	/* 809487EC */ // False False
//  unsigned int False
void soldoutItem(unsigned int);
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C37C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, char const*, dRes_info_c*, int);
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
};

struct _GXTexObj {
};

struct dDlst_shadowControl_c {
	/* 80055F84 */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void setSimple(cXyz*, f32, f32, cXyz*, s16, f32, _GXTexObj*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 80CE71CC */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 80084658 */ // False False
void ChkCoHit();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80CE7228 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80CE715C */ // True False
~dBgS_AcchCir();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct dBgS {
	/* 80074BE8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyColor(cBgS_PolyInfo const&);
	/* 80075100 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomId(cBgS_PolyInfo const&);
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGPla {
	/* 80CE7710 */ // True False
~cM3dGPla();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80CE70CC */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80CE7114 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80CE7E14 */ // True False
~cCcD_GStts();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct cBgS {
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daObj_SSItem_Create(void*);
// True False
//  void* False
// 	 void False
static void daObj_SSItem_Delete(void*);
// True False
//  void* False
// 	 void False
static void daObj_SSItem_Execute(void*);
// True False
//  void* False
// 	 void False
static void daObj_SSItem_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daObj_SSItem_IsDelete(void*);

// True False
extern "C" void __dt__14daObj_SSItem_cFv();
// True False
extern "C" void create__14daObj_SSItem_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void CreateHeap__14daObj_SSItem_cFv();
// True False
extern "C" void Delete__14daObj_SSItem_cFv();
// True False
extern "C" void Execute__14daObj_SSItem_cFv();
// True False
extern "C" void Draw__14daObj_SSItem_cFv();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__14daObj_SSItem_cFP10fopAc_ac_c();
// True False
extern "C" void setSoldOut__14daObj_SSItem_cFv();
// True False
extern "C" void getProcessID__14daObj_SSItem_cFv();
// False False
extern "C" void getExchangeItemPtr__14daObj_SSItem_cFv();
// True False
extern "C" void getResName__14daObj_SSItem_cFv();
// True False
extern "C" void getTypeFromParam__14daObj_SSItem_cFv();
// True False
extern "C" void getFlowNodeNum__14daObj_SSItem_cFv();
// True False
extern "C" void getValue__14daObj_SSItem_cFv();
// True False
extern "C" void restart__14daObj_SSItem_cFv();
// True False
extern "C" void initialize__14daObj_SSItem_cFv();
// True False
//  int (daObj_SSItem_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daObj_SSItem_c False
extern "C" void setProcess__14daObj_SSItem_cFM14daObj_SSItem_cFPCvPvPv_i();
// True False
extern "C" void setParam__14daObj_SSItem_cFv();
// True False
extern "C" void setEnvTevColor__14daObj_SSItem_cFv();
// True False
extern "C" void setRoomNo__14daObj_SSItem_cFv();
// True False
extern "C" void setMtx__14daObj_SSItem_cFv();
// True False
extern "C" void setAttnPos__14daObj_SSItem_cFv();
// True False
//  void* False
// 	 void False
extern "C" void wait__14daObj_SSItem_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daObj_SSItem_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daObj_SSItem_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daObj_SSItem_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daObj_SSItem_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daObj_SSItem_IsDelete__FPv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// False False
extern "C" void __sinit_d_a_obj_ss_item_cpp();
// True False
extern "C" static void func_80CE7E94();
// True False
extern "C" static void func_80CE7E9C();
extern "C" extern u32 const lit_4206;
extern "C" extern u32 const lit_4207;
extern "C" extern u32 const lit_4208;
extern "C" extern u32 const lit_4234;
extern "C" extern u32 const lit_4235;
extern "C" extern u32 const lit_4347;
extern "C" extern u32 const lit_4348;
extern "C" extern u32 const lit_4349;
extern "C" extern u32 const lit_4350;
extern "C" extern u32 const lit_4351;
extern "C" extern u32 const lit_4352;
extern "C" extern u32 const lit_4377;
extern "C" extern u32 const lit_4378;
extern "C" extern void* g_profile_OBJ_SSITEM[12];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__14daObj_SSItem_c[5];

// 
// External References:
// 

// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
void fopAcM_create(s16, u32, cXyz const*, int, csXyz const*, cXyz const*, s8);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeByID(void*, void*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void scaleM__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
extern "C" void fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeByID__FPvPv();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyColor__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void __ct__14daObj_SSBase_cFv();
// False False
extern "C" void __dt__14daObj_SSBase_cFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
// False False
//  unsigned int False
extern "C" void soldoutItem__8daMyna_cFUi();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80CE7EB0-80CE7EE0 0030+00 s=5 e=0 z=0  None .rodata    mCcDObjInfo__14daObj_SSItem_c                                */
SECTION_RODATA static u8 const mCcDObjInfo__14daObj_SSItem_c[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE7EE0-80CE7EE4 0004+00 s=1 e=0 z=0  None .rodata    @4205                                                        */
SECTION_RODATA static u8 const lit_4205[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80CE7EE4-80CE7EE8 0004+00 s=0 e=0 z=0  None .rodata    @4206                                                        */
SECTION_RODATA u32 const lit_4206 = 0xCE6E6B28;

/* 80CE7EE8-80CE7EEC 0004+00 s=0 e=0 z=0  None .rodata    @4207                                                        */
SECTION_RODATA u32 const lit_4207 = 0x41000000;

/* 80CE7EEC-80CE7EF0 0004+00 s=0 e=0 z=0  None .rodata    @4208                                                        */
SECTION_RODATA u32 const lit_4208 = 0x42780000;

/* 80CE7EF0-80CE7EF4 0004+00 s=0 e=0 z=0  None .rodata    @4234                                                        */
SECTION_RODATA u32 const lit_4234 = 0x41A00000;

/* 80CE7EF4-80CE7EF8 0004+00 s=0 e=0 z=0  None .rodata    @4235                                                        */
SECTION_RODATA u32 const lit_4235 = 0x3F800000;

/* 80CE7EF8-80CE7EFC 0004+00 s=0 e=0 z=0  None .rodata    @4347                                                        */
SECTION_RODATA u32 const lit_4347 = 0xC1F00000;

/* 80CE7EFC-80CE7F00 0004+00 s=0 e=0 z=0  None .rodata    @4348                                                        */
SECTION_RODATA u32 const lit_4348 = 0xC1700000;

/* 80CE7F00-80CE7F04 0004+00 s=0 e=0 z=0  None .rodata    @4349                                                        */
SECTION_RODATA u32 const lit_4349 = 0x41F00000;

/* 80CE7F04-80CE7F08 0004+00 s=0 e=0 z=0  None .rodata    @4350                                                        */
SECTION_RODATA u32 const lit_4350 = 0x42340000;

/* 80CE7F08-80CE7F0C 0004+00 s=0 e=0 z=0  None .rodata    @4351                                                        */
SECTION_RODATA u32 const lit_4351 = 0x41C00000;

/* 80CE7F0C-80CE7F10 0004+00 s=0 e=0 z=0  None .rodata    @4352                                                        */
SECTION_RODATA u32 const lit_4352 = 0x41400000;

/* 80CE7F10-80CE7F14 0004+00 s=0 e=0 z=0  None .rodata    @4377                                                        */
SECTION_RODATA u32 const lit_4377 = 0x3FB33333;

/* 80CE7F14-80CE7F18 0004+00 s=0 e=0 z=0  None .rodata    @4378                                                        */
SECTION_RODATA u32 const lit_4378 = 0xC0A00000;

/* 80CE7F18-80CE7F28 0010+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80CE7F18[16] = {
	/* 80CE7F18 0007 stringBase_80CE7F18 @stringBase0 */
	0x41, 0x6C, 0x77, 0x61, 0x79, 0x73, 0x00,
	/* 80CE7F1F 0008 data_80CE7F1F None */
	0x50, 0x75, 0x6D, 0x70, 0x6B, 0x69, 0x6E, 0x00,
	/* 80CE7F27 0001 data_80CE7F27 None */
	0x00,
};

/* 80CE7F28-80CE7F34 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const data_80CE7F28[12] = {
	0x70, 0x75, 0x6D, 0x70, 0x6B, 0x69, 0x6E, 0x2E, 0x62, 0x6D, 0x64, 0x00,
};

/* 80CE7F34-80CE7F40 000C+00 s=1 e=0 z=0  None .data      l_resFileName                                                */
SECTION_DATA static void* l_resFileName[3] = {
	(void*)(((char*)&struct_80CE7F18)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80CE7F18)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80CE7F18)+0x7) /* None */,
};

/* 80CE7F40-80CE7F4C 000C+00 s=1 e=0 z=0  None .data      l_bmdIdxName                                                 */
SECTION_DATA static u8 l_bmdIdxName[12] = {
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE7F4C-80CE7F58 000C+00 s=1 e=0 z=0  None .data      l_bmdFileName                                                */
SECTION_DATA static void* l_bmdFileName[3] = {
	(void*)(((char*)&struct_80CE7F18)+0xF) /* None */,
	(void*)(((char*)&struct_80CE7F18)+0xF) /* None */,
	(void*)&data_80CE7F28,
};

/* 80CE7F58-80CE7F9C 0044+00 s=2 e=0 z=0  None .data      mCcDCyl__14daObj_SSItem_c                                    */
SECTION_DATA static u8 mCcDCyl__14daObj_SSItem_c[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80CE7F9C-80CE7FA8 000C+00 s=1 e=0 z=0  None .data      @4309                                                        */
SECTION_DATA static void* lit_4309[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__14daObj_SSItem_cFPv,
};

/* 80CE7FA8-80CE7FC8 0020+00 s=1 e=0 z=0  None .data      daObj_SSItem_MethodTable                                     */
SECTION_DATA static void* daObj_SSItem_MethodTable[8] = {
	(void*)daObj_SSItem_Create__FPv,
	(void*)daObj_SSItem_Delete__FPv,
	(void*)daObj_SSItem_Execute__FPv,
	(void*)daObj_SSItem_IsDelete__FPv,
	(void*)daObj_SSItem_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80CE7FC8-80CE7FF8 0030+00 s=0 e=0 z=1  None .data      g_profile_OBJ_SSITEM                                         */
SECTION_DATA void* g_profile_OBJ_SSITEM[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01210000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000B10,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00450000,
	(void*)&daObj_SSItem_MethodTable,
	(void*)0x00044100,
	(void*)0x000E0000,
};

/* 80CE7FF8-80CE8004 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 80CE8004-80CE8028 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80CE7E9C,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80CE7E94,
};

/* 80CE8028-80CE8034 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80CE8034-80CE8040 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80CE8040-80CE804C 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80CE804C-80CE8058 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80CE8058-80CE8064 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80CE8064-80CE8078 0014+00 s=2 e=0 z=0  None .data      __vt__14daObj_SSItem_c                                       */
SECTION_DATA void* __vt__14daObj_SSItem_c[5] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14daObj_SSItem_cFv,
	(void*)setSoldOut__14daObj_SSItem_cFv,
	(void*)getProcessID__14daObj_SSItem_cFv,
};

/* 80CE6C18-80CE6E68 0250+00 s=1 e=0 z=0  None .text      __dt__14daObj_SSItem_cFv                                     */
//	80CE6C38: 80CE8064 (__vt__14daObj_SSItem_c)
//	80CE6C3C: 80CE8064 (__vt__14daObj_SSItem_c)
//	80CE6C44: 80CE7838 (getResName__14daObj_SSItem_cFv)
//	80CE6C50: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80CE6C5C: 80249F48 (__dt__10dMsgFlow_cFv)
//	80CE6C68: 80267C94 (__dt__11cBgS_GndChkFv)
//	80CE6C74: 803AC050 (__vt__8dCcD_Cyl)
//	80CE6C78: 803AC050 (__vt__8dCcD_Cyl)
//	80CE6C98: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CE6C9C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CE6CB4: 80CE8058 (__vt__8cM3dGCyl)
//	80CE6CB8: 80CE8058 (__vt__8cM3dGCyl)
//	80CE6CC8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CE6CCC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CE6CDC: 80CE804C (__vt__8cM3dGAab)
//	80CE6CE0: 80CE804C (__vt__8cM3dGAab)
//	80CE6CF0: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80CE6CFC: 803AC050 (__vt__8dCcD_Cyl)
//	80CE6D00: 803AC050 (__vt__8dCcD_Cyl)
//	80CE6D20: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CE6D24: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CE6D3C: 80CE8058 (__vt__8cM3dGCyl)
//	80CE6D40: 80CE8058 (__vt__8cM3dGCyl)
//	80CE6D50: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CE6D54: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CE6D64: 80CE804C (__vt__8cM3dGAab)
//	80CE6D68: 80CE804C (__vt__8cM3dGAab)
//	80CE6D78: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80CE6D84: 80CE8040 (__vt__12dBgS_AcchCir)
//	80CE6D88: 80CE8040 (__vt__12dBgS_AcchCir)
//	80CE6D98: 8026EF18 (__dt__8cM3dGCirFv)
//	80CE6DA4: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80CE6DB0: 803AC2E4 (__vt__9dCcD_Stts)
//	80CE6DB4: 803AC2E4 (__vt__9dCcD_Stts)
//	80CE6DCC: 80CE8034 (__vt__10dCcD_GStts)
//	80CE6DD0: 80CE8034 (__vt__10dCcD_GStts)
//	80CE6DE0: 80CE8028 (__vt__10cCcD_GStts)
//	80CE6DE4: 80CE8028 (__vt__10cCcD_GStts)
//	80CE6DF4: 803C3728 (__vt__9cCcD_Stts)
//	80CE6DF8: 803C3728 (__vt__9cCcD_Stts)
//	80CE6E08: 80CE8004 (__vt__12dBgS_ObjAcch)
//	80CE6E0C: 80CE8004 (__vt__12dBgS_ObjAcch)
//	80CE6E2C: 80075F94 (__dt__9dBgS_AcchFv)
//	80CE6E38: 8015E450 (__dt__14daObj_SSBase_cFv)
//	80CE6E48: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_SSItem_c::~daObj_SSItem_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/__dt__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE6E68-80CE70CC 0264+00 s=1 e=0 z=0  None .text      create__14daObj_SSItem_cFv                                   */
//	80CE6E78: 803621D0 (_savegpr_26)
//	80CE6E98: 8015E3F8 (__ct__14daObj_SSBase_cFv)
//	80CE6E9C: 80CE8064 (__vt__14daObj_SSItem_c)
//	80CE6EA0: 80CE8064 (__vt__14daObj_SSItem_c)
//	80CE6EB0: 800760A0 (__ct__9dBgS_AcchFv)
//	80CE6EB4: 80CE8004 (__vt__12dBgS_ObjAcch)
//	80CE6EB8: 80CE8004 (__vt__12dBgS_ObjAcch)
//	80CE6ED4: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80CE6ED8: 803C3728 (__vt__9cCcD_Stts)
//	80CE6EDC: 803C3728 (__vt__9cCcD_Stts)
//	80CE6EE8: 80083760 (__ct__10dCcD_GSttsFv)
//	80CE6EEC: 803AC2E4 (__vt__9dCcD_Stts)
//	80CE6EF0: 803AC2E4 (__vt__9dCcD_Stts)
//	80CE6F04: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80CE6F10: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80CE6F14: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CE6F18: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CE6F20: 80CE804C (__vt__8cM3dGAab)
//	80CE6F24: 80CE804C (__vt__8cM3dGAab)
//	80CE6F2C: 80CE8058 (__vt__8cM3dGCyl)
//	80CE6F30: 80CE8058 (__vt__8cM3dGCyl)
//	80CE6F38: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CE6F3C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CE6F4C: 803AC050 (__vt__8dCcD_Cyl)
//	80CE6F50: 803AC050 (__vt__8dCcD_Cyl)
//	80CE6F70: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80CE6F74: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CE6F78: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CE6F80: 80CE804C (__vt__8cM3dGAab)
//	80CE6F84: 80CE804C (__vt__8cM3dGAab)
//	80CE6F8C: 80CE8058 (__vt__8cM3dGCyl)
//	80CE6F90: 80CE8058 (__vt__8cM3dGCyl)
//	80CE6F98: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CE6F9C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CE6FA8: 803AC050 (__vt__8dCcD_Cyl)
//	80CE6FAC: 803AC050 (__vt__8dCcD_Cyl)
//	80CE6FC0: 80267C1C (__ct__11cBgS_GndChkFv)
//	80CE6FC8: 80249F00 (__ct__10dMsgFlow_cFv)
//	80CE6FDC: 80CE7850 (getTypeFromParam__14daObj_SSItem_cFv)
//	80CE6FE8: 80CE789C (getFlowNodeNum__14daObj_SSItem_cFv)
//	80CE6FF4: 80CE78D4 (getValue__14daObj_SSItem_cFv)
//	80CE7054: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	80CE7068: 80CE7838 (getResName__14daObj_SSItem_cFv)
//	80CE7074: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80CE7088: 80CE7758 (createHeapCallBack__14daObj_SSItem_cFP10fopAc_ac_c)
//	80CE708C: 80CE7758 (createHeapCallBack__14daObj_SSItem_cFP10fopAc_ac_c)
//	80CE7094: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80CE70AC: 80CE7950 (initialize__14daObj_SSItem_cFv)
//	80CE70B8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/create__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE70CC-80CE7114 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80CE70E4: 80CE8058 (__vt__8cM3dGCyl)
//	80CE70E8: 80CE8058 (__vt__8cM3dGCyl)
//	80CE70F8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80CE7114-80CE715C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80CE712C: 80CE804C (__vt__8cM3dGAab)
//	80CE7130: 80CE804C (__vt__8cM3dGAab)
//	80CE7140: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80CE715C-80CE71CC 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80CE717C: 80CE8040 (__vt__12dBgS_AcchCir)
//	80CE7180: 80CE8040 (__vt__12dBgS_AcchCir)
//	80CE7190: 8026EF18 (__dt__8cM3dGCirFv)
//	80CE719C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80CE71AC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80CE71CC-80CE7228 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80CE71E4: 80CE8034 (__vt__10dCcD_GStts)
//	80CE71E8: 80CE8034 (__vt__10dCcD_GStts)
//	80CE71F4: 80CE8028 (__vt__10cCcD_GStts)
//	80CE71F8: 80CE8028 (__vt__10cCcD_GStts)
//	80CE720C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80CE7228-80CE7298 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80CE7248: 80CE8004 (__vt__12dBgS_ObjAcch)
//	80CE724C: 80CE8004 (__vt__12dBgS_ObjAcch)
//	80CE7268: 80075F94 (__dt__9dBgS_AcchFv)
//	80CE7278: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80CE7298-80CE7358 00C0+00 s=1 e=0 z=0  None .text      CreateHeap__14daObj_SSItem_cFv                               */
//	80CE72B8: 80CE7F40 (l_bmdIdxName)
//	80CE72BC: 80CE7F40 (l_bmdIdxName)
//	80CE72CC: 80CE7838 (getResName__14daObj_SSItem_cFv)
//	80CE72D4: 804061C0 (g_dComIfG_gameInfo)
//	80CE72D8: 804061C0 (g_dComIfG_gameInfo)
//	80CE72E8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CE72F0: 80CE7F4C (l_bmdFileName)
//	80CE72F4: 80CE7F4C (l_bmdFileName)
//	80CE72FC: 80CE7838 (getResName__14daObj_SSItem_cFv)
//	80CE7304: 804061C0 (g_dComIfG_gameInfo)
//	80CE7308: 804061C0 (g_dComIfG_gameInfo)
//	80CE7318: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80CE7328: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/CreateHeap__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7358-80CE738C 0034+00 s=1 e=0 z=0  None .text      Delete__14daObj_SSItem_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/Delete__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE738C-80CE7610 0284+00 s=2 e=0 z=0  None .text      Execute__14daObj_SSItem_cFv                                  */
//	80CE739C: 803621DC (_savegpr_29)
//	80CE73A4: 80CE7EB0 (mCcDObjInfo__14daObj_SSItem_c)
//	80CE73A8: 80CE7EB0 (mCcDObjInfo__14daObj_SSItem_c)
//	80CE73CC: 80CE7BB4 (setParam__14daObj_SSItem_cFv)
//	80CE7410: 80083830 (Move__10dCcD_GSttsFv)
//	80CE7418: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	80CE7458: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	80CE7460: 804061C0 (g_dComIfG_gameInfo)
//	80CE7464: 804061C0 (g_dComIfG_gameInfo)
//	80CE746C: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80CE74FC: 80CE7C24 (setEnvTevColor__14daObj_SSItem_cFv)
//	80CE7504: 80CE7C80 (setRoomNo__14daObj_SSItem_cFv)
//	80CE750C: 80362018 (__ptmf_test)
//	80CE7524: 80362084 (__ptmf_scall)
//	80CE7530: 80CE7CC4 (setMtx__14daObj_SSItem_cFv)
//	80CE7564: 8026F200 (SetR__8cM3dGCylFf)
//	80CE7570: 8026F1F8 (SetH__8cM3dGCylFf)
//	80CE7594: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80CE7598: 804061C0 (g_dComIfG_gameInfo)
//	80CE759C: 804061C0 (g_dComIfG_gameInfo)
//	80CE75AC: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80CE75C4: 8026F200 (SetR__8cM3dGCylFf)
//	80CE75D0: 8026F1F8 (SetH__8cM3dGCylFf)
//	80CE75DC: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80CE75E8: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80CE75F0: 80CE7D28 (setAttnPos__14daObj_SSItem_cFv)
//	80CE75FC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::Execute() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/Execute__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7610-80CE7710 0100+00 s=1 e=0 z=0  None .text      Draw__14daObj_SSItem_cFv                                     */
//	80CE7628: 80CE7EB0 (mCcDObjInfo__14daObj_SSItem_c)
//	80CE762C: 80CE7EB0 (mCcDObjInfo__14daObj_SSItem_c)
//	80CE7644: 8042CA54 (g_env_light)
//	80CE7648: 8042CA54 (g_env_light)
//	80CE7658: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80CE765C: 8042CA54 (g_env_light)
//	80CE7660: 8042CA54 (g_env_light)
//	80CE7670: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80CE7678: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80CE768C: 80CE7FF8 (__vt__8cM3dGPla)
//	80CE7690: 80CE7FF8 (__vt__8cM3dGPla)
//	80CE7698: 804061C0 (g_dComIfG_gameInfo)
//	80CE769C: 804061C0 (g_dComIfG_gameInfo)
//	80CE76AC: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80CE76B8: 804061C0 (g_dComIfG_gameInfo)
//	80CE76BC: 804061C0 (g_dComIfG_gameInfo)
//	80CE76DC: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80CE76E0: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80CE76E4: 80055F84 (setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj)
//	80CE76E8: 80CE7FF8 (__vt__8cM3dGPla)
//	80CE76EC: 80CE7FF8 (__vt__8cM3dGPla)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/Draw__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7710-80CE7758 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	80CE7728: 80CE7FF8 (__vt__8cM3dGPla)
//	80CE772C: 80CE7FF8 (__vt__8cM3dGPla)
//	80CE773C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 80CE7758-80CE7778 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__14daObj_SSItem_cFP10fopAc_ac_c           */
//	80CE7764: 80CE7298 (CreateHeap__14daObj_SSItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daObj_SSItem_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/createHeapCallBack__14daObj_SSItem_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80CE7778-80CE77CC 0054+00 s=1 e=0 z=0  None .text      setSoldOut__14daObj_SSItem_cFv                               */
//	80CE77B8: 809487EC (soldoutItem__8daMyna_cFUi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::setSoldOut() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/setSoldOut__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE77CC-80CE77F8 002C+00 s=1 e=0 z=0  None .text      getProcessID__14daObj_SSItem_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::getProcessID() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/getProcessID__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE77F8-80CE7838 0040+00 s=0 e=0 z=1  None .text      getExchangeItemPtr__14daObj_SSItem_cFv                       */
//	80CE7818: 80023590 (fpcSch_JudgeByID__FPvPv)
//	80CE781C: 80023590 (fpcSch_JudgeByID__FPvPv)
//	80CE7824: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void daObj_SSItem_c::getExchangeItemPtr() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/getExchangeItemPtr__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7838-80CE7850 0018+00 s=4 e=0 z=0  None .text      getResName__14daObj_SSItem_cFv                               */
//	80CE7840: 80CE7F34 (l_resFileName)
//	80CE7844: 80CE7F34 (l_resFileName)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::getResName() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/getResName__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7850-80CE789C 004C+00 s=1 e=0 z=0  None .text      getTypeFromParam__14daObj_SSItem_cFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::getTypeFromParam() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/getTypeFromParam__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE789C-80CE78D4 0038+00 s=1 e=0 z=0  None .text      getFlowNodeNum__14daObj_SSItem_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::getFlowNodeNum() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/getFlowNodeNum__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE78D4-80CE78E0 000C+00 s=1 e=0 z=0  None .text      getValue__14daObj_SSItem_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::getValue() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/getValue__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE78E0-80CE7950 0070+00 s=1 e=0 z=0  None .text      restart__14daObj_SSItem_cFv                                  */
//	80CE7918: 80CE7F9C (lit_4309)
//	80CE791C: 80CE7F9C (lit_4309)
//	80CE793C: 80CE7B04 (setProcess__14daObj_SSItem_cFM14daObj_SSItem_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::restart() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/restart__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7950-80CE7B04 01B4+00 s=1 e=0 z=0  None .text      initialize__14daObj_SSItem_cFv                               */
//	80CE7968: 80CE7EB0 (mCcDObjInfo__14daObj_SSItem_c)
//	80CE796C: 80CE7EB0 (mCcDObjInfo__14daObj_SSItem_c)
//	80CE7994: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80CE799C: 80CE7838 (getResName__14daObj_SSItem_cFv)
//	80CE79CC: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80CE79F8: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80CE7A0C: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80CE7A14: 80CE7F58 (mCcDCyl__14daObj_SSItem_c)
//	80CE7A18: 80CE7F58 (mCcDCyl__14daObj_SSItem_c)
//	80CE7A1C: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80CE7A2C: 80CE7F58 (mCcDCyl__14daObj_SSItem_c)
//	80CE7A30: 80CE7F58 (mCcDCyl__14daObj_SSItem_c)
//	80CE7A34: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80CE7A44: 804061C0 (g_dComIfG_gameInfo)
//	80CE7A48: 804061C0 (g_dComIfG_gameInfo)
//	80CE7A50: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80CE7AD0: 80CE7C24 (setEnvTevColor__14daObj_SSItem_cFv)
//	80CE7AD8: 80CE7C80 (setRoomNo__14daObj_SSItem_cFv)
//	80CE7AE0: 80CE78E0 (restart__14daObj_SSItem_cFv)
//	80CE7AE8: 80CE738C (Execute__14daObj_SSItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::initialize() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/initialize__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7B04-80CE7BB4 00B0+00 s=1 e=0 z=0  None .text      setProcess__14daObj_SSItem_cFM14daObj_SSItem_cFPCvPvPv_i     */
//	80CE7B2C: 80362018 (__ptmf_test)
//	80CE7B44: 80362084 (__ptmf_scall)
//	80CE7B70: 80362018 (__ptmf_test)
//	80CE7B88: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daObj_SSItem_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daObj_SSItem_c False
asm void daObj_SSItem_c::setProcess(int (daObj_SSItem_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/setProcess__14daObj_SSItem_cFM14daObj_SSItem_cFPCvPvPv_i.s"
}
#pragma pop


/* 80CE7BB4-80CE7C24 0070+00 s=1 e=0 z=0  None .text      setParam__14daObj_SSItem_cFv                                 */
//	80CE7BCC: 80CE7EB0 (mCcDObjInfo__14daObj_SSItem_c)
//	80CE7BD0: 80CE7EB0 (mCcDObjInfo__14daObj_SSItem_c)
//	80CE7BF8: 80075F40 (SetWallR__12dBgS_AcchCirFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::setParam() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/setParam__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7C24-80CE7C80 005C+00 s=2 e=0 z=0  None .text      setEnvTevColor__14daObj_SSItem_cFv                           */
//	80CE7C3C: 804061C0 (g_dComIfG_gameInfo)
//	80CE7C40: 804061C0 (g_dComIfG_gameInfo)
//	80CE7C50: 80074BE8 (GetPolyColor__4dBgSFRC13cBgS_PolyInfo)
//	80CE7C60: 80075100 (GetRoomId__4dBgSFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::setEnvTevColor() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/setEnvTevColor__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7C80-80CE7CC4 0044+00 s=2 e=0 z=0  None .text      setRoomNo__14daObj_SSItem_cFv                                */
//	80CE7C94: 804061C0 (g_dComIfG_gameInfo)
//	80CE7C98: 804061C0 (g_dComIfG_gameInfo)
//	80CE7CA4: 80075100 (GetRoomId__4dBgSFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::setRoomNo() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/setRoomNo__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7CC4-80CE7D28 0064+00 s=1 e=0 z=0  None .text      setMtx__14daObj_SSItem_cFv                                   */
//	80CE7CD8: 803DD470 (now__14mDoMtx_stack_c)
//	80CE7CDC: 803DD470 (now__14mDoMtx_stack_c)
//	80CE7CEC: 803468E8 (PSMTXTrans)
//	80CE7CF4: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80CE7CFC: 8000CE70 (scaleM__14mDoMtx_stack_cFRC4cXyz)
//	80CE7D00: 803DD470 (now__14mDoMtx_stack_c)
//	80CE7D04: 803DD470 (now__14mDoMtx_stack_c)
//	80CE7D10: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::setMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/setMtx__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7D28-80CE7D5C 0034+00 s=1 e=0 z=0  None .text      setAttnPos__14daObj_SSItem_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObj_SSItem_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/setAttnPos__14daObj_SSItem_cFv.s"
}
#pragma pop


/* 80CE7D5C-80CE7D8C 0030+00 s=1 e=0 z=0  None .text      wait__14daObj_SSItem_cFPv                                    */
//	80CE7D70: 80CE7EE0 (lit_4205)
//	80CE7D74: 80CE7EE0 (lit_4205)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daObj_SSItem_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/wait__14daObj_SSItem_cFPv.s"
}
#pragma pop


/* 80CE7D8C-80CE7DAC 0020+00 s=1 e=0 z=0  None .text      daObj_SSItem_Create__FPv                                     */
//	80CE7D98: 80CE6E68 (create__14daObj_SSItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daObj_SSItem_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/daObj_SSItem_Create__FPv.s"
}
#pragma pop


/* 80CE7DAC-80CE7DCC 0020+00 s=1 e=0 z=0  None .text      daObj_SSItem_Delete__FPv                                     */
//	80CE7DB8: 80CE7358 (Delete__14daObj_SSItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daObj_SSItem_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/daObj_SSItem_Delete__FPv.s"
}
#pragma pop


/* 80CE7DCC-80CE7DEC 0020+00 s=1 e=0 z=0  None .text      daObj_SSItem_Execute__FPv                                    */
//	80CE7DD8: 80CE738C (Execute__14daObj_SSItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daObj_SSItem_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/daObj_SSItem_Execute__FPv.s"
}
#pragma pop


/* 80CE7DEC-80CE7E0C 0020+00 s=1 e=0 z=0  None .text      daObj_SSItem_Draw__FPv                                       */
//	80CE7DF8: 80CE7610 (Draw__14daObj_SSItem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daObj_SSItem_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/daObj_SSItem_Draw__FPv.s"
}
#pragma pop


/* 80CE7E0C-80CE7E14 0008+00 s=1 e=0 z=0  None .text      daObj_SSItem_IsDelete__FPv                                   */
// True False
//  bool False
//  void* False
// 	 void False
static bool daObj_SSItem_IsDelete(void* param_0) {
	return true;
}


/* 80CE7E14-80CE7E5C 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80CE7E2C: 80CE8028 (__vt__10cCcD_GStts)
//	80CE7E30: 80CE8028 (__vt__10cCcD_GStts)
//	80CE7E40: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80CE7E5C-80CE7E94 0038+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_ss_item_cpp                                  */
//	80CE7E5C: 80CE7F58 (mCcDCyl__14daObj_SSItem_c)
//	80CE7E60: 80CE7F58 (mCcDCyl__14daObj_SSItem_c)
//	80CE7E68: 80CE7EB0 (mCcDObjInfo__14daObj_SSItem_c)
//	80CE7E6C: 80CE7EB0 (mCcDObjInfo__14daObj_SSItem_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_ss_item_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/__sinit_d_a_obj_ss_item_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80CE7E5C = (void*)__sinit_d_a_obj_ss_item_cpp;
#pragma pop


/* 80CE7E94-80CE7E9C 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80CE7E98: 80CE7228 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80CE7E94() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/func_80CE7E94.s"
}
#pragma pop


/* 80CE7E9C-80CE7EA4 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80CE7EA0: 80CE7228 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80CE7E9C() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_ss_item/d_a_obj_ss_item/func_80CE7E9C.s"
}
#pragma pop


