// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_kag
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_kag/d_a_obj_kag.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CF0C */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotS(csXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct J3DAnmTextureSRTKey {
};

struct J3DMaterialTable {
};

struct mDoExt_btkAnm {
	/* 8000D63C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTevRegKey {
};

struct mDoExt_brkAnm {
	/* 8000D70C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
};

struct daPy_boomerangMove_c {
	/* 8015E5B0 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void initOffset(cXyz const*);
	/* 8015E654 */ // False False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
void posMove(cXyz*, s16*, fopAc_ac_c*, s16);
	/* 8015E87C */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void bgCheckAfterOffset(cXyz const*);
};

struct daObj_KagHIO_c {
	/* 80C2E40C */ // True False
daObj_KagHIO_c();
	/* 80C31060 */ // True False
~daObj_KagHIO_c();
};

struct daObjKAG_c {
	/* 80C2E434 */ // True False
//  void (daObjKAG_c::*)() False
// 	 * False
// 		  False
// 	 void False
// 	 daObjKAG_c False
void setAction(void (daObjKAG_c::*)());
	/* 80C2E7A0 */ // True False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  cXyz* False
// 	 cXyz False
void Kag_Bgcheck(cXyz*, csXyz*, cXyz*);
	/* 80C2EA40 */ // True False
void fly();
	/* 80C2F764 */ // True False
void wait();
	/* 80C2F8C4 */ // True False
void walk();
	/* 80C2FD94 */ // True False
void bin_wait();
	/* 80C2FF10 */ // True False
void bin_action();
	/* 80C30070 */ // True False
void hook();
	/* 80C30274 */ // True False
void boomerang();
	/* 80C303C4 */ // True False
void action();
	/* 80C30424 */ // True False
void checkGroundPos();
	/* 80C30498 */ // True False
void hit_check();
	/* 80C3054C */ // True False
void execute();
	/* 80C306EC */ // True False
void _delete();
	/* 80C30754 */ // True False
void setBaseMtx();
	/* 80C308F0 */ // True False
void create();
	/* 80C30E54 */ // True False
void kag_setParticle();
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dMenu_Insect_c {
	/* 801D9F3C */ // False False
//  u8 False
void isCatchNotGiveInsect(u8);
};

struct dInsect_c {
	/* 8015E010 */ // False False
dInsect_c();
	/* 8015E078 */ // False False
void Insect_GetDemoMain();
	/* 8015E26C */ // False False
//  f32 False
void CalcZBuffer(f32);
	/* 80C310E4 */ // True False
void Insect_Release();
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 80C30DF0 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084548 */ // False False
void GetTgHitGObj();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80C30D60 */ // True False
~cM3dGSph();
};

struct cM3dGPla {
	/* 80C2E9F8 */ // True False
~cM3dGPla();
};

struct cM3dGAab {
	/* 80C30DA8 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80C310F0 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
};

struct cBgS_LinChk {
};

struct cBgS_GndChk {
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct _GXTexObj {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80C2E714 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjKAG_Create(fopAc_ac_c*);
// True False
//  daObjKAG_c* False
// 	 daObjKAG_c False
static void daObjKAG_Delete(daObjKAG_c*);
// True False
//  daObjKAG_c* False
// 	 daObjKAG_c False
static void daObjKAG_Draw(daObjKAG_c*);
// True False
//  daObjKAG_c* False
// 	 daObjKAG_c False
static void daObjKAG_Execute(daObjKAG_c*);
// True False
//  bool False
//  daObjKAG_c* False
// 	 daObjKAG_c False
static bool daObjKAG_IsDelete(daObjKAG_c*);

// True False
extern "C" void __ct__14daObj_KagHIO_cFv();
// True False
//  void (daObjKAG_c::*)() False
// 	 * False
// 		  False
// 	 void False
// 	 daObjKAG_c False
extern "C" void setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjKAG_Create__FP10fopAc_ac_c();
// True False
//  daObjKAG_c* False
// 	 daObjKAG_c False
extern "C" static void daObjKAG_Delete__FP10daObjKAG_c();
// True False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void Kag_Bgcheck__10daObjKAG_cFP4cXyzP5csXyzP4cXyz();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
extern "C" void fly__10daObjKAG_cFv();
// True False
extern "C" void wait__10daObjKAG_cFv();
// True False
extern "C" void walk__10daObjKAG_cFv();
// True False
extern "C" void bin_wait__10daObjKAG_cFv();
// True False
extern "C" void bin_action__10daObjKAG_cFv();
// True False
extern "C" void hook__10daObjKAG_cFv();
// True False
extern "C" void boomerang__10daObjKAG_cFv();
// True False
extern "C" void action__10daObjKAG_cFv();
// True False
extern "C" void checkGroundPos__10daObjKAG_cFv();
// True False
extern "C" void hit_check__10daObjKAG_cFv();
// True False
extern "C" void execute__10daObjKAG_cFv();
// True False
extern "C" void _delete__10daObjKAG_cFv();
// True False
extern "C" void setBaseMtx__10daObjKAG_cFv();
// True False
//  daObjKAG_c* False
// 	 daObjKAG_c False
extern "C" static void daObjKAG_Draw__FP10daObjKAG_c();
// True False
//  daObjKAG_c* False
// 	 daObjKAG_c False
extern "C" static void daObjKAG_Execute__FP10daObjKAG_c();
// True False
extern "C" void create__10daObjKAG_cFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
//  bool False
//  daObjKAG_c* False
// 	 daObjKAG_c False
extern "C" static bool daObjKAG_IsDelete__FP10daObjKAG_c();
// True False
extern "C" void kag_setParticle__10daObjKAG_cFv();
// True False
extern "C" void __dt__14daObj_KagHIO_cFv();
// False False
extern "C" void __sinit_d_a_obj_kag_cpp();
// True False
extern "C" void Insect_Release__9dInsect_cFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
extern "C" extern u8 const l_kag_brk_index[8];
extern "C" extern u8 const l_kag_btk_index[8];
extern "C" extern u8 const lit_3946[8];
extern "C" extern u8 const lit_3947[8];
extern "C" extern u8 const lit_3948[8];
extern "C" extern u32 const lit_4290;
extern "C" extern u32 const lit_4291;
extern "C" extern u32 const lit_4292;
extern "C" extern u32 const lit_4293;
extern "C" extern u32 const lit_4294;
extern "C" extern u32 const lit_4295;
extern "C" extern u32 const lit_4296;
extern "C" extern u32 const lit_4297;
extern "C" extern u32 const lit_4298;
extern "C" extern u32 const lit_4299;
extern "C" extern u32 const lit_4300;
extern "C" extern u32 const lit_4301;
extern "C" extern u32 const lit_4302;
extern "C" extern u32 const lit_4303;
extern "C" extern u32 const lit_4304;
extern "C" extern u32 const lit_4305;
extern "C" extern u32 const lit_4306;
extern "C" extern u32 const lit_4307;
extern "C" extern u32 const lit_4308;
extern "C" extern u32 const lit_4309;
extern "C" extern u32 const lit_4310;
extern "C" extern u32 const lit_4311;
extern "C" extern u32 const lit_4312;
extern "C" extern u32 const lit_4313;
extern "C" extern u32 const lit_4314;
extern "C" extern u32 const lit_4315;
extern "C" extern u32 const lit_4316[1 + 1 /* padding */];
extern "C" extern u8 const lit_4323[8];
extern "C" extern u32 const lit_4353;
extern "C" extern u32 const lit_4354;
extern "C" extern u32 const lit_4459;
extern "C" extern u32 const lit_4522;
extern "C" extern u32 const lit_4523;
extern "C" extern u32 const lit_4524;
extern "C" extern u32 const lit_4525;
extern "C" extern u32 const lit_4526[1 + 1 /* padding */];
extern "C" extern u8 const lit_4527[8];
extern "C" extern u32 const lit_4588;
extern "C" extern u16 const l_kag_itemno[1 + 1 /* padding */];
extern "C" extern u32 const lit_4785;
extern "C" extern u32 const lit_4786;
extern "C" extern u32 const lit_4787;
extern "C" extern u32 const l_musiya_num;
extern "C" extern u32 const lit_4994;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_80C31290[64];
extern "C" extern void* lit_4898[3];
extern "C" extern void* lit_4901[3];
extern "C" extern void* g_profile_Obj_Kag[12];
extern "C" extern void* __vt__9dInsect_c[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__10daObjKAG_c[3];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__14daObj_KagHIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
void fopAcM_setEffectMtx(fopAc_ac_c const*, J3DModelData const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setSimpleShadow(cXyz*, f32, f32, cBgS_PolyInfo&, s16, f32, _GXTexObj*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseAngleS(s16*, s16, s16);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotS__14mDoMtx_stack_cFRC5csXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
extern "C" void fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitGObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
extern "C" void __ct__9dInsect_cFv();
// False False
extern "C" void Insect_GetDemoMain__9dInsect_cFv();
// False False
//  f32 False
extern "C" void CalcZBuffer__9dInsect_cFf();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void initOffset__20daPy_boomerangMove_cFPC4cXyz();
// False False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
extern "C" void posMove__20daPy_boomerangMove_cFP4cXyzPsP10fopAc_ac_cs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  u8 False
extern "C" void isCatchNotGiveInsect__14dMenu_Insect_cFUc();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseAngleS__FPsss();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void __cvt_fp2unsigned();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80C3114C-80C31150 0004+00 s=11 e=0 z=0  None .rodata    @3774                                                        */
SECTION_RODATA static u32 const lit_3774 = 0x3F4CCCCD;

/* 80C31270-80C3127C 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C3127C-80C31290 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80C31290-80C312D0 0040+00 s=0 e=0 z=0  None .data      cc_sph_src__25@unnamed@d_a_obj_kag_cpp@                      */
SECTION_DATA u8 data_80C31290[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x40, 0x40, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
};

/* 80C312D0-80C312DC 000C+00 s=1 e=0 z=0  None .data      @3980                                                        */
SECTION_DATA static void* lit_3980[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__10daObjKAG_cFv,
};

/* 80C312DC-80C312E8 000C+00 s=1 e=0 z=0  None .data      @4341                                                        */
SECTION_DATA static void* lit_4341[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fly__10daObjKAG_cFv,
};

/* 80C312E8-80C312F4 000C+00 s=1 e=0 z=0  None .data      @4344                                                        */
SECTION_DATA static void* lit_4344[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)walk__10daObjKAG_cFv,
};

/* 80C312F4-80C31300 000C+00 s=1 e=0 z=0  None .data      @4377                                                        */
SECTION_DATA static void* lit_4377[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fly__10daObjKAG_cFv,
};

/* 80C31300-80C3130C 000C+00 s=1 e=0 z=0  None .data      @4380                                                        */
SECTION_DATA static void* lit_4380[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__10daObjKAG_cFv,
};

/* 80C3130C-80C31318 000C+00 s=1 e=0 z=0  None .data      @4476                                                        */
SECTION_DATA static void* lit_4476[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fly__10daObjKAG_cFv,
};

/* 80C31318-80C31324 000C+00 s=1 e=0 z=0  None .data      @4479                                                        */
SECTION_DATA static void* lit_4479[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)bin_action__10daObjKAG_cFv,
};

/* 80C31324-80C31330 000C+00 s=1 e=0 z=0  None .data      @4541                                                        */
SECTION_DATA static void* lit_4541[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fly__10daObjKAG_cFv,
};

/* 80C31330-80C3133C 000C+00 s=1 e=0 z=0  None .data      @4603                                                        */
SECTION_DATA static void* lit_4603[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fly__10daObjKAG_cFv,
};

/* 80C3133C-80C31348 000C+00 s=1 e=0 z=0  None .data      @4662                                                        */
SECTION_DATA static void* lit_4662[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)hook__10daObjKAG_cFv,
};

/* 80C31348-80C31354 000C+00 s=1 e=0 z=0  None .data      @4665                                                        */
SECTION_DATA static void* lit_4665[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)boomerang__10daObjKAG_cFv,
};

/* 80C31354-80C31360 000C+00 s=0 e=0 z=0  None .data      @4898                                                        */
SECTION_DATA void* lit_4898[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)bin_wait__10daObjKAG_cFv,
};

/* 80C31360-80C3136C 000C+00 s=0 e=0 z=0  None .data      @4901                                                        */
SECTION_DATA void* lit_4901[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fly__10daObjKAG_cFv,
};

/* 80C3136C-80C3138C 0020+00 s=1 e=0 z=0  None .data      l_daObjKAG_Method                                            */
SECTION_DATA static void* l_daObjKAG_Method[8] = {
	(void*)daObjKAG_Create__FP10fopAc_ac_c,
	(void*)daObjKAG_Delete__FP10daObjKAG_c,
	(void*)daObjKAG_Execute__FP10daObjKAG_c,
	(void*)daObjKAG_IsDelete__FP10daObjKAG_c,
	(void*)daObjKAG_Draw__FP10daObjKAG_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80C3138C-80C313BC 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Kag                                            */
SECTION_DATA void* g_profile_Obj_Kag[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01480000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000860,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01E50000,
	(void*)&l_daObjKAG_Method,
	(void*)0x000C0100,
	(void*)0x030E0000,
};

/* 80C313BC-80C313C8 000C+00 s=0 e=0 z=0  None .data      __vt__9dInsect_c                                             */
SECTION_DATA void* __vt__9dInsect_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)Insect_Release__9dInsect_cFv,
};

/* 80C313C8-80C313D4 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80C313D4-80C313E0 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80C313E0-80C313EC 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80C313EC-80C313F8 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80C313F8-80C31404 000C+00 s=1 e=0 z=0  None .data      __vt__10daObjKAG_c                                           */
SECTION_DATA void* __vt__10daObjKAG_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)Insect_Release__9dInsect_cFv,
};

/* 80C31404-80C31410 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 80C31410-80C3141C 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80C3141C-80C31428 000C+00 s=2 e=0 z=0  None .data      __vt__14daObj_KagHIO_c                                       */
SECTION_DATA void* __vt__14daObj_KagHIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14daObj_KagHIO_cFv,
};

/* 80C2E40C-80C2E434 0028+00 s=1 e=0 z=0  None .text      __ct__14daObj_KagHIO_cFv                                     */
//	80C2E40C: 80C3141C (__vt__14daObj_KagHIO_c)
//	80C2E410: 80C3141C (__vt__14daObj_KagHIO_c)
//	80C2E420: 80C3114C (lit_3774)
//	80C2E424: 80C3114C (lit_3774)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_KagHIO_c::daObj_KagHIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/__ct__14daObj_KagHIO_cFv.s"
}
#pragma pop


/* 80C2E434-80C2E4D8 00A4+00 s=8 e=0 z=0  None .text      setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v                */
//	80C2E454: 80362018 (__ptmf_test)
//	80C2E470: 80362084 (__ptmf_scall)
//	80C2E4B8: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void (daObjKAG_c::*)() False
// 	 * False
// 		  False
// 	 void False
// 	 daObjKAG_c False
asm void daObjKAG_c::setAction(void (daObjKAG_c::*)()) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C31150-80C31158 0008+00 s=0 e=0 z=0  None .rodata    l_kag_brk_index                                              */
SECTION_RODATA u8 const l_kag_brk_index[8] = {
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x0D,
};

/* 80C31158-80C31160 0008+00 s=0 e=0 z=0  None .rodata    l_kag_btk_index                                              */
SECTION_RODATA u8 const l_kag_btk_index[8] = {
	0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x11,
};

/* 80C31160-80C31164 0004+00 s=1 e=0 z=0  None .rodata    @3867                                                        */
SECTION_RODATA static u32 const lit_3867 = 0x3F800000;

/* 80C31164-80C3116C 0004+04 s=1 e=0 z=0  None .rodata    @3945                                                        */
SECTION_RODATA static u8 const lit_3945[4 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 80C3116C-80C31174 0008+00 s=0 e=0 z=0  None .rodata    @3946                                                        */
SECTION_RODATA u8 const lit_3946[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C31174-80C3117C 0008+00 s=0 e=0 z=0  None .rodata    @3947                                                        */
SECTION_RODATA u8 const lit_3947[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C3117C-80C31184 0008+00 s=0 e=0 z=0  None .rodata    @3948                                                        */
SECTION_RODATA u8 const lit_3948[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C31184-80C31188 0004+00 s=0 e=0 z=0  None .rodata    @4290                                                        */
SECTION_RODATA u32 const lit_4290 = 0x40A00000;

/* 80C31188-80C3118C 0004+00 s=0 e=0 z=0  None .rodata    @4291                                                        */
SECTION_RODATA u32 const lit_4291 = 0x3F000000;

/* 80C3118C-80C31190 0004+00 s=0 e=0 z=0  None .rodata    @4292                                                        */
SECTION_RODATA u32 const lit_4292 = 0xBF800000;

/* 80C31190-80C31194 0004+00 s=0 e=0 z=0  None .rodata    @4293                                                        */
SECTION_RODATA u32 const lit_4293 = 0x41900000;

/* 80C31194-80C31198 0004+00 s=0 e=0 z=0  None .rodata    @4294                                                        */
SECTION_RODATA u32 const lit_4294 = 0x41F00000;

/* 80C31198-80C3119C 0004+00 s=0 e=0 z=0  None .rodata    @4295                                                        */
SECTION_RODATA u32 const lit_4295 = 0x47000000;

/* 80C3119C-80C311A0 0004+00 s=0 e=0 z=0  None .rodata    @4296                                                        */
SECTION_RODATA u32 const lit_4296 = 0x44000000;

/* 80C311A0-80C311A4 0004+00 s=0 e=0 z=0  None .rodata    @4297                                                        */
SECTION_RODATA u32 const lit_4297 = 0x46400000;

/* 80C311A4-80C311A8 0004+00 s=0 e=0 z=0  None .rodata    @4298                                                        */
SECTION_RODATA u32 const lit_4298 = 0x3FE66666;

/* 80C311A8-80C311AC 0004+00 s=0 e=0 z=0  None .rodata    @4299                                                        */
SECTION_RODATA u32 const lit_4299 = 0x41200000;

/* 80C311AC-80C311B0 0004+00 s=0 e=0 z=0  None .rodata    @4300                                                        */
SECTION_RODATA u32 const lit_4300 = 0x40C00000;

/* 80C311B0-80C311B4 0004+00 s=0 e=0 z=0  None .rodata    @4301                                                        */
SECTION_RODATA u32 const lit_4301 = 0x40000000;

/* 80C311B4-80C311B8 0004+00 s=0 e=0 z=0  None .rodata    @4302                                                        */
SECTION_RODATA u32 const lit_4302 = 0x44E10000;

/* 80C311B8-80C311BC 0004+00 s=0 e=0 z=0  None .rodata    @4303                                                        */
SECTION_RODATA u32 const lit_4303 = 0x46000000;

/* 80C311BC-80C311C0 0004+00 s=0 e=0 z=0  None .rodata    @4304                                                        */
SECTION_RODATA u32 const lit_4304 = 0x43480000;

/* 80C311C0-80C311C4 0004+00 s=0 e=0 z=0  None .rodata    @4305                                                        */
SECTION_RODATA u32 const lit_4305 = 0x40800000;

/* 80C311C4-80C311C8 0004+00 s=0 e=0 z=0  None .rodata    @4306                                                        */
SECTION_RODATA u32 const lit_4306 = 0x44480000;

/* 80C311C8-80C311CC 0004+00 s=0 e=0 z=0  None .rodata    @4307                                                        */
SECTION_RODATA u32 const lit_4307 = 0x44960000;

/* 80C311CC-80C311D0 0004+00 s=0 e=0 z=0  None .rodata    @4308                                                        */
SECTION_RODATA u32 const lit_4308 = 0x43960000;

/* 80C311D0-80C311D4 0004+00 s=0 e=0 z=0  None .rodata    @4309                                                        */
SECTION_RODATA u32 const lit_4309 = 0x45800000;

/* 80C311D4-80C311D8 0004+00 s=0 e=0 z=0  None .rodata    @4310                                                        */
SECTION_RODATA u32 const lit_4310 = 0x42A00000;

/* 80C311D8-80C311DC 0004+00 s=0 e=0 z=0  None .rodata    @4311                                                        */
SECTION_RODATA u32 const lit_4311 = 0xC5800000;

/* 80C311DC-80C311E0 0004+00 s=0 e=0 z=0  None .rodata    @4312                                                        */
SECTION_RODATA u32 const lit_4312 = 0x43800000;

/* 80C311E0-80C311E4 0004+00 s=0 e=0 z=0  None .rodata    @4313                                                        */
SECTION_RODATA u32 const lit_4313 = 0x43C80000;

/* 80C311E4-80C311E8 0004+00 s=0 e=0 z=0  None .rodata    @4314                                                        */
SECTION_RODATA u32 const lit_4314 = 0x3DCCCCCD;

/* 80C311E8-80C311EC 0004+00 s=0 e=0 z=0  None .rodata    @4315                                                        */
SECTION_RODATA u32 const lit_4315 = 0x41000000;

/* 80C311EC-80C311F4 0004+04 s=0 e=0 z=0  None .rodata    @4316                                                        */
SECTION_RODATA u32 const lit_4316[1 + 1 /* padding */] = {
	0x3E4CCCCD,
	/* padding */
	0x00000000,
};

/* 80C311F4-80C311FC 0008+00 s=0 e=0 z=0  None .rodata    @4323                                                        */
SECTION_RODATA u8 const lit_4323[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80C311FC-80C31200 0004+00 s=0 e=0 z=0  None .rodata    @4353                                                        */
SECTION_RODATA u32 const lit_4353 = 0x435C0000;

/* 80C31200-80C31204 0004+00 s=0 e=0 z=0  None .rodata    @4354                                                        */
SECTION_RODATA u32 const lit_4354 = 0x40400000;

/* 80C31204-80C31208 0004+00 s=0 e=0 z=0  None .rodata    @4459                                                        */
SECTION_RODATA u32 const lit_4459 = 0xC1A00000;

/* 80C31208-80C3120C 0004+00 s=1 e=0 z=0  None .rodata    @4460                                                        */
SECTION_RODATA static u32 const lit_4460 = 0x41A00000;

/* 80C3120C-80C31210 0004+00 s=0 e=0 z=0  None .rodata    @4522                                                        */
SECTION_RODATA u32 const lit_4522 = 0xC0000000;

/* 80C31210-80C31214 0004+00 s=0 e=0 z=0  None .rodata    @4523                                                        */
SECTION_RODATA u32 const lit_4523 = 0x3ECCCCCD;

/* 80C31214-80C31218 0004+00 s=0 e=0 z=0  None .rodata    @4524                                                        */
SECTION_RODATA u32 const lit_4524 = 0x3F19999A;

/* 80C31218-80C3121C 0004+00 s=0 e=0 z=0  None .rodata    @4525                                                        */
SECTION_RODATA u32 const lit_4525 = 0x42780000;

/* 80C3121C-80C31224 0004+04 s=0 e=0 z=0  None .rodata    @4526                                                        */
SECTION_RODATA u32 const lit_4526[1 + 1 /* padding */] = {
	0x3D4CCCCD,
	/* padding */
	0x00000000,
};

/* 80C31224-80C3122C 0008+00 s=0 e=0 z=0  None .rodata    @4527                                                        */
SECTION_RODATA u8 const lit_4527[8] = {
	0x3F, 0xB9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x9A,
};

/* 80C3122C-80C31230 0004+00 s=0 e=0 z=0  None .rodata    @4588                                                        */
SECTION_RODATA u32 const lit_4588 = 0xC1200000;

/* 80C31230-80C31234 0004+00 s=1 e=0 z=0  None .rodata    @4634                                                        */
SECTION_RODATA static u32 const lit_4634 = 0x42C80000;

/* 80C31234-80C31238 0002+02 s=0 e=0 z=0  None .rodata    l_kag_itemno                                                 */
SECTION_RODATA u16 const l_kag_itemno[1 + 1 /* padding */] = {
	0xD6D7,
	/* padding */
	0x0000,
};

/* 80C31238-80C3123C 0004+00 s=1 e=0 z=0  None .rodata    @4654                                                        */
SECTION_RODATA static u32 const lit_4654 = 0xCE6E6B28;

/* 80C3123C-80C31244 0004+04 s=1 e=0 z=0  None .rodata    @4714                                                        */
SECTION_RODATA static u32 const lit_4714[1 + 1 /* padding */] = {
	0x461C4000,
	/* padding */
	0x00000000,
};

/* 80C31244-80C3124C 0008+00 s=1 e=0 z=0  None .rodata    @4716                                                        */
SECTION_RODATA static u8 const lit_4716[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C3124C-80C31250 0004+00 s=0 e=0 z=0  None .rodata    @4785                                                        */
SECTION_RODATA u32 const lit_4785 = 0x42480000;

/* 80C31250-80C31254 0004+00 s=0 e=0 z=0  None .rodata    @4786                                                        */
SECTION_RODATA u32 const lit_4786 = 0x41700000;

/* 80C31254-80C31258 0004+00 s=0 e=0 z=0  None .rodata    @4787                                                        */
SECTION_RODATA u32 const lit_4787 = 0xBF19999A;

/* 80C31258-80C3125C 0004+00 s=0 e=0 z=0  None .rodata    l_musiya_num                                                 */
SECTION_RODATA u32 const l_musiya_num = 0x01A701A8;

/* 80C3125C-80C31260 0004+00 s=0 e=0 z=0  None .rodata    @4994                                                        */
SECTION_RODATA u32 const lit_4994 = 0xC2480000;

/* 80C31260-80C3126E 000E+00 s=9 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80C31260 = "I_Kag";
SECTION_DEAD char const* const stringBase_80C31266 = "R_SP160";
#pragma pop

/* 80C2E4D8-80C2E714 023C+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	80C2E4E8: 803621D4 (_savegpr_27)
//	80C2E4F0: 80C3114C (lit_3774)
//	80C2E4F4: 80C3114C (lit_3774)
//	80C2E4F8: 80C31260 (stringBase0)
//	80C2E4FC: 80C31260 (stringBase0)
//	80C2E504: 804061C0 (g_dComIfG_gameInfo)
//	80C2E508: 804061C0 (g_dComIfG_gameInfo)
//	80C2E51C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2E528: 802CEC4C (__nw__FUl)
//	80C2E534: 80C31260 (stringBase0)
//	80C2E538: 80C31260 (stringBase0)
//	80C2E548: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2E58C: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80C2E5BC: 802CEC4C (__nw__FUl)
//	80C2E5C8: 80C31410 (__vt__12J3DFrameCtrl)
//	80C2E5CC: 80C31410 (__vt__12J3DFrameCtrl)
//	80C2E5D8: 803283FC (init__12J3DFrameCtrlFs)
//	80C2E5FC: 80C31260 (stringBase0)
//	80C2E600: 80C31260 (stringBase0)
//	80C2E61C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2E644: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80C2E65C: 802CEC4C (__nw__FUl)
//	80C2E668: 80C31410 (__vt__12J3DFrameCtrl)
//	80C2E66C: 80C31410 (__vt__12J3DFrameCtrl)
//	80C2E678: 803283FC (init__12J3DFrameCtrlFs)
//	80C2E69C: 80C31260 (stringBase0)
//	80C2E6A0: 80C31260 (stringBase0)
//	80C2E6BC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2E6E4: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80C2E700: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80C2E714-80C2E75C 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80C2E72C: 80C31410 (__vt__12J3DFrameCtrl)
//	80C2E730: 80C31410 (__vt__12J3DFrameCtrl)
//	80C2E740: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80C2E75C-80C2E77C 0020+00 s=1 e=0 z=0  None .text      daObjKAG_Create__FP10fopAc_ac_c                              */
//	80C2E768: 80C308F0 (create__10daObjKAG_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjKAG_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/daObjKAG_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80C2E77C-80C2E7A0 0024+00 s=1 e=0 z=0  None .text      daObjKAG_Delete__FP10daObjKAG_c                              */
//	80C2E788: 80C306EC (_delete__10daObjKAG_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjKAG_c* False
// 	 daObjKAG_c False
asm static void daObjKAG_Delete(daObjKAG_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/daObjKAG_Delete__FP10daObjKAG_c.s"
}
#pragma pop


/* 80C2E7A0-80C2E9F8 0258+00 s=1 e=0 z=0  None .text      Kag_Bgcheck__10daObjKAG_cFP4cXyzP5csXyzP4cXyz                */
//	80C2E7B0: 803621D4 (_savegpr_27)
//	80C2E7C4: 80C3114C (lit_3774)
//	80C2E7C8: 80C3114C (lit_3774)
//	80C2E7D0: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C2E7D8: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2E7EC: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C2E7F0: 804061C0 (g_dComIfG_gameInfo)
//	80C2E7F4: 804061C0 (g_dComIfG_gameInfo)
//	80C2E804: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C2E810: 80C31404 (__vt__8cM3dGPla)
//	80C2E814: 80C31404 (__vt__8cM3dGPla)
//	80C2E828: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C2E880: 8034739C (PSVECSquareDistance)
//	80C2E8F0: 80450AE0 (__float_nan)
//	80C2E8F4: 80450AE0 (__float_nan)
//	80C2E960: 80450AE0 (__float_nan)
//	80C2E964: 80450AE0 (__float_nan)
//	80C2E974: 80267674 (cM_atan2s__Fff)
//	80C2E988: 80267674 (cM_atan2s__Fff)
//	80C2E9B0: 80C31404 (__vt__8cM3dGPla)
//	80C2E9B4: 80C31404 (__vt__8cM3dGPla)
//	80C2E9C4: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2E9D8: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2E9E4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  cXyz* False
// 	 cXyz False
asm void daObjKAG_c::Kag_Bgcheck(cXyz* param_0, csXyz* param_1, cXyz* param_2) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/Kag_Bgcheck__10daObjKAG_cFP4cXyzP5csXyzP4cXyz.s"
}
#pragma pop


/* 80C2E9F8-80C2EA40 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	80C2EA10: 80C31404 (__vt__8cM3dGPla)
//	80C2EA14: 80C31404 (__vt__8cM3dGPla)
//	80C2EA24: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 80C2EA40-80C2F764 0D24+00 s=6 e=0 z=0  None .text      fly__10daObjKAG_cFv                                          */
//	80C2EA58: 803621DC (_savegpr_29)
//	80C2EA60: 80C3114C (lit_3774)
//	80C2EA64: 80C3114C (lit_3774)
//	80C2EA74: 80C31260 (stringBase0)
//	80C2EA78: 80C31260 (stringBase0)
//	80C2EA80: 804061C0 (g_dComIfG_gameInfo)
//	80C2EA84: 804061C0 (g_dComIfG_gameInfo)
//	80C2EA94: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2EAB4: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2EAC4: 80267954 (cM_rndF__Ff)
//	80C2EAE4: 8026798C (cM_rndFX__Ff)
//	80C2EAFC: 80267954 (cM_rndF__Ff)
//	80C2EB1C: 80267954 (cM_rndF__Ff)
//	80C2EB3C: 8026798C (cM_rndFX__Ff)
//	80C2EB54: 80267954 (cM_rndF__Ff)
//	80C2EB88: 804061C0 (g_dComIfG_gameInfo)
//	80C2EB8C: 804061C0 (g_dComIfG_gameInfo)
//	80C2EBA0: 80C30E54 (kag_setParticle__10daObjKAG_cFv)
//	80C2EBAC: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	80C2EBC4: 80439A20 (sincosTable___5JMath)
//	80C2EBC8: 80439A20 (sincosTable___5JMath)
//	80C2EC90: 80C2E7A0 (Kag_Bgcheck__10daObjKAG_cFP4cXyzP5csXyzP4cXyz)
//	80C2ECAC: 80267954 (cM_rndF__Ff)
//	80C2ECC4: 80C312D0 (lit_3980)
//	80C2ECC8: 80C312D0 (lit_3980)
//	80C2ECEC: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
//	80C2ED04: 80267954 (cM_rndF__Ff)
//	80C2ED24: 80270B90 (cLib_chaseAngleS__FPsss)
//	80C2ED34: 80270B90 (cLib_chaseAngleS__FPsss)
//	80C2ED44: 80270B90 (cLib_chaseAngleS__FPsss)
//	80C2EDA8: 8034739C (PSVECSquareDistance)
//	80C2EE18: 80450AE0 (__float_nan)
//	80C2EE1C: 80450AE0 (__float_nan)
//	80C2EE88: 80450AE0 (__float_nan)
//	80C2EE8C: 80450AE0 (__float_nan)
//	80C2EEA0: 8026798C (cM_rndFX__Ff)
//	80C2EEB0: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80C2EF1C: 8034739C (PSVECSquareDistance)
//	80C2EF8C: 80450AE0 (__float_nan)
//	80C2EF90: 80450AE0 (__float_nan)
//	80C2EFFC: 80450AE0 (__float_nan)
//	80C2F000: 80450AE0 (__float_nan)
//	80C2F014: 80267954 (cM_rndF__Ff)
//	80C2F038: 80267954 (cM_rndF__Ff)
//	80C2F058: 80267954 (cM_rndF__Ff)
//	80C2F0B8: 8034739C (PSVECSquareDistance)
//	80C2F128: 80450AE0 (__float_nan)
//	80C2F12C: 80450AE0 (__float_nan)
//	80C2F198: 80450AE0 (__float_nan)
//	80C2F19C: 80450AE0 (__float_nan)
//	80C2F1B0: 80267954 (cM_rndF__Ff)
//	80C2F1D0: 8026798C (cM_rndFX__Ff)
//	80C2F1E8: 80267954 (cM_rndF__Ff)
//	80C2F214: 8026798C (cM_rndFX__Ff)
//	80C2F224: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80C2F260: 80267954 (cM_rndF__Ff)
//	80C2F2F0: 8034739C (PSVECSquareDistance)
//	80C2F360: 80450AE0 (__float_nan)
//	80C2F364: 80450AE0 (__float_nan)
//	80C2F3D0: 80450AE0 (__float_nan)
//	80C2F3D4: 80450AE0 (__float_nan)
//	80C2F410: 80267954 (cM_rndF__Ff)
//	80C2F430: 80267954 (cM_rndF__Ff)
//	80C2F450: 80267954 (cM_rndF__Ff)
//	80C2F490: 80267954 (cM_rndF__Ff)
//	80C2F4B0: 80267954 (cM_rndF__Ff)
//	80C2F4E8: 80267954 (cM_rndF__Ff)
//	80C2F508: 8026798C (cM_rndFX__Ff)
//	80C2F520: 80267954 (cM_rndF__Ff)
//	80C2F578: 8034739C (PSVECSquareDistance)
//	80C2F5E8: 80450AE0 (__float_nan)
//	80C2F5EC: 80450AE0 (__float_nan)
//	80C2F658: 80450AE0 (__float_nan)
//	80C2F65C: 80450AE0 (__float_nan)
//	80C2F678: 80270740 (cLib_chaseF__FPfff)
//	80C2F68C: 80270740 (cLib_chaseF__FPfff)
//	80C2F69C: 80270B90 (cLib_chaseAngleS__FPsss)
//	80C2F6AC: 80270B90 (cLib_chaseAngleS__FPsss)
//	80C2F6B0: 80439A20 (sincosTable___5JMath)
//	80C2F6B4: 80439A20 (sincosTable___5JMath)
//	80C2F6D8: 80270740 (cLib_chaseF__FPfff)
//	80C2F6E4: 80439A20 (sincosTable___5JMath)
//	80C2F6E8: 80439A20 (sincosTable___5JMath)
//	80C2F704: 80270740 (cLib_chaseF__FPfff)
//	80C2F714: 80270740 (cLib_chaseF__FPfff)
//	80C2F750: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::fly() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/fly__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C2F764-80C2F8C4 0160+00 s=2 e=0 z=0  None .text      wait__10daObjKAG_cFv                                         */
//	80C2F77C: 80C3114C (lit_3774)
//	80C2F780: 80C3114C (lit_3774)
//	80C2F790: 80C31260 (stringBase0)
//	80C2F794: 80C31260 (stringBase0)
//	80C2F79C: 804061C0 (g_dComIfG_gameInfo)
//	80C2F7A0: 804061C0 (g_dComIfG_gameInfo)
//	80C2F7B0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2F7D0: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2F7E4: 80267954 (cM_rndF__Ff)
//	80C2F824: 80C30E54 (kag_setParticle__10daObjKAG_cFv)
//	80C2F838: 80267954 (cM_rndF__Ff)
//	80C2F850: 80C312DC (lit_4341)
//	80C2F854: 80C312DC (lit_4341)
//	80C2F878: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
//	80C2F880: 80C312E8 (lit_4344)
//	80C2F884: 80C312E8 (lit_4344)
//	80C2F8A8: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::wait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/wait__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C2F8C4-80C2FD94 04D0+00 s=1 e=0 z=0  None .text      walk__10daObjKAG_cFv                                         */
//	80C2F8D4: 803621DC (_savegpr_29)
//	80C2F8DC: 80C3114C (lit_3774)
//	80C2F8E0: 80C3114C (lit_3774)
//	80C2F8F0: 80C31260 (stringBase0)
//	80C2F8F4: 80C31260 (stringBase0)
//	80C2F8FC: 804061C0 (g_dComIfG_gameInfo)
//	80C2F900: 804061C0 (g_dComIfG_gameInfo)
//	80C2F910: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2F930: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2F938: 80267954 (cM_rndF__Ff)
//	80C2F99C: 8000CF0C (ZXYrotS__14mDoMtx_stack_cFRC5csXyz)
//	80C2F9A0: 803DD470 (now__14mDoMtx_stack_c)
//	80C2F9A4: 803DD470 (now__14mDoMtx_stack_c)
//	80C2F9AC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C2F9B0: 803DD470 (now__14mDoMtx_stack_c)
//	80C2F9B4: 803DD470 (now__14mDoMtx_stack_c)
//	80C2F9C0: 80346D6C (PSMTXMultVec)
//	80C2F9D0: 80347090 (PSVECAdd)
//	80C2F9D8: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C2F9E0: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C2FA18: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C2FA20: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80C2FA24: 803DD470 (now__14mDoMtx_stack_c)
//	80C2FA28: 803DD470 (now__14mDoMtx_stack_c)
//	80C2FA30: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C2FA34: 803DD470 (now__14mDoMtx_stack_c)
//	80C2FA38: 803DD470 (now__14mDoMtx_stack_c)
//	80C2FA44: 80346D6C (PSMTXMultVec)
//	80C2FA48: 803DD470 (now__14mDoMtx_stack_c)
//	80C2FA4C: 803DD470 (now__14mDoMtx_stack_c)
//	80C2FA58: 80346D6C (PSMTXMultVec)
//	80C2FA5C: 803DD470 (now__14mDoMtx_stack_c)
//	80C2FA60: 803DD470 (now__14mDoMtx_stack_c)
//	80C2FA6C: 80346D6C (PSMTXMultVec)
//	80C2FA74: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2FA7C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C2FA90: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C2FAA4: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C2FAB0: 804061C0 (g_dComIfG_gameInfo)
//	80C2FAB4: 804061C0 (g_dComIfG_gameInfo)
//	80C2FAC4: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C2FAD0: 80C31404 (__vt__8cM3dGPla)
//	80C2FAD4: 80C31404 (__vt__8cM3dGPla)
//	80C2FAE8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C2FB18: 8034739C (PSVECSquareDistance)
//	80C2FB88: 80450AE0 (__float_nan)
//	80C2FB8C: 80450AE0 (__float_nan)
//	80C2FBF8: 80450AE0 (__float_nan)
//	80C2FBFC: 80450AE0 (__float_nan)
//	80C2FC24: 80267674 (cM_atan2s__Fff)
//	80C2FC38: 80267674 (cM_atan2s__Fff)
//	80C2FC48: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C2FC74: 80C31404 (__vt__8cM3dGPla)
//	80C2FC78: 80C31404 (__vt__8cM3dGPla)
//	80C2FC9C: 80270B90 (cLib_chaseAngleS__FPsss)
//	80C2FCB0: 80C30E54 (kag_setParticle__10daObjKAG_cFv)
//	80C2FCC4: 80267954 (cM_rndF__Ff)
//	80C2FCDC: 80C312F4 (lit_4377)
//	80C2FCE0: 80C312F4 (lit_4377)
//	80C2FD04: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
//	80C2FD0C: 80C31300 (lit_4380)
//	80C2FD10: 80C31300 (lit_4380)
//	80C2FD34: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
//	80C2FD6C: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2FD78: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C2FD80: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::walk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/walk__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C2FD94-80C2FF10 017C+00 s=1 e=0 z=0  None .text      bin_wait__10daObjKAG_cFv                                     */
//	80C2FDAC: 80C3114C (lit_3774)
//	80C2FDB0: 80C3114C (lit_3774)
//	80C2FDC0: 80C31260 (stringBase0)
//	80C2FDC4: 80C31260 (stringBase0)
//	80C2FDCC: 804061C0 (g_dComIfG_gameInfo)
//	80C2FDD0: 804061C0 (g_dComIfG_gameInfo)
//	80C2FDE0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2FE00: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2FE48: 804061C0 (g_dComIfG_gameInfo)
//	80C2FE4C: 804061C0 (g_dComIfG_gameInfo)
//	80C2FE60: 80C31260 (stringBase0)
//	80C2FE64: 80C31260 (stringBase0)
//	80C2FE70: 80368994 (strcmp)
//	80C2FE7C: 804061C0 (g_dComIfG_gameInfo)
//	80C2FE80: 804061C0 (g_dComIfG_gameInfo)
//	80C2FE9C: 80C3130C (lit_4476)
//	80C2FEA0: 80C3130C (lit_4476)
//	80C2FEC4: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
//	80C2FECC: 80C31318 (lit_4479)
//	80C2FED0: 80C31318 (lit_4479)
//	80C2FEF4: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::bin_wait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/bin_wait__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C2FF10-80C30070 0160+00 s=1 e=0 z=0  None .text      bin_action__10daObjKAG_cFv                                   */
//	80C2FF28: 80C3114C (lit_3774)
//	80C2FF2C: 80C3114C (lit_3774)
//	80C2FF3C: 80C31260 (stringBase0)
//	80C2FF40: 80C31260 (stringBase0)
//	80C2FF48: 804061C0 (g_dComIfG_gameInfo)
//	80C2FF4C: 804061C0 (g_dComIfG_gameInfo)
//	80C2FF5C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C2FF7C: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C2FFD0: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	80C2FFEC: 80270740 (cLib_chaseF__FPfff)
//	80C30004: 8026FA3C (cLib_addCalc2__FPffff)
//	80C3002C: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80C30054: 80C30E54 (kag_setParticle__10daObjKAG_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::bin_action() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/bin_action__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C30070-80C30274 0204+00 s=1 e=0 z=0  None .text      hook__10daObjKAG_cFv                                         */
//	80C30080: 803621DC (_savegpr_29)
//	80C30088: 80C3114C (lit_3774)
//	80C3008C: 80C3114C (lit_3774)
//	80C3009C: 804061C0 (g_dComIfG_gameInfo)
//	80C300A0: 804061C0 (g_dComIfG_gameInfo)
//	80C30138: 80C30E54 (kag_setParticle__10daObjKAG_cFv)
//	80C30148: 80C31324 (lit_4541)
//	80C3014C: 80C31324 (lit_4541)
//	80C30170: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
//	80C30178: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C30180: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C30194: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C30198: 804061C0 (g_dComIfG_gameInfo)
//	80C3019C: 804061C0 (g_dComIfG_gameInfo)
//	80C301AC: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C301B8: 80C31404 (__vt__8cM3dGPla)
//	80C301BC: 80C31404 (__vt__8cM3dGPla)
//	80C301D0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C30244: 80C31404 (__vt__8cM3dGPla)
//	80C30248: 80C31404 (__vt__8cM3dGPla)
//	80C30258: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C30260: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::hook() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/hook__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C30274-80C303C4 0150+00 s=1 e=0 z=0  None .text      boomerang__10daObjKAG_cFv                                    */
//	80C302A0: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80C302AC: 8015E5B0 (initOffset__20daPy_boomerangMove_cFPC4cXyz)
//	80C302D4: 804061C0 (g_dComIfG_gameInfo)
//	80C302D8: 804061C0 (g_dComIfG_gameInfo)
//	80C302F8: 80C31230 (lit_4634)
//	80C302FC: 80C31230 (lit_4634)
//	80C30354: 80C30E54 (kag_setParticle__10daObjKAG_cFv)
//	80C3036C: 8015E654 (posMove__20daPy_boomerangMove_cFP4cXyzPsP10fopAc_ac_cs)
//	80C30378: 80C31330 (lit_4603)
//	80C3037C: 80C31330 (lit_4603)
//	80C303A0: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
//	80C303AC: 8015E87C (bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::boomerang() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/boomerang__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C303C4-80C30424 0060+00 s=1 e=0 z=0  None .text      action__10daObjKAG_cFv                                       */
//	80C303DC: 80362084 (__ptmf_scall)
//	80C3040C: 8015E078 (Insect_GetDemoMain__9dInsect_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::action() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/action__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C30424-80C30498 0074+00 s=1 e=0 z=0  None .text      checkGroundPos__10daObjKAG_cFv                               */
//	80C30458: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80C3045C: 804061C0 (g_dComIfG_gameInfo)
//	80C30460: 804061C0 (g_dComIfG_gameInfo)
//	80C3046C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80C30470: 80C31238 (lit_4654)
//	80C30474: 80C31238 (lit_4654)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::checkGroundPos() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/checkGroundPos__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C30498-80C3054C 00B4+00 s=1 e=0 z=0  None .text      hit_check__10daObjKAG_cFv                                    */
//	80C304B0: 80083830 (Move__10dCcD_GSttsFv)
//	80C304B8: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80C304C8: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80C304DC: 80C3133C (lit_4662)
//	80C304E0: 80C3133C (lit_4662)
//	80C30504: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
//	80C3050C: 80C31348 (lit_4665)
//	80C30510: 80C31348 (lit_4665)
//	80C30534: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::hit_check() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/hit_check__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C3054C-80C306EC 01A0+00 s=1 e=0 z=0  None .text      execute__10daObjKAG_cFv                                      */
//	80C3056C: 80C3123C (lit_4714)
//	80C30570: 80C3123C (lit_4714)
//	80C30578: 80C31244 (lit_4716)
//	80C3057C: 80C31244 (lit_4716)
//	80C305CC: 8015E078 (Insect_GetDemoMain__9dInsect_cFv)
//	80C305D4: 80C30E54 (kag_setParticle__10daObjKAG_cFv)
//	80C3060C: 80C30424 (checkGroundPos__10daObjKAG_cFv)
//	80C30620: 80C30498 (hit_check__10daObjKAG_cFv)
//	80C30628: 80C303C4 (action__10daObjKAG_cFv)
//	80C30630: 8000D428 (play__14mDoExt_baseAnmFv)
//	80C30638: 8000D428 (play__14mDoExt_baseAnmFv)
//	80C30644: 8002D06C (dComIfGp_getReverb__Fi)
//	80C30654: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	80C3065C: 80C30754 (setBaseMtx__10daObjKAG_cFv)
//	80C30674: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80C3067C: 80C31208 (lit_4460)
//	80C30680: 80C31208 (lit_4460)
//	80C3068C: 8026F708 (SetR__8cM3dGSphFf)
//	80C30690: 804061C0 (g_dComIfG_gameInfo)
//	80C30694: 804061C0 (g_dComIfG_gameInfo)
//	80C306A0: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::execute() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/execute__10daObjKAG_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C31430-80C31434 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_80C31430[4];

/* 80C306EC-80C30754 0068+00 s=1 e=0 z=0  None .text      _delete__10daObjKAG_cFv                                      */
//	80C30704: 80C31260 (stringBase0)
//	80C30708: 80C31260 (stringBase0)
//	80C3070C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80C30720: 80C31430 (data_80C31430)
//	80C30724: 80C31430 (data_80C31430)
//	80C30738: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::_delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/_delete__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C30754-80C307D4 0080+00 s=1 e=0 z=0  None .text      setBaseMtx__10daObjKAG_cFv                                   */
//	80C30778: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C30780: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80C30788: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80C307A4: 803DD470 (now__14mDoMtx_stack_c)
//	80C307A8: 803DD470 (now__14mDoMtx_stack_c)
//	80C307B0: 803464B0 (PSMTXCopy)
//	80C307B8: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/setBaseMtx__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C307D4-80C308D0 00FC+00 s=1 e=0 z=0  None .text      daObjKAG_Draw__FP10daObjKAG_c                                */
//	80C307E4: 803621DC (_savegpr_29)
//	80C307EC: 80C3114C (lit_3774)
//	80C307F0: 80C3114C (lit_3774)
//	80C30804: 8015E26C (CalcZBuffer__9dInsect_cFf)
//	80C30810: 8042CA54 (g_env_light)
//	80C30814: 8042CA54 (g_env_light)
//	80C30824: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80C30828: 8042CA54 (g_env_light)
//	80C3082C: 8042CA54 (g_env_light)
//	80C30838: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C3084C: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80C30860: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	80C30878: 8001D42C (fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData)
//	80C30880: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	80C308A8: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80C308AC: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80C308B0: 8002D0B4 (dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj)
//	80C308BC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjKAG_c* False
// 	 daObjKAG_c False
asm static void daObjKAG_Draw(daObjKAG_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/daObjKAG_Draw__FP10daObjKAG_c.s"
}
#pragma pop


/* 80C308D0-80C308F0 0020+00 s=2 e=0 z=0  None .text      daObjKAG_Execute__FP10daObjKAG_c                             */
//	80C308DC: 80C3054C (execute__10daObjKAG_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjKAG_c* False
// 	 daObjKAG_c False
asm static void daObjKAG_Execute(daObjKAG_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/daObjKAG_Execute__FP10daObjKAG_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C31434-80C31440 000C+00 s=1 e=0 z=0  None .bss       @3769                                                        */
static u8 lit_3769[12];

/* 80C31440-80C31450 0010+00 s=2 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[16];

/* 80C308F0-80C30D60 0470+00 s=1 e=0 z=0  None .text      create__10daObjKAG_cFv                                       */
//	80C30900: 803621D4 (_savegpr_27)
//	80C30908: 80C31270 (cNullVec__6Z2Calc)
//	80C3090C: 80C31270 (cNullVec__6Z2Calc)
//	80C30910: 80C3114C (lit_3774)
//	80C30914: 80C3114C (lit_3774)
//	80C3093C: 8015E010 (__ct__9dInsect_cFv)
//	80C30940: 80C313F8 (__vt__10daObjKAG_c)
//	80C30944: 80C313F8 (__vt__10daObjKAG_c)
//	80C30950: 802C03C8 (__ct__10Z2CreatureFv)
//	80C30958: 8007757C (__ct__11dBgS_GndChkFv)
//	80C3095C: 803C3728 (__vt__9cCcD_Stts)
//	80C30960: 803C3728 (__vt__9cCcD_Stts)
//	80C3096C: 80083760 (__ct__10dCcD_GSttsFv)
//	80C30970: 803AC2E4 (__vt__9dCcD_Stts)
//	80C30974: 803AC2E4 (__vt__9dCcD_Stts)
//	80C3098C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80C30990: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C30994: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C3099C: 80C313EC (__vt__8cM3dGAab)
//	80C309A0: 80C313EC (__vt__8cM3dGAab)
//	80C309A8: 80C313E0 (__vt__8cM3dGSph)
//	80C309AC: 80C313E0 (__vt__8cM3dGSph)
//	80C309B4: 803C3540 (__vt__12cCcD_SphAttr)
//	80C309B8: 803C3540 (__vt__12cCcD_SphAttr)
//	80C309C8: 803ABFC0 (__vt__8dCcD_Sph)
//	80C309CC: 803ABFC0 (__vt__8dCcD_Sph)
//	80C309F4: 80C31260 (stringBase0)
//	80C309F8: 80C31260 (stringBase0)
//	80C309FC: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80C30A44: 80C31440 (l_HIO)
//	80C30A48: 80C31440 (l_HIO)
//	80C30A60: 80C31440 (l_HIO)
//	80C30A64: 80C31440 (l_HIO)
//	80C30AC0: 804061C0 (g_dComIfG_gameInfo)
//	80C30AC4: 804061C0 (g_dComIfG_gameInfo)
//	80C30AD8: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C30ADC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C30AE4: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80C30B00: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C30B04: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C30B0C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80C30B20: 80C31260 (stringBase0)
//	80C30B24: 80C31260 (stringBase0)
//	80C30B2C: 804061C0 (g_dComIfG_gameInfo)
//	80C30B30: 804061C0 (g_dComIfG_gameInfo)
//	80C30B38: 80368994 (strcmp)
//	80C30B44: 804061C0 (g_dComIfG_gameInfo)
//	80C30B48: 804061C0 (g_dComIfG_gameInfo)
//	80C30B5C: 801D9F3C (isCatchNotGiveInsect__14dMenu_Insect_cFUc)
//	80C30B7C: 804061C0 (g_dComIfG_gameInfo)
//	80C30B80: 804061C0 (g_dComIfG_gameInfo)
//	80C30B90: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C30B94: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C30B9C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80C30BB4: 804061C0 (g_dComIfG_gameInfo)
//	80C30BB8: 804061C0 (g_dComIfG_gameInfo)
//	80C30BCC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C30BD0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C30BD8: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80C30BF8: 80C2E4D8 (useHeapInit__FP10fopAc_ac_c)
//	80C30BFC: 80C2E4D8 (useHeapInit__FP10fopAc_ac_c)
//	80C30C04: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80C30C18: 80C31430 (data_80C31430)
//	80C30C1C: 80C31430 (data_80C31430)
//	80C30C38: 80C31440 (l_HIO)
//	80C30C3C: 80C31440 (l_HIO)
//	80C30C64: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	80C30C78: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	80C30CA4: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80C30CCC: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80C30CD8: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80C30D10: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
//	80C30D38: 80C2E434 (setAction__10daObjKAG_cFM10daObjKAG_cFPCvPv_v)
//	80C30D40: 80C308D0 (daObjKAG_Execute__FP10daObjKAG_c)
//	80C30D4C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/create__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C30D60-80C30DA8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80C30D78: 80C313E0 (__vt__8cM3dGSph)
//	80C30D7C: 80C313E0 (__vt__8cM3dGSph)
//	80C30D8C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80C30DA8-80C30DF0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80C30DC0: 80C313EC (__vt__8cM3dGAab)
//	80C30DC4: 80C313EC (__vt__8cM3dGAab)
//	80C30DD4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80C30DF0-80C30E4C 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80C30E08: 80C313D4 (__vt__10dCcD_GStts)
//	80C30E0C: 80C313D4 (__vt__10dCcD_GStts)
//	80C30E18: 80C313C8 (__vt__10cCcD_GStts)
//	80C30E1C: 80C313C8 (__vt__10cCcD_GStts)
//	80C30E30: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80C30E4C-80C30E54 0008+00 s=1 e=0 z=0  None .text      daObjKAG_IsDelete__FP10daObjKAG_c                            */
// True False
//  bool False
//  daObjKAG_c* False
// 	 daObjKAG_c False
static bool daObjKAG_IsDelete(daObjKAG_c* param_0) {
	return true;
}


/* 80C30E54-80C31060 020C+00 s=7 e=0 z=0  None .text      kag_setParticle__10daObjKAG_cFv                              */
//	80C30E70: 803620AC (__cvt_fp2unsigned)
//	80C30E84: 80C31164 (lit_3945)
//	80C30E88: 80C31164 (lit_3945)
//	80C30E8C: 80C31160 (lit_3867)
//	80C30E90: 80C31160 (lit_3867)
//	80C30E94: 80270740 (cLib_chaseF__FPfff)
//	80C30EA0: 80C31160 (lit_3867)
//	80C30EA4: 80C31160 (lit_3867)
//	80C30EAC: 80270740 (cLib_chaseF__FPfff)
//	80C30EBC: 80C31260 (stringBase0)
//	80C30EC0: 80C31260 (stringBase0)
//	80C30EC8: 804061C0 (g_dComIfG_gameInfo)
//	80C30ECC: 804061C0 (g_dComIfG_gameInfo)
//	80C30ED8: 80368994 (strcmp)
//	80C30EE4: 80C31260 (stringBase0)
//	80C30EE8: 80C31260 (stringBase0)
//	80C30EF4: 80368994 (strcmp)
//	80C30F00: 804061C0 (g_dComIfG_gameInfo)
//	80C30F04: 804061C0 (g_dComIfG_gameInfo)
//	80C30F14: 804061C0 (g_dComIfG_gameInfo)
//	80C30F18: 804061C0 (g_dComIfG_gameInfo)
//	80C30F60: 80C31160 (lit_3867)
//	80C30F64: 80C31160 (lit_3867)
//	80C30F68: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C30F7C: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	80C30FE0: 80C31160 (lit_3867)
//	80C30FE4: 80C31160 (lit_3867)
//	80C30FE8: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C30FFC: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAG_c::kag_setParticle() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/kag_setParticle__10daObjKAG_cFv.s"
}
#pragma pop


/* 80C31060-80C310A8 0048+00 s=2 e=0 z=0  None .text      __dt__14daObj_KagHIO_cFv                                     */
//	80C31078: 80C3141C (__vt__14daObj_KagHIO_c)
//	80C3107C: 80C3141C (__vt__14daObj_KagHIO_c)
//	80C3108C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_KagHIO_c::~daObj_KagHIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/__dt__14daObj_KagHIO_cFv.s"
}
#pragma pop


/* 80C310A8-80C310E4 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_kag_cpp                                      */
//	80C310B4: 80C31440 (l_HIO)
//	80C310B8: 80C31440 (l_HIO)
//	80C310BC: 80C2E40C (__ct__14daObj_KagHIO_cFv)
//	80C310C0: 80C31060 (__dt__14daObj_KagHIO_cFv)
//	80C310C4: 80C31060 (__dt__14daObj_KagHIO_cFv)
//	80C310C8: 80C31434 (lit_3769)
//	80C310CC: 80C31434 (lit_3769)
//	80C310D0: 80C2E398 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_kag_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/__sinit_d_a_obj_kag_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80C310A8 = (void*)__sinit_d_a_obj_kag_cpp;
#pragma pop


/* 80C310E4-80C310F0 000C+00 s=2 e=0 z=0  None .text      Insect_Release__9dInsect_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dInsect_c::Insect_Release() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/Insect_Release__9dInsect_cFv.s"
}
#pragma pop


/* 80C310F0-80C31138 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80C31108: 80C313C8 (__vt__10cCcD_GStts)
//	80C3110C: 80C313C8 (__vt__10cCcD_GStts)
//	80C3111C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kag/d_a_obj_kag/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


