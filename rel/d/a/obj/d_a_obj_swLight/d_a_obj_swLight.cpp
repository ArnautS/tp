// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_swLight
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
};

struct fopAc_ac_c {
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daObjSwLight_c {
	/* 80CF6F98 */ // True False
void initBaseMtx();
	/* 80CF6FD4 */ // True False
void setBaseMtx();
	/* 80CF7038 */ // True False
void Create();
	/* 80CF71F0 */ // True False
void CreateHeap();
	/* 80CF7260 */ // True False
void create1st();
	/* 80CF7320 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80CF73E0 */ // True False
void action();
	/* 80CF761C */ // True False
void init_modeSwOnWait();
	/* 80CF766C */ // True False
void modeSwOnWait();
	/* 80CF777C */ // True False
void init_modeOnLight();
	/* 80CF7788 */ // True False
void modeOnLight();
	/* 80CF77D8 */ // True False
void init_modeSwOffWait();
	/* 80CF7838 */ // True False
void modeSwOffWait();
	/* 80CF7974 */ // True False
//  void False
void modeDead();
	/* 80CF7978 */ // True False
void checkHit();
	/* 80CF7A6C */ // True False
void setOnTimer();
	/* 80CF7A98 */ // True False
void Draw();
	/* 80CF7BA8 */ // True False
void Delete();
	/* 80CF8124 */ // True False
~daObjSwLight_c();
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 800352B0 */ // False False
//  int False
//  int False
void offSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dEvLib_callback_c {
	/* 8004886C */ // False False
void eventUpdate();
	/* 80048940 */ // False False
//  int False
//  int False
//  int False
void orderEvent(int, int, int);
	/* 80CF80C4 */ // True False
~dEvLib_callback_c();
	/* 80CF810C */ // True False
//  bool False
bool eventStart();
	/* 80CF8114 */ // True False
//  bool False
bool eventRun();
	/* 80CF811C */ // True False
//  bool False
bool eventEnd();
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_SrcCyl {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 80CF7DD4 */ // True False
dCcD_Sph();
	/* 80CF7E58 */ // True False
~dCcD_Sph();
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80CF7FB4 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084548 */ // False False
void GetTgHitGObj();
	/* 8008457C */ // False False
void GetTgHitObjSe();
	/* 800845B0 */ // False False
//  u8 False
//  int False
void getHitSeID(u8, int);
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgW {
};

struct csXyz {
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 80CF7F24 */ // True False
~cM3dGSph();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 80CF7D8C */ // True False
~cM3dGCyl();
};

struct cM3dGAab {
	/* 80CF7F6C */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80CF807C */ // True False
~cCcD_GStts();
};

struct Z2SoundObjSimple {
	/* 802BE844 */ // False False
Z2SoundObjSimple();
};

struct Z2SoundObjBase {
	/* 802BDF48 */ // False False
~Z2SoundObjBase();
	/* 802BDFF8 */ // False False
void deleteObject();
	/* 802BE4A4 */ // False False
//  u32 False
//  u32 False
//  Z2SoundObjBase* False
// 	 Z2SoundObjBase False
void startCollisionSE(u32, u32, Z2SoundObjBase*);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct JUTNameTab {
	/* 802DEAF8 */ // False False
//  u16 False
void getName(u16) const;
};

struct J3DModel {
};

struct DALKMIST_INFLUENCE {
};

// 
// Forward References:
// 

// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
static void daObjSwLight_create1st(daObjSwLight_c*);
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
static void daObjSwLight_MoveBGDelete(daObjSwLight_c*);
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
static void daObjSwLight_MoveBGExecute(daObjSwLight_c*);
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
static void daObjSwLight_MoveBGDraw(daObjSwLight_c*);
// False True
//  u16* False
// 	 u16 False
void cLib_calcTimer__template0(u16*);
// False True
//  u8* False
// 	 u8 False
void cLib_calcTimer__template1(u8*);

// True False
extern "C" void initBaseMtx__14daObjSwLight_cFv();
// True False
extern "C" void setBaseMtx__14daObjSwLight_cFv();
// True False
extern "C" void Create__14daObjSwLight_cFv();
// True False
extern "C" void CreateHeap__14daObjSwLight_cFv();
// True False
extern "C" void create1st__14daObjSwLight_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__14daObjSwLight_cFPPA3_A4_f();
// True False
extern "C" void action__14daObjSwLight_cFv();
// True False
extern "C" void init_modeSwOnWait__14daObjSwLight_cFv();
// True False
extern "C" void modeSwOnWait__14daObjSwLight_cFv();
// True False
extern "C" void init_modeOnLight__14daObjSwLight_cFv();
// True False
extern "C" void modeOnLight__14daObjSwLight_cFv();
// True False
extern "C" void init_modeSwOffWait__14daObjSwLight_cFv();
// True False
extern "C" void modeSwOffWait__14daObjSwLight_cFv();
// True False
//  void False
extern "C" void modeDead__14daObjSwLight_cFv();
// True False
extern "C" void checkHit__14daObjSwLight_cFv();
// True False
extern "C" void setOnTimer__14daObjSwLight_cFv();
// True False
extern "C" void Draw__14daObjSwLight_cFv();
// True False
extern "C" void Delete__14daObjSwLight_cFv();
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
extern "C" static void daObjSwLight_create1st__FP14daObjSwLight_c();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __ct__8dCcD_SphFv();
// True False
extern "C" void __dt__8dCcD_SphFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
extern "C" static void daObjSwLight_MoveBGDelete__FP14daObjSwLight_c();
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
extern "C" static void daObjSwLight_MoveBGExecute__FP14daObjSwLight_c();
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
extern "C" static void daObjSwLight_MoveBGDraw__FP14daObjSwLight_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__17dEvLib_callback_cFv();
// True False
//  bool False
extern "C" bool eventStart__17dEvLib_callback_cFv();
// True False
//  bool False
extern "C" bool eventRun__17dEvLib_callback_cFv();
// True False
//  bool False
extern "C" bool eventEnd__17dEvLib_callback_cFv();
// True False
extern "C" void __dt__14daObjSwLight_cFv();
// False True
//  u16* False
// 	 u16 False
extern "C" void func_80CF8358();
// False True
//  u8* False
// 	 u8 False
extern "C" void func_80CF8374();
// True False
extern "C" static void func_80CF8390();
extern "C" extern u8 const l_sph_src_tg[64];
extern "C" extern u8 const lit_3702[4];
extern "C" extern u32 const lit_3780;
extern "C" extern u32 const lit_3782;
extern "C" extern u32 const lit_3783;
extern "C" extern u32 const lit_3829;
extern "C" extern u32 const lit_3830;
extern "C" extern u32 const lit_3831[1 + 1 /* padding */];
extern "C" extern u8 const lit_3833[8];
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_3738[3];
extern "C" extern void* lit_3739[3];
extern "C" extern void* lit_3740[3];
extern "C" extern void* lit_3741[3];
extern "C" extern u8 data_80CF8518[48];
extern "C" extern void* g_profile_Obj_SwLight[12];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__17dEvLib_callback_c[6];
extern "C" extern void* __vt__14daObjSwLight_c[17];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  DALKMIST_INFLUENCE* False
// 	 DALKMIST_INFLUENCE False
void dKy_dalkmist_inf_set(DALKMIST_INFLUENCE*);
// False False
//  DALKMIST_INFLUENCE* False
// 	 DALKMIST_INFLUENCE False
void dKy_dalkmist_inf_cut(DALKMIST_INFLUENCE*);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void offSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void eventUpdate__17dEvLib_callback_cFv();
// False False
//  int False
//  int False
//  int False
extern "C" void orderEvent__17dEvLib_callback_cFiii();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitGObj__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObjSe__12dCcD_GObjInfFv();
// False False
//  u8 False
//  int False
extern "C" void getHitSeID__12dCcD_GObjInfFUci();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  DALKMIST_INFLUENCE* False
// 	 DALKMIST_INFLUENCE False
extern "C" void dKy_dalkmist_inf_set__FP18DALKMIST_INFLUENCE();
// False False
//  DALKMIST_INFLUENCE* False
// 	 DALKMIST_INFLUENCE False
extern "C" void dKy_dalkmist_inf_cut__FP18DALKMIST_INFLUENCE();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void __dt__14Z2SoundObjBaseFv();
// False False
extern "C" void deleteObject__14Z2SoundObjBaseFv();
// False False
//  u32 False
//  u32 False
//  Z2SoundObjBase* False
// 	 Z2SoundObjBase False
extern "C" void startCollisionSE__14Z2SoundObjBaseFUlUlP14Z2SoundObjBase();
// False False
extern "C" void __ct__16Z2SoundObjSimpleFv();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  u16 False
extern "C" void getName__10JUTNameTabCFUs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__16dBgS_MoveBgActor[10];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__16Z2SoundObjSimple[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 data_80CF8630[4];

// 
// Declarations:
// 

/* 80CF6F98-80CF6FD4 003C+00 s=1 e=0 z=0  None .text      initBaseMtx__14daObjSwLight_cFv                              */
//	80CF6FC0: 80CF6FD4 (setBaseMtx__14daObjSwLight_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/initBaseMtx__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF6FD4-80CF7038 0064+00 s=2 e=0 z=0  None .text      setBaseMtx__14daObjSwLight_cFv                               */
//	80CF6FEC: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80CF6FF0: 803DD470 (now__14mDoMtx_stack_c)
//	80CF6FF4: 803DD470 (now__14mDoMtx_stack_c)
//	80CF6FFC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80CF7000: 803DD470 (now__14mDoMtx_stack_c)
//	80CF7004: 803DD470 (now__14mDoMtx_stack_c)
//	80CF7010: 803464B0 (PSMTXCopy)
//	80CF7014: 803DD470 (now__14mDoMtx_stack_c)
//	80CF7018: 803DD470 (now__14mDoMtx_stack_c)
//	80CF7020: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/setBaseMtx__14daObjSwLight_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CF83A0-80CF83E0 0040+00 s=4 e=0 z=0  None .rodata    l_sph_src_at                                                 */
SECTION_RODATA static u8 const l_sph_src_at[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
};

/* 80CF83E0-80CF8420 0040+00 s=0 e=0 z=0  None .rodata    l_sph_src_tg                                                 */
SECTION_RODATA u8 const l_sph_src_tg[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00,
};

/* 80CF8420-80CF8424 0004+00 s=2 e=0 z=0  None .rodata    @3701                                                        */
SECTION_RODATA static u32 const lit_3701 = 0x43FA0000;

/* 80CF8424-80CF8428 0004+00 s=0 e=0 z=0  None .rodata    @3702                                                        */
SECTION_RODATA u8 const lit_3702[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80CF8428-80CF842C 0004+00 s=0 e=0 z=0  None .rodata    @3780                                                        */
SECTION_RODATA u32 const lit_3780 = 0x42B40000;

/* 80CF842C-80CF8430 0004+00 s=1 e=0 z=0  None .rodata    @3781                                                        */
SECTION_RODATA static u32 const lit_3781 = 0x437F0000;

/* 80CF8430-80CF8434 0004+00 s=0 e=0 z=0  None .rodata    @3782                                                        */
SECTION_RODATA u32 const lit_3782 = 0x3F800000;

/* 80CF8434-80CF8438 0004+00 s=0 e=0 z=0  None .rodata    @3783                                                        */
SECTION_RODATA u32 const lit_3783 = 0xBF800000;

/* 80CF8438-80CF843C 0004+00 s=0 e=0 z=0  None .rodata    @3829                                                        */
SECTION_RODATA u32 const lit_3829 = 0x42FA0000;

/* 80CF843C-80CF8440 0004+00 s=0 e=0 z=0  None .rodata    @3830                                                        */
SECTION_RODATA u32 const lit_3830 = 0x3E800000;

/* 80CF8440-80CF8448 0004+04 s=0 e=0 z=0  None .rodata    @3831                                                        */
SECTION_RODATA u32 const lit_3831[1 + 1 /* padding */] = {
	0x42340000,
	/* padding */
	0x00000000,
};

/* 80CF8448-80CF8450 0008+00 s=0 e=0 z=0  None .rodata    @3833                                                        */
SECTION_RODATA u8 const lit_3833[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80CF8450-80CF8454 0004+00 s=1 e=0 z=0  None .rodata    @3844                                                        */
SECTION_RODATA static u32 const lit_3844 = 0x41C80000;

/* 80CF8454-80CF8466 0012+00 s=2 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80CF8454 = "Obj_l8sw0";
SECTION_DEAD char const* const stringBase_80CF845E = "cc_LB_v";
#pragma pop

/* 80CF8468-80CF8474 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CF8474-80CF8488 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80CF8488-80CF848C 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80CF848C-80CF84A4 0018+00 s=1 e=0 z=0  None .data      l_cull_box                                                   */
SECTION_DATA static u8 l_cull_box[24] = {
	0xC3, 0xFA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xFA, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00,
	0x43, 0xFA, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00,
};

/* 80CF84A4-80CF84E8 0044+00 s=1 e=0 z=0  None .data      l_cyl_src                                                    */
SECTION_DATA static u8 l_cyl_src[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E,
	0xD8, 0xFA, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x09, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00,
	0x43, 0x2A, 0x00, 0x00,
};

/* 80CF7038-80CF71F0 01B8+00 s=1 e=0 z=0  None .text      Create__14daObjSwLight_cFv                                   */
//	80CF7048: 803621D0 (_savegpr_26)
//	80CF7050: 80CF83A0 (l_sph_src_at)
//	80CF7054: 80CF83A0 (l_sph_src_at)
//	80CF7058: 804061C0 (g_dComIfG_gameInfo)
//	80CF705C: 804061C0 (g_dComIfG_gameInfo)
//	80CF7070: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CF7080: 80CF77D8 (init_modeSwOffWait__14daObjSwLight_cFv)
//	80CF7094: 80CF761C (init_modeSwOnWait__14daObjSwLight_cFv)
//	80CF70A4: 80CF6F98 (initBaseMtx__14daObjSwLight_cFv)
//	80CF70C4: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80CF70D0: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80CF70F0: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80CF711C: 80CF84A4 (l_cyl_src)
//	80CF7120: 80CF84A4 (l_cyl_src)
//	80CF7124: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80CF7134: 80CF848C (l_cull_box)
//	80CF7138: 80CF848C (l_cull_box)
//	80CF7150: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80CF7170: 80CF8454 (stringBase0)
//	80CF7174: 80CF8454 (stringBase0)
//	80CF7184: 802DEAF8 (getName__10JUTNameTabCFUs)
//	80CF718C: 80368994 (strcmp)
//	80CF71DC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/Create__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF71F0-80CF7260 0070+00 s=1 e=0 z=0  None .text      CreateHeap__14daObjSwLight_cFv                               */
//	80CF7204: 80CF8488 (l_arcName)
//	80CF7208: 80CF8488 (l_arcName)
//	80CF7214: 804061C0 (g_dComIfG_gameInfo)
//	80CF7218: 804061C0 (g_dComIfG_gameInfo)
//	80CF7228: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80CF7238: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/CreateHeap__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF7260-80CF7320 00C0+00 s=1 e=0 z=0  None .text      create1st__14daObjSwLight_cFv                                */
//	80CF72B8: 80CF8488 (l_arcName)
//	80CF72BC: 80CF8488 (l_arcName)
//	80CF72C4: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80CF72D8: 80CF8488 (l_arcName)
//	80CF72DC: 80CF8488 (l_arcName)
//	80CF72F4: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::create1st() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/create1st__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF7320-80CF73E0 00C0+00 s=1 e=0 z=0  None .text      Execute__14daObjSwLight_cFPPA3_A4_f                          */
//	80CF733C: 80CF73E0 (action__14daObjSwLight_cFv)
//	80CF7344: 8004886C (eventUpdate__17dEvLib_callback_cFv)
//	80CF7354: 80CF6FD4 (setBaseMtx__14daObjSwLight_cFv)
//	80CF735C: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80CF736C: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80CF737C: 8008457C (GetTgHitObjSe__12dCcD_GObjInfFv)
//	80CF7384: 800845B0 (getHitSeID__12dCcD_GObjInfFUci)
//	80CF7398: 802BE4A4 (startCollisionSE__14Z2SoundObjBaseFUlUlP14Z2SoundObjBase)
//	80CF73A4: 8002D06C (dComIfGp_getReverb__Fi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjSwLight_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/Execute__14daObjSwLight_cFPPA3_A4_f.s"
}
#pragma pop


/* 80CF73E0-80CF761C 023C+00 s=1 e=0 z=0  None .text      action__14daObjSwLight_cFv                                   */
//	80CF73F8: 803621D0 (_savegpr_26)
//	80CF7400: 80CF8468 (cNullVec__6Z2Calc)
//	80CF7404: 80CF8468 (cNullVec__6Z2Calc)
//	80CF7408: 80CF83A0 (l_sph_src_at)
//	80CF740C: 80CF83A0 (l_sph_src_at)
//	80CF7410: 80CF8630 (data_80CF8630)
//	80CF7414: 80CF8630 (data_80CF8630)
//	80CF74A8: 80362084 (__ptmf_scall)
//	80CF74D8: 804061C0 (g_dComIfG_gameInfo)
//	80CF74DC: 804061C0 (g_dComIfG_gameInfo)
//	80CF74F0: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80CF74FC: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80CF7518: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80CF7524: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80CF7564: 801A7814 (dKy_dalkmist_inf_set__FP18DALKMIST_INFLUENCE)
//	80CF7584: 801A7868 (dKy_dalkmist_inf_cut__FP18DALKMIST_INFLUENCE)
//	80CF75B8: 8002D06C (dComIfGp_getReverb__Fi)
//	80CF75CC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CF75D0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80CF75F8: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80CF7608: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::action() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/action__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF761C-80CF766C 0050+00 s=2 e=0 z=0  None .text      init_modeSwOnWait__14daObjSwLight_cFv                        */
//	80CF7630: 804061C0 (g_dComIfG_gameInfo)
//	80CF7634: 804061C0 (g_dComIfG_gameInfo)
//	80CF7648: 800352B0 (offSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::init_modeSwOnWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/init_modeSwOnWait__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF766C-80CF777C 0110+00 s=1 e=0 z=0  None .text      modeSwOnWait__14daObjSwLight_cFv                             */
//	80CF7684: 80CF83A0 (l_sph_src_at)
//	80CF7688: 80CF83A0 (l_sph_src_at)
//	80CF768C: 80CF7978 (checkHit__14daObjSwLight_cFv)
//	80CF76A0: 80CF777C (init_modeOnLight__14daObjSwLight_cFv)
//	80CF7754: 80CF77D8 (init_modeSwOffWait__14daObjSwLight_cFv)
//	80CF7760: 80CF8374 (func_80CF8374)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::modeSwOnWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/modeSwOnWait__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF777C-80CF7788 000C+00 s=1 e=0 z=0  None .text      init_modeOnLight__14daObjSwLight_cFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::init_modeOnLight() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/init_modeOnLight__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF7788-80CF77D8 0050+00 s=1 e=0 z=0  None .text      modeOnLight__14daObjSwLight_cFv                              */
//	80CF77A0: 80CF8420 (lit_3701)
//	80CF77A4: 80CF8420 (lit_3701)
//	80CF77A8: 80CF8450 (lit_3844)
//	80CF77AC: 80CF8450 (lit_3844)
//	80CF77B0: 80270740 (cLib_chaseF__FPfff)
//	80CF77C0: 80CF77D8 (init_modeSwOffWait__14daObjSwLight_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::modeOnLight() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/modeOnLight__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF77D8-80CF7838 0060+00 s=3 e=0 z=0  None .text      init_modeSwOffWait__14daObjSwLight_cFv                       */
//	80CF77EC: 804061C0 (g_dComIfG_gameInfo)
//	80CF77F0: 804061C0 (g_dComIfG_gameInfo)
//	80CF7804: 80035200 (onSwitch__10dSv_info_cFii)
//	80CF7818: 80CF7A6C (setOnTimer__14daObjSwLight_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::init_modeSwOffWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/init_modeSwOffWait__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF7838-80CF7974 013C+00 s=1 e=0 z=0  None .text      modeSwOffWait__14daObjSwLight_cFv                            */
//	80CF7850: 80CF83A0 (l_sph_src_at)
//	80CF7854: 80CF83A0 (l_sph_src_at)
//	80CF7858: 80CF7978 (checkHit__14daObjSwLight_cFv)
//	80CF786C: 804061C0 (g_dComIfG_gameInfo)
//	80CF7870: 804061C0 (g_dComIfG_gameInfo)
//	80CF787C: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CF789C: 804061C0 (g_dComIfG_gameInfo)
//	80CF78A0: 804061C0 (g_dComIfG_gameInfo)
//	80CF78B4: 80035360 (isSwitch__10dSv_info_cCFii)
//	80CF78CC: 80270740 (cLib_chaseF__FPfff)
//	80CF78DC: 80CF761C (init_modeSwOnWait__14daObjSwLight_cFv)
//	80CF78F0: 80270740 (cLib_chaseF__FPfff)
//	80CF7910: 80CF8358 (func_80CF8358)
//	80CF7928: 80270740 (cLib_chaseF__FPfff)
//	80CF7938: 80CF761C (init_modeSwOnWait__14daObjSwLight_cFv)
//	80CF7958: 80048940 (orderEvent__17dEvLib_callback_cFiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::modeSwOffWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/modeSwOffWait__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF7974-80CF7978 0004+00 s=1 e=0 z=0  None .text      modeDead__14daObjSwLight_cFv                                 */
// True False
//  void False
void daObjSwLight_c::modeDead() {
	/* empty function */
}


/* 80CF7978-80CF7A6C 00F4+00 s=2 e=0 z=0  None .text      checkHit__14daObjSwLight_cFv                                 */
//	80CF79A0: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80CF79B0: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80CF79CC: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80CF79DC: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80CF79FC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80CF7A0C: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80CF7A28: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80CF7A38: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::checkHit() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/checkHit__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF7A6C-80CF7A98 002C+00 s=1 e=0 z=0  None .text      setOnTimer__14daObjSwLight_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::setOnTimer() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/setOnTimer__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF7A98-80CF7BA8 0110+00 s=1 e=0 z=0  None .text      Draw__14daObjSwLight_cFv                                     */
//	80CF7AB0: 8042CA54 (g_env_light)
//	80CF7AB4: 8042CA54 (g_env_light)
//	80CF7AC4: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80CF7AC8: 8042CA54 (g_env_light)
//	80CF7ACC: 8042CA54 (g_env_light)
//	80CF7ADC: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80CF7B10: 80CF842C (lit_3781)
//	80CF7B14: 80CF842C (lit_3781)
//	80CF7B1C: 80CF8420 (lit_3701)
//	80CF7B20: 80CF8420 (lit_3701)
//	80CF7B4C: 804061C0 (g_dComIfG_gameInfo)
//	80CF7B50: 804061C0 (g_dComIfG_gameInfo)
//	80CF7B58: 80434AC8 (j3dSys)
//	80CF7B5C: 80434AC8 (j3dSys)
//	80CF7B70: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80CF7B74: 804061C0 (g_dComIfG_gameInfo)
//	80CF7B78: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/Draw__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF7BA8-80CF7BF0 0048+00 s=1 e=0 z=0  None .text      Delete__14daObjSwLight_cFv                                   */
//	80CF7BC0: 802BDFF8 (deleteObject__14Z2SoundObjBaseFv)
//	80CF7BC8: 80CF8488 (l_arcName)
//	80CF7BCC: 80CF8488 (l_arcName)
//	80CF7BD4: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjSwLight_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/Delete__14daObjSwLight_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CF84E8-80CF84F4 000C+00 s=0 e=0 z=0  None .data      @3738                                                        */
SECTION_DATA void* lit_3738[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeSwOnWait__14daObjSwLight_cFv,
};

/* 80CF84F4-80CF8500 000C+00 s=0 e=0 z=0  None .data      @3739                                                        */
SECTION_DATA void* lit_3739[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeSwOffWait__14daObjSwLight_cFv,
};

/* 80CF8500-80CF850C 000C+00 s=0 e=0 z=0  None .data      @3740                                                        */
SECTION_DATA void* lit_3740[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeOnLight__14daObjSwLight_cFv,
};

/* 80CF850C-80CF8518 000C+00 s=0 e=0 z=0  None .data      @3741                                                        */
SECTION_DATA void* lit_3741[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)modeDead__14daObjSwLight_cFv,
};

/* 80CF8518-80CF8548 0030+00 s=0 e=0 z=0  None .data      l_func$3737                                                  */
SECTION_DATA u8 data_80CF8518[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CF8548-80CF8568 0020+00 s=1 e=0 z=0  None .data      daObjSwLight_METHODS                                         */
SECTION_DATA static void* daObjSwLight_METHODS[8] = {
	(void*)daObjSwLight_create1st__FP14daObjSwLight_c,
	(void*)daObjSwLight_MoveBGDelete__FP14daObjSwLight_c,
	(void*)daObjSwLight_MoveBGExecute__FP14daObjSwLight_c,
	(void*)NULL,
	(void*)daObjSwLight_MoveBGDraw__FP14daObjSwLight_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80CF8568-80CF8598 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_SwLight                                        */
SECTION_DATA void* g_profile_Obj_SwLight[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00AC0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000B28,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x022A0000,
	(void*)&daObjSwLight_METHODS,
	(void*)0x00040100,
	(void*)0x000E0000,
};

/* 80CF8598-80CF85A4 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80CF85A4-80CF85B0 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80CF85B0-80CF85BC 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80CF85BC-80CF85C8 000C+00 s=5 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80CF85C8-80CF85D4 000C+00 s=5 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80CF85D4-80CF85EC 0018+00 s=3 e=0 z=0  None .data      __vt__17dEvLib_callback_c                                    */
SECTION_DATA void* __vt__17dEvLib_callback_c[6] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__17dEvLib_callback_cFv,
	(void*)eventStart__17dEvLib_callback_cFv,
	(void*)eventRun__17dEvLib_callback_cFv,
	(void*)eventEnd__17dEvLib_callback_cFv,
};

/* 80CF85EC-80CF8630 0044+00 s=2 e=0 z=0  None .data      __vt__14daObjSwLight_c                                       */
SECTION_DATA void* __vt__14daObjSwLight_c[17] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__14daObjSwLight_cFv,
	(void*)Create__14daObjSwLight_cFv,
	(void*)Execute__14daObjSwLight_cFPPA3_A4_f,
	(void*)Draw__14daObjSwLight_cFv,
	(void*)Delete__14daObjSwLight_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80CF8390,
	(void*)eventStart__17dEvLib_callback_cFv,
	(void*)eventRun__17dEvLib_callback_cFv,
	(void*)eventEnd__17dEvLib_callback_cFv,
	(void*)__dt__14daObjSwLight_cFv,
};

/* 80CF7BF0-80CF7D8C 019C+00 s=1 e=0 z=0  None .text      daObjSwLight_create1st__FP14daObjSwLight_c                   */
//	80CF7C00: 803621DC (_savegpr_29)
//	80CF7C20: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80CF7C24: 80CF85D4 (__vt__17dEvLib_callback_c)
//	80CF7C28: 80CF85D4 (__vt__17dEvLib_callback_c)
//	80CF7C3C: 80CF85EC (__vt__14daObjSwLight_c)
//	80CF7C40: 80CF85EC (__vt__14daObjSwLight_c)
//	80CF7C50: 803C3728 (__vt__9cCcD_Stts)
//	80CF7C54: 803C3728 (__vt__9cCcD_Stts)
//	80CF7C60: 80083760 (__ct__10dCcD_GSttsFv)
//	80CF7C64: 803AC2E4 (__vt__9dCcD_Stts)
//	80CF7C68: 803AC2E4 (__vt__9dCcD_Stts)
//	80CF7C80: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80CF7C84: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF7C88: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF7C90: 80CF85C8 (__vt__8cM3dGAab)
//	80CF7C94: 80CF85C8 (__vt__8cM3dGAab)
//	80CF7C9C: 80CF85BC (__vt__8cM3dGSph)
//	80CF7CA0: 80CF85BC (__vt__8cM3dGSph)
//	80CF7CA8: 803C3540 (__vt__12cCcD_SphAttr)
//	80CF7CAC: 803C3540 (__vt__12cCcD_SphAttr)
//	80CF7CBC: 803ABFC0 (__vt__8dCcD_Sph)
//	80CF7CC0: 803ABFC0 (__vt__8dCcD_Sph)
//	80CF7CDC: 80CF7DD4 (__ct__8dCcD_SphFv)
//	80CF7CE0: 80CF7DD4 (__ct__8dCcD_SphFv)
//	80CF7CE4: 80CF7E58 (__dt__8dCcD_SphFv)
//	80CF7CE8: 80CF7E58 (__dt__8dCcD_SphFv)
//	80CF7CF4: 80361D60 (__construct_array)
//	80CF7D00: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80CF7D04: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF7D08: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF7D10: 80CF85C8 (__vt__8cM3dGAab)
//	80CF7D14: 80CF85C8 (__vt__8cM3dGAab)
//	80CF7D1C: 80CF85B0 (__vt__8cM3dGCyl)
//	80CF7D20: 80CF85B0 (__vt__8cM3dGCyl)
//	80CF7D28: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CF7D2C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CF7D3C: 803AC050 (__vt__8dCcD_Cyl)
//	80CF7D40: 803AC050 (__vt__8dCcD_Cyl)
//	80CF7D5C: 802BE844 (__ct__16Z2SoundObjSimpleFv)
//	80CF7D70: 80CF7260 (create1st__14daObjSwLight_cFv)
//	80CF7D78: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
asm static void daObjSwLight_create1st(daObjSwLight_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/daObjSwLight_create1st__FP14daObjSwLight_c.s"
}
#pragma pop


/* 80CF7D8C-80CF7DD4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80CF7DA4: 80CF85B0 (__vt__8cM3dGCyl)
//	80CF7DA8: 80CF85B0 (__vt__8cM3dGCyl)
//	80CF7DB8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80CF7DD4-80CF7E58 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_SphFv                                            */
//	80CF7DE8: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80CF7DEC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF7DF0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF7DF8: 80CF85C8 (__vt__8cM3dGAab)
//	80CF7DFC: 80CF85C8 (__vt__8cM3dGAab)
//	80CF7E04: 80CF85BC (__vt__8cM3dGSph)
//	80CF7E08: 80CF85BC (__vt__8cM3dGSph)
//	80CF7E10: 803C3540 (__vt__12cCcD_SphAttr)
//	80CF7E14: 803C3540 (__vt__12cCcD_SphAttr)
//	80CF7E24: 803ABFC0 (__vt__8dCcD_Sph)
//	80CF7E28: 803ABFC0 (__vt__8dCcD_Sph)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/__ct__8dCcD_SphFv.s"
}
#pragma pop


/* 80CF7E58-80CF7F24 00CC+00 s=2 e=0 z=0  None .text      __dt__8dCcD_SphFv                                            */
//	80CF7E78: 803ABFC0 (__vt__8dCcD_Sph)
//	80CF7E7C: 803ABFC0 (__vt__8dCcD_Sph)
//	80CF7E9C: 803C3540 (__vt__12cCcD_SphAttr)
//	80CF7EA0: 803C3540 (__vt__12cCcD_SphAttr)
//	80CF7EB8: 80CF85BC (__vt__8cM3dGSph)
//	80CF7EBC: 80CF85BC (__vt__8cM3dGSph)
//	80CF7ECC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF7ED0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF7EE0: 80CF85C8 (__vt__8cM3dGAab)
//	80CF7EE4: 80CF85C8 (__vt__8cM3dGAab)
//	80CF7EF4: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80CF7F04: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::~dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/__dt__8dCcD_SphFv.s"
}
#pragma pop


/* 80CF7F24-80CF7F6C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80CF7F3C: 80CF85BC (__vt__8cM3dGSph)
//	80CF7F40: 80CF85BC (__vt__8cM3dGSph)
//	80CF7F50: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80CF7F6C-80CF7FB4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80CF7F84: 80CF85C8 (__vt__8cM3dGAab)
//	80CF7F88: 80CF85C8 (__vt__8cM3dGAab)
//	80CF7F98: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80CF7FB4-80CF8010 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80CF7FCC: 80CF85A4 (__vt__10dCcD_GStts)
//	80CF7FD0: 80CF85A4 (__vt__10dCcD_GStts)
//	80CF7FDC: 80CF8598 (__vt__10cCcD_GStts)
//	80CF7FE0: 80CF8598 (__vt__10cCcD_GStts)
//	80CF7FF4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80CF8010-80CF8030 0020+00 s=1 e=0 z=0  None .text      daObjSwLight_MoveBGDelete__FP14daObjSwLight_c                */
//	80CF801C: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
asm static void daObjSwLight_MoveBGDelete(daObjSwLight_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/daObjSwLight_MoveBGDelete__FP14daObjSwLight_c.s"
}
#pragma pop


/* 80CF8030-80CF8050 0020+00 s=1 e=0 z=0  None .text      daObjSwLight_MoveBGExecute__FP14daObjSwLight_c               */
//	80CF803C: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
asm static void daObjSwLight_MoveBGExecute(daObjSwLight_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/daObjSwLight_MoveBGExecute__FP14daObjSwLight_c.s"
}
#pragma pop


/* 80CF8050-80CF807C 002C+00 s=1 e=0 z=0  None .text      daObjSwLight_MoveBGDraw__FP14daObjSwLight_c                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjSwLight_c* False
// 	 daObjSwLight_c False
asm static void daObjSwLight_MoveBGDraw(daObjSwLight_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/daObjSwLight_MoveBGDraw__FP14daObjSwLight_c.s"
}
#pragma pop


/* 80CF807C-80CF80C4 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80CF8094: 80CF8598 (__vt__10cCcD_GStts)
//	80CF8098: 80CF8598 (__vt__10cCcD_GStts)
//	80CF80A8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80CF80C4-80CF810C 0048+00 s=1 e=0 z=0  None .text      __dt__17dEvLib_callback_cFv                                  */
//	80CF80DC: 80CF85D4 (__vt__17dEvLib_callback_c)
//	80CF80E0: 80CF85D4 (__vt__17dEvLib_callback_c)
//	80CF80F0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dEvLib_callback_c::~dEvLib_callback_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/__dt__17dEvLib_callback_cFv.s"
}
#pragma pop


/* 80CF810C-80CF8114 0008+00 s=2 e=0 z=0  None .text      eventStart__17dEvLib_callback_cFv                            */
// True False
//  bool False
bool dEvLib_callback_c::eventStart() {
	return true;
}


/* 80CF8114-80CF811C 0008+00 s=2 e=0 z=0  None .text      eventRun__17dEvLib_callback_cFv                              */
// True False
//  bool False
bool dEvLib_callback_c::eventRun() {
	return true;
}


/* 80CF811C-80CF8124 0008+00 s=2 e=0 z=0  None .text      eventEnd__17dEvLib_callback_cFv                              */
// True False
//  bool False
bool dEvLib_callback_c::eventEnd() {
	return true;
}


/* 80CF8124-80CF8358 0234+00 s=2 e=0 z=0  None .text      __dt__14daObjSwLight_cFv                                     */
//	80CF8144: 80CF85EC (__vt__14daObjSwLight_c)
//	80CF8148: 80CF85EC (__vt__14daObjSwLight_c)
//	80CF8160: 803CAD10 (__vt__16Z2SoundObjSimple)
//	80CF8164: 803CAD10 (__vt__16Z2SoundObjSimple)
//	80CF8174: 802BDF48 (__dt__14Z2SoundObjBaseFv)
//	80CF8180: 803AC050 (__vt__8dCcD_Cyl)
//	80CF8184: 803AC050 (__vt__8dCcD_Cyl)
//	80CF81A4: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CF81A8: 803C35A4 (__vt__12cCcD_CylAttr)
//	80CF81C0: 80CF85B0 (__vt__8cM3dGCyl)
//	80CF81C4: 80CF85B0 (__vt__8cM3dGCyl)
//	80CF81D4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF81D8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF81E8: 80CF85C8 (__vt__8cM3dGAab)
//	80CF81EC: 80CF85C8 (__vt__8cM3dGAab)
//	80CF81FC: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80CF8204: 80CF7E58 (__dt__8dCcD_SphFv)
//	80CF8208: 80CF7E58 (__dt__8dCcD_SphFv)
//	80CF8214: 80361CE8 (__destroy_arr)
//	80CF8220: 803ABFC0 (__vt__8dCcD_Sph)
//	80CF8224: 803ABFC0 (__vt__8dCcD_Sph)
//	80CF8244: 803C3540 (__vt__12cCcD_SphAttr)
//	80CF8248: 803C3540 (__vt__12cCcD_SphAttr)
//	80CF8260: 80CF85BC (__vt__8cM3dGSph)
//	80CF8264: 80CF85BC (__vt__8cM3dGSph)
//	80CF8274: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF8278: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80CF8288: 80CF85C8 (__vt__8cM3dGAab)
//	80CF828C: 80CF85C8 (__vt__8cM3dGAab)
//	80CF829C: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80CF82A8: 803AC2E4 (__vt__9dCcD_Stts)
//	80CF82AC: 803AC2E4 (__vt__9dCcD_Stts)
//	80CF82C4: 80CF85A4 (__vt__10dCcD_GStts)
//	80CF82C8: 80CF85A4 (__vt__10dCcD_GStts)
//	80CF82D8: 80CF8598 (__vt__10cCcD_GStts)
//	80CF82DC: 80CF8598 (__vt__10cCcD_GStts)
//	80CF82EC: 803C3728 (__vt__9cCcD_Stts)
//	80CF82F0: 803C3728 (__vt__9cCcD_Stts)
//	80CF8300: 80CF85D4 (__vt__17dEvLib_callback_c)
//	80CF8304: 80CF85D4 (__vt__17dEvLib_callback_c)
//	80CF8314: 803AB9A0 (__vt__16dBgS_MoveBgActor)
//	80CF8318: 803AB9A0 (__vt__16dBgS_MoveBgActor)
//	80CF8328: 80018C8C (__dt__10fopAc_ac_cFv)
//	80CF8338: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObjSwLight_c::~daObjSwLight_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/__dt__14daObjSwLight_cFv.s"
}
#pragma pop


/* 80CF8358-80CF8374 001C+00 s=1 e=0 z=0  None .text      cLib_calcTimer<Us>__FPUs                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  u16* False
// 	 u16 False
asm void cLib_calcTimer__template0(u16* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/func_80CF8358.s"
}
#pragma pop


/* 80CF8374-80CF8390 001C+00 s=1 e=0 z=0  None .text      cLib_calcTimer<Uc>__FPUc                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  u8* False
// 	 u8 False
asm void cLib_calcTimer__template1(u8* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/func_80CF8374.s"
}
#pragma pop


/* 80CF8390-80CF8398 0008+00 s=1 e=0 z=0  None .text      @1440@__dt__14daObjSwLight_cFv                               */
//	80CF8394: 80CF8124 (__dt__14daObjSwLight_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80CF8390() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swLight/d_a_obj_swLight/func_80CF8390.s"
}
#pragma pop


