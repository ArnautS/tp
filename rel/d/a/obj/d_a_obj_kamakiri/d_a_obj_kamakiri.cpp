// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_kamakiri
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CE70 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void scaleM(cXyz const&);
	/* 8000CF0C */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotS(csXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct J3DAnmTextureSRTKey {
};

struct J3DMaterialTable {
};

struct mDoExt_btkAnm {
	/* 8000D63C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTevRegKey {
};

struct mDoExt_brkAnm {
	/* 8000D70C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
};

struct daPy_boomerangMove_c {
	/* 8015E5B0 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void initOffset(cXyz const*);
	/* 8015E654 */ // False False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
void posMove(cXyz*, s16*, fopAc_ac_c*, s16);
	/* 8015E87C */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void bgCheckAfterOffset(cXyz const*);
};

struct daObj_KamHIO_c {
	/* 80C3518C */ // True False
daObj_KamHIO_c();
	/* 80C38360 */ // True False
~daObj_KamHIO_c();
};

struct daObjKAM_c {
	/* 80C351BC */ // True False
void InitCcSph();
	/* 80C35228 */ // True False
void SetCcSph();
	/* 80C352A0 */ // True False
void CreateHeap();
	/* 80C35684 */ // True False
void ShopWaitAction();
	/* 80C357EC */ // True False
void WaitAction();
	/* 80C35970 */ // True False
void WallCheck();
	/* 80C35BE4 */ // True False
void SpeedSet();
	/* 80C35CF0 */ // True False
void WallWalk();
	/* 80C36138 */ // True False
void WalkAction();
	/* 80C36338 */ // True False
void MoveAction();
	/* 80C36B20 */ // True False
void Action();
	/* 80C36BE4 */ // True False
void ShopAction();
	/* 80C36CA0 */ // True False
void Insect_Release();
	/* 80C36CB8 */ // True False
void Z_BufferChk();
	/* 80C36E34 */ // True False
void ParticleSet();
	/* 80C36F58 */ // True False
void BoomChk();
	/* 80C37324 */ // True False
void ObjHit();
	/* 80C374AC */ // True False
void Execute();
	/* 80C37724 */ // True False
void Delete();
	/* 80C3778C */ // True False
void setBaseMtx();
	/* 80C378F4 */ // True False
void CreateChk();
	/* 80C37AA0 */ // True False
void create();
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dMenu_Insect_c {
	/* 801D9F3C */ // False False
//  u8 False
void isCatchNotGiveInsect(u8);
};

struct dInsect_c {
	/* 8015E010 */ // False False
dInsect_c();
	/* 8015E078 */ // False False
void Insect_GetDemoMain();
};

struct dDlst_peekZ_c {
	/* 80056018 */ // False False
//  s16 False
//  s16 False
//  u32* False
// 	 u32 False
void newData(s16, s16, u32*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084548 */ // False False
void GetTgHitGObj();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80C38258 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80C382C8 */ // True False
~cM3dGSph();
};

struct cM3dGPla {
	/* 80C35B9C */ // True False
~cM3dGPla();
};

struct cM3dGAab {
	/* 80C38310 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cBgS_PolyInfo {
};

struct cBgS_LinChk {
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct _GXTexObj {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80C355F8 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjKAM_Create(fopAc_ac_c*);
// True False
//  daObjKAM_c* False
// 	 daObjKAM_c False
static void daObjKAM_Delete(daObjKAM_c*);
// True False
//  daObjKAM_c* False
// 	 daObjKAM_c False
static void daObjKAM_Draw(daObjKAM_c*);
// True False
//  daObjKAM_c* False
// 	 daObjKAM_c False
static void daObjKAM_Execute(daObjKAM_c*);
// True False
//  bool False
//  daObjKAM_c* False
// 	 daObjKAM_c False
static bool daObjKAM_IsDelete(daObjKAM_c*);

// True False
extern "C" void __ct__14daObj_KamHIO_cFv();
// True False
extern "C" void InitCcSph__10daObjKAM_cFv();
// True False
extern "C" void SetCcSph__10daObjKAM_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void CreateHeap__10daObjKAM_cFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjKAM_Create__FP10fopAc_ac_c();
// True False
//  daObjKAM_c* False
// 	 daObjKAM_c False
extern "C" static void daObjKAM_Delete__FP10daObjKAM_c();
// True False
extern "C" void ShopWaitAction__10daObjKAM_cFv();
// True False
extern "C" void WaitAction__10daObjKAM_cFv();
// True False
extern "C" void WallCheck__10daObjKAM_cFv();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
extern "C" void SpeedSet__10daObjKAM_cFv();
// True False
extern "C" void WallWalk__10daObjKAM_cFv();
// True False
extern "C" void WalkAction__10daObjKAM_cFv();
// True False
extern "C" void MoveAction__10daObjKAM_cFv();
// True False
extern "C" void Action__10daObjKAM_cFv();
// True False
extern "C" void ShopAction__10daObjKAM_cFv();
// True False
extern "C" void Insect_Release__10daObjKAM_cFv();
// True False
extern "C" void Z_BufferChk__10daObjKAM_cFv();
// True False
extern "C" void ParticleSet__10daObjKAM_cFv();
// True False
extern "C" void BoomChk__10daObjKAM_cFv();
// True False
extern "C" void ObjHit__10daObjKAM_cFv();
// True False
extern "C" void Execute__10daObjKAM_cFv();
// True False
extern "C" void Delete__10daObjKAM_cFv();
// True False
extern "C" void setBaseMtx__10daObjKAM_cFv();
// True False
//  daObjKAM_c* False
// 	 daObjKAM_c False
extern "C" static void daObjKAM_Draw__FP10daObjKAM_c();
// True False
//  daObjKAM_c* False
// 	 daObjKAM_c False
extern "C" static void daObjKAM_Execute__FP10daObjKAM_c();
// True False
extern "C" void CreateChk__10daObjKAM_cFv();
// True False
extern "C" void create__10daObjKAM_cFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
//  bool False
//  daObjKAM_c* False
// 	 daObjKAM_c False
extern "C" static bool daObjKAM_IsDelete__FP10daObjKAM_c();
// True False
extern "C" void __dt__14daObj_KamHIO_cFv();
// False False
extern "C" void __sinit_d_a_obj_kamakiri_cpp();
// True False
extern "C" static void func_80C383E4();
// True False
extern "C" static void func_80C383EC();
extern "C" extern u32 const lit_3933;
extern "C" extern u32 const lit_3934;
extern "C" extern u32 const lit_3935;
extern "C" extern u32 const lit_3936;
extern "C" extern u32 const lit_3960;
extern "C" extern u8 const lit_4013[8];
extern "C" extern u8 const lit_4014[8];
extern "C" extern u8 const lit_4015[8];
extern "C" extern u32 const lit_4039;
extern "C" extern u32 const lit_4040;
extern "C" extern u32 const lit_4041;
extern "C" extern u32 const lit_4042;
extern "C" extern u32 const lit_4143;
extern "C" extern u32 const lit_4144;
extern "C" extern u32 const lit_4145;
extern "C" extern u32 const lit_4146;
extern "C" extern u32 const lit_4324;
extern "C" extern u32 const lit_4325;
extern "C" extern u32 const lit_4326;
extern "C" extern u32 const lit_4327;
extern "C" extern u32 const lit_4328;
extern "C" extern u32 const lit_4437;
extern "C" extern u32 const lit_4484;
extern "C" extern u32 const lit_4485;
extern "C" extern u32 const lit_4486;
extern "C" extern u32 const lit_4693;
extern "C" extern u32 const lit_5032;
extern "C" extern u32 const lit_5033;
extern "C" extern u32 const lit_5034;
extern "C" extern u32 const lit_5035;
extern "C" extern u32 const lit_5036;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_Kam[12];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__10daObjKAM_c[3];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__14daObj_KamHIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
void mDoLib_project(Vec*, Vec*);
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
void mDoLib_pos2camera(Vec*, Vec*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setSimpleShadow(cXyz*, f32, f32, cBgS_PolyInfo&, s16, f32, _GXTexObj*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseAngleS(s16*, s16, s16);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_offsetPos(cXyz*, cXyz const*, s16, cXyz const*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void scaleM__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotS__14mDoMtx_stack_cFRC5csXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
extern "C" void mDoLib_project__FP3VecP3Vec();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
extern "C" void mDoLib_pos2camera__FP3VecP3Vec();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  s16 False
//  s16 False
//  u32* False
// 	 u32 False
extern "C" void newData__13dDlst_peekZ_cFssPUl();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitGObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
extern "C" void __ct__9dInsect_cFv();
// False False
extern "C" void Insect_GetDemoMain__9dInsect_cFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void initOffset__20daPy_boomerangMove_cFPC4cXyz();
// False False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
extern "C" void posMove__20daPy_boomerangMove_cFP4cXyzPsP10fopAc_ac_cs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  u8 False
extern "C" void isCatchNotGiveInsect__14dMenu_Insect_cFUc();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseAngleS__FPsss();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u32 __float_nan;
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80C38408-80C3840C 0004+00 s=13 e=0 z=0  None .rodata    @3775                                                        */
SECTION_RODATA static u32 const lit_3775 = 0x3FC00000;

/* 80C3840C-80C38410 0004+00 s=1 e=0 z=0  None .rodata    @3776                                                        */
SECTION_RODATA static u32 const lit_3776 = 0x3F99999A;

/* 80C3850C-80C3852C 0020+00 s=1 e=0 z=0  None .data      l_daObjKAM_Method                                            */
SECTION_DATA static void* l_daObjKAM_Method[8] = {
	(void*)daObjKAM_Create__FP10fopAc_ac_c,
	(void*)daObjKAM_Delete__FP10daObjKAM_c,
	(void*)daObjKAM_Execute__FP10daObjKAM_c,
	(void*)daObjKAM_IsDelete__FP10daObjKAM_c,
	(void*)daObjKAM_Draw__FP10daObjKAM_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80C3852C-80C3855C 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Kam                                            */
SECTION_DATA void* g_profile_Obj_Kam[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01450000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000A68,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01E20000,
	(void*)&l_daObjKAM_Method,
	(void*)0x000C0120,
	(void*)0x030E0000,
};

/* 80C3855C-80C38580 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C383EC,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80C383E4,
};

/* 80C38580-80C3858C 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80C3858C-80C38598 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80C38598-80C385A4 000C+00 s=1 e=0 z=0  None .data      __vt__10daObjKAM_c                                           */
SECTION_DATA void* __vt__10daObjKAM_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)Insect_Release__10daObjKAM_cFv,
};

/* 80C385A4-80C385B0 000C+00 s=5 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 80C385B0-80C385BC 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80C385BC-80C385C8 000C+00 s=2 e=0 z=0  None .data      __vt__14daObj_KamHIO_c                                       */
SECTION_DATA void* __vt__14daObj_KamHIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14daObj_KamHIO_cFv,
};

/* 80C3518C-80C351BC 0030+00 s=1 e=0 z=0  None .text      __ct__14daObj_KamHIO_cFv                                     */
//	80C3518C: 80C385BC (__vt__14daObj_KamHIO_c)
//	80C35190: 80C385BC (__vt__14daObj_KamHIO_c)
//	80C351A0: 80C38408 (lit_3775)
//	80C351A4: 80C38408 (lit_3775)
//	80C351AC: 80C3840C (lit_3776)
//	80C351B0: 80C3840C (lit_3776)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_KamHIO_c::daObj_KamHIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/__ct__14daObj_KamHIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C38410-80C38450 0040+00 s=1 e=0 z=0  None .rodata    ccSphSrc$3780                                                */
SECTION_RODATA static u8 const ccSphSrc[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x40, 0x02, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 80C351BC-80C35228 006C+00 s=1 e=0 z=0  None .text      InitCcSph__10daObjKAM_cFv                                    */
//	80C351E0: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80C351E8: 80C38410 (ccSphSrc)
//	80C351EC: 80C38410 (ccSphSrc)
//	80C351F0: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80C35204: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::InitCcSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/InitCcSph__10daObjKAM_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C38450-80C38454 0004+00 s=1 e=0 z=0  None .rodata    @3789                                                        */
SECTION_RODATA static u32 const lit_3789 = 0x41A00000;

/* 80C35228-80C35280 0058+00 s=1 e=0 z=0  None .text      SetCcSph__10daObjKAM_cFv                                     */
//	80C35244: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80C3524C: 80C38450 (lit_3789)
//	80C35250: 80C38450 (lit_3789)
//	80C35254: 8026F708 (SetR__8cM3dGSphFf)
//	80C35258: 804061C0 (g_dComIfG_gameInfo)
//	80C3525C: 804061C0 (g_dComIfG_gameInfo)
//	80C35268: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::SetCcSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/SetCcSph__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C35280-80C352A0 0020+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	80C3528C: 80C352A0 (CreateHeap__10daObjKAM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C38454-80C38458 0004+00 s=2 e=0 z=0  None .rodata    @3895                                                        */
SECTION_RODATA static u32 const lit_3895 = 0x3F800000;

/* 80C38458-80C3845C 0004+00 s=1 e=0 z=0  None .rodata    @3932                                                        */
SECTION_RODATA static u8 const lit_3932[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80C3845C-80C38460 0004+00 s=0 e=0 z=0  None .rodata    @3933                                                        */
SECTION_RODATA u32 const lit_3933 = 0x40A00000;

/* 80C38460-80C38464 0004+00 s=0 e=0 z=0  None .rodata    @3934                                                        */
SECTION_RODATA u32 const lit_3934 = 0xBF800000;

/* 80C38464-80C38468 0004+00 s=0 e=0 z=0  None .rodata    @3935                                                        */
SECTION_RODATA u32 const lit_3935 = 0x42480000;

/* 80C38468-80C3846C 0004+00 s=0 e=0 z=0  None .rodata    @3936                                                        */
SECTION_RODATA u32 const lit_3936 = 0x42C80000;

/* 80C3846C-80C38470 0004+00 s=0 e=0 z=0  None .rodata    @3960                                                        */
SECTION_RODATA u32 const lit_3960 = 0x44BB8000;

/* 80C38470-80C38478 0008+00 s=0 e=0 z=0  None .rodata    @4013                                                        */
SECTION_RODATA u8 const lit_4013[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C38478-80C38480 0008+00 s=0 e=0 z=0  None .rodata    @4014                                                        */
SECTION_RODATA u8 const lit_4014[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C38480-80C38488 0008+00 s=0 e=0 z=0  None .rodata    @4015                                                        */
SECTION_RODATA u8 const lit_4015[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C38488-80C3848C 0004+00 s=0 e=0 z=0  None .rodata    @4039                                                        */
SECTION_RODATA u32 const lit_4039 = 0x3ECCCCCD;

/* 80C3848C-80C38490 0004+00 s=0 e=0 z=0  None .rodata    @4040                                                        */
SECTION_RODATA u32 const lit_4040 = 0x41200000;

/* 80C38490-80C38494 0004+00 s=0 e=0 z=0  None .rodata    @4041                                                        */
SECTION_RODATA u32 const lit_4041 = 0x3DCCCCCD;

/* 80C38494-80C38498 0004+00 s=0 e=0 z=0  None .rodata    @4042                                                        */
SECTION_RODATA u32 const lit_4042 = 0x3F000000;

/* 80C38498-80C3849C 0004+00 s=0 e=0 z=0  None .rodata    @4143                                                        */
SECTION_RODATA u32 const lit_4143 = 0x40400000;

/* 80C3849C-80C384A0 0004+00 s=0 e=0 z=0  None .rodata    @4144                                                        */
SECTION_RODATA u32 const lit_4144 = 0xC2C80000;

/* 80C384A0-80C384A4 0004+00 s=0 e=0 z=0  None .rodata    @4145                                                        */
SECTION_RODATA u32 const lit_4145 = 0x42200000;

/* 80C384A4-80C384A8 0004+00 s=0 e=0 z=0  None .rodata    @4146                                                        */
SECTION_RODATA u32 const lit_4146 = 0x3E99999A;

/* 80C384A8-80C384AC 0004+00 s=0 e=0 z=0  None .rodata    @4324                                                        */
SECTION_RODATA u32 const lit_4324 = 0x41F00000;

/* 80C384AC-80C384B0 0004+00 s=0 e=0 z=0  None .rodata    @4325                                                        */
SECTION_RODATA u32 const lit_4325 = 0x41000000;

/* 80C384B0-80C384B4 0004+00 s=0 e=0 z=0  None .rodata    @4326                                                        */
SECTION_RODATA u32 const lit_4326 = 0x43480000;

/* 80C384B4-80C384B8 0004+00 s=0 e=0 z=0  None .rodata    @4327                                                        */
SECTION_RODATA u32 const lit_4327 = 0x41300000;

/* 80C384B8-80C384BC 0004+00 s=0 e=0 z=0  None .rodata    @4328                                                        */
SECTION_RODATA u32 const lit_4328 = 0x44834000;

/* 80C384BC-80C384C0 0002+02 s=1 e=0 z=0  None .rodata    l_kam_itemno                                                 */
SECTION_RODATA static u16 const l_kam_itemno[1 + 1 /* padding */] = {
	0xCCCD,
	/* padding */
	0x0000,
};

/* 80C384C0-80C384C4 0004+00 s=0 e=0 z=0  None .rodata    @4437                                                        */
SECTION_RODATA u32 const lit_4437 = 0xC1100000;

/* 80C384C4-80C384C8 0004+00 s=0 e=0 z=0  None .rodata    @4484                                                        */
SECTION_RODATA u32 const lit_4484 = 0x44180000;

/* 80C384C8-80C384CC 0004+00 s=0 e=0 z=0  None .rodata    @4485                                                        */
SECTION_RODATA u32 const lit_4485 = 0x43E00000;

/* 80C384CC-80C384D0 0004+00 s=0 e=0 z=0  None .rodata    @4486                                                        */
SECTION_RODATA u32 const lit_4486 = 0x4B7FFFFF;

/* 80C384D0-80C384D8 0008+00 s=1 e=0 z=0  None .rodata    @4516                                                        */
SECTION_RODATA static u8 const lit_4516[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80C384D8-80C384DC 0004+00 s=0 e=0 z=0  None .rodata    @4693                                                        */
SECTION_RODATA u32 const lit_4693 = 0x461C4000;

/* 80C384DC-80C384E0 0004+00 s=1 e=0 z=0  None .rodata    @4757                                                        */
SECTION_RODATA static u32 const lit_4757 = 0x41700000;

/* 80C384E0-80C384E4 0004+00 s=1 e=0 z=0  None .rodata    @4758                                                        */
SECTION_RODATA static u32 const lit_4758 = 0xBF19999A;

/* 80C384E4-80C384E8 0004+00 s=1 e=0 z=0  None .rodata    l_musiya_num                                                 */
SECTION_RODATA static u32 const l_musiya_num = 0x019D019E;

/* 80C384E8-80C384EC 0004+00 s=0 e=0 z=0  None .rodata    @5032                                                        */
SECTION_RODATA u32 const lit_5032 = 0x3F8CCCCD;

/* 80C384EC-80C384F0 0004+00 s=0 e=0 z=0  None .rodata    @5033                                                        */
SECTION_RODATA u32 const lit_5033 = 0x43FA0000;

/* 80C384F0-80C384F4 0004+00 s=0 e=0 z=0  None .rodata    @5034                                                        */
SECTION_RODATA u32 const lit_5034 = 0xC3480000;

/* 80C384F4-80C384F8 0004+00 s=0 e=0 z=0  None .rodata    @5035                                                        */
SECTION_RODATA u32 const lit_5035 = 0xC47A0000;

/* 80C384F8-80C384FC 0004+00 s=0 e=0 z=0  None .rodata    @5036                                                        */
SECTION_RODATA u32 const lit_5036 = 0xC2480000;

/* 80C384FC-80C3850A 000E+00 s=10 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80C384FC = "I_Kam";
SECTION_DEAD char const* const stringBase_80C38502 = "R_SP160";
#pragma pop

/* 80C352A0-80C355F8 0358+00 s=1 e=0 z=0  None .text      CreateHeap__10daObjKAM_cFv                                   */
//	80C352B0: 803621DC (_savegpr_29)
//	80C352C4: 80C384FC (stringBase0)
//	80C352C8: 80C384FC (stringBase0)
//	80C352D0: 804061C0 (g_dComIfG_gameInfo)
//	80C352D4: 804061C0 (g_dComIfG_gameInfo)
//	80C352E4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C352F0: 80C384FC (stringBase0)
//	80C352F4: 80C384FC (stringBase0)
//	80C352FC: 804061C0 (g_dComIfG_gameInfo)
//	80C35300: 804061C0 (g_dComIfG_gameInfo)
//	80C35310: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C3531C: 802CEC4C (__nw__FUl)
//	80C35328: 80C384FC (stringBase0)
//	80C3532C: 80C384FC (stringBase0)
//	80C35334: 804061C0 (g_dComIfG_gameInfo)
//	80C35338: 804061C0 (g_dComIfG_gameInfo)
//	80C35348: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C35380: 80C38454 (lit_3895)
//	80C35384: 80C38454 (lit_3895)
//	80C35390: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80C353C0: 802CEC4C (__nw__FUl)
//	80C353CC: 80C385B0 (__vt__12J3DFrameCtrl)
//	80C353D0: 80C385B0 (__vt__12J3DFrameCtrl)
//	80C353DC: 803283FC (init__12J3DFrameCtrlFs)
//	80C3540C: 80C384FC (stringBase0)
//	80C35410: 80C384FC (stringBase0)
//	80C35418: 804061C0 (g_dComIfG_gameInfo)
//	80C3541C: 804061C0 (g_dComIfG_gameInfo)
//	80C3542C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C35448: 80C38454 (lit_3895)
//	80C3544C: 80C38454 (lit_3895)
//	80C35458: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80C3546C: 80C384FC (stringBase0)
//	80C35470: 80C384FC (stringBase0)
//	80C35478: 804061C0 (g_dComIfG_gameInfo)
//	80C3547C: 804061C0 (g_dComIfG_gameInfo)
//	80C3548C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C354A8: 80C38454 (lit_3895)
//	80C354AC: 80C38454 (lit_3895)
//	80C354B8: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80C354D0: 802CEC4C (__nw__FUl)
//	80C354DC: 80C385B0 (__vt__12J3DFrameCtrl)
//	80C354E0: 80C385B0 (__vt__12J3DFrameCtrl)
//	80C354EC: 803283FC (init__12J3DFrameCtrlFs)
//	80C3551C: 80C384FC (stringBase0)
//	80C35520: 80C384FC (stringBase0)
//	80C35528: 804061C0 (g_dComIfG_gameInfo)
//	80C3552C: 804061C0 (g_dComIfG_gameInfo)
//	80C3553C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C35558: 80C38454 (lit_3895)
//	80C3555C: 80C38454 (lit_3895)
//	80C35568: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80C3557C: 80C384FC (stringBase0)
//	80C35580: 80C384FC (stringBase0)
//	80C35588: 804061C0 (g_dComIfG_gameInfo)
//	80C3558C: 804061C0 (g_dComIfG_gameInfo)
//	80C3559C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C355B8: 80C38454 (lit_3895)
//	80C355BC: 80C38454 (lit_3895)
//	80C355C8: 8000D63C (init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss)
//	80C355E4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/CreateHeap__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C355F8-80C35640 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80C35610: 80C385B0 (__vt__12J3DFrameCtrl)
//	80C35614: 80C385B0 (__vt__12J3DFrameCtrl)
//	80C35624: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80C35640-80C35660 0020+00 s=1 e=0 z=0  None .text      daObjKAM_Create__FP10fopAc_ac_c                              */
//	80C3564C: 80C37AA0 (create__10daObjKAM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjKAM_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/daObjKAM_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80C35660-80C35684 0024+00 s=1 e=0 z=0  None .text      daObjKAM_Delete__FP10daObjKAM_c                              */
//	80C3566C: 80C37724 (Delete__10daObjKAM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjKAM_c* False
// 	 daObjKAM_c False
asm static void daObjKAM_Delete(daObjKAM_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/daObjKAM_Delete__FP10daObjKAM_c.s"
}
#pragma pop


/* 80C35684-80C357EC 0168+00 s=1 e=0 z=0  None .text      ShopWaitAction__10daObjKAM_cFv                               */
//	80C3569C: 80C38408 (lit_3775)
//	80C356A0: 80C38408 (lit_3775)
//	80C356C8: 80C384FC (stringBase0)
//	80C356CC: 80C384FC (stringBase0)
//	80C356D4: 804061C0 (g_dComIfG_gameInfo)
//	80C356D8: 804061C0 (g_dComIfG_gameInfo)
//	80C356E8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C35708: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C3571C: 80267954 (cM_rndF__Ff)
//	80C3576C: 80267954 (cM_rndF__Ff)
//	80C357B8: 80267954 (cM_rndF__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::ShopWaitAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/ShopWaitAction__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C357EC-80C35970 0184+00 s=1 e=0 z=0  None .text      WaitAction__10daObjKAM_cFv                                   */
//	80C35804: 80C38408 (lit_3775)
//	80C35808: 80C38408 (lit_3775)
//	80C35830: 80C384FC (stringBase0)
//	80C35834: 80C384FC (stringBase0)
//	80C3583C: 804061C0 (g_dComIfG_gameInfo)
//	80C35840: 804061C0 (g_dComIfG_gameInfo)
//	80C35850: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C35870: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C35884: 80267954 (cM_rndF__Ff)
//	80C358A4: 804061C0 (g_dComIfG_gameInfo)
//	80C358A8: 804061C0 (g_dComIfG_gameInfo)
//	80C358B0: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80C358F0: 80267954 (cM_rndF__Ff)
//	80C3593C: 80267954 (cM_rndF__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::WaitAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/WaitAction__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C35970-80C35B9C 022C+00 s=1 e=0 z=0  None .text      WallCheck__10daObjKAM_cFv                                    */
//	80C35980: 803621DC (_savegpr_29)
//	80C35988: 80C38408 (lit_3775)
//	80C3598C: 80C38408 (lit_3775)
//	80C35994: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C3599C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C359B0: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C359B4: 804061C0 (g_dComIfG_gameInfo)
//	80C359B8: 804061C0 (g_dComIfG_gameInfo)
//	80C359C8: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C359D4: 80C385A4 (__vt__8cM3dGPla)
//	80C359D8: 80C385A4 (__vt__8cM3dGPla)
//	80C359EC: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C35A34: 8034739C (PSVECSquareDistance)
//	80C35AA4: 80450AE0 (__float_nan)
//	80C35AA8: 80450AE0 (__float_nan)
//	80C35B14: 80450AE0 (__float_nan)
//	80C35B18: 80450AE0 (__float_nan)
//	80C35B28: 80267674 (cM_atan2s__Fff)
//	80C35B3C: 80267674 (cM_atan2s__Fff)
//	80C35B4C: 80267674 (cM_atan2s__Fff)
//	80C35B54: 80C385A4 (__vt__8cM3dGPla)
//	80C35B58: 80C385A4 (__vt__8cM3dGPla)
//	80C35B68: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C35B7C: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C35B88: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::WallCheck() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/WallCheck__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C35B9C-80C35BE4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	80C35BB4: 80C385A4 (__vt__8cM3dGPla)
//	80C35BB8: 80C385A4 (__vt__8cM3dGPla)
//	80C35BC8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 80C35BE4-80C35CF0 010C+00 s=1 e=0 z=0  None .text      SpeedSet__10daObjKAM_cFv                                     */
//	80C35BFC: 80C38408 (lit_3775)
//	80C35C00: 80C38408 (lit_3775)
//	80C35C3C: 8000CF0C (ZXYrotS__14mDoMtx_stack_cFRC5csXyz)
//	80C35C40: 803DD470 (now__14mDoMtx_stack_c)
//	80C35C44: 803DD470 (now__14mDoMtx_stack_c)
//	80C35C4C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C35C50: 803DD470 (now__14mDoMtx_stack_c)
//	80C35C54: 803DD470 (now__14mDoMtx_stack_c)
//	80C35C60: 80346D6C (PSMTXMultVec)
//	80C35CA4: 8026FA3C (cLib_addCalc2__FPffff)
//	80C35CB8: 8026FA3C (cLib_addCalc2__FPffff)
//	80C35CCC: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::SpeedSet() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/SpeedSet__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C35CF0-80C36138 0448+00 s=1 e=0 z=0  None .text      WallWalk__10daObjKAM_cFv                                     */
//	80C35D08: 803621DC (_savegpr_29)
//	80C35D10: 80C38408 (lit_3775)
//	80C35D14: 80C38408 (lit_3775)
//	80C35D60: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C35D68: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C35D70: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C35D78: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C35D80: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80C35D84: 803DD470 (now__14mDoMtx_stack_c)
//	80C35D88: 803DD470 (now__14mDoMtx_stack_c)
//	80C35D90: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80C35D94: 803DD470 (now__14mDoMtx_stack_c)
//	80C35D98: 803DD470 (now__14mDoMtx_stack_c)
//	80C35DA4: 80346D6C (PSMTXMultVec)
//	80C35DA8: 803DD470 (now__14mDoMtx_stack_c)
//	80C35DAC: 803DD470 (now__14mDoMtx_stack_c)
//	80C35DB8: 80346D6C (PSMTXMultVec)
//	80C35DCC: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C35DD0: 804061C0 (g_dComIfG_gameInfo)
//	80C35DD4: 804061C0 (g_dComIfG_gameInfo)
//	80C35DE4: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C35DF8: 80C385A4 (__vt__8cM3dGPla)
//	80C35DFC: 80C385A4 (__vt__8cM3dGPla)
//	80C35E10: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C35E1C: 80267674 (cM_atan2s__Fff)
//	80C35E50: 8034739C (PSVECSquareDistance)
//	80C35EC0: 80450AE0 (__float_nan)
//	80C35EC4: 80450AE0 (__float_nan)
//	80C35F30: 80450AE0 (__float_nan)
//	80C35F34: 80450AE0 (__float_nan)
//	80C35F7C: 8034739C (PSVECSquareDistance)
//	80C35FEC: 80450AE0 (__float_nan)
//	80C35FF0: 80450AE0 (__float_nan)
//	80C3605C: 80450AE0 (__float_nan)
//	80C36060: 80450AE0 (__float_nan)
//	80C3609C: 80267674 (cM_atan2s__Fff)
//	80C360B0: 80267674 (cM_atan2s__Fff)
//	80C360C8: 80C385A4 (__vt__8cM3dGPla)
//	80C360CC: 80C385A4 (__vt__8cM3dGPla)
//	80C360F4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C36108: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C36114: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C36124: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::WallWalk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/WallWalk__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C36138-80C36338 0200+00 s=2 e=0 z=0  None .text      WalkAction__10daObjKAM_cFv                                   */
//	80C36158: 80C38408 (lit_3775)
//	80C3615C: 80C38408 (lit_3775)
//	80C361B4: 80C384FC (stringBase0)
//	80C361B8: 80C384FC (stringBase0)
//	80C361C0: 804061C0 (g_dComIfG_gameInfo)
//	80C361C4: 804061C0 (g_dComIfG_gameInfo)
//	80C361D4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C361F4: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C3621C: 80267954 (cM_rndF__Ff)
//	80C3624C: 8026798C (cM_rndFX__Ff)
//	80C36258: 8026798C (cM_rndFX__Ff)
//	80C36274: 80267674 (cM_atan2s__Fff)
//	80C36280: 80267954 (cM_rndF__Ff)
//	80C362AC: 80267954 (cM_rndF__Ff)
//	80C362F4: 80267954 (cM_rndF__Ff)
//	80C36314: 80C35CF0 (WallWalk__10daObjKAM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::WalkAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/WalkAction__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C36338-80C36B20 07E8+00 s=2 e=0 z=0  None .text      MoveAction__10daObjKAM_cFv                                   */
//	80C36348: 803621D8 (_savegpr_28)
//	80C36350: 80C38408 (lit_3775)
//	80C36354: 80C38408 (lit_3775)
//	80C363A8: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C363AC: 804061C0 (g_dComIfG_gameInfo)
//	80C363B0: 804061C0 (g_dComIfG_gameInfo)
//	80C363BC: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C363E8: 80C384FC (stringBase0)
//	80C363EC: 80C384FC (stringBase0)
//	80C363F4: 804061C0 (g_dComIfG_gameInfo)
//	80C363F8: 804061C0 (g_dComIfG_gameInfo)
//	80C36408: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C36428: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C36478: 8000CF0C (ZXYrotS__14mDoMtx_stack_cFRC5csXyz)
//	80C3647C: 803DD470 (now__14mDoMtx_stack_c)
//	80C36480: 803DD470 (now__14mDoMtx_stack_c)
//	80C3648C: 80346D6C (PSMTXMultVec)
//	80C36494: 80267954 (cM_rndF__Ff)
//	80C364C0: 80267954 (cM_rndF__Ff)
//	80C364E4: 80267954 (cM_rndF__Ff)
//	80C36504: 80267954 (cM_rndF__Ff)
//	80C36554: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80C36564: 8034739C (PSVECSquareDistance)
//	80C365D4: 80450AE0 (__float_nan)
//	80C365D8: 80450AE0 (__float_nan)
//	80C36644: 80450AE0 (__float_nan)
//	80C36648: 80450AE0 (__float_nan)
//	80C36678: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C36690: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C3669C: 8034739C (PSVECSquareDistance)
//	80C3670C: 80450AE0 (__float_nan)
//	80C36710: 80450AE0 (__float_nan)
//	80C3677C: 80450AE0 (__float_nan)
//	80C36780: 80450AE0 (__float_nan)
//	80C367C8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80C367E0: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	80C36840: 80C384FC (stringBase0)
//	80C36844: 80C384FC (stringBase0)
//	80C3684C: 804061C0 (g_dComIfG_gameInfo)
//	80C36850: 804061C0 (g_dComIfG_gameInfo)
//	80C36860: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C36880: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C368C4: 80C384FC (stringBase0)
//	80C368C8: 80C384FC (stringBase0)
//	80C368D0: 804061C0 (g_dComIfG_gameInfo)
//	80C368D4: 804061C0 (g_dComIfG_gameInfo)
//	80C368E4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C36904: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C36928: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80C36948: 8026798C (cM_rndFX__Ff)
//	80C3695C: 8026798C (cM_rndFX__Ff)
//	80C36970: 80267674 (cM_atan2s__Fff)
//	80C3697C: 80267954 (cM_rndF__Ff)
//	80C3699C: 80267954 (cM_rndF__Ff)
//	80C369BC: 80267954 (cM_rndF__Ff)
//	80C369CC: 80267954 (cM_rndF__Ff)
//	80C369EC: 80C35BE4 (SpeedSet__10daObjKAM_cFv)
//	80C369F4: 80C35970 (WallCheck__10daObjKAM_cFv)
//	80C36A3C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C36A50: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C36A68: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C36A7C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C36A9C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80C36AB8: 80270B90 (cLib_chaseAngleS__FPsss)
//	80C36B04: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C36B0C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::MoveAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/MoveAction__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C36B20-80C36BE4 00C4+00 s=1 e=0 z=0  None .text      Action__10daObjKAM_cFv                                       */
//	80C36B5C: 80C357EC (WaitAction__10daObjKAM_cFv)
//	80C36B64: 80C36138 (WalkAction__10daObjKAM_cFv)
//	80C36B98: 80C36338 (MoveAction__10daObjKAM_cFv)
//	80C36BA0: 8015E078 (Insect_GetDemoMain__9dInsect_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::Action() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/Action__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C36BE4-80C36CA0 00BC+00 s=1 e=0 z=0  None .text      ShopAction__10daObjKAM_cFv                                   */
//	80C36C20: 80C35684 (ShopWaitAction__10daObjKAM_cFv)
//	80C36C28: 80C36138 (WalkAction__10daObjKAM_cFv)
//	80C36C5C: 80C36338 (MoveAction__10daObjKAM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::ShopAction() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/ShopAction__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C36CA0-80C36CB8 0018+00 s=1 e=0 z=0  None .text      Insect_Release__10daObjKAM_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::Insect_Release() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/Insect_Release__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C36CB8-80C36E34 017C+00 s=1 e=0 z=0  None .text      Z_BufferChk__10daObjKAM_cFv                                  */
//	80C36CE0: 80C38408 (lit_3775)
//	80C36CE4: 80C38408 (lit_3775)
//	80C36D14: 80015310 (mDoLib_project__FP3VecP3Vec)
//	80C36D18: 804061C0 (g_dComIfG_gameInfo)
//	80C36D1C: 804061C0 (g_dComIfG_gameInfo)
//	80C36D70: 804061C0 (g_dComIfG_gameInfo)
//	80C36D74: 804061C0 (g_dComIfG_gameInfo)
//	80C36D9C: 80056018 (newData__13dDlst_peekZ_cFssPUl)
//	80C36DA0: 804061C0 (g_dComIfG_gameInfo)
//	80C36DA4: 804061C0 (g_dComIfG_gameInfo)
//	80C36DBC: 800154EC (mDoLib_pos2camera__FP3VecP3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::Z_BufferChk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/Z_BufferChk__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C36E34-80C36F58 0124+00 s=1 e=0 z=0  None .text      ParticleSet__10daObjKAM_cFv                                  */
//	80C36E5C: 80C384D0 (lit_4516)
//	80C36E60: 80C384D0 (lit_4516)
//	80C36E84: 80C38458 (lit_3932)
//	80C36E88: 80C38458 (lit_3932)
//	80C36E8C: 80C38454 (lit_3895)
//	80C36E90: 80C38454 (lit_3895)
//	80C36E98: 8026FA3C (cLib_addCalc2__FPffff)
//	80C36EA8: 80C38454 (lit_3895)
//	80C36EAC: 80C38454 (lit_3895)
//	80C36EB4: 8026FA3C (cLib_addCalc2__FPffff)
//	80C36EB8: 804061C0 (g_dComIfG_gameInfo)
//	80C36EBC: 804061C0 (g_dComIfG_gameInfo)
//	80C36F04: 80C38454 (lit_3895)
//	80C36F08: 80C38454 (lit_3895)
//	80C36F0C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C36F24: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::ParticleSet() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/ParticleSet__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C36F58-80C37324 03CC+00 s=1 e=0 z=0  None .text      BoomChk__10daObjKAM_cFv                                      */
//	80C36F68: 803621D8 (_savegpr_28)
//	80C36F70: 80C38408 (lit_3775)
//	80C36F74: 80C38408 (lit_3775)
//	80C36F84: 804061C0 (g_dComIfG_gameInfo)
//	80C36F88: 804061C0 (g_dComIfG_gameInfo)
//	80C36FE0: 8015E654 (posMove__20daPy_boomerangMove_cFP4cXyzPsP10fopAc_ac_cs)
//	80C36FF4: 8015E87C (bgCheckAfterOffset__20daPy_boomerangMove_cFPC4cXyz)
//	80C37010: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C37018: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C3702C: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C37030: 804061C0 (g_dComIfG_gameInfo)
//	80C37034: 804061C0 (g_dComIfG_gameInfo)
//	80C37044: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C37050: 80C385A4 (__vt__8cM3dGPla)
//	80C37054: 80C385A4 (__vt__8cM3dGPla)
//	80C37068: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C370EC: 8034739C (PSVECSquareDistance)
//	80C3715C: 80450AE0 (__float_nan)
//	80C37160: 80450AE0 (__float_nan)
//	80C371CC: 80450AE0 (__float_nan)
//	80C371D0: 80450AE0 (__float_nan)
//	80C371E0: 80267674 (cM_atan2s__Fff)
//	80C371F4: 80267674 (cM_atan2s__Fff)
//	80C37204: 80267674 (cM_atan2s__Fff)
//	80C3720C: 80C385A4 (__vt__8cM3dGPla)
//	80C37210: 80C385A4 (__vt__8cM3dGPla)
//	80C3722C: 80C384FC (stringBase0)
//	80C37230: 80C384FC (stringBase0)
//	80C37238: 804061C0 (g_dComIfG_gameInfo)
//	80C3723C: 804061C0 (g_dComIfG_gameInfo)
//	80C3724C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C3726C: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C3727C: 80267954 (cM_rndF__Ff)
//	80C372C8: 80267954 (cM_rndF__Ff)
//	80C37308: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C37310: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::BoomChk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/BoomChk__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C37324-80C374AC 0188+00 s=1 e=0 z=0  None .text      ObjHit__10daObjKAM_cFv                                       */
//	80C3733C: 80C38408 (lit_3775)
//	80C37340: 80C38408 (lit_3775)
//	80C37348: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80C37358: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80C37380: 80084548 (GetTgHitGObj__12dCcD_GObjInfFv)
//	80C3738C: 8015E5B0 (initOffset__20daPy_boomerangMove_cFPC4cXyz)
//	80C373B4: 804061C0 (g_dComIfG_gameInfo)
//	80C373B8: 804061C0 (g_dComIfG_gameInfo)
//	80C37400: 80C384FC (stringBase0)
//	80C37404: 80C384FC (stringBase0)
//	80C3740C: 804061C0 (g_dComIfG_gameInfo)
//	80C37410: 804061C0 (g_dComIfG_gameInfo)
//	80C37420: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80C37440: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80C37450: 80267954 (cM_rndF__Ff)
//	80C37464: 80267954 (cM_rndF__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::ObjHit() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/ObjHit__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C374AC-80C37724 0278+00 s=1 e=0 z=0  None .text      Execute__10daObjKAM_cFv                                      */
//	80C374C4: 80C38408 (lit_3775)
//	80C374C8: 80C38408 (lit_3775)
//	80C37530: 8015E078 (Insect_GetDemoMain__9dInsect_cFv)
//	80C37538: 80C36E34 (ParticleSet__10daObjKAM_cFv)
//	80C375AC: 80C36B20 (Action__10daObjKAM_cFv)
//	80C375CC: 804061C0 (g_dComIfG_gameInfo)
//	80C375D0: 804061C0 (g_dComIfG_gameInfo)
//	80C3761C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80C37628: 80C35228 (SetCcSph__10daObjKAM_cFv)
//	80C37630: 80C37324 (ObjHit__10daObjKAM_cFv)
//	80C37638: 80C36F58 (BoomChk__10daObjKAM_cFv)
//	80C3768C: 80C36E34 (ParticleSet__10daObjKAM_cFv)
//	80C37694: 80C36BE4 (ShopAction__10daObjKAM_cFv)
//	80C376C4: 804061C0 (g_dComIfG_gameInfo)
//	80C376C8: 804061C0 (g_dComIfG_gameInfo)
//	80C376D0: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80C376D8: 8000D428 (play__14mDoExt_baseAnmFv)
//	80C376E0: 8000D428 (play__14mDoExt_baseAnmFv)
//	80C376EC: 8002D06C (dComIfGp_getReverb__Fi)
//	80C376FC: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	80C37704: 80C3778C (setBaseMtx__10daObjKAM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::Execute() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/Execute__10daObjKAM_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C385D0-80C385D4 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_80C385D0[4];

/* 80C37724-80C3778C 0068+00 s=1 e=0 z=0  None .text      Delete__10daObjKAM_cFv                                       */
//	80C3773C: 80C384FC (stringBase0)
//	80C37740: 80C384FC (stringBase0)
//	80C37744: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80C37758: 80C385D0 (data_80C385D0)
//	80C3775C: 80C385D0 (data_80C385D0)
//	80C37770: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/Delete__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C3778C-80C377F4 0068+00 s=1 e=0 z=0  None .text      setBaseMtx__10daObjKAM_cFv                                   */
//	80C377A4: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80C377AC: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80C377B4: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80C377BC: 8000CE70 (scaleM__14mDoMtx_stack_cFRC4cXyz)
//	80C377C8: 803DD470 (now__14mDoMtx_stack_c)
//	80C377CC: 803DD470 (now__14mDoMtx_stack_c)
//	80C377D4: 803464B0 (PSMTXCopy)
//	80C377DC: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/setBaseMtx__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C377F4-80C378D4 00E0+00 s=1 e=0 z=0  None .text      daObjKAM_Draw__FP10daObjKAM_c                                */
//	80C37818: 80C36CB8 (Z_BufferChk__10daObjKAM_cFv)
//	80C37824: 8042CA54 (g_env_light)
//	80C37828: 8042CA54 (g_env_light)
//	80C37838: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80C3783C: 8042CA54 (g_env_light)
//	80C37840: 8042CA54 (g_env_light)
//	80C3784C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80C37860: 8000D6D8 (entry__13mDoExt_btkAnmFP16J3DMaterialTablef)
//	80C37874: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	80C3787C: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	80C37894: 80C384DC (lit_4757)
//	80C37898: 80C384DC (lit_4757)
//	80C378A4: 80C384E0 (lit_4758)
//	80C378A8: 80C384E0 (lit_4758)
//	80C378AC: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80C378B0: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80C378B4: 8002D0B4 (dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjKAM_c* False
// 	 daObjKAM_c False
asm static void daObjKAM_Draw(daObjKAM_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/daObjKAM_Draw__FP10daObjKAM_c.s"
}
#pragma pop


/* 80C378D4-80C378F4 0020+00 s=2 e=0 z=0  None .text      daObjKAM_Execute__FP10daObjKAM_c                             */
//	80C378E0: 80C374AC (Execute__10daObjKAM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjKAM_c* False
// 	 daObjKAM_c False
asm static void daObjKAM_Execute(daObjKAM_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/daObjKAM_Execute__FP10daObjKAM_c.s"
}
#pragma pop


/* 80C378F4-80C37AA0 01AC+00 s=1 e=0 z=0  None .text      CreateChk__10daObjKAM_cFv                                    */
//	80C37934: 804061C0 (g_dComIfG_gameInfo)
//	80C37938: 804061C0 (g_dComIfG_gameInfo)
//	80C37944: 80C384E4 (l_musiya_num)
//	80C37948: 80C384E4 (l_musiya_num)
//	80C37950: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C37954: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C3795C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80C3796C: 80C384E4 (l_musiya_num)
//	80C37970: 80C384E4 (l_musiya_num)
//	80C3797C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C37980: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C37988: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80C3799C: 80C384FC (stringBase0)
//	80C379A0: 80C384FC (stringBase0)
//	80C379A8: 804061C0 (g_dComIfG_gameInfo)
//	80C379AC: 804061C0 (g_dComIfG_gameInfo)
//	80C379B4: 80368994 (strcmp)
//	80C379C0: 804061C0 (g_dComIfG_gameInfo)
//	80C379C4: 804061C0 (g_dComIfG_gameInfo)
//	80C379D8: 80C384BC (l_kam_itemno)
//	80C379DC: 80C384BC (l_kam_itemno)
//	80C379E4: 801D9F3C (isCatchNotGiveInsect__14dMenu_Insect_cFUc)
//	80C37A04: 804061C0 (g_dComIfG_gameInfo)
//	80C37A08: 804061C0 (g_dComIfG_gameInfo)
//	80C37A14: 80C384E4 (l_musiya_num)
//	80C37A18: 80C384E4 (l_musiya_num)
//	80C37A24: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C37A28: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C37A30: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80C37A48: 804061C0 (g_dComIfG_gameInfo)
//	80C37A4C: 804061C0 (g_dComIfG_gameInfo)
//	80C37A58: 80C384E4 (l_musiya_num)
//	80C37A5C: 80C384E4 (l_musiya_num)
//	80C37A68: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C37A6C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80C37A74: 800349BC (isEventBit__11dSv_event_cCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::CreateChk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/CreateChk__10daObjKAM_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80C385D4-80C385E0 000C+00 s=1 e=0 z=0  None .bss       @3770                                                        */
static u8 lit_3770[12];

/* 80C385E0-80C385F0 0010+00 s=2 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[16];

/* 80C37AA0-80C38258 07B8+00 s=1 e=0 z=0  None .text      create__10daObjKAM_cFv                                       */
//	80C37AB0: 803621C8 (_savegpr_24)
//	80C37AB8: 80C38408 (lit_3775)
//	80C37ABC: 80C38408 (lit_3775)
//	80C37AD8: 8015E010 (__ct__9dInsect_cFv)
//	80C37ADC: 80C38598 (__vt__10daObjKAM_c)
//	80C37AE0: 80C38598 (__vt__10daObjKAM_c)
//	80C37AE8: 803C3728 (__vt__9cCcD_Stts)
//	80C37AEC: 803C3728 (__vt__9cCcD_Stts)
//	80C37AF8: 80083760 (__ct__10dCcD_GSttsFv)
//	80C37AFC: 803AC2E4 (__vt__9dCcD_Stts)
//	80C37B00: 803AC2E4 (__vt__9dCcD_Stts)
//	80C37B18: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80C37B1C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C37B20: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80C37B28: 80C3858C (__vt__8cM3dGAab)
//	80C37B2C: 80C3858C (__vt__8cM3dGAab)
//	80C37B34: 80C38580 (__vt__8cM3dGSph)
//	80C37B38: 80C38580 (__vt__8cM3dGSph)
//	80C37B40: 803C3540 (__vt__12cCcD_SphAttr)
//	80C37B44: 803C3540 (__vt__12cCcD_SphAttr)
//	80C37B54: 803ABFC0 (__vt__8dCcD_Sph)
//	80C37B58: 803ABFC0 (__vt__8dCcD_Sph)
//	80C37B74: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80C37B80: 800760A0 (__ct__9dBgS_AcchFv)
//	80C37B84: 80C3855C (__vt__12dBgS_ObjAcch)
//	80C37B88: 80C3855C (__vt__12dBgS_ObjAcch)
//	80C37BA4: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C37BAC: 8007757C (__ct__11dBgS_GndChkFv)
//	80C37BB4: 802C03C8 (__ct__10Z2CreatureFv)
//	80C37BC8: 80C384FC (stringBase0)
//	80C37BCC: 80C384FC (stringBase0)
//	80C37BD0: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80C37C68: 80C385E0 (l_HIO)
//	80C37C6C: 80C385E0 (l_HIO)
//	80C37C94: 80C385E0 (l_HIO)
//	80C37C98: 80C385E0 (l_HIO)
//	80C37CB8: 80C378F4 (CreateChk__10daObjKAM_cFv)
//	80C37CD0: 80C35280 (useHeapInit__FP10fopAc_ac_c)
//	80C37CD4: 80C35280 (useHeapInit__FP10fopAc_ac_c)
//	80C37CDC: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80C37CF0: 80C385D0 (data_80C385D0)
//	80C37CF4: 80C385D0 (data_80C385D0)
//	80C37D10: 80C385E0 (l_HIO)
//	80C37D14: 80C385E0 (l_HIO)
//	80C37D5C: 80077C68 (__ct__11dBgS_LinChkFv)
//	80C37D68: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C37D74: 804061C0 (g_dComIfG_gameInfo)
//	80C37D78: 804061C0 (g_dComIfG_gameInfo)
//	80C37D98: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	80C37DB4: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	80C37DC8: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C37DD0: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C37DDC: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C37DE8: 80C385A4 (__vt__8cM3dGPla)
//	80C37DEC: 80C385A4 (__vt__8cM3dGPla)
//	80C37E00: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C37E48: 8034739C (PSVECSquareDistance)
//	80C37EB8: 80450AE0 (__float_nan)
//	80C37EBC: 80450AE0 (__float_nan)
//	80C37F28: 80450AE0 (__float_nan)
//	80C37F2C: 80450AE0 (__float_nan)
//	80C37F3C: 80267674 (cM_atan2s__Fff)
//	80C37F50: 80267674 (cM_atan2s__Fff)
//	80C37F5C: 80C385A4 (__vt__8cM3dGPla)
//	80C37F60: 80C385A4 (__vt__8cM3dGPla)
//	80C37FB8: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80C37FC0: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80C37FCC: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80C37FD8: 80C385A4 (__vt__8cM3dGPla)
//	80C37FDC: 80C385A4 (__vt__8cM3dGPla)
//	80C37FF0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80C38038: 8034739C (PSVECSquareDistance)
//	80C380A8: 80450AE0 (__float_nan)
//	80C380AC: 80450AE0 (__float_nan)
//	80C38118: 80450AE0 (__float_nan)
//	80C3811C: 80450AE0 (__float_nan)
//	80C3812C: 80267674 (cM_atan2s__Fff)
//	80C38140: 80267674 (cM_atan2s__Fff)
//	80C38148: 80C385A4 (__vt__8cM3dGPla)
//	80C3814C: 80C385A4 (__vt__8cM3dGPla)
//	80C38164: 80C351BC (InitCcSph__10daObjKAM_cFv)
//	80C38174: 80C384FC (stringBase0)
//	80C38178: 80C384FC (stringBase0)
//	80C38184: 80368994 (strcmp)
//	80C38190: 804061C0 (g_dComIfG_gameInfo)
//	80C38194: 804061C0 (g_dComIfG_gameInfo)
//	80C381A8: 80C351BC (InitCcSph__10daObjKAM_cFv)
//	80C381D4: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80C381F8: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	80C3820C: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	80C38224: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80C3822C: 80C378D4 (daObjKAM_Execute__FP10daObjKAM_c)
//	80C38238: 80077CDC (__dt__11dBgS_LinChkFv)
//	80C38244: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjKAM_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/create__10daObjKAM_cFv.s"
}
#pragma pop


/* 80C38258-80C382C8 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80C38278: 80C3855C (__vt__12dBgS_ObjAcch)
//	80C3827C: 80C3855C (__vt__12dBgS_ObjAcch)
//	80C38298: 80075F94 (__dt__9dBgS_AcchFv)
//	80C382A8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80C382C8-80C38310 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80C382E0: 80C38580 (__vt__8cM3dGSph)
//	80C382E4: 80C38580 (__vt__8cM3dGSph)
//	80C382F4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80C38310-80C38358 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80C38328: 80C3858C (__vt__8cM3dGAab)
//	80C3832C: 80C3858C (__vt__8cM3dGAab)
//	80C3833C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80C38358-80C38360 0008+00 s=1 e=0 z=0  None .text      daObjKAM_IsDelete__FP10daObjKAM_c                            */
// True False
//  bool False
//  daObjKAM_c* False
// 	 daObjKAM_c False
static bool daObjKAM_IsDelete(daObjKAM_c* param_0) {
	return true;
}


/* 80C38360-80C383A8 0048+00 s=2 e=0 z=0  None .text      __dt__14daObj_KamHIO_cFv                                     */
//	80C38378: 80C385BC (__vt__14daObj_KamHIO_c)
//	80C3837C: 80C385BC (__vt__14daObj_KamHIO_c)
//	80C3838C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daObj_KamHIO_c::~daObj_KamHIO_c() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/__dt__14daObj_KamHIO_cFv.s"
}
#pragma pop


/* 80C383A8-80C383E4 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_obj_kamakiri_cpp                                 */
//	80C383B4: 80C385E0 (l_HIO)
//	80C383B8: 80C385E0 (l_HIO)
//	80C383BC: 80C3518C (__ct__14daObj_KamHIO_cFv)
//	80C383C0: 80C38360 (__dt__14daObj_KamHIO_cFv)
//	80C383C4: 80C38360 (__dt__14daObj_KamHIO_cFv)
//	80C383C8: 80C385D4 (lit_3770)
//	80C383CC: 80C385D4 (lit_3770)
//	80C383D0: 80C35118 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_obj_kamakiri_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/__sinit_d_a_obj_kamakiri_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80C383A8 = (void*)__sinit_d_a_obj_kamakiri_cpp;
#pragma pop


/* 80C383E4-80C383EC 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80C383E8: 80C38258 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C383E4() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/func_80C383E4.s"
}
#pragma pop


/* 80C383EC-80C383F4 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80C383F0: 80C38258 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80C383EC() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_kamakiri/d_a_obj_kamakiri/func_80C383EC.s"
}
#pragma pop


