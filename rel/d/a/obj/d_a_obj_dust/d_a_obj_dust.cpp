// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_dust
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_dust/d_a_obj_dust.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct fopAc_ac_c {
};

struct fopAcM_wt_c {
	/* 8001DD84 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void waterCheck(cXyz const*);
};

struct daObjDust_c {
	/* 80BE22B8 */ // True False
void Search_Ymb();
	/* 80BE2490 */ // True False
//  s16& False
// 	 s16 False
//  f32 False
//  s16 False
//  f32 False
void RideOn_Angle(s16&, f32, s16, f32);
	/* 80BE24F8 */ // True False
void Check_RideOn();
	/* 80BE2708 */ // True False
void initBaseMtx();
	/* 80BE2734 */ // True False
void setBaseMtx();
	/* 80BE2A70 */ // True False
void CreateHeap();
	/* 80BE2AE8 */ // True False
void Create();
	/* 80BE2B30 */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80BE2E9C */ // True False
void Draw();
	/* 80BE2F40 */ // True False
void Delete();
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C37C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, char const*, dRes_info_c*, int);
	/* 8003C6B8 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
void getObjectResName2Index(char const*, char const*);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
};

struct dBgW {
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80BE2A00 */ // True False
~dBgS_ObjAcch();
};

struct cBgS_PolyInfo {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct JMath {
	template <typename A1, typename B1>
	struct TSinCosTable { };
	/* TSinCosTable<13, f32> */
	struct TSinCosTable__template0 {
		/* 80BE2F74 */ // False True
//  s16 False
void sinShort(s16) const;
	};

};

struct J3DModel {
};

// 
// Forward References:
// 

// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void rideCallBack(dBgW*, fopAc_ac_c*, fopAc_ac_c*);
// True False
//  daObjDust_c* False
// 	 daObjDust_c False
static void daObjDust_Draw(daObjDust_c*);
// True False
//  daObjDust_c* False
// 	 daObjDust_c False
static void daObjDust_Execute(daObjDust_c*);
// True False
//  bool False
//  daObjDust_c* False
// 	 daObjDust_c False
static bool daObjDust_IsDelete(daObjDust_c*);
// True False
//  daObjDust_c* False
// 	 daObjDust_c False
static void daObjDust_Delete(daObjDust_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daObjDust_Create(fopAc_ac_c*);

// True False
extern "C" void Search_Ymb__11daObjDust_cFv();
// True False
//  s16& False
// 	 s16 False
//  f32 False
//  s16 False
//  f32 False
extern "C" void RideOn_Angle__11daObjDust_cFRsfsf();
// True False
extern "C" void Check_RideOn__11daObjDust_cFv();
// True False
extern "C" void initBaseMtx__11daObjDust_cFv();
// True False
extern "C" void setBaseMtx__11daObjDust_cFv();
// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c();
// True False
//  daObjDust_c* False
// 	 daObjDust_c False
extern "C" static void daObjDust_Draw__FP11daObjDust_c();
// True False
//  daObjDust_c* False
// 	 daObjDust_c False
extern "C" static void daObjDust_Execute__FP11daObjDust_c();
// True False
//  bool False
//  daObjDust_c* False
// 	 daObjDust_c False
extern "C" static bool daObjDust_IsDelete__FP11daObjDust_c();
// True False
//  daObjDust_c* False
// 	 daObjDust_c False
extern "C" static void daObjDust_Delete__FP11daObjDust_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daObjDust_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void CreateHeap__11daObjDust_cFv();
// True False
extern "C" void Create__11daObjDust_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__11daObjDust_cFPPA3_A4_f();
// True False
extern "C" void Draw__11daObjDust_cFv();
// True False
extern "C" void Delete__11daObjDust_cFv();
// False True
//  s16 False
extern "C" void func_80BE2F74();
// True False
extern "C" static void func_80BE2F80();
// True False
extern "C" static void func_80BE2F88();
extern "C" extern u32 const lit_3723;
extern "C" extern u32 const lit_3724;
extern "C" extern u32 const lit_3725;
extern "C" extern u32 const lit_3726;
extern "C" extern u32 const lit_3727;
extern "C" extern u32 const lit_3728;
extern "C" extern u32 const lit_3729;
extern "C" extern u32 const lit_3730;
extern "C" extern u32 const lit_3731;
extern "C" extern u32 const lit_3732;
extern "C" extern u32 const lit_3733;
extern "C" extern u32 const lit_3734;
extern "C" extern u32 const lit_3735;
extern "C" extern u32 const lit_3736;
extern "C" extern u32 const lit_3737;
extern "C" extern u32 const lit_3775;
extern "C" extern u32 const lit_3885;
extern "C" extern u32 const lit_3886;
extern "C" extern u32 const lit_3887;
extern "C" extern u32 const lit_3888;
extern "C" extern u32 const lit_3889;
extern "C" extern u32 const lit_3963;
extern "C" extern u32 const lit_3964;
extern "C" extern u32 const lit_3965;
extern "C" extern u32 const lit_3966;
extern "C" extern u32 const lit_3967;
extern "C" extern u32 const lit_3968;
extern "C" extern u32 const lit_3969;
extern "C" extern u32 const lit_3970;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_DUST[12];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__11daObjDust_c[10];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  s16 False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void fopAcM_SearchByName(s16, fopAc_ac_c**);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc(f32*, f32, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  s16 False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void fopAcM_SearchByName__FsPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void waterCheck__11fopAcM_wt_cFPC4cXyz();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getObjectResName2Index__14dRes_control_cFPCcPCc();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc__FPfffff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern f32 mWaterY__11fopAcM_wt_c[1 + 1 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80BE2F98-80BE2FA0 0004+04 s=4 e=0 z=0  None .rodata    @3673                                                        */
SECTION_RODATA static u8 const lit_3673[4 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 80BE30F8-80BE30FC 0004+00 s=2 e=0 z=0  None .bss       e_ymb__26@unnamed@d_a_obj_dust_cpp@                          */
static u8 data_80BE30F8[4];

/* 80BE30FC-80BE3100 0004+00 s=2 e=0 z=0  None .bss       e_ymb_Pos__26@unnamed@d_a_obj_dust_cpp@                      */
static u8 data_80BE30FC[4];

/* 80BE22B8-80BE2490 01D8+00 s=1 e=0 z=0  None .text      Search_Ymb__11daObjDust_cFv                                  */
//	80BE22D0: 80BE2F98 (lit_3673)
//	80BE22D4: 80BE2F98 (lit_3673)
//	80BE22D8: 80BE30FC (data_80BE30FC)
//	80BE22DC: 80BE30FC (data_80BE30FC)
//	80BE2314: 803DD470 (now__14mDoMtx_stack_c)
//	80BE2318: 803DD470 (now__14mDoMtx_stack_c)
//	80BE2328: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80BE232C: 803DD470 (now__14mDoMtx_stack_c)
//	80BE2330: 803DD470 (now__14mDoMtx_stack_c)
//	80BE233C: 80346D6C (PSMTXMultVec)
//	80BE2388: 80BE30F8 (data_80BE30F8)
//	80BE238C: 80BE30F8 (data_80BE30F8)
//	80BE23E0: 8026F97C (cLib_addCalc__FPfffff)
//	80BE2420: 8002D06C (dComIfGp_getReverb__Fi)
//	80BE2434: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BE2438: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BE2460: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDust_c::Search_Ymb() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/Search_Ymb__11daObjDust_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BE2FA0-80BE2FA8 0008+00 s=1 e=0 z=0  None .rodata    @3675                                                        */
SECTION_RODATA static u8 const lit_3675[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80BE2490-80BE24F8 0068+00 s=1 e=0 z=0  None .text      RideOn_Angle__11daObjDust_cFRsfsf                            */
//	80BE24A4: 80BE2FA0 (lit_3675)
//	80BE24A8: 80BE2FA0 (lit_3675)
//	80BE24E4: 80270540 (cLib_addCalcAngleS__FPsssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s16& False
// 	 s16 False
//  f32 False
//  s16 False
//  f32 False
asm void daObjDust_c::RideOn_Angle(s16& param_0, f32 param_1, s16 param_2, f32 param_3) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/RideOn_Angle__11daObjDust_cFRsfsf.s"
}
#pragma pop


/* 80BE24F8-80BE2708 0210+00 s=1 e=0 z=0  None .text      Check_RideOn__11daObjDust_cFv                                */
//	80BE2508: 803621D8 (_savegpr_28)
//	80BE2510: 80BE2F98 (lit_3673)
//	80BE2514: 80BE2F98 (lit_3673)
//	80BE2518: 804061C0 (g_dComIfG_gameInfo)
//	80BE251C: 804061C0 (g_dComIfG_gameInfo)
//	80BE2560: 803DD470 (now__14mDoMtx_stack_c)
//	80BE2564: 803DD470 (now__14mDoMtx_stack_c)
//	80BE2574: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80BE2578: 803DD470 (now__14mDoMtx_stack_c)
//	80BE257C: 803DD470 (now__14mDoMtx_stack_c)
//	80BE2588: 80346D6C (PSMTXMultVec)
//	80BE2600: 80BE2490 (RideOn_Angle__11daObjDust_cFRsfsf)
//	80BE2618: 80BE2490 (RideOn_Angle__11daObjDust_cFRsfsf)
//	80BE2648: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BE2668: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BE2684: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BE269C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BE26B4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BE26E8: 8026F97C (cLib_addCalc__FPfffff)
//	80BE26F4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDust_c::Check_RideOn() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/Check_RideOn__11daObjDust_cFv.s"
}
#pragma pop


/* 80BE2708-80BE2734 002C+00 s=1 e=0 z=0  None .text      initBaseMtx__11daObjDust_cFv                                 */
//	80BE2720: 80BE2734 (setBaseMtx__11daObjDust_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDust_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/initBaseMtx__11daObjDust_cFv.s"
}
#pragma pop


/* 80BE2734-80BE2790 005C+00 s=2 e=0 z=0  None .text      setBaseMtx__11daObjDust_cFv                                  */
//	80BE274C: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80BE2754: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80BE2758: 803DD470 (now__14mDoMtx_stack_c)
//	80BE275C: 803DD470 (now__14mDoMtx_stack_c)
//	80BE2768: 803464B0 (PSMTXCopy)
//	80BE276C: 803DD470 (now__14mDoMtx_stack_c)
//	80BE2770: 803DD470 (now__14mDoMtx_stack_c)
//	80BE2778: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDust_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/setBaseMtx__11daObjDust_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BE2FA8-80BE2FAC 0004+00 s=0 e=0 z=0  None .rodata    @3723                                                        */
SECTION_RODATA u32 const lit_3723 = 0x443B8000;

/* 80BE2FAC-80BE2FB0 0004+00 s=0 e=0 z=0  None .rodata    @3724                                                        */
SECTION_RODATA u32 const lit_3724 = 0xC43B8000;

/* 80BE2FB0-80BE2FB4 0004+00 s=0 e=0 z=0  None .rodata    @3725                                                        */
SECTION_RODATA u32 const lit_3725 = 0x43E10000;

/* 80BE2FB4-80BE2FB8 0004+00 s=0 e=0 z=0  None .rodata    @3726                                                        */
SECTION_RODATA u32 const lit_3726 = 0xC3E10000;

/* 80BE2FB8-80BE2FBC 0004+00 s=0 e=0 z=0  None .rodata    @3727                                                        */
SECTION_RODATA u32 const lit_3727 = 0x44160000;

/* 80BE2FBC-80BE2FC0 0004+00 s=0 e=0 z=0  None .rodata    @3728                                                        */
SECTION_RODATA u32 const lit_3728 = 0x43800000;

/* 80BE2FC0-80BE2FC4 0004+00 s=0 e=0 z=0  None .rodata    @3729                                                        */
SECTION_RODATA u32 const lit_3729 = 0x41800000;

/* 80BE2FC4-80BE2FC8 0004+00 s=0 e=0 z=0  None .rodata    @3730                                                        */
SECTION_RODATA u32 const lit_3730 = 0x41F80000;

/* 80BE2FC8-80BE2FCC 0004+00 s=0 e=0 z=0  None .rodata    @3731                                                        */
SECTION_RODATA u32 const lit_3731 = 0xC2C80000;

/* 80BE2FCC-80BE2FD0 0004+00 s=0 e=0 z=0  None .rodata    @3732                                                        */
SECTION_RODATA u32 const lit_3732 = 0x3F000000;

/* 80BE2FD0-80BE2FD4 0004+00 s=0 e=0 z=0  None .rodata    @3733                                                        */
SECTION_RODATA u32 const lit_3733 = 0x42C80000;

/* 80BE2FD4-80BE2FD8 0004+00 s=0 e=0 z=0  None .rodata    @3734                                                        */
SECTION_RODATA u32 const lit_3734 = 0x43960000;

/* 80BE2FD8-80BE2FDC 0004+00 s=0 e=0 z=0  None .rodata    @3735                                                        */
SECTION_RODATA u32 const lit_3735 = 0x44ED8000;

/* 80BE2FDC-80BE2FE0 0004+00 s=0 e=0 z=0  None .rodata    @3736                                                        */
SECTION_RODATA u32 const lit_3736 = 0x3F800000;

/* 80BE2FE0-80BE2FE4 0004+00 s=0 e=0 z=0  None .rodata    @3737                                                        */
SECTION_RODATA u32 const lit_3737 = 0xBF800000;

/* 80BE2FE4-80BE2FE8 0004+00 s=0 e=0 z=0  None .rodata    @3775                                                        */
SECTION_RODATA u32 const lit_3775 = 0x3D4CCCCD;

/* 80BE2FE8-80BE2FEC 0004+00 s=1 e=0 z=0  None .rodata    @3817                                                        */
SECTION_RODATA static u32 const lit_3817 = 0x41F00000;

/* 80BE2790-80BE27BC 002C+00 s=1 e=0 z=0  None .text      rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c              */
//	80BE27A4: 80BE2FE8 (lit_3817)
//	80BE27A8: 80BE2FE8 (lit_3817)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  dBgW* False
// 	 dBgW False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void rideCallBack(dBgW* param_0, fopAc_ac_c* param_1, fopAc_ac_c* param_2) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c.s"
}
#pragma pop


/* 80BE27BC-80BE27E8 002C+00 s=1 e=0 z=0  None .text      daObjDust_Draw__FP11daObjDust_c                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjDust_c* False
// 	 daObjDust_c False
asm static void daObjDust_Draw(daObjDust_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/daObjDust_Draw__FP11daObjDust_c.s"
}
#pragma pop


/* 80BE27E8-80BE2808 0020+00 s=1 e=0 z=0  None .text      daObjDust_Execute__FP11daObjDust_c                           */
//	80BE27F4: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjDust_c* False
// 	 daObjDust_c False
asm static void daObjDust_Execute(daObjDust_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/daObjDust_Execute__FP11daObjDust_c.s"
}
#pragma pop


/* 80BE2808-80BE2810 0008+00 s=1 e=0 z=0  None .text      daObjDust_IsDelete__FP11daObjDust_c                          */
// True False
//  bool False
//  daObjDust_c* False
// 	 daObjDust_c False
static bool daObjDust_IsDelete(daObjDust_c* param_0) {
	return true;
}


/* 80BE2810-80BE2834 0024+00 s=1 e=0 z=0  None .text      daObjDust_Delete__FP11daObjDust_c                            */
//	80BE281C: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daObjDust_c* False
// 	 daObjDust_c False
asm static void daObjDust_Delete(daObjDust_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/daObjDust_Delete__FP11daObjDust_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BE2FEC-80BE2FF0 0004+00 s=0 e=0 z=0  None .rodata    @3885                                                        */
SECTION_RODATA u32 const lit_3885 = 0xC3480000;

/* 80BE2FF0-80BE2FF4 0004+00 s=0 e=0 z=0  None .rodata    @3886                                                        */
SECTION_RODATA u32 const lit_3886 = 0xC2480000;

/* 80BE2FF4-80BE2FF8 0004+00 s=0 e=0 z=0  None .rodata    @3887                                                        */
SECTION_RODATA u32 const lit_3887 = 0x43480000;

/* 80BE2FF8-80BE2FFC 0004+00 s=0 e=0 z=0  None .rodata    @3888                                                        */
SECTION_RODATA u32 const lit_3888 = 0x42480000;

/* 80BE2FFC-80BE3000 0004+00 s=0 e=0 z=0  None .rodata    @3889                                                        */
SECTION_RODATA u32 const lit_3889 = 0xC6934400;

/* 80BE3000-80BE3004 0004+00 s=0 e=0 z=0  None .rodata    @3963                                                        */
SECTION_RODATA u32 const lit_3963 = 0x44400000;

/* 80BE3004-80BE3008 0004+00 s=0 e=0 z=0  None .rodata    @3964                                                        */
SECTION_RODATA u32 const lit_3964 = 0x40000000;

/* 80BE3008-80BE300C 0004+00 s=0 e=0 z=0  None .rodata    @3965                                                        */
SECTION_RODATA u32 const lit_3965 = 0x42200000;

/* 80BE300C-80BE3010 0004+00 s=0 e=0 z=0  None .rodata    @3966                                                        */
SECTION_RODATA u32 const lit_3966 = 0x42A00000;

/* 80BE3010-80BE3014 0004+00 s=0 e=0 z=0  None .rodata    @3967                                                        */
SECTION_RODATA u32 const lit_3967 = 0x41A00000;

/* 80BE3014-80BE3018 0004+00 s=0 e=0 z=0  None .rodata    @3968                                                        */
SECTION_RODATA u32 const lit_3968 = 0x3DCCCCCD;

/* 80BE3018-80BE301C 0004+00 s=0 e=0 z=0  None .rodata    @3969                                                        */
SECTION_RODATA u32 const lit_3969 = 0x41700000;

/* 80BE301C-80BE3020 0004+00 s=0 e=0 z=0  None .rodata    @3970                                                        */
SECTION_RODATA u32 const lit_3970 = 0x3C23D70A;

/* 80BE3020-80BE3051 0031+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80BE3020 = "M_Dust";
SECTION_DEAD char const* const stringBase_80BE3027 = "M_FloatingDust01.dzb";
SECTION_DEAD char const* const stringBase_80BE303C = "M_FloatingDust01.bmd";
#pragma pop

/* 80BE3054-80BE3058 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80BE3058-80BE3078 0020+00 s=1 e=0 z=0  None .data      l_daObjDust_Method                                           */
SECTION_DATA static void* l_daObjDust_Method[8] = {
	(void*)daObjDust_Create__FP10fopAc_ac_c,
	(void*)daObjDust_Delete__FP11daObjDust_c,
	(void*)daObjDust_Execute__FP11daObjDust_c,
	(void*)daObjDust_IsDelete__FP11daObjDust_c,
	(void*)daObjDust_Draw__FP11daObjDust_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80BE3078-80BE30A8 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_DUST                                           */
SECTION_DATA void* g_profile_Obj_DUST[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0003FFFD,
	(void*)0x00760000,
	(void*)&g_fpcLf_Method,
	(void*)0x0000084C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01D90000,
	(void*)&l_daObjDust_Method,
	(void*)0x00040180,
	(void*)0x000E0000,
};

/* 80BE30A8-80BE30CC 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BE2F88,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80BE2F80,
};

/* 80BE30CC-80BE30F4 0028+00 s=1 e=0 z=0  None .data      __vt__11daObjDust_c                                          */
SECTION_DATA void* __vt__11daObjDust_c[10] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__11daObjDust_cFv,
	(void*)Create__11daObjDust_cFv,
	(void*)Execute__11daObjDust_cFPPA3_A4_f,
	(void*)Draw__11daObjDust_cFv,
	(void*)Delete__11daObjDust_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80BE2834-80BE2A00 01CC+00 s=1 e=0 z=0  None .text      daObjDust_Create__FP10fopAc_ac_c                             */
//	80BE2844: 803621DC (_savegpr_29)
//	80BE2848: 80BE2F98 (lit_3673)
//	80BE284C: 80BE2F98 (lit_3673)
//	80BE286C: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80BE2870: 80BE30CC (__vt__11daObjDust_c)
//	80BE2874: 80BE30CC (__vt__11daObjDust_c)
//	80BE287C: 803C3728 (__vt__9cCcD_Stts)
//	80BE2880: 803C3728 (__vt__9cCcD_Stts)
//	80BE288C: 80083760 (__ct__10dCcD_GSttsFv)
//	80BE2890: 803AC2E4 (__vt__9dCcD_Stts)
//	80BE2894: 803AC2E4 (__vt__9dCcD_Stts)
//	80BE28A8: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80BE28B4: 800760A0 (__ct__9dBgS_AcchFv)
//	80BE28B8: 80BE30A8 (__vt__12dBgS_ObjAcch)
//	80BE28BC: 80BE30A8 (__vt__12dBgS_ObjAcch)
//	80BE28D8: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80BE28EC: 80BE3054 (l_arcName)
//	80BE28F0: 80BE3054 (l_arcName)
//	80BE28F8: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80BE2908: 804061C0 (g_dComIfG_gameInfo)
//	80BE290C: 804061C0 (g_dComIfG_gameInfo)
//	80BE2914: 80BE3054 (l_arcName)
//	80BE2918: 80BE3054 (l_arcName)
//	80BE2920: 80BE3020 (stringBase0)
//	80BE2924: 80BE3020 (stringBase0)
//	80BE2930: 8003C6B8 (getObjectResName2Index__14dRes_control_cFPCcPCc)
//	80BE293C: 80BE3054 (l_arcName)
//	80BE2940: 80BE3054 (l_arcName)
//	80BE2948: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80BE294C: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80BE2958: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	80BE2988: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80BE29B4: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80BE29C4: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80BE29CC: 804061C0 (g_dComIfG_gameInfo)
//	80BE29D0: 804061C0 (g_dComIfG_gameInfo)
//	80BE29D8: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80BE29EC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daObjDust_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/daObjDust_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80BE2A00-80BE2A70 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80BE2A20: 80BE30A8 (__vt__12dBgS_ObjAcch)
//	80BE2A24: 80BE30A8 (__vt__12dBgS_ObjAcch)
//	80BE2A40: 80075F94 (__dt__9dBgS_AcchFv)
//	80BE2A50: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80BE2A70-80BE2AE8 0078+00 s=1 e=0 z=0  None .text      CreateHeap__11daObjDust_cFv                                  */
//	80BE2A84: 80BE3054 (l_arcName)
//	80BE2A88: 80BE3054 (l_arcName)
//	80BE2A90: 80BE3020 (stringBase0)
//	80BE2A94: 80BE3020 (stringBase0)
//	80BE2A9C: 804061C0 (g_dComIfG_gameInfo)
//	80BE2AA0: 804061C0 (g_dComIfG_gameInfo)
//	80BE2AB0: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	80BE2AC0: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDust_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/CreateHeap__11daObjDust_cFv.s"
}
#pragma pop


/* 80BE2AE8-80BE2B30 0048+00 s=1 e=0 z=0  None .text      Create__11daObjDust_cFv                                      */
//	80BE2AFC: 80BE2708 (initBaseMtx__11daObjDust_cFv)
//	80BE2B00: 80BE2790 (rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c)
//	80BE2B04: 80BE2790 (rideCallBack__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c)
//	80BE2B14: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDust_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/Create__11daObjDust_cFv.s"
}
#pragma pop


/* 80BE2B30-80BE2E9C 036C+00 s=1 e=0 z=0  None .text      Execute__11daObjDust_cFPPA3_A4_f                             */
//	80BE2B48: 803621DC (_savegpr_29)
//	80BE2B54: 80BE2F98 (lit_3673)
//	80BE2B58: 80BE2F98 (lit_3673)
//	80BE2B64: 8002D06C (dComIfGp_getReverb__Fi)
//	80BE2B78: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BE2B7C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80BE2BA4: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80BE2BAC: 80BE30F8 (data_80BE30F8)
//	80BE2BB0: 80BE30F8 (data_80BE30F8)
//	80BE2BB4: 80019A2C (fopAcM_SearchByName__FsPP10fopAc_ac_c)
//	80BE2BC0: 80BE30F8 (data_80BE30F8)
//	80BE2BC4: 80BE30F8 (data_80BE30F8)
//	80BE2BD8: 80BE30FC (data_80BE30FC)
//	80BE2BDC: 80BE30FC (data_80BE30FC)
//	80BE2C7C: 80BE24F8 (Check_RideOn__11daObjDust_cFv)
//	80BE2C80: 80BE30F8 (data_80BE30F8)
//	80BE2C84: 80BE30F8 (data_80BE30F8)
//	80BE2C94: 80BE22B8 (Search_Ymb__11daObjDust_cFv)
//	80BE2CBC: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
//	80BE2CC8: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	80BE2CCC: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	80BE2CD8: 80439A20 (sincosTable___5JMath)
//	80BE2CDC: 80439A20 (sincosTable___5JMath)
//	80BE2CE4: 80BE2F74 (func_80BE2F74)
//	80BE2D1C: 8026F97C (cLib_addCalc__FPfffff)
//	80BE2D20: 80439A20 (sincosTable___5JMath)
//	80BE2D24: 80439A20 (sincosTable___5JMath)
//	80BE2D34: 80BE2F74 (func_80BE2F74)
//	80BE2D94: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BE2D98: 80439A20 (sincosTable___5JMath)
//	80BE2D9C: 80439A20 (sincosTable___5JMath)
//	80BE2DA4: 80BE2F74 (func_80BE2F74)
//	80BE2E04: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80BE2E14: 80270740 (cLib_chaseF__FPfff)
//	80BE2E2C: 8026F97C (cLib_addCalc__FPfffff)
//	80BE2E44: 8026F97C (cLib_addCalc__FPfffff)
//	80BE2E50: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	80BE2E60: 80BE2734 (setBaseMtx__11daObjDust_cFv)
//	80BE2E68: 804061C0 (g_dComIfG_gameInfo)
//	80BE2E6C: 804061C0 (g_dComIfG_gameInfo)
//	80BE2E74: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80BE2E88: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daObjDust_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/Execute__11daObjDust_cFPPA3_A4_f.s"
}
#pragma pop


/* 80BE2E9C-80BE2F40 00A4+00 s=1 e=0 z=0  None .text      Draw__11daObjDust_cFv                                        */
//	80BE2EB4: 8042CA54 (g_env_light)
//	80BE2EB8: 8042CA54 (g_env_light)
//	80BE2EC8: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80BE2ECC: 8042CA54 (g_env_light)
//	80BE2ED0: 8042CA54 (g_env_light)
//	80BE2EE0: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80BE2EE4: 804061C0 (g_dComIfG_gameInfo)
//	80BE2EE8: 804061C0 (g_dComIfG_gameInfo)
//	80BE2EF0: 80434AC8 (j3dSys)
//	80BE2EF4: 80434AC8 (j3dSys)
//	80BE2F08: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80BE2F0C: 804061C0 (g_dComIfG_gameInfo)
//	80BE2F10: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDust_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/Draw__11daObjDust_cFv.s"
}
#pragma pop


/* 80BE2F40-80BE2F74 0034+00 s=1 e=0 z=0  None .text      Delete__11daObjDust_cFv                                      */
//	80BE2F4C: 80BE3054 (l_arcName)
//	80BE2F50: 80BE3054 (l_arcName)
//	80BE2F5C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daObjDust_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/Delete__11daObjDust_cFv.s"
}
#pragma pop


/* 80BE2F74-80BE2F80 000C+00 s=1 e=0 z=0  None .text      sinShort__Q25JMath18TSinCosTable<13,f>CFs                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  s16 False
asm void JMath::TSinCosTable__template0::sinShort(s16 param_0) const {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/func_80BE2F74.s"
}
#pragma pop


/* 80BE2F80-80BE2F88 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80BE2F84: 80BE2A00 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BE2F80() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/func_80BE2F80.s"
}
#pragma pop


/* 80BE2F88-80BE2F90 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80BE2F8C: 80BE2A00 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80BE2F88() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_dust/d_a_obj_dust/func_80BE2F88.s"
}
#pragma pop


