// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_drainSol
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daPy_py_c {
	/* 8015F424 */ // False False
void checkNowWolfEyeUp();
};

struct _GXColorS10 {
};

struct J3DAnmTransformKey {
};

struct daNpcF_c {
	struct daNpcF_anmPlayData {
	};

	/* 80152014 */ // False False
void execute();
	/* 801522AC */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  int False
void draw(int, int, f32, _GXColorS10*, int);
	/* 8015276C */ // False False
void setMtx();
	/* 801527FC */ // False False
void setMtx2();
	/* 801528C8 */ // False False
void initialize();
	/* 80152B2C */ // False False
//  char* False
// 	 char False
//  int False
void getTrnsfrmKeyAnmP(char*, int);
	/* 80152C1C */ // False False
//  J3DAnmTransformKey* False
// 	 J3DAnmTransformKey False
//  f32 False
//  f32 False
//  int False
//  int False
//  int False
void setMcaMorfAnm(J3DAnmTransformKey*, f32, f32, int, int, int);
	/* 80152D84 */ // False False
void setEnvTevColor();
	/* 80152DE0 */ // False False
void setRoomNo();
	/* 80153264 */ // False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
void playMotionAnm(daNpcF_c::daNpcF_anmPlayData***);
	/* 80153718 */ // False False
//  int& False
// 	 int False
//  int& False
// 	 int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void ctrlMsgAnm(int&, int&, fopAc_ac_c*, int);
	/* 8015387C */ // False False
//  int False
//  char* False
// 	 char False
//  u16 False
//  u16 False
//  u8 False
//  u16 False
void orderEvent(int, char*, u16, u16, u8, u16);
	/* 80153D1C */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 80153D84 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void talkProc(int*, int, fopAc_ac_c**);
	/* 80154278 */ // False False
//  int False
//  int False
void getDistTableIdx(int, int);
	/* 809AF204 */ // True False
~daNpcF_c();
	/* 809AF4D4 */ // True False
daNpcF_c();
	/* 809AF88C */ // True False
//  bool False
bool ctrlBtk();
	/* 809AF894 */ // True False
//  void False
void setCollisions();
	/* 809AF898 */ // True False
//  bool False
//  int False
//  bool False
bool setExpressionAnm(int, bool);
	/* 809AF8A0 */ // True False
//  bool False
//  int False
bool setExpressionBtp(int);
	/* 809AF8A8 */ // True False
//  void False
//  int False
//  f32 False
void setExpression(int, f32);
};

struct daNpcF_ActorMngr_c {
	/* 801506B0 */ // False False
void initialize();
	/* 809AF450 */ // True False
~daNpcF_ActorMngr_c();
	/* 809AF6CC */ // True False
daNpcF_ActorMngr_c();
};

struct daNpcDrSol_c {
	/* 809ADE6C */ // True False
daNpcDrSol_c();
	/* 809ADFE4 */ // True False
~daNpcDrSol_c();
	/* 809AE10C */ // True False
void Create();
	/* 809AE354 */ // True False
void CreateHeap();
	/* 809AE51C */ // True False
void Delete();
	/* 809AE550 */ // True False
void Execute();
	/* 809AE5CC */ // True False
void Draw();
	/* 809AE60C */ // True False
void drawOtherMdls();
	/* 809AE69C */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 809AE6BC */ // True False
void reset();
	/* 809AE844 */ // True False
//  bool (daNpcDrSol_c::*)(void*) False
// 	 * False
// 		  False
// 	 bool False
// 	 void* False
// 		 void False
// 	 daNpcDrSol_c False
void setAction(bool (daNpcDrSol_c::*)(void*));
	/* 809AE8EC */ // True False
void chkFindPlayer();
	/* 809AE994 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 809AEB18 */ // True False
//  int False
//  f32 False
//  int False
void setMotion(int, f32, int);
	/* 809AEB94 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 809AEDA8 */ // True False
void setParam();
	/* 809AEE24 */ // True False
void main();
	/* 809AEFDC */ // True False
void setAttnPos();
	/* 809AF12C */ // True False
//  int False
//  f32 False
void setMotionAnm(int, f32);
	/* 809AF1FC */ // True False
//  bool False
bool drawDbgInfo();
	/* 809AF934 */ // True False
//  void False
void adjustShapeAngle();
};

struct daNpcDrSol_Param_c {
	/* 809AF938 */ // True False
~daNpcDrSol_Param_c();
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 809AF778 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 809AF7D4 */ // True False
~dBgS_ObjAcch();
};

struct cXyz {
	/* 809ADFA8 */ // True False
~cXyz();
	/* 809AF6C8 */ // True False
cXyz();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 809AF708 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct csXyz {
	/* 809AF498 */ // True False
~csXyz();
	/* 809AF6C4 */ // True False
csXyz();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 809ADF18 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 809ADF60 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 809AF8AC */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_LinChk {
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 809AF844 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpcDrSol_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpcDrSol_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpcDrSol_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpcDrSol_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpcDrSol_IsDelete(void*);

// True False
extern "C" void __ct__12daNpcDrSol_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__12daNpcDrSol_cFv();
// True False
extern "C" void Create__12daNpcDrSol_cFv();
// True False
extern "C" void CreateHeap__12daNpcDrSol_cFv();
// True False
extern "C" void Delete__12daNpcDrSol_cFv();
// True False
extern "C" void Execute__12daNpcDrSol_cFv();
// True False
extern "C" void Draw__12daNpcDrSol_cFv();
// True False
extern "C" void drawOtherMdls__12daNpcDrSol_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__12daNpcDrSol_cFP10fopAc_ac_c();
// True False
extern "C" void reset__12daNpcDrSol_cFv();
// True False
//  bool (daNpcDrSol_c::*)(void*) False
// 	 * False
// 		  False
// 	 bool False
// 	 void* False
// 		 void False
// 	 daNpcDrSol_c False
extern "C" void setAction__12daNpcDrSol_cFM12daNpcDrSol_cFPCvPvPv_b();
// True False
extern "C" void chkFindPlayer__12daNpcDrSol_cFv();
// True False
//  void* False
// 	 void False
extern "C" void wait__12daNpcDrSol_cFPv();
// True False
//  int False
//  f32 False
//  int False
extern "C" void setMotion__12daNpcDrSol_cFifi();
// True False
//  void* False
// 	 void False
extern "C" void talk__12daNpcDrSol_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcDrSol_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcDrSol_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcDrSol_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcDrSol_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpcDrSol_IsDelete__FPv();
// True False
extern "C" void setParam__12daNpcDrSol_cFv();
// True False
extern "C" void main__12daNpcDrSol_cFv();
// True False
extern "C" void setAttnPos__12daNpcDrSol_cFv();
// True False
//  int False
//  f32 False
extern "C" void setMotionAnm__12daNpcDrSol_cFif();
// True False
//  bool False
extern "C" bool drawDbgInfo__12daNpcDrSol_cFv();
// True False
extern "C" void __dt__8daNpcF_cFv();
// True False
extern "C" void __dt__18daNpcF_ActorMngr_cFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __ct__8daNpcF_cFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __ct__18daNpcF_ActorMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  bool False
extern "C" bool ctrlBtk__8daNpcF_cFv();
// True False
//  void False
extern "C" void setCollisions__8daNpcF_cFv();
// True False
//  bool False
//  int False
//  bool False
extern "C" bool setExpressionAnm__8daNpcF_cFib();
// True False
//  bool False
//  int False
extern "C" bool setExpressionBtp__8daNpcF_cFi();
// True False
//  void False
//  int False
//  f32 False
extern "C" void setExpression__8daNpcF_cFif();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// False False
extern "C" void __sinit_d_a_npc_drainSol_cpp();
// True False
//  void False
extern "C" void adjustShapeAngle__12daNpcDrSol_cFv();
// True False
extern "C" void __dt__18daNpcDrSol_Param_cFv();
// True False
extern "C" static void func_809AF980();
// True False
extern "C" static void func_809AF988();
extern "C" extern u32 const lit_4140;
extern "C" extern u32 const lit_4141;
extern "C" extern u32 const lit_4142;
extern "C" extern u32 const lit_4143;
extern "C" extern u8 const lit_4273[12];
extern "C" extern u8 const lit_4274[4];
extern "C" extern u8 const lit_4275[12];
extern "C" extern u8 const lit_4276[4];
extern "C" extern u8 const lit_4277[12];
extern "C" extern u8 const lit_4278[12];
extern "C" extern u8 const lit_4279[8];
extern "C" extern u8 const lit_4280[12];
extern "C" extern u8 const lit_4281[4];
extern "C" extern u8 const lit_4282[20];
extern "C" extern u32 const lit_4499;
extern "C" extern u32 const lit_4500;
extern "C" extern void* g_profile_NPC_DRSOL[12];
extern "C" extern void* __vt__12daNpcDrSol_c[18];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__18daNpcF_ActorMngr_c[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__18daNpcDrSol_Param_c[3];

// 
// External References:
// 

// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
void dKy_darkworld_check();
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcF_ActorMngr_cFv();
// False False
extern "C" void execute__8daNpcF_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  int False
extern "C" void draw__8daNpcF_cFiifP11_GXColorS10i();
// False False
extern "C" void setMtx__8daNpcF_cFv();
// False False
extern "C" void setMtx2__8daNpcF_cFv();
// False False
extern "C" void initialize__8daNpcF_cFv();
// False False
//  char* False
// 	 char False
//  int False
extern "C" void getTrnsfrmKeyAnmP__8daNpcF_cFPci();
// False False
//  J3DAnmTransformKey* False
// 	 J3DAnmTransformKey False
//  f32 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void setMcaMorfAnm__8daNpcF_cFP18J3DAnmTransformKeyffiii();
// False False
extern "C" void setEnvTevColor__8daNpcF_cFv();
// False False
extern "C" void setRoomNo__8daNpcF_cFv();
// False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
extern "C" void playMotionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData();
// False False
//  int& False
// 	 int False
//  int& False
// 	 int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci();
// False False
//  int False
//  char* False
// 	 char False
//  u16 False
//  u16 False
//  u8 False
//  u16 False
extern "C" void orderEvent__8daNpcF_cFiPcUsUsUcUs();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcF_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void talkProc__8daNpcF_cFPiiPP10fopAc_ac_c();
// False False
//  int False
//  int False
extern "C" void getDistTableIdx__8daNpcF_cFii();
// False False
extern "C" void checkNowWolfEyeUp__9daPy_py_cFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcF_c[68];
extern "C" extern void* __vt__8daNpcF_c[18];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 809AF9A4-809AFA10 006C+00 s=5 e=0 z=0  None .rodata    m__18daNpcDrSol_Param_c                                      */
SECTION_RODATA static u8 const m__18daNpcDrSol_Param_c[108] = {
	0x42, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x20, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x04, 0x00, 0x06,
	0x42, 0x70, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809AFA10-809AFA14 0004+00 s=0 e=0 z=0  None .rodata    @4140                                                        */
SECTION_RODATA u32 const lit_4140 = 0xC2700000;

/* 809AFA14-809AFA18 0004+00 s=0 e=0 z=0  None .rodata    @4141                                                        */
SECTION_RODATA u32 const lit_4141 = 0xC1200000;

/* 809AFA18-809AFA1C 0004+00 s=0 e=0 z=0  None .rodata    @4142                                                        */
SECTION_RODATA u32 const lit_4142 = 0x42700000;

/* 809AFA1C-809AFA20 0004+00 s=0 e=0 z=0  None .rodata    @4143                                                        */
SECTION_RODATA u32 const lit_4143 = 0x43480000;

/* 809AFA20-809AFA38 0018+00 s=1 e=0 z=0  None .rodata    @4153                                                        */
SECTION_RODATA static u8 const lit_4153[24] = {
	0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x3F, 0x99, 0x63, 0x54, 0x40, 0x0B, 0x18, 0x48,
};

/* 809AFA38-809AFA3C 0004+00 s=2 e=0 z=0  None .rodata    @4190                                                        */
SECTION_RODATA static u32 const lit_4190 = 0x3F800000;

/* 809AFA3C-809AFA48 000C+00 s=0 e=0 z=0  None .rodata    @4273                                                        */
SECTION_RODATA u8 const lit_4273[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809AFA48-809AFA4C 0004+00 s=0 e=0 z=0  None .rodata    @4274                                                        */
SECTION_RODATA u8 const lit_4274[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 809AFA4C-809AFA58 000C+00 s=0 e=0 z=0  None .rodata    @4275                                                        */
SECTION_RODATA u8 const lit_4275[12] = {
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809AFA58-809AFA5C 0004+00 s=0 e=0 z=0  None .rodata    @4276                                                        */
SECTION_RODATA u8 const lit_4276[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 809AFA5C-809AFA68 000C+00 s=0 e=0 z=0  None .rodata    @4277                                                        */
SECTION_RODATA u8 const lit_4277[12] = {
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 809AFA68-809AFA74 000C+00 s=0 e=0 z=0  None .rodata    @4278                                                        */
SECTION_RODATA u8 const lit_4278[12] = {
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809AFA74-809AFA7C 0008+00 s=0 e=0 z=0  None .rodata    @4279                                                        */
SECTION_RODATA u8 const lit_4279[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809AFA7C-809AFA88 000C+00 s=0 e=0 z=0  None .rodata    @4280                                                        */
SECTION_RODATA u8 const lit_4280[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809AFA88-809AFA8C 0004+00 s=0 e=0 z=0  None .rodata    @4281                                                        */
SECTION_RODATA u8 const lit_4281[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 809AFA8C-809AFAA0 0014+00 s=0 e=0 z=0  None .rodata    @4282                                                        */
SECTION_RODATA u8 const lit_4282[20] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 809AFAA0-809AFAA4 0004+00 s=1 e=0 z=0  None .rodata    @4309                                                        */
SECTION_RODATA static u8 const lit_4309[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 809AFAA4-809AFAA8 0004+00 s=2 e=0 z=0  None .rodata    @4369                                                        */
SECTION_RODATA static u32 const lit_4369 = 0xBF800000;

/* 809AFAA8-809AFAAC 0004+00 s=0 e=0 z=0  None .rodata    @4499                                                        */
SECTION_RODATA u32 const lit_4499 = 0x41200000;

/* 809AFAAC-809AFAB0 0004+00 s=0 e=0 z=0  None .rodata    @4500                                                        */
SECTION_RODATA u32 const lit_4500 = 0x41700000;

/* 809AFAB0-809AFACC 001C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_809AFAB0[28] = {
	/* 809AFAB0 000A stringBase_809AFAB0 @stringBase0 */
	0x44, 0x72, 0x61, 0x69, 0x6E, 0x53, 0x6F, 0x6C, 0x31, 0x00,
	/* 809AFABA 0012 data_809AFABA None */
	0x44, 0x72, 0x61, 0x69, 0x6E, 0x53, 0x6F, 0x6C, 0x32, 0x00, 0x53, 0x68, 0x6F, 0x65, 0x00, 0x00,
	0x00, 0x00,
};

/* 809AFACC-809AFAD4 0008+00 s=1 e=0 z=0  None .data      l_bmdGetParamList                                            */
SECTION_DATA static u8 l_bmdGetParamList[8] = {
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x07,
};

/* 809AFAD4-809AFAEC 0018+00 s=1 e=0 z=0  None .data      l_bckGetParamList                                            */
SECTION_DATA static u8 l_bckGetParamList[24] = {
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
};

/* 809AFAEC-809AFAF4 0008+00 s=4 e=0 z=0  None .data      l_arcNames                                                   */
SECTION_DATA static void* l_arcNames[2] = {
	(void*)(((char*)&struct_809AFAB0)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_809AFAB0)+0xA) /* None */,
};

/* 809AFAF4-809AFB00 000C+00 s=1 e=0 z=0  None .data      @4286                                                        */
SECTION_DATA static void* lit_4286[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__12daNpcDrSol_cFPv,
};

/* 809AFB00-809AFB0C 000C+00 s=1 e=0 z=0  None .data      @4352                                                        */
SECTION_DATA static void* lit_4352[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpcDrSol_cFPv,
};

/* 809AFB0C-809AFB18 000C+00 s=1 e=0 z=0  None .data      @4385                                                        */
SECTION_DATA static void* lit_4385[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__12daNpcDrSol_cFPv,
};

/* 809AFB18-809AFB38 0020+00 s=1 e=0 z=0  None .data      daNpcDrSol_MethodTable                                       */
SECTION_DATA static void* daNpcDrSol_MethodTable[8] = {
	(void*)daNpcDrSol_Create__FPv,
	(void*)daNpcDrSol_Delete__FPv,
	(void*)daNpcDrSol_Execute__FPv,
	(void*)daNpcDrSol_IsDelete__FPv,
	(void*)daNpcDrSol_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 809AFB38-809AFB68 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_DRSOL                                          */
SECTION_DATA void* g_profile_NPC_DRSOL[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02A40000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000D3C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01A70000,
	(void*)&daNpcDrSol_MethodTable,
	(void*)0x00044187,
	(void*)0x040E0000,
};

/* 809AFB68-809AFBB0 0048+00 s=2 e=0 z=0  None .data      __vt__12daNpcDrSol_c                                         */
SECTION_DATA void* __vt__12daNpcDrSol_c[18] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daNpcDrSol_cFv,
	(void*)setParam__12daNpcDrSol_cFv,
	(void*)main__12daNpcDrSol_cFv,
	(void*)ctrlBtk__8daNpcF_cFv,
	(void*)adjustShapeAngle__12daNpcDrSol_cFv,
	(void*)setMtx__8daNpcF_cFv,
	(void*)setMtx2__8daNpcF_cFv,
	(void*)setAttnPos__12daNpcDrSol_cFv,
	(void*)setCollisions__8daNpcF_cFv,
	(void*)setExpressionAnm__8daNpcF_cFib,
	(void*)setExpressionBtp__8daNpcF_cFi,
	(void*)setExpression__8daNpcF_cFif,
	(void*)setMotionAnm__12daNpcDrSol_cFif,
	(void*)setMotion__12daNpcDrSol_cFifi,
	(void*)drawDbgInfo__12daNpcDrSol_cFv,
	(void*)drawOtherMdls__12daNpcDrSol_cFv,
};

/* 809AFBB0-809AFBBC 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 809AFBBC-809AFBE0 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_809AF988,
	(void*)NULL,
	(void*)NULL,
	(void*)func_809AF980,
};

/* 809AFBE0-809AFBEC 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 809AFBEC-809AFBF8 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 809AFBF8-809AFC04 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 809AFC04-809AFC10 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcF_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcF_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcF_ActorMngr_cFv,
};

/* 809AFC10-809AFC1C 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 809AFC1C-809AFC28 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 809ADE6C-809ADF18 00AC+00 s=1 e=0 z=0  None .text      __ct__12daNpcDrSol_cFv                                       */
//	809ADE84: 809AF4D4 (__ct__8daNpcF_cFv)
//	809ADE88: 809AFB68 (__vt__12daNpcDrSol_c)
//	809ADE8C: 809AFB68 (__vt__12daNpcDrSol_c)
//	809ADE98: 802C03C8 (__ct__10Z2CreatureFv)
//	809ADEA4: 80083A28 (__ct__12dCcD_GObjInfFv)
//	809ADEA8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	809ADEAC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	809ADEB4: 809AFC1C (__vt__8cM3dGAab)
//	809ADEB8: 809AFC1C (__vt__8cM3dGAab)
//	809ADEC0: 809AFC10 (__vt__8cM3dGCyl)
//	809ADEC4: 809AFC10 (__vt__8cM3dGCyl)
//	809ADECC: 803C35A4 (__vt__12cCcD_CylAttr)
//	809ADED0: 803C35A4 (__vt__12cCcD_CylAttr)
//	809ADEE0: 803AC050 (__vt__8dCcD_Cyl)
//	809ADEE4: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcDrSol_c::daNpcDrSol_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__ct__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809ADF18-809ADF60 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	809ADF30: 809AFC10 (__vt__8cM3dGCyl)
//	809ADF34: 809AFC10 (__vt__8cM3dGCyl)
//	809ADF44: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 809ADF60-809ADFA8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	809ADF78: 809AFC1C (__vt__8cM3dGAab)
//	809ADF7C: 809AFC1C (__vt__8cM3dGAab)
//	809ADF8C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 809ADFA8-809ADFE4 003C+00 s=2 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	809ADFC8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__4cXyzFv.s"
}
#pragma pop


/* 809ADFE4-809AE10C 0128+00 s=1 e=0 z=0  None .text      __dt__12daNpcDrSol_cFv                                       */
//	809AE004: 809AFB68 (__vt__12daNpcDrSol_c)
//	809AE008: 809AFB68 (__vt__12daNpcDrSol_c)
//	809AE01C: 809AFAEC (l_arcNames)
//	809AE020: 809AFAEC (l_arcNames)
//	809AE028: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	809AE03C: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	809AE048: 803AC050 (__vt__8dCcD_Cyl)
//	809AE04C: 803AC050 (__vt__8dCcD_Cyl)
//	809AE06C: 803C35A4 (__vt__12cCcD_CylAttr)
//	809AE070: 803C35A4 (__vt__12cCcD_CylAttr)
//	809AE088: 809AFC10 (__vt__8cM3dGCyl)
//	809AE08C: 809AFC10 (__vt__8cM3dGCyl)
//	809AE09C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	809AE0A0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	809AE0B0: 809AFC1C (__vt__8cM3dGAab)
//	809AE0B4: 809AFC1C (__vt__8cM3dGAab)
//	809AE0C4: 800840E4 (__dt__12dCcD_GObjInfFv)
//	809AE0D0: 802C0420 (__dt__10Z2CreatureFv)
//	809AE0DC: 809AF204 (__dt__8daNpcF_cFv)
//	809AE0EC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcDrSol_c::~daNpcDrSol_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AE10C-809AE354 0248+00 s=1 e=0 z=0  None .text      Create__12daNpcDrSol_cFv                                     */
//	809AE11C: 803621DC (_savegpr_29)
//	809AE124: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AE128: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AE140: 809ADE6C (__ct__12daNpcDrSol_cFv)
//	809AE150: 801AC57C (dKy_darkworld_check__Fv)
//	809AE18C: 809AFAEC (l_arcNames)
//	809AE190: 809AFAEC (l_arcNames)
//	809AE198: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	809AE1AC: 809AE69C (createHeapCallBack__12daNpcDrSol_cFP10fopAc_ac_c)
//	809AE1B0: 809AE69C (createHeapCallBack__12daNpcDrSol_cFP10fopAc_ac_c)
//	809AE1B8: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	809AE1F8: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	809AE210: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	809AE224: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	809AE250: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	809AE258: 804061C0 (g_dComIfG_gameInfo)
//	809AE25C: 804061C0 (g_dComIfG_gameInfo)
//	809AE264: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	809AE278: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	809AE280: 803B37E0 (mCcDCyl__8daNpcF_c)
//	809AE284: 803B37E0 (mCcDCyl__8daNpcF_c)
//	809AE288: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	809AE31C: 80152D84 (setEnvTevColor__8daNpcF_cFv)
//	809AE324: 80152DE0 (setRoomNo__8daNpcF_cFv)
//	809AE32C: 809AE6BC (reset__12daNpcDrSol_cFv)
//	809AE334: 809AE550 (Execute__12daNpcDrSol_cFv)
//	809AE340: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::Create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/Create__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AE354-809AE51C 01C8+00 s=1 e=0 z=0  None .text      CreateHeap__12daNpcDrSol_cFv                                 */
//	809AE364: 803621DC (_savegpr_29)
//	809AE374: 809AFAEC (l_arcNames)
//	809AE378: 809AFAEC (l_arcNames)
//	809AE380: 809AFACC (l_bmdGetParamList)
//	809AE384: 809AFACC (l_bmdGetParamList)
//	809AE38C: 804061C0 (g_dComIfG_gameInfo)
//	809AE390: 804061C0 (g_dComIfG_gameInfo)
//	809AE3A4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	809AE3B0: 802CEC4C (__nw__FUl)
//	809AE3EC: 809AFA38 (lit_4190)
//	809AE3F0: 809AFA38 (lit_4190)
//	809AE3FC: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	809AE420: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	809AE444: 809AFA20 (lit_4153)
//	809AE448: 809AFA20 (lit_4153)
//	809AE4BC: 809AFAEC (l_arcNames)
//	809AE4C0: 809AFAEC (l_arcNames)
//	809AE4D4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	809AE4E4: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	809AE508: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/CreateHeap__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AE51C-809AE550 0034+00 s=1 e=0 z=0  None .text      Delete__12daNpcDrSol_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/Delete__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AE550-809AE5CC 007C+00 s=2 e=0 z=0  None .text      Execute__12daNpcDrSol_cFv                                    */
//	809AE564: 80152014 (execute__8daNpcF_cFv)
//	809AE568: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	809AE584: 809AE8EC (chkFindPlayer__12daNpcDrSol_cFv)
//	809AE5A0: 804061C0 (g_dComIfG_gameInfo)
//	809AE5A4: 804061C0 (g_dComIfG_gameInfo)
//	809AE5B0: 80035200 (onSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/Execute__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AE5CC-809AE60C 0040+00 s=1 e=0 z=0  None .text      Draw__12daNpcDrSol_cFv                                       */
//	809AE5E0: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AE5E4: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AE5F4: 801522AC (draw__8daNpcF_cFiifP11_GXColorS10i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/Draw__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AE60C-809AE69C 0090+00 s=1 e=0 z=0  None .text      drawOtherMdls__12daNpcDrSol_cFv                              */
//	809AE620: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	809AE638: 8042CA54 (g_env_light)
//	809AE63C: 8042CA54 (g_env_light)
//	809AE648: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	809AE660: 803DD470 (now__14mDoMtx_stack_c)
//	809AE664: 803DD470 (now__14mDoMtx_stack_c)
//	809AE668: 803464B0 (PSMTXCopy)
//	809AE66C: 803DD470 (now__14mDoMtx_stack_c)
//	809AE670: 803DD470 (now__14mDoMtx_stack_c)
//	809AE67C: 803464B0 (PSMTXCopy)
//	809AE684: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::drawOtherMdls() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/drawOtherMdls__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AE69C-809AE6BC 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__12daNpcDrSol_cFP10fopAc_ac_c             */
//	809AE6A8: 809AE354 (CreateHeap__12daNpcDrSol_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpcDrSol_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/createHeapCallBack__12daNpcDrSol_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 809AE6BC-809AE844 0188+00 s=1 e=0 z=0  None .text      reset__12daNpcDrSol_cFv                                      */
//	809AE6D0: 801528C8 (initialize__8daNpcF_cFv)
//	809AE6D4: 803A2180 (__ptmf_null)
//	809AE6D8: 803A2180 (__ptmf_null)
//	809AE6FC: 809AFAA0 (lit_4309)
//	809AE700: 809AFAA0 (lit_4309)
//	809AE7BC: 801AC57C (dKy_darkworld_check__Fv)
//	809AE7C8: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AE7CC: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AE7D8: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	809AE7EC: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AE7F0: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AE7FC: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	809AE804: 809AFAF4 (lit_4286)
//	809AE808: 809AFAF4 (lit_4286)
//	809AE82C: 809AE844 (setAction__12daNpcDrSol_cFM12daNpcDrSol_cFPCvPvPv_b)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/reset__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AE844-809AE8EC 00A8+00 s=1 e=0 z=0  None .text      setAction__12daNpcDrSol_cFM12daNpcDrSol_cFPCvPvPv_b          */
//	809AE86C: 80362018 (__ptmf_test)
//	809AE884: 80362084 (__ptmf_scall)
//	809AE8B0: 80362018 (__ptmf_test)
//	809AE8C8: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  bool (daNpcDrSol_c::*)(void*) False
// 	 * False
// 		  False
// 	 bool False
// 	 void* False
// 		 void False
// 	 daNpcDrSol_c False
asm void daNpcDrSol_c::setAction(bool (daNpcDrSol_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/setAction__12daNpcDrSol_cFM12daNpcDrSol_cFPCvPvPv_b.s"
}
#pragma pop


/* 809AE8EC-809AE994 00A8+00 s=1 e=0 z=0  None .text      chkFindPlayer__12daNpcDrSol_cFv                              */
//	809AE904: 80077C68 (__ct__11dBgS_LinChkFv)
//	809AE908: 804061C0 (g_dComIfG_gameInfo)
//	809AE90C: 804061C0 (g_dComIfG_gameInfo)
//	809AE93C: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	809AE940: 804061C0 (g_dComIfG_gameInfo)
//	809AE944: 804061C0 (g_dComIfG_gameInfo)
//	809AE950: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	809AE964: 80077CDC (__dt__11dBgS_LinChkFv)
//	809AE978: 80077CDC (__dt__11dBgS_LinChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::chkFindPlayer() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/chkFindPlayer__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AE994-809AEB18 0184+00 s=2 e=0 z=0  None .text      wait__12daNpcDrSol_cFPv                                      */
//	809AE9CC: 809AFAA4 (lit_4369)
//	809AE9D0: 809AFAA4 (lit_4369)
//	809AE9F4: 804061C0 (g_dComIfG_gameInfo)
//	809AE9F8: 804061C0 (g_dComIfG_gameInfo)
//	809AEA3C: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	809AEA48: 809AFB00 (lit_4352)
//	809AEA4C: 809AFB00 (lit_4352)
//	809AEA74: 80362018 (__ptmf_test)
//	809AEA8C: 80362084 (__ptmf_scall)
//	809AEAB8: 80362018 (__ptmf_test)
//	809AEAD0: 80362084 (__ptmf_scall)
//	809AEAFC: 8015387C (orderEvent__8daNpcF_cFiPcUsUsUcUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcDrSol_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/wait__12daNpcDrSol_cFPv.s"
}
#pragma pop


/* 809AEB18-809AEB94 007C+00 s=1 e=0 z=0  None .text      setMotion__12daNpcDrSol_cFifi                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
//  int False
asm void daNpcDrSol_c::setMotion(int param_0, f32 param_1, int param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/setMotion__12daNpcDrSol_cFifi.s"
}
#pragma pop


/* 809AEB94-809AED20 018C+00 s=1 e=0 z=0  None .text      talk__12daNpcDrSol_cFPv                                      */
//	809AEBE0: 80153D1C (initTalk__8daNpcF_cFiPP10fopAc_ac_c)
//	809AEC08: 80153D84 (talkProc__8daNpcF_cFPiiPP10fopAc_ac_c)
//	809AEC14: 809AFB0C (lit_4385)
//	809AEC18: 809AFB0C (lit_4385)
//	809AEC40: 80362018 (__ptmf_test)
//	809AEC58: 80362084 (__ptmf_scall)
//	809AEC84: 80362018 (__ptmf_test)
//	809AEC9C: 80362084 (__ptmf_scall)
//	809AECC0: 80153718 (ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci)
//	809AECD4: 809AFAA4 (lit_4369)
//	809AECD8: 809AFAA4 (lit_4369)
//	809AECF4: 804061C0 (g_dComIfG_gameInfo)
//	809AECF8: 804061C0 (g_dComIfG_gameInfo)
//	809AED00: 80042468 (reset__14dEvt_control_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcDrSol_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/talk__12daNpcDrSol_cFPv.s"
}
#pragma pop


/* 809AED20-809AED40 0020+00 s=1 e=0 z=0  None .text      daNpcDrSol_Create__FPv                                       */
//	809AED2C: 809AE10C (Create__12daNpcDrSol_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcDrSol_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/daNpcDrSol_Create__FPv.s"
}
#pragma pop


/* 809AED40-809AED60 0020+00 s=1 e=0 z=0  None .text      daNpcDrSol_Delete__FPv                                       */
//	809AED4C: 809AE51C (Delete__12daNpcDrSol_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcDrSol_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/daNpcDrSol_Delete__FPv.s"
}
#pragma pop


/* 809AED60-809AED80 0020+00 s=1 e=0 z=0  None .text      daNpcDrSol_Execute__FPv                                      */
//	809AED6C: 809AE550 (Execute__12daNpcDrSol_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcDrSol_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/daNpcDrSol_Execute__FPv.s"
}
#pragma pop


/* 809AED80-809AEDA0 0020+00 s=1 e=0 z=0  None .text      daNpcDrSol_Draw__FPv                                         */
//	809AED8C: 809AE5CC (Draw__12daNpcDrSol_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcDrSol_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/daNpcDrSol_Draw__FPv.s"
}
#pragma pop


/* 809AEDA0-809AEDA8 0008+00 s=1 e=0 z=0  None .text      daNpcDrSol_IsDelete__FPv                                     */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpcDrSol_IsDelete(void* param_0) {
	return true;
}


/* 809AEDA8-809AEE24 007C+00 s=1 e=0 z=0  None .text      setParam__12daNpcDrSol_cFv                                   */
//	809AEDDC: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/setParam__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AEE24-809AEFDC 01B8+00 s=1 e=0 z=0  None .text      main__12daNpcDrSol_cFv                                       */
//	809AEE3C: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AEE40: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AEE48: 80362018 (__ptmf_test)
//	809AEE60: 80362084 (__ptmf_scall)
//	809AEFBC: 80153264 (playMotionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::main() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/main__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AEFDC-809AF12C 0150+00 s=1 e=0 z=0  None .text      setAttnPos__12daNpcDrSol_cFv                                 */
//	809AEFEC: 803621DC (_savegpr_29)
//	809AEFF4: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AEFF8: 809AF9A4 (m__18daNpcDrSol_Param_c)
//	809AF038: 803DD470 (now__14mDoMtx_stack_c)
//	809AF03C: 803DD470 (now__14mDoMtx_stack_c)
//	809AF040: 803464B0 (PSMTXCopy)
//	809AF044: 803DD470 (now__14mDoMtx_stack_c)
//	809AF048: 803DD470 (now__14mDoMtx_stack_c)
//	809AF070: 80346D6C (PSMTXMultVec)
//	809AF0A8: 803DD470 (now__14mDoMtx_stack_c)
//	809AF0AC: 803DD470 (now__14mDoMtx_stack_c)
//	809AF0B0: 803464B0 (PSMTXCopy)
//	809AF0DC: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	809AF0EC: 8026F1F8 (SetH__8cM3dGCylFf)
//	809AF0FC: 8026F200 (SetR__8cM3dGCylFf)
//	809AF100: 804061C0 (g_dComIfG_gameInfo)
//	809AF104: 804061C0 (g_dComIfG_gameInfo)
//	809AF110: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	809AF118: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcDrSol_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/setAttnPos__12daNpcDrSol_cFv.s"
}
#pragma pop


/* 809AF12C-809AF1FC 00D0+00 s=1 e=0 z=0  None .text      setMotionAnm__12daNpcDrSol_cFif                              */
//	809AF15C: 809AFAEC (l_arcNames)
//	809AF160: 809AFAEC (l_arcNames)
//	809AF16C: 809AFAD4 (l_bckGetParamList)
//	809AF170: 809AFAD4 (l_bckGetParamList)
//	809AF178: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	809AF180: 809AFAD4 (l_bckGetParamList)
//	809AF184: 809AFAD4 (l_bckGetParamList)
//	809AF1A8: 809AFA38 (lit_4190)
//	809AF1AC: 809AFA38 (lit_4190)
//	809AF1BC: 80152C1C (setMcaMorfAnm__8daNpcF_cFP18J3DAnmTransformKeyffiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
asm void daNpcDrSol_c::setMotionAnm(int param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/setMotionAnm__12daNpcDrSol_cFif.s"
}
#pragma pop


/* 809AF1FC-809AF204 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__12daNpcDrSol_cFv                                */
// True False
//  bool False
bool daNpcDrSol_c::drawDbgInfo() {
	return false;
}


/* 809AF204-809AF450 024C+00 s=1 e=0 z=0  None .text      __dt__8daNpcF_cFv                                            */
//	809AF224: 803B38D8 (__vt__8daNpcF_c)
//	809AF228: 803B38D8 (__vt__8daNpcF_c)
//	809AF238: 80077CDC (__dt__11dBgS_LinChkFv)
//	809AF244: 800775F0 (__dt__11dBgS_GndChkFv)
//	809AF250: 80267C94 (__dt__11cBgS_GndChkFv)
//	809AF25C: 80249F48 (__dt__10dMsgFlow_cFv)
//	809AF264: 809AF498 (__dt__5csXyzFv)
//	809AF268: 809AF498 (__dt__5csXyzFv)
//	809AF274: 80361CE8 (__destroy_arr)
//	809AF27C: 809AF498 (__dt__5csXyzFv)
//	809AF280: 809AF498 (__dt__5csXyzFv)
//	809AF28C: 80361CE8 (__destroy_arr)
//	809AF294: 809ADFA8 (__dt__4cXyzFv)
//	809AF298: 809ADFA8 (__dt__4cXyzFv)
//	809AF2A4: 80361CE8 (__destroy_arr)
//	809AF2AC: 809AF450 (__dt__18daNpcF_ActorMngr_cFv)
//	809AF2B0: 809AF450 (__dt__18daNpcF_ActorMngr_cFv)
//	809AF2BC: 80361CE8 (__destroy_arr)
//	809AF2C8: 809AFC04 (__vt__18daNpcF_ActorMngr_c)
//	809AF2CC: 809AFC04 (__vt__18daNpcF_ActorMngr_c)
//	809AF2DC: 809AFBF8 (__vt__12dBgS_AcchCir)
//	809AF2E0: 809AFBF8 (__vt__12dBgS_AcchCir)
//	809AF2F0: 8026EF18 (__dt__8cM3dGCirFv)
//	809AF2FC: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	809AF308: 803AC2E4 (__vt__9dCcD_Stts)
//	809AF30C: 803AC2E4 (__vt__9dCcD_Stts)
//	809AF324: 809AFBEC (__vt__10dCcD_GStts)
//	809AF328: 809AFBEC (__vt__10dCcD_GStts)
//	809AF338: 809AFBE0 (__vt__10cCcD_GStts)
//	809AF33C: 809AFBE0 (__vt__10cCcD_GStts)
//	809AF34C: 803C3728 (__vt__9cCcD_Stts)
//	809AF350: 803C3728 (__vt__9cCcD_Stts)
//	809AF360: 809AFBBC (__vt__12dBgS_ObjAcch)
//	809AF364: 809AFBBC (__vt__12dBgS_ObjAcch)
//	809AF384: 80075F94 (__dt__9dBgS_AcchFv)
//	809AF3A0: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF3A4: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF3C4: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF3C8: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF3E8: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF3EC: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF40C: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF410: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF420: 80018C8C (__dt__10fopAc_ac_cFv)
//	809AF430: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_c::~daNpcF_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__8daNpcF_cFv.s"
}
#pragma pop


/* 809AF450-809AF498 0048+00 s=3 e=0 z=0  None .text      __dt__18daNpcF_ActorMngr_cFv                                 */
//	809AF468: 809AFC04 (__vt__18daNpcF_ActorMngr_c)
//	809AF46C: 809AFC04 (__vt__18daNpcF_ActorMngr_c)
//	809AF47C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_ActorMngr_c::~daNpcF_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__18daNpcF_ActorMngr_cFv.s"
}
#pragma pop


/* 809AF498-809AF4D4 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	809AF4B8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__5csXyzFv.s"
}
#pragma pop


/* 809AF4D4-809AF6C4 01F0+00 s=1 e=0 z=0  None .text      __ct__8daNpcF_cFv                                            */
//	809AF4EC: 80018B64 (__ct__10fopAc_ac_cFv)
//	809AF4F0: 803B38D8 (__vt__8daNpcF_c)
//	809AF4F4: 803B38D8 (__vt__8daNpcF_c)
//	809AF500: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF504: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF514: 803283FC (init__12J3DFrameCtrlFs)
//	809AF524: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF528: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF538: 803283FC (init__12J3DFrameCtrlFs)
//	809AF548: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF54C: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF55C: 803283FC (init__12J3DFrameCtrlFs)
//	809AF56C: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF570: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF580: 803283FC (init__12J3DFrameCtrlFs)
//	809AF594: 800760A0 (__ct__9dBgS_AcchFv)
//	809AF598: 809AFBBC (__vt__12dBgS_ObjAcch)
//	809AF59C: 809AFBBC (__vt__12dBgS_ObjAcch)
//	809AF5B8: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	809AF5BC: 803C3728 (__vt__9cCcD_Stts)
//	809AF5C0: 803C3728 (__vt__9cCcD_Stts)
//	809AF5CC: 80083760 (__ct__10dCcD_GSttsFv)
//	809AF5D0: 803AC2E4 (__vt__9dCcD_Stts)
//	809AF5D4: 803AC2E4 (__vt__9dCcD_Stts)
//	809AF5E8: 80075EAC (__ct__12dBgS_AcchCirFv)
//	809AF5EC: 809AFC04 (__vt__18daNpcF_ActorMngr_c)
//	809AF5F0: 809AFC04 (__vt__18daNpcF_ActorMngr_c)
//	809AF5FC: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
//	809AF604: 809AF6CC (__ct__18daNpcF_ActorMngr_cFv)
//	809AF608: 809AF6CC (__ct__18daNpcF_ActorMngr_cFv)
//	809AF60C: 809AF450 (__dt__18daNpcF_ActorMngr_cFv)
//	809AF610: 809AF450 (__dt__18daNpcF_ActorMngr_cFv)
//	809AF61C: 80361D60 (__construct_array)
//	809AF624: 809AF6C8 (__ct__4cXyzFv)
//	809AF628: 809AF6C8 (__ct__4cXyzFv)
//	809AF62C: 809ADFA8 (__dt__4cXyzFv)
//	809AF630: 809ADFA8 (__dt__4cXyzFv)
//	809AF63C: 80361D60 (__construct_array)
//	809AF644: 809AF6C4 (__ct__5csXyzFv)
//	809AF648: 809AF6C4 (__ct__5csXyzFv)
//	809AF64C: 809AF498 (__dt__5csXyzFv)
//	809AF650: 809AF498 (__dt__5csXyzFv)
//	809AF65C: 80361D60 (__construct_array)
//	809AF664: 809AF6C4 (__ct__5csXyzFv)
//	809AF668: 809AF6C4 (__ct__5csXyzFv)
//	809AF66C: 809AF498 (__dt__5csXyzFv)
//	809AF670: 809AF498 (__dt__5csXyzFv)
//	809AF67C: 80361D60 (__construct_array)
//	809AF684: 80249F00 (__ct__10dMsgFlow_cFv)
//	809AF68C: 80267C1C (__ct__11cBgS_GndChkFv)
//	809AF694: 8007757C (__ct__11dBgS_GndChkFv)
//	809AF69C: 80077C68 (__ct__11dBgS_LinChkFv)
//	809AF6A4: 801528C8 (initialize__8daNpcF_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_c::daNpcF_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__ct__8daNpcF_cFv.s"
}
#pragma pop


/* 809AF6C4-809AF6C8 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 809AF6C8-809AF6CC 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 809AF6CC-809AF708 003C+00 s=1 e=0 z=0  None .text      __ct__18daNpcF_ActorMngr_cFv                                 */
//	809AF6E0: 809AFC04 (__vt__18daNpcF_ActorMngr_c)
//	809AF6E4: 809AFC04 (__vt__18daNpcF_ActorMngr_c)
//	809AF6EC: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_ActorMngr_c::daNpcF_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__ct__18daNpcF_ActorMngr_cFv.s"
}
#pragma pop


/* 809AF708-809AF778 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	809AF728: 809AFBF8 (__vt__12dBgS_AcchCir)
//	809AF72C: 809AFBF8 (__vt__12dBgS_AcchCir)
//	809AF73C: 8026EF18 (__dt__8cM3dGCirFv)
//	809AF748: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	809AF758: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 809AF778-809AF7D4 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	809AF790: 809AFBEC (__vt__10dCcD_GStts)
//	809AF794: 809AFBEC (__vt__10dCcD_GStts)
//	809AF7A0: 809AFBE0 (__vt__10cCcD_GStts)
//	809AF7A4: 809AFBE0 (__vt__10cCcD_GStts)
//	809AF7B8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 809AF7D4-809AF844 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	809AF7F4: 809AFBBC (__vt__12dBgS_ObjAcch)
//	809AF7F8: 809AFBBC (__vt__12dBgS_ObjAcch)
//	809AF814: 80075F94 (__dt__9dBgS_AcchFv)
//	809AF824: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 809AF844-809AF88C 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	809AF85C: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF860: 809AFBB0 (__vt__12J3DFrameCtrl)
//	809AF870: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 809AF88C-809AF894 0008+00 s=1 e=0 z=0  None .text      ctrlBtk__8daNpcF_cFv                                         */
// True False
//  bool False
bool daNpcF_c::ctrlBtk() {
	return false;
}


/* 809AF894-809AF898 0004+00 s=1 e=0 z=0  None .text      setCollisions__8daNpcF_cFv                                   */
// True False
//  void False
void daNpcF_c::setCollisions() {
	/* empty function */
}


/* 809AF898-809AF8A0 0008+00 s=1 e=0 z=0  None .text      setExpressionAnm__8daNpcF_cFib                               */
// True False
//  bool False
//  int False
//  bool False
bool daNpcF_c::setExpressionAnm(int param_0, bool param_1) {
	return true;
}


/* 809AF8A0-809AF8A8 0008+00 s=1 e=0 z=0  None .text      setExpressionBtp__8daNpcF_cFi                                */
// True False
//  bool False
//  int False
bool daNpcF_c::setExpressionBtp(int param_0) {
	return true;
}


/* 809AF8A8-809AF8AC 0004+00 s=1 e=0 z=0  None .text      setExpression__8daNpcF_cFif                                  */
// True False
//  void False
//  int False
//  f32 False
void daNpcF_c::setExpression(int param_0, f32 param_1) {
	/* empty function */
}


/* 809AF8AC-809AF8F4 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	809AF8C4: 809AFBE0 (__vt__10cCcD_GStts)
//	809AF8C8: 809AFBE0 (__vt__10cCcD_GStts)
//	809AF8D8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 809AFC28-809AFC34 000C+00 s=2 e=0 z=0  None .data      __vt__18daNpcDrSol_Param_c                                   */
SECTION_DATA void* __vt__18daNpcDrSol_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcDrSol_Param_cFv,
};

/* 809AFC40-809AFC4C 000C+00 s=1 e=0 z=0  None .bss       @3801                                                        */
static u8 lit_3801[12];

/* 809AFC4C-809AFC50 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 809AF8F4-809AF934 0040+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_drainSol_cpp                                 */
//	809AF900: 809AFC28 (__vt__18daNpcDrSol_Param_c)
//	809AF904: 809AFC28 (__vt__18daNpcDrSol_Param_c)
//	809AF908: 809AFC4C (l_HIO)
//	809AF90C: 809AFC4C (l_HIO)
//	809AF910: 809AF938 (__dt__18daNpcDrSol_Param_cFv)
//	809AF914: 809AF938 (__dt__18daNpcDrSol_Param_cFv)
//	809AF918: 809AFC40 (lit_3801)
//	809AF91C: 809AFC40 (lit_3801)
//	809AF920: 809ADDF8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_drainSol_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__sinit_d_a_npc_drainSol_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_809AF8F4 = (void*)__sinit_d_a_npc_drainSol_cpp;
#pragma pop


/* 809AF934-809AF938 0004+00 s=1 e=0 z=0  None .text      adjustShapeAngle__12daNpcDrSol_cFv                           */
// True False
//  void False
void daNpcDrSol_c::adjustShapeAngle() {
	/* empty function */
}


/* 809AF938-809AF980 0048+00 s=2 e=0 z=0  None .text      __dt__18daNpcDrSol_Param_cFv                                 */
//	809AF950: 809AFC28 (__vt__18daNpcDrSol_Param_c)
//	809AF954: 809AFC28 (__vt__18daNpcDrSol_Param_c)
//	809AF964: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcDrSol_Param_c::~daNpcDrSol_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/__dt__18daNpcDrSol_Param_cFv.s"
}
#pragma pop


/* 809AF980-809AF988 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	809AF984: 809AF7D4 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_809AF980() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/func_809AF980.s"
}
#pragma pop


/* 809AF988-809AF990 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	809AF98C: 809AF7D4 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_809AF988() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_drainSol/d_a_npc_drainSol/func_809AF988.s"
}
#pragma pop


