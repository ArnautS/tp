// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_kkri
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri.h"

// 
// Types:
// 

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daNpcT_MotionSeqMngr_c {
	struct sequenceStepData_c {
	};

	/* 80145898 */ // False False
void initialize();
	/* 80145A24 */ // False False
void checkEndSequence();
	/* 80552C04 */ // True False
~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_motionAnmData_c {
};

struct daNpcT_evtData_c {
};

struct J3DJoint {
};

struct daNpcT_faceMotionAnmData_c {
};

struct daNpc_Kkri_c {
	/* 8054F3AC */ // True False
~daNpc_Kkri_c();
	/* 8054F4F8 */ // True False
void create();
	/* 8054F7D0 */ // True False
void CreateHeap();
	/* 8054FC10 */ // True False
void Delete();
	/* 8054FC44 */ // True False
void Execute();
	/* 8054FC64 */ // True False
void Draw();
	/* 8054FD00 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 8054FD20 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 8054FD78 */ // True False
//  void* False
// 	 void False
//  void* False
// 	 void False
void srchYm(void*, void*);
	/* 8054FE20 */ // True False
void getType();
	/* 8054FE58 */ // True False
void isDelete();
	/* 8054FE8C */ // True False
void reset();
	/* 8054FFEC */ // True False
void checkChangeEvt();
	/* 805500A0 */ // True False
void setParam();
	/* 80550270 */ // True False
void setAfterTalkMotion();
	/* 8055032C */ // True False
void srchActors();
	/* 80550398 */ // True False
void evtTalk();
	/* 80550438 */ // True False
void evtCutProc();
	/* 80550500 */ // True False
void action();
	/* 805505F8 */ // True False
void beforeMove();
	/* 805506BC */ // True False
void setAttnPos();
	/* 80550ADC */ // True False
void setCollision();
	/* 80550CA0 */ // True False
//  bool False
bool drawDbgInfo();
	/* 80550CA8 */ // True False
void selectAction();
	/* 80550D44 */ // True False
//  int (daNpc_Kkri_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Kkri_c False
void chkAction(int (daNpc_Kkri_c::*)(void*));
	/* 80550D70 */ // True False
//  int (daNpc_Kkri_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Kkri_c False
void setAction(int (daNpc_Kkri_c::*)(void*));
	/* 80550E18 */ // True False
//  int False
void cutConversationAboutSoup(int);
	/* 80550F70 */ // True False
//  int False
void cutYmLook(int);
	/* 80551084 */ // True False
void sleep();
	/* 805512E0 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80551538 */ // True False
//  void* False
// 	 void False
void sitWait1(void*);
	/* 80551A4C */ // True False
//  void* False
// 	 void False
void fearWait(void*);
	/* 80551DA4 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80553304 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpc_Kkri_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 805533E4 */ // True False
//  s32 False
s32 getEyeballMaterialNo();
	/* 805533EC */ // True False
//  s32 False
s32 getHeadJointNo();
	/* 805533F4 */ // True False
//  s32 False
s32 getNeckJointNo();
	/* 805533FC */ // True False
//  bool False
bool getBackboneJointNo();
	/* 80553404 */ // True False
//  int False
void checkChangeJoint(int);
	/* 80553414 */ // True False
//  int False
void checkRemoveJoint(int);
};

struct daNpc_Kkri_Param_c {
	/* 80553424 */ // True False
~daNpc_Kkri_Param_c();
};

struct J3DModel {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80552528 */ // True False
~cXyz();
	/* 80552C00 */ // True False
cXyz();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct csXyz {
	/* 80552564 */ // True False
~csXyz();
	/* 80552B00 */ // True False
csXyz();
};

struct _GXColorS10 {
};

struct daNpcT_c {
	/* 80147FA4 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
void tgHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
	/* 801483F8 */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void loadRes(s8 const*, char const**);
	/* 801484AC */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void deleteRes(s8 const*, char const**);
	/* 8014852C */ // False False
void execute();
	/* 8014886C */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
	/* 80148C70 */ // False False
void setEnvTevColor();
	/* 80148CCC */ // False False
void setRoomNo();
	/* 801490D4 */ // False False
void ctrlBtk();
	/* 80149190 */ // False False
void setMtx();
	/* 8014951C */ // False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 8014997C */ // False False
void evtProc();
	/* 80149BB4 */ // False False
void setFootPos();
	/* 80149D7C */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
void setFootPrtcl(cXyz*, f32, f32);
	/* 8014A05C */ // False False
//  bool False
bool checkCullDraw();
	/* 8014A064 */ // False False
void twilight();
	/* 8014A0B0 */ // False False
void evtOrder();
	/* 8014A224 */ // False False
void evtChange();
	/* 8014A324 */ // False False
void clrParam();
	/* 8014A388 */ // False False
//  int False
//  bool False
void setFaceMotionAnm(int, bool);
	/* 8014A628 */ // False False
//  int False
//  f32 False
//  int False
void setMotionAnm(int, f32, int);
	/* 8014AA18 */ // False False
//  s16 False
void setAngle(s16);
	/* 8014A99C */ // False False
//  csXyz False
void setAngle(csXyz);
	/* 8014AA40 */ // False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
void hitChk(dCcD_GObjInf*, u32);
	/* 8014ABD0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
void chkActorInSight(fopAc_ac_c*, f32, s16);
	/* 8014B338 */ // False False
void srchPlayerActor();
	/* 8014B648 */ // False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
void step(s16, int, int, int, int);
	/* 8014BBF0 */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 8014BC78 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void talkProc(int*, int, fopAc_ac_c**, int);
	/* 8014BE2C */ // False False
//  s16 False
void getNearestActorP(s16);
	/* 805521A0 */ // True False
~daNpcT_c();
	/* 805526FC */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 805530F4 */ // True False
//  void False
//  int False
void ctrlSubFaceMotion(int);
	/* 805530F8 */ // True False
//  s32 False
s32 getFootLJointNo();
	/* 80553100 */ // True False
//  s32 False
s32 getFootRJointNo();
	/* 80553108 */ // True False
//  bool False
bool getEyeballLMaterialNo();
	/* 80553110 */ // True False
//  bool False
bool getEyeballRMaterialNo();
	/* 80553118 */ // True False
//  void False
//  int False
void afterJntAnm(int);
	/* 8055311C */ // True False
//  bool False
bool evtEndProc();
	/* 80553124 */ // True False
//  void False
void afterMoved();
	/* 80553128 */ // True False
//  bool False
bool chkXYItems();
	/* 80553130 */ // True False
void decTmr();
	/* 80553148 */ // True False
//  void False
void drawOtherMdl();
	/* 8055314C */ // True False
//  void False
void drawGhost();
	/* 80553150 */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetFaceMotionAnm(int, int, f32, int);
	/* 80553158 */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetMotionAnm(int, int, f32, int);
	/* 80553160 */ // True False
//  daNpcT_faceMotionAnmData_c False
void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
	/* 80553190 */ // True False
//  daNpcT_motionAnmData_c False
void getMotionAnm(daNpcT_motionAnmData_c);
	/* 805531C0 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeAnm(int*, int*);
	/* 805531C4 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBck(int*, int*);
	/* 805531C8 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtp(int*, int*);
	/* 805531CC */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtk(int*, int*);
};

struct daNpcT_Path_c {
	/* 80145C40 */ // False False
void initialize();
	/* 805525E8 */ // True False
~daNpcT_Path_c();
};

struct daNpcT_MatAnm_c {
	/* 80145764 */ // False False
void initialize();
};

struct daNpcT_JntAnm_c {
	/* 80146C98 */ // False False
void initialize();
	/* 80146CD8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
void setParam(fopAc_ac_c*, J3DModel*, cXyz*, int, int, int, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, cXyz*);
	/* 80147C38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void calcJntRad(f32, f32, f32);
	/* 80552B04 */ // True False
~daNpcT_JntAnm_c();
	/* 80552DD0 */ // True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
void setEyeAngleY(cXyz, s16, int, f32, s16);
	/* 80552EEC */ // True False
//  cXyz False
//  f32 False
//  s16 False
void setEyeAngleX(cXyz, f32, s16);
};

struct daNpcT_ActorMngr_c {
	/* 801456D4 */ // False False
void initialize();
	/* 801456E0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801456FC */ // False False
void remove();
	/* 80145708 */ // False False
void getActorP();
	/* 805525A0 */ // True False
~daNpcT_ActorMngr_c();
	/* 80552630 */ // True False
daNpcT_ActorMngr_c();
};

struct dSv_info_c {
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dSv_danBit_c {
	/* 80034BE8 */ // False False
//  int False
void isSwitch(int) const;
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
	/* 8024A528 */ // False False
//  int* False
// 	 int False
void getEventId(int*);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 800480EC */ // False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getMySubstanceP(int, char const*, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80552CBC */ // True False
~dCcD_GStts();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80552D18 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80552C4C */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 8055266C */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 805526B4 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80552158 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct J3DTexNoAnm {
	/* 8054FAFC */ // True False
~J3DTexNoAnm();
	/* 8054FB44 */ // True False
J3DTexNoAnm();
	/* 80552128 */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 8054FB68 */ // True False
~J3DTexMtxAnm();
	/* 8054FBA4 */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 8054FA54 */ // True False
~J3DTevKColorAnm();
	/* 8054FA90 */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 8054FAA8 */ // True False
~J3DTevColorAnm();
	/* 8054FAE4 */ // True False
J3DTevColorAnm();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 8054FBBC */ // True False
~J3DMatColorAnm();
	/* 8054FBF8 */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80552D88 */ // True False
~J3DFrameCtrl();
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpc_Kkri_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Kkri_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Kkri_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Kkri_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Kkri_IsDelete(void*);
// False True
//  int* False
// 	 int False
void cLib_calcTimer__template0(int*);
// False True
//  int False
//  int False
void cLib_getRndValue__template0(int, int);

// True False
extern "C" void __dt__12daNpc_Kkri_cFv();
// True False
extern "C" void create__12daNpc_Kkri_cFv();
// True False
extern "C" void CreateHeap__12daNpc_Kkri_cFv();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
extern "C" void Delete__12daNpc_Kkri_cFv();
// True False
extern "C" void Execute__12daNpc_Kkri_cFv();
// True False
extern "C" void Draw__12daNpc_Kkri_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__12daNpc_Kkri_cFP10fopAc_ac_c();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__12daNpc_Kkri_cFP8J3DJointi();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void srchYm__12daNpc_Kkri_cFPvPv();
// True False
extern "C" void getType__12daNpc_Kkri_cFv();
// True False
extern "C" void isDelete__12daNpc_Kkri_cFv();
// True False
extern "C" void reset__12daNpc_Kkri_cFv();
// True False
extern "C" void checkChangeEvt__12daNpc_Kkri_cFv();
// True False
extern "C" void setParam__12daNpc_Kkri_cFv();
// True False
extern "C" void setAfterTalkMotion__12daNpc_Kkri_cFv();
// True False
extern "C" void srchActors__12daNpc_Kkri_cFv();
// True False
extern "C" void evtTalk__12daNpc_Kkri_cFv();
// True False
extern "C" void evtCutProc__12daNpc_Kkri_cFv();
// True False
extern "C" void action__12daNpc_Kkri_cFv();
// True False
extern "C" void beforeMove__12daNpc_Kkri_cFv();
// True False
extern "C" void setAttnPos__12daNpc_Kkri_cFv();
// True False
extern "C" void setCollision__12daNpc_Kkri_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__12daNpc_Kkri_cFv();
// True False
extern "C" void selectAction__12daNpc_Kkri_cFv();
// True False
//  int (daNpc_Kkri_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Kkri_c False
extern "C" void chkAction__12daNpc_Kkri_cFM12daNpc_Kkri_cFPCvPvPv_i();
// True False
//  int (daNpc_Kkri_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Kkri_c False
extern "C" void setAction__12daNpc_Kkri_cFM12daNpc_Kkri_cFPCvPvPv_i();
// True False
//  int False
extern "C" void cutConversationAboutSoup__12daNpc_Kkri_cFi();
// True False
//  int False
extern "C" void cutYmLook__12daNpc_Kkri_cFi();
// True False
extern "C" void sleep__12daNpc_Kkri_cFv();
// True False
//  void* False
// 	 void False
extern "C" void wait__12daNpc_Kkri_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void sitWait1__12daNpc_Kkri_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void fearWait__12daNpc_Kkri_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__12daNpc_Kkri_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Kkri_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Kkri_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Kkri_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Kkri_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpc_Kkri_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__8daNpcT_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__13daNpcT_Path_cFv();
// True False
extern "C" void __ct__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__15daNpcT_JntAnm_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
extern "C" void setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs();
// True False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs();
// True False
//  void False
//  int False
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
// True False
//  s32 False
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
// True False
//  void False
//  int False
extern "C" void afterJntAnm__8daNpcT_cFi();
// True False
//  bool False
extern "C" bool evtEndProc__8daNpcT_cFv();
// True False
//  void False
extern "C" void afterMoved__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool chkXYItems__8daNpcT_cFv();
// True False
extern "C" void decTmr__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawOtherMdl__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawGhost__8daNpcT_cFv();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetMotionAnm__8daNpcT_cFiifi();
// True False
//  daNpcT_faceMotionAnmData_c False
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
// True False
//  daNpcT_motionAnmData_c False
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeAnm__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBck__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtp__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtk__8daNpcT_cFPiPi();
// False True
//  int* False
// 	 int False
extern "C" void func_805531D0();
// False True
//  int False
//  int False
extern "C" void func_805531EC();
// False False
extern "C" void __sinit_d_a_npc_kkri_cpp();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__12daNpc_Kkri_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
//  s32 False
extern "C" s32 getEyeballMaterialNo__12daNpc_Kkri_cFv();
// True False
//  s32 False
extern "C" s32 getHeadJointNo__12daNpc_Kkri_cFv();
// True False
//  s32 False
extern "C" s32 getNeckJointNo__12daNpc_Kkri_cFv();
// True False
//  bool False
extern "C" bool getBackboneJointNo__12daNpc_Kkri_cFv();
// True False
//  int False
extern "C" void checkChangeJoint__12daNpc_Kkri_cFi();
// True False
//  int False
extern "C" void checkRemoveJoint__12daNpc_Kkri_cFi();
// True False
extern "C" void __dt__18daNpc_Kkri_Param_cFv();
// True False
extern "C" static void func_8055346C();
// True False
extern "C" static void func_80553474();
extern "C" extern u8 const data_8055351C[12];
extern "C" extern u32 const lit_4077;
extern "C" extern u32 const lit_4078;
extern "C" extern u32 const lit_4079;
extern "C" extern u32 const lit_4080;
extern "C" extern u32 const lit_4081;
extern "C" extern u32 const lit_4244;
extern "C" extern u32 const lit_4245;
extern "C" extern u32 const lit_4792;
extern "C" extern u32 const lit_4793;
extern "C" extern u32 const lit_4794;
extern "C" extern u32 const lit_4795;
extern "C" extern u32 const lit_4796;
extern "C" extern u32 const lit_4797[1 + 1 /* padding */];
extern "C" extern u8 const lit_4857[8];
extern "C" extern u8 const lit_4858[8];
extern "C" extern u8 const lit_4859[8];
extern "C" extern u32 const lit_4908;
extern "C" extern u32 const lit_4909;
extern "C" extern u32 const lit_4910;
extern "C" extern u32 const lit_4911;
extern "C" extern u32 const lit_5390;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtList[10];
extern "C" extern u8 l_faceMotionAnmData[420];
extern "C" extern u8 l_motionAnmData[588];
extern "C" extern u8 l_faceMotionSequenceData[240];
extern "C" extern u8 l_motionSequenceData[304];
extern "C" extern void* lit_3849[3];
extern "C" extern void* lit_3850[3];
extern "C" extern void* lit_4921[3];
extern "C" extern void* lit_4923[3];
extern "C" extern void* lit_4925[3];
extern "C" extern void* g_profile_NPC_KKRI[12];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__22daNpcT_MotionSeqMngr_c[3];
extern "C" extern void* __vt__18daNpcT_ActorMngr_c[3];
extern "C" extern void* __vt__15daNpcT_JntAnm_c[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__13daNpcT_Path_c[3];
extern "C" extern void* __vt__12daNpc_Kkri_c[49];
extern "C" extern void* __vt__18daNpc_Kkri_Param_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_createItemForPresentDemo(cXyz const*, int, u8, int, int, csXyz const*, cXyz const*);
// False False
//  unsigned int False
void fpcEx_IsExist(unsigned int);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  int False
//  int False
void daNpcT_getDistTableIdx(int, int);
// False False
//  u32 False
void daNpcT_chkEvtBit(u32);
// False False
//  u32 False
void daNpcT_onTmpBit(u32);
// False False
//  u32 False
void daNpcT_offTmpBit(u32);
// False False
void dKy_getdaytime_hour();
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz();
// False False
//  unsigned int False
extern "C" void fpcEx_IsExist__FUi();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  int False
extern "C" void isSwitch__12dSv_danBit_cCFi();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_MatAnm_cFv();
// False False
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void checkEndSequence__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void initialize__13daNpcT_Path_cFv();
// False False
extern "C" void initialize__15daNpcT_JntAnm_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void calcJntRad__15daNpcT_JntAnm_cFfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" void tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
// False False
extern "C" void execute__8daNpcT_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
// False False
extern "C" void setEnvTevColor__8daNpcT_cFv();
// False False
extern "C" void setRoomNo__8daNpcT_cFv();
// False False
extern "C" void ctrlBtk__8daNpcT_cFv();
// False False
extern "C" void setMtx__8daNpcT_cFv();
// False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
// False False
extern "C" void evtProc__8daNpcT_cFv();
// False False
extern "C" void setFootPos__8daNpcT_cFv();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
// False False
//  bool False
extern "C" bool checkCullDraw__8daNpcT_cFv();
// False False
extern "C" void twilight__8daNpcT_cFv();
// False False
extern "C" void evtOrder__8daNpcT_cFv();
// False False
extern "C" void evtChange__8daNpcT_cFv();
// False False
extern "C" void clrParam__8daNpcT_cFv();
// False False
//  int False
//  bool False
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
// False False
//  int False
//  f32 False
//  int False
extern "C" void setMotionAnm__8daNpcT_cFifi();
// False False
//  csXyz False
extern "C" void setAngle__8daNpcT_cF5csXyz();
// False False
//  s16 False
extern "C" void setAngle__8daNpcT_cFs();
// False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
extern "C" void hitChk__8daNpcT_cFP12dCcD_GObjInfUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
extern "C" void chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs();
// False False
extern "C" void srchPlayerActor__8daNpcT_cFv();
// False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
extern "C" void step__8daNpcT_cFsiiii();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
// False False
//  s16 False
extern "C" void getNearestActorP__8daNpcT_cFs();
// False False
//  int False
//  int False
extern "C" void daNpcT_getDistTableIdx__Fii();
// False False
//  u32 False
extern "C" void daNpcT_chkEvtBit__FUl();
// False False
//  u32 False
extern "C" void daNpcT_onTmpBit__FUl();
// False False
//  u32 False
extern "C" void daNpcT_offTmpBit__FUl();
// False False
extern "C" void dKy_getdaytime_hour__Fv();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  int* False
// 	 int False
extern "C" void getEventId__10dMsgFlow_cFPi();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcT_c[68];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__15daNpcT_MatAnm_c[4 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mFindActorPtrs__8daNpcT_c[200];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mFindCount__8daNpcT_c[4];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80553490-8055351C 008C+00 s=10 e=0 z=0  None .rodata    m__18daNpc_Kkri_Param_c                                      */
SECTION_RODATA static u8 const m__18daNpc_Kkri_Param_c[140] = {
	0x43, 0x34, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x2A, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8055351C-80553528 000C+00 s=0 e=0 z=0  None .rodata    heapSize$4005                                                */
SECTION_RODATA u8 const data_8055351C[12] = {
	0x00, 0x00, 0x42, 0xD0, 0x00, 0x00, 0x42, 0x10, 0x00, 0x00, 0x00, 0x00,
};

/* 80553528-8055352C 0004+00 s=0 e=0 z=0  None .rodata    @4077                                                        */
SECTION_RODATA u32 const lit_4077 = 0xC3480000;

/* 8055352C-80553530 0004+00 s=0 e=0 z=0  None .rodata    @4078                                                        */
SECTION_RODATA u32 const lit_4078 = 0xC2C80000;

/* 80553530-80553534 0004+00 s=0 e=0 z=0  None .rodata    @4079                                                        */
SECTION_RODATA u32 const lit_4079 = 0x43480000;

/* 80553534-80553538 0004+00 s=0 e=0 z=0  None .rodata    @4080                                                        */
SECTION_RODATA u32 const lit_4080 = 0x43960000;

/* 80553538-8055353C 0004+00 s=0 e=0 z=0  None .rodata    @4081                                                        */
SECTION_RODATA u32 const lit_4081 = 0xCE6E6B28;

/* 8055353C-80553540 0004+00 s=6 e=0 z=0  None .rodata    @4243                                                        */
SECTION_RODATA static u8 const lit_4243[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80553540-80553544 0004+00 s=0 e=0 z=0  None .rodata    @4244                                                        */
SECTION_RODATA u32 const lit_4244 = 0x47800000;

/* 80553544-80553548 0004+00 s=0 e=0 z=0  None .rodata    @4245                                                        */
SECTION_RODATA u32 const lit_4245 = 0x3E4CCCCD;

/* 80553548-8055354C 0004+00 s=2 e=0 z=0  None .rodata    @4391                                                        */
SECTION_RODATA static u32 const lit_4391 = 0x3F800000;

/* 8055354C-80553550 0004+00 s=1 e=0 z=0  None .rodata    @4441                                                        */
SECTION_RODATA static u32 const lit_4441 = 0x42C80000;

/* 80553550-80553554 0004+00 s=3 e=0 z=0  None .rodata    @4621                                                        */
SECTION_RODATA static u32 const lit_4621 = 0xBF800000;

/* 80553554-80553558 0004+00 s=0 e=0 z=0  None .rodata    @4792                                                        */
SECTION_RODATA u32 const lit_4792 = 0xC1F00000;

/* 80553558-8055355C 0004+00 s=0 e=0 z=0  None .rodata    @4793                                                        */
SECTION_RODATA u32 const lit_4793 = 0x38C90FDB;

/* 8055355C-80553560 0004+00 s=0 e=0 z=0  None .rodata    @4794                                                        */
SECTION_RODATA u32 const lit_4794 = 0x41F00000;

/* 80553560-80553564 0004+00 s=0 e=0 z=0  None .rodata    @4795                                                        */
SECTION_RODATA u32 const lit_4795 = 0x43200000;

/* 80553564-80553568 0004+00 s=0 e=0 z=0  None .rodata    @4796                                                        */
SECTION_RODATA u32 const lit_4796 = 0xC1A00000;

/* 80553568-80553570 0004+04 s=0 e=0 z=0  None .rodata    @4797                                                        */
SECTION_RODATA u32 const lit_4797[1 + 1 /* padding */] = {
	0x42700000,
	/* padding */
	0x00000000,
};

/* 80553570-80553578 0008+00 s=2 e=0 z=0  None .rodata    @4799                                                        */
SECTION_RODATA static u8 const lit_4799[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80553578-80553580 0008+00 s=0 e=0 z=0  None .rodata    @4857                                                        */
SECTION_RODATA u8 const lit_4857[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80553580-80553588 0008+00 s=0 e=0 z=0  None .rodata    @4858                                                        */
SECTION_RODATA u8 const lit_4858[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80553588-80553590 0008+00 s=0 e=0 z=0  None .rodata    @4859                                                        */
SECTION_RODATA u8 const lit_4859[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80553590-80553594 0004+00 s=0 e=0 z=0  None .rodata    @4908                                                        */
SECTION_RODATA u32 const lit_4908 = 0x430C0000;

/* 80553594-80553598 0004+00 s=0 e=0 z=0  None .rodata    @4909                                                        */
SECTION_RODATA u32 const lit_4909 = 0x42200000;

/* 80553598-8055359C 0004+00 s=0 e=0 z=0  None .rodata    @4910                                                        */
SECTION_RODATA u32 const lit_4910 = 0x41A00000;

/* 8055359C-805535A0 0004+00 s=0 e=0 z=0  None .rodata    @4911                                                        */
SECTION_RODATA u32 const lit_4911 = 0x43160000;

/* 805535A0-805535A4 0004+00 s=0 e=0 z=0  None .rodata    @5390                                                        */
SECTION_RODATA u32 const lit_5390 = 0x4E6E6B28;

/* 805535A4-805535F8 0054+00 s=6 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_805535A4[84] = {
	/* 805535A4 0001 stringBase_805535A4 @stringBase0 */
	0x00,
	/* 805535A5 0010 data_805535A5 None */
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x47, 0x45, 0x54, 0x49, 0x54, 0x45, 0x4D, 0x00,
	/* 805535B5 000C data_805535B5 None */
	0x4E, 0x4F, 0x5F, 0x52, 0x45, 0x53, 0x50, 0x4F, 0x4E, 0x53, 0x45, 0x00,
	/* 805535C1 0018 data_805535C1 None */
	0x43, 0x4F, 0x4E, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x41, 0x42, 0x4F,
	0x55, 0x54, 0x5F, 0x53, 0x4F, 0x55, 0x50, 0x00,
	/* 805535D9 0008 data_805535D9 None */
	0x59, 0x4D, 0x5F, 0x4C, 0x4F, 0x4F, 0x4B, 0x00,
	/* 805535E1 0005 data_805535E1 None */
	0x4B, 0x6B, 0x72, 0x69, 0x00,
	/* 805535E6 0012 data_805535E6 None */
	0x4B, 0x6B, 0x72, 0x69, 0x5F, 0x54, 0x57, 0x00, 0x70, 0x72, 0x6D, 0x00, 0x74, 0x69, 0x6D, 0x65,
	0x72, 0x00,
};

/* 805535F8-80553604 000C+00 s=3 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80553604-80553618 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80553618-80553628 0010+00 s=1 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[16] = {
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x02,
};

/* 80553628-80553650 0028+00 s=0 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA void* l_evtList[10] = {
	(void*)(((char*)&struct_805535A4)+0x0) /* @stringBase0 */,
	(void*)NULL,
	(void*)(((char*)&struct_805535A4)+0x1) /* None */,
	(void*)NULL,
	(void*)(((char*)&struct_805535A4)+0x11) /* None */,
	(void*)NULL,
	(void*)(((char*)&struct_805535A4)+0x1D) /* None */,
	(void*)0x00000001,
	(void*)(((char*)&struct_805535A4)+0x35) /* None */,
	(void*)0x00000002,
};

/* 80553650-8055365C 000C+00 s=2 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[3] = {
	(void*)(((char*)&struct_805535A4)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_805535A4)+0x3D) /* None */,
	(void*)(((char*)&struct_805535A4)+0x42) /* None */,
};

/* 8055365C-80553660 0002+02 s=1 e=0 z=0  None .data      l_loadResPtrn0                                               */
SECTION_DATA static u16 l_loadResPtrn0[1 + 1 /* padding */] = {
	0x01FF,
	/* padding */
	0x0000,
};

/* 80553660-80553664 0003+01 s=1 e=0 z=0  None .data      l_loadResPtrn1                                               */
SECTION_DATA static u8 l_loadResPtrn1[3 + 1 /* padding */] = {
	0x01, 0x02, 0xFF,
	/* padding */
	0x00,
};

/* 80553664-80553670 000C+00 s=1 e=0 z=0  None .data      l_loadResPtrnList                                            */
SECTION_DATA static void* l_loadResPtrnList[3] = {
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn1,
	(void*)&l_loadResPtrn1,
};

/* 80553670-80553814 01A4+00 s=0 e=0 z=0  None .data      l_faceMotionAnmData                                          */
SECTION_DATA u8 l_faceMotionAnmData[420] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x34,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2C,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x00,
};

/* 80553814-80553A60 024C+00 s=0 e=0 z=0  None .data      l_motionAnmData                                              */
SECTION_DATA u8 l_motionAnmData[588] = {
	0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x26,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
};

/* 80553A60-80553B50 00F0+00 s=0 e=0 z=0  None .data      l_faceMotionSequenceData                                     */
SECTION_DATA u8 l_faceMotionSequenceData[240] = {
	0x00, 0x01, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x01, 0x00, 0x09, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0x00, 0x06, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x01, 0x00, 0x04, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0D, 0xFF, 0x01, 0x00, 0x0C, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0E, 0xFF, 0x01, 0x00, 0x0C, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0C, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80553B50-80553C80 0130+00 s=0 e=0 z=0  None .data      l_motionSequenceData                                         */
SECTION_DATA u8 l_motionSequenceData[304] = {
	0x00, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0F, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0xFF, 0x01, 0x00, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0x00, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x01, 0x00, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x01, 0x00, 0x08, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0xFF, 0x01, 0x00, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x01, 0x00, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0xFF, 0x01, 0x00, 0x0C, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x10, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x11, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x12, 0xFF, 0x01, 0x00, 0x11, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x14, 0x00, 0x01, 0x00, 0x13, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x13, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0D, 0xFF, 0x01, 0x00, 0x0E, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80553C80-80553C8C 000C+00 s=1 e=0 z=0  None .data      mCutNameList__12daNpc_Kkri_c                                 */
SECTION_DATA static void* mCutNameList__12daNpc_Kkri_c[3] = {
	(void*)(((char*)&struct_805535A4)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_805535A4)+0x1D) /* None */,
	(void*)(((char*)&struct_805535A4)+0x35) /* None */,
};

/* 80553C8C-80553C98 000C+00 s=0 e=0 z=0  None .data      @3849                                                        */
SECTION_DATA void* lit_3849[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutConversationAboutSoup__12daNpc_Kkri_cFi,
};

/* 80553C98-80553CA4 000C+00 s=0 e=0 z=0  None .data      @3850                                                        */
SECTION_DATA void* lit_3850[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutYmLook__12daNpc_Kkri_cFi,
};

/* 80553CA4-80553CC8 0024+00 s=1 e=0 z=0  None .data      mCutList__12daNpc_Kkri_c                                     */
SECTION_DATA static u8 mCutList__12daNpc_Kkri_c[36] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80553CC8-80553CD4 000C+00 s=1 e=0 z=0  None .data      @4531                                                        */
SECTION_DATA static void* lit_4531[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_Kkri_cFPv,
};

/* 80553CD4-80553CE0 000C+00 s=1 e=0 z=0  None .data      @4635                                                        */
SECTION_DATA static void* lit_4635[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_Kkri_cFPv,
};

/* 80553CE0-80553CEC 000C+00 s=1 e=0 z=0  None .data      @4640                                                        */
SECTION_DATA static void* lit_4640[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_Kkri_cFPv,
};

/* 80553CEC-80553CF8 000C+00 s=0 e=0 z=0  None .data      @4921                                                        */
SECTION_DATA void* lit_4921[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)sitWait1__12daNpc_Kkri_cFPv,
};

/* 80553CF8-80553D04 000C+00 s=0 e=0 z=0  None .data      @4923                                                        */
SECTION_DATA void* lit_4923[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fearWait__12daNpc_Kkri_cFPv,
};

/* 80553D04-80553D10 000C+00 s=0 e=0 z=0  None .data      @4925                                                        */
SECTION_DATA void* lit_4925[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__12daNpc_Kkri_cFPv,
};

/* 80553D10-80553D30 0020+00 s=1 e=0 z=0  None .data      daNpc_Kkri_MethodTable                                       */
SECTION_DATA static void* daNpc_Kkri_MethodTable[8] = {
	(void*)daNpc_Kkri_Create__FPv,
	(void*)daNpc_Kkri_Delete__FPv,
	(void*)daNpc_Kkri_Execute__FPv,
	(void*)daNpc_Kkri_IsDelete__FPv,
	(void*)daNpc_Kkri_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80553D30-80553D60 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_KKRI                                           */
SECTION_DATA void* g_profile_NPC_KKRI[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02590000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000FDC,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x015A0000,
	(void*)&daNpc_Kkri_MethodTable,
	(void*)0x00040107,
	(void*)0x040E0000,
};

/* 80553D60-80553D6C 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80553D6C-80553D78 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80553D78-80553D9C 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80553474,
	(void*)NULL,
	(void*)NULL,
	(void*)func_8055346C,
};

/* 80553D9C-80553DA8 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80553DA8-80553DB4 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80553DB4-80553DC0 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80553DC0-80553DCC 000C+00 s=3 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c                               */
SECTION_DATA void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80553DCC-80553DD8 000C+00 s=5 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcT_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80553DD8-80553DE4 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c                                      */
SECTION_DATA void* __vt__15daNpcT_JntAnm_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80553DE4-80553DF0 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80553DF0-80553DFC 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80553DFC-80553E08 000C+00 s=3 e=0 z=0  None .data      __vt__13daNpcT_Path_c                                        */
SECTION_DATA void* __vt__13daNpcT_Path_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__13daNpcT_Path_cFv,
};

/* 80553E08-80553ECC 00C4+00 s=2 e=0 z=0  None .data      __vt__12daNpc_Kkri_c                                         */
SECTION_DATA void* __vt__12daNpc_Kkri_c[49] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daNpc_Kkri_cFv,
	(void*)ctrlBtk__8daNpcT_cFv,
	(void*)ctrlSubFaceMotion__8daNpcT_cFi,
	(void*)checkChangeJoint__12daNpc_Kkri_cFi,
	(void*)checkRemoveJoint__12daNpc_Kkri_cFi,
	(void*)getBackboneJointNo__12daNpc_Kkri_cFv,
	(void*)getNeckJointNo__12daNpc_Kkri_cFv,
	(void*)getHeadJointNo__12daNpc_Kkri_cFv,
	(void*)getFootLJointNo__8daNpcT_cFv,
	(void*)getFootRJointNo__8daNpcT_cFv,
	(void*)getEyeballLMaterialNo__8daNpcT_cFv,
	(void*)getEyeballRMaterialNo__8daNpcT_cFv,
	(void*)getEyeballMaterialNo__12daNpc_Kkri_cFv,
	(void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
	(void*)afterJntAnm__8daNpcT_cFi,
	(void*)setParam__12daNpc_Kkri_cFv,
	(void*)checkChangeEvt__12daNpc_Kkri_cFv,
	(void*)evtTalk__12daNpc_Kkri_cFv,
	(void*)evtEndProc__8daNpcT_cFv,
	(void*)evtCutProc__12daNpc_Kkri_cFv,
	(void*)setAfterTalkMotion__12daNpc_Kkri_cFv,
	(void*)evtProc__8daNpcT_cFv,
	(void*)action__12daNpc_Kkri_cFv,
	(void*)beforeMove__12daNpc_Kkri_cFv,
	(void*)afterMoved__8daNpcT_cFv,
	(void*)setAttnPos__12daNpc_Kkri_cFv,
	(void*)setFootPos__8daNpcT_cFv,
	(void*)setCollision__12daNpc_Kkri_cFv,
	(void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
	(void*)checkCullDraw__8daNpcT_cFv,
	(void*)twilight__8daNpcT_cFv,
	(void*)chkXYItems__8daNpcT_cFv,
	(void*)evtOrder__8daNpcT_cFv,
	(void*)decTmr__8daNpcT_cFv,
	(void*)clrParam__8daNpcT_cFv,
	(void*)drawDbgInfo__12daNpc_Kkri_cFv,
	(void*)drawOtherMdl__8daNpcT_cFv,
	(void*)drawGhost__8daNpcT_cFv,
	(void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
	(void*)afterSetMotionAnm__8daNpcT_cFiifi,
	(void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
	(void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
	(void*)changeAnm__8daNpcT_cFPiPi,
	(void*)changeBck__8daNpcT_cFPiPi,
	(void*)changeBtp__8daNpcT_cFPiPi,
	(void*)changeBtk__8daNpcT_cFPiPi,
	(void*)setMotionAnm__8daNpcT_cFifi,
};

/* 8054F3AC-8054F4F8 014C+00 s=1 e=0 z=0  None .text      __dt__12daNpc_Kkri_cFv                                       */
//	8054F3CC: 80553E08 (__vt__12daNpc_Kkri_c)
//	8054F3D0: 80553E08 (__vt__12daNpc_Kkri_c)
//	8054F3E4: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	8054F3F4: 80553664 (l_loadResPtrnList)
//	8054F3F8: 80553664 (l_loadResPtrnList)
//	8054F400: 80553650 (l_resNameList)
//	8054F404: 80553650 (l_resNameList)
//	8054F408: 801484AC (deleteRes__8daNpcT_cFPCScPPCc)
//	8054F414: 80553DFC (__vt__13daNpcT_Path_c)
//	8054F418: 80553DFC (__vt__13daNpcT_Path_c)
//	8054F424: 805525A0 (__dt__18daNpcT_ActorMngr_cFv)
//	8054F428: 805525A0 (__dt__18daNpcT_ActorMngr_cFv)
//	8054F434: 80361CE8 (__destroy_arr)
//	8054F440: 803AC050 (__vt__8dCcD_Cyl)
//	8054F444: 803AC050 (__vt__8dCcD_Cyl)
//	8054F464: 803C35A4 (__vt__12cCcD_CylAttr)
//	8054F468: 803C35A4 (__vt__12cCcD_CylAttr)
//	8054F480: 80553DF0 (__vt__8cM3dGCyl)
//	8054F484: 80553DF0 (__vt__8cM3dGCyl)
//	8054F494: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8054F498: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8054F4A8: 80553DE4 (__vt__8cM3dGAab)
//	8054F4AC: 80553DE4 (__vt__8cM3dGAab)
//	8054F4BC: 800840E4 (__dt__12dCcD_GObjInfFv)
//	8054F4C8: 805521A0 (__dt__8daNpcT_cFv)
//	8054F4D8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Kkri_c::~daNpc_Kkri_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 8054F4F8-8054F7D0 02D8+00 s=1 e=0 z=0  None .text      create__12daNpc_Kkri_cFv                                     */
//	8054F508: 803621DC (_savegpr_29)
//	8054F510: 80553490 (m__18daNpc_Kkri_Param_c)
//	8054F514: 80553490 (m__18daNpc_Kkri_Param_c)
//	8054F518: 805535F8 (cNullVec__6Z2Calc)
//	8054F51C: 805535F8 (cNullVec__6Z2Calc)
//	8054F558: 80553304 (__ct__12daNpc_Kkri_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	8054F56C: 8054FE20 (getType__12daNpc_Kkri_cFv)
//	8054F590: 801AC57C (dKy_darkworld_check__Fv)
//	8054F5B0: 801483F8 (loadRes__8daNpcT_cFPCScPPCc)
//	8054F5C4: 8054FE58 (isDelete__12daNpc_Kkri_cFv)
//	8054F5DC: 8054FD00 (createHeapCallBack__12daNpc_Kkri_cFP10fopAc_ac_c)
//	8054F5E0: 8054FD00 (createHeapCallBack__12daNpc_Kkri_cFP10fopAc_ac_c)
//	8054F5F4: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	8054F634: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	8054F64C: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	8054F654: 8054FE8C (reset__12daNpc_Kkri_cFv)
//	8054F680: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	8054F6A4: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	8054F6AC: 803B36D8 (mCcDCyl__8daNpcT_c)
//	8054F6B0: 803B36D8 (mCcDCyl__8daNpcT_c)
//	8054F6B4: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	8054F6C0: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8054F6C4: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8054F6F4: 804061C0 (g_dComIfG_gameInfo)
//	8054F6F8: 804061C0 (g_dComIfG_gameInfo)
//	8054F700: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8054F790: 80148C70 (setEnvTevColor__8daNpcT_cFv)
//	8054F798: 80148CCC (setRoomNo__8daNpcT_cFv)
//	8054F7A8: 8054FC44 (Execute__12daNpc_Kkri_cFv)
//	8054F7BC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/create__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 8054F7D0-8054FA54 0284+00 s=1 e=0 z=0  None .text      CreateHeap__12daNpc_Kkri_cFv                                 */
//	8054F7E0: 803621DC (_savegpr_29)
//	8054F7F8: 80553618 (l_bmdData)
//	8054F7FC: 80553618 (l_bmdData)
//	8054F80C: 80553650 (l_resNameList)
//	8054F810: 80553650 (l_resNameList)
//	8054F81C: 804061C0 (g_dComIfG_gameInfo)
//	8054F820: 804061C0 (g_dComIfG_gameInfo)
//	8054F830: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8054F848: 802CEC4C (__nw__FUl)
//	8054F884: 80553548 (lit_4391)
//	8054F888: 80553548 (lit_4391)
//	8054F894: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	8054F8C4: 8054FD20 (ctrlJointCallBack__12daNpc_Kkri_cFP8J3DJointi)
//	8054F8C8: 8054FD20 (ctrlJointCallBack__12daNpc_Kkri_cFP8J3DJointi)
//	8054F8FC: 802CEC4C (__nw__FUl)
//	8054F90C: 803CEE60 (__vt__14J3DMaterialAnm)
//	8054F910: 803CEE60 (__vt__14J3DMaterialAnm)
//	8054F91C: 8054FBF8 (__ct__14J3DMatColorAnmFv)
//	8054F920: 8054FBF8 (__ct__14J3DMatColorAnmFv)
//	8054F924: 8054FBBC (__dt__14J3DMatColorAnmFv)
//	8054F928: 8054FBBC (__dt__14J3DMatColorAnmFv)
//	8054F934: 80361D60 (__construct_array)
//	8054F93C: 8054FBA4 (__ct__12J3DTexMtxAnmFv)
//	8054F940: 8054FBA4 (__ct__12J3DTexMtxAnmFv)
//	8054F944: 8054FB68 (__dt__12J3DTexMtxAnmFv)
//	8054F948: 8054FB68 (__dt__12J3DTexMtxAnmFv)
//	8054F954: 80361D60 (__construct_array)
//	8054F95C: 8054FB44 (__ct__11J3DTexNoAnmFv)
//	8054F960: 8054FB44 (__ct__11J3DTexNoAnmFv)
//	8054F964: 8054FAFC (__dt__11J3DTexNoAnmFv)
//	8054F968: 8054FAFC (__dt__11J3DTexNoAnmFv)
//	8054F974: 80361D60 (__construct_array)
//	8054F97C: 8054FAE4 (__ct__14J3DTevColorAnmFv)
//	8054F980: 8054FAE4 (__ct__14J3DTevColorAnmFv)
//	8054F984: 8054FAA8 (__dt__14J3DTevColorAnmFv)
//	8054F988: 8054FAA8 (__dt__14J3DTevColorAnmFv)
//	8054F994: 80361D60 (__construct_array)
//	8054F99C: 8054FA90 (__ct__15J3DTevKColorAnmFv)
//	8054F9A0: 8054FA90 (__ct__15J3DTevKColorAnmFv)
//	8054F9A4: 8054FA54 (__dt__15J3DTevKColorAnmFv)
//	8054F9A8: 8054FA54 (__dt__15J3DTevKColorAnmFv)
//	8054F9B4: 80361D60 (__construct_array)
//	8054F9BC: 8032C320 (initialize__14J3DMaterialAnmFv)
//	8054F9C0: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	8054F9C4: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	8054F9D0: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	8054F9F8: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	8054FA0C: 8055353C (lit_4243)
//	8054FA10: 8055353C (lit_4243)
//	8054FA40: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/CreateHeap__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 8054FA54-8054FA90 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	8054FA74: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 8054FA90-8054FAA8 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 8054FAA8-8054FAE4 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	8054FAC8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 8054FAE4-8054FAFC 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 8054FAFC-8054FB44 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	8054FB14: 80553D60 (__vt__11J3DTexNoAnm)
//	8054FB18: 80553D60 (__vt__11J3DTexNoAnm)
//	8054FB28: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 8054FB44-8054FB68 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	8054FB44: 80553D60 (__vt__11J3DTexNoAnm)
//	8054FB48: 80553D60 (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 8054FB68-8054FBA4 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	8054FB88: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 8054FBA4-8054FBBC 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 8054FBBC-8054FBF8 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	8054FBDC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 8054FBF8-8054FC10 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 8054FC10-8054FC44 0034+00 s=1 e=0 z=0  None .text      Delete__12daNpc_Kkri_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/Delete__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 8054FC44-8054FC64 0020+00 s=2 e=0 z=0  None .text      Execute__12daNpc_Kkri_cFv                                    */
//	8054FC50: 8014852C (execute__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/Execute__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 8054FC64-8054FD00 009C+00 s=1 e=0 z=0  None .text      Draw__12daNpc_Kkri_cFv                                       */
//	8054FC74: 803621DC (_savegpr_29)
//	8054FCC0: 80553490 (m__18daNpc_Kkri_Param_c)
//	8054FCC4: 80553490 (m__18daNpc_Kkri_Param_c)
//	8054FCD0: 8055354C (lit_4441)
//	8054FCD4: 8055354C (lit_4441)
//	8054FCE4: 8014886C (draw__8daNpcT_cFiifP11_GXColorS10fiii)
//	8054FCEC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/Draw__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 8054FD00-8054FD20 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__12daNpc_Kkri_cFP10fopAc_ac_c             */
//	8054FD0C: 8054F7D0 (CreateHeap__12daNpc_Kkri_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpc_Kkri_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/createHeapCallBack__12daNpc_Kkri_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 8054FD20-8054FD78 0058+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__12daNpc_Kkri_cFP8J3DJointi                */
//	8054FD38: 80434AC8 (j3dSys)
//	8054FD3C: 80434AC8 (j3dSys)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpc_Kkri_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/ctrlJointCallBack__12daNpc_Kkri_cFP8J3DJointi.s"
}
#pragma pop


/* 8054FD78-8054FE20 00A8+00 s=2 e=0 z=0  None .text      srchYm__12daNpc_Kkri_cFPvPv                                  */
//	8054FD8C: 80450FDC (mFindCount__8daNpcT_c)
//	8054FD90: 80450FDC (mFindCount__8daNpcT_c)
//	8054FDC0: 8002139C (fpcEx_IsExist__FUi)
//	8054FDE4: 80450FDC (mFindCount__8daNpcT_c)
//	8054FDE8: 80450FDC (mFindCount__8daNpcT_c)
//	8054FDF4: 80425708 (mFindActorPtrs__8daNpcT_c)
//	8054FDF8: 80425708 (mFindActorPtrs__8daNpcT_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm void daNpc_Kkri_c::srchYm(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/srchYm__12daNpc_Kkri_cFPvPv.s"
}
#pragma pop


/* 8054FE20-8054FE58 0038+00 s=1 e=0 z=0  None .text      getType__12daNpc_Kkri_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::getType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/getType__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 8054FE58-8054FE8C 0034+00 s=1 e=0 z=0  None .text      isDelete__12daNpc_Kkri_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::isDelete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/isDelete__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 8054FE8C-8054FFEC 0160+00 s=1 e=0 z=0  None .text      reset__12daNpc_Kkri_cFv                                      */
//	8054FE9C: 803621DC (_savegpr_29)
//	8054FEA4: 80553490 (m__18daNpc_Kkri_Param_c)
//	8054FEA8: 80553490 (m__18daNpc_Kkri_Param_c)
//	8054FEC4: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	8054FED8: 80003458 (memset)
//	8054FEE0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	8054FEE8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	8054FEF0: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	8054FEF8: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	8054FF00: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	8054FF6C: 80267954 (cM_rndF__Ff)
//	8054FF90: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	8054FFA0: 80003458 (memset)
//	8054FFD0: 8014A99C (setAngle__8daNpcT_cF5csXyz)
//	8054FFD8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/reset__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 8054FFEC-805500A0 00B4+00 s=1 e=0 z=0  None .text      checkChangeEvt__12daNpc_Kkri_cFv                             */
//	80550000: 80553CC8 (lit_4531)
//	80550004: 80553CC8 (lit_4531)
//	80550024: 80550D44 (chkAction__12daNpc_Kkri_cFM12daNpc_Kkri_cFPCvPvPv_i)
//	80550038: 804061C0 (g_dComIfG_gameInfo)
//	8055003C: 804061C0 (g_dComIfG_gameInfo)
//	80550064: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	8055007C: 8014A224 (evtChange__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::checkChangeEvt() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/checkChangeEvt__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 805500A0-80550270 01D0+00 s=1 e=0 z=0  None .text      setParam__12daNpc_Kkri_cFv                                   */
//	805500B0: 803621D0 (_savegpr_26)
//	805500B8: 80550CA8 (selectAction__12daNpc_Kkri_cFv)
//	805500C0: 8055032C (srchActors__12daNpc_Kkri_cFv)
//	805500C8: 80553490 (m__18daNpc_Kkri_Param_c)
//	805500CC: 80553490 (m__18daNpc_Kkri_Param_c)
//	805500FC: 804061C0 (g_dComIfG_gameInfo)
//	80550100: 804061C0 (g_dComIfG_gameInfo)
//	80550168: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80550180: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80550188: 804061C0 (g_dComIfG_gameInfo)
//	8055018C: 804061C0 (g_dComIfG_gameInfo)
//	805501A8: 80553490 (m__18daNpc_Kkri_Param_c)
//	805501AC: 80553490 (m__18daNpc_Kkri_Param_c)
//	805501F4: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	805501F8: 80553490 (m__18daNpc_Kkri_Param_c)
//	805501FC: 80553490 (m__18daNpc_Kkri_Param_c)
//	8055024C: 8055353C (lit_4243)
//	80550250: 8055353C (lit_4243)
//	8055025C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/setParam__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 80550270-8055032C 00BC+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__12daNpc_Kkri_cFv                         */
//	80550280: 803621DC (_savegpr_29)
//	805502FC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80550308: 80553550 (lit_4621)
//	8055030C: 80553550 (lit_4621)
//	80550318: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::setAfterTalkMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/setAfterTalkMotion__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 8055032C-80550398 006C+00 s=1 e=0 z=0  None .text      srchActors__12daNpc_Kkri_cFv                                 */
//	80550360: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80550374: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80550380: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::srchActors() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/srchActors__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 80550398-80550438 00A0+00 s=1 e=0 z=0  None .text      evtTalk__12daNpc_Kkri_cFv                                    */
//	805503AC: 80553CD4 (lit_4635)
//	805503B0: 80553CD4 (lit_4635)
//	805503D0: 80550D44 (chkAction__12daNpc_Kkri_cFM12daNpc_Kkri_cFPCvPvPv_i)
//	805503E8: 80362084 (__ptmf_scall)
//	805503F4: 80553CE0 (lit_4640)
//	805503F8: 80553CE0 (lit_4640)
//	8055041C: 80550D70 (setAction__12daNpc_Kkri_cFM12daNpc_Kkri_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::evtTalk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/evtTalk__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 80550438-80550500 00C8+00 s=1 e=0 z=0  None .text      evtCutProc__12daNpc_Kkri_cFv                                 */
//	80550450: 804061C0 (g_dComIfG_gameInfo)
//	80550454: 804061C0 (g_dComIfG_gameInfo)
//	80550460: 805535A4 (struct_805535A4)
//	80550464: 805535A4 (struct_805535A4)
//	80550474: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	8055048C: 80553C80 (mCutNameList__12daNpc_Kkri_c)
//	80550490: 80553C80 (mCutNameList__12daNpc_Kkri_c)
//	805504A0: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	805504B4: 80553CA4 (mCutList__12daNpc_Kkri_c)
//	805504B8: 80553CA4 (mCutList__12daNpc_Kkri_c)
//	805504C0: 80362084 (__ptmf_scall)
//	805504D8: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::evtCutProc() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/evtCutProc__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 80550500-805505F8 00F8+00 s=1 e=0 z=0  None .text      action__12daNpc_Kkri_cFv                                     */
//	8055051C: 8014AA40 (hitChk__8daNpcT_cFP12dCcD_GObjInfUl)
//	80550538: 8055353C (lit_4243)
//	8055053C: 8055353C (lit_4243)
//	80550588: 80362018 (__ptmf_test)
//	8055059C: 80362048 (__ptmf_cmpr)
//	805505B4: 80362084 (__ptmf_scall)
//	805505E0: 80550D70 (setAction__12daNpc_Kkri_cFM12daNpc_Kkri_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::action() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/action__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 805505F8-805506BC 00C4+00 s=1 e=0 z=0  None .text      beforeMove__12daNpc_Kkri_cFv                                 */
//	8055062C: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
//	8055066C: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::beforeMove() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/beforeMove__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 805506BC-80550ADC 0420+00 s=1 e=0 z=0  None .text      setAttnPos__12daNpc_Kkri_cFv                                 */
//	805506D4: 803621D4 (_savegpr_27)
//	805506DC: 80553490 (m__18daNpc_Kkri_Param_c)
//	805506E0: 80553490 (m__18daNpc_Kkri_Param_c)
//	80550704: 804061C0 (g_dComIfG_gameInfo)
//	80550708: 804061C0 (g_dComIfG_gameInfo)
//	805507F8: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	805508A4: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	8055094C: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	80550960: 80147C38 (calcJntRad__15daNpcT_JntAnm_cFfff)
//	80550968: 80149190 (setMtx__8daNpcT_cFv)
//	80550998: 803DD470 (now__14mDoMtx_stack_c)
//	8055099C: 803DD470 (now__14mDoMtx_stack_c)
//	805509A0: 803464B0 (PSMTXCopy)
//	805509A4: 803DD470 (now__14mDoMtx_stack_c)
//	805509A8: 803DD470 (now__14mDoMtx_stack_c)
//	805509B4: 80346D6C (PSMTXMultVec)
//	805509E0: 80552EEC (setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs)
//	80550A14: 80552DD0 (setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs)
//	80550A70: 803DD470 (now__14mDoMtx_stack_c)
//	80550A74: 803DD470 (now__14mDoMtx_stack_c)
//	80550A7C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80550A80: 803DD470 (now__14mDoMtx_stack_c)
//	80550A84: 803DD470 (now__14mDoMtx_stack_c)
//	80550A90: 80346D6C (PSMTXMultVec)
//	80550AA0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80550AC8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/setAttnPos__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 80550ADC-80550CA0 01C4+00 s=1 e=0 z=0  None .text      setCollision__12daNpc_Kkri_cFv                               */
//	80550B00: 80553490 (m__18daNpc_Kkri_Param_c)
//	80550B04: 80553490 (m__18daNpc_Kkri_Param_c)
//	80550B20: 804061C0 (g_dComIfG_gameInfo)
//	80550B24: 804061C0 (g_dComIfG_gameInfo)
//	80550BE8: 803DD470 (now__14mDoMtx_stack_c)
//	80550BEC: 803DD470 (now__14mDoMtx_stack_c)
//	80550BF4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80550BF8: 803DD470 (now__14mDoMtx_stack_c)
//	80550BFC: 803DD470 (now__14mDoMtx_stack_c)
//	80550C08: 80346D6C (PSMTXMultVec)
//	80550C18: 80347090 (PSVECAdd)
//	80550C24: 8026F1F8 (SetH__8cM3dGCylFf)
//	80550C30: 8026F200 (SetR__8cM3dGCylFf)
//	80550C3C: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80550C40: 804061C0 (g_dComIfG_gameInfo)
//	80550C44: 804061C0 (g_dComIfG_gameInfo)
//	80550C50: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::setCollision() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/setCollision__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 80550CA0-80550CA8 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__12daNpc_Kkri_cFv                                */
// True False
//  bool False
bool daNpc_Kkri_c::drawDbgInfo() {
	return false;
}


/* 80550CA8-80550D44 009C+00 s=1 e=0 z=0  None .text      selectAction__12daNpc_Kkri_cFv                               */
//	80550CA8: 805535F8 (cNullVec__6Z2Calc)
//	80550CAC: 805535F8 (cNullVec__6Z2Calc)
//	80550CB0: 803A2180 (__ptmf_null)
//	80550CB4: 803A2180 (__ptmf_null)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::selectAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/selectAction__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 80550D44-80550D70 002C+00 s=2 e=0 z=0  None .text      chkAction__12daNpc_Kkri_cFM12daNpc_Kkri_cFPCvPvPv_i          */
//	80550D54: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Kkri_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Kkri_c False
asm void daNpc_Kkri_c::chkAction(int (daNpc_Kkri_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/chkAction__12daNpc_Kkri_cFM12daNpc_Kkri_cFPCvPvPv_i.s"
}
#pragma pop


/* 80550D70-80550E18 00A8+00 s=2 e=0 z=0  None .text      setAction__12daNpc_Kkri_cFM12daNpc_Kkri_cFPCvPvPv_i          */
//	80550D98: 80362018 (__ptmf_test)
//	80550DB0: 80362084 (__ptmf_scall)
//	80550DDC: 80362018 (__ptmf_test)
//	80550DF4: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Kkri_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Kkri_c False
asm void daNpc_Kkri_c::setAction(int (daNpc_Kkri_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/setAction__12daNpc_Kkri_cFM12daNpc_Kkri_cFPCvPvPv_i.s"
}
#pragma pop


/* 80550E18-80550F70 0158+00 s=1 e=0 z=0  None .text      cutConversationAboutSoup__12daNpc_Kkri_cFi                   */
//	80550E28: 803621D0 (_savegpr_26)
//	80550E40: 804061C0 (g_dComIfG_gameInfo)
//	80550E44: 804061C0 (g_dComIfG_gameInfo)
//	80550E50: 805535A4 (struct_805535A4)
//	80550E54: 805535A4 (struct_805535A4)
//	80550E60: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80550E78: 805535A4 (struct_805535A4)
//	80550E7C: 805535A4 (struct_805535A4)
//	80550E88: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80550EA0: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80550EC4: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80550EE8: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80550EF4: 8055353C (lit_4243)
//	80550EF8: 8055353C (lit_4243)
//	80550F18: 805531D0 (func_805531D0)
//	80550F38: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80550F5C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Kkri_c::cutConversationAboutSoup(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/cutConversationAboutSoup__12daNpc_Kkri_cFi.s"
}
#pragma pop


/* 80550F70-80551084 0114+00 s=1 e=0 z=0  None .text      cutYmLook__12daNpc_Kkri_cFi                                  */
//	80550F80: 803621D0 (_savegpr_26)
//	80550F98: 804061C0 (g_dComIfG_gameInfo)
//	80550F9C: 804061C0 (g_dComIfG_gameInfo)
//	80550FA8: 805535A4 (struct_805535A4)
//	80550FAC: 805535A4 (struct_805535A4)
//	80550FB8: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80550FD0: 805535A4 (struct_805535A4)
//	80550FD4: 805535A4 (struct_805535A4)
//	80550FE0: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80550FF8: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80551024: 80450FDC (mFindCount__8daNpcT_c)
//	80551028: 80450FDC (mFindCount__8daNpcT_c)
//	8055102C: 8054FD78 (srchYm__12daNpc_Kkri_cFPvPv)
//	80551030: 8054FD78 (srchYm__12daNpc_Kkri_cFPvPv)
//	80551038: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8055103C: 80450FDC (mFindCount__8daNpcT_c)
//	80551040: 80450FDC (mFindCount__8daNpcT_c)
//	80551050: 805531D0 (func_805531D0)
//	80551070: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Kkri_c::cutYmLook(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/cutYmLook__12daNpc_Kkri_cFi.s"
}
#pragma pop


/* 80551084-805512E0 025C+00 s=1 e=0 z=0  None .text      sleep__12daNpc_Kkri_cFv                                      */
//	80551094: 803621DC (_savegpr_29)
//	8055109C: 8019FA10 (dKy_getdaytime_hour__Fv)
//	805510AC: 805531EC (func_805531EC)
//	805510F0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551100: 80553550 (lit_4621)
//	80551104: 80553550 (lit_4621)
//	80551120: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551130: 80553550 (lit_4621)
//	80551134: 80553550 (lit_4621)
//	80551150: 805531D0 (func_805531D0)
//	80551170: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551180: 80553550 (lit_4621)
//	80551184: 80553550 (lit_4621)
//	805511A0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	805511B0: 80553550 (lit_4621)
//	805511B4: 80553550 (lit_4621)
//	805511C4: 80145A24 (checkEndSequence__22daNpcT_MotionSeqMngr_cFv)
//	805511E8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	805511F8: 80553550 (lit_4621)
//	805511FC: 80553550 (lit_4621)
//	80551218: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551228: 80553550 (lit_4621)
//	8055122C: 80553550 (lit_4621)
//	8055123C: 805531D0 (func_805531D0)
//	80551270: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551280: 80553550 (lit_4621)
//	80551284: 80553550 (lit_4621)
//	805512A0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	805512B0: 80553550 (lit_4621)
//	805512B4: 80553550 (lit_4621)
//	805512CC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Kkri_c::sleep() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/sleep__12daNpc_Kkri_cFv.s"
}
#pragma pop


/* 805512E0-80551538 0258+00 s=1 e=0 z=0  None .text      wait__12daNpc_Kkri_cFPv                                      */
//	80551338: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551348: 80553550 (lit_4621)
//	8055134C: 80553550 (lit_4621)
//	80551368: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551378: 80553550 (lit_4621)
//	8055137C: 80553550 (lit_4621)
//	8055139C: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	805513B8: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	805513C4: 8055353C (lit_4243)
//	805513C8: 8055353C (lit_4243)
//	805513E8: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	805513FC: 8014ABD0 (chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs)
//	80551418: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80551424: 8055353C (lit_4243)
//	80551428: 8055353C (lit_4243)
//	80551444: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	8055147C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80551488: 8055353C (lit_4243)
//	8055148C: 8055353C (lit_4243)
//	805514D4: 8014B648 (step__8daNpcT_cFsiiii)
//	805514F0: 8014AA18 (setAngle__8daNpcT_cFs)
//	80551518: 8014B338 (srchPlayerActor__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Kkri_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/wait__12daNpc_Kkri_cFPv.s"
}
#pragma pop


/* 80551538-80551A4C 0514+00 s=1 e=0 z=0  None .text      sitWait1__12daNpc_Kkri_cFPv                                  */
//	80551548: 803621D8 (_savegpr_28)
//	80551550: 80553490 (m__18daNpc_Kkri_Param_c)
//	80551554: 80553490 (m__18daNpc_Kkri_Param_c)
//	8055159C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	805515C8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551610: 804061C0 (g_dComIfG_gameInfo)
//	80551614: 804061C0 (g_dComIfG_gameInfo)
//	8055161C: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80551630: 804061C0 (g_dComIfG_gameInfo)
//	80551634: 804061C0 (g_dComIfG_gameInfo)
//	80551640: 80034BE8 (isSwitch__12dSv_danBit_cCFi)
//	80551650: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	8055166C: 804061C0 (g_dComIfG_gameInfo)
//	80551670: 804061C0 (g_dComIfG_gameInfo)
//	8055167C: 80035360 (isSwitch__10dSv_info_cCFii)
//	8055168C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	805516A8: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	805516B4: 804061C0 (g_dComIfG_gameInfo)
//	805516B8: 804061C0 (g_dComIfG_gameInfo)
//	80551700: 804061C0 (g_dComIfG_gameInfo)
//	80551704: 804061C0 (g_dComIfG_gameInfo)
//	80551730: 804061C0 (g_dComIfG_gameInfo)
//	80551734: 804061C0 (g_dComIfG_gameInfo)
//	80551780: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	8055179C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	805517C8: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	805517DC: 8014ABD0 (chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs)
//	805517F8: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80551838: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80551860: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80551898: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	805518EC: 8014B648 (step__8daNpcT_cFsiiii)
//	80551908: 8014AA18 (setAngle__8daNpcT_cFs)
//	80551930: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80551938: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80551970: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	8055198C: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	805519B4: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	805519EC: 80018CE0 (fopAc_IsActor__FPv)
//	80551A00: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80551A18: 80551084 (sleep__12daNpc_Kkri_cFv)
//	80551A2C: 8014CAEC (daNpcT_onTmpBit__FUl)
//	80551A38: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Kkri_c::sitWait1(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/sitWait1__12daNpc_Kkri_cFPv.s"
}
#pragma pop


/* 80551A4C-80551DA4 0358+00 s=1 e=0 z=0  None .text      fearWait__12daNpc_Kkri_cFPv                                  */
//	80551A64: 803621CC (_savegpr_25)
//	80551A6C: 80553490 (m__18daNpc_Kkri_Param_c)
//	80551A70: 80553490 (m__18daNpc_Kkri_Param_c)
//	80551AB0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551ADC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551B0C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80551B40: 804061C0 (g_dComIfG_gameInfo)
//	80551B44: 804061C0 (g_dComIfG_gameInfo)
//	80551B50: 80035360 (isSwitch__10dSv_info_cCFii)
//	80551B70: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551BB4: 80450FDC (mFindCount__8daNpcT_c)
//	80551BB8: 80450FDC (mFindCount__8daNpcT_c)
//	80551BBC: 8054FD78 (srchYm__12daNpc_Kkri_cFPvPv)
//	80551BC0: 8054FD78 (srchYm__12daNpc_Kkri_cFPvPv)
//	80551BC8: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80551BD4: 80450FDC (mFindCount__8daNpcT_c)
//	80551BD8: 80450FDC (mFindCount__8daNpcT_c)
//	80551BDC: 80425708 (mFindActorPtrs__8daNpcT_c)
//	80551BE0: 80425708 (mFindActorPtrs__8daNpcT_c)
//	80551C30: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80551C58: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80551C9C: 80425708 (mFindActorPtrs__8daNpcT_c)
//	80551CA0: 80425708 (mFindActorPtrs__8daNpcT_c)
//	80551CA4: 80450FDC (mFindCount__8daNpcT_c)
//	80551CA8: 80450FDC (mFindCount__8daNpcT_c)
//	80551CB8: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80551CD0: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80551CF8: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80551D20: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80551D58: 80018CE0 (fopAc_IsActor__FPv)
//	80551D6C: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80551D90: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Kkri_c::fearWait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/fearWait__12daNpc_Kkri_cFPv.s"
}
#pragma pop


/* 80551DA4-805520A0 02FC+00 s=3 e=0 z=0  None .text      talk__12daNpc_Kkri_cFPv                                      */
//	80551E08: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80551E10: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80551E18: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80551E20: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80551E3C: 804061C0 (g_dComIfG_gameInfo)
//	80551E40: 804061C0 (g_dComIfG_gameInfo)
//	80551E4C: 80035360 (isSwitch__10dSv_info_cCFii)
//	80551E64: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80551E70: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80551E8C: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80551E9C: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80551EB0: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80551EF4: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80551F08: 8024A528 (getEventId__10dMsgFlow_cFPi)
//	80551F50: 8001BBE8 (fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz)
//	80551F5C: 8002139C (fpcEx_IsExist__FUi)
//	80551F78: 8014A224 (evtChange__8daNpcT_cFv)
//	80551F8C: 804061C0 (g_dComIfG_gameInfo)
//	80551F90: 804061C0 (g_dComIfG_gameInfo)
//	80551F98: 80042468 (reset__14dEvt_control_cFv)
//	80551FBC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80551FC8: 8055353C (lit_4243)
//	80551FCC: 8055353C (lit_4243)
//	80552004: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80552010: 8055353C (lit_4243)
//	80552014: 8055353C (lit_4243)
//	80552040: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	8055204C: 8055353C (lit_4243)
//	80552050: 8055353C (lit_4243)
//	80552084: 8014B648 (step__8daNpcT_cFsiiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Kkri_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/talk__12daNpc_Kkri_cFPv.s"
}
#pragma pop


/* 805520A0-805520C0 0020+00 s=1 e=0 z=0  None .text      daNpc_Kkri_Create__FPv                                       */
//	805520AC: 8054F4F8 (create__12daNpc_Kkri_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Kkri_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/daNpc_Kkri_Create__FPv.s"
}
#pragma pop


/* 805520C0-805520E0 0020+00 s=1 e=0 z=0  None .text      daNpc_Kkri_Delete__FPv                                       */
//	805520CC: 8054FC10 (Delete__12daNpc_Kkri_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Kkri_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/daNpc_Kkri_Delete__FPv.s"
}
#pragma pop


/* 805520E0-80552100 0020+00 s=1 e=0 z=0  None .text      daNpc_Kkri_Execute__FPv                                      */
//	805520EC: 8054FC44 (Execute__12daNpc_Kkri_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Kkri_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/daNpc_Kkri_Execute__FPv.s"
}
#pragma pop


/* 80552100-80552120 0020+00 s=1 e=0 z=0  None .text      daNpc_Kkri_Draw__FPv                                         */
//	8055210C: 8054FC64 (Draw__12daNpc_Kkri_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Kkri_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/daNpc_Kkri_Draw__FPv.s"
}
#pragma pop


/* 80552120-80552128 0008+00 s=1 e=0 z=0  None .text      daNpc_Kkri_IsDelete__FPv                                     */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Kkri_IsDelete(void* param_0) {
	return true;
}


/* 80552128-80552158 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	80552144: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 80552158-805521A0 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80552170: 80553DA8 (__vt__10cCcD_GStts)
//	80552174: 80553DA8 (__vt__10cCcD_GStts)
//	80552184: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 805521A0-80552528 0388+00 s=1 e=0 z=0  None .text      __dt__8daNpcT_cFv                                            */
//	805521C0: 803B3A78 (__vt__8daNpcT_c)
//	805521C4: 803B3A78 (__vt__8daNpcT_c)
//	805521D8: 80552564 (__dt__5csXyzFv)
//	805521DC: 80552564 (__dt__5csXyzFv)
//	805521E8: 80361CE8 (__destroy_arr)
//	805521F4: 80553DD8 (__vt__15daNpcT_JntAnm_c)
//	805521F8: 80553DD8 (__vt__15daNpcT_JntAnm_c)
//	80552204: 80552528 (__dt__4cXyzFv)
//	80552208: 80552528 (__dt__4cXyzFv)
//	80552214: 80361CE8 (__destroy_arr)
//	8055221C: 80552528 (__dt__4cXyzFv)
//	80552220: 80552528 (__dt__4cXyzFv)
//	8055222C: 80361CE8 (__destroy_arr)
//	80552234: 80552528 (__dt__4cXyzFv)
//	80552238: 80552528 (__dt__4cXyzFv)
//	80552244: 80361CE8 (__destroy_arr)
//	8055224C: 80552528 (__dt__4cXyzFv)
//	80552250: 80552528 (__dt__4cXyzFv)
//	8055225C: 80361CE8 (__destroy_arr)
//	80552264: 80552528 (__dt__4cXyzFv)
//	80552268: 80552528 (__dt__4cXyzFv)
//	80552274: 80361CE8 (__destroy_arr)
//	8055227C: 80552528 (__dt__4cXyzFv)
//	80552280: 80552528 (__dt__4cXyzFv)
//	8055228C: 80361CE8 (__destroy_arr)
//	80552298: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	8055229C: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	805522AC: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	805522B0: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	805522C0: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	805522C4: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	805522D4: 80553DC0 (__vt__22daNpcT_MotionSeqMngr_c)
//	805522D8: 80553DC0 (__vt__22daNpcT_MotionSeqMngr_c)
//	805522E8: 80553DC0 (__vt__22daNpcT_MotionSeqMngr_c)
//	805522EC: 80553DC0 (__vt__22daNpcT_MotionSeqMngr_c)
//	805522FC: 80077CDC (__dt__11dBgS_LinChkFv)
//	80552308: 800775F0 (__dt__11dBgS_GndChkFv)
//	80552314: 803AC2E4 (__vt__9dCcD_Stts)
//	80552318: 803AC2E4 (__vt__9dCcD_Stts)
//	80552330: 80553DB4 (__vt__10dCcD_GStts)
//	80552334: 80553DB4 (__vt__10dCcD_GStts)
//	80552344: 80553DA8 (__vt__10cCcD_GStts)
//	80552348: 80553DA8 (__vt__10cCcD_GStts)
//	80552358: 803C3728 (__vt__9cCcD_Stts)
//	8055235C: 803C3728 (__vt__9cCcD_Stts)
//	8055236C: 80249F48 (__dt__10dMsgFlow_cFv)
//	80552378: 80267C94 (__dt__11cBgS_GndChkFv)
//	80552384: 80553D9C (__vt__12dBgS_AcchCir)
//	80552388: 80553D9C (__vt__12dBgS_AcchCir)
//	80552398: 8026EF18 (__dt__8cM3dGCirFv)
//	805523A4: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	805523B0: 803AC2E4 (__vt__9dCcD_Stts)
//	805523B4: 803AC2E4 (__vt__9dCcD_Stts)
//	805523CC: 80553DB4 (__vt__10dCcD_GStts)
//	805523D0: 80553DB4 (__vt__10dCcD_GStts)
//	805523E0: 80553DA8 (__vt__10cCcD_GStts)
//	805523E4: 80553DA8 (__vt__10cCcD_GStts)
//	805523F4: 803C3728 (__vt__9cCcD_Stts)
//	805523F8: 803C3728 (__vt__9cCcD_Stts)
//	80552408: 80553D78 (__vt__12dBgS_ObjAcch)
//	8055240C: 80553D78 (__vt__12dBgS_ObjAcch)
//	8055242C: 80075F94 (__dt__9dBgS_AcchFv)
//	80552448: 80553D6C (__vt__12J3DFrameCtrl)
//	8055244C: 80553D6C (__vt__12J3DFrameCtrl)
//	8055246C: 80553D6C (__vt__12J3DFrameCtrl)
//	80552470: 80553D6C (__vt__12J3DFrameCtrl)
//	80552490: 80553D6C (__vt__12J3DFrameCtrl)
//	80552494: 80553D6C (__vt__12J3DFrameCtrl)
//	805524B4: 80553D6C (__vt__12J3DFrameCtrl)
//	805524B8: 80553D6C (__vt__12J3DFrameCtrl)
//	805524D8: 80553D6C (__vt__12J3DFrameCtrl)
//	805524DC: 80553D6C (__vt__12J3DFrameCtrl)
//	805524EC: 802C0420 (__dt__10Z2CreatureFv)
//	805524F8: 80018C8C (__dt__10fopAc_ac_cFv)
//	80552508: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_c::~daNpcT_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__8daNpcT_cFv.s"
}
#pragma pop


/* 80552528-80552564 003C+00 s=3 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80552548: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__4cXyzFv.s"
}
#pragma pop


/* 80552564-805525A0 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80552584: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__5csXyzFv.s"
}
#pragma pop


/* 805525A0-805525E8 0048+00 s=3 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv                                 */
//	805525B8: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	805525BC: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	805525CC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 805525E8-80552630 0048+00 s=1 e=0 z=0  None .text      __dt__13daNpcT_Path_cFv                                      */
//	80552600: 80553DFC (__vt__13daNpcT_Path_c)
//	80552604: 80553DFC (__vt__13daNpcT_Path_c)
//	80552614: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_Path_c::~daNpcT_Path_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__13daNpcT_Path_cFv.s"
}
#pragma pop


/* 80552630-8055266C 003C+00 s=1 e=0 z=0  None .text      __ct__18daNpcT_ActorMngr_cFv                                 */
//	80552644: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	80552648: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	80552650: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__ct__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 8055266C-805526B4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80552684: 80553DF0 (__vt__8cM3dGCyl)
//	80552688: 80553DF0 (__vt__8cM3dGCyl)
//	80552698: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 805526B4-805526FC 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	805526CC: 80553DE4 (__vt__8cM3dGAab)
//	805526D0: 80553DE4 (__vt__8cM3dGAab)
//	805526E0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 805526FC-80552B00 0404+00 s=1 e=0 z=0  None .text      __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	8055270C: 803621C0 (_savegpr_22)
//	80552734: 80553490 (m__18daNpc_Kkri_Param_c)
//	80552738: 80553490 (m__18daNpc_Kkri_Param_c)
//	8055273C: 80018B64 (__ct__10fopAc_ac_cFv)
//	80552740: 803B3A78 (__vt__8daNpcT_c)
//	80552744: 803B3A78 (__vt__8daNpcT_c)
//	80552760: 802C03C8 (__ct__10Z2CreatureFv)
//	80552768: 80553D6C (__vt__12J3DFrameCtrl)
//	8055276C: 80553D6C (__vt__12J3DFrameCtrl)
//	8055277C: 803283FC (init__12J3DFrameCtrlFs)
//	8055278C: 80553D6C (__vt__12J3DFrameCtrl)
//	80552790: 80553D6C (__vt__12J3DFrameCtrl)
//	805527A0: 803283FC (init__12J3DFrameCtrlFs)
//	805527B0: 80553D6C (__vt__12J3DFrameCtrl)
//	805527B4: 80553D6C (__vt__12J3DFrameCtrl)
//	805527C4: 803283FC (init__12J3DFrameCtrlFs)
//	805527D4: 80553D6C (__vt__12J3DFrameCtrl)
//	805527D8: 80553D6C (__vt__12J3DFrameCtrl)
//	805527E8: 803283FC (init__12J3DFrameCtrlFs)
//	805527F8: 80553D6C (__vt__12J3DFrameCtrl)
//	805527FC: 80553D6C (__vt__12J3DFrameCtrl)
//	8055280C: 803283FC (init__12J3DFrameCtrlFs)
//	80552820: 800760A0 (__ct__9dBgS_AcchFv)
//	80552824: 80553D78 (__vt__12dBgS_ObjAcch)
//	80552828: 80553D78 (__vt__12dBgS_ObjAcch)
//	80552844: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80552848: 803C3728 (__vt__9cCcD_Stts)
//	8055284C: 803C3728 (__vt__9cCcD_Stts)
//	80552858: 80083760 (__ct__10dCcD_GSttsFv)
//	8055285C: 803AC2E4 (__vt__9dCcD_Stts)
//	80552860: 803AC2E4 (__vt__9dCcD_Stts)
//	80552874: 80075EAC (__ct__12dBgS_AcchCirFv)
//	8055287C: 80267C1C (__ct__11cBgS_GndChkFv)
//	80552884: 80249F00 (__ct__10dMsgFlow_cFv)
//	80552888: 803C3728 (__vt__9cCcD_Stts)
//	8055288C: 803C3728 (__vt__9cCcD_Stts)
//	80552898: 80083760 (__ct__10dCcD_GSttsFv)
//	8055289C: 803AC2E4 (__vt__9dCcD_Stts)
//	805528A0: 803AC2E4 (__vt__9dCcD_Stts)
//	805528B0: 8007757C (__ct__11dBgS_GndChkFv)
//	805528B8: 80077C68 (__ct__11dBgS_LinChkFv)
//	805528BC: 80553DC0 (__vt__22daNpcT_MotionSeqMngr_c)
//	805528C0: 80553DC0 (__vt__22daNpcT_MotionSeqMngr_c)
//	805528D4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	805528D8: 80553DC0 (__vt__22daNpcT_MotionSeqMngr_c)
//	805528DC: 80553DC0 (__vt__22daNpcT_MotionSeqMngr_c)
//	805528F0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	805528F4: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	805528F8: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	80552904: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80552908: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	8055290C: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	80552918: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80552920: 80553DD8 (__vt__15daNpcT_JntAnm_c)
//	80552924: 80553DD8 (__vt__15daNpcT_JntAnm_c)
//	8055292C: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	80552930: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	8055293C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80552944: 80552C00 (__ct__4cXyzFv)
//	80552948: 80552C00 (__ct__4cXyzFv)
//	8055294C: 80552528 (__dt__4cXyzFv)
//	80552950: 80552528 (__dt__4cXyzFv)
//	8055295C: 80361D60 (__construct_array)
//	80552964: 80552C00 (__ct__4cXyzFv)
//	80552968: 80552C00 (__ct__4cXyzFv)
//	8055296C: 80552528 (__dt__4cXyzFv)
//	80552970: 80552528 (__dt__4cXyzFv)
//	8055297C: 80361D60 (__construct_array)
//	80552984: 80552C00 (__ct__4cXyzFv)
//	80552988: 80552C00 (__ct__4cXyzFv)
//	8055298C: 80552528 (__dt__4cXyzFv)
//	80552990: 80552528 (__dt__4cXyzFv)
//	8055299C: 80361D60 (__construct_array)
//	805529A4: 80552C00 (__ct__4cXyzFv)
//	805529A8: 80552C00 (__ct__4cXyzFv)
//	805529AC: 80552528 (__dt__4cXyzFv)
//	805529B0: 80552528 (__dt__4cXyzFv)
//	805529BC: 80361D60 (__construct_array)
//	805529C4: 80552C00 (__ct__4cXyzFv)
//	805529C8: 80552C00 (__ct__4cXyzFv)
//	805529CC: 80552528 (__dt__4cXyzFv)
//	805529D0: 80552528 (__dt__4cXyzFv)
//	805529DC: 80361D60 (__construct_array)
//	805529E4: 80552C00 (__ct__4cXyzFv)
//	805529E8: 80552C00 (__ct__4cXyzFv)
//	805529EC: 80552528 (__dt__4cXyzFv)
//	805529F0: 80552528 (__dt__4cXyzFv)
//	805529FC: 80361D60 (__construct_array)
//	80552A04: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80552A0C: 80552B00 (__ct__5csXyzFv)
//	80552A10: 80552B00 (__ct__5csXyzFv)
//	80552A14: 80552564 (__dt__5csXyzFv)
//	80552A18: 80552564 (__dt__5csXyzFv)
//	80552A24: 80361D60 (__construct_array)
//	80552A38: 80003458 (memset)
//	80552A40: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80552A48: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80552A50: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80552A58: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80552A60: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80552AC4: 80267954 (cM_rndF__Ff)
//	80552AEC: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/func_805526FC.s"
}
#pragma pop


/* 80552B00-80552B04 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80552B04-80552C00 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv                                    */
//	80552B24: 80553DD8 (__vt__15daNpcT_JntAnm_c)
//	80552B28: 80553DD8 (__vt__15daNpcT_JntAnm_c)
//	80552B34: 80552528 (__dt__4cXyzFv)
//	80552B38: 80552528 (__dt__4cXyzFv)
//	80552B44: 80361CE8 (__destroy_arr)
//	80552B4C: 80552528 (__dt__4cXyzFv)
//	80552B50: 80552528 (__dt__4cXyzFv)
//	80552B5C: 80361CE8 (__destroy_arr)
//	80552B64: 80552528 (__dt__4cXyzFv)
//	80552B68: 80552528 (__dt__4cXyzFv)
//	80552B74: 80361CE8 (__destroy_arr)
//	80552B7C: 80552528 (__dt__4cXyzFv)
//	80552B80: 80552528 (__dt__4cXyzFv)
//	80552B8C: 80361CE8 (__destroy_arr)
//	80552B94: 80552528 (__dt__4cXyzFv)
//	80552B98: 80552528 (__dt__4cXyzFv)
//	80552BA4: 80361CE8 (__destroy_arr)
//	80552BAC: 80552528 (__dt__4cXyzFv)
//	80552BB0: 80552528 (__dt__4cXyzFv)
//	80552BBC: 80361CE8 (__destroy_arr)
//	80552BC8: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	80552BCC: 80553DCC (__vt__18daNpcT_ActorMngr_c)
//	80552BE0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop


/* 80552C00-80552C04 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80552C04-80552C4C 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv                             */
//	80552C1C: 80553DC0 (__vt__22daNpcT_MotionSeqMngr_c)
//	80552C20: 80553DC0 (__vt__22daNpcT_MotionSeqMngr_c)
//	80552C30: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop


/* 80552C4C-80552CBC 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80552C6C: 80553D9C (__vt__12dBgS_AcchCir)
//	80552C70: 80553D9C (__vt__12dBgS_AcchCir)
//	80552C80: 8026EF18 (__dt__8cM3dGCirFv)
//	80552C8C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80552C9C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80552CBC-80552D18 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80552CD4: 80553DB4 (__vt__10dCcD_GStts)
//	80552CD8: 80553DB4 (__vt__10dCcD_GStts)
//	80552CE4: 80553DA8 (__vt__10cCcD_GStts)
//	80552CE8: 80553DA8 (__vt__10cCcD_GStts)
//	80552CFC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80552D18-80552D88 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80552D38: 80553D78 (__vt__12dBgS_ObjAcch)
//	80552D3C: 80553D78 (__vt__12dBgS_ObjAcch)
//	80552D58: 80075F94 (__dt__9dBgS_AcchFv)
//	80552D68: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80552D88-80552DD0 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80552DA0: 80553D6C (__vt__12J3DFrameCtrl)
//	80552DA4: 80553D6C (__vt__12J3DFrameCtrl)
//	80552DB4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80552DD0-80552EEC 011C+00 s=1 e=0 z=0  None .text      setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs                    */
//	80552DE8: 803621D8 (_savegpr_28)
//	80552E1C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80552E38: 80267674 (cM_atan2s__Fff)
//	80552E64: 80553548 (lit_4391)
//	80552E68: 80553548 (lit_4391)
//	80552E74: 80553570 (lit_4799)
//	80552E78: 80553570 (lit_4799)
//	80552ED8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleY(cXyz param_0, s16 param_1, int param_2, f32 param_3, s16 param_4) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs.s"
}
#pragma pop


/* 80552EEC-805530F4 0208+00 s=1 e=0 z=0  None .text      setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs                      */
//	80552F04: 803621DC (_savegpr_29)
//	80552F18: 80553490 (m__18daNpc_Kkri_Param_c)
//	80552F1C: 80553490 (m__18daNpc_Kkri_Param_c)
//	80552F38: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80552F68: 80347138 (PSVECSquareMag)
//	80552FD8: 80450AE0 (__float_nan)
//	80552FDC: 80450AE0 (__float_nan)
//	80553048: 80450AE0 (__float_nan)
//	8055304C: 80450AE0 (__float_nan)
//	8055305C: 80267674 (cM_atan2s__Fff)
//	805530E0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleX(cXyz param_0, f32 param_1, s16 param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs.s"
}
#pragma pop


/* 805530F4-805530F8 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi                               */
// True False
//  void False
//  int False
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
	/* empty function */
}


/* 805530F8-80553100 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootLJointNo() {
	return -1;
}


/* 80553100-80553108 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootRJointNo() {
	return -1;
}


/* 80553108-80553110 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballLMaterialNo() {
	return false;
}


/* 80553110-80553118 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballRMaterialNo() {
	return false;
}


/* 80553118-8055311C 0004+00 s=1 e=0 z=0  None .text      afterJntAnm__8daNpcT_cFi                                     */
// True False
//  void False
//  int False
void daNpcT_c::afterJntAnm(int param_0) {
	/* empty function */
}


/* 8055311C-80553124 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::evtEndProc() {
	return true;
}


/* 80553124-80553128 0004+00 s=1 e=0 z=0  None .text      afterMoved__8daNpcT_cFv                                      */
// True False
//  void False
void daNpcT_c::afterMoved() {
	/* empty function */
}


/* 80553128-80553130 0008+00 s=1 e=0 z=0  None .text      chkXYItems__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::chkXYItems() {
	return false;
}


/* 80553130-80553148 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcT_c::decTmr() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/decTmr__8daNpcT_cFv.s"
}
#pragma pop


/* 80553148-8055314C 0004+00 s=1 e=0 z=0  None .text      drawOtherMdl__8daNpcT_cFv                                    */
// True False
//  void False
void daNpcT_c::drawOtherMdl() {
	/* empty function */
}


/* 8055314C-80553150 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv                                       */
// True False
//  void False
void daNpcT_c::drawGhost() {
	/* empty function */
}


/* 80553150-80553158 0008+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__8daNpcT_cFiifi                        */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 80553158-80553160 0008+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__8daNpcT_cFiifi                            */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 80553160-80553190 0030+00 s=1 e=0 z=0  None .text      getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c False
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop


/* 80553190-805531C0 0030+00 s=1 e=0 z=0  None .text      getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_motionAnmData_c False
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop


/* 805531C0-805531C4 0004+00 s=1 e=0 z=0  None .text      changeAnm__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
	/* empty function */
}


/* 805531C4-805531C8 0004+00 s=1 e=0 z=0  None .text      changeBck__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBck(int* param_0, int* param_1) {
	/* empty function */
}


/* 805531C8-805531CC 0004+00 s=1 e=0 z=0  None .text      changeBtp__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
	/* empty function */
}


/* 805531CC-805531D0 0004+00 s=1 e=0 z=0  None .text      changeBtk__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
	/* empty function */
}


/* 805531D0-805531EC 001C+00 s=3 e=0 z=0  None .text      cLib_calcTimer<i>__FPi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int* False
// 	 int False
asm void cLib_calcTimer__template0(int* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/func_805531D0.s"
}
#pragma pop


/* 805531EC-80553268 007C+00 s=1 e=0 z=0  None .text      cLib_getRndValue<i>__Fii                                     */
//	80553200: 80553570 (lit_4799)
//	80553204: 80553570 (lit_4799)
//	80553220: 80267954 (cM_rndF__Ff)
//	80553224: 80553570 (lit_4799)
//	80553228: 80553570 (lit_4799)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int False
//  int False
asm void cLib_getRndValue__template0(int param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/func_805531EC.s"
}
#pragma pop


/* ############################################################################################## */
/* 80553ECC-80553ED8 000C+00 s=2 e=0 z=0  None .data      __vt__18daNpc_Kkri_Param_c                                   */
SECTION_DATA void* __vt__18daNpc_Kkri_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpc_Kkri_Param_cFv,
};

/* 80553EE0-80553EEC 000C+00 s=1 e=0 z=0  None .bss       @3851                                                        */
static u8 lit_3851[12];

/* 80553EEC-80553EF0 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80553268-80553304 009C+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_kkri_cpp                                     */
//	80553274: 805535F8 (cNullVec__6Z2Calc)
//	80553278: 805535F8 (cNullVec__6Z2Calc)
//	8055327C: 803A2180 (__ptmf_null)
//	80553280: 803A2180 (__ptmf_null)
//	805532D0: 80553ECC (__vt__18daNpc_Kkri_Param_c)
//	805532D4: 80553ECC (__vt__18daNpc_Kkri_Param_c)
//	805532D8: 80553EEC (l_HIO)
//	805532DC: 80553EEC (l_HIO)
//	805532E0: 80553424 (__dt__18daNpc_Kkri_Param_cFv)
//	805532E4: 80553424 (__dt__18daNpc_Kkri_Param_cFv)
//	805532E8: 80553EE0 (lit_3851)
//	805532EC: 80553EE0 (lit_3851)
//	805532F0: 8054F338 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_kkri_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__sinit_d_a_npc_kkri_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80553268 = (void*)__sinit_d_a_npc_kkri_cpp;
#pragma pop


/* 80553304-805533E4 00E0+00 s=1 e=0 z=0  None .text      __ct__12daNpc_Kkri_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80553324: 805526FC (__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80553328: 80553E08 (__vt__12daNpc_Kkri_c)
//	8055332C: 80553E08 (__vt__12daNpc_Kkri_c)
//	8055333C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80553340: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80553344: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8055334C: 80553DE4 (__vt__8cM3dGAab)
//	80553350: 80553DE4 (__vt__8cM3dGAab)
//	80553358: 80553DF0 (__vt__8cM3dGCyl)
//	8055335C: 80553DF0 (__vt__8cM3dGCyl)
//	80553364: 803C35A4 (__vt__12cCcD_CylAttr)
//	80553368: 803C35A4 (__vt__12cCcD_CylAttr)
//	80553378: 803AC050 (__vt__8dCcD_Cyl)
//	8055337C: 803AC050 (__vt__8dCcD_Cyl)
//	80553398: 80552630 (__ct__18daNpcT_ActorMngr_cFv)
//	8055339C: 80552630 (__ct__18daNpcT_ActorMngr_cFv)
//	805533A0: 805525A0 (__dt__18daNpcT_ActorMngr_cFv)
//	805533A4: 805525A0 (__dt__18daNpcT_ActorMngr_cFv)
//	805533B0: 80361D60 (__construct_array)
//	805533B8: 80553DFC (__vt__13daNpcT_Path_c)
//	805533BC: 80553DFC (__vt__13daNpcT_Path_c)
//	805533C4: 80145C40 (initialize__13daNpcT_Path_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpc_Kkri_c::daNpc_Kkri_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/func_80553304.s"
}
#pragma pop


/* 805533E4-805533EC 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__12daNpc_Kkri_cFv                       */
// True False
//  s32 False
s32 daNpc_Kkri_c::getEyeballMaterialNo() {
	return 2;
}


/* 805533EC-805533F4 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__12daNpc_Kkri_cFv                             */
// True False
//  s32 False
s32 daNpc_Kkri_c::getHeadJointNo() {
	return 4;
}


/* 805533F4-805533FC 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__12daNpc_Kkri_cFv                             */
// True False
//  s32 False
s32 daNpc_Kkri_c::getNeckJointNo() {
	return 3;
}


/* 805533FC-80553404 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__12daNpc_Kkri_cFv                         */
// True False
//  bool False
bool daNpc_Kkri_c::getBackboneJointNo() {
	return true;
}


/* 80553404-80553414 0010+00 s=1 e=0 z=0  None .text      checkChangeJoint__12daNpc_Kkri_cFi                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Kkri_c::checkChangeJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/checkChangeJoint__12daNpc_Kkri_cFi.s"
}
#pragma pop


/* 80553414-80553424 0010+00 s=1 e=0 z=0  None .text      checkRemoveJoint__12daNpc_Kkri_cFi                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Kkri_c::checkRemoveJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/checkRemoveJoint__12daNpc_Kkri_cFi.s"
}
#pragma pop


/* 80553424-8055346C 0048+00 s=2 e=0 z=0  None .text      __dt__18daNpc_Kkri_Param_cFv                                 */
//	8055343C: 80553ECC (__vt__18daNpc_Kkri_Param_c)
//	80553440: 80553ECC (__vt__18daNpc_Kkri_Param_c)
//	80553450: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Kkri_Param_c::~daNpc_Kkri_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/__dt__18daNpc_Kkri_Param_cFv.s"
}
#pragma pop


/* 8055346C-80553474 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80553470: 80552D18 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_8055346C() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/func_8055346C.s"
}
#pragma pop


/* 80553474-8055347C 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80553478: 80552D18 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80553474() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_kkri/d_a_npc_kkri/func_80553474.s"
}
#pragma pop


