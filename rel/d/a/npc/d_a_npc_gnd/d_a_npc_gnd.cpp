// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_gnd
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd.h"

// 
// Types:
// 

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daNpcT_MotionSeqMngr_c {
	struct sequenceStepData_c {
	};

	/* 80145898 */ // False False
void initialize();
	/* 809BDC98 */ // True False
~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_motionAnmData_c {
};

struct daNpcT_evtData_c {
};

struct J3DJoint {
};

struct daNpcT_faceMotionAnmData_c {
};

struct daNpc_Gnd_c {
	/* 809BB60C */ // True False
~daNpc_Gnd_c();
	/* 809BB730 */ // True False
void create();
	/* 809BB9D4 */ // True False
void CreateHeap();
	/* 809BBE2C */ // True False
void Delete();
	/* 809BBE60 */ // True False
void Execute();
	/* 809BBE80 */ // True False
void Draw();
	/* 809BBF44 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 809BBF64 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 809BBFBC */ // True False
void getType();
	/* 809BBFDC */ // True False
void getFlowNodeNo();
	/* 809BBFF8 */ // True False
void isDelete();
	/* 809BC028 */ // True False
void reset();
	/* 809BC168 */ // True False
//  int False
void afterJntAnm(int);
	/* 809BC1F4 */ // True False
void ctrlBtk();
	/* 809BC328 */ // True False
void setParam();
	/* 809BC448 */ // True False
void setAfterTalkMotion();
	/* 809BC4A8 */ // True False
//  void False
void srchActors();
	/* 809BC4AC */ // True False
void evtTalk();
	/* 809BC5AC */ // True False
void evtCutProc();
	/* 809BC674 */ // True False
void action();
	/* 809BC760 */ // True False
void beforeMove();
	/* 809BC7D8 */ // True False
void setAttnPos();
	/* 809BCA14 */ // True False
void setCollision();
	/* 809BCB48 */ // True False
//  bool False
bool drawDbgInfo();
	/* 809BCB50 */ // True False
//  int False
//  int False
//  f32 False
//  int False
void afterSetMotionAnm(int, int, f32, int);
	/* 809BCCE8 */ // True False
void selectAction();
	/* 809BCD30 */ // True False
//  int (daNpc_Gnd_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Gnd_c False
void chkAction(int (daNpc_Gnd_c::*)(void*));
	/* 809BCD5C */ // True False
//  int (daNpc_Gnd_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Gnd_c False
void setAction(int (daNpc_Gnd_c::*)(void*));
	/* 809BCE04 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 809BD050 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 809BE2D0 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpc_Gnd_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 809BE40C */ // True False
//  s32 False
s32 getEyeballRMaterialNo();
	/* 809BE414 */ // True False
//  s32 False
s32 getEyeballLMaterialNo();
	/* 809BE41C */ // True False
//  s32 False
s32 getHeadJointNo();
	/* 809BE424 */ // True False
//  s32 False
s32 getNeckJointNo();
	/* 809BE42C */ // True False
//  bool False
bool getBackboneJointNo();
};

struct daNpc_Gnd_Param_c {
	/* 809BE434 */ // True False
~daNpc_Gnd_Param_c();
};

struct J3DModel {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 809BD6D0 */ // True False
~cXyz();
	/* 809BDC4C */ // True False
cXyz();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct J3DAnmColor {
};

struct _GXColorS10 {
};

struct J3DAnmTevRegKey {
};

struct daNpcT_c {
	/* 80147FA4 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
void tgHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
	/* 80148148 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getTevRegKeyAnmP(char const*, int);
	/* 80148184 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getColorAnmP(char const*, int);
	/* 80148378 */ // False False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBrkAnm(J3DAnmTevRegKey*, J3DModelData*, f32, int);
	/* 801483B8 */ // False False
//  J3DAnmColor* False
// 	 J3DAnmColor False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBpkAnm(J3DAnmColor*, J3DModelData*, f32, int);
	/* 801483F8 */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void loadRes(s8 const*, char const**);
	/* 801484AC */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void deleteRes(s8 const*, char const**);
	/* 8014852C */ // False False
void execute();
	/* 8014886C */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
	/* 80148C70 */ // False False
void setEnvTevColor();
	/* 80148CCC */ // False False
void setRoomNo();
	/* 80149190 */ // False False
void setMtx();
	/* 8014951C */ // False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 8014997C */ // False False
void evtProc();
	/* 80149BB4 */ // False False
void setFootPos();
	/* 80149D7C */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
void setFootPrtcl(cXyz*, f32, f32);
	/* 8014A05C */ // False False
//  bool False
bool checkCullDraw();
	/* 8014A064 */ // False False
void twilight();
	/* 8014A0B0 */ // False False
void evtOrder();
	/* 8014A224 */ // False False
void evtChange();
	/* 8014A324 */ // False False
void clrParam();
	/* 8014A388 */ // False False
//  int False
//  bool False
void setFaceMotionAnm(int, bool);
	/* 8014A628 */ // False False
//  int False
//  f32 False
//  int False
void setMotionAnm(int, f32, int);
	/* 8014AA18 */ // False False
//  s16 False
void setAngle(s16);
	/* 8014ABD0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
void chkActorInSight(fopAc_ac_c*, f32, s16);
	/* 8014B338 */ // False False
void srchPlayerActor();
	/* 8014B648 */ // False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
void step(s16, int, int, int, int);
	/* 8014BBF0 */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 8014BC78 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void talkProc(int*, int, fopAc_ac_c**, int);
	/* 809BD348 */ // True False
~daNpcT_c();
	/* 809BD748 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 809BE188 */ // True False
//  void False
//  int False
void ctrlSubFaceMotion(int);
	/* 809BE18C */ // True False
//  bool False
//  int False
bool checkChangeJoint(int);
	/* 809BE194 */ // True False
//  bool False
//  int False
bool checkRemoveJoint(int);
	/* 809BE19C */ // True False
//  s32 False
s32 getFootLJointNo();
	/* 809BE1A4 */ // True False
//  s32 False
s32 getFootRJointNo();
	/* 809BE1AC */ // True False
//  bool False
bool getEyeballMaterialNo();
	/* 809BE1B4 */ // True False
//  bool False
bool checkChangeEvt();
	/* 809BE1BC */ // True False
//  bool False
bool evtEndProc();
	/* 809BE1C4 */ // True False
//  void False
void afterMoved();
	/* 809BE1C8 */ // True False
//  bool False
bool chkXYItems();
	/* 809BE1D0 */ // True False
void decTmr();
	/* 809BE1E8 */ // True False
//  void False
void drawOtherMdl();
	/* 809BE1EC */ // True False
//  void False
void drawGhost();
	/* 809BE1F0 */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetFaceMotionAnm(int, int, f32, int);
	/* 809BE1F8 */ // True False
//  daNpcT_faceMotionAnmData_c False
void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
	/* 809BE228 */ // True False
//  daNpcT_motionAnmData_c False
void getMotionAnm(daNpcT_motionAnmData_c);
	/* 809BE258 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeAnm(int*, int*);
	/* 809BE25C */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBck(int*, int*);
	/* 809BE260 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtp(int*, int*);
	/* 809BE264 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtk(int*, int*);
};

struct daNpcT_MatAnm_c {
	/* 80145764 */ // False False
void initialize();
};

struct daNpcT_JntAnm_c {
	/* 80146C98 */ // False False
void initialize();
	/* 80146CD8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
void setParam(fopAc_ac_c*, J3DModel*, cXyz*, int, int, int, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, cXyz*);
	/* 80147C38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void calcJntRad(f32, f32, f32);
	/* 809BDB50 */ // True False
~daNpcT_JntAnm_c();
	/* 809BDE64 */ // True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
void setEyeAngleY(cXyz, s16, int, f32, s16);
	/* 809BDF80 */ // True False
//  cXyz False
//  f32 False
//  s16 False
void setEyeAngleX(cXyz, f32, s16);
};

struct daNpcT_DmgStagger_c {
	/* 80147E3C */ // False False
//  int False
void calc(int);
};

struct daNpcT_ActorMngr_c {
	/* 801456D4 */ // False False
void initialize();
	/* 801456E0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801456FC */ // False False
void remove();
	/* 80145708 */ // False False
void getActorP();
	/* 809BDC50 */ // True False
~daNpcT_ActorMngr_c();
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 809BDD50 */ // True False
~dCcD_GStts();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 809BDDAC */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 809BDCE0 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct csXyz {
	/* 809BD70C */ // True False
~csXyz();
	/* 809BDB4C */ // True False
csXyz();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 809BE37C */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 809BE3C4 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 809BD300 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct J3DTexNoAnm {
	/* 809BBD18 */ // True False
~J3DTexNoAnm();
	/* 809BBD60 */ // True False
J3DTexNoAnm();
	/* 809BD2D0 */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 809BBD84 */ // True False
~J3DTexMtxAnm();
	/* 809BBDC0 */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 809BBC70 */ // True False
~J3DTevKColorAnm();
	/* 809BBCAC */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 809BBCC4 */ // True False
~J3DTevColorAnm();
	/* 809BBD00 */ // True False
J3DTevColorAnm();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 809BBDD8 */ // True False
~J3DMatColorAnm();
	/* 809BBE14 */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 809BDE1C */ // True False
~J3DFrameCtrl();
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpc_Gnd_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Gnd_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Gnd_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Gnd_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Gnd_IsDelete(void*);

// True False
extern "C" void __dt__11daNpc_Gnd_cFv();
// True False
extern "C" void create__11daNpc_Gnd_cFv();
// True False
extern "C" void CreateHeap__11daNpc_Gnd_cFv();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
extern "C" void Delete__11daNpc_Gnd_cFv();
// True False
extern "C" void Execute__11daNpc_Gnd_cFv();
// True False
extern "C" void Draw__11daNpc_Gnd_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__11daNpc_Gnd_cFP10fopAc_ac_c();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__11daNpc_Gnd_cFP8J3DJointi();
// True False
extern "C" void getType__11daNpc_Gnd_cFv();
// True False
extern "C" void getFlowNodeNo__11daNpc_Gnd_cFv();
// True False
extern "C" void isDelete__11daNpc_Gnd_cFv();
// True False
extern "C" void reset__11daNpc_Gnd_cFv();
// True False
//  int False
extern "C" void afterJntAnm__11daNpc_Gnd_cFi();
// True False
extern "C" void ctrlBtk__11daNpc_Gnd_cFv();
// True False
extern "C" void setParam__11daNpc_Gnd_cFv();
// True False
extern "C" void setAfterTalkMotion__11daNpc_Gnd_cFv();
// True False
//  void False
extern "C" void srchActors__11daNpc_Gnd_cFv();
// True False
extern "C" void evtTalk__11daNpc_Gnd_cFv();
// True False
extern "C" void evtCutProc__11daNpc_Gnd_cFv();
// True False
extern "C" void action__11daNpc_Gnd_cFv();
// True False
extern "C" void beforeMove__11daNpc_Gnd_cFv();
// True False
extern "C" void setAttnPos__11daNpc_Gnd_cFv();
// True False
extern "C" void setCollision__11daNpc_Gnd_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__11daNpc_Gnd_cFv();
// True False
//  int False
//  int False
//  f32 False
//  int False
extern "C" void afterSetMotionAnm__11daNpc_Gnd_cFiifi();
// True False
extern "C" void selectAction__11daNpc_Gnd_cFv();
// True False
//  int (daNpc_Gnd_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Gnd_c False
extern "C" void chkAction__11daNpc_Gnd_cFM11daNpc_Gnd_cFPCvPvPv_i();
// True False
//  int (daNpc_Gnd_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Gnd_c False
extern "C" void setAction__11daNpc_Gnd_cFM11daNpc_Gnd_cFPCvPvPv_i();
// True False
//  void* False
// 	 void False
extern "C" void wait__11daNpc_Gnd_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__11daNpc_Gnd_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Gnd_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Gnd_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Gnd_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Gnd_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpc_Gnd_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__8daNpcT_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__15daNpcT_JntAnm_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
extern "C" void setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs();
// True False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs();
// True False
//  void False
//  int False
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
// True False
//  bool False
//  int False
extern "C" bool checkChangeJoint__8daNpcT_cFi();
// True False
//  bool False
//  int False
extern "C" bool checkRemoveJoint__8daNpcT_cFi();
// True False
//  s32 False
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool checkChangeEvt__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool evtEndProc__8daNpcT_cFv();
// True False
//  void False
extern "C" void afterMoved__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool chkXYItems__8daNpcT_cFv();
// True False
extern "C" void decTmr__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawOtherMdl__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawGhost__8daNpcT_cFv();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
// True False
//  daNpcT_faceMotionAnmData_c False
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
// True False
//  daNpcT_motionAnmData_c False
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeAnm__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBck__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtp__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtk__8daNpcT_cFPiPi();
// False False
extern "C" void __sinit_d_a_npc_gnd_cpp();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__11daNpc_Gnd_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
//  s32 False
extern "C" s32 getEyeballRMaterialNo__11daNpc_Gnd_cFv();
// True False
//  s32 False
extern "C" s32 getEyeballLMaterialNo__11daNpc_Gnd_cFv();
// True False
//  s32 False
extern "C" s32 getHeadJointNo__11daNpc_Gnd_cFv();
// True False
//  s32 False
extern "C" s32 getNeckJointNo__11daNpc_Gnd_cFv();
// True False
//  bool False
extern "C" bool getBackboneJointNo__11daNpc_Gnd_cFv();
// True False
extern "C" void __dt__17daNpc_Gnd_Param_cFv();
// True False
extern "C" static void func_809BE47C();
// True False
extern "C" static void func_809BE484();
extern "C" extern u32 const lit_4020;
extern "C" extern u32 const lit_4021;
extern "C" extern u32 const lit_4022;
extern "C" extern u32 const lit_4023;
extern "C" extern u32 const lit_4024;
extern "C" extern u32 const lit_4179;
extern "C" extern u32 const lit_4723;
extern "C" extern u32 const lit_4724;
extern "C" extern u32 const lit_4725[1 + 1 /* padding */];
extern "C" extern u8 const lit_4785[8];
extern "C" extern u8 const lit_4786[8];
extern "C" extern u8 const lit_4787[8];
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtList[4];
extern "C" extern u8 l_faceMotionAnmData[28];
extern "C" extern u8 l_motionAnmData[28];
extern "C" extern u8 l_faceMotionSequenceData[16];
extern "C" extern u8 l_motionSequenceData[16];
extern "C" extern u8 data_809BE668[8];
extern "C" extern u8 data_809BE670[8];
extern "C" extern void* g_profile_NPC_GND[12];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__22daNpcT_MotionSeqMngr_c[3];
extern "C" extern void* __vt__18daNpcT_ActorMngr_c[3];
extern "C" extern void* __vt__15daNpcT_JntAnm_c[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__11daNpc_Gnd_c[49];
extern "C" extern void* __vt__17daNpc_Gnd_Param_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  int False
//  int False
void daNpcT_getDistTableIdx(int, int);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_MatAnm_cFv();
// False False
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_JntAnm_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void calcJntRad__15daNpcT_JntAnm_cFfff();
// False False
//  int False
extern "C" void calc__19daNpcT_DmgStagger_cFi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" void tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getTevRegKeyAnmP__8daNpcT_cFPCci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getColorAnmP__8daNpcT_cFPCci();
// False False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBrkAnm__8daNpcT_cFP15J3DAnmTevRegKeyP12J3DModelDatafi();
// False False
//  J3DAnmColor* False
// 	 J3DAnmColor False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBpkAnm__8daNpcT_cFP11J3DAnmColorP12J3DModelDatafi();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
// False False
extern "C" void execute__8daNpcT_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
// False False
extern "C" void setEnvTevColor__8daNpcT_cFv();
// False False
extern "C" void setRoomNo__8daNpcT_cFv();
// False False
extern "C" void setMtx__8daNpcT_cFv();
// False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
// False False
extern "C" void evtProc__8daNpcT_cFv();
// False False
extern "C" void setFootPos__8daNpcT_cFv();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
// False False
//  bool False
extern "C" bool checkCullDraw__8daNpcT_cFv();
// False False
extern "C" void twilight__8daNpcT_cFv();
// False False
extern "C" void evtOrder__8daNpcT_cFv();
// False False
extern "C" void evtChange__8daNpcT_cFv();
// False False
extern "C" void clrParam__8daNpcT_cFv();
// False False
//  int False
//  bool False
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
// False False
//  int False
//  f32 False
//  int False
extern "C" void setMotionAnm__8daNpcT_cFifi();
// False False
//  s16 False
extern "C" void setAngle__8daNpcT_cFs();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
extern "C" void chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs();
// False False
extern "C" void srchPlayerActor__8daNpcT_cFv();
// False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
extern "C" void step__8daNpcT_cFsiiii();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
// False False
//  int False
//  int False
extern "C" void daNpcT_getDistTableIdx__Fii();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcT_c[68];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__15daNpcT_MatAnm_c[4 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 809BE4A0-809BE52C 008C+00 s=6 e=0 z=0  None .rodata    m__17daNpc_Gnd_Param_c                                       */
SECTION_RODATA static u8 const m__17daNpc_Gnd_Param_c[140] = {
	0x43, 0x8C, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x82, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809BE52C-809BE530 0004+00 s=0 e=0 z=0  None .rodata    @4020                                                        */
SECTION_RODATA u32 const lit_4020 = 0xC3960000;

/* 809BE530-809BE534 0004+00 s=0 e=0 z=0  None .rodata    @4021                                                        */
SECTION_RODATA u32 const lit_4021 = 0xC2480000;

/* 809BE534-809BE538 0004+00 s=0 e=0 z=0  None .rodata    @4022                                                        */
SECTION_RODATA u32 const lit_4022 = 0x43960000;

/* 809BE538-809BE53C 0004+00 s=0 e=0 z=0  None .rodata    @4023                                                        */
SECTION_RODATA u32 const lit_4023 = 0x43E10000;

/* 809BE53C-809BE540 0004+00 s=0 e=0 z=0  None .rodata    @4024                                                        */
SECTION_RODATA u32 const lit_4024 = 0xCE6E6B28;

/* 809BE540-809BE544 0004+00 s=5 e=0 z=0  None .rodata    @4178                                                        */
SECTION_RODATA static u8 const lit_4178[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 809BE544-809BE548 0004+00 s=0 e=0 z=0  None .rodata    @4179                                                        */
SECTION_RODATA u32 const lit_4179 = 0x47800000;

/* 809BE548-809BE54C 0004+00 s=1 e=0 z=0  None .rodata    @4180                                                        */
SECTION_RODATA static u32 const lit_4180 = 0x3E4CCCCD;

/* 809BE54C-809BE550 0004+00 s=3 e=0 z=0  None .rodata    @4331                                                        */
SECTION_RODATA static u32 const lit_4331 = 0x3F800000;

/* 809BE550-809BE554 0004+00 s=1 e=0 z=0  None .rodata    @4391                                                        */
SECTION_RODATA static u32 const lit_4391 = 0x42C80000;

/* 809BE554-809BE558 0004+00 s=3 e=0 z=0  None .rodata    @4552                                                        */
SECTION_RODATA static u32 const lit_4552 = 0xBF800000;

/* 809BE558-809BE55C 0004+00 s=0 e=0 z=0  None .rodata    @4723                                                        */
SECTION_RODATA u32 const lit_4723 = 0x41200000;

/* 809BE55C-809BE560 0004+00 s=0 e=0 z=0  None .rodata    @4724                                                        */
SECTION_RODATA u32 const lit_4724 = 0x41F00000;

/* 809BE560-809BE568 0004+04 s=0 e=0 z=0  None .rodata    @4725                                                        */
SECTION_RODATA u32 const lit_4725[1 + 1 /* padding */] = {
	0x38C90FDB,
	/* padding */
	0x00000000,
};

/* 809BE568-809BE570 0008+00 s=1 e=0 z=0  None .rodata    @4727                                                        */
SECTION_RODATA static u8 const lit_4727[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 809BE570-809BE578 0008+00 s=0 e=0 z=0  None .rodata    @4785                                                        */
SECTION_RODATA u8 const lit_4785[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809BE578-809BE580 0008+00 s=0 e=0 z=0  None .rodata    @4786                                                        */
SECTION_RODATA u8 const lit_4786[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809BE580-809BE588 0008+00 s=0 e=0 z=0  None .rodata    @4787                                                        */
SECTION_RODATA u8 const lit_4787[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809BE588-809BE59C 0014+00 s=4 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_809BE588[20] = {
	/* 809BE588 0001 stringBase_809BE588 @stringBase0 */
	0x00,
	/* 809BE589 000C data_809BE589 None */
	0x4E, 0x4F, 0x5F, 0x52, 0x45, 0x53, 0x50, 0x4F, 0x4E, 0x53, 0x45, 0x00,
	/* 809BE595 0007 data_809BE595 None */
	0x47, 0x6E, 0x64, 0x00, 0x00, 0x00, 0x00,
};

/* 809BE59C-809BE5A8 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809BE5A8-809BE5BC 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 809BE5BC-809BE5C4 0008+00 s=1 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[8] = {
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x01,
};

/* 809BE5C4-809BE5D4 0010+00 s=0 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA void* l_evtList[4] = {
	(void*)(((char*)&struct_809BE588)+0x0) /* @stringBase0 */,
	(void*)NULL,
	(void*)(((char*)&struct_809BE588)+0x1) /* None */,
	(void*)NULL,
};

/* 809BE5D4-809BE5DC 0008+00 s=2 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[2] = {
	(void*)(((char*)&struct_809BE588)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_809BE588)+0xD) /* None */,
};

/* 809BE5DC-809BE5E0 0002+02 s=1 e=0 z=0  None .data      l_loadResPtrn0                                               */
SECTION_DATA static u16 l_loadResPtrn0[1 + 1 /* padding */] = {
	0x01FF,
	/* padding */
	0x0000,
};

/* 809BE5E0-809BE5E8 0008+00 s=1 e=0 z=0  None .data      l_loadResPtrnList                                            */
SECTION_DATA static void* l_loadResPtrnList[2] = {
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
};

/* 809BE5E8-809BE604 001C+00 s=0 e=0 z=0  None .data      l_faceMotionAnmData                                          */
SECTION_DATA u8 l_faceMotionAnmData[28] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
};

/* 809BE604-809BE620 001C+00 s=0 e=0 z=0  None .data      l_motionAnmData                                              */
SECTION_DATA u8 l_motionAnmData[28] = {
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
};

/* 809BE620-809BE630 0010+00 s=0 e=0 z=0  None .data      l_faceMotionSequenceData                                     */
SECTION_DATA u8 l_faceMotionSequenceData[16] = {
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 809BE630-809BE640 0010+00 s=0 e=0 z=0  None .data      l_motionSequenceData                                         */
SECTION_DATA u8 l_motionSequenceData[16] = {
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 809BE640-809BE644 0004+00 s=1 e=0 z=0  None .data      mCutNameList__11daNpc_Gnd_c                                  */
SECTION_DATA static void* mCutNameList__11daNpc_Gnd_c = (void*)(((char*)&struct_809BE588)+0x0) /* @stringBase0 */;

/* 809BE644-809BE650 000C+00 s=2 e=0 z=0  None .data      mCutList__11daNpc_Gnd_c                                      */
SECTION_DATA static u8 mCutList__11daNpc_Gnd_c[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 809BE650-809BE65C 000C+00 s=1 e=0 z=0  None .data      @4607                                                        */
SECTION_DATA static void* lit_4607[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__11daNpc_Gnd_cFPv,
};

/* 809BE65C-809BE668 000C+00 s=1 e=0 z=0  None .data      @4617                                                        */
SECTION_DATA static void* lit_4617[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__11daNpc_Gnd_cFPv,
};

/* 809BE668-809BE670 0008+00 s=0 e=0 z=0  None .data      brkAnmData$4830                                              */
SECTION_DATA u8 data_809BE668[8] = {
	0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x01,
};

/* 809BE670-809BE678 0008+00 s=0 e=0 z=0  None .data      bpkAnmData$4831                                              */
SECTION_DATA u8 data_809BE670[8] = {
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x01,
};

/* 809BE678-809BE684 000C+00 s=1 e=0 z=0  None .data      @4881                                                        */
SECTION_DATA static void* lit_4881[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__11daNpc_Gnd_cFPv,
};

/* 809BE684-809BE6A4 0020+00 s=1 e=0 z=0  None .data      daNpc_Gnd_MethodTable                                        */
SECTION_DATA static void* daNpc_Gnd_MethodTable[8] = {
	(void*)daNpc_Gnd_Create__FPv,
	(void*)daNpc_Gnd_Delete__FPv,
	(void*)daNpc_Gnd_Execute__FPv,
	(void*)daNpc_Gnd_IsDelete__FPv,
	(void*)daNpc_Gnd_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 809BE6A4-809BE6D4 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_GND                                            */
SECTION_DATA void* g_profile_NPC_GND[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02330000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000FA0,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01310000,
	(void*)&daNpc_Gnd_MethodTable,
	(void*)0x00044107,
	(void*)0x040E0000,
};

/* 809BE6D4-809BE6E0 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 809BE6E0-809BE6EC 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 809BE6EC-809BE710 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_809BE484,
	(void*)NULL,
	(void*)NULL,
	(void*)func_809BE47C,
};

/* 809BE710-809BE71C 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 809BE71C-809BE728 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 809BE728-809BE734 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 809BE734-809BE740 000C+00 s=3 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c                               */
SECTION_DATA void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 809BE740-809BE74C 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcT_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 809BE74C-809BE758 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c                                      */
SECTION_DATA void* __vt__15daNpcT_JntAnm_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 809BE758-809BE764 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 809BE764-809BE770 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 809BE770-809BE834 00C4+00 s=2 e=0 z=0  None .data      __vt__11daNpc_Gnd_c                                          */
SECTION_DATA void* __vt__11daNpc_Gnd_c[49] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__11daNpc_Gnd_cFv,
	(void*)ctrlBtk__11daNpc_Gnd_cFv,
	(void*)ctrlSubFaceMotion__8daNpcT_cFi,
	(void*)checkChangeJoint__8daNpcT_cFi,
	(void*)checkRemoveJoint__8daNpcT_cFi,
	(void*)getBackboneJointNo__11daNpc_Gnd_cFv,
	(void*)getNeckJointNo__11daNpc_Gnd_cFv,
	(void*)getHeadJointNo__11daNpc_Gnd_cFv,
	(void*)getFootLJointNo__8daNpcT_cFv,
	(void*)getFootRJointNo__8daNpcT_cFv,
	(void*)getEyeballLMaterialNo__11daNpc_Gnd_cFv,
	(void*)getEyeballRMaterialNo__11daNpc_Gnd_cFv,
	(void*)getEyeballMaterialNo__8daNpcT_cFv,
	(void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
	(void*)afterJntAnm__11daNpc_Gnd_cFi,
	(void*)setParam__11daNpc_Gnd_cFv,
	(void*)checkChangeEvt__8daNpcT_cFv,
	(void*)evtTalk__11daNpc_Gnd_cFv,
	(void*)evtEndProc__8daNpcT_cFv,
	(void*)evtCutProc__11daNpc_Gnd_cFv,
	(void*)setAfterTalkMotion__11daNpc_Gnd_cFv,
	(void*)evtProc__8daNpcT_cFv,
	(void*)action__11daNpc_Gnd_cFv,
	(void*)beforeMove__11daNpc_Gnd_cFv,
	(void*)afterMoved__8daNpcT_cFv,
	(void*)setAttnPos__11daNpc_Gnd_cFv,
	(void*)setFootPos__8daNpcT_cFv,
	(void*)setCollision__11daNpc_Gnd_cFv,
	(void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
	(void*)checkCullDraw__8daNpcT_cFv,
	(void*)twilight__8daNpcT_cFv,
	(void*)chkXYItems__8daNpcT_cFv,
	(void*)evtOrder__8daNpcT_cFv,
	(void*)decTmr__8daNpcT_cFv,
	(void*)clrParam__8daNpcT_cFv,
	(void*)drawDbgInfo__11daNpc_Gnd_cFv,
	(void*)drawOtherMdl__8daNpcT_cFv,
	(void*)drawGhost__8daNpcT_cFv,
	(void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
	(void*)afterSetMotionAnm__11daNpc_Gnd_cFiifi,
	(void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
	(void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
	(void*)changeAnm__8daNpcT_cFPiPi,
	(void*)changeBck__8daNpcT_cFPiPi,
	(void*)changeBtp__8daNpcT_cFPiPi,
	(void*)changeBtk__8daNpcT_cFPiPi,
	(void*)setMotionAnm__8daNpcT_cFifi,
};

/* 809BB60C-809BB730 0124+00 s=1 e=0 z=0  None .text      __dt__11daNpc_Gnd_cFv                                        */
//	809BB62C: 809BE770 (__vt__11daNpc_Gnd_c)
//	809BB630: 809BE770 (__vt__11daNpc_Gnd_c)
//	809BB648: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	809BB658: 809BE5E0 (l_loadResPtrnList)
//	809BB65C: 809BE5E0 (l_loadResPtrnList)
//	809BB664: 809BE5D4 (l_resNameList)
//	809BB668: 809BE5D4 (l_resNameList)
//	809BB66C: 801484AC (deleteRes__8daNpcT_cFPCScPPCc)
//	809BB678: 803AC050 (__vt__8dCcD_Cyl)
//	809BB67C: 803AC050 (__vt__8dCcD_Cyl)
//	809BB69C: 803C35A4 (__vt__12cCcD_CylAttr)
//	809BB6A0: 803C35A4 (__vt__12cCcD_CylAttr)
//	809BB6B8: 809BE764 (__vt__8cM3dGCyl)
//	809BB6BC: 809BE764 (__vt__8cM3dGCyl)
//	809BB6CC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	809BB6D0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	809BB6E0: 809BE758 (__vt__8cM3dGAab)
//	809BB6E4: 809BE758 (__vt__8cM3dGAab)
//	809BB6F4: 800840E4 (__dt__12dCcD_GObjInfFv)
//	809BB700: 809BD348 (__dt__8daNpcT_cFv)
//	809BB710: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Gnd_c::~daNpc_Gnd_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BB730-809BB9D4 02A4+00 s=1 e=0 z=0  None .text      create__11daNpc_Gnd_cFv                                      */
//	809BB740: 803621DC (_savegpr_29)
//	809BB748: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BB74C: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BB750: 809BE59C (cNullVec__6Z2Calc)
//	809BB754: 809BE59C (cNullVec__6Z2Calc)
//	809BB790: 809BE2D0 (__ct__11daNpc_Gnd_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	809BB7A4: 809BBFBC (getType__11daNpc_Gnd_cFv)
//	809BB7B0: 809BBFDC (getFlowNodeNo__11daNpc_Gnd_cFv)
//	809BB7D8: 801483F8 (loadRes__8daNpcT_cFPCScPPCc)
//	809BB7EC: 809BBF44 (createHeapCallBack__11daNpc_Gnd_cFP10fopAc_ac_c)
//	809BB7F0: 809BBF44 (createHeapCallBack__11daNpc_Gnd_cFP10fopAc_ac_c)
//	809BB7F8: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	809BB810: 809BBFF8 (isDelete__11daNpc_Gnd_cFv)
//	809BB850: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	809BB874: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	809BB8A0: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	809BB8C4: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	809BB8CC: 803B36D8 (mCcDCyl__8daNpcT_c)
//	809BB8D0: 803B36D8 (mCcDCyl__8daNpcT_c)
//	809BB8D4: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	809BB8E0: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	809BB8E4: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	809BB8F0: 804061C0 (g_dComIfG_gameInfo)
//	809BB8F4: 804061C0 (g_dComIfG_gameInfo)
//	809BB8FC: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	809BB98C: 80148C70 (setEnvTevColor__8daNpcT_cFv)
//	809BB994: 80148CCC (setRoomNo__8daNpcT_cFv)
//	809BB99C: 809BC028 (reset__11daNpc_Gnd_cFv)
//	809BB9AC: 809BBE60 (Execute__11daNpc_Gnd_cFv)
//	809BB9C0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/create__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BB9D4-809BBC70 029C+00 s=1 e=0 z=0  None .text      CreateHeap__11daNpc_Gnd_cFv                                  */
//	809BB9E4: 803621D4 (_savegpr_27)
//	809BB9EC: 809BE5BC (l_bmdData)
//	809BB9F0: 809BE5BC (l_bmdData)
//	809BB9FC: 809BE5D4 (l_resNameList)
//	809BBA00: 809BE5D4 (l_resNameList)
//	809BBA0C: 804061C0 (g_dComIfG_gameInfo)
//	809BBA10: 804061C0 (g_dComIfG_gameInfo)
//	809BBA20: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	809BBA2C: 802CEC4C (__nw__FUl)
//	809BBA68: 809BE54C (lit_4331)
//	809BBA6C: 809BE54C (lit_4331)
//	809BBA78: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	809BBA9C: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	809BBAC4: 809BBF64 (ctrlJointCallBack__11daNpc_Gnd_cFP8J3DJointi)
//	809BBAC8: 809BBF64 (ctrlJointCallBack__11daNpc_Gnd_cFP8J3DJointi)
//	809BBB04: 802CEC4C (__nw__FUl)
//	809BBB14: 803CEE60 (__vt__14J3DMaterialAnm)
//	809BBB18: 803CEE60 (__vt__14J3DMaterialAnm)
//	809BBB24: 809BBE14 (__ct__14J3DMatColorAnmFv)
//	809BBB28: 809BBE14 (__ct__14J3DMatColorAnmFv)
//	809BBB2C: 809BBDD8 (__dt__14J3DMatColorAnmFv)
//	809BBB30: 809BBDD8 (__dt__14J3DMatColorAnmFv)
//	809BBB3C: 80361D60 (__construct_array)
//	809BBB44: 809BBDC0 (__ct__12J3DTexMtxAnmFv)
//	809BBB48: 809BBDC0 (__ct__12J3DTexMtxAnmFv)
//	809BBB4C: 809BBD84 (__dt__12J3DTexMtxAnmFv)
//	809BBB50: 809BBD84 (__dt__12J3DTexMtxAnmFv)
//	809BBB5C: 80361D60 (__construct_array)
//	809BBB64: 809BBD60 (__ct__11J3DTexNoAnmFv)
//	809BBB68: 809BBD60 (__ct__11J3DTexNoAnmFv)
//	809BBB6C: 809BBD18 (__dt__11J3DTexNoAnmFv)
//	809BBB70: 809BBD18 (__dt__11J3DTexNoAnmFv)
//	809BBB7C: 80361D60 (__construct_array)
//	809BBB84: 809BBD00 (__ct__14J3DTevColorAnmFv)
//	809BBB88: 809BBD00 (__ct__14J3DTevColorAnmFv)
//	809BBB8C: 809BBCC4 (__dt__14J3DTevColorAnmFv)
//	809BBB90: 809BBCC4 (__dt__14J3DTevColorAnmFv)
//	809BBB9C: 80361D60 (__construct_array)
//	809BBBA4: 809BBCAC (__ct__15J3DTevKColorAnmFv)
//	809BBBA8: 809BBCAC (__ct__15J3DTevKColorAnmFv)
//	809BBBAC: 809BBC70 (__dt__15J3DTevKColorAnmFv)
//	809BBBB0: 809BBC70 (__dt__15J3DTevKColorAnmFv)
//	809BBBBC: 80361D60 (__construct_array)
//	809BBBC4: 8032C320 (initialize__14J3DMaterialAnmFv)
//	809BBBC8: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	809BBBCC: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	809BBBD8: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	809BBC14: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	809BBC28: 809BE540 (lit_4178)
//	809BBC2C: 809BE540 (lit_4178)
//	809BBC5C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/CreateHeap__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BBC70-809BBCAC 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	809BBC90: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 809BBCAC-809BBCC4 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 809BBCC4-809BBD00 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	809BBCE4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 809BBD00-809BBD18 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 809BBD18-809BBD60 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	809BBD30: 809BE6D4 (__vt__11J3DTexNoAnm)
//	809BBD34: 809BE6D4 (__vt__11J3DTexNoAnm)
//	809BBD44: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 809BBD60-809BBD84 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	809BBD60: 809BE6D4 (__vt__11J3DTexNoAnm)
//	809BBD64: 809BE6D4 (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 809BBD84-809BBDC0 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	809BBDA4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 809BBDC0-809BBDD8 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 809BBDD8-809BBE14 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	809BBDF8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 809BBE14-809BBE2C 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 809BBE2C-809BBE60 0034+00 s=1 e=0 z=0  None .text      Delete__11daNpc_Gnd_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/Delete__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BBE60-809BBE80 0020+00 s=2 e=0 z=0  None .text      Execute__11daNpc_Gnd_cFv                                     */
//	809BBE6C: 8014852C (execute__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/Execute__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BBE80-809BBF44 00C4+00 s=1 e=0 z=0  None .text      Draw__11daNpc_Gnd_cFv                                        */
//	809BBE90: 803621DC (_savegpr_29)
//	809BBF14: 809BE550 (lit_4391)
//	809BBF18: 809BE550 (lit_4391)
//	809BBF28: 8014886C (draw__8daNpcT_cFiifP11_GXColorS10fiii)
//	809BBF30: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/Draw__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BBF44-809BBF64 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__11daNpc_Gnd_cFP10fopAc_ac_c              */
//	809BBF50: 809BB9D4 (CreateHeap__11daNpc_Gnd_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpc_Gnd_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/createHeapCallBack__11daNpc_Gnd_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 809BBF64-809BBFBC 0058+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__11daNpc_Gnd_cFP8J3DJointi                 */
//	809BBF7C: 80434AC8 (j3dSys)
//	809BBF80: 80434AC8 (j3dSys)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpc_Gnd_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/ctrlJointCallBack__11daNpc_Gnd_cFP8J3DJointi.s"
}
#pragma pop


/* 809BBFBC-809BBFDC 0020+00 s=1 e=0 z=0  None .text      getType__11daNpc_Gnd_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::getType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/getType__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BBFDC-809BBFF8 001C+00 s=1 e=0 z=0  None .text      getFlowNodeNo__11daNpc_Gnd_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::getFlowNodeNo() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/getFlowNodeNo__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BBFF8-809BC028 0030+00 s=1 e=0 z=0  None .text      isDelete__11daNpc_Gnd_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::isDelete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/isDelete__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BC028-809BC168 0140+00 s=1 e=0 z=0  None .text      reset__11daNpc_Gnd_cFv                                       */
//	809BC038: 803621DC (_savegpr_29)
//	809BC040: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BC044: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BC058: 80003458 (memset)
//	809BC060: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	809BC068: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	809BC070: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	809BC078: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	809BC080: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	809BC0E4: 80267954 (cM_rndF__Ff)
//	809BC114: 80003458 (memset)
//	809BC130: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	809BC14C: 8014AA18 (setAngle__8daNpcT_cFs)
//	809BC154: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/reset__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BC168-809BC1F4 008C+00 s=1 e=0 z=0  None .text      afterJntAnm__11daNpc_Gnd_cFi                                 */
//	809BC184: 803DD470 (now__14mDoMtx_stack_c)
//	809BC188: 803DD470 (now__14mDoMtx_stack_c)
//	809BC198: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	809BC1A0: 803DD470 (now__14mDoMtx_stack_c)
//	809BC1A4: 803DD470 (now__14mDoMtx_stack_c)
//	809BC1A8: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	809BC1B8: 803DD470 (now__14mDoMtx_stack_c)
//	809BC1BC: 803DD470 (now__14mDoMtx_stack_c)
//	809BC1CC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	809BC1D4: 803DD470 (now__14mDoMtx_stack_c)
//	809BC1D8: 803DD470 (now__14mDoMtx_stack_c)
//	809BC1DC: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Gnd_c::afterJntAnm(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/afterJntAnm__11daNpc_Gnd_cFi.s"
}
#pragma pop


/* 809BC1F4-809BC328 0134+00 s=1 e=0 z=0  None .text      ctrlBtk__11daNpc_Gnd_cFv                                     */
//	809BC234: 80439A20 (sincosTable___5JMath)
//	809BC238: 80439A20 (sincosTable___5JMath)
//	809BC240: 809BE554 (lit_4552)
//	809BC244: 809BE554 (lit_4552)
//	809BC248: 809BE548 (lit_4180)
//	809BC24C: 809BE548 (lit_4180)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::ctrlBtk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/ctrlBtk__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BC328-809BC448 0120+00 s=1 e=0 z=0  None .text      setParam__11daNpc_Gnd_cFv                                    */
//	809BC338: 803621DC (_savegpr_29)
//	809BC340: 809BCCE8 (selectAction__11daNpc_Gnd_cFv)
//	809BC348: 809BC4A8 (srchActors__11daNpc_Gnd_cFv)
//	809BC34C: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BC350: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BC364: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	809BC37C: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	809BC38C: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BC390: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BC3D8: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	809BC3DC: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BC3E0: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BC424: 809BE540 (lit_4178)
//	809BC428: 809BE540 (lit_4178)
//	809BC434: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/setParam__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BC448-809BC4A8 0060+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__11daNpc_Gnd_cFv                          */
//	809BC474: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	809BC484: 809BE554 (lit_4552)
//	809BC488: 809BE554 (lit_4552)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::setAfterTalkMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/setAfterTalkMotion__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BC4A8-809BC4AC 0004+00 s=1 e=0 z=0  None .text      srchActors__11daNpc_Gnd_cFv                                  */
// True False
//  void False
void daNpc_Gnd_c::srchActors() {
	/* empty function */
}


/* 809BC4AC-809BC5AC 0100+00 s=1 e=0 z=0  None .text      evtTalk__11daNpc_Gnd_cFv                                     */
//	809BC4C0: 809BE650 (lit_4607)
//	809BC4C4: 809BE650 (lit_4607)
//	809BC4E4: 809BCD30 (chkAction__11daNpc_Gnd_cFM11daNpc_Gnd_cFPCvPvPv_i)
//	809BC4FC: 80362084 (__ptmf_scall)
//	809BC510: 804061C0 (g_dComIfG_gameInfo)
//	809BC514: 804061C0 (g_dComIfG_gameInfo)
//	809BC53C: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	809BC55C: 8014A224 (evtChange__8daNpcT_cFv)
//	809BC568: 809BE65C (lit_4617)
//	809BC56C: 809BE65C (lit_4617)
//	809BC590: 809BCD5C (setAction__11daNpc_Gnd_cFM11daNpc_Gnd_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::evtTalk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/evtTalk__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BC5AC-809BC674 00C8+00 s=1 e=0 z=0  None .text      evtCutProc__11daNpc_Gnd_cFv                                  */
//	809BC5BC: 803621DC (_savegpr_29)
//	809BC5C8: 804061C0 (g_dComIfG_gameInfo)
//	809BC5CC: 804061C0 (g_dComIfG_gameInfo)
//	809BC5D8: 809BE588 (struct_809BE588)
//	809BC5DC: 809BE588 (struct_809BE588)
//	809BC5EC: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	809BC604: 809BE640 (mCutNameList__11daNpc_Gnd_c)
//	809BC608: 809BE640 (mCutNameList__11daNpc_Gnd_c)
//	809BC618: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	809BC62C: 809BE644 (mCutList__11daNpc_Gnd_c)
//	809BC630: 809BE644 (mCutList__11daNpc_Gnd_c)
//	809BC638: 80362084 (__ptmf_scall)
//	809BC650: 8004817C (cutEnd__16dEvent_manager_cFi)
//	809BC660: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::evtCutProc() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/evtCutProc__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BC674-809BC760 00EC+00 s=1 e=0 z=0  None .text      action__11daNpc_Gnd_cFv                                      */
//	809BC6A0: 809BE540 (lit_4178)
//	809BC6A4: 809BE540 (lit_4178)
//	809BC6F0: 80362018 (__ptmf_test)
//	809BC704: 80362048 (__ptmf_cmpr)
//	809BC71C: 80362084 (__ptmf_scall)
//	809BC748: 809BCD5C (setAction__11daNpc_Gnd_cFM11daNpc_Gnd_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::action() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/action__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BC760-809BC7D8 0078+00 s=1 e=0 z=0  None .text      beforeMove__11daNpc_Gnd_cFv                                  */
//	809BC788: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::beforeMove() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/beforeMove__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BC7D8-809BCA14 023C+00 s=1 e=0 z=0  None .text      setAttnPos__11daNpc_Gnd_cFv                                  */
//	809BC7F0: 803621D4 (_savegpr_27)
//	809BC7F8: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BC7FC: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BC82C: 80147E3C (calc__19daNpcT_DmgStagger_cFi)
//	809BC900: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	809BC914: 80147C38 (calcJntRad__15daNpcT_JntAnm_cFfff)
//	809BC91C: 80149190 (setMtx__8daNpcT_cFv)
//	809BC94C: 803DD470 (now__14mDoMtx_stack_c)
//	809BC950: 803DD470 (now__14mDoMtx_stack_c)
//	809BC954: 803464B0 (PSMTXCopy)
//	809BC958: 803DD470 (now__14mDoMtx_stack_c)
//	809BC95C: 803DD470 (now__14mDoMtx_stack_c)
//	809BC968: 80346D6C (PSMTXMultVec)
//	809BC994: 809BDF80 (setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs)
//	809BC9C8: 809BDE64 (setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs)
//	809BCA00: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/setAttnPos__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BCA14-809BCB48 0134+00 s=1 e=0 z=0  None .text      setCollision__11daNpc_Gnd_cFv                                */
//	809BCA48: 804061C0 (g_dComIfG_gameInfo)
//	809BCA4C: 804061C0 (g_dComIfG_gameInfo)
//	809BCAD4: 8026F1F8 (SetH__8cM3dGCylFf)
//	809BCAE0: 8026F200 (SetR__8cM3dGCylFf)
//	809BCAEC: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	809BCAF0: 804061C0 (g_dComIfG_gameInfo)
//	809BCAF4: 804061C0 (g_dComIfG_gameInfo)
//	809BCB00: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::setCollision() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/setCollision__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BCB48-809BCB50 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__11daNpc_Gnd_cFv                                 */
// True False
//  bool False
bool daNpc_Gnd_c::drawDbgInfo() {
	return false;
}


/* 809BCB50-809BCCE8 0198+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__11daNpc_Gnd_cFiifi                        */
//	809BCB60: 803621CC (_savegpr_25)
//	809BCB6C: 809BE59C (cNullVec__6Z2Calc)
//	809BCB70: 809BE59C (cNullVec__6Z2Calc)
//	809BCBA4: 80148148 (getTevRegKeyAnmP__8daNpcT_cFPCci)
//	809BCBE4: 809BE54C (lit_4331)
//	809BCBE8: 809BE54C (lit_4331)
//	809BCBF0: 80148378 (setBrkAnm__8daNpcT_cFP15J3DAnmTevRegKeyP12J3DModelDatafi)
//	809BCC4C: 80148184 (getColorAnmP__8daNpcT_cFPCci)
//	809BCC8C: 809BE54C (lit_4331)
//	809BCC90: 809BE54C (lit_4331)
//	809BCC98: 801483B8 (setBpkAnm__8daNpcT_cFP11J3DAnmColorP12J3DModelDatafi)
//	809BCCD4: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  int False
asm void daNpc_Gnd_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/afterSetMotionAnm__11daNpc_Gnd_cFiifi.s"
}
#pragma pop


/* 809BCCE8-809BCD30 0048+00 s=1 e=0 z=0  None .text      selectAction__11daNpc_Gnd_cFv                                */
//	809BCCE8: 803A2180 (__ptmf_null)
//	809BCCEC: 803A2180 (__ptmf_null)
//	809BCD08: 809BE678 (lit_4881)
//	809BCD0C: 809BE678 (lit_4881)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Gnd_c::selectAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/selectAction__11daNpc_Gnd_cFv.s"
}
#pragma pop


/* 809BCD30-809BCD5C 002C+00 s=1 e=0 z=0  None .text      chkAction__11daNpc_Gnd_cFM11daNpc_Gnd_cFPCvPvPv_i            */
//	809BCD40: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Gnd_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Gnd_c False
asm void daNpc_Gnd_c::chkAction(int (daNpc_Gnd_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/chkAction__11daNpc_Gnd_cFM11daNpc_Gnd_cFPCvPvPv_i.s"
}
#pragma pop


/* 809BCD5C-809BCE04 00A8+00 s=2 e=0 z=0  None .text      setAction__11daNpc_Gnd_cFM11daNpc_Gnd_cFPCvPvPv_i            */
//	809BCD84: 80362018 (__ptmf_test)
//	809BCD9C: 80362084 (__ptmf_scall)
//	809BCDC8: 80362018 (__ptmf_test)
//	809BCDE0: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Gnd_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Gnd_c False
asm void daNpc_Gnd_c::setAction(int (daNpc_Gnd_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/setAction__11daNpc_Gnd_cFM11daNpc_Gnd_cFPCvPvPv_i.s"
}
#pragma pop


/* 809BCE04-809BD050 024C+00 s=1 e=0 z=0  None .text      wait__11daNpc_Gnd_cFPv                                       */
//	809BCE5C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	809BCE6C: 809BE554 (lit_4552)
//	809BCE70: 809BE554 (lit_4552)
//	809BCE8C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	809BCE9C: 809BE554 (lit_4552)
//	809BCEA0: 809BE554 (lit_4552)
//	809BCEC0: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	809BCEDC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	809BCEE8: 809BE540 (lit_4178)
//	809BCEEC: 809BE540 (lit_4178)
//	809BCF08: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	809BCF1C: 8014ABD0 (chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs)
//	809BCF38: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	809BCF44: 809BE540 (lit_4178)
//	809BCF48: 809BE540 (lit_4178)
//	809BCF68: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	809BCFA0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	809BCFAC: 809BE540 (lit_4178)
//	809BCFB0: 809BE540 (lit_4178)
//	809BCFE8: 8014AA18 (setAngle__8daNpcT_cFs)
//	809BD00C: 8014B648 (step__8daNpcT_cFsiiii)
//	809BD030: 8014B338 (srchPlayerActor__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Gnd_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/wait__11daNpc_Gnd_cFPv.s"
}
#pragma pop


/* 809BD050-809BD248 01F8+00 s=2 e=0 z=0  None .text      talk__11daNpc_Gnd_cFPv                                       */
//	809BD09C: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	809BD0D8: 804061C0 (g_dComIfG_gameInfo)
//	809BD0DC: 804061C0 (g_dComIfG_gameInfo)
//	809BD0E4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	809BD10C: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	809BD11C: 804061C0 (g_dComIfG_gameInfo)
//	809BD120: 804061C0 (g_dComIfG_gameInfo)
//	809BD128: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	809BD12C: 804061C0 (g_dComIfG_gameInfo)
//	809BD130: 804061C0 (g_dComIfG_gameInfo)
//	809BD138: 80042468 (reset__14dEvt_control_cFv)
//	809BD154: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	809BD160: 809BE540 (lit_4178)
//	809BD164: 809BE540 (lit_4178)
//	809BD19C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	809BD1A8: 809BE540 (lit_4178)
//	809BD1AC: 809BE540 (lit_4178)
//	809BD1D8: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	809BD1E4: 809BE540 (lit_4178)
//	809BD1E8: 809BE540 (lit_4178)
//	809BD20C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	809BD228: 8014B648 (step__8daNpcT_cFsiiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Gnd_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/talk__11daNpc_Gnd_cFPv.s"
}
#pragma pop


/* 809BD248-809BD268 0020+00 s=1 e=0 z=0  None .text      daNpc_Gnd_Create__FPv                                        */
//	809BD254: 809BB730 (create__11daNpc_Gnd_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Gnd_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/daNpc_Gnd_Create__FPv.s"
}
#pragma pop


/* 809BD268-809BD288 0020+00 s=1 e=0 z=0  None .text      daNpc_Gnd_Delete__FPv                                        */
//	809BD274: 809BBE2C (Delete__11daNpc_Gnd_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Gnd_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/daNpc_Gnd_Delete__FPv.s"
}
#pragma pop


/* 809BD288-809BD2A8 0020+00 s=1 e=0 z=0  None .text      daNpc_Gnd_Execute__FPv                                       */
//	809BD294: 809BBE60 (Execute__11daNpc_Gnd_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Gnd_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/daNpc_Gnd_Execute__FPv.s"
}
#pragma pop


/* 809BD2A8-809BD2C8 0020+00 s=1 e=0 z=0  None .text      daNpc_Gnd_Draw__FPv                                          */
//	809BD2B4: 809BBE80 (Draw__11daNpc_Gnd_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Gnd_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/daNpc_Gnd_Draw__FPv.s"
}
#pragma pop


/* 809BD2C8-809BD2D0 0008+00 s=1 e=0 z=0  None .text      daNpc_Gnd_IsDelete__FPv                                      */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Gnd_IsDelete(void* param_0) {
	return true;
}


/* 809BD2D0-809BD300 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	809BD2EC: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 809BD300-809BD348 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	809BD318: 809BE71C (__vt__10cCcD_GStts)
//	809BD31C: 809BE71C (__vt__10cCcD_GStts)
//	809BD32C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 809BD348-809BD6D0 0388+00 s=1 e=0 z=0  None .text      __dt__8daNpcT_cFv                                            */
//	809BD368: 803B3A78 (__vt__8daNpcT_c)
//	809BD36C: 803B3A78 (__vt__8daNpcT_c)
//	809BD380: 809BD70C (__dt__5csXyzFv)
//	809BD384: 809BD70C (__dt__5csXyzFv)
//	809BD390: 80361CE8 (__destroy_arr)
//	809BD39C: 809BE74C (__vt__15daNpcT_JntAnm_c)
//	809BD3A0: 809BE74C (__vt__15daNpcT_JntAnm_c)
//	809BD3AC: 809BD6D0 (__dt__4cXyzFv)
//	809BD3B0: 809BD6D0 (__dt__4cXyzFv)
//	809BD3BC: 80361CE8 (__destroy_arr)
//	809BD3C4: 809BD6D0 (__dt__4cXyzFv)
//	809BD3C8: 809BD6D0 (__dt__4cXyzFv)
//	809BD3D4: 80361CE8 (__destroy_arr)
//	809BD3DC: 809BD6D0 (__dt__4cXyzFv)
//	809BD3E0: 809BD6D0 (__dt__4cXyzFv)
//	809BD3EC: 80361CE8 (__destroy_arr)
//	809BD3F4: 809BD6D0 (__dt__4cXyzFv)
//	809BD3F8: 809BD6D0 (__dt__4cXyzFv)
//	809BD404: 80361CE8 (__destroy_arr)
//	809BD40C: 809BD6D0 (__dt__4cXyzFv)
//	809BD410: 809BD6D0 (__dt__4cXyzFv)
//	809BD41C: 80361CE8 (__destroy_arr)
//	809BD424: 809BD6D0 (__dt__4cXyzFv)
//	809BD428: 809BD6D0 (__dt__4cXyzFv)
//	809BD434: 80361CE8 (__destroy_arr)
//	809BD440: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD444: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD454: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD458: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD468: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD46C: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD47C: 809BE734 (__vt__22daNpcT_MotionSeqMngr_c)
//	809BD480: 809BE734 (__vt__22daNpcT_MotionSeqMngr_c)
//	809BD490: 809BE734 (__vt__22daNpcT_MotionSeqMngr_c)
//	809BD494: 809BE734 (__vt__22daNpcT_MotionSeqMngr_c)
//	809BD4A4: 80077CDC (__dt__11dBgS_LinChkFv)
//	809BD4B0: 800775F0 (__dt__11dBgS_GndChkFv)
//	809BD4BC: 803AC2E4 (__vt__9dCcD_Stts)
//	809BD4C0: 803AC2E4 (__vt__9dCcD_Stts)
//	809BD4D8: 809BE728 (__vt__10dCcD_GStts)
//	809BD4DC: 809BE728 (__vt__10dCcD_GStts)
//	809BD4EC: 809BE71C (__vt__10cCcD_GStts)
//	809BD4F0: 809BE71C (__vt__10cCcD_GStts)
//	809BD500: 803C3728 (__vt__9cCcD_Stts)
//	809BD504: 803C3728 (__vt__9cCcD_Stts)
//	809BD514: 80249F48 (__dt__10dMsgFlow_cFv)
//	809BD520: 80267C94 (__dt__11cBgS_GndChkFv)
//	809BD52C: 809BE710 (__vt__12dBgS_AcchCir)
//	809BD530: 809BE710 (__vt__12dBgS_AcchCir)
//	809BD540: 8026EF18 (__dt__8cM3dGCirFv)
//	809BD54C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	809BD558: 803AC2E4 (__vt__9dCcD_Stts)
//	809BD55C: 803AC2E4 (__vt__9dCcD_Stts)
//	809BD574: 809BE728 (__vt__10dCcD_GStts)
//	809BD578: 809BE728 (__vt__10dCcD_GStts)
//	809BD588: 809BE71C (__vt__10cCcD_GStts)
//	809BD58C: 809BE71C (__vt__10cCcD_GStts)
//	809BD59C: 803C3728 (__vt__9cCcD_Stts)
//	809BD5A0: 803C3728 (__vt__9cCcD_Stts)
//	809BD5B0: 809BE6EC (__vt__12dBgS_ObjAcch)
//	809BD5B4: 809BE6EC (__vt__12dBgS_ObjAcch)
//	809BD5D4: 80075F94 (__dt__9dBgS_AcchFv)
//	809BD5F0: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD5F4: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD614: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD618: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD638: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD63C: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD65C: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD660: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD680: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD684: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD694: 802C0420 (__dt__10Z2CreatureFv)
//	809BD6A0: 80018C8C (__dt__10fopAc_ac_cFv)
//	809BD6B0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_c::~daNpcT_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__8daNpcT_cFv.s"
}
#pragma pop


/* 809BD6D0-809BD70C 003C+00 s=3 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	809BD6F0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__4cXyzFv.s"
}
#pragma pop


/* 809BD70C-809BD748 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	809BD72C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__5csXyzFv.s"
}
#pragma pop


/* 809BD748-809BDB4C 0404+00 s=1 e=0 z=0  None .text      __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	809BD758: 803621C0 (_savegpr_22)
//	809BD780: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BD784: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BD788: 80018B64 (__ct__10fopAc_ac_cFv)
//	809BD78C: 803B3A78 (__vt__8daNpcT_c)
//	809BD790: 803B3A78 (__vt__8daNpcT_c)
//	809BD7AC: 802C03C8 (__ct__10Z2CreatureFv)
//	809BD7B4: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD7B8: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD7C8: 803283FC (init__12J3DFrameCtrlFs)
//	809BD7D8: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD7DC: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD7EC: 803283FC (init__12J3DFrameCtrlFs)
//	809BD7FC: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD800: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD810: 803283FC (init__12J3DFrameCtrlFs)
//	809BD820: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD824: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD834: 803283FC (init__12J3DFrameCtrlFs)
//	809BD844: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD848: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BD858: 803283FC (init__12J3DFrameCtrlFs)
//	809BD86C: 800760A0 (__ct__9dBgS_AcchFv)
//	809BD870: 809BE6EC (__vt__12dBgS_ObjAcch)
//	809BD874: 809BE6EC (__vt__12dBgS_ObjAcch)
//	809BD890: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	809BD894: 803C3728 (__vt__9cCcD_Stts)
//	809BD898: 803C3728 (__vt__9cCcD_Stts)
//	809BD8A4: 80083760 (__ct__10dCcD_GSttsFv)
//	809BD8A8: 803AC2E4 (__vt__9dCcD_Stts)
//	809BD8AC: 803AC2E4 (__vt__9dCcD_Stts)
//	809BD8C0: 80075EAC (__ct__12dBgS_AcchCirFv)
//	809BD8C8: 80267C1C (__ct__11cBgS_GndChkFv)
//	809BD8D0: 80249F00 (__ct__10dMsgFlow_cFv)
//	809BD8D4: 803C3728 (__vt__9cCcD_Stts)
//	809BD8D8: 803C3728 (__vt__9cCcD_Stts)
//	809BD8E4: 80083760 (__ct__10dCcD_GSttsFv)
//	809BD8E8: 803AC2E4 (__vt__9dCcD_Stts)
//	809BD8EC: 803AC2E4 (__vt__9dCcD_Stts)
//	809BD8FC: 8007757C (__ct__11dBgS_GndChkFv)
//	809BD904: 80077C68 (__ct__11dBgS_LinChkFv)
//	809BD908: 809BE734 (__vt__22daNpcT_MotionSeqMngr_c)
//	809BD90C: 809BE734 (__vt__22daNpcT_MotionSeqMngr_c)
//	809BD920: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	809BD924: 809BE734 (__vt__22daNpcT_MotionSeqMngr_c)
//	809BD928: 809BE734 (__vt__22daNpcT_MotionSeqMngr_c)
//	809BD93C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	809BD940: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD944: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD950: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	809BD954: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD958: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD964: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	809BD96C: 809BE74C (__vt__15daNpcT_JntAnm_c)
//	809BD970: 809BE74C (__vt__15daNpcT_JntAnm_c)
//	809BD978: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD97C: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BD988: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	809BD990: 809BDC4C (__ct__4cXyzFv)
//	809BD994: 809BDC4C (__ct__4cXyzFv)
//	809BD998: 809BD6D0 (__dt__4cXyzFv)
//	809BD99C: 809BD6D0 (__dt__4cXyzFv)
//	809BD9A8: 80361D60 (__construct_array)
//	809BD9B0: 809BDC4C (__ct__4cXyzFv)
//	809BD9B4: 809BDC4C (__ct__4cXyzFv)
//	809BD9B8: 809BD6D0 (__dt__4cXyzFv)
//	809BD9BC: 809BD6D0 (__dt__4cXyzFv)
//	809BD9C8: 80361D60 (__construct_array)
//	809BD9D0: 809BDC4C (__ct__4cXyzFv)
//	809BD9D4: 809BDC4C (__ct__4cXyzFv)
//	809BD9D8: 809BD6D0 (__dt__4cXyzFv)
//	809BD9DC: 809BD6D0 (__dt__4cXyzFv)
//	809BD9E8: 80361D60 (__construct_array)
//	809BD9F0: 809BDC4C (__ct__4cXyzFv)
//	809BD9F4: 809BDC4C (__ct__4cXyzFv)
//	809BD9F8: 809BD6D0 (__dt__4cXyzFv)
//	809BD9FC: 809BD6D0 (__dt__4cXyzFv)
//	809BDA08: 80361D60 (__construct_array)
//	809BDA10: 809BDC4C (__ct__4cXyzFv)
//	809BDA14: 809BDC4C (__ct__4cXyzFv)
//	809BDA18: 809BD6D0 (__dt__4cXyzFv)
//	809BDA1C: 809BD6D0 (__dt__4cXyzFv)
//	809BDA28: 80361D60 (__construct_array)
//	809BDA30: 809BDC4C (__ct__4cXyzFv)
//	809BDA34: 809BDC4C (__ct__4cXyzFv)
//	809BDA38: 809BD6D0 (__dt__4cXyzFv)
//	809BDA3C: 809BD6D0 (__dt__4cXyzFv)
//	809BDA48: 80361D60 (__construct_array)
//	809BDA50: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	809BDA58: 809BDB4C (__ct__5csXyzFv)
//	809BDA5C: 809BDB4C (__ct__5csXyzFv)
//	809BDA60: 809BD70C (__dt__5csXyzFv)
//	809BDA64: 809BD70C (__dt__5csXyzFv)
//	809BDA70: 80361D60 (__construct_array)
//	809BDA84: 80003458 (memset)
//	809BDA8C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	809BDA94: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	809BDA9C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	809BDAA4: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	809BDAAC: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	809BDB10: 80267954 (cM_rndF__Ff)
//	809BDB38: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/func_809BD748.s"
}
#pragma pop


/* 809BDB4C-809BDB50 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 809BDB50-809BDC4C 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv                                    */
//	809BDB70: 809BE74C (__vt__15daNpcT_JntAnm_c)
//	809BDB74: 809BE74C (__vt__15daNpcT_JntAnm_c)
//	809BDB80: 809BD6D0 (__dt__4cXyzFv)
//	809BDB84: 809BD6D0 (__dt__4cXyzFv)
//	809BDB90: 80361CE8 (__destroy_arr)
//	809BDB98: 809BD6D0 (__dt__4cXyzFv)
//	809BDB9C: 809BD6D0 (__dt__4cXyzFv)
//	809BDBA8: 80361CE8 (__destroy_arr)
//	809BDBB0: 809BD6D0 (__dt__4cXyzFv)
//	809BDBB4: 809BD6D0 (__dt__4cXyzFv)
//	809BDBC0: 80361CE8 (__destroy_arr)
//	809BDBC8: 809BD6D0 (__dt__4cXyzFv)
//	809BDBCC: 809BD6D0 (__dt__4cXyzFv)
//	809BDBD8: 80361CE8 (__destroy_arr)
//	809BDBE0: 809BD6D0 (__dt__4cXyzFv)
//	809BDBE4: 809BD6D0 (__dt__4cXyzFv)
//	809BDBF0: 80361CE8 (__destroy_arr)
//	809BDBF8: 809BD6D0 (__dt__4cXyzFv)
//	809BDBFC: 809BD6D0 (__dt__4cXyzFv)
//	809BDC08: 80361CE8 (__destroy_arr)
//	809BDC14: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BDC18: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BDC2C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop


/* 809BDC4C-809BDC50 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 809BDC50-809BDC98 0048+00 s=1 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv                                 */
//	809BDC68: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BDC6C: 809BE740 (__vt__18daNpcT_ActorMngr_c)
//	809BDC7C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 809BDC98-809BDCE0 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv                             */
//	809BDCB0: 809BE734 (__vt__22daNpcT_MotionSeqMngr_c)
//	809BDCB4: 809BE734 (__vt__22daNpcT_MotionSeqMngr_c)
//	809BDCC4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop


/* 809BDCE0-809BDD50 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	809BDD00: 809BE710 (__vt__12dBgS_AcchCir)
//	809BDD04: 809BE710 (__vt__12dBgS_AcchCir)
//	809BDD14: 8026EF18 (__dt__8cM3dGCirFv)
//	809BDD20: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	809BDD30: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 809BDD50-809BDDAC 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	809BDD68: 809BE728 (__vt__10dCcD_GStts)
//	809BDD6C: 809BE728 (__vt__10dCcD_GStts)
//	809BDD78: 809BE71C (__vt__10cCcD_GStts)
//	809BDD7C: 809BE71C (__vt__10cCcD_GStts)
//	809BDD90: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 809BDDAC-809BDE1C 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	809BDDCC: 809BE6EC (__vt__12dBgS_ObjAcch)
//	809BDDD0: 809BE6EC (__vt__12dBgS_ObjAcch)
//	809BDDEC: 80075F94 (__dt__9dBgS_AcchFv)
//	809BDDFC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 809BDE1C-809BDE64 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	809BDE34: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BDE38: 809BE6E0 (__vt__12J3DFrameCtrl)
//	809BDE48: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 809BDE64-809BDF80 011C+00 s=1 e=0 z=0  None .text      setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs                    */
//	809BDE7C: 803621D8 (_savegpr_28)
//	809BDEB0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	809BDECC: 80267674 (cM_atan2s__Fff)
//	809BDEF8: 809BE54C (lit_4331)
//	809BDEFC: 809BE54C (lit_4331)
//	809BDF08: 809BE568 (lit_4727)
//	809BDF0C: 809BE568 (lit_4727)
//	809BDF6C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleY(cXyz param_0, s16 param_1, int param_2, f32 param_3, s16 param_4) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs.s"
}
#pragma pop


/* 809BDF80-809BE188 0208+00 s=1 e=0 z=0  None .text      setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs                      */
//	809BDF98: 803621DC (_savegpr_29)
//	809BDFAC: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BDFB0: 809BE4A0 (m__17daNpc_Gnd_Param_c)
//	809BDFCC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	809BDFFC: 80347138 (PSVECSquareMag)
//	809BE06C: 80450AE0 (__float_nan)
//	809BE070: 80450AE0 (__float_nan)
//	809BE0DC: 80450AE0 (__float_nan)
//	809BE0E0: 80450AE0 (__float_nan)
//	809BE0F0: 80267674 (cM_atan2s__Fff)
//	809BE174: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleX(cXyz param_0, f32 param_1, s16 param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs.s"
}
#pragma pop


/* 809BE188-809BE18C 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi                               */
// True False
//  void False
//  int False
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
	/* empty function */
}


/* 809BE18C-809BE194 0008+00 s=1 e=0 z=0  None .text      checkChangeJoint__8daNpcT_cFi                                */
// True False
//  bool False
//  int False
bool daNpcT_c::checkChangeJoint(int param_0) {
	return false;
}


/* 809BE194-809BE19C 0008+00 s=1 e=0 z=0  None .text      checkRemoveJoint__8daNpcT_cFi                                */
// True False
//  bool False
//  int False
bool daNpcT_c::checkRemoveJoint(int param_0) {
	return false;
}


/* 809BE19C-809BE1A4 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootLJointNo() {
	return -1;
}


/* 809BE1A4-809BE1AC 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootRJointNo() {
	return -1;
}


/* 809BE1AC-809BE1B4 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__8daNpcT_cFv                            */
// True False
//  bool False
bool daNpcT_c::getEyeballMaterialNo() {
	return false;
}


/* 809BE1B4-809BE1BC 0008+00 s=1 e=0 z=0  None .text      checkChangeEvt__8daNpcT_cFv                                  */
// True False
//  bool False
bool daNpcT_c::checkChangeEvt() {
	return false;
}


/* 809BE1BC-809BE1C4 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::evtEndProc() {
	return true;
}


/* 809BE1C4-809BE1C8 0004+00 s=1 e=0 z=0  None .text      afterMoved__8daNpcT_cFv                                      */
// True False
//  void False
void daNpcT_c::afterMoved() {
	/* empty function */
}


/* 809BE1C8-809BE1D0 0008+00 s=1 e=0 z=0  None .text      chkXYItems__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::chkXYItems() {
	return false;
}


/* 809BE1D0-809BE1E8 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcT_c::decTmr() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/decTmr__8daNpcT_cFv.s"
}
#pragma pop


/* 809BE1E8-809BE1EC 0004+00 s=1 e=0 z=0  None .text      drawOtherMdl__8daNpcT_cFv                                    */
// True False
//  void False
void daNpcT_c::drawOtherMdl() {
	/* empty function */
}


/* 809BE1EC-809BE1F0 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv                                       */
// True False
//  void False
void daNpcT_c::drawGhost() {
	/* empty function */
}


/* 809BE1F0-809BE1F8 0008+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__8daNpcT_cFiifi                        */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 809BE1F8-809BE228 0030+00 s=1 e=0 z=0  None .text      getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c False
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop


/* 809BE228-809BE258 0030+00 s=1 e=0 z=0  None .text      getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_motionAnmData_c False
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop


/* 809BE258-809BE25C 0004+00 s=1 e=0 z=0  None .text      changeAnm__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
	/* empty function */
}


/* 809BE25C-809BE260 0004+00 s=1 e=0 z=0  None .text      changeBck__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBck(int* param_0, int* param_1) {
	/* empty function */
}


/* 809BE260-809BE264 0004+00 s=1 e=0 z=0  None .text      changeBtp__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
	/* empty function */
}


/* 809BE264-809BE268 0004+00 s=1 e=0 z=0  None .text      changeBtk__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
	/* empty function */
}


/* ############################################################################################## */
/* 809BE834-809BE840 000C+00 s=2 e=0 z=0  None .data      __vt__17daNpc_Gnd_Param_c                                    */
SECTION_DATA void* __vt__17daNpc_Gnd_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__17daNpc_Gnd_Param_cFv,
};

/* 809BE848-809BE854 000C+00 s=1 e=0 z=0  None .bss       @3813                                                        */
static u8 lit_3813[12];

/* 809BE854-809BE858 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 809BE268-809BE2D0 0068+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_gnd_cpp                                      */
//	809BE274: 809BE644 (mCutList__11daNpc_Gnd_c)
//	809BE278: 809BE644 (mCutList__11daNpc_Gnd_c)
//	809BE27C: 803A2180 (__ptmf_null)
//	809BE280: 803A2180 (__ptmf_null)
//	809BE29C: 809BE834 (__vt__17daNpc_Gnd_Param_c)
//	809BE2A0: 809BE834 (__vt__17daNpc_Gnd_Param_c)
//	809BE2A4: 809BE854 (l_HIO)
//	809BE2A8: 809BE854 (l_HIO)
//	809BE2AC: 809BE434 (__dt__17daNpc_Gnd_Param_cFv)
//	809BE2B0: 809BE434 (__dt__17daNpc_Gnd_Param_cFv)
//	809BE2B4: 809BE848 (lit_3813)
//	809BE2B8: 809BE848 (lit_3813)
//	809BE2BC: 809BB598 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_gnd_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__sinit_d_a_npc_gnd_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_809BE268 = (void*)__sinit_d_a_npc_gnd_cpp;
#pragma pop


/* 809BE2D0-809BE37C 00AC+00 s=1 e=0 z=0  None .text      __ct__11daNpc_Gnd_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	809BE2F0: 809BD748 (__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	809BE2F4: 809BE770 (__vt__11daNpc_Gnd_c)
//	809BE2F8: 809BE770 (__vt__11daNpc_Gnd_c)
//	809BE308: 80083A28 (__ct__12dCcD_GObjInfFv)
//	809BE30C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	809BE310: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	809BE318: 809BE758 (__vt__8cM3dGAab)
//	809BE31C: 809BE758 (__vt__8cM3dGAab)
//	809BE324: 809BE764 (__vt__8cM3dGCyl)
//	809BE328: 809BE764 (__vt__8cM3dGCyl)
//	809BE330: 803C35A4 (__vt__12cCcD_CylAttr)
//	809BE334: 803C35A4 (__vt__12cCcD_CylAttr)
//	809BE344: 803AC050 (__vt__8dCcD_Cyl)
//	809BE348: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpc_Gnd_c::daNpc_Gnd_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/func_809BE2D0.s"
}
#pragma pop


/* 809BE37C-809BE3C4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	809BE394: 809BE764 (__vt__8cM3dGCyl)
//	809BE398: 809BE764 (__vt__8cM3dGCyl)
//	809BE3A8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 809BE3C4-809BE40C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	809BE3DC: 809BE758 (__vt__8cM3dGAab)
//	809BE3E0: 809BE758 (__vt__8cM3dGAab)
//	809BE3F0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 809BE40C-809BE414 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__11daNpc_Gnd_cFv                       */
// True False
//  s32 False
s32 daNpc_Gnd_c::getEyeballRMaterialNo() {
	return 3;
}


/* 809BE414-809BE41C 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__11daNpc_Gnd_cFv                       */
// True False
//  s32 False
s32 daNpc_Gnd_c::getEyeballLMaterialNo() {
	return 2;
}


/* 809BE41C-809BE424 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__11daNpc_Gnd_cFv                              */
// True False
//  s32 False
s32 daNpc_Gnd_c::getHeadJointNo() {
	return 4;
}


/* 809BE424-809BE42C 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__11daNpc_Gnd_cFv                              */
// True False
//  s32 False
s32 daNpc_Gnd_c::getNeckJointNo() {
	return 3;
}


/* 809BE42C-809BE434 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__11daNpc_Gnd_cFv                          */
// True False
//  bool False
bool daNpc_Gnd_c::getBackboneJointNo() {
	return true;
}


/* 809BE434-809BE47C 0048+00 s=2 e=0 z=0  None .text      __dt__17daNpc_Gnd_Param_cFv                                  */
//	809BE44C: 809BE834 (__vt__17daNpc_Gnd_Param_c)
//	809BE450: 809BE834 (__vt__17daNpc_Gnd_Param_c)
//	809BE460: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Gnd_Param_c::~daNpc_Gnd_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/__dt__17daNpc_Gnd_Param_cFv.s"
}
#pragma pop


/* 809BE47C-809BE484 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	809BE480: 809BDDAC (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_809BE47C() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/func_809BE47C.s"
}
#pragma pop


/* 809BE484-809BE48C 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	809BE488: 809BDDAC (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_809BE484() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_gnd/d_a_npc_gnd/func_809BE484.s"
}
#pragma pop


