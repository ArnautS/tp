// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_ins
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_ins/d_a_npc_ins.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct csXyz {
	/* 80A136AC */ // True False
~csXyz();
	/* 80A136E8 */ // True False
csXyz();
};

struct mDoMtx_stack_c {
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct J3DAnmTransform {
};

struct mDoExt_bckAnm {
	/* 8000D990 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
void changeBckOnly(J3DAnmTransform*);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct cXyz {
	/* 80A136EC */ // True False
~cXyz();
	/* 80A13728 */ // True False
cXyz();
};

struct J3DJoint {
};

struct J3DModel {
};

struct daNpcIns_c {
	/* 80A0E24C */ // True False
daNpcIns_c();
	/* 80A0E460 */ // True False
~daNpcIns_c();
	/* 80A0E660 */ // True False
void Create();
	/* 80A0EA30 */ // True False
void CreateHeap();
	/* 80A0EF3C */ // True False
void Delete();
	/* 80A0EF70 */ // True False
void Execute();
	/* 80A0EF94 */ // True False
void Draw();
	/* 80A0F0BC */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 80A0F28C */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80A0F2AC */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 80A0F2F8 */ // True False
//  int False
//  bool False
void setExpressionAnm(int, bool);
	/* 80A0F538 */ // True False
//  int False
void setExpressionBtp(int);
	/* 80A0F618 */ // True False
//  int False
//  f32 False
void setMotionAnm(int, f32);
	/* 80A0F78C */ // True False
void reset();
	/* 80A0F984 */ // True False
//  void* False
// 	 void False
void waitShop(void*);
	/* 80A0FF40 */ // True False
//  int False
//  f32 False
//  int False
void setMotion(int, f32, int);
	/* 80A0FFC4 */ // True False
//  int False
//  f32 False
void setExpression(int, f32);
	/* 80A0FFF0 */ // True False
//  void* False
// 	 void False
void waitPresent(void*);
	/* 80A103A0 */ // True False
//  void* False
// 	 void False
void waitOutSide1(void*);
	/* 80A10950 */ // True False
//  void* False
// 	 void False
void waitOutSide2(void*);
	/* 80A10CD8 */ // True False
//  void* False
// 	 void False
void goHome(void*);
	/* 80A11378 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80A11A7C */ // True False
//  void* False
// 	 void False
void demo(void*);
	/* 80A11BE8 */ // True False
void isInsectComplete();
	/* 80A11C50 */ // True False
//  int False
void getInsectParamData(int);
	/* 80A11D44 */ // True False
void setWaitAction();
	/* 80A11F84 */ // True False
//  int False
void setPath(int);
	/* 80A1211C */ // True False
//  cXyz& False
// 	 cXyz False
//  f32 False
void checkPoint(cXyz&, f32);
	/* 80A122D0 */ // True False
void setNextPoint();
	/* 80A12480 */ // True False
//  int False
//  Vec* False
// 	 Vec False
void getTargetPoint(int, Vec*);
	/* 80A124D0 */ // True False
void pathMoveF();
	/* 80A12618 */ // True False
void setParam();
	/* 80A126D4 */ // True False
void main();
	/* 80A12A10 */ // True False
void playMotion();
	/* 80A12DC8 */ // True False
void ctrlBtk();
	/* 80A12EA4 */ // True False
void setAttnPos();
	/* 80A131AC */ // True False
void lookat();
	/* 80A1339C */ // True False
void setMtx();
	/* 80A13460 */ // True False
//  bool False
bool drawDbgInfo();
};

struct daNpcIns_Param_c {
	/* 80A13D40 */ // True False
~daNpcIns_Param_c();
};

struct J3DAnmTextureSRTKey {
};

struct J3DAnmTransformKey {
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

struct _GXColorS10 {
};

struct daNpcF_c {
	struct daNpcF_anmPlayData {
	};

	/* 80152014 */ // False False
void execute();
	/* 801522AC */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  int False
void draw(int, int, f32, _GXColorS10*, int);
	/* 801527FC */ // False False
void setMtx2();
	/* 801528C8 */ // False False
void initialize();
	/* 80152B2C */ // False False
//  char* False
// 	 char False
//  int False
void getTrnsfrmKeyAnmP(char*, int);
	/* 80152B68 */ // False False
//  char* False
// 	 char False
//  int False
void getTexPtrnAnmP(char*, int);
	/* 80152BA4 */ // False False
//  char* False
// 	 char False
//  int False
void getTexSRTKeyAnmP(char*, int);
	/* 80152C1C */ // False False
//  J3DAnmTransformKey* False
// 	 J3DAnmTransformKey False
//  f32 False
//  f32 False
//  int False
//  int False
//  int False
void setMcaMorfAnm(J3DAnmTransformKey*, f32, f32, int, int, int);
	/* 80152C80 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  f32 False
//  int False
//  int False
//  int False
//  bool False
void setBckAnm(J3DAnmTransform*, f32, int, int, int, bool);
	/* 80152CC4 */ // False False
//  J3DAnmTexPattern* False
// 	 J3DAnmTexPattern False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBtpAnm(J3DAnmTexPattern*, J3DModelData*, f32, int);
	/* 80152D04 */ // False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBtkAnm(J3DAnmTextureSRTKey*, J3DModelData*, f32, int);
	/* 80152D84 */ // False False
void setEnvTevColor();
	/* 80152DE0 */ // False False
void setRoomNo();
	/* 80153150 */ // False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
void playExpressionAnm(daNpcF_c::daNpcF_anmPlayData***);
	/* 80153264 */ // False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
void playMotionAnm(daNpcF_c::daNpcF_anmPlayData***);
	/* 8015337C */ // False False
//  int False
//  int* False
// 	 int False
//  f32 False
void setLookatMtx(int, int*, f32);
	/* 80153718 */ // False False
//  int& False
// 	 int False
//  int& False
// 	 int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void ctrlMsgAnm(int&, int&, fopAc_ac_c*, int);
	/* 8015387C */ // False False
//  int False
//  char* False
// 	 char False
//  u16 False
//  u16 False
//  u8 False
//  u16 False
void orderEvent(int, char*, u16, u16, u8, u16);
	/* 801539F0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
void chkActorInSight(fopAc_ac_c*, f32);
	/* 80153BDC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void chkActorInAttnArea(fopAc_ac_c*, fopAc_ac_c*, int);
	/* 80153D1C */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 80153D84 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void talkProc(int*, int, fopAc_ac_c**);
	/* 80153EF4 */ // False False
//  s16 False
//  f32 False
//  int False
void turn(s16, f32, int);
	/* 80154250 */ // False False
//  s16 False
void setAngle(s16);
	/* 80154278 */ // False False
//  int False
//  int False
void getDistTableIdx(int, int);
	/* 80A1372C */ // True False
~daNpcF_c();
	/* 80A13978 */ // True False
daNpcF_c();
	/* 80A13CEC */ // True False
//  void False
void adjustShapeAngle();
	/* 80A13CF0 */ // True False
//  void False
void setCollisions();
	/* 80A13CF4 */ // True False
//  void False
void drawOtherMdls();
};

struct daNpcF_MatAnm_c {
	/* 80150738 */ // False False
void initialize();
};

struct daNpcF_Lookat_c {
	/* 80151038 */ // False False
void initialize();
	/* 801510B8 */ // False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
//  cXyz* False
// 	 cXyz False
void setParam(f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, s16, cXyz*);
	/* 80151350 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  csXyz** False
// 	 csXyz* False
// 		 csXyz False
//  int False
//  int False
//  int False
void calc(fopAc_ac_c*, f32 (* )[4], csXyz**, int, int, int);
	/* 80A135DC */ // True False
~daNpcF_Lookat_c();
};

struct daNpcF_ActorMngr_c {
	/* 801506B0 */ // False False
void initialize();
	/* 801506BC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801506E0 */ // False False
void remove();
	/* 801506EC */ // False False
void getActorP();
	/* 80A13558 */ // True False
~daNpcF_ActorMngr_c();
	/* 80A135A0 */ // True False
daNpcF_ActorMngr_c();
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPath {
};

struct dMsgObject_c {
	/* 802384B0 */ // False False
//  u8 False
void setInsectItemNo(u8);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
	/* 8024A528 */ // False False
//  int* False
// 	 int False
void getEventId(int*);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 80042518 */ // False False
//  void* False
// 	 void False
void reset(void*);
	/* 800436EC */ // False False
//  unsigned int False
void setPtI_Id(unsigned int);
};

struct dEvent_manager_c {
	/* 80047758 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
void getEventIdx(fopAc_ac_c*, char const*, u8);
	/* 80047A78 */ // False False
//  s16 False
void endCheck(s16);
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800483E8 */ // False False
void getRunEventName();
};

struct dDlst_shadowControl_c {
	/* 80055F1C */ // False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
void addReal(u32, J3DModel*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80A13BD8 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80A13C34 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80A13B68 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGPla {
	/* 80A11330 */ // True False
~cM3dGPla();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80A0E3D0 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80A0E418 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80A13CF8 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct cBgS {
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct JMath {
	template <typename A1, typename B1>
	struct TSinCosTable { };
	/* TSinCosTable<13, f32> */
	struct TSinCosTable__template0 {
		/* 80A13468 */ // False True
//  s16 False
void sinShort(s16) const;
	};

};

struct J3DTexNoAnm {
	/* 80A0EE28 */ // True False
~J3DTexNoAnm();
	/* 80A0EE70 */ // True False
J3DTexNoAnm();
	/* 80A125E8 */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 80A0EE94 */ // True False
~J3DTexMtxAnm();
	/* 80A0EED0 */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 80A0ED80 */ // True False
~J3DTevKColorAnm();
	/* 80A0EDBC */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 80A0EDD4 */ // True False
~J3DTevColorAnm();
	/* 80A0EE10 */ // True False
J3DTevColorAnm();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 80A0EEE8 */ // True False
~J3DMatColorAnm();
	/* 80A0EF24 */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80A13CA4 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpcIns_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpcIns_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpcIns_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpcIns_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpcIns_IsDelete(void*);
// False True
//  int False
//  int False
void cLib_getRndValue__template0(int, int);

// True False
extern "C" void __ct__10daNpcIns_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10daNpcIns_cFv();
// True False
extern "C" void Create__10daNpcIns_cFv();
// True False
extern "C" void CreateHeap__10daNpcIns_cFv();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
extern "C" void Delete__10daNpcIns_cFv();
// True False
extern "C" void Execute__10daNpcIns_cFv();
// True False
extern "C" void Draw__10daNpcIns_cFv();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__10daNpcIns_cFP8J3DJointP8J3DModel();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__10daNpcIns_cFP10fopAc_ac_c();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__10daNpcIns_cFP8J3DJointi();
// True False
//  int False
//  bool False
extern "C" void setExpressionAnm__10daNpcIns_cFib();
// True False
//  int False
extern "C" void setExpressionBtp__10daNpcIns_cFi();
// True False
//  int False
//  f32 False
extern "C" void setMotionAnm__10daNpcIns_cFif();
// True False
extern "C" void reset__10daNpcIns_cFv();
// True False
//  void* False
// 	 void False
extern "C" void waitShop__10daNpcIns_cFPv();
// True False
//  int False
//  f32 False
//  int False
extern "C" void setMotion__10daNpcIns_cFifi();
// True False
//  int False
//  f32 False
extern "C" void setExpression__10daNpcIns_cFif();
// True False
//  void* False
// 	 void False
extern "C" void waitPresent__10daNpcIns_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void waitOutSide1__10daNpcIns_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void waitOutSide2__10daNpcIns_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void goHome__10daNpcIns_cFPv();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
//  void* False
// 	 void False
extern "C" void talk__10daNpcIns_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void demo__10daNpcIns_cFPv();
// True False
extern "C" void isInsectComplete__10daNpcIns_cFv();
// True False
//  int False
extern "C" void getInsectParamData__10daNpcIns_cFi();
// True False
extern "C" void setWaitAction__10daNpcIns_cFv();
// True False
//  int False
extern "C" void setPath__10daNpcIns_cFi();
// True False
//  cXyz& False
// 	 cXyz False
//  f32 False
extern "C" void checkPoint__10daNpcIns_cFR4cXyzf();
// True False
extern "C" void setNextPoint__10daNpcIns_cFv();
// True False
//  int False
//  Vec* False
// 	 Vec False
extern "C" void getTargetPoint__10daNpcIns_cFiP3Vec();
// True False
extern "C" void pathMoveF__10daNpcIns_cFv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcIns_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcIns_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcIns_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcIns_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpcIns_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void setParam__10daNpcIns_cFv();
// True False
extern "C" void main__10daNpcIns_cFv();
// True False
extern "C" void playMotion__10daNpcIns_cFv();
// True False
extern "C" void ctrlBtk__10daNpcIns_cFv();
// True False
extern "C" void setAttnPos__10daNpcIns_cFv();
// True False
extern "C" void lookat__10daNpcIns_cFv();
// True False
extern "C" void setMtx__10daNpcIns_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__10daNpcIns_cFv();
// False True
//  s16 False
extern "C" void func_80A13468();
// False True
//  int False
//  int False
extern "C" void func_80A13474();
// False False
extern "C" void __sinit_d_a_npc_ins_cpp();
// True False
extern "C" void __dt__18daNpcF_ActorMngr_cFv();
// True False
extern "C" void __ct__18daNpcF_ActorMngr_cFv();
// True False
extern "C" void __dt__15daNpcF_Lookat_cFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__8daNpcF_cFv();
// True False
extern "C" void __ct__8daNpcF_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  void False
extern "C" void adjustShapeAngle__8daNpcF_cFv();
// True False
//  void False
extern "C" void setCollisions__8daNpcF_cFv();
// True False
//  void False
extern "C" void drawOtherMdls__8daNpcF_cFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__16daNpcIns_Param_cFv();
// True False
extern "C" static void func_80A13D88();
// True False
extern "C" static void func_80A13D90();
extern "C" extern u32 const lit_4341;
extern "C" extern u32 const lit_4342;
extern "C" extern u32 const lit_4343;
extern "C" extern u32 const lit_4344;
extern "C" extern u8 const lit_4746[12];
extern "C" extern u8 const lit_4747[4];
extern "C" extern u8 const lit_4748[12];
extern "C" extern u8 const lit_4749[4];
extern "C" extern u8 const lit_4750[12];
extern "C" extern u8 const lit_4751[4];
extern "C" extern u8 const lit_4752[12];
extern "C" extern u8 const lit_4753[4];
extern "C" extern u8 const lit_4754[12];
extern "C" extern u8 const lit_4755[4];
extern "C" extern u8 const lit_4756[12];
extern "C" extern u8 const lit_4757[4];
extern "C" extern u8 const lit_4758[12];
extern "C" extern u8 const lit_4759[4];
extern "C" extern u8 const lit_4760[12];
extern "C" extern u8 const lit_4761[4];
extern "C" extern u8 const lit_4762[12];
extern "C" extern u8 const lit_4763[4];
extern "C" extern u8 const lit_4764[12];
extern "C" extern u8 const lit_4765[4];
extern "C" extern u8 const lit_4766[40];
extern "C" extern u8 const lit_4770[12];
extern "C" extern u8 const lit_4771[4];
extern "C" extern u8 const lit_4772[12];
extern "C" extern u8 const lit_4773[12];
extern "C" extern u8 const lit_4774[8];
extern "C" extern u8 const lit_4775[12];
extern "C" extern u8 const lit_4776[4];
extern "C" extern u8 const lit_4777[12];
extern "C" extern u8 const lit_4778[12];
extern "C" extern u8 const lit_4779[8];
extern "C" extern u8 const lit_4780[12];
extern "C" extern u8 const lit_4781[4];
extern "C" extern u8 const lit_4782[12];
extern "C" extern u8 const lit_4783[12];
extern "C" extern u8 const lit_4784[8];
extern "C" extern u8 const lit_4785[12];
extern "C" extern u8 const lit_4786[12];
extern "C" extern u8 const lit_4787[8];
extern "C" extern u8 const lit_4788[12];
extern "C" extern u8 const lit_4789[4];
extern "C" extern u8 const lit_4790[12];
extern "C" extern u8 const lit_4791[4];
extern "C" extern u8 const lit_4792[12];
extern "C" extern u8 const lit_4793[4];
extern "C" extern u8 const lit_4794[12];
extern "C" extern u8 const lit_4795[4];
extern "C" extern u8 const lit_4796[12];
extern "C" extern u8 const lit_4797[4];
extern "C" extern u8 const lit_4798[12];
extern "C" extern u8 const lit_4799[4];
extern "C" extern u8 const lit_4800[52];
extern "C" extern u8 const lit_4812[12];
extern "C" extern u32 const lit_4995;
extern "C" extern u32 const lit_4996;
extern "C" extern u32 const lit_5370;
extern "C" extern u32 const lit_5371;
extern "C" extern u8 const lit_5618[8];
extern "C" extern u8 const lit_5619[8];
extern "C" extern u8 const lit_5620[8];
extern "C" extern u32 const lit_5663;
extern "C" extern u32 const lit_5916;
extern "C" extern u32 const lit_5958;
extern "C" extern u32 const lit_5959;
extern "C" extern u32 const lit_5960;
extern "C" extern u32 const lit_5961;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 l_evtNames[4];
extern "C" extern void* lit_4862[3];
extern "C" extern void* lit_4867[3];
extern "C" extern void* lit_5138[3];
extern "C" extern void* lit_5202[3];
extern "C" extern void* lit_5556[3];
extern "C" extern void* lit_5559[3];
extern "C" extern void* lit_5562[3];
extern "C" extern void* g_profile_NPC_INS[12];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__10daNpcIns_c[18];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__18daNpcF_ActorMngr_c[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__15daNpcF_Lookat_c[3];
extern "C" extern void* __vt__16daNpcIns_Param_c[3];

// 
// External References:
// 

// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u16 False
//  u16 False
void fopAcM_orderChangeEventId(fopAc_ac_c*, s16, u16, u16);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_createItemForPresentDemo(cXyz const*, int, u8, int, int, csXyz const*, cXyz const*);
// False False
//  cM3dGPla const* False
// 	 cM3dGPla const False
// 		 cM3dGPla False
//  s16 False
void fopAcM_getPolygonAngle(cM3dGPla const*, s16);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  dPath const* False
// 	 dPath const False
// 		 dPath False
//  int False
void dPath_GetPnt(dPath const*, int);
// False False
//  int False
//  int False
void dPath_GetRoomPath(int, int);
// False False
//  u32 False
void daNpcF_chkEvtBit(u32);
// False False
//  u32 False
void daNpcF_onEvtBit(u32);
// False False
void dKy_getdaytime_hour();
// False False
void dKy_getdaytime_minute();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_targetAngleX(cXyz const*, cXyz const*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
extern "C" void changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz();
// False False
//  cM3dGPla const* False
// 	 cM3dGPla const False
// 		 cM3dGPla False
//  s16 False
extern "C" void fopAcM_getPolygonAngle__FPC8cM3dGPlas();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  void* False
// 	 void False
extern "C" void reset__14dEvt_control_cFPv();
// False False
//  unsigned int False
extern "C" void setPtI_Id__14dEvt_control_cFUi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
// False False
//  s16 False
extern "C" void endCheck__16dEvent_manager_cFs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void getRunEventName__16dEvent_manager_cFv();
// False False
//  dPath const* False
// 	 dPath const False
// 		 dPath False
//  int False
extern "C" void dPath_GetPnt__FPC5dPathi();
// False False
//  int False
//  int False
extern "C" void dPath_GetRoomPath__Fii();
// False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcF_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcF_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcF_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcF_MatAnm_cFv();
// False False
extern "C" void initialize__15daNpcF_Lookat_cFv();
// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcF_Lookat_cFffffffffffffsP4cXyz();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  csXyz** False
// 	 csXyz* False
// 		 csXyz False
//  int False
//  int False
//  int False
extern "C" void calc__15daNpcF_Lookat_cFP10fopAc_ac_cPA4_fPP5csXyziii();
// False False
extern "C" void execute__8daNpcF_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  int False
extern "C" void draw__8daNpcF_cFiifP11_GXColorS10i();
// False False
extern "C" void setMtx2__8daNpcF_cFv();
// False False
extern "C" void initialize__8daNpcF_cFv();
// False False
//  char* False
// 	 char False
//  int False
extern "C" void getTrnsfrmKeyAnmP__8daNpcF_cFPci();
// False False
//  char* False
// 	 char False
//  int False
extern "C" void getTexPtrnAnmP__8daNpcF_cFPci();
// False False
//  char* False
// 	 char False
//  int False
extern "C" void getTexSRTKeyAnmP__8daNpcF_cFPci();
// False False
//  J3DAnmTransformKey* False
// 	 J3DAnmTransformKey False
//  f32 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void setMcaMorfAnm__8daNpcF_cFP18J3DAnmTransformKeyffiii();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  f32 False
//  int False
//  int False
//  int False
//  bool False
extern "C" void setBckAnm__8daNpcF_cFP15J3DAnmTransformfiiib();
// False False
//  J3DAnmTexPattern* False
// 	 J3DAnmTexPattern False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBtpAnm__8daNpcF_cFP16J3DAnmTexPatternP12J3DModelDatafi();
// False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBtkAnm__8daNpcF_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi();
// False False
extern "C" void setEnvTevColor__8daNpcF_cFv();
// False False
extern "C" void setRoomNo__8daNpcF_cFv();
// False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
extern "C" void playExpressionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData();
// False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
extern "C" void playMotionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData();
// False False
//  int False
//  int* False
// 	 int False
//  f32 False
extern "C" void setLookatMtx__8daNpcF_cFiPif();
// False False
//  int& False
// 	 int False
//  int& False
// 	 int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci();
// False False
//  int False
//  char* False
// 	 char False
//  u16 False
//  u16 False
//  u8 False
//  u16 False
extern "C" void orderEvent__8daNpcF_cFiPcUsUsUcUs();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
extern "C" void chkActorInSight__8daNpcF_cFP10fopAc_ac_cf();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcF_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void talkProc__8daNpcF_cFPiiPP10fopAc_ac_c();
// False False
//  s16 False
//  f32 False
//  int False
extern "C" void turn__8daNpcF_cFsfi();
// False False
//  s16 False
extern "C" void setAngle__8daNpcF_cFs();
// False False
//  int False
//  int False
extern "C" void getDistTableIdx__8daNpcF_cFii();
// False False
//  u32 False
extern "C" void daNpcF_chkEvtBit__FUl();
// False False
//  u32 False
extern "C" void daNpcF_onEvtBit__FUl();
// False False
extern "C" void dKy_getdaytime_hour__Fv();
// False False
extern "C" void dKy_getdaytime_minute__Fv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  u8 False
extern "C" void setInsectItemNo__12dMsgObject_cFUc();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  int* False
// 	 int False
extern "C" void getEventId__10dMsgFlow_cFPi();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_targetAngleX__FPC4cXyzPC4cXyz();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSubtract();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcF_c[68];
extern "C" extern void* __vt__8daNpcF_c[18];
extern "C" extern void* __vt__15daNpcF_MatAnm_c[4 + 6 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80A13DAC-80A13E6C 00C0+00 s=15 e=0 z=0  None .rodata    l_insectParams                                               */
SECTION_RODATA static u8 const l_insectParams[192] = {
	0x00, 0x00, 0x01, 0x91, 0x07, 0x09, 0x00, 0x00, 0x00, 0x00, 0x01, 0x92, 0x07, 0x09, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x93, 0x07, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x01, 0x94, 0x07, 0x0A, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x95, 0x07, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x01, 0x96, 0x07, 0x0B, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x97, 0x07, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x01, 0x98, 0x07, 0x0C, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x99, 0x07, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9A, 0x07, 0x0D, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x9B, 0x07, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9C, 0x07, 0x0E, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x9D, 0x07, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9E, 0x07, 0x0F, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x9F, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0xA0, 0x07, 0x10, 0x00, 0x00,
	0x00, 0x00, 0x01, 0xA1, 0x07, 0x11, 0x00, 0x00, 0x00, 0x00, 0x01, 0xA2, 0x07, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x01, 0xA3, 0x07, 0x12, 0x00, 0x00, 0x00, 0x00, 0x01, 0xA4, 0x07, 0x12, 0x00, 0x00,
	0x00, 0x00, 0x01, 0xA5, 0x07, 0x13, 0x00, 0x00, 0x00, 0x00, 0x01, 0xA6, 0x07, 0x13, 0x00, 0x00,
	0x00, 0x00, 0x01, 0xA7, 0x07, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0xA8, 0x07, 0x14, 0x00, 0x00,
};

/* 80A13E6C-80A13EDC 0070+00 s=3 e=0 z=0  None .rodata    m__16daNpcIns_Param_c                                        */
SECTION_RODATA static u8 const m__16daNpcIns_Param_c[112] = {
	0x42, 0x0C, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xA0, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00,
};

/* 80A13EDC-80A13EE0 0004+00 s=0 e=0 z=0  None .rodata    @4341                                                        */
SECTION_RODATA u32 const lit_4341 = 0xC3200000;

/* 80A13EE0-80A13EE4 0004+00 s=0 e=0 z=0  None .rodata    @4342                                                        */
SECTION_RODATA u32 const lit_4342 = 0xC2480000;

/* 80A13EE4-80A13EE8 0004+00 s=0 e=0 z=0  None .rodata    @4343                                                        */
SECTION_RODATA u32 const lit_4343 = 0x43200000;

/* 80A13EE8-80A13EEC 0004+00 s=0 e=0 z=0  None .rodata    @4344                                                        */
SECTION_RODATA u32 const lit_4344 = 0x435C0000;

/* 80A13EEC-80A13EF0 0004+00 s=4 e=0 z=0  None .rodata    @4414                                                        */
SECTION_RODATA static u32 const lit_4414 = 0x3F800000;

/* 80A13EF0-80A13EF4 0004+00 s=3 e=0 z=0  None .rodata    @4415                                                        */
SECTION_RODATA static u8 const lit_4415[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13EF4-80A13F00 000C+00 s=1 e=0 z=0  None .rodata    @4507                                                        */
SECTION_RODATA static u8 const lit_4507[12] = {
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04,
};

/* 80A13F00-80A13F0C 000C+00 s=0 e=0 z=0  None .rodata    @4746                                                        */
SECTION_RODATA u8 const lit_4746[12] = {
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13F0C-80A13F10 0004+00 s=0 e=0 z=0  None .rodata    @4747                                                        */
SECTION_RODATA u8 const lit_4747[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13F10-80A13F1C 000C+00 s=0 e=0 z=0  None .rodata    @4748                                                        */
SECTION_RODATA u8 const lit_4748[12] = {
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13F1C-80A13F20 0004+00 s=0 e=0 z=0  None .rodata    @4749                                                        */
SECTION_RODATA u8 const lit_4749[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13F20-80A13F2C 000C+00 s=0 e=0 z=0  None .rodata    @4750                                                        */
SECTION_RODATA u8 const lit_4750[12] = {
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13F2C-80A13F30 0004+00 s=0 e=0 z=0  None .rodata    @4751                                                        */
SECTION_RODATA u8 const lit_4751[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13F30-80A13F3C 000C+00 s=0 e=0 z=0  None .rodata    @4752                                                        */
SECTION_RODATA u8 const lit_4752[12] = {
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13F3C-80A13F40 0004+00 s=0 e=0 z=0  None .rodata    @4753                                                        */
SECTION_RODATA u8 const lit_4753[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13F40-80A13F4C 000C+00 s=0 e=0 z=0  None .rodata    @4754                                                        */
SECTION_RODATA u8 const lit_4754[12] = {
	0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13F4C-80A13F50 0004+00 s=0 e=0 z=0  None .rodata    @4755                                                        */
SECTION_RODATA u8 const lit_4755[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13F50-80A13F5C 000C+00 s=0 e=0 z=0  None .rodata    @4756                                                        */
SECTION_RODATA u8 const lit_4756[12] = {
	0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13F5C-80A13F60 0004+00 s=0 e=0 z=0  None .rodata    @4757                                                        */
SECTION_RODATA u8 const lit_4757[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13F60-80A13F6C 000C+00 s=0 e=0 z=0  None .rodata    @4758                                                        */
SECTION_RODATA u8 const lit_4758[12] = {
	0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13F6C-80A13F70 0004+00 s=0 e=0 z=0  None .rodata    @4759                                                        */
SECTION_RODATA u8 const lit_4759[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13F70-80A13F7C 000C+00 s=0 e=0 z=0  None .rodata    @4760                                                        */
SECTION_RODATA u8 const lit_4760[12] = {
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13F7C-80A13F80 0004+00 s=0 e=0 z=0  None .rodata    @4761                                                        */
SECTION_RODATA u8 const lit_4761[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13F80-80A13F8C 000C+00 s=0 e=0 z=0  None .rodata    @4762                                                        */
SECTION_RODATA u8 const lit_4762[12] = {
	0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13F8C-80A13F90 0004+00 s=0 e=0 z=0  None .rodata    @4763                                                        */
SECTION_RODATA u8 const lit_4763[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13F90-80A13F9C 000C+00 s=0 e=0 z=0  None .rodata    @4764                                                        */
SECTION_RODATA u8 const lit_4764[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13F9C-80A13FA0 0004+00 s=0 e=0 z=0  None .rodata    @4765                                                        */
SECTION_RODATA u8 const lit_4765[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13FA0-80A13FC8 0028+00 s=0 e=0 z=0  None .rodata    @4766                                                        */
SECTION_RODATA u8 const lit_4766[40] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13FC8-80A13FD4 000C+00 s=0 e=0 z=0  None .rodata    @4770                                                        */
SECTION_RODATA u8 const lit_4770[12] = {
	0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13FD4-80A13FD8 0004+00 s=0 e=0 z=0  None .rodata    @4771                                                        */
SECTION_RODATA u8 const lit_4771[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A13FD8-80A13FE4 000C+00 s=0 e=0 z=0  None .rodata    @4772                                                        */
SECTION_RODATA u8 const lit_4772[12] = {
	0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A13FE4-80A13FF0 000C+00 s=0 e=0 z=0  None .rodata    @4773                                                        */
SECTION_RODATA u8 const lit_4773[12] = {
	0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13FF0-80A13FF8 0008+00 s=0 e=0 z=0  None .rodata    @4774                                                        */
SECTION_RODATA u8 const lit_4774[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A13FF8-80A14004 000C+00 s=0 e=0 z=0  None .rodata    @4775                                                        */
SECTION_RODATA u8 const lit_4775[12] = {
	0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14004-80A14008 0004+00 s=0 e=0 z=0  None .rodata    @4776                                                        */
SECTION_RODATA u8 const lit_4776[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A14008-80A14014 000C+00 s=0 e=0 z=0  None .rodata    @4777                                                        */
SECTION_RODATA u8 const lit_4777[12] = {
	0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A14014-80A14020 000C+00 s=0 e=0 z=0  None .rodata    @4778                                                        */
SECTION_RODATA u8 const lit_4778[12] = {
	0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14020-80A14028 0008+00 s=0 e=0 z=0  None .rodata    @4779                                                        */
SECTION_RODATA u8 const lit_4779[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14028-80A14034 000C+00 s=0 e=0 z=0  None .rodata    @4780                                                        */
SECTION_RODATA u8 const lit_4780[12] = {
	0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14034-80A14038 0004+00 s=0 e=0 z=0  None .rodata    @4781                                                        */
SECTION_RODATA u8 const lit_4781[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A14038-80A14044 000C+00 s=0 e=0 z=0  None .rodata    @4782                                                        */
SECTION_RODATA u8 const lit_4782[12] = {
	0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A14044-80A14050 000C+00 s=0 e=0 z=0  None .rodata    @4783                                                        */
SECTION_RODATA u8 const lit_4783[12] = {
	0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14050-80A14058 0008+00 s=0 e=0 z=0  None .rodata    @4784                                                        */
SECTION_RODATA u8 const lit_4784[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14058-80A14064 000C+00 s=0 e=0 z=0  None .rodata    @4785                                                        */
SECTION_RODATA u8 const lit_4785[12] = {
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A14064-80A14070 000C+00 s=0 e=0 z=0  None .rodata    @4786                                                        */
SECTION_RODATA u8 const lit_4786[12] = {
	0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14070-80A14078 0008+00 s=0 e=0 z=0  None .rodata    @4787                                                        */
SECTION_RODATA u8 const lit_4787[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14078-80A14084 000C+00 s=0 e=0 z=0  None .rodata    @4788                                                        */
SECTION_RODATA u8 const lit_4788[12] = {
	0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14084-80A14088 0004+00 s=0 e=0 z=0  None .rodata    @4789                                                        */
SECTION_RODATA u8 const lit_4789[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A14088-80A14094 000C+00 s=0 e=0 z=0  None .rodata    @4790                                                        */
SECTION_RODATA u8 const lit_4790[12] = {
	0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14094-80A14098 0004+00 s=0 e=0 z=0  None .rodata    @4791                                                        */
SECTION_RODATA u8 const lit_4791[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A14098-80A140A4 000C+00 s=0 e=0 z=0  None .rodata    @4792                                                        */
SECTION_RODATA u8 const lit_4792[12] = {
	0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A140A4-80A140A8 0004+00 s=0 e=0 z=0  None .rodata    @4793                                                        */
SECTION_RODATA u8 const lit_4793[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A140A8-80A140B4 000C+00 s=0 e=0 z=0  None .rodata    @4794                                                        */
SECTION_RODATA u8 const lit_4794[12] = {
	0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A140B4-80A140B8 0004+00 s=0 e=0 z=0  None .rodata    @4795                                                        */
SECTION_RODATA u8 const lit_4795[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A140B8-80A140C4 000C+00 s=0 e=0 z=0  None .rodata    @4796                                                        */
SECTION_RODATA u8 const lit_4796[12] = {
	0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A140C4-80A140C8 0004+00 s=0 e=0 z=0  None .rodata    @4797                                                        */
SECTION_RODATA u8 const lit_4797[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A140C8-80A140D4 000C+00 s=0 e=0 z=0  None .rodata    @4798                                                        */
SECTION_RODATA u8 const lit_4798[12] = {
	0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A140D4-80A140D8 0004+00 s=0 e=0 z=0  None .rodata    @4799                                                        */
SECTION_RODATA u8 const lit_4799[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A140D8-80A1410C 0034+00 s=0 e=0 z=0  None .rodata    @4800                                                        */
SECTION_RODATA u8 const lit_4800[52] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80A1410C-80A14118 000C+00 s=0 e=0 z=0  None .rodata    @4812                                                        */
SECTION_RODATA u8 const lit_4812[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14118-80A1411C 0004+00 s=3 e=0 z=0  None .rodata    @4994                                                        */
SECTION_RODATA static u32 const lit_4994 = 0xBF800000;

/* 80A1411C-80A14120 0004+00 s=0 e=0 z=0  None .rodata    @4995                                                        */
SECTION_RODATA u32 const lit_4995 = 0x3BB40000;

/* 80A14120-80A14124 0004+00 s=0 e=0 z=0  None .rodata    @4996                                                        */
SECTION_RODATA u32 const lit_4996 = 0x41700000;

/* 80A14124-80A1412C 0008+00 s=1 e=0 z=0  None .rodata    @4998                                                        */
SECTION_RODATA static u8 const lit_4998[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80A1412C-80A14130 0004+00 s=0 e=0 z=0  None .rodata    @5370                                                        */
SECTION_RODATA u32 const lit_5370 = 0x3ECCCCCD;

/* 80A14130-80A14134 0004+00 s=0 e=0 z=0  None .rodata    @5371                                                        */
SECTION_RODATA u32 const lit_5371 = 0x41C80000;

/* 80A14134-80A1413C 0008+00 s=0 e=0 z=0  None .rodata    @5618                                                        */
SECTION_RODATA u8 const lit_5618[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A1413C-80A14144 0008+00 s=0 e=0 z=0  None .rodata    @5619                                                        */
SECTION_RODATA u8 const lit_5619[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A14144-80A1414C 0008+00 s=0 e=0 z=0  None .rodata    @5620                                                        */
SECTION_RODATA u8 const lit_5620[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A1414C-80A14150 0004+00 s=0 e=0 z=0  None .rodata    @5663                                                        */
SECTION_RODATA u32 const lit_5663 = 0x41200000;

/* 80A14150-80A14154 0004+00 s=1 e=0 z=0  None .rodata    @5847                                                        */
SECTION_RODATA static u32 const lit_5847 = 0x3E4CCCCD;

/* 80A14154-80A14158 0004+00 s=0 e=0 z=0  None .rodata    @5916                                                        */
SECTION_RODATA u32 const lit_5916 = 0x42700000;

/* 80A14158-80A1415C 0004+00 s=0 e=0 z=0  None .rodata    @5958                                                        */
SECTION_RODATA u32 const lit_5958 = 0xC2A00000;

/* 80A1415C-80A14160 0004+00 s=0 e=0 z=0  None .rodata    @5959                                                        */
SECTION_RODATA u32 const lit_5959 = 0x42A00000;

/* 80A14160-80A14164 0004+00 s=0 e=0 z=0  None .rodata    @5960                                                        */
SECTION_RODATA u32 const lit_5960 = 0x40A00000;

/* 80A14164-80A14168 0004+00 s=0 e=0 z=0  None .rodata    @5961                                                        */
SECTION_RODATA u32 const lit_5961 = 0x42200000;

/* 80A14168-80A1416C 0004+00 s=8 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80A14168 = "Ins";
#pragma pop

/* 80A1416C-80A1419C 0030+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80A1416C[48] = {
	/* 80A1416C 0005 data_80A1416C None */
	0x49, 0x6E, 0x73, 0x31, 0x00,
	/* 80A14171 0005 data_80A14171 None */
	0x49, 0x6E, 0x73, 0x32, 0x00,
	/* 80A14176 0026 data_80A14176 None */
	0x69, 0x6E, 0x73, 0x00, 0x52, 0x5F, 0x53, 0x50, 0x31, 0x36, 0x30, 0x00, 0x46, 0x5F, 0x53, 0x50,
	0x31, 0x32, 0x32, 0x00, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x47, 0x45, 0x54, 0x49,
	0x54, 0x45, 0x4D, 0x00, 0x00, 0x00,
};

/* 80A1419C-80A141A8 000C+00 s=6 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A141A8-80A141BC 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80A141BC-80A142DC 0120+00 s=1 e=0 z=0  None .data      l_bckGetParamList                                            */
SECTION_DATA static u8 l_bckGetParamList[288] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
};

/* 80A142DC-80A1433C 0060+00 s=1 e=0 z=0  None .data      l_btpGetParamList                                            */
SECTION_DATA static u8 l_btpGetParamList[96] = {
	0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
};

/* 80A1433C-80A14354 0018+00 s=1 e=0 z=0  None .data      l_btkGetParamList                                            */
SECTION_DATA static u8 l_btkGetParamList[24] = {
	0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A14354-80A14360 000C+00 s=1 e=0 z=0  None .data      l_loadRes_INS0                                               */
SECTION_DATA static u8 l_loadRes_INS0[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80A14360-80A1436C 000C+00 s=1 e=0 z=0  None .data      l_loadRes_INS1                                               */
SECTION_DATA static u8 l_loadRes_INS1[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80A1436C-80A14378 000C+00 s=1 e=0 z=0  None .data      l_loadRes_INS2                                               */
SECTION_DATA static u8 l_loadRes_INS2[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80A14378-80A14384 000C+00 s=2 e=0 z=0  None .data      l_loadRes_list                                               */
SECTION_DATA static void* l_loadRes_list[3] = {
	(void*)&l_loadRes_INS0,
	(void*)&l_loadRes_INS1,
	(void*)&l_loadRes_INS2,
};

/* 80A14384-80A14390 000C+00 s=6 e=0 z=0  None .data      l_arcNames                                                   */
SECTION_DATA static void* l_arcNames[3] = {
	(void*)&stringBase0,
	(void*)(((char*)&struct_80A1416C)+0x0) /* None */,
	(void*)(((char*)&struct_80A1416C)+0x5) /* None */,
};

/* 80A14390-80A14394 0004+00 s=0 e=0 z=0  None .data      l_evtNames                                                   */
SECTION_DATA u8 l_evtNames[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A14394-80A14398 0004+00 s=1 e=0 z=0  None .data      l_myName                                                     */
SECTION_DATA static void* l_myName = (void*)(((char*)&struct_80A1416C)+0xA) /* None */;

/* 80A14398-80A143A4 000C+00 s=2 e=0 z=0  None .data      mEvtSeqList__10daNpcIns_c                                    */
SECTION_DATA static u8 mEvtSeqList__10daNpcIns_c[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A143A4-80A143B0 000C+00 s=1 e=0 z=0  None .data      @4607                                                        */
SECTION_DATA static void* lit_4607[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)goHome__10daNpcIns_cFPv,
};

/* 80A143B0-80A143D8 0028+00 s=1 e=0 z=0  None .data      @4650                                                        */
SECTION_DATA static void* lit_4650[10] = {
	(void*)(((char*)setExpressionAnm__10daNpcIns_cFib)+0xA0),
	(void*)(((char*)setExpressionAnm__10daNpcIns_cFib)+0x19C),
	(void*)(((char*)setExpressionAnm__10daNpcIns_cFib)+0xBC),
	(void*)(((char*)setExpressionAnm__10daNpcIns_cFib)+0xD8),
	(void*)(((char*)setExpressionAnm__10daNpcIns_cFib)+0xF4),
	(void*)(((char*)setExpressionAnm__10daNpcIns_cFib)+0x110),
	(void*)(((char*)setExpressionAnm__10daNpcIns_cFib)+0x12C),
	(void*)(((char*)setExpressionAnm__10daNpcIns_cFib)+0x148),
	(void*)(((char*)setExpressionAnm__10daNpcIns_cFib)+0x164),
	(void*)(((char*)setExpressionAnm__10daNpcIns_cFib)+0x180),
};

/* 80A143D8-80A143E4 000C+00 s=0 e=0 z=0  None .data      @4862                                                        */
SECTION_DATA void* lit_4862[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__10daNpcIns_cFPv,
};

/* 80A143E4-80A143F0 000C+00 s=0 e=0 z=0  None .data      @4867                                                        */
SECTION_DATA void* lit_4867[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)demo__10daNpcIns_cFPv,
};

/* 80A143F0-80A143FC 000C+00 s=1 e=0 z=0  None .data      @5026                                                        */
SECTION_DATA static void* lit_5026[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__10daNpcIns_cFPv,
};

/* 80A143FC-80A14408 000C+00 s=0 e=0 z=0  None .data      @5138                                                        */
SECTION_DATA void* lit_5138[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)goHome__10daNpcIns_cFPv,
};

/* 80A14408-80A14414 000C+00 s=0 e=0 z=0  None .data      @5202                                                        */
SECTION_DATA void* lit_5202[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)goHome__10daNpcIns_cFPv,
};

/* 80A14414-80A14420 000C+00 s=1 e=0 z=0  None .data      @5401                                                        */
SECTION_DATA static void* lit_5401[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)waitPresent__10daNpcIns_cFPv,
};

/* 80A14420-80A1442C 000C+00 s=1 e=0 z=0  None .data      @5403                                                        */
SECTION_DATA static void* lit_5403[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)waitShop__10daNpcIns_cFPv,
};

/* 80A1442C-80A1448C 0060+00 s=1 e=0 z=0  None .data      @5553                                                        */
SECTION_DATA static void* lit_5553[24] = {
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x24),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x2C),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x34),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x3C),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x44),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x4C),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x54),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x5C),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x64),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x6C),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x74),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x7C),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x84),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x8C),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x94),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0x9C),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0xA4),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0xAC),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0xB4),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0xBC),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0xC4),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0xCC),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0xD4),
	(void*)(((char*)getInsectParamData__10daNpcIns_cFi)+0xDC),
};

/* 80A1448C-80A14498 000C+00 s=0 e=0 z=0  None .data      @5556                                                        */
SECTION_DATA void* lit_5556[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)waitShop__10daNpcIns_cFPv,
};

/* 80A14498-80A144A4 000C+00 s=0 e=0 z=0  None .data      @5559                                                        */
SECTION_DATA void* lit_5559[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)waitOutSide1__10daNpcIns_cFPv,
};

/* 80A144A4-80A144B0 000C+00 s=0 e=0 z=0  None .data      @5562                                                        */
SECTION_DATA void* lit_5562[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)waitOutSide2__10daNpcIns_cFPv,
};

/* 80A144B0-80A144D0 0020+00 s=1 e=0 z=0  None .data      daNpcIns_MethodTable                                         */
SECTION_DATA static void* daNpcIns_MethodTable[8] = {
	(void*)daNpcIns_Create__FPv,
	(void*)daNpcIns_Delete__FPv,
	(void*)daNpcIns_Execute__FPv,
	(void*)daNpcIns_IsDelete__FPv,
	(void*)daNpcIns_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80A144D0-80A14500 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_INS                                            */
SECTION_DATA void* g_profile_NPC_INS[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02A60000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000E24,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01A90000,
	(void*)&daNpcIns_MethodTable,
	(void*)0x00040100,
	(void*)0x040E0000,
};

/* 80A14500-80A1450C 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 80A1450C-80A14518 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80A14518-80A14560 0048+00 s=2 e=0 z=0  None .data      __vt__10daNpcIns_c                                           */
SECTION_DATA void* __vt__10daNpcIns_c[18] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10daNpcIns_cFv,
	(void*)setParam__10daNpcIns_cFv,
	(void*)main__10daNpcIns_cFv,
	(void*)ctrlBtk__10daNpcIns_cFv,
	(void*)adjustShapeAngle__8daNpcF_cFv,
	(void*)setMtx__10daNpcIns_cFv,
	(void*)setMtx2__8daNpcF_cFv,
	(void*)setAttnPos__10daNpcIns_cFv,
	(void*)setCollisions__8daNpcF_cFv,
	(void*)setExpressionAnm__10daNpcIns_cFib,
	(void*)setExpressionBtp__10daNpcIns_cFi,
	(void*)setExpression__10daNpcIns_cFif,
	(void*)setMotionAnm__10daNpcIns_cFif,
	(void*)setMotion__10daNpcIns_cFifi,
	(void*)drawDbgInfo__10daNpcIns_cFv,
	(void*)drawOtherMdls__8daNpcF_cFv,
};

/* 80A14560-80A1456C 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80A1456C-80A14590 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80A13D90,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80A13D88,
};

/* 80A14590-80A1459C 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80A1459C-80A145A8 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80A145A8-80A145B4 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80A145B4-80A145C0 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcF_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcF_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcF_ActorMngr_cFv,
};

/* 80A145C0-80A145CC 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80A145CC-80A145D8 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80A145D8-80A145E4 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcF_Lookat_c                                      */
SECTION_DATA void* __vt__15daNpcF_Lookat_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcF_Lookat_cFv,
};

/* 80A0E24C-80A0E3D0 0184+00 s=1 e=0 z=0  None .text      __ct__10daNpcIns_cFv                                         */
//	80A0E264: 80A13978 (__ct__8daNpcF_cFv)
//	80A0E268: 80A14518 (__vt__10daNpcIns_c)
//	80A0E26C: 80A14518 (__vt__10daNpcIns_c)
//	80A0E278: 802C03C8 (__ct__10Z2CreatureFv)
//	80A0E280: 80A145D8 (__vt__15daNpcF_Lookat_c)
//	80A0E284: 80A145D8 (__vt__15daNpcF_Lookat_c)
//	80A0E290: 80A13728 (__ct__4cXyzFv)
//	80A0E294: 80A13728 (__ct__4cXyzFv)
//	80A0E298: 80A136EC (__dt__4cXyzFv)
//	80A0E29C: 80A136EC (__dt__4cXyzFv)
//	80A0E2A8: 80361D60 (__construct_array)
//	80A0E2B0: 80A136E8 (__ct__5csXyzFv)
//	80A0E2B4: 80A136E8 (__ct__5csXyzFv)
//	80A0E2B8: 80A136AC (__dt__5csXyzFv)
//	80A0E2BC: 80A136AC (__dt__5csXyzFv)
//	80A0E2C8: 80361D60 (__construct_array)
//	80A0E2D0: 80A136E8 (__ct__5csXyzFv)
//	80A0E2D4: 80A136E8 (__ct__5csXyzFv)
//	80A0E2D8: 80A136AC (__dt__5csXyzFv)
//	80A0E2DC: 80A136AC (__dt__5csXyzFv)
//	80A0E2E8: 80361D60 (__construct_array)
//	80A0E2F0: 80A136E8 (__ct__5csXyzFv)
//	80A0E2F4: 80A136E8 (__ct__5csXyzFv)
//	80A0E2F8: 80A136AC (__dt__5csXyzFv)
//	80A0E2FC: 80A136AC (__dt__5csXyzFv)
//	80A0E308: 80361D60 (__construct_array)
//	80A0E310: 80A136E8 (__ct__5csXyzFv)
//	80A0E314: 80A136E8 (__ct__5csXyzFv)
//	80A0E318: 80A136AC (__dt__5csXyzFv)
//	80A0E31C: 80A136AC (__dt__5csXyzFv)
//	80A0E328: 80361D60 (__construct_array)
//	80A0E330: 80151038 (initialize__15daNpcF_Lookat_cFv)
//	80A0E338: 80A135A0 (__ct__18daNpcF_ActorMngr_cFv)
//	80A0E33C: 80A135A0 (__ct__18daNpcF_ActorMngr_cFv)
//	80A0E340: 80A13558 (__dt__18daNpcF_ActorMngr_cFv)
//	80A0E344: 80A13558 (__dt__18daNpcF_ActorMngr_cFv)
//	80A0E350: 80361D60 (__construct_array)
//	80A0E35C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80A0E360: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A0E364: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A0E36C: 80A145CC (__vt__8cM3dGAab)
//	80A0E370: 80A145CC (__vt__8cM3dGAab)
//	80A0E378: 80A145C0 (__vt__8cM3dGCyl)
//	80A0E37C: 80A145C0 (__vt__8cM3dGCyl)
//	80A0E384: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A0E388: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A0E398: 803AC050 (__vt__8dCcD_Cyl)
//	80A0E39C: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcIns_c::daNpcIns_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__ct__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A0E3D0-80A0E418 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80A0E3E8: 80A145C0 (__vt__8cM3dGCyl)
//	80A0E3EC: 80A145C0 (__vt__8cM3dGCyl)
//	80A0E3FC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80A0E418-80A0E460 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80A0E430: 80A145CC (__vt__8cM3dGAab)
//	80A0E434: 80A145CC (__vt__8cM3dGAab)
//	80A0E444: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80A0E460-80A0E660 0200+00 s=1 e=0 z=0  None .text      __dt__10daNpcIns_cFv                                         */
//	80A0E470: 803621D0 (_savegpr_26)
//	80A0E480: 80A14518 (__vt__10daNpcIns_c)
//	80A0E484: 80A14518 (__vt__10daNpcIns_c)
//	80A0E494: 80A14384 (l_arcNames)
//	80A0E498: 80A14384 (l_arcNames)
//	80A0E49C: 80A14378 (l_loadRes_list)
//	80A0E4A0: 80A14378 (l_loadRes_list)
//	80A0E4B8: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80A0E4EC: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80A0E4F8: 803AC050 (__vt__8dCcD_Cyl)
//	80A0E4FC: 803AC050 (__vt__8dCcD_Cyl)
//	80A0E51C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A0E520: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A0E538: 80A145C0 (__vt__8cM3dGCyl)
//	80A0E53C: 80A145C0 (__vt__8cM3dGCyl)
//	80A0E54C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A0E550: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A0E560: 80A145CC (__vt__8cM3dGAab)
//	80A0E564: 80A145CC (__vt__8cM3dGAab)
//	80A0E574: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80A0E57C: 80A13558 (__dt__18daNpcF_ActorMngr_cFv)
//	80A0E580: 80A13558 (__dt__18daNpcF_ActorMngr_cFv)
//	80A0E58C: 80361CE8 (__destroy_arr)
//	80A0E598: 80A145D8 (__vt__15daNpcF_Lookat_c)
//	80A0E59C: 80A145D8 (__vt__15daNpcF_Lookat_c)
//	80A0E5A8: 80A136AC (__dt__5csXyzFv)
//	80A0E5AC: 80A136AC (__dt__5csXyzFv)
//	80A0E5B8: 80361CE8 (__destroy_arr)
//	80A0E5C0: 80A136AC (__dt__5csXyzFv)
//	80A0E5C4: 80A136AC (__dt__5csXyzFv)
//	80A0E5D0: 80361CE8 (__destroy_arr)
//	80A0E5D8: 80A136AC (__dt__5csXyzFv)
//	80A0E5DC: 80A136AC (__dt__5csXyzFv)
//	80A0E5E8: 80361CE8 (__destroy_arr)
//	80A0E5F0: 80A136AC (__dt__5csXyzFv)
//	80A0E5F4: 80A136AC (__dt__5csXyzFv)
//	80A0E600: 80361CE8 (__destroy_arr)
//	80A0E608: 80A136EC (__dt__4cXyzFv)
//	80A0E60C: 80A136EC (__dt__4cXyzFv)
//	80A0E618: 80361CE8 (__destroy_arr)
//	80A0E624: 802C0420 (__dt__10Z2CreatureFv)
//	80A0E630: 80A1372C (__dt__8daNpcF_cFv)
//	80A0E640: 802CED3C (__dl__FPv)
//	80A0E64C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcIns_c::~daNpcIns_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A0E660-80A0EA30 03D0+00 s=1 e=0 z=0  None .text      Create__10daNpcIns_cFv                                       */
//	80A0E670: 803621C8 (_savegpr_24)
//	80A0E678: 80A13DAC (l_insectParams)
//	80A0E67C: 80A13DAC (l_insectParams)
//	80A0E694: 80A0E24C (__ct__10daNpcIns_cFv)
//	80A0E6AC: 804061C0 (g_dComIfG_gameInfo)
//	80A0E6B0: 804061C0 (g_dComIfG_gameInfo)
//	80A0E6C0: 80A14168 (stringBase0)
//	80A0E6C4: 80A14168 (stringBase0)
//	80A0E6CC: 80368994 (strcmp)
//	80A0E6E8: 80A14168 (stringBase0)
//	80A0E6EC: 80A14168 (stringBase0)
//	80A0E6F4: 80368994 (strcmp)
//	80A0E704: 80A11BE8 (isInsectComplete__10daNpcIns_cFv)
//	80A0E720: 80A13474 (func_80A13474)
//	80A0E788: 8019FA10 (dKy_getdaytime_hour__Fv)
//	80A0E790: 8019FA3C (dKy_getdaytime_minute__Fv)
//	80A0E7A4: 8019FA10 (dKy_getdaytime_hour__Fv)
//	80A0E7AC: 8019FA3C (dKy_getdaytime_minute__Fv)
//	80A0E7D8: 80A14384 (l_arcNames)
//	80A0E7DC: 80A14384 (l_arcNames)
//	80A0E7E0: 80A14378 (l_loadRes_list)
//	80A0E7E4: 80A14378 (l_loadRes_list)
//	80A0E7FC: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80A0E83C: 80A0F28C (createHeapCallBack__10daNpcIns_cFP10fopAc_ac_c)
//	80A0E840: 80A0F28C (createHeapCallBack__10daNpcIns_cFP10fopAc_ac_c)
//	80A0E848: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80A0E898: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80A0E8B0: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80A0E8C4: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80A0E8F0: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80A0E914: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80A0E934: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80A0E93C: 803B37E0 (mCcDCyl__8daNpcF_c)
//	80A0E940: 803B37E0 (mCcDCyl__8daNpcF_c)
//	80A0E944: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80A0E964: 8026F1F8 (SetH__8cM3dGCylFf)
//	80A0E970: 8026F200 (SetR__8cM3dGCylFf)
//	80A0E9F0: 80152D84 (setEnvTevColor__8daNpcF_cFv)
//	80A0E9F8: 80152DE0 (setRoomNo__8daNpcF_cFv)
//	80A0EA00: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	80A0EA08: 80A0F78C (reset__10daNpcIns_cFv)
//	80A0EA10: 80A0EF70 (Execute__10daNpcIns_cFv)
//	80A0EA1C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::Create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/Create__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A0EA30-80A0ED80 0350+00 s=1 e=0 z=0  None .text      CreateHeap__10daNpcIns_cFv                                   */
//	80A0EA40: 803621DC (_savegpr_29)
//	80A0EA48: 80A14384 (l_arcNames)
//	80A0EA4C: 80A14384 (l_arcNames)
//	80A0EA58: 804061C0 (g_dComIfG_gameInfo)
//	80A0EA5C: 804061C0 (g_dComIfG_gameInfo)
//	80A0EA70: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80A0EA7C: 802CEC4C (__nw__FUl)
//	80A0EAB8: 80A13EEC (lit_4414)
//	80A0EABC: 80A13EEC (lit_4414)
//	80A0EAC8: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80A0EAEC: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80A0EB14: 80A0F2AC (ctrlJointCallBack__10daNpcIns_cFP8J3DJointi)
//	80A0EB18: 80A0F2AC (ctrlJointCallBack__10daNpcIns_cFP8J3DJointi)
//	80A0EB68: 80A14384 (l_arcNames)
//	80A0EB6C: 80A14384 (l_arcNames)
//	80A0EB80: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80A0EB90: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80A0EBBC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80A0EBCC: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80A0EBEC: 802CEC4C (__nw__FUl)
//	80A0EBFC: 803CEE60 (__vt__14J3DMaterialAnm)
//	80A0EC00: 803CEE60 (__vt__14J3DMaterialAnm)
//	80A0EC0C: 80A0EF24 (__ct__14J3DMatColorAnmFv)
//	80A0EC10: 80A0EF24 (__ct__14J3DMatColorAnmFv)
//	80A0EC14: 80A0EEE8 (__dt__14J3DMatColorAnmFv)
//	80A0EC18: 80A0EEE8 (__dt__14J3DMatColorAnmFv)
//	80A0EC24: 80361D60 (__construct_array)
//	80A0EC2C: 80A0EED0 (__ct__12J3DTexMtxAnmFv)
//	80A0EC30: 80A0EED0 (__ct__12J3DTexMtxAnmFv)
//	80A0EC34: 80A0EE94 (__dt__12J3DTexMtxAnmFv)
//	80A0EC38: 80A0EE94 (__dt__12J3DTexMtxAnmFv)
//	80A0EC44: 80361D60 (__construct_array)
//	80A0EC4C: 80A0EE70 (__ct__11J3DTexNoAnmFv)
//	80A0EC50: 80A0EE70 (__ct__11J3DTexNoAnmFv)
//	80A0EC54: 80A0EE28 (__dt__11J3DTexNoAnmFv)
//	80A0EC58: 80A0EE28 (__dt__11J3DTexNoAnmFv)
//	80A0EC64: 80361D60 (__construct_array)
//	80A0EC6C: 80A0EE10 (__ct__14J3DTevColorAnmFv)
//	80A0EC70: 80A0EE10 (__ct__14J3DTevColorAnmFv)
//	80A0EC74: 80A0EDD4 (__dt__14J3DTevColorAnmFv)
//	80A0EC78: 80A0EDD4 (__dt__14J3DTevColorAnmFv)
//	80A0EC84: 80361D60 (__construct_array)
//	80A0EC8C: 80A0EDBC (__ct__15J3DTevKColorAnmFv)
//	80A0EC90: 80A0EDBC (__ct__15J3DTevKColorAnmFv)
//	80A0EC94: 80A0ED80 (__dt__15J3DTevKColorAnmFv)
//	80A0EC98: 80A0ED80 (__dt__15J3DTevKColorAnmFv)
//	80A0ECA4: 80361D60 (__construct_array)
//	80A0ECAC: 8032C320 (initialize__14J3DMaterialAnmFv)
//	80A0ECB0: 803B3920 (__vt__15daNpcF_MatAnm_c)
//	80A0ECB4: 803B3920 (__vt__15daNpcF_MatAnm_c)
//	80A0ECC0: 80150738 (initialize__15daNpcF_MatAnm_cFv)
//	80A0ED4C: 80A13EF0 (lit_4415)
//	80A0ED50: 80A13EF0 (lit_4415)
//	80A0ED6C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/CreateHeap__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A0ED80-80A0EDBC 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	80A0EDA0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80A0EDBC-80A0EDD4 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80A0EDD4-80A0EE10 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	80A0EDF4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80A0EE10-80A0EE28 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80A0EE28-80A0EE70 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	80A0EE40: 80A1450C (__vt__11J3DTexNoAnm)
//	80A0EE44: 80A1450C (__vt__11J3DTexNoAnm)
//	80A0EE54: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80A0EE70-80A0EE94 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	80A0EE70: 80A1450C (__vt__11J3DTexNoAnm)
//	80A0EE74: 80A1450C (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80A0EE94-80A0EED0 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	80A0EEB4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80A0EED0-80A0EEE8 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80A0EEE8-80A0EF24 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	80A0EF08: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80A0EF24-80A0EF3C 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80A0EF3C-80A0EF70 0034+00 s=1 e=0 z=0  None .text      Delete__10daNpcIns_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/Delete__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A0EF70-80A0EF94 0024+00 s=2 e=0 z=0  None .text      Execute__10daNpcIns_cFv                                      */
//	80A0EF7C: 80152014 (execute__8daNpcF_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/Execute__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A0EF94-80A0F0BC 0128+00 s=1 e=0 z=0  None .text      Draw__10daNpcIns_cFv                                         */
//	80A0EFCC: 80A13E6C (m__16daNpcIns_Param_c)
//	80A0EFD0: 80A13E6C (m__16daNpcIns_Param_c)
//	80A0EFE0: 801522AC (draw__8daNpcF_cFiifP11_GXColorS10i)
//	80A0EFF0: 8042CA54 (g_env_light)
//	80A0EFF4: 8042CA54 (g_env_light)
//	80A0F000: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80A0F020: 803464B0 (PSMTXCopy)
//	80A0F028: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80A0F02C: 804061C0 (g_dComIfG_gameInfo)
//	80A0F030: 804061C0 (g_dComIfG_gameInfo)
//	80A0F040: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	80A0F050: 8042CA54 (g_env_light)
//	80A0F054: 8042CA54 (g_env_light)
//	80A0F060: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80A0F080: 803464B0 (PSMTXCopy)
//	80A0F088: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80A0F08C: 804061C0 (g_dComIfG_gameInfo)
//	80A0F090: 804061C0 (g_dComIfG_gameInfo)
//	80A0F0A0: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/Draw__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A0F0BC-80A0F28C 01D0+00 s=1 e=0 z=0  None .text      ctrlJoint__10daNpcIns_cFP8J3DJointP8J3DModel                 */
//	80A0F0CC: 803621D8 (_savegpr_28)
//	80A0F0E0: 80A13EF4 (lit_4507)
//	80A0F0E4: 80A13EF4 (lit_4507)
//	80A0F11C: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F120: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F124: 803464B0 (PSMTXCopy)
//	80A0F128: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F12C: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F160: 803464B0 (PSMTXCopy)
//	80A0F190: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F194: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F198: 803464B0 (PSMTXCopy)
//	80A0F1C4: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F1C8: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F1CC: 803464B0 (PSMTXCopy)
//	80A0F1FC: 80A13E6C (m__16daNpcIns_Param_c)
//	80A0F200: 80A13E6C (m__16daNpcIns_Param_c)
//	80A0F208: 8015337C (setLookatMtx__8daNpcF_cFiPif)
//	80A0F20C: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F210: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F220: 803464B0 (PSMTXCopy)
//	80A0F224: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F228: 803DD470 (now__14mDoMtx_stack_c)
//	80A0F22C: 80434BE4 (mCurrentMtx__6J3DSys)
//	80A0F230: 80434BE4 (mCurrentMtx__6J3DSys)
//	80A0F234: 803464B0 (PSMTXCopy)
//	80A0F264: 8000D990 (changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform)
//	80A0F278: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
asm void daNpcIns_c::ctrlJoint(J3DJoint* param_0, J3DModel* param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/ctrlJoint__10daNpcIns_cFP8J3DJointP8J3DModel.s"
}
#pragma pop


/* 80A0F28C-80A0F2AC 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__10daNpcIns_cFP10fopAc_ac_c               */
//	80A0F298: 80A0EA30 (CreateHeap__10daNpcIns_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpcIns_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/createHeapCallBack__10daNpcIns_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80A0F2AC-80A0F2F8 004C+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__10daNpcIns_cFP8J3DJointi                  */
//	80A0F2C4: 80434AC8 (j3dSys)
//	80A0F2C8: 80434AC8 (j3dSys)
//	80A0F2E0: 80A0F0BC (ctrlJoint__10daNpcIns_cFP8J3DJointP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpcIns_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/ctrlJointCallBack__10daNpcIns_cFP8J3DJointi.s"
}
#pragma pop


/* 80A0F2F8-80A0F538 0240+00 s=2 e=0 z=0  None .text      setExpressionAnm__10daNpcIns_cFib                            */
//	80A0F308: 803621D4 (_savegpr_27)
//	80A0F328: 80A141BC (l_bckGetParamList)
//	80A0F32C: 80A141BC (l_bckGetParamList)
//	80A0F348: 80A14384 (l_arcNames)
//	80A0F34C: 80A14384 (l_arcNames)
//	80A0F354: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A0F364: 80A141BC (l_bckGetParamList)
//	80A0F368: 80A141BC (l_bckGetParamList)
//	80A0F380: 80A143B0 (lit_4650)
//	80A0F384: 80A143B0 (lit_4650)
//	80A0F4DC: 80A13EEC (lit_4414)
//	80A0F4E0: 80A13EEC (lit_4414)
//	80A0F4F4: 80152C80 (setBckAnm__8daNpcF_cFP15J3DAnmTransformfiiib)
//	80A0F524: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  bool False
asm void daNpcIns_c::setExpressionAnm(int param_0, bool param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setExpressionAnm__10daNpcIns_cFib.s"
}
#pragma pop


/* 80A0F538-80A0F618 00E0+00 s=1 e=0 z=0  None .text      setExpressionBtp__10daNpcIns_cFi                             */
//	80A0F548: 803621DC (_savegpr_29)
//	80A0F558: 80A142DC (l_btpGetParamList)
//	80A0F55C: 80A142DC (l_btpGetParamList)
//	80A0F56C: 80A14384 (l_arcNames)
//	80A0F570: 80A14384 (l_arcNames)
//	80A0F57C: 80152B68 (getTexPtrnAnmP__8daNpcF_cFPci)
//	80A0F584: 80A142DC (l_btpGetParamList)
//	80A0F588: 80A142DC (l_btpGetParamList)
//	80A0F5C0: 80A13EEC (lit_4414)
//	80A0F5C4: 80A13EEC (lit_4414)
//	80A0F5C8: 80152CC4 (setBtpAnm__8daNpcF_cFP16J3DAnmTexPatternP12J3DModelDatafi)
//	80A0F604: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpcIns_c::setExpressionBtp(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setExpressionBtp__10daNpcIns_cFi.s"
}
#pragma pop


/* 80A0F618-80A0F78C 0174+00 s=1 e=0 z=0  None .text      setMotionAnm__10daNpcIns_cFif                                */
//	80A0F630: 803621D0 (_savegpr_26)
//	80A0F63C: 80A1419C (cNullVec__6Z2Calc)
//	80A0F640: 80A1419C (cNullVec__6Z2Calc)
//	80A0F690: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A0F6BC: 80152BA4 (getTexSRTKeyAnmP__8daNpcF_cFPci)
//	80A0F6F8: 80A13EEC (lit_4414)
//	80A0F6FC: 80A13EEC (lit_4414)
//	80A0F70C: 80152C1C (setMcaMorfAnm__8daNpcF_cFP18J3DAnmTransformKeyffiii)
//	80A0F748: 80A13EEC (lit_4414)
//	80A0F74C: 80A13EEC (lit_4414)
//	80A0F754: 80152D04 (setBtkAnm__8daNpcF_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi)
//	80A0F778: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
asm void daNpcIns_c::setMotionAnm(int param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setMotionAnm__10daNpcIns_cFif.s"
}
#pragma pop


/* 80A0F78C-80A0F984 01F8+00 s=1 e=0 z=0  None .text      reset__10daNpcIns_cFv                                        */
//	80A0F7A0: 801528C8 (initialize__8daNpcF_cFv)
//	80A0F7A8: 80150738 (initialize__15daNpcF_MatAnm_cFv)
//	80A0F7B0: 80151038 (initialize__15daNpcF_Lookat_cFv)
//	80A0F7B8: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
//	80A0F7C8: 803A2180 (__ptmf_null)
//	80A0F7CC: 803A2180 (__ptmf_null)
//	80A0F7FC: 80A13EF0 (lit_4415)
//	80A0F800: 80A13EF0 (lit_4415)
//	80A0F86C: 80A11F84 (setPath__10daNpcIns_cFi)
//	80A0F87C: 80A12480 (getTargetPoint__10daNpcIns_cFiP3Vec)
//	80A0F8A8: 80A11F84 (setPath__10daNpcIns_cFi)
//	80A0F8B8: 80A12480 (getTargetPoint__10daNpcIns_cFiP3Vec)
//	80A0F96C: 80A11D44 (setWaitAction__10daNpcIns_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/reset__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A0F984-80A0FF40 05BC+00 s=2 e=0 z=0  None .text      waitShop__10daNpcIns_cFPv                                    */
//	80A0F994: 803621D4 (_savegpr_27)
//	80A0F99C: 80A1419C (cNullVec__6Z2Calc)
//	80A0F9A0: 80A1419C (cNullVec__6Z2Calc)
//	80A0F9A4: 80A13DAC (l_insectParams)
//	80A0F9A8: 80A13DAC (l_insectParams)
//	80A0FA24: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A0FA34: 804061C0 (g_dComIfG_gameInfo)
//	80A0FA38: 804061C0 (g_dComIfG_gameInfo)
//	80A0FA48: 801539F0 (chkActorInSight__8daNpcF_cFP10fopAc_ac_cf)
//	80A0FA58: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A0FA68: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A0FA84: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A0FAA0: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A0FAB8: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A0FAC4: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A0FAE0: 804061C0 (g_dComIfG_gameInfo)
//	80A0FAE4: 804061C0 (g_dComIfG_gameInfo)
//	80A0FAF4: 801539F0 (chkActorInSight__8daNpcF_cFP10fopAc_ac_cf)
//	80A0FB04: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A0FB14: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A0FB30: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A0FB4C: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A0FB64: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A0FB70: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A0FB88: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A0FCC0: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A0FD54: 804061C0 (g_dComIfG_gameInfo)
//	80A0FD58: 804061C0 (g_dComIfG_gameInfo)
//	80A0FD98: 80362018 (__ptmf_test)
//	80A0FDB0: 80362084 (__ptmf_scall)
//	80A0FDF4: 80362018 (__ptmf_test)
//	80A0FE0C: 80362084 (__ptmf_scall)
//	80A0FE28: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80A0FE58: 80362018 (__ptmf_test)
//	80A0FE70: 80362084 (__ptmf_scall)
//	80A0FEB4: 80362018 (__ptmf_test)
//	80A0FECC: 80362084 (__ptmf_scall)
//	80A0FEE4: 80A14168 (stringBase0)
//	80A0FEE8: 80A14168 (stringBase0)
//	80A0FF20: 8015387C (orderEvent__8daNpcF_cFiPcUsUsUcUs)
//	80A0FF2C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcIns_c::waitShop(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/waitShop__10daNpcIns_cFPv.s"
}
#pragma pop


/* 80A0FF40-80A0FFC4 0084+00 s=1 e=0 z=0  None .text      setMotion__10daNpcIns_cFifi                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
//  int False
asm void daNpcIns_c::setMotion(int param_0, f32 param_1, int param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setMotion__10daNpcIns_cFifi.s"
}
#pragma pop


/* 80A0FFC4-80A0FFF0 002C+00 s=1 e=0 z=0  None .text      setExpression__10daNpcIns_cFif                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
asm void daNpcIns_c::setExpression(int param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setExpression__10daNpcIns_cFif.s"
}
#pragma pop


/* 80A0FFF0-80A103A0 03B0+00 s=1 e=0 z=0  None .text      waitPresent__10daNpcIns_cFPv                                 */
//	80A10000: 803621DC (_savegpr_29)
//	80A10008: 80A13DAC (l_insectParams)
//	80A1000C: 80A13DAC (l_insectParams)
//	80A1009C: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A100AC: 804061C0 (g_dComIfG_gameInfo)
//	80A100B0: 804061C0 (g_dComIfG_gameInfo)
//	80A100C0: 801539F0 (chkActorInSight__8daNpcF_cFP10fopAc_ac_cf)
//	80A100D0: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A100E0: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A100FC: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A10118: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A10130: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A1013C: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A10158: 804061C0 (g_dComIfG_gameInfo)
//	80A1015C: 804061C0 (g_dComIfG_gameInfo)
//	80A1016C: 801539F0 (chkActorInSight__8daNpcF_cFP10fopAc_ac_cf)
//	80A1017C: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A1018C: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A101A8: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A101C4: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A101DC: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A101E8: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A101FC: 80430188 (g_meter2_info)
//	80A10200: 80430188 (g_meter2_info)
//	80A10248: 80A11C50 (getInsectParamData__10daNpcIns_cFi)
//	80A1025C: 80A11C50 (getInsectParamData__10daNpcIns_cFi)
//	80A10264: 80155674 (daNpcF_onEvtBit__FUl)
//	80A1026C: 802384B0 (setInsectItemNo__12dMsgObject_cFUc)
//	80A10270: 804061C0 (g_dComIfG_gameInfo)
//	80A10274: 804061C0 (g_dComIfG_gameInfo)
//	80A102C4: 804061C0 (g_dComIfG_gameInfo)
//	80A102C8: 804061C0 (g_dComIfG_gameInfo)
//	80A102DC: 80A143F0 (lit_5026)
//	80A102E0: 80A143F0 (lit_5026)
//	80A10308: 80362018 (__ptmf_test)
//	80A10320: 80362084 (__ptmf_scall)
//	80A10364: 80362018 (__ptmf_test)
//	80A1037C: 80362084 (__ptmf_scall)
//	80A1038C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcIns_c::waitPresent(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/waitPresent__10daNpcIns_cFPv.s"
}
#pragma pop


/* 80A103A0-80A10950 05B0+00 s=1 e=0 z=0  None .text      waitOutSide1__10daNpcIns_cFPv                                */
//	80A103B0: 803621D8 (_savegpr_28)
//	80A103B8: 80A1419C (cNullVec__6Z2Calc)
//	80A103BC: 80A1419C (cNullVec__6Z2Calc)
//	80A103C0: 80A13DAC (l_insectParams)
//	80A103C4: 80A13DAC (l_insectParams)
//	80A1043C: 80A13474 (func_80A13474)
//	80A10558: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A105EC: 80A13474 (func_80A13474)
//	80A10640: 80A13474 (func_80A13474)
//	80A10674: 80A13474 (func_80A13474)
//	80A1067C: 8019FA10 (dKy_getdaytime_hour__Fv)
//	80A10684: 8019FA3C (dKy_getdaytime_minute__Fv)
//	80A106C0: 80362018 (__ptmf_test)
//	80A106D8: 80362084 (__ptmf_scall)
//	80A1071C: 80362018 (__ptmf_test)
//	80A10734: 80362084 (__ptmf_scall)
//	80A10764: 804061C0 (g_dComIfG_gameInfo)
//	80A10768: 804061C0 (g_dComIfG_gameInfo)
//	80A107A8: 80362018 (__ptmf_test)
//	80A107C0: 80362084 (__ptmf_scall)
//	80A10804: 80362018 (__ptmf_test)
//	80A1081C: 80362084 (__ptmf_scall)
//	80A10838: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80A10868: 80362018 (__ptmf_test)
//	80A10880: 80362084 (__ptmf_scall)
//	80A108C4: 80362018 (__ptmf_test)
//	80A108DC: 80362084 (__ptmf_scall)
//	80A108F4: 80A14168 (stringBase0)
//	80A108F8: 80A14168 (stringBase0)
//	80A10930: 8015387C (orderEvent__8daNpcF_cFiPcUsUsUcUs)
//	80A1093C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcIns_c::waitOutSide1(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/waitOutSide1__10daNpcIns_cFPv.s"
}
#pragma pop


/* 80A10950-80A10CD8 0388+00 s=1 e=0 z=0  None .text      waitOutSide2__10daNpcIns_cFPv                                */
//	80A10960: 803621DC (_savegpr_29)
//	80A10968: 80A1419C (cNullVec__6Z2Calc)
//	80A1096C: 80A1419C (cNullVec__6Z2Calc)
//	80A10994: 80A14118 (lit_4994)
//	80A10998: 80A14118 (lit_4994)
//	80A109B4: 80A14118 (lit_4994)
//	80A109B8: 80A14118 (lit_4994)
//	80A109EC: 80A13EF0 (lit_4415)
//	80A109F0: 80A13EF0 (lit_4415)
//	80A10A04: 8019FA10 (dKy_getdaytime_hour__Fv)
//	80A10A0C: 8019FA3C (dKy_getdaytime_minute__Fv)
//	80A10A48: 80362018 (__ptmf_test)
//	80A10A60: 80362084 (__ptmf_scall)
//	80A10AA4: 80362018 (__ptmf_test)
//	80A10ABC: 80362084 (__ptmf_scall)
//	80A10AEC: 804061C0 (g_dComIfG_gameInfo)
//	80A10AF0: 804061C0 (g_dComIfG_gameInfo)
//	80A10B30: 80362018 (__ptmf_test)
//	80A10B48: 80362084 (__ptmf_scall)
//	80A10B8C: 80362018 (__ptmf_test)
//	80A10BA4: 80362084 (__ptmf_scall)
//	80A10BC0: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80A10BF0: 80362018 (__ptmf_test)
//	80A10C08: 80362084 (__ptmf_scall)
//	80A10C4C: 80362018 (__ptmf_test)
//	80A10C64: 80362084 (__ptmf_scall)
//	80A10C7C: 80A14168 (stringBase0)
//	80A10C80: 80A14168 (stringBase0)
//	80A10CB8: 8015387C (orderEvent__8daNpcF_cFiPcUsUsUcUs)
//	80A10CC4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcIns_c::waitOutSide2(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/waitOutSide2__10daNpcIns_cFPv.s"
}
#pragma pop


/* 80A10CD8-80A11330 0658+00 s=3 e=0 z=0  None .text      goHome__10daNpcIns_cFPv                                      */
//	80A10CE8: 803621D4 (_savegpr_27)
//	80A10CF0: 80A1419C (cNullVec__6Z2Calc)
//	80A10CF4: 80A1419C (cNullVec__6Z2Calc)
//	80A10CF8: 80A13DAC (l_insectParams)
//	80A10CFC: 80A13DAC (l_insectParams)
//	80A10D28: 80A12480 (getTargetPoint__10daNpcIns_cFiP3Vec)
//	80A10D34: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80A10E30: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A10EE0: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A10EF0: 804061C0 (g_dComIfG_gameInfo)
//	80A10EF4: 804061C0 (g_dComIfG_gameInfo)
//	80A10F04: 801539F0 (chkActorInSight__8daNpcF_cFP10fopAc_ac_cf)
//	80A10F14: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A10F24: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A10F40: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A10F5C: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A10F74: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A10F80: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A10F9C: 804061C0 (g_dComIfG_gameInfo)
//	80A10FA0: 804061C0 (g_dComIfG_gameInfo)
//	80A10FB0: 801539F0 (chkActorInSight__8daNpcF_cFP10fopAc_ac_cf)
//	80A10FC0: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A10FD0: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A10FEC: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A11008: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A11020: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A1102C: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A11044: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A11094: 80A1211C (checkPoint__10daNpcIns_cFR4cXyzf)
//	80A110A4: 80A122D0 (setNextPoint__10daNpcIns_cFv)
//	80A110B4: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80A110BC: 80A124D0 (pathMoveF__10daNpcIns_cFv)
//	80A110D0: 80A14500 (__vt__8cM3dGPla)
//	80A110D4: 80A14500 (__vt__8cM3dGPla)
//	80A110DC: 804061C0 (g_dComIfG_gameInfo)
//	80A110E0: 804061C0 (g_dComIfG_gameInfo)
//	80A110F0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80A11104: 8001DBD8 (fopAcM_getPolygonAngle__FPC8cM3dGPlas)
//	80A11124: 80A14500 (__vt__8cM3dGPla)
//	80A11128: 80A14500 (__vt__8cM3dGPla)
//	80A11140: 8026FA3C (cLib_addCalc2__FPffff)
//	80A11144: 804061C0 (g_dComIfG_gameInfo)
//	80A11148: 804061C0 (g_dComIfG_gameInfo)
//	80A11188: 80362018 (__ptmf_test)
//	80A111A0: 80362084 (__ptmf_scall)
//	80A111E4: 80362018 (__ptmf_test)
//	80A111FC: 80362084 (__ptmf_scall)
//	80A11218: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80A11248: 80362018 (__ptmf_test)
//	80A11260: 80362084 (__ptmf_scall)
//	80A112A4: 80362018 (__ptmf_test)
//	80A112BC: 80362084 (__ptmf_scall)
//	80A112D4: 80A14168 (stringBase0)
//	80A112D8: 80A14168 (stringBase0)
//	80A11310: 8015387C (orderEvent__8daNpcF_cFiPcUsUsUcUs)
//	80A1131C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcIns_c::goHome(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/goHome__10daNpcIns_cFPv.s"
}
#pragma pop


/* 80A11330-80A11378 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	80A11348: 80A14500 (__vt__8cM3dGPla)
//	80A1134C: 80A14500 (__vt__8cM3dGPla)
//	80A1135C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 80A11378-80A11A7C 0704+00 s=2 e=0 z=0  None .text      talk__10daNpcIns_cFPv                                        */
//	80A11388: 803621D8 (_savegpr_28)
//	80A11390: 80A13DAC (l_insectParams)
//	80A11394: 80A13DAC (l_insectParams)
//	80A113C4: 804061C0 (g_dComIfG_gameInfo)
//	80A113C8: 804061C0 (g_dComIfG_gameInfo)
//	80A113F0: 80153D1C (initTalk__8daNpcF_cFiPP10fopAc_ac_c)
//	80A11408: 804061C0 (g_dComIfG_gameInfo)
//	80A1140C: 804061C0 (g_dComIfG_gameInfo)
//	80A11414: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A11458: 80153D84 (talkProc__8daNpcF_cFPiiPP10fopAc_ac_c)
//	80A11468: 804061C0 (g_dComIfG_gameInfo)
//	80A1146C: 804061C0 (g_dComIfG_gameInfo)
//	80A11474: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A11494: 8024A528 (getEventId__10dMsgFlow_cFPi)
//	80A114C0: 8001BBE8 (fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz)
//	80A114EC: 804061C0 (g_dComIfG_gameInfo)
//	80A114F0: 804061C0 (g_dComIfG_gameInfo)
//	80A114FC: 80A14168 (stringBase0)
//	80A11500: 80A14168 (stringBase0)
//	80A1150C: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	80A1151C: 80042518 (reset__14dEvt_control_cFPv)
//	80A11534: 8001B5E4 (fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs)
//	80A11564: 80430188 (g_meter2_info)
//	80A11568: 80430188 (g_meter2_info)
//	80A11578: 80A14414 (lit_5401)
//	80A1157C: 80A14414 (lit_5401)
//	80A115A4: 80362018 (__ptmf_test)
//	80A115BC: 80362084 (__ptmf_scall)
//	80A11600: 80362018 (__ptmf_test)
//	80A11618: 80362084 (__ptmf_scall)
//	80A11628: 80A14420 (lit_5403)
//	80A1162C: 80A14420 (lit_5403)
//	80A11654: 80362018 (__ptmf_test)
//	80A1166C: 80362084 (__ptmf_scall)
//	80A116B0: 80362018 (__ptmf_test)
//	80A116C8: 80362084 (__ptmf_scall)
//	80A116F8: 80362018 (__ptmf_test)
//	80A11710: 80362084 (__ptmf_scall)
//	80A11754: 80362018 (__ptmf_test)
//	80A1176C: 80362084 (__ptmf_scall)
//	80A11794: 80153718 (ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci)
//	80A119A8: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A11A50: 804061C0 (g_dComIfG_gameInfo)
//	80A11A54: 804061C0 (g_dComIfG_gameInfo)
//	80A11A5C: 80042468 (reset__14dEvt_control_cFv)
//	80A11A68: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcIns_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/talk__10daNpcIns_cFPv.s"
}
#pragma pop


/* 80A11A7C-80A11BE8 016C+00 s=1 e=0 z=0  None .text      demo__10daNpcIns_cFPv                                        */
//	80A11A8C: 803621D8 (_savegpr_28)
//	80A11AB8: 80A14118 (lit_4994)
//	80A11ABC: 80A14118 (lit_4994)
//	80A11AD8: 80A14118 (lit_4994)
//	80A11ADC: 80A14118 (lit_4994)
//	80A11AFC: 804061C0 (g_dComIfG_gameInfo)
//	80A11B00: 804061C0 (g_dComIfG_gameInfo)
//	80A11B24: 80A14394 (l_myName)
//	80A11B28: 80A14394 (l_myName)
//	80A11B38: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80A11B5C: 80A14398 (mEvtSeqList__10daNpcIns_c)
//	80A11B60: 80A14398 (mEvtSeqList__10daNpcIns_c)
//	80A11B68: 80362084 (__ptmf_scall)
//	80A11B80: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80A11BA0: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80A11BB0: 80042468 (reset__14dEvt_control_cFv)
//	80A11BC8: 80A11D44 (setWaitAction__10daNpcIns_cFv)
//	80A11BD4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcIns_c::demo(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/demo__10daNpcIns_cFPv.s"
}
#pragma pop


/* 80A11BE8-80A11C50 0068+00 s=1 e=0 z=0  None .text      isInsectComplete__10daNpcIns_cFv                             */
//	80A11BFC: 80A13DAC (l_insectParams)
//	80A11C00: 80A13DAC (l_insectParams)
//	80A11C10: 80155634 (daNpcF_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::isInsectComplete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/isInsectComplete__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A11C50-80A11D44 00F4+00 s=2 e=0 z=0  None .text      getInsectParamData__10daNpcIns_cFi                           */
//	80A11C5C: 80A1442C (lit_5553)
//	80A11C60: 80A1442C (lit_5553)
//	80A11D34: 80A13DAC (l_insectParams)
//	80A11D38: 80A13DAC (l_insectParams)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpcIns_c::getInsectParamData(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/getInsectParamData__10daNpcIns_cFi.s"
}
#pragma pop


/* 80A11D44-80A11F84 0240+00 s=2 e=0 z=0  None .text      setWaitAction__10daNpcIns_cFv                                */
//	80A11D58: 80A1419C (cNullVec__6Z2Calc)
//	80A11D5C: 80A1419C (cNullVec__6Z2Calc)
//	80A11DAC: 80362018 (__ptmf_test)
//	80A11DC4: 80362084 (__ptmf_scall)
//	80A11E08: 80362018 (__ptmf_test)
//	80A11E20: 80362084 (__ptmf_scall)
//	80A11E50: 80362018 (__ptmf_test)
//	80A11E68: 80362084 (__ptmf_scall)
//	80A11EAC: 80362018 (__ptmf_test)
//	80A11EC4: 80362084 (__ptmf_scall)
//	80A11EF4: 80362018 (__ptmf_test)
//	80A11F0C: 80362084 (__ptmf_scall)
//	80A11F50: 80362018 (__ptmf_test)
//	80A11F68: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::setWaitAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setWaitAction__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A11F84-80A1211C 0198+00 s=1 e=0 z=0  None .text      setPath__10daNpcIns_cFi                                      */
//	80A11F9C: 80A13DAC (l_insectParams)
//	80A11FA0: 80A13DAC (l_insectParams)
//	80A11FB0: 800517EC (dPath_GetRoomPath__Fii)
//	80A11FDC: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80A12014: 8034739C (PSVECSquareDistance)
//	80A12084: 80450AE0 (__float_nan)
//	80A12088: 80450AE0 (__float_nan)
//	80A120F4: 80450AE0 (__float_nan)
//	80A120F8: 80450AE0 (__float_nan)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpcIns_c::setPath(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setPath__10daNpcIns_cFi.s"
}
#pragma pop


/* 80A1211C-80A122D0 01B4+00 s=1 e=0 z=0  None .text      checkPoint__10daNpcIns_cFR4cXyzf                             */
//	80A12134: 803621DC (_savegpr_29)
//	80A12144: 80A13DAC (l_insectParams)
//	80A12148: 80A13DAC (l_insectParams)
//	80A12154: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80A1218C: 8034739C (PSVECSquareDistance)
//	80A121FC: 80450AE0 (__float_nan)
//	80A12200: 80450AE0 (__float_nan)
//	80A1226C: 80450AE0 (__float_nan)
//	80A12270: 80450AE0 (__float_nan)
//	80A122BC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz& False
// 	 cXyz False
//  f32 False
asm void daNpcIns_c::checkPoint(cXyz& param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/checkPoint__10daNpcIns_cFR4cXyzf.s"
}
#pragma pop


/* 80A122D0-80A12480 01B0+00 s=1 e=0 z=0  None .text      setNextPoint__10daNpcIns_cFv                                 */
//	80A122E8: 80A13DAC (l_insectParams)
//	80A122EC: 80A13DAC (l_insectParams)
//	80A122F8: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80A12334: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80A12340: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80A12378: 8034739C (PSVECSquareDistance)
//	80A123E8: 80450AE0 (__float_nan)
//	80A123EC: 80450AE0 (__float_nan)
//	80A12458: 80450AE0 (__float_nan)
//	80A1245C: 80450AE0 (__float_nan)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::setNextPoint() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setNextPoint__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A12480-80A124D0 0050+00 s=2 e=0 z=0  None .text      getTargetPoint__10daNpcIns_cFiP3Vec                          */
//	80A124A0: 800517B0 (dPath_GetPnt__FPC5dPathi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  Vec* False
// 	 Vec False
asm void daNpcIns_c::getTargetPoint(int param_0, Vec* param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/getTargetPoint__10daNpcIns_cFiP3Vec.s"
}
#pragma pop


/* 80A124D0-80A12560 0090+00 s=1 e=0 z=0  None .text      pathMoveF__10daNpcIns_cFv                                    */
//	80A124F8: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80A1251C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80A12530: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80A1253C: 80154250 (setAngle__8daNpcF_cFs)
//	80A12548: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::pathMoveF() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/pathMoveF__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A12560-80A12580 0020+00 s=1 e=0 z=0  None .text      daNpcIns_Create__FPv                                         */
//	80A1256C: 80A0E660 (Create__10daNpcIns_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcIns_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/daNpcIns_Create__FPv.s"
}
#pragma pop


/* 80A12580-80A125A0 0020+00 s=1 e=0 z=0  None .text      daNpcIns_Delete__FPv                                         */
//	80A1258C: 80A0EF3C (Delete__10daNpcIns_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcIns_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/daNpcIns_Delete__FPv.s"
}
#pragma pop


/* 80A125A0-80A125C0 0020+00 s=1 e=0 z=0  None .text      daNpcIns_Execute__FPv                                        */
//	80A125AC: 80A0EF70 (Execute__10daNpcIns_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcIns_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/daNpcIns_Execute__FPv.s"
}
#pragma pop


/* 80A125C0-80A125E0 0020+00 s=1 e=0 z=0  None .text      daNpcIns_Draw__FPv                                           */
//	80A125CC: 80A0EF94 (Draw__10daNpcIns_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcIns_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/daNpcIns_Draw__FPv.s"
}
#pragma pop


/* 80A125E0-80A125E8 0008+00 s=1 e=0 z=0  None .text      daNpcIns_IsDelete__FPv                                       */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpcIns_IsDelete(void* param_0) {
	return true;
}


/* 80A125E8-80A12618 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	80A12604: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 80A12618-80A126D4 00BC+00 s=1 e=0 z=0  None .text      setParam__10daNpcIns_cFv                                     */
//	80A1262C: 80A13E6C (m__16daNpcIns_Param_c)
//	80A12630: 80A13E6C (m__16daNpcIns_Param_c)
//	80A1263C: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	80A12650: 80A13E6C (m__16daNpcIns_Param_c)
//	80A12654: 80A13E6C (m__16daNpcIns_Param_c)
//	80A12660: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	80A12670: 804061C0 (g_dComIfG_gameInfo)
//	80A12674: 804061C0 (g_dComIfG_gameInfo)
//	80A12698: 80A13E6C (m__16daNpcIns_Param_c)
//	80A1269C: 80A13E6C (m__16daNpcIns_Param_c)
//	80A126A4: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80A126A8: 80A13E6C (m__16daNpcIns_Param_c)
//	80A126AC: 80A13E6C (m__16daNpcIns_Param_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setParam__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A126D4-80A12A10 033C+00 s=1 e=0 z=0  None .text      main__10daNpcIns_cFv                                         */
//	80A126E4: 803621DC (_savegpr_29)
//	80A126EC: 80A13DAC (l_insectParams)
//	80A126F0: 80A13DAC (l_insectParams)
//	80A126F8: 80362018 (__ptmf_test)
//	80A12710: 80362084 (__ptmf_scall)
//	80A12728: 804061C0 (g_dComIfG_gameInfo)
//	80A1272C: 804061C0 (g_dComIfG_gameInfo)
//	80A12740: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	80A12744: 80A14168 (stringBase0)
//	80A12748: 80A14168 (stringBase0)
//	80A12750: 80368994 (strcmp)
//	80A12764: 800436EC (setPtI_Id__14dEvt_control_cFUi)
//	80A129B8: 80153150 (playExpressionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData)
//	80A129C0: 80A12A10 (playMotion__10daNpcIns_cFv)
//	80A129C4: 80A143A4 (lit_4607)
//	80A129C8: 80A143A4 (lit_4607)
//	80A129EC: 80362048 (__ptmf_cmpr)
//	80A129FC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::main() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/main__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A12A10-80A12DC8 03B8+00 s=1 e=0 z=0  None .text      playMotion__10daNpcIns_cFv                                   */
//	80A12A1C: 80A13DAC (l_insectParams)
//	80A12A20: 80A13DAC (l_insectParams)
//	80A12DB4: 80153264 (playMotionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::playMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/playMotion__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A12DC8-80A12EA4 00DC+00 s=1 e=0 z=0  None .text      ctrlBtk__10daNpcIns_cFv                                      */
//	80A12DE8: 80A1433C (l_btkGetParamList)
//	80A12DEC: 80A1433C (l_btkGetParamList)
//	80A12DF8: 80A14384 (l_arcNames)
//	80A12DFC: 80A14384 (l_arcNames)
//	80A12E08: 80152BA4 (getTexSRTKeyAnmP__8daNpcF_cFPci)
//	80A12E18: 80439A20 (sincosTable___5JMath)
//	80A12E1C: 80439A20 (sincosTable___5JMath)
//	80A12E24: 80A13468 (func_80A13468)
//	80A12E28: 80A14118 (lit_4994)
//	80A12E2C: 80A14118 (lit_4994)
//	80A12E30: 80A14150 (lit_5847)
//	80A12E34: 80A14150 (lit_5847)
//	80A12E48: 80439A20 (sincosTable___5JMath)
//	80A12E4C: 80439A20 (sincosTable___5JMath)
//	80A12E54: 80A13468 (func_80A13468)
//	80A12E58: 80A14150 (lit_5847)
//	80A12E5C: 80A14150 (lit_5847)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::ctrlBtk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/ctrlBtk__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A12EA4-80A131AC 0308+00 s=1 e=0 z=0  None .text      setAttnPos__10daNpcIns_cFv                                   */
//	80A12EBC: 80A13DAC (l_insectParams)
//	80A12EC0: 80A13DAC (l_insectParams)
//	80A12F18: 80A131AC (lookat__10daNpcIns_cFv)
//	80A12F44: 803DD470 (now__14mDoMtx_stack_c)
//	80A12F48: 803DD470 (now__14mDoMtx_stack_c)
//	80A12F4C: 803464B0 (PSMTXCopy)
//	80A12F50: 803DD470 (now__14mDoMtx_stack_c)
//	80A12F54: 803DD470 (now__14mDoMtx_stack_c)
//	80A12F78: 80346D6C (PSMTXMultVec)
//	80A12F84: 803DD470 (now__14mDoMtx_stack_c)
//	80A12F88: 803DD470 (now__14mDoMtx_stack_c)
//	80A12F94: 80346D6C (PSMTXMultVec)
//	80A12FA0: 80270C74 (cLib_targetAngleX__FPC4cXyzPC4cXyz)
//	80A12FB0: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80A12FF4: 803470B4 (PSVECSubtract)
//	80A13014: 80267674 (cM_atan2s__Fff)
//	80A13040: 80347138 (PSVECSquareMag)
//	80A130B0: 80450AE0 (__float_nan)
//	80A130B4: 80450AE0 (__float_nan)
//	80A13120: 80450AE0 (__float_nan)
//	80A13124: 80450AE0 (__float_nan)
//	80A13134: 80267674 (cM_atan2s__Fff)
//	80A1317C: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80A13180: 804061C0 (g_dComIfG_gameInfo)
//	80A13184: 804061C0 (g_dComIfG_gameInfo)
//	80A13190: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setAttnPos__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A131AC-80A1339C 01F0+00 s=1 e=0 z=0  None .text      lookat__10daNpcIns_cFv                                       */
//	80A131BC: 803621D8 (_savegpr_28)
//	80A131C4: 80A13DAC (l_insectParams)
//	80A131C8: 80A13DAC (l_insectParams)
//	80A132B0: 804061C0 (g_dComIfG_gameInfo)
//	80A132B4: 804061C0 (g_dComIfG_gameInfo)
//	80A13360: 801510B8 (setParam__15daNpcF_Lookat_cFffffffffffffsP4cXyz)
//	80A13380: 80151350 (calc__15daNpcF_Lookat_cFP10fopAc_ac_cPA4_fPP5csXyziii)
//	80A13388: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::lookat() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/lookat__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A1339C-80A13460 00C4+00 s=1 e=0 z=0  None .text      setMtx__10daNpcIns_cFv                                       */
//	80A133BC: 803DD470 (now__14mDoMtx_stack_c)
//	80A133C0: 803DD470 (now__14mDoMtx_stack_c)
//	80A133D0: 803468E8 (PSMTXTrans)
//	80A133D8: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80A133DC: 803DD470 (now__14mDoMtx_stack_c)
//	80A133E0: 803DD470 (now__14mDoMtx_stack_c)
//	80A133E8: 803464B0 (PSMTXCopy)
//	80A133FC: 80451180 (G_CM3D_F_ABS_MIN)
//	80A13400: 80451180 (G_CM3D_F_ABS_MIN)
//	80A13444: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcIns_c::setMtx() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/setMtx__10daNpcIns_cFv.s"
}
#pragma pop


/* 80A13460-80A13468 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__10daNpcIns_cFv                                  */
// True False
//  bool False
bool daNpcIns_c::drawDbgInfo() {
	return false;
}


/* 80A13468-80A13474 000C+00 s=1 e=0 z=0  None .text      sinShort__Q25JMath18TSinCosTable<13,f>CFs                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  s16 False
asm void JMath::TSinCosTable__template0::sinShort(s16 param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/func_80A13468.s"
}
#pragma pop


/* 80A13474-80A134F0 007C+00 s=2 e=0 z=0  None .text      cLib_getRndValue<i>__Fii                                     */
//	80A13488: 80A14124 (lit_4998)
//	80A1348C: 80A14124 (lit_4998)
//	80A134A8: 80267954 (cM_rndF__Ff)
//	80A134AC: 80A14124 (lit_4998)
//	80A134B0: 80A14124 (lit_4998)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int False
//  int False
asm void cLib_getRndValue__template0(int param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/func_80A13474.s"
}
#pragma pop


/* ############################################################################################## */
/* 80A145E4-80A145F0 000C+00 s=2 e=0 z=0  None .data      __vt__16daNpcIns_Param_c                                     */
SECTION_DATA void* __vt__16daNpcIns_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__16daNpcIns_Param_cFv,
};

/* 80A145F8-80A14604 000C+00 s=1 e=0 z=0  None .bss       @3928                                                        */
static u8 lit_3928[12];

/* 80A14604-80A14608 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80A134F0-80A13558 0068+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_ins_cpp                                      */
//	80A134FC: 80A145E4 (__vt__16daNpcIns_Param_c)
//	80A13500: 80A145E4 (__vt__16daNpcIns_Param_c)
//	80A13504: 80A14604 (l_HIO)
//	80A13508: 80A14604 (l_HIO)
//	80A1350C: 80A13D40 (__dt__16daNpcIns_Param_cFv)
//	80A13510: 80A13D40 (__dt__16daNpcIns_Param_cFv)
//	80A13514: 80A145F8 (lit_3928)
//	80A13518: 80A145F8 (lit_3928)
//	80A1351C: 80A0E1D8 (__register_global_object)
//	80A13520: 80A14398 (mEvtSeqList__10daNpcIns_c)
//	80A13524: 80A14398 (mEvtSeqList__10daNpcIns_c)
//	80A13528: 803A2180 (__ptmf_null)
//	80A1352C: 803A2180 (__ptmf_null)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_ins_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__sinit_d_a_npc_ins_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80A134F0 = (void*)__sinit_d_a_npc_ins_cpp;
#pragma pop


/* 80A13558-80A135A0 0048+00 s=5 e=0 z=0  None .text      __dt__18daNpcF_ActorMngr_cFv                                 */
//	80A13570: 80A145B4 (__vt__18daNpcF_ActorMngr_c)
//	80A13574: 80A145B4 (__vt__18daNpcF_ActorMngr_c)
//	80A13584: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_ActorMngr_c::~daNpcF_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__18daNpcF_ActorMngr_cFv.s"
}
#pragma pop


/* 80A135A0-80A135DC 003C+00 s=2 e=0 z=0  None .text      __ct__18daNpcF_ActorMngr_cFv                                 */
//	80A135B4: 80A145B4 (__vt__18daNpcF_ActorMngr_c)
//	80A135B8: 80A145B4 (__vt__18daNpcF_ActorMngr_c)
//	80A135C0: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_ActorMngr_c::daNpcF_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__ct__18daNpcF_ActorMngr_cFv.s"
}
#pragma pop


/* 80A135DC-80A136AC 00D0+00 s=1 e=0 z=0  None .text      __dt__15daNpcF_Lookat_cFv                                    */
//	80A135FC: 80A145D8 (__vt__15daNpcF_Lookat_c)
//	80A13600: 80A145D8 (__vt__15daNpcF_Lookat_c)
//	80A1360C: 80A136AC (__dt__5csXyzFv)
//	80A13610: 80A136AC (__dt__5csXyzFv)
//	80A1361C: 80361CE8 (__destroy_arr)
//	80A13624: 80A136AC (__dt__5csXyzFv)
//	80A13628: 80A136AC (__dt__5csXyzFv)
//	80A13634: 80361CE8 (__destroy_arr)
//	80A1363C: 80A136AC (__dt__5csXyzFv)
//	80A13640: 80A136AC (__dt__5csXyzFv)
//	80A1364C: 80361CE8 (__destroy_arr)
//	80A13654: 80A136AC (__dt__5csXyzFv)
//	80A13658: 80A136AC (__dt__5csXyzFv)
//	80A13664: 80361CE8 (__destroy_arr)
//	80A1366C: 80A136EC (__dt__4cXyzFv)
//	80A13670: 80A136EC (__dt__4cXyzFv)
//	80A1367C: 80361CE8 (__destroy_arr)
//	80A1368C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_Lookat_c::~daNpcF_Lookat_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__15daNpcF_Lookat_cFv.s"
}
#pragma pop


/* 80A136AC-80A136E8 003C+00 s=5 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80A136CC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__5csXyzFv.s"
}
#pragma pop


/* 80A136E8-80A136EC 0004+00 s=2 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80A136EC-80A13728 003C+00 s=5 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80A1370C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__4cXyzFv.s"
}
#pragma pop


/* 80A13728-80A1372C 0004+00 s=2 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80A1372C-80A13978 024C+00 s=1 e=0 z=0  None .text      __dt__8daNpcF_cFv                                            */
//	80A1374C: 803B38D8 (__vt__8daNpcF_c)
//	80A13750: 803B38D8 (__vt__8daNpcF_c)
//	80A13760: 80077CDC (__dt__11dBgS_LinChkFv)
//	80A1376C: 800775F0 (__dt__11dBgS_GndChkFv)
//	80A13778: 80267C94 (__dt__11cBgS_GndChkFv)
//	80A13784: 80249F48 (__dt__10dMsgFlow_cFv)
//	80A1378C: 80A136AC (__dt__5csXyzFv)
//	80A13790: 80A136AC (__dt__5csXyzFv)
//	80A1379C: 80361CE8 (__destroy_arr)
//	80A137A4: 80A136AC (__dt__5csXyzFv)
//	80A137A8: 80A136AC (__dt__5csXyzFv)
//	80A137B4: 80361CE8 (__destroy_arr)
//	80A137BC: 80A136EC (__dt__4cXyzFv)
//	80A137C0: 80A136EC (__dt__4cXyzFv)
//	80A137CC: 80361CE8 (__destroy_arr)
//	80A137D4: 80A13558 (__dt__18daNpcF_ActorMngr_cFv)
//	80A137D8: 80A13558 (__dt__18daNpcF_ActorMngr_cFv)
//	80A137E4: 80361CE8 (__destroy_arr)
//	80A137F0: 80A145B4 (__vt__18daNpcF_ActorMngr_c)
//	80A137F4: 80A145B4 (__vt__18daNpcF_ActorMngr_c)
//	80A13804: 80A145A8 (__vt__12dBgS_AcchCir)
//	80A13808: 80A145A8 (__vt__12dBgS_AcchCir)
//	80A13818: 8026EF18 (__dt__8cM3dGCirFv)
//	80A13824: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80A13830: 803AC2E4 (__vt__9dCcD_Stts)
//	80A13834: 803AC2E4 (__vt__9dCcD_Stts)
//	80A1384C: 80A1459C (__vt__10dCcD_GStts)
//	80A13850: 80A1459C (__vt__10dCcD_GStts)
//	80A13860: 80A14590 (__vt__10cCcD_GStts)
//	80A13864: 80A14590 (__vt__10cCcD_GStts)
//	80A13874: 803C3728 (__vt__9cCcD_Stts)
//	80A13878: 803C3728 (__vt__9cCcD_Stts)
//	80A13888: 80A1456C (__vt__12dBgS_ObjAcch)
//	80A1388C: 80A1456C (__vt__12dBgS_ObjAcch)
//	80A138AC: 80075F94 (__dt__9dBgS_AcchFv)
//	80A138C8: 80A14560 (__vt__12J3DFrameCtrl)
//	80A138CC: 80A14560 (__vt__12J3DFrameCtrl)
//	80A138EC: 80A14560 (__vt__12J3DFrameCtrl)
//	80A138F0: 80A14560 (__vt__12J3DFrameCtrl)
//	80A13910: 80A14560 (__vt__12J3DFrameCtrl)
//	80A13914: 80A14560 (__vt__12J3DFrameCtrl)
//	80A13934: 80A14560 (__vt__12J3DFrameCtrl)
//	80A13938: 80A14560 (__vt__12J3DFrameCtrl)
//	80A13948: 80018C8C (__dt__10fopAc_ac_cFv)
//	80A13958: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_c::~daNpcF_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__8daNpcF_cFv.s"
}
#pragma pop


/* 80A13978-80A13B68 01F0+00 s=1 e=0 z=0  None .text      __ct__8daNpcF_cFv                                            */
//	80A13990: 80018B64 (__ct__10fopAc_ac_cFv)
//	80A13994: 803B38D8 (__vt__8daNpcF_c)
//	80A13998: 803B38D8 (__vt__8daNpcF_c)
//	80A139A4: 80A14560 (__vt__12J3DFrameCtrl)
//	80A139A8: 80A14560 (__vt__12J3DFrameCtrl)
//	80A139B8: 803283FC (init__12J3DFrameCtrlFs)
//	80A139C8: 80A14560 (__vt__12J3DFrameCtrl)
//	80A139CC: 80A14560 (__vt__12J3DFrameCtrl)
//	80A139DC: 803283FC (init__12J3DFrameCtrlFs)
//	80A139EC: 80A14560 (__vt__12J3DFrameCtrl)
//	80A139F0: 80A14560 (__vt__12J3DFrameCtrl)
//	80A13A00: 803283FC (init__12J3DFrameCtrlFs)
//	80A13A10: 80A14560 (__vt__12J3DFrameCtrl)
//	80A13A14: 80A14560 (__vt__12J3DFrameCtrl)
//	80A13A24: 803283FC (init__12J3DFrameCtrlFs)
//	80A13A38: 800760A0 (__ct__9dBgS_AcchFv)
//	80A13A3C: 80A1456C (__vt__12dBgS_ObjAcch)
//	80A13A40: 80A1456C (__vt__12dBgS_ObjAcch)
//	80A13A5C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80A13A60: 803C3728 (__vt__9cCcD_Stts)
//	80A13A64: 803C3728 (__vt__9cCcD_Stts)
//	80A13A70: 80083760 (__ct__10dCcD_GSttsFv)
//	80A13A74: 803AC2E4 (__vt__9dCcD_Stts)
//	80A13A78: 803AC2E4 (__vt__9dCcD_Stts)
//	80A13A8C: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80A13A90: 80A145B4 (__vt__18daNpcF_ActorMngr_c)
//	80A13A94: 80A145B4 (__vt__18daNpcF_ActorMngr_c)
//	80A13AA0: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
//	80A13AA8: 80A135A0 (__ct__18daNpcF_ActorMngr_cFv)
//	80A13AAC: 80A135A0 (__ct__18daNpcF_ActorMngr_cFv)
//	80A13AB0: 80A13558 (__dt__18daNpcF_ActorMngr_cFv)
//	80A13AB4: 80A13558 (__dt__18daNpcF_ActorMngr_cFv)
//	80A13AC0: 80361D60 (__construct_array)
//	80A13AC8: 80A13728 (__ct__4cXyzFv)
//	80A13ACC: 80A13728 (__ct__4cXyzFv)
//	80A13AD0: 80A136EC (__dt__4cXyzFv)
//	80A13AD4: 80A136EC (__dt__4cXyzFv)
//	80A13AE0: 80361D60 (__construct_array)
//	80A13AE8: 80A136E8 (__ct__5csXyzFv)
//	80A13AEC: 80A136E8 (__ct__5csXyzFv)
//	80A13AF0: 80A136AC (__dt__5csXyzFv)
//	80A13AF4: 80A136AC (__dt__5csXyzFv)
//	80A13B00: 80361D60 (__construct_array)
//	80A13B08: 80A136E8 (__ct__5csXyzFv)
//	80A13B0C: 80A136E8 (__ct__5csXyzFv)
//	80A13B10: 80A136AC (__dt__5csXyzFv)
//	80A13B14: 80A136AC (__dt__5csXyzFv)
//	80A13B20: 80361D60 (__construct_array)
//	80A13B28: 80249F00 (__ct__10dMsgFlow_cFv)
//	80A13B30: 80267C1C (__ct__11cBgS_GndChkFv)
//	80A13B38: 8007757C (__ct__11dBgS_GndChkFv)
//	80A13B40: 80077C68 (__ct__11dBgS_LinChkFv)
//	80A13B48: 801528C8 (initialize__8daNpcF_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_c::daNpcF_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__ct__8daNpcF_cFv.s"
}
#pragma pop


/* 80A13B68-80A13BD8 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80A13B88: 80A145A8 (__vt__12dBgS_AcchCir)
//	80A13B8C: 80A145A8 (__vt__12dBgS_AcchCir)
//	80A13B9C: 8026EF18 (__dt__8cM3dGCirFv)
//	80A13BA8: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80A13BB8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80A13BD8-80A13C34 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80A13BF0: 80A1459C (__vt__10dCcD_GStts)
//	80A13BF4: 80A1459C (__vt__10dCcD_GStts)
//	80A13C00: 80A14590 (__vt__10cCcD_GStts)
//	80A13C04: 80A14590 (__vt__10cCcD_GStts)
//	80A13C18: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80A13C34-80A13CA4 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80A13C54: 80A1456C (__vt__12dBgS_ObjAcch)
//	80A13C58: 80A1456C (__vt__12dBgS_ObjAcch)
//	80A13C74: 80075F94 (__dt__9dBgS_AcchFv)
//	80A13C84: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80A13CA4-80A13CEC 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80A13CBC: 80A14560 (__vt__12J3DFrameCtrl)
//	80A13CC0: 80A14560 (__vt__12J3DFrameCtrl)
//	80A13CD0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80A13CEC-80A13CF0 0004+00 s=1 e=0 z=0  None .text      adjustShapeAngle__8daNpcF_cFv                                */
// True False
//  void False
void daNpcF_c::adjustShapeAngle() {
	/* empty function */
}


/* 80A13CF0-80A13CF4 0004+00 s=1 e=0 z=0  None .text      setCollisions__8daNpcF_cFv                                   */
// True False
//  void False
void daNpcF_c::setCollisions() {
	/* empty function */
}


/* 80A13CF4-80A13CF8 0004+00 s=1 e=0 z=0  None .text      drawOtherMdls__8daNpcF_cFv                                   */
// True False
//  void False
void daNpcF_c::drawOtherMdls() {
	/* empty function */
}


/* 80A13CF8-80A13D40 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80A13D10: 80A14590 (__vt__10cCcD_GStts)
//	80A13D14: 80A14590 (__vt__10cCcD_GStts)
//	80A13D24: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80A13D40-80A13D88 0048+00 s=2 e=0 z=0  None .text      __dt__16daNpcIns_Param_cFv                                   */
//	80A13D58: 80A145E4 (__vt__16daNpcIns_Param_c)
//	80A13D5C: 80A145E4 (__vt__16daNpcIns_Param_c)
//	80A13D6C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcIns_Param_c::~daNpcIns_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/__dt__16daNpcIns_Param_cFv.s"
}
#pragma pop


/* 80A13D88-80A13D90 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80A13D8C: 80A13C34 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80A13D88() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/func_80A13D88.s"
}
#pragma pop


/* 80A13D90-80A13D98 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80A13D94: 80A13C34 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80A13D90() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_ins/d_a_npc_ins/func_80A13D90.s"
}
#pragma pop


