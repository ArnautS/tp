// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_seic
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_seic/d_a_npc_seic.h"

// 
// Types:
// 

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daNpcT_MotionSeqMngr_c {
	struct sequenceStepData_c {
	};

	/* 80145898 */ // False False
void initialize();
	/* 80AC8E24 */ // True False
~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_motionAnmData_c {
};

struct daNpcT_evtData_c {
};

struct daNpcT_faceMotionAnmData_c {
};

struct daNpc_seiC_c {
	/* 80AC754C */ // True False
~daNpc_seiC_c();
	/* 80AC75E8 */ // True False
void create();
	/* 80AC7828 */ // True False
void CreateHeap();
	/* 80AC7980 */ // True False
void Delete();
	/* 80AC79B4 */ // True False
void Execute();
	/* 80AC79D4 */ // True False
void Draw();
	/* 80AC7A68 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80AC7A88 */ // True False
void getType();
	/* 80AC7AA8 */ // True False
void getFlowNodeNo();
	/* 80AC7AC4 */ // True False
//  bool False
bool isDelete();
	/* 80AC7ACC */ // True False
void reset();
	/* 80AC7C1C */ // True False
void setParam();
	/* 80AC7D48 */ // True False
//  void False
void srchActors();
	/* 80AC7D4C */ // True False
void evtTalk();
	/* 80AC7E4C */ // True False
void evtCutProc();
	/* 80AC7F14 */ // True False
void action();
	/* 80AC7F9C */ // True False
void beforeMove();
	/* 80AC801C */ // True False
void setAttnPos();
	/* 80AC8078 */ // True False
//  bool False
bool drawDbgInfo();
	/* 80AC8080 */ // True False
//  int False
//  int False
//  f32 False
//  int False
void afterSetMotionAnm(int, int, f32, int);
	/* 80AC8218 */ // True False
void selectAction();
	/* 80AC8260 */ // True False
//  int (daNpc_seiC_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiC_c False
void chkAction(int (daNpc_seiC_c::*)(void*));
	/* 80AC828C */ // True False
//  int (daNpc_seiC_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiC_c False
void setAction(int (daNpc_seiC_c::*)(void*));
	/* 80AC8334 */ // True False
//  void False
void ctrlWaitAnm();
	/* 80AC8338 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80AC8364 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80AC916C */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpc_seiC_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
};

struct daNpc_seiC_Param_c {
	/* 80AC91B0 */ // True False
~daNpc_seiC_Param_c();
};

struct J3DAnmTextureSRTKey {
};

struct J3DJoint {
};

struct J3DModel {
};

struct cXyz {
	/* 80AC885C */ // True False
~cXyz();
	/* 80AC8DD8 */ // True False
cXyz();
};

struct J3DAnmTevRegKey {
};

struct _GXColorS10 {
};

struct daNpcT_c {
	/* 8014810C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getTexSRTKeyAnmP(char const*, int);
	/* 80148148 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getTevRegKeyAnmP(char const*, int);
	/* 80148338 */ // False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBtkAnm(J3DAnmTextureSRTKey*, J3DModelData*, f32, int);
	/* 80148378 */ // False False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBrkAnm(J3DAnmTevRegKey*, J3DModelData*, f32, int);
	/* 801483F8 */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void loadRes(s8 const*, char const**);
	/* 801484AC */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void deleteRes(s8 const*, char const**);
	/* 8014852C */ // False False
void execute();
	/* 8014886C */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
	/* 80148C70 */ // False False
void setEnvTevColor();
	/* 80148CCC */ // False False
void setRoomNo();
	/* 801490D4 */ // False False
void ctrlBtk();
	/* 80149190 */ // False False
void setMtx();
	/* 8014951C */ // False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 8014997C */ // False False
void evtProc();
	/* 80149BB4 */ // False False
void setFootPos();
	/* 80149D7C */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
void setFootPrtcl(cXyz*, f32, f32);
	/* 8014A05C */ // False False
//  bool False
bool checkCullDraw();
	/* 8014A064 */ // False False
void twilight();
	/* 8014A0B0 */ // False False
void evtOrder();
	/* 8014A224 */ // False False
void evtChange();
	/* 8014A324 */ // False False
void clrParam();
	/* 8014A388 */ // False False
//  int False
//  bool False
void setFaceMotionAnm(int, bool);
	/* 8014A628 */ // False False
//  int False
//  f32 False
//  int False
void setMotionAnm(int, f32, int);
	/* 8014AA18 */ // False False
//  s16 False
void setAngle(s16);
	/* 8014BBF0 */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 8014BC78 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void talkProc(int*, int, fopAc_ac_c**, int);
	/* 80AC84D4 */ // True False
~daNpcT_c();
	/* 80AC88D4 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80AC8FF0 */ // True False
//  bool False
bool getEyeballMaterialNo();
	/* 80AC8FF8 */ // True False
//  void False
//  int False
void ctrlSubFaceMotion(int);
	/* 80AC8FFC */ // True False
//  bool False
//  int False
bool checkChangeJoint(int);
	/* 80AC9004 */ // True False
//  bool False
//  int False
bool checkRemoveJoint(int);
	/* 80AC900C */ // True False
//  s32 False
s32 getBackboneJointNo();
	/* 80AC9014 */ // True False
//  s32 False
s32 getNeckJointNo();
	/* 80AC901C */ // True False
//  s32 False
s32 getHeadJointNo();
	/* 80AC9024 */ // True False
//  s32 False
s32 getFootLJointNo();
	/* 80AC902C */ // True False
//  s32 False
s32 getFootRJointNo();
	/* 80AC9034 */ // True False
//  bool False
bool getEyeballLMaterialNo();
	/* 80AC903C */ // True False
//  bool False
bool getEyeballRMaterialNo();
	/* 80AC9044 */ // True False
//  void False
//  int False
void afterJntAnm(int);
	/* 80AC9048 */ // True False
//  bool False
bool checkChangeEvt();
	/* 80AC9050 */ // True False
//  bool False
bool evtEndProc();
	/* 80AC9058 */ // True False
//  void False
void setAfterTalkMotion();
	/* 80AC905C */ // True False
//  void False
void afterMoved();
	/* 80AC9060 */ // True False
//  void False
void setCollision();
	/* 80AC9064 */ // True False
//  bool False
bool chkXYItems();
	/* 80AC906C */ // True False
void decTmr();
	/* 80AC9084 */ // True False
//  void False
void drawOtherMdl();
	/* 80AC9088 */ // True False
//  void False
void drawGhost();
	/* 80AC908C */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetFaceMotionAnm(int, int, f32, int);
	/* 80AC9094 */ // True False
//  daNpcT_faceMotionAnmData_c False
void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
	/* 80AC90C4 */ // True False
//  daNpcT_motionAnmData_c False
void getMotionAnm(daNpcT_motionAnmData_c);
	/* 80AC90F4 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeAnm(int*, int*);
	/* 80AC90F8 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBck(int*, int*);
	/* 80AC90FC */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtp(int*, int*);
	/* 80AC9100 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtk(int*, int*);
};

struct daNpcT_MatAnm_c {
	/* 80145764 */ // False False
void initialize();
};

struct daNpcT_JntAnm_c {
	/* 80146C98 */ // False False
void initialize();
	/* 80AC8CDC */ // True False
~daNpcT_JntAnm_c();
};

struct daNpcT_ActorMngr_c {
	/* 801456D4 */ // False False
void initialize();
	/* 80AC8DDC */ // True False
~daNpcT_ActorMngr_c();
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80AC8EDC */ // True False
~dCcD_GStts();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80AC8F38 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80AC8E6C */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct csXyz {
	/* 80AC8898 */ // True False
~csXyz();
	/* 80AC8CD8 */ // True False
csXyz();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct dAttention_c {
	/* 80AC7D34 */ // True False
//  int False
void getDistTable(int);
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cCcD_GStts {
	/* 80AC848C */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80AC8FA8 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpc_seiC_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpc_seiC_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpc_seiC_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpc_seiC_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_seiC_IsDelete(void*);

// True False
extern "C" void __dt__12daNpc_seiC_cFv();
// True False
extern "C" void create__12daNpc_seiC_cFv();
// True False
extern "C" void CreateHeap__12daNpc_seiC_cFv();
// True False
extern "C" void Delete__12daNpc_seiC_cFv();
// True False
extern "C" void Execute__12daNpc_seiC_cFv();
// True False
extern "C" void Draw__12daNpc_seiC_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__12daNpc_seiC_cFP10fopAc_ac_c();
// True False
extern "C" void getType__12daNpc_seiC_cFv();
// True False
extern "C" void getFlowNodeNo__12daNpc_seiC_cFv();
// True False
//  bool False
extern "C" bool isDelete__12daNpc_seiC_cFv();
// True False
extern "C" void reset__12daNpc_seiC_cFv();
// True False
extern "C" void setParam__12daNpc_seiC_cFv();
// True False
//  int False
extern "C" void getDistTable__12dAttention_cFi();
// True False
//  void False
extern "C" void srchActors__12daNpc_seiC_cFv();
// True False
extern "C" void evtTalk__12daNpc_seiC_cFv();
// True False
extern "C" void evtCutProc__12daNpc_seiC_cFv();
// True False
extern "C" void action__12daNpc_seiC_cFv();
// True False
extern "C" void beforeMove__12daNpc_seiC_cFv();
// True False
extern "C" void setAttnPos__12daNpc_seiC_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__12daNpc_seiC_cFv();
// True False
//  int False
//  int False
//  f32 False
//  int False
extern "C" void afterSetMotionAnm__12daNpc_seiC_cFiifi();
// True False
extern "C" void selectAction__12daNpc_seiC_cFv();
// True False
//  int (daNpc_seiC_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiC_c False
extern "C" void chkAction__12daNpc_seiC_cFM12daNpc_seiC_cFPCvPvPv_i();
// True False
//  int (daNpc_seiC_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiC_c False
extern "C" void setAction__12daNpc_seiC_cFM12daNpc_seiC_cFPCvPvPv_i();
// True False
//  void False
extern "C" void ctrlWaitAnm__12daNpc_seiC_cFv();
// True False
//  void* False
// 	 void False
extern "C" void wait__12daNpc_seiC_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__12daNpc_seiC_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_seiC_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_seiC_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_seiC_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_seiC_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpc_seiC_IsDelete__FPv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__8daNpcT_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__15daNpcT_JntAnm_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  bool False
extern "C" bool getEyeballMaterialNo__8daNpcT_cFv();
// True False
//  void False
//  int False
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
// True False
//  bool False
//  int False
extern "C" bool checkChangeJoint__8daNpcT_cFi();
// True False
//  bool False
//  int False
extern "C" bool checkRemoveJoint__8daNpcT_cFi();
// True False
//  s32 False
extern "C" s32 getBackboneJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getNeckJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getHeadJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
// True False
//  void False
//  int False
extern "C" void afterJntAnm__8daNpcT_cFi();
// True False
//  bool False
extern "C" bool checkChangeEvt__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool evtEndProc__8daNpcT_cFv();
// True False
//  void False
extern "C" void setAfterTalkMotion__8daNpcT_cFv();
// True False
//  void False
extern "C" void afterMoved__8daNpcT_cFv();
// True False
//  void False
extern "C" void setCollision__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool chkXYItems__8daNpcT_cFv();
// True False
extern "C" void decTmr__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawOtherMdl__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawGhost__8daNpcT_cFv();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
// True False
//  daNpcT_faceMotionAnmData_c False
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
// True False
//  daNpcT_motionAnmData_c False
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeAnm__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBck__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtp__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtk__8daNpcT_cFPiPi();
// False False
extern "C" void __sinit_d_a_npc_seic_cpp();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__12daNpc_seiC_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __dt__18daNpc_seiC_Param_cFv();
// True False
extern "C" static void func_80AC91F8();
// True False
extern "C" static void func_80AC9200();
extern "C" extern u32 const lit_4090;
extern "C" extern u32 const lit_4091;
extern "C" extern u32 const lit_4292;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtList[6];
extern "C" extern u8 l_faceMotionAnmData[28];
extern "C" extern u8 l_motionAnmData[28];
extern "C" extern u8 l_faceMotionSequenceData[16];
extern "C" extern u8 l_motionSequenceData[16];
extern "C" extern u8 data_80AC93C4[8];
extern "C" extern u8 data_80AC93CC[8];
extern "C" extern void* g_profile_NPC_SEIC[12];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__22daNpcT_MotionSeqMngr_c[3];
extern "C" extern void* __vt__18daNpcT_ActorMngr_c[3];
extern "C" extern void* __vt__15daNpcT_JntAnm_c[3];
extern "C" extern void* __vt__12daNpc_seiC_c[49];
extern "C" extern void* __vt__18daNpc_seiC_Param_c[3];

// 
// External References:
// 

// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_MatAnm_cFv();
// False False
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_JntAnm_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getTexSRTKeyAnmP__8daNpcT_cFPCci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getTevRegKeyAnmP__8daNpcT_cFPCci();
// False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBtkAnm__8daNpcT_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi();
// False False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBrkAnm__8daNpcT_cFP15J3DAnmTevRegKeyP12J3DModelDatafi();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
// False False
extern "C" void execute__8daNpcT_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
// False False
extern "C" void setEnvTevColor__8daNpcT_cFv();
// False False
extern "C" void setRoomNo__8daNpcT_cFv();
// False False
extern "C" void ctrlBtk__8daNpcT_cFv();
// False False
extern "C" void setMtx__8daNpcT_cFv();
// False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
// False False
extern "C" void evtProc__8daNpcT_cFv();
// False False
extern "C" void setFootPos__8daNpcT_cFv();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
// False False
//  bool False
extern "C" bool checkCullDraw__8daNpcT_cFv();
// False False
extern "C" void twilight__8daNpcT_cFv();
// False False
extern "C" void evtOrder__8daNpcT_cFv();
// False False
extern "C" void evtChange__8daNpcT_cFv();
// False False
extern "C" void clrParam__8daNpcT_cFv();
// False False
//  int False
//  bool False
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
// False False
//  int False
//  f32 False
//  int False
extern "C" void setMotionAnm__8daNpcT_cFifi();
// False False
//  s16 False
extern "C" void setAngle__8daNpcT_cFs();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 dist_table__12dAttention_c[6552];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80AC921C-80AC92B0 0094+00 s=4 e=0 z=0  None .rodata    m__18daNpc_seiC_Param_c                                      */
SECTION_RODATA static u8 const m__18daNpc_seiC_Param_c[148] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x45, 0x7A, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x96, 0x00, 0x00,
};

/* 80AC92B0-80AC92B4 0004+00 s=1 e=0 z=0  None .rodata    @4089                                                        */
SECTION_RODATA static u8 const lit_4089[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AC92B4-80AC92B8 0004+00 s=0 e=0 z=0  None .rodata    @4090                                                        */
SECTION_RODATA u32 const lit_4090 = 0x47800000;

/* 80AC92B8-80AC92BC 0004+00 s=0 e=0 z=0  None .rodata    @4091                                                        */
SECTION_RODATA u32 const lit_4091 = 0x3E4CCCCD;

/* 80AC92BC-80AC92C0 0004+00 s=2 e=0 z=0  None .rodata    @4215                                                        */
SECTION_RODATA static u32 const lit_4215 = 0x3F800000;

/* 80AC92C0-80AC92C4 0004+00 s=1 e=0 z=0  None .rodata    @4247                                                        */
SECTION_RODATA static u32 const lit_4247 = 0x42C80000;

/* 80AC92C4-80AC92C8 0004+00 s=0 e=0 z=0  None .rodata    @4292                                                        */
SECTION_RODATA u32 const lit_4292 = 0xBF800000;

/* 80AC92C8-80AC92F0 0028+00 s=4 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80AC92C8[40] = {
	/* 80AC92C8 0001 stringBase_80AC92C8 @stringBase0 */
	0x00,
	/* 80AC92C9 0010 data_80AC92C9 None */
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x47, 0x45, 0x54, 0x49, 0x54, 0x45, 0x4D, 0x00,
	/* 80AC92D9 000C data_80AC92D9 None */
	0x4E, 0x4F, 0x5F, 0x52, 0x45, 0x53, 0x50, 0x4F, 0x4E, 0x53, 0x45, 0x00,
	/* 80AC92E5 000B data_80AC92E5 None */
	0x73, 0x65, 0x69, 0x43, 0x00, 0x53, 0x65, 0x69, 0x63, 0x00, 0x00,
};

/* 80AC92F0-80AC92FC 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC92FC-80AC9310 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80AC9310-80AC9318 0008+00 s=1 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[8] = {
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01,
};

/* 80AC9318-80AC9330 0018+00 s=0 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA void* l_evtList[6] = {
	(void*)(((char*)&struct_80AC92C8)+0x0) /* @stringBase0 */,
	(void*)NULL,
	(void*)(((char*)&struct_80AC92C8)+0x1) /* None */,
	(void*)NULL,
	(void*)(((char*)&struct_80AC92C8)+0x11) /* None */,
	(void*)NULL,
};

/* 80AC9330-80AC9338 0008+00 s=2 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[2] = {
	(void*)(((char*)&struct_80AC92C8)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80AC92C8)+0x1D) /* None */,
};

/* 80AC9338-80AC933C 0002+02 s=1 e=0 z=0  None .data      l_loadResPtrn0                                               */
SECTION_DATA static u16 l_loadResPtrn0[1 + 1 /* padding */] = {
	0x01FF,
	/* padding */
	0x0000,
};

/* 80AC933C-80AC9344 0008+00 s=1 e=0 z=0  None .data      l_loadResPtrnList                                            */
SECTION_DATA static void* l_loadResPtrnList[2] = {
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
};

/* 80AC9344-80AC9360 001C+00 s=0 e=0 z=0  None .data      l_faceMotionAnmData                                          */
SECTION_DATA u8 l_faceMotionAnmData[28] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC9360-80AC937C 001C+00 s=0 e=0 z=0  None .data      l_motionAnmData                                              */
SECTION_DATA u8 l_motionAnmData[28] = {
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC937C-80AC938C 0010+00 s=0 e=0 z=0  None .data      l_faceMotionSequenceData                                     */
SECTION_DATA u8 l_faceMotionSequenceData[16] = {
	0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AC938C-80AC939C 0010+00 s=0 e=0 z=0  None .data      l_motionSequenceData                                         */
SECTION_DATA u8 l_motionSequenceData[16] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AC939C-80AC93A0 0004+00 s=1 e=0 z=0  None .data      mCutNameList__12daNpc_seiC_c                                 */
SECTION_DATA static void* mCutNameList__12daNpc_seiC_c = (void*)(((char*)&struct_80AC92C8)+0x0) /* @stringBase0 */;

/* 80AC93A0-80AC93AC 000C+00 s=2 e=0 z=0  None .data      mCutList__12daNpc_seiC_c                                     */
SECTION_DATA static u8 mCutList__12daNpc_seiC_c[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC93AC-80AC93B8 000C+00 s=1 e=0 z=0  None .data      @4342                                                        */
SECTION_DATA static void* lit_4342[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_seiC_cFPv,
};

/* 80AC93B8-80AC93C4 000C+00 s=1 e=0 z=0  None .data      @4352                                                        */
SECTION_DATA static void* lit_4352[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_seiC_cFPv,
};

/* 80AC93C4-80AC93CC 0008+00 s=0 e=0 z=0  None .data      btkAnmData$4416                                              */
SECTION_DATA u8 data_80AC93C4[8] = {
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01,
};

/* 80AC93CC-80AC93D4 0008+00 s=0 e=0 z=0  None .data      brkAnmData$4417                                              */
SECTION_DATA u8 data_80AC93CC[8] = {
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x01,
};

/* 80AC93D4-80AC93E0 000C+00 s=1 e=0 z=0  None .data      @4467                                                        */
SECTION_DATA static void* lit_4467[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__12daNpc_seiC_cFPv,
};

/* 80AC93E0-80AC9400 0020+00 s=1 e=0 z=0  None .data      daNpc_seiC_MethodTable                                       */
SECTION_DATA static void* daNpc_seiC_MethodTable[8] = {
	(void*)daNpc_seiC_Create__FPv,
	(void*)daNpc_seiC_Delete__FPv,
	(void*)daNpc_seiC_Execute__FPv,
	(void*)daNpc_seiC_IsDelete__FPv,
	(void*)daNpc_seiC_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80AC9400-80AC9430 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_SEIC                                           */
SECTION_DATA void* g_profile_NPC_SEIC[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02660000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000E64,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01670000,
	(void*)&daNpc_seiC_MethodTable,
	(void*)0x00044000,
	(void*)0x000E0000,
};

/* 80AC9430-80AC943C 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80AC943C-80AC9460 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AC9200,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AC91F8,
};

/* 80AC9460-80AC946C 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80AC946C-80AC9478 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80AC9478-80AC9484 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80AC9484-80AC9490 000C+00 s=3 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c                               */
SECTION_DATA void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80AC9490-80AC949C 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcT_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80AC949C-80AC94A8 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c                                      */
SECTION_DATA void* __vt__15daNpcT_JntAnm_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80AC94A8-80AC956C 00C4+00 s=2 e=0 z=0  None .data      __vt__12daNpc_seiC_c                                         */
SECTION_DATA void* __vt__12daNpc_seiC_c[49] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daNpc_seiC_cFv,
	(void*)ctrlBtk__8daNpcT_cFv,
	(void*)ctrlSubFaceMotion__8daNpcT_cFi,
	(void*)checkChangeJoint__8daNpcT_cFi,
	(void*)checkRemoveJoint__8daNpcT_cFi,
	(void*)getBackboneJointNo__8daNpcT_cFv,
	(void*)getNeckJointNo__8daNpcT_cFv,
	(void*)getHeadJointNo__8daNpcT_cFv,
	(void*)getFootLJointNo__8daNpcT_cFv,
	(void*)getFootRJointNo__8daNpcT_cFv,
	(void*)getEyeballLMaterialNo__8daNpcT_cFv,
	(void*)getEyeballRMaterialNo__8daNpcT_cFv,
	(void*)getEyeballMaterialNo__8daNpcT_cFv,
	(void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
	(void*)afterJntAnm__8daNpcT_cFi,
	(void*)setParam__12daNpc_seiC_cFv,
	(void*)checkChangeEvt__8daNpcT_cFv,
	(void*)evtTalk__12daNpc_seiC_cFv,
	(void*)evtEndProc__8daNpcT_cFv,
	(void*)evtCutProc__12daNpc_seiC_cFv,
	(void*)setAfterTalkMotion__8daNpcT_cFv,
	(void*)evtProc__8daNpcT_cFv,
	(void*)action__12daNpc_seiC_cFv,
	(void*)beforeMove__12daNpc_seiC_cFv,
	(void*)afterMoved__8daNpcT_cFv,
	(void*)setAttnPos__12daNpc_seiC_cFv,
	(void*)setFootPos__8daNpcT_cFv,
	(void*)setCollision__8daNpcT_cFv,
	(void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
	(void*)checkCullDraw__8daNpcT_cFv,
	(void*)twilight__8daNpcT_cFv,
	(void*)chkXYItems__8daNpcT_cFv,
	(void*)evtOrder__8daNpcT_cFv,
	(void*)decTmr__8daNpcT_cFv,
	(void*)clrParam__8daNpcT_cFv,
	(void*)drawDbgInfo__12daNpc_seiC_cFv,
	(void*)drawOtherMdl__8daNpcT_cFv,
	(void*)drawGhost__8daNpcT_cFv,
	(void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
	(void*)afterSetMotionAnm__12daNpc_seiC_cFiifi,
	(void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
	(void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
	(void*)changeAnm__8daNpcT_cFPiPi,
	(void*)changeBck__8daNpcT_cFPiPi,
	(void*)changeBtp__8daNpcT_cFPiPi,
	(void*)changeBtk__8daNpcT_cFPiPi,
	(void*)setMotionAnm__8daNpcT_cFifi,
};

/* 80AC754C-80AC75E8 009C+00 s=1 e=0 z=0  None .text      __dt__12daNpc_seiC_cFv                                       */
//	80AC756C: 80AC94A8 (__vt__12daNpc_seiC_c)
//	80AC7570: 80AC94A8 (__vt__12daNpc_seiC_c)
//	80AC7588: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AC7598: 80AC933C (l_loadResPtrnList)
//	80AC759C: 80AC933C (l_loadResPtrnList)
//	80AC75A4: 80AC9330 (l_resNameList)
//	80AC75A8: 80AC9330 (l_resNameList)
//	80AC75AC: 801484AC (deleteRes__8daNpcT_cFPCScPPCc)
//	80AC75B8: 80AC84D4 (__dt__8daNpcT_cFv)
//	80AC75C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_seiC_c::~daNpc_seiC_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC75E8-80AC7828 0240+00 s=1 e=0 z=0  None .text      create__12daNpc_seiC_cFv                                     */
//	80AC7600: 80AC92F0 (cNullVec__6Z2Calc)
//	80AC7604: 80AC92F0 (cNullVec__6Z2Calc)
//	80AC7640: 80AC916C (__ct__12daNpc_seiC_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AC7654: 80AC7A88 (getType__12daNpc_seiC_cFv)
//	80AC7660: 80AC7AA8 (getFlowNodeNo__12daNpc_seiC_cFv)
//	80AC7688: 801483F8 (loadRes__8daNpcT_cFPCScPPCc)
//	80AC769C: 80AC7A68 (createHeapCallBack__12daNpc_seiC_cFP10fopAc_ac_c)
//	80AC76A0: 80AC7A68 (createHeapCallBack__12daNpc_seiC_cFP10fopAc_ac_c)
//	80AC76A8: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80AC76C0: 80AC7AC4 (isDelete__12daNpc_seiC_cFv)
//	80AC76F8: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80AC7724: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80AC772C: 804061C0 (g_dComIfG_gameInfo)
//	80AC7730: 804061C0 (g_dComIfG_gameInfo)
//	80AC7738: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80AC77B8: 80148C70 (setEnvTevColor__8daNpcT_cFv)
//	80AC77C0: 80148CCC (setRoomNo__8daNpcT_cFv)
//	80AC77C8: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC77CC: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC77E8: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80AC77F0: 80AC7ACC (reset__12daNpc_seiC_cFv)
//	80AC7800: 80AC79B4 (Execute__12daNpc_seiC_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/create__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC7828-80AC7980 0158+00 s=1 e=0 z=0  None .text      CreateHeap__12daNpc_seiC_cFv                                 */
//	80AC7840: 80AC9310 (l_bmdData)
//	80AC7844: 80AC9310 (l_bmdData)
//	80AC7850: 80AC9330 (l_resNameList)
//	80AC7854: 80AC9330 (l_resNameList)
//	80AC7860: 804061C0 (g_dComIfG_gameInfo)
//	80AC7864: 804061C0 (g_dComIfG_gameInfo)
//	80AC7874: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80AC7880: 802CEC4C (__nw__FUl)
//	80AC78BC: 80AC92BC (lit_4215)
//	80AC78C0: 80AC92BC (lit_4215)
//	80AC78CC: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80AC78F0: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AC7924: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	80AC7938: 80AC92B0 (lit_4089)
//	80AC793C: 80AC92B0 (lit_4089)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/CreateHeap__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC7980-80AC79B4 0034+00 s=1 e=0 z=0  None .text      Delete__12daNpc_seiC_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/Delete__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC79B4-80AC79D4 0020+00 s=2 e=0 z=0  None .text      Execute__12daNpc_seiC_cFv                                    */
//	80AC79C0: 8014852C (execute__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/Execute__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC79D4-80AC7A68 0094+00 s=1 e=0 z=0  None .text      Draw__12daNpc_seiC_cFv                                       */
//	80AC79E4: 803621DC (_savegpr_29)
//	80AC7A38: 80AC92C0 (lit_4247)
//	80AC7A3C: 80AC92C0 (lit_4247)
//	80AC7A4C: 8014886C (draw__8daNpcT_cFiifP11_GXColorS10fiii)
//	80AC7A54: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/Draw__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC7A68-80AC7A88 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__12daNpc_seiC_cFP10fopAc_ac_c             */
//	80AC7A74: 80AC7828 (CreateHeap__12daNpc_seiC_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpc_seiC_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/createHeapCallBack__12daNpc_seiC_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80AC7A88-80AC7AA8 0020+00 s=1 e=0 z=0  None .text      getType__12daNpc_seiC_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::getType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/getType__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC7AA8-80AC7AC4 001C+00 s=1 e=0 z=0  None .text      getFlowNodeNo__12daNpc_seiC_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::getFlowNodeNo() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/getFlowNodeNo__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC7AC4-80AC7ACC 0008+00 s=1 e=0 z=0  None .text      isDelete__12daNpc_seiC_cFv                                   */
// True False
//  bool False
bool daNpc_seiC_c::isDelete() {
	return false;
}


/* 80AC7ACC-80AC7C1C 0150+00 s=1 e=0 z=0  None .text      reset__12daNpc_seiC_cFv                                      */
//	80AC7ADC: 803621DC (_savegpr_29)
//	80AC7AE4: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC7AE8: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC7AFC: 80003458 (memset)
//	80AC7B04: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC7B0C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC7B14: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC7B1C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC7B24: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AC7B88: 80267954 (cM_rndF__Ff)
//	80AC7BB8: 80003458 (memset)
//	80AC7BC8: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80AC7BD4: 8014AA18 (setAngle__8daNpcT_cFs)
//	80AC7BEC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC7C08: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/reset__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC7C1C-80AC7D34 0118+00 s=1 e=0 z=0  None .text      setParam__12daNpc_seiC_cFv                                   */
//	80AC7C3C: 80AC8218 (selectAction__12daNpc_seiC_cFv)
//	80AC7C44: 80AC7D48 (srchActors__12daNpc_seiC_cFv)
//	80AC7C48: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC7C4C: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC7C58: 80AC7D34 (getDistTable__12dAttention_cFi)
//	80AC7C64: 80AC7D34 (getDistTable__12dAttention_cFi)
//	80AC7C70: 80AC7D34 (getDistTable__12dAttention_cFi)
//	80AC7C7C: 80AC7D34 (getDistTable__12dAttention_cFi)
//	80AC7C9C: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC7CA0: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC7CE0: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80AC7CE4: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC7CE8: 80AC921C (m__18daNpc_seiC_Param_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/setParam__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC7D34-80AC7D48 0014+00 s=1 e=0 z=0  None .text      getDistTable__12dAttention_cFi                               */
//	80AC7D38: 803A9C70 (dist_table__12dAttention_c)
//	80AC7D3C: 803A9C70 (dist_table__12dAttention_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void dAttention_c::getDistTable(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/getDistTable__12dAttention_cFi.s"
}
#pragma pop


/* 80AC7D48-80AC7D4C 0004+00 s=1 e=0 z=0  None .text      srchActors__12daNpc_seiC_cFv                                 */
// True False
//  void False
void daNpc_seiC_c::srchActors() {
	/* empty function */
}


/* 80AC7D4C-80AC7E4C 0100+00 s=1 e=0 z=0  None .text      evtTalk__12daNpc_seiC_cFv                                    */
//	80AC7D60: 80AC93AC (lit_4342)
//	80AC7D64: 80AC93AC (lit_4342)
//	80AC7D84: 80AC8260 (chkAction__12daNpc_seiC_cFM12daNpc_seiC_cFPCvPvPv_i)
//	80AC7D9C: 80362084 (__ptmf_scall)
//	80AC7DB0: 804061C0 (g_dComIfG_gameInfo)
//	80AC7DB4: 804061C0 (g_dComIfG_gameInfo)
//	80AC7DDC: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80AC7DFC: 8014A224 (evtChange__8daNpcT_cFv)
//	80AC7E08: 80AC93B8 (lit_4352)
//	80AC7E0C: 80AC93B8 (lit_4352)
//	80AC7E30: 80AC828C (setAction__12daNpc_seiC_cFM12daNpc_seiC_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::evtTalk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/evtTalk__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC7E4C-80AC7F14 00C8+00 s=1 e=0 z=0  None .text      evtCutProc__12daNpc_seiC_cFv                                 */
//	80AC7E5C: 803621DC (_savegpr_29)
//	80AC7E68: 804061C0 (g_dComIfG_gameInfo)
//	80AC7E6C: 804061C0 (g_dComIfG_gameInfo)
//	80AC7E78: 80AC92C8 (struct_80AC92C8)
//	80AC7E7C: 80AC92C8 (struct_80AC92C8)
//	80AC7E8C: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80AC7EA4: 80AC939C (mCutNameList__12daNpc_seiC_c)
//	80AC7EA8: 80AC939C (mCutNameList__12daNpc_seiC_c)
//	80AC7EB8: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80AC7ECC: 80AC93A0 (mCutList__12daNpc_seiC_c)
//	80AC7ED0: 80AC93A0 (mCutList__12daNpc_seiC_c)
//	80AC7ED8: 80362084 (__ptmf_scall)
//	80AC7EF0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80AC7F00: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::evtCutProc() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/evtCutProc__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC7F14-80AC7F9C 0088+00 s=1 e=0 z=0  None .text      action__12daNpc_seiC_cFv                                     */
//	80AC7F2C: 80362018 (__ptmf_test)
//	80AC7F40: 80362048 (__ptmf_cmpr)
//	80AC7F58: 80362084 (__ptmf_scall)
//	80AC7F84: 80AC828C (setAction__12daNpc_seiC_cFM12daNpc_seiC_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::action() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/action__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC7F9C-80AC801C 0080+00 s=1 e=0 z=0  None .text      beforeMove__12daNpc_seiC_cFv                                 */
//	80AC7FC4: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
//	80AC8000: 80AC8334 (ctrlWaitAnm__12daNpc_seiC_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::beforeMove() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/beforeMove__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC801C-80AC8078 005C+00 s=1 e=0 z=0  None .text      setAttnPos__12daNpc_seiC_cFv                                 */
//	80AC8030: 80149190 (setMtx__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/setAttnPos__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC8078-80AC8080 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__12daNpc_seiC_cFv                                */
// True False
//  bool False
bool daNpc_seiC_c::drawDbgInfo() {
	return false;
}


/* 80AC8080-80AC8218 0198+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__12daNpc_seiC_cFiifi                       */
//	80AC8090: 803621CC (_savegpr_25)
//	80AC809C: 80AC92F0 (cNullVec__6Z2Calc)
//	80AC80A0: 80AC92F0 (cNullVec__6Z2Calc)
//	80AC80D4: 8014810C (getTexSRTKeyAnmP__8daNpcT_cFPCci)
//	80AC8114: 80AC92BC (lit_4215)
//	80AC8118: 80AC92BC (lit_4215)
//	80AC8120: 80148338 (setBtkAnm__8daNpcT_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi)
//	80AC817C: 80148148 (getTevRegKeyAnmP__8daNpcT_cFPCci)
//	80AC81BC: 80AC92BC (lit_4215)
//	80AC81C0: 80AC92BC (lit_4215)
//	80AC81C8: 80148378 (setBrkAnm__8daNpcT_cFP15J3DAnmTevRegKeyP12J3DModelDatafi)
//	80AC8204: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  int False
asm void daNpc_seiC_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/afterSetMotionAnm__12daNpc_seiC_cFiifi.s"
}
#pragma pop


/* 80AC8218-80AC8260 0048+00 s=1 e=0 z=0  None .text      selectAction__12daNpc_seiC_cFv                               */
//	80AC8218: 803A2180 (__ptmf_null)
//	80AC821C: 803A2180 (__ptmf_null)
//	80AC8238: 80AC93D4 (lit_4467)
//	80AC823C: 80AC93D4 (lit_4467)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiC_c::selectAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/selectAction__12daNpc_seiC_cFv.s"
}
#pragma pop


/* 80AC8260-80AC828C 002C+00 s=1 e=0 z=0  None .text      chkAction__12daNpc_seiC_cFM12daNpc_seiC_cFPCvPvPv_i          */
//	80AC8270: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_seiC_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiC_c False
asm void daNpc_seiC_c::chkAction(int (daNpc_seiC_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/chkAction__12daNpc_seiC_cFM12daNpc_seiC_cFPCvPvPv_i.s"
}
#pragma pop


/* 80AC828C-80AC8334 00A8+00 s=2 e=0 z=0  None .text      setAction__12daNpc_seiC_cFM12daNpc_seiC_cFPCvPvPv_i          */
//	80AC82B4: 80362018 (__ptmf_test)
//	80AC82CC: 80362084 (__ptmf_scall)
//	80AC82F8: 80362018 (__ptmf_test)
//	80AC8310: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_seiC_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiC_c False
asm void daNpc_seiC_c::setAction(int (daNpc_seiC_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/setAction__12daNpc_seiC_cFM12daNpc_seiC_cFPCvPvPv_i.s"
}
#pragma pop


/* 80AC8334-80AC8338 0004+00 s=1 e=0 z=0  None .text      ctrlWaitAnm__12daNpc_seiC_cFv                                */
// True False
//  void False
void daNpc_seiC_c::ctrlWaitAnm() {
	/* empty function */
}


/* 80AC8338-80AC8364 002C+00 s=1 e=0 z=0  None .text      wait__12daNpc_seiC_cFPv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_seiC_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/wait__12daNpc_seiC_cFPv.s"
}
#pragma pop


/* 80AC8364-80AC8404 00A0+00 s=2 e=0 z=0  None .text      talk__12daNpc_seiC_cFPv                                      */
//	80AC83A0: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AC83C8: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80AC83D4: 804061C0 (g_dComIfG_gameInfo)
//	80AC83D8: 804061C0 (g_dComIfG_gameInfo)
//	80AC83E0: 80042468 (reset__14dEvt_control_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_seiC_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/talk__12daNpc_seiC_cFPv.s"
}
#pragma pop


/* 80AC8404-80AC8424 0020+00 s=1 e=0 z=0  None .text      daNpc_seiC_Create__FPv                                       */
//	80AC8410: 80AC75E8 (create__12daNpc_seiC_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_seiC_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/daNpc_seiC_Create__FPv.s"
}
#pragma pop


/* 80AC8424-80AC8444 0020+00 s=1 e=0 z=0  None .text      daNpc_seiC_Delete__FPv                                       */
//	80AC8430: 80AC7980 (Delete__12daNpc_seiC_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_seiC_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/daNpc_seiC_Delete__FPv.s"
}
#pragma pop


/* 80AC8444-80AC8464 0020+00 s=1 e=0 z=0  None .text      daNpc_seiC_Execute__FPv                                      */
//	80AC8450: 80AC79B4 (Execute__12daNpc_seiC_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_seiC_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/daNpc_seiC_Execute__FPv.s"
}
#pragma pop


/* 80AC8464-80AC8484 0020+00 s=1 e=0 z=0  None .text      daNpc_seiC_Draw__FPv                                         */
//	80AC8470: 80AC79D4 (Draw__12daNpc_seiC_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_seiC_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/daNpc_seiC_Draw__FPv.s"
}
#pragma pop


/* 80AC8484-80AC848C 0008+00 s=1 e=0 z=0  None .text      daNpc_seiC_IsDelete__FPv                                     */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_seiC_IsDelete(void* param_0) {
	return true;
}


/* 80AC848C-80AC84D4 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80AC84A4: 80AC946C (__vt__10cCcD_GStts)
//	80AC84A8: 80AC946C (__vt__10cCcD_GStts)
//	80AC84B8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80AC84D4-80AC885C 0388+00 s=1 e=0 z=0  None .text      __dt__8daNpcT_cFv                                            */
//	80AC84F4: 803B3A78 (__vt__8daNpcT_c)
//	80AC84F8: 803B3A78 (__vt__8daNpcT_c)
//	80AC850C: 80AC8898 (__dt__5csXyzFv)
//	80AC8510: 80AC8898 (__dt__5csXyzFv)
//	80AC851C: 80361CE8 (__destroy_arr)
//	80AC8528: 80AC949C (__vt__15daNpcT_JntAnm_c)
//	80AC852C: 80AC949C (__vt__15daNpcT_JntAnm_c)
//	80AC8538: 80AC885C (__dt__4cXyzFv)
//	80AC853C: 80AC885C (__dt__4cXyzFv)
//	80AC8548: 80361CE8 (__destroy_arr)
//	80AC8550: 80AC885C (__dt__4cXyzFv)
//	80AC8554: 80AC885C (__dt__4cXyzFv)
//	80AC8560: 80361CE8 (__destroy_arr)
//	80AC8568: 80AC885C (__dt__4cXyzFv)
//	80AC856C: 80AC885C (__dt__4cXyzFv)
//	80AC8578: 80361CE8 (__destroy_arr)
//	80AC8580: 80AC885C (__dt__4cXyzFv)
//	80AC8584: 80AC885C (__dt__4cXyzFv)
//	80AC8590: 80361CE8 (__destroy_arr)
//	80AC8598: 80AC885C (__dt__4cXyzFv)
//	80AC859C: 80AC885C (__dt__4cXyzFv)
//	80AC85A8: 80361CE8 (__destroy_arr)
//	80AC85B0: 80AC885C (__dt__4cXyzFv)
//	80AC85B4: 80AC885C (__dt__4cXyzFv)
//	80AC85C0: 80361CE8 (__destroy_arr)
//	80AC85CC: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC85D0: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC85E0: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC85E4: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC85F4: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC85F8: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8608: 80AC9484 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC860C: 80AC9484 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC861C: 80AC9484 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC8620: 80AC9484 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC8630: 80077CDC (__dt__11dBgS_LinChkFv)
//	80AC863C: 800775F0 (__dt__11dBgS_GndChkFv)
//	80AC8648: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC864C: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC8664: 80AC9478 (__vt__10dCcD_GStts)
//	80AC8668: 80AC9478 (__vt__10dCcD_GStts)
//	80AC8678: 80AC946C (__vt__10cCcD_GStts)
//	80AC867C: 80AC946C (__vt__10cCcD_GStts)
//	80AC868C: 803C3728 (__vt__9cCcD_Stts)
//	80AC8690: 803C3728 (__vt__9cCcD_Stts)
//	80AC86A0: 80249F48 (__dt__10dMsgFlow_cFv)
//	80AC86AC: 80267C94 (__dt__11cBgS_GndChkFv)
//	80AC86B8: 80AC9460 (__vt__12dBgS_AcchCir)
//	80AC86BC: 80AC9460 (__vt__12dBgS_AcchCir)
//	80AC86CC: 8026EF18 (__dt__8cM3dGCirFv)
//	80AC86D8: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AC86E4: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC86E8: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC8700: 80AC9478 (__vt__10dCcD_GStts)
//	80AC8704: 80AC9478 (__vt__10dCcD_GStts)
//	80AC8714: 80AC946C (__vt__10cCcD_GStts)
//	80AC8718: 80AC946C (__vt__10cCcD_GStts)
//	80AC8728: 803C3728 (__vt__9cCcD_Stts)
//	80AC872C: 803C3728 (__vt__9cCcD_Stts)
//	80AC873C: 80AC943C (__vt__12dBgS_ObjAcch)
//	80AC8740: 80AC943C (__vt__12dBgS_ObjAcch)
//	80AC8760: 80075F94 (__dt__9dBgS_AcchFv)
//	80AC877C: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC8780: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC87A0: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC87A4: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC87C4: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC87C8: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC87E8: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC87EC: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC880C: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC8810: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC8820: 802C0420 (__dt__10Z2CreatureFv)
//	80AC882C: 80018C8C (__dt__10fopAc_ac_cFv)
//	80AC883C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_c::~daNpcT_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__8daNpcT_cFv.s"
}
#pragma pop


/* 80AC885C-80AC8898 003C+00 s=3 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80AC887C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__4cXyzFv.s"
}
#pragma pop


/* 80AC8898-80AC88D4 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80AC88B8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__5csXyzFv.s"
}
#pragma pop


/* 80AC88D4-80AC8CD8 0404+00 s=1 e=0 z=0  None .text      __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AC88E4: 803621C0 (_savegpr_22)
//	80AC890C: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC8910: 80AC921C (m__18daNpc_seiC_Param_c)
//	80AC8914: 80018B64 (__ct__10fopAc_ac_cFv)
//	80AC8918: 803B3A78 (__vt__8daNpcT_c)
//	80AC891C: 803B3A78 (__vt__8daNpcT_c)
//	80AC8938: 802C03C8 (__ct__10Z2CreatureFv)
//	80AC8940: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC8944: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC8954: 803283FC (init__12J3DFrameCtrlFs)
//	80AC8964: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC8968: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC8978: 803283FC (init__12J3DFrameCtrlFs)
//	80AC8988: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC898C: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC899C: 803283FC (init__12J3DFrameCtrlFs)
//	80AC89AC: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC89B0: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC89C0: 803283FC (init__12J3DFrameCtrlFs)
//	80AC89D0: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC89D4: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC89E4: 803283FC (init__12J3DFrameCtrlFs)
//	80AC89F8: 800760A0 (__ct__9dBgS_AcchFv)
//	80AC89FC: 80AC943C (__vt__12dBgS_ObjAcch)
//	80AC8A00: 80AC943C (__vt__12dBgS_ObjAcch)
//	80AC8A1C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80AC8A20: 803C3728 (__vt__9cCcD_Stts)
//	80AC8A24: 803C3728 (__vt__9cCcD_Stts)
//	80AC8A30: 80083760 (__ct__10dCcD_GSttsFv)
//	80AC8A34: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC8A38: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC8A4C: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80AC8A54: 80267C1C (__ct__11cBgS_GndChkFv)
//	80AC8A5C: 80249F00 (__ct__10dMsgFlow_cFv)
//	80AC8A60: 803C3728 (__vt__9cCcD_Stts)
//	80AC8A64: 803C3728 (__vt__9cCcD_Stts)
//	80AC8A70: 80083760 (__ct__10dCcD_GSttsFv)
//	80AC8A74: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC8A78: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC8A88: 8007757C (__ct__11dBgS_GndChkFv)
//	80AC8A90: 80077C68 (__ct__11dBgS_LinChkFv)
//	80AC8A94: 80AC9484 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC8A98: 80AC9484 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC8AAC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC8AB0: 80AC9484 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC8AB4: 80AC9484 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC8AC8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC8ACC: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8AD0: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8ADC: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC8AE0: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8AE4: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8AF0: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC8AF8: 80AC949C (__vt__15daNpcT_JntAnm_c)
//	80AC8AFC: 80AC949C (__vt__15daNpcT_JntAnm_c)
//	80AC8B04: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8B08: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8B14: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC8B1C: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8B20: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8B24: 80AC885C (__dt__4cXyzFv)
//	80AC8B28: 80AC885C (__dt__4cXyzFv)
//	80AC8B34: 80361D60 (__construct_array)
//	80AC8B3C: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8B40: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8B44: 80AC885C (__dt__4cXyzFv)
//	80AC8B48: 80AC885C (__dt__4cXyzFv)
//	80AC8B54: 80361D60 (__construct_array)
//	80AC8B5C: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8B60: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8B64: 80AC885C (__dt__4cXyzFv)
//	80AC8B68: 80AC885C (__dt__4cXyzFv)
//	80AC8B74: 80361D60 (__construct_array)
//	80AC8B7C: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8B80: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8B84: 80AC885C (__dt__4cXyzFv)
//	80AC8B88: 80AC885C (__dt__4cXyzFv)
//	80AC8B94: 80361D60 (__construct_array)
//	80AC8B9C: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8BA0: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8BA4: 80AC885C (__dt__4cXyzFv)
//	80AC8BA8: 80AC885C (__dt__4cXyzFv)
//	80AC8BB4: 80361D60 (__construct_array)
//	80AC8BBC: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8BC0: 80AC8DD8 (__ct__4cXyzFv)
//	80AC8BC4: 80AC885C (__dt__4cXyzFv)
//	80AC8BC8: 80AC885C (__dt__4cXyzFv)
//	80AC8BD4: 80361D60 (__construct_array)
//	80AC8BDC: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AC8BE4: 80AC8CD8 (__ct__5csXyzFv)
//	80AC8BE8: 80AC8CD8 (__ct__5csXyzFv)
//	80AC8BEC: 80AC8898 (__dt__5csXyzFv)
//	80AC8BF0: 80AC8898 (__dt__5csXyzFv)
//	80AC8BFC: 80361D60 (__construct_array)
//	80AC8C10: 80003458 (memset)
//	80AC8C18: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC8C20: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC8C28: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC8C30: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC8C38: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AC8C9C: 80267954 (cM_rndF__Ff)
//	80AC8CC4: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/func_80AC88D4.s"
}
#pragma pop


/* 80AC8CD8-80AC8CDC 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80AC8CDC-80AC8DD8 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv                                    */
//	80AC8CFC: 80AC949C (__vt__15daNpcT_JntAnm_c)
//	80AC8D00: 80AC949C (__vt__15daNpcT_JntAnm_c)
//	80AC8D0C: 80AC885C (__dt__4cXyzFv)
//	80AC8D10: 80AC885C (__dt__4cXyzFv)
//	80AC8D1C: 80361CE8 (__destroy_arr)
//	80AC8D24: 80AC885C (__dt__4cXyzFv)
//	80AC8D28: 80AC885C (__dt__4cXyzFv)
//	80AC8D34: 80361CE8 (__destroy_arr)
//	80AC8D3C: 80AC885C (__dt__4cXyzFv)
//	80AC8D40: 80AC885C (__dt__4cXyzFv)
//	80AC8D4C: 80361CE8 (__destroy_arr)
//	80AC8D54: 80AC885C (__dt__4cXyzFv)
//	80AC8D58: 80AC885C (__dt__4cXyzFv)
//	80AC8D64: 80361CE8 (__destroy_arr)
//	80AC8D6C: 80AC885C (__dt__4cXyzFv)
//	80AC8D70: 80AC885C (__dt__4cXyzFv)
//	80AC8D7C: 80361CE8 (__destroy_arr)
//	80AC8D84: 80AC885C (__dt__4cXyzFv)
//	80AC8D88: 80AC885C (__dt__4cXyzFv)
//	80AC8D94: 80361CE8 (__destroy_arr)
//	80AC8DA0: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8DA4: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8DB8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop


/* 80AC8DD8-80AC8DDC 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80AC8DDC-80AC8E24 0048+00 s=1 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv                                 */
//	80AC8DF4: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8DF8: 80AC9490 (__vt__18daNpcT_ActorMngr_c)
//	80AC8E08: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80AC8E24-80AC8E6C 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv                             */
//	80AC8E3C: 80AC9484 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC8E40: 80AC9484 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC8E50: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop


/* 80AC8E6C-80AC8EDC 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80AC8E8C: 80AC9460 (__vt__12dBgS_AcchCir)
//	80AC8E90: 80AC9460 (__vt__12dBgS_AcchCir)
//	80AC8EA0: 8026EF18 (__dt__8cM3dGCirFv)
//	80AC8EAC: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AC8EBC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80AC8EDC-80AC8F38 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80AC8EF4: 80AC9478 (__vt__10dCcD_GStts)
//	80AC8EF8: 80AC9478 (__vt__10dCcD_GStts)
//	80AC8F04: 80AC946C (__vt__10cCcD_GStts)
//	80AC8F08: 80AC946C (__vt__10cCcD_GStts)
//	80AC8F1C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80AC8F38-80AC8FA8 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80AC8F58: 80AC943C (__vt__12dBgS_ObjAcch)
//	80AC8F5C: 80AC943C (__vt__12dBgS_ObjAcch)
//	80AC8F78: 80075F94 (__dt__9dBgS_AcchFv)
//	80AC8F88: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80AC8FA8-80AC8FF0 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80AC8FC0: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC8FC4: 80AC9430 (__vt__12J3DFrameCtrl)
//	80AC8FD4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80AC8FF0-80AC8FF8 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__8daNpcT_cFv                            */
// True False
//  bool False
bool daNpcT_c::getEyeballMaterialNo() {
	return false;
}


/* 80AC8FF8-80AC8FFC 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi                               */
// True False
//  void False
//  int False
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
	/* empty function */
}


/* 80AC8FFC-80AC9004 0008+00 s=1 e=0 z=0  None .text      checkChangeJoint__8daNpcT_cFi                                */
// True False
//  bool False
//  int False
bool daNpcT_c::checkChangeJoint(int param_0) {
	return false;
}


/* 80AC9004-80AC900C 0008+00 s=1 e=0 z=0  None .text      checkRemoveJoint__8daNpcT_cFi                                */
// True False
//  bool False
//  int False
bool daNpcT_c::checkRemoveJoint(int param_0) {
	return false;
}


/* 80AC900C-80AC9014 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__8daNpcT_cFv                              */
// True False
//  s32 False
s32 daNpcT_c::getBackboneJointNo() {
	return -1;
}


/* 80AC9014-80AC901C 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__8daNpcT_cFv                                  */
// True False
//  s32 False
s32 daNpcT_c::getNeckJointNo() {
	return -1;
}


/* 80AC901C-80AC9024 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__8daNpcT_cFv                                  */
// True False
//  s32 False
s32 daNpcT_c::getHeadJointNo() {
	return -1;
}


/* 80AC9024-80AC902C 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootLJointNo() {
	return -1;
}


/* 80AC902C-80AC9034 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootRJointNo() {
	return -1;
}


/* 80AC9034-80AC903C 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballLMaterialNo() {
	return false;
}


/* 80AC903C-80AC9044 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballRMaterialNo() {
	return false;
}


/* 80AC9044-80AC9048 0004+00 s=1 e=0 z=0  None .text      afterJntAnm__8daNpcT_cFi                                     */
// True False
//  void False
//  int False
void daNpcT_c::afterJntAnm(int param_0) {
	/* empty function */
}


/* 80AC9048-80AC9050 0008+00 s=1 e=0 z=0  None .text      checkChangeEvt__8daNpcT_cFv                                  */
// True False
//  bool False
bool daNpcT_c::checkChangeEvt() {
	return false;
}


/* 80AC9050-80AC9058 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::evtEndProc() {
	return true;
}


/* 80AC9058-80AC905C 0004+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__8daNpcT_cFv                              */
// True False
//  void False
void daNpcT_c::setAfterTalkMotion() {
	/* empty function */
}


/* 80AC905C-80AC9060 0004+00 s=1 e=0 z=0  None .text      afterMoved__8daNpcT_cFv                                      */
// True False
//  void False
void daNpcT_c::afterMoved() {
	/* empty function */
}


/* 80AC9060-80AC9064 0004+00 s=1 e=0 z=0  None .text      setCollision__8daNpcT_cFv                                    */
// True False
//  void False
void daNpcT_c::setCollision() {
	/* empty function */
}


/* 80AC9064-80AC906C 0008+00 s=1 e=0 z=0  None .text      chkXYItems__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::chkXYItems() {
	return false;
}


/* 80AC906C-80AC9084 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcT_c::decTmr() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/decTmr__8daNpcT_cFv.s"
}
#pragma pop


/* 80AC9084-80AC9088 0004+00 s=1 e=0 z=0  None .text      drawOtherMdl__8daNpcT_cFv                                    */
// True False
//  void False
void daNpcT_c::drawOtherMdl() {
	/* empty function */
}


/* 80AC9088-80AC908C 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv                                       */
// True False
//  void False
void daNpcT_c::drawGhost() {
	/* empty function */
}


/* 80AC908C-80AC9094 0008+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__8daNpcT_cFiifi                        */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 80AC9094-80AC90C4 0030+00 s=1 e=0 z=0  None .text      getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c False
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop


/* 80AC90C4-80AC90F4 0030+00 s=1 e=0 z=0  None .text      getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_motionAnmData_c False
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop


/* 80AC90F4-80AC90F8 0004+00 s=1 e=0 z=0  None .text      changeAnm__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AC90F8-80AC90FC 0004+00 s=1 e=0 z=0  None .text      changeBck__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBck(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AC90FC-80AC9100 0004+00 s=1 e=0 z=0  None .text      changeBtp__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AC9100-80AC9104 0004+00 s=1 e=0 z=0  None .text      changeBtk__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
	/* empty function */
}


/* ############################################################################################## */
/* 80AC956C-80AC9578 000C+00 s=2 e=0 z=0  None .data      __vt__18daNpc_seiC_Param_c                                   */
SECTION_DATA void* __vt__18daNpc_seiC_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpc_seiC_Param_cFv,
};

/* 80AC9580-80AC958C 000C+00 s=1 e=0 z=0  None .bss       @3814                                                        */
static u8 lit_3814[12];

/* 80AC958C-80AC9590 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80AC9104-80AC916C 0068+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_seic_cpp                                     */
//	80AC9110: 80AC93A0 (mCutList__12daNpc_seiC_c)
//	80AC9114: 80AC93A0 (mCutList__12daNpc_seiC_c)
//	80AC9118: 803A2180 (__ptmf_null)
//	80AC911C: 803A2180 (__ptmf_null)
//	80AC9138: 80AC956C (__vt__18daNpc_seiC_Param_c)
//	80AC913C: 80AC956C (__vt__18daNpc_seiC_Param_c)
//	80AC9140: 80AC958C (l_HIO)
//	80AC9144: 80AC958C (l_HIO)
//	80AC9148: 80AC91B0 (__dt__18daNpc_seiC_Param_cFv)
//	80AC914C: 80AC91B0 (__dt__18daNpc_seiC_Param_cFv)
//	80AC9150: 80AC9580 (lit_3814)
//	80AC9154: 80AC9580 (lit_3814)
//	80AC9158: 80AC74D8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_seic_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__sinit_d_a_npc_seic_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80AC9104 = (void*)__sinit_d_a_npc_seic_cpp;
#pragma pop


/* 80AC916C-80AC91B0 0044+00 s=1 e=0 z=0  None .text      __ct__12daNpc_seiC_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AC9188: 80AC88D4 (__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AC918C: 80AC94A8 (__vt__12daNpc_seiC_c)
//	80AC9190: 80AC94A8 (__vt__12daNpc_seiC_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpc_seiC_c::daNpc_seiC_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/func_80AC916C.s"
}
#pragma pop


/* 80AC91B0-80AC91F8 0048+00 s=2 e=0 z=0  None .text      __dt__18daNpc_seiC_Param_cFv                                 */
//	80AC91C8: 80AC956C (__vt__18daNpc_seiC_Param_c)
//	80AC91CC: 80AC956C (__vt__18daNpc_seiC_Param_c)
//	80AC91DC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_seiC_Param_c::~daNpc_seiC_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/__dt__18daNpc_seiC_Param_cFv.s"
}
#pragma pop


/* 80AC91F8-80AC9200 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80AC91FC: 80AC8F38 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AC91F8() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/func_80AC91F8.s"
}
#pragma pop


/* 80AC9200-80AC9208 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80AC9204: 80AC8F38 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AC9200() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seic/d_a_npc_seic/func_80AC9200.s"
}
#pragma pop


