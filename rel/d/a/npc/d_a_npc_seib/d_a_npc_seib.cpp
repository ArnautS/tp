// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_seib
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_seib/d_a_npc_seib.h"

// 
// Types:
// 

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daNpcT_MotionSeqMngr_c {
	struct sequenceStepData_c {
	};

	/* 80145898 */ // False False
void initialize();
	/* 80145A24 */ // False False
void checkEndSequence();
	/* 80AC6C2C */ // True False
~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_motionAnmData_c {
};

struct daNpcT_evtData_c {
};

struct daNpcT_faceMotionAnmData_c {
};

struct daNpc_seiB_c {
	/* 80AC50EC */ // True False
~daNpc_seiB_c();
	/* 80AC5188 */ // True False
void create();
	/* 80AC53C8 */ // True False
void CreateHeap();
	/* 80AC5520 */ // True False
void Delete();
	/* 80AC5554 */ // True False
void Execute();
	/* 80AC5574 */ // True False
void Draw();
	/* 80AC5608 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80AC5628 */ // True False
void getType();
	/* 80AC5648 */ // True False
void getFlowNodeNo();
	/* 80AC5664 */ // True False
//  bool False
bool isDelete();
	/* 80AC566C */ // True False
void reset();
	/* 80AC57C4 */ // True False
void setParam();
	/* 80AC58F0 */ // True False
//  void False
void srchActors();
	/* 80AC58F4 */ // True False
void evtTalk();
	/* 80AC59F4 */ // True False
void evtCutProc();
	/* 80AC5ABC */ // True False
void action();
	/* 80AC5B44 */ // True False
void beforeMove();
	/* 80AC5BC4 */ // True False
void setAttnPos();
	/* 80AC5C20 */ // True False
//  bool False
bool drawDbgInfo();
	/* 80AC5C28 */ // True False
//  int False
//  int False
//  f32 False
//  int False
void afterSetMotionAnm(int, int, f32, int);
	/* 80AC5DC0 */ // True False
void selectAction();
	/* 80AC5E08 */ // True False
//  int (daNpc_seiB_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiB_c False
void chkAction(int (daNpc_seiB_c::*)(void*));
	/* 80AC5E34 */ // True False
//  int (daNpc_seiB_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiB_c False
void setAction(int (daNpc_seiB_c::*)(void*));
	/* 80AC5EDC */ // True False
void ctrlWaitAnm();
	/* 80AC6140 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80AC616C */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80AC6F74 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpc_seiB_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
};

struct daNpc_seiB_Param_c {
	/* 80AC6FB8 */ // True False
~daNpc_seiB_Param_c();
};

struct J3DAnmTextureSRTKey {
};

struct J3DJoint {
};

struct J3DModel {
};

struct cXyz {
	/* 80AC6664 */ // True False
~cXyz();
	/* 80AC6BE0 */ // True False
cXyz();
};

struct J3DAnmTevRegKey {
};

struct _GXColorS10 {
};

struct daNpcT_c {
	/* 8014810C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getTexSRTKeyAnmP(char const*, int);
	/* 80148148 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getTevRegKeyAnmP(char const*, int);
	/* 80148338 */ // False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBtkAnm(J3DAnmTextureSRTKey*, J3DModelData*, f32, int);
	/* 80148378 */ // False False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBrkAnm(J3DAnmTevRegKey*, J3DModelData*, f32, int);
	/* 801483F8 */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void loadRes(s8 const*, char const**);
	/* 801484AC */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void deleteRes(s8 const*, char const**);
	/* 8014852C */ // False False
void execute();
	/* 8014886C */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
	/* 80148C70 */ // False False
void setEnvTevColor();
	/* 80148CCC */ // False False
void setRoomNo();
	/* 801490D4 */ // False False
void ctrlBtk();
	/* 80149190 */ // False False
void setMtx();
	/* 8014951C */ // False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 8014997C */ // False False
void evtProc();
	/* 80149BB4 */ // False False
void setFootPos();
	/* 80149D7C */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
void setFootPrtcl(cXyz*, f32, f32);
	/* 8014A05C */ // False False
//  bool False
bool checkCullDraw();
	/* 8014A064 */ // False False
void twilight();
	/* 8014A0B0 */ // False False
void evtOrder();
	/* 8014A224 */ // False False
void evtChange();
	/* 8014A324 */ // False False
void clrParam();
	/* 8014A388 */ // False False
//  int False
//  bool False
void setFaceMotionAnm(int, bool);
	/* 8014A628 */ // False False
//  int False
//  f32 False
//  int False
void setMotionAnm(int, f32, int);
	/* 8014AA18 */ // False False
//  s16 False
void setAngle(s16);
	/* 8014BBF0 */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 8014BC78 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void talkProc(int*, int, fopAc_ac_c**, int);
	/* 80AC62DC */ // True False
~daNpcT_c();
	/* 80AC66DC */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80AC6DF8 */ // True False
//  bool False
bool getEyeballMaterialNo();
	/* 80AC6E00 */ // True False
//  void False
//  int False
void ctrlSubFaceMotion(int);
	/* 80AC6E04 */ // True False
//  bool False
//  int False
bool checkChangeJoint(int);
	/* 80AC6E0C */ // True False
//  bool False
//  int False
bool checkRemoveJoint(int);
	/* 80AC6E14 */ // True False
//  s32 False
s32 getBackboneJointNo();
	/* 80AC6E1C */ // True False
//  s32 False
s32 getNeckJointNo();
	/* 80AC6E24 */ // True False
//  s32 False
s32 getHeadJointNo();
	/* 80AC6E2C */ // True False
//  s32 False
s32 getFootLJointNo();
	/* 80AC6E34 */ // True False
//  s32 False
s32 getFootRJointNo();
	/* 80AC6E3C */ // True False
//  bool False
bool getEyeballLMaterialNo();
	/* 80AC6E44 */ // True False
//  bool False
bool getEyeballRMaterialNo();
	/* 80AC6E4C */ // True False
//  void False
//  int False
void afterJntAnm(int);
	/* 80AC6E50 */ // True False
//  bool False
bool checkChangeEvt();
	/* 80AC6E58 */ // True False
//  bool False
bool evtEndProc();
	/* 80AC6E60 */ // True False
//  void False
void setAfterTalkMotion();
	/* 80AC6E64 */ // True False
//  void False
void afterMoved();
	/* 80AC6E68 */ // True False
//  void False
void setCollision();
	/* 80AC6E6C */ // True False
//  bool False
bool chkXYItems();
	/* 80AC6E74 */ // True False
void decTmr();
	/* 80AC6E8C */ // True False
//  void False
void drawOtherMdl();
	/* 80AC6E90 */ // True False
//  void False
void drawGhost();
	/* 80AC6E94 */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetFaceMotionAnm(int, int, f32, int);
	/* 80AC6E9C */ // True False
//  daNpcT_faceMotionAnmData_c False
void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
	/* 80AC6ECC */ // True False
//  daNpcT_motionAnmData_c False
void getMotionAnm(daNpcT_motionAnmData_c);
	/* 80AC6EFC */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeAnm(int*, int*);
	/* 80AC6F00 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBck(int*, int*);
	/* 80AC6F04 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtp(int*, int*);
	/* 80AC6F08 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtk(int*, int*);
};

struct daNpcT_MatAnm_c {
	/* 80145764 */ // False False
void initialize();
};

struct daNpcT_JntAnm_c {
	/* 80146C98 */ // False False
void initialize();
	/* 80AC6AE4 */ // True False
~daNpcT_JntAnm_c();
};

struct daNpcT_ActorMngr_c {
	/* 801456D4 */ // False False
void initialize();
	/* 80AC6BE4 */ // True False
~daNpcT_ActorMngr_c();
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80AC6CE4 */ // True False
~dCcD_GStts();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80AC6D40 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80AC6C74 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct csXyz {
	/* 80AC66A0 */ // True False
~csXyz();
	/* 80AC6AE0 */ // True False
csXyz();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct dAttention_c {
	/* 80AC58DC */ // True False
//  int False
void getDistTable(int);
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cCcD_GStts {
	/* 80AC6294 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80AC6DB0 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpc_seiB_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpc_seiB_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpc_seiB_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpc_seiB_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_seiB_IsDelete(void*);

// True False
extern "C" void __dt__12daNpc_seiB_cFv();
// True False
extern "C" void create__12daNpc_seiB_cFv();
// True False
extern "C" void CreateHeap__12daNpc_seiB_cFv();
// True False
extern "C" void Delete__12daNpc_seiB_cFv();
// True False
extern "C" void Execute__12daNpc_seiB_cFv();
// True False
extern "C" void Draw__12daNpc_seiB_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__12daNpc_seiB_cFP10fopAc_ac_c();
// True False
extern "C" void getType__12daNpc_seiB_cFv();
// True False
extern "C" void getFlowNodeNo__12daNpc_seiB_cFv();
// True False
//  bool False
extern "C" bool isDelete__12daNpc_seiB_cFv();
// True False
extern "C" void reset__12daNpc_seiB_cFv();
// True False
extern "C" void setParam__12daNpc_seiB_cFv();
// True False
//  int False
extern "C" void getDistTable__12dAttention_cFi();
// True False
//  void False
extern "C" void srchActors__12daNpc_seiB_cFv();
// True False
extern "C" void evtTalk__12daNpc_seiB_cFv();
// True False
extern "C" void evtCutProc__12daNpc_seiB_cFv();
// True False
extern "C" void action__12daNpc_seiB_cFv();
// True False
extern "C" void beforeMove__12daNpc_seiB_cFv();
// True False
extern "C" void setAttnPos__12daNpc_seiB_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__12daNpc_seiB_cFv();
// True False
//  int False
//  int False
//  f32 False
//  int False
extern "C" void afterSetMotionAnm__12daNpc_seiB_cFiifi();
// True False
extern "C" void selectAction__12daNpc_seiB_cFv();
// True False
//  int (daNpc_seiB_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiB_c False
extern "C" void chkAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i();
// True False
//  int (daNpc_seiB_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiB_c False
extern "C" void setAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i();
// True False
extern "C" void ctrlWaitAnm__12daNpc_seiB_cFv();
// True False
//  void* False
// 	 void False
extern "C" void wait__12daNpc_seiB_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__12daNpc_seiB_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_seiB_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_seiB_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_seiB_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_seiB_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpc_seiB_IsDelete__FPv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__8daNpcT_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__15daNpcT_JntAnm_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  bool False
extern "C" bool getEyeballMaterialNo__8daNpcT_cFv();
// True False
//  void False
//  int False
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
// True False
//  bool False
//  int False
extern "C" bool checkChangeJoint__8daNpcT_cFi();
// True False
//  bool False
//  int False
extern "C" bool checkRemoveJoint__8daNpcT_cFi();
// True False
//  s32 False
extern "C" s32 getBackboneJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getNeckJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getHeadJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
// True False
//  void False
//  int False
extern "C" void afterJntAnm__8daNpcT_cFi();
// True False
//  bool False
extern "C" bool checkChangeEvt__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool evtEndProc__8daNpcT_cFv();
// True False
//  void False
extern "C" void setAfterTalkMotion__8daNpcT_cFv();
// True False
//  void False
extern "C" void afterMoved__8daNpcT_cFv();
// True False
//  void False
extern "C" void setCollision__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool chkXYItems__8daNpcT_cFv();
// True False
extern "C" void decTmr__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawOtherMdl__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawGhost__8daNpcT_cFv();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
// True False
//  daNpcT_faceMotionAnmData_c False
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
// True False
//  daNpcT_motionAnmData_c False
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeAnm__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBck__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtp__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtk__8daNpcT_cFPiPi();
// False False
extern "C" void __sinit_d_a_npc_seib_cpp();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__12daNpc_seiB_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __dt__18daNpc_seiB_Param_cFv();
// True False
extern "C" static void func_80AC7000();
// True False
extern "C" static void func_80AC7008();
extern "C" extern u32 const lit_4090;
extern "C" extern u32 const lit_4091;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtList[6];
extern "C" extern u8 l_faceMotionAnmData[28];
extern "C" extern u8 l_motionAnmData[112];
extern "C" extern u8 l_faceMotionSequenceData[16];
extern "C" extern u8 l_motionSequenceData[64];
extern "C" extern u8 data_80AC7250[32];
extern "C" extern u8 data_80AC7270[32];
extern "C" extern void* g_profile_NPC_SEIB[12];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__22daNpcT_MotionSeqMngr_c[3];
extern "C" extern void* __vt__18daNpcT_ActorMngr_c[3];
extern "C" extern void* __vt__15daNpcT_JntAnm_c[3];
extern "C" extern void* __vt__12daNpc_seiB_c[49];
extern "C" extern void* __vt__18daNpc_seiB_Param_c[3];

// 
// External References:
// 

// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_MatAnm_cFv();
// False False
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void checkEndSequence__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_JntAnm_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getTexSRTKeyAnmP__8daNpcT_cFPCci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getTevRegKeyAnmP__8daNpcT_cFPCci();
// False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBtkAnm__8daNpcT_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi();
// False False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBrkAnm__8daNpcT_cFP15J3DAnmTevRegKeyP12J3DModelDatafi();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
// False False
extern "C" void execute__8daNpcT_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
// False False
extern "C" void setEnvTevColor__8daNpcT_cFv();
// False False
extern "C" void setRoomNo__8daNpcT_cFv();
// False False
extern "C" void ctrlBtk__8daNpcT_cFv();
// False False
extern "C" void setMtx__8daNpcT_cFv();
// False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
// False False
extern "C" void evtProc__8daNpcT_cFv();
// False False
extern "C" void setFootPos__8daNpcT_cFv();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
// False False
//  bool False
extern "C" bool checkCullDraw__8daNpcT_cFv();
// False False
extern "C" void twilight__8daNpcT_cFv();
// False False
extern "C" void evtOrder__8daNpcT_cFv();
// False False
extern "C" void evtChange__8daNpcT_cFv();
// False False
extern "C" void clrParam__8daNpcT_cFv();
// False False
//  int False
//  bool False
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
// False False
//  int False
//  f32 False
//  int False
extern "C" void setMotionAnm__8daNpcT_cFifi();
// False False
//  s16 False
extern "C" void setAngle__8daNpcT_cFs();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 dist_table__12dAttention_c[6552];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80AC7024-80AC70B8 0094+00 s=4 e=0 z=0  None .rodata    m__18daNpc_seiB_Param_c                                      */
SECTION_RODATA static u8 const m__18daNpc_seiB_Param_c[148] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x45, 0x7A, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x96, 0x00, 0x00,
};

/* 80AC70B8-80AC70BC 0004+00 s=1 e=0 z=0  None .rodata    @4089                                                        */
SECTION_RODATA static u8 const lit_4089[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AC70BC-80AC70C0 0004+00 s=0 e=0 z=0  None .rodata    @4090                                                        */
SECTION_RODATA u32 const lit_4090 = 0x47800000;

/* 80AC70C0-80AC70C4 0004+00 s=0 e=0 z=0  None .rodata    @4091                                                        */
SECTION_RODATA u32 const lit_4091 = 0x3E4CCCCD;

/* 80AC70C4-80AC70C8 0004+00 s=2 e=0 z=0  None .rodata    @4215                                                        */
SECTION_RODATA static u32 const lit_4215 = 0x3F800000;

/* 80AC70C8-80AC70CC 0004+00 s=1 e=0 z=0  None .rodata    @4247                                                        */
SECTION_RODATA static u32 const lit_4247 = 0x42C80000;

/* 80AC70CC-80AC70D0 0004+00 s=1 e=0 z=0  None .rodata    @4292                                                        */
SECTION_RODATA static u32 const lit_4292 = 0xBF800000;

/* 80AC70D0-80AC70F8 0028+00 s=4 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80AC70D0[40] = {
	/* 80AC70D0 0001 stringBase_80AC70D0 @stringBase0 */
	0x00,
	/* 80AC70D1 0010 data_80AC70D1 None */
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x47, 0x45, 0x54, 0x49, 0x54, 0x45, 0x4D, 0x00,
	/* 80AC70E1 000C data_80AC70E1 None */
	0x4E, 0x4F, 0x5F, 0x52, 0x45, 0x53, 0x50, 0x4F, 0x4E, 0x53, 0x45, 0x00,
	/* 80AC70ED 000B data_80AC70ED None */
	0x73, 0x65, 0x69, 0x42, 0x00, 0x53, 0x65, 0x69, 0x62, 0x00, 0x00,
};

/* 80AC70F8-80AC7104 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC7104-80AC7118 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80AC7118-80AC7120 0008+00 s=1 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[8] = {
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x01,
};

/* 80AC7120-80AC7138 0018+00 s=0 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA void* l_evtList[6] = {
	(void*)(((char*)&struct_80AC70D0)+0x0) /* @stringBase0 */,
	(void*)NULL,
	(void*)(((char*)&struct_80AC70D0)+0x1) /* None */,
	(void*)NULL,
	(void*)(((char*)&struct_80AC70D0)+0x11) /* None */,
	(void*)NULL,
};

/* 80AC7138-80AC7140 0008+00 s=2 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[2] = {
	(void*)(((char*)&struct_80AC70D0)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80AC70D0)+0x1D) /* None */,
};

/* 80AC7140-80AC7144 0002+02 s=1 e=0 z=0  None .data      l_loadResPtrn0                                               */
SECTION_DATA static u16 l_loadResPtrn0[1 + 1 /* padding */] = {
	0x01FF,
	/* padding */
	0x0000,
};

/* 80AC7144-80AC714C 0008+00 s=1 e=0 z=0  None .data      l_loadResPtrnList                                            */
SECTION_DATA static void* l_loadResPtrnList[2] = {
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
};

/* 80AC714C-80AC7168 001C+00 s=0 e=0 z=0  None .data      l_faceMotionAnmData                                          */
SECTION_DATA u8 l_faceMotionAnmData[28] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC7168-80AC71D8 0070+00 s=0 e=0 z=0  None .data      l_motionAnmData                                              */
SECTION_DATA u8 l_motionAnmData[112] = {
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC71D8-80AC71E8 0010+00 s=0 e=0 z=0  None .data      l_faceMotionSequenceData                                     */
SECTION_DATA u8 l_faceMotionSequenceData[16] = {
	0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AC71E8-80AC7228 0040+00 s=0 e=0 z=0  None .data      l_motionSequenceData                                         */
SECTION_DATA u8 l_motionSequenceData[64] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AC7228-80AC722C 0004+00 s=1 e=0 z=0  None .data      mCutNameList__12daNpc_seiB_c                                 */
SECTION_DATA static void* mCutNameList__12daNpc_seiB_c = (void*)(((char*)&struct_80AC70D0)+0x0) /* @stringBase0 */;

/* 80AC722C-80AC7238 000C+00 s=2 e=0 z=0  None .data      mCutList__12daNpc_seiB_c                                     */
SECTION_DATA static u8 mCutList__12daNpc_seiB_c[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC7238-80AC7244 000C+00 s=1 e=0 z=0  None .data      @4342                                                        */
SECTION_DATA static void* lit_4342[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_seiB_cFPv,
};

/* 80AC7244-80AC7250 000C+00 s=1 e=0 z=0  None .data      @4352                                                        */
SECTION_DATA static void* lit_4352[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_seiB_cFPv,
};

/* 80AC7250-80AC7270 0020+00 s=0 e=0 z=0  None .data      btkAnmData$4416                                              */
SECTION_DATA u8 data_80AC7250[32] = {
	0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01,
};

/* 80AC7270-80AC7290 0020+00 s=0 e=0 z=0  None .data      brkAnmData$4417                                              */
SECTION_DATA u8 data_80AC7270[32] = {
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01,
};

/* 80AC7290-80AC729C 000C+00 s=1 e=0 z=0  None .data      @4467                                                        */
SECTION_DATA static void* lit_4467[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__12daNpc_seiB_cFPv,
};

/* 80AC729C-80AC72BC 0020+00 s=1 e=0 z=0  None .data      daNpc_seiB_MethodTable                                       */
SECTION_DATA static void* daNpc_seiB_MethodTable[8] = {
	(void*)daNpc_seiB_Create__FPv,
	(void*)daNpc_seiB_Delete__FPv,
	(void*)daNpc_seiB_Execute__FPv,
	(void*)daNpc_seiB_IsDelete__FPv,
	(void*)daNpc_seiB_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80AC72BC-80AC72EC 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_SEIB                                           */
SECTION_DATA void* g_profile_NPC_SEIB[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02650000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000E68,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01660000,
	(void*)&daNpc_seiB_MethodTable,
	(void*)0x00044000,
	(void*)0x000E0000,
};

/* 80AC72EC-80AC72F8 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80AC72F8-80AC731C 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AC7008,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AC7000,
};

/* 80AC731C-80AC7328 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80AC7328-80AC7334 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80AC7334-80AC7340 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80AC7340-80AC734C 000C+00 s=3 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c                               */
SECTION_DATA void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80AC734C-80AC7358 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcT_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80AC7358-80AC7364 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c                                      */
SECTION_DATA void* __vt__15daNpcT_JntAnm_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80AC7364-80AC7428 00C4+00 s=2 e=0 z=0  None .data      __vt__12daNpc_seiB_c                                         */
SECTION_DATA void* __vt__12daNpc_seiB_c[49] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daNpc_seiB_cFv,
	(void*)ctrlBtk__8daNpcT_cFv,
	(void*)ctrlSubFaceMotion__8daNpcT_cFi,
	(void*)checkChangeJoint__8daNpcT_cFi,
	(void*)checkRemoveJoint__8daNpcT_cFi,
	(void*)getBackboneJointNo__8daNpcT_cFv,
	(void*)getNeckJointNo__8daNpcT_cFv,
	(void*)getHeadJointNo__8daNpcT_cFv,
	(void*)getFootLJointNo__8daNpcT_cFv,
	(void*)getFootRJointNo__8daNpcT_cFv,
	(void*)getEyeballLMaterialNo__8daNpcT_cFv,
	(void*)getEyeballRMaterialNo__8daNpcT_cFv,
	(void*)getEyeballMaterialNo__8daNpcT_cFv,
	(void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
	(void*)afterJntAnm__8daNpcT_cFi,
	(void*)setParam__12daNpc_seiB_cFv,
	(void*)checkChangeEvt__8daNpcT_cFv,
	(void*)evtTalk__12daNpc_seiB_cFv,
	(void*)evtEndProc__8daNpcT_cFv,
	(void*)evtCutProc__12daNpc_seiB_cFv,
	(void*)setAfterTalkMotion__8daNpcT_cFv,
	(void*)evtProc__8daNpcT_cFv,
	(void*)action__12daNpc_seiB_cFv,
	(void*)beforeMove__12daNpc_seiB_cFv,
	(void*)afterMoved__8daNpcT_cFv,
	(void*)setAttnPos__12daNpc_seiB_cFv,
	(void*)setFootPos__8daNpcT_cFv,
	(void*)setCollision__8daNpcT_cFv,
	(void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
	(void*)checkCullDraw__8daNpcT_cFv,
	(void*)twilight__8daNpcT_cFv,
	(void*)chkXYItems__8daNpcT_cFv,
	(void*)evtOrder__8daNpcT_cFv,
	(void*)decTmr__8daNpcT_cFv,
	(void*)clrParam__8daNpcT_cFv,
	(void*)drawDbgInfo__12daNpc_seiB_cFv,
	(void*)drawOtherMdl__8daNpcT_cFv,
	(void*)drawGhost__8daNpcT_cFv,
	(void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
	(void*)afterSetMotionAnm__12daNpc_seiB_cFiifi,
	(void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
	(void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
	(void*)changeAnm__8daNpcT_cFPiPi,
	(void*)changeBck__8daNpcT_cFPiPi,
	(void*)changeBtp__8daNpcT_cFPiPi,
	(void*)changeBtk__8daNpcT_cFPiPi,
	(void*)setMotionAnm__8daNpcT_cFifi,
};

/* 80AC50EC-80AC5188 009C+00 s=1 e=0 z=0  None .text      __dt__12daNpc_seiB_cFv                                       */
//	80AC510C: 80AC7364 (__vt__12daNpc_seiB_c)
//	80AC5110: 80AC7364 (__vt__12daNpc_seiB_c)
//	80AC5128: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AC5138: 80AC7144 (l_loadResPtrnList)
//	80AC513C: 80AC7144 (l_loadResPtrnList)
//	80AC5144: 80AC7138 (l_resNameList)
//	80AC5148: 80AC7138 (l_resNameList)
//	80AC514C: 801484AC (deleteRes__8daNpcT_cFPCScPPCc)
//	80AC5158: 80AC62DC (__dt__8daNpcT_cFv)
//	80AC5168: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_seiB_c::~daNpc_seiB_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5188-80AC53C8 0240+00 s=1 e=0 z=0  None .text      create__12daNpc_seiB_cFv                                     */
//	80AC51A0: 80AC70F8 (cNullVec__6Z2Calc)
//	80AC51A4: 80AC70F8 (cNullVec__6Z2Calc)
//	80AC51E0: 80AC6F74 (__ct__12daNpc_seiB_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AC51F4: 80AC5628 (getType__12daNpc_seiB_cFv)
//	80AC5200: 80AC5648 (getFlowNodeNo__12daNpc_seiB_cFv)
//	80AC5228: 801483F8 (loadRes__8daNpcT_cFPCScPPCc)
//	80AC523C: 80AC5608 (createHeapCallBack__12daNpc_seiB_cFP10fopAc_ac_c)
//	80AC5240: 80AC5608 (createHeapCallBack__12daNpc_seiB_cFP10fopAc_ac_c)
//	80AC5248: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80AC5260: 80AC5664 (isDelete__12daNpc_seiB_cFv)
//	80AC5298: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80AC52C4: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80AC52CC: 804061C0 (g_dComIfG_gameInfo)
//	80AC52D0: 804061C0 (g_dComIfG_gameInfo)
//	80AC52D8: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80AC5358: 80148C70 (setEnvTevColor__8daNpcT_cFv)
//	80AC5360: 80148CCC (setRoomNo__8daNpcT_cFv)
//	80AC5368: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC536C: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC5388: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80AC5390: 80AC566C (reset__12daNpc_seiB_cFv)
//	80AC53A0: 80AC5554 (Execute__12daNpc_seiB_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/create__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC53C8-80AC5520 0158+00 s=1 e=0 z=0  None .text      CreateHeap__12daNpc_seiB_cFv                                 */
//	80AC53E0: 80AC7118 (l_bmdData)
//	80AC53E4: 80AC7118 (l_bmdData)
//	80AC53F0: 80AC7138 (l_resNameList)
//	80AC53F4: 80AC7138 (l_resNameList)
//	80AC5400: 804061C0 (g_dComIfG_gameInfo)
//	80AC5404: 804061C0 (g_dComIfG_gameInfo)
//	80AC5414: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80AC5420: 802CEC4C (__nw__FUl)
//	80AC545C: 80AC70C4 (lit_4215)
//	80AC5460: 80AC70C4 (lit_4215)
//	80AC546C: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80AC5490: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AC54C4: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	80AC54D8: 80AC70B8 (lit_4089)
//	80AC54DC: 80AC70B8 (lit_4089)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/CreateHeap__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5520-80AC5554 0034+00 s=1 e=0 z=0  None .text      Delete__12daNpc_seiB_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/Delete__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5554-80AC5574 0020+00 s=2 e=0 z=0  None .text      Execute__12daNpc_seiB_cFv                                    */
//	80AC5560: 8014852C (execute__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/Execute__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5574-80AC5608 0094+00 s=1 e=0 z=0  None .text      Draw__12daNpc_seiB_cFv                                       */
//	80AC5584: 803621DC (_savegpr_29)
//	80AC55D8: 80AC70C8 (lit_4247)
//	80AC55DC: 80AC70C8 (lit_4247)
//	80AC55EC: 8014886C (draw__8daNpcT_cFiifP11_GXColorS10fiii)
//	80AC55F4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/Draw__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5608-80AC5628 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__12daNpc_seiB_cFP10fopAc_ac_c             */
//	80AC5614: 80AC53C8 (CreateHeap__12daNpc_seiB_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpc_seiB_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/createHeapCallBack__12daNpc_seiB_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80AC5628-80AC5648 0020+00 s=1 e=0 z=0  None .text      getType__12daNpc_seiB_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::getType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/getType__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5648-80AC5664 001C+00 s=1 e=0 z=0  None .text      getFlowNodeNo__12daNpc_seiB_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::getFlowNodeNo() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/getFlowNodeNo__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5664-80AC566C 0008+00 s=1 e=0 z=0  None .text      isDelete__12daNpc_seiB_cFv                                   */
// True False
//  bool False
bool daNpc_seiB_c::isDelete() {
	return false;
}


/* 80AC566C-80AC57C4 0158+00 s=1 e=0 z=0  None .text      reset__12daNpc_seiB_cFv                                      */
//	80AC567C: 803621DC (_savegpr_29)
//	80AC5684: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC5688: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC569C: 80003458 (memset)
//	80AC56A4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC56AC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC56B4: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC56BC: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC56C4: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AC5728: 80267954 (cM_rndF__Ff)
//	80AC5758: 80003458 (memset)
//	80AC5768: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80AC5774: 8014AA18 (setAngle__8daNpcT_cFs)
//	80AC578C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC57B0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/reset__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC57C4-80AC58DC 0118+00 s=1 e=0 z=0  None .text      setParam__12daNpc_seiB_cFv                                   */
//	80AC57E4: 80AC5DC0 (selectAction__12daNpc_seiB_cFv)
//	80AC57EC: 80AC58F0 (srchActors__12daNpc_seiB_cFv)
//	80AC57F0: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC57F4: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC5800: 80AC58DC (getDistTable__12dAttention_cFi)
//	80AC580C: 80AC58DC (getDistTable__12dAttention_cFi)
//	80AC5818: 80AC58DC (getDistTable__12dAttention_cFi)
//	80AC5824: 80AC58DC (getDistTable__12dAttention_cFi)
//	80AC5844: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC5848: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC5888: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80AC588C: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC5890: 80AC7024 (m__18daNpc_seiB_Param_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/setParam__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC58DC-80AC58F0 0014+00 s=1 e=0 z=0  None .text      getDistTable__12dAttention_cFi                               */
//	80AC58E0: 803A9C70 (dist_table__12dAttention_c)
//	80AC58E4: 803A9C70 (dist_table__12dAttention_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void dAttention_c::getDistTable(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/getDistTable__12dAttention_cFi.s"
}
#pragma pop


/* 80AC58F0-80AC58F4 0004+00 s=1 e=0 z=0  None .text      srchActors__12daNpc_seiB_cFv                                 */
// True False
//  void False
void daNpc_seiB_c::srchActors() {
	/* empty function */
}


/* 80AC58F4-80AC59F4 0100+00 s=1 e=0 z=0  None .text      evtTalk__12daNpc_seiB_cFv                                    */
//	80AC5908: 80AC7238 (lit_4342)
//	80AC590C: 80AC7238 (lit_4342)
//	80AC592C: 80AC5E08 (chkAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i)
//	80AC5944: 80362084 (__ptmf_scall)
//	80AC5958: 804061C0 (g_dComIfG_gameInfo)
//	80AC595C: 804061C0 (g_dComIfG_gameInfo)
//	80AC5984: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80AC59A4: 8014A224 (evtChange__8daNpcT_cFv)
//	80AC59B0: 80AC7244 (lit_4352)
//	80AC59B4: 80AC7244 (lit_4352)
//	80AC59D8: 80AC5E34 (setAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::evtTalk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/evtTalk__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC59F4-80AC5ABC 00C8+00 s=1 e=0 z=0  None .text      evtCutProc__12daNpc_seiB_cFv                                 */
//	80AC5A04: 803621DC (_savegpr_29)
//	80AC5A10: 804061C0 (g_dComIfG_gameInfo)
//	80AC5A14: 804061C0 (g_dComIfG_gameInfo)
//	80AC5A20: 80AC70D0 (struct_80AC70D0)
//	80AC5A24: 80AC70D0 (struct_80AC70D0)
//	80AC5A34: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80AC5A4C: 80AC7228 (mCutNameList__12daNpc_seiB_c)
//	80AC5A50: 80AC7228 (mCutNameList__12daNpc_seiB_c)
//	80AC5A60: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80AC5A74: 80AC722C (mCutList__12daNpc_seiB_c)
//	80AC5A78: 80AC722C (mCutList__12daNpc_seiB_c)
//	80AC5A80: 80362084 (__ptmf_scall)
//	80AC5A98: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80AC5AA8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::evtCutProc() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/evtCutProc__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5ABC-80AC5B44 0088+00 s=1 e=0 z=0  None .text      action__12daNpc_seiB_cFv                                     */
//	80AC5AD4: 80362018 (__ptmf_test)
//	80AC5AE8: 80362048 (__ptmf_cmpr)
//	80AC5B00: 80362084 (__ptmf_scall)
//	80AC5B2C: 80AC5E34 (setAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::action() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/action__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5B44-80AC5BC4 0080+00 s=1 e=0 z=0  None .text      beforeMove__12daNpc_seiB_cFv                                 */
//	80AC5B6C: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
//	80AC5BA8: 80AC5EDC (ctrlWaitAnm__12daNpc_seiB_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::beforeMove() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/beforeMove__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5BC4-80AC5C20 005C+00 s=1 e=0 z=0  None .text      setAttnPos__12daNpc_seiB_cFv                                 */
//	80AC5BD8: 80149190 (setMtx__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/setAttnPos__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5C20-80AC5C28 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__12daNpc_seiB_cFv                                */
// True False
//  bool False
bool daNpc_seiB_c::drawDbgInfo() {
	return false;
}


/* 80AC5C28-80AC5DC0 0198+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__12daNpc_seiB_cFiifi                       */
//	80AC5C38: 803621CC (_savegpr_25)
//	80AC5C44: 80AC70F8 (cNullVec__6Z2Calc)
//	80AC5C48: 80AC70F8 (cNullVec__6Z2Calc)
//	80AC5C7C: 8014810C (getTexSRTKeyAnmP__8daNpcT_cFPCci)
//	80AC5CBC: 80AC70C4 (lit_4215)
//	80AC5CC0: 80AC70C4 (lit_4215)
//	80AC5CC8: 80148338 (setBtkAnm__8daNpcT_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi)
//	80AC5D24: 80148148 (getTevRegKeyAnmP__8daNpcT_cFPCci)
//	80AC5D64: 80AC70C4 (lit_4215)
//	80AC5D68: 80AC70C4 (lit_4215)
//	80AC5D70: 80148378 (setBrkAnm__8daNpcT_cFP15J3DAnmTevRegKeyP12J3DModelDatafi)
//	80AC5DAC: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  int False
asm void daNpc_seiB_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/afterSetMotionAnm__12daNpc_seiB_cFiifi.s"
}
#pragma pop


/* 80AC5DC0-80AC5E08 0048+00 s=1 e=0 z=0  None .text      selectAction__12daNpc_seiB_cFv                               */
//	80AC5DC0: 803A2180 (__ptmf_null)
//	80AC5DC4: 803A2180 (__ptmf_null)
//	80AC5DE0: 80AC7290 (lit_4467)
//	80AC5DE4: 80AC7290 (lit_4467)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::selectAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/selectAction__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC5E08-80AC5E34 002C+00 s=1 e=0 z=0  None .text      chkAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i          */
//	80AC5E18: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_seiB_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiB_c False
asm void daNpc_seiB_c::chkAction(int (daNpc_seiB_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/chkAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i.s"
}
#pragma pop


/* 80AC5E34-80AC5EDC 00A8+00 s=2 e=0 z=0  None .text      setAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i          */
//	80AC5E5C: 80362018 (__ptmf_test)
//	80AC5E74: 80362084 (__ptmf_scall)
//	80AC5EA0: 80362018 (__ptmf_test)
//	80AC5EB8: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_seiB_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_seiB_c False
asm void daNpc_seiB_c::setAction(int (daNpc_seiB_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/setAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i.s"
}
#pragma pop


/* 80AC5EDC-80AC6140 0264+00 s=1 e=0 z=0  None .text      ctrlWaitAnm__12daNpc_seiB_cFv                                */
//	80AC5F48: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC5F58: 80AC70CC (lit_4292)
//	80AC5F5C: 80AC70CC (lit_4292)
//	80AC5F80: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC5F90: 80AC70CC (lit_4292)
//	80AC5F94: 80AC70CC (lit_4292)
//	80AC5FB0: 80145A24 (checkEndSequence__22daNpcT_MotionSeqMngr_cFv)
//	80AC5FD0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC5FE0: 80AC70CC (lit_4292)
//	80AC5FE4: 80AC70CC (lit_4292)
//	80AC6008: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC6018: 80AC70CC (lit_4292)
//	80AC601C: 80AC70CC (lit_4292)
//	80AC6050: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC6060: 80AC70CC (lit_4292)
//	80AC6064: 80AC70CC (lit_4292)
//	80AC6088: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC6098: 80AC70CC (lit_4292)
//	80AC609C: 80AC70CC (lit_4292)
//	80AC60B8: 80145A24 (checkEndSequence__22daNpcT_MotionSeqMngr_cFv)
//	80AC60D8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC60E8: 80AC70CC (lit_4292)
//	80AC60EC: 80AC70CC (lit_4292)
//	80AC610C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC611C: 80AC70CC (lit_4292)
//	80AC6120: 80AC70CC (lit_4292)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_seiB_c::ctrlWaitAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/ctrlWaitAnm__12daNpc_seiB_cFv.s"
}
#pragma pop


/* 80AC6140-80AC616C 002C+00 s=1 e=0 z=0  None .text      wait__12daNpc_seiB_cFPv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_seiB_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/wait__12daNpc_seiB_cFPv.s"
}
#pragma pop


/* 80AC616C-80AC620C 00A0+00 s=2 e=0 z=0  None .text      talk__12daNpc_seiB_cFPv                                      */
//	80AC61A8: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AC61D0: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80AC61DC: 804061C0 (g_dComIfG_gameInfo)
//	80AC61E0: 804061C0 (g_dComIfG_gameInfo)
//	80AC61E8: 80042468 (reset__14dEvt_control_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_seiB_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/talk__12daNpc_seiB_cFPv.s"
}
#pragma pop


/* 80AC620C-80AC622C 0020+00 s=1 e=0 z=0  None .text      daNpc_seiB_Create__FPv                                       */
//	80AC6218: 80AC5188 (create__12daNpc_seiB_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_seiB_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/daNpc_seiB_Create__FPv.s"
}
#pragma pop


/* 80AC622C-80AC624C 0020+00 s=1 e=0 z=0  None .text      daNpc_seiB_Delete__FPv                                       */
//	80AC6238: 80AC5520 (Delete__12daNpc_seiB_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_seiB_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/daNpc_seiB_Delete__FPv.s"
}
#pragma pop


/* 80AC624C-80AC626C 0020+00 s=1 e=0 z=0  None .text      daNpc_seiB_Execute__FPv                                      */
//	80AC6258: 80AC5554 (Execute__12daNpc_seiB_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_seiB_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/daNpc_seiB_Execute__FPv.s"
}
#pragma pop


/* 80AC626C-80AC628C 0020+00 s=1 e=0 z=0  None .text      daNpc_seiB_Draw__FPv                                         */
//	80AC6278: 80AC5574 (Draw__12daNpc_seiB_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_seiB_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/daNpc_seiB_Draw__FPv.s"
}
#pragma pop


/* 80AC628C-80AC6294 0008+00 s=1 e=0 z=0  None .text      daNpc_seiB_IsDelete__FPv                                     */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_seiB_IsDelete(void* param_0) {
	return true;
}


/* 80AC6294-80AC62DC 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80AC62AC: 80AC7328 (__vt__10cCcD_GStts)
//	80AC62B0: 80AC7328 (__vt__10cCcD_GStts)
//	80AC62C0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80AC62DC-80AC6664 0388+00 s=1 e=0 z=0  None .text      __dt__8daNpcT_cFv                                            */
//	80AC62FC: 803B3A78 (__vt__8daNpcT_c)
//	80AC6300: 803B3A78 (__vt__8daNpcT_c)
//	80AC6314: 80AC66A0 (__dt__5csXyzFv)
//	80AC6318: 80AC66A0 (__dt__5csXyzFv)
//	80AC6324: 80361CE8 (__destroy_arr)
//	80AC6330: 80AC7358 (__vt__15daNpcT_JntAnm_c)
//	80AC6334: 80AC7358 (__vt__15daNpcT_JntAnm_c)
//	80AC6340: 80AC6664 (__dt__4cXyzFv)
//	80AC6344: 80AC6664 (__dt__4cXyzFv)
//	80AC6350: 80361CE8 (__destroy_arr)
//	80AC6358: 80AC6664 (__dt__4cXyzFv)
//	80AC635C: 80AC6664 (__dt__4cXyzFv)
//	80AC6368: 80361CE8 (__destroy_arr)
//	80AC6370: 80AC6664 (__dt__4cXyzFv)
//	80AC6374: 80AC6664 (__dt__4cXyzFv)
//	80AC6380: 80361CE8 (__destroy_arr)
//	80AC6388: 80AC6664 (__dt__4cXyzFv)
//	80AC638C: 80AC6664 (__dt__4cXyzFv)
//	80AC6398: 80361CE8 (__destroy_arr)
//	80AC63A0: 80AC6664 (__dt__4cXyzFv)
//	80AC63A4: 80AC6664 (__dt__4cXyzFv)
//	80AC63B0: 80361CE8 (__destroy_arr)
//	80AC63B8: 80AC6664 (__dt__4cXyzFv)
//	80AC63BC: 80AC6664 (__dt__4cXyzFv)
//	80AC63C8: 80361CE8 (__destroy_arr)
//	80AC63D4: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC63D8: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC63E8: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC63EC: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC63FC: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC6400: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC6410: 80AC7340 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC6414: 80AC7340 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC6424: 80AC7340 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC6428: 80AC7340 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC6438: 80077CDC (__dt__11dBgS_LinChkFv)
//	80AC6444: 800775F0 (__dt__11dBgS_GndChkFv)
//	80AC6450: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC6454: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC646C: 80AC7334 (__vt__10dCcD_GStts)
//	80AC6470: 80AC7334 (__vt__10dCcD_GStts)
//	80AC6480: 80AC7328 (__vt__10cCcD_GStts)
//	80AC6484: 80AC7328 (__vt__10cCcD_GStts)
//	80AC6494: 803C3728 (__vt__9cCcD_Stts)
//	80AC6498: 803C3728 (__vt__9cCcD_Stts)
//	80AC64A8: 80249F48 (__dt__10dMsgFlow_cFv)
//	80AC64B4: 80267C94 (__dt__11cBgS_GndChkFv)
//	80AC64C0: 80AC731C (__vt__12dBgS_AcchCir)
//	80AC64C4: 80AC731C (__vt__12dBgS_AcchCir)
//	80AC64D4: 8026EF18 (__dt__8cM3dGCirFv)
//	80AC64E0: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AC64EC: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC64F0: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC6508: 80AC7334 (__vt__10dCcD_GStts)
//	80AC650C: 80AC7334 (__vt__10dCcD_GStts)
//	80AC651C: 80AC7328 (__vt__10cCcD_GStts)
//	80AC6520: 80AC7328 (__vt__10cCcD_GStts)
//	80AC6530: 803C3728 (__vt__9cCcD_Stts)
//	80AC6534: 803C3728 (__vt__9cCcD_Stts)
//	80AC6544: 80AC72F8 (__vt__12dBgS_ObjAcch)
//	80AC6548: 80AC72F8 (__vt__12dBgS_ObjAcch)
//	80AC6568: 80075F94 (__dt__9dBgS_AcchFv)
//	80AC6584: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC6588: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC65A8: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC65AC: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC65CC: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC65D0: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC65F0: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC65F4: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC6614: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC6618: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC6628: 802C0420 (__dt__10Z2CreatureFv)
//	80AC6634: 80018C8C (__dt__10fopAc_ac_cFv)
//	80AC6644: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_c::~daNpcT_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__8daNpcT_cFv.s"
}
#pragma pop


/* 80AC6664-80AC66A0 003C+00 s=3 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80AC6684: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__4cXyzFv.s"
}
#pragma pop


/* 80AC66A0-80AC66DC 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80AC66C0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__5csXyzFv.s"
}
#pragma pop


/* 80AC66DC-80AC6AE0 0404+00 s=1 e=0 z=0  None .text      __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AC66EC: 803621C0 (_savegpr_22)
//	80AC6714: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC6718: 80AC7024 (m__18daNpc_seiB_Param_c)
//	80AC671C: 80018B64 (__ct__10fopAc_ac_cFv)
//	80AC6720: 803B3A78 (__vt__8daNpcT_c)
//	80AC6724: 803B3A78 (__vt__8daNpcT_c)
//	80AC6740: 802C03C8 (__ct__10Z2CreatureFv)
//	80AC6748: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC674C: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC675C: 803283FC (init__12J3DFrameCtrlFs)
//	80AC676C: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC6770: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC6780: 803283FC (init__12J3DFrameCtrlFs)
//	80AC6790: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC6794: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC67A4: 803283FC (init__12J3DFrameCtrlFs)
//	80AC67B4: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC67B8: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC67C8: 803283FC (init__12J3DFrameCtrlFs)
//	80AC67D8: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC67DC: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC67EC: 803283FC (init__12J3DFrameCtrlFs)
//	80AC6800: 800760A0 (__ct__9dBgS_AcchFv)
//	80AC6804: 80AC72F8 (__vt__12dBgS_ObjAcch)
//	80AC6808: 80AC72F8 (__vt__12dBgS_ObjAcch)
//	80AC6824: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80AC6828: 803C3728 (__vt__9cCcD_Stts)
//	80AC682C: 803C3728 (__vt__9cCcD_Stts)
//	80AC6838: 80083760 (__ct__10dCcD_GSttsFv)
//	80AC683C: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC6840: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC6854: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80AC685C: 80267C1C (__ct__11cBgS_GndChkFv)
//	80AC6864: 80249F00 (__ct__10dMsgFlow_cFv)
//	80AC6868: 803C3728 (__vt__9cCcD_Stts)
//	80AC686C: 803C3728 (__vt__9cCcD_Stts)
//	80AC6878: 80083760 (__ct__10dCcD_GSttsFv)
//	80AC687C: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC6880: 803AC2E4 (__vt__9dCcD_Stts)
//	80AC6890: 8007757C (__ct__11dBgS_GndChkFv)
//	80AC6898: 80077C68 (__ct__11dBgS_LinChkFv)
//	80AC689C: 80AC7340 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC68A0: 80AC7340 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC68B4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC68B8: 80AC7340 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC68BC: 80AC7340 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC68D0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC68D4: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC68D8: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC68E4: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC68E8: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC68EC: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC68F8: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC6900: 80AC7358 (__vt__15daNpcT_JntAnm_c)
//	80AC6904: 80AC7358 (__vt__15daNpcT_JntAnm_c)
//	80AC690C: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC6910: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC691C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC6924: 80AC6BE0 (__ct__4cXyzFv)
//	80AC6928: 80AC6BE0 (__ct__4cXyzFv)
//	80AC692C: 80AC6664 (__dt__4cXyzFv)
//	80AC6930: 80AC6664 (__dt__4cXyzFv)
//	80AC693C: 80361D60 (__construct_array)
//	80AC6944: 80AC6BE0 (__ct__4cXyzFv)
//	80AC6948: 80AC6BE0 (__ct__4cXyzFv)
//	80AC694C: 80AC6664 (__dt__4cXyzFv)
//	80AC6950: 80AC6664 (__dt__4cXyzFv)
//	80AC695C: 80361D60 (__construct_array)
//	80AC6964: 80AC6BE0 (__ct__4cXyzFv)
//	80AC6968: 80AC6BE0 (__ct__4cXyzFv)
//	80AC696C: 80AC6664 (__dt__4cXyzFv)
//	80AC6970: 80AC6664 (__dt__4cXyzFv)
//	80AC697C: 80361D60 (__construct_array)
//	80AC6984: 80AC6BE0 (__ct__4cXyzFv)
//	80AC6988: 80AC6BE0 (__ct__4cXyzFv)
//	80AC698C: 80AC6664 (__dt__4cXyzFv)
//	80AC6990: 80AC6664 (__dt__4cXyzFv)
//	80AC699C: 80361D60 (__construct_array)
//	80AC69A4: 80AC6BE0 (__ct__4cXyzFv)
//	80AC69A8: 80AC6BE0 (__ct__4cXyzFv)
//	80AC69AC: 80AC6664 (__dt__4cXyzFv)
//	80AC69B0: 80AC6664 (__dt__4cXyzFv)
//	80AC69BC: 80361D60 (__construct_array)
//	80AC69C4: 80AC6BE0 (__ct__4cXyzFv)
//	80AC69C8: 80AC6BE0 (__ct__4cXyzFv)
//	80AC69CC: 80AC6664 (__dt__4cXyzFv)
//	80AC69D0: 80AC6664 (__dt__4cXyzFv)
//	80AC69DC: 80361D60 (__construct_array)
//	80AC69E4: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AC69EC: 80AC6AE0 (__ct__5csXyzFv)
//	80AC69F0: 80AC6AE0 (__ct__5csXyzFv)
//	80AC69F4: 80AC66A0 (__dt__5csXyzFv)
//	80AC69F8: 80AC66A0 (__dt__5csXyzFv)
//	80AC6A04: 80361D60 (__construct_array)
//	80AC6A18: 80003458 (memset)
//	80AC6A20: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC6A28: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AC6A30: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC6A38: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AC6A40: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AC6AA4: 80267954 (cM_rndF__Ff)
//	80AC6ACC: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/func_80AC66DC.s"
}
#pragma pop


/* 80AC6AE0-80AC6AE4 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80AC6AE4-80AC6BE0 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv                                    */
//	80AC6B04: 80AC7358 (__vt__15daNpcT_JntAnm_c)
//	80AC6B08: 80AC7358 (__vt__15daNpcT_JntAnm_c)
//	80AC6B14: 80AC6664 (__dt__4cXyzFv)
//	80AC6B18: 80AC6664 (__dt__4cXyzFv)
//	80AC6B24: 80361CE8 (__destroy_arr)
//	80AC6B2C: 80AC6664 (__dt__4cXyzFv)
//	80AC6B30: 80AC6664 (__dt__4cXyzFv)
//	80AC6B3C: 80361CE8 (__destroy_arr)
//	80AC6B44: 80AC6664 (__dt__4cXyzFv)
//	80AC6B48: 80AC6664 (__dt__4cXyzFv)
//	80AC6B54: 80361CE8 (__destroy_arr)
//	80AC6B5C: 80AC6664 (__dt__4cXyzFv)
//	80AC6B60: 80AC6664 (__dt__4cXyzFv)
//	80AC6B6C: 80361CE8 (__destroy_arr)
//	80AC6B74: 80AC6664 (__dt__4cXyzFv)
//	80AC6B78: 80AC6664 (__dt__4cXyzFv)
//	80AC6B84: 80361CE8 (__destroy_arr)
//	80AC6B8C: 80AC6664 (__dt__4cXyzFv)
//	80AC6B90: 80AC6664 (__dt__4cXyzFv)
//	80AC6B9C: 80361CE8 (__destroy_arr)
//	80AC6BA8: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC6BAC: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC6BC0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop


/* 80AC6BE0-80AC6BE4 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80AC6BE4-80AC6C2C 0048+00 s=1 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv                                 */
//	80AC6BFC: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC6C00: 80AC734C (__vt__18daNpcT_ActorMngr_c)
//	80AC6C10: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80AC6C2C-80AC6C74 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv                             */
//	80AC6C44: 80AC7340 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC6C48: 80AC7340 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AC6C58: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop


/* 80AC6C74-80AC6CE4 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80AC6C94: 80AC731C (__vt__12dBgS_AcchCir)
//	80AC6C98: 80AC731C (__vt__12dBgS_AcchCir)
//	80AC6CA8: 8026EF18 (__dt__8cM3dGCirFv)
//	80AC6CB4: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AC6CC4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80AC6CE4-80AC6D40 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80AC6CFC: 80AC7334 (__vt__10dCcD_GStts)
//	80AC6D00: 80AC7334 (__vt__10dCcD_GStts)
//	80AC6D0C: 80AC7328 (__vt__10cCcD_GStts)
//	80AC6D10: 80AC7328 (__vt__10cCcD_GStts)
//	80AC6D24: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80AC6D40-80AC6DB0 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80AC6D60: 80AC72F8 (__vt__12dBgS_ObjAcch)
//	80AC6D64: 80AC72F8 (__vt__12dBgS_ObjAcch)
//	80AC6D80: 80075F94 (__dt__9dBgS_AcchFv)
//	80AC6D90: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80AC6DB0-80AC6DF8 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80AC6DC8: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC6DCC: 80AC72EC (__vt__12J3DFrameCtrl)
//	80AC6DDC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80AC6DF8-80AC6E00 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__8daNpcT_cFv                            */
// True False
//  bool False
bool daNpcT_c::getEyeballMaterialNo() {
	return false;
}


/* 80AC6E00-80AC6E04 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi                               */
// True False
//  void False
//  int False
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
	/* empty function */
}


/* 80AC6E04-80AC6E0C 0008+00 s=1 e=0 z=0  None .text      checkChangeJoint__8daNpcT_cFi                                */
// True False
//  bool False
//  int False
bool daNpcT_c::checkChangeJoint(int param_0) {
	return false;
}


/* 80AC6E0C-80AC6E14 0008+00 s=1 e=0 z=0  None .text      checkRemoveJoint__8daNpcT_cFi                                */
// True False
//  bool False
//  int False
bool daNpcT_c::checkRemoveJoint(int param_0) {
	return false;
}


/* 80AC6E14-80AC6E1C 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__8daNpcT_cFv                              */
// True False
//  s32 False
s32 daNpcT_c::getBackboneJointNo() {
	return -1;
}


/* 80AC6E1C-80AC6E24 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__8daNpcT_cFv                                  */
// True False
//  s32 False
s32 daNpcT_c::getNeckJointNo() {
	return -1;
}


/* 80AC6E24-80AC6E2C 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__8daNpcT_cFv                                  */
// True False
//  s32 False
s32 daNpcT_c::getHeadJointNo() {
	return -1;
}


/* 80AC6E2C-80AC6E34 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootLJointNo() {
	return -1;
}


/* 80AC6E34-80AC6E3C 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootRJointNo() {
	return -1;
}


/* 80AC6E3C-80AC6E44 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballLMaterialNo() {
	return false;
}


/* 80AC6E44-80AC6E4C 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballRMaterialNo() {
	return false;
}


/* 80AC6E4C-80AC6E50 0004+00 s=1 e=0 z=0  None .text      afterJntAnm__8daNpcT_cFi                                     */
// True False
//  void False
//  int False
void daNpcT_c::afterJntAnm(int param_0) {
	/* empty function */
}


/* 80AC6E50-80AC6E58 0008+00 s=1 e=0 z=0  None .text      checkChangeEvt__8daNpcT_cFv                                  */
// True False
//  bool False
bool daNpcT_c::checkChangeEvt() {
	return false;
}


/* 80AC6E58-80AC6E60 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::evtEndProc() {
	return true;
}


/* 80AC6E60-80AC6E64 0004+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__8daNpcT_cFv                              */
// True False
//  void False
void daNpcT_c::setAfterTalkMotion() {
	/* empty function */
}


/* 80AC6E64-80AC6E68 0004+00 s=1 e=0 z=0  None .text      afterMoved__8daNpcT_cFv                                      */
// True False
//  void False
void daNpcT_c::afterMoved() {
	/* empty function */
}


/* 80AC6E68-80AC6E6C 0004+00 s=1 e=0 z=0  None .text      setCollision__8daNpcT_cFv                                    */
// True False
//  void False
void daNpcT_c::setCollision() {
	/* empty function */
}


/* 80AC6E6C-80AC6E74 0008+00 s=1 e=0 z=0  None .text      chkXYItems__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::chkXYItems() {
	return false;
}


/* 80AC6E74-80AC6E8C 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcT_c::decTmr() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/decTmr__8daNpcT_cFv.s"
}
#pragma pop


/* 80AC6E8C-80AC6E90 0004+00 s=1 e=0 z=0  None .text      drawOtherMdl__8daNpcT_cFv                                    */
// True False
//  void False
void daNpcT_c::drawOtherMdl() {
	/* empty function */
}


/* 80AC6E90-80AC6E94 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv                                       */
// True False
//  void False
void daNpcT_c::drawGhost() {
	/* empty function */
}


/* 80AC6E94-80AC6E9C 0008+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__8daNpcT_cFiifi                        */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 80AC6E9C-80AC6ECC 0030+00 s=1 e=0 z=0  None .text      getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c False
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop


/* 80AC6ECC-80AC6EFC 0030+00 s=1 e=0 z=0  None .text      getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_motionAnmData_c False
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop


/* 80AC6EFC-80AC6F00 0004+00 s=1 e=0 z=0  None .text      changeAnm__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AC6F00-80AC6F04 0004+00 s=1 e=0 z=0  None .text      changeBck__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBck(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AC6F04-80AC6F08 0004+00 s=1 e=0 z=0  None .text      changeBtp__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AC6F08-80AC6F0C 0004+00 s=1 e=0 z=0  None .text      changeBtk__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
	/* empty function */
}


/* ############################################################################################## */
/* 80AC7428-80AC7434 000C+00 s=2 e=0 z=0  None .data      __vt__18daNpc_seiB_Param_c                                   */
SECTION_DATA void* __vt__18daNpc_seiB_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpc_seiB_Param_cFv,
};

/* 80AC7440-80AC744C 000C+00 s=1 e=0 z=0  None .bss       @3814                                                        */
static u8 lit_3814[12];

/* 80AC744C-80AC7450 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80AC6F0C-80AC6F74 0068+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_seib_cpp                                     */
//	80AC6F18: 80AC722C (mCutList__12daNpc_seiB_c)
//	80AC6F1C: 80AC722C (mCutList__12daNpc_seiB_c)
//	80AC6F20: 803A2180 (__ptmf_null)
//	80AC6F24: 803A2180 (__ptmf_null)
//	80AC6F40: 80AC7428 (__vt__18daNpc_seiB_Param_c)
//	80AC6F44: 80AC7428 (__vt__18daNpc_seiB_Param_c)
//	80AC6F48: 80AC744C (l_HIO)
//	80AC6F4C: 80AC744C (l_HIO)
//	80AC6F50: 80AC6FB8 (__dt__18daNpc_seiB_Param_cFv)
//	80AC6F54: 80AC6FB8 (__dt__18daNpc_seiB_Param_cFv)
//	80AC6F58: 80AC7440 (lit_3814)
//	80AC6F5C: 80AC7440 (lit_3814)
//	80AC6F60: 80AC5078 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_seib_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__sinit_d_a_npc_seib_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80AC6F0C = (void*)__sinit_d_a_npc_seib_cpp;
#pragma pop


/* 80AC6F74-80AC6FB8 0044+00 s=1 e=0 z=0  None .text      __ct__12daNpc_seiB_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AC6F90: 80AC66DC (__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AC6F94: 80AC7364 (__vt__12daNpc_seiB_c)
//	80AC6F98: 80AC7364 (__vt__12daNpc_seiB_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpc_seiB_c::daNpc_seiB_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/func_80AC6F74.s"
}
#pragma pop


/* 80AC6FB8-80AC7000 0048+00 s=2 e=0 z=0  None .text      __dt__18daNpc_seiB_Param_cFv                                 */
//	80AC6FD0: 80AC7428 (__vt__18daNpc_seiB_Param_c)
//	80AC6FD4: 80AC7428 (__vt__18daNpc_seiB_Param_c)
//	80AC6FE4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_seiB_Param_c::~daNpc_seiB_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__18daNpc_seiB_Param_cFv.s"
}
#pragma pop


/* 80AC7000-80AC7008 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80AC7004: 80AC6D40 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AC7000() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/func_80AC7000.s"
}
#pragma pop


/* 80AC7008-80AC7010 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80AC700C: 80AC6D40 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AC7008() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/func_80AC7008.s"
}
#pragma pop


