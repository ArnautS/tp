// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_post
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_post/d_a_npc_post.h"

// 
// Types:
// 

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80AAC28C */ // True False
~cXyz();
	/* 80AAC964 */ // True False
cXyz();
};

struct daTag_EvtArea_c {
	/* 80AAD178 */ // True False
//  cXyz False
void chkPointInArea(cXyz);
	/* 8048C94C */ // False False
//  cXyz False
//  cXyz False
void chkPointInArea(cXyz, cXyz);
};

struct daNpcT_MotionSeqMngr_c {
	struct sequenceStepData_c {
	};

	/* 80145898 */ // False False
void initialize();
	/* 80145A24 */ // False False
void checkEndSequence();
	/* 80AAC968 */ // True False
~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_motionAnmData_c {
};

struct daNpcT_evtData_c {
};

struct J3DJoint {
};

struct daNpcT_faceMotionAnmData_c {
};

struct daNpc_Post_c {
	/* 80AA8C8C */ // True False
~daNpc_Post_c();
	/* 80AA8DE8 */ // True False
void create();
	/* 80AA90B0 */ // True False
void CreateHeap();
	/* 80AA9634 */ // True False
void Delete();
	/* 80AA9668 */ // True False
void Execute();
	/* 80AA9688 */ // True False
void Draw();
	/* 80AA971C */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80AA973C */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 80AA9794 */ // True False
void getType();
	/* 80AA97E0 */ // True False
void isDelete();
	/* 80AA9828 */ // True False
void reset();
	/* 80AA99F0 */ // True False
//  int False
void afterJntAnm(int);
	/* 80AA9A7C */ // True False
void setParam();
	/* 80AA9BA4 */ // True False
void checkChangeEvt();
	/* 80AA9C58 */ // True False
void setAfterTalkMotion();
	/* 80AA9D04 */ // True False
void srchActors();
	/* 80AA9D98 */ // True False
void evtTalk();
	/* 80AA9E98 */ // True False
void evtCutProc();
	/* 80AA9F60 */ // True False
void action();
	/* 80AAA058 */ // True False
void beforeMove();
	/* 80AAA124 */ // True False
void afterMoved();
	/* 80AAA1E4 */ // True False
void setAttnPos();
	/* 80AAA570 */ // True False
void setCollision();
	/* 80AAA714 */ // True False
//  bool False
bool drawDbgInfo();
	/* 80AAA71C */ // True False
void drawOtherMdl();
	/* 80AAA8A4 */ // True False
//  int False
//  int False
//  f32 False
void setFlagAnm(int, int, f32);
	/* 80AAA968 */ // True False
//  int False
//  int False
//  f32 False
//  int False
void afterSetMotionAnm(int, int, f32, int);
	/* 80AAA99C */ // True False
void selectAction();
	/* 80AAA9E4 */ // True False
//  int (daNpc_Post_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Post_c False
void chkAction(int (daNpc_Post_c::*)(void*));
	/* 80AAAA10 */ // True False
//  int (daNpc_Post_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Post_c False
void setAction(int (daNpc_Post_c::*)(void*));
	/* 80AAAAB8 */ // True False
void chkPullOutLetter1();
	/* 80AAAB2C */ // True False
void chkPullOutLetter2();
	/* 80AAABA0 */ // True False
void pullOutLetter();
	/* 80AAAC64 */ // True False
//  int False
void cutDeliver(int);
	/* 80AAB61C */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80AABC24 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80AACFF0 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpc_Post_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80AAD0D0 */ // True False
//  bool False
bool getEyeballMaterialNo();
	/* 80AAD0D8 */ // True False
//  s32 False
s32 getHeadJointNo();
	/* 80AAD0E0 */ // True False
//  s32 False
s32 getNeckJointNo();
	/* 80AAD0E8 */ // True False
//  bool False
bool getBackboneJointNo();
	/* 80AAD0F0 */ // True False
//  int False
void checkChangeJoint(int);
	/* 80AAD100 */ // True False
//  int False
void checkRemoveJoint(int);
	/* 80AAD110 */ // True False
//  s32 False
s32 getFootLJointNo();
	/* 80AAD118 */ // True False
//  s32 False
s32 getFootRJointNo();
};

struct daNpc_Post_Param_c {
	/* 80AAD120 */ // True False
~daNpc_Post_Param_c();
};

struct J3DModel {
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct csXyz {
	/* 80AAC2C8 */ // True False
~csXyz();
	/* 80AAC864 */ // True False
csXyz();
};

struct _GXColorS10 {
};

struct daNpcT_c {
	/* 80147FA4 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
void tgHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
	/* 80148058 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getTrnsfrmAnmP(char const*, int);
	/* 80148094 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getTrnsfrmKeyAnmP(char const*, int);
	/* 801483F8 */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void loadRes(s8 const*, char const**);
	/* 801484AC */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void deleteRes(s8 const*, char const**);
	/* 8014852C */ // False False
void execute();
	/* 8014886C */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
	/* 80148C70 */ // False False
void setEnvTevColor();
	/* 80148CCC */ // False False
void setRoomNo();
	/* 801490D4 */ // False False
void ctrlBtk();
	/* 80149190 */ // False False
void setMtx();
	/* 8014951C */ // False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 8014997C */ // False False
void evtProc();
	/* 80149BB4 */ // False False
void setFootPos();
	/* 80149D7C */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
void setFootPrtcl(cXyz*, f32, f32);
	/* 8014A05C */ // False False
//  bool False
bool checkCullDraw();
	/* 8014A064 */ // False False
void twilight();
	/* 8014A0B0 */ // False False
void evtOrder();
	/* 8014A224 */ // False False
void evtChange();
	/* 8014A324 */ // False False
void clrParam();
	/* 8014A388 */ // False False
//  int False
//  bool False
void setFaceMotionAnm(int, bool);
	/* 8014A628 */ // False False
//  int False
//  f32 False
//  int False
void setMotionAnm(int, f32, int);
	/* 8014AA18 */ // False False
//  s16 False
void setAngle(s16);
	/* 8014A99C */ // False False
//  csXyz False
void setAngle(csXyz);
	/* 8014AA40 */ // False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
void hitChk(dCcD_GObjInf*, u32);
	/* 8014ABD0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
void chkActorInSight(fopAc_ac_c*, f32, s16);
	/* 8014B338 */ // False False
void srchPlayerActor();
	/* 8014B648 */ // False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
void step(s16, int, int, int, int);
	/* 8014BBF0 */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 8014BC78 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void talkProc(int*, int, fopAc_ac_c**, int);
	/* 8014BEE4 */ // False False
//  int False
//  int False
void getEvtAreaTagP(int, int);
	/* 80AABF04 */ // True False
~daNpcT_c();
	/* 80AAC460 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80AACE58 */ // True False
//  void False
//  int False
void ctrlSubFaceMotion(int);
	/* 80AACE5C */ // True False
//  bool False
bool getEyeballLMaterialNo();
	/* 80AACE64 */ // True False
//  bool False
bool getEyeballRMaterialNo();
	/* 80AACE6C */ // True False
//  bool False
bool evtEndProc();
	/* 80AACE74 */ // True False
//  bool False
bool chkXYItems();
	/* 80AACE7C */ // True False
void decTmr();
	/* 80AACE94 */ // True False
//  void False
void drawGhost();
	/* 80AACE98 */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetFaceMotionAnm(int, int, f32, int);
	/* 80AACEA0 */ // True False
//  daNpcT_faceMotionAnmData_c False
void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
	/* 80AACED0 */ // True False
//  daNpcT_motionAnmData_c False
void getMotionAnm(daNpcT_motionAnmData_c);
	/* 80AACF00 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeAnm(int*, int*);
	/* 80AACF04 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBck(int*, int*);
	/* 80AACF08 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtp(int*, int*);
	/* 80AACF0C */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtk(int*, int*);
};

struct daNpcT_Path_c {
	/* 80145C40 */ // False False
void initialize();
	/* 80AAC34C */ // True False
~daNpcT_Path_c();
};

struct daNpcT_MatAnm_c {
	/* 80145764 */ // False False
void initialize();
};

struct daNpcT_JntAnm_c {
	/* 80146C98 */ // False False
void initialize();
	/* 80146CD8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
void setParam(fopAc_ac_c*, J3DModel*, cXyz*, int, int, int, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, cXyz*);
	/* 80147C38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void calcJntRad(f32, f32, f32);
	/* 80AAC868 */ // True False
~daNpcT_JntAnm_c();
	/* 80AACB34 */ // True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
void setEyeAngleY(cXyz, s16, int, f32, s16);
	/* 80AACC50 */ // True False
//  cXyz False
//  f32 False
//  s16 False
void setEyeAngleX(cXyz, f32, s16);
};

struct daNpcT_DmgStagger_c {
	/* 80147E3C */ // False False
//  int False
void calc(int);
};

struct daNpcT_ActorMngr_c {
	/* 801456D4 */ // False False
void initialize();
	/* 801456E0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801456FC */ // False False
void remove();
	/* 80145708 */ // False False
void getActorP();
	/* 80AAC304 */ // True False
~daNpcT_ActorMngr_c();
	/* 80AAC394 */ // True False
daNpcT_ActorMngr_c();
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dBgS {
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80AAC9B0 */ // True False
~dBgS_AcchCir();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct dPaPo_c {
	/* 80050C9C */ // False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
//  f32 False
//  f32 False
void init(dBgS_Acch*, f32, f32);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
	/* 80249F90 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void init(fopAc_ac_c*, int, int, fopAc_ac_c**);
	/* 8024A2D8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void doFlow(fopAc_ac_c*, fopAc_ac_c**, int);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 800480EC */ // False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getMySubstanceP(int, char const*, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dDlst_shadowControl_c {
	/* 80055F1C */ // False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
void addReal(u32, J3DModel*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80AACA20 */ // True False
~dCcD_GStts();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80AACA7C */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80AAC3D0 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80AAC418 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80AABEBC */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
};

struct cBgS {
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
};

struct Z2SeqMgr {
	/* 802AF49C */ // False False
//  u32 False
void subBgmStart(u32);
	/* 802AF884 */ // False False
void subBgmStop();
};

struct J3DTexNoAnm {
	/* 80AA9520 */ // True False
~J3DTexNoAnm();
	/* 80AA9568 */ // True False
J3DTexNoAnm();
	/* 80AABE8C */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 80AA958C */ // True False
~J3DTexMtxAnm();
	/* 80AA95C8 */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 80AA9478 */ // True False
~J3DTevKColorAnm();
	/* 80AA94B4 */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 80AA94CC */ // True False
~J3DTevColorAnm();
	/* 80AA9508 */ // True False
J3DTevColorAnm();
};

struct J3DShapeTable {
	/* 803258A0 */ // False False
void hide();
	/* 803258D8 */ // False False
void show();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 80AA95E0 */ // True False
~J3DMatColorAnm();
	/* 80AA961C */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80AACAEC */ // True False
~J3DFrameCtrl();
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpc_Post_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Post_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Post_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Post_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Post_IsDelete(void*);
// False True
//  int* False
// 	 int False
void cLib_calcTimer__template0(int*);
// False True
//  f32 False
//  f32 False
void cLib_getRndValue__template0(f32, f32);

// True False
extern "C" void __dt__12daNpc_Post_cFv();
// True False
extern "C" void create__12daNpc_Post_cFv();
// True False
extern "C" void CreateHeap__12daNpc_Post_cFv();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
extern "C" void Delete__12daNpc_Post_cFv();
// True False
extern "C" void Execute__12daNpc_Post_cFv();
// True False
extern "C" void Draw__12daNpc_Post_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__12daNpc_Post_cFP10fopAc_ac_c();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__12daNpc_Post_cFP8J3DJointi();
// True False
extern "C" void getType__12daNpc_Post_cFv();
// True False
extern "C" void isDelete__12daNpc_Post_cFv();
// True False
extern "C" void reset__12daNpc_Post_cFv();
// True False
//  int False
extern "C" void afterJntAnm__12daNpc_Post_cFi();
// True False
extern "C" void setParam__12daNpc_Post_cFv();
// True False
extern "C" void checkChangeEvt__12daNpc_Post_cFv();
// True False
extern "C" void setAfterTalkMotion__12daNpc_Post_cFv();
// True False
extern "C" void srchActors__12daNpc_Post_cFv();
// True False
extern "C" void evtTalk__12daNpc_Post_cFv();
// True False
extern "C" void evtCutProc__12daNpc_Post_cFv();
// True False
extern "C" void action__12daNpc_Post_cFv();
// True False
extern "C" void beforeMove__12daNpc_Post_cFv();
// True False
extern "C" void afterMoved__12daNpc_Post_cFv();
// True False
extern "C" void setAttnPos__12daNpc_Post_cFv();
// True False
extern "C" void setCollision__12daNpc_Post_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__12daNpc_Post_cFv();
// True False
extern "C" void drawOtherMdl__12daNpc_Post_cFv();
// True False
//  int False
//  int False
//  f32 False
extern "C" void setFlagAnm__12daNpc_Post_cFiif();
// True False
//  int False
//  int False
//  f32 False
//  int False
extern "C" void afterSetMotionAnm__12daNpc_Post_cFiifi();
// True False
extern "C" void selectAction__12daNpc_Post_cFv();
// True False
//  int (daNpc_Post_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Post_c False
extern "C" void chkAction__12daNpc_Post_cFM12daNpc_Post_cFPCvPvPv_i();
// True False
//  int (daNpc_Post_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Post_c False
extern "C" void setAction__12daNpc_Post_cFM12daNpc_Post_cFPCvPvPv_i();
// True False
extern "C" void chkPullOutLetter1__12daNpc_Post_cFv();
// True False
extern "C" void chkPullOutLetter2__12daNpc_Post_cFv();
// True False
extern "C" void pullOutLetter__12daNpc_Post_cFv();
// True False
//  int False
extern "C" void cutDeliver__12daNpc_Post_cFi();
// True False
//  void* False
// 	 void False
extern "C" void wait__12daNpc_Post_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__12daNpc_Post_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Post_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Post_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Post_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Post_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpc_Post_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__8daNpcT_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__13daNpcT_Path_cFv();
// True False
extern "C" void __ct__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__15daNpcT_JntAnm_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
extern "C" void setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs();
// True False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs();
// True False
//  void False
//  int False
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
// True False
//  bool False
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool evtEndProc__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool chkXYItems__8daNpcT_cFv();
// True False
extern "C" void decTmr__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawGhost__8daNpcT_cFv();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
// True False
//  daNpcT_faceMotionAnmData_c False
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
// True False
//  daNpcT_motionAnmData_c False
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeAnm__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBck__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtp__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtk__8daNpcT_cFPiPi();
// False True
//  int* False
// 	 int False
extern "C" void func_80AACF10();
// False True
//  f32 False
//  f32 False
extern "C" void func_80AACF2C();
// False False
extern "C" void __sinit_d_a_npc_post_cpp();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__12daNpc_Post_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
//  bool False
extern "C" bool getEyeballMaterialNo__12daNpc_Post_cFv();
// True False
//  s32 False
extern "C" s32 getHeadJointNo__12daNpc_Post_cFv();
// True False
//  s32 False
extern "C" s32 getNeckJointNo__12daNpc_Post_cFv();
// True False
//  bool False
extern "C" bool getBackboneJointNo__12daNpc_Post_cFv();
// True False
//  int False
extern "C" void checkChangeJoint__12daNpc_Post_cFi();
// True False
//  int False
extern "C" void checkRemoveJoint__12daNpc_Post_cFi();
// True False
//  s32 False
extern "C" s32 getFootLJointNo__12daNpc_Post_cFv();
// True False
//  s32 False
extern "C" s32 getFootRJointNo__12daNpc_Post_cFv();
// True False
extern "C" void __dt__18daNpc_Post_Param_cFv();
// True False
extern "C" static void func_80AAD168();
// True False
extern "C" static void func_80AAD170();
// True False
//  cXyz False
extern "C" void chkPointInArea__15daTag_EvtArea_cF4cXyz();
extern "C" extern u8 const data_80AAD280[16];
extern "C" extern u32 const lit_4066;
extern "C" extern u32 const lit_4067;
extern "C" extern u32 const lit_4068;
extern "C" extern u32 const lit_4069;
extern "C" extern u32 const lit_4071;
extern "C" extern u32 const lit_4235;
extern "C" extern u32 const lit_4236;
extern "C" extern u8 const data_80AAD2B0[8];
extern "C" extern u32 const lit_4835;
extern "C" extern u32 const lit_4836;
extern "C" extern u32 const lit_4837;
extern "C" extern u32 const lit_4838;
extern "C" extern u32 const lit_4839;
extern "C" extern u32 const lit_4840;
extern "C" extern u32 const lit_4841;
extern "C" extern u32 const lit_4842;
extern "C" extern u32 const lit_4843[1 + 1 /* padding */];
extern "C" extern u8 const lit_4903[8];
extern "C" extern u8 const lit_4904[8];
extern "C" extern u8 const lit_4905[8];
extern "C" extern u32 const lit_4949;
extern "C" extern u32 const lit_4950;
extern "C" extern u32 const lit_4951;
extern "C" extern u8 const lit_5155[8];
extern "C" extern u32 const lit_5411;
extern "C" extern u32 const lit_5412;
extern "C" extern u32 const lit_5413;
extern "C" extern u32 const lit_5414;
extern "C" extern u8 const lit_5417[8];
extern "C" extern u32 const lit_5626;
extern "C" extern u32 const lit_5627;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtList[10];
extern "C" extern u8 l_faceMotionAnmData[420];
extern "C" extern u8 l_faceMotionSequenceData[240];
extern "C" extern u8 l_motionSequenceData[176];
extern "C" extern void* g_profile_NPC_POST[12];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__22daNpcT_MotionSeqMngr_c[3];
extern "C" extern void* __vt__18daNpcT_ActorMngr_c[3];
extern "C" extern void* __vt__15daNpcT_JntAnm_c[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__13daNpcT_Path_c[3];
extern "C" extern void* __vt__12daNpc_Post_c[49];
extern "C" extern void* __vt__18daNpc_Post_Param_c[3];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 3 /* padding */];
extern "C" extern u8 lit_4753[12 + 4 /* padding */];
extern "C" extern u8 data_80AADC50[12];
extern "C" extern u8 data_80AADC5C[4];
extern "C" extern u8 data_80AADC60[4];
extern "C" extern u8 data_80AADC64[4];
extern "C" extern u8 data_80AADC68[4];
extern "C" extern u8 data_80AADC6C[4];
extern "C" extern u8 data_80AADC70[4];
extern "C" extern u8 data_80AADC74[4];
extern "C" extern u8 data_80AADC78[4];
extern "C" extern u8 data_80AADC7C[4];
extern "C" extern u8 data_80AADC80[4];
extern "C" extern u8 data_80AADC84[4];
extern "C" extern u8 data_80AADC88[4];
extern "C" extern u8 data_80AADC8C[4];
extern "C" extern u8 data_80AADC90[4];
extern "C" extern u8 data_80AADC94[4];
extern "C" extern u8 data_80AADC98[4];
extern "C" extern u8 data_80AADC9C[4];
extern "C" extern u8 data_80AADCA0[4];
extern "C" extern u8 data_80AADCA4[4];
extern "C" extern u8 data_80AADCA8[4];
extern "C" extern u8 data_80AADCAC[4];
extern "C" extern u8 data_80AADCB0[4];
extern "C" extern u8 data_80AADCB4[4];
extern "C" extern u8 data_80AADCB8[4];
extern "C" extern u8 data_80AADCBC[4];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  int False
//  int False
void daNpcT_getDistTableIdx(int, int);
// False False
//  u32 False
void daNpcT_chkEvtBit(u32);
// False False
void dKy_darkworld_check();
// False False
void dMeter2Info_getNewLetterNum();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
//  f32 False
//  f32 False
extern "C" void init__7dPaPo_cFP9dBgS_Acchff();
// False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_MatAnm_cFv();
// False False
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void checkEndSequence__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void initialize__13daNpcT_Path_cFv();
// False False
extern "C" void initialize__15daNpcT_JntAnm_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void calcJntRad__15daNpcT_JntAnm_cFfff();
// False False
//  int False
extern "C" void calc__19daNpcT_DmgStagger_cFi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" void tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getTrnsfrmAnmP__8daNpcT_cFPCci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getTrnsfrmKeyAnmP__8daNpcT_cFPCci();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
// False False
extern "C" void execute__8daNpcT_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
// False False
extern "C" void setEnvTevColor__8daNpcT_cFv();
// False False
extern "C" void setRoomNo__8daNpcT_cFv();
// False False
extern "C" void ctrlBtk__8daNpcT_cFv();
// False False
extern "C" void setMtx__8daNpcT_cFv();
// False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
// False False
extern "C" void evtProc__8daNpcT_cFv();
// False False
extern "C" void setFootPos__8daNpcT_cFv();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
// False False
//  bool False
extern "C" bool checkCullDraw__8daNpcT_cFv();
// False False
extern "C" void twilight__8daNpcT_cFv();
// False False
extern "C" void evtOrder__8daNpcT_cFv();
// False False
extern "C" void evtChange__8daNpcT_cFv();
// False False
extern "C" void clrParam__8daNpcT_cFv();
// False False
//  int False
//  bool False
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
// False False
//  int False
//  f32 False
//  int False
extern "C" void setMotionAnm__8daNpcT_cFifi();
// False False
//  csXyz False
extern "C" void setAngle__8daNpcT_cF5csXyz();
// False False
//  s16 False
extern "C" void setAngle__8daNpcT_cFs();
// False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
extern "C" void hitChk__8daNpcT_cFP12dCcD_GObjInfUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
extern "C" void chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs();
// False False
extern "C" void srchPlayerActor__8daNpcT_cFv();
// False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
extern "C" void step__8daNpcT_cFsiiii();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
// False False
//  int False
//  int False
extern "C" void getEvtAreaTagP__8daNpcT_cFii();
// False False
//  int False
//  int False
extern "C" void daNpcT_getDistTableIdx__Fii();
// False False
//  u32 False
extern "C" void daNpcT_chkEvtBit__FUl();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
extern "C" void dMeter2Info_getNewLetterNum__Fv();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  u32 False
extern "C" void subBgmStart__8Z2SeqMgrFUl();
// False False
extern "C" void subBgmStop__8Z2SeqMgrFv();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void hide__13J3DShapeTableFv();
// False False
extern "C" void show__13J3DShapeTableFv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcT_c[68];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__15daNpcT_MatAnm_c[4 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
//  cXyz False
//  cXyz False
extern "C" void chkPointInArea__15daTag_EvtArea_cF4cXyz4cXyz();
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80AAD1EC-80AAD280 0094+00 s=12 e=0 z=0  None .rodata    m__18daNpc_Post_Param_c                                      */
SECTION_RODATA static u8 const m__18daNpc_Post_Param_c[148] = {
	0x43, 0x3E, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x44, 0x2F, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x34, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x80, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x00,
};

/* 80AAD280-80AAD290 0010+00 s=0 e=0 z=0  None .rodata    heapSize$4000                                                */
SECTION_RODATA u8 const data_80AAD280[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x60, 0x00, 0x00, 0x4E, 0xC0, 0x00, 0x00, 0x00, 0x00,
};

/* 80AAD290-80AAD294 0004+00 s=0 e=0 z=0  None .rodata    @4066                                                        */
SECTION_RODATA u32 const lit_4066 = 0xC3480000;

/* 80AAD294-80AAD298 0004+00 s=0 e=0 z=0  None .rodata    @4067                                                        */
SECTION_RODATA u32 const lit_4067 = 0xC2C80000;

/* 80AAD298-80AAD29C 0004+00 s=0 e=0 z=0  None .rodata    @4068                                                        */
SECTION_RODATA u32 const lit_4068 = 0x43480000;

/* 80AAD29C-80AAD2A0 0004+00 s=0 e=0 z=0  None .rodata    @4069                                                        */
SECTION_RODATA u32 const lit_4069 = 0x43960000;

/* 80AAD2A0-80AAD2A4 0004+00 s=4 e=0 z=0  None .rodata    @4070                                                        */
SECTION_RODATA static u8 const lit_4070[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AAD2A4-80AAD2A8 0004+00 s=0 e=0 z=0  None .rodata    @4071                                                        */
SECTION_RODATA u32 const lit_4071 = 0xCE6E6B28;

/* 80AAD2A8-80AAD2AC 0004+00 s=0 e=0 z=0  None .rodata    @4235                                                        */
SECTION_RODATA u32 const lit_4235 = 0x47800000;

/* 80AAD2AC-80AAD2B0 0004+00 s=0 e=0 z=0  None .rodata    @4236                                                        */
SECTION_RODATA u32 const lit_4236 = 0x3E4CCCCD;

/* 80AAD2B0-80AAD2B8 0008+00 s=0 e=0 z=0  None .rodata    bmdTypeList$4354                                             */
SECTION_RODATA u8 const data_80AAD2B0[8] = {
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
};

/* 80AAD2B8-80AAD2BC 0004+00 s=1 e=0 z=0  None .rodata    @4418                                                        */
SECTION_RODATA static u32 const lit_4418 = 0x3F800000;

/* 80AAD2BC-80AAD2C0 0004+00 s=1 e=0 z=0  None .rodata    @4467                                                        */
SECTION_RODATA static u32 const lit_4467 = 0x42C80000;

/* 80AAD2C0-80AAD2C4 0004+00 s=1 e=0 z=0  None .rodata    @4632                                                        */
SECTION_RODATA static u32 const lit_4632 = 0xBF800000;

/* 80AAD2C4-80AAD2C8 0004+00 s=0 e=0 z=0  None .rodata    @4835                                                        */
SECTION_RODATA u32 const lit_4835 = 0xC1F00000;

/* 80AAD2C8-80AAD2CC 0004+00 s=0 e=0 z=0  None .rodata    @4836                                                        */
SECTION_RODATA u32 const lit_4836 = 0x41200000;

/* 80AAD2CC-80AAD2D0 0004+00 s=0 e=0 z=0  None .rodata    @4837                                                        */
SECTION_RODATA u32 const lit_4837 = 0x38C90FDB;

/* 80AAD2D0-80AAD2D4 0004+00 s=0 e=0 z=0  None .rodata    @4838                                                        */
SECTION_RODATA u32 const lit_4838 = 0x3E99999A;

/* 80AAD2D4-80AAD2D8 0004+00 s=0 e=0 z=0  None .rodata    @4839                                                        */
SECTION_RODATA u32 const lit_4839 = 0x41800000;

/* 80AAD2D8-80AAD2DC 0004+00 s=0 e=0 z=0  None .rodata    @4840                                                        */
SECTION_RODATA u32 const lit_4840 = 0x42DC0000;

/* 80AAD2DC-80AAD2E0 0004+00 s=0 e=0 z=0  None .rodata    @4841                                                        */
SECTION_RODATA u32 const lit_4841 = 0x42200000;

/* 80AAD2E0-80AAD2E4 0004+00 s=0 e=0 z=0  None .rodata    @4842                                                        */
SECTION_RODATA u32 const lit_4842 = 0x40400000;

/* 80AAD2E4-80AAD2EC 0004+04 s=0 e=0 z=0  None .rodata    @4843                                                        */
SECTION_RODATA u32 const lit_4843[1 + 1 /* padding */] = {
	0x41300000,
	/* padding */
	0x00000000,
};

/* 80AAD2EC-80AAD2F4 0008+00 s=1 e=0 z=0  None .rodata    @4845                                                        */
SECTION_RODATA static u8 const lit_4845[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80AAD2F4-80AAD2FC 0008+00 s=0 e=0 z=0  None .rodata    @4903                                                        */
SECTION_RODATA u8 const lit_4903[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AAD2FC-80AAD304 0008+00 s=0 e=0 z=0  None .rodata    @4904                                                        */
SECTION_RODATA u8 const lit_4904[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AAD304-80AAD30C 0008+00 s=0 e=0 z=0  None .rodata    @4905                                                        */
SECTION_RODATA u8 const lit_4905[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AAD30C-80AAD310 0004+00 s=0 e=0 z=0  None .rodata    @4949                                                        */
SECTION_RODATA u32 const lit_4949 = 0x41A00000;

/* 80AAD310-80AAD314 0004+00 s=0 e=0 z=0  None .rodata    @4950                                                        */
SECTION_RODATA u32 const lit_4950 = 0x42A00000;

/* 80AAD314-80AAD318 0004+00 s=0 e=0 z=0  None .rodata    @4951                                                        */
SECTION_RODATA u32 const lit_4951 = 0x42480000;

/* 80AAD318-80AAD320 0008+00 s=1 e=0 z=0  None .rodata    jointNo$4959                                                 */
SECTION_RODATA static u8 const jointNo[8] = {
	0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x12,
};

/* 80AAD320-80AAD324 0004+00 s=1 e=0 z=0  None .rodata    @5115                                                        */
SECTION_RODATA static u32 const lit_5115 = 0x42140000;

/* 80AAD324-80AAD32C 0008+00 s=0 e=0 z=0  None .rodata    @5155                                                        */
SECTION_RODATA u8 const lit_5155[8] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80AAD32C-80AAD330 0004+00 s=0 e=0 z=0  None .rodata    @5411                                                        */
SECTION_RODATA u32 const lit_5411 = 0x447A0000;

/* 80AAD330-80AAD334 0004+00 s=0 e=0 z=0  None .rodata    @5412                                                        */
SECTION_RODATA u32 const lit_5412 = 0x40A00000;

/* 80AAD334-80AAD338 0004+00 s=0 e=0 z=0  None .rodata    @5413                                                        */
SECTION_RODATA u32 const lit_5413 = 0x43C80000;

/* 80AAD338-80AAD33C 0004+00 s=0 e=0 z=0  None .rodata    @5414                                                        */
SECTION_RODATA u32 const lit_5414 = 0x3FC00000;

/* 80AAD33C-80AAD344 0008+00 s=0 e=0 z=0  None .rodata    @5417                                                        */
SECTION_RODATA u8 const lit_5417[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AAD344-80AAD348 0004+00 s=0 e=0 z=0  None .rodata    @5626                                                        */
SECTION_RODATA u32 const lit_5626 = 0x3F000000;

/* 80AAD348-80AAD34C 0004+00 s=0 e=0 z=0  None .rodata    @5627                                                        */
SECTION_RODATA u32 const lit_5627 = 0x442F0000;

/* 80AAD34C-80AAD3AC 0060+00 s=5 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80AAD34C[96] = {
	/* 80AAD34C 0001 stringBase_80AAD34C @stringBase0 */
	0x00,
	/* 80AAD34D 000C data_80AAD34D None */
	0x4E, 0x4F, 0x5F, 0x52, 0x45, 0x53, 0x50, 0x4F, 0x4E, 0x53, 0x45, 0x00,
	/* 80AAD359 0008 data_80AAD359 None */
	0x44, 0x45, 0x4C, 0x49, 0x56, 0x45, 0x52, 0x00,
	/* 80AAD361 001A data_80AAD361 None */
	0x44, 0x45, 0x4C, 0x49, 0x56, 0x45, 0x52, 0x54, 0x4F, 0x5F, 0x50, 0x4C, 0x41, 0x59, 0x45, 0x52,
	0x5F, 0x4F, 0x4E, 0x5F, 0x48, 0x4F, 0x52, 0x53, 0x45, 0x00,
	/* 80AAD37B 000F data_80AAD37B None */
	0x44, 0x45, 0x4C, 0x49, 0x56, 0x45, 0x52, 0x54, 0x4F, 0x5F, 0x57, 0x4F, 0x4C, 0x46, 0x00,
	/* 80AAD38A 0005 data_80AAD38A None */
	0x70, 0x6F, 0x73, 0x74, 0x00,
	/* 80AAD38F 0006 data_80AAD38F None */
	0x70, 0x6F, 0x73, 0x74, 0x31, 0x00,
	/* 80AAD395 0017 data_80AAD395 None */
	0x70, 0x6F, 0x73, 0x74, 0x32, 0x00, 0x50, 0x6F, 0x73, 0x74, 0x00, 0x70, 0x72, 0x6D, 0x00, 0x74,
	0x69, 0x6D, 0x65, 0x72, 0x00, 0x00, 0x00,
};

/* 80AAD3AC-80AAD3B8 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AAD3B8-80AAD3CC 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80AAD3CC-80AAD3EC 0020+00 s=1 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[32] = {
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x03,
};

/* 80AAD3EC-80AAD414 0028+00 s=0 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA void* l_evtList[10] = {
	(void*)(((char*)&struct_80AAD34C)+0x0) /* @stringBase0 */,
	(void*)NULL,
	(void*)(((char*)&struct_80AAD34C)+0x1) /* None */,
	(void*)NULL,
	(void*)(((char*)&struct_80AAD34C)+0xD) /* None */,
	(void*)0x00000002,
	(void*)(((char*)&struct_80AAD34C)+0x15) /* None */,
	(void*)0x00000002,
	(void*)(((char*)&struct_80AAD34C)+0x2F) /* None */,
	(void*)0x00000002,
};

/* 80AAD414-80AAD424 0010+00 s=5 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[4] = {
	(void*)(((char*)&struct_80AAD34C)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80AAD34C)+0x3E) /* None */,
	(void*)(((char*)&struct_80AAD34C)+0x43) /* None */,
	(void*)(((char*)&struct_80AAD34C)+0x49) /* None */,
};

/* 80AAD424-80AAD428 0003+01 s=1 e=0 z=0  None .data      l_loadResPtrn0                                               */
SECTION_DATA static u8 l_loadResPtrn0[3 + 1 /* padding */] = {
	0x01, 0x02, 0xFF,
	/* padding */
	0x00,
};

/* 80AAD428-80AAD42C 0003+01 s=1 e=0 z=0  None .data      l_loadResPtrn1                                               */
SECTION_DATA static u8 l_loadResPtrn1[3 + 1 /* padding */] = {
	0x01, 0x03, 0xFF,
	/* padding */
	0x00,
};

/* 80AAD42C-80AAD430 0004+00 s=1 e=0 z=0  None .data      l_loadResPtrn9                                               */
SECTION_DATA static u32 l_loadResPtrn9 = 0x010203FF;

/* 80AAD430-80AAD440 0010+00 s=1 e=0 z=0  None .data      l_loadResPtrnList                                            */
SECTION_DATA static void* l_loadResPtrnList[4] = {
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn1,
	(void*)&l_loadResPtrn9,
};

/* 80AAD440-80AAD5E4 01A4+00 s=0 e=0 z=0  None .data      l_faceMotionAnmData                                          */
SECTION_DATA u8 l_faceMotionAnmData[420] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1A,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x00,
};

/* 80AAD5E4-80AAD750 016C+00 s=2 e=0 z=0  None .data      l_motionAnmData                                              */
SECTION_DATA static u8 l_motionAnmData[364] = {
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x14,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x14,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
};

/* 80AAD750-80AAD840 00F0+00 s=0 e=0 z=0  None .data      l_faceMotionSequenceData                                     */
SECTION_DATA u8 l_faceMotionSequenceData[240] = {
	0x00, 0x02, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x01, 0x00, 0x0B, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x01, 0x00, 0x0C, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0xFF, 0x01, 0x00, 0x0D, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x01, 0x00, 0x0E, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0C, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0D, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0E, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AAD840-80AAD8F0 00B0+00 s=0 e=0 z=0  None .data      l_motionSequenceData                                         */
SECTION_DATA u8 l_motionSequenceData[176] = {
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x01, 0x00, 0x04, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x01, 0x00, 0x09, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0xFF, 0x01, 0x00, 0x0A, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0C, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0x04, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AAD8F0-80AAD8F8 0008+00 s=1 e=0 z=0  None .data      mCutNameList__12daNpc_Post_c                                 */
SECTION_DATA static void* mCutNameList__12daNpc_Post_c[2] = {
	(void*)(((char*)&struct_80AAD34C)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80AAD34C)+0xD) /* None */,
};

/* 80AAD8F8-80AAD904 000C+00 s=1 e=0 z=0  None .data      @3838                                                        */
SECTION_DATA static void* lit_3838[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutDeliver__12daNpc_Post_cFi,
};

/* 80AAD904-80AAD91C 0018+00 s=2 e=0 z=0  None .data      mCutList__12daNpc_Post_c                                     */
SECTION_DATA static u8 mCutList__12daNpc_Post_c[24] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AAD91C-80AAD928 000C+00 s=1 e=0 z=0  None .data      @4596                                                        */
SECTION_DATA static void* lit_4596[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_Post_cFPv,
};

/* 80AAD928-80AAD934 000C+00 s=1 e=0 z=0  None .data      @4653                                                        */
SECTION_DATA static void* lit_4653[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_Post_cFPv,
};

/* 80AAD934-80AAD940 000C+00 s=1 e=0 z=0  None .data      @4663                                                        */
SECTION_DATA static void* lit_4663[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_Post_cFPv,
};

/* 80AAD940-80AAD9A8 0068+00 s=1 e=0 z=0  None .data      flagAnmData$5038                                             */
SECTION_DATA static u8 flagAnmData[104] = {
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AAD9A8-80AAD9B4 000C+00 s=1 e=0 z=0  None .data      @5060                                                        */
SECTION_DATA static void* lit_5060[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__12daNpc_Post_cFPv,
};

/* 80AAD9B4-80AAD9E8 0034+00 s=1 e=0 z=0  None .data      @5418                                                        */
SECTION_DATA static void* lit_5418[13] = {
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x6D0),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x720),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x720),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x758),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x7A4),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x828),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x85C),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x864),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x878),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x8A4),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x930),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x948),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x998),
};

/* 80AAD9E8-80AADA1C 0034+00 s=1 e=0 z=0  None .data      @5415                                                        */
SECTION_DATA static void* lit_5415[13] = {
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0xC0),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x170),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x170),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x188),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x228),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x384),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x404),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x44C),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x4CC),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x530),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x590),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x6B0),
	(void*)(((char*)cutDeliver__12daNpc_Post_cFi)+0x6B0),
};

/* 80AADA1C-80AADA3C 0020+00 s=1 e=0 z=0  None .data      daNpc_Post_MethodTable                                       */
SECTION_DATA static void* daNpc_Post_MethodTable[8] = {
	(void*)daNpc_Post_Create__FPv,
	(void*)daNpc_Post_Delete__FPv,
	(void*)daNpc_Post_Execute__FPv,
	(void*)daNpc_Post_IsDelete__FPv,
	(void*)daNpc_Post_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80AADA3C-80AADA6C 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_POST                                           */
SECTION_DATA void* g_profile_NPC_POST[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02910000,
	(void*)&g_fpcLf_Method,
	(void*)0x00001018,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01930000,
	(void*)&daNpc_Post_MethodTable,
	(void*)0x00040107,
	(void*)0x040E0000,
};

/* 80AADA6C-80AADA78 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80AADA78-80AADA84 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80AADA84-80AADAA8 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AAD170,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AAD168,
};

/* 80AADAA8-80AADAB4 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80AADAB4-80AADAC0 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80AADAC0-80AADACC 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80AADACC-80AADAD8 000C+00 s=3 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c                               */
SECTION_DATA void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80AADAD8-80AADAE4 000C+00 s=5 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcT_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80AADAE4-80AADAF0 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c                                      */
SECTION_DATA void* __vt__15daNpcT_JntAnm_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80AADAF0-80AADAFC 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80AADAFC-80AADB08 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80AADB08-80AADB14 000C+00 s=3 e=0 z=0  None .data      __vt__13daNpcT_Path_c                                        */
SECTION_DATA void* __vt__13daNpcT_Path_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__13daNpcT_Path_cFv,
};

/* 80AADB14-80AADBD8 00C4+00 s=2 e=0 z=0  None .data      __vt__12daNpc_Post_c                                         */
SECTION_DATA void* __vt__12daNpc_Post_c[49] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daNpc_Post_cFv,
	(void*)ctrlBtk__8daNpcT_cFv,
	(void*)ctrlSubFaceMotion__8daNpcT_cFi,
	(void*)checkChangeJoint__12daNpc_Post_cFi,
	(void*)checkRemoveJoint__12daNpc_Post_cFi,
	(void*)getBackboneJointNo__12daNpc_Post_cFv,
	(void*)getNeckJointNo__12daNpc_Post_cFv,
	(void*)getHeadJointNo__12daNpc_Post_cFv,
	(void*)getFootLJointNo__12daNpc_Post_cFv,
	(void*)getFootRJointNo__12daNpc_Post_cFv,
	(void*)getEyeballLMaterialNo__8daNpcT_cFv,
	(void*)getEyeballRMaterialNo__8daNpcT_cFv,
	(void*)getEyeballMaterialNo__12daNpc_Post_cFv,
	(void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
	(void*)afterJntAnm__12daNpc_Post_cFi,
	(void*)setParam__12daNpc_Post_cFv,
	(void*)checkChangeEvt__12daNpc_Post_cFv,
	(void*)evtTalk__12daNpc_Post_cFv,
	(void*)evtEndProc__8daNpcT_cFv,
	(void*)evtCutProc__12daNpc_Post_cFv,
	(void*)setAfterTalkMotion__12daNpc_Post_cFv,
	(void*)evtProc__8daNpcT_cFv,
	(void*)action__12daNpc_Post_cFv,
	(void*)beforeMove__12daNpc_Post_cFv,
	(void*)afterMoved__12daNpc_Post_cFv,
	(void*)setAttnPos__12daNpc_Post_cFv,
	(void*)setFootPos__8daNpcT_cFv,
	(void*)setCollision__12daNpc_Post_cFv,
	(void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
	(void*)checkCullDraw__8daNpcT_cFv,
	(void*)twilight__8daNpcT_cFv,
	(void*)chkXYItems__8daNpcT_cFv,
	(void*)evtOrder__8daNpcT_cFv,
	(void*)decTmr__8daNpcT_cFv,
	(void*)clrParam__8daNpcT_cFv,
	(void*)drawDbgInfo__12daNpc_Post_cFv,
	(void*)drawOtherMdl__12daNpc_Post_cFv,
	(void*)drawGhost__8daNpcT_cFv,
	(void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
	(void*)afterSetMotionAnm__12daNpc_Post_cFiifi,
	(void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
	(void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
	(void*)changeAnm__8daNpcT_cFPiPi,
	(void*)changeBck__8daNpcT_cFPiPi,
	(void*)changeBtp__8daNpcT_cFPiPi,
	(void*)changeBtk__8daNpcT_cFPiPi,
	(void*)setMotionAnm__8daNpcT_cFifi,
};

/* 80AA8C8C-80AA8DE8 015C+00 s=1 e=0 z=0  None .text      __dt__12daNpc_Post_cFv                                       */
//	80AA8CAC: 80AADB14 (__vt__12daNpc_Post_c)
//	80AA8CB0: 80AADB14 (__vt__12daNpc_Post_c)
//	80AA8CC4: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AA8CD4: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AA8CE4: 80AAD430 (l_loadResPtrnList)
//	80AA8CE8: 80AAD430 (l_loadResPtrnList)
//	80AA8CF0: 80AAD414 (l_resNameList)
//	80AA8CF4: 80AAD414 (l_resNameList)
//	80AA8CF8: 801484AC (deleteRes__8daNpcT_cFPCScPPCc)
//	80AA8D04: 80AADB08 (__vt__13daNpcT_Path_c)
//	80AA8D08: 80AADB08 (__vt__13daNpcT_Path_c)
//	80AA8D14: 80AAC304 (__dt__18daNpcT_ActorMngr_cFv)
//	80AA8D18: 80AAC304 (__dt__18daNpcT_ActorMngr_cFv)
//	80AA8D24: 80361CE8 (__destroy_arr)
//	80AA8D30: 803AC050 (__vt__8dCcD_Cyl)
//	80AA8D34: 803AC050 (__vt__8dCcD_Cyl)
//	80AA8D54: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AA8D58: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AA8D70: 80AADAFC (__vt__8cM3dGCyl)
//	80AA8D74: 80AADAFC (__vt__8cM3dGCyl)
//	80AA8D84: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AA8D88: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AA8D98: 80AADAF0 (__vt__8cM3dGAab)
//	80AA8D9C: 80AADAF0 (__vt__8cM3dGAab)
//	80AA8DAC: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80AA8DB8: 80AABF04 (__dt__8daNpcT_cFv)
//	80AA8DC8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Post_c::~daNpc_Post_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA8DE8-80AA90B0 02C8+00 s=1 e=0 z=0  None .text      create__12daNpc_Post_cFv                                     */
//	80AA8DF8: 803621DC (_savegpr_29)
//	80AA8E00: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA8E04: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA8E08: 80AAD3AC (cNullVec__6Z2Calc)
//	80AA8E0C: 80AAD3AC (cNullVec__6Z2Calc)
//	80AA8E48: 80AACFF0 (__ct__12daNpc_Post_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AA8E5C: 80AA9794 (getType__12daNpc_Post_cFv)
//	80AA8E80: 801AC57C (dKy_darkworld_check__Fv)
//	80AA8EA0: 801483F8 (loadRes__8daNpcT_cFPCScPPCc)
//	80AA8EB4: 80AA97E0 (isDelete__12daNpc_Post_cFv)
//	80AA8ECC: 80AA971C (createHeapCallBack__12daNpc_Post_cFP10fopAc_ac_c)
//	80AA8ED0: 80AA971C (createHeapCallBack__12daNpc_Post_cFP10fopAc_ac_c)
//	80AA8EE4: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80AA8F24: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80AA8F3C: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80AA8F50: 80050C9C (init__7dPaPo_cFP9dBgS_Acchff)
//	80AA8F58: 80AA9828 (reset__12daNpc_Post_cFv)
//	80AA8F84: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80AA8FA8: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80AA8FB0: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80AA8FB4: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80AA8FB8: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80AA8FC4: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80AA8FC8: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80AA8FD4: 804061C0 (g_dComIfG_gameInfo)
//	80AA8FD8: 804061C0 (g_dComIfG_gameInfo)
//	80AA8FE0: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80AA9070: 80148C70 (setEnvTevColor__8daNpcT_cFv)
//	80AA9078: 80148CCC (setRoomNo__8daNpcT_cFv)
//	80AA9088: 80AA9668 (Execute__12daNpc_Post_cFv)
//	80AA909C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/create__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA90B0-80AA9478 03C8+00 s=1 e=0 z=0  None .text      CreateHeap__12daNpc_Post_cFv                                 */
//	80AA90C0: 803621CC (_savegpr_25)
//	80AA90C8: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA90CC: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA90D0: 80AAD3CC (l_bmdData)
//	80AA90D4: 80AAD3CC (l_bmdData)
//	80AA90E4: 80AAD414 (l_resNameList)
//	80AA90E8: 80AAD414 (l_resNameList)
//	80AA90F0: 804061C0 (g_dComIfG_gameInfo)
//	80AA90F4: 804061C0 (g_dComIfG_gameInfo)
//	80AA9108: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80AA9120: 802CEC4C (__nw__FUl)
//	80AA9168: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80AA9198: 80AA973C (ctrlJointCallBack__12daNpc_Post_cFP8J3DJointi)
//	80AA919C: 80AA973C (ctrlJointCallBack__12daNpc_Post_cFP8J3DJointi)
//	80AA91D0: 802CEC4C (__nw__FUl)
//	80AA91E0: 803CEE60 (__vt__14J3DMaterialAnm)
//	80AA91E4: 803CEE60 (__vt__14J3DMaterialAnm)
//	80AA91F0: 80AA961C (__ct__14J3DMatColorAnmFv)
//	80AA91F4: 80AA961C (__ct__14J3DMatColorAnmFv)
//	80AA91F8: 80AA95E0 (__dt__14J3DMatColorAnmFv)
//	80AA91FC: 80AA95E0 (__dt__14J3DMatColorAnmFv)
//	80AA9208: 80361D60 (__construct_array)
//	80AA9210: 80AA95C8 (__ct__12J3DTexMtxAnmFv)
//	80AA9214: 80AA95C8 (__ct__12J3DTexMtxAnmFv)
//	80AA9218: 80AA958C (__dt__12J3DTexMtxAnmFv)
//	80AA921C: 80AA958C (__dt__12J3DTexMtxAnmFv)
//	80AA9228: 80361D60 (__construct_array)
//	80AA9230: 80AA9568 (__ct__11J3DTexNoAnmFv)
//	80AA9234: 80AA9568 (__ct__11J3DTexNoAnmFv)
//	80AA9238: 80AA9520 (__dt__11J3DTexNoAnmFv)
//	80AA923C: 80AA9520 (__dt__11J3DTexNoAnmFv)
//	80AA9248: 80361D60 (__construct_array)
//	80AA9250: 80AA9508 (__ct__14J3DTevColorAnmFv)
//	80AA9254: 80AA9508 (__ct__14J3DTevColorAnmFv)
//	80AA9258: 80AA94CC (__dt__14J3DTevColorAnmFv)
//	80AA925C: 80AA94CC (__dt__14J3DTevColorAnmFv)
//	80AA9268: 80361D60 (__construct_array)
//	80AA9270: 80AA94B4 (__ct__15J3DTevKColorAnmFv)
//	80AA9274: 80AA94B4 (__ct__15J3DTevKColorAnmFv)
//	80AA9278: 80AA9478 (__dt__15J3DTevKColorAnmFv)
//	80AA927C: 80AA9478 (__dt__15J3DTevKColorAnmFv)
//	80AA9288: 80361D60 (__construct_array)
//	80AA9290: 8032C320 (initialize__14J3DMaterialAnmFv)
//	80AA9294: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80AA9298: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80AA92A4: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80AA92C0: 80AAD3CC (l_bmdData)
//	80AA92C4: 80AAD3CC (l_bmdData)
//	80AA92D4: 80AAD414 (l_resNameList)
//	80AA92D8: 80AAD414 (l_resNameList)
//	80AA92E8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80AA930C: 802CEC4C (__nw__FUl)
//	80AA9354: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80AA938C: 80AAD3CC (l_bmdData)
//	80AA9390: 80AAD3CC (l_bmdData)
//	80AA93B4: 80AAD414 (l_resNameList)
//	80AA93B8: 80AAD414 (l_resNameList)
//	80AA93C8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80AA93E8: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80AA9420: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	80AA9464: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/CreateHeap__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA9478-80AA94B4 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	80AA9498: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80AA94B4-80AA94CC 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80AA94CC-80AA9508 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	80AA94EC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80AA9508-80AA9520 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80AA9520-80AA9568 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	80AA9538: 80AADA6C (__vt__11J3DTexNoAnm)
//	80AA953C: 80AADA6C (__vt__11J3DTexNoAnm)
//	80AA954C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80AA9568-80AA958C 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	80AA9568: 80AADA6C (__vt__11J3DTexNoAnm)
//	80AA956C: 80AADA6C (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80AA958C-80AA95C8 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	80AA95AC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80AA95C8-80AA95E0 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80AA95E0-80AA961C 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	80AA9600: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80AA961C-80AA9634 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80AA9634-80AA9668 0034+00 s=1 e=0 z=0  None .text      Delete__12daNpc_Post_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/Delete__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA9668-80AA9688 0020+00 s=2 e=0 z=0  None .text      Execute__12daNpc_Post_cFv                                    */
//	80AA9674: 8014852C (execute__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/Execute__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA9688-80AA971C 0094+00 s=1 e=0 z=0  None .text      Draw__12daNpc_Post_cFv                                       */
//	80AA9698: 803621DC (_savegpr_29)
//	80AA96EC: 80AAD2BC (lit_4467)
//	80AA96F0: 80AAD2BC (lit_4467)
//	80AA9700: 8014886C (draw__8daNpcT_cFiifP11_GXColorS10fiii)
//	80AA9708: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/Draw__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA971C-80AA973C 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__12daNpc_Post_cFP10fopAc_ac_c             */
//	80AA9728: 80AA90B0 (CreateHeap__12daNpc_Post_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpc_Post_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/createHeapCallBack__12daNpc_Post_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80AA973C-80AA9794 0058+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__12daNpc_Post_cFP8J3DJointi                */
//	80AA9754: 80434AC8 (j3dSys)
//	80AA9758: 80434AC8 (j3dSys)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpc_Post_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/ctrlJointCallBack__12daNpc_Post_cFP8J3DJointi.s"
}
#pragma pop


/* 80AA9794-80AA97E0 004C+00 s=1 e=0 z=0  None .text      getType__12daNpc_Post_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::getType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/getType__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA97E0-80AA9828 0048+00 s=1 e=0 z=0  None .text      isDelete__12daNpc_Post_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::isDelete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/isDelete__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA9828-80AA99F0 01C8+00 s=1 e=0 z=0  None .text      reset__12daNpc_Post_cFv                                      */
//	80AA9838: 803621D8 (_savegpr_28)
//	80AA9840: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA9844: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA9860: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80AA9874: 80003458 (memset)
//	80AA987C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AA9884: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AA988C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AA9894: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AA989C: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AA9900: 80267954 (cM_rndF__Ff)
//	80AA9930: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AA9950: 80003458 (memset)
//	80AA9954: 8021E754 (dMeter2Info_getNewLetterNum__Fv)
//	80AA99D4: 8014A99C (setAngle__8daNpcT_cF5csXyz)
//	80AA99DC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/reset__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA99F0-80AA9A7C 008C+00 s=1 e=0 z=0  None .text      afterJntAnm__12daNpc_Post_cFi                                */
//	80AA9A10: 803DD470 (now__14mDoMtx_stack_c)
//	80AA9A14: 803DD470 (now__14mDoMtx_stack_c)
//	80AA9A18: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80AA9A1C: 803DD470 (now__14mDoMtx_stack_c)
//	80AA9A20: 803DD470 (now__14mDoMtx_stack_c)
//	80AA9A30: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80AA9A40: 803DD470 (now__14mDoMtx_stack_c)
//	80AA9A44: 803DD470 (now__14mDoMtx_stack_c)
//	80AA9A54: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80AA9A5C: 803DD470 (now__14mDoMtx_stack_c)
//	80AA9A60: 803DD470 (now__14mDoMtx_stack_c)
//	80AA9A64: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Post_c::afterJntAnm(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/afterJntAnm__12daNpc_Post_cFi.s"
}
#pragma pop


/* 80AA9A7C-80AA9BA4 0128+00 s=1 e=0 z=0  None .text      setParam__12daNpc_Post_cFv                                   */
//	80AA9A8C: 803621DC (_savegpr_29)
//	80AA9A94: 80AAA99C (selectAction__12daNpc_Post_cFv)
//	80AA9A9C: 80AA9D04 (srchActors__12daNpc_Post_cFv)
//	80AA9AA0: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA9AA4: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA9AB8: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80AA9AD0: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80AA9AE0: 804061C0 (g_dComIfG_gameInfo)
//	80AA9AE4: 804061C0 (g_dComIfG_gameInfo)
//	80AA9B04: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA9B08: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA9B50: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80AA9B54: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA9B58: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AA9B88: 80AAABA0 (pullOutLetter__12daNpc_Post_cFv)
//	80AA9B90: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/setParam__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA9BA4-80AA9C58 00B4+00 s=1 e=0 z=0  None .text      checkChangeEvt__12daNpc_Post_cFv                             */
//	80AA9BB8: 80AAD91C (lit_4596)
//	80AA9BBC: 80AAD91C (lit_4596)
//	80AA9BDC: 80AAA9E4 (chkAction__12daNpc_Post_cFM12daNpc_Post_cFPCvPvPv_i)
//	80AA9BF0: 804061C0 (g_dComIfG_gameInfo)
//	80AA9BF4: 804061C0 (g_dComIfG_gameInfo)
//	80AA9C1C: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80AA9C34: 8014A224 (evtChange__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::checkChangeEvt() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/checkChangeEvt__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA9C58-80AA9D04 00AC+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__12daNpc_Post_cFv                         */
//	80AA9C68: 803621DC (_savegpr_29)
//	80AA9CD4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AA9CE0: 80AAD2C0 (lit_4632)
//	80AA9CE4: 80AAD2C0 (lit_4632)
//	80AA9CF0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::setAfterTalkMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/setAfterTalkMotion__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA9D04-80AA9D98 0094+00 s=1 e=0 z=0  None .text      srchActors__12daNpc_Post_cFv                                 */
//	80AA9D14: 803621D8 (_savegpr_28)
//	80AA9D48: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80AA9D60: 8014BEE4 (getEvtAreaTagP__8daNpcT_cFii)
//	80AA9D6C: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80AA9D84: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::srchActors() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/srchActors__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA9D98-80AA9E98 0100+00 s=1 e=0 z=0  None .text      evtTalk__12daNpc_Post_cFv                                    */
//	80AA9DAC: 80AAD928 (lit_4653)
//	80AA9DB0: 80AAD928 (lit_4653)
//	80AA9DD0: 80AAA9E4 (chkAction__12daNpc_Post_cFM12daNpc_Post_cFPCvPvPv_i)
//	80AA9DE8: 80362084 (__ptmf_scall)
//	80AA9DFC: 804061C0 (g_dComIfG_gameInfo)
//	80AA9E00: 804061C0 (g_dComIfG_gameInfo)
//	80AA9E28: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80AA9E48: 8014A224 (evtChange__8daNpcT_cFv)
//	80AA9E54: 80AAD934 (lit_4663)
//	80AA9E58: 80AAD934 (lit_4663)
//	80AA9E7C: 80AAAA10 (setAction__12daNpc_Post_cFM12daNpc_Post_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::evtTalk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/evtTalk__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA9E98-80AA9F60 00C8+00 s=1 e=0 z=0  None .text      evtCutProc__12daNpc_Post_cFv                                 */
//	80AA9EB0: 804061C0 (g_dComIfG_gameInfo)
//	80AA9EB4: 804061C0 (g_dComIfG_gameInfo)
//	80AA9EC0: 80AAD34C (struct_80AAD34C)
//	80AA9EC4: 80AAD34C (struct_80AAD34C)
//	80AA9ED4: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80AA9EEC: 80AAD8F0 (mCutNameList__12daNpc_Post_c)
//	80AA9EF0: 80AAD8F0 (mCutNameList__12daNpc_Post_c)
//	80AA9F00: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80AA9F14: 80AAD904 (mCutList__12daNpc_Post_c)
//	80AA9F18: 80AAD904 (mCutList__12daNpc_Post_c)
//	80AA9F20: 80362084 (__ptmf_scall)
//	80AA9F38: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::evtCutProc() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/evtCutProc__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AA9F60-80AAA058 00F8+00 s=1 e=0 z=0  None .text      action__12daNpc_Post_cFv                                     */
//	80AA9F7C: 8014AA40 (hitChk__8daNpcT_cFP12dCcD_GObjInfUl)
//	80AA9F98: 80AAD2A0 (lit_4070)
//	80AA9F9C: 80AAD2A0 (lit_4070)
//	80AA9FE8: 80362018 (__ptmf_test)
//	80AA9FFC: 80362048 (__ptmf_cmpr)
//	80AAA014: 80362084 (__ptmf_scall)
//	80AAA040: 80AAAA10 (setAction__12daNpc_Post_cFM12daNpc_Post_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::action() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/action__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AAA058-80AAA124 00CC+00 s=1 e=0 z=0  None .text      beforeMove__12daNpc_Post_cFv                                 */
//	80AAA08C: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
//	80AAA0CC: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::beforeMove() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/beforeMove__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AAA124-80AAA1E4 00C0+00 s=1 e=0 z=0  None .text      afterMoved__12daNpc_Post_cFv                                 */
//	80AAA13C: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAA140: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAA180: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80AAA184: 804061C0 (g_dComIfG_gameInfo)
//	80AAA188: 804061C0 (g_dComIfG_gameInfo)
//	80AAA194: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::afterMoved() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/afterMoved__12daNpc_Post_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80AADBF0-80AADBF4 0001+03 s=1 e=0 z=0  None .bss       @1109                                                        */
static u8 lit_1109[1 + 3 /* padding */];

/* 80AAA1E4-80AAA570 038C+00 s=1 e=0 z=0  None .text      setAttnPos__12daNpc_Post_cFv                                 */
//	80AAA1FC: 803621D0 (_savegpr_26)
//	80AAA204: 80AADBF0 (lit_1109)
//	80AAA208: 80AADBF0 (lit_1109)
//	80AAA20C: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAA210: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAA240: 80147E3C (calc__19daNpcT_DmgStagger_cFi)
//	80AAA314: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	80AAA328: 80147C38 (calcJntRad__15daNpcT_JntAnm_cFfff)
//	80AAA330: 80149190 (setMtx__8daNpcT_cFv)
//	80AAA348: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	80AAA360: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA364: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA368: 803464B0 (PSMTXCopy)
//	80AAA36C: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA370: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA378: 803464B0 (PSMTXCopy)
//	80AAA38C: 803464B0 (PSMTXCopy)
//	80AAA394: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	80AAA3C4: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA3C8: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA3CC: 803464B0 (PSMTXCopy)
//	80AAA3D0: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA3D4: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA3E0: 80346D6C (PSMTXMultVec)
//	80AAA40C: 80AACC50 (setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs)
//	80AAA440: 80AACB34 (setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs)
//	80AAA488: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA48C: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA494: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80AAA498: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA49C: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA4A8: 80346D6C (PSMTXMultVec)
//	80AAA4B8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80AAA4F4: 80AAC28C (__dt__4cXyzFv)
//	80AAA4F8: 80AAC28C (__dt__4cXyzFv)
//	80AAA500: 80AA8C18 (__register_global_object)
//	80AAA55C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/setAttnPos__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AAA570-80AAA714 01A4+00 s=1 e=0 z=0  None .text      setCollision__12daNpc_Post_cFv                               */
//	80AAA594: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAA598: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAA5B4: 804061C0 (g_dComIfG_gameInfo)
//	80AAA5B8: 804061C0 (g_dComIfG_gameInfo)
//	80AAA65C: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA660: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA668: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80AAA66C: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA670: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA67C: 80346D6C (PSMTXMultVec)
//	80AAA68C: 80347090 (PSVECAdd)
//	80AAA698: 8026F1F8 (SetH__8cM3dGCylFf)
//	80AAA6A4: 8026F200 (SetR__8cM3dGCylFf)
//	80AAA6B0: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80AAA6B4: 804061C0 (g_dComIfG_gameInfo)
//	80AAA6B8: 804061C0 (g_dComIfG_gameInfo)
//	80AAA6C4: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::setCollision() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/setCollision__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AAA714-80AAA71C 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__12daNpc_Post_cFv                                */
// True False
//  bool False
bool daNpc_Post_c::drawDbgInfo() {
	return false;
}


/* 80AAA71C-80AAA8A4 0188+00 s=1 e=0 z=0  None .text      drawOtherMdl__12daNpc_Post_cFv                               */
//	80AAA72C: 803621D0 (_savegpr_26)
//	80AAA74C: 8042CA54 (g_env_light)
//	80AAA750: 8042CA54 (g_env_light)
//	80AAA75C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80AAA77C: 803258A0 (hide__13J3DShapeTableFv)
//	80AAA794: 803258D8 (show__13J3DShapeTableFv)
//	80AAA79C: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	80AAA7A8: 804061C0 (g_dComIfG_gameInfo)
//	80AAA7AC: 804061C0 (g_dComIfG_gameInfo)
//	80AAA7B8: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	80AAA7C4: 804061C0 (g_dComIfG_gameInfo)
//	80AAA7C8: 804061C0 (g_dComIfG_gameInfo)
//	80AAA808: 8042CA54 (g_env_light)
//	80AAA80C: 8042CA54 (g_env_light)
//	80AAA818: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80AAA824: 80AAD318 (jointNo)
//	80AAA828: 80AAD318 (jointNo)
//	80AAA838: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA83C: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA840: 803464B0 (PSMTXCopy)
//	80AAA844: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA848: 803DD470 (now__14mDoMtx_stack_c)
//	80AAA850: 803464B0 (PSMTXCopy)
//	80AAA860: 803464B0 (PSMTXCopy)
//	80AAA868: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80AAA878: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	80AAA890: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::drawOtherMdl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/drawOtherMdl__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AAA8A4-80AAA968 00C4+00 s=1 e=0 z=0  None .text      setFlagAnm__12daNpc_Post_cFiif                               */
//	80AAA8BC: 803621DC (_savegpr_29)
//	80AAA8CC: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAA8D0: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAA8E8: 80AAD940 (flagAnmData)
//	80AAA8EC: 80AAD940 (flagAnmData)
//	80AAA908: 80AAD414 (l_resNameList)
//	80AAA90C: 80AAD414 (l_resNameList)
//	80AAA914: 80148094 (getTrnsfrmKeyAnmP__8daNpcT_cFPCci)
//	80AAA940: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80AAA954: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
asm void daNpc_Post_c::setFlagAnm(int param_0, int param_1, f32 param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/setFlagAnm__12daNpc_Post_cFiif.s"
}
#pragma pop


/* 80AAA968-80AAA99C 0034+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__12daNpc_Post_cFiifi                       */
//	80AAA980: 80AAD2A0 (lit_4070)
//	80AAA984: 80AAD2A0 (lit_4070)
//	80AAA988: 80AAA8A4 (setFlagAnm__12daNpc_Post_cFiif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  int False
asm void daNpc_Post_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/afterSetMotionAnm__12daNpc_Post_cFiifi.s"
}
#pragma pop


/* 80AAA99C-80AAA9E4 0048+00 s=1 e=0 z=0  None .text      selectAction__12daNpc_Post_cFv                               */
//	80AAA99C: 803A2180 (__ptmf_null)
//	80AAA9A0: 803A2180 (__ptmf_null)
//	80AAA9BC: 80AAD9A8 (lit_5060)
//	80AAA9C0: 80AAD9A8 (lit_5060)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::selectAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/selectAction__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AAA9E4-80AAAA10 002C+00 s=2 e=0 z=0  None .text      chkAction__12daNpc_Post_cFM12daNpc_Post_cFPCvPvPv_i          */
//	80AAA9F4: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Post_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Post_c False
asm void daNpc_Post_c::chkAction(int (daNpc_Post_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/chkAction__12daNpc_Post_cFM12daNpc_Post_cFPCvPvPv_i.s"
}
#pragma pop


/* 80AAAA10-80AAAAB8 00A8+00 s=2 e=0 z=0  None .text      setAction__12daNpc_Post_cFM12daNpc_Post_cFPCvPvPv_i          */
//	80AAAA38: 80362018 (__ptmf_test)
//	80AAAA50: 80362084 (__ptmf_scall)
//	80AAAA7C: 80362018 (__ptmf_test)
//	80AAAA94: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Post_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Post_c False
asm void daNpc_Post_c::setAction(int (daNpc_Post_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/setAction__12daNpc_Post_cFM12daNpc_Post_cFPCvPvPv_i.s"
}
#pragma pop


/* 80AAAAB8-80AAAB2C 0074+00 s=1 e=0 z=0  None .text      chkPullOutLetter1__12daNpc_Post_cFv                          */
//	80AAAAD8: 80AAD5E4 (l_motionAnmData)
//	80AAAADC: 80AAD5E4 (l_motionAnmData)
//	80AAAAE8: 80AAD414 (l_resNameList)
//	80AAAAEC: 80AAD414 (l_resNameList)
//	80AAAAF8: 80148058 (getTrnsfrmAnmP__8daNpcT_cFPCci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::chkPullOutLetter1() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/chkPullOutLetter1__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AAAB2C-80AAABA0 0074+00 s=1 e=0 z=0  None .text      chkPullOutLetter2__12daNpc_Post_cFv                          */
//	80AAAB4C: 80AAD5E4 (l_motionAnmData)
//	80AAAB50: 80AAD5E4 (l_motionAnmData)
//	80AAAB5C: 80AAD414 (l_resNameList)
//	80AAAB60: 80AAD414 (l_resNameList)
//	80AAAB6C: 80148058 (getTrnsfrmAnmP__8daNpcT_cFPCci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::chkPullOutLetter2() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/chkPullOutLetter2__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AAABA0-80AAAC64 00C4+00 s=1 e=0 z=0  None .text      pullOutLetter__12daNpc_Post_cFv                              */
//	80AAABD0: 80AAAAB8 (chkPullOutLetter1__12daNpc_Post_cFv)
//	80AAABE4: 80AAD320 (lit_5115)
//	80AAABE8: 80AAD320 (lit_5115)
//	80AAAC38: 80AAAB2C (chkPullOutLetter2__12daNpc_Post_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Post_c::pullOutLetter() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/pullOutLetter__12daNpc_Post_cFv.s"
}
#pragma pop


/* 80AAAC64-80AAB61C 09B8+00 s=3 e=0 z=0  None .text      cutDeliver__12daNpc_Post_cFi                                 */
//	80AAAC74: 803621C4 (_savegpr_23)
//	80AAAC80: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAAC84: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAAC94: 804061C0 (g_dComIfG_gameInfo)
//	80AAAC98: 804061C0 (g_dComIfG_gameInfo)
//	80AAACA8: 80AAD34C (struct_80AAD34C)
//	80AAACAC: 80AAD34C (struct_80AAD34C)
//	80AAACB8: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80AAACD0: 80AAD34C (struct_80AAD34C)
//	80AAACD4: 80AAD34C (struct_80AAD34C)
//	80AAACE0: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80AAACF8: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80AAAD0C: 80AAD9E8 (lit_5415)
//	80AAAD10: 80AAD9E8 (lit_5415)
//	80AAAD50: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80AAAD6C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80AAADA4: 804061C0 (g_dComIfG_gameInfo)
//	80AAADA8: 804061C0 (g_dComIfG_gameInfo)
//	80AAADB0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AAADBC: 8014AA18 (setAngle__8daNpcT_cFs)
//	80AAADF4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAAE14: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAAE44: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80AAAE48: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80AAAE5C: 802AF49C (subBgmStart__8Z2SeqMgrFUl)
//	80AAAE60: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80AAAE64: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80AAAE94: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAAEB4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAAEDC: 804061C0 (g_dComIfG_gameInfo)
//	80AAAEE0: 804061C0 (g_dComIfG_gameInfo)
//	80AAAEEC: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AAAEF4: 803DD470 (now__14mDoMtx_stack_c)
//	80AAAEF8: 803DD470 (now__14mDoMtx_stack_c)
//	80AAAEFC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80AAAF00: 803DD470 (now__14mDoMtx_stack_c)
//	80AAAF04: 803DD470 (now__14mDoMtx_stack_c)
//	80AAAF10: 80346D6C (PSMTXMultVec)
//	80AAAF24: 80347090 (PSVECAdd)
//	80AAAF40: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80AAAF5C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80AAAFA4: 804061C0 (g_dComIfG_gameInfo)
//	80AAAFA8: 804061C0 (g_dComIfG_gameInfo)
//	80AAAFFC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAB028: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAB060: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AAB078: 804061C0 (g_dComIfG_gameInfo)
//	80AAB07C: 804061C0 (g_dComIfG_gameInfo)
//	80AAB088: 80035200 (onSwitch__10dSv_info_cFii)
//	80AAB0B0: 804061C0 (g_dComIfG_gameInfo)
//	80AAB0B4: 804061C0 (g_dComIfG_gameInfo)
//	80AAB0C0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AAB0F8: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80AAB104: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80AAB144: 80249F90 (init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c)
//	80AAB148: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80AAB14C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80AAB1A8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAB1D4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAB1FC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAB21C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAB244: 804061C0 (g_dComIfG_gameInfo)
//	80AAB248: 804061C0 (g_dComIfG_gameInfo)
//	80AAB254: 80035200 (onSwitch__10dSv_info_cFii)
//	80AAB298: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80AAB2B4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80AAB2F0: 8014AA18 (setAngle__8daNpcT_cFs)
//	80AAB300: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80AAB304: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80AAB310: 802AF884 (subBgmStop__8Z2SeqMgrFv)
//	80AAB31C: 80AAD9B4 (lit_5418)
//	80AAB320: 80AAD9B4 (lit_5418)
//	80AAB344: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AAB370: 80AACF10 (func_80AACF10)
//	80AAB388: 80AACF10 (func_80AACF10)
//	80AAB3C0: 80AACF10 (func_80AACF10)
//	80AAB3DC: 804061C0 (g_dComIfG_gameInfo)
//	80AAB3E0: 804061C0 (g_dComIfG_gameInfo)
//	80AAB3E8: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AAB410: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80AAB428: 804061C0 (g_dComIfG_gameInfo)
//	80AAB42C: 804061C0 (g_dComIfG_gameInfo)
//	80AAB454: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AAB474: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AAB4A0: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80AAB4F4: 8024A2D8 (doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci)
//	80AAB518: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AAB544: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80AAB55C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80AAB578: 80270740 (cLib_chaseF__FPfff)
//	80AAB580: 80AACF10 (func_80AACF10)
//	80AAB598: 80AACF10 (func_80AACF10)
//	80AAB5B4: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80AAB5E0: 8014B648 (step__8daNpcT_cFsiiii)
//	80AAB608: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Post_c::cutDeliver(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/cutDeliver__12daNpc_Post_cFi.s"
}
#pragma pop


/* 80AAB61C-80AABC24 0608+00 s=1 e=0 z=0  None .text      wait__12daNpc_Post_cFPv                                      */
//	80AAB634: 803621C8 (_savegpr_24)
//	80AAB63C: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAB640: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAB644: 804061C0 (g_dComIfG_gameInfo)
//	80AAB648: 804061C0 (g_dComIfG_gameInfo)
//	80AAB6C0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAB6EC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAB714: 80AACF2C (func_80AACF2C)
//	80AAB740: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAB76C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAB798: 804061C0 (g_dComIfG_gameInfo)
//	80AAB79C: 804061C0 (g_dComIfG_gameInfo)
//	80AAB7B4: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80AAB7D0: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80AAB7F8: 80AAD178 (chkPointInArea__15daTag_EvtArea_cF4cXyz)
//	80AAB83C: 8021E754 (dMeter2Info_getNewLetterNum__Fv)
//	80AAB894: 8034739C (PSVECSquareDistance)
//	80AAB904: 80450AE0 (__float_nan)
//	80AAB908: 80450AE0 (__float_nan)
//	80AAB974: 80450AE0 (__float_nan)
//	80AAB978: 80450AE0 (__float_nan)
//	80AABA10: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AABA18: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80AABA40: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AABA6C: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80AABA80: 8014ABD0 (chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs)
//	80AABA9C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AABAC4: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80AABAFC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AABB40: 8014AA18 (setAngle__8daNpcT_cFs)
//	80AABB64: 8014B648 (step__8daNpcT_cFsiiii)
//	80AABBA0: 80AACF10 (func_80AACF10)
//	80AABBC0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AABBE0: 80145A24 (checkEndSequence__22daNpcT_MotionSeqMngr_cFv)
//	80AABBFC: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80AABC10: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Post_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/wait__12daNpc_Post_cFPv.s"
}
#pragma pop


/* 80AABC24-80AABE04 01E0+00 s=3 e=0 z=0  None .text      talk__12daNpc_Post_cFPv                                      */
//	80AABC6C: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AABCC0: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80AABCDC: 804061C0 (g_dComIfG_gameInfo)
//	80AABCE0: 804061C0 (g_dComIfG_gameInfo)
//	80AABCE8: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80AABCEC: 804061C0 (g_dComIfG_gameInfo)
//	80AABCF0: 804061C0 (g_dComIfG_gameInfo)
//	80AABCF8: 80042468 (reset__14dEvt_control_cFv)
//	80AABD14: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AABD20: 80AAD2A0 (lit_4070)
//	80AABD24: 80AAD2A0 (lit_4070)
//	80AABD68: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AABD74: 80AAD2A0 (lit_4070)
//	80AABD78: 80AAD2A0 (lit_4070)
//	80AABDA4: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AABDB0: 80AAD2A0 (lit_4070)
//	80AABDB4: 80AAD2A0 (lit_4070)
//	80AABDE8: 8014B648 (step__8daNpcT_cFsiiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Post_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/talk__12daNpc_Post_cFPv.s"
}
#pragma pop


/* 80AABE04-80AABE24 0020+00 s=1 e=0 z=0  None .text      daNpc_Post_Create__FPv                                       */
//	80AABE10: 80AA8DE8 (create__12daNpc_Post_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Post_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/daNpc_Post_Create__FPv.s"
}
#pragma pop


/* 80AABE24-80AABE44 0020+00 s=1 e=0 z=0  None .text      daNpc_Post_Delete__FPv                                       */
//	80AABE30: 80AA9634 (Delete__12daNpc_Post_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Post_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/daNpc_Post_Delete__FPv.s"
}
#pragma pop


/* 80AABE44-80AABE64 0020+00 s=1 e=0 z=0  None .text      daNpc_Post_Execute__FPv                                      */
//	80AABE50: 80AA9668 (Execute__12daNpc_Post_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Post_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/daNpc_Post_Execute__FPv.s"
}
#pragma pop


/* 80AABE64-80AABE84 0020+00 s=1 e=0 z=0  None .text      daNpc_Post_Draw__FPv                                         */
//	80AABE70: 80AA9688 (Draw__12daNpc_Post_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Post_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/daNpc_Post_Draw__FPv.s"
}
#pragma pop


/* 80AABE84-80AABE8C 0008+00 s=1 e=0 z=0  None .text      daNpc_Post_IsDelete__FPv                                     */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Post_IsDelete(void* param_0) {
	return true;
}


/* 80AABE8C-80AABEBC 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	80AABEA8: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 80AABEBC-80AABF04 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80AABED4: 80AADAB4 (__vt__10cCcD_GStts)
//	80AABED8: 80AADAB4 (__vt__10cCcD_GStts)
//	80AABEE8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80AABF04-80AAC28C 0388+00 s=1 e=0 z=0  None .text      __dt__8daNpcT_cFv                                            */
//	80AABF24: 803B3A78 (__vt__8daNpcT_c)
//	80AABF28: 803B3A78 (__vt__8daNpcT_c)
//	80AABF3C: 80AAC2C8 (__dt__5csXyzFv)
//	80AABF40: 80AAC2C8 (__dt__5csXyzFv)
//	80AABF4C: 80361CE8 (__destroy_arr)
//	80AABF58: 80AADAE4 (__vt__15daNpcT_JntAnm_c)
//	80AABF5C: 80AADAE4 (__vt__15daNpcT_JntAnm_c)
//	80AABF68: 80AAC28C (__dt__4cXyzFv)
//	80AABF6C: 80AAC28C (__dt__4cXyzFv)
//	80AABF78: 80361CE8 (__destroy_arr)
//	80AABF80: 80AAC28C (__dt__4cXyzFv)
//	80AABF84: 80AAC28C (__dt__4cXyzFv)
//	80AABF90: 80361CE8 (__destroy_arr)
//	80AABF98: 80AAC28C (__dt__4cXyzFv)
//	80AABF9C: 80AAC28C (__dt__4cXyzFv)
//	80AABFA8: 80361CE8 (__destroy_arr)
//	80AABFB0: 80AAC28C (__dt__4cXyzFv)
//	80AABFB4: 80AAC28C (__dt__4cXyzFv)
//	80AABFC0: 80361CE8 (__destroy_arr)
//	80AABFC8: 80AAC28C (__dt__4cXyzFv)
//	80AABFCC: 80AAC28C (__dt__4cXyzFv)
//	80AABFD8: 80361CE8 (__destroy_arr)
//	80AABFE0: 80AAC28C (__dt__4cXyzFv)
//	80AABFE4: 80AAC28C (__dt__4cXyzFv)
//	80AABFF0: 80361CE8 (__destroy_arr)
//	80AABFFC: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC000: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC010: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC014: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC024: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC028: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC038: 80AADACC (__vt__22daNpcT_MotionSeqMngr_c)
//	80AAC03C: 80AADACC (__vt__22daNpcT_MotionSeqMngr_c)
//	80AAC04C: 80AADACC (__vt__22daNpcT_MotionSeqMngr_c)
//	80AAC050: 80AADACC (__vt__22daNpcT_MotionSeqMngr_c)
//	80AAC060: 80077CDC (__dt__11dBgS_LinChkFv)
//	80AAC06C: 800775F0 (__dt__11dBgS_GndChkFv)
//	80AAC078: 803AC2E4 (__vt__9dCcD_Stts)
//	80AAC07C: 803AC2E4 (__vt__9dCcD_Stts)
//	80AAC094: 80AADAC0 (__vt__10dCcD_GStts)
//	80AAC098: 80AADAC0 (__vt__10dCcD_GStts)
//	80AAC0A8: 80AADAB4 (__vt__10cCcD_GStts)
//	80AAC0AC: 80AADAB4 (__vt__10cCcD_GStts)
//	80AAC0BC: 803C3728 (__vt__9cCcD_Stts)
//	80AAC0C0: 803C3728 (__vt__9cCcD_Stts)
//	80AAC0D0: 80249F48 (__dt__10dMsgFlow_cFv)
//	80AAC0DC: 80267C94 (__dt__11cBgS_GndChkFv)
//	80AAC0E8: 80AADAA8 (__vt__12dBgS_AcchCir)
//	80AAC0EC: 80AADAA8 (__vt__12dBgS_AcchCir)
//	80AAC0FC: 8026EF18 (__dt__8cM3dGCirFv)
//	80AAC108: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AAC114: 803AC2E4 (__vt__9dCcD_Stts)
//	80AAC118: 803AC2E4 (__vt__9dCcD_Stts)
//	80AAC130: 80AADAC0 (__vt__10dCcD_GStts)
//	80AAC134: 80AADAC0 (__vt__10dCcD_GStts)
//	80AAC144: 80AADAB4 (__vt__10cCcD_GStts)
//	80AAC148: 80AADAB4 (__vt__10cCcD_GStts)
//	80AAC158: 803C3728 (__vt__9cCcD_Stts)
//	80AAC15C: 803C3728 (__vt__9cCcD_Stts)
//	80AAC16C: 80AADA84 (__vt__12dBgS_ObjAcch)
//	80AAC170: 80AADA84 (__vt__12dBgS_ObjAcch)
//	80AAC190: 80075F94 (__dt__9dBgS_AcchFv)
//	80AAC1AC: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC1B0: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC1D0: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC1D4: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC1F4: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC1F8: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC218: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC21C: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC23C: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC240: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC250: 802C0420 (__dt__10Z2CreatureFv)
//	80AAC25C: 80018C8C (__dt__10fopAc_ac_cFv)
//	80AAC26C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_c::~daNpcT_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__8daNpcT_cFv.s"
}
#pragma pop


/* 80AAC28C-80AAC2C8 003C+00 s=4 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80AAC2AC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__4cXyzFv.s"
}
#pragma pop


/* 80AAC2C8-80AAC304 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80AAC2E8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__5csXyzFv.s"
}
#pragma pop


/* 80AAC304-80AAC34C 0048+00 s=3 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv                                 */
//	80AAC31C: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC320: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC330: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80AAC34C-80AAC394 0048+00 s=1 e=0 z=0  None .text      __dt__13daNpcT_Path_cFv                                      */
//	80AAC364: 80AADB08 (__vt__13daNpcT_Path_c)
//	80AAC368: 80AADB08 (__vt__13daNpcT_Path_c)
//	80AAC378: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_Path_c::~daNpcT_Path_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__13daNpcT_Path_cFv.s"
}
#pragma pop


/* 80AAC394-80AAC3D0 003C+00 s=1 e=0 z=0  None .text      __ct__18daNpcT_ActorMngr_cFv                                 */
//	80AAC3A8: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC3AC: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC3B4: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__ct__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80AAC3D0-80AAC418 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80AAC3E8: 80AADAFC (__vt__8cM3dGCyl)
//	80AAC3EC: 80AADAFC (__vt__8cM3dGCyl)
//	80AAC3FC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80AAC418-80AAC460 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80AAC430: 80AADAF0 (__vt__8cM3dGAab)
//	80AAC434: 80AADAF0 (__vt__8cM3dGAab)
//	80AAC444: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80AAC460-80AAC864 0404+00 s=1 e=0 z=0  None .text      __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AAC470: 803621C0 (_savegpr_22)
//	80AAC498: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAC49C: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AAC4A0: 80018B64 (__ct__10fopAc_ac_cFv)
//	80AAC4A4: 803B3A78 (__vt__8daNpcT_c)
//	80AAC4A8: 803B3A78 (__vt__8daNpcT_c)
//	80AAC4C4: 802C03C8 (__ct__10Z2CreatureFv)
//	80AAC4CC: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC4D0: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC4E0: 803283FC (init__12J3DFrameCtrlFs)
//	80AAC4F0: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC4F4: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC504: 803283FC (init__12J3DFrameCtrlFs)
//	80AAC514: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC518: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC528: 803283FC (init__12J3DFrameCtrlFs)
//	80AAC538: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC53C: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC54C: 803283FC (init__12J3DFrameCtrlFs)
//	80AAC55C: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC560: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AAC570: 803283FC (init__12J3DFrameCtrlFs)
//	80AAC584: 800760A0 (__ct__9dBgS_AcchFv)
//	80AAC588: 80AADA84 (__vt__12dBgS_ObjAcch)
//	80AAC58C: 80AADA84 (__vt__12dBgS_ObjAcch)
//	80AAC5A8: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80AAC5AC: 803C3728 (__vt__9cCcD_Stts)
//	80AAC5B0: 803C3728 (__vt__9cCcD_Stts)
//	80AAC5BC: 80083760 (__ct__10dCcD_GSttsFv)
//	80AAC5C0: 803AC2E4 (__vt__9dCcD_Stts)
//	80AAC5C4: 803AC2E4 (__vt__9dCcD_Stts)
//	80AAC5D8: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80AAC5E0: 80267C1C (__ct__11cBgS_GndChkFv)
//	80AAC5E8: 80249F00 (__ct__10dMsgFlow_cFv)
//	80AAC5EC: 803C3728 (__vt__9cCcD_Stts)
//	80AAC5F0: 803C3728 (__vt__9cCcD_Stts)
//	80AAC5FC: 80083760 (__ct__10dCcD_GSttsFv)
//	80AAC600: 803AC2E4 (__vt__9dCcD_Stts)
//	80AAC604: 803AC2E4 (__vt__9dCcD_Stts)
//	80AAC614: 8007757C (__ct__11dBgS_GndChkFv)
//	80AAC61C: 80077C68 (__ct__11dBgS_LinChkFv)
//	80AAC620: 80AADACC (__vt__22daNpcT_MotionSeqMngr_c)
//	80AAC624: 80AADACC (__vt__22daNpcT_MotionSeqMngr_c)
//	80AAC638: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAC63C: 80AADACC (__vt__22daNpcT_MotionSeqMngr_c)
//	80AAC640: 80AADACC (__vt__22daNpcT_MotionSeqMngr_c)
//	80AAC654: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAC658: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC65C: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC668: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AAC66C: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC670: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC67C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AAC684: 80AADAE4 (__vt__15daNpcT_JntAnm_c)
//	80AAC688: 80AADAE4 (__vt__15daNpcT_JntAnm_c)
//	80AAC690: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC694: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC6A0: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AAC6A8: 80AAC964 (__ct__4cXyzFv)
//	80AAC6AC: 80AAC964 (__ct__4cXyzFv)
//	80AAC6B0: 80AAC28C (__dt__4cXyzFv)
//	80AAC6B4: 80AAC28C (__dt__4cXyzFv)
//	80AAC6C0: 80361D60 (__construct_array)
//	80AAC6C8: 80AAC964 (__ct__4cXyzFv)
//	80AAC6CC: 80AAC964 (__ct__4cXyzFv)
//	80AAC6D0: 80AAC28C (__dt__4cXyzFv)
//	80AAC6D4: 80AAC28C (__dt__4cXyzFv)
//	80AAC6E0: 80361D60 (__construct_array)
//	80AAC6E8: 80AAC964 (__ct__4cXyzFv)
//	80AAC6EC: 80AAC964 (__ct__4cXyzFv)
//	80AAC6F0: 80AAC28C (__dt__4cXyzFv)
//	80AAC6F4: 80AAC28C (__dt__4cXyzFv)
//	80AAC700: 80361D60 (__construct_array)
//	80AAC708: 80AAC964 (__ct__4cXyzFv)
//	80AAC70C: 80AAC964 (__ct__4cXyzFv)
//	80AAC710: 80AAC28C (__dt__4cXyzFv)
//	80AAC714: 80AAC28C (__dt__4cXyzFv)
//	80AAC720: 80361D60 (__construct_array)
//	80AAC728: 80AAC964 (__ct__4cXyzFv)
//	80AAC72C: 80AAC964 (__ct__4cXyzFv)
//	80AAC730: 80AAC28C (__dt__4cXyzFv)
//	80AAC734: 80AAC28C (__dt__4cXyzFv)
//	80AAC740: 80361D60 (__construct_array)
//	80AAC748: 80AAC964 (__ct__4cXyzFv)
//	80AAC74C: 80AAC964 (__ct__4cXyzFv)
//	80AAC750: 80AAC28C (__dt__4cXyzFv)
//	80AAC754: 80AAC28C (__dt__4cXyzFv)
//	80AAC760: 80361D60 (__construct_array)
//	80AAC768: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AAC770: 80AAC864 (__ct__5csXyzFv)
//	80AAC774: 80AAC864 (__ct__5csXyzFv)
//	80AAC778: 80AAC2C8 (__dt__5csXyzFv)
//	80AAC77C: 80AAC2C8 (__dt__5csXyzFv)
//	80AAC788: 80361D60 (__construct_array)
//	80AAC79C: 80003458 (memset)
//	80AAC7A4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAC7AC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AAC7B4: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AAC7BC: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AAC7C4: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AAC828: 80267954 (cM_rndF__Ff)
//	80AAC850: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/func_80AAC460.s"
}
#pragma pop


/* 80AAC864-80AAC868 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80AAC868-80AAC964 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv                                    */
//	80AAC888: 80AADAE4 (__vt__15daNpcT_JntAnm_c)
//	80AAC88C: 80AADAE4 (__vt__15daNpcT_JntAnm_c)
//	80AAC898: 80AAC28C (__dt__4cXyzFv)
//	80AAC89C: 80AAC28C (__dt__4cXyzFv)
//	80AAC8A8: 80361CE8 (__destroy_arr)
//	80AAC8B0: 80AAC28C (__dt__4cXyzFv)
//	80AAC8B4: 80AAC28C (__dt__4cXyzFv)
//	80AAC8C0: 80361CE8 (__destroy_arr)
//	80AAC8C8: 80AAC28C (__dt__4cXyzFv)
//	80AAC8CC: 80AAC28C (__dt__4cXyzFv)
//	80AAC8D8: 80361CE8 (__destroy_arr)
//	80AAC8E0: 80AAC28C (__dt__4cXyzFv)
//	80AAC8E4: 80AAC28C (__dt__4cXyzFv)
//	80AAC8F0: 80361CE8 (__destroy_arr)
//	80AAC8F8: 80AAC28C (__dt__4cXyzFv)
//	80AAC8FC: 80AAC28C (__dt__4cXyzFv)
//	80AAC908: 80361CE8 (__destroy_arr)
//	80AAC910: 80AAC28C (__dt__4cXyzFv)
//	80AAC914: 80AAC28C (__dt__4cXyzFv)
//	80AAC920: 80361CE8 (__destroy_arr)
//	80AAC92C: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC930: 80AADAD8 (__vt__18daNpcT_ActorMngr_c)
//	80AAC944: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop


/* 80AAC964-80AAC968 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80AAC968-80AAC9B0 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv                             */
//	80AAC980: 80AADACC (__vt__22daNpcT_MotionSeqMngr_c)
//	80AAC984: 80AADACC (__vt__22daNpcT_MotionSeqMngr_c)
//	80AAC994: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop


/* 80AAC9B0-80AACA20 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80AAC9D0: 80AADAA8 (__vt__12dBgS_AcchCir)
//	80AAC9D4: 80AADAA8 (__vt__12dBgS_AcchCir)
//	80AAC9E4: 8026EF18 (__dt__8cM3dGCirFv)
//	80AAC9F0: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AACA00: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80AACA20-80AACA7C 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80AACA38: 80AADAC0 (__vt__10dCcD_GStts)
//	80AACA3C: 80AADAC0 (__vt__10dCcD_GStts)
//	80AACA48: 80AADAB4 (__vt__10cCcD_GStts)
//	80AACA4C: 80AADAB4 (__vt__10cCcD_GStts)
//	80AACA60: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80AACA7C-80AACAEC 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80AACA9C: 80AADA84 (__vt__12dBgS_ObjAcch)
//	80AACAA0: 80AADA84 (__vt__12dBgS_ObjAcch)
//	80AACABC: 80075F94 (__dt__9dBgS_AcchFv)
//	80AACACC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80AACAEC-80AACB34 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80AACB04: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AACB08: 80AADA78 (__vt__12J3DFrameCtrl)
//	80AACB18: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80AACB34-80AACC50 011C+00 s=1 e=0 z=0  None .text      setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs                    */
//	80AACB4C: 803621D8 (_savegpr_28)
//	80AACB80: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80AACB9C: 80267674 (cM_atan2s__Fff)
//	80AACBC8: 80AAD2B8 (lit_4418)
//	80AACBCC: 80AAD2B8 (lit_4418)
//	80AACBD8: 80AAD2EC (lit_4845)
//	80AACBDC: 80AAD2EC (lit_4845)
//	80AACC3C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleY(cXyz param_0, s16 param_1, int param_2, f32 param_3, s16 param_4) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs.s"
}
#pragma pop


/* 80AACC50-80AACE58 0208+00 s=1 e=0 z=0  None .text      setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs                      */
//	80AACC68: 803621DC (_savegpr_29)
//	80AACC7C: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AACC80: 80AAD1EC (m__18daNpc_Post_Param_c)
//	80AACC9C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80AACCCC: 80347138 (PSVECSquareMag)
//	80AACD3C: 80450AE0 (__float_nan)
//	80AACD40: 80450AE0 (__float_nan)
//	80AACDAC: 80450AE0 (__float_nan)
//	80AACDB0: 80450AE0 (__float_nan)
//	80AACDC0: 80267674 (cM_atan2s__Fff)
//	80AACE44: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleX(cXyz param_0, f32 param_1, s16 param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs.s"
}
#pragma pop


/* 80AACE58-80AACE5C 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi                               */
// True False
//  void False
//  int False
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
	/* empty function */
}


/* 80AACE5C-80AACE64 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballLMaterialNo() {
	return false;
}


/* 80AACE64-80AACE6C 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballRMaterialNo() {
	return false;
}


/* 80AACE6C-80AACE74 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::evtEndProc() {
	return true;
}


/* 80AACE74-80AACE7C 0008+00 s=1 e=0 z=0  None .text      chkXYItems__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::chkXYItems() {
	return false;
}


/* 80AACE7C-80AACE94 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcT_c::decTmr() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/decTmr__8daNpcT_cFv.s"
}
#pragma pop


/* 80AACE94-80AACE98 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv                                       */
// True False
//  void False
void daNpcT_c::drawGhost() {
	/* empty function */
}


/* 80AACE98-80AACEA0 0008+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__8daNpcT_cFiifi                        */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 80AACEA0-80AACED0 0030+00 s=1 e=0 z=0  None .text      getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c False
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop


/* 80AACED0-80AACF00 0030+00 s=1 e=0 z=0  None .text      getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_motionAnmData_c False
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop


/* 80AACF00-80AACF04 0004+00 s=1 e=0 z=0  None .text      changeAnm__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AACF04-80AACF08 0004+00 s=1 e=0 z=0  None .text      changeBck__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBck(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AACF08-80AACF0C 0004+00 s=1 e=0 z=0  None .text      changeBtp__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AACF0C-80AACF10 0004+00 s=1 e=0 z=0  None .text      changeBtk__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AACF10-80AACF2C 001C+00 s=2 e=0 z=0  None .text      cLib_calcTimer<i>__FPi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int* False
// 	 int False
asm void cLib_calcTimer__template0(int* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/func_80AACF10.s"
}
#pragma pop


/* 80AACF2C-80AACF68 003C+00 s=1 e=0 z=0  None .text      cLib_getRndValue<f>__Fff                                     */
//	80AACF48: 80267954 (cM_rndF__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  f32 False
//  f32 False
asm void cLib_getRndValue__template0(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/func_80AACF2C.s"
}
#pragma pop


/* ############################################################################################## */
/* 80AADBD8-80AADBE4 000C+00 s=2 e=0 z=0  None .data      __vt__18daNpc_Post_Param_c                                   */
SECTION_DATA void* __vt__18daNpc_Post_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpc_Post_Param_cFv,
};

/* 80AADBF4-80AADBF8 0001+03 s=0 e=0 z=0  None .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 80AADBF8-80AADBFC 0001+03 s=0 e=0 z=0  None .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 80AADBFC-80AADC00 0001+03 s=0 e=0 z=0  None .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 80AADC00-80AADC04 0001+03 s=0 e=0 z=0  None .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 80AADC04-80AADC08 0001+03 s=0 e=0 z=0  None .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 80AADC08-80AADC0C 0001+03 s=0 e=0 z=0  None .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 80AADC0C-80AADC10 0001+03 s=0 e=0 z=0  None .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 80AADC10-80AADC14 0001+03 s=0 e=0 z=0  None .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 80AADC14-80AADC18 0001+03 s=0 e=0 z=0  None .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 80AADC18-80AADC1C 0001+03 s=0 e=0 z=0  None .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 80AADC1C-80AADC20 0001+03 s=0 e=0 z=0  None .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 80AADC20-80AADC24 0001+03 s=0 e=0 z=0  None .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 80AADC24-80AADC28 0001+03 s=0 e=0 z=0  None .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 80AADC28-80AADC2C 0001+03 s=0 e=0 z=0  None .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 80AADC2C-80AADC30 0001+03 s=0 e=0 z=0  None .bss       @1009                                                        */
u8 lit_1009[1 + 3 /* padding */];

/* 80AADC30-80AADC3C 000C+00 s=1 e=0 z=0  None .bss       @3839                                                        */
static u8 lit_3839[12];

/* 80AADC3C-80AADC40 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80AACF68-80AACFF0 0088+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_post_cpp                                     */
//	80AACF74: 80AAD904 (mCutList__12daNpc_Post_c)
//	80AACF78: 80AAD904 (mCutList__12daNpc_Post_c)
//	80AACF7C: 803A2180 (__ptmf_null)
//	80AACF80: 803A2180 (__ptmf_null)
//	80AACF9C: 80AAD8F8 (lit_3838)
//	80AACFA0: 80AAD8F8 (lit_3838)
//	80AACFBC: 80AADBD8 (__vt__18daNpc_Post_Param_c)
//	80AACFC0: 80AADBD8 (__vt__18daNpc_Post_Param_c)
//	80AACFC4: 80AADC3C (l_HIO)
//	80AACFC8: 80AADC3C (l_HIO)
//	80AACFCC: 80AAD120 (__dt__18daNpc_Post_Param_cFv)
//	80AACFD0: 80AAD120 (__dt__18daNpc_Post_Param_cFv)
//	80AACFD4: 80AADC30 (lit_3839)
//	80AACFD8: 80AADC30 (lit_3839)
//	80AACFDC: 80AA8C18 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_post_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__sinit_d_a_npc_post_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80AACF68 = (void*)__sinit_d_a_npc_post_cpp;
#pragma pop


/* 80AACFF0-80AAD0D0 00E0+00 s=1 e=0 z=0  None .text      __ct__12daNpc_Post_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AAD010: 80AAC460 (__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AAD014: 80AADB14 (__vt__12daNpc_Post_c)
//	80AAD018: 80AADB14 (__vt__12daNpc_Post_c)
//	80AAD028: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80AAD02C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AAD030: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AAD038: 80AADAF0 (__vt__8cM3dGAab)
//	80AAD03C: 80AADAF0 (__vt__8cM3dGAab)
//	80AAD044: 80AADAFC (__vt__8cM3dGCyl)
//	80AAD048: 80AADAFC (__vt__8cM3dGCyl)
//	80AAD050: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AAD054: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AAD064: 803AC050 (__vt__8dCcD_Cyl)
//	80AAD068: 803AC050 (__vt__8dCcD_Cyl)
//	80AAD084: 80AAC394 (__ct__18daNpcT_ActorMngr_cFv)
//	80AAD088: 80AAC394 (__ct__18daNpcT_ActorMngr_cFv)
//	80AAD08C: 80AAC304 (__dt__18daNpcT_ActorMngr_cFv)
//	80AAD090: 80AAC304 (__dt__18daNpcT_ActorMngr_cFv)
//	80AAD09C: 80361D60 (__construct_array)
//	80AAD0A4: 80AADB08 (__vt__13daNpcT_Path_c)
//	80AAD0A8: 80AADB08 (__vt__13daNpcT_Path_c)
//	80AAD0B0: 80145C40 (initialize__13daNpcT_Path_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpc_Post_c::daNpc_Post_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/func_80AACFF0.s"
}
#pragma pop


/* 80AAD0D0-80AAD0D8 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__12daNpc_Post_cFv                       */
// True False
//  bool False
bool daNpc_Post_c::getEyeballMaterialNo() {
	return true;
}


/* 80AAD0D8-80AAD0E0 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__12daNpc_Post_cFv                             */
// True False
//  s32 False
s32 daNpc_Post_c::getHeadJointNo() {
	return 4;
}


/* 80AAD0E0-80AAD0E8 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__12daNpc_Post_cFv                             */
// True False
//  s32 False
s32 daNpc_Post_c::getNeckJointNo() {
	return 3;
}


/* 80AAD0E8-80AAD0F0 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__12daNpc_Post_cFv                         */
// True False
//  bool False
bool daNpc_Post_c::getBackboneJointNo() {
	return true;
}


/* 80AAD0F0-80AAD100 0010+00 s=1 e=0 z=0  None .text      checkChangeJoint__12daNpc_Post_cFi                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Post_c::checkChangeJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/checkChangeJoint__12daNpc_Post_cFi.s"
}
#pragma pop


/* 80AAD100-80AAD110 0010+00 s=1 e=0 z=0  None .text      checkRemoveJoint__12daNpc_Post_cFi                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Post_c::checkRemoveJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/checkRemoveJoint__12daNpc_Post_cFi.s"
}
#pragma pop


/* 80AAD110-80AAD118 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__12daNpc_Post_cFv                            */
// True False
//  s32 False
s32 daNpc_Post_c::getFootLJointNo() {
	return 24;
}


/* 80AAD118-80AAD120 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__12daNpc_Post_cFv                            */
// True False
//  s32 False
s32 daNpc_Post_c::getFootRJointNo() {
	return 27;
}


/* 80AAD120-80AAD168 0048+00 s=2 e=0 z=0  None .text      __dt__18daNpc_Post_Param_cFv                                 */
//	80AAD138: 80AADBD8 (__vt__18daNpc_Post_Param_c)
//	80AAD13C: 80AADBD8 (__vt__18daNpc_Post_Param_c)
//	80AAD14C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Post_Param_c::~daNpc_Post_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/__dt__18daNpc_Post_Param_cFv.s"
}
#pragma pop


/* 80AAD168-80AAD170 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80AAD16C: 80AACA7C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AAD168() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/func_80AAD168.s"
}
#pragma pop


/* 80AAD170-80AAD178 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80AAD174: 80AACA7C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AAD170() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/func_80AAD170.s"
}
#pragma pop


/* 80AAD178-80AAD1D8 0060+00 s=1 e=0 z=0  None .text      chkPointInArea__15daTag_EvtArea_cF4cXyz                      */
//	80AAD184: 80AAD2A0 (lit_4070)
//	80AAD188: 80AAD2A0 (lit_4070)
//	80AAD1C4: 8048C94C (chkPointInArea__15daTag_EvtArea_cF4cXyz4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
asm void daTag_EvtArea_c::chkPointInArea(cXyz param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_post/d_a_npc_post/chkPointInArea__15daTag_EvtArea_cF4cXyz.s"
}
#pragma pop


/* ############################################################################################## */
/* 80AADC40-80AADC50 000C+04 s=0 e=0 z=0  None .bss       @4753                                                        */
u8 lit_4753[12 + 4 /* padding */];

/* 80AADC50-80AADC5C 000C+00 s=0 e=0 z=0  None .bss       prtclScl$4752                                                */
u8 data_80AADC50[12];

/* 80AADC5C-80AADC60 0004+00 s=0 e=0 z=0  None .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_80AADC5C[4];

/* 80AADC60-80AADC64 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_80AADC60[4];

/* 80AADC64-80AADC68 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_80AADC64[4];

/* 80AADC68-80AADC6C 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_80AADC68[4];

/* 80AADC6C-80AADC70 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_80AADC6C[4];

/* 80AADC70-80AADC74 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_80AADC70[4];

/* 80AADC74-80AADC78 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_80AADC74[4];

/* 80AADC78-80AADC7C 0004+00 s=0 e=0 z=0  None .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_80AADC78[4];

/* 80AADC7C-80AADC80 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_80AADC7C[4];

/* 80AADC80-80AADC84 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_80AADC80[4];

/* 80AADC84-80AADC88 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_80AADC84[4];

/* 80AADC88-80AADC8C 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_80AADC88[4];

/* 80AADC8C-80AADC90 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_80AADC8C[4];

/* 80AADC90-80AADC94 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_80AADC90[4];

/* 80AADC94-80AADC98 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_80AADC94[4];

/* 80AADC98-80AADC9C 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_80AADC98[4];

/* 80AADC9C-80AADCA0 0004+00 s=0 e=0 z=0  None .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_80AADC9C[4];

/* 80AADCA0-80AADCA4 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_80AADCA0[4];

/* 80AADCA4-80AADCA8 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_80AADCA4[4];

/* 80AADCA8-80AADCAC 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_80AADCA8[4];

/* 80AADCAC-80AADCB0 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_80AADCAC[4];

/* 80AADCB0-80AADCB4 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_80AADCB0[4];

/* 80AADCB4-80AADCB8 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_80AADCB4[4];

/* 80AADCB8-80AADCBC 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_80AADCB8[4];

/* 80AADCBC-80AADCC0 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_80AADCBC[4];

