// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_toby
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_toby/d_a_npc_toby.h"

// 
// Types:
// 

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daSCannon_c {
	/* 80CC8DDC */ // False False
void setCannonRepair();
};

struct daObj_AutoMata_c {
	/* 80BA6500 */ // False False
//  int False
//  bool False
void setAnm(int, bool);
};

struct daNpcT_MotionSeqMngr_c {
	struct sequenceStepData_c {
	};

	/* 80145898 */ // False False
void initialize();
	/* 80145A24 */ // False False
void checkEndSequence();
	/* 80B2418C */ // True False
~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_motionAnmData_c {
};

struct daNpcT_evtData_c {
};

struct J3DJoint {
};

struct daNpcT_faceMotionAnmData_c {
};

struct daNpc_Toby_c {
	/* 80B1E64C */ // True False
~daNpc_Toby_c();
	/* 80B1E798 */ // True False
void create();
	/* 80B1EA60 */ // True False
void CreateHeap();
	/* 80B1EF28 */ // True False
void Delete();
	/* 80B1EF5C */ // True False
void Execute();
	/* 80B1EF7C */ // True False
void Draw();
	/* 80B1F010 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80B1F030 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 80B1F088 */ // True False
//  void* False
// 	 void False
//  void* False
// 	 void False
void srchToby(void*, void*);
	/* 80B1F124 */ // True False
//  int False
void getOtherTobyP(int);
	/* 80B1F200 */ // True False
void getType();
	/* 80B1F274 */ // True False
void isDelete();
	/* 80B1F384 */ // True False
void reset();
	/* 80B1F5AC */ // True False
//  int False
void afterJntAnm(int);
	/* 80B1F638 */ // True False
void setParam();
	/* 80B1F784 */ // True False
void checkChangeEvt();
	/* 80B1F950 */ // True False
void setAfterTalkMotion();
	/* 80B1FA08 */ // True False
void srchActors();
	/* 80B1FB34 */ // True False
void evtTalk();
	/* 80B1FBD4 */ // True False
void evtCutProc();
	/* 80B1FC9C */ // True False
void action();
	/* 80B1FE68 */ // True False
void beforeMove();
	/* 80B1FF2C */ // True False
void setAttnPos();
	/* 80B20278 */ // True False
void setCollision();
	/* 80B2042C */ // True False
//  bool False
bool drawDbgInfo();
	/* 80B20434 */ // True False
void drawOtherMdl();
	/* 80B2050C */ // True False
//  int False
//  int False
//  f32 False
//  int False
void afterSetFaceMotionAnm(int, int, f32, int);
	/* 80B20568 */ // True False
//  int False
//  int False
//  f32 False
//  int False
void afterSetMotionAnm(int, int, f32, int);
	/* 80B205F4 */ // True False
void selectAction();
	/* 80B20710 */ // True False
//  int (daNpc_Toby_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Toby_c False
void chkAction(int (daNpc_Toby_c::*)(void*));
	/* 80B2073C */ // True False
//  int (daNpc_Toby_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Toby_c False
void setAction(int (daNpc_Toby_c::*)(void*));
	/* 80B207E4 */ // True False
//  int False
void cutTobyHouseFire(int);
	/* 80B20AB0 */ // True False
//  int False
void cutTalkToOneself(int);
	/* 80B20FC0 */ // True False
//  int False
void cutRepairSCannon(int);
	/* 80B215B4 */ // True False
//  int False
void cutSCannon(int);
	/* 80B219F4 */ // True False
//  int False
void cutConversationAboutSCannon(int);
	/* 80B22434 */ // True False
//  int False
void cutConversationAboutZra(int);
	/* 80B22614 */ // True False
void chkAttnZra();
	/* 80B226B0 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80B22D98 */ // True False
//  void* False
// 	 void False
void walk(void*);
	/* 80B22FAC */ // True False
//  void* False
// 	 void False
void play(void*);
	/* 80B23344 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80B24840 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpc_Toby_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80B24920 */ // True False
//  s32 False
s32 getEyeballMaterialNo();
	/* 80B24928 */ // True False
//  s32 False
s32 getHeadJointNo();
	/* 80B24930 */ // True False
//  s32 False
s32 getNeckJointNo();
	/* 80B24938 */ // True False
//  bool False
bool getBackboneJointNo();
	/* 80B24940 */ // True False
//  int False
void checkChangeJoint(int);
	/* 80B24950 */ // True False
//  int False
void checkRemoveJoint(int);
	/* 80B24960 */ // True False
//  s32 False
s32 getFootLJointNo();
	/* 80B24968 */ // True False
//  s32 False
s32 getFootRJointNo();
	/* 80B24970 */ // True False
//  bool False
bool chkXYItems();
};

struct daNpc_Toby_Param_c {
	/* 80B24978 */ // True False
~daNpc_Toby_Param_c();
};

struct J3DModel {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80B23AB0 */ // True False
~cXyz();
	/* 80B24188 */ // True False
cXyz();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct csXyz {
	/* 80B23AEC */ // True False
~csXyz();
	/* 80B24088 */ // True False
csXyz();
};

struct _GXColorS10 {
};

struct daNpcT_c {
	/* 80147FA4 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
void tgHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
	/* 801483F8 */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void loadRes(s8 const*, char const**);
	/* 801484AC */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void deleteRes(s8 const*, char const**);
	/* 8014852C */ // False False
void execute();
	/* 8014886C */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
	/* 80148C70 */ // False False
void setEnvTevColor();
	/* 80148CCC */ // False False
void setRoomNo();
	/* 801490D4 */ // False False
void ctrlBtk();
	/* 80149190 */ // False False
void setMtx();
	/* 8014951C */ // False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 8014997C */ // False False
void evtProc();
	/* 80149BB4 */ // False False
void setFootPos();
	/* 80149D7C */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
void setFootPrtcl(cXyz*, f32, f32);
	/* 8014A05C */ // False False
//  bool False
bool checkCullDraw();
	/* 8014A064 */ // False False
void twilight();
	/* 8014A0B0 */ // False False
void evtOrder();
	/* 8014A224 */ // False False
void evtChange();
	/* 8014A324 */ // False False
void clrParam();
	/* 8014A388 */ // False False
//  int False
//  bool False
void setFaceMotionAnm(int, bool);
	/* 8014A628 */ // False False
//  int False
//  f32 False
//  int False
void setMotionAnm(int, f32, int);
	/* 8014A908 */ // False False
//  cXyz False
void setPos(cXyz);
	/* 8014AA18 */ // False False
//  s16 False
void setAngle(s16);
	/* 8014A99C */ // False False
//  csXyz False
void setAngle(csXyz);
	/* 8014AA40 */ // False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
void hitChk(dCcD_GObjInf*, u32);
	/* 8014AAD0 */ // False False
//  int False
//  int False
//  int False
void setDamage(int, int, int);
	/* 8014ABD0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
void chkActorInSight(fopAc_ac_c*, f32, s16);
	/* 8014ACF0 */ // False False
//  cXyz False
//  cXyz False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
void chkPointInArea(cXyz, cXyz, f32, f32, f32, s16);
	/* 8014B338 */ // False False
void srchPlayerActor();
	/* 8014B3EC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void getAttnPos(fopAc_ac_c*);
	/* 8014B648 */ // False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
void step(s16, int, int, int, int);
	/* 8014B808 */ // False False
//  cXyz False
//  int False
//  s16 False
//  s16 False
void calcSpeedAndAngle(cXyz, int, s16, s16);
	/* 8014BBF0 */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 8014BC78 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void talkProc(int*, int, fopAc_ac_c**, int);
	/* 8014BE2C */ // False False
//  s16 False
void getNearestActorP(s16);
	/* 80B23728 */ // True False
~daNpcT_c();
	/* 80B23C84 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80B2467C */ // True False
//  void False
//  int False
void ctrlSubFaceMotion(int);
	/* 80B24680 */ // True False
//  bool False
bool getEyeballLMaterialNo();
	/* 80B24688 */ // True False
//  bool False
bool getEyeballRMaterialNo();
	/* 80B24690 */ // True False
//  bool False
bool evtEndProc();
	/* 80B24698 */ // True False
//  void False
void afterMoved();
	/* 80B2469C */ // True False
void decTmr();
	/* 80B246B4 */ // True False
//  void False
void drawGhost();
	/* 80B246B8 */ // True False
//  daNpcT_faceMotionAnmData_c False
void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
	/* 80B246E8 */ // True False
//  daNpcT_motionAnmData_c False
void getMotionAnm(daNpcT_motionAnmData_c);
	/* 80B24718 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeAnm(int*, int*);
	/* 80B2471C */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBck(int*, int*);
	/* 80B24720 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtp(int*, int*);
	/* 80B24724 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtk(int*, int*);
};

struct daNpcT_Path_c {
	/* 80145C40 */ // False False
void initialize();
	/* 80145C74 */ // False False
//  u8 False
//  s8 False
//  u8 False
void setPathInfo(u8, s8, u8);
	/* 80145DD0 */ // False False
//  int False
void setNextIdx(int);
	/* 80145FB4 */ // False False
//  cXyz False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
void getDstPosH(cXyz, cXyz*, int, int);
	/* 80B23B70 */ // True False
~daNpcT_Path_c();
};

struct daNpcT_MatAnm_c {
	/* 80145764 */ // False False
void initialize();
};

struct daNpcT_JntAnm_c {
	/* 80146C98 */ // False False
void initialize();
	/* 80146CD8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
void setParam(fopAc_ac_c*, J3DModel*, cXyz*, int, int, int, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, cXyz*);
	/* 80147C38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void calcJntRad(f32, f32, f32);
	/* 80B2408C */ // True False
~daNpcT_JntAnm_c();
	/* 80B24358 */ // True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
void setEyeAngleY(cXyz, s16, int, f32, s16);
	/* 80B24474 */ // True False
//  cXyz False
//  f32 False
//  s16 False
void setEyeAngleX(cXyz, f32, s16);
};

struct daNpcT_DmgStagger_c {
	/* 80147DCC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
void setParam(fopAc_ac_c*, fopAc_ac_c*, s16);
	/* 80147E3C */ // False False
//  int False
void calc(int);
};

struct daNpcT_ActorMngr_c {
	/* 801456D4 */ // False False
void initialize();
	/* 801456E0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801456FC */ // False False
void remove();
	/* 80145708 */ // False False
void getActorP();
	/* 80B23B28 */ // True False
~daNpcT_ActorMngr_c();
	/* 80B23BB8 */ // True False
daNpcT_ActorMngr_c();
};

struct dSv_memBit_c {
	/* 80034860 */ // False False
//  int False
void isSwitch(int) const;
};

struct dSv_info_c {
	/* 800352B0 */ // False False
//  int False
//  int False
void offSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dBgS {
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80B241D4 */ // True False
~dBgS_AcchCir();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct dPaPo_c {
	/* 80050C9C */ // False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
//  f32 False
//  f32 False
void init(dBgS_Acch*, f32, f32);
};

struct dMsgObject_c {
	/* 8023822C */ // False False
void getStatus();
	/* 802382F4 */ // False False
void isMsgSendControl();
	/* 80238320 */ // False False
void onMsgSend();
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
	/* 8024A528 */ // False False
//  int* False
// 	 int False
void getEventId(int*);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 8004365C */ // False False
//  void* False
// 	 void False
void setPt2(void*);
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 800480EC */ // False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getMySubstanceP(int, char const*, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800483C4 */ // False False
//  cXyz* False
// 	 cXyz False
void setGoal(cXyz*);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dDlst_shadowControl_c {
	/* 80055F1C */ // False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
void addReal(u32, J3DModel*);
};

struct dComIfG_play_c {
	/* 8002C97C */ // False False
//  int False
void getLayerNo(int);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80B24244 */ // True False
~dCcD_GStts();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80B242A0 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80B23BF4 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80B23C3C */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80B236E0 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
};

struct cBgS {
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
};

struct Z2SeqMgr {
	/* 802AFB94 */ // False False
//  u32 False
void bgmStreamPrepare(u32);
	/* 802AFE18 */ // False False
void bgmStreamPlay();
	/* 802AFEDC */ // False False
//  u32 False
void bgmStreamStop(u32);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DTexNoAnm {
	/* 80B1EE14 */ // True False
~J3DTexNoAnm();
	/* 80B1EE5C */ // True False
J3DTexNoAnm();
	/* 80B236B0 */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 80B1EE80 */ // True False
~J3DTexMtxAnm();
	/* 80B1EEBC */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 80B1ED6C */ // True False
~J3DTevKColorAnm();
	/* 80B1EDA8 */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 80B1EDC0 */ // True False
~J3DTevColorAnm();
	/* 80B1EDFC */ // True False
J3DTevColorAnm();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 80B1EED4 */ // True False
~J3DMatColorAnm();
	/* 80B1EF10 */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80B24310 */ // True False
~J3DFrameCtrl();
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpc_Toby_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Toby_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Toby_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Toby_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Toby_IsDelete(void*);
// False True
//  int* False
// 	 int False
void cLib_calcTimer__template0(int*);

// True False
extern "C" void __dt__12daNpc_Toby_cFv();
// True False
extern "C" void create__12daNpc_Toby_cFv();
// True False
extern "C" void CreateHeap__12daNpc_Toby_cFv();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
extern "C" void Delete__12daNpc_Toby_cFv();
// True False
extern "C" void Execute__12daNpc_Toby_cFv();
// True False
extern "C" void Draw__12daNpc_Toby_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__12daNpc_Toby_cFP10fopAc_ac_c();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__12daNpc_Toby_cFP8J3DJointi();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void srchToby__12daNpc_Toby_cFPvPv();
// True False
//  int False
extern "C" void getOtherTobyP__12daNpc_Toby_cFi();
// True False
extern "C" void getType__12daNpc_Toby_cFv();
// True False
extern "C" void isDelete__12daNpc_Toby_cFv();
// True False
extern "C" void reset__12daNpc_Toby_cFv();
// True False
//  int False
extern "C" void afterJntAnm__12daNpc_Toby_cFi();
// True False
extern "C" void setParam__12daNpc_Toby_cFv();
// True False
extern "C" void checkChangeEvt__12daNpc_Toby_cFv();
// True False
extern "C" void setAfterTalkMotion__12daNpc_Toby_cFv();
// True False
extern "C" void srchActors__12daNpc_Toby_cFv();
// True False
extern "C" void evtTalk__12daNpc_Toby_cFv();
// True False
extern "C" void evtCutProc__12daNpc_Toby_cFv();
// True False
extern "C" void action__12daNpc_Toby_cFv();
// True False
extern "C" void beforeMove__12daNpc_Toby_cFv();
// True False
extern "C" void setAttnPos__12daNpc_Toby_cFv();
// True False
extern "C" void setCollision__12daNpc_Toby_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__12daNpc_Toby_cFv();
// True False
extern "C" void drawOtherMdl__12daNpc_Toby_cFv();
// True False
//  int False
//  int False
//  f32 False
//  int False
extern "C" void afterSetFaceMotionAnm__12daNpc_Toby_cFiifi();
// True False
//  int False
//  int False
//  f32 False
//  int False
extern "C" void afterSetMotionAnm__12daNpc_Toby_cFiifi();
// True False
extern "C" void selectAction__12daNpc_Toby_cFv();
// True False
//  int (daNpc_Toby_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Toby_c False
extern "C" void chkAction__12daNpc_Toby_cFM12daNpc_Toby_cFPCvPvPv_i();
// True False
//  int (daNpc_Toby_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Toby_c False
extern "C" void setAction__12daNpc_Toby_cFM12daNpc_Toby_cFPCvPvPv_i();
// True False
//  int False
extern "C" void cutTobyHouseFire__12daNpc_Toby_cFi();
// True False
//  int False
extern "C" void cutTalkToOneself__12daNpc_Toby_cFi();
// True False
//  int False
extern "C" void cutRepairSCannon__12daNpc_Toby_cFi();
// True False
//  int False
extern "C" void cutSCannon__12daNpc_Toby_cFi();
// True False
//  int False
extern "C" void cutConversationAboutSCannon__12daNpc_Toby_cFi();
// True False
//  int False
extern "C" void cutConversationAboutZra__12daNpc_Toby_cFi();
// True False
extern "C" void chkAttnZra__12daNpc_Toby_cFv();
// True False
//  void* False
// 	 void False
extern "C" void wait__12daNpc_Toby_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void walk__12daNpc_Toby_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void play__12daNpc_Toby_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__12daNpc_Toby_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Toby_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Toby_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Toby_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Toby_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpc_Toby_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__8daNpcT_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__13daNpcT_Path_cFv();
// True False
extern "C" void __ct__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__15daNpcT_JntAnm_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
extern "C" void setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs();
// True False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs();
// True False
//  void False
//  int False
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
// True False
//  bool False
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool evtEndProc__8daNpcT_cFv();
// True False
//  void False
extern "C" void afterMoved__8daNpcT_cFv();
// True False
extern "C" void decTmr__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawGhost__8daNpcT_cFv();
// True False
//  daNpcT_faceMotionAnmData_c False
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
// True False
//  daNpcT_motionAnmData_c False
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeAnm__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBck__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtp__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtk__8daNpcT_cFPiPi();
// False True
//  int* False
// 	 int False
extern "C" void func_80B24728();
// False False
extern "C" void __sinit_d_a_npc_toby_cpp();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__12daNpc_Toby_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
//  s32 False
extern "C" s32 getEyeballMaterialNo__12daNpc_Toby_cFv();
// True False
//  s32 False
extern "C" s32 getHeadJointNo__12daNpc_Toby_cFv();
// True False
//  s32 False
extern "C" s32 getNeckJointNo__12daNpc_Toby_cFv();
// True False
//  bool False
extern "C" bool getBackboneJointNo__12daNpc_Toby_cFv();
// True False
//  int False
extern "C" void checkChangeJoint__12daNpc_Toby_cFi();
// True False
//  int False
extern "C" void checkRemoveJoint__12daNpc_Toby_cFi();
// True False
//  s32 False
extern "C" s32 getFootLJointNo__12daNpc_Toby_cFv();
// True False
//  s32 False
extern "C" s32 getFootRJointNo__12daNpc_Toby_cFv();
// True False
//  bool False
extern "C" bool chkXYItems__12daNpc_Toby_cFv();
// True False
extern "C" void __dt__18daNpc_Toby_Param_cFv();
// True False
extern "C" static void func_80B249C0();
// True False
extern "C" static void func_80B249C8();
extern "C" extern u8 const data_80B24A80[28];
extern "C" extern u32 const lit_4155;
extern "C" extern u32 const lit_4156;
extern "C" extern u32 const lit_4157;
extern "C" extern u32 const lit_4158;
extern "C" extern u32 const lit_4160;
extern "C" extern u32 const lit_4323;
extern "C" extern u32 const lit_4324;
extern "C" extern u8 const data_80B24ABC[4];
extern "C" extern u32 const lit_4983;
extern "C" extern u32 const lit_4984;
extern "C" extern u32 const lit_4985;
extern "C" extern u32 const lit_4986;
extern "C" extern u32 const lit_4987;
extern "C" extern u32 const lit_4988;
extern "C" extern u32 const lit_4989;
extern "C" extern u32 const lit_4990;
extern "C" extern u8 const lit_5050[8];
extern "C" extern u8 const lit_5051[8];
extern "C" extern u8 const lit_5052[8];
extern "C" extern u32 const lit_5098;
extern "C" extern u32 const lit_5099;
extern "C" extern u8 const lit_5345[8];
extern "C" extern u8 const lit_5499[8];
extern "C" extern u32 const lit_5630;
extern "C" extern u32 const lit_5631;
extern "C" extern u32 const lit_5632;
extern "C" extern u32 const lit_5633[1 + 1 /* padding */];
extern "C" extern u8 const lit_5636[8];
extern "C" extern u8 const lit_5658[8];
extern "C" extern u32 const lit_5751;
extern "C" extern u32 const lit_5752;
extern "C" extern u32 const lit_5753;
extern "C" extern u8 const lit_5783[8];
extern "C" extern u32 const lit_6037;
extern "C" extern u32 const lit_6038;
extern "C" extern u32 const lit_6337;
extern "C" extern u32 const lit_6338;
extern "C" extern u8 const lit_6541[12];
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtList[14];
extern "C" extern u8 l_faceMotionAnmData[448];
extern "C" extern u8 l_motionAnmData[700];
extern "C" extern u8 l_faceMotionSequenceData[272];
extern "C" extern u8 l_motionSequenceData[400];
extern "C" extern void* lit_3927[3];
extern "C" extern void* lit_3928[3];
extern "C" extern void* lit_3929[3];
extern "C" extern void* lit_3930[3];
extern "C" extern void* lit_3931[3];
extern "C" extern void* lit_3932[3];
extern "C" extern void* lit_5198[3];
extern "C" extern void* lit_5204[3];
extern "C" extern void* lit_5206[3];
extern "C" extern void* lit_5208[3];
extern "C" extern void* g_profile_NPC_TOBY[12];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__22daNpcT_MotionSeqMngr_c[3];
extern "C" extern void* __vt__18daNpcT_ActorMngr_c[3];
extern "C" extern void* __vt__15daNpcT_JntAnm_c[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__13daNpcT_Path_c[3];
extern "C" extern void* __vt__12daNpc_Toby_c[49];
extern "C" extern void* __vt__18daNpc_Toby_Param_c[3];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 3 /* padding */];
extern "C" extern u8 lit_4922[12 + 4 /* padding */];
extern "C" extern u8 data_80B258A0[12];
extern "C" extern u8 data_80B258AC[4];
extern "C" extern u8 data_80B258B0[4];
extern "C" extern u8 data_80B258B4[4];
extern "C" extern u8 data_80B258B8[4];
extern "C" extern u8 data_80B258BC[4];
extern "C" extern u8 data_80B258C0[4];
extern "C" extern u8 data_80B258C4[4];
extern "C" extern u8 data_80B258C8[4];
extern "C" extern u8 data_80B258CC[4];
extern "C" extern u8 data_80B258D0[4];
extern "C" extern u8 data_80B258D4[4];
extern "C" extern u8 data_80B258D8[4];
extern "C" extern u8 data_80B258DC[4];
extern "C" extern u8 data_80B258E0[4];
extern "C" extern u8 data_80B258E4[4];
extern "C" extern u8 data_80B258E8[4];
extern "C" extern u8 data_80B258EC[4];
extern "C" extern u8 data_80B258F0[4];
extern "C" extern u8 data_80B258F4[4];
extern "C" extern u8 data_80B258F8[4];
extern "C" extern u8 data_80B258FC[4];
extern "C" extern u8 data_80B25900[4];
extern "C" extern u8 data_80B25904[4];
extern "C" extern u8 data_80B25908[4];
extern "C" extern u8 data_80B2590C[4];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  unsigned int False
void fpcEx_IsExist(unsigned int);
// False False
//  int False
//  f32 False
//  u32 False
//  s8 False
//  s16 False
//  int False
void dStage_changeScene(int, f32, u32, s8, s16, int);
// False False
//  s8 False
void dComIfGs_sense_type_change_Set(s8);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  int False
//  int False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
void daNpcT_getPlayerInfoFromPlayerList(int, int, cXyz*, csXyz*);
// False False
//  int False
//  int False
void daNpcT_getDistTableIdx(int, int);
// False False
//  u32 False
void daNpcT_onEvtBit(u32);
// False False
//  u32 False
void daNpcT_offEvtBit(u32);
// False False
//  u32 False
void daNpcT_chkEvtBit(u32);
// False False
//  u32 False
void daNpcT_offTmpBit(u32);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseS(s16*, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  unsigned int False
extern "C" void fpcEx_IsExist__FUi();
// False False
//  int False
//  f32 False
//  u32 False
//  s8 False
//  s16 False
//  int False
extern "C" void dStage_changeScene__FifUlScsi();
// False False
//  int False
extern "C" void getLayerNo__14dComIfG_play_cFi();
// False False
//  s8 False
extern "C" void dComIfGs_sense_type_change_Set__FSc();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  int False
extern "C" void isSwitch__12dSv_memBit_cCFi();
// False False
//  int False
//  int False
extern "C" void offSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  void* False
// 	 void False
extern "C" void setPt2__14dEvt_control_cFPv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
//  cXyz* False
// 	 cXyz False
extern "C" void setGoal__16dEvent_manager_cFP4cXyz();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
//  f32 False
//  f32 False
extern "C" void init__7dPaPo_cFP9dBgS_Acchff();
// False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_MatAnm_cFv();
// False False
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void checkEndSequence__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void initialize__13daNpcT_Path_cFv();
// False False
//  u8 False
//  s8 False
//  u8 False
extern "C" void setPathInfo__13daNpcT_Path_cFUcScUc();
// False False
//  int False
extern "C" void setNextIdx__13daNpcT_Path_cFi();
// False False
//  cXyz False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
extern "C" void getDstPosH__13daNpcT_Path_cF4cXyzP4cXyzii();
// False False
extern "C" void initialize__15daNpcT_JntAnm_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void calcJntRad__15daNpcT_JntAnm_cFfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
extern "C" void setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs();
// False False
//  int False
extern "C" void calc__19daNpcT_DmgStagger_cFi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" void tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
// False False
extern "C" void execute__8daNpcT_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
// False False
extern "C" void setEnvTevColor__8daNpcT_cFv();
// False False
extern "C" void setRoomNo__8daNpcT_cFv();
// False False
extern "C" void ctrlBtk__8daNpcT_cFv();
// False False
extern "C" void setMtx__8daNpcT_cFv();
// False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
// False False
extern "C" void evtProc__8daNpcT_cFv();
// False False
extern "C" void setFootPos__8daNpcT_cFv();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
// False False
//  bool False
extern "C" bool checkCullDraw__8daNpcT_cFv();
// False False
extern "C" void twilight__8daNpcT_cFv();
// False False
extern "C" void evtOrder__8daNpcT_cFv();
// False False
extern "C" void evtChange__8daNpcT_cFv();
// False False
extern "C" void clrParam__8daNpcT_cFv();
// False False
//  int False
//  bool False
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
// False False
//  int False
//  f32 False
//  int False
extern "C" void setMotionAnm__8daNpcT_cFifi();
// False False
//  cXyz False
extern "C" void setPos__8daNpcT_cF4cXyz();
// False False
//  csXyz False
extern "C" void setAngle__8daNpcT_cF5csXyz();
// False False
//  s16 False
extern "C" void setAngle__8daNpcT_cFs();
// False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
extern "C" void hitChk__8daNpcT_cFP12dCcD_GObjInfUl();
// False False
//  int False
//  int False
//  int False
extern "C" void setDamage__8daNpcT_cFiii();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
extern "C" void chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs();
// False False
//  cXyz False
//  cXyz False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
extern "C" void chkPointInArea__8daNpcT_cF4cXyz4cXyzfffs();
// False False
extern "C" void srchPlayerActor__8daNpcT_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void getAttnPos__8daNpcT_cFP10fopAc_ac_c();
// False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
extern "C" void step__8daNpcT_cFsiiii();
// False False
//  cXyz False
//  int False
//  s16 False
//  s16 False
extern "C" void calcSpeedAndAngle__8daNpcT_cF4cXyziss();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
// False False
//  s16 False
extern "C" void getNearestActorP__8daNpcT_cFs();
// False False
//  int False
//  int False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void daNpcT_getPlayerInfoFromPlayerList__FiiP4cXyzP5csXyz();
// False False
//  int False
//  int False
extern "C" void daNpcT_getDistTableIdx__Fii();
// False False
//  u32 False
extern "C" void daNpcT_onEvtBit__FUl();
// False False
//  u32 False
extern "C" void daNpcT_offEvtBit__FUl();
// False False
//  u32 False
extern "C" void daNpcT_chkEvtBit__FUl();
// False False
//  u32 False
extern "C" void daNpcT_offTmpBit__FUl();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
extern "C" void getStatus__12dMsgObject_cFv();
// False False
extern "C" void isMsgSendControl__12dMsgObject_cFv();
// False False
extern "C" void onMsgSend__12dMsgObject_cFv();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  int* False
// 	 int False
extern "C" void getEventId__10dMsgFlow_cFPi();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseS__FPsss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  u32 False
extern "C" void bgmStreamPrepare__8Z2SeqMgrFUl();
// False False
extern "C" void bgmStreamPlay__8Z2SeqMgrFv();
// False False
//  u32 False
extern "C" void bgmStreamStop__8Z2SeqMgrFUl();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void __cvt_fp2unsigned();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcT_c[68];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__15daNpcT_MatAnm_c[4 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mFindActorPtrs__8daNpcT_c[200];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mFindCount__8daNpcT_c[4];
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();
// False False
//  int False
//  bool False
extern "C" void setAnm__16daObj_AutoMata_cFib();
// False False
extern "C" void setCannonRepair__11daSCannon_cFv();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80B249E4-80B24A80 009C+00 s=15 e=0 z=0  None .rodata    m__18daNpc_Toby_Param_c                                      */
SECTION_RODATA static u8 const m__18daNpc_Toby_Param_c[156] = {
	0x43, 0x20, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
	0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
};

/* 80B24A80-80B24A9C 001C+00 s=0 e=0 z=0  None .rodata    heapSize$4089                                                */
SECTION_RODATA u8 const data_80B24A80[28] = {
	0x00, 0x00, 0x3B, 0xC0, 0x00, 0x00, 0x3B, 0x10, 0x00, 0x00, 0x3B, 0x10, 0x00, 0x00, 0x43, 0xC0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3B, 0xD0, 0x00, 0x00, 0x00, 0x00,
};

/* 80B24A9C-80B24AA0 0004+00 s=0 e=0 z=0  None .rodata    @4155                                                        */
SECTION_RODATA u32 const lit_4155 = 0xC3480000;

/* 80B24AA0-80B24AA4 0004+00 s=0 e=0 z=0  None .rodata    @4156                                                        */
SECTION_RODATA u32 const lit_4156 = 0xC2C80000;

/* 80B24AA4-80B24AA8 0004+00 s=0 e=0 z=0  None .rodata    @4157                                                        */
SECTION_RODATA u32 const lit_4157 = 0x43480000;

/* 80B24AA8-80B24AAC 0004+00 s=0 e=0 z=0  None .rodata    @4158                                                        */
SECTION_RODATA u32 const lit_4158 = 0x43960000;

/* 80B24AAC-80B24AB0 0004+00 s=6 e=0 z=0  None .rodata    @4159                                                        */
SECTION_RODATA static u8 const lit_4159[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80B24AB0-80B24AB4 0004+00 s=0 e=0 z=0  None .rodata    @4160                                                        */
SECTION_RODATA u32 const lit_4160 = 0xCE6E6B28;

/* 80B24AB4-80B24AB8 0004+00 s=0 e=0 z=0  None .rodata    @4323                                                        */
SECTION_RODATA u32 const lit_4323 = 0x47800000;

/* 80B24AB8-80B24ABC 0004+00 s=0 e=0 z=0  None .rodata    @4324                                                        */
SECTION_RODATA u32 const lit_4324 = 0x3E4CCCCD;

/* 80B24ABC-80B24AC0 0004+00 s=0 e=0 z=0  None .rodata    bmdTypeList$4437                                             */
SECTION_RODATA u8 const data_80B24ABC[4] = {
	0x00, 0x00, 0x00, 0x02,
};

/* 80B24AC0-80B24AC4 0004+00 s=1 e=0 z=0  None .rodata    @4495                                                        */
SECTION_RODATA static u32 const lit_4495 = 0x3F800000;

/* 80B24AC4-80B24AC8 0004+00 s=1 e=0 z=0  None .rodata    @4544                                                        */
SECTION_RODATA static u32 const lit_4544 = 0x42C80000;

/* 80B24AC8-80B24ACC 0004+00 s=1 e=0 z=0  None .rodata    @4593                                                        */
SECTION_RODATA static u32 const lit_4593 = 0x4E6E6B28;

/* 80B24ACC-80B24AD0 0004+00 s=1 e=0 z=0  None .rodata    @4735                                                        */
SECTION_RODATA static u32 const lit_4735 = 0x44160000;

/* 80B24AD0-80B24AD4 0004+00 s=2 e=0 z=0  None .rodata    @4802                                                        */
SECTION_RODATA static u32 const lit_4802 = 0xBF800000;

/* 80B24AD4-80B24AD8 0004+00 s=0 e=0 z=0  None .rodata    @4983                                                        */
SECTION_RODATA u32 const lit_4983 = 0x41F00000;

/* 80B24AD8-80B24ADC 0004+00 s=0 e=0 z=0  None .rodata    @4984                                                        */
SECTION_RODATA u32 const lit_4984 = 0x38C90FDB;

/* 80B24ADC-80B24AE0 0004+00 s=0 e=0 z=0  None .rodata    @4985                                                        */
SECTION_RODATA u32 const lit_4985 = 0x41A00000;

/* 80B24AE0-80B24AE4 0004+00 s=0 e=0 z=0  None .rodata    @4986                                                        */
SECTION_RODATA u32 const lit_4986 = 0x430C0000;

/* 80B24AE4-80B24AE8 0004+00 s=0 e=0 z=0  None .rodata    @4987                                                        */
SECTION_RODATA u32 const lit_4987 = 0x42F00000;

/* 80B24AE8-80B24AEC 0004+00 s=0 e=0 z=0  None .rodata    @4988                                                        */
SECTION_RODATA u32 const lit_4988 = 0x42200000;

/* 80B24AEC-80B24AF0 0004+00 s=0 e=0 z=0  None .rodata    @4989                                                        */
SECTION_RODATA u32 const lit_4989 = 0x40400000;

/* 80B24AF0-80B24AF4 0004+00 s=0 e=0 z=0  None .rodata    @4990                                                        */
SECTION_RODATA u32 const lit_4990 = 0x41200000;

/* 80B24AF4-80B24AFC 0008+00 s=1 e=0 z=0  None .rodata    @4992                                                        */
SECTION_RODATA static u8 const lit_4992[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80B24AFC-80B24B04 0008+00 s=0 e=0 z=0  None .rodata    @5050                                                        */
SECTION_RODATA u8 const lit_5050[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B24B04-80B24B0C 0008+00 s=0 e=0 z=0  None .rodata    @5051                                                        */
SECTION_RODATA u8 const lit_5051[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B24B0C-80B24B14 0008+00 s=0 e=0 z=0  None .rodata    @5052                                                        */
SECTION_RODATA u8 const lit_5052[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B24B14-80B24B18 0004+00 s=0 e=0 z=0  None .rodata    @5098                                                        */
SECTION_RODATA u32 const lit_5098 = 0x42DC0000;

/* 80B24B18-80B24B1C 0004+00 s=0 e=0 z=0  None .rodata    @5099                                                        */
SECTION_RODATA u32 const lit_5099 = 0x42800000;

/* 80B24B1C-80B24B20 0004+00 s=1 e=0 z=0  None .rodata    jointNo$5107                                                 */
SECTION_RODATA static u8 const jointNo[4] = {
	0x00, 0x00, 0x00, 0x12,
};

/* 80B24B20-80B24B28 0008+00 s=0 e=0 z=0  None .rodata    @5345                                                        */
SECTION_RODATA u8 const lit_5345[8] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80B24B28-80B24B30 0008+00 s=0 e=0 z=0  None .rodata    @5499                                                        */
SECTION_RODATA u8 const lit_5499[8] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80B24B30-80B24B34 0004+00 s=0 e=0 z=0  None .rodata    @5630                                                        */
SECTION_RODATA u32 const lit_5630 = 0x43360B61;

/* 80B24B34-80B24B38 0004+00 s=0 e=0 z=0  None .rodata    @5631                                                        */
SECTION_RODATA u32 const lit_5631 = 0x40A00000;

/* 80B24B38-80B24B3C 0004+00 s=0 e=0 z=0  None .rodata    @5632                                                        */
SECTION_RODATA u32 const lit_5632 = 0x40800000;

/* 80B24B3C-80B24B44 0004+04 s=0 e=0 z=0  None .rodata    @5633                                                        */
SECTION_RODATA u32 const lit_5633[1 + 1 /* padding */] = {
	0x43B40000,
	/* padding */
	0x00000000,
};

/* 80B24B44-80B24B4C 0008+00 s=0 e=0 z=0  None .rodata    @5636                                                        */
SECTION_RODATA u8 const lit_5636[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B24B4C-80B24B54 0008+00 s=0 e=0 z=0  None .rodata    @5658                                                        */
SECTION_RODATA u8 const lit_5658[8] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80B24B54-80B24B58 0004+00 s=0 e=0 z=0  None .rodata    @5751                                                        */
SECTION_RODATA u32 const lit_5751 = 0x447A0000;

/* 80B24B58-80B24B5C 0004+00 s=0 e=0 z=0  None .rodata    @5752                                                        */
SECTION_RODATA u32 const lit_5752 = 0x44C80000;

/* 80B24B5C-80B24B60 0004+00 s=0 e=0 z=0  None .rodata    @5753                                                        */
SECTION_RODATA u32 const lit_5753 = 0x3F0CCCCD;

/* 80B24B60-80B24B68 0008+00 s=0 e=0 z=0  None .rodata    @5783                                                        */
SECTION_RODATA u8 const lit_5783[8] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80B24B68-80B24B6C 0004+00 s=0 e=0 z=0  None .rodata    @6037                                                        */
SECTION_RODATA u32 const lit_6037 = 0xC3960000;

/* 80B24B6C-80B24B70 0004+00 s=0 e=0 z=0  None .rodata    @6038                                                        */
SECTION_RODATA u32 const lit_6038 = 0xC47A0000;

/* 80B24B70-80B24B78 0008+00 s=1 e=0 z=0  None .rodata    @6056                                                        */
SECTION_RODATA static u8 const lit_6056[8] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80B24B78-80B24B7C 0004+00 s=0 e=0 z=0  None .rodata    @6337                                                        */
SECTION_RODATA u32 const lit_6337 = 0x44FA0000;

/* 80B24B7C-80B24B80 0004+00 s=0 e=0 z=0  None .rodata    @6338                                                        */
SECTION_RODATA u32 const lit_6338 = 0x42B40000;

/* 80B24B80-80B24B8C 000C+00 s=0 e=0 z=0  None .rodata    @6541                                                        */
SECTION_RODATA u8 const lit_6541[12] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80B24B8C-80B24BA8 001C+00 s=10 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80B24B8C[28] = {
	/* 80B24B8C 0001 stringBase_80B24B8C @stringBase0 */
	0x00,
	/* 80B24B8D 000C data_80B24B8D None */
	0x4E, 0x4F, 0x5F, 0x52, 0x45, 0x53, 0x50, 0x4F, 0x4E, 0x53, 0x45, 0x00,
	/* 80B24B99 000F data_80B24B99 None */
	0x54, 0x41, 0x4C, 0x4B, 0x54, 0x4F, 0x5F, 0x4F, 0x4E, 0x45, 0x53, 0x45, 0x4C, 0x46, 0x00,
};

/* 80B24BA8-80B24C04 005C+00 s=3 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80B24BA8[92] = {
	/* 80B24BA8 000F data_80B24BA8 None */
	0x52, 0x45, 0x50, 0x41, 0x49, 0x52, 0x5F, 0x53, 0x43, 0x41, 0x4E, 0x4E, 0x4F, 0x4E, 0x00,
	/* 80B24BB7 0008 data_80B24BB7 None */
	0x53, 0x43, 0x41, 0x4E, 0x4E, 0x4F, 0x4E, 0x00,
	/* 80B24BBF 001B data_80B24BBF None */
	0x43, 0x4F, 0x4E, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x41, 0x42, 0x4F,
	0x55, 0x54, 0x5F, 0x53, 0x43, 0x41, 0x4E, 0x4E, 0x4F, 0x4E, 0x00,
	/* 80B24BDA 0017 data_80B24BDA None */
	0x43, 0x4F, 0x4E, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x41, 0x42, 0x4F,
	0x55, 0x54, 0x5F, 0x5A, 0x52, 0x41, 0x00,
	/* 80B24BF1 0005 data_80B24BF1 None */
	0x54, 0x6F, 0x62, 0x79, 0x00,
	/* 80B24BF6 0008 data_80B24BF6 None */
	0x54, 0x6F, 0x62, 0x79, 0x5F, 0x54, 0x57, 0x00,
	/* 80B24BFE 0006 data_80B24BFE None */
	0x54, 0x6F, 0x62, 0x79, 0x30, 0x00,
};

/* 80B24C04-80B24C10 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80B24C04[12] = {
	/* 80B24C04 0006 data_80B24C04 None */
	0x54, 0x6F, 0x62, 0x79, 0x31, 0x00,
	/* 80B24C0A 0006 data_80B24C0A None */
	0x54, 0x6F, 0x62, 0x79, 0x32, 0x00,
};

/* 80B24C10-80B24C1C 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80B24C10[12] = {
	/* 80B24C10 0006 data_80B24C10 None */
	0x54, 0x6F, 0x62, 0x79, 0x33, 0x00,
	/* 80B24C16 0006 data_80B24C16 None */
	0x54, 0x6F, 0x62, 0x79, 0x34, 0x00,
};

/* 80B24C1C-80B24C48 002C+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80B24C1C[44] = {
	/* 80B24C1C 0006 data_80B24C1C None */
	0x54, 0x6F, 0x62, 0x79, 0x35, 0x00,
	/* 80B24C22 0026 data_80B24C22 None */
	0x54, 0x4F, 0x42, 0x59, 0x5F, 0x48, 0x4F, 0x55, 0x53, 0x45, 0x5F, 0x46, 0x49, 0x52, 0x45, 0x00,
	0x70, 0x72, 0x6D, 0x00, 0x74, 0x69, 0x6D, 0x65, 0x72, 0x00, 0x6D, 0x73, 0x67, 0x4E, 0x6F, 0x00,
	0x73, 0x65, 0x6E, 0x64, 0x00, 0x00,
};

/* 80B24C48-80B24C54 000C+00 s=3 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B24C54-80B24C68 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80B24C68-80B24C80 0018+00 s=1 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[24] = {
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06,
};

/* 80B24C80-80B24CB8 0038+00 s=0 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA void* l_evtList[14] = {
	(void*)(((char*)&struct_80B24B8C)+0x0) /* @stringBase0 */,
	(void*)NULL,
	(void*)(((char*)&struct_80B24B8C)+0x1) /* None */,
	(void*)NULL,
	(void*)(((char*)&struct_80B24B8C)+0xD) /* None */,
	(void*)0x00000005,
	(void*)(((char*)&struct_80B24BA8)+0x0) /* None */,
	(void*)0x00000004,
	(void*)(((char*)&struct_80B24BA8)+0xF) /* None */,
	(void*)0x00000004,
	(void*)(((char*)&struct_80B24BA8)+0x17) /* None */,
	(void*)0x00000004,
	(void*)(((char*)&struct_80B24BA8)+0x32) /* None */,
	(void*)0x00000004,
};

/* 80B24CB8-80B24CDC 0024+00 s=2 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[9] = {
	(void*)(((char*)&struct_80B24B8C)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80B24BA8)+0x49) /* None */,
	(void*)(((char*)&struct_80B24BA8)+0x4E) /* None */,
	(void*)(((char*)&struct_80B24BA8)+0x56) /* None */,
	(void*)(((char*)&struct_80B24C04)+0x0) /* None */,
	(void*)(((char*)&struct_80B24C04)+0x6) /* None */,
	(void*)(((char*)&struct_80B24C10)+0x0) /* None */,
	(void*)(((char*)&struct_80B24C10)+0x6) /* None */,
	(void*)(((char*)&struct_80B24C1C)+0x0) /* None */,
};

/* 80B24CDC-80B24CE4 0006+02 s=1 e=0 z=0  None .data      l_loadResPtrn0                                               */
SECTION_DATA static u8 l_loadResPtrn0[6 + 2 /* padding */] = {
	0x01, 0x03, 0x04, 0x07, 0x08, 0xFF,
	/* padding */
	0x00, 0x00,
};

/* 80B24CE4-80B24CEC 0006+02 s=1 e=0 z=0  None .data      l_loadResPtrn1                                               */
SECTION_DATA static u8 l_loadResPtrn1[6 + 2 /* padding */] = {
	0x02, 0x03, 0x05, 0x07, 0x08, 0xFF,
	/* padding */
	0x00, 0x00,
};

/* 80B24CEC-80B24CF4 0005+03 s=1 e=0 z=0  None .data      l_loadResPtrn2                                               */
SECTION_DATA static u8 l_loadResPtrn2[5 + 3 /* padding */] = {
	0x01, 0x03, 0x06, 0x07, 0xFF,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 80B24CF4-80B24CFC 0008+00 s=1 e=0 z=0  None .data      l_loadResPtrn3                                               */
SECTION_DATA static u8 l_loadResPtrn3[8] = {
	0x01, 0x02, 0x03, 0x04, 0x05, 0x07, 0x08, 0xFF,
};

/* 80B24CFC-80B24D18 001C+00 s=1 e=0 z=0  None .data      l_loadResPtrnList                                            */
SECTION_DATA static void* l_loadResPtrnList[7] = {
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn1,
	(void*)&l_loadResPtrn1,
	(void*)&l_loadResPtrn2,
	(void*)&l_loadResPtrn2,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn3,
};

/* 80B24D18-80B24ED8 01C0+00 s=0 e=0 z=0  None .data      l_faceMotionAnmData                                          */
SECTION_DATA u8 l_faceMotionAnmData[448] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x15,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00,
};

/* 80B24ED8-80B25194 02BC+00 s=0 e=0 z=0  None .data      l_motionAnmData                                              */
SECTION_DATA u8 l_motionAnmData[700] = {
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x10,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
};

/* 80B25194-80B252A4 0110+00 s=0 e=0 z=0  None .data      l_faceMotionSequenceData                                     */
SECTION_DATA u8 l_faceMotionSequenceData[272] = {
	0x00, 0x01, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x01, 0x00, 0x0F, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0xFF, 0x01, 0x00, 0x0D, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x01, 0x00, 0x0C, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0xFF, 0x01, 0x00, 0x0E, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x01, 0x00, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0D, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0C, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0E, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0F, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x01, 0x00, 0x0E, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80B252A4-80B25434 0190+00 s=0 e=0 z=0  None .data      l_motionSequenceData                                         */
SECTION_DATA u8 l_motionSequenceData[400] = {
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x01, 0xFF, 0x01, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0C, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0D, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0E, 0xFF, 0x01, 0x00, 0x0F, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x10, 0xFF, 0x01, 0x00, 0x11, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x12, 0xFF, 0x01, 0x00, 0x13, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0F, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x11, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x13, 0xF7, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x14, 0x04, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x15, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x16, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x18, 0x02, 0x01, 0x00, 0x11, 0xFF, 0x01, 0x00, 0x12, 0xFF, 0x01, 0x00, 0x13, 0x00, 0x00,
};

/* 80B25434-80B25450 001C+00 s=1 e=0 z=0  None .data      mCutNameList__12daNpc_Toby_c                                 */
SECTION_DATA static void* mCutNameList__12daNpc_Toby_c[7] = {
	(void*)(((char*)&struct_80B24B8C)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80B24C1C)+0x6) /* None */,
	(void*)(((char*)&struct_80B24B8C)+0xD) /* None */,
	(void*)(((char*)&struct_80B24BA8)+0x0) /* None */,
	(void*)(((char*)&struct_80B24BA8)+0xF) /* None */,
	(void*)(((char*)&struct_80B24BA8)+0x17) /* None */,
	(void*)(((char*)&struct_80B24BA8)+0x32) /* None */,
};

/* 80B25450-80B2545C 000C+00 s=0 e=0 z=0  None .data      @3927                                                        */
SECTION_DATA void* lit_3927[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutTobyHouseFire__12daNpc_Toby_cFi,
};

/* 80B2545C-80B25468 000C+00 s=0 e=0 z=0  None .data      @3928                                                        */
SECTION_DATA void* lit_3928[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutTalkToOneself__12daNpc_Toby_cFi,
};

/* 80B25468-80B25474 000C+00 s=0 e=0 z=0  None .data      @3929                                                        */
SECTION_DATA void* lit_3929[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutRepairSCannon__12daNpc_Toby_cFi,
};

/* 80B25474-80B25480 000C+00 s=0 e=0 z=0  None .data      @3930                                                        */
SECTION_DATA void* lit_3930[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutSCannon__12daNpc_Toby_cFi,
};

/* 80B25480-80B2548C 000C+00 s=0 e=0 z=0  None .data      @3931                                                        */
SECTION_DATA void* lit_3931[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutConversationAboutSCannon__12daNpc_Toby_cFi,
};

/* 80B2548C-80B25498 000C+00 s=0 e=0 z=0  None .data      @3932                                                        */
SECTION_DATA void* lit_3932[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutConversationAboutZra__12daNpc_Toby_cFi,
};

/* 80B25498-80B254EC 0054+00 s=1 e=0 z=0  None .data      mCutList__12daNpc_Toby_c                                     */
SECTION_DATA static u8 mCutList__12daNpc_Toby_c[84] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80B254EC-80B254F8 000C+00 s=1 e=0 z=0  None .data      @4706                                                        */
SECTION_DATA static void* lit_4706[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)play__12daNpc_Toby_cFPv,
};

/* 80B254F8-80B25504 000C+00 s=1 e=0 z=0  None .data      @4740                                                        */
SECTION_DATA static void* lit_4740[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_Toby_cFPv,
};

/* 80B25504-80B25510 000C+00 s=1 e=0 z=0  None .data      @4828                                                        */
SECTION_DATA static void* lit_4828[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_Toby_cFPv,
};

/* 80B25510-80B2551C 000C+00 s=1 e=0 z=0  None .data      @4833                                                        */
SECTION_DATA static void* lit_4833[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__12daNpc_Toby_cFPv,
};

/* 80B2551C-80B25528 000C+00 s=1 e=0 z=0  None .data      @5075                                                        */
SECTION_DATA static void* lit_5075[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)play__12daNpc_Toby_cFPv,
};

/* 80B25528-80B25534 000C+00 s=0 e=0 z=0  None .data      @5198                                                        */
SECTION_DATA void* lit_5198[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)play__12daNpc_Toby_cFPv,
};

/* 80B25534-80B25540 000C+00 s=0 e=0 z=0  None .data      @5204                                                        */
SECTION_DATA void* lit_5204[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)walk__12daNpc_Toby_cFPv,
};

/* 80B25540-80B2554C 000C+00 s=0 e=0 z=0  None .data      @5206                                                        */
SECTION_DATA void* lit_5206[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__12daNpc_Toby_cFPv,
};

/* 80B2554C-80B25558 000C+00 s=0 e=0 z=0  None .data      @5208                                                        */
SECTION_DATA void* lit_5208[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__12daNpc_Toby_cFPv,
};

/* 80B25558-80B25590 0038+00 s=1 e=0 z=0  None .data      @5478                                                        */
SECTION_DATA static void* lit_5478[14] = {
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x258),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x294),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x2AC),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x2F4),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x2F4),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x384),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x3EC),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x3EC),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x2F4),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x49C),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x4D0),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x384),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x384),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x4F0),
};

/* 80B25590-80B255C8 0038+00 s=1 e=0 z=0  None .data      @5477                                                        */
SECTION_DATA static void* lit_5477[14] = {
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0xEC),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x110),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x170),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x18C),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x228),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x194),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x19C),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x1B4),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x228),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x228),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x228),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x1C0),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x194),
	(void*)(((char*)cutTalkToOneself__12daNpc_Toby_cFi)+0x220),
};

/* 80B255C8-80B2561C 0054+00 s=1 e=0 z=0  None .data      @6040                                                        */
SECTION_DATA static void* lit_6040[21] = {
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x498),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x504),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x5E0),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x660),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x6CC),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x8F4),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x8F4),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x944),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x7B8),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA24),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x7B8),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA24),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA24),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA24),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA24),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA24),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA24),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA24),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA24),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA24),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0xA10),
};

/* 80B2561C-80B25670 0054+00 s=1 e=0 z=0  None .data      @6039                                                        */
SECTION_DATA static void* lit_6039[21] = {
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x118),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x13C),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x144),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x158),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x30C),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x328),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x3D0),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x458),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x468),
	(void*)(((char*)cutConversationAboutSCannon__12daNpc_Toby_cFi)+0x464),
};

/* 80B25670-80B25690 0020+00 s=1 e=0 z=0  None .data      daNpc_Toby_MethodTable                                       */
SECTION_DATA static void* daNpc_Toby_MethodTable[8] = {
	(void*)daNpc_Toby_Create__FPv,
	(void*)daNpc_Toby_Delete__FPv,
	(void*)daNpc_Toby_Execute__FPv,
	(void*)daNpc_Toby_IsDelete__FPv,
	(void*)daNpc_Toby_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80B25690-80B256C0 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_TOBY                                           */
SECTION_DATA void* g_profile_NPC_TOBY[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02780000,
	(void*)&g_fpcLf_Method,
	(void*)0x00001008,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01790000,
	(void*)&daNpc_Toby_MethodTable,
	(void*)0x00040107,
	(void*)0x040E0000,
};

/* 80B256C0-80B256CC 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80B256CC-80B256D8 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80B256D8-80B256FC 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80B249C8,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80B249C0,
};

/* 80B256FC-80B25708 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80B25708-80B25714 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80B25714-80B25720 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80B25720-80B2572C 000C+00 s=3 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c                               */
SECTION_DATA void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80B2572C-80B25738 000C+00 s=5 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcT_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80B25738-80B25744 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c                                      */
SECTION_DATA void* __vt__15daNpcT_JntAnm_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80B25744-80B25750 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80B25750-80B2575C 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80B2575C-80B25768 000C+00 s=3 e=0 z=0  None .data      __vt__13daNpcT_Path_c                                        */
SECTION_DATA void* __vt__13daNpcT_Path_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__13daNpcT_Path_cFv,
};

/* 80B25768-80B2582C 00C4+00 s=2 e=0 z=0  None .data      __vt__12daNpc_Toby_c                                         */
SECTION_DATA void* __vt__12daNpc_Toby_c[49] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daNpc_Toby_cFv,
	(void*)ctrlBtk__8daNpcT_cFv,
	(void*)ctrlSubFaceMotion__8daNpcT_cFi,
	(void*)checkChangeJoint__12daNpc_Toby_cFi,
	(void*)checkRemoveJoint__12daNpc_Toby_cFi,
	(void*)getBackboneJointNo__12daNpc_Toby_cFv,
	(void*)getNeckJointNo__12daNpc_Toby_cFv,
	(void*)getHeadJointNo__12daNpc_Toby_cFv,
	(void*)getFootLJointNo__12daNpc_Toby_cFv,
	(void*)getFootRJointNo__12daNpc_Toby_cFv,
	(void*)getEyeballLMaterialNo__8daNpcT_cFv,
	(void*)getEyeballRMaterialNo__8daNpcT_cFv,
	(void*)getEyeballMaterialNo__12daNpc_Toby_cFv,
	(void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
	(void*)afterJntAnm__12daNpc_Toby_cFi,
	(void*)setParam__12daNpc_Toby_cFv,
	(void*)checkChangeEvt__12daNpc_Toby_cFv,
	(void*)evtTalk__12daNpc_Toby_cFv,
	(void*)evtEndProc__8daNpcT_cFv,
	(void*)evtCutProc__12daNpc_Toby_cFv,
	(void*)setAfterTalkMotion__12daNpc_Toby_cFv,
	(void*)evtProc__8daNpcT_cFv,
	(void*)action__12daNpc_Toby_cFv,
	(void*)beforeMove__12daNpc_Toby_cFv,
	(void*)afterMoved__8daNpcT_cFv,
	(void*)setAttnPos__12daNpc_Toby_cFv,
	(void*)setFootPos__8daNpcT_cFv,
	(void*)setCollision__12daNpc_Toby_cFv,
	(void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
	(void*)checkCullDraw__8daNpcT_cFv,
	(void*)twilight__8daNpcT_cFv,
	(void*)chkXYItems__12daNpc_Toby_cFv,
	(void*)evtOrder__8daNpcT_cFv,
	(void*)decTmr__8daNpcT_cFv,
	(void*)clrParam__8daNpcT_cFv,
	(void*)drawDbgInfo__12daNpc_Toby_cFv,
	(void*)drawOtherMdl__12daNpc_Toby_cFv,
	(void*)drawGhost__8daNpcT_cFv,
	(void*)afterSetFaceMotionAnm__12daNpc_Toby_cFiifi,
	(void*)afterSetMotionAnm__12daNpc_Toby_cFiifi,
	(void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
	(void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
	(void*)changeAnm__8daNpcT_cFPiPi,
	(void*)changeBck__8daNpcT_cFPiPi,
	(void*)changeBtp__8daNpcT_cFPiPi,
	(void*)changeBtk__8daNpcT_cFPiPi,
	(void*)setMotionAnm__8daNpcT_cFifi,
};

/* 80B1E64C-80B1E798 014C+00 s=1 e=0 z=0  None .text      __dt__12daNpc_Toby_cFv                                       */
//	80B1E66C: 80B25768 (__vt__12daNpc_Toby_c)
//	80B1E670: 80B25768 (__vt__12daNpc_Toby_c)
//	80B1E684: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80B1E694: 80B24CFC (l_loadResPtrnList)
//	80B1E698: 80B24CFC (l_loadResPtrnList)
//	80B1E6A0: 80B24CB8 (l_resNameList)
//	80B1E6A4: 80B24CB8 (l_resNameList)
//	80B1E6A8: 801484AC (deleteRes__8daNpcT_cFPCScPPCc)
//	80B1E6B4: 80B2575C (__vt__13daNpcT_Path_c)
//	80B1E6B8: 80B2575C (__vt__13daNpcT_Path_c)
//	80B1E6C4: 80B23B28 (__dt__18daNpcT_ActorMngr_cFv)
//	80B1E6C8: 80B23B28 (__dt__18daNpcT_ActorMngr_cFv)
//	80B1E6D4: 80361CE8 (__destroy_arr)
//	80B1E6E0: 803AC050 (__vt__8dCcD_Cyl)
//	80B1E6E4: 803AC050 (__vt__8dCcD_Cyl)
//	80B1E704: 803C35A4 (__vt__12cCcD_CylAttr)
//	80B1E708: 803C35A4 (__vt__12cCcD_CylAttr)
//	80B1E720: 80B25750 (__vt__8cM3dGCyl)
//	80B1E724: 80B25750 (__vt__8cM3dGCyl)
//	80B1E734: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80B1E738: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80B1E748: 80B25744 (__vt__8cM3dGAab)
//	80B1E74C: 80B25744 (__vt__8cM3dGAab)
//	80B1E75C: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80B1E768: 80B23728 (__dt__8daNpcT_cFv)
//	80B1E778: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Toby_c::~daNpc_Toby_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1E798-80B1EA60 02C8+00 s=1 e=0 z=0  None .text      create__12daNpc_Toby_cFv                                     */
//	80B1E7A8: 803621DC (_savegpr_29)
//	80B1E7B0: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1E7B4: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1E7B8: 80B24C48 (cNullVec__6Z2Calc)
//	80B1E7BC: 80B24C48 (cNullVec__6Z2Calc)
//	80B1E7F8: 80B24840 (__ct__12daNpc_Toby_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80B1E80C: 80B1F200 (getType__12daNpc_Toby_cFv)
//	80B1E830: 801AC57C (dKy_darkworld_check__Fv)
//	80B1E850: 801483F8 (loadRes__8daNpcT_cFPCScPPCc)
//	80B1E864: 80B1F274 (isDelete__12daNpc_Toby_cFv)
//	80B1E87C: 80B1F010 (createHeapCallBack__12daNpc_Toby_cFP10fopAc_ac_c)
//	80B1E880: 80B1F010 (createHeapCallBack__12daNpc_Toby_cFP10fopAc_ac_c)
//	80B1E894: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80B1E8D4: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80B1E8EC: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80B1E900: 80050C9C (init__7dPaPo_cFP9dBgS_Acchff)
//	80B1E908: 80B1F384 (reset__12daNpc_Toby_cFv)
//	80B1E934: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80B1E958: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80B1E960: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80B1E964: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80B1E968: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80B1E974: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80B1E978: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80B1E984: 804061C0 (g_dComIfG_gameInfo)
//	80B1E988: 804061C0 (g_dComIfG_gameInfo)
//	80B1E990: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80B1EA20: 80148C70 (setEnvTevColor__8daNpcT_cFv)
//	80B1EA28: 80148CCC (setRoomNo__8daNpcT_cFv)
//	80B1EA38: 80B1EF5C (Execute__12daNpc_Toby_cFv)
//	80B1EA4C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/create__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1EA60-80B1ED6C 030C+00 s=1 e=0 z=0  None .text      CreateHeap__12daNpc_Toby_cFv                                 */
//	80B1EA70: 803621D4 (_savegpr_27)
//	80B1EA78: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1EA7C: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1EA90: 80B24C68 (l_bmdData)
//	80B1EA94: 80B24C68 (l_bmdData)
//	80B1EAA4: 80B24CB8 (l_resNameList)
//	80B1EAA8: 80B24CB8 (l_resNameList)
//	80B1EAB4: 804061C0 (g_dComIfG_gameInfo)
//	80B1EAB8: 804061C0 (g_dComIfG_gameInfo)
//	80B1EACC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80B1EAE4: 802CEC4C (__nw__FUl)
//	80B1EB2C: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80B1EB5C: 80B1F030 (ctrlJointCallBack__12daNpc_Toby_cFP8J3DJointi)
//	80B1EB60: 80B1F030 (ctrlJointCallBack__12daNpc_Toby_cFP8J3DJointi)
//	80B1EB94: 802CEC4C (__nw__FUl)
//	80B1EBA4: 803CEE60 (__vt__14J3DMaterialAnm)
//	80B1EBA8: 803CEE60 (__vt__14J3DMaterialAnm)
//	80B1EBB4: 80B1EF10 (__ct__14J3DMatColorAnmFv)
//	80B1EBB8: 80B1EF10 (__ct__14J3DMatColorAnmFv)
//	80B1EBBC: 80B1EED4 (__dt__14J3DMatColorAnmFv)
//	80B1EBC0: 80B1EED4 (__dt__14J3DMatColorAnmFv)
//	80B1EBCC: 80361D60 (__construct_array)
//	80B1EBD4: 80B1EEBC (__ct__12J3DTexMtxAnmFv)
//	80B1EBD8: 80B1EEBC (__ct__12J3DTexMtxAnmFv)
//	80B1EBDC: 80B1EE80 (__dt__12J3DTexMtxAnmFv)
//	80B1EBE0: 80B1EE80 (__dt__12J3DTexMtxAnmFv)
//	80B1EBEC: 80361D60 (__construct_array)
//	80B1EBF4: 80B1EE5C (__ct__11J3DTexNoAnmFv)
//	80B1EBF8: 80B1EE5C (__ct__11J3DTexNoAnmFv)
//	80B1EBFC: 80B1EE14 (__dt__11J3DTexNoAnmFv)
//	80B1EC00: 80B1EE14 (__dt__11J3DTexNoAnmFv)
//	80B1EC0C: 80361D60 (__construct_array)
//	80B1EC14: 80B1EDFC (__ct__14J3DTevColorAnmFv)
//	80B1EC18: 80B1EDFC (__ct__14J3DTevColorAnmFv)
//	80B1EC1C: 80B1EDC0 (__dt__14J3DTevColorAnmFv)
//	80B1EC20: 80B1EDC0 (__dt__14J3DTevColorAnmFv)
//	80B1EC2C: 80361D60 (__construct_array)
//	80B1EC34: 80B1EDA8 (__ct__15J3DTevKColorAnmFv)
//	80B1EC38: 80B1EDA8 (__ct__15J3DTevKColorAnmFv)
//	80B1EC3C: 80B1ED6C (__dt__15J3DTevKColorAnmFv)
//	80B1EC40: 80B1ED6C (__dt__15J3DTevKColorAnmFv)
//	80B1EC4C: 80361D60 (__construct_array)
//	80B1EC54: 8032C320 (initialize__14J3DMaterialAnmFv)
//	80B1EC58: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80B1EC5C: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80B1EC68: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80B1EC98: 80B24C68 (l_bmdData)
//	80B1EC9C: 80B24C68 (l_bmdData)
//	80B1ECC0: 80B24CB8 (l_resNameList)
//	80B1ECC4: 80B24CB8 (l_resNameList)
//	80B1ECD4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80B1ECF4: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80B1ED14: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	80B1ED58: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/CreateHeap__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1ED6C-80B1EDA8 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	80B1ED8C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80B1EDA8-80B1EDC0 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80B1EDC0-80B1EDFC 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	80B1EDE0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80B1EDFC-80B1EE14 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80B1EE14-80B1EE5C 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	80B1EE2C: 80B256C0 (__vt__11J3DTexNoAnm)
//	80B1EE30: 80B256C0 (__vt__11J3DTexNoAnm)
//	80B1EE40: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80B1EE5C-80B1EE80 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	80B1EE5C: 80B256C0 (__vt__11J3DTexNoAnm)
//	80B1EE60: 80B256C0 (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80B1EE80-80B1EEBC 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	80B1EEA0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80B1EEBC-80B1EED4 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80B1EED4-80B1EF10 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	80B1EEF4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80B1EF10-80B1EF28 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80B1EF28-80B1EF5C 0034+00 s=1 e=0 z=0  None .text      Delete__12daNpc_Toby_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/Delete__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1EF5C-80B1EF7C 0020+00 s=2 e=0 z=0  None .text      Execute__12daNpc_Toby_cFv                                    */
//	80B1EF68: 8014852C (execute__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/Execute__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1EF7C-80B1F010 0094+00 s=1 e=0 z=0  None .text      Draw__12daNpc_Toby_cFv                                       */
//	80B1EF8C: 803621DC (_savegpr_29)
//	80B1EFE0: 80B24AC4 (lit_4544)
//	80B1EFE4: 80B24AC4 (lit_4544)
//	80B1EFF4: 8014886C (draw__8daNpcT_cFiifP11_GXColorS10fiii)
//	80B1EFFC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/Draw__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1F010-80B1F030 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__12daNpc_Toby_cFP10fopAc_ac_c             */
//	80B1F01C: 80B1EA60 (CreateHeap__12daNpc_Toby_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpc_Toby_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/createHeapCallBack__12daNpc_Toby_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80B1F030-80B1F088 0058+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__12daNpc_Toby_cFP8J3DJointi                */
//	80B1F048: 80434AC8 (j3dSys)
//	80B1F04C: 80434AC8 (j3dSys)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpc_Toby_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/ctrlJointCallBack__12daNpc_Toby_cFP8J3DJointi.s"
}
#pragma pop


/* 80B1F088-80B1F124 009C+00 s=1 e=0 z=0  None .text      srchToby__12daNpc_Toby_cFPvPv                                */
//	80B1F09C: 80450FDC (mFindCount__8daNpcT_c)
//	80B1F0A0: 80450FDC (mFindCount__8daNpcT_c)
//	80B1F0D0: 8002139C (fpcEx_IsExist__FUi)
//	80B1F0E8: 80450FDC (mFindCount__8daNpcT_c)
//	80B1F0EC: 80450FDC (mFindCount__8daNpcT_c)
//	80B1F0F8: 80425708 (mFindActorPtrs__8daNpcT_c)
//	80B1F0FC: 80425708 (mFindActorPtrs__8daNpcT_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm void daNpc_Toby_c::srchToby(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/srchToby__12daNpc_Toby_cFPvPv.s"
}
#pragma pop


/* 80B1F124-80B1F200 00DC+00 s=1 e=0 z=0  None .text      getOtherTobyP__12daNpc_Toby_cFi                              */
//	80B1F13C: 803621CC (_savegpr_25)
//	80B1F14C: 80B24AC8 (lit_4593)
//	80B1F150: 80B24AC8 (lit_4593)
//	80B1F158: 80450FDC (mFindCount__8daNpcT_c)
//	80B1F15C: 80450FDC (mFindCount__8daNpcT_c)
//	80B1F160: 80B1F088 (srchToby__12daNpc_Toby_cFPvPv)
//	80B1F164: 80B1F088 (srchToby__12daNpc_Toby_cFPvPv)
//	80B1F16C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80B1F178: 80425708 (mFindActorPtrs__8daNpcT_c)
//	80B1F17C: 80425708 (mFindActorPtrs__8daNpcT_c)
//	80B1F180: 80450FDC (mFindCount__8daNpcT_c)
//	80B1F184: 80450FDC (mFindCount__8daNpcT_c)
//	80B1F190: 80B1F200 (getType__12daNpc_Toby_cFv)
//	80B1F1A8: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80B1F1BC: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80B1F1EC: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Toby_c::getOtherTobyP(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/getOtherTobyP__12daNpc_Toby_cFi.s"
}
#pragma pop


/* 80B1F200-80B1F274 0074+00 s=2 e=0 z=0  None .text      getType__12daNpc_Toby_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::getType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/getType__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1F274-80B1F384 0110+00 s=1 e=0 z=0  None .text      isDelete__12daNpc_Toby_cFv                                   */
//	80B1F2C0: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F2CC: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F2E4: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F2F4: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F304: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F324: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F334: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F344: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F354: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::isDelete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/isDelete__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1F384-80B1F5AC 0228+00 s=1 e=0 z=0  None .text      reset__12daNpc_Toby_cFv                                      */
//	80B1F394: 803621D8 (_savegpr_28)
//	80B1F39C: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1F3A0: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1F3BC: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80B1F3D0: 80003458 (memset)
//	80B1F3D8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B1F3E0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B1F3E8: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80B1F3F0: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80B1F3F8: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80B1F45C: 80267954 (cM_rndF__Ff)
//	80B1F48C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80B1F4AC: 80003458 (memset)
//	80B1F4C4: 80145C40 (initialize__13daNpcT_Path_cFv)
//	80B1F4E0: 80145C74 (setPathInfo__13daNpcT_Path_cFUcScUc)
//	80B1F590: 8014A99C (setAngle__8daNpcT_cF5csXyz)
//	80B1F598: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/reset__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1F5AC-80B1F638 008C+00 s=1 e=0 z=0  None .text      afterJntAnm__12daNpc_Toby_cFi                                */
//	80B1F5CC: 803DD470 (now__14mDoMtx_stack_c)
//	80B1F5D0: 803DD470 (now__14mDoMtx_stack_c)
//	80B1F5D4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80B1F5D8: 803DD470 (now__14mDoMtx_stack_c)
//	80B1F5DC: 803DD470 (now__14mDoMtx_stack_c)
//	80B1F5EC: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80B1F5FC: 803DD470 (now__14mDoMtx_stack_c)
//	80B1F600: 803DD470 (now__14mDoMtx_stack_c)
//	80B1F610: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80B1F618: 803DD470 (now__14mDoMtx_stack_c)
//	80B1F61C: 803DD470 (now__14mDoMtx_stack_c)
//	80B1F620: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Toby_c::afterJntAnm(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/afterJntAnm__12daNpc_Toby_cFi.s"
}
#pragma pop


/* 80B1F638-80B1F784 014C+00 s=1 e=0 z=0  None .text      setParam__12daNpc_Toby_cFv                                   */
//	80B1F648: 803621DC (_savegpr_29)
//	80B1F650: 80B205F4 (selectAction__12daNpc_Toby_cFv)
//	80B1F658: 80B1FA08 (srchActors__12daNpc_Toby_cFv)
//	80B1F65C: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1F660: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1F698: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80B1F6B0: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80B1F6C0: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1F6C4: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1F70C: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80B1F710: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1F714: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1F728: 80B254EC (lit_4706)
//	80B1F72C: 80B254EC (lit_4706)
//	80B1F734: 80362048 (__ptmf_cmpr)
//	80B1F740: 80B24ACC (lit_4735)
//	80B1F744: 80B24ACC (lit_4735)
//	80B1F74C: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1F750: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1F770: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/setParam__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1F784-80B1F950 01CC+00 s=1 e=0 z=0  None .text      checkChangeEvt__12daNpc_Toby_cFv                             */
//	80B1F798: 80B254F8 (lit_4740)
//	80B1F79C: 80B254F8 (lit_4740)
//	80B1F7BC: 80B20710 (chkAction__12daNpc_Toby_cFM12daNpc_Toby_cFPCvPvPv_i)
//	80B1F7D0: 804061C0 (g_dComIfG_gameInfo)
//	80B1F7D4: 804061C0 (g_dComIfG_gameInfo)
//	80B1F7FC: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80B1F808: 804061C0 (g_dComIfG_gameInfo)
//	80B1F80C: 804061C0 (g_dComIfG_gameInfo)
//	80B1F838: 8014A224 (evtChange__8daNpcT_cFv)
//	80B1F868: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F878: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F888: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F898: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F8B0: 8014A224 (evtChange__8daNpcT_cFv)
//	80B1F8C0: 80B22614 (chkAttnZra__12daNpc_Toby_cFv)
//	80B1F8D0: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F8DC: 804061C0 (g_dComIfG_gameInfo)
//	80B1F8E0: 804061C0 (g_dComIfG_gameInfo)
//	80B1F8EC: 80034860 (isSwitch__12dSv_memBit_cCFi)
//	80B1F904: 8014A224 (evtChange__8daNpcT_cFv)
//	80B1F914: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B1F92C: 8014A224 (evtChange__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::checkChangeEvt() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/checkChangeEvt__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1F950-80B1FA08 00B8+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__12daNpc_Toby_cFv                         */
//	80B1F960: 803621DC (_savegpr_29)
//	80B1F9D8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B1F9E4: 80B24AD0 (lit_4802)
//	80B1F9E8: 80B24AD0 (lit_4802)
//	80B1F9F4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::setAfterTalkMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/setAfterTalkMotion__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1FA08-80B1FB34 012C+00 s=1 e=0 z=0  None .text      srchActors__12daNpc_Toby_cFv                                 */
//	80B1FA54: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B1FA68: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80B1FA74: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80B1FA7C: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B1FA90: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80B1FA9C: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80B1FAA4: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B1FAB8: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80B1FAC4: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80B1FAD0: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B1FAE4: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80B1FAF0: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80B1FAFC: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B1FB10: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80B1FB1C: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::srchActors() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/srchActors__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1FB34-80B1FBD4 00A0+00 s=1 e=0 z=0  None .text      evtTalk__12daNpc_Toby_cFv                                    */
//	80B1FB48: 80B25504 (lit_4828)
//	80B1FB4C: 80B25504 (lit_4828)
//	80B1FB6C: 80B20710 (chkAction__12daNpc_Toby_cFM12daNpc_Toby_cFPCvPvPv_i)
//	80B1FB84: 80362084 (__ptmf_scall)
//	80B1FB90: 80B25510 (lit_4833)
//	80B1FB94: 80B25510 (lit_4833)
//	80B1FBB8: 80B2073C (setAction__12daNpc_Toby_cFM12daNpc_Toby_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::evtTalk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/evtTalk__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1FBD4-80B1FC9C 00C8+00 s=1 e=0 z=0  None .text      evtCutProc__12daNpc_Toby_cFv                                 */
//	80B1FBEC: 804061C0 (g_dComIfG_gameInfo)
//	80B1FBF0: 804061C0 (g_dComIfG_gameInfo)
//	80B1FBFC: 80B24B8C (struct_80B24B8C)
//	80B1FC00: 80B24B8C (struct_80B24B8C)
//	80B1FC10: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80B1FC28: 80B25434 (mCutNameList__12daNpc_Toby_c)
//	80B1FC2C: 80B25434 (mCutNameList__12daNpc_Toby_c)
//	80B1FC3C: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80B1FC50: 80B25498 (mCutList__12daNpc_Toby_c)
//	80B1FC54: 80B25498 (mCutList__12daNpc_Toby_c)
//	80B1FC5C: 80362084 (__ptmf_scall)
//	80B1FC74: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::evtCutProc() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/evtCutProc__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1FC9C-80B1FE68 01CC+00 s=1 e=0 z=0  None .text      action__12daNpc_Toby_cFv                                     */
//	80B1FCCC: 8014AA40 (hitChk__8daNpcT_cFP12dCcD_GObjInfUl)
//	80B1FCE0: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80B1FD00: 80147DCC (setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs)
//	80B1FD14: 8014AAD0 (setDamage__8daNpcT_cFiii)
//	80B1FD30: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B1FD3C: 80B24AAC (lit_4159)
//	80B1FD40: 80B24AAC (lit_4159)
//	80B1FD7C: 80B24AAC (lit_4159)
//	80B1FD80: 80B24AAC (lit_4159)
//	80B1FDCC: 80362018 (__ptmf_test)
//	80B1FDE0: 80362048 (__ptmf_cmpr)
//	80B1FDF8: 80362084 (__ptmf_scall)
//	80B1FE24: 80B2073C (setAction__12daNpc_Toby_cFM12daNpc_Toby_cFPCvPvPv_i)
//	80B1FE28: 804061C0 (g_dComIfG_gameInfo)
//	80B1FE2C: 804061C0 (g_dComIfG_gameInfo)
//	80B1FE4C: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::action() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/action__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B1FE68-80B1FF2C 00C4+00 s=1 e=0 z=0  None .text      beforeMove__12daNpc_Toby_cFv                                 */
//	80B1FE9C: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
//	80B1FEDC: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::beforeMove() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/beforeMove__12daNpc_Toby_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80B25840-80B25844 0001+03 s=1 e=0 z=0  None .bss       @1109                                                        */
static u8 lit_1109[1 + 3 /* padding */];

/* 80B1FF2C-80B20278 034C+00 s=1 e=0 z=0  None .text      setAttnPos__12daNpc_Toby_cFv                                 */
//	80B1FF44: 803621D0 (_savegpr_26)
//	80B1FF4C: 80B25840 (lit_1109)
//	80B1FF50: 80B25840 (lit_1109)
//	80B1FF54: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1FF58: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B1FF78: 80147E3C (calc__19daNpcT_DmgStagger_cFi)
//	80B2004C: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	80B20060: 80147C38 (calcJntRad__15daNpcT_JntAnm_cFfff)
//	80B20068: 80149190 (setMtx__8daNpcT_cFv)
//	80B20098: 803DD470 (now__14mDoMtx_stack_c)
//	80B2009C: 803DD470 (now__14mDoMtx_stack_c)
//	80B200A0: 803464B0 (PSMTXCopy)
//	80B200A4: 803DD470 (now__14mDoMtx_stack_c)
//	80B200A8: 803DD470 (now__14mDoMtx_stack_c)
//	80B200B4: 80346D6C (PSMTXMultVec)
//	80B200E0: 80B24474 (setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs)
//	80B20114: 80B24358 (setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs)
//	80B20138: 80B22614 (chkAttnZra__12daNpc_Toby_cFv)
//	80B20190: 803DD470 (now__14mDoMtx_stack_c)
//	80B20194: 803DD470 (now__14mDoMtx_stack_c)
//	80B2019C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80B201A0: 803DD470 (now__14mDoMtx_stack_c)
//	80B201A4: 803DD470 (now__14mDoMtx_stack_c)
//	80B201B0: 80346D6C (PSMTXMultVec)
//	80B201C0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80B201FC: 80B23AB0 (__dt__4cXyzFv)
//	80B20200: 80B23AB0 (__dt__4cXyzFv)
//	80B20208: 80B1E5D8 (__register_global_object)
//	80B20264: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/setAttnPos__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B20278-80B2042C 01B4+00 s=1 e=0 z=0  None .text      setCollision__12daNpc_Toby_cFv                               */
//	80B202A0: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B202A4: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B20330: 80B22614 (chkAttnZra__12daNpc_Toby_cFv)
//	80B20358: 803DD470 (now__14mDoMtx_stack_c)
//	80B2035C: 803DD470 (now__14mDoMtx_stack_c)
//	80B20364: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80B20368: 803DD470 (now__14mDoMtx_stack_c)
//	80B2036C: 803DD470 (now__14mDoMtx_stack_c)
//	80B20378: 80346D6C (PSMTXMultVec)
//	80B20388: 80347090 (PSVECAdd)
//	80B20394: 8026F1F8 (SetH__8cM3dGCylFf)
//	80B203A0: 8026F200 (SetR__8cM3dGCylFf)
//	80B203AC: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80B203B0: 80B2551C (lit_5075)
//	80B203B4: 80B2551C (lit_5075)
//	80B203BC: 80362048 (__ptmf_cmpr)
//	80B203C8: 804061C0 (g_dComIfG_gameInfo)
//	80B203CC: 804061C0 (g_dComIfG_gameInfo)
//	80B203D8: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::setCollision() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/setCollision__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B2042C-80B20434 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__12daNpc_Toby_cFv                                */
// True False
//  bool False
bool daNpc_Toby_c::drawDbgInfo() {
	return false;
}


/* 80B20434-80B2050C 00D8+00 s=1 e=0 z=0  None .text      drawOtherMdl__12daNpc_Toby_cFv                               */
//	80B20444: 803621DC (_savegpr_29)
//	80B20458: 804061C0 (g_dComIfG_gameInfo)
//	80B2045C: 804061C0 (g_dComIfG_gameInfo)
//	80B20484: 8042CA54 (g_env_light)
//	80B20488: 8042CA54 (g_env_light)
//	80B20494: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80B204A0: 80B24B1C (jointNo)
//	80B204A4: 80B24B1C (jointNo)
//	80B204B0: 803DD470 (now__14mDoMtx_stack_c)
//	80B204B4: 803DD470 (now__14mDoMtx_stack_c)
//	80B204B8: 803464B0 (PSMTXCopy)
//	80B204BC: 803DD470 (now__14mDoMtx_stack_c)
//	80B204C0: 803DD470 (now__14mDoMtx_stack_c)
//	80B204C8: 803464B0 (PSMTXCopy)
//	80B204D8: 803464B0 (PSMTXCopy)
//	80B204E0: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80B204F0: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	80B204F8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::drawOtherMdl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/drawOtherMdl__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B2050C-80B20568 005C+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__12daNpc_Toby_cFiifi                   */
//	80B20530: 80B24AAC (lit_4159)
//	80B20534: 80B24AAC (lit_4159)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  int False
asm void daNpc_Toby_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/afterSetFaceMotionAnm__12daNpc_Toby_cFiifi.s"
}
#pragma pop


/* 80B20568-80B205F4 008C+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__12daNpc_Toby_cFiifi                       */
//	80B20590: 80B24AAC (lit_4159)
//	80B20594: 80B24AAC (lit_4159)
//	80B205A8: 80B24AAC (lit_4159)
//	80B205AC: 80B24AAC (lit_4159)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  int False
asm void daNpc_Toby_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/afterSetMotionAnm__12daNpc_Toby_cFiifi.s"
}
#pragma pop


/* 80B205F4-80B20710 011C+00 s=1 e=0 z=0  None .text      selectAction__12daNpc_Toby_cFv                               */
//	80B2060C: 80B24C48 (cNullVec__6Z2Calc)
//	80B20610: 80B24C48 (cNullVec__6Z2Calc)
//	80B20614: 803A2180 (__ptmf_null)
//	80B20618: 803A2180 (__ptmf_null)
//	80B20688: 804061C0 (g_dComIfG_gameInfo)
//	80B2068C: 804061C0 (g_dComIfG_gameInfo)
//	80B20698: 80035360 (isSwitch__10dSv_info_cCFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::selectAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/selectAction__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B20710-80B2073C 002C+00 s=2 e=0 z=0  None .text      chkAction__12daNpc_Toby_cFM12daNpc_Toby_cFPCvPvPv_i          */
//	80B20720: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Toby_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Toby_c False
asm void daNpc_Toby_c::chkAction(int (daNpc_Toby_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/chkAction__12daNpc_Toby_cFM12daNpc_Toby_cFPCvPvPv_i.s"
}
#pragma pop


/* 80B2073C-80B207E4 00A8+00 s=2 e=0 z=0  None .text      setAction__12daNpc_Toby_cFM12daNpc_Toby_cFPCvPvPv_i          */
//	80B20764: 80362018 (__ptmf_test)
//	80B2077C: 80362084 (__ptmf_scall)
//	80B207A8: 80362018 (__ptmf_test)
//	80B207C0: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Toby_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Toby_c False
asm void daNpc_Toby_c::setAction(int (daNpc_Toby_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/setAction__12daNpc_Toby_cFM12daNpc_Toby_cFPCvPvPv_i.s"
}
#pragma pop


/* 80B207E4-80B20AB0 02CC+00 s=1 e=0 z=0  None .text      cutTobyHouseFire__12daNpc_Toby_cFi                           */
//	80B207F4: 803621CC (_savegpr_25)
//	80B20804: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B20818: 804061C0 (g_dComIfG_gameInfo)
//	80B2081C: 804061C0 (g_dComIfG_gameInfo)
//	80B2082C: 80B24B8C (struct_80B24B8C)
//	80B20830: 80B24B8C (struct_80B24B8C)
//	80B2083C: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B20854: 80B24B8C (struct_80B24B8C)
//	80B20858: 80B24B8C (struct_80B24B8C)
//	80B20864: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B2087C: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80B208F8: 8014A908 (setPos__8daNpcT_cF4cXyz)
//	80B20904: 8014AA18 (setAngle__8daNpcT_cFs)
//	80B20908: 80B24AAC (lit_4159)
//	80B2090C: 80B24AAC (lit_4159)
//	80B20944: 8014A908 (setPos__8daNpcT_cF4cXyz)
//	80B20950: 8014AA18 (setAngle__8daNpcT_cFs)
//	80B20964: 804061C0 (g_dComIfG_gameInfo)
//	80B20968: 804061C0 (g_dComIfG_gameInfo)
//	80B20974: 800352B0 (offSwitch__10dSv_info_cFii)
//	80B20A50: 80B24728 (func_80B24728)
//	80B20A9C: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Toby_c::cutTobyHouseFire(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/cutTobyHouseFire__12daNpc_Toby_cFi.s"
}
#pragma pop


/* 80B20AB0-80B20FC0 0510+00 s=3 e=0 z=0  None .text      cutTalkToOneself__12daNpc_Toby_cFi                           */
//	80B20AC0: 803621C0 (_savegpr_22)
//	80B20ACC: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B20AD0: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B20AE8: 804061C0 (g_dComIfG_gameInfo)
//	80B20AEC: 804061C0 (g_dComIfG_gameInfo)
//	80B20AF8: 80B24B8C (struct_80B24B8C)
//	80B20AFC: 80B24B8C (struct_80B24B8C)
//	80B20B08: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B20B20: 80B24B8C (struct_80B24B8C)
//	80B20B24: 80B24B8C (struct_80B24B8C)
//	80B20B30: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B20B48: 80B24B8C (struct_80B24B8C)
//	80B20B4C: 80B24B8C (struct_80B24B8C)
//	80B20B58: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B20B70: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80B20B84: 80B25590 (lit_5477)
//	80B20B88: 80B25590 (lit_5477)
//	80B20BA0: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80B20BA8: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80B20BB8: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80B20BD4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B20C00: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B20C24: 8002D924 (dComIfGs_sense_type_change_Set__FSc)
//	80B20C34: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80B20C5C: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80B20C84: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B20CB0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B20CD4: 8002D924 (dComIfGs_sense_type_change_Set__FSc)
//	80B20CF0: 80B25558 (lit_5478)
//	80B20CF4: 80B25558 (lit_5478)
//	80B20D1C: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B20D38: 8014CA6C (daNpcT_offEvtBit__FUl)
//	80B20D48: 80B24728 (func_80B24728)
//	80B20D74: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B20DD0: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B20DFC: 8023822C (getStatus__12dMsgObject_cFv)
//	80B20E18: 802382F4 (isMsgSendControl__12dMsgObject_cFv)
//	80B20E54: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80B20E58: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80B20E84: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80B20E94: 80B24728 (func_80B24728)
//	80B20EB0: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B20ECC: 8023822C (getStatus__12dMsgObject_cFv)
//	80B20EE8: 802382F4 (isMsgSendControl__12dMsgObject_cFv)
//	80B20F00: 80B24728 (func_80B24728)
//	80B20F20: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80B20F2C: 80238320 (onMsgSend__12dMsgObject_cFv)
//	80B20F34: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B20F44: 8014CA2C (daNpcT_onEvtBit__FUl)
//	80B20F60: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B20F94: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B20FAC: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Toby_c::cutTalkToOneself(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/cutTalkToOneself__12daNpc_Toby_cFi.s"
}
#pragma pop


/* 80B20FC0-80B215B4 05F4+00 s=1 e=0 z=0  None .text      cutRepairSCannon__12daNpc_Toby_cFi                           */
//	80B20FD0: 803621C0 (_savegpr_22)
//	80B20FDC: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B20FE0: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B20FE4: 8042CA54 (g_env_light)
//	80B20FE8: 8042CA54 (g_env_light)
//	80B20FF0: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B21004: 804061C0 (g_dComIfG_gameInfo)
//	80B21008: 804061C0 (g_dComIfG_gameInfo)
//	80B21018: 80B24B8C (struct_80B24B8C)
//	80B2101C: 80B24B8C (struct_80B24B8C)
//	80B21028: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B21040: 80B24B8C (struct_80B24B8C)
//	80B21044: 80B24B8C (struct_80B24B8C)
//	80B21050: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B21068: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80B210B4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B210E0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B21108: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B21158: 8014A908 (setPos__8daNpcT_cF4cXyz)
//	80B21164: 8014AA18 (setAngle__8daNpcT_cFs)
//	80B21194: 8014C500 (daNpcT_getPlayerInfoFromPlayerList__FiiP4cXyzP5csXyz)
//	80B211A0: 804061C0 (g_dComIfG_gameInfo)
//	80B211A4: 804061C0 (g_dComIfG_gameInfo)
//	80B211CC: 80CC8DDC (setCannonRepair__11daSCannon_cFv)
//	80B211DC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80B211E0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80B211F4: 802AFB94 (bgmStreamPrepare__8Z2SeqMgrFUl)
//	80B211F8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80B211FC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80B21208: 802AFE18 (bgmStreamPlay__8Z2SeqMgrFv)
//	80B21280: 80B24728 (func_80B24728)
//	80B2128C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80B21290: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80B212A0: 802AFEDC (bgmStreamStop__8Z2SeqMgrFUl)
//	80B212B0: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	80B212CC: 80027170 (dStage_changeScene__FifUlScsi)
//	80B212EC: 80B24728 (func_80B24728)
//	80B21318: 80B24728 (func_80B24728)
//	80B2132C: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80B21344: 80145DD0 (setNextIdx__13daNpcT_Path_cFi)
//	80B2139C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B213D4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B2140C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B214E0: 8014AA18 (setAngle__8daNpcT_cFs)
//	80B21540: 804061C0 (g_dComIfG_gameInfo)
//	80B21544: 804061C0 (g_dComIfG_gameInfo)
//	80B2155C: 803620AC (__cvt_fp2unsigned)
//	80B215A0: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Toby_c::cutRepairSCannon(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/cutRepairSCannon__12daNpc_Toby_cFi.s"
}
#pragma pop


/* 80B215B4-80B219F4 0440+00 s=1 e=0 z=0  None .text      cutSCannon__12daNpc_Toby_cFi                                 */
//	80B215C4: 803621CC (_savegpr_25)
//	80B215D0: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B215D4: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B215E4: 804061C0 (g_dComIfG_gameInfo)
//	80B215E8: 804061C0 (g_dComIfG_gameInfo)
//	80B215F4: 80B24B8C (struct_80B24B8C)
//	80B215F8: 80B24B8C (struct_80B24B8C)
//	80B21604: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B2161C: 80B24B8C (struct_80B24B8C)
//	80B21620: 80B24B8C (struct_80B24B8C)
//	80B2162C: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B21644: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80B21698: 8014C500 (daNpcT_getPlayerInfoFromPlayerList__FiiP4cXyzP5csXyz)
//	80B216A4: 804061C0 (g_dComIfG_gameInfo)
//	80B216A8: 804061C0 (g_dComIfG_gameInfo)
//	80B216D4: 800483C4 (setGoal__16dEvent_manager_cFP4cXyz)
//	80B216E8: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80B21704: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B21734: 803DD470 (now__14mDoMtx_stack_c)
//	80B21738: 803DD470 (now__14mDoMtx_stack_c)
//	80B21748: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80B2174C: 803DD470 (now__14mDoMtx_stack_c)
//	80B21750: 803DD470 (now__14mDoMtx_stack_c)
//	80B2175C: 80346D6C (PSMTXMultVec)
//	80B2176C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80B217F4: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B21834: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B21870: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B218A0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B218E0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B2190C: 8034739C (PSVECSquareDistance)
//	80B21924: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80B21938: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80B21958: 80270740 (cLib_chaseF__FPfff)
//	80B21974: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B219A8: 80B24728 (func_80B24728)
//	80B219C0: 80B24728 (func_80B24728)
//	80B219E0: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Toby_c::cutSCannon(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/cutSCannon__12daNpc_Toby_cFi.s"
}
#pragma pop


/* 80B219F4-80B22434 0A40+00 s=3 e=0 z=0  None .text      cutConversationAboutSCannon__12daNpc_Toby_cFi                */
//	80B21A04: 803621C0 (_savegpr_22)
//	80B21A10: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B21A14: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B21A2C: 804061C0 (g_dComIfG_gameInfo)
//	80B21A30: 804061C0 (g_dComIfG_gameInfo)
//	80B21A40: 80B24B8C (struct_80B24B8C)
//	80B21A44: 80B24B8C (struct_80B24B8C)
//	80B21A50: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B21A68: 80B24B8C (struct_80B24B8C)
//	80B21A6C: 80B24B8C (struct_80B24B8C)
//	80B21A78: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B21A90: 80B24B8C (struct_80B24B8C)
//	80B21A94: 80B24B8C (struct_80B24B8C)
//	80B21AA0: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B21AB8: 80B24B8C (struct_80B24B8C)
//	80B21ABC: 80B24B8C (struct_80B24B8C)
//	80B21AC8: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B21AE0: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80B21AF4: 80B2561C (lit_6039)
//	80B21AF8: 80B2561C (lit_6039)
//	80B21B10: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80B21B18: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80B21B28: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80B21B44: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80B21B54: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B21B74: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B21B94: 80B1F124 (getOtherTobyP__12daNpc_Toby_cFi)
//	80B21BBC: 8014AA18 (setAngle__8daNpcT_cFs)
//	80B21BD8: 803DD470 (now__14mDoMtx_stack_c)
//	80B21BDC: 803DD470 (now__14mDoMtx_stack_c)
//	80B21BE4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80B21BE8: 803DD470 (now__14mDoMtx_stack_c)
//	80B21BEC: 803DD470 (now__14mDoMtx_stack_c)
//	80B21BF8: 80346D6C (PSMTXMultVec)
//	80B21C08: 80347090 (PSVECAdd)
//	80B21C2C: 8014A908 (setPos__8daNpcT_cF4cXyz)
//	80B21C44: 8014C500 (daNpcT_getPlayerInfoFromPlayerList__FiiP4cXyzP5csXyz)
//	80B21C58: 800483C4 (setGoal__16dEvent_manager_cFP4cXyz)
//	80B21C74: 803DD470 (now__14mDoMtx_stack_c)
//	80B21C78: 803DD470 (now__14mDoMtx_stack_c)
//	80B21C80: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80B21C84: 803DD470 (now__14mDoMtx_stack_c)
//	80B21C88: 803DD470 (now__14mDoMtx_stack_c)
//	80B21C94: 80346D6C (PSMTXMultVec)
//	80B21CA4: 80347090 (PSVECAdd)
//	80B21CB0: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80B21CBC: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80B21CC4: 804061C0 (g_dComIfG_gameInfo)
//	80B21CC8: 804061C0 (g_dComIfG_gameInfo)
//	80B21CF8: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80B21D04: 804061C0 (g_dComIfG_gameInfo)
//	80B21D08: 804061C0 (g_dComIfG_gameInfo)
//	80B21D10: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80B21D30: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B21D50: 80B1F124 (getOtherTobyP__12daNpc_Toby_cFi)
//	80B21D70: 803DD470 (now__14mDoMtx_stack_c)
//	80B21D74: 803DD470 (now__14mDoMtx_stack_c)
//	80B21D7C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80B21D80: 803DD470 (now__14mDoMtx_stack_c)
//	80B21D84: 803DD470 (now__14mDoMtx_stack_c)
//	80B21D90: 80346D6C (PSMTXMultVec)
//	80B21DA0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80B21DCC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B21DEC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B21E24: 8014A908 (setPos__8daNpcT_cF4cXyz)
//	80B21E30: 8014AA18 (setAngle__8daNpcT_cFs)
//	80B21E74: 80B255C8 (lit_6040)
//	80B21E78: 80B255C8 (lit_6040)
//	80B21E9C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B21ED8: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B21EFC: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B21F34: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B21F80: 8004365C (setPt2__14dEvt_control_cFPv)
//	80B21F98: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B21FC0: 80B24728 (func_80B24728)
//	80B21FE4: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22024: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B22064: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B220A0: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B220C4: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B22124: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22170: 8004365C (setPt2__14dEvt_control_cFPv)
//	80B22188: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B221BC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B221FC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22228: 8034739C (PSVECSquareDistance)
//	80B22240: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80B22254: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80B22274: 80270740 (cLib_chaseF__FPfff)
//	80B22290: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B222D4: 80B24728 (func_80B24728)
//	80B22308: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B22348: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22394: 8014B648 (step__8daNpcT_cFsiiii)
//	80B223B4: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B223C8: 8024A528 (getEventId__10dMsgFlow_cFPi)
//	80B223E8: 8014A224 (evtChange__8daNpcT_cFv)
//	80B22408: 80B24728 (func_80B24728)
//	80B22420: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Toby_c::cutConversationAboutSCannon(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/cutConversationAboutSCannon__12daNpc_Toby_cFi.s"
}
#pragma pop


/* 80B22434-80B22614 01E0+00 s=1 e=0 z=0  None .text      cutConversationAboutZra__12daNpc_Toby_cFi                    */
//	80B22444: 803621D0 (_savegpr_26)
//	80B2245C: 804061C0 (g_dComIfG_gameInfo)
//	80B22460: 804061C0 (g_dComIfG_gameInfo)
//	80B2246C: 80B24B8C (struct_80B24B8C)
//	80B22470: 80B24B8C (struct_80B24B8C)
//	80B2247C: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B22494: 80B24B8C (struct_80B24B8C)
//	80B22498: 80B24B8C (struct_80B24B8C)
//	80B224A4: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B224B0: 80B24B8C (struct_80B24B8C)
//	80B224B4: 80B24B8C (struct_80B24B8C)
//	80B224C0: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80B224D8: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80B22508: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80B2250C: 80B24B70 (lit_6056)
//	80B22510: 80B24B70 (lit_6056)
//	80B22548: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22554: 80B24AAC (lit_4159)
//	80B22558: 80B24AAC (lit_4159)
//	80B2258C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22598: 80B24AAC (lit_4159)
//	80B2259C: 80B24AAC (lit_4159)
//	80B225CC: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B22600: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Toby_c::cutConversationAboutZra(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/cutConversationAboutZra__12daNpc_Toby_cFi.s"
}
#pragma pop


/* 80B22614-80B226B0 009C+00 s=5 e=0 z=0  None .text      chkAttnZra__12daNpc_Toby_cFv                                 */
//	80B22624: 803621DC (_savegpr_29)
//	80B22644: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B2266C: 804061C0 (g_dComIfG_gameInfo)
//	80B22670: 804061C0 (g_dComIfG_gameInfo)
//	80B22684: 80035360 (isSwitch__10dSv_info_cCFii)
//	80B2269C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Toby_c::chkAttnZra() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/chkAttnZra__12daNpc_Toby_cFv.s"
}
#pragma pop


/* 80B226B0-80B22D98 06E8+00 s=2 e=0 z=0  None .text      wait__12daNpc_Toby_cFPv                                      */
//	80B226C0: 803621DC (_savegpr_29)
//	80B226C8: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B226CC: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B22718: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80B22738: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22764: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22784: 80B22614 (chkAttnZra__12daNpc_Toby_cFv)
//	80B227A4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B227D0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22800: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B2282C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22890: 80B24728 (func_80B24728)
//	80B228BC: 804061C0 (g_dComIfG_gameInfo)
//	80B228C0: 804061C0 (g_dComIfG_gameInfo)
//	80B228E0: 8014B3EC (getAttnPos__8daNpcT_cFP10fopAc_ac_c)
//	80B22948: 8014ACF0 (chkPointInArea__8daNpcT_cF4cXyz4cXyzfffs)
//	80B2296C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22998: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B229DC: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80B229EC: 802706D0 (cLib_chaseS__FPsss)
//	80B22A74: 8014ACF0 (chkPointInArea__8daNpcT_cF4cXyz4cXyzfffs)
//	80B22A90: 8014ABD0 (chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs)
//	80B22AB0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22ADC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22B48: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22B74: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22BB0: 80B22614 (chkAttnZra__12daNpc_Toby_cFv)
//	80B22BC0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22BC8: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B22BF4: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22C20: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B22C34: 8014ABD0 (chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs)
//	80B22C50: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22C90: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22CB4: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80B22CEC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22D40: 8014B648 (step__8daNpcT_cFsiiii)
//	80B22D5C: 8014AA18 (setAngle__8daNpcT_cFs)
//	80B22D78: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80B22D84: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Toby_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/wait__12daNpc_Toby_cFPv.s"
}
#pragma pop


/* 80B22D98-80B22FAC 0214+00 s=1 e=0 z=0  None .text      walk__12daNpc_Toby_cFPv                                      */
//	80B22DF8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22E08: 80B24AD0 (lit_4802)
//	80B22E0C: 80B24AD0 (lit_4802)
//	80B22E28: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B22E38: 80B24AD0 (lit_4802)
//	80B22E3C: 80B24AD0 (lit_4802)
//	80B22E94: 80145FB4 (getDstPosH__13daNpcT_Path_cF4cXyzP4cXyzii)
//	80B22EC8: 8014B808 (calcSpeedAndAngle__8daNpcT_cF4cXyziss)
//	80B22EE0: 80451180 (G_CM3D_F_ABS_MIN)
//	80B22EE4: 80451180 (G_CM3D_F_ABS_MIN)
//	80B22F0C: 804061C0 (g_dComIfG_gameInfo)
//	80B22F10: 804061C0 (g_dComIfG_gameInfo)
//	80B22F18: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80B22F3C: 8014B648 (step__8daNpcT_cFsiiii)
//	80B22F50: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B22F5C: 80B24AAC (lit_4159)
//	80B22F60: 80B24AAC (lit_4159)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Toby_c::walk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/walk__12daNpc_Toby_cFPv.s"
}
#pragma pop


/* 80B22FAC-80B23344 0398+00 s=3 e=0 z=0  None .text      play__12daNpc_Toby_cFPv                                      */
//	80B22FBC: 803621D4 (_savegpr_27)
//	80B22FC4: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B22FC8: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B22FD0: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80B23028: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B23054: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B230B0: 80BA6500 (setAnm__16daObj_AutoMata_cFib)
//	80B230E4: 80145A24 (checkEndSequence__22daNpcT_MotionSeqMngr_cFv)
//	80B23104: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B23130: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B2316C: 80145A24 (checkEndSequence__22daNpcT_MotionSeqMngr_cFv)
//	80B2318C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B231B8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B231F8: 80BA6500 (setAnm__16daObj_AutoMata_cFib)
//	80B2322C: 80270740 (cLib_chaseF__FPfff)
//	80B23268: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B23294: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B232FC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B23330: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Toby_c::play(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/play__12daNpc_Toby_cFPv.s"
}
#pragma pop


/* 80B23344-80B23628 02E4+00 s=3 e=0 z=0  None .text      talk__12daNpc_Toby_cFPv                                      */
//	80B23354: 803621DC (_savegpr_29)
//	80B2335C: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B23360: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B23390: 80B22614 (chkAttnZra__12daNpc_Toby_cFv)
//	80B233A4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B233C4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B233F4: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80B23408: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80B2348C: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80B234A0: 8024A528 (getEventId__10dMsgFlow_cFPi)
//	80B234C0: 8014A224 (evtChange__8daNpcT_cFv)
//	80B234D8: 804061C0 (g_dComIfG_gameInfo)
//	80B234DC: 804061C0 (g_dComIfG_gameInfo)
//	80B234E4: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80B234E8: 804061C0 (g_dComIfG_gameInfo)
//	80B234EC: 804061C0 (g_dComIfG_gameInfo)
//	80B234F4: 80042468 (reset__14dEvt_control_cFv)
//	80B23504: 804061C0 (g_dComIfG_gameInfo)
//	80B23508: 804061C0 (g_dComIfG_gameInfo)
//	80B2354C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B23590: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B235C8: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80B23608: 8014B648 (step__8daNpcT_cFsiiii)
//	80B23614: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Toby_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/talk__12daNpc_Toby_cFPv.s"
}
#pragma pop


/* 80B23628-80B23648 0020+00 s=1 e=0 z=0  None .text      daNpc_Toby_Create__FPv                                       */
//	80B23634: 80B1E798 (create__12daNpc_Toby_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Toby_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/daNpc_Toby_Create__FPv.s"
}
#pragma pop


/* 80B23648-80B23668 0020+00 s=1 e=0 z=0  None .text      daNpc_Toby_Delete__FPv                                       */
//	80B23654: 80B1EF28 (Delete__12daNpc_Toby_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Toby_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/daNpc_Toby_Delete__FPv.s"
}
#pragma pop


/* 80B23668-80B23688 0020+00 s=1 e=0 z=0  None .text      daNpc_Toby_Execute__FPv                                      */
//	80B23674: 80B1EF5C (Execute__12daNpc_Toby_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Toby_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/daNpc_Toby_Execute__FPv.s"
}
#pragma pop


/* 80B23688-80B236A8 0020+00 s=1 e=0 z=0  None .text      daNpc_Toby_Draw__FPv                                         */
//	80B23694: 80B1EF7C (Draw__12daNpc_Toby_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Toby_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/daNpc_Toby_Draw__FPv.s"
}
#pragma pop


/* 80B236A8-80B236B0 0008+00 s=1 e=0 z=0  None .text      daNpc_Toby_IsDelete__FPv                                     */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Toby_IsDelete(void* param_0) {
	return true;
}


/* 80B236B0-80B236E0 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	80B236CC: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 80B236E0-80B23728 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80B236F8: 80B25708 (__vt__10cCcD_GStts)
//	80B236FC: 80B25708 (__vt__10cCcD_GStts)
//	80B2370C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80B23728-80B23AB0 0388+00 s=1 e=0 z=0  None .text      __dt__8daNpcT_cFv                                            */
//	80B23748: 803B3A78 (__vt__8daNpcT_c)
//	80B2374C: 803B3A78 (__vt__8daNpcT_c)
//	80B23760: 80B23AEC (__dt__5csXyzFv)
//	80B23764: 80B23AEC (__dt__5csXyzFv)
//	80B23770: 80361CE8 (__destroy_arr)
//	80B2377C: 80B25738 (__vt__15daNpcT_JntAnm_c)
//	80B23780: 80B25738 (__vt__15daNpcT_JntAnm_c)
//	80B2378C: 80B23AB0 (__dt__4cXyzFv)
//	80B23790: 80B23AB0 (__dt__4cXyzFv)
//	80B2379C: 80361CE8 (__destroy_arr)
//	80B237A4: 80B23AB0 (__dt__4cXyzFv)
//	80B237A8: 80B23AB0 (__dt__4cXyzFv)
//	80B237B4: 80361CE8 (__destroy_arr)
//	80B237BC: 80B23AB0 (__dt__4cXyzFv)
//	80B237C0: 80B23AB0 (__dt__4cXyzFv)
//	80B237CC: 80361CE8 (__destroy_arr)
//	80B237D4: 80B23AB0 (__dt__4cXyzFv)
//	80B237D8: 80B23AB0 (__dt__4cXyzFv)
//	80B237E4: 80361CE8 (__destroy_arr)
//	80B237EC: 80B23AB0 (__dt__4cXyzFv)
//	80B237F0: 80B23AB0 (__dt__4cXyzFv)
//	80B237FC: 80361CE8 (__destroy_arr)
//	80B23804: 80B23AB0 (__dt__4cXyzFv)
//	80B23808: 80B23AB0 (__dt__4cXyzFv)
//	80B23814: 80361CE8 (__destroy_arr)
//	80B23820: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23824: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23834: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23838: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23848: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B2384C: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B2385C: 80B25720 (__vt__22daNpcT_MotionSeqMngr_c)
//	80B23860: 80B25720 (__vt__22daNpcT_MotionSeqMngr_c)
//	80B23870: 80B25720 (__vt__22daNpcT_MotionSeqMngr_c)
//	80B23874: 80B25720 (__vt__22daNpcT_MotionSeqMngr_c)
//	80B23884: 80077CDC (__dt__11dBgS_LinChkFv)
//	80B23890: 800775F0 (__dt__11dBgS_GndChkFv)
//	80B2389C: 803AC2E4 (__vt__9dCcD_Stts)
//	80B238A0: 803AC2E4 (__vt__9dCcD_Stts)
//	80B238B8: 80B25714 (__vt__10dCcD_GStts)
//	80B238BC: 80B25714 (__vt__10dCcD_GStts)
//	80B238CC: 80B25708 (__vt__10cCcD_GStts)
//	80B238D0: 80B25708 (__vt__10cCcD_GStts)
//	80B238E0: 803C3728 (__vt__9cCcD_Stts)
//	80B238E4: 803C3728 (__vt__9cCcD_Stts)
//	80B238F4: 80249F48 (__dt__10dMsgFlow_cFv)
//	80B23900: 80267C94 (__dt__11cBgS_GndChkFv)
//	80B2390C: 80B256FC (__vt__12dBgS_AcchCir)
//	80B23910: 80B256FC (__vt__12dBgS_AcchCir)
//	80B23920: 8026EF18 (__dt__8cM3dGCirFv)
//	80B2392C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80B23938: 803AC2E4 (__vt__9dCcD_Stts)
//	80B2393C: 803AC2E4 (__vt__9dCcD_Stts)
//	80B23954: 80B25714 (__vt__10dCcD_GStts)
//	80B23958: 80B25714 (__vt__10dCcD_GStts)
//	80B23968: 80B25708 (__vt__10cCcD_GStts)
//	80B2396C: 80B25708 (__vt__10cCcD_GStts)
//	80B2397C: 803C3728 (__vt__9cCcD_Stts)
//	80B23980: 803C3728 (__vt__9cCcD_Stts)
//	80B23990: 80B256D8 (__vt__12dBgS_ObjAcch)
//	80B23994: 80B256D8 (__vt__12dBgS_ObjAcch)
//	80B239B4: 80075F94 (__dt__9dBgS_AcchFv)
//	80B239D0: 80B256CC (__vt__12J3DFrameCtrl)
//	80B239D4: 80B256CC (__vt__12J3DFrameCtrl)
//	80B239F4: 80B256CC (__vt__12J3DFrameCtrl)
//	80B239F8: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23A18: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23A1C: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23A3C: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23A40: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23A60: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23A64: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23A74: 802C0420 (__dt__10Z2CreatureFv)
//	80B23A80: 80018C8C (__dt__10fopAc_ac_cFv)
//	80B23A90: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_c::~daNpcT_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__8daNpcT_cFv.s"
}
#pragma pop


/* 80B23AB0-80B23AEC 003C+00 s=4 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80B23AD0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__4cXyzFv.s"
}
#pragma pop


/* 80B23AEC-80B23B28 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80B23B0C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__5csXyzFv.s"
}
#pragma pop


/* 80B23B28-80B23B70 0048+00 s=3 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv                                 */
//	80B23B40: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23B44: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23B54: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80B23B70-80B23BB8 0048+00 s=1 e=0 z=0  None .text      __dt__13daNpcT_Path_cFv                                      */
//	80B23B88: 80B2575C (__vt__13daNpcT_Path_c)
//	80B23B8C: 80B2575C (__vt__13daNpcT_Path_c)
//	80B23B9C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_Path_c::~daNpcT_Path_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__13daNpcT_Path_cFv.s"
}
#pragma pop


/* 80B23BB8-80B23BF4 003C+00 s=1 e=0 z=0  None .text      __ct__18daNpcT_ActorMngr_cFv                                 */
//	80B23BCC: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23BD0: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23BD8: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__ct__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80B23BF4-80B23C3C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80B23C0C: 80B25750 (__vt__8cM3dGCyl)
//	80B23C10: 80B25750 (__vt__8cM3dGCyl)
//	80B23C20: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80B23C3C-80B23C84 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80B23C54: 80B25744 (__vt__8cM3dGAab)
//	80B23C58: 80B25744 (__vt__8cM3dGAab)
//	80B23C68: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80B23C84-80B24088 0404+00 s=1 e=0 z=0  None .text      __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80B23C94: 803621C0 (_savegpr_22)
//	80B23CBC: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B23CC0: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B23CC4: 80018B64 (__ct__10fopAc_ac_cFv)
//	80B23CC8: 803B3A78 (__vt__8daNpcT_c)
//	80B23CCC: 803B3A78 (__vt__8daNpcT_c)
//	80B23CE8: 802C03C8 (__ct__10Z2CreatureFv)
//	80B23CF0: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23CF4: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23D04: 803283FC (init__12J3DFrameCtrlFs)
//	80B23D14: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23D18: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23D28: 803283FC (init__12J3DFrameCtrlFs)
//	80B23D38: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23D3C: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23D4C: 803283FC (init__12J3DFrameCtrlFs)
//	80B23D5C: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23D60: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23D70: 803283FC (init__12J3DFrameCtrlFs)
//	80B23D80: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23D84: 80B256CC (__vt__12J3DFrameCtrl)
//	80B23D94: 803283FC (init__12J3DFrameCtrlFs)
//	80B23DA8: 800760A0 (__ct__9dBgS_AcchFv)
//	80B23DAC: 80B256D8 (__vt__12dBgS_ObjAcch)
//	80B23DB0: 80B256D8 (__vt__12dBgS_ObjAcch)
//	80B23DCC: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80B23DD0: 803C3728 (__vt__9cCcD_Stts)
//	80B23DD4: 803C3728 (__vt__9cCcD_Stts)
//	80B23DE0: 80083760 (__ct__10dCcD_GSttsFv)
//	80B23DE4: 803AC2E4 (__vt__9dCcD_Stts)
//	80B23DE8: 803AC2E4 (__vt__9dCcD_Stts)
//	80B23DFC: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80B23E04: 80267C1C (__ct__11cBgS_GndChkFv)
//	80B23E0C: 80249F00 (__ct__10dMsgFlow_cFv)
//	80B23E10: 803C3728 (__vt__9cCcD_Stts)
//	80B23E14: 803C3728 (__vt__9cCcD_Stts)
//	80B23E20: 80083760 (__ct__10dCcD_GSttsFv)
//	80B23E24: 803AC2E4 (__vt__9dCcD_Stts)
//	80B23E28: 803AC2E4 (__vt__9dCcD_Stts)
//	80B23E38: 8007757C (__ct__11dBgS_GndChkFv)
//	80B23E40: 80077C68 (__ct__11dBgS_LinChkFv)
//	80B23E44: 80B25720 (__vt__22daNpcT_MotionSeqMngr_c)
//	80B23E48: 80B25720 (__vt__22daNpcT_MotionSeqMngr_c)
//	80B23E5C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B23E60: 80B25720 (__vt__22daNpcT_MotionSeqMngr_c)
//	80B23E64: 80B25720 (__vt__22daNpcT_MotionSeqMngr_c)
//	80B23E78: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B23E7C: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23E80: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23E8C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80B23E90: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23E94: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23EA0: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80B23EA8: 80B25738 (__vt__15daNpcT_JntAnm_c)
//	80B23EAC: 80B25738 (__vt__15daNpcT_JntAnm_c)
//	80B23EB4: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23EB8: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B23EC4: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80B23ECC: 80B24188 (__ct__4cXyzFv)
//	80B23ED0: 80B24188 (__ct__4cXyzFv)
//	80B23ED4: 80B23AB0 (__dt__4cXyzFv)
//	80B23ED8: 80B23AB0 (__dt__4cXyzFv)
//	80B23EE4: 80361D60 (__construct_array)
//	80B23EEC: 80B24188 (__ct__4cXyzFv)
//	80B23EF0: 80B24188 (__ct__4cXyzFv)
//	80B23EF4: 80B23AB0 (__dt__4cXyzFv)
//	80B23EF8: 80B23AB0 (__dt__4cXyzFv)
//	80B23F04: 80361D60 (__construct_array)
//	80B23F0C: 80B24188 (__ct__4cXyzFv)
//	80B23F10: 80B24188 (__ct__4cXyzFv)
//	80B23F14: 80B23AB0 (__dt__4cXyzFv)
//	80B23F18: 80B23AB0 (__dt__4cXyzFv)
//	80B23F24: 80361D60 (__construct_array)
//	80B23F2C: 80B24188 (__ct__4cXyzFv)
//	80B23F30: 80B24188 (__ct__4cXyzFv)
//	80B23F34: 80B23AB0 (__dt__4cXyzFv)
//	80B23F38: 80B23AB0 (__dt__4cXyzFv)
//	80B23F44: 80361D60 (__construct_array)
//	80B23F4C: 80B24188 (__ct__4cXyzFv)
//	80B23F50: 80B24188 (__ct__4cXyzFv)
//	80B23F54: 80B23AB0 (__dt__4cXyzFv)
//	80B23F58: 80B23AB0 (__dt__4cXyzFv)
//	80B23F64: 80361D60 (__construct_array)
//	80B23F6C: 80B24188 (__ct__4cXyzFv)
//	80B23F70: 80B24188 (__ct__4cXyzFv)
//	80B23F74: 80B23AB0 (__dt__4cXyzFv)
//	80B23F78: 80B23AB0 (__dt__4cXyzFv)
//	80B23F84: 80361D60 (__construct_array)
//	80B23F8C: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80B23F94: 80B24088 (__ct__5csXyzFv)
//	80B23F98: 80B24088 (__ct__5csXyzFv)
//	80B23F9C: 80B23AEC (__dt__5csXyzFv)
//	80B23FA0: 80B23AEC (__dt__5csXyzFv)
//	80B23FAC: 80361D60 (__construct_array)
//	80B23FC0: 80003458 (memset)
//	80B23FC8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B23FD0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80B23FD8: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80B23FE0: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80B23FE8: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80B2404C: 80267954 (cM_rndF__Ff)
//	80B24074: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/func_80B23C84.s"
}
#pragma pop


/* 80B24088-80B2408C 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80B2408C-80B24188 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv                                    */
//	80B240AC: 80B25738 (__vt__15daNpcT_JntAnm_c)
//	80B240B0: 80B25738 (__vt__15daNpcT_JntAnm_c)
//	80B240BC: 80B23AB0 (__dt__4cXyzFv)
//	80B240C0: 80B23AB0 (__dt__4cXyzFv)
//	80B240CC: 80361CE8 (__destroy_arr)
//	80B240D4: 80B23AB0 (__dt__4cXyzFv)
//	80B240D8: 80B23AB0 (__dt__4cXyzFv)
//	80B240E4: 80361CE8 (__destroy_arr)
//	80B240EC: 80B23AB0 (__dt__4cXyzFv)
//	80B240F0: 80B23AB0 (__dt__4cXyzFv)
//	80B240FC: 80361CE8 (__destroy_arr)
//	80B24104: 80B23AB0 (__dt__4cXyzFv)
//	80B24108: 80B23AB0 (__dt__4cXyzFv)
//	80B24114: 80361CE8 (__destroy_arr)
//	80B2411C: 80B23AB0 (__dt__4cXyzFv)
//	80B24120: 80B23AB0 (__dt__4cXyzFv)
//	80B2412C: 80361CE8 (__destroy_arr)
//	80B24134: 80B23AB0 (__dt__4cXyzFv)
//	80B24138: 80B23AB0 (__dt__4cXyzFv)
//	80B24144: 80361CE8 (__destroy_arr)
//	80B24150: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B24154: 80B2572C (__vt__18daNpcT_ActorMngr_c)
//	80B24168: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop


/* 80B24188-80B2418C 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80B2418C-80B241D4 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv                             */
//	80B241A4: 80B25720 (__vt__22daNpcT_MotionSeqMngr_c)
//	80B241A8: 80B25720 (__vt__22daNpcT_MotionSeqMngr_c)
//	80B241B8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop


/* 80B241D4-80B24244 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80B241F4: 80B256FC (__vt__12dBgS_AcchCir)
//	80B241F8: 80B256FC (__vt__12dBgS_AcchCir)
//	80B24208: 8026EF18 (__dt__8cM3dGCirFv)
//	80B24214: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80B24224: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80B24244-80B242A0 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80B2425C: 80B25714 (__vt__10dCcD_GStts)
//	80B24260: 80B25714 (__vt__10dCcD_GStts)
//	80B2426C: 80B25708 (__vt__10cCcD_GStts)
//	80B24270: 80B25708 (__vt__10cCcD_GStts)
//	80B24284: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80B242A0-80B24310 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80B242C0: 80B256D8 (__vt__12dBgS_ObjAcch)
//	80B242C4: 80B256D8 (__vt__12dBgS_ObjAcch)
//	80B242E0: 80075F94 (__dt__9dBgS_AcchFv)
//	80B242F0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80B24310-80B24358 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80B24328: 80B256CC (__vt__12J3DFrameCtrl)
//	80B2432C: 80B256CC (__vt__12J3DFrameCtrl)
//	80B2433C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80B24358-80B24474 011C+00 s=1 e=0 z=0  None .text      setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs                    */
//	80B24370: 803621D8 (_savegpr_28)
//	80B243A4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80B243C0: 80267674 (cM_atan2s__Fff)
//	80B243EC: 80B24AC0 (lit_4495)
//	80B243F0: 80B24AC0 (lit_4495)
//	80B243FC: 80B24AF4 (lit_4992)
//	80B24400: 80B24AF4 (lit_4992)
//	80B24460: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleY(cXyz param_0, s16 param_1, int param_2, f32 param_3, s16 param_4) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs.s"
}
#pragma pop


/* 80B24474-80B2467C 0208+00 s=1 e=0 z=0  None .text      setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs                      */
//	80B2448C: 803621DC (_savegpr_29)
//	80B244A0: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B244A4: 80B249E4 (m__18daNpc_Toby_Param_c)
//	80B244C0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80B244F0: 80347138 (PSVECSquareMag)
//	80B24560: 80450AE0 (__float_nan)
//	80B24564: 80450AE0 (__float_nan)
//	80B245D0: 80450AE0 (__float_nan)
//	80B245D4: 80450AE0 (__float_nan)
//	80B245E4: 80267674 (cM_atan2s__Fff)
//	80B24668: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleX(cXyz param_0, f32 param_1, s16 param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs.s"
}
#pragma pop


/* 80B2467C-80B24680 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi                               */
// True False
//  void False
//  int False
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
	/* empty function */
}


/* 80B24680-80B24688 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballLMaterialNo() {
	return false;
}


/* 80B24688-80B24690 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballRMaterialNo() {
	return false;
}


/* 80B24690-80B24698 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::evtEndProc() {
	return true;
}


/* 80B24698-80B2469C 0004+00 s=1 e=0 z=0  None .text      afterMoved__8daNpcT_cFv                                      */
// True False
//  void False
void daNpcT_c::afterMoved() {
	/* empty function */
}


/* 80B2469C-80B246B4 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcT_c::decTmr() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/decTmr__8daNpcT_cFv.s"
}
#pragma pop


/* 80B246B4-80B246B8 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv                                       */
// True False
//  void False
void daNpcT_c::drawGhost() {
	/* empty function */
}


/* 80B246B8-80B246E8 0030+00 s=1 e=0 z=0  None .text      getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c False
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop


/* 80B246E8-80B24718 0030+00 s=1 e=0 z=0  None .text      getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_motionAnmData_c False
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop


/* 80B24718-80B2471C 0004+00 s=1 e=0 z=0  None .text      changeAnm__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
	/* empty function */
}


/* 80B2471C-80B24720 0004+00 s=1 e=0 z=0  None .text      changeBck__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBck(int* param_0, int* param_1) {
	/* empty function */
}


/* 80B24720-80B24724 0004+00 s=1 e=0 z=0  None .text      changeBtp__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
	/* empty function */
}


/* 80B24724-80B24728 0004+00 s=1 e=0 z=0  None .text      changeBtk__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
	/* empty function */
}


/* 80B24728-80B24744 001C+00 s=6 e=0 z=0  None .text      cLib_calcTimer<i>__FPi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int* False
// 	 int False
asm void cLib_calcTimer__template0(int* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/func_80B24728.s"
}
#pragma pop


/* ############################################################################################## */
/* 80B2582C-80B25838 000C+00 s=2 e=0 z=0  None .data      __vt__18daNpc_Toby_Param_c                                   */
SECTION_DATA void* __vt__18daNpc_Toby_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpc_Toby_Param_cFv,
};

/* 80B25844-80B25848 0001+03 s=0 e=0 z=0  None .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 80B25848-80B2584C 0001+03 s=0 e=0 z=0  None .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 80B2584C-80B25850 0001+03 s=0 e=0 z=0  None .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 80B25850-80B25854 0001+03 s=0 e=0 z=0  None .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 80B25854-80B25858 0001+03 s=0 e=0 z=0  None .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 80B25858-80B2585C 0001+03 s=0 e=0 z=0  None .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 80B2585C-80B25860 0001+03 s=0 e=0 z=0  None .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 80B25860-80B25864 0001+03 s=0 e=0 z=0  None .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 80B25864-80B25868 0001+03 s=0 e=0 z=0  None .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 80B25868-80B2586C 0001+03 s=0 e=0 z=0  None .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 80B2586C-80B25870 0001+03 s=0 e=0 z=0  None .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 80B25870-80B25874 0001+03 s=0 e=0 z=0  None .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 80B25874-80B25878 0001+03 s=0 e=0 z=0  None .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 80B25878-80B2587C 0001+03 s=0 e=0 z=0  None .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 80B2587C-80B25880 0001+03 s=0 e=0 z=0  None .bss       @1009                                                        */
u8 lit_1009[1 + 3 /* padding */];

/* 80B25880-80B2588C 000C+00 s=1 e=0 z=0  None .bss       @3933                                                        */
static u8 lit_3933[12];

/* 80B2588C-80B25890 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80B24744-80B24840 00FC+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_toby_cpp                                     */
//	80B24750: 80B24C48 (cNullVec__6Z2Calc)
//	80B24754: 80B24C48 (cNullVec__6Z2Calc)
//	80B24758: 803A2180 (__ptmf_null)
//	80B2475C: 803A2180 (__ptmf_null)
//	80B2480C: 80B2582C (__vt__18daNpc_Toby_Param_c)
//	80B24810: 80B2582C (__vt__18daNpc_Toby_Param_c)
//	80B24814: 80B2588C (l_HIO)
//	80B24818: 80B2588C (l_HIO)
//	80B2481C: 80B24978 (__dt__18daNpc_Toby_Param_cFv)
//	80B24820: 80B24978 (__dt__18daNpc_Toby_Param_cFv)
//	80B24824: 80B25880 (lit_3933)
//	80B24828: 80B25880 (lit_3933)
//	80B2482C: 80B1E5D8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_toby_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__sinit_d_a_npc_toby_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80B24744 = (void*)__sinit_d_a_npc_toby_cpp;
#pragma pop


/* 80B24840-80B24920 00E0+00 s=1 e=0 z=0  None .text      __ct__12daNpc_Toby_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80B24860: 80B23C84 (__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80B24864: 80B25768 (__vt__12daNpc_Toby_c)
//	80B24868: 80B25768 (__vt__12daNpc_Toby_c)
//	80B24878: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80B2487C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80B24880: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80B24888: 80B25744 (__vt__8cM3dGAab)
//	80B2488C: 80B25744 (__vt__8cM3dGAab)
//	80B24894: 80B25750 (__vt__8cM3dGCyl)
//	80B24898: 80B25750 (__vt__8cM3dGCyl)
//	80B248A0: 803C35A4 (__vt__12cCcD_CylAttr)
//	80B248A4: 803C35A4 (__vt__12cCcD_CylAttr)
//	80B248B4: 803AC050 (__vt__8dCcD_Cyl)
//	80B248B8: 803AC050 (__vt__8dCcD_Cyl)
//	80B248D4: 80B23BB8 (__ct__18daNpcT_ActorMngr_cFv)
//	80B248D8: 80B23BB8 (__ct__18daNpcT_ActorMngr_cFv)
//	80B248DC: 80B23B28 (__dt__18daNpcT_ActorMngr_cFv)
//	80B248E0: 80B23B28 (__dt__18daNpcT_ActorMngr_cFv)
//	80B248EC: 80361D60 (__construct_array)
//	80B248F4: 80B2575C (__vt__13daNpcT_Path_c)
//	80B248F8: 80B2575C (__vt__13daNpcT_Path_c)
//	80B24900: 80145C40 (initialize__13daNpcT_Path_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpc_Toby_c::daNpc_Toby_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/func_80B24840.s"
}
#pragma pop


/* 80B24920-80B24928 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__12daNpc_Toby_cFv                       */
// True False
//  s32 False
s32 daNpc_Toby_c::getEyeballMaterialNo() {
	return 2;
}


/* 80B24928-80B24930 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__12daNpc_Toby_cFv                             */
// True False
//  s32 False
s32 daNpc_Toby_c::getHeadJointNo() {
	return 4;
}


/* 80B24930-80B24938 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__12daNpc_Toby_cFv                             */
// True False
//  s32 False
s32 daNpc_Toby_c::getNeckJointNo() {
	return 3;
}


/* 80B24938-80B24940 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__12daNpc_Toby_cFv                         */
// True False
//  bool False
bool daNpc_Toby_c::getBackboneJointNo() {
	return true;
}


/* 80B24940-80B24950 0010+00 s=1 e=0 z=0  None .text      checkChangeJoint__12daNpc_Toby_cFi                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Toby_c::checkChangeJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/checkChangeJoint__12daNpc_Toby_cFi.s"
}
#pragma pop


/* 80B24950-80B24960 0010+00 s=1 e=0 z=0  None .text      checkRemoveJoint__12daNpc_Toby_cFi                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Toby_c::checkRemoveJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/checkRemoveJoint__12daNpc_Toby_cFi.s"
}
#pragma pop


/* 80B24960-80B24968 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__12daNpc_Toby_cFv                            */
// True False
//  s32 False
s32 daNpc_Toby_c::getFootLJointNo() {
	return 24;
}


/* 80B24968-80B24970 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__12daNpc_Toby_cFv                            */
// True False
//  s32 False
s32 daNpc_Toby_c::getFootRJointNo() {
	return 27;
}


/* 80B24970-80B24978 0008+00 s=1 e=0 z=0  None .text      chkXYItems__12daNpc_Toby_cFv                                 */
// True False
//  bool False
bool daNpc_Toby_c::chkXYItems() {
	return true;
}


/* 80B24978-80B249C0 0048+00 s=2 e=0 z=0  None .text      __dt__18daNpc_Toby_Param_cFv                                 */
//	80B24990: 80B2582C (__vt__18daNpc_Toby_Param_c)
//	80B24994: 80B2582C (__vt__18daNpc_Toby_Param_c)
//	80B249A4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Toby_Param_c::~daNpc_Toby_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/__dt__18daNpc_Toby_Param_cFv.s"
}
#pragma pop


/* 80B249C0-80B249C8 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80B249C4: 80B242A0 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80B249C0() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/func_80B249C0.s"
}
#pragma pop


/* 80B249C8-80B249D0 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80B249CC: 80B242A0 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80B249C8() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_toby/d_a_npc_toby/func_80B249C8.s"
}
#pragma pop


/* ############################################################################################## */
/* 80B25890-80B258A0 000C+04 s=0 e=0 z=0  None .bss       @4922                                                        */
u8 lit_4922[12 + 4 /* padding */];

/* 80B258A0-80B258AC 000C+00 s=0 e=0 z=0  None .bss       prtclScl$4921                                                */
u8 data_80B258A0[12];

/* 80B258AC-80B258B0 0004+00 s=0 e=0 z=0  None .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_80B258AC[4];

/* 80B258B0-80B258B4 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_80B258B0[4];

/* 80B258B4-80B258B8 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_80B258B4[4];

/* 80B258B8-80B258BC 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_80B258B8[4];

/* 80B258BC-80B258C0 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_80B258BC[4];

/* 80B258C0-80B258C4 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_80B258C0[4];

/* 80B258C4-80B258C8 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_80B258C4[4];

/* 80B258C8-80B258CC 0004+00 s=0 e=0 z=0  None .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_80B258C8[4];

/* 80B258CC-80B258D0 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_80B258CC[4];

/* 80B258D0-80B258D4 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_80B258D0[4];

/* 80B258D4-80B258D8 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_80B258D4[4];

/* 80B258D8-80B258DC 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_80B258D8[4];

/* 80B258DC-80B258E0 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_80B258DC[4];

/* 80B258E0-80B258E4 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_80B258E0[4];

/* 80B258E4-80B258E8 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_80B258E4[4];

/* 80B258E8-80B258EC 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_80B258E8[4];

/* 80B258EC-80B258F0 0004+00 s=0 e=0 z=0  None .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_80B258EC[4];

/* 80B258F0-80B258F4 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_80B258F0[4];

/* 80B258F4-80B258F8 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_80B258F4[4];

/* 80B258F8-80B258FC 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_80B258F8[4];

/* 80B258FC-80B25900 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_80B258FC[4];

/* 80B25900-80B25904 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_80B25900[4];

/* 80B25904-80B25908 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_80B25904[4];

/* 80B25908-80B2590C 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_80B25908[4];

/* 80B2590C-80B25910 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_80B2590C[4];

