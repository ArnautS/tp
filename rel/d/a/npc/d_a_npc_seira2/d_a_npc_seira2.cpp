// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_seira2
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2.h"

// 
// Types:
// 

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct daNpcT_MotionSeqMngr_c {
	struct sequenceStepData_c {
	};

	/* 80145898 */ // False False
void initialize();
	/* 80145A24 */ // False False
void checkEndSequence();
	/* 80AD40F4 */ // True False
~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_motionAnmData_c {
};

struct daNpcT_evtData_c {
};

struct J3DJoint {
};

struct daNpcT_faceMotionAnmData_c {
};

struct daNpc_Seira2_c {
	/* 80AD0C0C */ // True False
~daNpc_Seira2_c();
	/* 80AD0D58 */ // True False
void create();
	/* 80AD0FF8 */ // True False
void CreateHeap();
	/* 80AD1508 */ // True False
void Delete();
	/* 80AD153C */ // True False
void Execute();
	/* 80AD1610 */ // True False
void Draw();
	/* 80AD16A4 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80AD16C4 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 80AD171C */ // True False
void getType();
	/* 80AD179C */ // True False
void getFlowNodeNo();
	/* 80AD17B8 */ // True False
void getMaxNumItem();
	/* 80AD17C4 */ // True False
void checkBottle();
	/* 80AD182C */ // True False
//  bool False
bool isDelete();
	/* 80AD1834 */ // True False
void reset();
	/* 80AD1968 */ // True False
//  int False
void afterJntAnm(int);
	/* 80AD19EC */ // True False
void setParam();
	/* 80AD1B38 */ // True False
void setAfterTalkMotion();
	/* 80AD1BF8 */ // True False
void srchActors();
	/* 80AD1C60 */ // True False
void evtTalk();
	/* 80AD1E04 */ // True False
void evtCutProc();
	/* 80AD1ED4 */ // True False
void action();
	/* 80AD2030 */ // True False
void beforeMove();
	/* 80AD20A8 */ // True False
void setAttnPos();
	/* 80AD23A8 */ // True False
void setCollision();
	/* 80AD2550 */ // True False
//  bool False
bool drawDbgInfo();
	/* 80AD2558 */ // True False
void drawOtherMdl();
	/* 80AD2630 */ // True False
//  int False
//  int False
//  f32 False
//  bool False
void setBottleAnm(int, int, f32, bool);
	/* 80AD2710 */ // True False
//  int False
//  int False
//  f32 False
//  int False
void afterSetMotionAnm(int, int, f32, int);
	/* 80AD2748 */ // True False
void selectAction();
	/* 80AD2870 */ // True False
//  int (daNpc_Seira2_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira2_c False
void chkAction(int (daNpc_Seira2_c::*)(void*));
	/* 80AD289C */ // True False
//  int (daNpc_Seira2_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira2_c False
void setAction(int (daNpc_Seira2_c::*)(void*));
	/* 80AD2944 */ // True False
void checkStageIsSeira2sShop();
	/* 80AD29BC */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80AD2B68 */ // True False
//  void* False
// 	 void False
void sit(void*);
	/* 80AD2D8C */ // True False
//  void* False
// 	 void False
void happy(void*);
	/* 80AD2F14 */ // True False
//  void* False
// 	 void False
void worry(void*);
	/* 80AD31F0 */ // True False
//  void* False
// 	 void False
void sad(void*);
	/* 80AD3508 */ // True False
//  void* False
// 	 void False
void lookaround(void*);
	/* 80AD3614 */ // True False
//  void* False
// 	 void False
void smile(void*);
	/* 80AD3720 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80AD3890 */ // True False
//  void* False
// 	 void False
void shop(void*);
	/* 80AD47B8 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpc_Seira2_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80AD4884 */ // True False
//  s32 False
s32 getEyeballMaterialNo();
	/* 80AD488C */ // True False
//  s32 False
s32 getHeadJointNo();
	/* 80AD4894 */ // True False
//  s32 False
s32 getNeckJointNo();
	/* 80AD489C */ // True False
//  bool False
bool getBackboneJointNo();
	/* 80AD48A4 */ // True False
//  int False
void checkChangeJoint(int);
	/* 80AD48B4 */ // True False
//  int False
void checkRemoveJoint(int);
};

struct daNpc_Seira2_Param_c {
	/* 80AD48C4 */ // True False
~daNpc_Seira2_Param_c();
};

struct J3DModel {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80AD3B74 */ // True False
~cXyz();
	/* 80AD40F0 */ // True False
cXyz();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct _GXColorS10 {
};

struct daNpcT_c {
	/* 80147FA4 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
void tgHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
	/* 80148094 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getTrnsfrmKeyAnmP(char const*, int);
	/* 801483F8 */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void loadRes(s8 const*, char const**);
	/* 801484AC */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void deleteRes(s8 const*, char const**);
	/* 8014852C */ // False False
void execute();
	/* 8014886C */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
	/* 80148C70 */ // False False
void setEnvTevColor();
	/* 80148CCC */ // False False
void setRoomNo();
	/* 801490D4 */ // False False
void ctrlBtk();
	/* 80149190 */ // False False
void setMtx();
	/* 8014951C */ // False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 8014997C */ // False False
void evtProc();
	/* 80149BB4 */ // False False
void setFootPos();
	/* 80149D7C */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
void setFootPrtcl(cXyz*, f32, f32);
	/* 8014A05C */ // False False
//  bool False
bool checkCullDraw();
	/* 8014A064 */ // False False
void twilight();
	/* 8014A0B0 */ // False False
void evtOrder();
	/* 8014A324 */ // False False
void clrParam();
	/* 8014A388 */ // False False
//  int False
//  bool False
void setFaceMotionAnm(int, bool);
	/* 8014A628 */ // False False
//  int False
//  f32 False
//  int False
void setMotionAnm(int, f32, int);
	/* 8014AA18 */ // False False
//  s16 False
void setAngle(s16);
	/* 8014AA40 */ // False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
void hitChk(dCcD_GObjInf*, u32);
	/* 8014AAD0 */ // False False
//  int False
//  int False
//  int False
void setDamage(int, int, int);
	/* 8014B338 */ // False False
void srchPlayerActor();
	/* 8014B648 */ // False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
void step(s16, int, int, int, int);
	/* 8014BBF0 */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 8014BC78 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void talkProc(int*, int, fopAc_ac_c**, int);
	/* 8014BE2C */ // False False
//  s16 False
void getNearestActorP(s16);
	/* 80AD3BEC */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80AD45E4 */ // True False
//  void False
//  int False
void ctrlSubFaceMotion(int);
	/* 80AD45E8 */ // True False
//  s32 False
s32 getFootLJointNo();
	/* 80AD45F0 */ // True False
//  s32 False
s32 getFootRJointNo();
	/* 80AD45F8 */ // True False
//  bool False
bool getEyeballLMaterialNo();
	/* 80AD4600 */ // True False
//  bool False
bool getEyeballRMaterialNo();
	/* 80AD4608 */ // True False
//  bool False
bool checkChangeEvt();
	/* 80AD4610 */ // True False
//  bool False
bool evtEndProc();
	/* 80AD4618 */ // True False
//  void False
void afterMoved();
	/* 80AD461C */ // True False
//  bool False
bool chkXYItems();
	/* 80AD4624 */ // True False
void decTmr();
	/* 80AD463C */ // True False
//  void False
void drawGhost();
	/* 80AD4640 */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetFaceMotionAnm(int, int, f32, int);
	/* 80AD4648 */ // True False
//  daNpcT_faceMotionAnmData_c False
void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
	/* 80AD4678 */ // True False
//  daNpcT_motionAnmData_c False
void getMotionAnm(daNpcT_motionAnmData_c);
	/* 80AD46A8 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeAnm(int*, int*);
	/* 80AD46AC */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBck(int*, int*);
	/* 80AD46B0 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtp(int*, int*);
	/* 80AD46B4 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtk(int*, int*);
};

struct daNpcT_MatAnm_c {
	/* 80145764 */ // False False
void initialize();
};

struct daNpcT_JntAnm_c {
	/* 80146C98 */ // False False
void initialize();
	/* 80146CD8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
void setParam(fopAc_ac_c*, J3DModel*, cXyz*, int, int, int, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, cXyz*);
	/* 80147C38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void calcJntRad(f32, f32, f32);
	/* 80AD3FF4 */ // True False
~daNpcT_JntAnm_c();
	/* 80AD42C0 */ // True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
void setEyeAngleY(cXyz, s16, int, f32, s16);
	/* 80AD43DC */ // True False
//  cXyz False
//  f32 False
//  s16 False
void setEyeAngleX(cXyz, f32, s16);
};

struct daNpcT_DmgStagger_c {
	/* 80147DCC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
void setParam(fopAc_ac_c*, fopAc_ac_c*, s16);
	/* 80147E3C */ // False False
//  int False
void calc(int);
};

struct daNpcT_ActorMngr_c {
	/* 801456D4 */ // False False
void initialize();
	/* 801456E0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801456FC */ // False False
void remove();
	/* 80145708 */ // False False
void getActorP();
	/* 80AD3A60 */ // True False
~daNpcT_ActorMngr_c();
	/* 80AD3AA8 */ // True False
daNpcT_ActorMngr_c();
};

struct dSv_player_status_b_c {
	/* 80032BB0 */ // False False
//  int False
void isDarkClearLV(int) const;
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
};

struct dShopSystem_c {
	/* 80197338 */ // False False
void initShopSystem();
	/* 801974E4 */ // False False
~dShopSystem_c();
	/* 80198878 */ // False False
void drawCursor();
	/* 80198950 */ // False False
void itemRotate();
	/* 80198A2C */ // False False
//  cXyz* False
// 	 cXyz False
void itemZoom(cXyz*);
	/* 8019A0D0 */ // False False
//  bool False
void shop_init(bool);
	/* 8019A158 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
void shop_process(fopAc_ac_c*, dMsgFlow_c*);
	/* 8019A564 */ // False False
void deleteObject();
	/* 8019A5D0 */ // False False
void searchItemActor();
	/* 8019AB1C */ // False False
//  u8 False
void setSellItemMax(u8);
	/* 8019AB24 */ // False False
void checkShopOpen();
	/* 80AD491C */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
dShopSystem_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80AD4A34 */ // True False
//  bool False
//  int False
bool getResName2(int);
	/* 80AD4A3C */ // True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
bool beforeStartSeqAction(dMsgFlow_c*, int);
	/* 80AD4A44 */ // True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
bool beforeSelectSeqAction(dMsgFlow_c*, int);
};

struct dShopItemCtrl_c {
	/* 80196914 */ // False False
dShopItemCtrl_c();
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dComIfG_play_c {
	/* 8002C97C */ // False False
//  int False
void getLayerNo(int);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80AD41AC */ // True False
~dCcD_GStts();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80AD4208 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80AD413C */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct csXyz {
	/* 80AD3BB0 */ // True False
~csXyz();
	/* 80AD3FF0 */ // True False
csXyz();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80AD3AE4 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80AD3B2C */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80AD3A18 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
};

struct ShopCam_action_c {
	/* 80195C9C */ // False False
void shop_cam_action_init();
	/* 8019630C */ // False False
void Save();
	/* 8019635C */ // False False
void EventRecoverNotime();
	/* 801963B4 */ // False False
void Reset();
	/* 801964C8 */ // False False
void move();
};

struct J3DTexNoAnm {
	/* 80AD13F4 */ // True False
~J3DTexNoAnm();
	/* 80AD143C */ // True False
J3DTexNoAnm();
	/* 80AD39E8 */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 80AD1460 */ // True False
~J3DTexMtxAnm();
	/* 80AD149C */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 80AD134C */ // True False
~J3DTevKColorAnm();
	/* 80AD1388 */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 80AD13A0 */ // True False
~J3DTevColorAnm();
	/* 80AD13DC */ // True False
J3DTevColorAnm();
};

struct J3DShapeTable {
	/* 803258A0 */ // False False
void hide();
	/* 803258D8 */ // False False
void show();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 80AD14B4 */ // True False
~J3DMatColorAnm();
	/* 80AD14F0 */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80AD4278 */ // True False
~J3DFrameCtrl();
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpc_Seira2_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Seira2_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Seira2_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Seira2_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Seira2_IsDelete(void*);
// False True
//  int* False
// 	 int False
void cLib_calcTimer__template0(int*);
// False True
//  int False
//  int False
void cLib_getRndValue__template0(int, int);

// True False
extern "C" void __dt__14daNpc_Seira2_cFv();
// True False
extern "C" void create__14daNpc_Seira2_cFv();
// True False
extern "C" void CreateHeap__14daNpc_Seira2_cFv();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
extern "C" void Delete__14daNpc_Seira2_cFv();
// True False
extern "C" void Execute__14daNpc_Seira2_cFv();
// True False
extern "C" void Draw__14daNpc_Seira2_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__14daNpc_Seira2_cFP10fopAc_ac_c();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__14daNpc_Seira2_cFP8J3DJointi();
// True False
extern "C" void getType__14daNpc_Seira2_cFv();
// True False
extern "C" void getFlowNodeNo__14daNpc_Seira2_cFv();
// True False
extern "C" void getMaxNumItem__14daNpc_Seira2_cFv();
// True False
extern "C" void checkBottle__14daNpc_Seira2_cFv();
// True False
//  bool False
extern "C" bool isDelete__14daNpc_Seira2_cFv();
// True False
extern "C" void reset__14daNpc_Seira2_cFv();
// True False
//  int False
extern "C" void afterJntAnm__14daNpc_Seira2_cFi();
// True False
extern "C" void setParam__14daNpc_Seira2_cFv();
// True False
extern "C" void setAfterTalkMotion__14daNpc_Seira2_cFv();
// True False
extern "C" void srchActors__14daNpc_Seira2_cFv();
// True False
extern "C" void evtTalk__14daNpc_Seira2_cFv();
// True False
extern "C" void evtCutProc__14daNpc_Seira2_cFv();
// True False
extern "C" void action__14daNpc_Seira2_cFv();
// True False
extern "C" void beforeMove__14daNpc_Seira2_cFv();
// True False
extern "C" void setAttnPos__14daNpc_Seira2_cFv();
// True False
extern "C" void setCollision__14daNpc_Seira2_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__14daNpc_Seira2_cFv();
// True False
extern "C" void drawOtherMdl__14daNpc_Seira2_cFv();
// True False
//  int False
//  int False
//  f32 False
//  bool False
extern "C" void setBottleAnm__14daNpc_Seira2_cFiifb();
// True False
//  int False
//  int False
//  f32 False
//  int False
extern "C" void afterSetMotionAnm__14daNpc_Seira2_cFiifi();
// True False
extern "C" void selectAction__14daNpc_Seira2_cFv();
// True False
//  int (daNpc_Seira2_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira2_c False
extern "C" void chkAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i();
// True False
//  int (daNpc_Seira2_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira2_c False
extern "C" void setAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i();
// True False
extern "C" void checkStageIsSeira2sShop__14daNpc_Seira2_cFv();
// True False
//  void* False
// 	 void False
extern "C" void wait__14daNpc_Seira2_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void sit__14daNpc_Seira2_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void happy__14daNpc_Seira2_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void worry__14daNpc_Seira2_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void sad__14daNpc_Seira2_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void lookaround__14daNpc_Seira2_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void smile__14daNpc_Seira2_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__14daNpc_Seira2_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void shop__14daNpc_Seira2_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Seira2_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Seira2_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Seira2_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Seira2_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpc_Seira2_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __ct__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__15daNpcT_JntAnm_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
extern "C" void setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs();
// True False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs();
// True False
//  void False
//  int False
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
// True False
//  s32 False
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool checkChangeEvt__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool evtEndProc__8daNpcT_cFv();
// True False
//  void False
extern "C" void afterMoved__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool chkXYItems__8daNpcT_cFv();
// True False
extern "C" void decTmr__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawGhost__8daNpcT_cFv();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
// True False
//  daNpcT_faceMotionAnmData_c False
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
// True False
//  daNpcT_motionAnmData_c False
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeAnm__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBck__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtp__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtk__8daNpcT_cFPiPi();
// False True
//  int* False
// 	 int False
extern "C" void func_80AD46B8();
// False True
//  int False
//  int False
extern "C" void func_80AD46D4();
// False False
extern "C" void __sinit_d_a_npc_seira2_cpp();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__14daNpc_Seira2_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
//  s32 False
extern "C" s32 getEyeballMaterialNo__14daNpc_Seira2_cFv();
// True False
//  s32 False
extern "C" s32 getHeadJointNo__14daNpc_Seira2_cFv();
// True False
//  s32 False
extern "C" s32 getNeckJointNo__14daNpc_Seira2_cFv();
// True False
//  bool False
extern "C" bool getBackboneJointNo__14daNpc_Seira2_cFv();
// True False
//  int False
extern "C" void checkChangeJoint__14daNpc_Seira2_cFi();
// True False
//  int False
extern "C" void checkRemoveJoint__14daNpc_Seira2_cFi();
// True False
extern "C" void __dt__20daNpc_Seira2_Param_cFv();
// True False
extern "C" static void func_80AD490C();
// True False
extern "C" static void func_80AD4914();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__13dShopSystem_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
//  bool False
//  int False
extern "C" bool getResName2__13dShopSystem_cFi();
// True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
extern "C" bool beforeStartSeqAction__13dShopSystem_cFP10dMsgFlow_ci();
// True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
extern "C" bool beforeSelectSeqAction__13dShopSystem_cFP10dMsgFlow_ci();
extern "C" extern u32 const lit_3960;
extern "C" extern u32 const lit_3961;
extern "C" extern u32 const lit_3962;
extern "C" extern u32 const lit_3963;
extern "C" extern u32 const lit_4052;
extern "C" extern u32 const lit_4053;
extern "C" extern u32 const lit_4054;
extern "C" extern u32 const lit_4057;
extern "C" extern u32 const lit_4278;
extern "C" extern u32 const lit_4279;
extern "C" extern u32 const lit_4854;
extern "C" extern u32 const lit_4855;
extern "C" extern u32 const lit_4856;
extern "C" extern u32 const lit_4857;
extern "C" extern u32 const lit_4858;
extern "C" extern u8 const lit_4918[8];
extern "C" extern u8 const lit_4919[8];
extern "C" extern u8 const lit_4920[8];
extern "C" extern u32 const lit_5421;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtList[4];
extern "C" extern u8 l_faceMotionAnmData[392];
extern "C" extern u8 l_motionAnmData[700];
extern "C" extern u8 l_faceMotionSequenceData[224];
extern "C" extern u8 l_motionSequenceData[400];
extern "C" extern void* lit_4677[3];
extern "C" extern void* lit_4685[3];
extern "C" extern void* lit_4688[3];
extern "C" extern void* lit_4696[3];
extern "C" extern void* lit_4937[3];
extern "C" extern void* lit_4938[3];
extern "C" extern void* lit_4939[3];
extern "C" extern void* lit_5048[3];
extern "C" extern void* lit_5050[3];
extern "C" extern void* lit_5052[3];
extern "C" extern void* lit_5054[3];
extern "C" extern void* lit_5056[3];
extern "C" extern void* lit_5058[3];
extern "C" extern void* lit_5060[3];
extern "C" extern void* g_profile_NPC_SERA2[12];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__22daNpcT_MotionSeqMngr_c[3];
extern "C" extern void* __vt__15daNpcT_JntAnm_c[3];
extern "C" extern void* __vt__18daNpcT_ActorMngr_c[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__14daNpc_Seira2_c[52];
extern "C" extern void* __vt__20daNpc_Seira2_Param_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
void fopAcM_setEffectMtx(fopAc_ac_c const*, J3DModelData const*);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  int False
//  int False
void daNpcT_getDistTableIdx(int, int);
// False False
//  u32 False
void daNpcT_chkEvtBit(u32);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
extern "C" void fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData();
// False False
//  int False
extern "C" void getLayerNo__14dComIfG_play_cFi();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  int False
extern "C" void isDarkClearLV__21dSv_player_status_b_cCFi();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_MatAnm_cFv();
// False False
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void checkEndSequence__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_JntAnm_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void calcJntRad__15daNpcT_JntAnm_cFfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
extern "C" void setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs();
// False False
//  int False
extern "C" void calc__19daNpcT_DmgStagger_cFi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" void tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getTrnsfrmKeyAnmP__8daNpcT_cFPCci();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
// False False
extern "C" void execute__8daNpcT_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
// False False
extern "C" void setEnvTevColor__8daNpcT_cFv();
// False False
extern "C" void setRoomNo__8daNpcT_cFv();
// False False
extern "C" void ctrlBtk__8daNpcT_cFv();
// False False
extern "C" void setMtx__8daNpcT_cFv();
// False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
// False False
extern "C" void evtProc__8daNpcT_cFv();
// False False
extern "C" void setFootPos__8daNpcT_cFv();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
// False False
//  bool False
extern "C" bool checkCullDraw__8daNpcT_cFv();
// False False
extern "C" void twilight__8daNpcT_cFv();
// False False
extern "C" void evtOrder__8daNpcT_cFv();
// False False
extern "C" void clrParam__8daNpcT_cFv();
// False False
//  int False
//  bool False
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
// False False
//  int False
//  f32 False
//  int False
extern "C" void setMotionAnm__8daNpcT_cFifi();
// False False
//  s16 False
extern "C" void setAngle__8daNpcT_cFs();
// False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
extern "C" void hitChk__8daNpcT_cFP12dCcD_GObjInfUl();
// False False
//  int False
//  int False
//  int False
extern "C" void setDamage__8daNpcT_cFiii();
// False False
extern "C" void srchPlayerActor__8daNpcT_cFv();
// False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
extern "C" void step__8daNpcT_cFsiiii();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
// False False
//  s16 False
extern "C" void getNearestActorP__8daNpcT_cFs();
// False False
//  int False
//  int False
extern "C" void daNpcT_getDistTableIdx__Fii();
// False False
//  u32 False
extern "C" void daNpcT_chkEvtBit__FUl();
// False False
extern "C" void shop_cam_action_init__16ShopCam_action_cFv();
// False False
extern "C" void Save__16ShopCam_action_cFv();
// False False
extern "C" void EventRecoverNotime__16ShopCam_action_cFv();
// False False
extern "C" void Reset__16ShopCam_action_cFv();
// False False
extern "C" void move__16ShopCam_action_cFv();
// False False
extern "C" void __ct__15dShopItemCtrl_cFv();
// False False
extern "C" void initShopSystem__13dShopSystem_cFv();
// False False
extern "C" void __dt__13dShopSystem_cFv();
// False False
extern "C" void drawCursor__13dShopSystem_cFv();
// False False
extern "C" void itemRotate__13dShopSystem_cFv();
// False False
//  cXyz* False
// 	 cXyz False
extern "C" void itemZoom__13dShopSystem_cFP4cXyz();
// False False
//  bool False
extern "C" void shop_init__13dShopSystem_cFb();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
extern "C" void shop_process__13dShopSystem_cFP10fopAc_ac_cP10dMsgFlow_c();
// False False
extern "C" void deleteObject__13dShopSystem_cFv();
// False False
extern "C" void searchItemActor__13dShopSystem_cFv();
// False False
//  u8 False
extern "C" void setSellItemMax__13dShopSystem_cFUc();
// False False
extern "C" void checkShopOpen__13dShopSystem_cFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void hide__13J3DShapeTableFv();
// False False
extern "C" void show__13J3DShapeTableFv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcT_c[68];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__15daNpcT_MatAnm_c[4 + 1 /* padding */];
extern "C" extern void* __vt__13dShopSystem_c[52 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80AD4A60-80AD4AEC 008C+00 s=9 e=0 z=0  None .rodata    m__20daNpc_Seira2_Param_c                                    */
SECTION_RODATA static u8 const m__20daNpc_Seira2_Param_c[140] = {
	0x43, 0x52, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0xC2, 0x70, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AD4AEC-80AD4AF0 0004+00 s=0 e=0 z=0  None .rodata    @3960                                                        */
SECTION_RODATA u32 const lit_3960 = 0xC3960000;

/* 80AD4AF0-80AD4AF4 0004+00 s=0 e=0 z=0  None .rodata    @3961                                                        */
SECTION_RODATA u32 const lit_3961 = 0xC2480000;

/* 80AD4AF4-80AD4AF8 0004+00 s=0 e=0 z=0  None .rodata    @3962                                                        */
SECTION_RODATA u32 const lit_3962 = 0x43960000;

/* 80AD4AF8-80AD4AFC 0004+00 s=0 e=0 z=0  None .rodata    @3963                                                        */
SECTION_RODATA u32 const lit_3963 = 0x43E10000;

/* 80AD4AFC-80AD4B00 0004+00 s=0 e=0 z=0  None .rodata    @4052                                                        */
SECTION_RODATA u32 const lit_4052 = 0x3E800000;

/* 80AD4B00-80AD4B04 0004+00 s=0 e=0 z=0  None .rodata    @4053                                                        */
SECTION_RODATA u32 const lit_4053 = 0x41A00000;

/* 80AD4B04-80AD4B08 0004+00 s=0 e=0 z=0  None .rodata    @4054                                                        */
SECTION_RODATA u32 const lit_4054 = 0x40A00000;

/* 80AD4B08-80AD4B0C 0004+00 s=11 e=0 z=0  None .rodata    @4055                                                        */
SECTION_RODATA static u8 const lit_4055[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AD4B0C-80AD4B10 0004+00 s=1 e=0 z=0  None .rodata    @4056                                                        */
SECTION_RODATA static u32 const lit_4056 = 0x42C80000;

/* 80AD4B10-80AD4B14 0004+00 s=0 e=0 z=0  None .rodata    @4057                                                        */
SECTION_RODATA u32 const lit_4057 = 0x42700000;

/* 80AD4B14-80AD4B18 0004+00 s=0 e=0 z=0  None .rodata    @4278                                                        */
SECTION_RODATA u32 const lit_4278 = 0x47800000;

/* 80AD4B18-80AD4B1C 0004+00 s=0 e=0 z=0  None .rodata    @4279                                                        */
SECTION_RODATA u32 const lit_4279 = 0x3E4CCCCD;

/* 80AD4B1C-80AD4B20 0004+00 s=2 e=0 z=0  None .rodata    @4443                                                        */
SECTION_RODATA static u32 const lit_4443 = 0x3F800000;

/* 80AD4B20-80AD4B24 0004+00 s=7 e=0 z=0  None .rodata    @4661                                                        */
SECTION_RODATA static u32 const lit_4661 = 0xBF800000;

/* 80AD4B24-80AD4B28 0004+00 s=0 e=0 z=0  None .rodata    @4854                                                        */
SECTION_RODATA u32 const lit_4854 = 0xC1F00000;

/* 80AD4B28-80AD4B2C 0004+00 s=0 e=0 z=0  None .rodata    @4855                                                        */
SECTION_RODATA u32 const lit_4855 = 0x41200000;

/* 80AD4B2C-80AD4B30 0004+00 s=0 e=0 z=0  None .rodata    @4856                                                        */
SECTION_RODATA u32 const lit_4856 = 0x38C90FDB;

/* 80AD4B30-80AD4B34 0004+00 s=0 e=0 z=0  None .rodata    @4857                                                        */
SECTION_RODATA u32 const lit_4857 = 0x432A0000;

/* 80AD4B34-80AD4B38 0004+00 s=0 e=0 z=0  None .rodata    @4858                                                        */
SECTION_RODATA u32 const lit_4858 = 0x42A00000;

/* 80AD4B38-80AD4B40 0008+00 s=2 e=0 z=0  None .rodata    @4860                                                        */
SECTION_RODATA static u8 const lit_4860[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80AD4B40-80AD4B48 0008+00 s=0 e=0 z=0  None .rodata    @4918                                                        */
SECTION_RODATA u8 const lit_4918[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AD4B48-80AD4B50 0008+00 s=0 e=0 z=0  None .rodata    @4919                                                        */
SECTION_RODATA u8 const lit_4919[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AD4B50-80AD4B58 0008+00 s=0 e=0 z=0  None .rodata    @4920                                                        */
SECTION_RODATA u8 const lit_4920[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AD4B58-80AD4B5C 0004+00 s=0 e=0 z=0  None .rodata    @5421                                                        */
SECTION_RODATA u32 const lit_5421 = 0x43AF0000;

/* 80AD4B5C-80AD4B90 0034+00 s=5 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80AD4B5C[52] = {
	/* 80AD4B5C 0001 stringBase_80AD4B5C @stringBase0 */
	0x00,
	/* 80AD4B5D 0010 data_80AD4B5D None */
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x47, 0x45, 0x54, 0x49, 0x54, 0x45, 0x4D, 0x00,
	/* 80AD4B6D 0006 data_80AD4B6D None */
	0x53, 0x65, 0x69, 0x72, 0x61, 0x00,
	/* 80AD4B73 0008 data_80AD4B73 None */
	0x53, 0x65, 0x72, 0x61, 0x42, 0x74, 0x6C, 0x00,
	/* 80AD4B7B 0015 data_80AD4B7B None */
	0x53, 0x65, 0x72, 0x61, 0x00, 0x53, 0x65, 0x69, 0x72, 0x61, 0x32, 0x00, 0x52, 0x5F, 0x53, 0x50,
	0x30, 0x31, 0x00, 0x00, 0x00,
};

/* 80AD4B90-80AD4B9C 000C+00 s=4 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AD4B9C-80AD4BB0 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80AD4BB0-80AD4BC0 0010+00 s=1 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[16] = {
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02,
};

/* 80AD4BC0-80AD4BD0 0010+00 s=0 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA void* l_evtList[4] = {
	(void*)(((char*)&struct_80AD4B5C)+0x0) /* @stringBase0 */,
	(void*)NULL,
	(void*)(((char*)&struct_80AD4B5C)+0x1) /* None */,
	(void*)NULL,
};

/* 80AD4BD0-80AD4BE0 0010+00 s=3 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[4] = {
	(void*)(((char*)&struct_80AD4B5C)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80AD4B5C)+0x11) /* None */,
	(void*)(((char*)&struct_80AD4B5C)+0x17) /* None */,
	(void*)(((char*)&struct_80AD4B5C)+0x1F) /* None */,
};

/* 80AD4BE0-80AD4BE4 0004+00 s=1 e=0 z=0  None .data      l_loadResPtrn0                                               */
SECTION_DATA static u32 l_loadResPtrn0 = 0x030102FF;

/* 80AD4BE4-80AD4C00 001C+00 s=1 e=0 z=0  None .data      l_loadResPtrnList                                            */
SECTION_DATA static void* l_loadResPtrnList[7] = {
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
};

/* 80AD4C00-80AD4D88 0188+00 s=0 e=0 z=0  None .data      l_faceMotionAnmData                                          */
SECTION_DATA u8 l_faceMotionAnmData[392] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
};

/* 80AD4D88-80AD5044 02BC+00 s=0 e=0 z=0  None .data      l_motionAnmData                                              */
SECTION_DATA u8 l_motionAnmData[700] = {
	0x00, 0x00, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x25,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x23,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x14,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x3A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x34,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x16,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x13,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x21,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C,
};

/* 80AD5044-80AD5124 00E0+00 s=0 e=0 z=0  None .data      l_faceMotionSequenceData                                     */
SECTION_DATA u8 l_faceMotionSequenceData[224] = {
	0x00, 0x01, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x01, 0x00, 0x09, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0x00, 0x06, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x01, 0x00, 0x0B, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0C, 0xFF, 0x01, 0x00, 0x0D, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0D, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AD5124-80AD52B4 0190+00 s=0 e=0 z=0  None .data      l_motionSequenceData                                         */
SECTION_DATA u8 l_motionSequenceData[400] = {
	0x00, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x01, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0xFF, 0x01, 0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x01, 0x00, 0x0B, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0C, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x01, 0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x01, 0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0D, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0E, 0xFF, 0x01, 0x00, 0x09, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x10, 0xFF, 0x01, 0x00, 0x0F, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0F, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x11, 0xFF, 0x01, 0x00, 0x17, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x16, 0xFF, 0x01, 0x00, 0x17, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x13, 0xFF, 0x01, 0x00, 0x0F, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x17, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x14, 0xFF, 0x01, 0x00, 0x15, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x15, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x12, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x18, 0x04, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AD52B4-80AD52B8 0004+00 s=1 e=0 z=0  None .data      mCutNameList__14daNpc_Seira2_c                               */
SECTION_DATA static void* mCutNameList__14daNpc_Seira2_c = (void*)(((char*)&struct_80AD4B5C)+0x0) /* @stringBase0 */;

/* 80AD52B8-80AD52C4 000C+00 s=2 e=0 z=0  None .data      mCutList__14daNpc_Seira2_c                                   */
SECTION_DATA static u8 mCutList__14daNpc_Seira2_c[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AD52C4-80AD52D0 000C+00 s=0 e=0 z=0  None .data      @4677                                                        */
SECTION_DATA void* lit_4677[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)shop__14daNpc_Seira2_cFPv,
};

/* 80AD52D0-80AD52DC 000C+00 s=0 e=0 z=0  None .data      @4685                                                        */
SECTION_DATA void* lit_4685[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)shop__14daNpc_Seira2_cFPv,
};

/* 80AD52DC-80AD52E8 000C+00 s=0 e=0 z=0  None .data      @4688                                                        */
SECTION_DATA void* lit_4688[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__14daNpc_Seira2_cFPv,
};

/* 80AD52E8-80AD52F4 000C+00 s=0 e=0 z=0  None .data      @4696                                                        */
SECTION_DATA void* lit_4696[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__14daNpc_Seira2_cFPv,
};

/* 80AD52F4-80AD5300 000C+00 s=0 e=0 z=0  None .data      @4937                                                        */
SECTION_DATA void* lit_4937[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)sit__14daNpc_Seira2_cFPv,
};

/* 80AD5300-80AD530C 000C+00 s=0 e=0 z=0  None .data      @4938                                                        */
SECTION_DATA void* lit_4938[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)happy__14daNpc_Seira2_cFPv,
};

/* 80AD530C-80AD5318 000C+00 s=0 e=0 z=0  None .data      @4939                                                        */
SECTION_DATA void* lit_4939[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)worry__14daNpc_Seira2_cFPv,
};

/* 80AD5318-80AD53F0 00D8+00 s=1 e=0 z=0  None .data      bottlAnmData$5021                                            */
SECTION_DATA static u8 bottlAnmData[216] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x02,
};

/* 80AD53F0-80AD53FC 000C+00 s=0 e=0 z=0  None .data      @5048                                                        */
SECTION_DATA void* lit_5048[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)sit__14daNpc_Seira2_cFPv,
};

/* 80AD53FC-80AD5408 000C+00 s=0 e=0 z=0  None .data      @5050                                                        */
SECTION_DATA void* lit_5050[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)happy__14daNpc_Seira2_cFPv,
};

/* 80AD5408-80AD5414 000C+00 s=0 e=0 z=0  None .data      @5052                                                        */
SECTION_DATA void* lit_5052[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)worry__14daNpc_Seira2_cFPv,
};

/* 80AD5414-80AD5420 000C+00 s=0 e=0 z=0  None .data      @5054                                                        */
SECTION_DATA void* lit_5054[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)sad__14daNpc_Seira2_cFPv,
};

/* 80AD5420-80AD542C 000C+00 s=0 e=0 z=0  None .data      @5056                                                        */
SECTION_DATA void* lit_5056[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)smile__14daNpc_Seira2_cFPv,
};

/* 80AD542C-80AD5438 000C+00 s=0 e=0 z=0  None .data      @5058                                                        */
SECTION_DATA void* lit_5058[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)lookaround__14daNpc_Seira2_cFPv,
};

/* 80AD5438-80AD5444 000C+00 s=0 e=0 z=0  None .data      @5060                                                        */
SECTION_DATA void* lit_5060[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__14daNpc_Seira2_cFPv,
};

/* 80AD5444-80AD5464 0020+00 s=1 e=0 z=0  None .data      daNpc_Seira2_MethodTable                                     */
SECTION_DATA static void* daNpc_Seira2_MethodTable[8] = {
	(void*)daNpc_Seira2_Create__FPv,
	(void*)daNpc_Seira2_Delete__FPv,
	(void*)daNpc_Seira2_Execute__FPv,
	(void*)daNpc_Seira2_IsDelete__FPv,
	(void*)daNpc_Seira2_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80AD5464-80AD5494 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_SERA2                                          */
SECTION_DATA void* g_profile_NPC_SERA2[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02690000,
	(void*)&g_fpcLf_Method,
	(void*)0x000010F4,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x016A0000,
	(void*)&daNpc_Seira2_MethodTable,
	(void*)0x00044108,
	(void*)0x040E0000,
};

/* 80AD5494-80AD54A0 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80AD54A0-80AD54AC 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80AD54AC-80AD54D0 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AD4914,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AD490C,
};

/* 80AD54D0-80AD54DC 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80AD54DC-80AD54E8 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80AD54E8-80AD54F4 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80AD54F4-80AD5500 000C+00 s=2 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c                               */
SECTION_DATA void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80AD5500-80AD550C 000C+00 s=2 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c                                      */
SECTION_DATA void* __vt__15daNpcT_JntAnm_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80AD550C-80AD5518 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcT_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80AD5518-80AD5524 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80AD5524-80AD5530 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80AD5530-80AD5600 00D0+00 s=2 e=0 z=0  None .data      __vt__14daNpc_Seira2_c                                       */
SECTION_DATA void* __vt__14daNpc_Seira2_c[52] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14daNpc_Seira2_cFv,
	(void*)ctrlBtk__8daNpcT_cFv,
	(void*)ctrlSubFaceMotion__8daNpcT_cFi,
	(void*)checkChangeJoint__14daNpc_Seira2_cFi,
	(void*)checkRemoveJoint__14daNpc_Seira2_cFi,
	(void*)getBackboneJointNo__14daNpc_Seira2_cFv,
	(void*)getNeckJointNo__14daNpc_Seira2_cFv,
	(void*)getHeadJointNo__14daNpc_Seira2_cFv,
	(void*)getFootLJointNo__8daNpcT_cFv,
	(void*)getFootRJointNo__8daNpcT_cFv,
	(void*)getEyeballLMaterialNo__8daNpcT_cFv,
	(void*)getEyeballRMaterialNo__8daNpcT_cFv,
	(void*)getEyeballMaterialNo__14daNpc_Seira2_cFv,
	(void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
	(void*)afterJntAnm__14daNpc_Seira2_cFi,
	(void*)setParam__14daNpc_Seira2_cFv,
	(void*)checkChangeEvt__8daNpcT_cFv,
	(void*)evtTalk__14daNpc_Seira2_cFv,
	(void*)evtEndProc__8daNpcT_cFv,
	(void*)evtCutProc__14daNpc_Seira2_cFv,
	(void*)setAfterTalkMotion__14daNpc_Seira2_cFv,
	(void*)evtProc__8daNpcT_cFv,
	(void*)action__14daNpc_Seira2_cFv,
	(void*)beforeMove__14daNpc_Seira2_cFv,
	(void*)afterMoved__8daNpcT_cFv,
	(void*)setAttnPos__14daNpc_Seira2_cFv,
	(void*)setFootPos__8daNpcT_cFv,
	(void*)setCollision__14daNpc_Seira2_cFv,
	(void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
	(void*)checkCullDraw__8daNpcT_cFv,
	(void*)twilight__8daNpcT_cFv,
	(void*)chkXYItems__8daNpcT_cFv,
	(void*)evtOrder__8daNpcT_cFv,
	(void*)decTmr__8daNpcT_cFv,
	(void*)clrParam__8daNpcT_cFv,
	(void*)drawDbgInfo__14daNpc_Seira2_cFv,
	(void*)drawOtherMdl__14daNpc_Seira2_cFv,
	(void*)drawGhost__8daNpcT_cFv,
	(void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
	(void*)afterSetMotionAnm__14daNpc_Seira2_cFiifi,
	(void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
	(void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
	(void*)changeAnm__8daNpcT_cFPiPi,
	(void*)changeBck__8daNpcT_cFPiPi,
	(void*)changeBtp__8daNpcT_cFPiPi,
	(void*)changeBtk__8daNpcT_cFPiPi,
	(void*)setMotionAnm__8daNpcT_cFifi,
	(void*)getResName2__13dShopSystem_cFi,
	(void*)beforeStartSeqAction__13dShopSystem_cFP10dMsgFlow_ci,
	(void*)beforeSelectSeqAction__13dShopSystem_cFP10dMsgFlow_ci,
};

/* 80AD0C0C-80AD0D58 014C+00 s=1 e=0 z=0  None .text      __dt__14daNpc_Seira2_cFv                                     */
//	80AD0C2C: 80AD5530 (__vt__14daNpc_Seira2_c)
//	80AD0C30: 80AD5530 (__vt__14daNpc_Seira2_c)
//	80AD0C38: 8019A564 (deleteObject__13dShopSystem_cFv)
//	80AD0C48: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AD0C58: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AD0C68: 80AD4BE4 (l_loadResPtrnList)
//	80AD0C6C: 80AD4BE4 (l_loadResPtrnList)
//	80AD0C74: 80AD4BD0 (l_resNameList)
//	80AD0C78: 80AD4BD0 (l_resNameList)
//	80AD0C7C: 801484AC (deleteRes__8daNpcT_cFPCScPPCc)
//	80AD0C84: 80AD3A60 (__dt__18daNpcT_ActorMngr_cFv)
//	80AD0C88: 80AD3A60 (__dt__18daNpcT_ActorMngr_cFv)
//	80AD0C94: 80361CE8 (__destroy_arr)
//	80AD0CA0: 803AC050 (__vt__8dCcD_Cyl)
//	80AD0CA4: 803AC050 (__vt__8dCcD_Cyl)
//	80AD0CC4: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AD0CC8: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AD0CE0: 80AD5524 (__vt__8cM3dGCyl)
//	80AD0CE4: 80AD5524 (__vt__8cM3dGCyl)
//	80AD0CF4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AD0CF8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AD0D08: 80AD5518 (__vt__8cM3dGAab)
//	80AD0D0C: 80AD5518 (__vt__8cM3dGAab)
//	80AD0D1C: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80AD0D28: 801974E4 (__dt__13dShopSystem_cFv)
//	80AD0D38: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Seira2_c::~daNpc_Seira2_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD0D58-80AD0FF8 02A0+00 s=1 e=0 z=0  None .text      create__14daNpc_Seira2_cFv                                   */
//	80AD0D68: 803621DC (_savegpr_29)
//	80AD0D70: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD0D74: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD0D78: 80AD4B90 (cNullVec__6Z2Calc)
//	80AD0D7C: 80AD4B90 (cNullVec__6Z2Calc)
//	80AD0DB8: 80AD47B8 (__ct__14daNpc_Seira2_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AD0DCC: 80AD171C (getType__14daNpc_Seira2_cFv)
//	80AD0DD8: 80AD179C (getFlowNodeNo__14daNpc_Seira2_cFv)
//	80AD0DE4: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80AD0DF8: 80AD17C4 (checkBottle__14daNpc_Seira2_cFv)
//	80AD0E18: 801483F8 (loadRes__8daNpcT_cFPCScPPCc)
//	80AD0E2C: 80AD16A4 (createHeapCallBack__14daNpc_Seira2_cFP10fopAc_ac_c)
//	80AD0E30: 80AD16A4 (createHeapCallBack__14daNpc_Seira2_cFP10fopAc_ac_c)
//	80AD0E38: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80AD0E50: 80AD182C (isDelete__14daNpc_Seira2_cFv)
//	80AD0E90: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80AD0EA8: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80AD0ED4: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80AD0EDC: 804061C0 (g_dComIfG_gameInfo)
//	80AD0EE0: 804061C0 (g_dComIfG_gameInfo)
//	80AD0EE8: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80AD0F68: 80148C70 (setEnvTevColor__8daNpcT_cFv)
//	80AD0F70: 80148CCC (setRoomNo__8daNpcT_cFv)
//	80AD0F94: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80AD0F9C: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80AD0FA0: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80AD0FA4: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80AD0FB0: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80AD0FB4: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80AD0FC0: 80AD1834 (reset__14daNpc_Seira2_cFv)
//	80AD0FD0: 80AD153C (Execute__14daNpc_Seira2_cFv)
//	80AD0FE4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/create__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD0FF8-80AD134C 0354+00 s=1 e=0 z=0  None .text      CreateHeap__14daNpc_Seira2_cFv                               */
//	80AD1008: 803621D8 (_savegpr_28)
//	80AD101C: 80AD4BB0 (l_bmdData)
//	80AD1020: 80AD4BB0 (l_bmdData)
//	80AD1038: 80AD4BD0 (l_resNameList)
//	80AD103C: 80AD4BD0 (l_resNameList)
//	80AD1044: 804061C0 (g_dComIfG_gameInfo)
//	80AD1048: 804061C0 (g_dComIfG_gameInfo)
//	80AD105C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80AD1074: 802CEC4C (__nw__FUl)
//	80AD10B0: 80AD4B1C (lit_4443)
//	80AD10B4: 80AD4B1C (lit_4443)
//	80AD10C0: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80AD10F0: 80AD16C4 (ctrlJointCallBack__14daNpc_Seira2_cFP8J3DJointi)
//	80AD10F4: 80AD16C4 (ctrlJointCallBack__14daNpc_Seira2_cFP8J3DJointi)
//	80AD1128: 802CEC4C (__nw__FUl)
//	80AD1138: 803CEE60 (__vt__14J3DMaterialAnm)
//	80AD113C: 803CEE60 (__vt__14J3DMaterialAnm)
//	80AD1148: 80AD14F0 (__ct__14J3DMatColorAnmFv)
//	80AD114C: 80AD14F0 (__ct__14J3DMatColorAnmFv)
//	80AD1150: 80AD14B4 (__dt__14J3DMatColorAnmFv)
//	80AD1154: 80AD14B4 (__dt__14J3DMatColorAnmFv)
//	80AD1160: 80361D60 (__construct_array)
//	80AD1168: 80AD149C (__ct__12J3DTexMtxAnmFv)
//	80AD116C: 80AD149C (__ct__12J3DTexMtxAnmFv)
//	80AD1170: 80AD1460 (__dt__12J3DTexMtxAnmFv)
//	80AD1174: 80AD1460 (__dt__12J3DTexMtxAnmFv)
//	80AD1180: 80361D60 (__construct_array)
//	80AD1188: 80AD143C (__ct__11J3DTexNoAnmFv)
//	80AD118C: 80AD143C (__ct__11J3DTexNoAnmFv)
//	80AD1190: 80AD13F4 (__dt__11J3DTexNoAnmFv)
//	80AD1194: 80AD13F4 (__dt__11J3DTexNoAnmFv)
//	80AD11A0: 80361D60 (__construct_array)
//	80AD11A8: 80AD13DC (__ct__14J3DTevColorAnmFv)
//	80AD11AC: 80AD13DC (__ct__14J3DTevColorAnmFv)
//	80AD11B0: 80AD13A0 (__dt__14J3DTevColorAnmFv)
//	80AD11B4: 80AD13A0 (__dt__14J3DTevColorAnmFv)
//	80AD11C0: 80361D60 (__construct_array)
//	80AD11C8: 80AD1388 (__ct__15J3DTevKColorAnmFv)
//	80AD11CC: 80AD1388 (__ct__15J3DTevKColorAnmFv)
//	80AD11D0: 80AD134C (__dt__15J3DTevKColorAnmFv)
//	80AD11D4: 80AD134C (__dt__15J3DTevKColorAnmFv)
//	80AD11E0: 80361D60 (__construct_array)
//	80AD11E8: 8032C320 (initialize__14J3DMaterialAnmFv)
//	80AD11EC: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80AD11F0: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80AD11FC: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80AD1218: 80AD4BB0 (l_bmdData)
//	80AD121C: 80AD4BB0 (l_bmdData)
//	80AD122C: 80AD4BD0 (l_resNameList)
//	80AD1230: 80AD4BD0 (l_resNameList)
//	80AD1240: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80AD124C: 802CEC4C (__nw__FUl)
//	80AD1284: 80AD4B1C (lit_4443)
//	80AD1288: 80AD4B1C (lit_4443)
//	80AD1294: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80AD12CC: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	80AD12E0: 80AD4B08 (lit_4055)
//	80AD12E4: 80AD4B08 (lit_4055)
//	80AD1310: 80AD4B08 (lit_4055)
//	80AD1314: 80AD4B08 (lit_4055)
//	80AD131C: 80AD2630 (setBottleAnm__14daNpc_Seira2_cFiifb)
//	80AD1338: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/CreateHeap__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD134C-80AD1388 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	80AD136C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80AD1388-80AD13A0 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80AD13A0-80AD13DC 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	80AD13C0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80AD13DC-80AD13F4 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80AD13F4-80AD143C 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	80AD140C: 80AD5494 (__vt__11J3DTexNoAnm)
//	80AD1410: 80AD5494 (__vt__11J3DTexNoAnm)
//	80AD1420: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80AD143C-80AD1460 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	80AD143C: 80AD5494 (__vt__11J3DTexNoAnm)
//	80AD1440: 80AD5494 (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80AD1460-80AD149C 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	80AD1480: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80AD149C-80AD14B4 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80AD14B4-80AD14F0 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	80AD14D4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80AD14F0-80AD1508 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80AD1508-80AD153C 0034+00 s=1 e=0 z=0  None .text      Delete__14daNpc_Seira2_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/Delete__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD153C-80AD1610 00D4+00 s=2 e=0 z=0  None .text      Execute__14daNpc_Seira2_cFv                                  */
//	80AD155C: 8019AB24 (checkShopOpen__13dShopSystem_cFv)
//	80AD1578: 80197338 (initShopSystem__13dShopSystem_cFv)
//	80AD1580: 80AD17B8 (getMaxNumItem__14daNpc_Seira2_cFv)
//	80AD158C: 8019AB1C (setSellItemMax__13dShopSystem_cFUc)
//	80AD15A8: 803A2180 (__ptmf_null)
//	80AD15AC: 803A2180 (__ptmf_null)
//	80AD15D0: 8014852C (execute__8daNpcT_cFv)
//	80AD15E4: 8019A5D0 (searchItemActor__13dShopSystem_cFv)
//	80AD15F4: 801964C8 (move__16ShopCam_action_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/Execute__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD1610-80AD16A4 0094+00 s=1 e=0 z=0  None .text      Draw__14daNpc_Seira2_cFv                                     */
//	80AD1620: 803621DC (_savegpr_29)
//	80AD1674: 80AD4B0C (lit_4056)
//	80AD1678: 80AD4B0C (lit_4056)
//	80AD1688: 8014886C (draw__8daNpcT_cFiifP11_GXColorS10fiii)
//	80AD1690: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/Draw__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD16A4-80AD16C4 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__14daNpc_Seira2_cFP10fopAc_ac_c           */
//	80AD16B0: 80AD0FF8 (CreateHeap__14daNpc_Seira2_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpc_Seira2_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/createHeapCallBack__14daNpc_Seira2_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80AD16C4-80AD171C 0058+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__14daNpc_Seira2_cFP8J3DJointi              */
//	80AD16DC: 80434AC8 (j3dSys)
//	80AD16E0: 80434AC8 (j3dSys)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpc_Seira2_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/ctrlJointCallBack__14daNpc_Seira2_cFP8J3DJointi.s"
}
#pragma pop


/* 80AD171C-80AD179C 0080+00 s=1 e=0 z=0  None .text      getType__14daNpc_Seira2_cFv                                  */
//	80AD1728: 804061C0 (g_dComIfG_gameInfo)
//	80AD172C: 804061C0 (g_dComIfG_gameInfo)
//	80AD1738: 80032BB0 (isDarkClearLV__21dSv_player_status_b_cCFi)
//	80AD1750: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80AD1760: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80AD1778: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::getType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/getType__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD179C-80AD17B8 001C+00 s=1 e=0 z=0  None .text      getFlowNodeNo__14daNpc_Seira2_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::getFlowNodeNo() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/getFlowNodeNo__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD17B8-80AD17C4 000C+00 s=1 e=0 z=0  None .text      getMaxNumItem__14daNpc_Seira2_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::getMaxNumItem() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/getMaxNumItem__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD17C4-80AD182C 0068+00 s=1 e=0 z=0  None .text      checkBottle__14daNpc_Seira2_cFv                              */
//	80AD17DC: 804061C0 (g_dComIfG_gameInfo)
//	80AD17E0: 804061C0 (g_dComIfG_gameInfo)
//	80AD17EC: 80032BB0 (isDarkClearLV__21dSv_player_status_b_cCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::checkBottle() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/checkBottle__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD182C-80AD1834 0008+00 s=1 e=0 z=0  None .text      isDelete__14daNpc_Seira2_cFv                                 */
// True False
//  bool False
bool daNpc_Seira2_c::isDelete() {
	return false;
}


/* 80AD1834-80AD1968 0134+00 s=1 e=0 z=0  None .text      reset__14daNpc_Seira2_cFv                                    */
//	80AD184C: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD1850: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD1864: 80003458 (memset)
//	80AD186C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD1874: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD187C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AD1884: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AD188C: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AD18F8: 80267954 (cM_rndF__Ff)
//	80AD1928: 80003458 (memset)
//	80AD1938: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80AD1940: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AD194C: 8014AA18 (setAngle__8daNpcT_cFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/reset__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD1968-80AD19EC 0084+00 s=1 e=0 z=0  None .text      afterJntAnm__14daNpc_Seira2_cFi                              */
//	80AD1988: 803DD470 (now__14mDoMtx_stack_c)
//	80AD198C: 803DD470 (now__14mDoMtx_stack_c)
//	80AD1990: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80AD1994: 803DD470 (now__14mDoMtx_stack_c)
//	80AD1998: 803DD470 (now__14mDoMtx_stack_c)
//	80AD19A8: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80AD19BC: 803DD470 (now__14mDoMtx_stack_c)
//	80AD19C0: 803DD470 (now__14mDoMtx_stack_c)
//	80AD19C4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80AD19CC: 803DD470 (now__14mDoMtx_stack_c)
//	80AD19D0: 803DD470 (now__14mDoMtx_stack_c)
//	80AD19D4: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Seira2_c::afterJntAnm(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/afterJntAnm__14daNpc_Seira2_cFi.s"
}
#pragma pop


/* 80AD19EC-80AD1B38 014C+00 s=1 e=0 z=0  None .text      setParam__14daNpc_Seira2_cFv                                 */
//	80AD19FC: 803621D4 (_savegpr_27)
//	80AD1A20: 801963B4 (Reset__16ShopCam_action_cFv)
//	80AD1A2C: 8019635C (EventRecoverNotime__16ShopCam_action_cFv)
//	80AD1A3C: 80AD2748 (selectAction__14daNpc_Seira2_cFv)
//	80AD1A44: 80AD1BF8 (srchActors__14daNpc_Seira2_cFv)
//	80AD1A48: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD1A4C: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD1A64: 80AD2944 (checkStageIsSeira2sShop__14daNpc_Seira2_cFv)
//	80AD1A80: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80AD1A98: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80AD1AA8: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD1AAC: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD1AEC: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80AD1AF0: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD1AF4: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD1B24: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/setParam__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD1B38-80AD1BF8 00C0+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__14daNpc_Seira2_cFv                       */
//	80AD1B48: 803621DC (_savegpr_29)
//	80AD1BC8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD1BD4: 80AD4B20 (lit_4661)
//	80AD1BD8: 80AD4B20 (lit_4661)
//	80AD1BE4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::setAfterTalkMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/setAfterTalkMotion__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD1BF8-80AD1C60 0068+00 s=1 e=0 z=0  None .text      srchActors__14daNpc_Seira2_cFv                               */
//	80AD1C28: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80AD1C3C: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80AD1C48: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::srchActors() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/srchActors__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD1C60-80AD1E04 01A4+00 s=1 e=0 z=0  None .text      evtTalk__14daNpc_Seira2_cFv                                  */
//	80AD1C78: 80AD4B90 (cNullVec__6Z2Calc)
//	80AD1C7C: 80AD4B90 (cNullVec__6Z2Calc)
//	80AD1CA8: 80AD2870 (chkAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i)
//	80AD1CC0: 80362084 (__ptmf_scall)
//	80AD1CD0: 804061C0 (g_dComIfG_gameInfo)
//	80AD1CD4: 804061C0 (g_dComIfG_gameInfo)
//	80AD1CF8: 804061C0 (g_dComIfG_gameInfo)
//	80AD1CFC: 804061C0 (g_dComIfG_gameInfo)
//	80AD1D04: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80AD1D14: 80195C9C (shop_cam_action_init__16ShopCam_action_cFv)
//	80AD1D38: 80AD289C (setAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i)
//	80AD1D5C: 80AD2870 (chkAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i)
//	80AD1D74: 80362084 (__ptmf_scall)
//	80AD1D84: 804061C0 (g_dComIfG_gameInfo)
//	80AD1D88: 804061C0 (g_dComIfG_gameInfo)
//	80AD1DAC: 804061C0 (g_dComIfG_gameInfo)
//	80AD1DB0: 804061C0 (g_dComIfG_gameInfo)
//	80AD1DB8: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80AD1DE4: 80AD289C (setAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::evtTalk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/evtTalk__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD1E04-80AD1ED4 00D0+00 s=1 e=0 z=0  None .text      evtCutProc__14daNpc_Seira2_cFv                               */
//	80AD1E14: 803621DC (_savegpr_29)
//	80AD1E20: 804061C0 (g_dComIfG_gameInfo)
//	80AD1E24: 804061C0 (g_dComIfG_gameInfo)
//	80AD1E30: 80AD4B5C (struct_80AD4B5C)
//	80AD1E34: 80AD4B5C (struct_80AD4B5C)
//	80AD1E44: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80AD1E5C: 80AD52B4 (mCutNameList__14daNpc_Seira2_c)
//	80AD1E60: 80AD52B4 (mCutNameList__14daNpc_Seira2_c)
//	80AD1E70: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80AD1E84: 80AD52B8 (mCutList__14daNpc_Seira2_c)
//	80AD1E88: 80AD52B8 (mCutList__14daNpc_Seira2_c)
//	80AD1E90: 80362084 (__ptmf_scall)
//	80AD1EA8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80AD1EB4: 8019630C (Save__16ShopCam_action_cFv)
//	80AD1EC0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::evtCutProc() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/evtCutProc__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD1ED4-80AD2030 015C+00 s=1 e=0 z=0  None .text      action__14daNpc_Seira2_cFv                                   */
//	80AD1EFC: 8014AA40 (hitChk__8daNpcT_cFP12dCcD_GObjInfUl)
//	80AD1F14: 80147DCC (setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs)
//	80AD1F28: 8014AAD0 (setDamage__8daNpcT_cFiii)
//	80AD1F30: 80AD4B08 (lit_4055)
//	80AD1F34: 80AD4B08 (lit_4055)
//	80AD1F70: 80AD4B08 (lit_4055)
//	80AD1F74: 80AD4B08 (lit_4055)
//	80AD1FC0: 80362018 (__ptmf_test)
//	80AD1FD4: 80362048 (__ptmf_cmpr)
//	80AD1FEC: 80362084 (__ptmf_scall)
//	80AD2018: 80AD289C (setAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::action() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/action__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD2030-80AD20A8 0078+00 s=1 e=0 z=0  None .text      beforeMove__14daNpc_Seira2_cFv                               */
//	80AD2058: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::beforeMove() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/beforeMove__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD20A8-80AD23A8 0300+00 s=1 e=0 z=0  None .text      setAttnPos__14daNpc_Seira2_cFv                               */
//	80AD20B8: 803621D4 (_savegpr_27)
//	80AD20C0: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD20C4: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD20E8: 80147E3C (calc__19daNpcT_DmgStagger_cFi)
//	80AD218C: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	80AD21D0: 80147C38 (calcJntRad__15daNpcT_JntAnm_cFfff)
//	80AD21D8: 80149190 (setMtx__8daNpcT_cFv)
//	80AD21FC: 803DD470 (now__14mDoMtx_stack_c)
//	80AD2200: 803DD470 (now__14mDoMtx_stack_c)
//	80AD2204: 803464B0 (PSMTXCopy)
//	80AD2208: 803DD470 (now__14mDoMtx_stack_c)
//	80AD220C: 803DD470 (now__14mDoMtx_stack_c)
//	80AD2214: 803464B0 (PSMTXCopy)
//	80AD2228: 803464B0 (PSMTXCopy)
//	80AD2238: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	80AD2240: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	80AD2270: 803DD470 (now__14mDoMtx_stack_c)
//	80AD2274: 803DD470 (now__14mDoMtx_stack_c)
//	80AD2278: 803464B0 (PSMTXCopy)
//	80AD227C: 803DD470 (now__14mDoMtx_stack_c)
//	80AD2280: 803DD470 (now__14mDoMtx_stack_c)
//	80AD228C: 80346D6C (PSMTXMultVec)
//	80AD22B8: 80AD43DC (setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs)
//	80AD22EC: 80AD42C0 (setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs)
//	80AD22F4: 80AD2944 (checkStageIsSeira2sShop__14daNpc_Seira2_cFv)
//	80AD2344: 803DD470 (now__14mDoMtx_stack_c)
//	80AD2348: 803DD470 (now__14mDoMtx_stack_c)
//	80AD234C: 803464B0 (PSMTXCopy)
//	80AD2350: 803DD470 (now__14mDoMtx_stack_c)
//	80AD2354: 803DD470 (now__14mDoMtx_stack_c)
//	80AD2360: 80346D6C (PSMTXMultVec)
//	80AD2394: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/setAttnPos__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD23A8-80AD2550 01A8+00 s=1 e=0 z=0  None .text      setCollision__14daNpc_Seira2_cFv                             */
//	80AD23C8: 80AD4B90 (cNullVec__6Z2Calc)
//	80AD23CC: 80AD4B90 (cNullVec__6Z2Calc)
//	80AD23E8: 804061C0 (g_dComIfG_gameInfo)
//	80AD23EC: 804061C0 (g_dComIfG_gameInfo)
//	80AD2418: 80362048 (__ptmf_cmpr)
//	80AD242C: 80362048 (__ptmf_cmpr)
//	80AD2440: 80362048 (__ptmf_cmpr)
//	80AD24D8: 8026F1F8 (SetH__8cM3dGCylFf)
//	80AD24E4: 8026F200 (SetR__8cM3dGCylFf)
//	80AD24F0: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80AD24F4: 804061C0 (g_dComIfG_gameInfo)
//	80AD24F8: 804061C0 (g_dComIfG_gameInfo)
//	80AD2504: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::setCollision() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/setCollision__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD2550-80AD2558 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__14daNpc_Seira2_cFv                              */
// True False
//  bool False
bool daNpc_Seira2_c::drawDbgInfo() {
	return false;
}


/* 80AD2558-80AD2630 00D8+00 s=1 e=0 z=0  None .text      drawOtherMdl__14daNpc_Seira2_cFv                             */
//	80AD2578: 80198950 (itemRotate__13dShopSystem_cFv)
//	80AD257C: 80AD4B08 (lit_4055)
//	80AD2580: 80AD4B08 (lit_4055)
//	80AD2598: 80198A2C (itemZoom__13dShopSystem_cFP4cXyz)
//	80AD25A0: 80198878 (drawCursor__13dShopSystem_cFv)
//	80AD25B4: 8042CA54 (g_env_light)
//	80AD25B8: 8042CA54 (g_env_light)
//	80AD25C4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80AD25D8: 8001D42C (fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData)
//	80AD25F8: 803258A0 (hide__13J3DShapeTableFv)
//	80AD2610: 803258D8 (show__13J3DShapeTableFv)
//	80AD2618: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::drawOtherMdl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/drawOtherMdl__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD2630-80AD2710 00E0+00 s=2 e=0 z=0  None .text      setBottleAnm__14daNpc_Seira2_cFiifb                          */
//	80AD2648: 803621DC (_savegpr_29)
//	80AD2658: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD265C: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD268C: 80AD5318 (bottlAnmData)
//	80AD2690: 80AD5318 (bottlAnmData)
//	80AD26B0: 80AD4BD0 (l_resNameList)
//	80AD26B4: 80AD4BD0 (l_resNameList)
//	80AD26BC: 80148094 (getTrnsfrmKeyAnmP__8daNpcT_cFPCci)
//	80AD26E8: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80AD26FC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  bool False
asm void daNpc_Seira2_c::setBottleAnm(int param_0, int param_1, f32 param_2, bool param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/setBottleAnm__14daNpc_Seira2_cFiifb.s"
}
#pragma pop


/* 80AD2710-80AD2748 0038+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__14daNpc_Seira2_cFiifi                     */
//	80AD2728: 80AD4B08 (lit_4055)
//	80AD272C: 80AD4B08 (lit_4055)
//	80AD2734: 80AD2630 (setBottleAnm__14daNpc_Seira2_cFiifb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  int False
asm void daNpc_Seira2_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/afterSetMotionAnm__14daNpc_Seira2_cFiifi.s"
}
#pragma pop


/* 80AD2748-80AD2870 0128+00 s=1 e=0 z=0  None .text      selectAction__14daNpc_Seira2_cFv                             */
//	80AD2748: 80AD4B90 (cNullVec__6Z2Calc)
//	80AD274C: 80AD4B90 (cNullVec__6Z2Calc)
//	80AD2750: 803A2180 (__ptmf_null)
//	80AD2754: 803A2180 (__ptmf_null)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::selectAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/selectAction__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD2870-80AD289C 002C+00 s=1 e=0 z=0  None .text      chkAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i      */
//	80AD2880: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Seira2_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira2_c False
asm void daNpc_Seira2_c::chkAction(int (daNpc_Seira2_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/chkAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i.s"
}
#pragma pop


/* 80AD289C-80AD2944 00A8+00 s=2 e=0 z=0  None .text      setAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i      */
//	80AD28C4: 80362018 (__ptmf_test)
//	80AD28DC: 80362084 (__ptmf_scall)
//	80AD2908: 80362018 (__ptmf_test)
//	80AD2920: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Seira2_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira2_c False
asm void daNpc_Seira2_c::setAction(int (daNpc_Seira2_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/setAction__14daNpc_Seira2_cFM14daNpc_Seira2_cFPCvPvPv_i.s"
}
#pragma pop


/* 80AD2944-80AD29BC 0078+00 s=2 e=0 z=0  None .text      checkStageIsSeira2sShop__14daNpc_Seira2_cFv                  */
//	80AD2958: 80AD4B5C (struct_80AD4B5C)
//	80AD295C: 80AD4B5C (struct_80AD4B5C)
//	80AD2964: 804061C0 (g_dComIfG_gameInfo)
//	80AD2968: 804061C0 (g_dComIfG_gameInfo)
//	80AD2970: 80368994 (strcmp)
//	80AD297C: 804061C0 (g_dComIfG_gameInfo)
//	80AD2980: 804061C0 (g_dComIfG_gameInfo)
//	80AD2994: 8002C97C (getLayerNo__14dComIfG_play_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira2_c::checkStageIsSeira2sShop() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/checkStageIsSeira2sShop__14daNpc_Seira2_cFv.s"
}
#pragma pop


/* 80AD29BC-80AD2B68 01AC+00 s=1 e=0 z=0  None .text      wait__14daNpc_Seira2_cFPv                                    */
//	80AD2A08: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2A18: 80AD4B20 (lit_4661)
//	80AD2A1C: 80AD4B20 (lit_4661)
//	80AD2A38: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2A48: 80AD4B20 (lit_4661)
//	80AD2A4C: 80AD4B20 (lit_4661)
//	80AD2A6C: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80AD2A88: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD2A94: 80AD4B08 (lit_4055)
//	80AD2A98: 80AD4B08 (lit_4055)
//	80AD2AD8: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD2AE4: 80AD4B08 (lit_4055)
//	80AD2AE8: 80AD4B08 (lit_4055)
//	80AD2B38: 8014B648 (step__8daNpcT_cFsiiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira2_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/wait__14daNpc_Seira2_cFPv.s"
}
#pragma pop


/* 80AD2B68-80AD2D8C 0224+00 s=2 e=0 z=0  None .text      sit__14daNpc_Seira2_cFPv                                     */
//	80AD2BB4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2BC4: 80AD4B20 (lit_4661)
//	80AD2BC8: 80AD4B20 (lit_4661)
//	80AD2BE4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2BF4: 80AD4B20 (lit_4661)
//	80AD2BF8: 80AD4B20 (lit_4661)
//	80AD2C10: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD2C1C: 80AD4B08 (lit_4055)
//	80AD2C20: 80AD4B08 (lit_4055)
//	80AD2C40: 80AD46D4 (func_80AD46D4)
//	80AD2C94: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2CA4: 80AD4B20 (lit_4661)
//	80AD2CA8: 80AD4B20 (lit_4661)
//	80AD2CC4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2CD4: 80AD4B20 (lit_4661)
//	80AD2CD8: 80AD4B20 (lit_4661)
//	80AD2CE8: 80145A24 (checkEndSequence__22daNpcT_MotionSeqMngr_cFv)
//	80AD2CFC: 80AD46D4 (func_80AD46D4)
//	80AD2D18: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2D28: 80AD4B20 (lit_4661)
//	80AD2D2C: 80AD4B20 (lit_4661)
//	80AD2D48: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2D58: 80AD4B20 (lit_4661)
//	80AD2D5C: 80AD4B20 (lit_4661)
//	80AD2D6C: 80AD46B8 (func_80AD46B8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira2_c::sit(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/sit__14daNpc_Seira2_cFPv.s"
}
#pragma pop


/* 80AD2D8C-80AD2F14 0188+00 s=2 e=0 z=0  None .text      happy__14daNpc_Seira2_cFPv                                   */
//	80AD2DC8: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80AD2DE8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2DF8: 80AD4B20 (lit_4661)
//	80AD2DFC: 80AD4B20 (lit_4661)
//	80AD2E18: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2E28: 80AD4B20 (lit_4661)
//	80AD2E2C: 80AD4B20 (lit_4661)
//	80AD2E54: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2E64: 80AD4B20 (lit_4661)
//	80AD2E68: 80AD4B20 (lit_4661)
//	80AD2E84: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2E94: 80AD4B20 (lit_4661)
//	80AD2E98: 80AD4B20 (lit_4661)
//	80AD2EB0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD2EBC: 80AD4B08 (lit_4055)
//	80AD2EC0: 80AD4B08 (lit_4055)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira2_c::happy(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/happy__14daNpc_Seira2_cFPv.s"
}
#pragma pop


/* 80AD2F14-80AD31F0 02DC+00 s=2 e=0 z=0  None .text      worry__14daNpc_Seira2_cFPv                                   */
//	80AD2F50: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80AD2F70: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2F80: 80AD4B20 (lit_4661)
//	80AD2F84: 80AD4B20 (lit_4661)
//	80AD2FA0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2FB0: 80AD4B20 (lit_4661)
//	80AD2FB4: 80AD4B20 (lit_4661)
//	80AD2FD4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD2FE4: 80AD4B20 (lit_4661)
//	80AD2FE8: 80AD4B20 (lit_4661)
//	80AD3004: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3014: 80AD4B20 (lit_4661)
//	80AD3018: 80AD4B20 (lit_4661)
//	80AD3038: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD3044: 80AD4B08 (lit_4055)
//	80AD3048: 80AD4B08 (lit_4055)
//	80AD309C: 80AD46D4 (func_80AD46D4)
//	80AD30B8: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD30C4: 80AD4B08 (lit_4055)
//	80AD30C8: 80AD4B08 (lit_4055)
//	80AD30EC: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80AD30FC: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80AD3124: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD3130: 80AD4B08 (lit_4055)
//	80AD3134: 80AD4B08 (lit_4055)
//	80AD3160: 80018CE0 (fopAc_IsActor__FPv)
//	80AD3174: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80AD3178: 80AD4B08 (lit_4055)
//	80AD317C: 80AD4B08 (lit_4055)
//	80AD31A0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD31AC: 80AD4B08 (lit_4055)
//	80AD31B0: 80AD4B08 (lit_4055)
//	80AD31D0: 80AD46B8 (func_80AD46B8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira2_c::worry(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/worry__14daNpc_Seira2_cFPv.s"
}
#pragma pop


/* 80AD31F0-80AD3508 0318+00 s=1 e=0 z=0  None .text      sad__14daNpc_Seira2_cFPv                                     */
//	80AD3200: 803621DC (_savegpr_29)
//	80AD3208: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD320C: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD3234: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80AD3254: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3280: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD32A8: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD32D4: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80AD32F4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3320: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3348: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD3388: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD33B4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD33DC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD3424: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80AD3434: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80AD3444: 804061C0 (g_dComIfG_gameInfo)
//	80AD3448: 804061C0 (g_dComIfG_gameInfo)
//	80AD3450: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AD3474: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD34A0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD34C8: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD34F4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira2_c::sad(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/sad__14daNpc_Seira2_cFPv.s"
}
#pragma pop


/* 80AD3508-80AD3614 010C+00 s=1 e=0 z=0  None .text      lookaround__14daNpc_Seira2_cFPv                              */
//	80AD3554: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3564: 80AD4B20 (lit_4661)
//	80AD3568: 80AD4B20 (lit_4661)
//	80AD3584: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3594: 80AD4B20 (lit_4661)
//	80AD3598: 80AD4B20 (lit_4661)
//	80AD35B0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD35BC: 80AD4B08 (lit_4055)
//	80AD35C0: 80AD4B08 (lit_4055)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira2_c::lookaround(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/lookaround__14daNpc_Seira2_cFPv.s"
}
#pragma pop


/* 80AD3614-80AD3720 010C+00 s=1 e=0 z=0  None .text      smile__14daNpc_Seira2_cFPv                                   */
//	80AD3660: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3670: 80AD4B20 (lit_4661)
//	80AD3674: 80AD4B20 (lit_4661)
//	80AD3690: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD36A0: 80AD4B20 (lit_4661)
//	80AD36A4: 80AD4B20 (lit_4661)
//	80AD36BC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD36C8: 80AD4B08 (lit_4055)
//	80AD36CC: 80AD4B08 (lit_4055)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira2_c::smile(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/smile__14daNpc_Seira2_cFPv.s"
}
#pragma pop


/* 80AD3720-80AD3890 0170+00 s=2 e=0 z=0  None .text      talk__14daNpc_Seira2_cFPv                                    */
//	80AD3730: 803621DC (_savegpr_29)
//	80AD3770: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AD37A0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AD37AC: 80AD4B08 (lit_4055)
//	80AD37B0: 80AD4B08 (lit_4055)
//	80AD37D0: 804061C0 (g_dComIfG_gameInfo)
//	80AD37D4: 804061C0 (g_dComIfG_gameInfo)
//	80AD37DC: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AD37F8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AD3814: 8014B648 (step__8daNpcT_cFsiiii)
//	80AD383C: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80AD384C: 804061C0 (g_dComIfG_gameInfo)
//	80AD3850: 804061C0 (g_dComIfG_gameInfo)
//	80AD3858: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80AD385C: 804061C0 (g_dComIfG_gameInfo)
//	80AD3860: 804061C0 (g_dComIfG_gameInfo)
//	80AD3868: 80042468 (reset__14dEvt_control_cFv)
//	80AD387C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira2_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/talk__14daNpc_Seira2_cFPv.s"
}
#pragma pop


/* 80AD3890-80AD3960 00D0+00 s=2 e=0 z=0  None .text      shop__14daNpc_Seira2_cFPv                                    */
//	80AD38D4: 8019A0D0 (shop_init__13dShopSystem_cFb)
//	80AD38E0: 8019630C (Save__16ShopCam_action_cFv)
//	80AD38F0: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AD38FC: 8019A0D0 (shop_init__13dShopSystem_cFb)
//	80AD3914: 8019A158 (shop_process__13dShopSystem_cFP10fopAc_ac_cP10dMsgFlow_c)
//	80AD3928: 804061C0 (g_dComIfG_gameInfo)
//	80AD392C: 804061C0 (g_dComIfG_gameInfo)
//	80AD3934: 80042468 (reset__14dEvt_control_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira2_c::shop(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/shop__14daNpc_Seira2_cFPv.s"
}
#pragma pop


/* 80AD3960-80AD3980 0020+00 s=1 e=0 z=0  None .text      daNpc_Seira2_Create__FPv                                     */
//	80AD396C: 80AD0D58 (create__14daNpc_Seira2_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Seira2_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/daNpc_Seira2_Create__FPv.s"
}
#pragma pop


/* 80AD3980-80AD39A0 0020+00 s=1 e=0 z=0  None .text      daNpc_Seira2_Delete__FPv                                     */
//	80AD398C: 80AD1508 (Delete__14daNpc_Seira2_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Seira2_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/daNpc_Seira2_Delete__FPv.s"
}
#pragma pop


/* 80AD39A0-80AD39C0 0020+00 s=1 e=0 z=0  None .text      daNpc_Seira2_Execute__FPv                                    */
//	80AD39AC: 80AD153C (Execute__14daNpc_Seira2_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Seira2_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/daNpc_Seira2_Execute__FPv.s"
}
#pragma pop


/* 80AD39C0-80AD39E0 0020+00 s=1 e=0 z=0  None .text      daNpc_Seira2_Draw__FPv                                       */
//	80AD39CC: 80AD1610 (Draw__14daNpc_Seira2_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Seira2_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/daNpc_Seira2_Draw__FPv.s"
}
#pragma pop


/* 80AD39E0-80AD39E8 0008+00 s=1 e=0 z=0  None .text      daNpc_Seira2_IsDelete__FPv                                   */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Seira2_IsDelete(void* param_0) {
	return true;
}


/* 80AD39E8-80AD3A18 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	80AD3A04: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 80AD3A18-80AD3A60 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80AD3A30: 80AD54DC (__vt__10cCcD_GStts)
//	80AD3A34: 80AD54DC (__vt__10cCcD_GStts)
//	80AD3A44: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80AD3A60-80AD3AA8 0048+00 s=3 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv                                 */
//	80AD3A78: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD3A7C: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD3A8C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80AD3AA8-80AD3AE4 003C+00 s=1 e=0 z=0  None .text      __ct__18daNpcT_ActorMngr_cFv                                 */
//	80AD3ABC: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD3AC0: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD3AC8: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__ct__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80AD3AE4-80AD3B2C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80AD3AFC: 80AD5524 (__vt__8cM3dGCyl)
//	80AD3B00: 80AD5524 (__vt__8cM3dGCyl)
//	80AD3B10: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80AD3B2C-80AD3B74 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80AD3B44: 80AD5518 (__vt__8cM3dGAab)
//	80AD3B48: 80AD5518 (__vt__8cM3dGAab)
//	80AD3B58: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80AD3B74-80AD3BB0 003C+00 s=2 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80AD3B94: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__4cXyzFv.s"
}
#pragma pop


/* 80AD3BB0-80AD3BEC 003C+00 s=1 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80AD3BD0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__5csXyzFv.s"
}
#pragma pop


/* 80AD3BEC-80AD3FF0 0404+00 s=1 e=0 z=0  None .text      __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AD3BFC: 803621C0 (_savegpr_22)
//	80AD3C24: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD3C28: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD3C2C: 80018B64 (__ct__10fopAc_ac_cFv)
//	80AD3C30: 803B3A78 (__vt__8daNpcT_c)
//	80AD3C34: 803B3A78 (__vt__8daNpcT_c)
//	80AD3C50: 802C03C8 (__ct__10Z2CreatureFv)
//	80AD3C58: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD3C5C: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD3C6C: 803283FC (init__12J3DFrameCtrlFs)
//	80AD3C7C: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD3C80: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD3C90: 803283FC (init__12J3DFrameCtrlFs)
//	80AD3CA0: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD3CA4: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD3CB4: 803283FC (init__12J3DFrameCtrlFs)
//	80AD3CC4: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD3CC8: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD3CD8: 803283FC (init__12J3DFrameCtrlFs)
//	80AD3CE8: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD3CEC: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD3CFC: 803283FC (init__12J3DFrameCtrlFs)
//	80AD3D10: 800760A0 (__ct__9dBgS_AcchFv)
//	80AD3D14: 80AD54AC (__vt__12dBgS_ObjAcch)
//	80AD3D18: 80AD54AC (__vt__12dBgS_ObjAcch)
//	80AD3D34: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80AD3D38: 803C3728 (__vt__9cCcD_Stts)
//	80AD3D3C: 803C3728 (__vt__9cCcD_Stts)
//	80AD3D48: 80083760 (__ct__10dCcD_GSttsFv)
//	80AD3D4C: 803AC2E4 (__vt__9dCcD_Stts)
//	80AD3D50: 803AC2E4 (__vt__9dCcD_Stts)
//	80AD3D64: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80AD3D6C: 80267C1C (__ct__11cBgS_GndChkFv)
//	80AD3D74: 80249F00 (__ct__10dMsgFlow_cFv)
//	80AD3D78: 803C3728 (__vt__9cCcD_Stts)
//	80AD3D7C: 803C3728 (__vt__9cCcD_Stts)
//	80AD3D88: 80083760 (__ct__10dCcD_GSttsFv)
//	80AD3D8C: 803AC2E4 (__vt__9dCcD_Stts)
//	80AD3D90: 803AC2E4 (__vt__9dCcD_Stts)
//	80AD3DA0: 8007757C (__ct__11dBgS_GndChkFv)
//	80AD3DA8: 80077C68 (__ct__11dBgS_LinChkFv)
//	80AD3DAC: 80AD54F4 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AD3DB0: 80AD54F4 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AD3DC4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3DC8: 80AD54F4 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AD3DCC: 80AD54F4 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AD3DE0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3DE4: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD3DE8: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD3DF4: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AD3DF8: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD3DFC: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD3E08: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AD3E10: 80AD5500 (__vt__15daNpcT_JntAnm_c)
//	80AD3E14: 80AD5500 (__vt__15daNpcT_JntAnm_c)
//	80AD3E1C: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD3E20: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD3E2C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AD3E34: 80AD40F0 (__ct__4cXyzFv)
//	80AD3E38: 80AD40F0 (__ct__4cXyzFv)
//	80AD3E3C: 80AD3B74 (__dt__4cXyzFv)
//	80AD3E40: 80AD3B74 (__dt__4cXyzFv)
//	80AD3E4C: 80361D60 (__construct_array)
//	80AD3E54: 80AD40F0 (__ct__4cXyzFv)
//	80AD3E58: 80AD40F0 (__ct__4cXyzFv)
//	80AD3E5C: 80AD3B74 (__dt__4cXyzFv)
//	80AD3E60: 80AD3B74 (__dt__4cXyzFv)
//	80AD3E6C: 80361D60 (__construct_array)
//	80AD3E74: 80AD40F0 (__ct__4cXyzFv)
//	80AD3E78: 80AD40F0 (__ct__4cXyzFv)
//	80AD3E7C: 80AD3B74 (__dt__4cXyzFv)
//	80AD3E80: 80AD3B74 (__dt__4cXyzFv)
//	80AD3E8C: 80361D60 (__construct_array)
//	80AD3E94: 80AD40F0 (__ct__4cXyzFv)
//	80AD3E98: 80AD40F0 (__ct__4cXyzFv)
//	80AD3E9C: 80AD3B74 (__dt__4cXyzFv)
//	80AD3EA0: 80AD3B74 (__dt__4cXyzFv)
//	80AD3EAC: 80361D60 (__construct_array)
//	80AD3EB4: 80AD40F0 (__ct__4cXyzFv)
//	80AD3EB8: 80AD40F0 (__ct__4cXyzFv)
//	80AD3EBC: 80AD3B74 (__dt__4cXyzFv)
//	80AD3EC0: 80AD3B74 (__dt__4cXyzFv)
//	80AD3ECC: 80361D60 (__construct_array)
//	80AD3ED4: 80AD40F0 (__ct__4cXyzFv)
//	80AD3ED8: 80AD40F0 (__ct__4cXyzFv)
//	80AD3EDC: 80AD3B74 (__dt__4cXyzFv)
//	80AD3EE0: 80AD3B74 (__dt__4cXyzFv)
//	80AD3EEC: 80361D60 (__construct_array)
//	80AD3EF4: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AD3EFC: 80AD3FF0 (__ct__5csXyzFv)
//	80AD3F00: 80AD3FF0 (__ct__5csXyzFv)
//	80AD3F04: 80AD3BB0 (__dt__5csXyzFv)
//	80AD3F08: 80AD3BB0 (__dt__5csXyzFv)
//	80AD3F14: 80361D60 (__construct_array)
//	80AD3F28: 80003458 (memset)
//	80AD3F30: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3F38: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AD3F40: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AD3F48: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AD3F50: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AD3FB4: 80267954 (cM_rndF__Ff)
//	80AD3FDC: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/func_80AD3BEC.s"
}
#pragma pop


/* 80AD3FF0-80AD3FF4 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80AD3FF4-80AD40F0 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv                                    */
//	80AD4014: 80AD5500 (__vt__15daNpcT_JntAnm_c)
//	80AD4018: 80AD5500 (__vt__15daNpcT_JntAnm_c)
//	80AD4024: 80AD3B74 (__dt__4cXyzFv)
//	80AD4028: 80AD3B74 (__dt__4cXyzFv)
//	80AD4034: 80361CE8 (__destroy_arr)
//	80AD403C: 80AD3B74 (__dt__4cXyzFv)
//	80AD4040: 80AD3B74 (__dt__4cXyzFv)
//	80AD404C: 80361CE8 (__destroy_arr)
//	80AD4054: 80AD3B74 (__dt__4cXyzFv)
//	80AD4058: 80AD3B74 (__dt__4cXyzFv)
//	80AD4064: 80361CE8 (__destroy_arr)
//	80AD406C: 80AD3B74 (__dt__4cXyzFv)
//	80AD4070: 80AD3B74 (__dt__4cXyzFv)
//	80AD407C: 80361CE8 (__destroy_arr)
//	80AD4084: 80AD3B74 (__dt__4cXyzFv)
//	80AD4088: 80AD3B74 (__dt__4cXyzFv)
//	80AD4094: 80361CE8 (__destroy_arr)
//	80AD409C: 80AD3B74 (__dt__4cXyzFv)
//	80AD40A0: 80AD3B74 (__dt__4cXyzFv)
//	80AD40AC: 80361CE8 (__destroy_arr)
//	80AD40B8: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD40BC: 80AD550C (__vt__18daNpcT_ActorMngr_c)
//	80AD40D0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop


/* 80AD40F0-80AD40F4 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80AD40F4-80AD413C 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv                             */
//	80AD410C: 80AD54F4 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AD4110: 80AD54F4 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AD4120: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop


/* 80AD413C-80AD41AC 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80AD415C: 80AD54D0 (__vt__12dBgS_AcchCir)
//	80AD4160: 80AD54D0 (__vt__12dBgS_AcchCir)
//	80AD4170: 8026EF18 (__dt__8cM3dGCirFv)
//	80AD417C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AD418C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80AD41AC-80AD4208 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80AD41C4: 80AD54E8 (__vt__10dCcD_GStts)
//	80AD41C8: 80AD54E8 (__vt__10dCcD_GStts)
//	80AD41D4: 80AD54DC (__vt__10cCcD_GStts)
//	80AD41D8: 80AD54DC (__vt__10cCcD_GStts)
//	80AD41EC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80AD4208-80AD4278 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80AD4228: 80AD54AC (__vt__12dBgS_ObjAcch)
//	80AD422C: 80AD54AC (__vt__12dBgS_ObjAcch)
//	80AD4248: 80075F94 (__dt__9dBgS_AcchFv)
//	80AD4258: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80AD4278-80AD42C0 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80AD4290: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD4294: 80AD54A0 (__vt__12J3DFrameCtrl)
//	80AD42A4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80AD42C0-80AD43DC 011C+00 s=1 e=0 z=0  None .text      setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs                    */
//	80AD42D8: 803621D8 (_savegpr_28)
//	80AD430C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80AD4328: 80267674 (cM_atan2s__Fff)
//	80AD4354: 80AD4B1C (lit_4443)
//	80AD4358: 80AD4B1C (lit_4443)
//	80AD4364: 80AD4B38 (lit_4860)
//	80AD4368: 80AD4B38 (lit_4860)
//	80AD43C8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleY(cXyz param_0, s16 param_1, int param_2, f32 param_3, s16 param_4) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs.s"
}
#pragma pop


/* 80AD43DC-80AD45E4 0208+00 s=1 e=0 z=0  None .text      setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs                      */
//	80AD43F4: 803621DC (_savegpr_29)
//	80AD4408: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD440C: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD4428: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80AD4458: 80347138 (PSVECSquareMag)
//	80AD44C8: 80450AE0 (__float_nan)
//	80AD44CC: 80450AE0 (__float_nan)
//	80AD4538: 80450AE0 (__float_nan)
//	80AD453C: 80450AE0 (__float_nan)
//	80AD454C: 80267674 (cM_atan2s__Fff)
//	80AD45D0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleX(cXyz param_0, f32 param_1, s16 param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs.s"
}
#pragma pop


/* 80AD45E4-80AD45E8 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi                               */
// True False
//  void False
//  int False
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
	/* empty function */
}


/* 80AD45E8-80AD45F0 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootLJointNo() {
	return -1;
}


/* 80AD45F0-80AD45F8 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootRJointNo() {
	return -1;
}


/* 80AD45F8-80AD4600 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballLMaterialNo() {
	return false;
}


/* 80AD4600-80AD4608 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballRMaterialNo() {
	return false;
}


/* 80AD4608-80AD4610 0008+00 s=1 e=0 z=0  None .text      checkChangeEvt__8daNpcT_cFv                                  */
// True False
//  bool False
bool daNpcT_c::checkChangeEvt() {
	return false;
}


/* 80AD4610-80AD4618 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::evtEndProc() {
	return true;
}


/* 80AD4618-80AD461C 0004+00 s=1 e=0 z=0  None .text      afterMoved__8daNpcT_cFv                                      */
// True False
//  void False
void daNpcT_c::afterMoved() {
	/* empty function */
}


/* 80AD461C-80AD4624 0008+00 s=1 e=0 z=0  None .text      chkXYItems__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::chkXYItems() {
	return false;
}


/* 80AD4624-80AD463C 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcT_c::decTmr() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/decTmr__8daNpcT_cFv.s"
}
#pragma pop


/* 80AD463C-80AD4640 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv                                       */
// True False
//  void False
void daNpcT_c::drawGhost() {
	/* empty function */
}


/* 80AD4640-80AD4648 0008+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__8daNpcT_cFiifi                        */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 80AD4648-80AD4678 0030+00 s=1 e=0 z=0  None .text      getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c False
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop


/* 80AD4678-80AD46A8 0030+00 s=1 e=0 z=0  None .text      getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_motionAnmData_c False
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop


/* 80AD46A8-80AD46AC 0004+00 s=1 e=0 z=0  None .text      changeAnm__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AD46AC-80AD46B0 0004+00 s=1 e=0 z=0  None .text      changeBck__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBck(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AD46B0-80AD46B4 0004+00 s=1 e=0 z=0  None .text      changeBtp__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AD46B4-80AD46B8 0004+00 s=1 e=0 z=0  None .text      changeBtk__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AD46B8-80AD46D4 001C+00 s=2 e=0 z=0  None .text      cLib_calcTimer<i>__FPi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int* False
// 	 int False
asm void cLib_calcTimer__template0(int* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/func_80AD46B8.s"
}
#pragma pop


/* 80AD46D4-80AD4750 007C+00 s=2 e=0 z=0  None .text      cLib_getRndValue<i>__Fii                                     */
//	80AD46E8: 80AD4B38 (lit_4860)
//	80AD46EC: 80AD4B38 (lit_4860)
//	80AD4708: 80267954 (cM_rndF__Ff)
//	80AD470C: 80AD4B38 (lit_4860)
//	80AD4710: 80AD4B38 (lit_4860)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int False
//  int False
asm void cLib_getRndValue__template0(int param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/func_80AD46D4.s"
}
#pragma pop


/* ############################################################################################## */
/* 80AD5600-80AD560C 000C+00 s=2 e=0 z=0  None .data      __vt__20daNpc_Seira2_Param_c                                 */
SECTION_DATA void* __vt__20daNpc_Seira2_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__20daNpc_Seira2_Param_cFv,
};

/* 80AD5618-80AD5624 000C+00 s=1 e=0 z=0  None .bss       @3870                                                        */
static u8 lit_3870[12];

/* 80AD5624-80AD5628 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80AD4750-80AD47B8 0068+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_seira2_cpp                                   */
//	80AD475C: 80AD52B8 (mCutList__14daNpc_Seira2_c)
//	80AD4760: 80AD52B8 (mCutList__14daNpc_Seira2_c)
//	80AD4764: 803A2180 (__ptmf_null)
//	80AD4768: 803A2180 (__ptmf_null)
//	80AD4784: 80AD5600 (__vt__20daNpc_Seira2_Param_c)
//	80AD4788: 80AD5600 (__vt__20daNpc_Seira2_Param_c)
//	80AD478C: 80AD5624 (l_HIO)
//	80AD4790: 80AD5624 (l_HIO)
//	80AD4794: 80AD48C4 (__dt__20daNpc_Seira2_Param_cFv)
//	80AD4798: 80AD48C4 (__dt__20daNpc_Seira2_Param_cFv)
//	80AD479C: 80AD5618 (lit_3870)
//	80AD47A0: 80AD5618 (lit_3870)
//	80AD47A4: 80AD0B98 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_seira2_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__sinit_d_a_npc_seira2_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80AD4750 = (void*)__sinit_d_a_npc_seira2_cpp;
#pragma pop


/* 80AD47B8-80AD4884 00CC+00 s=1 e=0 z=0  None .text      __ct__14daNpc_Seira2_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AD47D8: 80AD491C (__ct__13dShopSystem_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AD47DC: 80AD5530 (__vt__14daNpc_Seira2_c)
//	80AD47E0: 80AD5530 (__vt__14daNpc_Seira2_c)
//	80AD47F0: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80AD47F4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AD47F8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AD4800: 80AD5518 (__vt__8cM3dGAab)
//	80AD4804: 80AD5518 (__vt__8cM3dGAab)
//	80AD480C: 80AD5524 (__vt__8cM3dGCyl)
//	80AD4810: 80AD5524 (__vt__8cM3dGCyl)
//	80AD4818: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AD481C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AD482C: 803AC050 (__vt__8dCcD_Cyl)
//	80AD4830: 803AC050 (__vt__8dCcD_Cyl)
//	80AD484C: 80AD3AA8 (__ct__18daNpcT_ActorMngr_cFv)
//	80AD4850: 80AD3AA8 (__ct__18daNpcT_ActorMngr_cFv)
//	80AD4854: 80AD3A60 (__dt__18daNpcT_ActorMngr_cFv)
//	80AD4858: 80AD3A60 (__dt__18daNpcT_ActorMngr_cFv)
//	80AD4864: 80361D60 (__construct_array)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpc_Seira2_c::daNpc_Seira2_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/func_80AD47B8.s"
}
#pragma pop


/* 80AD4884-80AD488C 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__14daNpc_Seira2_cFv                     */
// True False
//  s32 False
s32 daNpc_Seira2_c::getEyeballMaterialNo() {
	return 2;
}


/* 80AD488C-80AD4894 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__14daNpc_Seira2_cFv                           */
// True False
//  s32 False
s32 daNpc_Seira2_c::getHeadJointNo() {
	return 4;
}


/* 80AD4894-80AD489C 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__14daNpc_Seira2_cFv                           */
// True False
//  s32 False
s32 daNpc_Seira2_c::getNeckJointNo() {
	return 3;
}


/* 80AD489C-80AD48A4 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__14daNpc_Seira2_cFv                       */
// True False
//  bool False
bool daNpc_Seira2_c::getBackboneJointNo() {
	return true;
}


/* 80AD48A4-80AD48B4 0010+00 s=1 e=0 z=0  None .text      checkChangeJoint__14daNpc_Seira2_cFi                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Seira2_c::checkChangeJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/checkChangeJoint__14daNpc_Seira2_cFi.s"
}
#pragma pop


/* 80AD48B4-80AD48C4 0010+00 s=1 e=0 z=0  None .text      checkRemoveJoint__14daNpc_Seira2_cFi                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Seira2_c::checkRemoveJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/checkRemoveJoint__14daNpc_Seira2_cFi.s"
}
#pragma pop


/* 80AD48C4-80AD490C 0048+00 s=2 e=0 z=0  None .text      __dt__20daNpc_Seira2_Param_cFv                               */
//	80AD48DC: 80AD5600 (__vt__20daNpc_Seira2_Param_c)
//	80AD48E0: 80AD5600 (__vt__20daNpc_Seira2_Param_c)
//	80AD48F0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Seira2_Param_c::~daNpc_Seira2_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/__dt__20daNpc_Seira2_Param_cFv.s"
}
#pragma pop


/* 80AD490C-80AD4914 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80AD4910: 80AD4208 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AD490C() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/func_80AD490C.s"
}
#pragma pop


/* 80AD4914-80AD491C 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80AD4918: 80AD4208 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AD4914() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/func_80AD4914.s"
}
#pragma pop


/* 80AD491C-80AD4A34 0118+00 s=1 e=0 z=0  None .text      __ct__13dShopSystem_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AD4938: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD493C: 80AD4A60 (m__20daNpc_Seira2_Param_c)
//	80AD4944: 80AD3BEC (__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AD4948: 803BBA7C (__vt__13dShopSystem_c)
//	80AD494C: 803BBA7C (__vt__13dShopSystem_c)
//	80AD4958: 80196914 (__ct__15dShopItemCtrl_cFv)
//	80AD49F0: 803A2180 (__ptmf_null)
//	80AD49F4: 803A2180 (__ptmf_null)
//	80AD4A14: 80197338 (initShopSystem__13dShopSystem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm dShopSystem_c::dShopSystem_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira2/d_a_npc_seira2/func_80AD491C.s"
}
#pragma pop


/* 80AD4A34-80AD4A3C 0008+00 s=1 e=0 z=0  None .text      getResName2__13dShopSystem_cFi                               */
// True False
//  bool False
//  int False
bool dShopSystem_c::getResName2(int param_0) {
	return false;
}


/* 80AD4A3C-80AD4A44 0008+00 s=1 e=0 z=0  None .text      beforeStartSeqAction__13dShopSystem_cFP10dMsgFlow_ci         */
// True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
bool dShopSystem_c::beforeStartSeqAction(dMsgFlow_c* param_0, int param_1) {
	return true;
}


/* 80AD4A44-80AD4A4C 0008+00 s=1 e=0 z=0  None .text      beforeSelectSeqAction__13dShopSystem_cFP10dMsgFlow_ci        */
// True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
bool dShopSystem_c::beforeSelectSeqAction(dMsgFlow_c* param_0, int param_1) {
	return true;
}


