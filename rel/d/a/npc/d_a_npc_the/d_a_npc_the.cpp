// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_the
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_the/d_a_npc_the.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct J3DAnmTransform {
};

struct mDoExt_bckAnm {
	/* 8000D990 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
void changeBckOnly(J3DAnmTransform*);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80AFB6EC */ // True False
~cXyz();
	/* 80AFB728 */ // True False
cXyz();
};

struct daTag_EvtArea_c {
	/* 80AFBD3C */ // True False
//  cXyz False
void chkPointInArea(cXyz);
	/* 8048C94C */ // False False
//  cXyz False
//  cXyz False
void chkPointInArea(cXyz, cXyz);
};

struct J3DJoint {
};

struct J3DModel {
};

struct daNpcThe_c {
	/* 80AF76CC */ // True False
daNpcThe_c();
	/* 80AF78E0 */ // True False
~daNpcThe_c();
	/* 80AF7AE0 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 80AF7CB0 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80AF8114 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 80AF8160 */ // True False
//  int False
//  bool False
void setExpressionAnm(int, bool);
	/* 80AF841C */ // True False
//  int False
void setExpressionBtp(int);
	/* 80AF8564 */ // True False
//  int False
//  f32 False
void setMotionAnm(int, f32);
	/* 80AF8744 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80AF8B0C */ // True False
//  int False
//  f32 False
//  int False
void setMotion(int, f32, int);
	/* 80AF8B50 */ // True False
//  int False
//  f32 False
void setExpression(int, f32);
	/* 80AF8B7C */ // True False
//  void* False
// 	 void False
void waitTW(void*);
	/* 80AF8CC4 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80AF912C */ // True False
//  void* False
// 	 void False
void test(void*);
	/* 80AF923C */ // True False
//  bool False
//  int False
bool EvCut_TwResistance(int);
	/* 80AF9244 */ // True False
//  int False
void EvCut_Introduction(int);
	/* 80AF9358 */ // True False
void create();
	/* 80AF9748 */ // True False
void reset();
	/* 80AF99F4 */ // True False
void setParam();
	/* 80AF9CF0 */ // True False
void main();
	/* 80AF9F94 */ // True False
void playMotion();
	/* 80AFA338 */ // True False
void playExpression();
	/* 80AFA6CC */ // True False
void doEvent();
	/* 80AFADEC */ // True False
void ctrlBtk();
	/* 80AFAEC8 */ // True False
void setAttnPos();
	/* 80AFB1C4 */ // True False
void lookat();
	/* 80AFB488 */ // True False
//  bool False
bool drawDbgInfo();
	/* 80AFBD9C */ // True False
//  void False
void adjustShapeAngle();
};

struct daNpcThe_Param_c {
	/* 80AFBDA0 */ // True False
~daNpcThe_Param_c();
};

struct J3DAnmTextureSRTKey {
};

struct J3DAnmTransformKey {
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

struct _GXColorS10 {
};

struct daNpcF_c {
	struct daNpcF_anmPlayData {
	};

	/* 80152014 */ // False False
void execute();
	/* 801522AC */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  int False
void draw(int, int, f32, _GXColorS10*, int);
	/* 80152654 */ // False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void srchAttnActor1(void*, void*);
	/* 8015276C */ // False False
void setMtx();
	/* 801527FC */ // False False
void setMtx2();
	/* 801528C8 */ // False False
void initialize();
	/* 80152B2C */ // False False
//  char* False
// 	 char False
//  int False
void getTrnsfrmKeyAnmP(char*, int);
	/* 80152B68 */ // False False
//  char* False
// 	 char False
//  int False
void getTexPtrnAnmP(char*, int);
	/* 80152BA4 */ // False False
//  char* False
// 	 char False
//  int False
void getTexSRTKeyAnmP(char*, int);
	/* 80152C1C */ // False False
//  J3DAnmTransformKey* False
// 	 J3DAnmTransformKey False
//  f32 False
//  f32 False
//  int False
//  int False
//  int False
void setMcaMorfAnm(J3DAnmTransformKey*, f32, f32, int, int, int);
	/* 80152C80 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  f32 False
//  int False
//  int False
//  int False
//  bool False
void setBckAnm(J3DAnmTransform*, f32, int, int, int, bool);
	/* 80152CC4 */ // False False
//  J3DAnmTexPattern* False
// 	 J3DAnmTexPattern False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBtpAnm(J3DAnmTexPattern*, J3DModelData*, f32, int);
	/* 80152D04 */ // False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBtkAnm(J3DAnmTextureSRTKey*, J3DModelData*, f32, int);
	/* 80152D84 */ // False False
void setEnvTevColor();
	/* 80152DE0 */ // False False
void setRoomNo();
	/* 80153150 */ // False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
void playExpressionAnm(daNpcF_c::daNpcF_anmPlayData***);
	/* 80153264 */ // False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
void playMotionAnm(daNpcF_c::daNpcF_anmPlayData***);
	/* 8015337C */ // False False
//  int False
//  int* False
// 	 int False
//  f32 False
void setLookatMtx(int, int*, f32);
	/* 80153718 */ // False False
//  int& False
// 	 int False
//  int& False
// 	 int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void ctrlMsgAnm(int&, int&, fopAc_ac_c*, int);
	/* 8015387C */ // False False
//  int False
//  char* False
// 	 char False
//  u16 False
//  u16 False
//  u8 False
//  u16 False
void orderEvent(int, char*, u16, u16, u8, u16);
	/* 80153D1C */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 80153D84 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void talkProc(int*, int, fopAc_ac_c**);
	/* 801540A4 */ // False False
//  s16 False
//  int False
//  int False
//  int False
void step(s16, int, int, int);
	/* 80154278 */ // False False
//  int False
//  int False
void getDistTableIdx(int, int);
	/* 801542A0 */ // False False
//  int False
//  int False
void getEvtAreaTagP(int, int);
	/* 8015436C */ // False False
//  int False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
//  int False
//  int False
void getAttnActorP(int, void* (*)(void*, void*), f32, f32, f32, f32, s16, int, int);
	/* 801549E0 */ // False False
//  int False
//  s16 False
void chkFindPlayer2(int, s16);
	/* 80AFB72C */ // True False
~daNpcF_c();
	/* 80AFB978 */ // True False
daNpcF_c();
	/* 80AFBCEC */ // True False
//  void False
void setCollisions();
	/* 80AFBCF0 */ // True False
//  void False
void drawOtherMdls();
};

struct daNpcF_MatAnm_c {
	/* 80150738 */ // False False
void initialize();
};

struct csXyz {
	/* 80AFB6AC */ // True False
~csXyz();
	/* 80AFB6E8 */ // True False
csXyz();
};

struct daNpcF_Lookat_c {
	/* 80151038 */ // False False
void initialize();
	/* 801510B8 */ // False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
//  cXyz* False
// 	 cXyz False
void setParam(f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, s16, cXyz*);
	/* 80151350 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  csXyz** False
// 	 csXyz* False
// 		 csXyz False
//  int False
//  int False
//  int False
void calc(fopAc_ac_c*, f32 (* )[4], csXyz**, int, int, int);
	/* 80AFB5DC */ // True False
~daNpcF_Lookat_c();
};

struct daNpcF_ActorMngr_c {
	/* 801506B0 */ // False False
void initialize();
	/* 801506BC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801506E0 */ // False False
void remove();
	/* 801506EC */ // False False
void getActorP();
	/* 80AFB558 */ // True False
~daNpcF_ActorMngr_c();
	/* 80AFB5A0 */ // True False
daNpcF_ActorMngr_c();
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
	/* 8024A528 */ // False False
//  int* False
// 	 int False
void getEventId(int*);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 80042518 */ // False False
//  void* False
// 	 void False
void reset(void*);
	/* 800436EC */ // False False
//  unsigned int False
void setPtI_Id(unsigned int);
};

struct dEvent_manager_c {
	/* 80046800 */ // False False
//  char* False
// 	 char False
void setObjectArchive(char*);
	/* 80047758 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
void getEventIdx(fopAc_ac_c*, char const*, u8);
	/* 80047A78 */ // False False
//  s16 False
void endCheck(s16);
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 80047F5C */ // False False
//  int False
void getMyNowCutName(int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dComIfG_play_c {
	/* 8002C97C */ // False False
//  int False
void getLayerNo(int);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80AFBBD8 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80AFBC34 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80AFBB68 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80AF7850 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80AF7898 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80AFBCF4 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct JMath {
	template <typename A1, typename B1>
	struct TSinCosTable { };
	/* TSinCosTable<13, f32> */
	struct TSinCosTable__template0 {
		/* 80AFB490 */ // False True
//  s16 False
void sinShort(s16) const;
	};

};

struct J3DTexNoAnm {
	/* 80AF8000 */ // True False
~J3DTexNoAnm();
	/* 80AF8048 */ // True False
J3DTexNoAnm();
	/* 80AF99C4 */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 80AF806C */ // True False
~J3DTexMtxAnm();
	/* 80AF80A8 */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 80AF7F58 */ // True False
~J3DTevKColorAnm();
	/* 80AF7F94 */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 80AF7FAC */ // True False
~J3DTevColorAnm();
	/* 80AF7FE8 */ // True False
J3DTevColorAnm();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 80AF80C0 */ // True False
~J3DMatColorAnm();
	/* 80AF80FC */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80AFBCA4 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpcThe_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpcThe_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpcThe_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpcThe_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpcThe_IsDelete(void*);

// True False
extern "C" void __ct__10daNpcThe_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10daNpcThe_cFv();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__10daNpcThe_cFP8J3DJointP8J3DModel();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__10daNpcThe_cFP10fopAc_ac_c();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__10daNpcThe_cFP8J3DJointi();
// True False
//  int False
//  bool False
extern "C" void setExpressionAnm__10daNpcThe_cFib();
// True False
//  int False
extern "C" void setExpressionBtp__10daNpcThe_cFi();
// True False
//  int False
//  f32 False
extern "C" void setMotionAnm__10daNpcThe_cFif();
// True False
//  void* False
// 	 void False
extern "C" void wait__10daNpcThe_cFPv();
// True False
//  int False
//  f32 False
//  int False
extern "C" void setMotion__10daNpcThe_cFifi();
// True False
//  int False
//  f32 False
extern "C" void setExpression__10daNpcThe_cFif();
// True False
//  void* False
// 	 void False
extern "C" void waitTW__10daNpcThe_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__10daNpcThe_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void test__10daNpcThe_cFPv();
// True False
//  bool False
//  int False
extern "C" bool EvCut_TwResistance__10daNpcThe_cFi();
// True False
//  int False
extern "C" void EvCut_Introduction__10daNpcThe_cFi();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcThe_Create__FPv();
// True False
extern "C" void create__10daNpcThe_cFv();
// True False
extern "C" void reset__10daNpcThe_cFv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcThe_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcThe_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcThe_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpcThe_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void setParam__10daNpcThe_cFv();
// True False
extern "C" void main__10daNpcThe_cFv();
// True False
extern "C" void playMotion__10daNpcThe_cFv();
// True False
extern "C" void playExpression__10daNpcThe_cFv();
// True False
extern "C" void doEvent__10daNpcThe_cFv();
// True False
extern "C" void ctrlBtk__10daNpcThe_cFv();
// True False
extern "C" void setAttnPos__10daNpcThe_cFv();
// True False
extern "C" void lookat__10daNpcThe_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__10daNpcThe_cFv();
// False True
//  s16 False
extern "C" void func_80AFB490();
// False False
extern "C" void __sinit_d_a_npc_the_cpp();
// True False
extern "C" void __dt__18daNpcF_ActorMngr_cFv();
// True False
extern "C" void __ct__18daNpcF_ActorMngr_cFv();
// True False
extern "C" void __dt__15daNpcF_Lookat_cFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__8daNpcF_cFv();
// True False
extern "C" void __ct__8daNpcF_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  void False
extern "C" void setCollisions__8daNpcF_cFv();
// True False
//  void False
extern "C" void drawOtherMdls__8daNpcF_cFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
//  cXyz False
extern "C" void chkPointInArea__15daTag_EvtArea_cF4cXyz();
// True False
//  void False
extern "C" void adjustShapeAngle__10daNpcThe_cFv();
// True False
extern "C" void __dt__16daNpcThe_Param_cFv();
// True False
extern "C" static void func_80AFBDE8();
// True False
extern "C" static void func_80AFBDF0();
extern "C" extern u8 const lit_4507[12];
extern "C" extern u8 const lit_4508[8];
extern "C" extern u8 const lit_4509[12];
extern "C" extern u8 const lit_4510[8];
extern "C" extern u8 const lit_4511[12];
extern "C" extern u8 const lit_4512[8];
extern "C" extern u8 const lit_4513[12];
extern "C" extern u8 const lit_4514[8];
extern "C" extern u8 const lit_4515[12];
extern "C" extern u8 const lit_4516[8];
extern "C" extern u8 const lit_4517[12];
extern "C" extern u8 const lit_4518[8];
extern "C" extern u8 const lit_4519[12];
extern "C" extern u8 const lit_4520[8];
extern "C" extern u8 const lit_4521[12];
extern "C" extern u8 const lit_4522[8];
extern "C" extern u8 const lit_4523[12];
extern "C" extern u8 const lit_4524[8];
extern "C" extern u8 const lit_4525[12];
extern "C" extern u8 const lit_4526[8];
extern "C" extern u8 const lit_4527[12];
extern "C" extern u8 const lit_4528[8];
extern "C" extern u8 const lit_4529[12];
extern "C" extern u8 const lit_4530[8];
extern "C" extern u8 const lit_4531[12];
extern "C" extern u8 const lit_4532[8];
extern "C" extern u8 const lit_4533[12];
extern "C" extern u8 const lit_4534[4];
extern "C" extern u8 const lit_4535[56];
extern "C" extern u8 const lit_4539[12];
extern "C" extern u8 const lit_4540[4];
extern "C" extern u8 const lit_4541[12];
extern "C" extern u8 const lit_4542[12];
extern "C" extern u8 const lit_4543[8];
extern "C" extern u8 const lit_4544[12];
extern "C" extern u8 const lit_4545[12];
extern "C" extern u8 const lit_4546[8];
extern "C" extern u8 const lit_4547[12];
extern "C" extern u8 const lit_4548[4];
extern "C" extern u8 const lit_4549[12];
extern "C" extern u8 const lit_4550[12];
extern "C" extern u8 const lit_4551[8];
extern "C" extern u8 const lit_4552[12];
extern "C" extern u8 const lit_4553[4];
extern "C" extern u8 const lit_4554[12];
extern "C" extern u8 const lit_4555[12];
extern "C" extern u8 const lit_4556[8];
extern "C" extern u8 const lit_4557[12];
extern "C" extern u8 const lit_4558[4];
extern "C" extern u8 const lit_4559[12];
extern "C" extern u8 const lit_4560[4];
extern "C" extern u8 const lit_4561[12];
extern "C" extern u8 const lit_4562[12];
extern "C" extern u8 const lit_4563[8];
extern "C" extern u8 const lit_4564[12];
extern "C" extern u8 const lit_4565[12];
extern "C" extern u8 const lit_4566[8];
extern "C" extern u8 const lit_4567[44];
extern "C" extern u8 const lit_4676[12];
extern "C" extern u32 const lit_5398;
extern "C" extern u8 const lit_5399[8];
extern "C" extern u8 const lit_5400[8];
extern "C" extern u8 const lit_5401[8];
extern "C" extern u32 const lit_5449;
extern "C" extern u32 const lit_5450;
extern "C" extern u32 const lit_5451;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 l_evtGetParamList[16];
extern "C" extern void* l_evtNames[4];
extern "C" extern void* l_myName;
extern "C" extern void* mEvtCutNameList__10daNpcThe_c[4];
extern "C" extern void* lit_3810[3];
extern "C" extern void* lit_3811[3];
extern "C" extern void* lit_3812[3];
extern "C" extern u8 mEvtCutList__10daNpcThe_c[48];
extern "C" extern void* lit_4577[3];
extern "C" extern void* lit_4583[3];
extern "C" extern void* lit_4585[3];
extern "C" extern void* lit_4611[3];
extern "C" extern void* lit_4616[3];
extern "C" extern void* lit_4621[3];
extern "C" extern void* lit_4626[3];
extern "C" extern void* lit_4630[3];
extern "C" extern void* lit_4635[3];
extern "C" extern void* g_profile_NPC_THE[12];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__10daNpcThe_c[18];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__18daNpcF_ActorMngr_c[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__15daNpcF_Lookat_c[3];
extern "C" extern void* __vt__16daNpcThe_Param_c[3];

// 
// External References:
// 

// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u16 False
//  u16 False
void fopAcM_orderChangeEventId(fopAc_ac_c*, s16, u16, u16);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_createItemForPresentDemo(cXyz const*, int, u8, int, int, csXyz const*, cXyz const*);
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeForPName(void*, void*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  u32 False
void daNpcF_chkEvtBit(u32);
// False False
//  u32 False
void daNpcF_offTmpBit(u32);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_targetAngleX(cXyz const*, cXyz const*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
extern "C" void changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeForPName__FPvPv();
// False False
//  int False
extern "C" void getLayerNo__14dComIfG_play_cFi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  void* False
// 	 void False
extern "C" void reset__14dEvt_control_cFPv();
// False False
//  unsigned int False
extern "C" void setPtI_Id__14dEvt_control_cFUi();
// False False
//  char* False
// 	 char False
extern "C" void setObjectArchive__16dEvent_manager_cFPc();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
// False False
//  s16 False
extern "C" void endCheck__16dEvent_manager_cFs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
extern "C" void getMyNowCutName__16dEvent_manager_cFi();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcF_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcF_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcF_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcF_MatAnm_cFv();
// False False
extern "C" void initialize__15daNpcF_Lookat_cFv();
// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcF_Lookat_cFffffffffffffsP4cXyz();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  csXyz** False
// 	 csXyz* False
// 		 csXyz False
//  int False
//  int False
//  int False
extern "C" void calc__15daNpcF_Lookat_cFP10fopAc_ac_cPA4_fPP5csXyziii();
// False False
extern "C" void execute__8daNpcF_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  int False
extern "C" void draw__8daNpcF_cFiifP11_GXColorS10i();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void srchAttnActor1__8daNpcF_cFPvPv();
// False False
extern "C" void setMtx__8daNpcF_cFv();
// False False
extern "C" void setMtx2__8daNpcF_cFv();
// False False
extern "C" void initialize__8daNpcF_cFv();
// False False
//  char* False
// 	 char False
//  int False
extern "C" void getTrnsfrmKeyAnmP__8daNpcF_cFPci();
// False False
//  char* False
// 	 char False
//  int False
extern "C" void getTexPtrnAnmP__8daNpcF_cFPci();
// False False
//  char* False
// 	 char False
//  int False
extern "C" void getTexSRTKeyAnmP__8daNpcF_cFPci();
// False False
//  J3DAnmTransformKey* False
// 	 J3DAnmTransformKey False
//  f32 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void setMcaMorfAnm__8daNpcF_cFP18J3DAnmTransformKeyffiii();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  f32 False
//  int False
//  int False
//  int False
//  bool False
extern "C" void setBckAnm__8daNpcF_cFP15J3DAnmTransformfiiib();
// False False
//  J3DAnmTexPattern* False
// 	 J3DAnmTexPattern False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBtpAnm__8daNpcF_cFP16J3DAnmTexPatternP12J3DModelDatafi();
// False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBtkAnm__8daNpcF_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi();
// False False
extern "C" void setEnvTevColor__8daNpcF_cFv();
// False False
extern "C" void setRoomNo__8daNpcF_cFv();
// False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
extern "C" void playExpressionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData();
// False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
extern "C" void playMotionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData();
// False False
//  int False
//  int* False
// 	 int False
//  f32 False
extern "C" void setLookatMtx__8daNpcF_cFiPif();
// False False
//  int& False
// 	 int False
//  int& False
// 	 int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci();
// False False
//  int False
//  char* False
// 	 char False
//  u16 False
//  u16 False
//  u8 False
//  u16 False
extern "C" void orderEvent__8daNpcF_cFiPcUsUsUcUs();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcF_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void talkProc__8daNpcF_cFPiiPP10fopAc_ac_c();
// False False
//  s16 False
//  int False
//  int False
//  int False
extern "C" void step__8daNpcF_cFsiii();
// False False
//  int False
//  int False
extern "C" void getDistTableIdx__8daNpcF_cFii();
// False False
//  int False
//  int False
extern "C" void getEvtAreaTagP__8daNpcF_cFii();
// False False
//  int False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
//  int False
//  int False
extern "C" void getAttnActorP__8daNpcF_cFiPFPvPv_Pvffffsii();
// False False
//  int False
//  s16 False
extern "C" void chkFindPlayer2__8daNpcF_cFis();
// False False
//  u32 False
extern "C" void daNpcF_chkEvtBit__FUl();
// False False
//  u32 False
extern "C" void daNpcF_offTmpBit__FUl();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  int* False
// 	 int False
extern "C" void getEventId__10dMsgFlow_cFPi();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_targetAngleX__FPC4cXyzPC4cXyz();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcF_c[68];
extern "C" extern void* __vt__8daNpcF_c[18];
extern "C" extern void* __vt__15daNpcF_MatAnm_c[4 + 6 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
// False False
//  cXyz False
//  cXyz False
extern "C" void chkPointInArea__15daTag_EvtArea_cF4cXyz4cXyz();
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80AFBE0C-80AFBE78 006C+00 s=11 e=0 z=0  None .rodata    m__16daNpcThe_Param_c                                        */
SECTION_RODATA static u8 const m__16daNpcThe_Param_c[108] = {
	0x43, 0x5C, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xC1, 0xA0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0xA0, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xA0, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBE78-80AFBE84 000C+00 s=1 e=0 z=0  None .rodata    @4159                                                        */
SECTION_RODATA static u8 const lit_4159[12] = {
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04,
};

/* 80AFBE84-80AFBE88 0004+00 s=4 e=0 z=0  None .rodata    @4296                                                        */
SECTION_RODATA static u32 const lit_4296 = 0x3F800000;

/* 80AFBE88-80AFBE8C 0004+00 s=5 e=0 z=0  None .rodata    @4297                                                        */
SECTION_RODATA static u8 const lit_4297[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AFBE8C-80AFBE98 000C+00 s=0 e=0 z=0  None .rodata    @4507                                                        */
SECTION_RODATA u8 const lit_4507[12] = {
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFBE98-80AFBEA0 0008+00 s=0 e=0 z=0  None .rodata    @4508                                                        */
SECTION_RODATA u8 const lit_4508[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBEA0-80AFBEAC 000C+00 s=0 e=0 z=0  None .rodata    @4509                                                        */
SECTION_RODATA u8 const lit_4509[12] = {
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFBEAC-80AFBEB4 0008+00 s=0 e=0 z=0  None .rodata    @4510                                                        */
SECTION_RODATA u8 const lit_4510[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBEB4-80AFBEC0 000C+00 s=0 e=0 z=0  None .rodata    @4511                                                        */
SECTION_RODATA u8 const lit_4511[12] = {
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFBEC0-80AFBEC8 0008+00 s=0 e=0 z=0  None .rodata    @4512                                                        */
SECTION_RODATA u8 const lit_4512[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBEC8-80AFBED4 000C+00 s=0 e=0 z=0  None .rodata    @4513                                                        */
SECTION_RODATA u8 const lit_4513[12] = {
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFBED4-80AFBEDC 0008+00 s=0 e=0 z=0  None .rodata    @4514                                                        */
SECTION_RODATA u8 const lit_4514[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBEDC-80AFBEE8 000C+00 s=0 e=0 z=0  None .rodata    @4515                                                        */
SECTION_RODATA u8 const lit_4515[12] = {
	0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFBEE8-80AFBEF0 0008+00 s=0 e=0 z=0  None .rodata    @4516                                                        */
SECTION_RODATA u8 const lit_4516[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBEF0-80AFBEFC 000C+00 s=0 e=0 z=0  None .rodata    @4517                                                        */
SECTION_RODATA u8 const lit_4517[12] = {
	0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFBEFC-80AFBF04 0008+00 s=0 e=0 z=0  None .rodata    @4518                                                        */
SECTION_RODATA u8 const lit_4518[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF04-80AFBF10 000C+00 s=0 e=0 z=0  None .rodata    @4519                                                        */
SECTION_RODATA u8 const lit_4519[12] = {
	0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFBF10-80AFBF18 0008+00 s=0 e=0 z=0  None .rodata    @4520                                                        */
SECTION_RODATA u8 const lit_4520[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF18-80AFBF24 000C+00 s=0 e=0 z=0  None .rodata    @4521                                                        */
SECTION_RODATA u8 const lit_4521[12] = {
	0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF24-80AFBF2C 0008+00 s=0 e=0 z=0  None .rodata    @4522                                                        */
SECTION_RODATA u8 const lit_4522[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF2C-80AFBF38 000C+00 s=0 e=0 z=0  None .rodata    @4523                                                        */
SECTION_RODATA u8 const lit_4523[12] = {
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF38-80AFBF40 0008+00 s=0 e=0 z=0  None .rodata    @4524                                                        */
SECTION_RODATA u8 const lit_4524[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF40-80AFBF4C 000C+00 s=0 e=0 z=0  None .rodata    @4525                                                        */
SECTION_RODATA u8 const lit_4525[12] = {
	0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF4C-80AFBF54 0008+00 s=0 e=0 z=0  None .rodata    @4526                                                        */
SECTION_RODATA u8 const lit_4526[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF54-80AFBF60 000C+00 s=0 e=0 z=0  None .rodata    @4527                                                        */
SECTION_RODATA u8 const lit_4527[12] = {
	0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF60-80AFBF68 0008+00 s=0 e=0 z=0  None .rodata    @4528                                                        */
SECTION_RODATA u8 const lit_4528[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF68-80AFBF74 000C+00 s=0 e=0 z=0  None .rodata    @4529                                                        */
SECTION_RODATA u8 const lit_4529[12] = {
	0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF74-80AFBF7C 0008+00 s=0 e=0 z=0  None .rodata    @4530                                                        */
SECTION_RODATA u8 const lit_4530[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF7C-80AFBF88 000C+00 s=0 e=0 z=0  None .rodata    @4531                                                        */
SECTION_RODATA u8 const lit_4531[12] = {
	0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF88-80AFBF90 0008+00 s=0 e=0 z=0  None .rodata    @4532                                                        */
SECTION_RODATA u8 const lit_4532[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF90-80AFBF9C 000C+00 s=0 e=0 z=0  None .rodata    @4533                                                        */
SECTION_RODATA u8 const lit_4533[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBF9C-80AFBFA0 0004+00 s=0 e=0 z=0  None .rodata    @4534                                                        */
SECTION_RODATA u8 const lit_4534[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AFBFA0-80AFBFD8 0038+00 s=0 e=0 z=0  None .rodata    @4535                                                        */
SECTION_RODATA u8 const lit_4535[56] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBFD8-80AFBFE4 000C+00 s=0 e=0 z=0  None .rodata    @4539                                                        */
SECTION_RODATA u8 const lit_4539[12] = {
	0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFBFE4-80AFBFE8 0004+00 s=0 e=0 z=0  None .rodata    @4540                                                        */
SECTION_RODATA u8 const lit_4540[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AFBFE8-80AFBFF4 000C+00 s=0 e=0 z=0  None .rodata    @4541                                                        */
SECTION_RODATA u8 const lit_4541[12] = {
	0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFBFF4-80AFC000 000C+00 s=0 e=0 z=0  None .rodata    @4542                                                        */
SECTION_RODATA u8 const lit_4542[12] = {
	0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC000-80AFC008 0008+00 s=0 e=0 z=0  None .rodata    @4543                                                        */
SECTION_RODATA u8 const lit_4543[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC008-80AFC014 000C+00 s=0 e=0 z=0  None .rodata    @4544                                                        */
SECTION_RODATA u8 const lit_4544[12] = {
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFC014-80AFC020 000C+00 s=0 e=0 z=0  None .rodata    @4545                                                        */
SECTION_RODATA u8 const lit_4545[12] = {
	0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC020-80AFC028 0008+00 s=0 e=0 z=0  None .rodata    @4546                                                        */
SECTION_RODATA u8 const lit_4546[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC028-80AFC034 000C+00 s=0 e=0 z=0  None .rodata    @4547                                                        */
SECTION_RODATA u8 const lit_4547[12] = {
	0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC034-80AFC038 0004+00 s=0 e=0 z=0  None .rodata    @4548                                                        */
SECTION_RODATA u8 const lit_4548[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AFC038-80AFC044 000C+00 s=0 e=0 z=0  None .rodata    @4549                                                        */
SECTION_RODATA u8 const lit_4549[12] = {
	0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFC044-80AFC050 000C+00 s=0 e=0 z=0  None .rodata    @4550                                                        */
SECTION_RODATA u8 const lit_4550[12] = {
	0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC050-80AFC058 0008+00 s=0 e=0 z=0  None .rodata    @4551                                                        */
SECTION_RODATA u8 const lit_4551[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC058-80AFC064 000C+00 s=0 e=0 z=0  None .rodata    @4552                                                        */
SECTION_RODATA u8 const lit_4552[12] = {
	0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC064-80AFC068 0004+00 s=0 e=0 z=0  None .rodata    @4553                                                        */
SECTION_RODATA u8 const lit_4553[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AFC068-80AFC074 000C+00 s=0 e=0 z=0  None .rodata    @4554                                                        */
SECTION_RODATA u8 const lit_4554[12] = {
	0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFC074-80AFC080 000C+00 s=0 e=0 z=0  None .rodata    @4555                                                        */
SECTION_RODATA u8 const lit_4555[12] = {
	0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC080-80AFC088 0008+00 s=0 e=0 z=0  None .rodata    @4556                                                        */
SECTION_RODATA u8 const lit_4556[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC088-80AFC094 000C+00 s=0 e=0 z=0  None .rodata    @4557                                                        */
SECTION_RODATA u8 const lit_4557[12] = {
	0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC094-80AFC098 0004+00 s=0 e=0 z=0  None .rodata    @4558                                                        */
SECTION_RODATA u8 const lit_4558[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AFC098-80AFC0A4 000C+00 s=0 e=0 z=0  None .rodata    @4559                                                        */
SECTION_RODATA u8 const lit_4559[12] = {
	0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC0A4-80AFC0A8 0004+00 s=0 e=0 z=0  None .rodata    @4560                                                        */
SECTION_RODATA u8 const lit_4560[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AFC0A8-80AFC0B4 000C+00 s=0 e=0 z=0  None .rodata    @4561                                                        */
SECTION_RODATA u8 const lit_4561[12] = {
	0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFC0B4-80AFC0C0 000C+00 s=0 e=0 z=0  None .rodata    @4562                                                        */
SECTION_RODATA u8 const lit_4562[12] = {
	0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC0C0-80AFC0C8 0008+00 s=0 e=0 z=0  None .rodata    @4563                                                        */
SECTION_RODATA u8 const lit_4563[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC0C8-80AFC0D4 000C+00 s=0 e=0 z=0  None .rodata    @4564                                                        */
SECTION_RODATA u8 const lit_4564[12] = {
	0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80AFC0D4-80AFC0E0 000C+00 s=0 e=0 z=0  None .rodata    @4565                                                        */
SECTION_RODATA u8 const lit_4565[12] = {
	0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC0E0-80AFC0E8 0008+00 s=0 e=0 z=0  None .rodata    @4566                                                        */
SECTION_RODATA u8 const lit_4566[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC0E8-80AFC114 002C+00 s=0 e=0 z=0  None .rodata    @4567                                                        */
SECTION_RODATA u8 const lit_4567[44] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC114-80AFC120 000C+00 s=0 e=0 z=0  None .rodata    @4676                                                        */
SECTION_RODATA u8 const lit_4676[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC120-80AFC124 0004+00 s=4 e=0 z=0  None .rodata    @4781                                                        */
SECTION_RODATA static u32 const lit_4781 = 0xBF800000;

/* 80AFC124-80AFC12C 0008+00 s=1 e=0 z=0  None .rodata    @4840                                                        */
SECTION_RODATA static u8 const lit_4840[8] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80AFC12C-80AFC130 0004+00 s=1 e=0 z=0  None .rodata    @5324                                                        */
SECTION_RODATA static u32 const lit_5324 = 0x3E4CCCCD;

/* 80AFC130-80AFC134 0004+00 s=0 e=0 z=0  None .rodata    @5398                                                        */
SECTION_RODATA u32 const lit_5398 = 0xC1200000;

/* 80AFC134-80AFC13C 0008+00 s=0 e=0 z=0  None .rodata    @5399                                                        */
SECTION_RODATA u8 const lit_5399[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC13C-80AFC144 0008+00 s=0 e=0 z=0  None .rodata    @5400                                                        */
SECTION_RODATA u8 const lit_5400[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC144-80AFC14C 0008+00 s=0 e=0 z=0  None .rodata    @5401                                                        */
SECTION_RODATA u8 const lit_5401[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC14C-80AFC150 0004+00 s=0 e=0 z=0  None .rodata    @5449                                                        */
SECTION_RODATA u32 const lit_5449 = 0xC2A00000;

/* 80AFC150-80AFC154 0004+00 s=0 e=0 z=0  None .rodata    @5450                                                        */
SECTION_RODATA u32 const lit_5450 = 0x42A00000;

/* 80AFC154-80AFC158 0004+00 s=0 e=0 z=0  None .rodata    @5451                                                        */
SECTION_RODATA u32 const lit_5451 = 0x42200000;

/* 80AFC158-80AFC15C 0004+00 s=7 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80AFC158 = "The";
#pragma pop

/* 80AFC15C-80AFC18C 0030+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80AFC15C[48] = {
	/* 80AFC15C 0005 data_80AFC15C None */
	0x54, 0x68, 0x65, 0x31, 0x00,
	/* 80AFC161 0005 data_80AFC161 None */
	0x54, 0x68, 0x65, 0x32, 0x00,
	/* 80AFC166 0008 data_80AFC166 None */
	0x79, 0x65, 0x6C, 0x42, 0x5F, 0x54, 0x57, 0x00,
	/* 80AFC16E 000F data_80AFC16E None */
	0x54, 0x57, 0x5F, 0x52, 0x45, 0x53, 0x49, 0x53, 0x54, 0x41, 0x4E, 0x43, 0x45, 0x31, 0x00,
	/* 80AFC17D 000F data_80AFC17D None */
	0x54, 0x57, 0x5F, 0x52, 0x45, 0x53, 0x49, 0x53, 0x54, 0x41, 0x4E, 0x43, 0x45, 0x32, 0x00,
};

/* 80AFC18C-80AFC1D0 0044+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80AFC18C[68] = {
	/* 80AFC18C 0011 data_80AFC18C None */
	0x54, 0x48, 0x45, 0x5F, 0x49, 0x4E, 0x54, 0x52, 0x4F, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4F, 0x4E,
	0x00,
	/* 80AFC19D 0001 data_80AFC19D None */
	0x00,
	/* 80AFC19E 0032 data_80AFC19E None */
	0x54, 0x57, 0x5F, 0x52, 0x45, 0x53, 0x49, 0x53, 0x54, 0x41, 0x4E, 0x43, 0x45, 0x00, 0x52, 0x5F,
	0x53, 0x50, 0x31, 0x31, 0x36, 0x00, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x47, 0x45,
	0x54, 0x49, 0x54, 0x45, 0x4D, 0x00, 0x4E, 0x4F, 0x5F, 0x52, 0x45, 0x53, 0x50, 0x4F, 0x4E, 0x53,
	0x45, 0x00,
};

/* 80AFC1D0-80AFC1DC 000C+00 s=5 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC1DC-80AFC1F0 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80AFC1F0-80AFC200 0010+00 s=1 e=0 z=0  None .data      l_bmdGetParamList                                            */
SECTION_DATA static u8 l_bmdGetParamList[16] = {
	0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC200-80AFC2D8 00D8+00 s=2 e=0 z=0  None .data      l_bckGetParamList                                            */
SECTION_DATA static u8 l_bckGetParamList[216] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02,
};

/* 80AFC2D8-80AFC348 0070+00 s=1 e=0 z=0  None .data      l_btpGetParamList                                            */
SECTION_DATA static u8 l_btpGetParamList[112] = {
	0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC348-80AFC350 0008+00 s=1 e=0 z=0  None .data      l_btkGetParamList                                            */
SECTION_DATA static u8 l_btkGetParamList[8] = {
	0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC350-80AFC35C 000C+00 s=1 e=0 z=0  None .data      l_loadRes_THE0                                               */
SECTION_DATA static u8 l_loadRes_THE0[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80AFC35C-80AFC368 000C+00 s=1 e=0 z=0  None .data      l_loadRes_THE1                                               */
SECTION_DATA static u8 l_loadRes_THE1[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80AFC368-80AFC374 000C+00 s=1 e=0 z=0  None .data      l_loadRes_THE2                                               */
SECTION_DATA static u8 l_loadRes_THE2[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80AFC374-80AFC380 000C+00 s=2 e=0 z=0  None .data      l_loadRes_list                                               */
SECTION_DATA static void* l_loadRes_list[3] = {
	(void*)&l_loadRes_THE0,
	(void*)&l_loadRes_THE1,
	(void*)&l_loadRes_THE2,
};

/* 80AFC380-80AFC390 0010+00 s=7 e=0 z=0  None .data      l_resNames                                                   */
SECTION_DATA static void* l_resNames[4] = {
	(void*)&stringBase0,
	(void*)(((char*)&struct_80AFC15C)+0x0) /* None */,
	(void*)(((char*)&struct_80AFC15C)+0x5) /* None */,
	(void*)(((char*)&struct_80AFC15C)+0xA) /* None */,
};

/* 80AFC390-80AFC3A0 0010+00 s=0 e=0 z=0  None .data      l_evtGetParamList                                            */
SECTION_DATA u8 l_evtGetParamList[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC3A0-80AFC3B0 0010+00 s=0 e=0 z=0  None .data      l_evtNames                                                   */
SECTION_DATA void* l_evtNames[4] = {
	(void*)NULL,
	(void*)(((char*)&struct_80AFC15C)+0x12) /* None */,
	(void*)(((char*)&struct_80AFC15C)+0x21) /* None */,
	(void*)(((char*)&struct_80AFC18C)+0x0) /* None */,
};

/* 80AFC3B0-80AFC3B4 0004+00 s=0 e=0 z=0  None .data      l_myName                                                     */
SECTION_DATA void* l_myName = (void*)&stringBase0;

/* 80AFC3B4-80AFC3C4 0010+00 s=0 e=0 z=0  None .data      mEvtCutNameList__10daNpcThe_c                                */
SECTION_DATA void* mEvtCutNameList__10daNpcThe_c[4] = {
	(void*)(((char*)&struct_80AFC18C)+0x11) /* None */,
	(void*)(((char*)&struct_80AFC18C)+0x12) /* None */,
	(void*)(((char*)&struct_80AFC18C)+0x12) /* None */,
	(void*)(((char*)&struct_80AFC18C)+0x0) /* None */,
};

/* 80AFC3C4-80AFC3D0 000C+00 s=0 e=0 z=0  None .data      @3810                                                        */
SECTION_DATA void* lit_3810[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)EvCut_TwResistance__10daNpcThe_cFi,
};

/* 80AFC3D0-80AFC3DC 000C+00 s=0 e=0 z=0  None .data      @3811                                                        */
SECTION_DATA void* lit_3811[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)EvCut_TwResistance__10daNpcThe_cFi,
};

/* 80AFC3DC-80AFC3E8 000C+00 s=0 e=0 z=0  None .data      @3812                                                        */
SECTION_DATA void* lit_3812[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)EvCut_Introduction__10daNpcThe_cFi,
};

/* 80AFC3E8-80AFC418 0030+00 s=0 e=0 z=0  None .data      mEvtCutList__10daNpcThe_c                                    */
SECTION_DATA u8 mEvtCutList__10daNpcThe_c[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AFC418-80AFC424 000C+00 s=1 e=0 z=0  None .data      @4153                                                        */
SECTION_DATA static void* lit_4153[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)test__10daNpcThe_cFPv,
};

/* 80AFC424-80AFC45C 0038+00 s=1 e=0 z=0  None .data      @4407                                                        */
SECTION_DATA static void* lit_4407[14] = {
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x90),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0xAC),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0xC8),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0xE4),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x100),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x120),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x13C),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x158),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x174),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x194),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x1B4),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x1D4),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x1F4),
	(void*)(((char*)setExpressionAnm__10daNpcThe_cFib)+0x214),
};

/* 80AFC45C-80AFC494 0038+00 s=1 e=0 z=0  None .data      @4441                                                        */
SECTION_DATA static void* lit_4441[14] = {
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0x8C),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xD0),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xD0),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xD0),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0x94),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xD0),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xD0),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xD0),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0x9C),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xA4),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xAC),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xB4),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xBC),
	(void*)(((char*)setExpressionBtp__10daNpcThe_cFi)+0xC4),
};

/* 80AFC494-80AFC4C8 0034+00 s=1 e=0 z=0  None .data      @4482                                                        */
SECTION_DATA static void* lit_4482[13] = {
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0x9C),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xA4),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xAC),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xB4),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xBC),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xC4),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xCC),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xD4),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xDC),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xE4),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xEC),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xF4),
	(void*)(((char*)setMotionAnm__10daNpcThe_cFif)+0xFC),
};

/* 80AFC4C8-80AFC4D4 000C+00 s=0 e=0 z=0  None .data      @4577                                                        */
SECTION_DATA void* lit_4577[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)test__10daNpcThe_cFPv,
};

/* 80AFC4D4-80AFC4E0 000C+00 s=0 e=0 z=0  None .data      @4583                                                        */
SECTION_DATA void* lit_4583[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)waitTW__10daNpcThe_cFPv,
};

/* 80AFC4E0-80AFC4EC 000C+00 s=0 e=0 z=0  None .data      @4585                                                        */
SECTION_DATA void* lit_4585[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__10daNpcThe_cFPv,
};

/* 80AFC4EC-80AFC4F8 000C+00 s=0 e=0 z=0  None .data      @4611                                                        */
SECTION_DATA void* lit_4611[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__10daNpcThe_cFPv,
};

/* 80AFC4F8-80AFC504 000C+00 s=0 e=0 z=0  None .data      @4616                                                        */
SECTION_DATA void* lit_4616[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__10daNpcThe_cFPv,
};

/* 80AFC504-80AFC510 000C+00 s=0 e=0 z=0  None .data      @4621                                                        */
SECTION_DATA void* lit_4621[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__10daNpcThe_cFPv,
};

/* 80AFC510-80AFC51C 000C+00 s=0 e=0 z=0  None .data      @4626                                                        */
SECTION_DATA void* lit_4626[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__10daNpcThe_cFPv,
};

/* 80AFC51C-80AFC528 000C+00 s=0 e=0 z=0  None .data      @4630                                                        */
SECTION_DATA void* lit_4630[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__10daNpcThe_cFPv,
};

/* 80AFC528-80AFC534 000C+00 s=0 e=0 z=0  None .data      @4635                                                        */
SECTION_DATA void* lit_4635[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__10daNpcThe_cFPv,
};

/* 80AFC534-80AFC554 0020+00 s=1 e=0 z=0  None .data      daNpcThe_MethodTable                                         */
SECTION_DATA static void* daNpcThe_MethodTable[8] = {
	(void*)daNpcThe_Create__FPv,
	(void*)daNpcThe_Delete__FPv,
	(void*)daNpcThe_Execute__FPv,
	(void*)daNpcThe_IsDelete__FPv,
	(void*)daNpcThe_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80AFC554-80AFC584 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_THE                                            */
SECTION_DATA void* g_profile_NPC_THE[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02730000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000E20,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01740000,
	(void*)&daNpcThe_MethodTable,
	(void*)0x00044108,
	(void*)0x040E0000,
};

/* 80AFC584-80AFC590 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80AFC590-80AFC5D8 0048+00 s=2 e=0 z=0  None .data      __vt__10daNpcThe_c                                           */
SECTION_DATA void* __vt__10daNpcThe_c[18] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10daNpcThe_cFv,
	(void*)setParam__10daNpcThe_cFv,
	(void*)main__10daNpcThe_cFv,
	(void*)ctrlBtk__10daNpcThe_cFv,
	(void*)adjustShapeAngle__10daNpcThe_cFv,
	(void*)setMtx__8daNpcF_cFv,
	(void*)setMtx2__8daNpcF_cFv,
	(void*)setAttnPos__10daNpcThe_cFv,
	(void*)setCollisions__8daNpcF_cFv,
	(void*)setExpressionAnm__10daNpcThe_cFib,
	(void*)setExpressionBtp__10daNpcThe_cFi,
	(void*)setExpression__10daNpcThe_cFif,
	(void*)setMotionAnm__10daNpcThe_cFif,
	(void*)setMotion__10daNpcThe_cFifi,
	(void*)drawDbgInfo__10daNpcThe_cFv,
	(void*)drawOtherMdls__8daNpcF_cFv,
};

/* 80AFC5D8-80AFC5E4 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80AFC5E4-80AFC608 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AFBDF0,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AFBDE8,
};

/* 80AFC608-80AFC614 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80AFC614-80AFC620 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80AFC620-80AFC62C 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80AFC62C-80AFC638 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcF_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcF_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcF_ActorMngr_cFv,
};

/* 80AFC638-80AFC644 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80AFC644-80AFC650 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80AFC650-80AFC65C 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcF_Lookat_c                                      */
SECTION_DATA void* __vt__15daNpcF_Lookat_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcF_Lookat_cFv,
};

/* 80AF76CC-80AF7850 0184+00 s=1 e=0 z=0  None .text      __ct__10daNpcThe_cFv                                         */
//	80AF76E4: 80AFB978 (__ct__8daNpcF_cFv)
//	80AF76E8: 80AFC590 (__vt__10daNpcThe_c)
//	80AF76EC: 80AFC590 (__vt__10daNpcThe_c)
//	80AF76F8: 802C03C8 (__ct__10Z2CreatureFv)
//	80AF7700: 80AFC650 (__vt__15daNpcF_Lookat_c)
//	80AF7704: 80AFC650 (__vt__15daNpcF_Lookat_c)
//	80AF7710: 80AFB728 (__ct__4cXyzFv)
//	80AF7714: 80AFB728 (__ct__4cXyzFv)
//	80AF7718: 80AFB6EC (__dt__4cXyzFv)
//	80AF771C: 80AFB6EC (__dt__4cXyzFv)
//	80AF7728: 80361D60 (__construct_array)
//	80AF7730: 80AFB6E8 (__ct__5csXyzFv)
//	80AF7734: 80AFB6E8 (__ct__5csXyzFv)
//	80AF7738: 80AFB6AC (__dt__5csXyzFv)
//	80AF773C: 80AFB6AC (__dt__5csXyzFv)
//	80AF7748: 80361D60 (__construct_array)
//	80AF7750: 80AFB6E8 (__ct__5csXyzFv)
//	80AF7754: 80AFB6E8 (__ct__5csXyzFv)
//	80AF7758: 80AFB6AC (__dt__5csXyzFv)
//	80AF775C: 80AFB6AC (__dt__5csXyzFv)
//	80AF7768: 80361D60 (__construct_array)
//	80AF7770: 80AFB6E8 (__ct__5csXyzFv)
//	80AF7774: 80AFB6E8 (__ct__5csXyzFv)
//	80AF7778: 80AFB6AC (__dt__5csXyzFv)
//	80AF777C: 80AFB6AC (__dt__5csXyzFv)
//	80AF7788: 80361D60 (__construct_array)
//	80AF7790: 80AFB6E8 (__ct__5csXyzFv)
//	80AF7794: 80AFB6E8 (__ct__5csXyzFv)
//	80AF7798: 80AFB6AC (__dt__5csXyzFv)
//	80AF779C: 80AFB6AC (__dt__5csXyzFv)
//	80AF77A8: 80361D60 (__construct_array)
//	80AF77B0: 80151038 (initialize__15daNpcF_Lookat_cFv)
//	80AF77B8: 80AFB5A0 (__ct__18daNpcF_ActorMngr_cFv)
//	80AF77BC: 80AFB5A0 (__ct__18daNpcF_ActorMngr_cFv)
//	80AF77C0: 80AFB558 (__dt__18daNpcF_ActorMngr_cFv)
//	80AF77C4: 80AFB558 (__dt__18daNpcF_ActorMngr_cFv)
//	80AF77D0: 80361D60 (__construct_array)
//	80AF77DC: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80AF77E0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AF77E4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AF77EC: 80AFC644 (__vt__8cM3dGAab)
//	80AF77F0: 80AFC644 (__vt__8cM3dGAab)
//	80AF77F8: 80AFC638 (__vt__8cM3dGCyl)
//	80AF77FC: 80AFC638 (__vt__8cM3dGCyl)
//	80AF7804: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AF7808: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AF7818: 803AC050 (__vt__8dCcD_Cyl)
//	80AF781C: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcThe_c::daNpcThe_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__ct__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AF7850-80AF7898 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80AF7868: 80AFC638 (__vt__8cM3dGCyl)
//	80AF786C: 80AFC638 (__vt__8cM3dGCyl)
//	80AF787C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80AF7898-80AF78E0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80AF78B0: 80AFC644 (__vt__8cM3dGAab)
//	80AF78B4: 80AFC644 (__vt__8cM3dGAab)
//	80AF78C4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80AF78E0-80AF7AE0 0200+00 s=1 e=0 z=0  None .text      __dt__10daNpcThe_cFv                                         */
//	80AF78F0: 803621D0 (_savegpr_26)
//	80AF7900: 80AFC590 (__vt__10daNpcThe_c)
//	80AF7904: 80AFC590 (__vt__10daNpcThe_c)
//	80AF7914: 80AFC380 (l_resNames)
//	80AF7918: 80AFC380 (l_resNames)
//	80AF791C: 80AFC374 (l_loadRes_list)
//	80AF7920: 80AFC374 (l_loadRes_list)
//	80AF7938: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80AF796C: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AF7978: 803AC050 (__vt__8dCcD_Cyl)
//	80AF797C: 803AC050 (__vt__8dCcD_Cyl)
//	80AF799C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AF79A0: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AF79B8: 80AFC638 (__vt__8cM3dGCyl)
//	80AF79BC: 80AFC638 (__vt__8cM3dGCyl)
//	80AF79CC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AF79D0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AF79E0: 80AFC644 (__vt__8cM3dGAab)
//	80AF79E4: 80AFC644 (__vt__8cM3dGAab)
//	80AF79F4: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80AF79FC: 80AFB558 (__dt__18daNpcF_ActorMngr_cFv)
//	80AF7A00: 80AFB558 (__dt__18daNpcF_ActorMngr_cFv)
//	80AF7A0C: 80361CE8 (__destroy_arr)
//	80AF7A18: 80AFC650 (__vt__15daNpcF_Lookat_c)
//	80AF7A1C: 80AFC650 (__vt__15daNpcF_Lookat_c)
//	80AF7A28: 80AFB6AC (__dt__5csXyzFv)
//	80AF7A2C: 80AFB6AC (__dt__5csXyzFv)
//	80AF7A38: 80361CE8 (__destroy_arr)
//	80AF7A40: 80AFB6AC (__dt__5csXyzFv)
//	80AF7A44: 80AFB6AC (__dt__5csXyzFv)
//	80AF7A50: 80361CE8 (__destroy_arr)
//	80AF7A58: 80AFB6AC (__dt__5csXyzFv)
//	80AF7A5C: 80AFB6AC (__dt__5csXyzFv)
//	80AF7A68: 80361CE8 (__destroy_arr)
//	80AF7A70: 80AFB6AC (__dt__5csXyzFv)
//	80AF7A74: 80AFB6AC (__dt__5csXyzFv)
//	80AF7A80: 80361CE8 (__destroy_arr)
//	80AF7A88: 80AFB6EC (__dt__4cXyzFv)
//	80AF7A8C: 80AFB6EC (__dt__4cXyzFv)
//	80AF7A98: 80361CE8 (__destroy_arr)
//	80AF7AA4: 802C0420 (__dt__10Z2CreatureFv)
//	80AF7AB0: 80AFB72C (__dt__8daNpcF_cFv)
//	80AF7AC0: 802CED3C (__dl__FPv)
//	80AF7ACC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcThe_c::~daNpcThe_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AF7AE0-80AF7CB0 01D0+00 s=1 e=0 z=0  None .text      ctrlJoint__10daNpcThe_cFP8J3DJointP8J3DModel                 */
//	80AF7AF0: 803621D8 (_savegpr_28)
//	80AF7B04: 80AFBE78 (lit_4159)
//	80AF7B08: 80AFBE78 (lit_4159)
//	80AF7B40: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7B44: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7B48: 803464B0 (PSMTXCopy)
//	80AF7B4C: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7B50: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7B84: 803464B0 (PSMTXCopy)
//	80AF7BB4: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7BB8: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7BBC: 803464B0 (PSMTXCopy)
//	80AF7BE8: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7BEC: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7BF0: 803464B0 (PSMTXCopy)
//	80AF7C20: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF7C24: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF7C2C: 8015337C (setLookatMtx__8daNpcF_cFiPif)
//	80AF7C30: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7C34: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7C44: 803464B0 (PSMTXCopy)
//	80AF7C48: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7C4C: 803DD470 (now__14mDoMtx_stack_c)
//	80AF7C50: 80434BE4 (mCurrentMtx__6J3DSys)
//	80AF7C54: 80434BE4 (mCurrentMtx__6J3DSys)
//	80AF7C58: 803464B0 (PSMTXCopy)
//	80AF7C88: 8000D990 (changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform)
//	80AF7C9C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
asm void daNpcThe_c::ctrlJoint(J3DJoint* param_0, J3DModel* param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/ctrlJoint__10daNpcThe_cFP8J3DJointP8J3DModel.s"
}
#pragma pop


/* 80AF7CB0-80AF7F58 02A8+00 s=1 e=0 z=0  None .text      createHeapCallBack__10daNpcThe_cFP10fopAc_ac_c               */
//	80AF7CC0: 803621DC (_savegpr_29)
//	80AF7CCC: 801AC57C (dKy_darkworld_check__Fv)
//	80AF7CE4: 80AFC1F0 (l_bmdGetParamList)
//	80AF7CE8: 80AFC1F0 (l_bmdGetParamList)
//	80AF7D04: 80AFC380 (l_resNames)
//	80AF7D08: 80AFC380 (l_resNames)
//	80AF7D10: 804061C0 (g_dComIfG_gameInfo)
//	80AF7D14: 804061C0 (g_dComIfG_gameInfo)
//	80AF7D24: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80AF7D30: 802CEC4C (__nw__FUl)
//	80AF7D6C: 80AFBE84 (lit_4296)
//	80AF7D70: 80AFBE84 (lit_4296)
//	80AF7D7C: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80AF7DA0: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AF7DC8: 80AF8114 (ctrlJointCallBack__10daNpcThe_cFP8J3DJointi)
//	80AF7DCC: 80AF8114 (ctrlJointCallBack__10daNpcThe_cFP8J3DJointi)
//	80AF7E00: 802CEC4C (__nw__FUl)
//	80AF7E10: 803CEE60 (__vt__14J3DMaterialAnm)
//	80AF7E14: 803CEE60 (__vt__14J3DMaterialAnm)
//	80AF7E20: 80AF80FC (__ct__14J3DMatColorAnmFv)
//	80AF7E24: 80AF80FC (__ct__14J3DMatColorAnmFv)
//	80AF7E28: 80AF80C0 (__dt__14J3DMatColorAnmFv)
//	80AF7E2C: 80AF80C0 (__dt__14J3DMatColorAnmFv)
//	80AF7E38: 80361D60 (__construct_array)
//	80AF7E40: 80AF80A8 (__ct__12J3DTexMtxAnmFv)
//	80AF7E44: 80AF80A8 (__ct__12J3DTexMtxAnmFv)
//	80AF7E48: 80AF806C (__dt__12J3DTexMtxAnmFv)
//	80AF7E4C: 80AF806C (__dt__12J3DTexMtxAnmFv)
//	80AF7E58: 80361D60 (__construct_array)
//	80AF7E60: 80AF8048 (__ct__11J3DTexNoAnmFv)
//	80AF7E64: 80AF8048 (__ct__11J3DTexNoAnmFv)
//	80AF7E68: 80AF8000 (__dt__11J3DTexNoAnmFv)
//	80AF7E6C: 80AF8000 (__dt__11J3DTexNoAnmFv)
//	80AF7E78: 80361D60 (__construct_array)
//	80AF7E80: 80AF7FE8 (__ct__14J3DTevColorAnmFv)
//	80AF7E84: 80AF7FE8 (__ct__14J3DTevColorAnmFv)
//	80AF7E88: 80AF7FAC (__dt__14J3DTevColorAnmFv)
//	80AF7E8C: 80AF7FAC (__dt__14J3DTevColorAnmFv)
//	80AF7E98: 80361D60 (__construct_array)
//	80AF7EA0: 80AF7F94 (__ct__15J3DTevKColorAnmFv)
//	80AF7EA4: 80AF7F94 (__ct__15J3DTevKColorAnmFv)
//	80AF7EA8: 80AF7F58 (__dt__15J3DTevKColorAnmFv)
//	80AF7EAC: 80AF7F58 (__dt__15J3DTevKColorAnmFv)
//	80AF7EB8: 80361D60 (__construct_array)
//	80AF7EC0: 8032C320 (initialize__14J3DMaterialAnmFv)
//	80AF7EC4: 803B3920 (__vt__15daNpcF_MatAnm_c)
//	80AF7EC8: 803B3920 (__vt__15daNpcF_MatAnm_c)
//	80AF7ED4: 80150738 (initialize__15daNpcF_MatAnm_cFv)
//	80AF7F24: 80AFBE88 (lit_4297)
//	80AF7F28: 80AFBE88 (lit_4297)
//	80AF7F44: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpcThe_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/createHeapCallBack__10daNpcThe_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80AF7F58-80AF7F94 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	80AF7F78: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80AF7F94-80AF7FAC 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80AF7FAC-80AF7FE8 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	80AF7FCC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80AF7FE8-80AF8000 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80AF8000-80AF8048 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	80AF8018: 80AFC584 (__vt__11J3DTexNoAnm)
//	80AF801C: 80AFC584 (__vt__11J3DTexNoAnm)
//	80AF802C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80AF8048-80AF806C 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	80AF8048: 80AFC584 (__vt__11J3DTexNoAnm)
//	80AF804C: 80AFC584 (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80AF806C-80AF80A8 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	80AF808C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80AF80A8-80AF80C0 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80AF80C0-80AF80FC 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	80AF80E0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80AF80FC-80AF8114 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80AF8114-80AF8160 004C+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__10daNpcThe_cFP8J3DJointi                  */
//	80AF812C: 80434AC8 (j3dSys)
//	80AF8130: 80434AC8 (j3dSys)
//	80AF8148: 80AF7AE0 (ctrlJoint__10daNpcThe_cFP8J3DJointP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpcThe_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/ctrlJointCallBack__10daNpcThe_cFP8J3DJointi.s"
}
#pragma pop


/* 80AF8160-80AF841C 02BC+00 s=2 e=0 z=0  None .text      setExpressionAnm__10daNpcThe_cFib                            */
//	80AF8170: 803621D4 (_savegpr_27)
//	80AF8198: 80AFC200 (l_bckGetParamList)
//	80AF819C: 80AFC200 (l_bckGetParamList)
//	80AF81B8: 80AFC380 (l_resNames)
//	80AF81BC: 80AFC380 (l_resNames)
//	80AF81C4: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80AF81D8: 80AFC424 (lit_4407)
//	80AF81DC: 80AFC424 (lit_4407)
//	80AF83C0: 80AFBE84 (lit_4296)
//	80AF83C4: 80AFBE84 (lit_4296)
//	80AF83D8: 80152C80 (setBckAnm__8daNpcF_cFP15J3DAnmTransformfiiib)
//	80AF8408: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  bool False
asm void daNpcThe_c::setExpressionAnm(int param_0, bool param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/setExpressionAnm__10daNpcThe_cFib.s"
}
#pragma pop


/* 80AF841C-80AF8564 0148+00 s=2 e=0 z=0  None .text      setExpressionBtp__10daNpcThe_cFi                             */
//	80AF8450: 80AFC2D8 (l_btpGetParamList)
//	80AF8454: 80AFC2D8 (l_btpGetParamList)
//	80AF8470: 80AFC380 (l_resNames)
//	80AF8474: 80AFC380 (l_resNames)
//	80AF847C: 80152B68 (getTexPtrnAnmP__8daNpcF_cFPci)
//	80AF8490: 80AFC45C (lit_4441)
//	80AF8494: 80AFC45C (lit_4441)
//	80AF850C: 80AFBE84 (lit_4296)
//	80AF8510: 80AFBE84 (lit_4296)
//	80AF8514: 80152CC4 (setBtpAnm__8daNpcF_cFP16J3DAnmTexPatternP12J3DModelDatafi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpcThe_c::setExpressionBtp(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/setExpressionBtp__10daNpcThe_cFi.s"
}
#pragma pop


/* 80AF8564-80AF8744 01E0+00 s=2 e=0 z=0  None .text      setMotionAnm__10daNpcThe_cFif                                */
//	80AF857C: 803621D0 (_savegpr_26)
//	80AF858C: 80AFC1D0 (cNullVec__6Z2Calc)
//	80AF8590: 80AFC1D0 (cNullVec__6Z2Calc)
//	80AF85D4: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80AF85E8: 80AFC494 (lit_4482)
//	80AF85EC: 80AFC494 (lit_4482)
//	80AF8694: 80152BA4 (getTexSRTKeyAnmP__8daNpcF_cFPci)
//	80AF86B8: 80AFBE84 (lit_4296)
//	80AF86BC: 80AFBE84 (lit_4296)
//	80AF86C4: 80152D04 (setBtkAnm__8daNpcF_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi)
//	80AF86EC: 80AFBE84 (lit_4296)
//	80AF86F0: 80AFBE84 (lit_4296)
//	80AF8704: 80152C1C (setMcaMorfAnm__8daNpcF_cFP18J3DAnmTransformKeyffiii)
//	80AF8730: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
asm void daNpcThe_c::setMotionAnm(int param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/setMotionAnm__10daNpcThe_cFif.s"
}
#pragma pop


/* 80AF8744-80AF8B0C 03C8+00 s=1 e=0 z=0  None .text      wait__10daNpcThe_cFPv                                        */
//	80AF879C: 80AFC120 (lit_4781)
//	80AF87A0: 80AFC120 (lit_4781)
//	80AF87BC: 80AFC120 (lit_4781)
//	80AF87C0: 80AFC120 (lit_4781)
//	80AF87E4: 80AFC120 (lit_4781)
//	80AF87E8: 80AFC120 (lit_4781)
//	80AF8804: 80AFC120 (lit_4781)
//	80AF8808: 80AFC120 (lit_4781)
//	80AF8870: 801540A4 (step__8daNpcF_cFsiii)
//	80AF889C: 804061C0 (g_dComIfG_gameInfo)
//	80AF88A0: 804061C0 (g_dComIfG_gameInfo)
//	80AF88A8: 80AFC158 (stringBase0)
//	80AF88AC: 80AFC158 (stringBase0)
//	80AF88B4: 80368994 (strcmp)
//	80AF88C0: 804061C0 (g_dComIfG_gameInfo)
//	80AF88C4: 804061C0 (g_dComIfG_gameInfo)
//	80AF88D8: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	80AF88FC: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80AF8914: 801549E0 (chkFindPlayer2__8daNpcF_cFis)
//	80AF892C: 804061C0 (g_dComIfG_gameInfo)
//	80AF8930: 804061C0 (g_dComIfG_gameInfo)
//	80AF8938: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80AF8954: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80AF8964: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80AF89A8: 801540A4 (step__8daNpcF_cFsiii)
//	80AF89E0: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80AF89EC: 804061C0 (g_dComIfG_gameInfo)
//	80AF89F0: 804061C0 (g_dComIfG_gameInfo)
//	80AF8A14: 80AFBD3C (chkPointInArea__15daTag_EvtArea_cF4cXyz)
//	80AF8A24: 80155734 (daNpcF_offTmpBit__FUl)
//	80AF8A2C: 80155734 (daNpcF_offTmpBit__FUl)
//	80AF8A34: 80155734 (daNpcF_offTmpBit__FUl)
//	80AF8A3C: 80155734 (daNpcF_offTmpBit__FUl)
//	80AF8A4C: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80AF8A7C: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80AF8A90: 80152654 (srchAttnActor1__8daNpcF_cFPvPv)
//	80AF8A94: 80152654 (srchAttnActor1__8daNpcF_cFPvPv)
//	80AF8A98: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF8A9C: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF8ABC: 8015436C (getAttnActorP__8daNpcF_cFiPFPvPv_Pvffffsii)
//	80AF8ACC: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcThe_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/wait__10daNpcThe_cFPv.s"
}
#pragma pop


/* 80AF8B0C-80AF8B50 0044+00 s=1 e=0 z=0  None .text      setMotion__10daNpcThe_cFifi                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
//  int False
asm void daNpcThe_c::setMotion(int param_0, f32 param_1, int param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/setMotion__10daNpcThe_cFifi.s"
}
#pragma pop


/* 80AF8B50-80AF8B7C 002C+00 s=1 e=0 z=0  None .text      setExpression__10daNpcThe_cFif                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
asm void daNpcThe_c::setExpression(int param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/setExpression__10daNpcThe_cFif.s"
}
#pragma pop


/* 80AF8B7C-80AF8CC4 0148+00 s=1 e=0 z=0  None .text      waitTW__10daNpcThe_cFPv                                      */
//	80AF8BD0: 80AFC120 (lit_4781)
//	80AF8BD4: 80AFC120 (lit_4781)
//	80AF8BF0: 80AFC120 (lit_4781)
//	80AF8BF4: 80AFC120 (lit_4781)
//	80AF8C18: 80AFC120 (lit_4781)
//	80AF8C1C: 80AFC120 (lit_4781)
//	80AF8C38: 80AFC120 (lit_4781)
//	80AF8C3C: 80AFC120 (lit_4781)
//	80AF8C84: 801540A4 (step__8daNpcF_cFsiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcThe_c::waitTW(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/waitTW__10daNpcThe_cFPv.s"
}
#pragma pop


/* 80AF8CC4-80AF912C 0468+00 s=6 e=0 z=0  None .text      talk__10daNpcThe_cFPv                                        */
//	80AF8CD4: 803621D8 (_savegpr_28)
//	80AF8D0C: 80153D1C (initTalk__8daNpcF_cFiPP10fopAc_ac_c)
//	80AF8D38: 804061C0 (g_dComIfG_gameInfo)
//	80AF8D3C: 804061C0 (g_dComIfG_gameInfo)
//	80AF8D44: 80AFC158 (stringBase0)
//	80AF8D48: 80AFC158 (stringBase0)
//	80AF8D50: 80368994 (strcmp)
//	80AF8D5C: 804061C0 (g_dComIfG_gameInfo)
//	80AF8D60: 804061C0 (g_dComIfG_gameInfo)
//	80AF8D74: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	80AF8DB4: 80AFC200 (l_bckGetParamList)
//	80AF8DB8: 80AFC200 (l_bckGetParamList)
//	80AF8DC4: 80AFC380 (l_resNames)
//	80AF8DC8: 80AFC380 (l_resNames)
//	80AF8DD4: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80AF8DEC: 80AFC200 (l_bckGetParamList)
//	80AF8DF0: 80AFC200 (l_bckGetParamList)
//	80AF8DFC: 80AFC380 (l_resNames)
//	80AF8E00: 80AFC380 (l_resNames)
//	80AF8E0C: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80AF8E24: 80AFC200 (l_bckGetParamList)
//	80AF8E28: 80AFC200 (l_bckGetParamList)
//	80AF8E34: 80AFC380 (l_resNames)
//	80AF8E38: 80AFC380 (l_resNames)
//	80AF8E44: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80AF8E80: 804061C0 (g_dComIfG_gameInfo)
//	80AF8E84: 804061C0 (g_dComIfG_gameInfo)
//	80AF8E8C: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80AF8EA0: 804061C0 (g_dComIfG_gameInfo)
//	80AF8EA4: 804061C0 (g_dComIfG_gameInfo)
//	80AF8EAC: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AF8ED0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80AF8EE8: 801540A4 (step__8daNpcF_cFsiii)
//	80AF8EFC: 80AFC120 (lit_4781)
//	80AF8F00: 80AFC120 (lit_4781)
//	80AF8F1C: 80AFC120 (lit_4781)
//	80AF8F20: 80AFC120 (lit_4781)
//	80AF8F48: 80AFC124 (lit_4840)
//	80AF8F4C: 80AFC124 (lit_4840)
//	80AF8F84: 80153D84 (talkProc__8daNpcF_cFPiiPP10fopAc_ac_c)
//	80AF8F9C: 804061C0 (g_dComIfG_gameInfo)
//	80AF8FA0: 804061C0 (g_dComIfG_gameInfo)
//	80AF8FE4: 804061C0 (g_dComIfG_gameInfo)
//	80AF8FE8: 804061C0 (g_dComIfG_gameInfo)
//	80AF9010: 8024A528 (getEventId__10dMsgFlow_cFPi)
//	80AF903C: 8001BBE8 (fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz)
//	80AF9054: 804061C0 (g_dComIfG_gameInfo)
//	80AF9058: 804061C0 (g_dComIfG_gameInfo)
//	80AF9064: 80AFC158 (stringBase0)
//	80AF9068: 80AFC158 (stringBase0)
//	80AF9074: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	80AF9084: 80042518 (reset__14dEvt_control_cFPv)
//	80AF909C: 8001B5E4 (fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs)
//	80AF90F8: 804061C0 (g_dComIfG_gameInfo)
//	80AF90FC: 804061C0 (g_dComIfG_gameInfo)
//	80AF9104: 80042468 (reset__14dEvt_control_cFv)
//	80AF9118: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcThe_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/talk__10daNpcThe_cFPv.s"
}
#pragma pop


/* 80AF912C-80AF923C 0110+00 s=2 e=0 z=0  None .text      test__10daNpcThe_cFPv                                        */
//	80AF9170: 80AFBE88 (lit_4297)
//	80AF9174: 80AFBE88 (lit_4297)
//	80AF91A4: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF91A8: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF91D4: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF91D8: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF91F8: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF91FC: 80AFBE0C (m__16daNpcThe_Param_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcThe_c::test(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/test__10daNpcThe_cFPv.s"
}
#pragma pop


/* 80AF923C-80AF9244 0008+00 s=2 e=0 z=0  None .text      EvCut_TwResistance__10daNpcThe_cFi                           */
// True False
//  bool False
//  int False
bool daNpcThe_c::EvCut_TwResistance(int param_0) {
	return true;
}


/* 80AF9244-80AF9338 00F4+00 s=1 e=0 z=0  None .text      EvCut_Introduction__10daNpcThe_cFi                           */
//	80AF9254: 803621D8 (_savegpr_28)
//	80AF9260: 804061C0 (g_dComIfG_gameInfo)
//	80AF9264: 804061C0 (g_dComIfG_gameInfo)
//	80AF9270: 80047F5C (getMyNowCutName__16dEvent_manager_cFi)
//	80AF9280: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80AF92BC: 80153D1C (initTalk__8daNpcF_cFiPP10fopAc_ac_c)
//	80AF9308: 80153D84 (talkProc__8daNpcF_cFPiiPP10fopAc_ac_c)
//	80AF9324: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpcThe_c::EvCut_Introduction(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/EvCut_Introduction__10daNpcThe_cFi.s"
}
#pragma pop


/* 80AF9338-80AF9358 0020+00 s=1 e=0 z=0  None .text      daNpcThe_Create__FPv                                         */
//	80AF9344: 80AF9358 (create__10daNpcThe_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcThe_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/daNpcThe_Create__FPv.s"
}
#pragma pop


/* 80AF9358-80AF9748 03F0+00 s=1 e=0 z=0  None .text      create__10daNpcThe_cFv                                       */
//	80AF9368: 803621CC (_savegpr_25)
//	80AF9384: 80AF76CC (__ct__10daNpcThe_cFv)
//	80AF940C: 804061C0 (g_dComIfG_gameInfo)
//	80AF9410: 804061C0 (g_dComIfG_gameInfo)
//	80AF941C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80AF9420: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80AF9428: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80AF9438: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80AF943C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	80AF9444: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80AF9468: 80AFC380 (l_resNames)
//	80AF946C: 80AFC380 (l_resNames)
//	80AF9470: 80AFC374 (l_loadRes_list)
//	80AF9474: 80AFC374 (l_loadRes_list)
//	80AF948C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80AF9520: 80AF7CB0 (createHeapCallBack__10daNpcThe_cFP10fopAc_ac_c)
//	80AF9524: 80AF7CB0 (createHeapCallBack__10daNpcThe_cFP10fopAc_ac_c)
//	80AF9528: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80AF9594: 8001A578 (fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData)
//	80AF95AC: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80AF95B4: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF95B8: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF95C4: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80AF95F0: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80AF9610: 804061C0 (g_dComIfG_gameInfo)
//	80AF9614: 804061C0 (g_dComIfG_gameInfo)
//	80AF961C: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80AF9624: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9628: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9644: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80AF964C: 803B37E0 (mCcDCyl__8daNpcF_c)
//	80AF9650: 803B37E0 (mCcDCyl__8daNpcF_c)
//	80AF9654: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80AF9670: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9674: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF967C: 8026F1F8 (SetH__8cM3dGCylFf)
//	80AF9688: 8026F200 (SetR__8cM3dGCylFf)
//	80AF9708: 80152D84 (setEnvTevColor__8daNpcF_cFv)
//	80AF9710: 80152DE0 (setRoomNo__8daNpcF_cFv)
//	80AF9718: 80AF9748 (reset__10daNpcThe_cFv)
//	80AF9720: 80152014 (execute__8daNpcF_cFv)
//	80AF9734: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcThe_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/create__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AF9748-80AF98D0 0188+00 s=1 e=0 z=0  None .text      reset__10daNpcThe_cFv                                        */
//	80AF9758: 803621DC (_savegpr_29)
//	80AF9760: 801528C8 (initialize__8daNpcF_cFv)
//	80AF9768: 80150738 (initialize__15daNpcF_MatAnm_cFv)
//	80AF9770: 80151038 (initialize__15daNpcF_Lookat_cFv)
//	80AF9784: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
//	80AF9798: 803A2180 (__ptmf_null)
//	80AF979C: 803A2180 (__ptmf_null)
//	80AF9898: 80AFBE88 (lit_4297)
//	80AF989C: 80AFBE88 (lit_4297)
//	80AF98BC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcThe_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/reset__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AF98D0-80AF9904 0034+00 s=1 e=0 z=0  None .text      daNpcThe_Delete__FPv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcThe_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/daNpcThe_Delete__FPv.s"
}
#pragma pop


/* 80AF9904-80AF9924 0020+00 s=1 e=0 z=0  None .text      daNpcThe_Execute__FPv                                        */
//	80AF9910: 80152014 (execute__8daNpcF_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcThe_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/daNpcThe_Execute__FPv.s"
}
#pragma pop


/* 80AF9924-80AF99BC 0098+00 s=1 e=0 z=0  None .text      daNpcThe_Draw__FPv                                           */
//	80AF9954: 80AFC418 (lit_4153)
//	80AF9958: 80AFC418 (lit_4153)
//	80AF997C: 80362048 (__ptmf_cmpr)
//	80AF9990: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9994: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF99A4: 801522AC (draw__8daNpcF_cFiifP11_GXColorS10i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcThe_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/daNpcThe_Draw__FPv.s"
}
#pragma pop


/* 80AF99BC-80AF99C4 0008+00 s=1 e=0 z=0  None .text      daNpcThe_IsDelete__FPv                                       */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpcThe_IsDelete(void* param_0) {
	return true;
}


/* 80AF99C4-80AF99F4 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	80AF99E0: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 80AF99F4-80AF9CF0 02FC+00 s=1 e=0 z=0  None .text      setParam__10daNpcThe_cFv                                     */
//	80AF9A04: 803621D8 (_savegpr_28)
//	80AF9A0C: 80AFC1D0 (cNullVec__6Z2Calc)
//	80AF9A10: 80AFC1D0 (cNullVec__6Z2Calc)
//	80AF9A18: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80AF9A30: 801542A0 (getEvtAreaTagP__8daNpcF_cFii)
//	80AF9A3C: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80AF9A58: 803A2180 (__ptmf_null)
//	80AF9A5C: 803A2180 (__ptmf_null)
//	80AF9A78: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9A7C: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9AF0: 80362048 (__ptmf_cmpr)
//	80AF9B10: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
//	80AF9B38: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9B3C: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9B58: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9B5C: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9B70: 804061C0 (g_dComIfG_gameInfo)
//	80AF9B74: 804061C0 (g_dComIfG_gameInfo)
//	80AF9B80: 80AFC158 (stringBase0)
//	80AF9B84: 80AFC158 (stringBase0)
//	80AF9B8C: 80368994 (strcmp)
//	80AF9B98: 804061C0 (g_dComIfG_gameInfo)
//	80AF9B9C: 804061C0 (g_dComIfG_gameInfo)
//	80AF9BB0: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	80AF9BFC: 80AFC158 (stringBase0)
//	80AF9C00: 80AFC158 (stringBase0)
//	80AF9C08: 80368994 (strcmp)
//	80AF9C18: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9C1C: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9C28: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	80AF9C3C: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9C40: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9C50: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	80AF9C60: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9C64: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9C70: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	80AF9C84: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9C88: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9C94: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	80AF9C9C: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9CA0: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9CBC: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80AF9CC0: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9CC4: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9CDC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcThe_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/setParam__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AF9CF0-80AF9F94 02A4+00 s=1 e=0 z=0  None .text      main__10daNpcThe_cFv                                         */
//	80AF9D00: 803621DC (_savegpr_29)
//	80AF9D08: 80AFC1D0 (cNullVec__6Z2Calc)
//	80AF9D0C: 80AFC1D0 (cNullVec__6Z2Calc)
//	80AF9D10: 80AFA6CC (doEvent__10daNpcThe_cFv)
//	80AF9D28: 80362018 (__ptmf_test)
//	80AF9D3C: 80362048 (__ptmf_cmpr)
//	80AF9D54: 80362084 (__ptmf_scall)
//	80AF9D7C: 80362018 (__ptmf_test)
//	80AF9D9C: 80362084 (__ptmf_scall)
//	80AF9DA8: 80362018 (__ptmf_test)
//	80AF9DE0: 80362084 (__ptmf_scall)
//	80AF9DF4: 80AFBE88 (lit_4297)
//	80AF9DF8: 80AFBE88 (lit_4297)
//	80AF9E28: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
//	80AF9E48: 804061C0 (g_dComIfG_gameInfo)
//	80AF9E4C: 804061C0 (g_dComIfG_gameInfo)
//	80AF9E7C: 800436EC (setPtI_Id__14dEvt_control_cFUi)
//	80AF9E88: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9E8C: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9E9C: 804061C0 (g_dComIfG_gameInfo)
//	80AF9EA0: 804061C0 (g_dComIfG_gameInfo)
//	80AF9F14: 80AFC158 (stringBase0)
//	80AF9F18: 80AFC158 (stringBase0)
//	80AF9F20: 80368994 (strcmp)
//	80AF9F64: 8015387C (orderEvent__8daNpcF_cFiPcUsUsUcUs)
//	80AF9F6C: 80AFA338 (playExpression__10daNpcThe_cFv)
//	80AF9F74: 80AF9F94 (playMotion__10daNpcThe_cFv)
//	80AF9F80: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcThe_c::main() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/main__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AF9F94-80AFA338 03A4+00 s=1 e=0 z=0  None .text      playMotion__10daNpcThe_cFv                                   */
//	80AF9FA0: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AF9FA4: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AFA324: 80153264 (playMotionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcThe_c::playMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/playMotion__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AFA338-80AFA6CC 0394+00 s=1 e=0 z=0  None .text      playExpression__10daNpcThe_cFv                               */
//	80AFA344: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AFA348: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AFA6B8: 80153150 (playExpressionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcThe_c::playExpression() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/playExpression__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AFA6CC-80AFADEC 0720+00 s=1 e=0 z=0  None .text      doEvent__10daNpcThe_cFv                                      */
//	80AFA6DC: 803621D4 (_savegpr_27)
//	80AFA6E4: 80AFC1D0 (cNullVec__6Z2Calc)
//	80AFA6E8: 80AFC1D0 (cNullVec__6Z2Calc)
//	80AFA6F0: 804061C0 (g_dComIfG_gameInfo)
//	80AFA6F4: 804061C0 (g_dComIfG_gameInfo)
//	80AFA724: 80155634 (daNpcF_chkEvtBit__FUl)
//	80AFA76C: 80046800 (setObjectArchive__16dEvent_manager_cFPc)
//	80AFA78C: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	80AFA7A8: 80042518 (reset__14dEvt_control_cFPv)
//	80AFA7C0: 8001B5E4 (fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs)
//	80AFA7F4: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80AFA808: 804061C0 (g_dComIfG_gameInfo)
//	80AFA80C: 804061C0 (g_dComIfG_gameInfo)
//	80AFA844: 80362048 (__ptmf_cmpr)
//	80AFA85C: 80362084 (__ptmf_scall)
//	80AFA884: 80362018 (__ptmf_test)
//	80AFA8A4: 80362084 (__ptmf_scall)
//	80AFA8B0: 80362018 (__ptmf_test)
//	80AFA8E8: 80362084 (__ptmf_scall)
//	80AFA924: 80362048 (__ptmf_cmpr)
//	80AFA93C: 80362084 (__ptmf_scall)
//	80AFA964: 80362018 (__ptmf_test)
//	80AFA984: 80362084 (__ptmf_scall)
//	80AFA990: 80362018 (__ptmf_test)
//	80AFA9C8: 80362084 (__ptmf_scall)
//	80AFA9DC: 80AFC158 (stringBase0)
//	80AFA9E0: 80AFC158 (stringBase0)
//	80AFA9EC: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	80AFA9FC: 80042518 (reset__14dEvt_control_cFPv)
//	80AFAA14: 8001B5E4 (fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs)
//	80AFAA3C: 80362048 (__ptmf_cmpr)
//	80AFAA54: 80362084 (__ptmf_scall)
//	80AFAA7C: 80362018 (__ptmf_test)
//	80AFAA9C: 80362084 (__ptmf_scall)
//	80AFAAA8: 80362018 (__ptmf_test)
//	80AFAAE0: 80362084 (__ptmf_scall)
//	80AFAB00: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80AFAB2C: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80AFAB54: 80362084 (__ptmf_scall)
//	80AFAB6C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80AFAB8C: 80362084 (__ptmf_scall)
//	80AFABA4: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80AFABC8: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80AFABD8: 80042468 (reset__14dEvt_control_cFv)
//	80AFAC04: 80153718 (ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci)
//	80AFAC24: 80AFC120 (lit_4781)
//	80AFAC28: 80AFC120 (lit_4781)
//	80AFAC44: 80AFC120 (lit_4781)
//	80AFAC48: 80AFC120 (lit_4781)
//	80AFACB8: 80AFC120 (lit_4781)
//	80AFACBC: 80AFC120 (lit_4781)
//	80AFACDC: 80AFC120 (lit_4781)
//	80AFACE0: 80AFC120 (lit_4781)
//	80AFAD00: 80AFC120 (lit_4781)
//	80AFAD04: 80AFC120 (lit_4781)
//	80AFAD24: 80AFC120 (lit_4781)
//	80AFAD28: 80AFC120 (lit_4781)
//	80AFAD48: 80AFC120 (lit_4781)
//	80AFAD4C: 80AFC120 (lit_4781)
//	80AFAD6C: 80AFC120 (lit_4781)
//	80AFAD70: 80AFC120 (lit_4781)
//	80AFAD90: 80AFC120 (lit_4781)
//	80AFAD94: 80AFC120 (lit_4781)
//	80AFADD8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcThe_c::doEvent() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/doEvent__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AFADEC-80AFAEC8 00DC+00 s=1 e=0 z=0  None .text      ctrlBtk__10daNpcThe_cFv                                      */
//	80AFAE10: 80AFC348 (l_btkGetParamList)
//	80AFAE14: 80AFC348 (l_btkGetParamList)
//	80AFAE28: 80AFC380 (l_resNames)
//	80AFAE2C: 80AFC380 (l_resNames)
//	80AFAE34: 80152BA4 (getTexSRTKeyAnmP__8daNpcF_cFPci)
//	80AFAE48: 80439A20 (sincosTable___5JMath)
//	80AFAE4C: 80439A20 (sincosTable___5JMath)
//	80AFAE54: 80AFB490 (func_80AFB490)
//	80AFAE58: 80AFC12C (lit_5324)
//	80AFAE5C: 80AFC12C (lit_5324)
//	80AFAE6C: 80439A20 (sincosTable___5JMath)
//	80AFAE70: 80439A20 (sincosTable___5JMath)
//	80AFAE78: 80AFB490 (func_80AFB490)
//	80AFAE7C: 80AFC12C (lit_5324)
//	80AFAE80: 80AFC12C (lit_5324)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcThe_c::ctrlBtk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/ctrlBtk__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AFAEC8-80AFB1C4 02FC+00 s=1 e=0 z=0  None .text      setAttnPos__10daNpcThe_cFv                                   */
//	80AFAEE0: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AFAEE4: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AFAF3C: 80AFB1C4 (lookat__10daNpcThe_cFv)
//	80AFAF68: 803DD470 (now__14mDoMtx_stack_c)
//	80AFAF6C: 803DD470 (now__14mDoMtx_stack_c)
//	80AFAF70: 803464B0 (PSMTXCopy)
//	80AFAF74: 803DD470 (now__14mDoMtx_stack_c)
//	80AFAF78: 803DD470 (now__14mDoMtx_stack_c)
//	80AFAF9C: 80346D6C (PSMTXMultVec)
//	80AFAFA8: 803DD470 (now__14mDoMtx_stack_c)
//	80AFAFAC: 803DD470 (now__14mDoMtx_stack_c)
//	80AFAFB8: 80346D6C (PSMTXMultVec)
//	80AFAFC4: 80270C74 (cLib_targetAngleX__FPC4cXyzPC4cXyz)
//	80AFAFD4: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80AFAFF0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80AFB020: 80267674 (cM_atan2s__Fff)
//	80AFB04C: 80347138 (PSVECSquareMag)
//	80AFB0BC: 80450AE0 (__float_nan)
//	80AFB0C0: 80450AE0 (__float_nan)
//	80AFB12C: 80450AE0 (__float_nan)
//	80AFB130: 80450AE0 (__float_nan)
//	80AFB140: 80267674 (cM_atan2s__Fff)
//	80AFB194: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80AFB198: 804061C0 (g_dComIfG_gameInfo)
//	80AFB19C: 804061C0 (g_dComIfG_gameInfo)
//	80AFB1A8: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcThe_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/setAttnPos__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AFB1C4-80AFB488 02C4+00 s=1 e=0 z=0  None .text      lookat__10daNpcThe_cFv                                       */
//	80AFB214: 803621D4 (_savegpr_27)
//	80AFB21C: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AFB220: 80AFBE0C (m__16daNpcThe_Param_c)
//	80AFB320: 804061C0 (g_dComIfG_gameInfo)
//	80AFB324: 804061C0 (g_dComIfG_gameInfo)
//	80AFB338: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80AFB33C: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80AFB344: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80AFB40C: 801510B8 (setParam__15daNpcF_Lookat_cFffffffffffffsP4cXyz)
//	80AFB42C: 80151350 (calc__15daNpcF_Lookat_cFP10fopAc_ac_cPA4_fPP5csXyziii)
//	80AFB474: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcThe_c::lookat() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/lookat__10daNpcThe_cFv.s"
}
#pragma pop


/* 80AFB488-80AFB490 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__10daNpcThe_cFv                                  */
// True False
//  bool False
bool daNpcThe_c::drawDbgInfo() {
	return false;
}


/* 80AFB490-80AFB49C 000C+00 s=1 e=0 z=0  None .text      sinShort__Q25JMath18TSinCosTable<13,f>CFs                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  s16 False
asm void JMath::TSinCosTable__template0::sinShort(s16 param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/func_80AFB490.s"
}
#pragma pop


/* ############################################################################################## */
/* 80AFC65C-80AFC668 000C+00 s=2 e=0 z=0  None .data      __vt__16daNpcThe_Param_c                                     */
SECTION_DATA void* __vt__16daNpcThe_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__16daNpcThe_Param_cFv,
};

/* 80AFC670-80AFC67C 000C+00 s=1 e=0 z=0  None .bss       @3809                                                        */
static u8 lit_3809[12];

/* 80AFC67C-80AFC680 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80AFB49C-80AFB558 00BC+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_the_cpp                                      */
//	80AFB4AC: 80AFC1D0 (cNullVec__6Z2Calc)
//	80AFB4B0: 80AFC1D0 (cNullVec__6Z2Calc)
//	80AFB4B4: 80AFC65C (__vt__16daNpcThe_Param_c)
//	80AFB4B8: 80AFC65C (__vt__16daNpcThe_Param_c)
//	80AFB4BC: 80AFC67C (l_HIO)
//	80AFB4C0: 80AFC67C (l_HIO)
//	80AFB4C4: 80AFBDA0 (__dt__16daNpcThe_Param_cFv)
//	80AFB4C8: 80AFBDA0 (__dt__16daNpcThe_Param_cFv)
//	80AFB4CC: 80AFC670 (lit_3809)
//	80AFB4D0: 80AFC670 (lit_3809)
//	80AFB4D4: 80AF7658 (__register_global_object)
//	80AFB4D8: 803A2180 (__ptmf_null)
//	80AFB4DC: 803A2180 (__ptmf_null)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_the_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__sinit_d_a_npc_the_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80AFB49C = (void*)__sinit_d_a_npc_the_cpp;
#pragma pop


/* 80AFB558-80AFB5A0 0048+00 s=5 e=0 z=0  None .text      __dt__18daNpcF_ActorMngr_cFv                                 */
//	80AFB570: 80AFC62C (__vt__18daNpcF_ActorMngr_c)
//	80AFB574: 80AFC62C (__vt__18daNpcF_ActorMngr_c)
//	80AFB584: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_ActorMngr_c::~daNpcF_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__18daNpcF_ActorMngr_cFv.s"
}
#pragma pop


/* 80AFB5A0-80AFB5DC 003C+00 s=2 e=0 z=0  None .text      __ct__18daNpcF_ActorMngr_cFv                                 */
//	80AFB5B4: 80AFC62C (__vt__18daNpcF_ActorMngr_c)
//	80AFB5B8: 80AFC62C (__vt__18daNpcF_ActorMngr_c)
//	80AFB5C0: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_ActorMngr_c::daNpcF_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__ct__18daNpcF_ActorMngr_cFv.s"
}
#pragma pop


/* 80AFB5DC-80AFB6AC 00D0+00 s=1 e=0 z=0  None .text      __dt__15daNpcF_Lookat_cFv                                    */
//	80AFB5FC: 80AFC650 (__vt__15daNpcF_Lookat_c)
//	80AFB600: 80AFC650 (__vt__15daNpcF_Lookat_c)
//	80AFB60C: 80AFB6AC (__dt__5csXyzFv)
//	80AFB610: 80AFB6AC (__dt__5csXyzFv)
//	80AFB61C: 80361CE8 (__destroy_arr)
//	80AFB624: 80AFB6AC (__dt__5csXyzFv)
//	80AFB628: 80AFB6AC (__dt__5csXyzFv)
//	80AFB634: 80361CE8 (__destroy_arr)
//	80AFB63C: 80AFB6AC (__dt__5csXyzFv)
//	80AFB640: 80AFB6AC (__dt__5csXyzFv)
//	80AFB64C: 80361CE8 (__destroy_arr)
//	80AFB654: 80AFB6AC (__dt__5csXyzFv)
//	80AFB658: 80AFB6AC (__dt__5csXyzFv)
//	80AFB664: 80361CE8 (__destroy_arr)
//	80AFB66C: 80AFB6EC (__dt__4cXyzFv)
//	80AFB670: 80AFB6EC (__dt__4cXyzFv)
//	80AFB67C: 80361CE8 (__destroy_arr)
//	80AFB68C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_Lookat_c::~daNpcF_Lookat_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__15daNpcF_Lookat_cFv.s"
}
#pragma pop


/* 80AFB6AC-80AFB6E8 003C+00 s=5 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80AFB6CC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__5csXyzFv.s"
}
#pragma pop


/* 80AFB6E8-80AFB6EC 0004+00 s=2 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80AFB6EC-80AFB728 003C+00 s=5 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80AFB70C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__4cXyzFv.s"
}
#pragma pop


/* 80AFB728-80AFB72C 0004+00 s=2 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80AFB72C-80AFB978 024C+00 s=1 e=0 z=0  None .text      __dt__8daNpcF_cFv                                            */
//	80AFB74C: 803B38D8 (__vt__8daNpcF_c)
//	80AFB750: 803B38D8 (__vt__8daNpcF_c)
//	80AFB760: 80077CDC (__dt__11dBgS_LinChkFv)
//	80AFB76C: 800775F0 (__dt__11dBgS_GndChkFv)
//	80AFB778: 80267C94 (__dt__11cBgS_GndChkFv)
//	80AFB784: 80249F48 (__dt__10dMsgFlow_cFv)
//	80AFB78C: 80AFB6AC (__dt__5csXyzFv)
//	80AFB790: 80AFB6AC (__dt__5csXyzFv)
//	80AFB79C: 80361CE8 (__destroy_arr)
//	80AFB7A4: 80AFB6AC (__dt__5csXyzFv)
//	80AFB7A8: 80AFB6AC (__dt__5csXyzFv)
//	80AFB7B4: 80361CE8 (__destroy_arr)
//	80AFB7BC: 80AFB6EC (__dt__4cXyzFv)
//	80AFB7C0: 80AFB6EC (__dt__4cXyzFv)
//	80AFB7CC: 80361CE8 (__destroy_arr)
//	80AFB7D4: 80AFB558 (__dt__18daNpcF_ActorMngr_cFv)
//	80AFB7D8: 80AFB558 (__dt__18daNpcF_ActorMngr_cFv)
//	80AFB7E4: 80361CE8 (__destroy_arr)
//	80AFB7F0: 80AFC62C (__vt__18daNpcF_ActorMngr_c)
//	80AFB7F4: 80AFC62C (__vt__18daNpcF_ActorMngr_c)
//	80AFB804: 80AFC620 (__vt__12dBgS_AcchCir)
//	80AFB808: 80AFC620 (__vt__12dBgS_AcchCir)
//	80AFB818: 8026EF18 (__dt__8cM3dGCirFv)
//	80AFB824: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AFB830: 803AC2E4 (__vt__9dCcD_Stts)
//	80AFB834: 803AC2E4 (__vt__9dCcD_Stts)
//	80AFB84C: 80AFC614 (__vt__10dCcD_GStts)
//	80AFB850: 80AFC614 (__vt__10dCcD_GStts)
//	80AFB860: 80AFC608 (__vt__10cCcD_GStts)
//	80AFB864: 80AFC608 (__vt__10cCcD_GStts)
//	80AFB874: 803C3728 (__vt__9cCcD_Stts)
//	80AFB878: 803C3728 (__vt__9cCcD_Stts)
//	80AFB888: 80AFC5E4 (__vt__12dBgS_ObjAcch)
//	80AFB88C: 80AFC5E4 (__vt__12dBgS_ObjAcch)
//	80AFB8AC: 80075F94 (__dt__9dBgS_AcchFv)
//	80AFB8C8: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB8CC: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB8EC: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB8F0: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB910: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB914: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB934: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB938: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB948: 80018C8C (__dt__10fopAc_ac_cFv)
//	80AFB958: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_c::~daNpcF_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__8daNpcF_cFv.s"
}
#pragma pop


/* 80AFB978-80AFBB68 01F0+00 s=1 e=0 z=0  None .text      __ct__8daNpcF_cFv                                            */
//	80AFB990: 80018B64 (__ct__10fopAc_ac_cFv)
//	80AFB994: 803B38D8 (__vt__8daNpcF_c)
//	80AFB998: 803B38D8 (__vt__8daNpcF_c)
//	80AFB9A4: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB9A8: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB9B8: 803283FC (init__12J3DFrameCtrlFs)
//	80AFB9C8: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB9CC: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB9DC: 803283FC (init__12J3DFrameCtrlFs)
//	80AFB9EC: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFB9F0: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFBA00: 803283FC (init__12J3DFrameCtrlFs)
//	80AFBA10: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFBA14: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFBA24: 803283FC (init__12J3DFrameCtrlFs)
//	80AFBA38: 800760A0 (__ct__9dBgS_AcchFv)
//	80AFBA3C: 80AFC5E4 (__vt__12dBgS_ObjAcch)
//	80AFBA40: 80AFC5E4 (__vt__12dBgS_ObjAcch)
//	80AFBA5C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80AFBA60: 803C3728 (__vt__9cCcD_Stts)
//	80AFBA64: 803C3728 (__vt__9cCcD_Stts)
//	80AFBA70: 80083760 (__ct__10dCcD_GSttsFv)
//	80AFBA74: 803AC2E4 (__vt__9dCcD_Stts)
//	80AFBA78: 803AC2E4 (__vt__9dCcD_Stts)
//	80AFBA8C: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80AFBA90: 80AFC62C (__vt__18daNpcF_ActorMngr_c)
//	80AFBA94: 80AFC62C (__vt__18daNpcF_ActorMngr_c)
//	80AFBAA0: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
//	80AFBAA8: 80AFB5A0 (__ct__18daNpcF_ActorMngr_cFv)
//	80AFBAAC: 80AFB5A0 (__ct__18daNpcF_ActorMngr_cFv)
//	80AFBAB0: 80AFB558 (__dt__18daNpcF_ActorMngr_cFv)
//	80AFBAB4: 80AFB558 (__dt__18daNpcF_ActorMngr_cFv)
//	80AFBAC0: 80361D60 (__construct_array)
//	80AFBAC8: 80AFB728 (__ct__4cXyzFv)
//	80AFBACC: 80AFB728 (__ct__4cXyzFv)
//	80AFBAD0: 80AFB6EC (__dt__4cXyzFv)
//	80AFBAD4: 80AFB6EC (__dt__4cXyzFv)
//	80AFBAE0: 80361D60 (__construct_array)
//	80AFBAE8: 80AFB6E8 (__ct__5csXyzFv)
//	80AFBAEC: 80AFB6E8 (__ct__5csXyzFv)
//	80AFBAF0: 80AFB6AC (__dt__5csXyzFv)
//	80AFBAF4: 80AFB6AC (__dt__5csXyzFv)
//	80AFBB00: 80361D60 (__construct_array)
//	80AFBB08: 80AFB6E8 (__ct__5csXyzFv)
//	80AFBB0C: 80AFB6E8 (__ct__5csXyzFv)
//	80AFBB10: 80AFB6AC (__dt__5csXyzFv)
//	80AFBB14: 80AFB6AC (__dt__5csXyzFv)
//	80AFBB20: 80361D60 (__construct_array)
//	80AFBB28: 80249F00 (__ct__10dMsgFlow_cFv)
//	80AFBB30: 80267C1C (__ct__11cBgS_GndChkFv)
//	80AFBB38: 8007757C (__ct__11dBgS_GndChkFv)
//	80AFBB40: 80077C68 (__ct__11dBgS_LinChkFv)
//	80AFBB48: 801528C8 (initialize__8daNpcF_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_c::daNpcF_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__ct__8daNpcF_cFv.s"
}
#pragma pop


/* 80AFBB68-80AFBBD8 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80AFBB88: 80AFC620 (__vt__12dBgS_AcchCir)
//	80AFBB8C: 80AFC620 (__vt__12dBgS_AcchCir)
//	80AFBB9C: 8026EF18 (__dt__8cM3dGCirFv)
//	80AFBBA8: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AFBBB8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80AFBBD8-80AFBC34 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80AFBBF0: 80AFC614 (__vt__10dCcD_GStts)
//	80AFBBF4: 80AFC614 (__vt__10dCcD_GStts)
//	80AFBC00: 80AFC608 (__vt__10cCcD_GStts)
//	80AFBC04: 80AFC608 (__vt__10cCcD_GStts)
//	80AFBC18: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80AFBC34-80AFBCA4 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80AFBC54: 80AFC5E4 (__vt__12dBgS_ObjAcch)
//	80AFBC58: 80AFC5E4 (__vt__12dBgS_ObjAcch)
//	80AFBC74: 80075F94 (__dt__9dBgS_AcchFv)
//	80AFBC84: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80AFBCA4-80AFBCEC 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80AFBCBC: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFBCC0: 80AFC5D8 (__vt__12J3DFrameCtrl)
//	80AFBCD0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80AFBCEC-80AFBCF0 0004+00 s=1 e=0 z=0  None .text      setCollisions__8daNpcF_cFv                                   */
// True False
//  void False
void daNpcF_c::setCollisions() {
	/* empty function */
}


/* 80AFBCF0-80AFBCF4 0004+00 s=1 e=0 z=0  None .text      drawOtherMdls__8daNpcF_cFv                                   */
// True False
//  void False
void daNpcF_c::drawOtherMdls() {
	/* empty function */
}


/* 80AFBCF4-80AFBD3C 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80AFBD0C: 80AFC608 (__vt__10cCcD_GStts)
//	80AFBD10: 80AFC608 (__vt__10cCcD_GStts)
//	80AFBD20: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80AFBD3C-80AFBD9C 0060+00 s=1 e=0 z=0  None .text      chkPointInArea__15daTag_EvtArea_cF4cXyz                      */
//	80AFBD48: 80AFBE88 (lit_4297)
//	80AFBD4C: 80AFBE88 (lit_4297)
//	80AFBD88: 8048C94C (chkPointInArea__15daTag_EvtArea_cF4cXyz4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
asm void daTag_EvtArea_c::chkPointInArea(cXyz param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/chkPointInArea__15daTag_EvtArea_cF4cXyz.s"
}
#pragma pop


/* 80AFBD9C-80AFBDA0 0004+00 s=1 e=0 z=0  None .text      adjustShapeAngle__10daNpcThe_cFv                             */
// True False
//  void False
void daNpcThe_c::adjustShapeAngle() {
	/* empty function */
}


/* 80AFBDA0-80AFBDE8 0048+00 s=2 e=0 z=0  None .text      __dt__16daNpcThe_Param_cFv                                   */
//	80AFBDB8: 80AFC65C (__vt__16daNpcThe_Param_c)
//	80AFBDBC: 80AFC65C (__vt__16daNpcThe_Param_c)
//	80AFBDCC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcThe_Param_c::~daNpcThe_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/__dt__16daNpcThe_Param_cFv.s"
}
#pragma pop


/* 80AFBDE8-80AFBDF0 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80AFBDEC: 80AFBC34 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AFBDE8() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/func_80AFBDE8.s"
}
#pragma pop


/* 80AFBDF0-80AFBDF8 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80AFBDF4: 80AFBC34 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AFBDF0() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_the/d_a_npc_the/func_80AFBDF0.s"
}
#pragma pop


