// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_lud
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_lud/d_a_npc_lud.h"

// 
// Types:
// 

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daNpcT_MotionSeqMngr_c {
	struct sequenceStepData_c {
	};

	/* 80145898 */ // False False
void initialize();
	/* 80145A24 */ // False False
void checkEndSequence();
	/* 80A6F518 */ // True False
~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_motionAnmData_c {
};

struct daNpcT_evtData_c {
};

struct J3DJoint {
};

struct daNpcT_faceMotionAnmData_c {
};

struct daNpc_Lud_c {
	/* 80A6ABAC */ // True False
~daNpc_Lud_c();
	/* 80A6ACF4 */ // True False
void create();
	/* 80A6AFA8 */ // True False
void CreateHeap();
	/* 80A6B5FC */ // True False
void Delete();
	/* 80A6B630 */ // True False
void Execute();
	/* 80A6B650 */ // True False
void Draw();
	/* 80A6B6E4 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80A6B704 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 80A6B75C */ // True False
void getType();
	/* 80A6B7CC */ // True False
void isDelete();
	/* 80A6B954 */ // True False
void reset();
	/* 80A6BB1C */ // True False
//  int False
void afterJntAnm(int);
	/* 80A6BBA8 */ // True False
void setParam();
	/* 80A6BD44 */ // True False
void checkChangeEvt();
	/* 80A6BE6C */ // True False
void setAfterTalkMotion();
	/* 80A6BEE4 */ // True False
void srchActors();
	/* 80A6BFA4 */ // True False
void evtTalk();
	/* 80A6C044 */ // True False
void evtCutProc();
	/* 80A6C10C */ // True False
void action();
	/* 80A6C2E4 */ // True False
void beforeMove();
	/* 80A6C3A8 */ // True False
void setAttnPos();
	/* 80A6C8EC */ // True False
void setCollision();
	/* 80A6CA9C */ // True False
//  bool False
bool drawDbgInfo();
	/* 80A6CAA4 */ // True False
void drawOtherMdl();
	/* 80A6CC2C */ // True False
//  int False
//  int False
//  f32 False
void setBowlAnm(int, int, f32);
	/* 80A6CCFC */ // True False
//  int False
//  int False
//  f32 False
//  int False
void afterSetMotionAnm(int, int, f32, int);
	/* 80A6CD30 */ // True False
void selectAction();
	/* 80A6CDF4 */ // True False
//  int (daNpc_Lud_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Lud_c False
void chkAction(int (daNpc_Lud_c::*)(void*));
	/* 80A6CE20 */ // True False
//  int (daNpc_Lud_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Lud_c False
void setAction(int (daNpc_Lud_c::*)(void*));
	/* 80A6CEC8 */ // True False
//  int False
//  int False
void mop(int, int);
	/* 80A6D01C */ // True False
//  int False
void cutHurry(int);
	/* 80A6D160 */ // True False
//  int False
void cutConversationInHotel(int);
	/* 80A6D450 */ // True False
//  int False
void cutConversationAboutDeathMt(int);
	/* 80A6D708 */ // True False
//  int False
void cutConversationAboutGoron(int);
	/* 80A6D998 */ // True False
//  int False
void cutNurse(int);
	/* 80A6DC48 */ // True False
//  int False
void cutClothTry(int);
	/* 80A6DCE8 */ // True False
//  int False
void cutThankYou(int);
	/* 80A6DE14 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80A6E32C */ // True False
//  void* False
// 	 void False
void nurse(void*);
	/* 80A6E6EC */ // True False
//  void* False
// 	 void False
void giveSoup(void*);
	/* 80A6E7EC */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80A6FC04 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpc_Lud_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80A6FCD0 */ // True False
//  bool False
bool getEyeballMaterialNo();
	/* 80A6FCD8 */ // True False
//  s32 False
s32 getHeadJointNo();
	/* 80A6FCE0 */ // True False
//  s32 False
s32 getNeckJointNo();
	/* 80A6FCE8 */ // True False
//  bool False
bool getBackboneJointNo();
	/* 80A6FCF0 */ // True False
//  int False
void checkChangeJoint(int);
	/* 80A6FD00 */ // True False
//  int False
void checkRemoveJoint(int);
};

struct daNpc_Lud_Param_c {
	/* 80A6FD10 */ // True False
~daNpc_Lud_Param_c();
};

struct daNpc_Len_c {
	/* 80A660D8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void checkStartDemo13StbEvt(fopAc_ac_c*, f32, f32, f32, f32, f32, f32, f32);
};

struct J3DModel {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80A6EE84 */ // True False
~cXyz();
	/* 80A6F514 */ // True False
cXyz();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct csXyz {
	/* 80A6EEC0 */ // True False
~csXyz();
	/* 80A6F414 */ // True False
csXyz();
};

struct _GXColorS10 {
};

struct daNpcT_c {
	/* 80147FA4 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
void tgHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
	/* 80148094 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getTrnsfrmKeyAnmP(char const*, int);
	/* 801483F8 */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void loadRes(s8 const*, char const**);
	/* 801484AC */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void deleteRes(s8 const*, char const**);
	/* 8014852C */ // False False
void execute();
	/* 8014886C */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
	/* 80148C70 */ // False False
void setEnvTevColor();
	/* 80148CCC */ // False False
void setRoomNo();
	/* 801490D4 */ // False False
void ctrlBtk();
	/* 80149190 */ // False False
void setMtx();
	/* 8014951C */ // False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 8014997C */ // False False
void evtProc();
	/* 80149BB4 */ // False False
void setFootPos();
	/* 80149D7C */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
void setFootPrtcl(cXyz*, f32, f32);
	/* 8014A05C */ // False False
//  bool False
bool checkCullDraw();
	/* 8014A064 */ // False False
void twilight();
	/* 8014A0B0 */ // False False
void evtOrder();
	/* 8014A224 */ // False False
void evtChange();
	/* 8014A324 */ // False False
void clrParam();
	/* 8014A388 */ // False False
//  int False
//  bool False
void setFaceMotionAnm(int, bool);
	/* 8014A628 */ // False False
//  int False
//  f32 False
//  int False
void setMotionAnm(int, f32, int);
	/* 8014AA18 */ // False False
//  s16 False
void setAngle(s16);
	/* 8014A99C */ // False False
//  csXyz False
void setAngle(csXyz);
	/* 8014AA40 */ // False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
void hitChk(dCcD_GObjInf*, u32);
	/* 8014AAD0 */ // False False
//  int False
//  int False
//  int False
void setDamage(int, int, int);
	/* 8014ABD0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
void chkActorInSight(fopAc_ac_c*, f32, s16);
	/* 8014B338 */ // False False
void srchPlayerActor();
	/* 8014B648 */ // False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
void step(s16, int, int, int, int);
	/* 8014BBF0 */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 8014BC78 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void talkProc(int*, int, fopAc_ac_c**, int);
	/* 8014BE2C */ // False False
//  s16 False
void getNearestActorP(s16);
	/* 80A6EAFC */ // True False
~daNpcT_c();
	/* 80A6F010 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80A6FA08 */ // True False
//  void False
//  int False
void ctrlSubFaceMotion(int);
	/* 80A6FA0C */ // True False
//  s32 False
s32 getFootLJointNo();
	/* 80A6FA14 */ // True False
//  s32 False
s32 getFootRJointNo();
	/* 80A6FA1C */ // True False
//  bool False
bool getEyeballLMaterialNo();
	/* 80A6FA24 */ // True False
//  bool False
bool getEyeballRMaterialNo();
	/* 80A6FA2C */ // True False
//  bool False
bool evtEndProc();
	/* 80A6FA34 */ // True False
//  void False
void afterMoved();
	/* 80A6FA38 */ // True False
//  bool False
bool chkXYItems();
	/* 80A6FA40 */ // True False
void decTmr();
	/* 80A6FA58 */ // True False
//  void False
void drawGhost();
	/* 80A6FA5C */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetFaceMotionAnm(int, int, f32, int);
	/* 80A6FA64 */ // True False
//  daNpcT_faceMotionAnmData_c False
void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
	/* 80A6FA94 */ // True False
//  daNpcT_motionAnmData_c False
void getMotionAnm(daNpcT_motionAnmData_c);
	/* 80A6FAC4 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeAnm(int*, int*);
	/* 80A6FAC8 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBck(int*, int*);
	/* 80A6FACC */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtp(int*, int*);
	/* 80A6FAD0 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtk(int*, int*);
};

struct daNpcT_MatAnm_c {
	/* 80145764 */ // False False
void initialize();
};

struct daNpcT_JntAnm_c {
	/* 80146C98 */ // False False
void initialize();
	/* 80146CD8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
void setParam(fopAc_ac_c*, J3DModel*, cXyz*, int, int, int, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, cXyz*);
	/* 80147C38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void calcJntRad(f32, f32, f32);
	/* 80A6F418 */ // True False
~daNpcT_JntAnm_c();
	/* 80A6F6E4 */ // True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
void setEyeAngleY(cXyz, s16, int, f32, s16);
	/* 80A6F800 */ // True False
//  cXyz False
//  f32 False
//  s16 False
void setEyeAngleX(cXyz, f32, s16);
};

struct daNpcT_DmgStagger_c {
	/* 80147DCC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
void setParam(fopAc_ac_c*, fopAc_ac_c*, s16);
	/* 80147E3C */ // False False
//  int False
void calc(int);
};

struct daNpcT_ActorMngr_c {
	/* 801456D4 */ // False False
void initialize();
	/* 801456E0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801456FC */ // False False
void remove();
	/* 80145708 */ // False False
void getActorP();
	/* 80A6EEFC */ // True False
~daNpcT_ActorMngr_c();
	/* 80A6EF44 */ // True False
daNpcT_ActorMngr_c();
};

struct dSv_info_c {
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 800480EC */ // False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getMySubstanceP(int, char const*, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800483E8 */ // False False
void getRunEventName();
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dDlst_shadowControl_c {
	/* 80055F1C */ // False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
void addReal(u32, J3DModel*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80A6F5D0 */ // True False
~dCcD_GStts();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80A6F62C */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80A6F560 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80A6EF80 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80A6EFC8 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80A6EAB4 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct J3DTexNoAnm {
	/* 80A6B4E8 */ // True False
~J3DTexNoAnm();
	/* 80A6B530 */ // True False
J3DTexNoAnm();
	/* 80A6EA84 */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 80A6B554 */ // True False
~J3DTexMtxAnm();
	/* 80A6B590 */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 80A6B440 */ // True False
~J3DTevKColorAnm();
	/* 80A6B47C */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 80A6B494 */ // True False
~J3DTevColorAnm();
	/* 80A6B4D0 */ // True False
J3DTevColorAnm();
};

struct J3DShapeTable {
	/* 803258A0 */ // False False
void hide();
	/* 803258D8 */ // False False
void show();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 80A6B5A8 */ // True False
~J3DMatColorAnm();
	/* 80A6B5E4 */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80A6F69C */ // True False
~J3DFrameCtrl();
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpc_Lud_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Lud_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Lud_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Lud_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Lud_IsDelete(void*);
// False True
//  int* False
// 	 int False
void cLib_calcTimer__template0(int*);

// True False
extern "C" void __dt__11daNpc_Lud_cFv();
// True False
extern "C" void create__11daNpc_Lud_cFv();
// True False
extern "C" void CreateHeap__11daNpc_Lud_cFv();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
extern "C" void Delete__11daNpc_Lud_cFv();
// True False
extern "C" void Execute__11daNpc_Lud_cFv();
// True False
extern "C" void Draw__11daNpc_Lud_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__11daNpc_Lud_cFP10fopAc_ac_c();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__11daNpc_Lud_cFP8J3DJointi();
// True False
extern "C" void getType__11daNpc_Lud_cFv();
// True False
extern "C" void isDelete__11daNpc_Lud_cFv();
// True False
extern "C" void reset__11daNpc_Lud_cFv();
// True False
//  int False
extern "C" void afterJntAnm__11daNpc_Lud_cFi();
// True False
extern "C" void setParam__11daNpc_Lud_cFv();
// True False
extern "C" void checkChangeEvt__11daNpc_Lud_cFv();
// True False
extern "C" void setAfterTalkMotion__11daNpc_Lud_cFv();
// True False
extern "C" void srchActors__11daNpc_Lud_cFv();
// True False
extern "C" void evtTalk__11daNpc_Lud_cFv();
// True False
extern "C" void evtCutProc__11daNpc_Lud_cFv();
// True False
extern "C" void action__11daNpc_Lud_cFv();
// True False
extern "C" void beforeMove__11daNpc_Lud_cFv();
// True False
extern "C" void setAttnPos__11daNpc_Lud_cFv();
// True False
extern "C" void setCollision__11daNpc_Lud_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__11daNpc_Lud_cFv();
// True False
extern "C" void drawOtherMdl__11daNpc_Lud_cFv();
// True False
//  int False
//  int False
//  f32 False
extern "C" void setBowlAnm__11daNpc_Lud_cFiif();
// True False
//  int False
//  int False
//  f32 False
//  int False
extern "C" void afterSetMotionAnm__11daNpc_Lud_cFiifi();
// True False
extern "C" void selectAction__11daNpc_Lud_cFv();
// True False
//  int (daNpc_Lud_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Lud_c False
extern "C" void chkAction__11daNpc_Lud_cFM11daNpc_Lud_cFPCvPvPv_i();
// True False
//  int (daNpc_Lud_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Lud_c False
extern "C" void setAction__11daNpc_Lud_cFM11daNpc_Lud_cFPCvPvPv_i();
// True False
//  int False
//  int False
extern "C" void mop__11daNpc_Lud_cFii();
// True False
//  int False
extern "C" void cutHurry__11daNpc_Lud_cFi();
// True False
//  int False
extern "C" void cutConversationInHotel__11daNpc_Lud_cFi();
// True False
//  int False
extern "C" void cutConversationAboutDeathMt__11daNpc_Lud_cFi();
// True False
//  int False
extern "C" void cutConversationAboutGoron__11daNpc_Lud_cFi();
// True False
//  int False
extern "C" void cutNurse__11daNpc_Lud_cFi();
// True False
//  int False
extern "C" void cutClothTry__11daNpc_Lud_cFi();
// True False
//  int False
extern "C" void cutThankYou__11daNpc_Lud_cFi();
// True False
//  void* False
// 	 void False
extern "C" void wait__11daNpc_Lud_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void nurse__11daNpc_Lud_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void giveSoup__11daNpc_Lud_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__11daNpc_Lud_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Lud_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Lud_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Lud_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Lud_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpc_Lud_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__8daNpcT_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __ct__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__15daNpcT_JntAnm_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
extern "C" void setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs();
// True False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs();
// True False
//  void False
//  int False
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
// True False
//  s32 False
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool evtEndProc__8daNpcT_cFv();
// True False
//  void False
extern "C" void afterMoved__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool chkXYItems__8daNpcT_cFv();
// True False
extern "C" void decTmr__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawGhost__8daNpcT_cFv();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
// True False
//  daNpcT_faceMotionAnmData_c False
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
// True False
//  daNpcT_motionAnmData_c False
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeAnm__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBck__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtp__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtk__8daNpcT_cFPiPi();
// False True
//  int* False
// 	 int False
extern "C" void func_80A6FAD4();
// False False
extern "C" void __sinit_d_a_npc_lud_cpp();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__11daNpc_Lud_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
//  bool False
extern "C" bool getEyeballMaterialNo__11daNpc_Lud_cFv();
// True False
//  s32 False
extern "C" s32 getHeadJointNo__11daNpc_Lud_cFv();
// True False
//  s32 False
extern "C" s32 getNeckJointNo__11daNpc_Lud_cFv();
// True False
//  bool False
extern "C" bool getBackboneJointNo__11daNpc_Lud_cFv();
// True False
//  int False
extern "C" void checkChangeJoint__11daNpc_Lud_cFi();
// True False
//  int False
extern "C" void checkRemoveJoint__11daNpc_Lud_cFi();
// True False
extern "C" void __dt__17daNpc_Lud_Param_cFv();
// True False
extern "C" static void func_80A6FD58();
// True False
extern "C" static void func_80A6FD60();
extern "C" extern u8 const data_80A6FE0C[36];
extern "C" extern u32 const lit_4059;
extern "C" extern u32 const lit_4060;
extern "C" extern u32 const lit_4061;
extern "C" extern u32 const lit_4062;
extern "C" extern u32 const lit_4063;
extern "C" extern u32 const lit_4219;
extern "C" extern u32 const lit_4220;
extern "C" extern u32 const lit_4633;
extern "C" extern u32 const lit_4634;
extern "C" extern u32 const lit_4927;
extern "C" extern u32 const lit_4928;
extern "C" extern u32 const lit_4929;
extern "C" extern u32 const lit_4930;
extern "C" extern u32 const lit_4931;
extern "C" extern u32 const lit_4932;
extern "C" extern u8 const lit_4994[8];
extern "C" extern u8 const lit_4995[8];
extern "C" extern u8 const lit_4996[8];
extern "C" extern u32 const lit_5046;
extern "C" extern u32 const lit_5047;
extern "C" extern u32 const lit_5048;
extern "C" extern u8 const lit_5494[12];
extern "C" extern u8 const lit_5502[12];
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtList[12];
extern "C" extern u8 l_faceMotionAnmData[560];
extern "C" extern u8 l_motionAnmData[588];
extern "C" extern u8 l_faceMotionSequenceData[304];
extern "C" extern u8 l_motionSequenceData[320];
extern "C" extern void* lit_3833[3];
extern "C" extern void* lit_3834[3];
extern "C" extern void* lit_3835[3];
extern "C" extern void* lit_3836[3];
extern "C" extern void* lit_3837[3];
extern "C" extern void* lit_3838[3];
extern "C" extern void* lit_3839[3];
extern "C" extern void* lit_5162[3];
extern "C" extern void* lit_5164[3];
extern "C" extern void* lit_5166[3];
extern "C" extern void* lit_5168[3];
extern "C" extern void* g_profile_NPC_LUD[12];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__22daNpcT_MotionSeqMngr_c[3];
extern "C" extern void* __vt__18daNpcT_ActorMngr_c[3];
extern "C" extern void* __vt__15daNpcT_JntAnm_c[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__11daNpc_Lud_c[49];
extern "C" extern void* __vt__17daNpc_Lud_Param_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  int False
//  int False
void daNpcT_getDistTableIdx(int, int);
// False False
//  u32 False
void daNpcT_chkEvtBit(u32);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseS(s16*, s16, s16);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void getRunEventName__16dEvent_manager_cFv();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_MatAnm_cFv();
// False False
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void checkEndSequence__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_JntAnm_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void calcJntRad__15daNpcT_JntAnm_cFfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
extern "C" void setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs();
// False False
//  int False
extern "C" void calc__19daNpcT_DmgStagger_cFi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" void tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getTrnsfrmKeyAnmP__8daNpcT_cFPCci();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
// False False
extern "C" void execute__8daNpcT_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
// False False
extern "C" void setEnvTevColor__8daNpcT_cFv();
// False False
extern "C" void setRoomNo__8daNpcT_cFv();
// False False
extern "C" void ctrlBtk__8daNpcT_cFv();
// False False
extern "C" void setMtx__8daNpcT_cFv();
// False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
// False False
extern "C" void evtProc__8daNpcT_cFv();
// False False
extern "C" void setFootPos__8daNpcT_cFv();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
// False False
//  bool False
extern "C" bool checkCullDraw__8daNpcT_cFv();
// False False
extern "C" void twilight__8daNpcT_cFv();
// False False
extern "C" void evtOrder__8daNpcT_cFv();
// False False
extern "C" void evtChange__8daNpcT_cFv();
// False False
extern "C" void clrParam__8daNpcT_cFv();
// False False
//  int False
//  bool False
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
// False False
//  int False
//  f32 False
//  int False
extern "C" void setMotionAnm__8daNpcT_cFifi();
// False False
//  csXyz False
extern "C" void setAngle__8daNpcT_cF5csXyz();
// False False
//  s16 False
extern "C" void setAngle__8daNpcT_cFs();
// False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
extern "C" void hitChk__8daNpcT_cFP12dCcD_GObjInfUl();
// False False
//  int False
//  int False
//  int False
extern "C" void setDamage__8daNpcT_cFiii();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
extern "C" void chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs();
// False False
extern "C" void srchPlayerActor__8daNpcT_cFv();
// False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
extern "C" void step__8daNpcT_cFsiiii();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
// False False
//  s16 False
extern "C" void getNearestActorP__8daNpcT_cFs();
// False False
//  int False
//  int False
extern "C" void daNpcT_getDistTableIdx__Fii();
// False False
//  u32 False
extern "C" void daNpcT_chkEvtBit__FUl();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseS__FPsss();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void hide__13J3DShapeTableFv();
// False False
extern "C" void show__13J3DShapeTableFv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcT_c[68];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__15daNpcT_MatAnm_c[4 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void checkStartDemo13StbEvt__11daNpc_Len_cFP10fopAc_ac_cfffffff();
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80A6FD7C-80A6FE0C 0090+00 s=10 e=0 z=0  None .rodata    m__17daNpc_Lud_Param_c                                       */
SECTION_RODATA static u8 const m__17daNpc_Lud_Param_c[144] = {
	0x43, 0x20, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
	0xC1, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x70, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
	0x42, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};

/* 80A6FE0C-80A6FE30 0024+00 s=0 e=0 z=0  None .rodata    heapSize$3993                                                */
SECTION_RODATA u8 const data_80A6FE0C[36] = {
	0x00, 0x00, 0x3E, 0xF0, 0x00, 0x00, 0x3E, 0xF0, 0x00, 0x00, 0x3E, 0xF0, 0x00, 0x00, 0x3E, 0xF0,
	0x00, 0x00, 0x46, 0xD0, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x46, 0xE0, 0x00, 0x00, 0x3E, 0xF0,
	0x00, 0x00, 0x00, 0x00,
};

/* 80A6FE30-80A6FE34 0004+00 s=0 e=0 z=0  None .rodata    @4059                                                        */
SECTION_RODATA u32 const lit_4059 = 0xC3480000;

/* 80A6FE34-80A6FE38 0004+00 s=0 e=0 z=0  None .rodata    @4060                                                        */
SECTION_RODATA u32 const lit_4060 = 0xC2C80000;

/* 80A6FE38-80A6FE3C 0004+00 s=0 e=0 z=0  None .rodata    @4061                                                        */
SECTION_RODATA u32 const lit_4061 = 0x43480000;

/* 80A6FE3C-80A6FE40 0004+00 s=0 e=0 z=0  None .rodata    @4062                                                        */
SECTION_RODATA u32 const lit_4062 = 0x43960000;

/* 80A6FE40-80A6FE44 0004+00 s=0 e=0 z=0  None .rodata    @4063                                                        */
SECTION_RODATA u32 const lit_4063 = 0xCE6E6B28;

/* 80A6FE44-80A6FE48 0004+00 s=10 e=0 z=0  None .rodata    @4218                                                        */
SECTION_RODATA static u8 const lit_4218[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A6FE48-80A6FE4C 0004+00 s=0 e=0 z=0  None .rodata    @4219                                                        */
SECTION_RODATA u32 const lit_4219 = 0x47800000;

/* 80A6FE4C-80A6FE50 0004+00 s=0 e=0 z=0  None .rodata    @4220                                                        */
SECTION_RODATA u32 const lit_4220 = 0x3E4CCCCD;

/* 80A6FE50-80A6FE54 0004+00 s=2 e=0 z=0  None .rodata    @4421                                                        */
SECTION_RODATA static u32 const lit_4421 = 0x3F800000;

/* 80A6FE54-80A6FE58 0004+00 s=1 e=0 z=0  None .rodata    @4470                                                        */
SECTION_RODATA static u32 const lit_4470 = 0x42C80000;

/* 80A6FE58-80A6FE5C 0004+00 s=0 e=0 z=0  None .rodata    @4633                                                        */
SECTION_RODATA u32 const lit_4633 = 0x42F00000;

/* 80A6FE5C-80A6FE60 0004+00 s=0 e=0 z=0  None .rodata    @4634                                                        */
SECTION_RODATA u32 const lit_4634 = 0x43FA0000;

/* 80A6FE60-80A6FE64 0004+00 s=6 e=0 z=0  None .rodata    @4680                                                        */
SECTION_RODATA static u32 const lit_4680 = 0xBF800000;

/* 80A6FE64-80A6FE68 0004+00 s=0 e=0 z=0  None .rodata    @4927                                                        */
SECTION_RODATA u32 const lit_4927 = 0x40A00000;

/* 80A6FE68-80A6FE6C 0004+00 s=0 e=0 z=0  None .rodata    @4928                                                        */
SECTION_RODATA u32 const lit_4928 = 0x41F00000;

/* 80A6FE6C-80A6FE70 0004+00 s=0 e=0 z=0  None .rodata    @4929                                                        */
SECTION_RODATA u32 const lit_4929 = 0x38C90FDB;

/* 80A6FE70-80A6FE74 0004+00 s=0 e=0 z=0  None .rodata    @4930                                                        */
SECTION_RODATA u32 const lit_4930 = 0x42BC0000;

/* 80A6FE74-80A6FE78 0004+00 s=0 e=0 z=0  None .rodata    @4931                                                        */
SECTION_RODATA u32 const lit_4931 = 0x43200000;

/* 80A6FE78-80A6FE7C 0004+00 s=0 e=0 z=0  None .rodata    @4932                                                        */
SECTION_RODATA u32 const lit_4932 = 0xC29E0000;

/* 80A6FE7C-80A6FE84 0008+00 s=1 e=0 z=0  None .rodata    @4934                                                        */
SECTION_RODATA static u8 const lit_4934[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80A6FE84-80A6FE8C 0008+00 s=0 e=0 z=0  None .rodata    @4994                                                        */
SECTION_RODATA u8 const lit_4994[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A6FE8C-80A6FE94 0008+00 s=0 e=0 z=0  None .rodata    @4995                                                        */
SECTION_RODATA u8 const lit_4995[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A6FE94-80A6FE9C 0008+00 s=0 e=0 z=0  None .rodata    @4996                                                        */
SECTION_RODATA u8 const lit_4996[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A6FE9C-80A6FEA0 0004+00 s=0 e=0 z=0  None .rodata    @5046                                                        */
SECTION_RODATA u32 const lit_5046 = 0x43050F5C;

/* 80A6FEA0-80A6FEA4 0004+00 s=0 e=0 z=0  None .rodata    @5047                                                        */
SECTION_RODATA u32 const lit_5047 = 0x4028F5C3;

/* 80A6FEA4-80A6FEA8 0004+00 s=0 e=0 z=0  None .rodata    @5048                                                        */
SECTION_RODATA u32 const lit_5048 = 0xC2B20000;

/* 80A6FEA8-80A6FEB0 0008+00 s=1 e=0 z=0  None .rodata    jointNo$5056                                                 */
SECTION_RODATA static u8 const jointNo[8] = {
	0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x14,
};

/* 80A6FEB0-80A6FEB4 0004+00 s=1 e=0 z=0  None .rodata    @5221                                                        */
SECTION_RODATA static u32 const lit_5221 = 0x40800000;

/* 80A6FEB4-80A6FEC0 000C+00 s=0 e=0 z=0  None .rodata    @5494                                                        */
SECTION_RODATA u8 const lit_5494[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A6FEC0-80A6FECC 000C+00 s=0 e=0 z=0  None .rodata    @5502                                                        */
SECTION_RODATA u8 const lit_5502[12] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80A6FECC-80A6FEE4 0018+00 s=12 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80A6FECC[24] = {
	/* 80A6FECC 0001 stringBase_80A6FECC @stringBase0 */
	0x00,
	/* 80A6FECD 000C data_80A6FECD None */
	0x4E, 0x4F, 0x5F, 0x52, 0x45, 0x53, 0x50, 0x4F, 0x4E, 0x53, 0x45, 0x00,
	/* 80A6FED9 000B data_80A6FED9 None */
	0x44, 0x45, 0x4D, 0x4F, 0x31, 0x33, 0x5F, 0x53, 0x54, 0x42, 0x00,
};

/* 80A6FEE4-80A6FF0C 0028+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80A6FEE4[40] = {
	/* 80A6FEE4 0019 data_80A6FEE4 None */
	0x43, 0x4F, 0x4E, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x41, 0x42, 0x4F,
	0x55, 0x54, 0x5F, 0x47, 0x4F, 0x52, 0x4F, 0x4E, 0x00,
	/* 80A6FEFD 0006 data_80A6FEFD None */
	0x4E, 0x55, 0x52, 0x53, 0x45, 0x00,
	/* 80A6FF03 0009 data_80A6FF03 None */
	0x47, 0x4F, 0x5F, 0x41, 0x48, 0x45, 0x41, 0x44, 0x00,
};

/* 80A6FF0C-80A6FF10 0004+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u32 const data_80A6FF0C = 0x4C756400;

/* 80A6FF10-80A6FF1C 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80A6FF10[12] = {
	/* 80A6FF10 0007 data_80A6FF10 None */
	0x4C, 0x75, 0x64, 0x5F, 0x54, 0x57, 0x00,
	/* 80A6FF17 0005 data_80A6FF17 None */
	0x4C, 0x75, 0x64, 0x31, 0x00,
};

/* 80A6FF1C-80A6FF2C 0010+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80A6FF1C[16] = {
	/* 80A6FF1C 0005 data_80A6FF1C None */
	0x4C, 0x75, 0x64, 0x32, 0x00,
	/* 80A6FF21 0005 data_80A6FF21 None */
	0x4C, 0x65, 0x6E, 0x31, 0x00,
	/* 80A6FF26 0006 data_80A6FF26 None */
	0x48, 0x55, 0x52, 0x52, 0x59, 0x00,
};

/* 80A6FF2C-80A6FFCC 00A0+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80A6FF2C[160] = {
	/* 80A6FF2C 0016 data_80A6FF2C None */
	0x43, 0x4F, 0x4E, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x49, 0x4E, 0x5F,
	0x48, 0x4F, 0x54, 0x45, 0x4C, 0x00,
	/* 80A6FF42 001B data_80A6FF42 None */
	0x43, 0x4F, 0x4E, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x41, 0x42, 0x4F,
	0x55, 0x54, 0x5F, 0x44, 0x45, 0x41, 0x54, 0x48, 0x4D, 0x54, 0x00,
	/* 80A6FF5D 000A data_80A6FF5D None */
	0x43, 0x4C, 0x4F, 0x54, 0x48, 0x5F, 0x54, 0x52, 0x59, 0x00,
	/* 80A6FF67 0065 data_80A6FF67 None */
	0x54, 0x48, 0x41, 0x4E, 0x4B, 0x5F, 0x59, 0x4F, 0x55, 0x00, 0x70, 0x72, 0x6D, 0x00, 0x74, 0x69,
	0x6D, 0x65, 0x72, 0x00, 0x74, 0x69, 0x6D, 0x65, 0x72, 0x31, 0x00, 0x74, 0x69, 0x6D, 0x65, 0x72,
	0x32, 0x00, 0x6D, 0x73, 0x67, 0x4E, 0x6F, 0x00, 0x45, 0x56, 0x54, 0x5F, 0x43, 0x4F, 0x4E, 0x56,
	0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x49, 0x4E, 0x5F, 0x48, 0x4F, 0x54, 0x45,
	0x4C, 0x31, 0x5F, 0x65, 0x00, 0x45, 0x56, 0x54, 0x5F, 0x43, 0x4F, 0x4E, 0x56, 0x45, 0x52, 0x53,
	0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x49, 0x4E, 0x5F, 0x48, 0x4F, 0x54, 0x45, 0x4C, 0x32, 0x5F,
	0x65, 0x00, 0x00, 0x00, 0x00,
};

/* 80A6FFCC-80A6FFD8 000C+00 s=3 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A6FFD8-80A6FFEC 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80A6FFEC-80A70014 0028+00 s=1 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[40] = {
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x04,
};

/* 80A70014-80A70044 0030+00 s=0 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA void* l_evtList[12] = {
	(void*)(((char*)&struct_80A6FECC)+0x0) /* @stringBase0 */,
	(void*)NULL,
	(void*)(((char*)&struct_80A6FECC)+0x1) /* None */,
	(void*)NULL,
	(void*)(((char*)&struct_80A6FECC)+0xD) /* None */,
	(void*)NULL,
	(void*)(((char*)&struct_80A6FEE4)+0x0) /* None */,
	(void*)0x00000004,
	(void*)(((char*)&struct_80A6FEE4)+0x19) /* None */,
	(void*)0x00000004,
	(void*)(((char*)&struct_80A6FEE4)+0x1F) /* None */,
	(void*)0x00000004,
};

/* 80A70044-80A7005C 0018+00 s=3 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[6] = {
	(void*)(((char*)&struct_80A6FECC)+0x0) /* @stringBase0 */,
	(void*)&data_80A6FF0C,
	(void*)(((char*)&struct_80A6FF10)+0x0) /* None */,
	(void*)(((char*)&struct_80A6FF10)+0x7) /* None */,
	(void*)(((char*)&struct_80A6FF1C)+0x0) /* None */,
	(void*)(((char*)&struct_80A6FF1C)+0x5) /* None */,
};

/* 80A7005C-80A70060 0003+01 s=1 e=0 z=0  None .data      l_loadResPtrn0                                               */
SECTION_DATA static u8 l_loadResPtrn0[3 + 1 /* padding */] = {
	0x01, 0x03, 0xFF,
	/* padding */
	0x00,
};

/* 80A70060-80A70064 0003+01 s=1 e=0 z=0  None .data      l_loadResPtrn1                                               */
SECTION_DATA static u8 l_loadResPtrn1[3 + 1 /* padding */] = {
	0x01, 0x02, 0xFF,
	/* padding */
	0x00,
};

/* 80A70064-80A70068 0003+01 s=1 e=0 z=0  None .data      l_loadResPtrn2                                               */
SECTION_DATA static u8 l_loadResPtrn2[3 + 1 /* padding */] = {
	0x01, 0x04, 0xFF,
	/* padding */
	0x00,
};

/* 80A70068-80A70070 0005+03 s=1 e=0 z=0  None .data      l_loadResPtrn9                                               */
SECTION_DATA static u8 l_loadResPtrn9[5 + 3 /* padding */] = {
	0x01, 0x02, 0x03, 0x04, 0xFF,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 80A70070-80A70094 0024+00 s=1 e=0 z=0  None .data      l_loadResPtrnList                                            */
SECTION_DATA static void* l_loadResPtrnList[9] = {
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn1,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn2,
	(void*)&l_loadResPtrn2,
	(void*)&l_loadResPtrn2,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn9,
};

/* 80A70094-80A702C4 0230+00 s=0 e=0 z=0  None .data      l_faceMotionAnmData                                          */
SECTION_DATA u8 l_faceMotionAnmData[560] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x31,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x39,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2C,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x35,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
};

/* 80A702C4-80A70510 024C+00 s=0 e=0 z=0  None .data      l_motionAnmData                                              */
SECTION_DATA u8 l_motionAnmData[588] = {
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A70510-80A70640 0130+00 s=0 e=0 z=0  None .data      l_faceMotionSequenceData                                     */
SECTION_DATA u8 l_faceMotionSequenceData[304] = {
	0x00, 0x01, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x01, 0x00, 0x08, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0F, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0x00, 0x01, 0x00, 0x05, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x11, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0xFF, 0x01, 0x00, 0x0C, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0D, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x10, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x12, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x13, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0E, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80A70640-80A70780 0140+00 s=0 e=0 z=0  None .data      l_motionSequenceData                                         */
SECTION_DATA u8 l_motionSequenceData[320] = {
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x01, 0xFF, 0x01, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x10, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x01, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x01, 0x00, 0x0B, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x01, 0x00, 0x0A, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x12, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0C, 0xFF, 0x01, 0x00, 0x0D, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0E, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x11, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x13, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x14, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0x03, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0F, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80A70780-80A707A0 0020+00 s=1 e=0 z=0  None .data      mCutNameList__11daNpc_Lud_c                                  */
SECTION_DATA static void* mCutNameList__11daNpc_Lud_c[8] = {
	(void*)(((char*)&struct_80A6FECC)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80A6FF1C)+0xA) /* None */,
	(void*)(((char*)&struct_80A6FF2C)+0x0) /* None */,
	(void*)(((char*)&struct_80A6FF2C)+0x16) /* None */,
	(void*)(((char*)&struct_80A6FEE4)+0x0) /* None */,
	(void*)(((char*)&struct_80A6FEE4)+0x19) /* None */,
	(void*)(((char*)&struct_80A6FF2C)+0x31) /* None */,
	(void*)(((char*)&struct_80A6FF2C)+0x3B) /* None */,
};

/* 80A707A0-80A707AC 000C+00 s=0 e=0 z=0  None .data      @3833                                                        */
SECTION_DATA void* lit_3833[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutHurry__11daNpc_Lud_cFi,
};

/* 80A707AC-80A707B8 000C+00 s=0 e=0 z=0  None .data      @3834                                                        */
SECTION_DATA void* lit_3834[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutConversationInHotel__11daNpc_Lud_cFi,
};

/* 80A707B8-80A707C4 000C+00 s=0 e=0 z=0  None .data      @3835                                                        */
SECTION_DATA void* lit_3835[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutConversationAboutDeathMt__11daNpc_Lud_cFi,
};

/* 80A707C4-80A707D0 000C+00 s=0 e=0 z=0  None .data      @3836                                                        */
SECTION_DATA void* lit_3836[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutConversationAboutGoron__11daNpc_Lud_cFi,
};

/* 80A707D0-80A707DC 000C+00 s=0 e=0 z=0  None .data      @3837                                                        */
SECTION_DATA void* lit_3837[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutNurse__11daNpc_Lud_cFi,
};

/* 80A707DC-80A707E8 000C+00 s=0 e=0 z=0  None .data      @3838                                                        */
SECTION_DATA void* lit_3838[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutClothTry__11daNpc_Lud_cFi,
};

/* 80A707E8-80A707F4 000C+00 s=0 e=0 z=0  None .data      @3839                                                        */
SECTION_DATA void* lit_3839[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutThankYou__11daNpc_Lud_cFi,
};

/* 80A707F4-80A70854 0060+00 s=1 e=0 z=0  None .data      mCutList__11daNpc_Lud_c                                      */
SECTION_DATA static u8 mCutList__11daNpc_Lud_c[96] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A70854-80A70874 0020+00 s=1 e=0 z=0  None .data      @4501                                                        */
SECTION_DATA static void* lit_4501[8] = {
	(void*)(((char*)getType__11daNpc_Lud_cFv)+0x28),
	(void*)(((char*)getType__11daNpc_Lud_cFv)+0x30),
	(void*)(((char*)getType__11daNpc_Lud_cFv)+0x38),
	(void*)(((char*)getType__11daNpc_Lud_cFv)+0x40),
	(void*)(((char*)getType__11daNpc_Lud_cFv)+0x48),
	(void*)(((char*)getType__11daNpc_Lud_cFv)+0x50),
	(void*)(((char*)getType__11daNpc_Lud_cFv)+0x58),
	(void*)(((char*)getType__11daNpc_Lud_cFv)+0x60),
};

/* 80A70874-80A70894 0020+00 s=1 e=0 z=0  None .data      @4528                                                        */
SECTION_DATA static void* lit_4528[8] = {
	(void*)(((char*)isDelete__11daNpc_Lud_cFv)+0x34),
	(void*)(((char*)isDelete__11daNpc_Lud_cFv)+0x64),
	(void*)(((char*)isDelete__11daNpc_Lud_cFv)+0x6C),
	(void*)(((char*)isDelete__11daNpc_Lud_cFv)+0x9C),
	(void*)(((char*)isDelete__11daNpc_Lud_cFv)+0xCC),
	(void*)(((char*)isDelete__11daNpc_Lud_cFv)+0xFC),
	(void*)(((char*)isDelete__11daNpc_Lud_cFv)+0x12C),
	(void*)(((char*)isDelete__11daNpc_Lud_cFv)+0x15C),
};

/* 80A70894-80A708A0 000C+00 s=1 e=0 z=0  None .data      @4639                                                        */
SECTION_DATA static void* lit_4639[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__11daNpc_Lud_cFPv,
};

/* 80A708A0-80A708AC 000C+00 s=1 e=0 z=0  None .data      @4698                                                        */
SECTION_DATA static void* lit_4698[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__11daNpc_Lud_cFPv,
};

/* 80A708AC-80A708B8 000C+00 s=1 e=0 z=0  None .data      @4703                                                        */
SECTION_DATA static void* lit_4703[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__11daNpc_Lud_cFPv,
};

/* 80A708B8-80A70960 00A8+00 s=1 e=0 z=0  None .data      bowlAnmData$5135                                             */
SECTION_DATA static u8 bowlAnmData[168] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x04,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

/* 80A70960-80A7096C 000C+00 s=0 e=0 z=0  None .data      @5162                                                        */
SECTION_DATA void* lit_5162[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)nurse__11daNpc_Lud_cFPv,
};

/* 80A7096C-80A70978 000C+00 s=0 e=0 z=0  None .data      @5164                                                        */
SECTION_DATA void* lit_5164[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)giveSoup__11daNpc_Lud_cFPv,
};

/* 80A70978-80A70984 000C+00 s=0 e=0 z=0  None .data      @5166                                                        */
SECTION_DATA void* lit_5166[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)nurse__11daNpc_Lud_cFPv,
};

/* 80A70984-80A70990 000C+00 s=0 e=0 z=0  None .data      @5168                                                        */
SECTION_DATA void* lit_5168[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__11daNpc_Lud_cFPv,
};

/* 80A70990-80A709B0 0020+00 s=1 e=0 z=0  None .data      daNpc_Lud_MethodTable                                        */
SECTION_DATA static void* daNpc_Lud_MethodTable[8] = {
	(void*)daNpc_Lud_Create__FPv,
	(void*)daNpc_Lud_Delete__FPv,
	(void*)daNpc_Lud_Execute__FPv,
	(void*)daNpc_Lud_IsDelete__FPv,
	(void*)daNpc_Lud_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80A709B0-80A709E0 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_LUD                                            */
SECTION_DATA void* g_profile_NPC_LUD[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02510000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000FDC,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01520000,
	(void*)&daNpc_Lud_MethodTable,
	(void*)0x00040108,
	(void*)0x040E0000,
};

/* 80A709E0-80A709EC 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80A709EC-80A709F8 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80A709F8-80A70A1C 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80A6FD60,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80A6FD58,
};

/* 80A70A1C-80A70A28 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80A70A28-80A70A34 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80A70A34-80A70A40 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80A70A40-80A70A4C 000C+00 s=3 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c                               */
SECTION_DATA void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80A70A4C-80A70A58 000C+00 s=5 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcT_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80A70A58-80A70A64 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c                                      */
SECTION_DATA void* __vt__15daNpcT_JntAnm_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80A70A64-80A70A70 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80A70A70-80A70A7C 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80A70A7C-80A70B40 00C4+00 s=2 e=0 z=0  None .data      __vt__11daNpc_Lud_c                                          */
SECTION_DATA void* __vt__11daNpc_Lud_c[49] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__11daNpc_Lud_cFv,
	(void*)ctrlBtk__8daNpcT_cFv,
	(void*)ctrlSubFaceMotion__8daNpcT_cFi,
	(void*)checkChangeJoint__11daNpc_Lud_cFi,
	(void*)checkRemoveJoint__11daNpc_Lud_cFi,
	(void*)getBackboneJointNo__11daNpc_Lud_cFv,
	(void*)getNeckJointNo__11daNpc_Lud_cFv,
	(void*)getHeadJointNo__11daNpc_Lud_cFv,
	(void*)getFootLJointNo__8daNpcT_cFv,
	(void*)getFootRJointNo__8daNpcT_cFv,
	(void*)getEyeballLMaterialNo__8daNpcT_cFv,
	(void*)getEyeballRMaterialNo__8daNpcT_cFv,
	(void*)getEyeballMaterialNo__11daNpc_Lud_cFv,
	(void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
	(void*)afterJntAnm__11daNpc_Lud_cFi,
	(void*)setParam__11daNpc_Lud_cFv,
	(void*)checkChangeEvt__11daNpc_Lud_cFv,
	(void*)evtTalk__11daNpc_Lud_cFv,
	(void*)evtEndProc__8daNpcT_cFv,
	(void*)evtCutProc__11daNpc_Lud_cFv,
	(void*)setAfterTalkMotion__11daNpc_Lud_cFv,
	(void*)evtProc__8daNpcT_cFv,
	(void*)action__11daNpc_Lud_cFv,
	(void*)beforeMove__11daNpc_Lud_cFv,
	(void*)afterMoved__8daNpcT_cFv,
	(void*)setAttnPos__11daNpc_Lud_cFv,
	(void*)setFootPos__8daNpcT_cFv,
	(void*)setCollision__11daNpc_Lud_cFv,
	(void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
	(void*)checkCullDraw__8daNpcT_cFv,
	(void*)twilight__8daNpcT_cFv,
	(void*)chkXYItems__8daNpcT_cFv,
	(void*)evtOrder__8daNpcT_cFv,
	(void*)decTmr__8daNpcT_cFv,
	(void*)clrParam__8daNpcT_cFv,
	(void*)drawDbgInfo__11daNpc_Lud_cFv,
	(void*)drawOtherMdl__11daNpc_Lud_cFv,
	(void*)drawGhost__8daNpcT_cFv,
	(void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
	(void*)afterSetMotionAnm__11daNpc_Lud_cFiifi,
	(void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
	(void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
	(void*)changeAnm__8daNpcT_cFPiPi,
	(void*)changeBck__8daNpcT_cFPiPi,
	(void*)changeBtp__8daNpcT_cFPiPi,
	(void*)changeBtk__8daNpcT_cFPiPi,
	(void*)setMotionAnm__8daNpcT_cFifi,
};

/* 80A6ABAC-80A6ACF4 0148+00 s=1 e=0 z=0  None .text      __dt__11daNpc_Lud_cFv                                        */
//	80A6ABCC: 80A70A7C (__vt__11daNpc_Lud_c)
//	80A6ABD0: 80A70A7C (__vt__11daNpc_Lud_c)
//	80A6ABE4: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80A6ABF4: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80A6AC04: 80A70070 (l_loadResPtrnList)
//	80A6AC08: 80A70070 (l_loadResPtrnList)
//	80A6AC10: 80A70044 (l_resNameList)
//	80A6AC14: 80A70044 (l_resNameList)
//	80A6AC18: 801484AC (deleteRes__8daNpcT_cFPCScPPCc)
//	80A6AC20: 80A6EEFC (__dt__18daNpcT_ActorMngr_cFv)
//	80A6AC24: 80A6EEFC (__dt__18daNpcT_ActorMngr_cFv)
//	80A6AC30: 80361CE8 (__destroy_arr)
//	80A6AC3C: 803AC050 (__vt__8dCcD_Cyl)
//	80A6AC40: 803AC050 (__vt__8dCcD_Cyl)
//	80A6AC60: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A6AC64: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A6AC7C: 80A70A70 (__vt__8cM3dGCyl)
//	80A6AC80: 80A70A70 (__vt__8cM3dGCyl)
//	80A6AC90: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A6AC94: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A6ACA4: 80A70A64 (__vt__8cM3dGAab)
//	80A6ACA8: 80A70A64 (__vt__8cM3dGAab)
//	80A6ACB8: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80A6ACC4: 80A6EAFC (__dt__8daNpcT_cFv)
//	80A6ACD4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Lud_c::~daNpc_Lud_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6ACF4-80A6AFA8 02B4+00 s=1 e=0 z=0  None .text      create__11daNpc_Lud_cFv                                      */
//	80A6AD04: 803621DC (_savegpr_29)
//	80A6AD0C: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6AD10: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6AD14: 80A6FFCC (cNullVec__6Z2Calc)
//	80A6AD18: 80A6FFCC (cNullVec__6Z2Calc)
//	80A6AD54: 80A6FC04 (__ct__11daNpc_Lud_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80A6AD68: 80A6B75C (getType__11daNpc_Lud_cFv)
//	80A6AD8C: 801AC57C (dKy_darkworld_check__Fv)
//	80A6ADAC: 801483F8 (loadRes__8daNpcT_cFPCScPPCc)
//	80A6ADC0: 80A6B7CC (isDelete__11daNpc_Lud_cFv)
//	80A6ADD8: 80A6B6E4 (createHeapCallBack__11daNpc_Lud_cFP10fopAc_ac_c)
//	80A6ADDC: 80A6B6E4 (createHeapCallBack__11daNpc_Lud_cFP10fopAc_ac_c)
//	80A6ADF0: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80A6AE30: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80A6AE48: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80A6AE50: 80A6B954 (reset__11daNpc_Lud_cFv)
//	80A6AE7C: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80A6AEA0: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80A6AEA8: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80A6AEAC: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80A6AEB0: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80A6AEBC: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80A6AEC0: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80A6AECC: 804061C0 (g_dComIfG_gameInfo)
//	80A6AED0: 804061C0 (g_dComIfG_gameInfo)
//	80A6AED8: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80A6AF68: 80148C70 (setEnvTevColor__8daNpcT_cFv)
//	80A6AF70: 80148CCC (setRoomNo__8daNpcT_cFv)
//	80A6AF80: 80A6B630 (Execute__11daNpc_Lud_cFv)
//	80A6AF94: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/create__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6AFA8-80A6B440 0498+00 s=1 e=0 z=0  None .text      CreateHeap__11daNpc_Lud_cFv                                  */
//	80A6AFB8: 803621D8 (_savegpr_28)
//	80A6AFCC: 80A6FFEC (l_bmdData)
//	80A6AFD0: 80A6FFEC (l_bmdData)
//	80A6AFE8: 80A70044 (l_resNameList)
//	80A6AFEC: 80A70044 (l_resNameList)
//	80A6AFF4: 804061C0 (g_dComIfG_gameInfo)
//	80A6AFF8: 804061C0 (g_dComIfG_gameInfo)
//	80A6B00C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80A6B024: 802CEC4C (__nw__FUl)
//	80A6B060: 80A6FE50 (lit_4421)
//	80A6B064: 80A6FE50 (lit_4421)
//	80A6B070: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80A6B0A0: 80A6B704 (ctrlJointCallBack__11daNpc_Lud_cFP8J3DJointi)
//	80A6B0A4: 80A6B704 (ctrlJointCallBack__11daNpc_Lud_cFP8J3DJointi)
//	80A6B0D8: 802CEC4C (__nw__FUl)
//	80A6B0E8: 803CEE60 (__vt__14J3DMaterialAnm)
//	80A6B0EC: 803CEE60 (__vt__14J3DMaterialAnm)
//	80A6B0F8: 80A6B5E4 (__ct__14J3DMatColorAnmFv)
//	80A6B0FC: 80A6B5E4 (__ct__14J3DMatColorAnmFv)
//	80A6B100: 80A6B5A8 (__dt__14J3DMatColorAnmFv)
//	80A6B104: 80A6B5A8 (__dt__14J3DMatColorAnmFv)
//	80A6B110: 80361D60 (__construct_array)
//	80A6B118: 80A6B590 (__ct__12J3DTexMtxAnmFv)
//	80A6B11C: 80A6B590 (__ct__12J3DTexMtxAnmFv)
//	80A6B120: 80A6B554 (__dt__12J3DTexMtxAnmFv)
//	80A6B124: 80A6B554 (__dt__12J3DTexMtxAnmFv)
//	80A6B130: 80361D60 (__construct_array)
//	80A6B138: 80A6B530 (__ct__11J3DTexNoAnmFv)
//	80A6B13C: 80A6B530 (__ct__11J3DTexNoAnmFv)
//	80A6B140: 80A6B4E8 (__dt__11J3DTexNoAnmFv)
//	80A6B144: 80A6B4E8 (__dt__11J3DTexNoAnmFv)
//	80A6B150: 80361D60 (__construct_array)
//	80A6B158: 80A6B4D0 (__ct__14J3DTevColorAnmFv)
//	80A6B15C: 80A6B4D0 (__ct__14J3DTevColorAnmFv)
//	80A6B160: 80A6B494 (__dt__14J3DTevColorAnmFv)
//	80A6B164: 80A6B494 (__dt__14J3DTevColorAnmFv)
//	80A6B170: 80361D60 (__construct_array)
//	80A6B178: 80A6B47C (__ct__15J3DTevKColorAnmFv)
//	80A6B17C: 80A6B47C (__ct__15J3DTevKColorAnmFv)
//	80A6B180: 80A6B440 (__dt__15J3DTevKColorAnmFv)
//	80A6B184: 80A6B440 (__dt__15J3DTevKColorAnmFv)
//	80A6B190: 80361D60 (__construct_array)
//	80A6B198: 8032C320 (initialize__14J3DMaterialAnmFv)
//	80A6B19C: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80A6B1A0: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80A6B1AC: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80A6B1D4: 80A6FFEC (l_bmdData)
//	80A6B1D8: 80A6FFEC (l_bmdData)
//	80A6B1E8: 80A70044 (l_resNameList)
//	80A6B1EC: 80A70044 (l_resNameList)
//	80A6B1FC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80A6B208: 802CEC4C (__nw__FUl)
//	80A6B244: 80A6FE50 (lit_4421)
//	80A6B248: 80A6FE50 (lit_4421)
//	80A6B254: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80A6B294: 80A6FFEC (l_bmdData)
//	80A6B298: 80A6FFEC (l_bmdData)
//	80A6B2B0: 80A70044 (l_resNameList)
//	80A6B2B4: 80A70044 (l_resNameList)
//	80A6B2C4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80A6B2E4: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80A6B30C: 80A6FFEC (l_bmdData)
//	80A6B310: 80A6FFEC (l_bmdData)
//	80A6B328: 80A70044 (l_resNameList)
//	80A6B32C: 80A70044 (l_resNameList)
//	80A6B33C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80A6B35C: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80A6B390: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	80A6B3A4: 80A6FE44 (lit_4218)
//	80A6B3A8: 80A6FE44 (lit_4218)
//	80A6B3E4: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	80A6B3F8: 80A6FE44 (lit_4218)
//	80A6B3FC: 80A6FE44 (lit_4218)
//	80A6B42C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/CreateHeap__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6B440-80A6B47C 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	80A6B460: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80A6B47C-80A6B494 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80A6B494-80A6B4D0 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	80A6B4B4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80A6B4D0-80A6B4E8 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80A6B4E8-80A6B530 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	80A6B500: 80A709E0 (__vt__11J3DTexNoAnm)
//	80A6B504: 80A709E0 (__vt__11J3DTexNoAnm)
//	80A6B514: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80A6B530-80A6B554 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	80A6B530: 80A709E0 (__vt__11J3DTexNoAnm)
//	80A6B534: 80A709E0 (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80A6B554-80A6B590 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	80A6B574: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80A6B590-80A6B5A8 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80A6B5A8-80A6B5E4 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	80A6B5C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80A6B5E4-80A6B5FC 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80A6B5FC-80A6B630 0034+00 s=1 e=0 z=0  None .text      Delete__11daNpc_Lud_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/Delete__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6B630-80A6B650 0020+00 s=2 e=0 z=0  None .text      Execute__11daNpc_Lud_cFv                                     */
//	80A6B63C: 8014852C (execute__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/Execute__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6B650-80A6B6E4 0094+00 s=1 e=0 z=0  None .text      Draw__11daNpc_Lud_cFv                                        */
//	80A6B660: 803621DC (_savegpr_29)
//	80A6B6B4: 80A6FE54 (lit_4470)
//	80A6B6B8: 80A6FE54 (lit_4470)
//	80A6B6C8: 8014886C (draw__8daNpcT_cFiifP11_GXColorS10fiii)
//	80A6B6D0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/Draw__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6B6E4-80A6B704 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__11daNpc_Lud_cFP10fopAc_ac_c              */
//	80A6B6F0: 80A6AFA8 (CreateHeap__11daNpc_Lud_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpc_Lud_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/createHeapCallBack__11daNpc_Lud_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80A6B704-80A6B75C 0058+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__11daNpc_Lud_cFP8J3DJointi                 */
//	80A6B71C: 80434AC8 (j3dSys)
//	80A6B720: 80434AC8 (j3dSys)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpc_Lud_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/ctrlJointCallBack__11daNpc_Lud_cFP8J3DJointi.s"
}
#pragma pop


/* 80A6B75C-80A6B7CC 0070+00 s=2 e=0 z=0  None .text      getType__11daNpc_Lud_cFv                                     */
//	80A6B76C: 80A70854 (lit_4501)
//	80A6B770: 80A70854 (lit_4501)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::getType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/getType__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6B7CC-80A6B954 0188+00 s=2 e=0 z=0  None .text      isDelete__11daNpc_Lud_cFv                                    */
//	80A6B7E8: 80A70874 (lit_4528)
//	80A6B7EC: 80A70874 (lit_4528)
//	80A6B808: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B818: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B840: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B850: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B870: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B880: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B8A0: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B8B0: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B8D0: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B8E0: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B900: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B910: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6B92C: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::isDelete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/isDelete__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6B954-80A6BB1C 01C8+00 s=1 e=0 z=0  None .text      reset__11daNpc_Lud_cFv                                       */
//	80A6B964: 803621D8 (_savegpr_28)
//	80A6B96C: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6B970: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6B98C: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80A6B9A0: 80003458 (memset)
//	80A6B9A8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6B9B0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6B9B8: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80A6B9C0: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80A6B9C8: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80A6BA2C: 80267954 (cM_rndF__Ff)
//	80A6BA5C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80A6BA7C: 80003458 (memset)
//	80A6BB00: 8014A99C (setAngle__8daNpcT_cF5csXyz)
//	80A6BB08: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/reset__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6BB1C-80A6BBA8 008C+00 s=1 e=0 z=0  None .text      afterJntAnm__11daNpc_Lud_cFi                                 */
//	80A6BB38: 803DD470 (now__14mDoMtx_stack_c)
//	80A6BB3C: 803DD470 (now__14mDoMtx_stack_c)
//	80A6BB4C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80A6BB54: 803DD470 (now__14mDoMtx_stack_c)
//	80A6BB58: 803DD470 (now__14mDoMtx_stack_c)
//	80A6BB5C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80A6BB6C: 803DD470 (now__14mDoMtx_stack_c)
//	80A6BB70: 803DD470 (now__14mDoMtx_stack_c)
//	80A6BB80: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80A6BB88: 803DD470 (now__14mDoMtx_stack_c)
//	80A6BB8C: 803DD470 (now__14mDoMtx_stack_c)
//	80A6BB90: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Lud_c::afterJntAnm(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/afterJntAnm__11daNpc_Lud_cFi.s"
}
#pragma pop


/* 80A6BBA8-80A6BD44 019C+00 s=1 e=0 z=0  None .text      setParam__11daNpc_Lud_cFv                                    */
//	80A6BBB8: 803621D8 (_savegpr_28)
//	80A6BBC0: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6BBC4: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6BBC8: 80A6CD30 (selectAction__11daNpc_Lud_cFv)
//	80A6BBD0: 80A6BEE4 (srchActors__11daNpc_Lud_cFv)
//	80A6BC4C: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80A6BC64: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80A6BCD4: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80A6BD30: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/setParam__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6BD44-80A6BE6C 0128+00 s=1 e=0 z=0  None .text      checkChangeEvt__11daNpc_Lud_cFv                              */
//	80A6BD58: 80A70894 (lit_4639)
//	80A6BD5C: 80A70894 (lit_4639)
//	80A6BD7C: 80A6CDF4 (chkAction__11daNpc_Lud_cFM11daNpc_Lud_cFPCvPvPv_i)
//	80A6BD90: 804061C0 (g_dComIfG_gameInfo)
//	80A6BD94: 804061C0 (g_dComIfG_gameInfo)
//	80A6BDBC: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80A6BDD4: 8014A224 (evtChange__8daNpcT_cFv)
//	80A6BE18: 8014A224 (evtChange__8daNpcT_cFv)
//	80A6BE30: 8014A224 (evtChange__8daNpcT_cFv)
//	80A6BE48: 8014A224 (evtChange__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::checkChangeEvt() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/checkChangeEvt__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6BE6C-80A6BEE4 0078+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__11daNpc_Lud_cFv                          */
//	80A6BE7C: 803621DC (_savegpr_29)
//	80A6BEB4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6BEC0: 80A6FE60 (lit_4680)
//	80A6BEC4: 80A6FE60 (lit_4680)
//	80A6BED0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::setAfterTalkMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/setAfterTalkMotion__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6BEE4-80A6BFA4 00C0+00 s=1 e=0 z=0  None .text      srchActors__11daNpc_Lud_cFv                                  */
//	80A6BF18: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80A6BF2C: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80A6BF38: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80A6BF44: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80A6BF58: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80A6BF64: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80A6BF6C: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80A6BF80: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80A6BF8C: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::srchActors() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/srchActors__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6BFA4-80A6C044 00A0+00 s=1 e=0 z=0  None .text      evtTalk__11daNpc_Lud_cFv                                     */
//	80A6BFB8: 80A708A0 (lit_4698)
//	80A6BFBC: 80A708A0 (lit_4698)
//	80A6BFDC: 80A6CDF4 (chkAction__11daNpc_Lud_cFM11daNpc_Lud_cFPCvPvPv_i)
//	80A6BFF4: 80362084 (__ptmf_scall)
//	80A6C000: 80A708AC (lit_4703)
//	80A6C004: 80A708AC (lit_4703)
//	80A6C028: 80A6CE20 (setAction__11daNpc_Lud_cFM11daNpc_Lud_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::evtTalk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/evtTalk__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6C044-80A6C10C 00C8+00 s=1 e=0 z=0  None .text      evtCutProc__11daNpc_Lud_cFv                                  */
//	80A6C05C: 804061C0 (g_dComIfG_gameInfo)
//	80A6C060: 804061C0 (g_dComIfG_gameInfo)
//	80A6C06C: 80A6FECC (struct_80A6FECC)
//	80A6C070: 80A6FECC (struct_80A6FECC)
//	80A6C080: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80A6C098: 80A70780 (mCutNameList__11daNpc_Lud_c)
//	80A6C09C: 80A70780 (mCutNameList__11daNpc_Lud_c)
//	80A6C0AC: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80A6C0C0: 80A707F4 (mCutList__11daNpc_Lud_c)
//	80A6C0C4: 80A707F4 (mCutList__11daNpc_Lud_c)
//	80A6C0CC: 80362084 (__ptmf_scall)
//	80A6C0E4: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::evtCutProc() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/evtCutProc__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6C10C-80A6C2E4 01D8+00 s=1 e=0 z=0  None .text      action__11daNpc_Lud_cFv                                      */
//	80A6C13C: 8014AA40 (hitChk__8daNpcT_cFP12dCcD_GObjInfUl)
//	80A6C16C: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80A6C18C: 80147DCC (setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs)
//	80A6C1A0: 8014AAD0 (setDamage__8daNpcT_cFiii)
//	80A6C1BC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6C1C8: 80A6FE44 (lit_4218)
//	80A6C1CC: 80A6FE44 (lit_4218)
//	80A6C210: 80A6FE44 (lit_4218)
//	80A6C214: 80A6FE44 (lit_4218)
//	80A6C260: 80362018 (__ptmf_test)
//	80A6C274: 80362048 (__ptmf_cmpr)
//	80A6C28C: 80362084 (__ptmf_scall)
//	80A6C2B8: 80A6CE20 (setAction__11daNpc_Lud_cFM11daNpc_Lud_cFPCvPvPv_i)
//	80A6C2C0: 80A6FAD4 (func_80A6FAD4)
//	80A6C2C8: 80A6FAD4 (func_80A6FAD4)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::action() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/action__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6C2E4-80A6C3A8 00C4+00 s=1 e=0 z=0  None .text      beforeMove__11daNpc_Lud_cFv                                  */
//	80A6C318: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
//	80A6C358: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::beforeMove() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/beforeMove__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6C3A8-80A6C8EC 0544+00 s=1 e=0 z=0  None .text      setAttnPos__11daNpc_Lud_cFv                                  */
//	80A6C3C0: 803621D4 (_savegpr_27)
//	80A6C3C8: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6C3CC: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6C3F4: 804061C0 (g_dComIfG_gameInfo)
//	80A6C3F8: 804061C0 (g_dComIfG_gameInfo)
//	80A6C414: 80147E3C (calc__19daNpcT_DmgStagger_cFi)
//	80A6C504: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	80A6C5A8: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	80A6C5BC: 80147C38 (calcJntRad__15daNpcT_JntAnm_cFfff)
//	80A6C5D4: 80149190 (setMtx__8daNpcT_cFv)
//	80A6C5EC: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	80A6C604: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C608: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C60C: 803464B0 (PSMTXCopy)
//	80A6C610: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C614: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C61C: 803464B0 (PSMTXCopy)
//	80A6C630: 803464B0 (PSMTXCopy)
//	80A6C638: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	80A6C668: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C66C: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C670: 803464B0 (PSMTXCopy)
//	80A6C674: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C678: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C684: 80346D6C (PSMTXMultVec)
//	80A6C734: 80A6F800 (setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs)
//	80A6C768: 80A6F6E4 (setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs)
//	80A6C798: 80A6F800 (setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs)
//	80A6C7CC: 80A6F6E4 (setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs)
//	80A6C810: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C814: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C818: 803464B0 (PSMTXCopy)
//	80A6C81C: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C820: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C82C: 80346D6C (PSMTXMultVec)
//	80A6C84C: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C850: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C858: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80A6C85C: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C860: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C86C: 80346D6C (PSMTXMultVec)
//	80A6C87C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80A6C8D8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/setAttnPos__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6C8EC-80A6CA9C 01B0+00 s=1 e=0 z=0  None .text      setCollision__11daNpc_Lud_cFv                                */
//	80A6C910: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6C914: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6C9E4: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C9E8: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C9F0: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80A6C9F4: 803DD470 (now__14mDoMtx_stack_c)
//	80A6C9F8: 803DD470 (now__14mDoMtx_stack_c)
//	80A6CA04: 80346D6C (PSMTXMultVec)
//	80A6CA14: 80347090 (PSVECAdd)
//	80A6CA20: 8026F1F8 (SetH__8cM3dGCylFf)
//	80A6CA2C: 8026F200 (SetR__8cM3dGCylFf)
//	80A6CA38: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80A6CA3C: 804061C0 (g_dComIfG_gameInfo)
//	80A6CA40: 804061C0 (g_dComIfG_gameInfo)
//	80A6CA4C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::setCollision() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/setCollision__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6CA9C-80A6CAA4 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__11daNpc_Lud_cFv                                 */
// True False
//  bool False
bool daNpc_Lud_c::drawDbgInfo() {
	return false;
}


/* 80A6CAA4-80A6CC2C 0188+00 s=1 e=0 z=0  None .text      drawOtherMdl__11daNpc_Lud_cFv                                */
//	80A6CAB4: 803621D0 (_savegpr_26)
//	80A6CAD4: 8042CA54 (g_env_light)
//	80A6CAD8: 8042CA54 (g_env_light)
//	80A6CAE4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80A6CB04: 803258A0 (hide__13J3DShapeTableFv)
//	80A6CB1C: 803258D8 (show__13J3DShapeTableFv)
//	80A6CB24: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	80A6CB30: 804061C0 (g_dComIfG_gameInfo)
//	80A6CB34: 804061C0 (g_dComIfG_gameInfo)
//	80A6CB40: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	80A6CB4C: 804061C0 (g_dComIfG_gameInfo)
//	80A6CB50: 804061C0 (g_dComIfG_gameInfo)
//	80A6CB90: 8042CA54 (g_env_light)
//	80A6CB94: 8042CA54 (g_env_light)
//	80A6CBA0: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80A6CBAC: 80A6FEA8 (jointNo)
//	80A6CBB0: 80A6FEA8 (jointNo)
//	80A6CBC0: 803DD470 (now__14mDoMtx_stack_c)
//	80A6CBC4: 803DD470 (now__14mDoMtx_stack_c)
//	80A6CBC8: 803464B0 (PSMTXCopy)
//	80A6CBCC: 803DD470 (now__14mDoMtx_stack_c)
//	80A6CBD0: 803DD470 (now__14mDoMtx_stack_c)
//	80A6CBD8: 803464B0 (PSMTXCopy)
//	80A6CBE8: 803464B0 (PSMTXCopy)
//	80A6CBF0: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80A6CC00: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	80A6CC18: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::drawOtherMdl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/drawOtherMdl__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6CC2C-80A6CCFC 00D0+00 s=1 e=0 z=0  None .text      setBowlAnm__11daNpc_Lud_cFiif                                */
//	80A6CC44: 803621DC (_savegpr_29)
//	80A6CC54: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6CC58: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6CC70: 80A708B8 (bowlAnmData)
//	80A6CC74: 80A708B8 (bowlAnmData)
//	80A6CC90: 80A70044 (l_resNameList)
//	80A6CC94: 80A70044 (l_resNameList)
//	80A6CC9C: 80148094 (getTrnsfrmKeyAnmP__8daNpcT_cFPCci)
//	80A6CCD4: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80A6CCE8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
asm void daNpc_Lud_c::setBowlAnm(int param_0, int param_1, f32 param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/setBowlAnm__11daNpc_Lud_cFiif.s"
}
#pragma pop


/* 80A6CCFC-80A6CD30 0034+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__11daNpc_Lud_cFiifi                        */
//	80A6CD14: 80A6FE44 (lit_4218)
//	80A6CD18: 80A6FE44 (lit_4218)
//	80A6CD1C: 80A6CC2C (setBowlAnm__11daNpc_Lud_cFiif)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  int False
asm void daNpc_Lud_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/afterSetMotionAnm__11daNpc_Lud_cFiifi.s"
}
#pragma pop


/* 80A6CD30-80A6CDF4 00C4+00 s=1 e=0 z=0  None .text      selectAction__11daNpc_Lud_cFv                                */
//	80A6CD30: 80A6FFCC (cNullVec__6Z2Calc)
//	80A6CD34: 80A6FFCC (cNullVec__6Z2Calc)
//	80A6CD38: 803A2180 (__ptmf_null)
//	80A6CD3C: 803A2180 (__ptmf_null)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Lud_c::selectAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/selectAction__11daNpc_Lud_cFv.s"
}
#pragma pop


/* 80A6CDF4-80A6CE20 002C+00 s=2 e=0 z=0  None .text      chkAction__11daNpc_Lud_cFM11daNpc_Lud_cFPCvPvPv_i            */
//	80A6CE04: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Lud_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Lud_c False
asm void daNpc_Lud_c::chkAction(int (daNpc_Lud_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/chkAction__11daNpc_Lud_cFM11daNpc_Lud_cFPCvPvPv_i.s"
}
#pragma pop


/* 80A6CE20-80A6CEC8 00A8+00 s=2 e=0 z=0  None .text      setAction__11daNpc_Lud_cFM11daNpc_Lud_cFPCvPvPv_i            */
//	80A6CE48: 80362018 (__ptmf_test)
//	80A6CE60: 80362084 (__ptmf_scall)
//	80A6CE8C: 80362018 (__ptmf_test)
//	80A6CEA4: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Lud_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Lud_c False
asm void daNpc_Lud_c::setAction(int (daNpc_Lud_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/setAction__11daNpc_Lud_cFM11daNpc_Lud_cFPCvPvPv_i.s"
}
#pragma pop


/* 80A6CEC8-80A6D01C 0154+00 s=1 e=0 z=0  None .text      mop__11daNpc_Lud_cFii                                        */
//	80A6CED8: 803621D8 (_savegpr_28)
//	80A6CF24: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6CF34: 80A6FEB0 (lit_5221)
//	80A6CF38: 80A6FEB0 (lit_5221)
//	80A6CF54: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6CF64: 80A6FEB0 (lit_5221)
//	80A6CF68: 80A6FEB0 (lit_5221)
//	80A6CFB4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6CFC4: 80A6FEB0 (lit_5221)
//	80A6CFC8: 80A6FEB0 (lit_5221)
//	80A6CFE4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6CFF4: 80A6FEB0 (lit_5221)
//	80A6CFF8: 80A6FEB0 (lit_5221)
//	80A6D008: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void daNpc_Lud_c::mop(int param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/mop__11daNpc_Lud_cFii.s"
}
#pragma pop


/* 80A6D01C-80A6D160 0144+00 s=1 e=0 z=0  None .text      cutHurry__11daNpc_Lud_cFi                                    */
//	80A6D02C: 803621D4 (_savegpr_27)
//	80A6D040: 804061C0 (g_dComIfG_gameInfo)
//	80A6D044: 804061C0 (g_dComIfG_gameInfo)
//	80A6D050: 80A6FECC (struct_80A6FECC)
//	80A6D054: 80A6FECC (struct_80A6FECC)
//	80A6D060: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6D078: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80A6D0A4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D0B4: 80A6FE60 (lit_4680)
//	80A6D0B8: 80A6FE60 (lit_4680)
//	80A6D0D4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D0E4: 80A6FE60 (lit_4680)
//	80A6D0E8: 80A6FE60 (lit_4680)
//	80A6D100: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6D10C: 80A6FE44 (lit_4218)
//	80A6D110: 80A6FE44 (lit_4218)
//	80A6D14C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Lud_c::cutHurry(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/cutHurry__11daNpc_Lud_cFi.s"
}
#pragma pop


/* 80A6D160-80A6D450 02F0+00 s=1 e=0 z=0  None .text      cutConversationInHotel__11daNpc_Lud_cFi                      */
//	80A6D170: 803621C8 (_savegpr_24)
//	80A6D190: 804061C0 (g_dComIfG_gameInfo)
//	80A6D194: 804061C0 (g_dComIfG_gameInfo)
//	80A6D1A0: 80A6FECC (struct_80A6FECC)
//	80A6D1A4: 80A6FECC (struct_80A6FECC)
//	80A6D1B0: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6D1C8: 80A6FECC (struct_80A6FECC)
//	80A6D1CC: 80A6FECC (struct_80A6FECC)
//	80A6D1D8: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6D1F0: 80A6FECC (struct_80A6FECC)
//	80A6D1F4: 80A6FECC (struct_80A6FECC)
//	80A6D200: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6D218: 80A6FECC (struct_80A6FECC)
//	80A6D21C: 80A6FECC (struct_80A6FECC)
//	80A6D228: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6D240: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80A6D290: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D2A0: 80A6FE44 (lit_4218)
//	80A6D2A4: 80A6FE44 (lit_4218)
//	80A6D2B4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D2C4: 80A6FE44 (lit_4218)
//	80A6D2C8: 80A6FE44 (lit_4218)
//	80A6D2E4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D2F4: 80A6FE44 (lit_4218)
//	80A6D2F8: 80A6FE44 (lit_4218)
//	80A6D308: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D318: 80A6FE44 (lit_4218)
//	80A6D31C: 80A6FE44 (lit_4218)
//	80A6D358: 80A6CEC8 (mop__11daNpc_Lud_cFii)
//	80A6D37C: 80A6FAD4 (func_80A6FAD4)
//	80A6D39C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D3AC: 80A6FE44 (lit_4218)
//	80A6D3B0: 80A6FE44 (lit_4218)
//	80A6D3CC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D3DC: 80A6FE44 (lit_4218)
//	80A6D3E0: 80A6FE44 (lit_4218)
//	80A6D420: 80A6CEC8 (mop__11daNpc_Lud_cFii)
//	80A6D43C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Lud_c::cutConversationInHotel(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/cutConversationInHotel__11daNpc_Lud_cFi.s"
}
#pragma pop


/* 80A6D450-80A6D708 02B8+00 s=1 e=0 z=0  None .text      cutConversationAboutDeathMt__11daNpc_Lud_cFi                 */
//	80A6D460: 803621D4 (_savegpr_27)
//	80A6D474: 804061C0 (g_dComIfG_gameInfo)
//	80A6D478: 804061C0 (g_dComIfG_gameInfo)
//	80A6D484: 80A6FECC (struct_80A6FECC)
//	80A6D488: 80A6FECC (struct_80A6FECC)
//	80A6D494: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6D4AC: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80A6D4F4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D504: 80A6FE60 (lit_4680)
//	80A6D508: 80A6FE60 (lit_4680)
//	80A6D524: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D534: 80A6FE60 (lit_4680)
//	80A6D538: 80A6FE60 (lit_4680)
//	80A6D558: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D568: 80A6FE60 (lit_4680)
//	80A6D56C: 80A6FE60 (lit_4680)
//	80A6D588: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D598: 80A6FE60 (lit_4680)
//	80A6D59C: 80A6FE60 (lit_4680)
//	80A6D5B8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D5C8: 80A6FE44 (lit_4218)
//	80A6D5CC: 80A6FE44 (lit_4218)
//	80A6D5DC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D5EC: 80A6FE44 (lit_4218)
//	80A6D5F0: 80A6FE44 (lit_4218)
//	80A6D610: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D620: 80A6FE60 (lit_4680)
//	80A6D624: 80A6FE60 (lit_4680)
//	80A6D640: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D650: 80A6FE60 (lit_4680)
//	80A6D654: 80A6FE60 (lit_4680)
//	80A6D6DC: 80A6FAD4 (func_80A6FAD4)
//	80A6D6F4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Lud_c::cutConversationAboutDeathMt(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/cutConversationAboutDeathMt__11daNpc_Lud_cFi.s"
}
#pragma pop


/* 80A6D708-80A6D998 0290+00 s=1 e=0 z=0  None .text      cutConversationAboutGoron__11daNpc_Lud_cFi                   */
//	80A6D718: 803621D4 (_savegpr_27)
//	80A6D72C: 804061C0 (g_dComIfG_gameInfo)
//	80A6D730: 804061C0 (g_dComIfG_gameInfo)
//	80A6D73C: 80A6FECC (struct_80A6FECC)
//	80A6D740: 80A6FECC (struct_80A6FECC)
//	80A6D74C: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6D764: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80A6D7A8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D7B8: 80A6FE60 (lit_4680)
//	80A6D7BC: 80A6FE60 (lit_4680)
//	80A6D7D8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D7E8: 80A6FE60 (lit_4680)
//	80A6D7EC: 80A6FE60 (lit_4680)
//	80A6D800: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80A6D81C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D82C: 80A6FE60 (lit_4680)
//	80A6D830: 80A6FE60 (lit_4680)
//	80A6D84C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D85C: 80A6FE60 (lit_4680)
//	80A6D860: 80A6FE60 (lit_4680)
//	80A6D880: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D890: 80A6FE60 (lit_4680)
//	80A6D894: 80A6FE60 (lit_4680)
//	80A6D8B0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6D8C0: 80A6FE60 (lit_4680)
//	80A6D8C4: 80A6FE60 (lit_4680)
//	80A6D8F8: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80A6D91C: 80145A24 (checkEndSequence__22daNpcT_MotionSeqMngr_cFv)
//	80A6D964: 802706D0 (cLib_chaseS__FPsss)
//	80A6D978: 802706D0 (cLib_chaseS__FPsss)
//	80A6D984: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Lud_c::cutConversationAboutGoron(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/cutConversationAboutGoron__11daNpc_Lud_cFi.s"
}
#pragma pop


/* 80A6D998-80A6DC48 02B0+00 s=1 e=0 z=0  None .text      cutNurse__11daNpc_Lud_cFi                                    */
//	80A6D9A8: 803621D0 (_savegpr_26)
//	80A6D9B4: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6D9B8: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6D9C4: 804061C0 (g_dComIfG_gameInfo)
//	80A6D9C8: 804061C0 (g_dComIfG_gameInfo)
//	80A6D9D4: 80A6FECC (struct_80A6FECC)
//	80A6D9D8: 80A6FECC (struct_80A6FECC)
//	80A6D9E4: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6D9FC: 80A6FECC (struct_80A6FECC)
//	80A6DA00: 80A6FECC (struct_80A6FECC)
//	80A6DA0C: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6DA30: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80A6DA3C: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80A6DA48: 804061C0 (g_dComIfG_gameInfo)
//	80A6DA4C: 804061C0 (g_dComIfG_gameInfo)
//	80A6DA88: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80A6DAC4: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80A6DAE0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DB0C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DB30: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DB50: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DBD0: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80A6DC00: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80A6DC34: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Lud_c::cutNurse(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/cutNurse__11daNpc_Lud_cFi.s"
}
#pragma pop


/* 80A6DC48-80A6DCE8 00A0+00 s=1 e=0 z=0  None .text      cutClothTry__11daNpc_Lud_cFi                                 */
//	80A6DC58: 803621D4 (_savegpr_27)
//	80A6DC6C: 804061C0 (g_dComIfG_gameInfo)
//	80A6DC70: 804061C0 (g_dComIfG_gameInfo)
//	80A6DC7C: 80A6FECC (struct_80A6FECC)
//	80A6DC80: 80A6FECC (struct_80A6FECC)
//	80A6DC8C: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6DCA4: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80A6DCD4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Lud_c::cutClothTry(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/cutClothTry__11daNpc_Lud_cFi.s"
}
#pragma pop


/* 80A6DCE8-80A6DE14 012C+00 s=1 e=0 z=0  None .text      cutThankYou__11daNpc_Lud_cFi                                 */
//	80A6DCF8: 803621D4 (_savegpr_27)
//	80A6DD0C: 804061C0 (g_dComIfG_gameInfo)
//	80A6DD10: 804061C0 (g_dComIfG_gameInfo)
//	80A6DD1C: 80A6FECC (struct_80A6FECC)
//	80A6DD20: 80A6FECC (struct_80A6FECC)
//	80A6DD2C: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A6DD44: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80A6DD74: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DD84: 80A6FE44 (lit_4218)
//	80A6DD88: 80A6FE44 (lit_4218)
//	80A6DDA4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DDB4: 80A6FE44 (lit_4218)
//	80A6DDB8: 80A6FE44 (lit_4218)
//	80A6DE00: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Lud_c::cutThankYou(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/cutThankYou__11daNpc_Lud_cFi.s"
}
#pragma pop


/* 80A6DE14-80A6E32C 0518+00 s=1 e=0 z=0  None .text      wait__11daNpc_Lud_cFPv                                       */
//	80A6DE24: 803621DC (_savegpr_29)
//	80A6DE2C: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6DE30: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6DE98: 804061C0 (g_dComIfG_gameInfo)
//	80A6DE9C: 804061C0 (g_dComIfG_gameInfo)
//	80A6DEA8: 80035360 (isSwitch__10dSv_info_cCFii)
//	80A6DEC8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DEF4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DF24: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DF50: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DF80: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DFAC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6DFDC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E008: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E048: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80A6E078: 80A660D8 (checkStartDemo13StbEvt__11daNpc_Len_cFP10fopAc_ac_cfffffff)
//	80A6E0A4: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80A6E0B0: 804061C0 (g_dComIfG_gameInfo)
//	80A6E0B4: 804061C0 (g_dComIfG_gameInfo)
//	80A6E0F4: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6E128: 804061C0 (g_dComIfG_gameInfo)
//	80A6E12C: 804061C0 (g_dComIfG_gameInfo)
//	80A6E138: 80035360 (isSwitch__10dSv_info_cCFii)
//	80A6E170: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6E178: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80A6E1A0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6E1CC: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80A6E1E0: 8014ABD0 (chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs)
//	80A6E1FC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6E224: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80A6E25C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6E2B0: 8014B648 (step__8daNpcT_cFsiiii)
//	80A6E2CC: 8014AA18 (setAngle__8daNpcT_cFs)
//	80A6E2F4: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80A6E318: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Lud_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/wait__11daNpc_Lud_cFPv.s"
}
#pragma pop


/* 80A6E32C-80A6E6EC 03C0+00 s=2 e=0 z=0  None .text      nurse__11daNpc_Lud_cFPv                                      */
//	80A6E380: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E390: 80A6FE60 (lit_4680)
//	80A6E394: 80A6FE60 (lit_4680)
//	80A6E3B8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E3C8: 80A6FE60 (lit_4680)
//	80A6E3CC: 80A6FE60 (lit_4680)
//	80A6E40C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6E418: 80A6FE44 (lit_4218)
//	80A6E41C: 80A6FE44 (lit_4218)
//	80A6E468: 804061C0 (g_dComIfG_gameInfo)
//	80A6E46C: 804061C0 (g_dComIfG_gameInfo)
//	80A6E478: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	80A6E47C: 80A6FECC (struct_80A6FECC)
//	80A6E480: 80A6FECC (struct_80A6FECC)
//	80A6E488: 80368994 (strcmp)
//	80A6E498: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	80A6E49C: 80A6FECC (struct_80A6FECC)
//	80A6E4A0: 80A6FECC (struct_80A6FECC)
//	80A6E4A8: 80368994 (strcmp)
//	80A6E4E0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E4F0: 80A6FE60 (lit_4680)
//	80A6E4F4: 80A6FE60 (lit_4680)
//	80A6E510: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E520: 80A6FE60 (lit_4680)
//	80A6E524: 80A6FE60 (lit_4680)
//	80A6E534: 80145A24 (checkEndSequence__22daNpcT_MotionSeqMngr_cFv)
//	80A6E554: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E564: 80A6FE60 (lit_4680)
//	80A6E568: 80A6FE60 (lit_4680)
//	80A6E584: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E594: 80A6FE60 (lit_4680)
//	80A6E598: 80A6FE60 (lit_4680)
//	80A6E5BC: 80A6FAD4 (func_80A6FAD4)
//	80A6E5C4: 80A6FAD4 (func_80A6FAD4)
//	80A6E5E8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E5F8: 80A6FE60 (lit_4680)
//	80A6E5FC: 80A6FE60 (lit_4680)
//	80A6E618: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E628: 80A6FE60 (lit_4680)
//	80A6E62C: 80A6FE60 (lit_4680)
//	80A6E650: 80A6FAD4 (func_80A6FAD4)
//	80A6E658: 80A6FAD4 (func_80A6FAD4)
//	80A6E67C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E68C: 80A6FE60 (lit_4680)
//	80A6E690: 80A6FE60 (lit_4680)
//	80A6E6AC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E6BC: 80A6FE60 (lit_4680)
//	80A6E6C0: 80A6FE60 (lit_4680)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Lud_c::nurse(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/nurse__11daNpc_Lud_cFPv.s"
}
#pragma pop


/* 80A6E6EC-80A6E7EC 0100+00 s=1 e=0 z=0  None .text      giveSoup__11daNpc_Lud_cFPv                                   */
//	80A6E738: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E748: 80A6FE60 (lit_4680)
//	80A6E74C: 80A6FE60 (lit_4680)
//	80A6E768: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6E778: 80A6FE60 (lit_4680)
//	80A6E77C: 80A6FE60 (lit_4680)
//	80A6E79C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6E7A8: 80A6FE44 (lit_4218)
//	80A6E7AC: 80A6FE44 (lit_4218)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Lud_c::giveSoup(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/giveSoup__11daNpc_Lud_cFPv.s"
}
#pragma pop


/* 80A6E7EC-80A6E9FC 0210+00 s=3 e=0 z=0  None .text      talk__11daNpc_Lud_cFPv                                       */
//	80A6E834: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80A6E8A8: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80A6E8C4: 804061C0 (g_dComIfG_gameInfo)
//	80A6E8C8: 804061C0 (g_dComIfG_gameInfo)
//	80A6E8D0: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80A6E8D4: 804061C0 (g_dComIfG_gameInfo)
//	80A6E8D8: 804061C0 (g_dComIfG_gameInfo)
//	80A6E8E0: 80042468 (reset__14dEvt_control_cFv)
//	80A6E8FC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6E908: 80A6FE44 (lit_4218)
//	80A6E90C: 80A6FE44 (lit_4218)
//	80A6E960: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6E96C: 80A6FE44 (lit_4218)
//	80A6E970: 80A6FE44 (lit_4218)
//	80A6E99C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80A6E9A8: 80A6FE44 (lit_4218)
//	80A6E9AC: 80A6FE44 (lit_4218)
//	80A6E9E0: 8014B648 (step__8daNpcT_cFsiiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Lud_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/talk__11daNpc_Lud_cFPv.s"
}
#pragma pop


/* 80A6E9FC-80A6EA1C 0020+00 s=1 e=0 z=0  None .text      daNpc_Lud_Create__FPv                                        */
//	80A6EA08: 80A6ACF4 (create__11daNpc_Lud_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Lud_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/daNpc_Lud_Create__FPv.s"
}
#pragma pop


/* 80A6EA1C-80A6EA3C 0020+00 s=1 e=0 z=0  None .text      daNpc_Lud_Delete__FPv                                        */
//	80A6EA28: 80A6B5FC (Delete__11daNpc_Lud_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Lud_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/daNpc_Lud_Delete__FPv.s"
}
#pragma pop


/* 80A6EA3C-80A6EA5C 0020+00 s=1 e=0 z=0  None .text      daNpc_Lud_Execute__FPv                                       */
//	80A6EA48: 80A6B630 (Execute__11daNpc_Lud_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Lud_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/daNpc_Lud_Execute__FPv.s"
}
#pragma pop


/* 80A6EA5C-80A6EA7C 0020+00 s=1 e=0 z=0  None .text      daNpc_Lud_Draw__FPv                                          */
//	80A6EA68: 80A6B650 (Draw__11daNpc_Lud_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Lud_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/daNpc_Lud_Draw__FPv.s"
}
#pragma pop


/* 80A6EA7C-80A6EA84 0008+00 s=1 e=0 z=0  None .text      daNpc_Lud_IsDelete__FPv                                      */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Lud_IsDelete(void* param_0) {
	return true;
}


/* 80A6EA84-80A6EAB4 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	80A6EAA0: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 80A6EAB4-80A6EAFC 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80A6EACC: 80A70A28 (__vt__10cCcD_GStts)
//	80A6EAD0: 80A70A28 (__vt__10cCcD_GStts)
//	80A6EAE0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80A6EAFC-80A6EE84 0388+00 s=1 e=0 z=0  None .text      __dt__8daNpcT_cFv                                            */
//	80A6EB1C: 803B3A78 (__vt__8daNpcT_c)
//	80A6EB20: 803B3A78 (__vt__8daNpcT_c)
//	80A6EB34: 80A6EEC0 (__dt__5csXyzFv)
//	80A6EB38: 80A6EEC0 (__dt__5csXyzFv)
//	80A6EB44: 80361CE8 (__destroy_arr)
//	80A6EB50: 80A70A58 (__vt__15daNpcT_JntAnm_c)
//	80A6EB54: 80A70A58 (__vt__15daNpcT_JntAnm_c)
//	80A6EB60: 80A6EE84 (__dt__4cXyzFv)
//	80A6EB64: 80A6EE84 (__dt__4cXyzFv)
//	80A6EB70: 80361CE8 (__destroy_arr)
//	80A6EB78: 80A6EE84 (__dt__4cXyzFv)
//	80A6EB7C: 80A6EE84 (__dt__4cXyzFv)
//	80A6EB88: 80361CE8 (__destroy_arr)
//	80A6EB90: 80A6EE84 (__dt__4cXyzFv)
//	80A6EB94: 80A6EE84 (__dt__4cXyzFv)
//	80A6EBA0: 80361CE8 (__destroy_arr)
//	80A6EBA8: 80A6EE84 (__dt__4cXyzFv)
//	80A6EBAC: 80A6EE84 (__dt__4cXyzFv)
//	80A6EBB8: 80361CE8 (__destroy_arr)
//	80A6EBC0: 80A6EE84 (__dt__4cXyzFv)
//	80A6EBC4: 80A6EE84 (__dt__4cXyzFv)
//	80A6EBD0: 80361CE8 (__destroy_arr)
//	80A6EBD8: 80A6EE84 (__dt__4cXyzFv)
//	80A6EBDC: 80A6EE84 (__dt__4cXyzFv)
//	80A6EBE8: 80361CE8 (__destroy_arr)
//	80A6EBF4: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6EBF8: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6EC08: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6EC0C: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6EC1C: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6EC20: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6EC30: 80A70A40 (__vt__22daNpcT_MotionSeqMngr_c)
//	80A6EC34: 80A70A40 (__vt__22daNpcT_MotionSeqMngr_c)
//	80A6EC44: 80A70A40 (__vt__22daNpcT_MotionSeqMngr_c)
//	80A6EC48: 80A70A40 (__vt__22daNpcT_MotionSeqMngr_c)
//	80A6EC58: 80077CDC (__dt__11dBgS_LinChkFv)
//	80A6EC64: 800775F0 (__dt__11dBgS_GndChkFv)
//	80A6EC70: 803AC2E4 (__vt__9dCcD_Stts)
//	80A6EC74: 803AC2E4 (__vt__9dCcD_Stts)
//	80A6EC8C: 80A70A34 (__vt__10dCcD_GStts)
//	80A6EC90: 80A70A34 (__vt__10dCcD_GStts)
//	80A6ECA0: 80A70A28 (__vt__10cCcD_GStts)
//	80A6ECA4: 80A70A28 (__vt__10cCcD_GStts)
//	80A6ECB4: 803C3728 (__vt__9cCcD_Stts)
//	80A6ECB8: 803C3728 (__vt__9cCcD_Stts)
//	80A6ECC8: 80249F48 (__dt__10dMsgFlow_cFv)
//	80A6ECD4: 80267C94 (__dt__11cBgS_GndChkFv)
//	80A6ECE0: 80A70A1C (__vt__12dBgS_AcchCir)
//	80A6ECE4: 80A70A1C (__vt__12dBgS_AcchCir)
//	80A6ECF4: 8026EF18 (__dt__8cM3dGCirFv)
//	80A6ED00: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80A6ED0C: 803AC2E4 (__vt__9dCcD_Stts)
//	80A6ED10: 803AC2E4 (__vt__9dCcD_Stts)
//	80A6ED28: 80A70A34 (__vt__10dCcD_GStts)
//	80A6ED2C: 80A70A34 (__vt__10dCcD_GStts)
//	80A6ED3C: 80A70A28 (__vt__10cCcD_GStts)
//	80A6ED40: 80A70A28 (__vt__10cCcD_GStts)
//	80A6ED50: 803C3728 (__vt__9cCcD_Stts)
//	80A6ED54: 803C3728 (__vt__9cCcD_Stts)
//	80A6ED64: 80A709F8 (__vt__12dBgS_ObjAcch)
//	80A6ED68: 80A709F8 (__vt__12dBgS_ObjAcch)
//	80A6ED88: 80075F94 (__dt__9dBgS_AcchFv)
//	80A6EDA4: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6EDA8: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6EDC8: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6EDCC: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6EDEC: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6EDF0: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6EE10: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6EE14: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6EE34: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6EE38: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6EE48: 802C0420 (__dt__10Z2CreatureFv)
//	80A6EE54: 80018C8C (__dt__10fopAc_ac_cFv)
//	80A6EE64: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_c::~daNpcT_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__8daNpcT_cFv.s"
}
#pragma pop


/* 80A6EE84-80A6EEC0 003C+00 s=3 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80A6EEA4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__4cXyzFv.s"
}
#pragma pop


/* 80A6EEC0-80A6EEFC 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80A6EEE0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__5csXyzFv.s"
}
#pragma pop


/* 80A6EEFC-80A6EF44 0048+00 s=3 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv                                 */
//	80A6EF14: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6EF18: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6EF28: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80A6EF44-80A6EF80 003C+00 s=1 e=0 z=0  None .text      __ct__18daNpcT_ActorMngr_cFv                                 */
//	80A6EF58: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6EF5C: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6EF64: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__ct__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80A6EF80-80A6EFC8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80A6EF98: 80A70A70 (__vt__8cM3dGCyl)
//	80A6EF9C: 80A70A70 (__vt__8cM3dGCyl)
//	80A6EFAC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80A6EFC8-80A6F010 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80A6EFE0: 80A70A64 (__vt__8cM3dGAab)
//	80A6EFE4: 80A70A64 (__vt__8cM3dGAab)
//	80A6EFF4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80A6F010-80A6F414 0404+00 s=1 e=0 z=0  None .text      __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80A6F020: 803621C0 (_savegpr_22)
//	80A6F048: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6F04C: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6F050: 80018B64 (__ct__10fopAc_ac_cFv)
//	80A6F054: 803B3A78 (__vt__8daNpcT_c)
//	80A6F058: 803B3A78 (__vt__8daNpcT_c)
//	80A6F074: 802C03C8 (__ct__10Z2CreatureFv)
//	80A6F07C: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F080: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F090: 803283FC (init__12J3DFrameCtrlFs)
//	80A6F0A0: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F0A4: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F0B4: 803283FC (init__12J3DFrameCtrlFs)
//	80A6F0C4: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F0C8: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F0D8: 803283FC (init__12J3DFrameCtrlFs)
//	80A6F0E8: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F0EC: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F0FC: 803283FC (init__12J3DFrameCtrlFs)
//	80A6F10C: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F110: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F120: 803283FC (init__12J3DFrameCtrlFs)
//	80A6F134: 800760A0 (__ct__9dBgS_AcchFv)
//	80A6F138: 80A709F8 (__vt__12dBgS_ObjAcch)
//	80A6F13C: 80A709F8 (__vt__12dBgS_ObjAcch)
//	80A6F158: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80A6F15C: 803C3728 (__vt__9cCcD_Stts)
//	80A6F160: 803C3728 (__vt__9cCcD_Stts)
//	80A6F16C: 80083760 (__ct__10dCcD_GSttsFv)
//	80A6F170: 803AC2E4 (__vt__9dCcD_Stts)
//	80A6F174: 803AC2E4 (__vt__9dCcD_Stts)
//	80A6F188: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80A6F190: 80267C1C (__ct__11cBgS_GndChkFv)
//	80A6F198: 80249F00 (__ct__10dMsgFlow_cFv)
//	80A6F19C: 803C3728 (__vt__9cCcD_Stts)
//	80A6F1A0: 803C3728 (__vt__9cCcD_Stts)
//	80A6F1AC: 80083760 (__ct__10dCcD_GSttsFv)
//	80A6F1B0: 803AC2E4 (__vt__9dCcD_Stts)
//	80A6F1B4: 803AC2E4 (__vt__9dCcD_Stts)
//	80A6F1C4: 8007757C (__ct__11dBgS_GndChkFv)
//	80A6F1CC: 80077C68 (__ct__11dBgS_LinChkFv)
//	80A6F1D0: 80A70A40 (__vt__22daNpcT_MotionSeqMngr_c)
//	80A6F1D4: 80A70A40 (__vt__22daNpcT_MotionSeqMngr_c)
//	80A6F1E8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6F1EC: 80A70A40 (__vt__22daNpcT_MotionSeqMngr_c)
//	80A6F1F0: 80A70A40 (__vt__22daNpcT_MotionSeqMngr_c)
//	80A6F204: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6F208: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6F20C: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6F218: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80A6F21C: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6F220: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6F22C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80A6F234: 80A70A58 (__vt__15daNpcT_JntAnm_c)
//	80A6F238: 80A70A58 (__vt__15daNpcT_JntAnm_c)
//	80A6F240: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6F244: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6F250: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80A6F258: 80A6F514 (__ct__4cXyzFv)
//	80A6F25C: 80A6F514 (__ct__4cXyzFv)
//	80A6F260: 80A6EE84 (__dt__4cXyzFv)
//	80A6F264: 80A6EE84 (__dt__4cXyzFv)
//	80A6F270: 80361D60 (__construct_array)
//	80A6F278: 80A6F514 (__ct__4cXyzFv)
//	80A6F27C: 80A6F514 (__ct__4cXyzFv)
//	80A6F280: 80A6EE84 (__dt__4cXyzFv)
//	80A6F284: 80A6EE84 (__dt__4cXyzFv)
//	80A6F290: 80361D60 (__construct_array)
//	80A6F298: 80A6F514 (__ct__4cXyzFv)
//	80A6F29C: 80A6F514 (__ct__4cXyzFv)
//	80A6F2A0: 80A6EE84 (__dt__4cXyzFv)
//	80A6F2A4: 80A6EE84 (__dt__4cXyzFv)
//	80A6F2B0: 80361D60 (__construct_array)
//	80A6F2B8: 80A6F514 (__ct__4cXyzFv)
//	80A6F2BC: 80A6F514 (__ct__4cXyzFv)
//	80A6F2C0: 80A6EE84 (__dt__4cXyzFv)
//	80A6F2C4: 80A6EE84 (__dt__4cXyzFv)
//	80A6F2D0: 80361D60 (__construct_array)
//	80A6F2D8: 80A6F514 (__ct__4cXyzFv)
//	80A6F2DC: 80A6F514 (__ct__4cXyzFv)
//	80A6F2E0: 80A6EE84 (__dt__4cXyzFv)
//	80A6F2E4: 80A6EE84 (__dt__4cXyzFv)
//	80A6F2F0: 80361D60 (__construct_array)
//	80A6F2F8: 80A6F514 (__ct__4cXyzFv)
//	80A6F2FC: 80A6F514 (__ct__4cXyzFv)
//	80A6F300: 80A6EE84 (__dt__4cXyzFv)
//	80A6F304: 80A6EE84 (__dt__4cXyzFv)
//	80A6F310: 80361D60 (__construct_array)
//	80A6F318: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80A6F320: 80A6F414 (__ct__5csXyzFv)
//	80A6F324: 80A6F414 (__ct__5csXyzFv)
//	80A6F328: 80A6EEC0 (__dt__5csXyzFv)
//	80A6F32C: 80A6EEC0 (__dt__5csXyzFv)
//	80A6F338: 80361D60 (__construct_array)
//	80A6F34C: 80003458 (memset)
//	80A6F354: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6F35C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80A6F364: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80A6F36C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80A6F374: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80A6F3D8: 80267954 (cM_rndF__Ff)
//	80A6F400: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/func_80A6F010.s"
}
#pragma pop


/* 80A6F414-80A6F418 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80A6F418-80A6F514 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv                                    */
//	80A6F438: 80A70A58 (__vt__15daNpcT_JntAnm_c)
//	80A6F43C: 80A70A58 (__vt__15daNpcT_JntAnm_c)
//	80A6F448: 80A6EE84 (__dt__4cXyzFv)
//	80A6F44C: 80A6EE84 (__dt__4cXyzFv)
//	80A6F458: 80361CE8 (__destroy_arr)
//	80A6F460: 80A6EE84 (__dt__4cXyzFv)
//	80A6F464: 80A6EE84 (__dt__4cXyzFv)
//	80A6F470: 80361CE8 (__destroy_arr)
//	80A6F478: 80A6EE84 (__dt__4cXyzFv)
//	80A6F47C: 80A6EE84 (__dt__4cXyzFv)
//	80A6F488: 80361CE8 (__destroy_arr)
//	80A6F490: 80A6EE84 (__dt__4cXyzFv)
//	80A6F494: 80A6EE84 (__dt__4cXyzFv)
//	80A6F4A0: 80361CE8 (__destroy_arr)
//	80A6F4A8: 80A6EE84 (__dt__4cXyzFv)
//	80A6F4AC: 80A6EE84 (__dt__4cXyzFv)
//	80A6F4B8: 80361CE8 (__destroy_arr)
//	80A6F4C0: 80A6EE84 (__dt__4cXyzFv)
//	80A6F4C4: 80A6EE84 (__dt__4cXyzFv)
//	80A6F4D0: 80361CE8 (__destroy_arr)
//	80A6F4DC: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6F4E0: 80A70A4C (__vt__18daNpcT_ActorMngr_c)
//	80A6F4F4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop


/* 80A6F514-80A6F518 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80A6F518-80A6F560 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv                             */
//	80A6F530: 80A70A40 (__vt__22daNpcT_MotionSeqMngr_c)
//	80A6F534: 80A70A40 (__vt__22daNpcT_MotionSeqMngr_c)
//	80A6F544: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop


/* 80A6F560-80A6F5D0 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80A6F580: 80A70A1C (__vt__12dBgS_AcchCir)
//	80A6F584: 80A70A1C (__vt__12dBgS_AcchCir)
//	80A6F594: 8026EF18 (__dt__8cM3dGCirFv)
//	80A6F5A0: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80A6F5B0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80A6F5D0-80A6F62C 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80A6F5E8: 80A70A34 (__vt__10dCcD_GStts)
//	80A6F5EC: 80A70A34 (__vt__10dCcD_GStts)
//	80A6F5F8: 80A70A28 (__vt__10cCcD_GStts)
//	80A6F5FC: 80A70A28 (__vt__10cCcD_GStts)
//	80A6F610: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80A6F62C-80A6F69C 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80A6F64C: 80A709F8 (__vt__12dBgS_ObjAcch)
//	80A6F650: 80A709F8 (__vt__12dBgS_ObjAcch)
//	80A6F66C: 80075F94 (__dt__9dBgS_AcchFv)
//	80A6F67C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80A6F69C-80A6F6E4 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80A6F6B4: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F6B8: 80A709EC (__vt__12J3DFrameCtrl)
//	80A6F6C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80A6F6E4-80A6F800 011C+00 s=1 e=0 z=0  None .text      setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs                    */
//	80A6F6FC: 803621D8 (_savegpr_28)
//	80A6F730: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80A6F74C: 80267674 (cM_atan2s__Fff)
//	80A6F778: 80A6FE50 (lit_4421)
//	80A6F77C: 80A6FE50 (lit_4421)
//	80A6F788: 80A6FE7C (lit_4934)
//	80A6F78C: 80A6FE7C (lit_4934)
//	80A6F7EC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleY(cXyz param_0, s16 param_1, int param_2, f32 param_3, s16 param_4) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs.s"
}
#pragma pop


/* 80A6F800-80A6FA08 0208+00 s=1 e=0 z=0  None .text      setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs                      */
//	80A6F818: 803621DC (_savegpr_29)
//	80A6F82C: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6F830: 80A6FD7C (m__17daNpc_Lud_Param_c)
//	80A6F84C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80A6F87C: 80347138 (PSVECSquareMag)
//	80A6F8EC: 80450AE0 (__float_nan)
//	80A6F8F0: 80450AE0 (__float_nan)
//	80A6F95C: 80450AE0 (__float_nan)
//	80A6F960: 80450AE0 (__float_nan)
//	80A6F970: 80267674 (cM_atan2s__Fff)
//	80A6F9F4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleX(cXyz param_0, f32 param_1, s16 param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs.s"
}
#pragma pop


/* 80A6FA08-80A6FA0C 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi                               */
// True False
//  void False
//  int False
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
	/* empty function */
}


/* 80A6FA0C-80A6FA14 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootLJointNo() {
	return -1;
}


/* 80A6FA14-80A6FA1C 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootRJointNo() {
	return -1;
}


/* 80A6FA1C-80A6FA24 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballLMaterialNo() {
	return false;
}


/* 80A6FA24-80A6FA2C 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballRMaterialNo() {
	return false;
}


/* 80A6FA2C-80A6FA34 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::evtEndProc() {
	return true;
}


/* 80A6FA34-80A6FA38 0004+00 s=1 e=0 z=0  None .text      afterMoved__8daNpcT_cFv                                      */
// True False
//  void False
void daNpcT_c::afterMoved() {
	/* empty function */
}


/* 80A6FA38-80A6FA40 0008+00 s=1 e=0 z=0  None .text      chkXYItems__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::chkXYItems() {
	return false;
}


/* 80A6FA40-80A6FA58 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcT_c::decTmr() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/decTmr__8daNpcT_cFv.s"
}
#pragma pop


/* 80A6FA58-80A6FA5C 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv                                       */
// True False
//  void False
void daNpcT_c::drawGhost() {
	/* empty function */
}


/* 80A6FA5C-80A6FA64 0008+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__8daNpcT_cFiifi                        */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 80A6FA64-80A6FA94 0030+00 s=1 e=0 z=0  None .text      getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c False
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop


/* 80A6FA94-80A6FAC4 0030+00 s=1 e=0 z=0  None .text      getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_motionAnmData_c False
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop


/* 80A6FAC4-80A6FAC8 0004+00 s=1 e=0 z=0  None .text      changeAnm__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
	/* empty function */
}


/* 80A6FAC8-80A6FACC 0004+00 s=1 e=0 z=0  None .text      changeBck__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBck(int* param_0, int* param_1) {
	/* empty function */
}


/* 80A6FACC-80A6FAD0 0004+00 s=1 e=0 z=0  None .text      changeBtp__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
	/* empty function */
}


/* 80A6FAD0-80A6FAD4 0004+00 s=1 e=0 z=0  None .text      changeBtk__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
	/* empty function */
}


/* 80A6FAD4-80A6FAF0 001C+00 s=4 e=0 z=0  None .text      cLib_calcTimer<i>__FPi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int* False
// 	 int False
asm void cLib_calcTimer__template0(int* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/func_80A6FAD4.s"
}
#pragma pop


/* ############################################################################################## */
/* 80A70B40-80A70B4C 000C+00 s=2 e=0 z=0  None .data      __vt__17daNpc_Lud_Param_c                                    */
SECTION_DATA void* __vt__17daNpc_Lud_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__17daNpc_Lud_Param_cFv,
};

/* 80A70B58-80A70B64 000C+00 s=1 e=0 z=0  None .bss       @3840                                                        */
static u8 lit_3840[12];

/* 80A70B64-80A70B68 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80A6FAF0-80A6FC04 0114+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_lud_cpp                                      */
//	80A6FAFC: 80A6FFCC (cNullVec__6Z2Calc)
//	80A6FB00: 80A6FFCC (cNullVec__6Z2Calc)
//	80A6FB04: 803A2180 (__ptmf_null)
//	80A6FB08: 803A2180 (__ptmf_null)
//	80A6FBD0: 80A70B40 (__vt__17daNpc_Lud_Param_c)
//	80A6FBD4: 80A70B40 (__vt__17daNpc_Lud_Param_c)
//	80A6FBD8: 80A70B64 (l_HIO)
//	80A6FBDC: 80A70B64 (l_HIO)
//	80A6FBE0: 80A6FD10 (__dt__17daNpc_Lud_Param_cFv)
//	80A6FBE4: 80A6FD10 (__dt__17daNpc_Lud_Param_cFv)
//	80A6FBE8: 80A70B58 (lit_3840)
//	80A6FBEC: 80A70B58 (lit_3840)
//	80A6FBF0: 80A6AB38 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_lud_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__sinit_d_a_npc_lud_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80A6FAF0 = (void*)__sinit_d_a_npc_lud_cpp;
#pragma pop


/* 80A6FC04-80A6FCD0 00CC+00 s=1 e=0 z=0  None .text      __ct__11daNpc_Lud_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80A6FC24: 80A6F010 (__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80A6FC28: 80A70A7C (__vt__11daNpc_Lud_c)
//	80A6FC2C: 80A70A7C (__vt__11daNpc_Lud_c)
//	80A6FC3C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80A6FC40: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A6FC44: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A6FC4C: 80A70A64 (__vt__8cM3dGAab)
//	80A6FC50: 80A70A64 (__vt__8cM3dGAab)
//	80A6FC58: 80A70A70 (__vt__8cM3dGCyl)
//	80A6FC5C: 80A70A70 (__vt__8cM3dGCyl)
//	80A6FC64: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A6FC68: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A6FC78: 803AC050 (__vt__8dCcD_Cyl)
//	80A6FC7C: 803AC050 (__vt__8dCcD_Cyl)
//	80A6FC98: 80A6EF44 (__ct__18daNpcT_ActorMngr_cFv)
//	80A6FC9C: 80A6EF44 (__ct__18daNpcT_ActorMngr_cFv)
//	80A6FCA0: 80A6EEFC (__dt__18daNpcT_ActorMngr_cFv)
//	80A6FCA4: 80A6EEFC (__dt__18daNpcT_ActorMngr_cFv)
//	80A6FCB0: 80361D60 (__construct_array)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpc_Lud_c::daNpc_Lud_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/func_80A6FC04.s"
}
#pragma pop


/* 80A6FCD0-80A6FCD8 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__11daNpc_Lud_cFv                        */
// True False
//  bool False
bool daNpc_Lud_c::getEyeballMaterialNo() {
	return true;
}


/* 80A6FCD8-80A6FCE0 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__11daNpc_Lud_cFv                              */
// True False
//  s32 False
s32 daNpc_Lud_c::getHeadJointNo() {
	return 4;
}


/* 80A6FCE0-80A6FCE8 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__11daNpc_Lud_cFv                              */
// True False
//  s32 False
s32 daNpc_Lud_c::getNeckJointNo() {
	return 3;
}


/* 80A6FCE8-80A6FCF0 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__11daNpc_Lud_cFv                          */
// True False
//  bool False
bool daNpc_Lud_c::getBackboneJointNo() {
	return true;
}


/* 80A6FCF0-80A6FD00 0010+00 s=1 e=0 z=0  None .text      checkChangeJoint__11daNpc_Lud_cFi                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Lud_c::checkChangeJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/checkChangeJoint__11daNpc_Lud_cFi.s"
}
#pragma pop


/* 80A6FD00-80A6FD10 0010+00 s=1 e=0 z=0  None .text      checkRemoveJoint__11daNpc_Lud_cFi                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Lud_c::checkRemoveJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/checkRemoveJoint__11daNpc_Lud_cFi.s"
}
#pragma pop


/* 80A6FD10-80A6FD58 0048+00 s=2 e=0 z=0  None .text      __dt__17daNpc_Lud_Param_cFv                                  */
//	80A6FD28: 80A70B40 (__vt__17daNpc_Lud_Param_c)
//	80A6FD2C: 80A70B40 (__vt__17daNpc_Lud_Param_c)
//	80A6FD3C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Lud_Param_c::~daNpc_Lud_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/__dt__17daNpc_Lud_Param_cFv.s"
}
#pragma pop


/* 80A6FD58-80A6FD60 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80A6FD5C: 80A6F62C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80A6FD58() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/func_80A6FD58.s"
}
#pragma pop


/* 80A6FD60-80A6FD68 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80A6FD64: 80A6F62C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80A6FD60() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_lud/d_a_npc_lud/func_80A6FD60.s"
}
#pragma pop


