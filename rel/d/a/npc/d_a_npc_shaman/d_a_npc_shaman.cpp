// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_shaman
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman.h"

// 
// Types:
// 

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daNpcT_MotionSeqMngr_c {
	struct sequenceStepData_c {
	};

	/* 80145898 */ // False False
void initialize();
	/* 80AE5E70 */ // True False
~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_motionAnmData_c {
};

struct daNpcT_evtData_c {
};

struct J3DJoint {
};

struct daNpcT_faceMotionAnmData_c {
};

struct daNpc_Sha_c {
	/* 80AE2DCC */ // True False
~daNpc_Sha_c();
	/* 80AE2EEC */ // True False
void create();
	/* 80AE31A0 */ // True False
void CreateHeap();
	/* 80AE35CC */ // True False
void Delete();
	/* 80AE3600 */ // True False
void Execute();
	/* 80AE3620 */ // True False
void Draw();
	/* 80AE36B4 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80AE36D4 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 80AE372C */ // True False
void getType();
	/* 80AE3764 */ // True False
void isDelete();
	/* 80AE3798 */ // True False
void reset();
	/* 80AE38F0 */ // True False
//  int False
void afterJntAnm(int);
	/* 80AE3974 */ // True False
void setParam();
	/* 80AE3A8C */ // True False
void checkChangeEvt();
	/* 80AE3B78 */ // True False
void setAfterTalkMotion();
	/* 80AE3C24 */ // True False
//  void False
void srchActors();
	/* 80AE3C28 */ // True False
void evtTalk();
	/* 80AE3D28 */ // True False
void evtCutProc();
	/* 80AE3DF0 */ // True False
void action();
	/* 80AE3F80 */ // True False
void beforeMove();
	/* 80AE4044 */ // True False
void setAttnPos();
	/* 80AE4360 */ // True False
void setCollision();
	/* 80AE44B8 */ // True False
//  bool False
bool drawDbgInfo();
	/* 80AE44C0 */ // True False
void selectAction();
	/* 80AE4508 */ // True False
//  int (daNpc_Sha_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Sha_c False
void chkAction(int (daNpc_Sha_c::*)(void*));
	/* 80AE4534 */ // True False
//  int (daNpc_Sha_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Sha_c False
void setAction(int (daNpc_Sha_c::*)(void*));
	/* 80AE45DC */ // True False
void getSceneChangeNoTableIx();
	/* 80AE48D0 */ // True False
//  int False
void setTempBit(int);
	/* 80AE4974 */ // True False
//  int False
void cutPerformAugury(int);
	/* 80AE4E24 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80AE50EC */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80AE52CC */ // True False
void query265();
	/* 80AE52F0 */ // True False
void query268();
	/* 80AE5314 */ // True False
void query267();
	/* 80AE5338 */ // True False
void query078();
	/* 80AE535C */ // True False
void query264();
	/* 80AE5380 */ // True False
void query266();
	/* 80AE53A4 */ // True False
void query542();
	/* 80AE53C8 */ // True False
void query461();
	/* 80AE53EC */ // True False
void query288();
	/* 80AE5410 */ // True False
//  bool False
bool query000();
	/* 80AE5418 */ // True False
//  bool False
bool query999();
	/* 80AE69E0 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpc_Sha_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80AE6B1C */ // True False
//  bool False
bool getEyeballMaterialNo();
	/* 80AE6B24 */ // True False
//  s32 False
s32 getHeadJointNo();
	/* 80AE6B2C */ // True False
//  s32 False
s32 getNeckJointNo();
	/* 80AE6B34 */ // True False
//  bool False
bool getBackboneJointNo();
	/* 80AE6B3C */ // True False
//  int False
void checkChangeJoint(int);
	/* 80AE6B4C */ // True False
//  int False
void checkRemoveJoint(int);
};

struct daNpc_Sha_Param_c {
	/* 80AE6B5C */ // True False
~daNpc_Sha_Param_c();
};

struct J3DModel {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80AE58A8 */ // True False
~cXyz();
	/* 80AE5E24 */ // True False
cXyz();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct csXyz {
	/* 80AE58E4 */ // True False
~csXyz();
	/* 80AE5D24 */ // True False
csXyz();
};

struct _GXColorS10 {
};

struct daNpcT_c {
	/* 80147FA4 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
void tgHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
	/* 801483F8 */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void loadRes(s8 const*, char const**);
	/* 801484AC */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void deleteRes(s8 const*, char const**);
	/* 8014852C */ // False False
void execute();
	/* 8014886C */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
	/* 80148C70 */ // False False
void setEnvTevColor();
	/* 80148CCC */ // False False
void setRoomNo();
	/* 801490D4 */ // False False
void ctrlBtk();
	/* 80149190 */ // False False
void setMtx();
	/* 8014951C */ // False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 8014997C */ // False False
void evtProc();
	/* 80149BB4 */ // False False
void setFootPos();
	/* 80149D7C */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
void setFootPrtcl(cXyz*, f32, f32);
	/* 8014A05C */ // False False
//  bool False
bool checkCullDraw();
	/* 8014A064 */ // False False
void twilight();
	/* 8014A0B0 */ // False False
void evtOrder();
	/* 8014A224 */ // False False
void evtChange();
	/* 8014A324 */ // False False
void clrParam();
	/* 8014A388 */ // False False
//  int False
//  bool False
void setFaceMotionAnm(int, bool);
	/* 8014A628 */ // False False
//  int False
//  f32 False
//  int False
void setMotionAnm(int, f32, int);
	/* 8014AA18 */ // False False
//  s16 False
void setAngle(s16);
	/* 8014A99C */ // False False
//  csXyz False
void setAngle(csXyz);
	/* 8014AA40 */ // False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
void hitChk(dCcD_GObjInf*, u32);
	/* 8014AAD0 */ // False False
//  int False
//  int False
//  int False
void setDamage(int, int, int);
	/* 8014ABD0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
void chkActorInSight(fopAc_ac_c*, f32, s16);
	/* 8014B338 */ // False False
void srchPlayerActor();
	/* 8014B648 */ // False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
void step(s16, int, int, int, int);
	/* 8014BBF0 */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 8014BC78 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void talkProc(int*, int, fopAc_ac_c**, int);
	/* 80AE5520 */ // True False
~daNpcT_c();
	/* 80AE5920 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80AE6360 */ // True False
//  void False
//  int False
void ctrlSubFaceMotion(int);
	/* 80AE6364 */ // True False
//  s32 False
s32 getFootLJointNo();
	/* 80AE636C */ // True False
//  s32 False
s32 getFootRJointNo();
	/* 80AE6374 */ // True False
//  bool False
bool getEyeballLMaterialNo();
	/* 80AE637C */ // True False
//  bool False
bool getEyeballRMaterialNo();
	/* 80AE6384 */ // True False
//  bool False
bool evtEndProc();
	/* 80AE638C */ // True False
//  void False
void afterMoved();
	/* 80AE6390 */ // True False
//  bool False
bool chkXYItems();
	/* 80AE6398 */ // True False
void decTmr();
	/* 80AE63B0 */ // True False
//  void False
void drawOtherMdl();
	/* 80AE63B4 */ // True False
//  void False
void drawGhost();
	/* 80AE63B8 */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetFaceMotionAnm(int, int, f32, int);
	/* 80AE63C0 */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetMotionAnm(int, int, f32, int);
	/* 80AE63C8 */ // True False
//  daNpcT_faceMotionAnmData_c False
void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
	/* 80AE63F8 */ // True False
//  daNpcT_motionAnmData_c False
void getMotionAnm(daNpcT_motionAnmData_c);
	/* 80AE6428 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeAnm(int*, int*);
	/* 80AE642C */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBck(int*, int*);
	/* 80AE6430 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtp(int*, int*);
	/* 80AE6434 */ // True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtk(int*, int*);
};

struct daNpcT_MatAnm_c {
	/* 80145764 */ // False False
void initialize();
};

struct daNpcT_JntAnm_c {
	/* 80146C98 */ // False False
void initialize();
	/* 80146CD8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
void setParam(fopAc_ac_c*, J3DModel*, cXyz*, int, int, int, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, cXyz*);
	/* 80147C38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void calcJntRad(f32, f32, f32);
	/* 80AE5D28 */ // True False
~daNpcT_JntAnm_c();
	/* 80AE603C */ // True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
void setEyeAngleY(cXyz, s16, int, f32, s16);
	/* 80AE6158 */ // True False
//  cXyz False
//  f32 False
//  s16 False
void setEyeAngleX(cXyz, f32, s16);
};

struct daNpcT_DmgStagger_c {
	/* 80147DCC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
void setParam(fopAc_ac_c*, fopAc_ac_c*, s16);
	/* 80147E3C */ // False False
//  int False
void calc(int);
};

struct daNpcT_ActorMngr_c {
	/* 801456D4 */ // False False
void initialize();
	/* 801456E0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801456FC */ // False False
void remove();
	/* 80145708 */ // False False
void getActorP();
	/* 80AE5E28 */ // True False
~daNpcT_ActorMngr_c();
};

struct dSv_event_c {
	/* 8003498C */ // False False
//  u16 False
void onEventBit(u16);
	/* 800349A4 */ // False False
//  u16 False
void offEventBit(u16);
	/* 800349E0 */ // False False
//  u16 False
//  u8 False
void setEventReg(u16, u8);
	/* 80034A04 */ // False False
//  u16 False
void getEventReg(u16) const;
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
	/* 8024A528 */ // False False
//  int* False
// 	 int False
void getEventId(int*);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 800480EC */ // False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getMySubstanceP(int, char const*, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80AE5F28 */ // True False
~dCcD_GStts();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80AE5F84 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80AE5EB8 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80AE6A8C */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80AE6AD4 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80AE54D8 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DTexNoAnm {
	/* 80AE34B8 */ // True False
~J3DTexNoAnm();
	/* 80AE3500 */ // True False
J3DTexNoAnm();
	/* 80AE54A8 */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 80AE3524 */ // True False
~J3DTexMtxAnm();
	/* 80AE3560 */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 80AE3410 */ // True False
~J3DTevKColorAnm();
	/* 80AE344C */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 80AE3464 */ // True False
~J3DTevColorAnm();
	/* 80AE34A0 */ // True False
J3DTevColorAnm();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 80AE3578 */ // True False
~J3DMatColorAnm();
	/* 80AE35B4 */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80AE5FF4 */ // True False
~J3DFrameCtrl();
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpc_Sha_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Sha_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Sha_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Sha_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Sha_IsDelete(void*);
// False True
//  int* False
// 	 int False
void cLib_calcTimer__template0(int*);
// False True
//  int False
//  int False
void cLib_getRndValue__template0(int, int);

// True False
extern "C" void __dt__11daNpc_Sha_cFv();
// True False
extern "C" void create__11daNpc_Sha_cFv();
// True False
extern "C" void CreateHeap__11daNpc_Sha_cFv();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
extern "C" void Delete__11daNpc_Sha_cFv();
// True False
extern "C" void Execute__11daNpc_Sha_cFv();
// True False
extern "C" void Draw__11daNpc_Sha_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__11daNpc_Sha_cFP10fopAc_ac_c();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__11daNpc_Sha_cFP8J3DJointi();
// True False
extern "C" void getType__11daNpc_Sha_cFv();
// True False
extern "C" void isDelete__11daNpc_Sha_cFv();
// True False
extern "C" void reset__11daNpc_Sha_cFv();
// True False
//  int False
extern "C" void afterJntAnm__11daNpc_Sha_cFi();
// True False
extern "C" void setParam__11daNpc_Sha_cFv();
// True False
extern "C" void checkChangeEvt__11daNpc_Sha_cFv();
// True False
extern "C" void setAfterTalkMotion__11daNpc_Sha_cFv();
// True False
//  void False
extern "C" void srchActors__11daNpc_Sha_cFv();
// True False
extern "C" void evtTalk__11daNpc_Sha_cFv();
// True False
extern "C" void evtCutProc__11daNpc_Sha_cFv();
// True False
extern "C" void action__11daNpc_Sha_cFv();
// True False
extern "C" void beforeMove__11daNpc_Sha_cFv();
// True False
extern "C" void setAttnPos__11daNpc_Sha_cFv();
// True False
extern "C" void setCollision__11daNpc_Sha_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__11daNpc_Sha_cFv();
// True False
extern "C" void selectAction__11daNpc_Sha_cFv();
// True False
//  int (daNpc_Sha_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Sha_c False
extern "C" void chkAction__11daNpc_Sha_cFM11daNpc_Sha_cFPCvPvPv_i();
// True False
//  int (daNpc_Sha_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Sha_c False
extern "C" void setAction__11daNpc_Sha_cFM11daNpc_Sha_cFPCvPvPv_i();
// True False
extern "C" void getSceneChangeNoTableIx__11daNpc_Sha_cFv();
// True False
//  int False
extern "C" void setTempBit__11daNpc_Sha_cFi();
// True False
//  int False
extern "C" void cutPerformAugury__11daNpc_Sha_cFi();
// True False
//  void* False
// 	 void False
extern "C" void wait__11daNpc_Sha_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__11daNpc_Sha_cFPv();
// True False
extern "C" void query265__11daNpc_Sha_cFv();
// True False
extern "C" void query268__11daNpc_Sha_cFv();
// True False
extern "C" void query267__11daNpc_Sha_cFv();
// True False
extern "C" void query078__11daNpc_Sha_cFv();
// True False
extern "C" void query264__11daNpc_Sha_cFv();
// True False
extern "C" void query266__11daNpc_Sha_cFv();
// True False
extern "C" void query542__11daNpc_Sha_cFv();
// True False
extern "C" void query461__11daNpc_Sha_cFv();
// True False
extern "C" void query288__11daNpc_Sha_cFv();
// True False
//  bool False
extern "C" bool query000__11daNpc_Sha_cFv();
// True False
//  bool False
extern "C" bool query999__11daNpc_Sha_cFv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Sha_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Sha_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Sha_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Sha_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpc_Sha_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__8daNpcT_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__15daNpcT_JntAnm_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
extern "C" void setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs();
// True False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs();
// True False
//  void False
//  int False
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
// True False
//  s32 False
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool evtEndProc__8daNpcT_cFv();
// True False
//  void False
extern "C" void afterMoved__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool chkXYItems__8daNpcT_cFv();
// True False
extern "C" void decTmr__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawOtherMdl__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawGhost__8daNpcT_cFv();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetMotionAnm__8daNpcT_cFiifi();
// True False
//  daNpcT_faceMotionAnmData_c False
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
// True False
//  daNpcT_motionAnmData_c False
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeAnm__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBck__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtp__8daNpcT_cFPiPi();
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtk__8daNpcT_cFPiPi();
// False True
//  int* False
// 	 int False
extern "C" void func_80AE6438();
// False True
//  int False
//  int False
extern "C" void func_80AE6454();
// False False
extern "C" void __sinit_d_a_npc_shaman_cpp();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__11daNpc_Sha_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
//  bool False
extern "C" bool getEyeballMaterialNo__11daNpc_Sha_cFv();
// True False
//  s32 False
extern "C" s32 getHeadJointNo__11daNpc_Sha_cFv();
// True False
//  s32 False
extern "C" s32 getNeckJointNo__11daNpc_Sha_cFv();
// True False
//  bool False
extern "C" bool getBackboneJointNo__11daNpc_Sha_cFv();
// True False
//  int False
extern "C" void checkChangeJoint__11daNpc_Sha_cFi();
// True False
//  int False
extern "C" void checkRemoveJoint__11daNpc_Sha_cFi();
// True False
extern "C" void __dt__17daNpc_Sha_Param_cFv();
// True False
extern "C" static void func_80AE6BA4();
// True False
extern "C" static void func_80AE6BAC();
extern "C" extern u8 const data_80AE6C54[12];
extern "C" extern u32 const lit_4027;
extern "C" extern u32 const lit_4028;
extern "C" extern u32 const lit_4029;
extern "C" extern u32 const lit_4030;
extern "C" extern u32 const lit_4031;
extern "C" extern u32 const lit_4186;
extern "C" extern u32 const lit_4187;
extern "C" extern u32 const lit_4710;
extern "C" extern u32 const lit_4711;
extern "C" extern u32 const lit_4712;
extern "C" extern u32 const lit_4713;
extern "C" extern u32 const lit_4714;
extern "C" extern u8 const lit_4774[8];
extern "C" extern u8 const lit_4775[8];
extern "C" extern u8 const lit_4776[8];
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtList[12];
extern "C" extern u8 l_faceMotionAnmData[280];
extern "C" extern u8 l_motionAnmData[224];
extern "C" extern u8 l_faceMotionSequenceData[160];
extern "C" extern u8 l_motionSequenceData[128];
extern "C" extern void* lit_3812[3];
extern "C" extern void* lit_5232[3];
extern "C" extern void* lit_5233[3];
extern "C" extern void* lit_5234[3];
extern "C" extern void* lit_5235[3];
extern "C" extern void* lit_5236[3];
extern "C" extern void* lit_5237[3];
extern "C" extern void* lit_5238[3];
extern "C" extern void* lit_5239[3];
extern "C" extern void* lit_5240[3];
extern "C" extern void* lit_5241[3];
extern "C" extern void* lit_5242[3];
extern "C" extern void* lit_5243[3];
extern "C" extern void* lit_5244[3];
extern "C" extern void* lit_5245[3];
extern "C" extern void* lit_5246[3];
extern "C" extern void* lit_5247[3];
extern "C" extern void* lit_5248[3];
extern "C" extern void* lit_5249[3];
extern "C" extern void* lit_5250[3];
extern "C" extern void* lit_5251[3];
extern "C" extern void* lit_5252[3];
extern "C" extern void* lit_5253[3];
extern "C" extern void* lit_5254[3];
extern "C" extern void* lit_5255[3];
extern "C" extern void* lit_5256[3];
extern "C" extern void* lit_5257[3];
extern "C" extern void* lit_5258[3];
extern "C" extern void* lit_5259[3];
extern "C" extern void* lit_5260[3];
extern "C" extern void* lit_5261[3];
extern "C" extern void* lit_5262[3];
extern "C" extern void* lit_5263[3];
extern "C" extern void* lit_5264[3];
extern "C" extern void* lit_5265[3];
extern "C" extern void* lit_5266[3];
extern "C" extern void* lit_5267[3];
extern "C" extern void* lit_5268[3];
extern "C" extern void* lit_5269[3];
extern "C" extern void* lit_5270[3];
extern "C" extern void* lit_5271[3];
extern "C" extern void* lit_5272[3];
extern "C" extern void* lit_5273[3];
extern "C" extern void* lit_5274[3];
extern "C" extern void* lit_5275[3];
extern "C" extern void* lit_5276[3];
extern "C" extern void* lit_5277[3];
extern "C" extern void* lit_5278[3];
extern "C" extern void* lit_5279[3];
extern "C" extern void* g_profile_NPC_SHAMAN[12];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__22daNpcT_MotionSeqMngr_c[3];
extern "C" extern void* __vt__18daNpcT_ActorMngr_c[3];
extern "C" extern void* __vt__15daNpcT_JntAnm_c[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__11daNpc_Sha_c[49];
extern "C" extern void* __vt__17daNpc_Sha_Param_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  int False
//  f32 False
//  u32 False
//  s8 False
//  s16 False
//  int False
void dStage_changeScene(int, f32, u32, s8, s16, int);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  int False
//  int False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
void daNpcT_getPlayerInfoFromPlayerList(int, int, cXyz*, csXyz*);
// False False
//  int False
//  int False
void daNpcT_getDistTableIdx(int, int);
// False False
//  u32 False
void daNpcT_chkEvtBit(u32);
// False False
//  u32 False
void daNpcT_offTmpBit(u32);
// False False
//  u32 False
void daNpcT_chkTmpBit(u32);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  int False
//  f32 False
//  u32 False
//  s8 False
//  s16 False
//  int False
extern "C" void dStage_changeScene__FifUlScsi();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  u16 False
extern "C" void onEventBit__11dSv_event_cFUs();
// False False
//  u16 False
extern "C" void offEventBit__11dSv_event_cFUs();
// False False
//  u16 False
//  u8 False
extern "C" void setEventReg__11dSv_event_cFUsUc();
// False False
//  u16 False
extern "C" void getEventReg__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_MatAnm_cFv();
// False False
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_JntAnm_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void calcJntRad__15daNpcT_JntAnm_cFfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
extern "C" void setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs();
// False False
//  int False
extern "C" void calc__19daNpcT_DmgStagger_cFi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" void tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
// False False
extern "C" void execute__8daNpcT_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
// False False
extern "C" void setEnvTevColor__8daNpcT_cFv();
// False False
extern "C" void setRoomNo__8daNpcT_cFv();
// False False
extern "C" void ctrlBtk__8daNpcT_cFv();
// False False
extern "C" void setMtx__8daNpcT_cFv();
// False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
// False False
extern "C" void evtProc__8daNpcT_cFv();
// False False
extern "C" void setFootPos__8daNpcT_cFv();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
// False False
//  bool False
extern "C" bool checkCullDraw__8daNpcT_cFv();
// False False
extern "C" void twilight__8daNpcT_cFv();
// False False
extern "C" void evtOrder__8daNpcT_cFv();
// False False
extern "C" void evtChange__8daNpcT_cFv();
// False False
extern "C" void clrParam__8daNpcT_cFv();
// False False
//  int False
//  bool False
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
// False False
//  int False
//  f32 False
//  int False
extern "C" void setMotionAnm__8daNpcT_cFifi();
// False False
//  csXyz False
extern "C" void setAngle__8daNpcT_cF5csXyz();
// False False
//  s16 False
extern "C" void setAngle__8daNpcT_cFs();
// False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
extern "C" void hitChk__8daNpcT_cFP12dCcD_GObjInfUl();
// False False
//  int False
//  int False
//  int False
extern "C" void setDamage__8daNpcT_cFiii();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  s16 False
extern "C" void chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs();
// False False
extern "C" void srchPlayerActor__8daNpcT_cFv();
// False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
extern "C" void step__8daNpcT_cFsiiii();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
// False False
//  int False
//  int False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void daNpcT_getPlayerInfoFromPlayerList__FiiP4cXyzP5csXyz();
// False False
//  int False
//  int False
extern "C" void daNpcT_getDistTableIdx__Fii();
// False False
//  u32 False
extern "C" void daNpcT_chkEvtBit__FUl();
// False False
//  u32 False
extern "C" void daNpcT_offTmpBit__FUl();
// False False
//  u32 False
extern "C" void daNpcT_chkTmpBit__FUl();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  int* False
// 	 int False
extern "C" void getEventId__10dMsgFlow_cFPi();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_15();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_15();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcT_c[68];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__15daNpcT_MatAnm_c[4 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_Counter[12 + 4 /* padding */];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80AE6BC8-80AE6C54 008C+00 s=6 e=0 z=0  None .rodata    m__17daNpc_Sha_Param_c                                       */
SECTION_RODATA static u8 const m__17daNpc_Sha_Param_c[140] = {
	0x43, 0x52, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0x70, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0xC1, 0xA0, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AE6C54-80AE6C60 000C+00 s=0 e=0 z=0  None .rodata    heapSize$3961                                                */
SECTION_RODATA u8 const data_80AE6C54[12] = {
	0x00, 0x00, 0x3A, 0xF0, 0x00, 0x00, 0x3A, 0xF0, 0x00, 0x00, 0x3A, 0xF0,
};

/* 80AE6C60-80AE6C64 0004+00 s=0 e=0 z=0  None .rodata    @4027                                                        */
SECTION_RODATA u32 const lit_4027 = 0xC3480000;

/* 80AE6C64-80AE6C68 0004+00 s=0 e=0 z=0  None .rodata    @4028                                                        */
SECTION_RODATA u32 const lit_4028 = 0xC2C80000;

/* 80AE6C68-80AE6C6C 0004+00 s=0 e=0 z=0  None .rodata    @4029                                                        */
SECTION_RODATA u32 const lit_4029 = 0x43480000;

/* 80AE6C6C-80AE6C70 0004+00 s=0 e=0 z=0  None .rodata    @4030                                                        */
SECTION_RODATA u32 const lit_4030 = 0x43960000;

/* 80AE6C70-80AE6C74 0004+00 s=0 e=0 z=0  None .rodata    @4031                                                        */
SECTION_RODATA u32 const lit_4031 = 0xCE6E6B28;

/* 80AE6C74-80AE6C78 0004+00 s=6 e=0 z=0  None .rodata    @4185                                                        */
SECTION_RODATA static u8 const lit_4185[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80AE6C78-80AE6C7C 0004+00 s=0 e=0 z=0  None .rodata    @4186                                                        */
SECTION_RODATA u32 const lit_4186 = 0x47800000;

/* 80AE6C7C-80AE6C80 0004+00 s=0 e=0 z=0  None .rodata    @4187                                                        */
SECTION_RODATA u32 const lit_4187 = 0x3E4CCCCD;

/* 80AE6C80-80AE6C84 0004+00 s=2 e=0 z=0  None .rodata    @4331                                                        */
SECTION_RODATA static u32 const lit_4331 = 0x3F800000;

/* 80AE6C84-80AE6C88 0004+00 s=1 e=0 z=0  None .rodata    @4380                                                        */
SECTION_RODATA static u32 const lit_4380 = 0x42C80000;

/* 80AE6C88-80AE6C8C 0004+00 s=2 e=0 z=0  None .rodata    @4537                                                        */
SECTION_RODATA static u32 const lit_4537 = 0xBF800000;

/* 80AE6C8C-80AE6C90 0004+00 s=0 e=0 z=0  None .rodata    @4710                                                        */
SECTION_RODATA u32 const lit_4710 = 0xC1F00000;

/* 80AE6C90-80AE6C94 0004+00 s=0 e=0 z=0  None .rodata    @4711                                                        */
SECTION_RODATA u32 const lit_4711 = 0x41200000;

/* 80AE6C94-80AE6C98 0004+00 s=0 e=0 z=0  None .rodata    @4712                                                        */
SECTION_RODATA u32 const lit_4712 = 0x38C90FDB;

/* 80AE6C98-80AE6C9C 0004+00 s=0 e=0 z=0  None .rodata    @4713                                                        */
SECTION_RODATA u32 const lit_4713 = 0x42B40000;

/* 80AE6C9C-80AE6CA0 0004+00 s=0 e=0 z=0  None .rodata    @4714                                                        */
SECTION_RODATA u32 const lit_4714 = 0x42BC0000;

/* 80AE6CA0-80AE6CA8 0008+00 s=2 e=0 z=0  None .rodata    @4716                                                        */
SECTION_RODATA static u8 const lit_4716[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80AE6CA8-80AE6CB0 0008+00 s=0 e=0 z=0  None .rodata    @4774                                                        */
SECTION_RODATA u8 const lit_4774[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AE6CB0-80AE6CB8 0008+00 s=0 e=0 z=0  None .rodata    @4775                                                        */
SECTION_RODATA u8 const lit_4775[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AE6CB8-80AE6CC0 0008+00 s=0 e=0 z=0  None .rodata    @4776                                                        */
SECTION_RODATA u8 const lit_4776[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AE6CC0-80AE6CCC 000C+00 s=1 e=0 z=0  None .rodata    @4995                                                        */
SECTION_RODATA static u8 const lit_4995[12] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80AE6CCC-80AE6CE8 001C+00 s=5 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80AE6CCC[28] = {
	/* 80AE6CCC 0001 stringBase_80AE6CCC @stringBase0 */
	0x00,
	/* 80AE6CCD 000C data_80AE6CCD None */
	0x4E, 0x4F, 0x5F, 0x52, 0x45, 0x53, 0x50, 0x4F, 0x4E, 0x53, 0x45, 0x00,
	/* 80AE6CD9 000F data_80AE6CD9 None */
	0x50, 0x45, 0x52, 0x46, 0x4F, 0x52, 0x4D, 0x5F, 0x41, 0x55, 0x47, 0x55, 0x52, 0x59, 0x00,
};

/* 80AE6CE8-80AE6D18 0030+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80AE6CE8[48] = {
	/* 80AE6CE8 0007 data_80AE6CE8 None */
	0x41, 0x4C, 0x4C, 0x47, 0x45, 0x54, 0x00,
	/* 80AE6CEF 0007 data_80AE6CEF None */
	0x4E, 0x4F, 0x4C, 0x4F, 0x4F, 0x4B, 0x00,
	/* 80AE6CF6 0007 data_80AE6CF6 None */
	0x52, 0x45, 0x54, 0x55, 0x52, 0x4E, 0x00,
	/* 80AE6CFD 001B data_80AE6CFD None */
	0x53, 0x68, 0x61, 0x00, 0x70, 0x72, 0x6D, 0x00, 0x6D, 0x73, 0x67, 0x4E, 0x6F, 0x00, 0x6D, 0x73,
	0x67, 0x4E, 0x6F, 0x32, 0x00, 0x74, 0x69, 0x6D, 0x65, 0x72, 0x00,
};

/* 80AE6D18-80AE6D24 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AE6D24-80AE6D38 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80AE6D38-80AE6D40 0008+00 s=1 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[8] = {
	0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x01,
};

/* 80AE6D40-80AE6D70 0030+00 s=0 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA void* l_evtList[12] = {
	(void*)(((char*)&struct_80AE6CCC)+0x0) /* @stringBase0 */,
	(void*)NULL,
	(void*)(((char*)&struct_80AE6CCC)+0x1) /* None */,
	(void*)NULL,
	(void*)(((char*)&struct_80AE6CCC)+0xD) /* None */,
	(void*)0x00000001,
	(void*)(((char*)&struct_80AE6CE8)+0x0) /* None */,
	(void*)0x00000001,
	(void*)(((char*)&struct_80AE6CE8)+0x7) /* None */,
	(void*)0x00000001,
	(void*)(((char*)&struct_80AE6CE8)+0xE) /* None */,
	(void*)0x00000001,
};

/* 80AE6D70-80AE6D78 0008+00 s=2 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[2] = {
	(void*)(((char*)&struct_80AE6CCC)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80AE6CE8)+0x15) /* None */,
};

/* 80AE6D78-80AE6D7C 0002+02 s=1 e=0 z=0  None .data      l_loadResPtrn0                                               */
SECTION_DATA static u16 l_loadResPtrn0[1 + 1 /* padding */] = {
	0x01FF,
	/* padding */
	0x0000,
};

/* 80AE6D7C-80AE6D88 000C+00 s=1 e=0 z=0  None .data      l_loadResPtrnList                                            */
SECTION_DATA static void* l_loadResPtrnList[3] = {
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
};

/* 80AE6D88-80AE6EA0 0118+00 s=0 e=0 z=0  None .data      l_faceMotionAnmData                                          */
SECTION_DATA u8 l_faceMotionAnmData[280] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x21,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x27,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
};

/* 80AE6EA0-80AE6F80 00E0+00 s=0 e=0 z=0  None .data      l_motionAnmData                                              */
SECTION_DATA u8 l_motionAnmData[224] = {
	0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
};

/* 80AE6F80-80AE7020 00A0+00 s=0 e=0 z=0  None .data      l_faceMotionSequenceData                                     */
SECTION_DATA u8 l_faceMotionSequenceData[160] = {
	0x00, 0x01, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x01, 0x00, 0x07, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0x00, 0x04, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0xFF, 0x01, 0x00, 0x09, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AE7020-80AE70A0 0080+00 s=0 e=0 z=0  None .data      l_motionSequenceData                                         */
SECTION_DATA u8 l_motionSequenceData[128] = {
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x01, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x01, 0x00, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AE70A0-80AE70A8 0008+00 s=1 e=0 z=0  None .data      mCutNameList__11daNpc_Sha_c                                  */
SECTION_DATA static void* mCutNameList__11daNpc_Sha_c[2] = {
	(void*)(((char*)&struct_80AE6CCC)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80AE6CCC)+0xD) /* None */,
};

/* 80AE70A8-80AE70B4 000C+00 s=0 e=0 z=0  None .data      @3812                                                        */
SECTION_DATA void* lit_3812[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutPerformAugury__11daNpc_Sha_cFi,
};

/* 80AE70B4-80AE70CC 0018+00 s=1 e=0 z=0  None .data      mCutList__11daNpc_Sha_c                                      */
SECTION_DATA static u8 mCutList__11daNpc_Sha_c[24] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AE70CC-80AE70D8 000C+00 s=1 e=0 z=0  None .data      @4497                                                        */
SECTION_DATA static void* lit_4497[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__11daNpc_Sha_cFPv,
};

/* 80AE70D8-80AE70E4 000C+00 s=1 e=0 z=0  None .data      @4549                                                        */
SECTION_DATA static void* lit_4549[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__11daNpc_Sha_cFPv,
};

/* 80AE70E4-80AE70F0 000C+00 s=1 e=0 z=0  None .data      @4559                                                        */
SECTION_DATA static void* lit_4559[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__11daNpc_Sha_cFPv,
};

/* 80AE70F0-80AE70FC 000C+00 s=1 e=0 z=0  None .data      @4823                                                        */
SECTION_DATA static void* lit_4823[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__11daNpc_Sha_cFPv,
};

/* 80AE70FC-80AE711C 0020+00 s=1 e=0 z=0  None .data      @5097                                                        */
SECTION_DATA static void* lit_5097[8] = {
	(void*)(((char*)cutPerformAugury__11daNpc_Sha_cFi)+0x10C),
	(void*)(((char*)cutPerformAugury__11daNpc_Sha_cFi)+0x200),
	(void*)(((char*)cutPerformAugury__11daNpc_Sha_cFi)+0x138),
	(void*)(((char*)cutPerformAugury__11daNpc_Sha_cFi)+0x140),
	(void*)(((char*)cutPerformAugury__11daNpc_Sha_cFi)+0x160),
	(void*)(((char*)cutPerformAugury__11daNpc_Sha_cFi)+0x180),
	(void*)(((char*)cutPerformAugury__11daNpc_Sha_cFi)+0x1A0),
	(void*)(((char*)cutPerformAugury__11daNpc_Sha_cFi)+0x1F4),
};

/* 80AE711C-80AE7128 000C+00 s=1 e=0 z=0  None .data      mEvtBitLabels__11daNpc_Sha_c                                 */
SECTION_DATA static u8 mEvtBitLabels__11daNpc_Sha_c[12] = {
	0xF0, 0xFF, 0xEF, 0xFF, 0xEE, 0xFF, 0xED, 0xFF, 0xEC, 0xFF, 0xEB, 0xFF,
};

/* 80AE7128-80AE7134 000C+00 s=2 e=0 z=0  None .data      mTmpBitLabels__11daNpc_Sha_c                                 */
SECTION_DATA static u8 mTmpBitLabels__11daNpc_Sha_c[12] = {
	0xFA, 0xFF, 0xF9, 0xFF, 0xF8, 0xFF, 0xF7, 0xFF, 0xF6, 0xFF, 0xF5, 0xFF,
};

/* 80AE7134-80AE71F4 00C0+00 s=1 e=0 z=0  None .data      mSceneChangeNoTable__11daNpc_Sha_c                           */
SECTION_DATA static u8 mSceneChangeNoTable__11daNpc_Sha_c[192] = {
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x10,
	0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x14,
	0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x18,
	0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x1C,
	0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x20,
	0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x24,
	0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x28,
	0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x2C,
	0x00, 0x00, 0x00, 0x2D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80AE71F4-80AE7200 000C+00 s=0 e=0 z=0  None .data      @5232                                                        */
SECTION_DATA void* lit_5232[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE7200-80AE720C 000C+00 s=0 e=0 z=0  None .data      @5233                                                        */
SECTION_DATA void* lit_5233[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query265__11daNpc_Sha_cFv,
};

/* 80AE720C-80AE7218 000C+00 s=0 e=0 z=0  None .data      @5234                                                        */
SECTION_DATA void* lit_5234[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE7218-80AE7224 000C+00 s=0 e=0 z=0  None .data      @5235                                                        */
SECTION_DATA void* lit_5235[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query267__11daNpc_Sha_cFv,
};

/* 80AE7224-80AE7230 000C+00 s=0 e=0 z=0  None .data      @5236                                                        */
SECTION_DATA void* lit_5236[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE7230-80AE723C 000C+00 s=0 e=0 z=0  None .data      @5237                                                        */
SECTION_DATA void* lit_5237[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE723C-80AE7248 000C+00 s=0 e=0 z=0  None .data      @5238                                                        */
SECTION_DATA void* lit_5238[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query078__11daNpc_Sha_cFv,
};

/* 80AE7248-80AE7254 000C+00 s=0 e=0 z=0  None .data      @5239                                                        */
SECTION_DATA void* lit_5239[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query268__11daNpc_Sha_cFv,
};

/* 80AE7254-80AE7260 000C+00 s=0 e=0 z=0  None .data      @5240                                                        */
SECTION_DATA void* lit_5240[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query265__11daNpc_Sha_cFv,
};

/* 80AE7260-80AE726C 000C+00 s=0 e=0 z=0  None .data      @5241                                                        */
SECTION_DATA void* lit_5241[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query265__11daNpc_Sha_cFv,
};

/* 80AE726C-80AE7278 000C+00 s=0 e=0 z=0  None .data      @5242                                                        */
SECTION_DATA void* lit_5242[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query078__11daNpc_Sha_cFv,
};

/* 80AE7278-80AE7284 000C+00 s=0 e=0 z=0  None .data      @5243                                                        */
SECTION_DATA void* lit_5243[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE7284-80AE7290 000C+00 s=0 e=0 z=0  None .data      @5244                                                        */
SECTION_DATA void* lit_5244[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE7290-80AE729C 000C+00 s=0 e=0 z=0  None .data      @5245                                                        */
SECTION_DATA void* lit_5245[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query264__11daNpc_Sha_cFv,
};

/* 80AE729C-80AE72A8 000C+00 s=0 e=0 z=0  None .data      @5246                                                        */
SECTION_DATA void* lit_5246[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE72A8-80AE72B4 000C+00 s=0 e=0 z=0  None .data      @5247                                                        */
SECTION_DATA void* lit_5247[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE72B4-80AE72C0 000C+00 s=0 e=0 z=0  None .data      @5248                                                        */
SECTION_DATA void* lit_5248[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE72C0-80AE72CC 000C+00 s=0 e=0 z=0  None .data      @5249                                                        */
SECTION_DATA void* lit_5249[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE72CC-80AE72D8 000C+00 s=0 e=0 z=0  None .data      @5250                                                        */
SECTION_DATA void* lit_5250[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query078__11daNpc_Sha_cFv,
};

/* 80AE72D8-80AE72E4 000C+00 s=0 e=0 z=0  None .data      @5251                                                        */
SECTION_DATA void* lit_5251[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query078__11daNpc_Sha_cFv,
};

/* 80AE72E4-80AE72F0 000C+00 s=0 e=0 z=0  None .data      @5252                                                        */
SECTION_DATA void* lit_5252[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query265__11daNpc_Sha_cFv,
};

/* 80AE72F0-80AE72FC 000C+00 s=0 e=0 z=0  None .data      @5253                                                        */
SECTION_DATA void* lit_5253[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query265__11daNpc_Sha_cFv,
};

/* 80AE72FC-80AE7308 000C+00 s=0 e=0 z=0  None .data      @5254                                                        */
SECTION_DATA void* lit_5254[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query266__11daNpc_Sha_cFv,
};

/* 80AE7308-80AE7314 000C+00 s=0 e=0 z=0  None .data      @5255                                                        */
SECTION_DATA void* lit_5255[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query266__11daNpc_Sha_cFv,
};

/* 80AE7314-80AE7320 000C+00 s=0 e=0 z=0  None .data      @5256                                                        */
SECTION_DATA void* lit_5256[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query267__11daNpc_Sha_cFv,
};

/* 80AE7320-80AE732C 000C+00 s=0 e=0 z=0  None .data      @5257                                                        */
SECTION_DATA void* lit_5257[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query267__11daNpc_Sha_cFv,
};

/* 80AE732C-80AE7338 000C+00 s=0 e=0 z=0  None .data      @5258                                                        */
SECTION_DATA void* lit_5258[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query268__11daNpc_Sha_cFv,
};

/* 80AE7338-80AE7344 000C+00 s=0 e=0 z=0  None .data      @5259                                                        */
SECTION_DATA void* lit_5259[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query268__11daNpc_Sha_cFv,
};

/* 80AE7344-80AE7350 000C+00 s=0 e=0 z=0  None .data      @5260                                                        */
SECTION_DATA void* lit_5260[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query542__11daNpc_Sha_cFv,
};

/* 80AE7350-80AE735C 000C+00 s=0 e=0 z=0  None .data      @5261                                                        */
SECTION_DATA void* lit_5261[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query542__11daNpc_Sha_cFv,
};

/* 80AE735C-80AE7368 000C+00 s=0 e=0 z=0  None .data      @5262                                                        */
SECTION_DATA void* lit_5262[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query267__11daNpc_Sha_cFv,
};

/* 80AE7368-80AE7374 000C+00 s=0 e=0 z=0  None .data      @5263                                                        */
SECTION_DATA void* lit_5263[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query288__11daNpc_Sha_cFv,
};

/* 80AE7374-80AE7380 000C+00 s=0 e=0 z=0  None .data      @5264                                                        */
SECTION_DATA void* lit_5264[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query266__11daNpc_Sha_cFv,
};

/* 80AE7380-80AE738C 000C+00 s=0 e=0 z=0  None .data      @5265                                                        */
SECTION_DATA void* lit_5265[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE738C-80AE7398 000C+00 s=0 e=0 z=0  None .data      @5266                                                        */
SECTION_DATA void* lit_5266[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE7398-80AE73A4 000C+00 s=0 e=0 z=0  None .data      @5267                                                        */
SECTION_DATA void* lit_5267[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query000__11daNpc_Sha_cFv,
};

/* 80AE73A4-80AE73B0 000C+00 s=0 e=0 z=0  None .data      @5268                                                        */
SECTION_DATA void* lit_5268[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query264__11daNpc_Sha_cFv,
};

/* 80AE73B0-80AE73BC 000C+00 s=0 e=0 z=0  None .data      @5269                                                        */
SECTION_DATA void* lit_5269[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query267__11daNpc_Sha_cFv,
};

/* 80AE73BC-80AE73C8 000C+00 s=0 e=0 z=0  None .data      @5270                                                        */
SECTION_DATA void* lit_5270[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query461__11daNpc_Sha_cFv,
};

/* 80AE73C8-80AE73D4 000C+00 s=0 e=0 z=0  None .data      @5271                                                        */
SECTION_DATA void* lit_5271[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query264__11daNpc_Sha_cFv,
};

/* 80AE73D4-80AE73E0 000C+00 s=0 e=0 z=0  None .data      @5272                                                        */
SECTION_DATA void* lit_5272[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query264__11daNpc_Sha_cFv,
};

/* 80AE73E0-80AE73EC 000C+00 s=0 e=0 z=0  None .data      @5273                                                        */
SECTION_DATA void* lit_5273[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query264__11daNpc_Sha_cFv,
};

/* 80AE73EC-80AE73F8 000C+00 s=0 e=0 z=0  None .data      @5274                                                        */
SECTION_DATA void* lit_5274[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query266__11daNpc_Sha_cFv,
};

/* 80AE73F8-80AE7404 000C+00 s=0 e=0 z=0  None .data      @5275                                                        */
SECTION_DATA void* lit_5275[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query267__11daNpc_Sha_cFv,
};

/* 80AE7404-80AE7410 000C+00 s=0 e=0 z=0  None .data      @5276                                                        */
SECTION_DATA void* lit_5276[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query264__11daNpc_Sha_cFv,
};

/* 80AE7410-80AE741C 000C+00 s=0 e=0 z=0  None .data      @5277                                                        */
SECTION_DATA void* lit_5277[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query999__11daNpc_Sha_cFv,
};

/* 80AE741C-80AE7428 000C+00 s=0 e=0 z=0  None .data      @5278                                                        */
SECTION_DATA void* lit_5278[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query999__11daNpc_Sha_cFv,
};

/* 80AE7428-80AE7434 000C+00 s=0 e=0 z=0  None .data      @5279                                                        */
SECTION_DATA void* lit_5279[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)query999__11daNpc_Sha_cFv,
};

/* 80AE7434-80AE7674 0240+00 s=1 e=0 z=0  None .data      mQueries__11daNpc_Sha_c                                      */
SECTION_DATA static u8 mQueries__11daNpc_Sha_c[576] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AE7674-80AE7694 0020+00 s=1 e=0 z=0  None .data      daNpc_Sha_MethodTable                                        */
SECTION_DATA static void* daNpc_Sha_MethodTable[8] = {
	(void*)daNpc_Sha_Create__FPv,
	(void*)daNpc_Sha_Delete__FPv,
	(void*)daNpc_Sha_Execute__FPv,
	(void*)daNpc_Sha_IsDelete__FPv,
	(void*)daNpc_Sha_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80AE7694-80AE76C4 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_SHAMAN                                         */
SECTION_DATA void* g_profile_NPC_SHAMAN[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x026B0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000FA8,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x016C0000,
	(void*)&daNpc_Sha_MethodTable,
	(void*)0x00040108,
	(void*)0x040E0000,
};

/* 80AE76C4-80AE76D0 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80AE76D0-80AE76DC 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80AE76DC-80AE7700 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AE6BAC,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80AE6BA4,
};

/* 80AE7700-80AE770C 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80AE770C-80AE7718 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80AE7718-80AE7724 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80AE7724-80AE7730 000C+00 s=3 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c                               */
SECTION_DATA void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80AE7730-80AE773C 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcT_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80AE773C-80AE7748 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c                                      */
SECTION_DATA void* __vt__15daNpcT_JntAnm_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80AE7748-80AE7754 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80AE7754-80AE7760 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80AE7760-80AE7824 00C4+00 s=2 e=0 z=0  None .data      __vt__11daNpc_Sha_c                                          */
SECTION_DATA void* __vt__11daNpc_Sha_c[49] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__11daNpc_Sha_cFv,
	(void*)ctrlBtk__8daNpcT_cFv,
	(void*)ctrlSubFaceMotion__8daNpcT_cFi,
	(void*)checkChangeJoint__11daNpc_Sha_cFi,
	(void*)checkRemoveJoint__11daNpc_Sha_cFi,
	(void*)getBackboneJointNo__11daNpc_Sha_cFv,
	(void*)getNeckJointNo__11daNpc_Sha_cFv,
	(void*)getHeadJointNo__11daNpc_Sha_cFv,
	(void*)getFootLJointNo__8daNpcT_cFv,
	(void*)getFootRJointNo__8daNpcT_cFv,
	(void*)getEyeballLMaterialNo__8daNpcT_cFv,
	(void*)getEyeballRMaterialNo__8daNpcT_cFv,
	(void*)getEyeballMaterialNo__11daNpc_Sha_cFv,
	(void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
	(void*)afterJntAnm__11daNpc_Sha_cFi,
	(void*)setParam__11daNpc_Sha_cFv,
	(void*)checkChangeEvt__11daNpc_Sha_cFv,
	(void*)evtTalk__11daNpc_Sha_cFv,
	(void*)evtEndProc__8daNpcT_cFv,
	(void*)evtCutProc__11daNpc_Sha_cFv,
	(void*)setAfterTalkMotion__11daNpc_Sha_cFv,
	(void*)evtProc__8daNpcT_cFv,
	(void*)action__11daNpc_Sha_cFv,
	(void*)beforeMove__11daNpc_Sha_cFv,
	(void*)afterMoved__8daNpcT_cFv,
	(void*)setAttnPos__11daNpc_Sha_cFv,
	(void*)setFootPos__8daNpcT_cFv,
	(void*)setCollision__11daNpc_Sha_cFv,
	(void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
	(void*)checkCullDraw__8daNpcT_cFv,
	(void*)twilight__8daNpcT_cFv,
	(void*)chkXYItems__8daNpcT_cFv,
	(void*)evtOrder__8daNpcT_cFv,
	(void*)decTmr__8daNpcT_cFv,
	(void*)clrParam__8daNpcT_cFv,
	(void*)drawDbgInfo__11daNpc_Sha_cFv,
	(void*)drawOtherMdl__8daNpcT_cFv,
	(void*)drawGhost__8daNpcT_cFv,
	(void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
	(void*)afterSetMotionAnm__8daNpcT_cFiifi,
	(void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
	(void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
	(void*)changeAnm__8daNpcT_cFPiPi,
	(void*)changeBck__8daNpcT_cFPiPi,
	(void*)changeBtp__8daNpcT_cFPiPi,
	(void*)changeBtk__8daNpcT_cFPiPi,
	(void*)setMotionAnm__8daNpcT_cFifi,
};

/* 80AE2DCC-80AE2EEC 0120+00 s=1 e=0 z=0  None .text      __dt__11daNpc_Sha_cFv                                        */
//	80AE2DEC: 80AE7760 (__vt__11daNpc_Sha_c)
//	80AE2DF0: 80AE7760 (__vt__11daNpc_Sha_c)
//	80AE2E04: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80AE2E14: 80AE6D7C (l_loadResPtrnList)
//	80AE2E18: 80AE6D7C (l_loadResPtrnList)
//	80AE2E20: 80AE6D70 (l_resNameList)
//	80AE2E24: 80AE6D70 (l_resNameList)
//	80AE2E28: 801484AC (deleteRes__8daNpcT_cFPCScPPCc)
//	80AE2E34: 803AC050 (__vt__8dCcD_Cyl)
//	80AE2E38: 803AC050 (__vt__8dCcD_Cyl)
//	80AE2E58: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AE2E5C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AE2E74: 80AE7754 (__vt__8cM3dGCyl)
//	80AE2E78: 80AE7754 (__vt__8cM3dGCyl)
//	80AE2E88: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AE2E8C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AE2E9C: 80AE7748 (__vt__8cM3dGAab)
//	80AE2EA0: 80AE7748 (__vt__8cM3dGAab)
//	80AE2EB0: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80AE2EBC: 80AE5520 (__dt__8daNpcT_cFv)
//	80AE2ECC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Sha_c::~daNpc_Sha_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE2EEC-80AE31A0 02B4+00 s=1 e=0 z=0  None .text      create__11daNpc_Sha_cFv                                      */
//	80AE2EFC: 803621DC (_savegpr_29)
//	80AE2F04: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE2F08: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE2F0C: 80AE6D18 (cNullVec__6Z2Calc)
//	80AE2F10: 80AE6D18 (cNullVec__6Z2Calc)
//	80AE2F4C: 80AE69E0 (__ct__11daNpc_Sha_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AE2F60: 80AE372C (getType__11daNpc_Sha_cFv)
//	80AE2FA4: 801483F8 (loadRes__8daNpcT_cFPCScPPCc)
//	80AE2FB8: 80AE3764 (isDelete__11daNpc_Sha_cFv)
//	80AE2FD0: 80AE36B4 (createHeapCallBack__11daNpc_Sha_cFP10fopAc_ac_c)
//	80AE2FD4: 80AE36B4 (createHeapCallBack__11daNpc_Sha_cFP10fopAc_ac_c)
//	80AE2FE8: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80AE3028: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80AE3040: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80AE3048: 80AE3798 (reset__11daNpc_Sha_cFv)
//	80AE3074: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80AE3098: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80AE30A0: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80AE30A4: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80AE30A8: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80AE30B4: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80AE30B8: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80AE30C4: 804061C0 (g_dComIfG_gameInfo)
//	80AE30C8: 804061C0 (g_dComIfG_gameInfo)
//	80AE30D0: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80AE3160: 80148C70 (setEnvTevColor__8daNpcT_cFv)
//	80AE3168: 80148CCC (setRoomNo__8daNpcT_cFv)
//	80AE3178: 80AE3600 (Execute__11daNpc_Sha_cFv)
//	80AE318C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/create__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE31A0-80AE3410 0270+00 s=1 e=0 z=0  None .text      CreateHeap__11daNpc_Sha_cFv                                  */
//	80AE31B0: 803621DC (_savegpr_29)
//	80AE31B8: 80AE6D38 (l_bmdData)
//	80AE31BC: 80AE6D38 (l_bmdData)
//	80AE31C8: 80AE6D70 (l_resNameList)
//	80AE31CC: 80AE6D70 (l_resNameList)
//	80AE31D8: 804061C0 (g_dComIfG_gameInfo)
//	80AE31DC: 804061C0 (g_dComIfG_gameInfo)
//	80AE31EC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80AE3204: 802CEC4C (__nw__FUl)
//	80AE3240: 80AE6C80 (lit_4331)
//	80AE3244: 80AE6C80 (lit_4331)
//	80AE3250: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80AE3280: 80AE36D4 (ctrlJointCallBack__11daNpc_Sha_cFP8J3DJointi)
//	80AE3284: 80AE36D4 (ctrlJointCallBack__11daNpc_Sha_cFP8J3DJointi)
//	80AE32B8: 802CEC4C (__nw__FUl)
//	80AE32C8: 803CEE60 (__vt__14J3DMaterialAnm)
//	80AE32CC: 803CEE60 (__vt__14J3DMaterialAnm)
//	80AE32D8: 80AE35B4 (__ct__14J3DMatColorAnmFv)
//	80AE32DC: 80AE35B4 (__ct__14J3DMatColorAnmFv)
//	80AE32E0: 80AE3578 (__dt__14J3DMatColorAnmFv)
//	80AE32E4: 80AE3578 (__dt__14J3DMatColorAnmFv)
//	80AE32F0: 80361D60 (__construct_array)
//	80AE32F8: 80AE3560 (__ct__12J3DTexMtxAnmFv)
//	80AE32FC: 80AE3560 (__ct__12J3DTexMtxAnmFv)
//	80AE3300: 80AE3524 (__dt__12J3DTexMtxAnmFv)
//	80AE3304: 80AE3524 (__dt__12J3DTexMtxAnmFv)
//	80AE3310: 80361D60 (__construct_array)
//	80AE3318: 80AE3500 (__ct__11J3DTexNoAnmFv)
//	80AE331C: 80AE3500 (__ct__11J3DTexNoAnmFv)
//	80AE3320: 80AE34B8 (__dt__11J3DTexNoAnmFv)
//	80AE3324: 80AE34B8 (__dt__11J3DTexNoAnmFv)
//	80AE3330: 80361D60 (__construct_array)
//	80AE3338: 80AE34A0 (__ct__14J3DTevColorAnmFv)
//	80AE333C: 80AE34A0 (__ct__14J3DTevColorAnmFv)
//	80AE3340: 80AE3464 (__dt__14J3DTevColorAnmFv)
//	80AE3344: 80AE3464 (__dt__14J3DTevColorAnmFv)
//	80AE3350: 80361D60 (__construct_array)
//	80AE3358: 80AE344C (__ct__15J3DTevKColorAnmFv)
//	80AE335C: 80AE344C (__ct__15J3DTevKColorAnmFv)
//	80AE3360: 80AE3410 (__dt__15J3DTevKColorAnmFv)
//	80AE3364: 80AE3410 (__dt__15J3DTevKColorAnmFv)
//	80AE3370: 80361D60 (__construct_array)
//	80AE3378: 8032C320 (initialize__14J3DMaterialAnmFv)
//	80AE337C: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80AE3380: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80AE338C: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80AE33B4: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	80AE33C8: 80AE6C74 (lit_4185)
//	80AE33CC: 80AE6C74 (lit_4185)
//	80AE33FC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/CreateHeap__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3410-80AE344C 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	80AE3430: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80AE344C-80AE3464 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80AE3464-80AE34A0 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	80AE3484: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80AE34A0-80AE34B8 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80AE34B8-80AE3500 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	80AE34D0: 80AE76C4 (__vt__11J3DTexNoAnm)
//	80AE34D4: 80AE76C4 (__vt__11J3DTexNoAnm)
//	80AE34E4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80AE3500-80AE3524 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	80AE3500: 80AE76C4 (__vt__11J3DTexNoAnm)
//	80AE3504: 80AE76C4 (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80AE3524-80AE3560 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	80AE3544: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80AE3560-80AE3578 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80AE3578-80AE35B4 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	80AE3598: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80AE35B4-80AE35CC 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80AE35CC-80AE3600 0034+00 s=1 e=0 z=0  None .text      Delete__11daNpc_Sha_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/Delete__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3600-80AE3620 0020+00 s=2 e=0 z=0  None .text      Execute__11daNpc_Sha_cFv                                     */
//	80AE360C: 8014852C (execute__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/Execute__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3620-80AE36B4 0094+00 s=1 e=0 z=0  None .text      Draw__11daNpc_Sha_cFv                                        */
//	80AE3630: 803621DC (_savegpr_29)
//	80AE3684: 80AE6C84 (lit_4380)
//	80AE3688: 80AE6C84 (lit_4380)
//	80AE3698: 8014886C (draw__8daNpcT_cFiifP11_GXColorS10fiii)
//	80AE36A0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/Draw__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE36B4-80AE36D4 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__11daNpc_Sha_cFP10fopAc_ac_c              */
//	80AE36C0: 80AE31A0 (CreateHeap__11daNpc_Sha_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpc_Sha_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/createHeapCallBack__11daNpc_Sha_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80AE36D4-80AE372C 0058+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__11daNpc_Sha_cFP8J3DJointi                 */
//	80AE36EC: 80434AC8 (j3dSys)
//	80AE36F0: 80434AC8 (j3dSys)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpc_Sha_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/ctrlJointCallBack__11daNpc_Sha_cFP8J3DJointi.s"
}
#pragma pop


/* 80AE372C-80AE3764 0038+00 s=1 e=0 z=0  None .text      getType__11daNpc_Sha_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::getType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/getType__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3764-80AE3798 0034+00 s=1 e=0 z=0  None .text      isDelete__11daNpc_Sha_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::isDelete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/isDelete__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3798-80AE38F0 0158+00 s=1 e=0 z=0  None .text      reset__11daNpc_Sha_cFv                                       */
//	80AE37A8: 803621DC (_savegpr_29)
//	80AE37B0: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE37B4: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE37D0: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80AE37E4: 80003458 (memset)
//	80AE37EC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AE37F4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AE37FC: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AE3804: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AE380C: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AE3878: 80267954 (cM_rndF__Ff)
//	80AE38A4: 80003458 (memset)
//	80AE38D4: 8014A99C (setAngle__8daNpcT_cF5csXyz)
//	80AE38DC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/reset__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE38F0-80AE3974 0084+00 s=1 e=0 z=0  None .text      afterJntAnm__11daNpc_Sha_cFi                                 */
//	80AE3910: 803DD470 (now__14mDoMtx_stack_c)
//	80AE3914: 803DD470 (now__14mDoMtx_stack_c)
//	80AE3918: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80AE391C: 803DD470 (now__14mDoMtx_stack_c)
//	80AE3920: 803DD470 (now__14mDoMtx_stack_c)
//	80AE3930: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80AE3944: 803DD470 (now__14mDoMtx_stack_c)
//	80AE3948: 803DD470 (now__14mDoMtx_stack_c)
//	80AE394C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80AE3954: 803DD470 (now__14mDoMtx_stack_c)
//	80AE3958: 803DD470 (now__14mDoMtx_stack_c)
//	80AE395C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Sha_c::afterJntAnm(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/afterJntAnm__11daNpc_Sha_cFi.s"
}
#pragma pop


/* 80AE3974-80AE3A8C 0118+00 s=1 e=0 z=0  None .text      setParam__11daNpc_Sha_cFv                                    */
//	80AE3984: 803621DC (_savegpr_29)
//	80AE398C: 80AE44C0 (selectAction__11daNpc_Sha_cFv)
//	80AE3994: 80AE3C24 (srchActors__11daNpc_Sha_cFv)
//	80AE3998: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE399C: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE39CC: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80AE39E4: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80AE39F4: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE39F8: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE3A40: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80AE3A44: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE3A48: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE3A78: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/setParam__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3A8C-80AE3B78 00EC+00 s=1 e=0 z=0  None .text      checkChangeEvt__11daNpc_Sha_cFv                              */
//	80AE3AA0: 80AE70CC (lit_4497)
//	80AE3AA4: 80AE70CC (lit_4497)
//	80AE3AC4: 80AE4508 (chkAction__11daNpc_Sha_cFM11daNpc_Sha_cFPCvPvPv_i)
//	80AE3AD8: 804061C0 (g_dComIfG_gameInfo)
//	80AE3ADC: 804061C0 (g_dComIfG_gameInfo)
//	80AE3B04: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80AE3B1C: 8014A224 (evtChange__8daNpcT_cFv)
//	80AE3B54: 8014A224 (evtChange__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::checkChangeEvt() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/checkChangeEvt__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3B78-80AE3C24 00AC+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__11daNpc_Sha_cFv                          */
//	80AE3B88: 803621DC (_savegpr_29)
//	80AE3BF4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AE3C00: 80AE6C88 (lit_4537)
//	80AE3C04: 80AE6C88 (lit_4537)
//	80AE3C10: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::setAfterTalkMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/setAfterTalkMotion__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3C24-80AE3C28 0004+00 s=1 e=0 z=0  None .text      srchActors__11daNpc_Sha_cFv                                  */
// True False
//  void False
void daNpc_Sha_c::srchActors() {
	/* empty function */
}


/* 80AE3C28-80AE3D28 0100+00 s=1 e=0 z=0  None .text      evtTalk__11daNpc_Sha_cFv                                     */
//	80AE3C3C: 80AE70D8 (lit_4549)
//	80AE3C40: 80AE70D8 (lit_4549)
//	80AE3C60: 80AE4508 (chkAction__11daNpc_Sha_cFM11daNpc_Sha_cFPCvPvPv_i)
//	80AE3C78: 80362084 (__ptmf_scall)
//	80AE3C8C: 804061C0 (g_dComIfG_gameInfo)
//	80AE3C90: 804061C0 (g_dComIfG_gameInfo)
//	80AE3CB8: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80AE3CD8: 8014A224 (evtChange__8daNpcT_cFv)
//	80AE3CE4: 80AE70E4 (lit_4559)
//	80AE3CE8: 80AE70E4 (lit_4559)
//	80AE3D0C: 80AE4534 (setAction__11daNpc_Sha_cFM11daNpc_Sha_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::evtTalk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/evtTalk__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3D28-80AE3DF0 00C8+00 s=1 e=0 z=0  None .text      evtCutProc__11daNpc_Sha_cFv                                  */
//	80AE3D40: 804061C0 (g_dComIfG_gameInfo)
//	80AE3D44: 804061C0 (g_dComIfG_gameInfo)
//	80AE3D50: 80AE6CCC (struct_80AE6CCC)
//	80AE3D54: 80AE6CCC (struct_80AE6CCC)
//	80AE3D64: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80AE3D7C: 80AE70A0 (mCutNameList__11daNpc_Sha_c)
//	80AE3D80: 80AE70A0 (mCutNameList__11daNpc_Sha_c)
//	80AE3D90: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80AE3DA4: 80AE70B4 (mCutList__11daNpc_Sha_c)
//	80AE3DA8: 80AE70B4 (mCutList__11daNpc_Sha_c)
//	80AE3DB0: 80362084 (__ptmf_scall)
//	80AE3DC8: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::evtCutProc() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/evtCutProc__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3DF0-80AE3F80 0190+00 s=1 e=0 z=0  None .text      action__11daNpc_Sha_cFv                                      */
//	80AE3E10: 8014AA40 (hitChk__8daNpcT_cFP12dCcD_GObjInfUl)
//	80AE3E20: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80AE3E40: 80147DCC (setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs)
//	80AE3E54: 8014AAD0 (setDamage__8daNpcT_cFiii)
//	80AE3E70: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE3E7C: 80AE6C74 (lit_4185)
//	80AE3E80: 80AE6C74 (lit_4185)
//	80AE3EBC: 80AE6C74 (lit_4185)
//	80AE3EC0: 80AE6C74 (lit_4185)
//	80AE3F0C: 80362018 (__ptmf_test)
//	80AE3F20: 80362048 (__ptmf_cmpr)
//	80AE3F38: 80362084 (__ptmf_scall)
//	80AE3F64: 80AE4534 (setAction__11daNpc_Sha_cFM11daNpc_Sha_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::action() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/action__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE3F80-80AE4044 00C4+00 s=1 e=0 z=0  None .text      beforeMove__11daNpc_Sha_cFv                                  */
//	80AE3FB4: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
//	80AE3FF4: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::beforeMove() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/beforeMove__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE4044-80AE4360 031C+00 s=1 e=0 z=0  None .text      setAttnPos__11daNpc_Sha_cFv                                  */
//	80AE405C: 803621D4 (_savegpr_27)
//	80AE4064: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE4068: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE4098: 80147E3C (calc__19daNpcT_DmgStagger_cFi)
//	80AE416C: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	80AE4180: 80147C38 (calcJntRad__15daNpcT_JntAnm_cFfff)
//	80AE4188: 80149190 (setMtx__8daNpcT_cFv)
//	80AE41B8: 803DD470 (now__14mDoMtx_stack_c)
//	80AE41BC: 803DD470 (now__14mDoMtx_stack_c)
//	80AE41C0: 803464B0 (PSMTXCopy)
//	80AE41C4: 803DD470 (now__14mDoMtx_stack_c)
//	80AE41C8: 803DD470 (now__14mDoMtx_stack_c)
//	80AE41D4: 80346D6C (PSMTXMultVec)
//	80AE4200: 80AE6158 (setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs)
//	80AE4234: 80AE603C (setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs)
//	80AE4250: 803DD470 (now__14mDoMtx_stack_c)
//	80AE4254: 803DD470 (now__14mDoMtx_stack_c)
//	80AE425C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80AE4260: 803DD470 (now__14mDoMtx_stack_c)
//	80AE4264: 803DD470 (now__14mDoMtx_stack_c)
//	80AE4270: 80346D6C (PSMTXMultVec)
//	80AE4280: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80AE42B4: 803DD470 (now__14mDoMtx_stack_c)
//	80AE42B8: 803DD470 (now__14mDoMtx_stack_c)
//	80AE42C0: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80AE42C4: 803DD470 (now__14mDoMtx_stack_c)
//	80AE42C8: 803DD470 (now__14mDoMtx_stack_c)
//	80AE42D4: 80346D6C (PSMTXMultVec)
//	80AE42E4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80AE430C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80AE4310: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80AE433C: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80AE434C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/setAttnPos__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE4360-80AE44B8 0158+00 s=1 e=0 z=0  None .text      setCollision__11daNpc_Sha_cFv                                */
//	80AE43E4: 80AE6C74 (lit_4185)
//	80AE43E8: 80AE6C74 (lit_4185)
//	80AE4400: 803DD470 (now__14mDoMtx_stack_c)
//	80AE4404: 803DD470 (now__14mDoMtx_stack_c)
//	80AE440C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80AE4410: 803DD470 (now__14mDoMtx_stack_c)
//	80AE4414: 803DD470 (now__14mDoMtx_stack_c)
//	80AE4420: 80346D6C (PSMTXMultVec)
//	80AE4430: 80347090 (PSVECAdd)
//	80AE443C: 8026F1F8 (SetH__8cM3dGCylFf)
//	80AE4448: 8026F200 (SetR__8cM3dGCylFf)
//	80AE4454: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80AE4458: 804061C0 (g_dComIfG_gameInfo)
//	80AE445C: 804061C0 (g_dComIfG_gameInfo)
//	80AE4468: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::setCollision() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/setCollision__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE44B8-80AE44C0 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__11daNpc_Sha_cFv                                 */
// True False
//  bool False
bool daNpc_Sha_c::drawDbgInfo() {
	return false;
}


/* 80AE44C0-80AE4508 0048+00 s=1 e=0 z=0  None .text      selectAction__11daNpc_Sha_cFv                                */
//	80AE44C0: 803A2180 (__ptmf_null)
//	80AE44C4: 803A2180 (__ptmf_null)
//	80AE44E0: 80AE70F0 (lit_4823)
//	80AE44E4: 80AE70F0 (lit_4823)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::selectAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/selectAction__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE4508-80AE4534 002C+00 s=2 e=0 z=0  None .text      chkAction__11daNpc_Sha_cFM11daNpc_Sha_cFPCvPvPv_i            */
//	80AE4518: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Sha_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Sha_c False
asm void daNpc_Sha_c::chkAction(int (daNpc_Sha_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/chkAction__11daNpc_Sha_cFM11daNpc_Sha_cFPCvPvPv_i.s"
}
#pragma pop


/* 80AE4534-80AE45DC 00A8+00 s=2 e=0 z=0  None .text      setAction__11daNpc_Sha_cFM11daNpc_Sha_cFPCvPvPv_i            */
//	80AE455C: 80362018 (__ptmf_test)
//	80AE4574: 80362084 (__ptmf_scall)
//	80AE45A0: 80362018 (__ptmf_test)
//	80AE45B8: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Sha_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Sha_c False
asm void daNpc_Sha_c::setAction(int (daNpc_Sha_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/setAction__11daNpc_Sha_cFM11daNpc_Sha_cFPCvPvPv_i.s"
}
#pragma pop


/* 80AE45DC-80AE48D0 02F4+00 s=1 e=0 z=0  None .text      getSceneChangeNoTableIx__11daNpc_Sha_cFv                     */
//	80AE45EC: 803621A4 (_savegpr_15)
//	80AE4604: 804061C0 (g_dComIfG_gameInfo)
//	80AE4608: 804061C0 (g_dComIfG_gameInfo)
//	80AE4614: 80AE711C (mEvtBitLabels__11daNpc_Sha_c)
//	80AE4618: 80AE711C (mEvtBitLabels__11daNpc_Sha_c)
//	80AE4624: 80034A04 (getEventReg__11dSv_event_cCFUs)
//	80AE4698: 804061C0 (g_dComIfG_gameInfo)
//	80AE469C: 804061C0 (g_dComIfG_gameInfo)
//	80AE46A4: 80AE7128 (mTmpBitLabels__11daNpc_Sha_c)
//	80AE46A8: 80AE7128 (mTmpBitLabels__11daNpc_Sha_c)
//	80AE46AC: 80AE7434 (mQueries__11daNpc_Sha_c)
//	80AE46B0: 80AE7434 (mQueries__11daNpc_Sha_c)
//	80AE46B8: 80AE711C (mEvtBitLabels__11daNpc_Sha_c)
//	80AE46BC: 80AE711C (mEvtBitLabels__11daNpc_Sha_c)
//	80AE46D8: 80034A04 (getEventReg__11dSv_event_cCFUs)
//	80AE46EC: 80034A04 (getEventReg__11dSv_event_cCFUs)
//	80AE46FC: 800349E0 (setEventReg__11dSv_event_cFUsUc)
//	80AE4770: 80362084 (__ptmf_scall)
//	80AE47A4: 80034A04 (getEventReg__11dSv_event_cCFUs)
//	80AE4804: 80034A04 (getEventReg__11dSv_event_cCFUs)
//	80AE4850: 80AE6454 (func_80AE6454)
//	80AE4854: 80430CD8 (g_Counter)
//	80AE4858: 80430CD8 (g_Counter)
//	80AE4898: 800349E0 (setEventReg__11dSv_event_cFUsUc)
//	80AE48BC: 803621F0 (_restgpr_15)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::getSceneChangeNoTableIx() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/getSceneChangeNoTableIx__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE48D0-80AE4974 00A4+00 s=1 e=0 z=0  None .text      setTempBit__11daNpc_Sha_cFi                                  */
//	80AE48E0: 803621D8 (_savegpr_28)
//	80AE48F0: 804061C0 (g_dComIfG_gameInfo)
//	80AE48F4: 804061C0 (g_dComIfG_gameInfo)
//	80AE490C: 80AE7128 (mTmpBitLabels__11daNpc_Sha_c)
//	80AE4910: 80AE7128 (mTmpBitLabels__11daNpc_Sha_c)
//	80AE4918: 80034A04 (getEventReg__11dSv_event_cCFUs)
//	80AE4958: 800349E0 (setEventReg__11dSv_event_cFUsUc)
//	80AE4960: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Sha_c::setTempBit(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/setTempBit__11daNpc_Sha_cFi.s"
}
#pragma pop


/* 80AE4974-80AE4E24 04B0+00 s=2 e=0 z=0  None .text      cutPerformAugury__11daNpc_Sha_cFi                            */
//	80AE4984: 803621C4 (_savegpr_23)
//	80AE49A4: 804061C0 (g_dComIfG_gameInfo)
//	80AE49A8: 804061C0 (g_dComIfG_gameInfo)
//	80AE49B4: 80AE6CCC (struct_80AE6CCC)
//	80AE49B8: 80AE6CCC (struct_80AE6CCC)
//	80AE49C4: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80AE49DC: 80AE6CCC (struct_80AE6CCC)
//	80AE49E0: 80AE6CCC (struct_80AE6CCC)
//	80AE49EC: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80AE4A04: 80AE6CCC (struct_80AE6CCC)
//	80AE4A08: 80AE6CCC (struct_80AE6CCC)
//	80AE4A14: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80AE4A2C: 80AE6CCC (struct_80AE6CCC)
//	80AE4A30: 80AE6CCC (struct_80AE6CCC)
//	80AE4A3C: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80AE4A54: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80AE4A68: 80AE70FC (lit_5097)
//	80AE4A6C: 80AE70FC (lit_5097)
//	80AE4AA4: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AE4ACC: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AE4AEC: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AE4B0C: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AE4B28: 8014C500 (daNpcT_getPlayerInfoFromPlayerList__FiiP4cXyzP5csXyz)
//	80AE4B34: 804061C0 (g_dComIfG_gameInfo)
//	80AE4B38: 804061C0 (g_dComIfG_gameInfo)
//	80AE4B60: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80AE4B70: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80AE4B74: 80AE6CC0 (lit_4995)
//	80AE4B78: 80AE6CC0 (lit_4995)
//	80AE4BD0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE4BDC: 80AE6C74 (lit_4185)
//	80AE4BE0: 80AE6C74 (lit_4185)
//	80AE4C18: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80AE4C60: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE4C6C: 80AE6C74 (lit_4185)
//	80AE4C70: 80AE6C74 (lit_4185)
//	80AE4C9C: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80AE4CB0: 8024A528 (getEventId__10dMsgFlow_cFPi)
//	80AE4CD8: 80AE45DC (getSceneChangeNoTableIx__11daNpc_Sha_cFv)
//	80AE4CF0: 80AE48D0 (setTempBit__11daNpc_Sha_cFi)
//	80AE4D0C: 8014A224 (evtChange__8daNpcT_cFv)
//	80AE4D28: 8014A224 (evtChange__8daNpcT_cFv)
//	80AE4D3C: 8042CA54 (g_env_light)
//	80AE4D40: 8042CA54 (g_env_light)
//	80AE4D48: 804061C0 (g_dComIfG_gameInfo)
//	80AE4D4C: 804061C0 (g_dComIfG_gameInfo)
//	80AE4D58: 8003498C (onEventBit__11dSv_event_cFUs)
//	80AE4D64: 80AE7134 (mSceneChangeNoTable__11daNpc_Sha_c)
//	80AE4D68: 80AE7134 (mSceneChangeNoTable__11daNpc_Sha_c)
//	80AE4D70: 80AE6C74 (lit_4185)
//	80AE4D74: 80AE6C74 (lit_4185)
//	80AE4D8C: 80027170 (dStage_changeScene__FifUlScsi)
//	80AE4DCC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE4DD8: 80AE6C74 (lit_4185)
//	80AE4DDC: 80AE6C74 (lit_4185)
//	80AE4DF8: 80AE6438 (func_80AE6438)
//	80AE4E10: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Sha_c::cutPerformAugury(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/cutPerformAugury__11daNpc_Sha_cFi.s"
}
#pragma pop


/* 80AE4E24-80AE50EC 02C8+00 s=1 e=0 z=0  None .text      wait__11daNpc_Sha_cFPv                                       */
//	80AE4E7C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AE4E8C: 80AE6C88 (lit_4537)
//	80AE4E90: 80AE6C88 (lit_4537)
//	80AE4EAC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AE4EBC: 80AE6C88 (lit_4537)
//	80AE4EC0: 80AE6C88 (lit_4537)
//	80AE4EE8: 8014CB6C (daNpcT_chkTmpBit__FUl)
//	80AE4EF8: 8042CA54 (g_env_light)
//	80AE4EFC: 8042CA54 (g_env_light)
//	80AE4F04: 804061C0 (g_dComIfG_gameInfo)
//	80AE4F08: 804061C0 (g_dComIfG_gameInfo)
//	80AE4F14: 800349A4 (offEventBit__11dSv_event_cFUs)
//	80AE4F48: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE4F50: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80AE4F6C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE4F78: 80AE6C74 (lit_4185)
//	80AE4F7C: 80AE6C74 (lit_4185)
//	80AE4F9C: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80AE4FB0: 8014ABD0 (chkActorInSight__8daNpcT_cFP10fopAc_ac_cfs)
//	80AE4FCC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE4FD8: 80AE6C74 (lit_4185)
//	80AE4FDC: 80AE6C74 (lit_4185)
//	80AE4FF8: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80AE5030: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE503C: 80AE6C74 (lit_4185)
//	80AE5040: 80AE6C74 (lit_4185)
//	80AE5088: 8014B648 (step__8daNpcT_cFsiiii)
//	80AE50A4: 8014AA18 (setAngle__8daNpcT_cFs)
//	80AE50CC: 8014B338 (srchPlayerActor__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Sha_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/wait__11daNpc_Sha_cFPv.s"
}
#pragma pop


/* 80AE50EC-80AE52CC 01E0+00 s=3 e=0 z=0  None .text      talk__11daNpc_Sha_cFPv                                       */
//	80AE5134: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80AE5188: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80AE519C: 8024A528 (getEventId__10dMsgFlow_cFPi)
//	80AE51B0: 804061C0 (g_dComIfG_gameInfo)
//	80AE51B4: 804061C0 (g_dComIfG_gameInfo)
//	80AE51BC: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80AE51C0: 804061C0 (g_dComIfG_gameInfo)
//	80AE51C4: 804061C0 (g_dComIfG_gameInfo)
//	80AE51CC: 80042468 (reset__14dEvt_control_cFv)
//	80AE51E8: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE51F4: 80AE6C74 (lit_4185)
//	80AE51F8: 80AE6C74 (lit_4185)
//	80AE5230: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE523C: 80AE6C74 (lit_4185)
//	80AE5240: 80AE6C74 (lit_4185)
//	80AE526C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80AE5278: 80AE6C74 (lit_4185)
//	80AE527C: 80AE6C74 (lit_4185)
//	80AE52B0: 8014B648 (step__8daNpcT_cFsiiii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Sha_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/talk__11daNpc_Sha_cFPv.s"
}
#pragma pop


/* 80AE52CC-80AE52F0 0024+00 s=5 e=0 z=0  None .text      query265__11daNpc_Sha_cFv                                    */
//	80AE52DC: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::query265() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/query265__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE52F0-80AE5314 0024+00 s=3 e=0 z=0  None .text      query268__11daNpc_Sha_cFv                                    */
//	80AE5300: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::query268() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/query268__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE5314-80AE5338 0024+00 s=6 e=0 z=0  None .text      query267__11daNpc_Sha_cFv                                    */
//	80AE5324: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::query267() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/query267__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE5338-80AE535C 0024+00 s=4 e=0 z=0  None .text      query078__11daNpc_Sha_cFv                                    */
//	80AE5348: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::query078() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/query078__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE535C-80AE5380 0024+00 s=6 e=0 z=0  None .text      query264__11daNpc_Sha_cFv                                    */
//	80AE536C: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::query264() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/query264__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE5380-80AE53A4 0024+00 s=4 e=0 z=0  None .text      query266__11daNpc_Sha_cFv                                    */
//	80AE5390: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::query266() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/query266__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE53A4-80AE53C8 0024+00 s=2 e=0 z=0  None .text      query542__11daNpc_Sha_cFv                                    */
//	80AE53B4: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::query542() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/query542__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE53C8-80AE53EC 0024+00 s=1 e=0 z=0  None .text      query461__11daNpc_Sha_cFv                                    */
//	80AE53D8: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::query461() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/query461__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE53EC-80AE5410 0024+00 s=1 e=0 z=0  None .text      query288__11daNpc_Sha_cFv                                    */
//	80AE53FC: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Sha_c::query288() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/query288__11daNpc_Sha_cFv.s"
}
#pragma pop


/* 80AE5410-80AE5418 0008+00 s=13 e=0 z=0  None .text      query000__11daNpc_Sha_cFv                                    */
// True False
//  bool False
bool daNpc_Sha_c::query000() {
	return true;
}


/* 80AE5418-80AE5420 0008+00 s=3 e=0 z=0  None .text      query999__11daNpc_Sha_cFv                                    */
// True False
//  bool False
bool daNpc_Sha_c::query999() {
	return false;
}


/* 80AE5420-80AE5440 0020+00 s=1 e=0 z=0  None .text      daNpc_Sha_Create__FPv                                        */
//	80AE542C: 80AE2EEC (create__11daNpc_Sha_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Sha_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/daNpc_Sha_Create__FPv.s"
}
#pragma pop


/* 80AE5440-80AE5460 0020+00 s=1 e=0 z=0  None .text      daNpc_Sha_Delete__FPv                                        */
//	80AE544C: 80AE35CC (Delete__11daNpc_Sha_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Sha_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/daNpc_Sha_Delete__FPv.s"
}
#pragma pop


/* 80AE5460-80AE5480 0020+00 s=1 e=0 z=0  None .text      daNpc_Sha_Execute__FPv                                       */
//	80AE546C: 80AE3600 (Execute__11daNpc_Sha_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Sha_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/daNpc_Sha_Execute__FPv.s"
}
#pragma pop


/* 80AE5480-80AE54A0 0020+00 s=1 e=0 z=0  None .text      daNpc_Sha_Draw__FPv                                          */
//	80AE548C: 80AE3620 (Draw__11daNpc_Sha_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Sha_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/daNpc_Sha_Draw__FPv.s"
}
#pragma pop


/* 80AE54A0-80AE54A8 0008+00 s=1 e=0 z=0  None .text      daNpc_Sha_IsDelete__FPv                                      */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Sha_IsDelete(void* param_0) {
	return true;
}


/* 80AE54A8-80AE54D8 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	80AE54C4: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 80AE54D8-80AE5520 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80AE54F0: 80AE770C (__vt__10cCcD_GStts)
//	80AE54F4: 80AE770C (__vt__10cCcD_GStts)
//	80AE5504: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80AE5520-80AE58A8 0388+00 s=1 e=0 z=0  None .text      __dt__8daNpcT_cFv                                            */
//	80AE5540: 803B3A78 (__vt__8daNpcT_c)
//	80AE5544: 803B3A78 (__vt__8daNpcT_c)
//	80AE5558: 80AE58E4 (__dt__5csXyzFv)
//	80AE555C: 80AE58E4 (__dt__5csXyzFv)
//	80AE5568: 80361CE8 (__destroy_arr)
//	80AE5574: 80AE773C (__vt__15daNpcT_JntAnm_c)
//	80AE5578: 80AE773C (__vt__15daNpcT_JntAnm_c)
//	80AE5584: 80AE58A8 (__dt__4cXyzFv)
//	80AE5588: 80AE58A8 (__dt__4cXyzFv)
//	80AE5594: 80361CE8 (__destroy_arr)
//	80AE559C: 80AE58A8 (__dt__4cXyzFv)
//	80AE55A0: 80AE58A8 (__dt__4cXyzFv)
//	80AE55AC: 80361CE8 (__destroy_arr)
//	80AE55B4: 80AE58A8 (__dt__4cXyzFv)
//	80AE55B8: 80AE58A8 (__dt__4cXyzFv)
//	80AE55C4: 80361CE8 (__destroy_arr)
//	80AE55CC: 80AE58A8 (__dt__4cXyzFv)
//	80AE55D0: 80AE58A8 (__dt__4cXyzFv)
//	80AE55DC: 80361CE8 (__destroy_arr)
//	80AE55E4: 80AE58A8 (__dt__4cXyzFv)
//	80AE55E8: 80AE58A8 (__dt__4cXyzFv)
//	80AE55F4: 80361CE8 (__destroy_arr)
//	80AE55FC: 80AE58A8 (__dt__4cXyzFv)
//	80AE5600: 80AE58A8 (__dt__4cXyzFv)
//	80AE560C: 80361CE8 (__destroy_arr)
//	80AE5618: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE561C: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE562C: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5630: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5640: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5644: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5654: 80AE7724 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AE5658: 80AE7724 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AE5668: 80AE7724 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AE566C: 80AE7724 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AE567C: 80077CDC (__dt__11dBgS_LinChkFv)
//	80AE5688: 800775F0 (__dt__11dBgS_GndChkFv)
//	80AE5694: 803AC2E4 (__vt__9dCcD_Stts)
//	80AE5698: 803AC2E4 (__vt__9dCcD_Stts)
//	80AE56B0: 80AE7718 (__vt__10dCcD_GStts)
//	80AE56B4: 80AE7718 (__vt__10dCcD_GStts)
//	80AE56C4: 80AE770C (__vt__10cCcD_GStts)
//	80AE56C8: 80AE770C (__vt__10cCcD_GStts)
//	80AE56D8: 803C3728 (__vt__9cCcD_Stts)
//	80AE56DC: 803C3728 (__vt__9cCcD_Stts)
//	80AE56EC: 80249F48 (__dt__10dMsgFlow_cFv)
//	80AE56F8: 80267C94 (__dt__11cBgS_GndChkFv)
//	80AE5704: 80AE7700 (__vt__12dBgS_AcchCir)
//	80AE5708: 80AE7700 (__vt__12dBgS_AcchCir)
//	80AE5718: 8026EF18 (__dt__8cM3dGCirFv)
//	80AE5724: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AE5730: 803AC2E4 (__vt__9dCcD_Stts)
//	80AE5734: 803AC2E4 (__vt__9dCcD_Stts)
//	80AE574C: 80AE7718 (__vt__10dCcD_GStts)
//	80AE5750: 80AE7718 (__vt__10dCcD_GStts)
//	80AE5760: 80AE770C (__vt__10cCcD_GStts)
//	80AE5764: 80AE770C (__vt__10cCcD_GStts)
//	80AE5774: 803C3728 (__vt__9cCcD_Stts)
//	80AE5778: 803C3728 (__vt__9cCcD_Stts)
//	80AE5788: 80AE76DC (__vt__12dBgS_ObjAcch)
//	80AE578C: 80AE76DC (__vt__12dBgS_ObjAcch)
//	80AE57AC: 80075F94 (__dt__9dBgS_AcchFv)
//	80AE57C8: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE57CC: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE57EC: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE57F0: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE5810: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE5814: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE5834: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE5838: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE5858: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE585C: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE586C: 802C0420 (__dt__10Z2CreatureFv)
//	80AE5878: 80018C8C (__dt__10fopAc_ac_cFv)
//	80AE5888: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_c::~daNpcT_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__8daNpcT_cFv.s"
}
#pragma pop


/* 80AE58A8-80AE58E4 003C+00 s=3 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80AE58C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__4cXyzFv.s"
}
#pragma pop


/* 80AE58E4-80AE5920 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80AE5904: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__5csXyzFv.s"
}
#pragma pop


/* 80AE5920-80AE5D24 0404+00 s=1 e=0 z=0  None .text      __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AE5930: 803621C0 (_savegpr_22)
//	80AE5958: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE595C: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE5960: 80018B64 (__ct__10fopAc_ac_cFv)
//	80AE5964: 803B3A78 (__vt__8daNpcT_c)
//	80AE5968: 803B3A78 (__vt__8daNpcT_c)
//	80AE5984: 802C03C8 (__ct__10Z2CreatureFv)
//	80AE598C: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE5990: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE59A0: 803283FC (init__12J3DFrameCtrlFs)
//	80AE59B0: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE59B4: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE59C4: 803283FC (init__12J3DFrameCtrlFs)
//	80AE59D4: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE59D8: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE59E8: 803283FC (init__12J3DFrameCtrlFs)
//	80AE59F8: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE59FC: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE5A0C: 803283FC (init__12J3DFrameCtrlFs)
//	80AE5A1C: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE5A20: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE5A30: 803283FC (init__12J3DFrameCtrlFs)
//	80AE5A44: 800760A0 (__ct__9dBgS_AcchFv)
//	80AE5A48: 80AE76DC (__vt__12dBgS_ObjAcch)
//	80AE5A4C: 80AE76DC (__vt__12dBgS_ObjAcch)
//	80AE5A68: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80AE5A6C: 803C3728 (__vt__9cCcD_Stts)
//	80AE5A70: 803C3728 (__vt__9cCcD_Stts)
//	80AE5A7C: 80083760 (__ct__10dCcD_GSttsFv)
//	80AE5A80: 803AC2E4 (__vt__9dCcD_Stts)
//	80AE5A84: 803AC2E4 (__vt__9dCcD_Stts)
//	80AE5A98: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80AE5AA0: 80267C1C (__ct__11cBgS_GndChkFv)
//	80AE5AA8: 80249F00 (__ct__10dMsgFlow_cFv)
//	80AE5AAC: 803C3728 (__vt__9cCcD_Stts)
//	80AE5AB0: 803C3728 (__vt__9cCcD_Stts)
//	80AE5ABC: 80083760 (__ct__10dCcD_GSttsFv)
//	80AE5AC0: 803AC2E4 (__vt__9dCcD_Stts)
//	80AE5AC4: 803AC2E4 (__vt__9dCcD_Stts)
//	80AE5AD4: 8007757C (__ct__11dBgS_GndChkFv)
//	80AE5ADC: 80077C68 (__ct__11dBgS_LinChkFv)
//	80AE5AE0: 80AE7724 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AE5AE4: 80AE7724 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AE5AF8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AE5AFC: 80AE7724 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AE5B00: 80AE7724 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AE5B14: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AE5B18: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5B1C: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5B28: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AE5B2C: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5B30: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5B3C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AE5B44: 80AE773C (__vt__15daNpcT_JntAnm_c)
//	80AE5B48: 80AE773C (__vt__15daNpcT_JntAnm_c)
//	80AE5B50: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5B54: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5B60: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AE5B68: 80AE5E24 (__ct__4cXyzFv)
//	80AE5B6C: 80AE5E24 (__ct__4cXyzFv)
//	80AE5B70: 80AE58A8 (__dt__4cXyzFv)
//	80AE5B74: 80AE58A8 (__dt__4cXyzFv)
//	80AE5B80: 80361D60 (__construct_array)
//	80AE5B88: 80AE5E24 (__ct__4cXyzFv)
//	80AE5B8C: 80AE5E24 (__ct__4cXyzFv)
//	80AE5B90: 80AE58A8 (__dt__4cXyzFv)
//	80AE5B94: 80AE58A8 (__dt__4cXyzFv)
//	80AE5BA0: 80361D60 (__construct_array)
//	80AE5BA8: 80AE5E24 (__ct__4cXyzFv)
//	80AE5BAC: 80AE5E24 (__ct__4cXyzFv)
//	80AE5BB0: 80AE58A8 (__dt__4cXyzFv)
//	80AE5BB4: 80AE58A8 (__dt__4cXyzFv)
//	80AE5BC0: 80361D60 (__construct_array)
//	80AE5BC8: 80AE5E24 (__ct__4cXyzFv)
//	80AE5BCC: 80AE5E24 (__ct__4cXyzFv)
//	80AE5BD0: 80AE58A8 (__dt__4cXyzFv)
//	80AE5BD4: 80AE58A8 (__dt__4cXyzFv)
//	80AE5BE0: 80361D60 (__construct_array)
//	80AE5BE8: 80AE5E24 (__ct__4cXyzFv)
//	80AE5BEC: 80AE5E24 (__ct__4cXyzFv)
//	80AE5BF0: 80AE58A8 (__dt__4cXyzFv)
//	80AE5BF4: 80AE58A8 (__dt__4cXyzFv)
//	80AE5C00: 80361D60 (__construct_array)
//	80AE5C08: 80AE5E24 (__ct__4cXyzFv)
//	80AE5C0C: 80AE5E24 (__ct__4cXyzFv)
//	80AE5C10: 80AE58A8 (__dt__4cXyzFv)
//	80AE5C14: 80AE58A8 (__dt__4cXyzFv)
//	80AE5C20: 80361D60 (__construct_array)
//	80AE5C28: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AE5C30: 80AE5D24 (__ct__5csXyzFv)
//	80AE5C34: 80AE5D24 (__ct__5csXyzFv)
//	80AE5C38: 80AE58E4 (__dt__5csXyzFv)
//	80AE5C3C: 80AE58E4 (__dt__5csXyzFv)
//	80AE5C48: 80361D60 (__construct_array)
//	80AE5C5C: 80003458 (memset)
//	80AE5C64: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AE5C6C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80AE5C74: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AE5C7C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80AE5C84: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80AE5CE8: 80267954 (cM_rndF__Ff)
//	80AE5D10: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/func_80AE5920.s"
}
#pragma pop


/* 80AE5D24-80AE5D28 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80AE5D28-80AE5E24 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv                                    */
//	80AE5D48: 80AE773C (__vt__15daNpcT_JntAnm_c)
//	80AE5D4C: 80AE773C (__vt__15daNpcT_JntAnm_c)
//	80AE5D58: 80AE58A8 (__dt__4cXyzFv)
//	80AE5D5C: 80AE58A8 (__dt__4cXyzFv)
//	80AE5D68: 80361CE8 (__destroy_arr)
//	80AE5D70: 80AE58A8 (__dt__4cXyzFv)
//	80AE5D74: 80AE58A8 (__dt__4cXyzFv)
//	80AE5D80: 80361CE8 (__destroy_arr)
//	80AE5D88: 80AE58A8 (__dt__4cXyzFv)
//	80AE5D8C: 80AE58A8 (__dt__4cXyzFv)
//	80AE5D98: 80361CE8 (__destroy_arr)
//	80AE5DA0: 80AE58A8 (__dt__4cXyzFv)
//	80AE5DA4: 80AE58A8 (__dt__4cXyzFv)
//	80AE5DB0: 80361CE8 (__destroy_arr)
//	80AE5DB8: 80AE58A8 (__dt__4cXyzFv)
//	80AE5DBC: 80AE58A8 (__dt__4cXyzFv)
//	80AE5DC8: 80361CE8 (__destroy_arr)
//	80AE5DD0: 80AE58A8 (__dt__4cXyzFv)
//	80AE5DD4: 80AE58A8 (__dt__4cXyzFv)
//	80AE5DE0: 80361CE8 (__destroy_arr)
//	80AE5DEC: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5DF0: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5E04: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop


/* 80AE5E24-80AE5E28 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80AE5E28-80AE5E70 0048+00 s=1 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv                                 */
//	80AE5E40: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5E44: 80AE7730 (__vt__18daNpcT_ActorMngr_c)
//	80AE5E54: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80AE5E70-80AE5EB8 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv                             */
//	80AE5E88: 80AE7724 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AE5E8C: 80AE7724 (__vt__22daNpcT_MotionSeqMngr_c)
//	80AE5E9C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop


/* 80AE5EB8-80AE5F28 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80AE5ED8: 80AE7700 (__vt__12dBgS_AcchCir)
//	80AE5EDC: 80AE7700 (__vt__12dBgS_AcchCir)
//	80AE5EEC: 8026EF18 (__dt__8cM3dGCirFv)
//	80AE5EF8: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80AE5F08: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80AE5F28-80AE5F84 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80AE5F40: 80AE7718 (__vt__10dCcD_GStts)
//	80AE5F44: 80AE7718 (__vt__10dCcD_GStts)
//	80AE5F50: 80AE770C (__vt__10cCcD_GStts)
//	80AE5F54: 80AE770C (__vt__10cCcD_GStts)
//	80AE5F68: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80AE5F84-80AE5FF4 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80AE5FA4: 80AE76DC (__vt__12dBgS_ObjAcch)
//	80AE5FA8: 80AE76DC (__vt__12dBgS_ObjAcch)
//	80AE5FC4: 80075F94 (__dt__9dBgS_AcchFv)
//	80AE5FD4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80AE5FF4-80AE603C 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80AE600C: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE6010: 80AE76D0 (__vt__12J3DFrameCtrl)
//	80AE6020: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80AE603C-80AE6158 011C+00 s=1 e=0 z=0  None .text      setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs                    */
//	80AE6054: 803621D8 (_savegpr_28)
//	80AE6088: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80AE60A4: 80267674 (cM_atan2s__Fff)
//	80AE60D0: 80AE6C80 (lit_4331)
//	80AE60D4: 80AE6C80 (lit_4331)
//	80AE60E0: 80AE6CA0 (lit_4716)
//	80AE60E4: 80AE6CA0 (lit_4716)
//	80AE6144: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleY(cXyz param_0, s16 param_1, int param_2, f32 param_3, s16 param_4) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs.s"
}
#pragma pop


/* 80AE6158-80AE6360 0208+00 s=1 e=0 z=0  None .text      setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs                      */
//	80AE6170: 803621DC (_savegpr_29)
//	80AE6184: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE6188: 80AE6BC8 (m__17daNpc_Sha_Param_c)
//	80AE61A4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80AE61D4: 80347138 (PSVECSquareMag)
//	80AE6244: 80450AE0 (__float_nan)
//	80AE6248: 80450AE0 (__float_nan)
//	80AE62B4: 80450AE0 (__float_nan)
//	80AE62B8: 80450AE0 (__float_nan)
//	80AE62C8: 80267674 (cM_atan2s__Fff)
//	80AE634C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleX(cXyz param_0, f32 param_1, s16 param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs.s"
}
#pragma pop


/* 80AE6360-80AE6364 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi                               */
// True False
//  void False
//  int False
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
	/* empty function */
}


/* 80AE6364-80AE636C 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootLJointNo() {
	return -1;
}


/* 80AE636C-80AE6374 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootRJointNo() {
	return -1;
}


/* 80AE6374-80AE637C 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballLMaterialNo() {
	return false;
}


/* 80AE637C-80AE6384 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballRMaterialNo() {
	return false;
}


/* 80AE6384-80AE638C 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::evtEndProc() {
	return true;
}


/* 80AE638C-80AE6390 0004+00 s=1 e=0 z=0  None .text      afterMoved__8daNpcT_cFv                                      */
// True False
//  void False
void daNpcT_c::afterMoved() {
	/* empty function */
}


/* 80AE6390-80AE6398 0008+00 s=1 e=0 z=0  None .text      chkXYItems__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::chkXYItems() {
	return false;
}


/* 80AE6398-80AE63B0 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcT_c::decTmr() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/decTmr__8daNpcT_cFv.s"
}
#pragma pop


/* 80AE63B0-80AE63B4 0004+00 s=1 e=0 z=0  None .text      drawOtherMdl__8daNpcT_cFv                                    */
// True False
//  void False
void daNpcT_c::drawOtherMdl() {
	/* empty function */
}


/* 80AE63B4-80AE63B8 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv                                       */
// True False
//  void False
void daNpcT_c::drawGhost() {
	/* empty function */
}


/* 80AE63B8-80AE63C0 0008+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__8daNpcT_cFiifi                        */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 80AE63C0-80AE63C8 0008+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__8daNpcT_cFiifi                            */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 80AE63C8-80AE63F8 0030+00 s=1 e=0 z=0  None .text      getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c False
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop


/* 80AE63F8-80AE6428 0030+00 s=1 e=0 z=0  None .text      getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_motionAnmData_c False
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop


/* 80AE6428-80AE642C 0004+00 s=1 e=0 z=0  None .text      changeAnm__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AE642C-80AE6430 0004+00 s=1 e=0 z=0  None .text      changeBck__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBck(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AE6430-80AE6434 0004+00 s=1 e=0 z=0  None .text      changeBtp__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AE6434-80AE6438 0004+00 s=1 e=0 z=0  None .text      changeBtk__8daNpcT_cFPiPi                                    */
// True False
//  void False
//  int* False
// 	 int False
//  int* False
// 	 int False
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
	/* empty function */
}


/* 80AE6438-80AE6454 001C+00 s=1 e=0 z=0  None .text      cLib_calcTimer<i>__FPi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int* False
// 	 int False
asm void cLib_calcTimer__template0(int* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/func_80AE6438.s"
}
#pragma pop


/* 80AE6454-80AE64D0 007C+00 s=1 e=0 z=0  None .text      cLib_getRndValue<i>__Fii                                     */
//	80AE6468: 80AE6CA0 (lit_4716)
//	80AE646C: 80AE6CA0 (lit_4716)
//	80AE6488: 80267954 (cM_rndF__Ff)
//	80AE648C: 80AE6CA0 (lit_4716)
//	80AE6490: 80AE6CA0 (lit_4716)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int False
//  int False
asm void cLib_getRndValue__template0(int param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/func_80AE6454.s"
}
#pragma pop


/* ############################################################################################## */
/* 80AE7824-80AE7830 000C+00 s=2 e=0 z=0  None .data      __vt__17daNpc_Sha_Param_c                                    */
SECTION_DATA void* __vt__17daNpc_Sha_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__17daNpc_Sha_Param_cFv,
};

/* 80AE7838-80AE7844 000C+00 s=1 e=0 z=0  None .bss       @3813                                                        */
static u8 lit_3813[12];

/* 80AE7844-80AE7848 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80AE64D0-80AE69E0 0510+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_shaman_cpp                                   */
//	80AE64E0: 80AE6D18 (cNullVec__6Z2Calc)
//	80AE64E4: 80AE6D18 (cNullVec__6Z2Calc)
//	80AE64E8: 803A2180 (__ptmf_null)
//	80AE64EC: 803A2180 (__ptmf_null)
//	80AE6524: 80AE7824 (__vt__17daNpc_Sha_Param_c)
//	80AE6528: 80AE7824 (__vt__17daNpc_Sha_Param_c)
//	80AE652C: 80AE7844 (l_HIO)
//	80AE6530: 80AE7844 (l_HIO)
//	80AE6534: 80AE6B5C (__dt__17daNpc_Sha_Param_cFv)
//	80AE6538: 80AE6B5C (__dt__17daNpc_Sha_Param_cFv)
//	80AE653C: 80AE7838 (lit_3813)
//	80AE6540: 80AE7838 (lit_3813)
//	80AE6544: 80AE2D58 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_shaman_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__sinit_d_a_npc_shaman_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80AE64D0 = (void*)__sinit_d_a_npc_shaman_cpp;
#pragma pop


/* 80AE69E0-80AE6A8C 00AC+00 s=1 e=0 z=0  None .text      __ct__11daNpc_Sha_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80AE6A00: 80AE5920 (__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80AE6A04: 80AE7760 (__vt__11daNpc_Sha_c)
//	80AE6A08: 80AE7760 (__vt__11daNpc_Sha_c)
//	80AE6A18: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80AE6A1C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AE6A20: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80AE6A28: 80AE7748 (__vt__8cM3dGAab)
//	80AE6A2C: 80AE7748 (__vt__8cM3dGAab)
//	80AE6A34: 80AE7754 (__vt__8cM3dGCyl)
//	80AE6A38: 80AE7754 (__vt__8cM3dGCyl)
//	80AE6A40: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AE6A44: 803C35A4 (__vt__12cCcD_CylAttr)
//	80AE6A54: 803AC050 (__vt__8dCcD_Cyl)
//	80AE6A58: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpc_Sha_c::daNpc_Sha_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/func_80AE69E0.s"
}
#pragma pop


/* 80AE6A8C-80AE6AD4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80AE6AA4: 80AE7754 (__vt__8cM3dGCyl)
//	80AE6AA8: 80AE7754 (__vt__8cM3dGCyl)
//	80AE6AB8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80AE6AD4-80AE6B1C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80AE6AEC: 80AE7748 (__vt__8cM3dGAab)
//	80AE6AF0: 80AE7748 (__vt__8cM3dGAab)
//	80AE6B00: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80AE6B1C-80AE6B24 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__11daNpc_Sha_cFv                        */
// True False
//  bool False
bool daNpc_Sha_c::getEyeballMaterialNo() {
	return true;
}


/* 80AE6B24-80AE6B2C 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__11daNpc_Sha_cFv                              */
// True False
//  s32 False
s32 daNpc_Sha_c::getHeadJointNo() {
	return 4;
}


/* 80AE6B2C-80AE6B34 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__11daNpc_Sha_cFv                              */
// True False
//  s32 False
s32 daNpc_Sha_c::getNeckJointNo() {
	return 3;
}


/* 80AE6B34-80AE6B3C 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__11daNpc_Sha_cFv                          */
// True False
//  bool False
bool daNpc_Sha_c::getBackboneJointNo() {
	return true;
}


/* 80AE6B3C-80AE6B4C 0010+00 s=1 e=0 z=0  None .text      checkChangeJoint__11daNpc_Sha_cFi                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Sha_c::checkChangeJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/checkChangeJoint__11daNpc_Sha_cFi.s"
}
#pragma pop


/* 80AE6B4C-80AE6B5C 0010+00 s=1 e=0 z=0  None .text      checkRemoveJoint__11daNpc_Sha_cFi                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Sha_c::checkRemoveJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/checkRemoveJoint__11daNpc_Sha_cFi.s"
}
#pragma pop


/* 80AE6B5C-80AE6BA4 0048+00 s=2 e=0 z=0  None .text      __dt__17daNpc_Sha_Param_cFv                                  */
//	80AE6B74: 80AE7824 (__vt__17daNpc_Sha_Param_c)
//	80AE6B78: 80AE7824 (__vt__17daNpc_Sha_Param_c)
//	80AE6B88: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Sha_Param_c::~daNpc_Sha_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/__dt__17daNpc_Sha_Param_cFv.s"
}
#pragma pop


/* 80AE6BA4-80AE6BAC 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80AE6BA8: 80AE5F84 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AE6BA4() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/func_80AE6BA4.s"
}
#pragma pop


/* 80AE6BAC-80AE6BB4 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80AE6BB0: 80AE5F84 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80AE6BAC() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_shaman/d_a_npc_shaman/func_80AE6BAC.s"
}
#pragma pop


