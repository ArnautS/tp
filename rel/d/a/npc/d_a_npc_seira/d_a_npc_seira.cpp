// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_seira
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_seira/d_a_npc_seira.h"

// 
// Types:
// 

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct daNpcT_MotionSeqMngr_c {
	struct sequenceStepData_c {
	};

	/* 80145898 */ // False False
void initialize();
	/* 80145A24 */ // False False
void checkEndSequence();
	/* 80ACF47C */ // True False
~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_motionAnmData_c {
};

struct daNpcT_evtData_c {
};

struct J3DJoint {
};

struct daNpcT_faceMotionAnmData_c {
};

struct daNpc_Seira_c {
	/* 80ACB7CC */ // True False
~daNpc_Seira_c();
	/* 80ACB918 */ // True False
void create();
	/* 80ACBBD4 */ // True False
void CreateHeap();
	/* 80ACC0FC */ // True False
void Delete();
	/* 80ACC130 */ // True False
void Execute();
	/* 80ACC21C */ // True False
void Draw();
	/* 80ACC2B0 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80ACC2D0 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 80ACC328 */ // True False
void getType();
	/* 80ACC424 */ // True False
void getFlowNodeNo();
	/* 80ACC440 */ // True False
void checkBottle();
	/* 80ACC4A8 */ // True False
void getNpcType();
	/* 80ACC4C8 */ // True False
//  bool False
bool isDelete();
	/* 80ACC4D0 */ // True False
void reset();
	/* 80ACC618 */ // True False
//  int False
void afterJntAnm(int);
	/* 80ACC69C */ // True False
void setParam();
	/* 80ACC818 */ // True False
void checkChangeEvt();
	/* 80ACC8C0 */ // True False
void setAfterTalkMotion();
	/* 80ACC980 */ // True False
void srchActors();
	/* 80ACCA48 */ // True False
void evtTalk();
	/* 80ACCBEC */ // True False
void evtCutProc();
	/* 80ACCCBC */ // True False
void action();
	/* 80ACCE58 */ // True False
void beforeMove();
	/* 80ACCED0 */ // True False
void setAttnPos();
	/* 80ACD1D0 */ // True False
void setCollision();
	/* 80ACD378 */ // True False
//  bool False
bool drawDbgInfo();
	/* 80ACD380 */ // True False
void drawOtherMdl();
	/* 80ACD458 */ // True False
//  int False
//  int False
//  f32 False
//  bool False
void setBottleAnm(int, int, f32, bool);
	/* 80ACD538 */ // True False
//  int False
//  int False
//  f32 False
//  int False
void afterSetMotionAnm(int, int, f32, int);
	/* 80ACD570 */ // True False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeAnm(int*, int*);
	/* 80ACD600 */ // True False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBck(int*, int*);
	/* 80ACD6AC */ // True False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtp(int*, int*);
	/* 80ACD744 */ // True False
//  int* False
// 	 int False
//  int* False
// 	 int False
void changeBtk(int*, int*);
	/* 80ACD770 */ // True False
void selectAction();
	/* 80ACD900 */ // True False
//  int (daNpc_Seira_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira_c False
void chkAction(int (daNpc_Seira_c::*)(void*));
	/* 80ACD92C */ // True False
//  int (daNpc_Seira_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira_c False
void setAction(int (daNpc_Seira_c::*)(void*));
	/* 80ACD9D4 */ // True False
//  int False
void cutConversationAboutSaru(int);
	/* 80ACDC6C */ // True False
void checkStageIsSeirasShop();
	/* 80ACDCE4 */ // True False
void getShopItemType();
	/* 80ACDD24 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80ACDE74 */ // True False
//  void* False
// 	 void False
void sit(void*);
	/* 80ACE098 */ // True False
//  void* False
// 	 void False
void happy(void*);
	/* 80ACE220 */ // True False
//  void* False
// 	 void False
void worry(void*);
	/* 80ACE4FC */ // True False
//  void* False
// 	 void False
void sad(void*);
	/* 80ACE608 */ // True False
//  void* False
// 	 void False
void lookaround(void*);
	/* 80ACE714 */ // True False
//  void* False
// 	 void False
void lookaround_wait(void*);
	/* 80ACE828 */ // True False
//  void* False
// 	 void False
void smile(void*);
	/* 80ACE934 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80ACEAC4 */ // True False
//  void* False
// 	 void False
void shop(void*);
	/* 80ACFB48 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpc_Seira_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80ACFC14 */ // True False
//  s32 False
s32 getEyeballMaterialNo();
	/* 80ACFC1C */ // True False
//  s32 False
s32 getHeadJointNo();
	/* 80ACFC24 */ // True False
//  s32 False
s32 getNeckJointNo();
	/* 80ACFC2C */ // True False
//  bool False
bool getBackboneJointNo();
	/* 80ACFC34 */ // True False
//  int False
void checkChangeJoint(int);
	/* 80ACFC44 */ // True False
//  int False
void checkRemoveJoint(int);
};

struct daNpc_Seira_Param_c {
	/* 80ACFC54 */ // True False
~daNpc_Seira_Param_c();
};

struct J3DModel {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80ACEEFC */ // True False
~cXyz();
	/* 80ACF478 */ // True False
cXyz();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct _GXColorS10 {
};

struct daNpcT_c {
	/* 80147FA4 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
void tgHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
	/* 80148094 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getTrnsfrmKeyAnmP(char const*, int);
	/* 801483F8 */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void loadRes(s8 const*, char const**);
	/* 801484AC */ // False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
void deleteRes(s8 const*, char const**);
	/* 8014852C */ // False False
void execute();
	/* 8014886C */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
	/* 80148C70 */ // False False
void setEnvTevColor();
	/* 80148CCC */ // False False
void setRoomNo();
	/* 801490D4 */ // False False
void ctrlBtk();
	/* 80149190 */ // False False
void setMtx();
	/* 8014951C */ // False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 8014997C */ // False False
void evtProc();
	/* 80149BB4 */ // False False
void setFootPos();
	/* 80149D7C */ // False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
void setFootPrtcl(cXyz*, f32, f32);
	/* 8014A05C */ // False False
//  bool False
bool checkCullDraw();
	/* 8014A064 */ // False False
void twilight();
	/* 8014A0B0 */ // False False
void evtOrder();
	/* 8014A224 */ // False False
void evtChange();
	/* 8014A324 */ // False False
void clrParam();
	/* 8014A388 */ // False False
//  int False
//  bool False
void setFaceMotionAnm(int, bool);
	/* 8014A628 */ // False False
//  int False
//  f32 False
//  int False
void setMotionAnm(int, f32, int);
	/* 8014AA18 */ // False False
//  s16 False
void setAngle(s16);
	/* 8014AA40 */ // False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
void hitChk(dCcD_GObjInf*, u32);
	/* 8014AAD0 */ // False False
//  int False
//  int False
//  int False
void setDamage(int, int, int);
	/* 8014B338 */ // False False
void srchPlayerActor();
	/* 8014B648 */ // False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
void step(s16, int, int, int, int);
	/* 8014BBF0 */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 8014BC78 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void talkProc(int*, int, fopAc_ac_c**, int);
	/* 8014BE2C */ // False False
//  s16 False
void getNearestActorP(s16);
	/* 80ACEF74 */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80ACF96C */ // True False
//  void False
//  int False
void ctrlSubFaceMotion(int);
	/* 80ACF970 */ // True False
//  s32 False
s32 getFootLJointNo();
	/* 80ACF978 */ // True False
//  s32 False
s32 getFootRJointNo();
	/* 80ACF980 */ // True False
//  bool False
bool getEyeballLMaterialNo();
	/* 80ACF988 */ // True False
//  bool False
bool getEyeballRMaterialNo();
	/* 80ACF990 */ // True False
//  bool False
bool evtEndProc();
	/* 80ACF998 */ // True False
//  void False
void afterMoved();
	/* 80ACF99C */ // True False
//  bool False
bool chkXYItems();
	/* 80ACF9A4 */ // True False
void decTmr();
	/* 80ACF9BC */ // True False
//  void False
void drawGhost();
	/* 80ACF9C0 */ // True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool afterSetFaceMotionAnm(int, int, f32, int);
	/* 80ACF9C8 */ // True False
//  daNpcT_faceMotionAnmData_c False
void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
	/* 80ACF9F8 */ // True False
//  daNpcT_motionAnmData_c False
void getMotionAnm(daNpcT_motionAnmData_c);
};

struct daNpcT_MatAnm_c {
	/* 80145764 */ // False False
void initialize();
};

struct daNpcT_JntAnm_c {
	/* 80146C98 */ // False False
void initialize();
	/* 80146CD8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
void setParam(fopAc_ac_c*, J3DModel*, cXyz*, int, int, int, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, cXyz*);
	/* 80147C38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void calcJntRad(f32, f32, f32);
	/* 80ACF37C */ // True False
~daNpcT_JntAnm_c();
	/* 80ACF648 */ // True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
void setEyeAngleY(cXyz, s16, int, f32, s16);
	/* 80ACF764 */ // True False
//  cXyz False
//  f32 False
//  s16 False
void setEyeAngleX(cXyz, f32, s16);
};

struct daNpcT_DmgStagger_c {
	/* 80147DCC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
void setParam(fopAc_ac_c*, fopAc_ac_c*, s16);
	/* 80147E3C */ // False False
//  int False
void calc(int);
};

struct daNpcT_ActorMngr_c {
	/* 801456D4 */ // False False
void initialize();
	/* 801456E0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801456FC */ // False False
void remove();
	/* 80145708 */ // False False
void getActorP();
	/* 80ACEDE8 */ // True False
~daNpcT_ActorMngr_c();
	/* 80ACEE30 */ // True False
daNpcT_ActorMngr_c();
};

struct dSv_player_status_b_c {
	/* 80032BB0 */ // False False
//  int False
void isDarkClearLV(int) const;
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
};

struct dShopSystem_c {
	/* 80197338 */ // False False
void initShopSystem();
	/* 801974E4 */ // False False
~dShopSystem_c();
	/* 80198878 */ // False False
void drawCursor();
	/* 80198950 */ // False False
void itemRotate();
	/* 80198A2C */ // False False
//  cXyz* False
// 	 cXyz False
void itemZoom(cXyz*);
	/* 8019A0D0 */ // False False
//  bool False
void shop_init(bool);
	/* 8019A158 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
void shop_process(fopAc_ac_c*, dMsgFlow_c*);
	/* 8019A238 */ // False False
//  int False
void createShopItem(int);
	/* 8019A564 */ // False False
void deleteObject();
	/* 8019AB24 */ // False False
void checkShopOpen();
	/* 80ACFCAC */ // True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
dShopSystem_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int, daNpcT_evtData_c const*, char**);
	/* 80ACFDC4 */ // True False
//  bool False
//  int False
bool getResName2(int);
	/* 80ACFDCC */ // True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
bool beforeStartSeqAction(dMsgFlow_c*, int);
	/* 80ACFDD4 */ // True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
bool beforeSelectSeqAction(dMsgFlow_c*, int);
};

struct dShopItemCtrl_c {
	/* 80196914 */ // False False
dShopItemCtrl_c();
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 800480EC */ // False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getMySubstanceP(int, char const*, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dComIfG_play_c {
	/* 8002C97C */ // False False
//  int False
void getLayerNo(int);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80ACF534 */ // True False
~dCcD_GStts();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80ACF590 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F40 */ // False False
//  f32 False
void SetWallR(f32);
	/* 80ACF4C4 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct csXyz {
	/* 80ACEF38 */ // True False
~csXyz();
	/* 80ACF378 */ // True False
csXyz();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80ACEE6C */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80ACEEB4 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80ACEDA0 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
};

struct ShopCam_action_c {
	/* 80195C9C */ // False False
void shop_cam_action_init();
	/* 8019630C */ // False False
void Save();
	/* 8019635C */ // False False
void EventRecoverNotime();
	/* 801963B4 */ // False False
void Reset();
	/* 801964C8 */ // False False
void move();
};

struct J3DTexNoAnm {
	/* 80ACBFE8 */ // True False
~J3DTexNoAnm();
	/* 80ACC030 */ // True False
J3DTexNoAnm();
	/* 80ACED70 */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 80ACC054 */ // True False
~J3DTexMtxAnm();
	/* 80ACC090 */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 80ACBF40 */ // True False
~J3DTevKColorAnm();
	/* 80ACBF7C */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 80ACBF94 */ // True False
~J3DTevColorAnm();
	/* 80ACBFD0 */ // True False
J3DTevColorAnm();
};

struct J3DShapeTable {
	/* 803258A0 */ // False False
void hide();
	/* 803258D8 */ // False False
void show();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 80ACC0A8 */ // True False
~J3DMatColorAnm();
	/* 80ACC0E4 */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80ACF600 */ // True False
~J3DFrameCtrl();
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpc_Seira_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Seira_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Seira_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpc_Seira_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Seira_IsDelete(void*);
// False True
//  int* False
// 	 int False
void cLib_calcTimer__template0(int*);
// False True
//  int False
//  int False
void cLib_getRndValue__template0(int, int);

// True False
extern "C" void __dt__13daNpc_Seira_cFv();
// True False
extern "C" void create__13daNpc_Seira_cFv();
// True False
extern "C" void CreateHeap__13daNpc_Seira_cFv();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
extern "C" void Delete__13daNpc_Seira_cFv();
// True False
extern "C" void Execute__13daNpc_Seira_cFv();
// True False
extern "C" void Draw__13daNpc_Seira_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__13daNpc_Seira_cFP10fopAc_ac_c();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__13daNpc_Seira_cFP8J3DJointi();
// True False
extern "C" void getType__13daNpc_Seira_cFv();
// True False
extern "C" void getFlowNodeNo__13daNpc_Seira_cFv();
// True False
extern "C" void checkBottle__13daNpc_Seira_cFv();
// True False
extern "C" void getNpcType__13daNpc_Seira_cFv();
// True False
//  bool False
extern "C" bool isDelete__13daNpc_Seira_cFv();
// True False
extern "C" void reset__13daNpc_Seira_cFv();
// True False
//  int False
extern "C" void afterJntAnm__13daNpc_Seira_cFi();
// True False
extern "C" void setParam__13daNpc_Seira_cFv();
// True False
extern "C" void checkChangeEvt__13daNpc_Seira_cFv();
// True False
extern "C" void setAfterTalkMotion__13daNpc_Seira_cFv();
// True False
extern "C" void srchActors__13daNpc_Seira_cFv();
// True False
extern "C" void evtTalk__13daNpc_Seira_cFv();
// True False
extern "C" void evtCutProc__13daNpc_Seira_cFv();
// True False
extern "C" void action__13daNpc_Seira_cFv();
// True False
extern "C" void beforeMove__13daNpc_Seira_cFv();
// True False
extern "C" void setAttnPos__13daNpc_Seira_cFv();
// True False
extern "C" void setCollision__13daNpc_Seira_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__13daNpc_Seira_cFv();
// True False
extern "C" void drawOtherMdl__13daNpc_Seira_cFv();
// True False
//  int False
//  int False
//  f32 False
//  bool False
extern "C" void setBottleAnm__13daNpc_Seira_cFiifb();
// True False
//  int False
//  int False
//  f32 False
//  int False
extern "C" void afterSetMotionAnm__13daNpc_Seira_cFiifi();
// True False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeAnm__13daNpc_Seira_cFPiPi();
// True False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBck__13daNpc_Seira_cFPiPi();
// True False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtp__13daNpc_Seira_cFPiPi();
// True False
//  int* False
// 	 int False
//  int* False
// 	 int False
extern "C" void changeBtk__13daNpc_Seira_cFPiPi();
// True False
extern "C" void selectAction__13daNpc_Seira_cFv();
// True False
//  int (daNpc_Seira_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira_c False
extern "C" void chkAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i();
// True False
//  int (daNpc_Seira_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira_c False
extern "C" void setAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i();
// True False
//  int False
extern "C" void cutConversationAboutSaru__13daNpc_Seira_cFi();
// True False
extern "C" void checkStageIsSeirasShop__13daNpc_Seira_cFv();
// True False
extern "C" void getShopItemType__13daNpc_Seira_cFv();
// True False
//  void* False
// 	 void False
extern "C" void wait__13daNpc_Seira_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void sit__13daNpc_Seira_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void happy__13daNpc_Seira_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void worry__13daNpc_Seira_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void sad__13daNpc_Seira_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void lookaround__13daNpc_Seira_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void lookaround_wait__13daNpc_Seira_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void smile__13daNpc_Seira_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__13daNpc_Seira_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void shop__13daNpc_Seira_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Seira_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Seira_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Seira_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpc_Seira_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpc_Seira_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __ct__18daNpcT_ActorMngr_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__15daNpcT_JntAnm_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
extern "C" void setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs();
// True False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs();
// True False
//  void False
//  int False
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
// True False
//  s32 False
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
// True False
//  s32 False
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool evtEndProc__8daNpcT_cFv();
// True False
//  void False
extern "C" void afterMoved__8daNpcT_cFv();
// True False
//  bool False
extern "C" bool chkXYItems__8daNpcT_cFv();
// True False
extern "C" void decTmr__8daNpcT_cFv();
// True False
//  void False
extern "C" void drawGhost__8daNpcT_cFv();
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
// True False
//  daNpcT_faceMotionAnmData_c False
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
// True False
//  daNpcT_motionAnmData_c False
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
// False True
//  int* False
// 	 int False
extern "C" void func_80ACFA28();
// False True
//  int False
//  int False
extern "C" void func_80ACFA44();
// False False
extern "C" void __sinit_d_a_npc_seira_cpp();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__13daNpc_Seira_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
//  s32 False
extern "C" s32 getEyeballMaterialNo__13daNpc_Seira_cFv();
// True False
//  s32 False
extern "C" s32 getHeadJointNo__13daNpc_Seira_cFv();
// True False
//  s32 False
extern "C" s32 getNeckJointNo__13daNpc_Seira_cFv();
// True False
//  bool False
extern "C" bool getBackboneJointNo__13daNpc_Seira_cFv();
// True False
//  int False
extern "C" void checkChangeJoint__13daNpc_Seira_cFi();
// True False
//  int False
extern "C" void checkRemoveJoint__13daNpc_Seira_cFi();
// True False
extern "C" void __dt__19daNpc_Seira_Param_cFv();
// True False
extern "C" static void func_80ACFC9C();
// True False
extern "C" static void func_80ACFCA4();
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
extern "C" void __ct__13dShopSystem_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
// True False
//  bool False
//  int False
extern "C" bool getResName2__13dShopSystem_cFi();
// True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
extern "C" bool beforeStartSeqAction__13dShopSystem_cFP10dMsgFlow_ci();
// True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
extern "C" bool beforeSelectSeqAction__13dShopSystem_cFP10dMsgFlow_ci();
extern "C" extern u32 const lit_3968;
extern "C" extern u32 const lit_3969;
extern "C" extern u32 const lit_3970;
extern "C" extern u32 const lit_3971;
extern "C" extern u32 const lit_4060;
extern "C" extern u32 const lit_4061;
extern "C" extern u32 const lit_4062;
extern "C" extern u32 const lit_4065;
extern "C" extern u32 const lit_4286;
extern "C" extern u32 const lit_4287;
extern "C" extern u32 const lit_4920;
extern "C" extern u32 const lit_4921;
extern "C" extern u32 const lit_4922;
extern "C" extern u32 const lit_4923;
extern "C" extern u32 const lit_4924;
extern "C" extern u8 const lit_4984[8];
extern "C" extern u8 const lit_4985[8];
extern "C" extern u8 const lit_4986[8];
extern "C" extern u8 const lit_5204[12];
extern "C" extern u8 const lit_5212[12];
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtList[8];
extern "C" extern u8 l_faceMotionAnmData[392];
extern "C" extern u8 l_motionAnmData[728];
extern "C" extern u8 l_faceMotionSequenceData[224];
extern "C" extern u8 l_motionSequenceData[416];
extern "C" extern void* lit_4737[3];
extern "C" extern void* lit_4745[3];
extern "C" extern void* lit_4748[3];
extern "C" extern void* lit_4756[3];
extern "C" extern void* lit_5003[3];
extern "C" extern void* lit_5004[3];
extern "C" extern void* lit_5005[3];
extern "C" extern void* lit_5162[3];
extern "C" extern void* lit_5164[3];
extern "C" extern void* lit_5166[3];
extern "C" extern void* lit_5168[3];
extern "C" extern void* lit_5170[3];
extern "C" extern void* lit_5174[3];
extern "C" extern void* lit_5176[3];
extern "C" extern void* lit_5178[3];
extern "C" extern void* g_profile_NPC_SEIRA[12];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__22daNpcT_MotionSeqMngr_c[3];
extern "C" extern void* __vt__15daNpcT_JntAnm_c[3];
extern "C" extern void* __vt__18daNpcT_ActorMngr_c[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__13daNpc_Seira_c[52];
extern "C" extern void* __vt__19daNpc_Seira_Param_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
void fopAcM_setEffectMtx(fopAc_ac_c const*, J3DModelData const*);
// False False
void dComIfGs_wolfeye_effect_check();
// False False
//  int False
//  int False
void daNpcT_getDistTableIdx(int, int);
// False False
//  u32 False
void daNpcT_chkEvtBit(u32);
// False False
//  u32 False
void daNpcT_offTmpBit(u32);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
extern "C" void fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData();
// False False
//  int False
extern "C" void getLayerNo__14dComIfG_play_cFi();
// False False
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
// False False
//  int False
extern "C" void isDarkClearLV__21dSv_player_status_b_cCFi();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
extern "C" void SetWallR__12dBgS_AcchCirFf();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcT_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_MatAnm_cFv();
// False False
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void checkEndSequence__22daNpcT_MotionSeqMngr_cFv();
// False False
extern "C" void initialize__15daNpcT_JntAnm_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  int False
//  int False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void calcJntRad__15daNpcT_JntAnm_cFfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
extern "C" void setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs();
// False False
//  int False
extern "C" void calc__19daNpcT_DmgStagger_cFi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" void tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getTrnsfrmKeyAnmP__8daNpcT_cFPCci();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
// False False
//  s8 const* False
// 	 s8 const False
// 		 s8 False
//  char const** False
// 	 char const* False
// 		 char const False
// 			 char False
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
// False False
extern "C" void execute__8daNpcT_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
// False False
extern "C" void setEnvTevColor__8daNpcT_cFv();
// False False
extern "C" void setRoomNo__8daNpcT_cFv();
// False False
extern "C" void ctrlBtk__8daNpcT_cFv();
// False False
extern "C" void setMtx__8daNpcT_cFv();
// False False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
// False False
extern "C" void evtProc__8daNpcT_cFv();
// False False
extern "C" void setFootPos__8daNpcT_cFv();
// False False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
// False False
//  bool False
extern "C" bool checkCullDraw__8daNpcT_cFv();
// False False
extern "C" void twilight__8daNpcT_cFv();
// False False
extern "C" void evtOrder__8daNpcT_cFv();
// False False
extern "C" void evtChange__8daNpcT_cFv();
// False False
extern "C" void clrParam__8daNpcT_cFv();
// False False
//  int False
//  bool False
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
// False False
//  int False
//  f32 False
//  int False
extern "C" void setMotionAnm__8daNpcT_cFifi();
// False False
//  s16 False
extern "C" void setAngle__8daNpcT_cFs();
// False False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  u32 False
extern "C" void hitChk__8daNpcT_cFP12dCcD_GObjInfUl();
// False False
//  int False
//  int False
//  int False
extern "C" void setDamage__8daNpcT_cFiii();
// False False
extern "C" void srchPlayerActor__8daNpcT_cFv();
// False False
//  s16 False
//  int False
//  int False
//  int False
//  int False
extern "C" void step__8daNpcT_cFsiiii();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
// False False
//  s16 False
extern "C" void getNearestActorP__8daNpcT_cFs();
// False False
//  int False
//  int False
extern "C" void daNpcT_getDistTableIdx__Fii();
// False False
//  u32 False
extern "C" void daNpcT_chkEvtBit__FUl();
// False False
//  u32 False
extern "C" void daNpcT_offTmpBit__FUl();
// False False
extern "C" void shop_cam_action_init__16ShopCam_action_cFv();
// False False
extern "C" void Save__16ShopCam_action_cFv();
// False False
extern "C" void EventRecoverNotime__16ShopCam_action_cFv();
// False False
extern "C" void Reset__16ShopCam_action_cFv();
// False False
extern "C" void move__16ShopCam_action_cFv();
// False False
extern "C" void __ct__15dShopItemCtrl_cFv();
// False False
extern "C" void initShopSystem__13dShopSystem_cFv();
// False False
extern "C" void __dt__13dShopSystem_cFv();
// False False
extern "C" void drawCursor__13dShopSystem_cFv();
// False False
extern "C" void itemRotate__13dShopSystem_cFv();
// False False
//  cXyz* False
// 	 cXyz False
extern "C" void itemZoom__13dShopSystem_cFP4cXyz();
// False False
//  bool False
extern "C" void shop_init__13dShopSystem_cFb();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
extern "C" void shop_process__13dShopSystem_cFP10fopAc_ac_cP10dMsgFlow_c();
// False False
//  int False
extern "C" void createShopItem__13dShopSystem_cFi();
// False False
extern "C" void deleteObject__13dShopSystem_cFv();
// False False
extern "C" void checkShopOpen__13dShopSystem_cFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void hide__13J3DShapeTableFv();
// False False
extern "C" void show__13J3DShapeTableFv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcT_c[68];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__15daNpcT_MatAnm_c[4 + 1 /* padding */];
extern "C" extern void* __vt__13dShopSystem_c[52 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_cursorHIO[68 + 4 /* padding */];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80ACFDF0-80ACFE7C 008C+00 s=9 e=0 z=0  None .rodata    m__19daNpc_Seira_Param_c                                     */
SECTION_RODATA static u8 const m__19daNpc_Seira_Param_c[140] = {
	0x43, 0x52, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0xC2, 0x70, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80ACFE7C-80ACFE80 0004+00 s=0 e=0 z=0  None .rodata    @3968                                                        */
SECTION_RODATA u32 const lit_3968 = 0xC3960000;

/* 80ACFE80-80ACFE84 0004+00 s=0 e=0 z=0  None .rodata    @3969                                                        */
SECTION_RODATA u32 const lit_3969 = 0xC2480000;

/* 80ACFE84-80ACFE88 0004+00 s=0 e=0 z=0  None .rodata    @3970                                                        */
SECTION_RODATA u32 const lit_3970 = 0x43960000;

/* 80ACFE88-80ACFE8C 0004+00 s=0 e=0 z=0  None .rodata    @3971                                                        */
SECTION_RODATA u32 const lit_3971 = 0x43E10000;

/* 80ACFE8C-80ACFE90 0004+00 s=0 e=0 z=0  None .rodata    @4060                                                        */
SECTION_RODATA u32 const lit_4060 = 0x3E800000;

/* 80ACFE90-80ACFE94 0004+00 s=0 e=0 z=0  None .rodata    @4061                                                        */
SECTION_RODATA u32 const lit_4061 = 0x41A00000;

/* 80ACFE94-80ACFE98 0004+00 s=0 e=0 z=0  None .rodata    @4062                                                        */
SECTION_RODATA u32 const lit_4062 = 0x40A00000;

/* 80ACFE98-80ACFE9C 0004+00 s=13 e=0 z=0  None .rodata    @4063                                                        */
SECTION_RODATA static u8 const lit_4063[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80ACFE9C-80ACFEA0 0004+00 s=1 e=0 z=0  None .rodata    @4064                                                        */
SECTION_RODATA static u32 const lit_4064 = 0x42C80000;

/* 80ACFEA0-80ACFEA4 0004+00 s=0 e=0 z=0  None .rodata    @4065                                                        */
SECTION_RODATA u32 const lit_4065 = 0x42700000;

/* 80ACFEA4-80ACFEA8 0004+00 s=0 e=0 z=0  None .rodata    @4286                                                        */
SECTION_RODATA u32 const lit_4286 = 0x47800000;

/* 80ACFEA8-80ACFEAC 0004+00 s=0 e=0 z=0  None .rodata    @4287                                                        */
SECTION_RODATA u32 const lit_4287 = 0x3E4CCCCD;

/* 80ACFEAC-80ACFEB0 0004+00 s=2 e=0 z=0  None .rodata    @4455                                                        */
SECTION_RODATA static u32 const lit_4455 = 0x3F800000;

/* 80ACFEB0-80ACFEB4 0004+00 s=10 e=0 z=0  None .rodata    @4716                                                        */
SECTION_RODATA static u32 const lit_4716 = 0xBF800000;

/* 80ACFEB4-80ACFEB8 0004+00 s=0 e=0 z=0  None .rodata    @4920                                                        */
SECTION_RODATA u32 const lit_4920 = 0xC1F00000;

/* 80ACFEB8-80ACFEBC 0004+00 s=0 e=0 z=0  None .rodata    @4921                                                        */
SECTION_RODATA u32 const lit_4921 = 0x41200000;

/* 80ACFEBC-80ACFEC0 0004+00 s=0 e=0 z=0  None .rodata    @4922                                                        */
SECTION_RODATA u32 const lit_4922 = 0x38C90FDB;

/* 80ACFEC0-80ACFEC4 0004+00 s=0 e=0 z=0  None .rodata    @4923                                                        */
SECTION_RODATA u32 const lit_4923 = 0x432A0000;

/* 80ACFEC4-80ACFEC8 0004+00 s=0 e=0 z=0  None .rodata    @4924                                                        */
SECTION_RODATA u32 const lit_4924 = 0x42A00000;

/* 80ACFEC8-80ACFED0 0008+00 s=2 e=0 z=0  None .rodata    @4926                                                        */
SECTION_RODATA static u8 const lit_4926[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80ACFED0-80ACFED8 0008+00 s=0 e=0 z=0  None .rodata    @4984                                                        */
SECTION_RODATA u8 const lit_4984[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80ACFED8-80ACFEE0 0008+00 s=0 e=0 z=0  None .rodata    @4985                                                        */
SECTION_RODATA u8 const lit_4985[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80ACFEE0-80ACFEE8 0008+00 s=0 e=0 z=0  None .rodata    @4986                                                        */
SECTION_RODATA u8 const lit_4986[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80ACFEE8-80ACFEEC 0004+00 s=1 e=0 z=0  None .rodata    @5182                                                        */
SECTION_RODATA static u32 const lit_5182 = 0x43480000;

/* 80ACFEEC-80ACFEF8 000C+00 s=0 e=0 z=0  None .rodata    @5204                                                        */
SECTION_RODATA u8 const lit_5204[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80ACFEF8-80ACFF04 000C+00 s=0 e=0 z=0  None .rodata    @5212                                                        */
SECTION_RODATA u8 const lit_5212[12] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80ACFF04-80ACFF5C 0058+00 s=6 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80ACFF04[88] = {
	/* 80ACFF04 0001 stringBase_80ACFF04 @stringBase0 */
	0x00,
	/* 80ACFF05 0010 data_80ACFF05 None */
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x47, 0x45, 0x54, 0x49, 0x54, 0x45, 0x4D, 0x00,
	/* 80ACFF15 001A data_80ACFF15 None */
	0x43, 0x4F, 0x4E, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x41, 0x42, 0x4F,
	0x55, 0x54, 0x5F, 0x53, 0x41, 0x52, 0x55, 0x30, 0x31, 0x00,
	/* 80ACFF2F 001A data_80ACFF2F None */
	0x43, 0x4F, 0x4E, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x41, 0x42, 0x4F,
	0x55, 0x54, 0x5F, 0x53, 0x41, 0x52, 0x55, 0x30, 0x32, 0x00,
	/* 80ACFF49 0006 data_80ACFF49 None */
	0x53, 0x65, 0x69, 0x72, 0x61, 0x00,
	/* 80ACFF4F 0008 data_80ACFF4F None */
	0x53, 0x65, 0x72, 0x61, 0x42, 0x74, 0x6C, 0x00,
	/* 80ACFF57 0005 data_80ACFF57 None */
	0x53, 0x65, 0x72, 0x61, 0x00,
};

/* 80ACFF5C-80ACFF90 0034+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80ACFF5C[52] = {
	/* 80ACFF5C 0009 data_80ACFF5C None */
	0x53, 0x65, 0x69, 0x72, 0x61, 0x5F, 0x70, 0x31, 0x00,
	/* 80ACFF65 002B data_80ACFF65 None */
	0x43, 0x4F, 0x4E, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x41, 0x42, 0x4F,
	0x55, 0x54, 0x5F, 0x53, 0x41, 0x52, 0x55, 0x00, 0x70, 0x72, 0x6D, 0x00, 0x6D, 0x73, 0x67, 0x4E,
	0x6F, 0x00, 0x52, 0x5F, 0x53, 0x50, 0x30, 0x31, 0x00, 0x00, 0x00,
};

/* 80ACFF90-80ACFF9C 000C+00 s=4 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80ACFF9C-80ACFFB0 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80ACFFB0-80ACFFC0 0010+00 s=1 e=0 z=0  None .data      l_bmdData                                                    */
SECTION_DATA static u8 l_bmdData[16] = {
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02,
};

/* 80ACFFC0-80ACFFE0 0020+00 s=0 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA void* l_evtList[8] = {
	(void*)(((char*)&struct_80ACFF04)+0x0) /* @stringBase0 */,
	(void*)NULL,
	(void*)(((char*)&struct_80ACFF04)+0x1) /* None */,
	(void*)NULL,
	(void*)(((char*)&struct_80ACFF04)+0x11) /* None */,
	(void*)0x00000003,
	(void*)(((char*)&struct_80ACFF04)+0x2B) /* None */,
	(void*)0x00000003,
};

/* 80ACFFE0-80ACFFF4 0014+00 s=3 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[5] = {
	(void*)(((char*)&struct_80ACFF04)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80ACFF04)+0x45) /* None */,
	(void*)(((char*)&struct_80ACFF04)+0x4B) /* None */,
	(void*)(((char*)&struct_80ACFF04)+0x53) /* None */,
	(void*)(((char*)&struct_80ACFF5C)+0x0) /* None */,
};

/* 80ACFFF4-80ACFFF8 0004+00 s=1 e=0 z=0  None .data      l_loadResPtrn0                                               */
SECTION_DATA static u32 l_loadResPtrn0 = 0x030102FF;

/* 80ACFFF8-80ACFFFC 0003+01 s=1 e=0 z=0  None .data      l_loadResPtrn1                                               */
SECTION_DATA static u8 l_loadResPtrn1[3 + 1 /* padding */] = {
	0x03, 0x04, 0xFF,
	/* padding */
	0x00,
};

/* 80ACFFFC-80AD0018 001C+00 s=1 e=0 z=0  None .data      l_loadResPtrnList                                            */
SECTION_DATA static void* l_loadResPtrnList[7] = {
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn0,
	(void*)&l_loadResPtrn1,
	(void*)&l_loadResPtrn0,
};

/* 80AD0018-80AD01A0 0188+00 s=0 e=0 z=0  None .data      l_faceMotionAnmData                                          */
SECTION_DATA u8 l_faceMotionAnmData[392] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
};

/* 80AD01A0-80AD0478 02D8+00 s=0 e=0 z=0  None .data      l_motionAnmData                                              */
SECTION_DATA u8 l_motionAnmData[728] = {
	0x00, 0x00, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x25,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x23,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x15,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3A,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x18,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x35,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x1A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x20,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x40,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x26,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0C,
};

/* 80AD0478-80AD0558 00E0+00 s=0 e=0 z=0  None .data      l_faceMotionSequenceData                                     */
SECTION_DATA u8 l_faceMotionSequenceData[224] = {
	0x00, 0x01, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x01, 0x00, 0x09, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0x00, 0x06, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x01, 0x00, 0x0B, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0C, 0xFF, 0x01, 0x00, 0x0D, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0D, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AD0558-80AD06F8 01A0+00 s=0 e=0 z=0  None .data      l_motionSequenceData                                         */
SECTION_DATA u8 l_motionSequenceData[416] = {
	0x00, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x01, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x04, 0xFF, 0x01, 0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x09, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0A, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0B, 0xFF, 0x01, 0x00, 0x0C, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0D, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x07, 0xFF, 0x01, 0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x06, 0xFF, 0x01, 0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x05, 0xFF, 0x01, 0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0E, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x0F, 0xFF, 0x01, 0x00, 0x0A, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x08, 0xFF, 0x01, 0x00, 0x03, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x11, 0xFF, 0x01, 0x00, 0x10, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x10, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x12, 0xFF, 0x01, 0x00, 0x18, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x17, 0xFF, 0x01, 0x00, 0x18, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x14, 0xFF, 0x01, 0x00, 0x10, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x18, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x15, 0xFF, 0x01, 0x00, 0x16, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x16, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x13, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x19, 0x04, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x02, 0xFF, 0x01, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AD06F8-80AD0700 0008+00 s=1 e=0 z=0  None .data      mCutNameList__13daNpc_Seira_c                                */
SECTION_DATA static void* mCutNameList__13daNpc_Seira_c[2] = {
	(void*)(((char*)&struct_80ACFF04)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80ACFF5C)+0x9) /* None */,
};

/* 80AD0700-80AD070C 000C+00 s=1 e=0 z=0  None .data      @3871                                                        */
SECTION_DATA static void* lit_3871[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)cutConversationAboutSaru__13daNpc_Seira_cFi,
};

/* 80AD070C-80AD0724 0018+00 s=2 e=0 z=0  None .data      mCutList__13daNpc_Seira_c                                    */
SECTION_DATA static u8 mCutList__13daNpc_Seira_c[24] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AD0724-80AD0730 000C+00 s=1 e=0 z=0  None .data      @4679                                                        */
SECTION_DATA static void* lit_4679[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__13daNpc_Seira_cFPv,
};

/* 80AD0730-80AD073C 000C+00 s=0 e=0 z=0  None .data      @4737                                                        */
SECTION_DATA void* lit_4737[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)shop__13daNpc_Seira_cFPv,
};

/* 80AD073C-80AD0748 000C+00 s=0 e=0 z=0  None .data      @4745                                                        */
SECTION_DATA void* lit_4745[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)shop__13daNpc_Seira_cFPv,
};

/* 80AD0748-80AD0754 000C+00 s=0 e=0 z=0  None .data      @4748                                                        */
SECTION_DATA void* lit_4748[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__13daNpc_Seira_cFPv,
};

/* 80AD0754-80AD0760 000C+00 s=0 e=0 z=0  None .data      @4756                                                        */
SECTION_DATA void* lit_4756[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__13daNpc_Seira_cFPv,
};

/* 80AD0760-80AD076C 000C+00 s=0 e=0 z=0  None .data      @5003                                                        */
SECTION_DATA void* lit_5003[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)sit__13daNpc_Seira_cFPv,
};

/* 80AD076C-80AD0778 000C+00 s=0 e=0 z=0  None .data      @5004                                                        */
SECTION_DATA void* lit_5004[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)happy__13daNpc_Seira_cFPv,
};

/* 80AD0778-80AD0784 000C+00 s=0 e=0 z=0  None .data      @5005                                                        */
SECTION_DATA void* lit_5005[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)worry__13daNpc_Seira_cFPv,
};

/* 80AD0784-80AD0864 00E0+00 s=1 e=0 z=0  None .data      bottlAnmData$5085                                            */
SECTION_DATA static u8 bottlAnmData[224] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x02,
};

/* 80AD0864-80AD0890 002C+00 s=1 e=0 z=0  None .data      @5133                                                        */
SECTION_DATA static void* lit_5133[11] = {
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0x34),
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0x48),
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0xA8),
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0xA8),
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0xA8),
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0x5C),
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0xA8),
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0x70),
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0x84),
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0xA8),
	(void*)(((char*)changeBck__13daNpc_Seira_cFPiPi)+0x98),
};

/* 80AD0890-80AD08C8 0038+00 s=1 e=0 z=0  None .data      @5147                                                        */
SECTION_DATA static void* lit_5147[14] = {
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x34),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x94),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x48),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x94),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x94),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x94),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x94),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x94),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x94),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x5C),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x94),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x70),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x94),
	(void*)(((char*)changeBtp__13daNpc_Seira_cFPiPi)+0x84),
};

/* 80AD08C8-80AD08D4 000C+00 s=0 e=0 z=0  None .data      @5162                                                        */
SECTION_DATA void* lit_5162[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)sit__13daNpc_Seira_cFPv,
};

/* 80AD08D4-80AD08E0 000C+00 s=0 e=0 z=0  None .data      @5164                                                        */
SECTION_DATA void* lit_5164[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)happy__13daNpc_Seira_cFPv,
};

/* 80AD08E0-80AD08EC 000C+00 s=0 e=0 z=0  None .data      @5166                                                        */
SECTION_DATA void* lit_5166[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)worry__13daNpc_Seira_cFPv,
};

/* 80AD08EC-80AD08F8 000C+00 s=0 e=0 z=0  None .data      @5168                                                        */
SECTION_DATA void* lit_5168[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)sad__13daNpc_Seira_cFPv,
};

/* 80AD08F8-80AD0904 000C+00 s=0 e=0 z=0  None .data      @5170                                                        */
SECTION_DATA void* lit_5170[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)smile__13daNpc_Seira_cFPv,
};

/* 80AD0904-80AD0910 000C+00 s=0 e=0 z=0  None .data      @5174                                                        */
SECTION_DATA void* lit_5174[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)lookaround_wait__13daNpc_Seira_cFPv,
};

/* 80AD0910-80AD091C 000C+00 s=0 e=0 z=0  None .data      @5176                                                        */
SECTION_DATA void* lit_5176[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)lookaround__13daNpc_Seira_cFPv,
};

/* 80AD091C-80AD0928 000C+00 s=0 e=0 z=0  None .data      @5178                                                        */
SECTION_DATA void* lit_5178[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__13daNpc_Seira_cFPv,
};

/* 80AD0928-80AD0948 0020+00 s=1 e=0 z=0  None .data      daNpc_Seira_MethodTable                                      */
SECTION_DATA static void* daNpc_Seira_MethodTable[8] = {
	(void*)daNpc_Seira_Create__FPv,
	(void*)daNpc_Seira_Delete__FPv,
	(void*)daNpc_Seira_Execute__FPv,
	(void*)daNpc_Seira_IsDelete__FPv,
	(void*)daNpc_Seira_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80AD0948-80AD0978 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_SEIRA                                          */
SECTION_DATA void* g_profile_NPC_SEIRA[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02680000,
	(void*)&g_fpcLf_Method,
	(void*)0x00001108,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01690000,
	(void*)&daNpc_Seira_MethodTable,
	(void*)0x00044108,
	(void*)0x040E0000,
};

/* 80AD0978-80AD0984 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80AD0984-80AD0990 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80AD0990-80AD09B4 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80ACFCA4,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80ACFC9C,
};

/* 80AD09B4-80AD09C0 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80AD09C0-80AD09CC 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80AD09CC-80AD09D8 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80AD09D8-80AD09E4 000C+00 s=2 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c                               */
SECTION_DATA void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80AD09E4-80AD09F0 000C+00 s=2 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c                                      */
SECTION_DATA void* __vt__15daNpcT_JntAnm_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80AD09F0-80AD09FC 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcT_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80AD09FC-80AD0A08 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80AD0A08-80AD0A14 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80AD0A14-80AD0AE4 00D0+00 s=2 e=0 z=0  None .data      __vt__13daNpc_Seira_c                                        */
SECTION_DATA void* __vt__13daNpc_Seira_c[52] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__13daNpc_Seira_cFv,
	(void*)ctrlBtk__8daNpcT_cFv,
	(void*)ctrlSubFaceMotion__8daNpcT_cFi,
	(void*)checkChangeJoint__13daNpc_Seira_cFi,
	(void*)checkRemoveJoint__13daNpc_Seira_cFi,
	(void*)getBackboneJointNo__13daNpc_Seira_cFv,
	(void*)getNeckJointNo__13daNpc_Seira_cFv,
	(void*)getHeadJointNo__13daNpc_Seira_cFv,
	(void*)getFootLJointNo__8daNpcT_cFv,
	(void*)getFootRJointNo__8daNpcT_cFv,
	(void*)getEyeballLMaterialNo__8daNpcT_cFv,
	(void*)getEyeballRMaterialNo__8daNpcT_cFv,
	(void*)getEyeballMaterialNo__13daNpc_Seira_cFv,
	(void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
	(void*)afterJntAnm__13daNpc_Seira_cFi,
	(void*)setParam__13daNpc_Seira_cFv,
	(void*)checkChangeEvt__13daNpc_Seira_cFv,
	(void*)evtTalk__13daNpc_Seira_cFv,
	(void*)evtEndProc__8daNpcT_cFv,
	(void*)evtCutProc__13daNpc_Seira_cFv,
	(void*)setAfterTalkMotion__13daNpc_Seira_cFv,
	(void*)evtProc__8daNpcT_cFv,
	(void*)action__13daNpc_Seira_cFv,
	(void*)beforeMove__13daNpc_Seira_cFv,
	(void*)afterMoved__8daNpcT_cFv,
	(void*)setAttnPos__13daNpc_Seira_cFv,
	(void*)setFootPos__8daNpcT_cFv,
	(void*)setCollision__13daNpc_Seira_cFv,
	(void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
	(void*)checkCullDraw__8daNpcT_cFv,
	(void*)twilight__8daNpcT_cFv,
	(void*)chkXYItems__8daNpcT_cFv,
	(void*)evtOrder__8daNpcT_cFv,
	(void*)decTmr__8daNpcT_cFv,
	(void*)clrParam__8daNpcT_cFv,
	(void*)drawDbgInfo__13daNpc_Seira_cFv,
	(void*)drawOtherMdl__13daNpc_Seira_cFv,
	(void*)drawGhost__8daNpcT_cFv,
	(void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
	(void*)afterSetMotionAnm__13daNpc_Seira_cFiifi,
	(void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
	(void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
	(void*)changeAnm__13daNpc_Seira_cFPiPi,
	(void*)changeBck__13daNpc_Seira_cFPiPi,
	(void*)changeBtp__13daNpc_Seira_cFPiPi,
	(void*)changeBtk__13daNpc_Seira_cFPiPi,
	(void*)setMotionAnm__8daNpcT_cFifi,
	(void*)getResName2__13dShopSystem_cFi,
	(void*)beforeStartSeqAction__13dShopSystem_cFP10dMsgFlow_ci,
	(void*)beforeSelectSeqAction__13dShopSystem_cFP10dMsgFlow_ci,
};

/* 80ACB7CC-80ACB918 014C+00 s=1 e=0 z=0  None .text      __dt__13daNpc_Seira_cFv                                      */
//	80ACB7EC: 80AD0A14 (__vt__13daNpc_Seira_c)
//	80ACB7F0: 80AD0A14 (__vt__13daNpc_Seira_c)
//	80ACB7F8: 8019A564 (deleteObject__13dShopSystem_cFv)
//	80ACB808: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80ACB818: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80ACB828: 80ACFFFC (l_loadResPtrnList)
//	80ACB82C: 80ACFFFC (l_loadResPtrnList)
//	80ACB834: 80ACFFE0 (l_resNameList)
//	80ACB838: 80ACFFE0 (l_resNameList)
//	80ACB83C: 801484AC (deleteRes__8daNpcT_cFPCScPPCc)
//	80ACB844: 80ACEDE8 (__dt__18daNpcT_ActorMngr_cFv)
//	80ACB848: 80ACEDE8 (__dt__18daNpcT_ActorMngr_cFv)
//	80ACB854: 80361CE8 (__destroy_arr)
//	80ACB860: 803AC050 (__vt__8dCcD_Cyl)
//	80ACB864: 803AC050 (__vt__8dCcD_Cyl)
//	80ACB884: 803C35A4 (__vt__12cCcD_CylAttr)
//	80ACB888: 803C35A4 (__vt__12cCcD_CylAttr)
//	80ACB8A0: 80AD0A08 (__vt__8cM3dGCyl)
//	80ACB8A4: 80AD0A08 (__vt__8cM3dGCyl)
//	80ACB8B4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80ACB8B8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80ACB8C8: 80AD09FC (__vt__8cM3dGAab)
//	80ACB8CC: 80AD09FC (__vt__8cM3dGAab)
//	80ACB8DC: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80ACB8E8: 801974E4 (__dt__13dShopSystem_cFv)
//	80ACB8F8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Seira_c::~daNpc_Seira_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACB918-80ACBBD4 02BC+00 s=1 e=0 z=0  None .text      create__13daNpc_Seira_cFv                                    */
//	80ACB928: 803621DC (_savegpr_29)
//	80ACB930: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACB934: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACB938: 80ACFF90 (cNullVec__6Z2Calc)
//	80ACB93C: 80ACFF90 (cNullVec__6Z2Calc)
//	80ACB978: 80ACFB48 (__ct__13daNpc_Seira_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80ACB98C: 80ACC4A8 (getNpcType__13daNpc_Seira_cFv)
//	80ACB998: 80ACC328 (getType__13daNpc_Seira_cFv)
//	80ACB9A4: 80ACC424 (getFlowNodeNo__13daNpc_Seira_cFv)
//	80ACB9B0: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACB9C4: 80ACC440 (checkBottle__13daNpc_Seira_cFv)
//	80ACB9E4: 801483F8 (loadRes__8daNpcT_cFPCScPPCc)
//	80ACB9F8: 80ACC2B0 (createHeapCallBack__13daNpc_Seira_cFP10fopAc_ac_c)
//	80ACB9FC: 80ACC2B0 (createHeapCallBack__13daNpc_Seira_cFP10fopAc_ac_c)
//	80ACBA14: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80ACBA2C: 80ACC4C8 (isDelete__13daNpc_Seira_cFv)
//	80ACBA6C: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80ACBA84: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80ACBAB0: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80ACBAB8: 804061C0 (g_dComIfG_gameInfo)
//	80ACBABC: 804061C0 (g_dComIfG_gameInfo)
//	80ACBAC4: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80ACBB44: 80148C70 (setEnvTevColor__8daNpcT_cFv)
//	80ACBB4C: 80148CCC (setRoomNo__8daNpcT_cFv)
//	80ACBB70: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80ACBB78: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80ACBB7C: 803B36D8 (mCcDCyl__8daNpcT_c)
//	80ACBB80: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80ACBB8C: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80ACBB90: 80147FA4 (tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80ACBB9C: 80ACC4D0 (reset__13daNpc_Seira_cFv)
//	80ACBBAC: 80ACC130 (Execute__13daNpc_Seira_cFv)
//	80ACBBC0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/create__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACBBD4-80ACBF40 036C+00 s=1 e=0 z=0  None .text      CreateHeap__13daNpc_Seira_cFv                                */
//	80ACBBE4: 803621D8 (_savegpr_28)
//	80ACBBF8: 80ACFFB0 (l_bmdData)
//	80ACBBFC: 80ACFFB0 (l_bmdData)
//	80ACBC14: 80ACFFE0 (l_resNameList)
//	80ACBC18: 80ACFFE0 (l_resNameList)
//	80ACBC20: 804061C0 (g_dComIfG_gameInfo)
//	80ACBC24: 804061C0 (g_dComIfG_gameInfo)
//	80ACBC38: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80ACBC50: 802CEC4C (__nw__FUl)
//	80ACBC8C: 80ACFEAC (lit_4455)
//	80ACBC90: 80ACFEAC (lit_4455)
//	80ACBC9C: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80ACBCCC: 80ACC2D0 (ctrlJointCallBack__13daNpc_Seira_cFP8J3DJointi)
//	80ACBCD0: 80ACC2D0 (ctrlJointCallBack__13daNpc_Seira_cFP8J3DJointi)
//	80ACBD04: 802CEC4C (__nw__FUl)
//	80ACBD14: 803CEE60 (__vt__14J3DMaterialAnm)
//	80ACBD18: 803CEE60 (__vt__14J3DMaterialAnm)
//	80ACBD24: 80ACC0E4 (__ct__14J3DMatColorAnmFv)
//	80ACBD28: 80ACC0E4 (__ct__14J3DMatColorAnmFv)
//	80ACBD2C: 80ACC0A8 (__dt__14J3DMatColorAnmFv)
//	80ACBD30: 80ACC0A8 (__dt__14J3DMatColorAnmFv)
//	80ACBD3C: 80361D60 (__construct_array)
//	80ACBD44: 80ACC090 (__ct__12J3DTexMtxAnmFv)
//	80ACBD48: 80ACC090 (__ct__12J3DTexMtxAnmFv)
//	80ACBD4C: 80ACC054 (__dt__12J3DTexMtxAnmFv)
//	80ACBD50: 80ACC054 (__dt__12J3DTexMtxAnmFv)
//	80ACBD5C: 80361D60 (__construct_array)
//	80ACBD64: 80ACC030 (__ct__11J3DTexNoAnmFv)
//	80ACBD68: 80ACC030 (__ct__11J3DTexNoAnmFv)
//	80ACBD6C: 80ACBFE8 (__dt__11J3DTexNoAnmFv)
//	80ACBD70: 80ACBFE8 (__dt__11J3DTexNoAnmFv)
//	80ACBD7C: 80361D60 (__construct_array)
//	80ACBD84: 80ACBFD0 (__ct__14J3DTevColorAnmFv)
//	80ACBD88: 80ACBFD0 (__ct__14J3DTevColorAnmFv)
//	80ACBD8C: 80ACBF94 (__dt__14J3DTevColorAnmFv)
//	80ACBD90: 80ACBF94 (__dt__14J3DTevColorAnmFv)
//	80ACBD9C: 80361D60 (__construct_array)
//	80ACBDA4: 80ACBF7C (__ct__15J3DTevKColorAnmFv)
//	80ACBDA8: 80ACBF7C (__ct__15J3DTevKColorAnmFv)
//	80ACBDAC: 80ACBF40 (__dt__15J3DTevKColorAnmFv)
//	80ACBDB0: 80ACBF40 (__dt__15J3DTevKColorAnmFv)
//	80ACBDBC: 80361D60 (__construct_array)
//	80ACBDC4: 8032C320 (initialize__14J3DMaterialAnmFv)
//	80ACBDC8: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80ACBDCC: 803B3B6C (__vt__15daNpcT_MatAnm_c)
//	80ACBDD8: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80ACBE00: 80ACFFB0 (l_bmdData)
//	80ACBE04: 80ACFFB0 (l_bmdData)
//	80ACBE14: 80ACFFE0 (l_resNameList)
//	80ACBE18: 80ACFFE0 (l_resNameList)
//	80ACBE28: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80ACBE40: 802CEC4C (__nw__FUl)
//	80ACBE78: 80ACFEAC (lit_4455)
//	80ACBE7C: 80ACFEAC (lit_4455)
//	80ACBE88: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80ACBEC0: 8014A388 (setFaceMotionAnm__8daNpcT_cFib)
//	80ACBED4: 80ACFE98 (lit_4063)
//	80ACBED8: 80ACFE98 (lit_4063)
//	80ACBF04: 80ACFE98 (lit_4063)
//	80ACBF08: 80ACFE98 (lit_4063)
//	80ACBF10: 80ACD458 (setBottleAnm__13daNpc_Seira_cFiifb)
//	80ACBF2C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/CreateHeap__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACBF40-80ACBF7C 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	80ACBF60: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80ACBF7C-80ACBF94 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80ACBF94-80ACBFD0 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	80ACBFB4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80ACBFD0-80ACBFE8 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80ACBFE8-80ACC030 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	80ACC000: 80AD0978 (__vt__11J3DTexNoAnm)
//	80ACC004: 80AD0978 (__vt__11J3DTexNoAnm)
//	80ACC014: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80ACC030-80ACC054 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	80ACC030: 80AD0978 (__vt__11J3DTexNoAnm)
//	80ACC034: 80AD0978 (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80ACC054-80ACC090 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	80ACC074: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80ACC090-80ACC0A8 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80ACC0A8-80ACC0E4 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	80ACC0C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80ACC0E4-80ACC0FC 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80ACC0FC-80ACC130 0034+00 s=1 e=0 z=0  None .text      Delete__13daNpc_Seira_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/Delete__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC130-80ACC21C 00EC+00 s=2 e=0 z=0  None .text      Execute__13daNpc_Seira_cFv                                   */
//	80ACC15C: 8019AB24 (checkShopOpen__13dShopSystem_cFv)
//	80ACC178: 80ACDC6C (checkStageIsSeirasShop__13daNpc_Seira_cFv)
//	80ACC194: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACC1A4: 80197338 (initShopSystem__13dShopSystem_cFv)
//	80ACC1B4: 80ACDCE4 (getShopItemType__13daNpc_Seira_cFv)
//	80ACC1C0: 8019A238 (createShopItem__13dShopSystem_cFi)
//	80ACC1CC: 803A2180 (__ptmf_null)
//	80ACC1D0: 803A2180 (__ptmf_null)
//	80ACC1F8: 8014852C (execute__8daNpcT_cFv)
//	80ACC200: 801964C8 (move__16ShopCam_action_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/Execute__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC21C-80ACC2B0 0094+00 s=1 e=0 z=0  None .text      Draw__13daNpc_Seira_cFv                                      */
//	80ACC22C: 803621DC (_savegpr_29)
//	80ACC280: 80ACFE9C (lit_4064)
//	80ACC284: 80ACFE9C (lit_4064)
//	80ACC294: 8014886C (draw__8daNpcT_cFiifP11_GXColorS10fiii)
//	80ACC29C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/Draw__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC2B0-80ACC2D0 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__13daNpc_Seira_cFP10fopAc_ac_c            */
//	80ACC2BC: 80ACBBD4 (CreateHeap__13daNpc_Seira_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpc_Seira_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/createHeapCallBack__13daNpc_Seira_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80ACC2D0-80ACC328 0058+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__13daNpc_Seira_cFP8J3DJointi               */
//	80ACC2E8: 80434AC8 (j3dSys)
//	80ACC2EC: 80434AC8 (j3dSys)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpc_Seira_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/ctrlJointCallBack__13daNpc_Seira_cFP8J3DJointi.s"
}
#pragma pop


/* 80ACC328-80ACC424 00FC+00 s=1 e=0 z=0  None .text      getType__13daNpc_Seira_cFv                                   */
//	80ACC33C: 804061C0 (g_dComIfG_gameInfo)
//	80ACC340: 804061C0 (g_dComIfG_gameInfo)
//	80ACC360: 80032BB0 (isDarkClearLV__21dSv_player_status_b_cCFi)
//	80ACC378: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACC388: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACC3A0: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACC3B8: 80ACDC6C (checkStageIsSeirasShop__13daNpc_Seira_cFv)
//	80ACC3C8: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACC3E0: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACC3F8: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::getType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/getType__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC424-80ACC440 001C+00 s=1 e=0 z=0  None .text      getFlowNodeNo__13daNpc_Seira_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::getFlowNodeNo() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/getFlowNodeNo__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC440-80ACC4A8 0068+00 s=1 e=0 z=0  None .text      checkBottle__13daNpc_Seira_cFv                               */
//	80ACC458: 804061C0 (g_dComIfG_gameInfo)
//	80ACC45C: 804061C0 (g_dComIfG_gameInfo)
//	80ACC468: 80032BB0 (isDarkClearLV__21dSv_player_status_b_cCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::checkBottle() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/checkBottle__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC4A8-80ACC4C8 0020+00 s=1 e=0 z=0  None .text      getNpcType__13daNpc_Seira_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::getNpcType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/getNpcType__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC4C8-80ACC4D0 0008+00 s=1 e=0 z=0  None .text      isDelete__13daNpc_Seira_cFv                                  */
// True False
//  bool False
bool daNpc_Seira_c::isDelete() {
	return false;
}


/* 80ACC4D0-80ACC618 0148+00 s=1 e=0 z=0  None .text      reset__13daNpc_Seira_cFv                                     */
//	80ACC4E0: 803621DC (_savegpr_29)
//	80ACC4E8: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACC4EC: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACC500: 80003458 (memset)
//	80ACC508: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACC510: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACC518: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80ACC520: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80ACC528: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80ACC58C: 80267954 (cM_rndF__Ff)
//	80ACC5BC: 80003458 (memset)
//	80ACC5CC: 80145764 (initialize__15daNpcT_MatAnm_cFv)
//	80ACC5E0: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80ACC5FC: 8014AA18 (setAngle__8daNpcT_cFs)
//	80ACC604: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/reset__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC618-80ACC69C 0084+00 s=1 e=0 z=0  None .text      afterJntAnm__13daNpc_Seira_cFi                               */
//	80ACC638: 803DD470 (now__14mDoMtx_stack_c)
//	80ACC63C: 803DD470 (now__14mDoMtx_stack_c)
//	80ACC640: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80ACC644: 803DD470 (now__14mDoMtx_stack_c)
//	80ACC648: 803DD470 (now__14mDoMtx_stack_c)
//	80ACC658: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80ACC66C: 803DD470 (now__14mDoMtx_stack_c)
//	80ACC670: 803DD470 (now__14mDoMtx_stack_c)
//	80ACC674: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80ACC67C: 803DD470 (now__14mDoMtx_stack_c)
//	80ACC680: 803DD470 (now__14mDoMtx_stack_c)
//	80ACC684: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Seira_c::afterJntAnm(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/afterJntAnm__13daNpc_Seira_cFi.s"
}
#pragma pop


/* 80ACC69C-80ACC818 017C+00 s=1 e=0 z=0  None .text      setParam__13daNpc_Seira_cFv                                  */
//	80ACC6AC: 803621D4 (_savegpr_27)
//	80ACC6D0: 801963B4 (Reset__16ShopCam_action_cFv)
//	80ACC6DC: 8019635C (EventRecoverNotime__16ShopCam_action_cFv)
//	80ACC6EC: 80ACD770 (selectAction__13daNpc_Seira_cFv)
//	80ACC6F4: 80ACC980 (srchActors__13daNpc_Seira_cFv)
//	80ACC6F8: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACC6FC: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACC714: 80ACDC6C (checkStageIsSeirasShop__13daNpc_Seira_cFv)
//	80ACC72C: 804061C0 (g_dComIfG_gameInfo)
//	80ACC730: 804061C0 (g_dComIfG_gameInfo)
//	80ACC760: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80ACC778: 8014CA18 (daNpcT_getDistTableIdx__Fii)
//	80ACC788: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACC78C: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACC7CC: 80075F40 (SetWallR__12dBgS_AcchCirFf)
//	80ACC7D0: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACC7D4: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACC804: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/setParam__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC818-80ACC8C0 00A8+00 s=1 e=0 z=0  None .text      checkChangeEvt__13daNpc_Seira_cFv                            */
//	80ACC82C: 80AD0724 (lit_4679)
//	80ACC830: 80AD0724 (lit_4679)
//	80ACC850: 80ACD900 (chkAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i)
//	80ACC878: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACC89C: 8014A224 (evtChange__8daNpcT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::checkChangeEvt() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/checkChangeEvt__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC8C0-80ACC980 00C0+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__13daNpc_Seira_cFv                        */
//	80ACC8D0: 803621DC (_savegpr_29)
//	80ACC950: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACC95C: 80ACFEB0 (lit_4716)
//	80ACC960: 80ACFEB0 (lit_4716)
//	80ACC96C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::setAfterTalkMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/setAfterTalkMotion__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACC980-80ACCA48 00C8+00 s=1 e=0 z=0  None .text      srchActors__13daNpc_Seira_cFv                                */
//	80ACC9BC: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80ACC9D0: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80ACC9DC: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80ACC9E8: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80ACC9FC: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80ACCA08: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80ACCA10: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80ACCA24: 8014BE2C (getNearestActorP__8daNpcT_cFs)
//	80ACCA30: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::srchActors() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/srchActors__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACCA48-80ACCBEC 01A4+00 s=1 e=0 z=0  None .text      evtTalk__13daNpc_Seira_cFv                                   */
//	80ACCA60: 80ACFF90 (cNullVec__6Z2Calc)
//	80ACCA64: 80ACFF90 (cNullVec__6Z2Calc)
//	80ACCA90: 80ACD900 (chkAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i)
//	80ACCAA8: 80362084 (__ptmf_scall)
//	80ACCAB8: 804061C0 (g_dComIfG_gameInfo)
//	80ACCABC: 804061C0 (g_dComIfG_gameInfo)
//	80ACCAE0: 804061C0 (g_dComIfG_gameInfo)
//	80ACCAE4: 804061C0 (g_dComIfG_gameInfo)
//	80ACCAEC: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80ACCAFC: 80195C9C (shop_cam_action_init__16ShopCam_action_cFv)
//	80ACCB20: 80ACD92C (setAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i)
//	80ACCB44: 80ACD900 (chkAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i)
//	80ACCB5C: 80362084 (__ptmf_scall)
//	80ACCB6C: 804061C0 (g_dComIfG_gameInfo)
//	80ACCB70: 804061C0 (g_dComIfG_gameInfo)
//	80ACCB94: 804061C0 (g_dComIfG_gameInfo)
//	80ACCB98: 804061C0 (g_dComIfG_gameInfo)
//	80ACCBA0: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80ACCBCC: 80ACD92C (setAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::evtTalk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/evtTalk__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACCBEC-80ACCCBC 00D0+00 s=1 e=0 z=0  None .text      evtCutProc__13daNpc_Seira_cFv                                */
//	80ACCBFC: 803621DC (_savegpr_29)
//	80ACCC08: 804061C0 (g_dComIfG_gameInfo)
//	80ACCC0C: 804061C0 (g_dComIfG_gameInfo)
//	80ACCC18: 80ACFF04 (struct_80ACFF04)
//	80ACCC1C: 80ACFF04 (struct_80ACFF04)
//	80ACCC2C: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80ACCC44: 80AD06F8 (mCutNameList__13daNpc_Seira_c)
//	80ACCC48: 80AD06F8 (mCutNameList__13daNpc_Seira_c)
//	80ACCC58: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80ACCC6C: 80AD070C (mCutList__13daNpc_Seira_c)
//	80ACCC70: 80AD070C (mCutList__13daNpc_Seira_c)
//	80ACCC78: 80362084 (__ptmf_scall)
//	80ACCC90: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80ACCC9C: 8019630C (Save__16ShopCam_action_cFv)
//	80ACCCA8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::evtCutProc() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/evtCutProc__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACCCBC-80ACCE58 019C+00 s=1 e=0 z=0  None .text      action__13daNpc_Seira_cFv                                    */
//	80ACCCE8: 8014AA40 (hitChk__8daNpcT_cFP12dCcD_GObjInfUl)
//	80ACCCF8: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80ACCD18: 80147DCC (setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs)
//	80ACCD2C: 8014AAD0 (setDamage__8daNpcT_cFiii)
//	80ACCD48: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACCD54: 80ACFE98 (lit_4063)
//	80ACCD58: 80ACFE98 (lit_4063)
//	80ACCD94: 80ACFE98 (lit_4063)
//	80ACCD98: 80ACFE98 (lit_4063)
//	80ACCDE4: 80362018 (__ptmf_test)
//	80ACCDF8: 80362048 (__ptmf_cmpr)
//	80ACCE10: 80362084 (__ptmf_scall)
//	80ACCE3C: 80ACD92C (setAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::action() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/action__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACCE58-80ACCED0 0078+00 s=1 e=0 z=0  None .text      beforeMove__13daNpc_Seira_cFv                                */
//	80ACCE80: 8002FA54 (dComIfGs_wolfeye_effect_check__Fv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::beforeMove() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/beforeMove__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACCED0-80ACD1D0 0300+00 s=1 e=0 z=0  None .text      setAttnPos__13daNpc_Seira_cFv                                */
//	80ACCEE0: 803621D4 (_savegpr_27)
//	80ACCEE8: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACCEEC: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACCF10: 80147E3C (calc__19daNpcT_DmgStagger_cFi)
//	80ACCFB4: 80146CD8 (setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz)
//	80ACCFF8: 80147C38 (calcJntRad__15daNpcT_JntAnm_cFfff)
//	80ACD000: 80149190 (setMtx__8daNpcT_cFv)
//	80ACD024: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD028: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD02C: 803464B0 (PSMTXCopy)
//	80ACD030: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD034: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD03C: 803464B0 (PSMTXCopy)
//	80ACD050: 803464B0 (PSMTXCopy)
//	80ACD060: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	80ACD068: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	80ACD098: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD09C: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD0A0: 803464B0 (PSMTXCopy)
//	80ACD0A4: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD0A8: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD0B4: 80346D6C (PSMTXMultVec)
//	80ACD0E0: 80ACF764 (setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs)
//	80ACD114: 80ACF648 (setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs)
//	80ACD11C: 80ACDC6C (checkStageIsSeirasShop__13daNpc_Seira_cFv)
//	80ACD16C: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD170: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD174: 803464B0 (PSMTXCopy)
//	80ACD178: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD17C: 803DD470 (now__14mDoMtx_stack_c)
//	80ACD188: 80346D6C (PSMTXMultVec)
//	80ACD1BC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/setAttnPos__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACD1D0-80ACD378 01A8+00 s=1 e=0 z=0  None .text      setCollision__13daNpc_Seira_cFv                              */
//	80ACD1F0: 80ACFF90 (cNullVec__6Z2Calc)
//	80ACD1F4: 80ACFF90 (cNullVec__6Z2Calc)
//	80ACD210: 804061C0 (g_dComIfG_gameInfo)
//	80ACD214: 804061C0 (g_dComIfG_gameInfo)
//	80ACD240: 80362048 (__ptmf_cmpr)
//	80ACD254: 80362048 (__ptmf_cmpr)
//	80ACD268: 80362048 (__ptmf_cmpr)
//	80ACD300: 8026F1F8 (SetH__8cM3dGCylFf)
//	80ACD30C: 8026F200 (SetR__8cM3dGCylFf)
//	80ACD318: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80ACD31C: 804061C0 (g_dComIfG_gameInfo)
//	80ACD320: 804061C0 (g_dComIfG_gameInfo)
//	80ACD32C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::setCollision() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/setCollision__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACD378-80ACD380 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__13daNpc_Seira_cFv                               */
// True False
//  bool False
bool daNpc_Seira_c::drawDbgInfo() {
	return false;
}


/* 80ACD380-80ACD458 00D8+00 s=1 e=0 z=0  None .text      drawOtherMdl__13daNpc_Seira_cFv                              */
//	80ACD394: 80198950 (itemRotate__13dShopSystem_cFv)
//	80ACD398: 80430110 (g_cursorHIO)
//	80ACD39C: 80430110 (g_cursorHIO)
//	80ACD3C0: 80198A2C (itemZoom__13dShopSystem_cFP4cXyz)
//	80ACD3C8: 80198878 (drawCursor__13dShopSystem_cFv)
//	80ACD3DC: 8042CA54 (g_env_light)
//	80ACD3E0: 8042CA54 (g_env_light)
//	80ACD3EC: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80ACD400: 8001D42C (fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData)
//	80ACD420: 803258A0 (hide__13J3DShapeTableFv)
//	80ACD438: 803258D8 (show__13J3DShapeTableFv)
//	80ACD440: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::drawOtherMdl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/drawOtherMdl__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACD458-80ACD538 00E0+00 s=2 e=0 z=0  None .text      setBottleAnm__13daNpc_Seira_cFiifb                           */
//	80ACD470: 803621DC (_savegpr_29)
//	80ACD480: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACD484: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACD4B4: 80AD0784 (bottlAnmData)
//	80ACD4B8: 80AD0784 (bottlAnmData)
//	80ACD4D8: 80ACFFE0 (l_resNameList)
//	80ACD4DC: 80ACFFE0 (l_resNameList)
//	80ACD4E4: 80148094 (getTrnsfrmKeyAnmP__8daNpcT_cFPCci)
//	80ACD510: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80ACD524: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  bool False
asm void daNpc_Seira_c::setBottleAnm(int param_0, int param_1, f32 param_2, bool param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/setBottleAnm__13daNpc_Seira_cFiifb.s"
}
#pragma pop


/* 80ACD538-80ACD570 0038+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__13daNpc_Seira_cFiifi                      */
//	80ACD550: 80ACFE98 (lit_4063)
//	80ACD554: 80ACFE98 (lit_4063)
//	80ACD55C: 80ACD458 (setBottleAnm__13daNpc_Seira_cFiifb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
//  f32 False
//  int False
asm void daNpc_Seira_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/afterSetMotionAnm__13daNpc_Seira_cFiifi.s"
}
#pragma pop


/* 80ACD570-80ACD600 0090+00 s=1 e=0 z=0  None .text      changeAnm__13daNpc_Seira_cFPiPi                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int* False
// 	 int False
//  int* False
// 	 int False
asm void daNpc_Seira_c::changeAnm(int* param_0, int* param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/changeAnm__13daNpc_Seira_cFPiPi.s"
}
#pragma pop


/* 80ACD600-80ACD6AC 00AC+00 s=2 e=0 z=0  None .text      changeBck__13daNpc_Seira_cFPiPi                              */
//	80ACD61C: 80AD0864 (lit_5133)
//	80ACD620: 80AD0864 (lit_5133)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int* False
// 	 int False
//  int* False
// 	 int False
asm void daNpc_Seira_c::changeBck(int* param_0, int* param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/changeBck__13daNpc_Seira_cFPiPi.s"
}
#pragma pop


/* 80ACD6AC-80ACD744 0098+00 s=2 e=0 z=0  None .text      changeBtp__13daNpc_Seira_cFPiPi                              */
//	80ACD6C8: 80AD0890 (lit_5147)
//	80ACD6CC: 80AD0890 (lit_5147)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int* False
// 	 int False
//  int* False
// 	 int False
asm void daNpc_Seira_c::changeBtp(int* param_0, int* param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/changeBtp__13daNpc_Seira_cFPiPi.s"
}
#pragma pop


/* 80ACD744-80ACD770 002C+00 s=1 e=0 z=0  None .text      changeBtk__13daNpc_Seira_cFPiPi                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int* False
// 	 int False
//  int* False
// 	 int False
asm void daNpc_Seira_c::changeBtk(int* param_0, int* param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/changeBtk__13daNpc_Seira_cFPiPi.s"
}
#pragma pop


/* 80ACD770-80ACD900 0190+00 s=1 e=0 z=0  None .text      selectAction__13daNpc_Seira_cFv                              */
//	80ACD788: 80ACFF90 (cNullVec__6Z2Calc)
//	80ACD78C: 80ACFF90 (cNullVec__6Z2Calc)
//	80ACD790: 803A2180 (__ptmf_null)
//	80ACD794: 803A2180 (__ptmf_null)
//	80ACD874: 804061C0 (g_dComIfG_gameInfo)
//	80ACD878: 804061C0 (g_dComIfG_gameInfo)
//	80ACD880: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80ACD884: 80ACFEE8 (lit_5182)
//	80ACD888: 80ACFEE8 (lit_5182)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::selectAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/selectAction__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACD900-80ACD92C 002C+00 s=2 e=0 z=0  None .text      chkAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i        */
//	80ACD910: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Seira_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira_c False
asm void daNpc_Seira_c::chkAction(int (daNpc_Seira_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/chkAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i.s"
}
#pragma pop


/* 80ACD92C-80ACD9D4 00A8+00 s=2 e=0 z=0  None .text      setAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i        */
//	80ACD954: 80362018 (__ptmf_test)
//	80ACD96C: 80362084 (__ptmf_scall)
//	80ACD998: 80362018 (__ptmf_test)
//	80ACD9B0: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daNpc_Seira_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daNpc_Seira_c False
asm void daNpc_Seira_c::setAction(int (daNpc_Seira_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/setAction__13daNpc_Seira_cFM13daNpc_Seira_cFPCvPvPv_i.s"
}
#pragma pop


/* 80ACD9D4-80ACDC6C 0298+00 s=1 e=0 z=0  None .text      cutConversationAboutSaru__13daNpc_Seira_cFi                  */
//	80ACD9E4: 803621CC (_savegpr_25)
//	80ACD9F0: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACD9F4: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACDA04: 804061C0 (g_dComIfG_gameInfo)
//	80ACDA08: 804061C0 (g_dComIfG_gameInfo)
//	80ACDA14: 80ACFF04 (struct_80ACFF04)
//	80ACDA18: 80ACFF04 (struct_80ACFF04)
//	80ACDA24: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80ACDA3C: 80ACFF04 (struct_80ACFF04)
//	80ACDA40: 80ACFF04 (struct_80ACFF04)
//	80ACDA4C: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80ACDA7C: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80ACDA88: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80ACDA94: 804061C0 (g_dComIfG_gameInfo)
//	80ACDA98: 804061C0 (g_dComIfG_gameInfo)
//	80ACDAD4: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80ACDB08: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80ACDB10: 8014CB2C (daNpcT_offTmpBit__FUl)
//	80ACDB20: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80ACDB34: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80ACDB78: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACDBC4: 8014B648 (step__8daNpcT_cFsiiii)
//	80ACDBE4: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACDC24: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80ACDC58: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Seira_c::cutConversationAboutSaru(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/cutConversationAboutSaru__13daNpc_Seira_cFi.s"
}
#pragma pop


/* 80ACDC6C-80ACDCE4 0078+00 s=4 e=0 z=0  None .text      checkStageIsSeirasShop__13daNpc_Seira_cFv                    */
//	80ACDC80: 80ACFF04 (struct_80ACFF04)
//	80ACDC84: 80ACFF04 (struct_80ACFF04)
//	80ACDC8C: 804061C0 (g_dComIfG_gameInfo)
//	80ACDC90: 804061C0 (g_dComIfG_gameInfo)
//	80ACDC98: 80368994 (strcmp)
//	80ACDCA4: 804061C0 (g_dComIfG_gameInfo)
//	80ACDCA8: 804061C0 (g_dComIfG_gameInfo)
//	80ACDCBC: 8002C97C (getLayerNo__14dComIfG_play_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::checkStageIsSeirasShop() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/checkStageIsSeirasShop__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACDCE4-80ACDD24 0040+00 s=1 e=0 z=0  None .text      getShopItemType__13daNpc_Seira_cFv                           */
//	80ACDCFC: 8014CAAC (daNpcT_chkEvtBit__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpc_Seira_c::getShopItemType() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/getShopItemType__13daNpc_Seira_cFv.s"
}
#pragma pop


/* 80ACDD24-80ACDE74 0150+00 s=1 e=0 z=0  None .text      wait__13daNpc_Seira_cFPv                                     */
//	80ACDD70: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACDD80: 80ACFEB0 (lit_4716)
//	80ACDD84: 80ACFEB0 (lit_4716)
//	80ACDDA0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACDDB0: 80ACFEB0 (lit_4716)
//	80ACDDB4: 80ACFEB0 (lit_4716)
//	80ACDDD4: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80ACDDF0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACDDFC: 80ACFE98 (lit_4063)
//	80ACDE00: 80ACFE98 (lit_4063)
//	80ACDE30: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACDE3C: 80ACFE98 (lit_4063)
//	80ACDE40: 80ACFE98 (lit_4063)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/wait__13daNpc_Seira_cFPv.s"
}
#pragma pop


/* 80ACDE74-80ACE098 0224+00 s=2 e=0 z=0  None .text      sit__13daNpc_Seira_cFPv                                      */
//	80ACDEC0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACDED0: 80ACFEB0 (lit_4716)
//	80ACDED4: 80ACFEB0 (lit_4716)
//	80ACDEF0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACDF00: 80ACFEB0 (lit_4716)
//	80ACDF04: 80ACFEB0 (lit_4716)
//	80ACDF1C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACDF28: 80ACFE98 (lit_4063)
//	80ACDF2C: 80ACFE98 (lit_4063)
//	80ACDF4C: 80ACFA44 (func_80ACFA44)
//	80ACDFA0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACDFB0: 80ACFEB0 (lit_4716)
//	80ACDFB4: 80ACFEB0 (lit_4716)
//	80ACDFD0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACDFE0: 80ACFEB0 (lit_4716)
//	80ACDFE4: 80ACFEB0 (lit_4716)
//	80ACDFF4: 80145A24 (checkEndSequence__22daNpcT_MotionSeqMngr_cFv)
//	80ACE008: 80ACFA44 (func_80ACFA44)
//	80ACE024: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE034: 80ACFEB0 (lit_4716)
//	80ACE038: 80ACFEB0 (lit_4716)
//	80ACE054: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE064: 80ACFEB0 (lit_4716)
//	80ACE068: 80ACFEB0 (lit_4716)
//	80ACE078: 80ACFA28 (func_80ACFA28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira_c::sit(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/sit__13daNpc_Seira_cFPv.s"
}
#pragma pop


/* 80ACE098-80ACE220 0188+00 s=2 e=0 z=0  None .text      happy__13daNpc_Seira_cFPv                                    */
//	80ACE0D4: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACE0F4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE104: 80ACFEB0 (lit_4716)
//	80ACE108: 80ACFEB0 (lit_4716)
//	80ACE124: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE134: 80ACFEB0 (lit_4716)
//	80ACE138: 80ACFEB0 (lit_4716)
//	80ACE160: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE170: 80ACFEB0 (lit_4716)
//	80ACE174: 80ACFEB0 (lit_4716)
//	80ACE190: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE1A0: 80ACFEB0 (lit_4716)
//	80ACE1A4: 80ACFEB0 (lit_4716)
//	80ACE1BC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACE1C8: 80ACFE98 (lit_4063)
//	80ACE1CC: 80ACFE98 (lit_4063)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira_c::happy(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/happy__13daNpc_Seira_cFPv.s"
}
#pragma pop


/* 80ACE220-80ACE4FC 02DC+00 s=2 e=0 z=0  None .text      worry__13daNpc_Seira_cFPv                                    */
//	80ACE25C: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACE27C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE28C: 80ACFEB0 (lit_4716)
//	80ACE290: 80ACFEB0 (lit_4716)
//	80ACE2AC: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE2BC: 80ACFEB0 (lit_4716)
//	80ACE2C0: 80ACFEB0 (lit_4716)
//	80ACE2E0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE2F0: 80ACFEB0 (lit_4716)
//	80ACE2F4: 80ACFEB0 (lit_4716)
//	80ACE310: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE320: 80ACFEB0 (lit_4716)
//	80ACE324: 80ACFEB0 (lit_4716)
//	80ACE344: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACE350: 80ACFE98 (lit_4063)
//	80ACE354: 80ACFE98 (lit_4063)
//	80ACE3A8: 80ACFA44 (func_80ACFA44)
//	80ACE3C4: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACE3D0: 80ACFE98 (lit_4063)
//	80ACE3D4: 80ACFE98 (lit_4063)
//	80ACE3F8: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80ACE408: 80145708 (getActorP__18daNpcT_ActorMngr_cFv)
//	80ACE430: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACE43C: 80ACFE98 (lit_4063)
//	80ACE440: 80ACFE98 (lit_4063)
//	80ACE46C: 80018CE0 (fopAc_IsActor__FPv)
//	80ACE480: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80ACE484: 80ACFE98 (lit_4063)
//	80ACE488: 80ACFE98 (lit_4063)
//	80ACE4AC: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACE4B8: 80ACFE98 (lit_4063)
//	80ACE4BC: 80ACFE98 (lit_4063)
//	80ACE4DC: 80ACFA28 (func_80ACFA28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira_c::worry(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/worry__13daNpc_Seira_cFPv.s"
}
#pragma pop


/* 80ACE4FC-80ACE608 010C+00 s=1 e=0 z=0  None .text      sad__13daNpc_Seira_cFPv                                      */
//	80ACE548: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE558: 80ACFEB0 (lit_4716)
//	80ACE55C: 80ACFEB0 (lit_4716)
//	80ACE578: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE588: 80ACFEB0 (lit_4716)
//	80ACE58C: 80ACFEB0 (lit_4716)
//	80ACE5A4: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACE5B0: 80ACFE98 (lit_4063)
//	80ACE5B4: 80ACFE98 (lit_4063)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira_c::sad(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/sad__13daNpc_Seira_cFPv.s"
}
#pragma pop


/* 80ACE608-80ACE714 010C+00 s=1 e=0 z=0  None .text      lookaround__13daNpc_Seira_cFPv                               */
//	80ACE654: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE664: 80ACFEB0 (lit_4716)
//	80ACE668: 80ACFEB0 (lit_4716)
//	80ACE684: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE694: 80ACFEB0 (lit_4716)
//	80ACE698: 80ACFEB0 (lit_4716)
//	80ACE6B0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACE6BC: 80ACFE98 (lit_4063)
//	80ACE6C0: 80ACFE98 (lit_4063)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira_c::lookaround(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/lookaround__13daNpc_Seira_cFPv.s"
}
#pragma pop


/* 80ACE714-80ACE828 0114+00 s=1 e=0 z=0  None .text      lookaround_wait__13daNpc_Seira_cFPv                          */
//	80ACE760: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE770: 80ACFEB0 (lit_4716)
//	80ACE774: 80ACFEB0 (lit_4716)
//	80ACE790: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE7A0: 80ACFEB0 (lit_4716)
//	80ACE7A4: 80ACFEB0 (lit_4716)
//	80ACE7C4: 8014B338 (srchPlayerActor__8daNpcT_cFv)
//	80ACE7E0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACE7EC: 80ACFE98 (lit_4063)
//	80ACE7F0: 80ACFE98 (lit_4063)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira_c::lookaround_wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/lookaround_wait__13daNpc_Seira_cFPv.s"
}
#pragma pop


/* 80ACE828-80ACE934 010C+00 s=1 e=0 z=0  None .text      smile__13daNpc_Seira_cFPv                                    */
//	80ACE874: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE884: 80ACFEB0 (lit_4716)
//	80ACE888: 80ACFEB0 (lit_4716)
//	80ACE8A4: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACE8B4: 80ACFEB0 (lit_4716)
//	80ACE8B8: 80ACFEB0 (lit_4716)
//	80ACE8D0: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACE8DC: 80ACFE98 (lit_4063)
//	80ACE8E0: 80ACFE98 (lit_4063)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira_c::smile(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/smile__13daNpc_Seira_cFPv.s"
}
#pragma pop


/* 80ACE934-80ACEAC4 0190+00 s=3 e=0 z=0  None .text      talk__13daNpc_Seira_cFPv                                     */
//	80ACE944: 803621DC (_savegpr_29)
//	80ACE984: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80ACE9B4: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACE9C0: 80ACFE98 (lit_4063)
//	80ACE9C4: 80ACFE98 (lit_4063)
//	80ACE9E4: 804061C0 (g_dComIfG_gameInfo)
//	80ACE9E8: 804061C0 (g_dComIfG_gameInfo)
//	80ACE9F0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80ACEA0C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80ACEA28: 8014B648 (step__8daNpcT_cFsiiii)
//	80ACEA70: 8014BC78 (talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci)
//	80ACEA80: 804061C0 (g_dComIfG_gameInfo)
//	80ACEA84: 804061C0 (g_dComIfG_gameInfo)
//	80ACEA8C: 801456E0 (entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c)
//	80ACEA90: 804061C0 (g_dComIfG_gameInfo)
//	80ACEA94: 804061C0 (g_dComIfG_gameInfo)
//	80ACEA9C: 80042468 (reset__14dEvt_control_cFv)
//	80ACEAB0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/talk__13daNpc_Seira_cFPv.s"
}
#pragma pop


/* 80ACEAC4-80ACECE8 0224+00 s=2 e=0 z=0  None .text      shop__13daNpc_Seira_cFPv                                     */
//	80ACEB0C: 8019A0D0 (shop_init__13dShopSystem_cFb)
//	80ACEB18: 8019630C (Save__16ShopCam_action_cFv)
//	80ACEB28: 8014BBF0 (initTalk__8daNpcT_cFiPP10fopAc_ac_c)
//	80ACEB34: 8019A0D0 (shop_init__13dShopSystem_cFb)
//	80ACEB4C: 8019A158 (shop_process__13dShopSystem_cFP10fopAc_ac_cP10dMsgFlow_c)
//	80ACEB60: 804061C0 (g_dComIfG_gameInfo)
//	80ACEB64: 804061C0 (g_dComIfG_gameInfo)
//	80ACEB6C: 80042468 (reset__14dEvt_control_cFv)
//	80ACEB7C: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACEBA8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACEBB8: 80ACFEB0 (lit_4716)
//	80ACEBBC: 80ACFEB0 (lit_4716)
//	80ACEBD8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACEBE8: 80ACFEB0 (lit_4716)
//	80ACEBEC: 80ACFEB0 (lit_4716)
//	80ACEC0C: 801456FC (remove__18daNpcT_ActorMngr_cFv)
//	80ACEC18: 80ACFE98 (lit_4063)
//	80ACEC1C: 80ACFE98 (lit_4063)
//	80ACEC38: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACEC48: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACEC5C: 8014CAAC (daNpcT_chkEvtBit__FUl)
//	80ACEC78: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACEC88: 80ACFEB0 (lit_4716)
//	80ACEC8C: 80ACFEB0 (lit_4716)
//	80ACECA8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACECB8: 80ACFEB0 (lit_4716)
//	80ACECBC: 80ACFEB0 (lit_4716)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpc_Seira_c::shop(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/shop__13daNpc_Seira_cFPv.s"
}
#pragma pop


/* 80ACECE8-80ACED08 0020+00 s=1 e=0 z=0  None .text      daNpc_Seira_Create__FPv                                      */
//	80ACECF4: 80ACB918 (create__13daNpc_Seira_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Seira_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/daNpc_Seira_Create__FPv.s"
}
#pragma pop


/* 80ACED08-80ACED28 0020+00 s=1 e=0 z=0  None .text      daNpc_Seira_Delete__FPv                                      */
//	80ACED14: 80ACC0FC (Delete__13daNpc_Seira_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Seira_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/daNpc_Seira_Delete__FPv.s"
}
#pragma pop


/* 80ACED28-80ACED48 0020+00 s=1 e=0 z=0  None .text      daNpc_Seira_Execute__FPv                                     */
//	80ACED34: 80ACC130 (Execute__13daNpc_Seira_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Seira_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/daNpc_Seira_Execute__FPv.s"
}
#pragma pop


/* 80ACED48-80ACED68 0020+00 s=1 e=0 z=0  None .text      daNpc_Seira_Draw__FPv                                        */
//	80ACED54: 80ACC21C (Draw__13daNpc_Seira_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpc_Seira_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/daNpc_Seira_Draw__FPv.s"
}
#pragma pop


/* 80ACED68-80ACED70 0008+00 s=1 e=0 z=0  None .text      daNpc_Seira_IsDelete__FPv                                    */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpc_Seira_IsDelete(void* param_0) {
	return true;
}


/* 80ACED70-80ACEDA0 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	80ACED8C: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 80ACEDA0-80ACEDE8 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80ACEDB8: 80AD09C0 (__vt__10cCcD_GStts)
//	80ACEDBC: 80AD09C0 (__vt__10cCcD_GStts)
//	80ACEDCC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80ACEDE8-80ACEE30 0048+00 s=3 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv                                 */
//	80ACEE00: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACEE04: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACEE14: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80ACEE30-80ACEE6C 003C+00 s=1 e=0 z=0  None .text      __ct__18daNpcT_ActorMngr_cFv                                 */
//	80ACEE44: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACEE48: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACEE50: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_ActorMngr_c::daNpcT_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__ct__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop


/* 80ACEE6C-80ACEEB4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80ACEE84: 80AD0A08 (__vt__8cM3dGCyl)
//	80ACEE88: 80AD0A08 (__vt__8cM3dGCyl)
//	80ACEE98: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80ACEEB4-80ACEEFC 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80ACEECC: 80AD09FC (__vt__8cM3dGAab)
//	80ACEED0: 80AD09FC (__vt__8cM3dGAab)
//	80ACEEE0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80ACEEFC-80ACEF38 003C+00 s=2 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80ACEF1C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__4cXyzFv.s"
}
#pragma pop


/* 80ACEF38-80ACEF74 003C+00 s=1 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80ACEF58: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__5csXyzFv.s"
}
#pragma pop


/* 80ACEF74-80ACF378 0404+00 s=1 e=0 z=0  None .text      __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80ACEF84: 803621C0 (_savegpr_22)
//	80ACEFAC: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACEFB0: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACEFB4: 80018B64 (__ct__10fopAc_ac_cFv)
//	80ACEFB8: 803B3A78 (__vt__8daNpcT_c)
//	80ACEFBC: 803B3A78 (__vt__8daNpcT_c)
//	80ACEFD8: 802C03C8 (__ct__10Z2CreatureFv)
//	80ACEFE0: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACEFE4: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACEFF4: 803283FC (init__12J3DFrameCtrlFs)
//	80ACF004: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACF008: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACF018: 803283FC (init__12J3DFrameCtrlFs)
//	80ACF028: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACF02C: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACF03C: 803283FC (init__12J3DFrameCtrlFs)
//	80ACF04C: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACF050: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACF060: 803283FC (init__12J3DFrameCtrlFs)
//	80ACF070: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACF074: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACF084: 803283FC (init__12J3DFrameCtrlFs)
//	80ACF098: 800760A0 (__ct__9dBgS_AcchFv)
//	80ACF09C: 80AD0990 (__vt__12dBgS_ObjAcch)
//	80ACF0A0: 80AD0990 (__vt__12dBgS_ObjAcch)
//	80ACF0BC: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80ACF0C0: 803C3728 (__vt__9cCcD_Stts)
//	80ACF0C4: 803C3728 (__vt__9cCcD_Stts)
//	80ACF0D0: 80083760 (__ct__10dCcD_GSttsFv)
//	80ACF0D4: 803AC2E4 (__vt__9dCcD_Stts)
//	80ACF0D8: 803AC2E4 (__vt__9dCcD_Stts)
//	80ACF0EC: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80ACF0F4: 80267C1C (__ct__11cBgS_GndChkFv)
//	80ACF0FC: 80249F00 (__ct__10dMsgFlow_cFv)
//	80ACF100: 803C3728 (__vt__9cCcD_Stts)
//	80ACF104: 803C3728 (__vt__9cCcD_Stts)
//	80ACF110: 80083760 (__ct__10dCcD_GSttsFv)
//	80ACF114: 803AC2E4 (__vt__9dCcD_Stts)
//	80ACF118: 803AC2E4 (__vt__9dCcD_Stts)
//	80ACF128: 8007757C (__ct__11dBgS_GndChkFv)
//	80ACF130: 80077C68 (__ct__11dBgS_LinChkFv)
//	80ACF134: 80AD09D8 (__vt__22daNpcT_MotionSeqMngr_c)
//	80ACF138: 80AD09D8 (__vt__22daNpcT_MotionSeqMngr_c)
//	80ACF14C: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACF150: 80AD09D8 (__vt__22daNpcT_MotionSeqMngr_c)
//	80ACF154: 80AD09D8 (__vt__22daNpcT_MotionSeqMngr_c)
//	80ACF168: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACF16C: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACF170: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACF17C: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80ACF180: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACF184: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACF190: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80ACF198: 80AD09E4 (__vt__15daNpcT_JntAnm_c)
//	80ACF19C: 80AD09E4 (__vt__15daNpcT_JntAnm_c)
//	80ACF1A4: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACF1A8: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACF1B4: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80ACF1BC: 80ACF478 (__ct__4cXyzFv)
//	80ACF1C0: 80ACF478 (__ct__4cXyzFv)
//	80ACF1C4: 80ACEEFC (__dt__4cXyzFv)
//	80ACF1C8: 80ACEEFC (__dt__4cXyzFv)
//	80ACF1D4: 80361D60 (__construct_array)
//	80ACF1DC: 80ACF478 (__ct__4cXyzFv)
//	80ACF1E0: 80ACF478 (__ct__4cXyzFv)
//	80ACF1E4: 80ACEEFC (__dt__4cXyzFv)
//	80ACF1E8: 80ACEEFC (__dt__4cXyzFv)
//	80ACF1F4: 80361D60 (__construct_array)
//	80ACF1FC: 80ACF478 (__ct__4cXyzFv)
//	80ACF200: 80ACF478 (__ct__4cXyzFv)
//	80ACF204: 80ACEEFC (__dt__4cXyzFv)
//	80ACF208: 80ACEEFC (__dt__4cXyzFv)
//	80ACF214: 80361D60 (__construct_array)
//	80ACF21C: 80ACF478 (__ct__4cXyzFv)
//	80ACF220: 80ACF478 (__ct__4cXyzFv)
//	80ACF224: 80ACEEFC (__dt__4cXyzFv)
//	80ACF228: 80ACEEFC (__dt__4cXyzFv)
//	80ACF234: 80361D60 (__construct_array)
//	80ACF23C: 80ACF478 (__ct__4cXyzFv)
//	80ACF240: 80ACF478 (__ct__4cXyzFv)
//	80ACF244: 80ACEEFC (__dt__4cXyzFv)
//	80ACF248: 80ACEEFC (__dt__4cXyzFv)
//	80ACF254: 80361D60 (__construct_array)
//	80ACF25C: 80ACF478 (__ct__4cXyzFv)
//	80ACF260: 80ACF478 (__ct__4cXyzFv)
//	80ACF264: 80ACEEFC (__dt__4cXyzFv)
//	80ACF268: 80ACEEFC (__dt__4cXyzFv)
//	80ACF274: 80361D60 (__construct_array)
//	80ACF27C: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80ACF284: 80ACF378 (__ct__5csXyzFv)
//	80ACF288: 80ACF378 (__ct__5csXyzFv)
//	80ACF28C: 80ACEF38 (__dt__5csXyzFv)
//	80ACF290: 80ACEF38 (__dt__5csXyzFv)
//	80ACF29C: 80361D60 (__construct_array)
//	80ACF2B0: 80003458 (memset)
//	80ACF2B8: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACF2C0: 80145898 (initialize__22daNpcT_MotionSeqMngr_cFv)
//	80ACF2C8: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80ACF2D0: 801456D4 (initialize__18daNpcT_ActorMngr_cFv)
//	80ACF2D8: 80146C98 (initialize__15daNpcT_JntAnm_cFv)
//	80ACF33C: 80267954 (cM_rndF__Ff)
//	80ACF364: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/func_80ACEF74.s"
}
#pragma pop


/* 80ACF378-80ACF37C 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80ACF37C-80ACF478 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv                                    */
//	80ACF39C: 80AD09E4 (__vt__15daNpcT_JntAnm_c)
//	80ACF3A0: 80AD09E4 (__vt__15daNpcT_JntAnm_c)
//	80ACF3AC: 80ACEEFC (__dt__4cXyzFv)
//	80ACF3B0: 80ACEEFC (__dt__4cXyzFv)
//	80ACF3BC: 80361CE8 (__destroy_arr)
//	80ACF3C4: 80ACEEFC (__dt__4cXyzFv)
//	80ACF3C8: 80ACEEFC (__dt__4cXyzFv)
//	80ACF3D4: 80361CE8 (__destroy_arr)
//	80ACF3DC: 80ACEEFC (__dt__4cXyzFv)
//	80ACF3E0: 80ACEEFC (__dt__4cXyzFv)
//	80ACF3EC: 80361CE8 (__destroy_arr)
//	80ACF3F4: 80ACEEFC (__dt__4cXyzFv)
//	80ACF3F8: 80ACEEFC (__dt__4cXyzFv)
//	80ACF404: 80361CE8 (__destroy_arr)
//	80ACF40C: 80ACEEFC (__dt__4cXyzFv)
//	80ACF410: 80ACEEFC (__dt__4cXyzFv)
//	80ACF41C: 80361CE8 (__destroy_arr)
//	80ACF424: 80ACEEFC (__dt__4cXyzFv)
//	80ACF428: 80ACEEFC (__dt__4cXyzFv)
//	80ACF434: 80361CE8 (__destroy_arr)
//	80ACF440: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACF444: 80AD09F0 (__vt__18daNpcT_ActorMngr_c)
//	80ACF458: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop


/* 80ACF478-80ACF47C 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80ACF47C-80ACF4C4 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv                             */
//	80ACF494: 80AD09D8 (__vt__22daNpcT_MotionSeqMngr_c)
//	80ACF498: 80AD09D8 (__vt__22daNpcT_MotionSeqMngr_c)
//	80ACF4A8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop


/* 80ACF4C4-80ACF534 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80ACF4E4: 80AD09B4 (__vt__12dBgS_AcchCir)
//	80ACF4E8: 80AD09B4 (__vt__12dBgS_AcchCir)
//	80ACF4F8: 8026EF18 (__dt__8cM3dGCirFv)
//	80ACF504: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80ACF514: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80ACF534-80ACF590 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80ACF54C: 80AD09CC (__vt__10dCcD_GStts)
//	80ACF550: 80AD09CC (__vt__10dCcD_GStts)
//	80ACF55C: 80AD09C0 (__vt__10cCcD_GStts)
//	80ACF560: 80AD09C0 (__vt__10cCcD_GStts)
//	80ACF574: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80ACF590-80ACF600 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80ACF5B0: 80AD0990 (__vt__12dBgS_ObjAcch)
//	80ACF5B4: 80AD0990 (__vt__12dBgS_ObjAcch)
//	80ACF5D0: 80075F94 (__dt__9dBgS_AcchFv)
//	80ACF5E0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80ACF600-80ACF648 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80ACF618: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACF61C: 80AD0984 (__vt__12J3DFrameCtrl)
//	80ACF62C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80ACF648-80ACF764 011C+00 s=1 e=0 z=0  None .text      setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs                    */
//	80ACF660: 803621D8 (_savegpr_28)
//	80ACF694: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80ACF6B0: 80267674 (cM_atan2s__Fff)
//	80ACF6DC: 80ACFEAC (lit_4455)
//	80ACF6E0: 80ACFEAC (lit_4455)
//	80ACF6EC: 80ACFEC8 (lit_4926)
//	80ACF6F0: 80ACFEC8 (lit_4926)
//	80ACF750: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  s16 False
//  int False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleY(cXyz param_0, s16 param_1, int param_2, f32 param_3, s16 param_4) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs.s"
}
#pragma pop


/* 80ACF764-80ACF96C 0208+00 s=1 e=0 z=0  None .text      setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs                      */
//	80ACF77C: 803621DC (_savegpr_29)
//	80ACF790: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACF794: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACF7B0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80ACF7E0: 80347138 (PSVECSquareMag)
//	80ACF850: 80450AE0 (__float_nan)
//	80ACF854: 80450AE0 (__float_nan)
//	80ACF8C0: 80450AE0 (__float_nan)
//	80ACF8C4: 80450AE0 (__float_nan)
//	80ACF8D4: 80267674 (cM_atan2s__Fff)
//	80ACF958: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
//  f32 False
//  s16 False
asm void daNpcT_JntAnm_c::setEyeAngleX(cXyz param_0, f32 param_1, s16 param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs.s"
}
#pragma pop


/* 80ACF96C-80ACF970 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi                               */
// True False
//  void False
//  int False
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
	/* empty function */
}


/* 80ACF970-80ACF978 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootLJointNo() {
	return -1;
}


/* 80ACF978-80ACF980 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__8daNpcT_cFv                                 */
// True False
//  s32 False
s32 daNpcT_c::getFootRJointNo() {
	return -1;
}


/* 80ACF980-80ACF988 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballLMaterialNo() {
	return false;
}


/* 80ACF988-80ACF990 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__8daNpcT_cFv                           */
// True False
//  bool False
bool daNpcT_c::getEyeballRMaterialNo() {
	return false;
}


/* 80ACF990-80ACF998 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::evtEndProc() {
	return true;
}


/* 80ACF998-80ACF99C 0004+00 s=1 e=0 z=0  None .text      afterMoved__8daNpcT_cFv                                      */
// True False
//  void False
void daNpcT_c::afterMoved() {
	/* empty function */
}


/* 80ACF99C-80ACF9A4 0008+00 s=1 e=0 z=0  None .text      chkXYItems__8daNpcT_cFv                                      */
// True False
//  bool False
bool daNpcT_c::chkXYItems() {
	return false;
}


/* 80ACF9A4-80ACF9BC 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcT_c::decTmr() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/decTmr__8daNpcT_cFv.s"
}
#pragma pop


/* 80ACF9BC-80ACF9C0 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv                                       */
// True False
//  void False
void daNpcT_c::drawGhost() {
	/* empty function */
}


/* 80ACF9C0-80ACF9C8 0008+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__8daNpcT_cFiifi                        */
// True False
//  bool False
//  int False
//  int False
//  f32 False
//  int False
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
	return true;
}


/* 80ACF9C8-80ACF9F8 0030+00 s=1 e=0 z=0  None .text      getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c False
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop


/* 80ACF9F8-80ACFA28 0030+00 s=1 e=0 z=0  None .text      getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_motionAnmData_c False
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop


/* 80ACFA28-80ACFA44 001C+00 s=2 e=0 z=0  None .text      cLib_calcTimer<i>__FPi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int* False
// 	 int False
asm void cLib_calcTimer__template0(int* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/func_80ACFA28.s"
}
#pragma pop


/* 80ACFA44-80ACFAC0 007C+00 s=2 e=0 z=0  None .text      cLib_getRndValue<i>__Fii                                     */
//	80ACFA58: 80ACFEC8 (lit_4926)
//	80ACFA5C: 80ACFEC8 (lit_4926)
//	80ACFA78: 80267954 (cM_rndF__Ff)
//	80ACFA7C: 80ACFEC8 (lit_4926)
//	80ACFA80: 80ACFEC8 (lit_4926)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int False
//  int False
asm void cLib_getRndValue__template0(int param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/func_80ACFA44.s"
}
#pragma pop


/* ############################################################################################## */
/* 80AD0AE4-80AD0AF0 000C+00 s=2 e=0 z=0  None .data      __vt__19daNpc_Seira_Param_c                                  */
SECTION_DATA void* __vt__19daNpc_Seira_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__19daNpc_Seira_Param_cFv,
};

/* 80AD0AF8-80AD0B04 000C+00 s=1 e=0 z=0  None .bss       @3872                                                        */
static u8 lit_3872[12];

/* 80AD0B04-80AD0B08 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80ACFAC0-80ACFB48 0088+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_seira_cpp                                    */
//	80ACFACC: 80AD070C (mCutList__13daNpc_Seira_c)
//	80ACFAD0: 80AD070C (mCutList__13daNpc_Seira_c)
//	80ACFAD4: 803A2180 (__ptmf_null)
//	80ACFAD8: 803A2180 (__ptmf_null)
//	80ACFAF4: 80AD0700 (lit_3871)
//	80ACFAF8: 80AD0700 (lit_3871)
//	80ACFB14: 80AD0AE4 (__vt__19daNpc_Seira_Param_c)
//	80ACFB18: 80AD0AE4 (__vt__19daNpc_Seira_Param_c)
//	80ACFB1C: 80AD0B04 (l_HIO)
//	80ACFB20: 80AD0B04 (l_HIO)
//	80ACFB24: 80ACFC54 (__dt__19daNpc_Seira_Param_cFv)
//	80ACFB28: 80ACFC54 (__dt__19daNpc_Seira_Param_cFv)
//	80ACFB2C: 80AD0AF8 (lit_3872)
//	80ACFB30: 80AD0AF8 (lit_3872)
//	80ACFB34: 80ACB758 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_seira_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__sinit_d_a_npc_seira_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80ACFAC0 = (void*)__sinit_d_a_npc_seira_cpp;
#pragma pop


/* 80ACFB48-80ACFC14 00CC+00 s=1 e=0 z=0  None .text      __ct__13daNpc_Seira_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80ACFB68: 80ACFCAC (__ct__13dShopSystem_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80ACFB6C: 80AD0A14 (__vt__13daNpc_Seira_c)
//	80ACFB70: 80AD0A14 (__vt__13daNpc_Seira_c)
//	80ACFB80: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80ACFB84: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80ACFB88: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80ACFB90: 80AD09FC (__vt__8cM3dGAab)
//	80ACFB94: 80AD09FC (__vt__8cM3dGAab)
//	80ACFB9C: 80AD0A08 (__vt__8cM3dGCyl)
//	80ACFBA0: 80AD0A08 (__vt__8cM3dGCyl)
//	80ACFBA8: 803C35A4 (__vt__12cCcD_CylAttr)
//	80ACFBAC: 803C35A4 (__vt__12cCcD_CylAttr)
//	80ACFBBC: 803AC050 (__vt__8dCcD_Cyl)
//	80ACFBC0: 803AC050 (__vt__8dCcD_Cyl)
//	80ACFBDC: 80ACEE30 (__ct__18daNpcT_ActorMngr_cFv)
//	80ACFBE0: 80ACEE30 (__ct__18daNpcT_ActorMngr_cFv)
//	80ACFBE4: 80ACEDE8 (__dt__18daNpcT_ActorMngr_cFv)
//	80ACFBE8: 80ACEDE8 (__dt__18daNpcT_ActorMngr_cFv)
//	80ACFBF4: 80361D60 (__construct_array)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm daNpc_Seira_c::daNpc_Seira_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/func_80ACFB48.s"
}
#pragma pop


/* 80ACFC14-80ACFC1C 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__13daNpc_Seira_cFv                      */
// True False
//  s32 False
s32 daNpc_Seira_c::getEyeballMaterialNo() {
	return 2;
}


/* 80ACFC1C-80ACFC24 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__13daNpc_Seira_cFv                            */
// True False
//  s32 False
s32 daNpc_Seira_c::getHeadJointNo() {
	return 4;
}


/* 80ACFC24-80ACFC2C 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__13daNpc_Seira_cFv                            */
// True False
//  s32 False
s32 daNpc_Seira_c::getNeckJointNo() {
	return 3;
}


/* 80ACFC2C-80ACFC34 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__13daNpc_Seira_cFv                        */
// True False
//  bool False
bool daNpc_Seira_c::getBackboneJointNo() {
	return true;
}


/* 80ACFC34-80ACFC44 0010+00 s=1 e=0 z=0  None .text      checkChangeJoint__13daNpc_Seira_cFi                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Seira_c::checkChangeJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/checkChangeJoint__13daNpc_Seira_cFi.s"
}
#pragma pop


/* 80ACFC44-80ACFC54 0010+00 s=1 e=0 z=0  None .text      checkRemoveJoint__13daNpc_Seira_cFi                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpc_Seira_c::checkRemoveJoint(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/checkRemoveJoint__13daNpc_Seira_cFi.s"
}
#pragma pop


/* 80ACFC54-80ACFC9C 0048+00 s=2 e=0 z=0  None .text      __dt__19daNpc_Seira_Param_cFv                                */
//	80ACFC6C: 80AD0AE4 (__vt__19daNpc_Seira_Param_c)
//	80ACFC70: 80AD0AE4 (__vt__19daNpc_Seira_Param_c)
//	80ACFC80: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpc_Seira_Param_c::~daNpc_Seira_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/__dt__19daNpc_Seira_Param_cFv.s"
}
#pragma pop


/* 80ACFC9C-80ACFCA4 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80ACFCA0: 80ACF590 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80ACFC9C() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/func_80ACFC9C.s"
}
#pragma pop


/* 80ACFCA4-80ACFCAC 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80ACFCA8: 80ACF590 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80ACFCA4() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/func_80ACFCA4.s"
}
#pragma pop


/* 80ACFCAC-80ACFDC4 0118+00 s=1 e=0 z=0  None .text      __ct__13dShopSystem_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc */
//	80ACFCC8: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACFCCC: 80ACFDF0 (m__19daNpc_Seira_Param_c)
//	80ACFCD4: 80ACEF74 (__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc)
//	80ACFCD8: 803BBA7C (__vt__13dShopSystem_c)
//	80ACFCDC: 803BBA7C (__vt__13dShopSystem_c)
//	80ACFCE8: 80196914 (__ct__15dShopItemCtrl_cFv)
//	80ACFD80: 803A2180 (__ptmf_null)
//	80ACFD84: 803A2180 (__ptmf_null)
//	80ACFDA4: 80197338 (initShopSystem__13dShopSystem_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daNpcT_faceMotionAnmData_c const* False
// 	 daNpcT_faceMotionAnmData_c const False
// 		 daNpcT_faceMotionAnmData_c False
//  daNpcT_motionAnmData_c const* False
// 	 daNpcT_motionAnmData_c const False
// 		 daNpcT_motionAnmData_c False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_MotionSeqMngr_c::sequenceStepData_c const* False
// 	 daNpcT_MotionSeqMngr_c::sequenceStepData_c const False
// 		 daNpcT_MotionSeqMngr_c::sequenceStepData_c False
//  int False
//  daNpcT_evtData_c const* False
// 	 daNpcT_evtData_c const False
// 		 daNpcT_evtData_c False
//  char** False
// 	 char* False
// 		 char False
asm dShopSystem_c::dShopSystem_c(daNpcT_faceMotionAnmData_c const* param_0, daNpcT_motionAnmData_c const* param_1, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3, daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seira/d_a_npc_seira/func_80ACFCAC.s"
}
#pragma pop


/* 80ACFDC4-80ACFDCC 0008+00 s=1 e=0 z=0  None .text      getResName2__13dShopSystem_cFi                               */
// True False
//  bool False
//  int False
bool dShopSystem_c::getResName2(int param_0) {
	return false;
}


/* 80ACFDCC-80ACFDD4 0008+00 s=1 e=0 z=0  None .text      beforeStartSeqAction__13dShopSystem_cFP10dMsgFlow_ci         */
// True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
bool dShopSystem_c::beforeStartSeqAction(dMsgFlow_c* param_0, int param_1) {
	return true;
}


/* 80ACFDD4-80ACFDDC 0008+00 s=1 e=0 z=0  None .text      beforeSelectSeqAction__13dShopSystem_cFP10dMsgFlow_ci        */
// True False
//  bool False
//  dMsgFlow_c* False
// 	 dMsgFlow_c False
//  int False
bool dShopSystem_c::beforeSelectSeqAction(dMsgFlow_c* param_0, int param_1) {
	return true;
}


