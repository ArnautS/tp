// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_moir
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/npc/d_a_npc_moir/d_a_npc_moir.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct J3DAnmTransform {
};

struct mDoExt_bckAnm {
	/* 8000D990 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
void changeBckOnly(J3DAnmTransform*);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Vec {
};

struct Z2Creature {
	/* 802C03C8 */ // False False
Z2Creature();
	/* 802C0420 */ // False False
~Z2Creature();
	/* 802C0530 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct J3DJoint {
};

struct J3DModel {
};

struct daNpcMoiR_c {
	/* 80A7C16C */ // True False
daNpcMoiR_c();
	/* 80A7C380 */ // True False
~daNpcMoiR_c();
	/* 80A7C580 */ // True False
void Create();
	/* 80A7C978 */ // True False
void CreateHeap();
	/* 80A7CE48 */ // True False
void Delete();
	/* 80A7CE7C */ // True False
void Execute();
	/* 80A7CEA0 */ // True False
void Draw();
	/* 80A7CEFC */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 80A7D0CC */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void createHeapCallBack(fopAc_ac_c*);
	/* 80A7D0EC */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void ctrlJointCallBack(J3DJoint*, int);
	/* 80A7D138 */ // True False
//  int False
//  bool False
void setExpressionAnm(int, bool);
	/* 80A7D394 */ // True False
//  int False
void setExpressionBtp(int);
	/* 80A7D474 */ // True False
//  int False
//  f32 False
void setMotionAnm(int, f32);
	/* 80A7D5C4 */ // True False
void reset();
	/* 80A7D73C */ // True False
void setWaitAction();
	/* 80A7D934 */ // True False
//  void* False
// 	 void False
void wait_type0(void*);
	/* 80A7DD94 */ // True False
//  int False
//  f32 False
//  int False
void setMotion(int, f32, int);
	/* 80A7DDD8 */ // True False
//  int False
//  f32 False
void setExpression(int, f32);
	/* 80A7DE04 */ // True False
//  void* False
// 	 void False
void wait_type1(void*);
	/* 80A7E668 */ // True False
//  void* False
// 	 void False
void wait_type2(void*);
	/* 80A7E8C0 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80A7EFBC */ // True False
//  void* False
// 	 void False
void multiTalk(void*);
	/* 80A7F40C */ // True False
//  void* False
// 	 void False
void fight(void*);
	/* 80A7F9AC */ // True False
//  void* False
// 	 void False
void demo(void*);
	/* 80A7FEE8 */ // True False
//  void* False
// 	 void False
void leave(void*);
	/* 80A802C4 */ // True False
//  int False
void EvCut_Introduction(int);
	/* 80A803A0 */ // True False
//  int False
void EvCut_Appear(int);
	/* 80A8081C */ // True False
//  int False
void EvCut_Appear2(int);
	/* 80A810FC */ // True False
void setParam();
	/* 80A81274 */ // True False
void main();
	/* 80A815D4 */ // True False
void checkHeadGear();
	/* 80A818B4 */ // True False
void playMotion();
	/* 80A8210C */ // True False
void ctrlBtk();
	/* 80A821E0 */ // True False
void setAttnPos();
	/* 80A825A0 */ // True False
void lookat();
	/* 80A82878 */ // True False
void drawOtherMdls();
	/* 80A82900 */ // True False
//  bool False
bool drawDbgInfo();
};

struct daNpcMoiR_Param_c {
	/* 80A83240 */ // True False
~daNpcMoiR_Param_c();
};

struct J3DAnmTextureSRTKey {
};

struct J3DAnmTransformKey {
};

struct J3DAnmTexPattern {
	/* 8032AF50 */ // False False
//  u16 False
//  u16* False
// 	 u16 False
void getTexNo(u16, u16*) const;
};

struct _GXColorS10 {
};

struct daNpcF_c {
	struct daNpcF_anmPlayData {
	};

	/* 80152014 */ // False False
void execute();
	/* 801522AC */ // False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  int False
void draw(int, int, f32, _GXColorS10*, int);
	/* 8015276C */ // False False
void setMtx();
	/* 801527FC */ // False False
void setMtx2();
	/* 801528C8 */ // False False
void initialize();
	/* 80152B2C */ // False False
//  char* False
// 	 char False
//  int False
void getTrnsfrmKeyAnmP(char*, int);
	/* 80152B68 */ // False False
//  char* False
// 	 char False
//  int False
void getTexPtrnAnmP(char*, int);
	/* 80152BA4 */ // False False
//  char* False
// 	 char False
//  int False
void getTexSRTKeyAnmP(char*, int);
	/* 80152C1C */ // False False
//  J3DAnmTransformKey* False
// 	 J3DAnmTransformKey False
//  f32 False
//  f32 False
//  int False
//  int False
//  int False
void setMcaMorfAnm(J3DAnmTransformKey*, f32, f32, int, int, int);
	/* 80152C80 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  f32 False
//  int False
//  int False
//  int False
//  bool False
void setBckAnm(J3DAnmTransform*, f32, int, int, int, bool);
	/* 80152CC4 */ // False False
//  J3DAnmTexPattern* False
// 	 J3DAnmTexPattern False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBtpAnm(J3DAnmTexPattern*, J3DModelData*, f32, int);
	/* 80152D04 */ // False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
void setBtkAnm(J3DAnmTextureSRTKey*, J3DModelData*, f32, int);
	/* 80152D84 */ // False False
void setEnvTevColor();
	/* 80152DE0 */ // False False
void setRoomNo();
	/* 80153150 */ // False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
void playExpressionAnm(daNpcF_c::daNpcF_anmPlayData***);
	/* 80153264 */ // False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
void playMotionAnm(daNpcF_c::daNpcF_anmPlayData***);
	/* 8015337C */ // False False
//  int False
//  int* False
// 	 int False
//  f32 False
void setLookatMtx(int, int*, f32);
	/* 80153718 */ // False False
//  int& False
// 	 int False
//  int& False
// 	 int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void ctrlMsgAnm(int&, int&, fopAc_ac_c*, int);
	/* 8015387C */ // False False
//  int False
//  char* False
// 	 char False
//  u16 False
//  u16 False
//  u8 False
//  u16 False
void orderEvent(int, char*, u16, u16, u8, u16);
	/* 80153954 */ // False False
//  char* False
// 	 char False
//  char* False
// 	 char False
//  u16 False
//  u16 False
void changeEvent(char*, char*, u16, u16);
	/* 801539F0 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
void chkActorInSight(fopAc_ac_c*, f32);
	/* 80153BDC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void chkActorInAttnArea(fopAc_ac_c*, fopAc_ac_c*, int);
	/* 80153D1C */ // False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void initTalk(int, fopAc_ac_c**);
	/* 80153D84 */ // False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void talkProc(int*, int, fopAc_ac_c**);
	/* 80153EF4 */ // False False
//  s16 False
//  f32 False
//  int False
void turn(s16, f32, int);
	/* 80154250 */ // False False
//  s16 False
void setAngle(s16);
	/* 80154278 */ // False False
//  int False
//  int False
void getDistTableIdx(int, int);
	/* 80A82ADC */ // True False
~daNpcF_c();
	/* 80A82D28 */ // True False
daNpcF_c();
	/* 80A8309C */ // True False
//  void False
void adjustShapeAngle();
	/* 80A830A0 */ // True False
//  void False
void setCollisions();
};

struct daNpcF_MatAnm_c {
	/* 80150738 */ // False False
void initialize();
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80A82A9C */ // True False
~cXyz();
	/* 80A82AD8 */ // True False
cXyz();
};

struct csXyz {
	/* 80A82A5C */ // True False
~csXyz();
	/* 80A82A98 */ // True False
csXyz();
};

struct daNpcF_Lookat_c {
	/* 80151038 */ // False False
void initialize();
	/* 801510B8 */ // False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
//  cXyz* False
// 	 cXyz False
void setParam(f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, s16, cXyz*);
	/* 80151350 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  csXyz** False
// 	 csXyz* False
// 		 csXyz False
//  int False
//  int False
//  int False
void calc(fopAc_ac_c*, f32 (* )[4], csXyz**, int, int, int);
	/* 80A8298C */ // True False
~daNpcF_Lookat_c();
};

struct daNpcF_ActorMngr_c {
	/* 801506B0 */ // False False
void initialize();
	/* 801506BC */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void entry(fopAc_ac_c*);
	/* 801506E0 */ // False False
void remove();
	/* 801506EC */ // False False
void getActorP();
	/* 80A82908 */ // True False
~daNpcF_ActorMngr_c();
	/* 80A82950 */ // True False
daNpcF_ActorMngr_c();
};

struct dSv_memBit_c {
	/* 80034860 */ // False False
//  int False
void isSwitch(int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
	/* 8024A528 */ // False False
//  int* False
// 	 int False
void getEventId(int*);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 80042518 */ // False False
//  void* False
// 	 void False
void reset(void*);
	/* 800436EC */ // False False
//  unsigned int False
void setPtI_Id(unsigned int);
};

struct dEvent_manager_c {
	/* 80047758 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
void getEventIdx(fopAc_ac_c*, char const*, u8);
	/* 80047A78 */ // False False
//  s16 False
void endCheck(s16);
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 80047F5C */ // False False
//  int False
void getMyNowCutName(int);
	/* 800480EC */ // False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getMySubstanceP(int, char const*, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dComIfG_play_c {
	/* 8002C97C */ // False False
//  int False
void getLayerNo(int);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80A82F88 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80A82FE4 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80A82F18 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80A7C2F0 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80A7C338 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80A830A4 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267C1C */ // False False
cBgS_GndChk();
	/* 80267C94 */ // False False
~cBgS_GndChk();
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DTexNoAnm {
	/* 80A7CD34 */ // True False
~J3DTexNoAnm();
	/* 80A7CD7C */ // True False
J3DTexNoAnm();
	/* 80A810CC */ // True False
//  u16* False
// 	 u16 False
void calc(u16*) const;
};

struct J3DTexMtxAnm {
	/* 80A7CDA0 */ // True False
~J3DTexMtxAnm();
	/* 80A7CDDC */ // True False
J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
	/* 80A7CC8C */ // True False
~J3DTevKColorAnm();
	/* 80A7CCC8 */ // True False
J3DTevKColorAnm();
};

struct J3DTevColorAnm {
	/* 80A7CCE0 */ // True False
~J3DTevColorAnm();
	/* 80A7CD1C */ // True False
J3DTevColorAnm();
};

struct J3DMaterialAnm {
	/* 8032C320 */ // False False
void initialize();
};

struct J3DMatColorAnm {
	/* 80A7CDF4 */ // True False
~J3DMatColorAnm();
	/* 80A7CE30 */ // True False
J3DMatColorAnm();
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
	/* 80A83054 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daNpcMoiR_Create(void*);
// True False
//  void* False
// 	 void False
static void daNpcMoiR_Delete(void*);
// True False
//  void* False
// 	 void False
static void daNpcMoiR_Execute(void*);
// True False
//  void* False
// 	 void False
static void daNpcMoiR_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpcMoiR_IsDelete(void*);
// False True
//  int* False
// 	 int False
void cLib_calcTimer__template0(int*);
// False True
//  int False
//  int False
void cLib_getRndValue__template0(int, int);

// True False
extern "C" void __ct__11daNpcMoiR_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__11daNpcMoiR_cFv();
// True False
extern "C" void Create__11daNpcMoiR_cFv();
// True False
extern "C" void CreateHeap__11daNpcMoiR_cFv();
// True False
extern "C" void __dt__15J3DTevKColorAnmFv();
// True False
extern "C" void __ct__15J3DTevKColorAnmFv();
// True False
extern "C" void __dt__14J3DTevColorAnmFv();
// True False
extern "C" void __ct__14J3DTevColorAnmFv();
// True False
extern "C" void __dt__11J3DTexNoAnmFv();
// True False
extern "C" void __ct__11J3DTexNoAnmFv();
// True False
extern "C" void __dt__12J3DTexMtxAnmFv();
// True False
extern "C" void __ct__12J3DTexMtxAnmFv();
// True False
extern "C" void __dt__14J3DMatColorAnmFv();
// True False
extern "C" void __ct__14J3DMatColorAnmFv();
// True False
extern "C" void Delete__11daNpcMoiR_cFv();
// True False
extern "C" void Execute__11daNpcMoiR_cFv();
// True False
extern "C" void Draw__11daNpcMoiR_cFv();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__11daNpcMoiR_cFP8J3DJointP8J3DModel();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void createHeapCallBack__11daNpcMoiR_cFP10fopAc_ac_c();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void ctrlJointCallBack__11daNpcMoiR_cFP8J3DJointi();
// True False
//  int False
//  bool False
extern "C" void setExpressionAnm__11daNpcMoiR_cFib();
// True False
//  int False
extern "C" void setExpressionBtp__11daNpcMoiR_cFi();
// True False
//  int False
//  f32 False
extern "C" void setMotionAnm__11daNpcMoiR_cFif();
// True False
extern "C" void reset__11daNpcMoiR_cFv();
// True False
extern "C" void setWaitAction__11daNpcMoiR_cFv();
// True False
//  void* False
// 	 void False
extern "C" void wait_type0__11daNpcMoiR_cFPv();
// True False
//  int False
//  f32 False
//  int False
extern "C" void setMotion__11daNpcMoiR_cFifi();
// True False
//  int False
//  f32 False
extern "C" void setExpression__11daNpcMoiR_cFif();
// True False
//  void* False
// 	 void False
extern "C" void wait_type1__11daNpcMoiR_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void wait_type2__11daNpcMoiR_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__11daNpcMoiR_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void multiTalk__11daNpcMoiR_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void fight__11daNpcMoiR_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void demo__11daNpcMoiR_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void leave__11daNpcMoiR_cFPv();
// True False
//  int False
extern "C" void EvCut_Introduction__11daNpcMoiR_cFi();
// True False
//  int False
extern "C" void EvCut_Appear__11daNpcMoiR_cFi();
// True False
//  int False
extern "C" void EvCut_Appear2__11daNpcMoiR_cFi();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcMoiR_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcMoiR_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcMoiR_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daNpcMoiR_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daNpcMoiR_IsDelete__FPv();
// True False
//  u16* False
// 	 u16 False
extern "C" void calc__11J3DTexNoAnmCFPUs();
// True False
extern "C" void setParam__11daNpcMoiR_cFv();
// True False
extern "C" void main__11daNpcMoiR_cFv();
// True False
extern "C" void checkHeadGear__11daNpcMoiR_cFv();
// True False
extern "C" void playMotion__11daNpcMoiR_cFv();
// True False
extern "C" void ctrlBtk__11daNpcMoiR_cFv();
// True False
extern "C" void setAttnPos__11daNpcMoiR_cFv();
// True False
extern "C" void lookat__11daNpcMoiR_cFv();
// True False
extern "C" void drawOtherMdls__11daNpcMoiR_cFv();
// True False
//  bool False
extern "C" bool drawDbgInfo__11daNpcMoiR_cFv();
// True False
extern "C" void __dt__18daNpcF_ActorMngr_cFv();
// True False
extern "C" void __ct__18daNpcF_ActorMngr_cFv();
// True False
extern "C" void __dt__15daNpcF_Lookat_cFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__8daNpcF_cFv();
// True False
extern "C" void __ct__8daNpcF_cFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  void False
extern "C" void adjustShapeAngle__8daNpcF_cFv();
// True False
//  void False
extern "C" void setCollisions__8daNpcF_cFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// False True
//  int* False
// 	 int False
extern "C" void func_80A830EC();
// False True
//  int False
//  int False
extern "C" void func_80A83108();
// False False
extern "C" void __sinit_d_a_npc_moir_cpp();
// True False
extern "C" void __dt__17daNpcMoiR_Param_cFv();
// True False
extern "C" static void func_80A83288();
// True False
extern "C" static void func_80A83290();
extern "C" extern u32 const lit_4276;
extern "C" extern u32 const lit_4277;
extern "C" extern u32 const lit_4278;
extern "C" extern u32 const lit_4279;
extern "C" extern u8 const lit_4603[12];
extern "C" extern u8 const lit_4604[4];
extern "C" extern u8 const lit_4605[12];
extern "C" extern u8 const lit_4606[4];
extern "C" extern u8 const lit_4607[12];
extern "C" extern u8 const lit_4608[4];
extern "C" extern u8 const lit_4609[12];
extern "C" extern u8 const lit_4610[4];
extern "C" extern u8 const lit_4611[12];
extern "C" extern u8 const lit_4612[4];
extern "C" extern u8 const lit_4613[12];
extern "C" extern u8 const lit_4614[4];
extern "C" extern u8 const lit_4615[12];
extern "C" extern u8 const lit_4616[4];
extern "C" extern u8 const lit_4617[12];
extern "C" extern u8 const lit_4618[4];
extern "C" extern u8 const lit_4619[12];
extern "C" extern u8 const lit_4620[4];
extern "C" extern u8 const lit_4621[12];
extern "C" extern u8 const lit_4622[4];
extern "C" extern u8 const lit_4623[12];
extern "C" extern u8 const lit_4624[4];
extern "C" extern u8 const lit_4625[4];
extern "C" extern u8 const lit_4626[76];
extern "C" extern u8 const lit_4630[12];
extern "C" extern u8 const lit_4631[4];
extern "C" extern u8 const lit_4632[12];
extern "C" extern u8 const lit_4633[12];
extern "C" extern u8 const lit_4634[8];
extern "C" extern u8 const lit_4635[12];
extern "C" extern u8 const lit_4636[4];
extern "C" extern u8 const lit_4637[12];
extern "C" extern u8 const lit_4638[4];
extern "C" extern u8 const lit_4639[12];
extern "C" extern u8 const lit_4640[12];
extern "C" extern u8 const lit_4641[8];
extern "C" extern u8 const lit_4642[12];
extern "C" extern u8 const lit_4643[4];
extern "C" extern u8 const lit_4644[12];
extern "C" extern u8 const lit_4645[4];
extern "C" extern u8 const lit_4646[12];
extern "C" extern u8 const lit_4647[12];
extern "C" extern u8 const lit_4648[8];
extern "C" extern u8 const lit_4649[12];
extern "C" extern u8 const lit_4650[4];
extern "C" extern u8 const lit_4651[12];
extern "C" extern u8 const lit_4652[12];
extern "C" extern u8 const lit_4653[8];
extern "C" extern u8 const lit_4654[12];
extern "C" extern u8 const lit_4655[12];
extern "C" extern u8 const lit_4656[8];
extern "C" extern u8 const lit_4657[12];
extern "C" extern u8 const lit_4658[4];
extern "C" extern u8 const lit_4659[12];
extern "C" extern u8 const lit_4660[12];
extern "C" extern u8 const lit_4661[8];
extern "C" extern u8 const lit_4662[12];
extern "C" extern u8 const lit_4663[12];
extern "C" extern u8 const lit_4664[8];
extern "C" extern u8 const lit_4665[12];
extern "C" extern u8 const lit_4666[12];
extern "C" extern u8 const lit_4667[8];
extern "C" extern u8 const lit_4668[12];
extern "C" extern u8 const lit_4669[4];
extern "C" extern u8 const lit_4670[12];
extern "C" extern u8 const lit_4671[12];
extern "C" extern u8 const lit_4672[8];
extern "C" extern u8 const lit_4673[12];
extern "C" extern u8 const lit_4674[12];
extern "C" extern u8 const lit_4675[8];
extern "C" extern u8 const lit_4676[12];
extern "C" extern u8 const lit_4677[4];
extern "C" extern u8 const lit_4678[12];
extern "C" extern u8 const lit_4679[4];
extern "C" extern u8 const lit_4680[12];
extern "C" extern u8 const lit_4681[12];
extern "C" extern u8 const lit_4682[8];
extern "C" extern u8 const lit_4683[12];
extern "C" extern u8 const lit_4684[12];
extern "C" extern u8 const lit_4685[8];
extern "C" extern u8 const lit_4686[12];
extern "C" extern u8 const lit_4687[4];
extern "C" extern u8 const lit_4688[12];
extern "C" extern u8 const lit_4689[12];
extern "C" extern u8 const lit_4690[8];
extern "C" extern u8 const lit_4691[12];
extern "C" extern u8 const lit_4692[8];
extern "C" extern u8 const lit_4693[12];
extern "C" extern u8 const lit_4694[4];
extern "C" extern u8 const lit_4695[12];
extern "C" extern u8 const lit_4696[4];
extern "C" extern u8 const lit_4697[12];
extern "C" extern u8 const lit_4698[4];
extern "C" extern u8 const lit_4699[172];
extern "C" extern u8 const lit_4735[12];
extern "C" extern u32 const lit_4961;
extern "C" extern u32 const lit_5160;
extern "C" extern u32 const lit_5161;
extern "C" extern u32 const lit_5162;
extern "C" extern u8 const lit_5163[8];
extern "C" extern u8 const lit_5164[8];
extern "C" extern u32 const lit_5201;
extern "C" extern u32 const lit_5202;
extern "C" extern u32 const lit_5440;
extern "C" extern u32 const lit_5441;
extern "C" extern u8 const lit_5442[8];
extern "C" extern u32 const lit_5586;
extern "C" extern u32 const lit_5587;
extern "C" extern u32 const lit_5588[1 + 1 /* padding */];
extern "C" extern u8 const lit_5589[8];
extern "C" extern u8 const lit_5590[8];
extern "C" extern u8 const lit_5591[8];
extern "C" extern u32 const lit_5816;
extern "C" extern u32 const lit_6020;
extern "C" extern u32 const lit_6021;
extern "C" extern u32 const lit_6022;
extern "C" extern u32 const lit_6177;
extern "C" extern u32 const lit_6178;
extern "C" extern u32 const lit_6179;
extern "C" extern u32 const lit_6180;
extern "C" extern u32 const lit_6181;
extern "C" extern u32 const lit_6182;
extern "C" extern u32 const lit_6230;
extern "C" extern u32 const lit_6231;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_evtNames[4];
extern "C" extern void* l_myName;
extern "C" extern void* lit_3855[3];
extern "C" extern void* lit_3856[3];
extern "C" extern void* lit_3857[3];
extern "C" extern u8 mEvtSeqList__11daNpcMoiR_c[48];
extern "C" extern void* lit_4709[3];
extern "C" extern void* lit_4712[3];
extern "C" extern void* lit_4715[3];
extern "C" extern void* lit_4854[3];
extern "C" extern void* lit_4857[3];
extern "C" extern void* lit_4862[3];
extern "C" extern void* lit_4998[3];
extern "C" extern void* lit_5013[3];
extern "C" extern void* lit_5016[3];
extern "C" extern void* lit_5021[3];
extern "C" extern void* g_profile_NPC_MOIR[12];
extern "C" extern void* __vt__11J3DTexNoAnm[3];
extern "C" extern void* __vt__11daNpcMoiR_c[18];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__18daNpcF_ActorMngr_c[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__15daNpcF_Lookat_c[3];
extern "C" extern void* __vt__17daNpcMoiR_Param_c[3];

// 
// External References:
// 

// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  s16 False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void fopAcM_SearchByName(s16, fopAc_ac_c**);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ2(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u16 False
//  u16 False
void fopAcM_orderChangeEventId(fopAc_ac_c*, s16, u16, u16);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_createItemForPresentDemo(cXyz const*, int, u8, int, int, csXyz const*, cXyz const*);
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeForPName(void*, void*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
//  int False
void dComIfGs_isStageSwitch(int, int);
// False False
//  u32 False
void daNpcF_chkEvtBit(u32);
// False False
//  u32 False
void daNpcF_onEvtBit(u32);
// False False
//  u32 False
void daNpcF_chkTmpBit(u32);
// False False
//  u32 False
void daNpcF_offTmpBit(u32);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_targetAngleX(cXyz const*, cXyz const*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
extern "C" void changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  s16 False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void fopAcM_SearchByName__FsPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ2__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeForPName__FPvPv();
// False False
//  int False
extern "C" void getLayerNo__14dComIfG_play_cFi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
//  int False
extern "C" void dComIfGs_isStageSwitch__Fii();
// False False
//  int False
extern "C" void isSwitch__12dSv_memBit_cCFi();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  void* False
// 	 void False
extern "C" void reset__14dEvt_control_cFPv();
// False False
//  unsigned int False
extern "C" void setPtI_Id__14dEvt_control_cFUi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
// False False
//  s16 False
extern "C" void endCheck__16dEvent_manager_cFs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
extern "C" void getMyNowCutName__16dEvent_manager_cFi();
// False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
extern "C" void initialize__18daNpcF_ActorMngr_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c();
// False False
extern "C" void remove__18daNpcF_ActorMngr_cFv();
// False False
extern "C" void getActorP__18daNpcF_ActorMngr_cFv();
// False False
extern "C" void initialize__15daNpcF_MatAnm_cFv();
// False False
extern "C" void initialize__15daNpcF_Lookat_cFv();
// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
//  cXyz* False
// 	 cXyz False
extern "C" void setParam__15daNpcF_Lookat_cFffffffffffffsP4cXyz();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  csXyz** False
// 	 csXyz* False
// 		 csXyz False
//  int False
//  int False
//  int False
extern "C" void calc__15daNpcF_Lookat_cFP10fopAc_ac_cPA4_fPP5csXyziii();
// False False
extern "C" void execute__8daNpcF_cFv();
// False False
//  int False
//  int False
//  f32 False
//  _GXColorS10* False
// 	 _GXColorS10 False
//  int False
extern "C" void draw__8daNpcF_cFiifP11_GXColorS10i();
// False False
extern "C" void setMtx__8daNpcF_cFv();
// False False
extern "C" void setMtx2__8daNpcF_cFv();
// False False
extern "C" void initialize__8daNpcF_cFv();
// False False
//  char* False
// 	 char False
//  int False
extern "C" void getTrnsfrmKeyAnmP__8daNpcF_cFPci();
// False False
//  char* False
// 	 char False
//  int False
extern "C" void getTexPtrnAnmP__8daNpcF_cFPci();
// False False
//  char* False
// 	 char False
//  int False
extern "C" void getTexSRTKeyAnmP__8daNpcF_cFPci();
// False False
//  J3DAnmTransformKey* False
// 	 J3DAnmTransformKey False
//  f32 False
//  f32 False
//  int False
//  int False
//  int False
extern "C" void setMcaMorfAnm__8daNpcF_cFP18J3DAnmTransformKeyffiii();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  f32 False
//  int False
//  int False
//  int False
//  bool False
extern "C" void setBckAnm__8daNpcF_cFP15J3DAnmTransformfiiib();
// False False
//  J3DAnmTexPattern* False
// 	 J3DAnmTexPattern False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBtpAnm__8daNpcF_cFP16J3DAnmTexPatternP12J3DModelDatafi();
// False False
//  J3DAnmTextureSRTKey* False
// 	 J3DAnmTextureSRTKey False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
//  int False
extern "C" void setBtkAnm__8daNpcF_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi();
// False False
extern "C" void setEnvTevColor__8daNpcF_cFv();
// False False
extern "C" void setRoomNo__8daNpcF_cFv();
// False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
extern "C" void playExpressionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData();
// False False
//  daNpcF_c::daNpcF_anmPlayData*** False
// 	 daNpcF_c::daNpcF_anmPlayData** False
// 		 daNpcF_c::daNpcF_anmPlayData* False
// 			 daNpcF_c::daNpcF_anmPlayData False
extern "C" void playMotionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData();
// False False
//  int False
//  int* False
// 	 int False
//  f32 False
extern "C" void setLookatMtx__8daNpcF_cFiPif();
// False False
//  int& False
// 	 int False
//  int& False
// 	 int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci();
// False False
//  int False
//  char* False
// 	 char False
//  u16 False
//  u16 False
//  u8 False
//  u16 False
extern "C" void orderEvent__8daNpcF_cFiPcUsUsUcUs();
// False False
//  char* False
// 	 char False
//  char* False
// 	 char False
//  u16 False
//  u16 False
extern "C" void changeEvent__8daNpcF_cFPcPcUsUs();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
extern "C" void chkActorInSight__8daNpcF_cFP10fopAc_ac_cf();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci();
// False False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void initTalk__8daNpcF_cFiPP10fopAc_ac_c();
// False False
//  int* False
// 	 int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void talkProc__8daNpcF_cFPiiPP10fopAc_ac_c();
// False False
//  s16 False
//  f32 False
//  int False
extern "C" void turn__8daNpcF_cFsfi();
// False False
//  s16 False
extern "C" void setAngle__8daNpcF_cFs();
// False False
//  int False
//  int False
extern "C" void getDistTableIdx__8daNpcF_cFii();
// False False
//  u32 False
extern "C" void daNpcF_chkEvtBit__FUl();
// False False
//  u32 False
extern "C" void daNpcF_onEvtBit__FUl();
// False False
//  u32 False
extern "C" void daNpcF_chkTmpBit__FUl();
// False False
//  u32 False
extern "C" void daNpcF_offTmpBit__FUl();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  int* False
// 	 int False
extern "C" void getEventId__10dMsgFlow_cFPi();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __ct__11cBgS_GndChkFv();
// False False
extern "C" void __dt__11cBgS_GndChkFv();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_targetAngleX__FPC4cXyzPC4cXyz();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void __ct__10Z2CreatureFv();
// False False
extern "C" void __dt__10Z2CreatureFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
//  u16 False
//  u16* False
// 	 u16 False
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
// False False
extern "C" void initialize__14J3DMaterialAnmFv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
// False False
extern "C" void pow();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcF_c[68];
extern "C" extern void* __vt__8daNpcF_c[18];
extern "C" extern void* __vt__15daNpcF_MatAnm_c[4 + 6 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80A832AC-80A83320 0074+00 s=17 e=0 z=0  None .rodata    m__17daNpcMoiR_Param_c                                       */
SECTION_RODATA static u8 const m__17daNpcMoiR_Param_c[116] = {
	0x42, 0x0C, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
	0x43, 0x7F, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
	0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
	0x42, 0xA0, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00,
	0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00,
	0x15, 0xCD, 0x00, 0x00,
};

/* 80A83320-80A83324 0004+00 s=0 e=0 z=0  None .rodata    @4276                                                        */
SECTION_RODATA u32 const lit_4276 = 0xC2C80000;

/* 80A83324-80A83328 0004+00 s=0 e=0 z=0  None .rodata    @4277                                                        */
SECTION_RODATA u32 const lit_4277 = 0xC2480000;

/* 80A83328-80A8332C 0004+00 s=0 e=0 z=0  None .rodata    @4278                                                        */
SECTION_RODATA u32 const lit_4278 = 0x42C80000;

/* 80A8332C-80A83330 0004+00 s=0 e=0 z=0  None .rodata    @4279                                                        */
SECTION_RODATA u32 const lit_4279 = 0x435C0000;

/* 80A83330-80A83334 0004+00 s=4 e=0 z=0  None .rodata    @4337                                                        */
SECTION_RODATA static u32 const lit_4337 = 0x3F800000;

/* 80A83334-80A83338 0004+00 s=2 e=0 z=0  None .rodata    @4338                                                        */
SECTION_RODATA static u8 const lit_4338[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83338-80A83344 000C+00 s=1 e=0 z=0  None .rodata    @4386                                                        */
SECTION_RODATA static u8 const lit_4386[12] = {
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04,
};

/* 80A83344-80A83350 000C+00 s=0 e=0 z=0  None .rodata    @4603                                                        */
SECTION_RODATA u8 const lit_4603[12] = {
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83350-80A83354 0004+00 s=0 e=0 z=0  None .rodata    @4604                                                        */
SECTION_RODATA u8 const lit_4604[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83354-80A83360 000C+00 s=0 e=0 z=0  None .rodata    @4605                                                        */
SECTION_RODATA u8 const lit_4605[12] = {
	0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83360-80A83364 0004+00 s=0 e=0 z=0  None .rodata    @4606                                                        */
SECTION_RODATA u8 const lit_4606[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83364-80A83370 000C+00 s=0 e=0 z=0  None .rodata    @4607                                                        */
SECTION_RODATA u8 const lit_4607[12] = {
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83370-80A83374 0004+00 s=0 e=0 z=0  None .rodata    @4608                                                        */
SECTION_RODATA u8 const lit_4608[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83374-80A83380 000C+00 s=0 e=0 z=0  None .rodata    @4609                                                        */
SECTION_RODATA u8 const lit_4609[12] = {
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83380-80A83384 0004+00 s=0 e=0 z=0  None .rodata    @4610                                                        */
SECTION_RODATA u8 const lit_4610[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83384-80A83390 000C+00 s=0 e=0 z=0  None .rodata    @4611                                                        */
SECTION_RODATA u8 const lit_4611[12] = {
	0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83390-80A83394 0004+00 s=0 e=0 z=0  None .rodata    @4612                                                        */
SECTION_RODATA u8 const lit_4612[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83394-80A833A0 000C+00 s=0 e=0 z=0  None .rodata    @4613                                                        */
SECTION_RODATA u8 const lit_4613[12] = {
	0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A833A0-80A833A4 0004+00 s=0 e=0 z=0  None .rodata    @4614                                                        */
SECTION_RODATA u8 const lit_4614[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A833A4-80A833B0 000C+00 s=0 e=0 z=0  None .rodata    @4615                                                        */
SECTION_RODATA u8 const lit_4615[12] = {
	0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A833B0-80A833B4 0004+00 s=0 e=0 z=0  None .rodata    @4616                                                        */
SECTION_RODATA u8 const lit_4616[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A833B4-80A833C0 000C+00 s=0 e=0 z=0  None .rodata    @4617                                                        */
SECTION_RODATA u8 const lit_4617[12] = {
	0x00, 0x04, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A833C0-80A833C4 0004+00 s=0 e=0 z=0  None .rodata    @4618                                                        */
SECTION_RODATA u8 const lit_4618[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A833C4-80A833D0 000C+00 s=0 e=0 z=0  None .rodata    @4619                                                        */
SECTION_RODATA u8 const lit_4619[12] = {
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A833D0-80A833D4 0004+00 s=0 e=0 z=0  None .rodata    @4620                                                        */
SECTION_RODATA u8 const lit_4620[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A833D4-80A833E0 000C+00 s=0 e=0 z=0  None .rodata    @4621                                                        */
SECTION_RODATA u8 const lit_4621[12] = {
	0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A833E0-80A833E4 0004+00 s=0 e=0 z=0  None .rodata    @4622                                                        */
SECTION_RODATA u8 const lit_4622[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A833E4-80A833F0 000C+00 s=0 e=0 z=0  None .rodata    @4623                                                        */
SECTION_RODATA u8 const lit_4623[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A833F0-80A833F4 0004+00 s=0 e=0 z=0  None .rodata    @4624                                                        */
SECTION_RODATA u8 const lit_4624[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A833F4-80A833F8 0004+00 s=0 e=0 z=0  None .rodata    @4625                                                        */
SECTION_RODATA u8 const lit_4625[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A833F8-80A83444 004C+00 s=0 e=0 z=0  None .rodata    @4626                                                        */
SECTION_RODATA u8 const lit_4626[76] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83444-80A83450 000C+00 s=0 e=0 z=0  None .rodata    @4630                                                        */
SECTION_RODATA u8 const lit_4630[12] = {
	0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83450-80A83454 0004+00 s=0 e=0 z=0  None .rodata    @4631                                                        */
SECTION_RODATA u8 const lit_4631[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83454-80A83460 000C+00 s=0 e=0 z=0  None .rodata    @4632                                                        */
SECTION_RODATA u8 const lit_4632[12] = {
	0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83460-80A8346C 000C+00 s=0 e=0 z=0  None .rodata    @4633                                                        */
SECTION_RODATA u8 const lit_4633[12] = {
	0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A8346C-80A83474 0008+00 s=0 e=0 z=0  None .rodata    @4634                                                        */
SECTION_RODATA u8 const lit_4634[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83474-80A83480 000C+00 s=0 e=0 z=0  None .rodata    @4635                                                        */
SECTION_RODATA u8 const lit_4635[12] = {
	0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83480-80A83484 0004+00 s=0 e=0 z=0  None .rodata    @4636                                                        */
SECTION_RODATA u8 const lit_4636[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83484-80A83490 000C+00 s=0 e=0 z=0  None .rodata    @4637                                                        */
SECTION_RODATA u8 const lit_4637[12] = {
	0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83490-80A83494 0004+00 s=0 e=0 z=0  None .rodata    @4638                                                        */
SECTION_RODATA u8 const lit_4638[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83494-80A834A0 000C+00 s=0 e=0 z=0  None .rodata    @4639                                                        */
SECTION_RODATA u8 const lit_4639[12] = {
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A834A0-80A834AC 000C+00 s=0 e=0 z=0  None .rodata    @4640                                                        */
SECTION_RODATA u8 const lit_4640[12] = {
	0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A834AC-80A834B4 0008+00 s=0 e=0 z=0  None .rodata    @4641                                                        */
SECTION_RODATA u8 const lit_4641[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A834B4-80A834C0 000C+00 s=0 e=0 z=0  None .rodata    @4642                                                        */
SECTION_RODATA u8 const lit_4642[12] = {
	0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A834C0-80A834C4 0004+00 s=0 e=0 z=0  None .rodata    @4643                                                        */
SECTION_RODATA u8 const lit_4643[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A834C4-80A834D0 000C+00 s=0 e=0 z=0  None .rodata    @4644                                                        */
SECTION_RODATA u8 const lit_4644[12] = {
	0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A834D0-80A834D4 0004+00 s=0 e=0 z=0  None .rodata    @4645                                                        */
SECTION_RODATA u8 const lit_4645[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A834D4-80A834E0 000C+00 s=0 e=0 z=0  None .rodata    @4646                                                        */
SECTION_RODATA u8 const lit_4646[12] = {
	0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A834E0-80A834EC 000C+00 s=0 e=0 z=0  None .rodata    @4647                                                        */
SECTION_RODATA u8 const lit_4647[12] = {
	0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A834EC-80A834F4 0008+00 s=0 e=0 z=0  None .rodata    @4648                                                        */
SECTION_RODATA u8 const lit_4648[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A834F4-80A83500 000C+00 s=0 e=0 z=0  None .rodata    @4649                                                        */
SECTION_RODATA u8 const lit_4649[12] = {
	0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83500-80A83504 0004+00 s=0 e=0 z=0  None .rodata    @4650                                                        */
SECTION_RODATA u8 const lit_4650[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83504-80A83510 000C+00 s=0 e=0 z=0  None .rodata    @4651                                                        */
SECTION_RODATA u8 const lit_4651[12] = {
	0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83510-80A8351C 000C+00 s=0 e=0 z=0  None .rodata    @4652                                                        */
SECTION_RODATA u8 const lit_4652[12] = {
	0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A8351C-80A83524 0008+00 s=0 e=0 z=0  None .rodata    @4653                                                        */
SECTION_RODATA u8 const lit_4653[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83524-80A83530 000C+00 s=0 e=0 z=0  None .rodata    @4654                                                        */
SECTION_RODATA u8 const lit_4654[12] = {
	0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83530-80A8353C 000C+00 s=0 e=0 z=0  None .rodata    @4655                                                        */
SECTION_RODATA u8 const lit_4655[12] = {
	0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A8353C-80A83544 0008+00 s=0 e=0 z=0  None .rodata    @4656                                                        */
SECTION_RODATA u8 const lit_4656[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83544-80A83550 000C+00 s=0 e=0 z=0  None .rodata    @4657                                                        */
SECTION_RODATA u8 const lit_4657[12] = {
	0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83550-80A83554 0004+00 s=0 e=0 z=0  None .rodata    @4658                                                        */
SECTION_RODATA u8 const lit_4658[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83554-80A83560 000C+00 s=0 e=0 z=0  None .rodata    @4659                                                        */
SECTION_RODATA u8 const lit_4659[12] = {
	0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83560-80A8356C 000C+00 s=0 e=0 z=0  None .rodata    @4660                                                        */
SECTION_RODATA u8 const lit_4660[12] = {
	0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A8356C-80A83574 0008+00 s=0 e=0 z=0  None .rodata    @4661                                                        */
SECTION_RODATA u8 const lit_4661[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83574-80A83580 000C+00 s=0 e=0 z=0  None .rodata    @4662                                                        */
SECTION_RODATA u8 const lit_4662[12] = {
	0x00, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83580-80A8358C 000C+00 s=0 e=0 z=0  None .rodata    @4663                                                        */
SECTION_RODATA u8 const lit_4663[12] = {
	0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A8358C-80A83594 0008+00 s=0 e=0 z=0  None .rodata    @4664                                                        */
SECTION_RODATA u8 const lit_4664[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83594-80A835A0 000C+00 s=0 e=0 z=0  None .rodata    @4665                                                        */
SECTION_RODATA u8 const lit_4665[12] = {
	0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A835A0-80A835AC 000C+00 s=0 e=0 z=0  None .rodata    @4666                                                        */
SECTION_RODATA u8 const lit_4666[12] = {
	0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A835AC-80A835B4 0008+00 s=0 e=0 z=0  None .rodata    @4667                                                        */
SECTION_RODATA u8 const lit_4667[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A835B4-80A835C0 000C+00 s=0 e=0 z=0  None .rodata    @4668                                                        */
SECTION_RODATA u8 const lit_4668[12] = {
	0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A835C0-80A835C4 0004+00 s=0 e=0 z=0  None .rodata    @4669                                                        */
SECTION_RODATA u8 const lit_4669[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A835C4-80A835D0 000C+00 s=0 e=0 z=0  None .rodata    @4670                                                        */
SECTION_RODATA u8 const lit_4670[12] = {
	0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A835D0-80A835DC 000C+00 s=0 e=0 z=0  None .rodata    @4671                                                        */
SECTION_RODATA u8 const lit_4671[12] = {
	0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A835DC-80A835E4 0008+00 s=0 e=0 z=0  None .rodata    @4672                                                        */
SECTION_RODATA u8 const lit_4672[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A835E4-80A835F0 000C+00 s=0 e=0 z=0  None .rodata    @4673                                                        */
SECTION_RODATA u8 const lit_4673[12] = {
	0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A835F0-80A835FC 000C+00 s=0 e=0 z=0  None .rodata    @4674                                                        */
SECTION_RODATA u8 const lit_4674[12] = {
	0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A835FC-80A83604 0008+00 s=0 e=0 z=0  None .rodata    @4675                                                        */
SECTION_RODATA u8 const lit_4675[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83604-80A83610 000C+00 s=0 e=0 z=0  None .rodata    @4676                                                        */
SECTION_RODATA u8 const lit_4676[12] = {
	0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83610-80A83614 0004+00 s=0 e=0 z=0  None .rodata    @4677                                                        */
SECTION_RODATA u8 const lit_4677[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83614-80A83620 000C+00 s=0 e=0 z=0  None .rodata    @4678                                                        */
SECTION_RODATA u8 const lit_4678[12] = {
	0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83620-80A83624 0004+00 s=0 e=0 z=0  None .rodata    @4679                                                        */
SECTION_RODATA u8 const lit_4679[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83624-80A83630 000C+00 s=0 e=0 z=0  None .rodata    @4680                                                        */
SECTION_RODATA u8 const lit_4680[12] = {
	0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83630-80A8363C 000C+00 s=0 e=0 z=0  None .rodata    @4681                                                        */
SECTION_RODATA u8 const lit_4681[12] = {
	0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A8363C-80A83644 0008+00 s=0 e=0 z=0  None .rodata    @4682                                                        */
SECTION_RODATA u8 const lit_4682[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83644-80A83650 000C+00 s=0 e=0 z=0  None .rodata    @4683                                                        */
SECTION_RODATA u8 const lit_4683[12] = {
	0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83650-80A8365C 000C+00 s=0 e=0 z=0  None .rodata    @4684                                                        */
SECTION_RODATA u8 const lit_4684[12] = {
	0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A8365C-80A83664 0008+00 s=0 e=0 z=0  None .rodata    @4685                                                        */
SECTION_RODATA u8 const lit_4685[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83664-80A83670 000C+00 s=0 e=0 z=0  None .rodata    @4686                                                        */
SECTION_RODATA u8 const lit_4686[12] = {
	0x00, 0x16, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83670-80A83674 0004+00 s=0 e=0 z=0  None .rodata    @4687                                                        */
SECTION_RODATA u8 const lit_4687[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A83674-80A83680 000C+00 s=0 e=0 z=0  None .rodata    @4688                                                        */
SECTION_RODATA u8 const lit_4688[12] = {
	0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A83680-80A8368C 000C+00 s=0 e=0 z=0  None .rodata    @4689                                                        */
SECTION_RODATA u8 const lit_4689[12] = {
	0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A8368C-80A83694 0008+00 s=0 e=0 z=0  None .rodata    @4690                                                        */
SECTION_RODATA u8 const lit_4690[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83694-80A836A0 000C+00 s=0 e=0 z=0  None .rodata    @4691                                                        */
SECTION_RODATA u8 const lit_4691[12] = {
	0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A836A0-80A836A8 0008+00 s=0 e=0 z=0  None .rodata    @4692                                                        */
SECTION_RODATA u8 const lit_4692[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A836A8-80A836B4 000C+00 s=0 e=0 z=0  None .rodata    @4693                                                        */
SECTION_RODATA u8 const lit_4693[12] = {
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A836B4-80A836B8 0004+00 s=0 e=0 z=0  None .rodata    @4694                                                        */
SECTION_RODATA u8 const lit_4694[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A836B8-80A836C4 000C+00 s=0 e=0 z=0  None .rodata    @4695                                                        */
SECTION_RODATA u8 const lit_4695[12] = {
	0x00, 0x0F, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80A836C4-80A836C8 0004+00 s=0 e=0 z=0  None .rodata    @4696                                                        */
SECTION_RODATA u8 const lit_4696[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A836C8-80A836D4 000C+00 s=0 e=0 z=0  None .rodata    @4697                                                        */
SECTION_RODATA u8 const lit_4697[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A836D4-80A836D8 0004+00 s=0 e=0 z=0  None .rodata    @4698                                                        */
SECTION_RODATA u8 const lit_4698[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A836D8-80A83784 00AC+00 s=0 e=0 z=0  None .rodata    @4699                                                        */
SECTION_RODATA u8 const lit_4699[172] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83784-80A83790 000C+00 s=0 e=0 z=0  None .rodata    @4735                                                        */
SECTION_RODATA u8 const lit_4735[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83790-80A83794 0004+00 s=3 e=0 z=0  None .rodata    @4960                                                        */
SECTION_RODATA static u32 const lit_4960 = 0xBF800000;

/* 80A83794-80A83798 0004+00 s=0 e=0 z=0  None .rodata    @4961                                                        */
SECTION_RODATA u32 const lit_4961 = 0x43070000;

/* 80A83798-80A8379C 0004+00 s=0 e=0 z=0  None .rodata    @5160                                                        */
SECTION_RODATA u32 const lit_5160 = 0x3BB40000;

/* 80A8379C-80A837A0 0004+00 s=0 e=0 z=0  None .rodata    @5161                                                        */
SECTION_RODATA u32 const lit_5161 = 0x41000000;

/* 80A837A0-80A837A4 0004+00 s=0 e=0 z=0  None .rodata    @5162                                                        */
SECTION_RODATA u32 const lit_5162 = 0x41700000;

/* 80A837A4-80A837AC 0008+00 s=0 e=0 z=0  None .rodata    @5163                                                        */
SECTION_RODATA u8 const lit_5163[8] = {
	0x40, 0x72, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A837AC-80A837B4 0008+00 s=0 e=0 z=0  None .rodata    @5164                                                        */
SECTION_RODATA u8 const lit_5164[8] = {
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A837B4-80A837BC 0008+00 s=1 e=0 z=0  None .rodata    @5166                                                        */
SECTION_RODATA static u8 const lit_5166[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80A837BC-80A837C0 0004+00 s=0 e=0 z=0  None .rodata    @5201                                                        */
SECTION_RODATA u32 const lit_5201 = 0xC57F0160;

/* 80A837C0-80A837C4 0004+00 s=0 e=0 z=0  None .rodata    @5202                                                        */
SECTION_RODATA u32 const lit_5202 = 0x45FCF4EE;

/* 80A837C4-80A837D4 0010+00 s=1 e=0 z=0  None .rodata    @5306                                                        */
SECTION_RODATA static u8 const lit_5306[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A837D4-80A837D8 0004+00 s=0 e=0 z=0  None .rodata    @5440                                                        */
SECTION_RODATA u32 const lit_5440 = 0x41300000;

/* 80A837D8-80A837DC 0004+00 s=0 e=0 z=0  None .rodata    @5441                                                        */
SECTION_RODATA u32 const lit_5441 = 0x42100000;

/* 80A837DC-80A837E4 0008+00 s=0 e=0 z=0  None .rodata    @5442                                                        */
SECTION_RODATA u8 const lit_5442[8] = {
	0x40, 0x85, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A837E4-80A837E8 0004+00 s=0 e=0 z=0  None .rodata    @5586                                                        */
SECTION_RODATA u32 const lit_5586 = 0xC5C36B19;

/* 80A837E8-80A837EC 0004+00 s=0 e=0 z=0  None .rodata    @5587                                                        */
SECTION_RODATA u32 const lit_5587 = 0x45C35E15;

/* 80A837EC-80A837F4 0004+04 s=0 e=0 z=0  None .rodata    @5588                                                        */
SECTION_RODATA u32 const lit_5588[1 + 1 /* padding */] = {
	0x41400000,
	/* padding */
	0x00000000,
};

/* 80A837F4-80A837FC 0008+00 s=0 e=0 z=0  None .rodata    @5589                                                        */
SECTION_RODATA u8 const lit_5589[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A837FC-80A83804 0008+00 s=0 e=0 z=0  None .rodata    @5590                                                        */
SECTION_RODATA u8 const lit_5590[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83804-80A8380C 0008+00 s=0 e=0 z=0  None .rodata    @5591                                                        */
SECTION_RODATA u8 const lit_5591[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A8380C-80A83810 0004+00 s=0 e=0 z=0  None .rodata    @5816                                                        */
SECTION_RODATA u32 const lit_5816 = 0x41C80000;

/* 80A83810-80A83814 0004+00 s=0 e=0 z=0  None .rodata    @6020                                                        */
SECTION_RODATA u32 const lit_6020 = 0x41600000;

/* 80A83814-80A83818 0004+00 s=0 e=0 z=0  None .rodata    @6021                                                        */
SECTION_RODATA u32 const lit_6021 = 0x41C00000;

/* 80A83818-80A8381C 0004+00 s=0 e=0 z=0  None .rodata    @6022                                                        */
SECTION_RODATA u32 const lit_6022 = 0x42040000;

/* 80A8381C-80A83820 0004+00 s=1 e=0 z=0  None .rodata    @6069                                                        */
SECTION_RODATA static u32 const lit_6069 = 0x3E4CCCCD;

/* 80A83820-80A83824 0004+00 s=0 e=0 z=0  None .rodata    @6177                                                        */
SECTION_RODATA u32 const lit_6177 = 0xC1200000;

/* 80A83824-80A83828 0004+00 s=0 e=0 z=0  None .rodata    @6178                                                        */
SECTION_RODATA u32 const lit_6178 = 0xC1700000;

/* 80A83828-80A8382C 0004+00 s=0 e=0 z=0  None .rodata    @6179                                                        */
SECTION_RODATA u32 const lit_6179 = 0xBE19999A;

/* 80A8382C-80A83830 0004+00 s=0 e=0 z=0  None .rodata    @6180                                                        */
SECTION_RODATA u32 const lit_6180 = 0x41200000;

/* 80A83830-80A83834 0004+00 s=0 e=0 z=0  None .rodata    @6181                                                        */
SECTION_RODATA u32 const lit_6181 = 0x40000000;

/* 80A83834-80A83838 0004+00 s=0 e=0 z=0  None .rodata    @6182                                                        */
SECTION_RODATA u32 const lit_6182 = 0x42200000;

/* 80A83838-80A8383C 0004+00 s=0 e=0 z=0  None .rodata    @6230                                                        */
SECTION_RODATA u32 const lit_6230 = 0xC2A00000;

/* 80A8383C-80A83840 0004+00 s=0 e=0 z=0  None .rodata    @6231                                                        */
SECTION_RODATA u32 const lit_6231 = 0x42A00000;

/* 80A83840-80A83858 0018+00 s=6 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80A83840[24] = {
	/* 80A83840 0005 stringBase_80A83840 @stringBase0 */
	0x4D, 0x6F, 0x69, 0x52, 0x00,
	/* 80A83845 0006 data_80A83845 None */
	0x4D, 0x6F, 0x69, 0x52, 0x31, 0x00,
	/* 80A8384B 0006 data_80A8384B None */
	0x4D, 0x6F, 0x69, 0x52, 0x32, 0x00,
	/* 80A83851 0006 data_80A83851 None */
	0x4D, 0x6F, 0x69, 0x52, 0x33, 0x00,
	/* 80A83857 0001 data_80A83857 None */
	0x00,
};

/* 80A83858-80A838B0 0058+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80A83858[88] = {
	/* 80A83858 0011 data_80A83858 None */
	0x54, 0x48, 0x45, 0x5F, 0x49, 0x4E, 0x54, 0x52, 0x4F, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4F, 0x4E,
	0x00,
	/* 80A83869 000C data_80A83869 None */
	0x4D, 0x4F, 0x49, 0x52, 0x5F, 0x41, 0x50, 0x50, 0x45, 0x41, 0x52, 0x00,
	/* 80A83875 003B data_80A83875 None */
	0x4D, 0x4F, 0x49, 0x52, 0x5F, 0x41, 0x50, 0x50, 0x45, 0x41, 0x52, 0x32, 0x00, 0x52, 0x5F, 0x53,
	0x50, 0x31, 0x31, 0x36, 0x00, 0x46, 0x5F, 0x53, 0x50, 0x31, 0x30, 0x38, 0x00, 0x44, 0x5F, 0x4D,
	0x4E, 0x30, 0x39, 0x00, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x47, 0x45, 0x54, 0x49,
	0x54, 0x45, 0x4D, 0x00, 0x70, 0x72, 0x6D, 0x00, 0x00, 0x00, 0x00,
};

/* 80A838B0-80A838BC 000C+00 s=9 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A838BC-80A838D0 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80A838D0-80A83AA4 01D4+00 s=3 e=0 z=0  None .data      l_bckGetParamList                                            */
SECTION_DATA static u8 l_bckGetParamList[468] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x09,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0B,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x12,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03,
};

/* 80A83AA4-80A83ABC 0018+00 s=1 e=0 z=0  None .data      l_btpGetParamList                                            */
SECTION_DATA static u8 l_btpGetParamList[24] = {
	0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83ABC-80A83AC8 000C+00 s=1 e=0 z=0  None .data      l_btkGetParamList                                            */
SECTION_DATA static u8 l_btkGetParamList[12] = {
	0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83AC8-80A83AD4 000C+00 s=1 e=0 z=0  None .data      l_loadRes_MOIR0                                              */
SECTION_DATA static u8 l_loadRes_MOIR0[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80A83AD4-80A83AE0 000C+00 s=1 e=0 z=0  None .data      l_loadRes_MOIR1                                              */
SECTION_DATA static u8 l_loadRes_MOIR1[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80A83AE0-80A83AEC 000C+00 s=1 e=0 z=0  None .data      l_loadRes_MOIR2                                              */
SECTION_DATA static u8 l_loadRes_MOIR2[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80A83AEC-80A83AF8 000C+00 s=2 e=0 z=0  None .data      l_loadRes_list                                               */
SECTION_DATA static void* l_loadRes_list[3] = {
	(void*)&l_loadRes_MOIR0,
	(void*)&l_loadRes_MOIR1,
	(void*)&l_loadRes_MOIR2,
};

/* 80A83AF8-80A83B08 0010+00 s=8 e=0 z=0  None .data      l_arcNames                                                   */
SECTION_DATA static void* l_arcNames[4] = {
	(void*)(((char*)&struct_80A83840)+0x0) /* @stringBase0 */,
	(void*)(((char*)&struct_80A83840)+0x5) /* None */,
	(void*)(((char*)&struct_80A83840)+0xB) /* None */,
	(void*)(((char*)&struct_80A83840)+0x11) /* None */,
};

/* 80A83B08-80A83B18 0010+00 s=0 e=0 z=0  None .data      l_evtNames                                                   */
SECTION_DATA void* l_evtNames[4] = {
	(void*)(((char*)&struct_80A83840)+0x17) /* None */,
	(void*)(((char*)&struct_80A83858)+0x0) /* None */,
	(void*)(((char*)&struct_80A83858)+0x11) /* None */,
	(void*)(((char*)&struct_80A83858)+0x1D) /* None */,
};

/* 80A83B18-80A83B1C 0004+00 s=0 e=0 z=0  None .data      l_myName                                                     */
SECTION_DATA void* l_myName = (void*)(((char*)&struct_80A83840)+0x0) /* @stringBase0 */;

/* 80A83B1C-80A83B28 000C+00 s=0 e=0 z=0  None .data      @3855                                                        */
SECTION_DATA void* lit_3855[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)EvCut_Introduction__11daNpcMoiR_cFi,
};

/* 80A83B28-80A83B34 000C+00 s=0 e=0 z=0  None .data      @3856                                                        */
SECTION_DATA void* lit_3856[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)EvCut_Appear__11daNpcMoiR_cFi,
};

/* 80A83B34-80A83B40 000C+00 s=0 e=0 z=0  None .data      @3857                                                        */
SECTION_DATA void* lit_3857[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)EvCut_Appear2__11daNpcMoiR_cFi,
};

/* 80A83B40-80A83B70 0030+00 s=0 e=0 z=0  None .data      mEvtSeqList__11daNpcMoiR_c                                   */
SECTION_DATA u8 mEvtSeqList__11daNpcMoiR_c[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A83B70-80A83B9C 002C+00 s=1 e=0 z=0  None .data      @4538                                                        */
SECTION_DATA static void* lit_4538[11] = {
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0xA0),
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0xBC),
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0xD8),
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0xF4),
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0x110),
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0x12C),
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0x148),
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0x164),
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0x180),
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0x19C),
	(void*)(((char*)setExpressionAnm__11daNpcMoiR_cFib)+0x1B8),
};

/* 80A83B9C-80A83BA8 000C+00 s=0 e=0 z=0  None .data      @4709                                                        */
SECTION_DATA void* lit_4709[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait_type0__11daNpcMoiR_cFPv,
};

/* 80A83BA8-80A83BB4 000C+00 s=0 e=0 z=0  None .data      @4712                                                        */
SECTION_DATA void* lit_4712[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait_type1__11daNpcMoiR_cFPv,
};

/* 80A83BB4-80A83BC0 000C+00 s=0 e=0 z=0  None .data      @4715                                                        */
SECTION_DATA void* lit_4715[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait_type2__11daNpcMoiR_cFPv,
};

/* 80A83BC0-80A83BCC 000C+00 s=3 e=0 z=0  None .data      @4762                                                        */
SECTION_DATA static void* lit_4762[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fight__11daNpcMoiR_cFPv,
};

/* 80A83BCC-80A83BD8 000C+00 s=0 e=0 z=0  None .data      @4854                                                        */
SECTION_DATA void* lit_4854[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)multiTalk__11daNpcMoiR_cFPv,
};

/* 80A83BD8-80A83BE4 000C+00 s=0 e=0 z=0  None .data      @4857                                                        */
SECTION_DATA void* lit_4857[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__11daNpcMoiR_cFPv,
};

/* 80A83BE4-80A83BF0 000C+00 s=0 e=0 z=0  None .data      @4862                                                        */
SECTION_DATA void* lit_4862[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)demo__11daNpcMoiR_cFPv,
};

/* 80A83BF0-80A83BFC 000C+00 s=0 e=0 z=0  None .data      @4998                                                        */
SECTION_DATA void* lit_4998[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)fight__11daNpcMoiR_cFPv,
};

/* 80A83BFC-80A83C08 000C+00 s=0 e=0 z=0  None .data      @5013                                                        */
SECTION_DATA void* lit_5013[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)multiTalk__11daNpcMoiR_cFPv,
};

/* 80A83C08-80A83C14 000C+00 s=0 e=0 z=0  None .data      @5016                                                        */
SECTION_DATA void* lit_5016[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__11daNpcMoiR_cFPv,
};

/* 80A83C14-80A83C20 000C+00 s=0 e=0 z=0  None .data      @5021                                                        */
SECTION_DATA void* lit_5021[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)demo__11daNpcMoiR_cFPv,
};

/* 80A83C20-80A83C2C 000C+00 s=1 e=0 z=0  None .data      @5184                                                        */
SECTION_DATA static void* lit_5184[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)leave__11daNpcMoiR_cFPv,
};

/* 80A83C2C-80A83C38 000C+00 s=1 e=0 z=0  None .data      @5387                                                        */
SECTION_DATA static void* lit_5387[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait_type1__11daNpcMoiR_cFPv,
};

/* 80A83C38-80A83C58 0020+00 s=1 e=0 z=0  None .data      daNpcMoiR_MethodTable                                        */
SECTION_DATA static void* daNpcMoiR_MethodTable[8] = {
	(void*)daNpcMoiR_Create__FPv,
	(void*)daNpcMoiR_Delete__FPv,
	(void*)daNpcMoiR_Execute__FPv,
	(void*)daNpcMoiR_IsDelete__FPv,
	(void*)daNpcMoiR_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80A83C58-80A83C88 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_MOIR                                           */
SECTION_DATA void* g_profile_NPC_MOIR[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x029C0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000E0C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x019F0000,
	(void*)&daNpcMoiR_MethodTable,
	(void*)0x00040100,
	(void*)0x040E0000,
};

/* 80A83C88-80A83C94 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm                                          */
SECTION_DATA void* __vt__11J3DTexNoAnm[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80A83C94-80A83CDC 0048+00 s=2 e=0 z=0  None .data      __vt__11daNpcMoiR_c                                          */
SECTION_DATA void* __vt__11daNpcMoiR_c[18] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__11daNpcMoiR_cFv,
	(void*)setParam__11daNpcMoiR_cFv,
	(void*)main__11daNpcMoiR_cFv,
	(void*)ctrlBtk__11daNpcMoiR_cFv,
	(void*)adjustShapeAngle__8daNpcF_cFv,
	(void*)setMtx__8daNpcF_cFv,
	(void*)setMtx2__8daNpcF_cFv,
	(void*)setAttnPos__11daNpcMoiR_cFv,
	(void*)setCollisions__8daNpcF_cFv,
	(void*)setExpressionAnm__11daNpcMoiR_cFib,
	(void*)setExpressionBtp__11daNpcMoiR_cFi,
	(void*)setExpression__11daNpcMoiR_cFif,
	(void*)setMotionAnm__11daNpcMoiR_cFif,
	(void*)setMotion__11daNpcMoiR_cFifi,
	(void*)drawDbgInfo__11daNpcMoiR_cFv,
	(void*)drawOtherMdls__11daNpcMoiR_cFv,
};

/* 80A83CDC-80A83CE8 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80A83CE8-80A83D0C 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80A83290,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80A83288,
};

/* 80A83D0C-80A83D18 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80A83D18-80A83D24 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80A83D24-80A83D30 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80A83D30-80A83D3C 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcF_ActorMngr_c                                   */
SECTION_DATA void* __vt__18daNpcF_ActorMngr_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18daNpcF_ActorMngr_cFv,
};

/* 80A83D3C-80A83D48 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80A83D48-80A83D54 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80A83D54-80A83D60 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcF_Lookat_c                                      */
SECTION_DATA void* __vt__15daNpcF_Lookat_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daNpcF_Lookat_cFv,
};

/* 80A7C16C-80A7C2F0 0184+00 s=1 e=0 z=0  None .text      __ct__11daNpcMoiR_cFv                                        */
//	80A7C184: 80A82D28 (__ct__8daNpcF_cFv)
//	80A7C188: 80A83C94 (__vt__11daNpcMoiR_c)
//	80A7C18C: 80A83C94 (__vt__11daNpcMoiR_c)
//	80A7C198: 802C03C8 (__ct__10Z2CreatureFv)
//	80A7C1A0: 80A83D54 (__vt__15daNpcF_Lookat_c)
//	80A7C1A4: 80A83D54 (__vt__15daNpcF_Lookat_c)
//	80A7C1B0: 80A82AD8 (__ct__4cXyzFv)
//	80A7C1B4: 80A82AD8 (__ct__4cXyzFv)
//	80A7C1B8: 80A82A9C (__dt__4cXyzFv)
//	80A7C1BC: 80A82A9C (__dt__4cXyzFv)
//	80A7C1C8: 80361D60 (__construct_array)
//	80A7C1D0: 80A82A98 (__ct__5csXyzFv)
//	80A7C1D4: 80A82A98 (__ct__5csXyzFv)
//	80A7C1D8: 80A82A5C (__dt__5csXyzFv)
//	80A7C1DC: 80A82A5C (__dt__5csXyzFv)
//	80A7C1E8: 80361D60 (__construct_array)
//	80A7C1F0: 80A82A98 (__ct__5csXyzFv)
//	80A7C1F4: 80A82A98 (__ct__5csXyzFv)
//	80A7C1F8: 80A82A5C (__dt__5csXyzFv)
//	80A7C1FC: 80A82A5C (__dt__5csXyzFv)
//	80A7C208: 80361D60 (__construct_array)
//	80A7C210: 80A82A98 (__ct__5csXyzFv)
//	80A7C214: 80A82A98 (__ct__5csXyzFv)
//	80A7C218: 80A82A5C (__dt__5csXyzFv)
//	80A7C21C: 80A82A5C (__dt__5csXyzFv)
//	80A7C228: 80361D60 (__construct_array)
//	80A7C230: 80A82A98 (__ct__5csXyzFv)
//	80A7C234: 80A82A98 (__ct__5csXyzFv)
//	80A7C238: 80A82A5C (__dt__5csXyzFv)
//	80A7C23C: 80A82A5C (__dt__5csXyzFv)
//	80A7C248: 80361D60 (__construct_array)
//	80A7C250: 80151038 (initialize__15daNpcF_Lookat_cFv)
//	80A7C258: 80A82950 (__ct__18daNpcF_ActorMngr_cFv)
//	80A7C25C: 80A82950 (__ct__18daNpcF_ActorMngr_cFv)
//	80A7C260: 80A82908 (__dt__18daNpcF_ActorMngr_cFv)
//	80A7C264: 80A82908 (__dt__18daNpcF_ActorMngr_cFv)
//	80A7C270: 80361D60 (__construct_array)
//	80A7C27C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80A7C280: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A7C284: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A7C28C: 80A83D48 (__vt__8cM3dGAab)
//	80A7C290: 80A83D48 (__vt__8cM3dGAab)
//	80A7C298: 80A83D3C (__vt__8cM3dGCyl)
//	80A7C29C: 80A83D3C (__vt__8cM3dGCyl)
//	80A7C2A4: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A7C2A8: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A7C2B8: 803AC050 (__vt__8dCcD_Cyl)
//	80A7C2BC: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcMoiR_c::daNpcMoiR_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__ct__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A7C2F0-80A7C338 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80A7C308: 80A83D3C (__vt__8cM3dGCyl)
//	80A7C30C: 80A83D3C (__vt__8cM3dGCyl)
//	80A7C31C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80A7C338-80A7C380 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80A7C350: 80A83D48 (__vt__8cM3dGAab)
//	80A7C354: 80A83D48 (__vt__8cM3dGAab)
//	80A7C364: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80A7C380-80A7C580 0200+00 s=1 e=0 z=0  None .text      __dt__11daNpcMoiR_cFv                                        */
//	80A7C390: 803621D0 (_savegpr_26)
//	80A7C3A0: 80A83C94 (__vt__11daNpcMoiR_c)
//	80A7C3A4: 80A83C94 (__vt__11daNpcMoiR_c)
//	80A7C3B4: 80A83AF8 (l_arcNames)
//	80A7C3B8: 80A83AF8 (l_arcNames)
//	80A7C3BC: 80A83AEC (l_loadRes_list)
//	80A7C3C0: 80A83AEC (l_loadRes_list)
//	80A7C3D8: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80A7C40C: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80A7C418: 803AC050 (__vt__8dCcD_Cyl)
//	80A7C41C: 803AC050 (__vt__8dCcD_Cyl)
//	80A7C43C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A7C440: 803C35A4 (__vt__12cCcD_CylAttr)
//	80A7C458: 80A83D3C (__vt__8cM3dGCyl)
//	80A7C45C: 80A83D3C (__vt__8cM3dGCyl)
//	80A7C46C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A7C470: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80A7C480: 80A83D48 (__vt__8cM3dGAab)
//	80A7C484: 80A83D48 (__vt__8cM3dGAab)
//	80A7C494: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80A7C49C: 80A82908 (__dt__18daNpcF_ActorMngr_cFv)
//	80A7C4A0: 80A82908 (__dt__18daNpcF_ActorMngr_cFv)
//	80A7C4AC: 80361CE8 (__destroy_arr)
//	80A7C4B8: 80A83D54 (__vt__15daNpcF_Lookat_c)
//	80A7C4BC: 80A83D54 (__vt__15daNpcF_Lookat_c)
//	80A7C4C8: 80A82A5C (__dt__5csXyzFv)
//	80A7C4CC: 80A82A5C (__dt__5csXyzFv)
//	80A7C4D8: 80361CE8 (__destroy_arr)
//	80A7C4E0: 80A82A5C (__dt__5csXyzFv)
//	80A7C4E4: 80A82A5C (__dt__5csXyzFv)
//	80A7C4F0: 80361CE8 (__destroy_arr)
//	80A7C4F8: 80A82A5C (__dt__5csXyzFv)
//	80A7C4FC: 80A82A5C (__dt__5csXyzFv)
//	80A7C508: 80361CE8 (__destroy_arr)
//	80A7C510: 80A82A5C (__dt__5csXyzFv)
//	80A7C514: 80A82A5C (__dt__5csXyzFv)
//	80A7C520: 80361CE8 (__destroy_arr)
//	80A7C528: 80A82A9C (__dt__4cXyzFv)
//	80A7C52C: 80A82A9C (__dt__4cXyzFv)
//	80A7C538: 80361CE8 (__destroy_arr)
//	80A7C544: 802C0420 (__dt__10Z2CreatureFv)
//	80A7C550: 80A82ADC (__dt__8daNpcF_cFv)
//	80A7C560: 802CED3C (__dl__FPv)
//	80A7C56C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcMoiR_c::~daNpcMoiR_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A7C580-80A7C978 03F8+00 s=1 e=0 z=0  None .text      Create__11daNpcMoiR_cFv                                      */
//	80A7C590: 803621C8 (_savegpr_24)
//	80A7C598: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7C59C: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7C5B4: 80A7C16C (__ct__11daNpcMoiR_cFv)
//	80A7C5C4: 804061C0 (g_dComIfG_gameInfo)
//	80A7C5C8: 804061C0 (g_dComIfG_gameInfo)
//	80A7C5D8: 80A83840 (struct_80A83840)
//	80A7C5DC: 80A83840 (struct_80A83840)
//	80A7C5E4: 80368994 (strcmp)
//	80A7C5F4: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	80A7C604: 80155634 (daNpcF_chkEvtBit__FUl)
//	80A7C614: 80155634 (daNpcF_chkEvtBit__FUl)
//	80A7C624: 80155634 (daNpcF_chkEvtBit__FUl)
//	80A7C640: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	80A7C664: 80A83840 (struct_80A83840)
//	80A7C668: 80A83840 (struct_80A83840)
//	80A7C670: 80368994 (strcmp)
//	80A7C680: 80155634 (daNpcF_chkEvtBit__FUl)
//	80A7C6A4: 80A83840 (struct_80A83840)
//	80A7C6A8: 80A83840 (struct_80A83840)
//	80A7C6B0: 80368994 (strcmp)
//	80A7C6BC: 804061C0 (g_dComIfG_gameInfo)
//	80A7C6C0: 804061C0 (g_dComIfG_gameInfo)
//	80A7C6CC: 80034860 (isSwitch__12dSv_memBit_cCFi)
//	80A7C70C: 80A83AF8 (l_arcNames)
//	80A7C710: 80A83AF8 (l_arcNames)
//	80A7C714: 80A83AEC (l_loadRes_list)
//	80A7C718: 80A83AEC (l_loadRes_list)
//	80A7C730: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80A7C7AC: 80A7D0CC (createHeapCallBack__11daNpcMoiR_cFP10fopAc_ac_c)
//	80A7C7B0: 80A7D0CC (createHeapCallBack__11daNpcMoiR_cFP10fopAc_ac_c)
//	80A7C7B4: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80A7C7F4: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80A7C80C: 802C0530 (init__10Z2CreatureFP3VecP3VecUcUc)
//	80A7C820: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80A7C84C: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80A7C870: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80A7C894: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80A7C89C: 803B37E0 (mCcDCyl__8daNpcF_c)
//	80A7C8A0: 803B37E0 (mCcDCyl__8daNpcF_c)
//	80A7C8A4: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80A7C938: 80152D84 (setEnvTevColor__8daNpcF_cFv)
//	80A7C940: 80152DE0 (setRoomNo__8daNpcF_cFv)
//	80A7C948: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	80A7C950: 80A7D5C4 (reset__11daNpcMoiR_cFv)
//	80A7C958: 80A7CE7C (Execute__11daNpcMoiR_cFv)
//	80A7C964: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::Create() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/Create__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A7C978-80A7CC8C 0314+00 s=1 e=0 z=0  None .text      CreateHeap__11daNpcMoiR_cFv                                  */
//	80A7C988: 803621D8 (_savegpr_28)
//	80A7C990: 80A83AF8 (l_arcNames)
//	80A7C994: 80A83AF8 (l_arcNames)
//	80A7C9A0: 804061C0 (g_dComIfG_gameInfo)
//	80A7C9A4: 804061C0 (g_dComIfG_gameInfo)
//	80A7C9B8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80A7C9C4: 802CEC4C (__nw__FUl)
//	80A7CA00: 80A83330 (lit_4337)
//	80A7CA04: 80A83330 (lit_4337)
//	80A7CA10: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80A7CA34: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	80A7CA5C: 80A7D0EC (ctrlJointCallBack__11daNpcMoiR_cFP8J3DJointi)
//	80A7CA60: 80A7D0EC (ctrlJointCallBack__11daNpcMoiR_cFP8J3DJointi)
//	80A7CA94: 802CEC4C (__nw__FUl)
//	80A7CAA4: 803CEE60 (__vt__14J3DMaterialAnm)
//	80A7CAA8: 803CEE60 (__vt__14J3DMaterialAnm)
//	80A7CAB4: 80A7CE30 (__ct__14J3DMatColorAnmFv)
//	80A7CAB8: 80A7CE30 (__ct__14J3DMatColorAnmFv)
//	80A7CABC: 80A7CDF4 (__dt__14J3DMatColorAnmFv)
//	80A7CAC0: 80A7CDF4 (__dt__14J3DMatColorAnmFv)
//	80A7CACC: 80361D60 (__construct_array)
//	80A7CAD4: 80A7CDDC (__ct__12J3DTexMtxAnmFv)
//	80A7CAD8: 80A7CDDC (__ct__12J3DTexMtxAnmFv)
//	80A7CADC: 80A7CDA0 (__dt__12J3DTexMtxAnmFv)
//	80A7CAE0: 80A7CDA0 (__dt__12J3DTexMtxAnmFv)
//	80A7CAEC: 80361D60 (__construct_array)
//	80A7CAF4: 80A7CD7C (__ct__11J3DTexNoAnmFv)
//	80A7CAF8: 80A7CD7C (__ct__11J3DTexNoAnmFv)
//	80A7CAFC: 80A7CD34 (__dt__11J3DTexNoAnmFv)
//	80A7CB00: 80A7CD34 (__dt__11J3DTexNoAnmFv)
//	80A7CB0C: 80361D60 (__construct_array)
//	80A7CB14: 80A7CD1C (__ct__14J3DTevColorAnmFv)
//	80A7CB18: 80A7CD1C (__ct__14J3DTevColorAnmFv)
//	80A7CB1C: 80A7CCE0 (__dt__14J3DTevColorAnmFv)
//	80A7CB20: 80A7CCE0 (__dt__14J3DTevColorAnmFv)
//	80A7CB2C: 80361D60 (__construct_array)
//	80A7CB34: 80A7CCC8 (__ct__15J3DTevKColorAnmFv)
//	80A7CB38: 80A7CCC8 (__ct__15J3DTevKColorAnmFv)
//	80A7CB3C: 80A7CC8C (__dt__15J3DTevKColorAnmFv)
//	80A7CB40: 80A7CC8C (__dt__15J3DTevKColorAnmFv)
//	80A7CB4C: 80361D60 (__construct_array)
//	80A7CB54: 8032C320 (initialize__14J3DMaterialAnmFv)
//	80A7CB58: 803B3920 (__vt__15daNpcF_MatAnm_c)
//	80A7CB5C: 803B3920 (__vt__15daNpcF_MatAnm_c)
//	80A7CB68: 80150738 (initialize__15daNpcF_MatAnm_cFv)
//	80A7CB84: 80A83AF8 (l_arcNames)
//	80A7CB88: 80A83AF8 (l_arcNames)
//	80A7CB9C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80A7CBAC: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80A7CC10: 80A83334 (lit_4338)
//	80A7CC14: 80A83334 (lit_4338)
//	80A7CC34: 80A83334 (lit_4338)
//	80A7CC38: 80A83334 (lit_4338)
//	80A7CC58: 80A83334 (lit_4338)
//	80A7CC5C: 80A83334 (lit_4338)
//	80A7CC78: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/CreateHeap__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A7CC8C-80A7CCC8 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv                                    */
//	80A7CCAC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80A7CCC8-80A7CCE0 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevKColorAnm::J3DTevKColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 80A7CCE0-80A7CD1C 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv                                     */
//	80A7CD00: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::~J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80A7CD1C-80A7CD34 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevColorAnm::J3DTevColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 80A7CD34-80A7CD7C 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv                                        */
//	80A7CD4C: 80A83C88 (__vt__11J3DTexNoAnm)
//	80A7CD50: 80A83C88 (__vt__11J3DTexNoAnm)
//	80A7CD60: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::~J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80A7CD7C-80A7CDA0 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv                                        */
//	80A7CD7C: 80A83C88 (__vt__11J3DTexNoAnm)
//	80A7CD80: 80A83C88 (__vt__11J3DTexNoAnm)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexNoAnm::J3DTexNoAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 80A7CDA0-80A7CDDC 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv                                       */
//	80A7CDC0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80A7CDDC-80A7CDF4 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexMtxAnm::J3DTexMtxAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 80A7CDF4-80A7CE30 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv                                     */
//	80A7CE14: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::~J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80A7CE30-80A7CE48 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMatColorAnm::J3DMatColorAnm() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 80A7CE48-80A7CE7C 0034+00 s=1 e=0 z=0  None .text      Delete__11daNpcMoiR_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::Delete() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/Delete__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A7CE7C-80A7CEA0 0024+00 s=2 e=0 z=0  None .text      Execute__11daNpcMoiR_cFv                                     */
//	80A7CE88: 80152014 (execute__8daNpcF_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::Execute() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/Execute__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A7CEA0-80A7CEFC 005C+00 s=1 e=0 z=0  None .text      Draw__11daNpcMoiR_cFv                                        */
//	80A7CED0: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7CED4: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7CEE4: 801522AC (draw__8daNpcF_cFiifP11_GXColorS10i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::Draw() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/Draw__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A7CEFC-80A7D0CC 01D0+00 s=1 e=0 z=0  None .text      ctrlJoint__11daNpcMoiR_cFP8J3DJointP8J3DModel                */
//	80A7CF0C: 803621D8 (_savegpr_28)
//	80A7CF20: 80A83338 (lit_4386)
//	80A7CF24: 80A83338 (lit_4386)
//	80A7CF5C: 803DD470 (now__14mDoMtx_stack_c)
//	80A7CF60: 803DD470 (now__14mDoMtx_stack_c)
//	80A7CF64: 803464B0 (PSMTXCopy)
//	80A7CF68: 803DD470 (now__14mDoMtx_stack_c)
//	80A7CF6C: 803DD470 (now__14mDoMtx_stack_c)
//	80A7CFA0: 803464B0 (PSMTXCopy)
//	80A7CFD0: 803DD470 (now__14mDoMtx_stack_c)
//	80A7CFD4: 803DD470 (now__14mDoMtx_stack_c)
//	80A7CFD8: 803464B0 (PSMTXCopy)
//	80A7D004: 803DD470 (now__14mDoMtx_stack_c)
//	80A7D008: 803DD470 (now__14mDoMtx_stack_c)
//	80A7D00C: 803464B0 (PSMTXCopy)
//	80A7D03C: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7D040: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7D048: 8015337C (setLookatMtx__8daNpcF_cFiPif)
//	80A7D04C: 803DD470 (now__14mDoMtx_stack_c)
//	80A7D050: 803DD470 (now__14mDoMtx_stack_c)
//	80A7D060: 803464B0 (PSMTXCopy)
//	80A7D064: 803DD470 (now__14mDoMtx_stack_c)
//	80A7D068: 803DD470 (now__14mDoMtx_stack_c)
//	80A7D06C: 80434BE4 (mCurrentMtx__6J3DSys)
//	80A7D070: 80434BE4 (mCurrentMtx__6J3DSys)
//	80A7D074: 803464B0 (PSMTXCopy)
//	80A7D0A4: 8000D990 (changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform)
//	80A7D0B8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
asm void daNpcMoiR_c::ctrlJoint(J3DJoint* param_0, J3DModel* param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/ctrlJoint__11daNpcMoiR_cFP8J3DJointP8J3DModel.s"
}
#pragma pop


/* 80A7D0CC-80A7D0EC 0020+00 s=1 e=0 z=0  None .text      createHeapCallBack__11daNpcMoiR_cFP10fopAc_ac_c              */
//	80A7D0D8: 80A7C978 (CreateHeap__11daNpcMoiR_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daNpcMoiR_c::createHeapCallBack(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/createHeapCallBack__11daNpcMoiR_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80A7D0EC-80A7D138 004C+00 s=1 e=0 z=0  None .text      ctrlJointCallBack__11daNpcMoiR_cFP8J3DJointi                 */
//	80A7D104: 80434AC8 (j3dSys)
//	80A7D108: 80434AC8 (j3dSys)
//	80A7D120: 80A7CEFC (ctrlJoint__11daNpcMoiR_cFP8J3DJointP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daNpcMoiR_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/ctrlJointCallBack__11daNpcMoiR_cFP8J3DJointi.s"
}
#pragma pop


/* 80A7D138-80A7D394 025C+00 s=2 e=0 z=0  None .text      setExpressionAnm__11daNpcMoiR_cFib                           */
//	80A7D148: 803621D4 (_savegpr_27)
//	80A7D168: 80A838D0 (l_bckGetParamList)
//	80A7D16C: 80A838D0 (l_bckGetParamList)
//	80A7D188: 80A83AF8 (l_arcNames)
//	80A7D18C: 80A83AF8 (l_arcNames)
//	80A7D194: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A7D1A4: 80A838D0 (l_bckGetParamList)
//	80A7D1A8: 80A838D0 (l_bckGetParamList)
//	80A7D1C0: 80A83B70 (lit_4538)
//	80A7D1C4: 80A83B70 (lit_4538)
//	80A7D338: 80A83330 (lit_4337)
//	80A7D33C: 80A83330 (lit_4337)
//	80A7D350: 80152C80 (setBckAnm__8daNpcF_cFP15J3DAnmTransformfiiib)
//	80A7D380: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  bool False
asm void daNpcMoiR_c::setExpressionAnm(int param_0, bool param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/setExpressionAnm__11daNpcMoiR_cFib.s"
}
#pragma pop


/* 80A7D394-80A7D474 00E0+00 s=1 e=0 z=0  None .text      setExpressionBtp__11daNpcMoiR_cFi                            */
//	80A7D3A4: 803621DC (_savegpr_29)
//	80A7D3B4: 80A83AA4 (l_btpGetParamList)
//	80A7D3B8: 80A83AA4 (l_btpGetParamList)
//	80A7D3C8: 80A83AF8 (l_arcNames)
//	80A7D3CC: 80A83AF8 (l_arcNames)
//	80A7D3D8: 80152B68 (getTexPtrnAnmP__8daNpcF_cFPci)
//	80A7D3E0: 80A83AA4 (l_btpGetParamList)
//	80A7D3E4: 80A83AA4 (l_btpGetParamList)
//	80A7D41C: 80A83330 (lit_4337)
//	80A7D420: 80A83330 (lit_4337)
//	80A7D424: 80152CC4 (setBtpAnm__8daNpcF_cFP16J3DAnmTexPatternP12J3DModelDatafi)
//	80A7D460: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpcMoiR_c::setExpressionBtp(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/setExpressionBtp__11daNpcMoiR_cFi.s"
}
#pragma pop


/* 80A7D474-80A7D5C4 0150+00 s=1 e=0 z=0  None .text      setMotionAnm__11daNpcMoiR_cFif                               */
//	80A7D48C: 803621D4 (_savegpr_27)
//	80A7D498: 80A838B0 (cNullVec__6Z2Calc)
//	80A7D49C: 80A838B0 (cNullVec__6Z2Calc)
//	80A7D4D4: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A7D4F8: 80152BA4 (getTexSRTKeyAnmP__8daNpcF_cFPci)
//	80A7D530: 80A83330 (lit_4337)
//	80A7D534: 80A83330 (lit_4337)
//	80A7D544: 80152C1C (setMcaMorfAnm__8daNpcF_cFP18J3DAnmTransformKeyffiii)
//	80A7D580: 80A83330 (lit_4337)
//	80A7D584: 80A83330 (lit_4337)
//	80A7D58C: 80152D04 (setBtkAnm__8daNpcF_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi)
//	80A7D5B0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
asm void daNpcMoiR_c::setMotionAnm(int param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/setMotionAnm__11daNpcMoiR_cFif.s"
}
#pragma pop


/* 80A7D5C4-80A7D73C 0178+00 s=1 e=0 z=0  None .text      reset__11daNpcMoiR_cFv                                       */
//	80A7D5D4: 803621DC (_savegpr_29)
//	80A7D5DC: 801528C8 (initialize__8daNpcF_cFv)
//	80A7D5E4: 80150738 (initialize__15daNpcF_MatAnm_cFv)
//	80A7D5EC: 80151038 (initialize__15daNpcF_Lookat_cFv)
//	80A7D600: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
//	80A7D620: 803A2180 (__ptmf_null)
//	80A7D624: 803A2180 (__ptmf_null)
//	80A7D6EC: 80A83334 (lit_4338)
//	80A7D6F0: 80A83334 (lit_4338)
//	80A7D720: 80A7D73C (setWaitAction__11daNpcMoiR_cFv)
//	80A7D728: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::reset() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/reset__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A7D73C-80A7D934 01F8+00 s=1 e=0 z=0  None .text      setWaitAction__11daNpcMoiR_cFv                               */
//	80A7D750: 80A838B0 (cNullVec__6Z2Calc)
//	80A7D754: 80A838B0 (cNullVec__6Z2Calc)
//	80A7D7A4: 80362018 (__ptmf_test)
//	80A7D7BC: 80362084 (__ptmf_scall)
//	80A7D7E8: 80362018 (__ptmf_test)
//	80A7D800: 80362084 (__ptmf_scall)
//	80A7D830: 80362018 (__ptmf_test)
//	80A7D848: 80362084 (__ptmf_scall)
//	80A7D874: 80362018 (__ptmf_test)
//	80A7D88C: 80362084 (__ptmf_scall)
//	80A7D8BC: 80362018 (__ptmf_test)
//	80A7D8D4: 80362084 (__ptmf_scall)
//	80A7D900: 80362018 (__ptmf_test)
//	80A7D918: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::setWaitAction() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/setWaitAction__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A7D934-80A7DD94 0460+00 s=1 e=0 z=0  None .text      wait_type0__11daNpcMoiR_cFPv                                 */
//	80A7D944: 803621D8 (_savegpr_28)
//	80A7D94C: 80A838B0 (cNullVec__6Z2Calc)
//	80A7D950: 80A838B0 (cNullVec__6Z2Calc)
//	80A7D954: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7D958: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7D9D4: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7DA00: 804061C0 (g_dComIfG_gameInfo)
//	80A7DA04: 804061C0 (g_dComIfG_gameInfo)
//	80A7DA0C: 801539F0 (chkActorInSight__8daNpcF_cFP10fopAc_ac_cf)
//	80A7DA1C: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A7DA2C: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7DA48: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A7DA64: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A7DA7C: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A7DA88: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A7DAC0: 804061C0 (g_dComIfG_gameInfo)
//	80A7DAC4: 804061C0 (g_dComIfG_gameInfo)
//	80A7DACC: 801539F0 (chkActorInSight__8daNpcF_cFP10fopAc_ac_cf)
//	80A7DADC: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A7DAEC: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7DB08: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A7DB24: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A7DB3C: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A7DB48: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A7DB60: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7DB98: 804061C0 (g_dComIfG_gameInfo)
//	80A7DB9C: 804061C0 (g_dComIfG_gameInfo)
//	80A7DBE0: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80A7DC10: 80362018 (__ptmf_test)
//	80A7DC28: 80362084 (__ptmf_scall)
//	80A7DC54: 80362018 (__ptmf_test)
//	80A7DC6C: 80362084 (__ptmf_scall)
//	80A7DC88: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80A7DCB8: 80362018 (__ptmf_test)
//	80A7DCD0: 80362084 (__ptmf_scall)
//	80A7DCFC: 80362018 (__ptmf_test)
//	80A7DD14: 80362084 (__ptmf_scall)
//	80A7DD74: 8015387C (orderEvent__8daNpcF_cFiPcUsUsUcUs)
//	80A7DD80: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcMoiR_c::wait_type0(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/wait_type0__11daNpcMoiR_cFPv.s"
}
#pragma pop


/* 80A7DD94-80A7DDD8 0044+00 s=1 e=0 z=0  None .text      setMotion__11daNpcMoiR_cFifi                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
//  int False
asm void daNpcMoiR_c::setMotion(int param_0, f32 param_1, int param_2) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/setMotion__11daNpcMoiR_cFifi.s"
}
#pragma pop


/* 80A7DDD8-80A7DE04 002C+00 s=1 e=0 z=0  None .text      setExpression__11daNpcMoiR_cFif                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
asm void daNpcMoiR_c::setExpression(int param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/setExpression__11daNpcMoiR_cFif.s"
}
#pragma pop


/* 80A7DE04-80A7E668 0864+00 s=2 e=0 z=0  None .text      wait_type1__11daNpcMoiR_cFPv                                 */
//	80A7DE1C: 803621D4 (_savegpr_27)
//	80A7DE24: 80A838B0 (cNullVec__6Z2Calc)
//	80A7DE28: 80A838B0 (cNullVec__6Z2Calc)
//	80A7DE2C: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7DE30: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7DE94: 80A83108 (func_80A83108)
//	80A7DEBC: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7DEE8: 804061C0 (g_dComIfG_gameInfo)
//	80A7DEEC: 804061C0 (g_dComIfG_gameInfo)
//	80A7DEF4: 801539F0 (chkActorInSight__8daNpcF_cFP10fopAc_ac_cf)
//	80A7DF04: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A7DF14: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7DF30: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A7DF4C: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A7DF64: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A7DF70: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A7DFA8: 804061C0 (g_dComIfG_gameInfo)
//	80A7DFAC: 804061C0 (g_dComIfG_gameInfo)
//	80A7DFB4: 801539F0 (chkActorInSight__8daNpcF_cFP10fopAc_ac_cf)
//	80A7DFC4: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A7DFD4: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7DFF0: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A7E00C: 80153BDC (chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci)
//	80A7E024: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A7E030: 801506E0 (remove__18daNpcF_ActorMngr_cFv)
//	80A7E048: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7E12C: 80362048 (__ptmf_cmpr)
//	80A7E20C: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A7E2A0: 80A83108 (func_80A83108)
//	80A7E2F4: 80A83108 (func_80A83108)
//	80A7E328: 804061C0 (g_dComIfG_gameInfo)
//	80A7E32C: 804061C0 (g_dComIfG_gameInfo)
//	80A7E348: 8036C780 (pow)
//	80A7E354: 804061C0 (g_dComIfG_gameInfo)
//	80A7E358: 804061C0 (g_dComIfG_gameInfo)
//	80A7E360: 8001AA94 (fopAcM_searchActorDistanceXZ2__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A7E390: 80362018 (__ptmf_test)
//	80A7E3A8: 80362084 (__ptmf_scall)
//	80A7E3D4: 80362018 (__ptmf_test)
//	80A7E3EC: 80362084 (__ptmf_scall)
//	80A7E3FC: 80155634 (daNpcF_chkEvtBit__FUl)
//	80A7E40C: 804061C0 (g_dComIfG_gameInfo)
//	80A7E410: 804061C0 (g_dComIfG_gameInfo)
//	80A7E418: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A7E430: 80155674 (daNpcF_onEvtBit__FUl)
//	80A7E438: 80155734 (daNpcF_offTmpBit__FUl)
//	80A7E440: 80155734 (daNpcF_offTmpBit__FUl)
//	80A7E448: 80155734 (daNpcF_offTmpBit__FUl)
//	80A7E450: 80155734 (daNpcF_offTmpBit__FUl)
//	80A7E458: 80155734 (daNpcF_offTmpBit__FUl)
//	80A7E464: 804061C0 (g_dComIfG_gameInfo)
//	80A7E468: 804061C0 (g_dComIfG_gameInfo)
//	80A7E4AC: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80A7E4DC: 80362018 (__ptmf_test)
//	80A7E4F4: 80362084 (__ptmf_scall)
//	80A7E520: 80362018 (__ptmf_test)
//	80A7E538: 80362084 (__ptmf_scall)
//	80A7E554: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80A7E584: 80362018 (__ptmf_test)
//	80A7E59C: 80362084 (__ptmf_scall)
//	80A7E5C8: 80362018 (__ptmf_test)
//	80A7E5E0: 80362084 (__ptmf_scall)
//	80A7E640: 8015387C (orderEvent__8daNpcF_cFiPcUsUsUcUs)
//	80A7E654: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcMoiR_c::wait_type1(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/wait_type1__11daNpcMoiR_cFPv.s"
}
#pragma pop


/* 80A7E668-80A7E8C0 0258+00 s=1 e=0 z=0  None .text      wait_type2__11daNpcMoiR_cFPv                                 */
//	80A7E680: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7E684: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7E6F4: 804061C0 (g_dComIfG_gameInfo)
//	80A7E6F8: 804061C0 (g_dComIfG_gameInfo)
//	80A7E700: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A7E750: 801556B4 (daNpcF_chkTmpBit__FUl)
//	80A7E794: 80154250 (setAngle__8daNpcF_cFs)
//	80A7E7AC: 801556B4 (daNpcF_chkTmpBit__FUl)
//	80A7E808: 801556B4 (daNpcF_chkTmpBit__FUl)
//	80A7E814: 80A83C20 (lit_5184)
//	80A7E818: 80A83C20 (lit_5184)
//	80A7E840: 80362018 (__ptmf_test)
//	80A7E858: 80362084 (__ptmf_scall)
//	80A7E884: 80362018 (__ptmf_test)
//	80A7E89C: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcMoiR_c::wait_type2(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/wait_type2__11daNpcMoiR_cFPv.s"
}
#pragma pop


/* 80A7E8C0-80A7EFBC 06FC+00 s=2 e=0 z=0  None .text      talk__11daNpcMoiR_cFPv                                       */
//	80A7E8D0: 803621D4 (_savegpr_27)
//	80A7E8D8: 80A838B0 (cNullVec__6Z2Calc)
//	80A7E8DC: 80A838B0 (cNullVec__6Z2Calc)
//	80A7E8E0: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7E8E4: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7E91C: 80153D1C (initTalk__8daNpcF_cFiPP10fopAc_ac_c)
//	80A7E960: 804061C0 (g_dComIfG_gameInfo)
//	80A7E964: 804061C0 (g_dComIfG_gameInfo)
//	80A7E96C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A7E990: 80153D84 (talkProc__8daNpcF_cFPiiPP10fopAc_ac_c)
//	80A7E9A0: 804061C0 (g_dComIfG_gameInfo)
//	80A7E9A4: 804061C0 (g_dComIfG_gameInfo)
//	80A7E9AC: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A7E9C0: 8024A528 (getEventId__10dMsgFlow_cFPi)
//	80A7E9EC: 8001BBE8 (fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz)
//	80A7EA04: 804061C0 (g_dComIfG_gameInfo)
//	80A7EA08: 804061C0 (g_dComIfG_gameInfo)
//	80A7EA14: 80A83840 (struct_80A83840)
//	80A7EA18: 80A83840 (struct_80A83840)
//	80A7EA24: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	80A7EA34: 80042518 (reset__14dEvt_control_cFPv)
//	80A7EA4C: 8001B5E4 (fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs)
//	80A7EAA4: 80153954 (changeEvent__8daNpcF_cFPcPcUsUs)
//	80A7EAF4: 80362018 (__ptmf_test)
//	80A7EB0C: 80362084 (__ptmf_scall)
//	80A7EB38: 80362018 (__ptmf_test)
//	80A7EB50: 80362084 (__ptmf_scall)
//	80A7EB80: 80362018 (__ptmf_test)
//	80A7EB98: 80362084 (__ptmf_scall)
//	80A7EBC4: 80362018 (__ptmf_test)
//	80A7EBDC: 80362084 (__ptmf_scall)
//	80A7EC0C: 80362018 (__ptmf_test)
//	80A7EC24: 80362084 (__ptmf_scall)
//	80A7EC50: 80362018 (__ptmf_test)
//	80A7EC68: 80362084 (__ptmf_scall)
//	80A7EC90: 80153718 (ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci)
//	80A7ED74: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A7EE10: 80362048 (__ptmf_cmpr)
//	80A7EEF0: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A7EF90: 804061C0 (g_dComIfG_gameInfo)
//	80A7EF94: 804061C0 (g_dComIfG_gameInfo)
//	80A7EF9C: 80042468 (reset__14dEvt_control_cFv)
//	80A7EFA8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcMoiR_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/talk__11daNpcMoiR_cFPv.s"
}
#pragma pop


/* 80A7EFBC-80A7F40C 0450+00 s=2 e=0 z=0  None .text      multiTalk__11daNpcMoiR_cFPv                                  */
//	80A7EFCC: 803621DC (_savegpr_29)
//	80A7EFD4: 80A838B0 (cNullVec__6Z2Calc)
//	80A7EFD8: 80A838B0 (cNullVec__6Z2Calc)
//	80A7EFE0: 80A837C4 (lit_5306)
//	80A7EFE4: 80A837C4 (lit_5306)
//	80A7F010: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7F01C: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7F028: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A7F034: 804061C0 (g_dComIfG_gameInfo)
//	80A7F038: 804061C0 (g_dComIfG_gameInfo)
//	80A7F0A4: 80153D1C (initTalk__8daNpcF_cFiPP10fopAc_ac_c)
//	80A7F0DC: 80153D84 (talkProc__8daNpcF_cFPiiPP10fopAc_ac_c)
//	80A7F134: 80362018 (__ptmf_test)
//	80A7F14C: 80362084 (__ptmf_scall)
//	80A7F178: 80362018 (__ptmf_test)
//	80A7F190: 80362084 (__ptmf_scall)
//	80A7F1C0: 80362018 (__ptmf_test)
//	80A7F1D8: 80362084 (__ptmf_scall)
//	80A7F204: 80362018 (__ptmf_test)
//	80A7F21C: 80362084 (__ptmf_scall)
//	80A7F24C: 80362018 (__ptmf_test)
//	80A7F264: 80362084 (__ptmf_scall)
//	80A7F290: 80362018 (__ptmf_test)
//	80A7F2A8: 80362084 (__ptmf_scall)
//	80A7F2D0: 80153718 (ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci)
//	80A7F2E4: 80A83790 (lit_4960)
//	80A7F2E8: 80A83790 (lit_4960)
//	80A7F304: 80A83790 (lit_4960)
//	80A7F308: 80A83790 (lit_4960)
//	80A7F35C: 80A83790 (lit_4960)
//	80A7F360: 80A83790 (lit_4960)
//	80A7F380: 80A83790 (lit_4960)
//	80A7F384: 80A83790 (lit_4960)
//	80A7F3A4: 80A83790 (lit_4960)
//	80A7F3A8: 80A83790 (lit_4960)
//	80A7F3C8: 80A83790 (lit_4960)
//	80A7F3CC: 80A83790 (lit_4960)
//	80A7F3E0: 804061C0 (g_dComIfG_gameInfo)
//	80A7F3E4: 804061C0 (g_dComIfG_gameInfo)
//	80A7F3EC: 80042468 (reset__14dEvt_control_cFv)
//	80A7F3F8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcMoiR_c::multiTalk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/multiTalk__11daNpcMoiR_cFPv.s"
}
#pragma pop


/* 80A7F40C-80A7F9AC 05A0+00 s=2 e=0 z=0  None .text      fight__11daNpcMoiR_cFPv                                      */
//	80A7F424: 803621D4 (_savegpr_27)
//	80A7F42C: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7F430: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7F500: 804061C0 (g_dComIfG_gameInfo)
//	80A7F504: 804061C0 (g_dComIfG_gameInfo)
//	80A7F50C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A7F590: 80A83BC0 (lit_4762)
//	80A7F594: 80A83BC0 (lit_4762)
//	80A7F5B8: 80362048 (__ptmf_cmpr)
//	80A7F698: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A7F71C: 80A83108 (func_80A83108)
//	80A7F788: 80A83108 (func_80A83108)
//	80A7F844: 80A83108 (func_80A83108)
//	80A7F870: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80A7F888: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80A7F8BC: 804061C0 (g_dComIfG_gameInfo)
//	80A7F8C0: 804061C0 (g_dComIfG_gameInfo)
//	80A7F8DC: 8036C780 (pow)
//	80A7F8EC: 8001AA94 (fopAcM_searchActorDistanceXZ2__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A7F8F8: 80A83C2C (lit_5387)
//	80A7F8FC: 80A83C2C (lit_5387)
//	80A7F924: 80362018 (__ptmf_test)
//	80A7F93C: 80362084 (__ptmf_scall)
//	80A7F968: 80362018 (__ptmf_test)
//	80A7F980: 80362084 (__ptmf_scall)
//	80A7F998: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcMoiR_c::fight(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/fight__11daNpcMoiR_cFPv.s"
}
#pragma pop


/* 80A7F9AC-80A7FEE8 053C+00 s=2 e=0 z=0  None .text      demo__11daNpcMoiR_cFPv                                       */
//	80A7F9BC: 803621D4 (_savegpr_27)
//	80A7F9C4: 80A838B0 (cNullVec__6Z2Calc)
//	80A7F9C8: 80A838B0 (cNullVec__6Z2Calc)
//	80A7F9F4: 80A83790 (lit_4960)
//	80A7F9F8: 80A83790 (lit_4960)
//	80A7FA14: 80A83790 (lit_4960)
//	80A7FA18: 80A83790 (lit_4960)
//	80A7FA38: 804061C0 (g_dComIfG_gameInfo)
//	80A7FA3C: 804061C0 (g_dComIfG_gameInfo)
//	80A7FA6C: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80A7FA98: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80A7FAC8: 80362084 (__ptmf_scall)
//	80A7FAE0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80A7FB04: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80A7FB14: 80042468 (reset__14dEvt_control_cFv)
//	80A7FB74: 80362018 (__ptmf_test)
//	80A7FB8C: 80362084 (__ptmf_scall)
//	80A7FBB8: 80362018 (__ptmf_test)
//	80A7FBD0: 80362084 (__ptmf_scall)
//	80A7FC00: 80362018 (__ptmf_test)
//	80A7FC18: 80362084 (__ptmf_scall)
//	80A7FC44: 80362018 (__ptmf_test)
//	80A7FC5C: 80362084 (__ptmf_scall)
//	80A7FC8C: 80362018 (__ptmf_test)
//	80A7FCA4: 80362084 (__ptmf_scall)
//	80A7FCD0: 80362018 (__ptmf_test)
//	80A7FCE8: 80362084 (__ptmf_scall)
//	80A7FD50: 80362018 (__ptmf_test)
//	80A7FD68: 80362084 (__ptmf_scall)
//	80A7FD94: 80362018 (__ptmf_test)
//	80A7FDAC: 80362084 (__ptmf_scall)
//	80A7FDDC: 80362018 (__ptmf_test)
//	80A7FDF4: 80362084 (__ptmf_scall)
//	80A7FE20: 80362018 (__ptmf_test)
//	80A7FE38: 80362084 (__ptmf_scall)
//	80A7FE68: 80362018 (__ptmf_test)
//	80A7FE80: 80362084 (__ptmf_scall)
//	80A7FEAC: 80362018 (__ptmf_test)
//	80A7FEC4: 80362084 (__ptmf_scall)
//	80A7FED4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcMoiR_c::demo(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/demo__11daNpcMoiR_cFPv.s"
}
#pragma pop


/* 80A7FEE8-80A802C4 03DC+00 s=1 e=0 z=0  None .text      leave__11daNpcMoiR_cFPv                                      */
//	80A7FEF8: 803621DC (_savegpr_29)
//	80A7FF00: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7FF04: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A7FF98: 80019A2C (fopAcM_SearchByName__FsPP10fopAc_ac_c)
//	80A7FFC8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80A80044: 80A83BC0 (lit_4762)
//	80A80048: 80A83BC0 (lit_4762)
//	80A8006C: 80362048 (__ptmf_cmpr)
//	80A8014C: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A801AC: 8034739C (PSVECSquareDistance)
//	80A8021C: 80450AE0 (__float_nan)
//	80A80220: 80450AE0 (__float_nan)
//	80A8028C: 80450AE0 (__float_nan)
//	80A80290: 80450AE0 (__float_nan)
//	80A802A4: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80A802B0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daNpcMoiR_c::leave(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/leave__11daNpcMoiR_cFPv.s"
}
#pragma pop


/* 80A802C4-80A803A0 00DC+00 s=1 e=0 z=0  None .text      EvCut_Introduction__11daNpcMoiR_cFi                          */
//	80A802D4: 803621D8 (_savegpr_28)
//	80A802E0: 804061C0 (g_dComIfG_gameInfo)
//	80A802E4: 804061C0 (g_dComIfG_gameInfo)
//	80A802F0: 80A83840 (struct_80A83840)
//	80A802F4: 80A83840 (struct_80A83840)
//	80A80300: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	80A8031C: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80A8038C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpcMoiR_c::EvCut_Introduction(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/EvCut_Introduction__11daNpcMoiR_cFi.s"
}
#pragma pop


/* 80A803A0-80A8081C 047C+00 s=1 e=0 z=0  None .text      EvCut_Appear__11daNpcMoiR_cFi                                */
//	80A803B0: 803621D0 (_savegpr_26)
//	80A803BC: 80A838B0 (cNullVec__6Z2Calc)
//	80A803C0: 80A838B0 (cNullVec__6Z2Calc)
//	80A803C4: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A803C8: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A803CC: 804061C0 (g_dComIfG_gameInfo)
//	80A803D0: 804061C0 (g_dComIfG_gameInfo)
//	80A803DC: 80047F5C (getMyNowCutName__16dEvent_manager_cFi)
//	80A803EC: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80A80428: 80153D1C (initTalk__8daNpcF_cFiPP10fopAc_ac_c)
//	80A8044C: 80153718 (ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci)
//	80A80568: 80153D84 (talkProc__8daNpcF_cFPiiPP10fopAc_ac_c)
//	80A80580: 804061C0 (g_dComIfG_gameInfo)
//	80A80584: 804061C0 (g_dComIfG_gameInfo)
//	80A8058C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A805B0: 80153D84 (talkProc__8daNpcF_cFPiiPP10fopAc_ac_c)
//	80A805F8: 80153954 (changeEvent__8daNpcF_cFPcPcUsUs)
//	80A8060C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A806A8: 80362048 (__ptmf_cmpr)
//	80A80788: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A80808: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpcMoiR_c::EvCut_Appear(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/EvCut_Appear__11daNpcMoiR_cFi.s"
}
#pragma pop


/* 80A8081C-80A81044 0828+00 s=1 e=0 z=0  None .text      EvCut_Appear2__11daNpcMoiR_cFi                               */
//	80A8082C: 803621D4 (_savegpr_27)
//	80A80838: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A8083C: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A80840: 804061C0 (g_dComIfG_gameInfo)
//	80A80844: 804061C0 (g_dComIfG_gameInfo)
//	80A80850: 80047F5C (getMyNowCutName__16dEvent_manager_cFi)
//	80A80860: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	80A808CC: 80153D1C (initTalk__8daNpcF_cFiPP10fopAc_ac_c)
//	80A80980: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80A80984: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80A8098C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80A809C0: 80153718 (ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci)
//	80A80ADC: 804061C0 (g_dComIfG_gameInfo)
//	80A80AE0: 804061C0 (g_dComIfG_gameInfo)
//	80A80AE8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A80B0C: 80153D84 (talkProc__8daNpcF_cFPiiPP10fopAc_ac_c)
//	80A80B28: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80A80BA4: 80A83BC0 (lit_4762)
//	80A80BA8: 80A83BC0 (lit_4762)
//	80A80BCC: 80362048 (__ptmf_cmpr)
//	80A80CAC: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A80D9C: 80A83BC0 (lit_4762)
//	80A80DA0: 80A83BC0 (lit_4762)
//	80A80DC4: 80362048 (__ptmf_cmpr)
//	80A80EA8: 80153EF4 (turn__8daNpcF_cFsfi)
//	80A80F58: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80A80F70: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80A80F74: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80A80FA0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80A80FC8: 80A830EC (func_80A830EC)
//	80A80FEC: 80153D84 (talkProc__8daNpcF_cFPiiPP10fopAc_ac_c)
//	80A81000: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80A81004: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80A8100C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80A81030: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daNpcMoiR_c::EvCut_Appear2(int param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/EvCut_Appear2__11daNpcMoiR_cFi.s"
}
#pragma pop


/* 80A81044-80A81064 0020+00 s=1 e=0 z=0  None .text      daNpcMoiR_Create__FPv                                        */
//	80A81050: 80A7C580 (Create__11daNpcMoiR_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcMoiR_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/daNpcMoiR_Create__FPv.s"
}
#pragma pop


/* 80A81064-80A81084 0020+00 s=1 e=0 z=0  None .text      daNpcMoiR_Delete__FPv                                        */
//	80A81070: 80A7CE48 (Delete__11daNpcMoiR_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcMoiR_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/daNpcMoiR_Delete__FPv.s"
}
#pragma pop


/* 80A81084-80A810A4 0020+00 s=1 e=0 z=0  None .text      daNpcMoiR_Execute__FPv                                       */
//	80A81090: 80A7CE7C (Execute__11daNpcMoiR_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcMoiR_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/daNpcMoiR_Execute__FPv.s"
}
#pragma pop


/* 80A810A4-80A810C4 0020+00 s=1 e=0 z=0  None .text      daNpcMoiR_Draw__FPv                                          */
//	80A810B0: 80A7CEA0 (Draw__11daNpcMoiR_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daNpcMoiR_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/daNpcMoiR_Draw__FPv.s"
}
#pragma pop


/* 80A810C4-80A810CC 0008+00 s=1 e=0 z=0  None .text      daNpcMoiR_IsDelete__FPv                                      */
// True False
//  bool False
//  void* False
// 	 void False
static bool daNpcMoiR_IsDelete(void* param_0) {
	return true;
}


/* 80A810CC-80A810FC 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs                                     */
//	80A810E8: 8032AF50 (getTexNo__16J3DAnmTexPatternCFUsPUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16* False
// 	 u16 False
asm void J3DTexNoAnm::calc(u16* param_0) const {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* 80A810FC-80A81274 0178+00 s=1 e=0 z=0  None .text      setParam__11daNpcMoiR_cFv                                    */
//	80A81114: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A81128: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80A8112C: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80A81134: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80A81140: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A81148: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A8115C: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80A81160: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80A81168: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80A81174: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A8117C: 801506EC (getActorP__18daNpcF_ActorMngr_cFv)
//	80A81190: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80A81194: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	80A8119C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80A811A8: 801506BC (entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c)
//	80A811CC: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	80A811E8: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	80A811F8: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A811FC: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A81208: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	80A8121C: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A81220: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A8122C: 80154278 (getDistTableIdx__8daNpcF_cFii)
//	80A81240: 804061C0 (g_dComIfG_gameInfo)
//	80A81244: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::setParam() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/setParam__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A81274-80A815D4 0360+00 s=1 e=0 z=0  None .text      main__11daNpcMoiR_cFv                                        */
//	80A8128C: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A81290: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A81298: 80362018 (__ptmf_test)
//	80A812B0: 80362084 (__ptmf_scall)
//	80A812B8: 804061C0 (g_dComIfG_gameInfo)
//	80A812BC: 804061C0 (g_dComIfG_gameInfo)
//	80A812EC: 800436EC (setPtI_Id__14dEvt_control_cFUi)
//	80A815A4: 80153150 (playExpressionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData)
//	80A815AC: 80A818B4 (playMotion__11daNpcMoiR_cFv)
//	80A815B4: 80A815D4 (checkHeadGear__11daNpcMoiR_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::main() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/main__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A815D4-80A818B4 02E0+00 s=1 e=0 z=0  None .text      checkHeadGear__11daNpcMoiR_cFv                               */
//	80A815E4: 803621D4 (_savegpr_27)
//	80A815EC: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A815F0: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A81610: 80A83AF8 (l_arcNames)
//	80A81614: 80A83AF8 (l_arcNames)
//	80A8161C: 80A838D0 (l_bckGetParamList)
//	80A81620: 80A838D0 (l_bckGetParamList)
//	80A81628: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A81640: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80A81678: 80A838D0 (l_bckGetParamList)
//	80A8167C: 80A838D0 (l_bckGetParamList)
//	80A81684: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A816BC: 80A838D0 (l_bckGetParamList)
//	80A816C0: 80A838D0 (l_bckGetParamList)
//	80A816C8: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A81700: 80A838D0 (l_bckGetParamList)
//	80A81704: 80A838D0 (l_bckGetParamList)
//	80A8170C: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A81724: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80A8175C: 80A83AF8 (l_arcNames)
//	80A81760: 80A83AF8 (l_arcNames)
//	80A81768: 80A838D0 (l_bckGetParamList)
//	80A8176C: 80A838D0 (l_bckGetParamList)
//	80A81774: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A8178C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80A817C4: 80A838D0 (l_bckGetParamList)
//	80A817C8: 80A838D0 (l_bckGetParamList)
//	80A817D0: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A81808: 80A838D0 (l_bckGetParamList)
//	80A8180C: 80A838D0 (l_bckGetParamList)
//	80A81814: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A8184C: 80A838D0 (l_bckGetParamList)
//	80A81850: 80A838D0 (l_bckGetParamList)
//	80A81858: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A81870: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80A818A0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::checkHeadGear() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/checkHeadGear__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A818B4-80A8210C 0858+00 s=1 e=0 z=0  None .text      playMotion__11daNpcMoiR_cFv                                  */
//	80A818C0: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A818C4: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A820F8: 80153264 (playMotionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::playMotion() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/playMotion__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A8210C-80A821E0 00D4+00 s=1 e=0 z=0  None .text      ctrlBtk__11daNpcMoiR_cFv                                     */
//	80A8212C: 80A83ABC (l_btkGetParamList)
//	80A82130: 80A83ABC (l_btkGetParamList)
//	80A8213C: 80A83AF8 (l_arcNames)
//	80A82140: 80A83AF8 (l_arcNames)
//	80A8214C: 80152BA4 (getTexSRTKeyAnmP__8daNpcF_cFPci)
//	80A82164: 80439A20 (sincosTable___5JMath)
//	80A82168: 80439A20 (sincosTable___5JMath)
//	80A82170: 80A83790 (lit_4960)
//	80A82174: 80A83790 (lit_4960)
//	80A82178: 80A8381C (lit_6069)
//	80A8217C: 80A8381C (lit_6069)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::ctrlBtk() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/ctrlBtk__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A821E0-80A825A0 03C0+00 s=1 e=0 z=0  None .text      setAttnPos__11daNpcMoiR_cFv                                  */
//	80A821F0: 803621DC (_savegpr_29)
//	80A821F8: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A821FC: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A82254: 80A825A0 (lookat__11daNpcMoiR_cFv)
//	80A822AC: 803DD470 (now__14mDoMtx_stack_c)
//	80A822B0: 803DD470 (now__14mDoMtx_stack_c)
//	80A822B4: 803464B0 (PSMTXCopy)
//	80A822B8: 803DD470 (now__14mDoMtx_stack_c)
//	80A822BC: 803DD470 (now__14mDoMtx_stack_c)
//	80A822E4: 80346D6C (PSMTXMultVec)
//	80A822F0: 803DD470 (now__14mDoMtx_stack_c)
//	80A822F4: 803DD470 (now__14mDoMtx_stack_c)
//	80A82300: 80346D6C (PSMTXMultVec)
//	80A8230C: 80270C74 (cLib_targetAngleX__FPC4cXyzPC4cXyz)
//	80A8231C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80A82338: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80A82368: 80267674 (cM_atan2s__Fff)
//	80A82394: 80347138 (PSVECSquareMag)
//	80A82404: 80450AE0 (__float_nan)
//	80A82408: 80450AE0 (__float_nan)
//	80A82474: 80450AE0 (__float_nan)
//	80A82478: 80450AE0 (__float_nan)
//	80A82488: 80267674 (cM_atan2s__Fff)
//	80A82508: 803DD470 (now__14mDoMtx_stack_c)
//	80A8250C: 803DD470 (now__14mDoMtx_stack_c)
//	80A82510: 803464B0 (PSMTXCopy)
//	80A8253C: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80A8254C: 8026F1F8 (SetH__8cM3dGCylFf)
//	80A82570: 8026F200 (SetR__8cM3dGCylFf)
//	80A82574: 804061C0 (g_dComIfG_gameInfo)
//	80A82578: 804061C0 (g_dComIfG_gameInfo)
//	80A82584: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80A8258C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/setAttnPos__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A825A0-80A82878 02D8+00 s=1 e=0 z=0  None .text      lookat__11daNpcMoiR_cFv                                      */
//	80A825F0: 803621C8 (_savegpr_24)
//	80A825F8: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A825FC: 80A832AC (m__17daNpcMoiR_Param_c)
//	80A826E4: 804061C0 (g_dComIfG_gameInfo)
//	80A826E8: 804061C0 (g_dComIfG_gameInfo)
//	80A82720: 80A83AF8 (l_arcNames)
//	80A82724: 80A83AF8 (l_arcNames)
//	80A8272C: 80A838D0 (l_bckGetParamList)
//	80A82730: 80A838D0 (l_bckGetParamList)
//	80A82738: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A8274C: 80A838D0 (l_bckGetParamList)
//	80A82750: 80A838D0 (l_bckGetParamList)
//	80A82758: 80152B2C (getTrnsfrmKeyAnmP__8daNpcF_cFPci)
//	80A827FC: 801510B8 (setParam__15daNpcF_Lookat_cFffffffffffffsP4cXyz)
//	80A8281C: 80151350 (calc__15daNpcF_Lookat_cFP10fopAc_ac_cPA4_fPP5csXyziii)
//	80A82864: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::lookat() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/lookat__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A82878-80A82900 0088+00 s=1 e=0 z=0  None .text      drawOtherMdls__11daNpcMoiR_cFv                               */
//	80A82898: 8042CA54 (g_env_light)
//	80A8289C: 8042CA54 (g_env_light)
//	80A828AC: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80A828C4: 803DD470 (now__14mDoMtx_stack_c)
//	80A828C8: 803DD470 (now__14mDoMtx_stack_c)
//	80A828CC: 803464B0 (PSMTXCopy)
//	80A828D0: 803DD470 (now__14mDoMtx_stack_c)
//	80A828D4: 803DD470 (now__14mDoMtx_stack_c)
//	80A828E0: 803464B0 (PSMTXCopy)
//	80A828E8: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daNpcMoiR_c::drawOtherMdls() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/drawOtherMdls__11daNpcMoiR_cFv.s"
}
#pragma pop


/* 80A82900-80A82908 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__11daNpcMoiR_cFv                                 */
// True False
//  bool False
bool daNpcMoiR_c::drawDbgInfo() {
	return false;
}


/* 80A82908-80A82950 0048+00 s=5 e=0 z=0  None .text      __dt__18daNpcF_ActorMngr_cFv                                 */
//	80A82920: 80A83D30 (__vt__18daNpcF_ActorMngr_c)
//	80A82924: 80A83D30 (__vt__18daNpcF_ActorMngr_c)
//	80A82934: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_ActorMngr_c::~daNpcF_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__18daNpcF_ActorMngr_cFv.s"
}
#pragma pop


/* 80A82950-80A8298C 003C+00 s=2 e=0 z=0  None .text      __ct__18daNpcF_ActorMngr_cFv                                 */
//	80A82964: 80A83D30 (__vt__18daNpcF_ActorMngr_c)
//	80A82968: 80A83D30 (__vt__18daNpcF_ActorMngr_c)
//	80A82970: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_ActorMngr_c::daNpcF_ActorMngr_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__ct__18daNpcF_ActorMngr_cFv.s"
}
#pragma pop


/* 80A8298C-80A82A5C 00D0+00 s=1 e=0 z=0  None .text      __dt__15daNpcF_Lookat_cFv                                    */
//	80A829AC: 80A83D54 (__vt__15daNpcF_Lookat_c)
//	80A829B0: 80A83D54 (__vt__15daNpcF_Lookat_c)
//	80A829BC: 80A82A5C (__dt__5csXyzFv)
//	80A829C0: 80A82A5C (__dt__5csXyzFv)
//	80A829CC: 80361CE8 (__destroy_arr)
//	80A829D4: 80A82A5C (__dt__5csXyzFv)
//	80A829D8: 80A82A5C (__dt__5csXyzFv)
//	80A829E4: 80361CE8 (__destroy_arr)
//	80A829EC: 80A82A5C (__dt__5csXyzFv)
//	80A829F0: 80A82A5C (__dt__5csXyzFv)
//	80A829FC: 80361CE8 (__destroy_arr)
//	80A82A04: 80A82A5C (__dt__5csXyzFv)
//	80A82A08: 80A82A5C (__dt__5csXyzFv)
//	80A82A14: 80361CE8 (__destroy_arr)
//	80A82A1C: 80A82A9C (__dt__4cXyzFv)
//	80A82A20: 80A82A9C (__dt__4cXyzFv)
//	80A82A2C: 80361CE8 (__destroy_arr)
//	80A82A3C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_Lookat_c::~daNpcF_Lookat_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__15daNpcF_Lookat_cFv.s"
}
#pragma pop


/* 80A82A5C-80A82A98 003C+00 s=5 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	80A82A7C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__5csXyzFv.s"
}
#pragma pop


/* 80A82A98-80A82A9C 0004+00 s=2 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80A82A9C-80A82AD8 003C+00 s=5 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80A82ABC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__4cXyzFv.s"
}
#pragma pop


/* 80A82AD8-80A82ADC 0004+00 s=2 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80A82ADC-80A82D28 024C+00 s=1 e=0 z=0  None .text      __dt__8daNpcF_cFv                                            */
//	80A82AFC: 803B38D8 (__vt__8daNpcF_c)
//	80A82B00: 803B38D8 (__vt__8daNpcF_c)
//	80A82B10: 80077CDC (__dt__11dBgS_LinChkFv)
//	80A82B1C: 800775F0 (__dt__11dBgS_GndChkFv)
//	80A82B28: 80267C94 (__dt__11cBgS_GndChkFv)
//	80A82B34: 80249F48 (__dt__10dMsgFlow_cFv)
//	80A82B3C: 80A82A5C (__dt__5csXyzFv)
//	80A82B40: 80A82A5C (__dt__5csXyzFv)
//	80A82B4C: 80361CE8 (__destroy_arr)
//	80A82B54: 80A82A5C (__dt__5csXyzFv)
//	80A82B58: 80A82A5C (__dt__5csXyzFv)
//	80A82B64: 80361CE8 (__destroy_arr)
//	80A82B6C: 80A82A9C (__dt__4cXyzFv)
//	80A82B70: 80A82A9C (__dt__4cXyzFv)
//	80A82B7C: 80361CE8 (__destroy_arr)
//	80A82B84: 80A82908 (__dt__18daNpcF_ActorMngr_cFv)
//	80A82B88: 80A82908 (__dt__18daNpcF_ActorMngr_cFv)
//	80A82B94: 80361CE8 (__destroy_arr)
//	80A82BA0: 80A83D30 (__vt__18daNpcF_ActorMngr_c)
//	80A82BA4: 80A83D30 (__vt__18daNpcF_ActorMngr_c)
//	80A82BB4: 80A83D24 (__vt__12dBgS_AcchCir)
//	80A82BB8: 80A83D24 (__vt__12dBgS_AcchCir)
//	80A82BC8: 8026EF18 (__dt__8cM3dGCirFv)
//	80A82BD4: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80A82BE0: 803AC2E4 (__vt__9dCcD_Stts)
//	80A82BE4: 803AC2E4 (__vt__9dCcD_Stts)
//	80A82BFC: 80A83D18 (__vt__10dCcD_GStts)
//	80A82C00: 80A83D18 (__vt__10dCcD_GStts)
//	80A82C10: 80A83D0C (__vt__10cCcD_GStts)
//	80A82C14: 80A83D0C (__vt__10cCcD_GStts)
//	80A82C24: 803C3728 (__vt__9cCcD_Stts)
//	80A82C28: 803C3728 (__vt__9cCcD_Stts)
//	80A82C38: 80A83CE8 (__vt__12dBgS_ObjAcch)
//	80A82C3C: 80A83CE8 (__vt__12dBgS_ObjAcch)
//	80A82C5C: 80075F94 (__dt__9dBgS_AcchFv)
//	80A82C78: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82C7C: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82C9C: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82CA0: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82CC0: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82CC4: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82CE4: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82CE8: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82CF8: 80018C8C (__dt__10fopAc_ac_cFv)
//	80A82D08: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_c::~daNpcF_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__8daNpcF_cFv.s"
}
#pragma pop


/* 80A82D28-80A82F18 01F0+00 s=1 e=0 z=0  None .text      __ct__8daNpcF_cFv                                            */
//	80A82D40: 80018B64 (__ct__10fopAc_ac_cFv)
//	80A82D44: 803B38D8 (__vt__8daNpcF_c)
//	80A82D48: 803B38D8 (__vt__8daNpcF_c)
//	80A82D54: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82D58: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82D68: 803283FC (init__12J3DFrameCtrlFs)
//	80A82D78: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82D7C: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82D8C: 803283FC (init__12J3DFrameCtrlFs)
//	80A82D9C: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82DA0: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82DB0: 803283FC (init__12J3DFrameCtrlFs)
//	80A82DC0: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82DC4: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A82DD4: 803283FC (init__12J3DFrameCtrlFs)
//	80A82DE8: 800760A0 (__ct__9dBgS_AcchFv)
//	80A82DEC: 80A83CE8 (__vt__12dBgS_ObjAcch)
//	80A82DF0: 80A83CE8 (__vt__12dBgS_ObjAcch)
//	80A82E0C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80A82E10: 803C3728 (__vt__9cCcD_Stts)
//	80A82E14: 803C3728 (__vt__9cCcD_Stts)
//	80A82E20: 80083760 (__ct__10dCcD_GSttsFv)
//	80A82E24: 803AC2E4 (__vt__9dCcD_Stts)
//	80A82E28: 803AC2E4 (__vt__9dCcD_Stts)
//	80A82E3C: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80A82E40: 80A83D30 (__vt__18daNpcF_ActorMngr_c)
//	80A82E44: 80A83D30 (__vt__18daNpcF_ActorMngr_c)
//	80A82E50: 801506B0 (initialize__18daNpcF_ActorMngr_cFv)
//	80A82E58: 80A82950 (__ct__18daNpcF_ActorMngr_cFv)
//	80A82E5C: 80A82950 (__ct__18daNpcF_ActorMngr_cFv)
//	80A82E60: 80A82908 (__dt__18daNpcF_ActorMngr_cFv)
//	80A82E64: 80A82908 (__dt__18daNpcF_ActorMngr_cFv)
//	80A82E70: 80361D60 (__construct_array)
//	80A82E78: 80A82AD8 (__ct__4cXyzFv)
//	80A82E7C: 80A82AD8 (__ct__4cXyzFv)
//	80A82E80: 80A82A9C (__dt__4cXyzFv)
//	80A82E84: 80A82A9C (__dt__4cXyzFv)
//	80A82E90: 80361D60 (__construct_array)
//	80A82E98: 80A82A98 (__ct__5csXyzFv)
//	80A82E9C: 80A82A98 (__ct__5csXyzFv)
//	80A82EA0: 80A82A5C (__dt__5csXyzFv)
//	80A82EA4: 80A82A5C (__dt__5csXyzFv)
//	80A82EB0: 80361D60 (__construct_array)
//	80A82EB8: 80A82A98 (__ct__5csXyzFv)
//	80A82EBC: 80A82A98 (__ct__5csXyzFv)
//	80A82EC0: 80A82A5C (__dt__5csXyzFv)
//	80A82EC4: 80A82A5C (__dt__5csXyzFv)
//	80A82ED0: 80361D60 (__construct_array)
//	80A82ED8: 80249F00 (__ct__10dMsgFlow_cFv)
//	80A82EE0: 80267C1C (__ct__11cBgS_GndChkFv)
//	80A82EE8: 8007757C (__ct__11dBgS_GndChkFv)
//	80A82EF0: 80077C68 (__ct__11dBgS_LinChkFv)
//	80A82EF8: 801528C8 (initialize__8daNpcF_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcF_c::daNpcF_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__ct__8daNpcF_cFv.s"
}
#pragma pop


/* 80A82F18-80A82F88 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80A82F38: 80A83D24 (__vt__12dBgS_AcchCir)
//	80A82F3C: 80A83D24 (__vt__12dBgS_AcchCir)
//	80A82F4C: 8026EF18 (__dt__8cM3dGCirFv)
//	80A82F58: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80A82F68: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80A82F88-80A82FE4 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80A82FA0: 80A83D18 (__vt__10dCcD_GStts)
//	80A82FA4: 80A83D18 (__vt__10dCcD_GStts)
//	80A82FB0: 80A83D0C (__vt__10cCcD_GStts)
//	80A82FB4: 80A83D0C (__vt__10cCcD_GStts)
//	80A82FC8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80A82FE4-80A83054 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80A83004: 80A83CE8 (__vt__12dBgS_ObjAcch)
//	80A83008: 80A83CE8 (__vt__12dBgS_ObjAcch)
//	80A83024: 80075F94 (__dt__9dBgS_AcchFv)
//	80A83034: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80A83054-80A8309C 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80A8306C: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A83070: 80A83CDC (__vt__12J3DFrameCtrl)
//	80A83080: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80A8309C-80A830A0 0004+00 s=1 e=0 z=0  None .text      adjustShapeAngle__8daNpcF_cFv                                */
// True False
//  void False
void daNpcF_c::adjustShapeAngle() {
	/* empty function */
}


/* 80A830A0-80A830A4 0004+00 s=1 e=0 z=0  None .text      setCollisions__8daNpcF_cFv                                   */
// True False
//  void False
void daNpcF_c::setCollisions() {
	/* empty function */
}


/* 80A830A4-80A830EC 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80A830BC: 80A83D0C (__vt__10cCcD_GStts)
//	80A830C0: 80A83D0C (__vt__10cCcD_GStts)
//	80A830D0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80A830EC-80A83108 001C+00 s=1 e=0 z=0  None .text      cLib_calcTimer<i>__FPi                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int* False
// 	 int False
asm void cLib_calcTimer__template0(int* param_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/func_80A830EC.s"
}
#pragma pop


/* 80A83108-80A83184 007C+00 s=2 e=0 z=0  None .text      cLib_getRndValue<i>__Fii                                     */
//	80A8311C: 80A837B4 (lit_5166)
//	80A83120: 80A837B4 (lit_5166)
//	80A8313C: 80267954 (cM_rndF__Ff)
//	80A83140: 80A837B4 (lit_5166)
//	80A83144: 80A837B4 (lit_5166)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  int False
//  int False
asm void cLib_getRndValue__template0(int param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/func_80A83108.s"
}
#pragma pop


/* ############################################################################################## */
/* 80A83D60-80A83D6C 000C+00 s=2 e=0 z=0  None .data      __vt__17daNpcMoiR_Param_c                                    */
SECTION_DATA void* __vt__17daNpcMoiR_Param_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__17daNpcMoiR_Param_cFv,
};

/* 80A83D78-80A83D84 000C+00 s=1 e=0 z=0  None .bss       @3854                                                        */
static u8 lit_3854[12];

/* 80A83D84-80A83D88 0004+00 s=1 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[4];

/* 80A83184-80A83240 00BC+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_moir_cpp                                     */
//	80A83194: 80A838B0 (cNullVec__6Z2Calc)
//	80A83198: 80A838B0 (cNullVec__6Z2Calc)
//	80A8319C: 80A83D60 (__vt__17daNpcMoiR_Param_c)
//	80A831A0: 80A83D60 (__vt__17daNpcMoiR_Param_c)
//	80A831A4: 80A83D84 (l_HIO)
//	80A831A8: 80A83D84 (l_HIO)
//	80A831AC: 80A83240 (__dt__17daNpcMoiR_Param_cFv)
//	80A831B0: 80A83240 (__dt__17daNpcMoiR_Param_cFv)
//	80A831B4: 80A83D78 (lit_3854)
//	80A831B8: 80A83D78 (lit_3854)
//	80A831BC: 80A7C0F8 (__register_global_object)
//	80A831C0: 803A2180 (__ptmf_null)
//	80A831C4: 803A2180 (__ptmf_null)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_npc_moir_cpp() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__sinit_d_a_npc_moir_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80A83184 = (void*)__sinit_d_a_npc_moir_cpp;
#pragma pop


/* 80A83240-80A83288 0048+00 s=2 e=0 z=0  None .text      __dt__17daNpcMoiR_Param_cFv                                  */
//	80A83258: 80A83D60 (__vt__17daNpcMoiR_Param_c)
//	80A8325C: 80A83D60 (__vt__17daNpcMoiR_Param_c)
//	80A8326C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daNpcMoiR_Param_c::~daNpcMoiR_Param_c() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/__dt__17daNpcMoiR_Param_cFv.s"
}
#pragma pop


/* 80A83288-80A83290 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80A8328C: 80A82FE4 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80A83288() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/func_80A83288.s"
}
#pragma pop


/* 80A83290-80A83298 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80A83294: 80A82FE4 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80A83290() {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_moir/d_a_npc_moir/func_80A83290.s"
}
#pragma pop


