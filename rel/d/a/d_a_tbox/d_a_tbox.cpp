// 
// Generated By: dol2asm
// Translation Unit: d_a_tbox
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/d_a_tbox/d_a_tbox.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80490DCC */ // True False
~cXyz();
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct mDoHIO_entry_c {
	/* 80490E08 */ // True False
~mDoHIO_entry_c();
};

struct J3DAnmTevRegKey {
};

struct J3DMaterialTable {
};

struct mDoExt_brkAnm {
	/* 8000D70C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTransform {
};

struct J3DModelData {
};

struct mDoExt_bckAnm {
	/* 8000D7DC */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
//  bool False
void init(J3DAnmTransform*, int, int, f32, s16, s16, bool);
	/* 8000D9CC */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
void entry(J3DModelData*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct fopAc_ac_c {
};

struct fopAcM_lc_c {
	/* 8001DC68 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void lineCheck(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct fopAcM_gc_c {
	/* 8001DCBC */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void gndCheck(cXyz const*);
};

struct daTbox_c {
	/* 80490E50 */ // True False
void getModelInfo();
	/* 80490E6C */ // True False
void commonShapeSet();
	/* 804911B8 */ // True False
//  s32 False
s32 effectShapeSet();
	/* 804911C0 */ // True False
//  s32 False
s32 envShapeSet();
	/* 804911C8 */ // True False
void bgCheckSet();
	/* 8049129C */ // True False
void lightReady();
	/* 804912EC */ // True False
void setLightPos();
	/* 8049135C */ // True False
//  bool False
bool checkEnv();
	/* 80491364 */ // True False
void checkAppear();
	/* 8049139C */ // True False
void checkOpen();
	/* 804913D0 */ // True False
void clrDzb();
	/* 8049141C */ // True False
void setDzb();
	/* 80491484 */ // True False
void surfaceProc();
	/* 80491544 */ // True False
void checkNormal();
	/* 804915BC */ // True False
void checkEnvEffectTbox();
	/* 80491624 */ // True False
void calcHeapSize();
	/* 804916A4 */ // True False
void CreateHeap();
	/* 80491744 */ // True False
void CreateInit();
	/* 804919B0 */ // True False
void initPos();
	/* 80491BB0 */ // True False
void initAnm();
	/* 80491F68 */ // True False
void boxCheck();
	/* 804920A8 */ // True False
void demoProcOpen();
	/* 8049216C */ // True False
void lightColorProc();
	/* 8049233C */ // True False
void environmentProc();
	/* 80492398 */ // True False
void lightUpProc();
	/* 804923D4 */ // True False
void lightDownProc();
	/* 80492408 */ // True False
void dropProcInitCall();
	/* 80492450 */ // True False
void dropProcInit();
	/* 804928DC */ // True False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
void calcJumpGoalAndAngle(cXyz*, s16*);
	/* 80492B10 */ // True False
//  s16* False
// 	 s16 False
void getDropSAngle(s16*);
	/* 80492BC8 */ // True False
void getDir();
	/* 80492C84 */ // True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void setRotAxis(cXyz const*, cXyz const*);
	/* 80492D08 */ // True False
void dropProcInit2();
	/* 80492F50 */ // True False
void dropProc();
	/* 80493338 */ // True False
void demoInitAppear();
	/* 80493484 */ // True False
void demoProcAppear();
	/* 80493518 */ // True False
void demoProc();
	/* 80493838 */ // True False
void OpenInit_com();
	/* 804939A4 */ // True False
void OpenInit();
	/* 804939F4 */ // True False
//  bool False
bool actionWait();
	/* 804939FC */ // True False
void actionDemo();
	/* 80493CC8 */ // True False
void actionDemo2();
	/* 80493D90 */ // True False
void actionDropDemo();
	/* 80493ED8 */ // True False
//  u8 False
//  u8 False
void getBombItemNo(u8, u8);
	/* 80493FE8 */ // True False
//  u8 False
//  u8 False
//  u8 False
void getBombItemNo2(u8, u8, u8);
	/* 80494144 */ // True False
//  u8 False
//  u8 False
//  u8 False
//  u8 False
void getBombItemNo3(u8, u8, u8, u8);
	/* 804942CC */ // True False
//  u8 False
void getBombItemNoMain(u8);
	/* 804945C8 */ // True False
void setGetDemoItem();
	/* 804946A4 */ // True False
void actionOpenWait();
	/* 804948CC */ // True False
void actionNotOpenDemo();
	/* 80494950 */ // True False
void checkDrop();
	/* 80494A0C */ // True False
void settingDropDemoCamera();
	/* 80494D88 */ // True False
void actionSwOnWait();
	/* 80494E98 */ // True False
void actionSwOnWait2();
	/* 80494F44 */ // True False
void actionDropWait();
	/* 80495058 */ // True False
void actionGenocide();
	/* 8049518C */ // True False
void actionDropWaitForWeb();
	/* 80495250 */ // True False
void actionDropForWeb();
	/* 804953D4 */ // True False
void initBaseMtx();
	/* 80495490 */ // True False
void setBaseMtx();
	/* 80495660 */ // True False
void mode_proc_call();
	/* 804956EC */ // True False
void mode_exec_wait();
	/* 80495818 */ // True False
void mode_exec();
	/* 80495910 */ // True False
void create1st();
	/* 804959EC */ // True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
void Execute(f32 (** )[3][4]);
	/* 80495AF0 */ // True False
void Draw();
	/* 80495C9C */ // True False
void Delete();
	/* 804961B0 */ // True False
//  bool False
bool Create();
	/* 804961B8 */ // True False
//  bool False
bool checkSmallTbox();
};

struct daTbox_HIO_c {
	/* 80490D2C */ // True False
daTbox_HIO_c();
	/* 804960B8 */ // True False
~daTbox_HIO_c();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dTres_c {
	/* 8009C168 */ // False False
//  u8 False
//  int False
//  int False
void onStatus(u8, int, int);
	/* 8009C1F0 */ // False False
//  u8 False
//  int False
//  int False
void offStatus(u8, int, int);
	/* 8009C3CC */ // False False
//  int False
//  u8 False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  int False
void setPosition(int, u8, Vec const*, int);
};

struct dSv_player_item_record_c {
	/* 80033F7C */ // False False
//  u8 False
void getBombNum(u8) const;
};

struct dSv_player_item_max_c {
	/* 800340F8 */ // False False
//  u8 False
void getBombNum(u8) const;
};

struct dSv_player_item_c {
	/* 80033030 */ // False False
//  int False
//  bool False
void getItem(int, bool) const;
};

struct dSv_memBit_c {
	/* 800347A0 */ // False False
//  int False
void onTbox(int);
	/* 800347E8 */ // False False
//  int False
void isTbox(int) const;
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dSv_event_c {
	/* 800349E0 */ // False False
//  u16 False
//  u8 False
void setEventReg(u16, u8);
	/* 80034A04 */ // False False
//  u16 False
void getEventReg(u16) const;
};

struct dStage_roomControl_c {
	/* 80024384 */ // False False
//  int False
void getStatusRoomDt(int);
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004D068 */ // False False
//  u16 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void setPoly(u16, cBgS_PolyInfo&, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, int, dPa_levelEcallBack*, s8, cXyz const*);
};

struct dEvt_info_c {
	/* 80043428 */ // False False
//  char* False
// 	 char False
void setEventName(char*);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 80043500 */ // False False
//  u8 False
//  s32 False
void searchMapEventData(u8, s32);
	/* 800436BC */ // False False
//  void* False
// 	 void False
void setPtI(void*);
	/* 800436EC */ // False False
//  unsigned int False
void setPtI_Id(unsigned int);
};

struct dEvent_manager_c {
	/* 80047758 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
void getEventIdx(fopAc_ac_c*, char const*, u8);
	/* 80047698 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u8 False
void getEventIdx(fopAc_ac_c*, u8);
	/* 80047A78 */ // False False
//  s16 False
void endCheck(s16);
	/* 80047ADC */ // False False
//  char const* False
// 	 char const False
// 		 char False
void endCheckOld(char const*);
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047D4C */ // False False
//  int False
void getIsAddvance(int);
	/* 80047E10 */ // False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
void getMyActIdx(int, char const* const*, int, int, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80495FA8 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dCamera_c {
	/* 801614AC */ // False False
void Start();
	/* 801614D0 */ // False False
void Stop();
	/* 8016300C */ // False False
//  s32 False
void SetTrimSize(s32);
	/* 80180B40 */ // False False
//  cXyz False
//  cXyz False
//  s16 False
//  f32 False
void Set(cXyz, cXyz, s16, f32);
};

struct dBgW_Base {
};

struct dBgW {
	/* 8007B970 */ // False False
dBgW();
	/* 8007B9C0 */ // False False
void Move();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjGndChk {
	/* 804932C0 */ // True False
~dBgS_ObjGndChk();
};

struct dBgS_ObjAcch {
	/* 80495EA8 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_MoveBgActor {
	/* 80078624 */ // False False
dBgS_MoveBgActor();
	/* 80078688 */ // False False
//  bool False
bool CreateHeap();
	/* 80078690 */ // False False
//  bool False
bool Create();
	/* 80078698 */ // False False
//  bool False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
bool Execute(f32 (** )[3][4]);
	/* 800786A0 */ // False False
//  bool False
bool Draw();
	/* 800786A8 */ // False False
//  bool False
bool Delete();
	/* 800786B0 */ // False False
//  bool False
bool IsDelete();
	/* 800786B8 */ // False False
//  bool False
bool ToFore();
	/* 800786C0 */ // False False
//  bool False
bool ToBack();
	/* 800787BC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ // False False
void MoveBGDelete();
	/* 80078950 */ // False False
void MoveBGExecute();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80495E38 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
	/* 80074ABC */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void ChkMoveBG(cBgS_PolyInfo const&);
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGCylS {
};

struct cM3dGCyl {
	/* 8026F114 */ // False False
//  cM3dGCylS const& False
// 	 cM3dGCylS const False
// 		 cM3dGCylS False
void Set(cM3dGCylS const&);
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 80495F18 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80495F60 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80496070 */ // True False
~cCcD_GStts();
};

struct cBgD_t {
};

struct cBgW {
	/* 80079F38 */ // False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void Set(cBgD_t*, u32, f32 (* )[3][4]);
};

struct cBgS_GndChk {
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct LIGHT_INFLUENCE {
};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80491170 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  daTbox_c* False
// 	 daTbox_c False
static void daTbox_create1st(daTbox_c*);
// True False
//  daTbox_c* False
// 	 daTbox_c False
static void daTbox_MoveBGDelete(daTbox_c*);
// True False
//  daTbox_c* False
// 	 daTbox_c False
static void daTbox_MoveBGExecute(daTbox_c*);
// True False
//  daTbox_c* False
// 	 daTbox_c False
static void daTbox_MoveBGDraw(daTbox_c*);

// True False
extern "C" void __ct__12daTbox_HIO_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void __dt__14mDoHIO_entry_cFv();
// True False
extern "C" void getModelInfo__8daTbox_cFv();
// True False
extern "C" void commonShapeSet__8daTbox_cFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  s32 False
extern "C" s32 effectShapeSet__8daTbox_cFv();
// True False
//  s32 False
extern "C" s32 envShapeSet__8daTbox_cFv();
// True False
extern "C" void bgCheckSet__8daTbox_cFv();
// True False
extern "C" void lightReady__8daTbox_cFv();
// True False
extern "C" void setLightPos__8daTbox_cFv();
// True False
//  bool False
extern "C" bool checkEnv__8daTbox_cFv();
// True False
extern "C" void checkAppear__8daTbox_cFv();
// True False
extern "C" void checkOpen__8daTbox_cFv();
// True False
extern "C" void clrDzb__8daTbox_cFv();
// True False
extern "C" void setDzb__8daTbox_cFv();
// True False
extern "C" void surfaceProc__8daTbox_cFv();
// True False
extern "C" void checkNormal__8daTbox_cFv();
// True False
extern "C" void checkEnvEffectTbox__8daTbox_cFv();
// True False
extern "C" void calcHeapSize__8daTbox_cFv();
// True False
extern "C" void CreateHeap__8daTbox_cFv();
// True False
extern "C" void CreateInit__8daTbox_cFv();
// True False
extern "C" void initPos__8daTbox_cFv();
// True False
extern "C" void initAnm__8daTbox_cFv();
// True False
extern "C" void boxCheck__8daTbox_cFv();
// True False
extern "C" void demoProcOpen__8daTbox_cFv();
// True False
extern "C" void lightColorProc__8daTbox_cFv();
// True False
extern "C" void environmentProc__8daTbox_cFv();
// True False
extern "C" void lightUpProc__8daTbox_cFv();
// True False
extern "C" void lightDownProc__8daTbox_cFv();
// True False
extern "C" void dropProcInitCall__8daTbox_cFv();
// True False
extern "C" void dropProcInit__8daTbox_cFv();
// True False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
extern "C" void calcJumpGoalAndAngle__8daTbox_cFP4cXyzPs();
// True False
//  s16* False
// 	 s16 False
extern "C" void getDropSAngle__8daTbox_cFPs();
// True False
extern "C" void getDir__8daTbox_cFv();
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void setRotAxis__8daTbox_cFPC4cXyzPC4cXyz();
// True False
extern "C" void dropProcInit2__8daTbox_cFv();
// True False
extern "C" void dropProc__8daTbox_cFv();
// True False
extern "C" void __dt__14dBgS_ObjGndChkFv();
// True False
extern "C" void demoInitAppear__8daTbox_cFv();
// True False
extern "C" void demoProcAppear__8daTbox_cFv();
// True False
extern "C" void demoProc__8daTbox_cFv();
// True False
extern "C" void OpenInit_com__8daTbox_cFv();
// True False
extern "C" void OpenInit__8daTbox_cFv();
// True False
//  bool False
extern "C" bool actionWait__8daTbox_cFv();
// True False
extern "C" void actionDemo__8daTbox_cFv();
// True False
extern "C" void actionDemo2__8daTbox_cFv();
// True False
extern "C" void actionDropDemo__8daTbox_cFv();
// True False
//  u8 False
//  u8 False
extern "C" void getBombItemNo__8daTbox_cFUcUc();
// True False
//  u8 False
//  u8 False
//  u8 False
extern "C" void getBombItemNo2__8daTbox_cFUcUcUc();
// True False
//  u8 False
//  u8 False
//  u8 False
//  u8 False
extern "C" void getBombItemNo3__8daTbox_cFUcUcUcUc();
// True False
//  u8 False
extern "C" void getBombItemNoMain__8daTbox_cFUc();
// True False
extern "C" void setGetDemoItem__8daTbox_cFv();
// True False
extern "C" void actionOpenWait__8daTbox_cFv();
// True False
extern "C" void actionNotOpenDemo__8daTbox_cFv();
// True False
extern "C" void checkDrop__8daTbox_cFv();
// True False
extern "C" void settingDropDemoCamera__8daTbox_cFv();
// True False
extern "C" void actionSwOnWait__8daTbox_cFv();
// True False
extern "C" void actionSwOnWait2__8daTbox_cFv();
// True False
extern "C" void actionDropWait__8daTbox_cFv();
// True False
extern "C" void actionGenocide__8daTbox_cFv();
// True False
extern "C" void actionDropWaitForWeb__8daTbox_cFv();
// True False
extern "C" void actionDropForWeb__8daTbox_cFv();
// True False
extern "C" void initBaseMtx__8daTbox_cFv();
// True False
extern "C" void setBaseMtx__8daTbox_cFv();
// True False
extern "C" void mode_proc_call__8daTbox_cFv();
// True False
extern "C" void mode_exec_wait__8daTbox_cFv();
// True False
extern "C" void mode_exec__8daTbox_cFv();
// True False
extern "C" void create1st__8daTbox_cFv();
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" void Execute__8daTbox_cFPPA3_A4_f();
// True False
extern "C" void Draw__8daTbox_cFv();
// True False
extern "C" void Delete__8daTbox_cFv();
// True False
//  daTbox_c* False
// 	 daTbox_c False
extern "C" static void daTbox_create1st__FP8daTbox_c();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
//  daTbox_c* False
// 	 daTbox_c False
extern "C" static void daTbox_MoveBGDelete__FP8daTbox_c();
// True False
//  daTbox_c* False
// 	 daTbox_c False
extern "C" static void daTbox_MoveBGExecute__FP8daTbox_c();
// True False
//  daTbox_c* False
// 	 daTbox_c False
extern "C" static void daTbox_MoveBGDraw__FP8daTbox_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__12daTbox_HIO_cFv();
// False False
extern "C" void __sinit_d_a_tbox_cpp();
// True False
extern "C" static void func_80496188();
// True False
extern "C" static void func_80496190();
// True False
extern "C" static void func_80496198();
// True False
extern "C" static void func_804961A0();
// True False
extern "C" static void func_804961A8();
// True False
//  bool False
extern "C" bool Create__8daTbox_cFv();
// True False
//  bool False
extern "C" bool checkSmallTbox__8daTbox_cFv();
extern "C" extern u32 const lit_3835;
extern "C" extern u32 const lit_3836;
extern "C" extern u8 const l_open_se_id[12];
extern "C" extern u32 const lit_4041;
extern "C" extern u32 const lit_4169;
extern "C" extern u32 const lit_4404;
extern "C" extern u32 const lit_4405;
extern "C" extern u32 const lit_4500;
extern "C" extern u32 const lit_4670[1 + 1 /* padding */];
extern "C" extern u8 const lit_4671[8];
extern "C" extern u8 const lit_4672[8];
extern "C" extern u8 const lit_4673[8];
extern "C" extern u32 const lit_4674;
extern "C" extern u32 const lit_4949;
extern "C" extern u32 const lit_4950;
extern "C" extern u8 const data_804962FC[12];
extern "C" extern u32 const lit_4998;
extern "C" extern u32 const lit_5774[1 + 1 /* padding */];
extern "C" extern u8 const lit_5777[8];
extern "C" extern u32 const lit_6112;
extern "C" extern u32 const lit_6113;
extern "C" extern u32 const lit_6114;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* lit_4233[3];
extern "C" extern void* lit_4238[3];
extern "C" extern void* lit_4246[3];
extern "C" extern void* lit_4255[3];
extern "C" extern void* lit_4258[3];
extern "C" extern void* lit_4263[3];
extern "C" extern void* lit_4266[3];
extern "C" extern void* lit_4271[3];
extern "C" extern void* lit_4276[3];
extern "C" extern void* lit_4279[3];
extern "C" extern void* lit_5577[3];
extern "C" extern void* lit_5580[3];
extern "C" extern void* lit_5923[3];
extern "C" extern void* lit_5933[3];
extern "C" extern void* lit_6120[3];
extern "C" extern void* lit_6121[3];
extern "C" extern u8 data_80496718[24];
extern "C" extern void* g_profile_TBOX[12];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12daTboxBase_c[11];
extern "C" extern void* __vt__14dBgS_ObjGndChk[12];
extern "C" extern void* __vt__8daTbox_c[11];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12daTbox_HIO_c[3];
extern "C" extern void* __vt__14mDoHIO_entry_c[3];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 3 /* padding */];
extern "C" extern u8 lit_3821[12];
extern "C" extern u8 lit_3824[12];
extern "C" extern u8 l_HIO[52];
extern "C" extern u8 data_80496934[4];
extern "C" extern u8 data_80496938[4];
extern "C" extern u8 data_8049693C[4];
extern "C" extern u8 data_80496940[4];
extern "C" extern u8 data_80496944[4];
extern "C" extern u8 data_80496948[4];
extern "C" extern u8 data_8049694C[4];
extern "C" extern u8 data_80496950[4];
extern "C" extern u8 data_80496954[4];
extern "C" extern u8 data_80496958[4];
extern "C" extern u8 data_8049695C[4];
extern "C" extern u8 data_80496960[4];
extern "C" extern u8 data_80496964[4];
extern "C" extern u8 data_80496968[4];
extern "C" extern u8 data_8049696C[4];
extern "C" extern u8 data_80496970[4];
extern "C" extern u8 data_80496974[4];
extern "C" extern u8 data_80496978[4];
extern "C" extern u8 data_8049697C[4];
extern "C" extern u8 data_80496980[4];
extern "C" extern u8 data_80496984[4];
extern "C" extern u8 data_80496988[4];
extern "C" extern u8 data_8049698C[4];
extern "C" extern u8 data_80496990[4];
extern "C" extern u8 data_80496994[4];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
void mDoExt_brkAnmRemove(J3DModelData*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_seenActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderOtherEvent(fopAc_ac_c*, char const*, u16, u16, u16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u8 False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderOtherEventId(fopAc_ac_c*, s16, u8, u16, u16, u16);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_createItemForPresentDemo(cXyz const*, int, u8, int, int, csXyz const*, cXyz const*);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_createItemForTrBoxDemo(cXyz const*, int, int, int, csXyz const*, cXyz const*);
// False False
//  s8 False
void fopAcM_myRoomSearchEnemy(s8);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
void fopAcM_setEffectMtx(fopAc_ac_c const*, J3DModelData const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  int False
//  int False
void dPath_GetRoomPath(int, int);
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*);
// False False
//  LIGHT_INFLUENCE* False
// 	 LIGHT_INFLUENCE False
void dKy_efplight_set(LIGHT_INFLUENCE*);
// False False
//  LIGHT_INFLUENCE* False
// 	 LIGHT_INFLUENCE False
void dKy_efplight_cut(LIGHT_INFLUENCE*);
// False False
//  f32 False
void dKy_set_allcol_ratio(f32);
// False False
//  cBgS_PolyInfo const* False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void dKy_pol_sound_get(cBgS_PolyInfo const*);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc(f32*, f32, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseS(s16*, s16, s16);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_offsetPos(cXyz*, cXyz const*, s16, cXyz const*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
extern "C" void OSReport_Error();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
//  bool False
extern "C" void init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  f32 False
extern "C" void entry__13mDoExt_bckAnmFP12J3DModelDataf();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
extern "C" void mDoExt_brkAnmRemove__FP12J3DModelData();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderOtherEvent__FP10fopAc_ac_cPCcUsUsUs();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u8 False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_createItemForTrBoxDemo__FPC4cXyziiiPC5csXyzPC4cXyz();
// False False
//  s8 False
extern "C" void fopAcM_myRoomSearchEnemy__FSc();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
extern "C" void fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
// False False
//  int False
extern "C" void getStatusRoomDt__20dStage_roomControl_cFi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  bool False
extern "C" void getItem__17dSv_player_item_cCFib();
// False False
//  u8 False
extern "C" void getBombNum__24dSv_player_item_record_cCFUc();
// False False
//  u8 False
extern "C" void getBombNum__21dSv_player_item_max_cCFUc();
// False False
//  int False
extern "C" void onTbox__12dSv_memBit_cFi();
// False False
//  int False
extern "C" void isTbox__12dSv_memBit_cCFi();
// False False
//  u16 False
//  u8 False
extern "C" void setEventReg__11dSv_event_cFUsUc();
// False False
//  u16 False
extern "C" void getEventReg__11dSv_event_cCFUs();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char* False
// 	 char False
extern "C" void setEventName__11dEvt_info_cFPc();
// False False
//  u8 False
//  s32 False
extern "C" void searchMapEventData__14dEvt_control_cFUcl();
// False False
//  void* False
// 	 void False
extern "C" void setPtI__14dEvt_control_cFPv();
// False False
//  unsigned int False
extern "C" void setPtI_Id__14dEvt_control_cFUi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u8 False
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cUc();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
// False False
//  s16 False
extern "C" void endCheck__16dEvent_manager_cFs();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void endCheckOld__16dEvent_manager_cFPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getIsAddvance__16dEvent_manager_cFi();
// False False
//  int False
//  char const* const* False
// 	 char const* const False
// 		 char const* False
// 			 char const False
// 				 char False
//  int False
//  int False
//  int False
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u16 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz();
// False False
//  int False
//  int False
extern "C" void dPath_GetRoomPath__Fii();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void ChkMoveBG__4dBgSFRC13cBgS_PolyInfo();
// False False
//  dBgW* False
// 	 dBgW False
//  void* False
// 	 void False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  bool False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool CreateHeap__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool Create__16dBgS_MoveBgActorFv();
// False False
//  bool False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
extern "C" bool Execute__16dBgS_MoveBgActorFPPA3_A4_f();
// False False
//  bool False
extern "C" bool Draw__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool Delete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
// False False
//  bool False
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*) False
// 	 * False
// 		  False
// 	 void False
// 	 dBgW* False
// 		 dBgW False
// 	 void* False
// 		 void False
// 	 cBgS_PolyInfo const& False
// 		 cBgS_PolyInfo const False
// 			 cBgS_PolyInfo False
// 	 bool False
// 	 cXyz* False
// 		 cXyz False
// 	 csXyz* False
// 		 csXyz False
// 	 csXyz* False
// 		 csXyz False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
// False False
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
// False False
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
// False False
extern "C" void __ct__4dBgWFv();
// False False
extern "C" void Move__4dBgWFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  u8 False
//  int False
//  int False
extern "C" void onStatus__7dTres_cFUcii();
// False False
//  u8 False
//  int False
//  int False
extern "C" void offStatus__7dTres_cFUcii();
// False False
//  int False
//  u8 False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  int False
extern "C" void setPosition__7dTres_cFiUcPC3Veci();
// False False
extern "C" void Start__9dCamera_cFv();
// False False
extern "C" void Stop__9dCamera_cFv();
// False False
//  s32 False
extern "C" void SetTrimSize__9dCamera_cFl();
// False False
//  cXyz False
//  cXyz False
//  s16 False
//  f32 False
extern "C" void Set__9dCamera_cF4cXyz4cXyzsf();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  LIGHT_INFLUENCE* False
// 	 LIGHT_INFLUENCE False
extern "C" void dKy_efplight_set__FP15LIGHT_INFLUENCE();
// False False
//  LIGHT_INFLUENCE* False
// 	 LIGHT_INFLUENCE False
extern "C" void dKy_efplight_cut__FP15LIGHT_INFLUENCE();
// False False
//  f32 False
extern "C" void dKy_set_allcol_ratio__Ff();
// False False
//  cBgS_PolyInfo const* False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void dKy_pol_sound_get__FPC13cBgS_PolyInfo();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cM3dGCylS const& False
// 	 cM3dGCylS const False
// 		 cM3dGCylS False
extern "C" void Set__8cM3dGCylFRC9cM3dGCylS();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc__FPfffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseS__FPsss();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXIdentity();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXConcat();
// False False
extern "C" void PSMTXRotAxisRad();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSubtract();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_21();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_21();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 item_info__10dItem_data[1020 + 4 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mLineCheck__11fopAcM_lc_c[112];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 BaseX__4cXyz[12];
extern "C" extern u8 BaseY__4cXyz[12];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 804961D4-804961EC 0018+00 s=16 e=0 z=0  None .rodata    l_cull_size_box                                              */
SECTION_RODATA static u8 const l_cull_size_box[24] = {
	0xC3, 0x16, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0xC3, 0x16, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00,
	0x43, 0x96, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
};

/* 804961EC-80496228 003C+00 s=1 e=0 z=0  None .rodata    l_cyl_info                                                   */
SECTION_RODATA static u8 const l_cyl_info[60] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0x20, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
	0x42, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0x70, 0x00, 0x00,
	0x42, 0x48, 0x00, 0x00, 0x42, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xC2, 0x70, 0x00, 0x00, 0x42, 0x8C, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};

/* 80496228-8049622C 0004+00 s=1 e=0 z=0  None .rodata    @3833                                                        */
SECTION_RODATA static u32 const lit_3833 = 0xC0000000;

/* 8049622C-80496230 0004+00 s=1 e=0 z=0  None .rodata    @3834                                                        */
SECTION_RODATA static u32 const lit_3834 = 0x428C0000;

/* 80496230-80496234 0004+00 s=0 e=0 z=0  None .rodata    @3835                                                        */
SECTION_RODATA u32 const lit_3835 = 0x3E99999A;

/* 80496234-80496238 0004+00 s=0 e=0 z=0  None .rodata    @3836                                                        */
SECTION_RODATA u32 const lit_3836 = 0x3F0CCCCD;

/* 80496238-80496244 000C+00 s=0 e=0 z=0  None .rodata    l_open_se_id                                                 */
SECTION_RODATA u8 const l_open_se_id[12] = {
	0x00, 0x08, 0x00, 0x1F, 0x00, 0x08, 0x00, 0x20, 0x00, 0x08, 0x00, 0x22,
};

/* 80496244-80496248 0004+00 s=1 e=0 z=0  None .rodata    @3933                                                        */
SECTION_RODATA static u32 const lit_3933 = 0x3F800000;

/* 80496248-8049624C 0004+00 s=6 e=0 z=0  None .rodata    @3934                                                        */
SECTION_RODATA static u8 const lit_3934[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 8049624C-80496250 0004+00 s=0 e=0 z=0  None .rodata    @4041                                                        */
SECTION_RODATA u32 const lit_4041 = 0xBF800000;

/* 80496250-80496254 0004+00 s=0 e=0 z=0  None .rodata    @4169                                                        */
SECTION_RODATA u32 const lit_4169 = 0x43FA0000;

/* 80496254-80496258 0004+00 s=3 e=0 z=0  None .rodata    @4222                                                        */
SECTION_RODATA static u32 const lit_4222 = 0x40A00000;

/* 80496258-8049625C 0004+00 s=2 e=0 z=0  None .rodata    @4223                                                        */
SECTION_RODATA static u32 const lit_4223 = 0x41F00000;

/* 8049625C-80496264 0008+00 s=3 e=0 z=0  None .rodata    @4357                                                        */
SECTION_RODATA static u8 const lit_4357[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80496264-80496268 0004+00 s=0 e=0 z=0  None .rodata    @4404                                                        */
SECTION_RODATA u32 const lit_4404 = 0x46AFC800;

/* 80496268-8049626C 0004+00 s=0 e=0 z=0  None .rodata    @4405                                                        */
SECTION_RODATA u32 const lit_4405 = 0x41A00000;

/* 8049626C-80496270 0004+00 s=1 e=0 z=0  None .rodata    @4441                                                        */
SECTION_RODATA static u32 const lit_4441 = 0x41A80000;

/* 80496270-8049628C 001C+00 s=1 e=0 z=0  None .rodata    key_frame$4445                                               */
SECTION_RODATA static u8 const key_frame[28] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x25,
	0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x5C, 0x00, 0x00, 0x00, 0x8C,
};

/* 8049628C-804962C4 0038+00 s=1 e=0 z=0  None .rodata    key_color$4446                                               */
SECTION_RODATA static u8 const key_color[56] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xC3, 0x00, 0x8A, 0x00, 0xFF,
	0x00, 0xFF, 0x00, 0xC3, 0x00, 0x8A, 0x00, 0xFF, 0x00, 0x37, 0x00, 0x34, 0x00, 0x24, 0x00, 0xFF,
	0x00, 0xFF, 0x00, 0xC3, 0x00, 0x8A, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xC3, 0x00, 0x8A, 0x00, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
};

/* 804962C4-804962C8 0004+00 s=1 e=0 z=0  None .rodata    @4499                                                        */
SECTION_RODATA static u32 const lit_4499 = 0x3D4CCCCD;

/* 804962C8-804962CC 0004+00 s=0 e=0 z=0  None .rodata    @4500                                                        */
SECTION_RODATA u32 const lit_4500 = 0x3DCCCCCD;

/* 804962CC-804962D4 0004+04 s=0 e=0 z=0  None .rodata    @4670                                                        */
SECTION_RODATA u32 const lit_4670[1 + 1 /* padding */] = {
	0x40000000,
	/* padding */
	0x00000000,
};

/* 804962D4-804962DC 0008+00 s=0 e=0 z=0  None .rodata    @4671                                                        */
SECTION_RODATA u8 const lit_4671[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804962DC-804962E4 0008+00 s=0 e=0 z=0  None .rodata    @4672                                                        */
SECTION_RODATA u8 const lit_4672[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804962E4-804962EC 0008+00 s=0 e=0 z=0  None .rodata    @4673                                                        */
SECTION_RODATA u8 const lit_4673[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804962EC-804962F0 0004+00 s=0 e=0 z=0  None .rodata    @4674                                                        */
SECTION_RODATA u32 const lit_4674 = 0x41980000;

/* 804962F0-804962F4 0004+00 s=1 e=0 z=0  None .rodata    @4756                                                        */
SECTION_RODATA static u32 const lit_4756 = 0x43360B61;

/* 804962F4-804962F8 0004+00 s=0 e=0 z=0  None .rodata    @4949                                                        */
SECTION_RODATA u32 const lit_4949 = 0x41200000;

/* 804962F8-804962FC 0004+00 s=0 e=0 z=0  None .rodata    @4950                                                        */
SECTION_RODATA u32 const lit_4950 = 0x43C80000;

/* 804962FC-80496308 000C+00 s=0 e=0 z=0  None .rodata    eff_id$4956                                                  */
SECTION_RODATA u8 const data_804962FC[12] = {
	0x88, 0x40, 0x88, 0x41, 0x88, 0x42, 0x88, 0x43, 0x88, 0x44, 0x88, 0x45,
};

/* 80496308-8049630C 0004+00 s=0 e=0 z=0  None .rodata    @4998                                                        */
SECTION_RODATA u32 const lit_4998 = 0x425C0000;

/* 8049630C-80496310 0004+00 s=1 e=0 z=0  None .rodata    @5021                                                        */
SECTION_RODATA static u32 const lit_5021 = 0x42DC0000;

/* 80496310-80496314 0004+00 s=1 e=0 z=0  None .rodata    @5135                                                        */
SECTION_RODATA static u32 const lit_5135 = 0xC3020000;

/* 80496314-8049631C 0004+04 s=0 e=0 z=0  None .rodata    @5774                                                        */
SECTION_RODATA u32 const lit_5774[1 + 1 /* padding */] = {
	0x38C90FDB,
	/* padding */
	0x00000000,
};

/* 8049631C-80496324 0008+00 s=0 e=0 z=0  None .rodata    @5777                                                        */
SECTION_RODATA u8 const lit_5777[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80496324-80496328 0004+00 s=0 e=0 z=0  None .rodata    @6112                                                        */
SECTION_RODATA u32 const lit_6112 = 0x42480000;

/* 80496328-8049632C 0004+00 s=0 e=0 z=0  None .rodata    @6113                                                        */
SECTION_RODATA u32 const lit_6113 = 0xC2480000;

/* 8049632C-80496330 0004+00 s=0 e=0 z=0  None .rodata    @6114                                                        */
SECTION_RODATA u32 const lit_6114 = 0x41700000;

/* 80496330-80496334 0004+00 s=1 e=0 z=0  None .rodata    @6499                                                        */
SECTION_RODATA static u32 const lit_6499 = 0x420C0000;

/* 80496334-804963A4 0070+00 s=12 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80496334[112] = {
	/* 80496334 0009 stringBase_80496334 @stringBase0 */
	0x54, 0x52, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x00,
	/* 8049633D 0008 data_8049633D None */
	0x44, 0x61, 0x6C, 0x77, 0x61, 0x79, 0x73, 0x00,
	/* 80496345 005A data_80496345 None */
	0x42, 0x6F, 0x78, 0x43, 0x00, 0x44, 0x5F, 0x4D, 0x4E, 0x30, 0x31, 0x42, 0x00, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4C, 0x54, 0x5F, 0x54, 0x52, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x5F, 0x42, 0x4F,
	0x53, 0x53, 0x00, 0x52, 0x5F, 0x53, 0x50, 0x30, 0x31, 0x00, 0x83, 0x57, 0x83, 0x83, 0x83, 0x93,
	0x83, 0x76, 0x95, 0xF3, 0x94, 0xA0, 0x81, 0x46, 0x83, 0x57, 0x83, 0x83, 0x83, 0x93, 0x83, 0x76,
	0x90, 0xE6, 0x82, 0xCC, 0x8E, 0xE6, 0x93, 0xBE, 0x82, 0xC9, 0x8E, 0xB8, 0x94, 0x73, 0x82, 0xB5,
	0x82, 0xDC, 0x82, 0xB5, 0x82, 0xBD, 0x81, 0x49, 0x0A, 0x00,
	/* 8049639F 0005 data_8049639F None */
	0x57, 0x41, 0x49, 0x54, 0x00,
};

/* 804963A4-804963B0 000C+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_804963A4[12] = {
	/* 804963A4 0005 data_804963A4 None */
	0x4F, 0x50, 0x45, 0x4E, 0x00,
	/* 804963A9 0007 data_804963A9 None */
	0x41, 0x50, 0x50, 0x45, 0x41, 0x52, 0x00,
};

/* 804963B0-80496494 00E4+00 s=1 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_804963B0[228] = {
	/* 804963B0 000B data_804963B0 None */
	0x4F, 0x50, 0x45, 0x4E, 0x5F, 0x53, 0x48, 0x4F, 0x52, 0x54, 0x00,
	/* 804963BB 00D9 data_804963BB None */
	0x44, 0x52, 0x4F, 0x50, 0x00, 0x46, 0x5F, 0x53, 0x50, 0x31, 0x32, 0x31, 0x00, 0x83, 0x6E, 0x81,
	0x5B, 0x83, 0x67, 0x82, 0xCC, 0x8C, 0x87, 0x95, 0xD0, 0x81, 0x46, 0x91, 0x7A, 0x92, 0xE8, 0x8A,
	0x4F, 0x82, 0xCC, 0x94, 0x7A, 0x92, 0x75, 0x82, 0xC5, 0x82, 0xB7, 0x81, 0x42, 0x83, 0x43, 0x83,
	0x78, 0x83, 0x93, 0x83, 0x67, 0x83, 0x72, 0x83, 0x62, 0x83, 0x67, 0x83, 0x5A, 0x83, 0x62, 0x83,
	0x67, 0x82, 0xC5, 0x82, 0xAB, 0x82, 0xDC, 0x82, 0xB9, 0x82, 0xF1, 0x82, 0xC5, 0x82, 0xB5, 0x82,
	0xBD, 0x81, 0x49, 0x0A, 0x00, 0x46, 0x5F, 0x53, 0x50, 0x31, 0x30, 0x39, 0x00, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4C, 0x54, 0x5F, 0x54, 0x52, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x5F, 0x41, 0x50,
	0x50, 0x45, 0x41, 0x52, 0x00, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x54, 0x52, 0x45,
	0x41, 0x53, 0x55, 0x52, 0x45, 0x5F, 0x53, 0x49, 0x4D, 0x50, 0x4C, 0x45, 0x00, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4C, 0x54, 0x5F, 0x54, 0x52, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x5F, 0x4E, 0x4F,
	0x54, 0x4F, 0x50, 0x45, 0x4E, 0x00, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x54, 0x52,
	0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x5F, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x00, 0x44, 0x45,
	0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x54, 0x52, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x5F, 0x4E,
	0x4F, 0x52, 0x4D, 0x41, 0x4C, 0x00, 0x00, 0x00, 0x00,
};

/* 80496494-804964A0 000C+00 s=4 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804964A0-804964B4 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 804964B4-804964B8 0004+00 s=2 e=0 z=0  None .data      l_staff_name                                                 */
SECTION_DATA static void* l_staff_name = (void*)(((char*)&struct_80496334)+0x0) /* @stringBase0 */;

/* 804964B8-804964FC 0044+00 s=1 e=0 z=0  None .data      l_cyl_src                                                    */
SECTION_DATA static u8 l_cyl_src[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 804964FC-80496550 0054+00 s=1 e=0 z=0  None .data      l_modelInfo                                                  */
SECTION_DATA static void* l_modelInfo[21] = {
	(void*)(((char*)&struct_80496334)+0x9) /* None */,
	(void*)0x0000000C,
	(void*)0x00000007,
	(void*)0x00000019,
	(void*)0x0000001A,
	(void*)0x0000000E,
	(void*)0x00000013,
	(void*)(((char*)&struct_80496334)+0x9) /* None */,
	(void*)0x0000000D,
	(void*)0x00000008,
	(void*)0x0000001B,
	(void*)0x0000001C,
	(void*)0x0000000E,
	(void*)0x00000013,
	(void*)(((char*)&struct_80496334)+0x11) /* None */,
	(void*)0x0000000E,
	(void*)0x00000008,
	(void*)0x00000014,
	(void*)0x00000015,
	(void*)0x0000000B,
	(void*)0x00000011,
};

/* 80496550-8049655C 000C+00 s=0 e=0 z=0  None .data      @4233                                                        */
SECTION_DATA void* lit_4233[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionWait__8daTbox_cFv,
};

/* 8049655C-80496568 000C+00 s=0 e=0 z=0  None .data      @4238                                                        */
SECTION_DATA void* lit_4238[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 80496568-80496574 000C+00 s=0 e=0 z=0  None .data      @4246                                                        */
SECTION_DATA void* lit_4246[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionDropWait__8daTbox_cFv,
};

/* 80496574-80496580 000C+00 s=0 e=0 z=0  None .data      @4255                                                        */
SECTION_DATA void* lit_4255[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 80496580-8049658C 000C+00 s=0 e=0 z=0  None .data      @4258                                                        */
SECTION_DATA void* lit_4258[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionDropWaitForWeb__8daTbox_cFv,
};

/* 8049658C-80496598 000C+00 s=0 e=0 z=0  None .data      @4263                                                        */
SECTION_DATA void* lit_4263[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 80496598-804965A4 000C+00 s=0 e=0 z=0  None .data      @4266                                                        */
SECTION_DATA void* lit_4266[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 804965A4-804965B0 000C+00 s=0 e=0 z=0  None .data      @4271                                                        */
SECTION_DATA void* lit_4271[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionGenocide__8daTbox_cFv,
};

/* 804965B0-804965BC 000C+00 s=0 e=0 z=0  None .data      @4276                                                        */
SECTION_DATA void* lit_4276[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionSwOnWait__8daTbox_cFv,
};

/* 804965BC-804965C8 000C+00 s=0 e=0 z=0  None .data      @4279                                                        */
SECTION_DATA void* lit_4279[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionSwOnWait2__8daTbox_cFv,
};

/* 804965C8-804965DC 0014+00 s=1 e=0 z=0  None .data      action_table$5025                                            */
SECTION_DATA static void* action_table[5] = {
	(void*)(((char*)&struct_80496334)+0x6B) /* None */,
	(void*)(((char*)&struct_804963A4)+0x0) /* None */,
	(void*)(((char*)&struct_804963A4)+0x5) /* None */,
	(void*)(((char*)&struct_804963B0)+0x0) /* None */,
	(void*)(((char*)&struct_804963B0)+0xB) /* None */,
};

/* 804965DC-804965E8 000C+00 s=1 e=0 z=0  None .data      @5194                                                        */
SECTION_DATA static void* lit_5194[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 804965E8-804965F4 000C+00 s=1 e=0 z=0  None .data      @5197                                                        */
SECTION_DATA static void* lit_5197[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionWait__8daTbox_cFv,
};

/* 804965F4-80496600 000C+00 s=1 e=0 z=0  None .data      @5283                                                        */
SECTION_DATA static void* lit_5283[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 80496600-8049660C 000C+00 s=1 e=0 z=0  None .data      @5303                                                        */
SECTION_DATA static void* lit_5303[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 8049660C-80496618 000C+00 s=1 e=0 z=0  None .data      @5312                                                        */
SECTION_DATA static void* lit_5312[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 80496618-80496668 0050+00 s=1 e=0 z=0  None .data      @5369                                                        */
SECTION_DATA static void* lit_5369[20] = {
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0xA4),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0xAC),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0xB4),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0xB4),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x108),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0xA4),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0xAC),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x9C),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x9C),
};

/* 80496668-80496688 0020+00 s=1 e=0 z=0  None .data      @5368                                                        */
SECTION_DATA static void* lit_5368[8] = {
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x54),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x5C),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x64),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x54),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x54),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x5C),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x54),
	(void*)(((char*)getBombItemNo__8daTbox_cFUcUc)+0x6C),
};

/* 80496688-80496694 000C+00 s=0 e=0 z=0  None .data      @5577                                                        */
SECTION_DATA void* lit_5577[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionNotOpenDemo__8daTbox_cFv,
};

/* 80496694-804966A0 000C+00 s=0 e=0 z=0  None .data      @5580                                                        */
SECTION_DATA void* lit_5580[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionDemo__8daTbox_cFv,
};

/* 804966A0-804966AC 000C+00 s=1 e=0 z=0  None .data      @5639                                                        */
SECTION_DATA static void* lit_5639[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 804966AC-804966B8 000C+00 s=1 e=0 z=0  None .data      @5868                                                        */
SECTION_DATA static void* lit_5868[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionDemo2__8daTbox_cFv,
};

/* 804966B8-804966C4 000C+00 s=1 e=0 z=0  None .data      @5900                                                        */
SECTION_DATA static void* lit_5900[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 804966C4-804966D0 000C+00 s=0 e=0 z=0  None .data      @5923                                                        */
SECTION_DATA void* lit_5923[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionDropDemo__8daTbox_cFv,
};

/* 804966D0-804966DC 000C+00 s=0 e=0 z=0  None .data      @5933                                                        */
SECTION_DATA void* lit_5933[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionDropDemo__8daTbox_cFv,
};

/* 804966DC-804966E8 000C+00 s=1 e=0 z=0  None .data      @5954                                                        */
SECTION_DATA static void* lit_5954[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionDemo2__8daTbox_cFv,
};

/* 804966E8-804966F4 000C+00 s=1 e=0 z=0  None .data      @5997                                                        */
SECTION_DATA static void* lit_5997[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionDropForWeb__8daTbox_cFv,
};

/* 804966F4-80496700 000C+00 s=1 e=0 z=0  None .data      @6017                                                        */
SECTION_DATA static void* lit_6017[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)actionOpenWait__8daTbox_cFv,
};

/* 80496700-8049670C 000C+00 s=0 e=0 z=0  None .data      @6120                                                        */
SECTION_DATA void* lit_6120[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)mode_exec_wait__8daTbox_cFv,
};

/* 8049670C-80496718 000C+00 s=0 e=0 z=0  None .data      @6121                                                        */
SECTION_DATA void* lit_6121[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)mode_exec__8daTbox_cFv,
};

/* 80496718-80496730 0018+00 s=0 e=0 z=0  None .data      l_func$6119                                                  */
SECTION_DATA u8 data_80496718[24] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80496730-80496750 0020+00 s=1 e=0 z=0  None .data      daTbox_METHODS                                               */
SECTION_DATA static void* daTbox_METHODS[8] = {
	(void*)daTbox_create1st__FP8daTbox_c,
	(void*)daTbox_MoveBGDelete__FP8daTbox_c,
	(void*)daTbox_MoveBGExecute__FP8daTbox_c,
	(void*)NULL,
	(void*)daTbox_MoveBGDraw__FP8daTbox_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80496750-80496780 0030+00 s=0 e=0 z=1  None .data      g_profile_TBOX                                               */
SECTION_DATA void* g_profile_TBOX[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0004FFFD,
	(void*)0x00FB0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000A30,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x010C0000,
	(void*)&daTbox_METHODS,
	(void*)0x00044100,
	(void*)0x000E0000,
};

/* 80496780-8049678C 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 8049678C-80496798 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80496798-804967A4 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 804967A4-804967C8 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_804961A8,
	(void*)NULL,
	(void*)NULL,
	(void*)func_804961A0,
};

/* 804967C8-804967D4 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 804967D4-804967E0 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 804967E0-8049680C 002C+00 s=1 e=0 z=0  None .data      __vt__12daTboxBase_c                                         */
SECTION_DATA void* __vt__12daTboxBase_c[11] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__16dBgS_MoveBgActorFv,
	(void*)Create__16dBgS_MoveBgActorFv,
	(void*)Execute__16dBgS_MoveBgActorFPPA3_A4_f,
	(void*)Draw__16dBgS_MoveBgActorFv,
	(void*)Delete__16dBgS_MoveBgActorFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
	(void*)NULL,
};

/* 8049680C-8049683C 0030+00 s=2 e=0 z=0  None .data      __vt__14dBgS_ObjGndChk                                       */
SECTION_DATA void* __vt__14dBgS_ObjGndChk[12] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14dBgS_ObjGndChkFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80496188,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80496198,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80496190,
};

/* 8049683C-80496868 002C+00 s=1 e=0 z=0  None .data      __vt__8daTbox_c                                              */
SECTION_DATA void* __vt__8daTbox_c[11] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)CreateHeap__8daTbox_cFv,
	(void*)Create__8daTbox_cFv,
	(void*)Execute__8daTbox_cFPPA3_A4_f,
	(void*)Draw__8daTbox_cFv,
	(void*)Delete__8daTbox_cFv,
	(void*)IsDelete__16dBgS_MoveBgActorFv,
	(void*)ToFore__16dBgS_MoveBgActorFv,
	(void*)ToBack__16dBgS_MoveBgActorFv,
	(void*)checkSmallTbox__8daTbox_cFv,
};

/* 80496868-80496874 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80496874-80496880 000C+00 s=2 e=0 z=0  None .data      __vt__12daTbox_HIO_c                                         */
SECTION_DATA void* __vt__12daTbox_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daTbox_HIO_cFv,
};

/* 80496880-8049688C 000C+00 s=3 e=0 z=0  None .data      __vt__14mDoHIO_entry_c                                       */
SECTION_DATA void* __vt__14mDoHIO_entry_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14mDoHIO_entry_cFv,
};

/* 80496898-8049689C 0001+03 s=1 e=0 z=0  None .bss       @1109                                                        */
static u8 lit_1109[1 + 3 /* padding */];

/* 8049689C-804968A0 0001+03 s=0 e=0 z=0  None .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 804968A0-804968A4 0001+03 s=0 e=0 z=0  None .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 804968A4-804968A8 0001+03 s=0 e=0 z=0  None .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 804968A8-804968AC 0001+03 s=0 e=0 z=0  None .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 804968AC-804968B0 0001+03 s=0 e=0 z=0  None .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 804968B0-804968B4 0001+03 s=0 e=0 z=0  None .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 804968B4-804968B8 0001+03 s=0 e=0 z=0  None .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 804968B8-804968BC 0001+03 s=0 e=0 z=0  None .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 804968BC-804968C0 0001+03 s=0 e=0 z=0  None .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 804968C0-804968C4 0001+03 s=0 e=0 z=0  None .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 804968C4-804968C8 0001+03 s=0 e=0 z=0  None .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 804968C8-804968CC 0001+03 s=0 e=0 z=0  None .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 804968CC-804968D0 0001+03 s=0 e=0 z=0  None .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 804968D0-804968D4 0001+03 s=0 e=0 z=0  None .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 804968D4-804968D8 0001+03 s=0 e=0 z=0  None .bss       @1009                                                        */
u8 lit_1009[1 + 3 /* padding */];

/* 804968D8-804968E4 000C+00 s=0 e=0 z=0  None .bss       @3821                                                        */
u8 lit_3821[12];

/* 804968E4-804968F0 000C+00 s=2 e=0 z=0  None .bss       l_light_offset                                               */
static u8 l_light_offset[12];

/* 80490D2C-80490DCC 00A0+00 s=1 e=0 z=0  None .text      __ct__12daTbox_HIO_cFv                                       */
//	80490D2C: 804961D4 (l_cull_size_box)
//	80490D30: 804961D4 (l_cull_size_box)
//	80490D34: 80496880 (__vt__14mDoHIO_entry_c)
//	80490D38: 80496880 (__vt__14mDoHIO_entry_c)
//	80490D40: 80496874 (__vt__12daTbox_HIO_c)
//	80490D44: 80496874 (__vt__12daTbox_HIO_c)
//	80490D88: 804968E4 (l_light_offset)
//	80490D8C: 804968E4 (l_light_offset)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daTbox_HIO_c::daTbox_HIO_c() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__ct__12daTbox_HIO_cFv.s"
}
#pragma pop


/* 80490DCC-80490E08 003C+00 s=1 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80490DEC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__4cXyzFv.s"
}
#pragma pop


/* 80490E08-80490E50 0048+00 s=1 e=0 z=0  None .text      __dt__14mDoHIO_entry_cFv                                     */
//	80490E20: 80496880 (__vt__14mDoHIO_entry_c)
//	80490E24: 80496880 (__vt__14mDoHIO_entry_c)
//	80490E34: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm mDoHIO_entry_c::~mDoHIO_entry_c() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__14mDoHIO_entry_cFv.s"
}
#pragma pop


/* 80490E50-80490E6C 001C+00 s=6 e=0 z=0  None .text      getModelInfo__8daTbox_cFv                                    */
//	80490E5C: 804964FC (l_modelInfo)
//	80490E60: 804964FC (l_modelInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::getModelInfo() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/getModelInfo__8daTbox_cFv.s"
}
#pragma pop


/* 80490E6C-80491170 0304+00 s=1 e=0 z=0  None .text      commonShapeSet__8daTbox_cFv                                  */
//	80490E7C: 803621D0 (_savegpr_26)
//	80490E84: 804961D4 (l_cull_size_box)
//	80490E88: 804961D4 (l_cull_size_box)
//	80490E8C: 80490E50 (getModelInfo__8daTbox_cFv)
//	80490E9C: 804061C0 (g_dComIfG_gameInfo)
//	80490EA0: 804061C0 (g_dComIfG_gameInfo)
//	80490EB4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80490EC0: 802CEC4C (__nw__FUl)
//	80490ECC: 80496868 (__vt__12J3DFrameCtrl)
//	80490ED0: 80496868 (__vt__12J3DFrameCtrl)
//	80490EDC: 803283FC (init__12J3DFrameCtrlFs)
//	80490F10: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80490F34: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	80490F80: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80490F9C: 804061C0 (g_dComIfG_gameInfo)
//	80490FA0: 804061C0 (g_dComIfG_gameInfo)
//	80490FA8: 80496334 (struct_80496334)
//	80490FAC: 80496334 (struct_80496334)
//	80490FB4: 80368994 (strcmp)
//	80490FC0: 80496334 (struct_80496334)
//	80490FC4: 80496334 (struct_80496334)
//	80490FD8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80490FE8: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80491008: 80491364 (checkAppear__8daTbox_cFv)
//	80491024: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80491038: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80491058: 802CEC4C (__nw__FUl)
//	80491064: 80496868 (__vt__12J3DFrameCtrl)
//	80491068: 80496868 (__vt__12J3DFrameCtrl)
//	80491074: 803283FC (init__12J3DFrameCtrlFs)
//	804910A8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	804910CC: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80491100: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80491104: 803DD470 (now__14mDoMtx_stack_c)
//	80491108: 803DD470 (now__14mDoMtx_stack_c)
//	80491110: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80491114: 803DD470 (now__14mDoMtx_stack_c)
//	80491118: 803DD470 (now__14mDoMtx_stack_c)
//	80491124: 803464B0 (PSMTXCopy)
//	80491134: 803DD470 (now__14mDoMtx_stack_c)
//	80491138: 803DD470 (now__14mDoMtx_stack_c)
//	80491140: 803464B0 (PSMTXCopy)
//	80491144: 803DD470 (now__14mDoMtx_stack_c)
//	80491148: 803DD470 (now__14mDoMtx_stack_c)
//	80491150: 803464B0 (PSMTXCopy)
//	8049115C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::commonShapeSet() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/commonShapeSet__8daTbox_cFv.s"
}
#pragma pop


/* 80491170-804911B8 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80491188: 80496868 (__vt__12J3DFrameCtrl)
//	8049118C: 80496868 (__vt__12J3DFrameCtrl)
//	8049119C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 804911B8-804911C0 0008+00 s=1 e=0 z=0  None .text      effectShapeSet__8daTbox_cFv                                  */
// True False
//  s32 False
s32 daTbox_c::effectShapeSet() {
	return 4;
}


/* 804911C0-804911C8 0008+00 s=1 e=0 z=0  None .text      envShapeSet__8daTbox_cFv                                     */
// True False
//  s32 False
s32 daTbox_c::envShapeSet() {
	return 4;
}


/* 804911C8-8049129C 00D4+00 s=1 e=0 z=0  None .text      bgCheckSet__8daTbox_cFv                                      */
//	804911E0: 80490E50 (getModelInfo__8daTbox_cFv)
//	804911F0: 804061C0 (g_dComIfG_gameInfo)
//	804911F4: 804061C0 (g_dComIfG_gameInfo)
//	80491204: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80491210: 802CEC4C (__nw__FUl)
//	8049121C: 8007B970 (__ct__4dBgWFv)
//	80491248: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
//	80491260: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80491264: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80491274: 8007B9C0 (Move__4dBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::bgCheckSet() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/bgCheckSet__8daTbox_cFv.s"
}
#pragma pop


/* 8049129C-804912EC 0050+00 s=1 e=0 z=0  None .text      lightReady__8daTbox_cFv                                      */
//	804912B0: 804912EC (setLightPos__8daTbox_cFv)
//	804912C4: 80496248 (lit_3934)
//	804912C8: 80496248 (lit_3934)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::lightReady() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/lightReady__8daTbox_cFv.s"
}
#pragma pop


/* 804912EC-8049135C 0070+00 s=2 e=0 z=0  None .text      setLightPos__8daTbox_cFv                                     */
//	80491300: 804968E4 (l_light_offset)
//	80491304: 804968E4 (l_light_offset)
//	8049132C: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::setLightPos() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/setLightPos__8daTbox_cFv.s"
}
#pragma pop


/* 8049135C-80491364 0008+00 s=2 e=0 z=0  None .text      checkEnv__8daTbox_cFv                                        */
// True False
//  bool False
bool daTbox_c::checkEnv() {
	return true;
}


/* 80491364-8049139C 0038+00 s=2 e=0 z=0  None .text      checkAppear__8daTbox_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::checkAppear() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/checkAppear__8daTbox_cFv.s"
}
#pragma pop


/* 8049139C-804913D0 0034+00 s=4 e=0 z=0  None .text      checkOpen__8daTbox_cFv                                       */
//	804913B0: 804061C0 (g_dComIfG_gameInfo)
//	804913B4: 804061C0 (g_dComIfG_gameInfo)
//	804913BC: 800347E8 (isTbox__12dSv_memBit_cCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::checkOpen() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/checkOpen__8daTbox_cFv.s"
}
#pragma pop


/* 804913D0-8049141C 004C+00 s=3 e=0 z=0  None .text      clrDzb__8daTbox_cFv                                          */
//	804913F0: 804061C0 (g_dComIfG_gameInfo)
//	804913F4: 804061C0 (g_dComIfG_gameInfo)
//	804913FC: 80074250 (Release__4cBgSFP9dBgW_Base)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::clrDzb() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/clrDzb__8daTbox_cFv.s"
}
#pragma pop


/* 8049141C-80491484 0068+00 s=6 e=0 z=0  None .text      setDzb__8daTbox_cFv                                          */
//	80491430: 804913D0 (clrDzb__8daTbox_cFv)
//	80491438: 8049139C (checkOpen__8daTbox_cFv)
//	80491458: 804061C0 (g_dComIfG_gameInfo)
//	8049145C: 804061C0 (g_dComIfG_gameInfo)
//	8049146C: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::setDzb() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/setDzb__8daTbox_cFv.s"
}
#pragma pop


/* 80491484-80491544 00C0+00 s=1 e=0 z=0  None .text      surfaceProc__8daTbox_cFv                                     */
//	80491498: 804961D4 (l_cull_size_box)
//	8049149C: 804961D4 (l_cull_size_box)
//	804914E8: 803DD470 (now__14mDoMtx_stack_c)
//	804914EC: 803DD470 (now__14mDoMtx_stack_c)
//	80491504: 803468E8 (PSMTXTrans)
//	80491508: 803DD470 (now__14mDoMtx_stack_c)
//	8049150C: 803DD470 (now__14mDoMtx_stack_c)
//	80491514: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80491518: 803DD470 (now__14mDoMtx_stack_c)
//	8049151C: 803DD470 (now__14mDoMtx_stack_c)
//	80491524: 803464B0 (PSMTXCopy)
//	8049152C: 8007B9C0 (Move__4dBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::surfaceProc() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/surfaceProc__8daTbox_cFv.s"
}
#pragma pop


/* 80491544-804915BC 0078+00 s=1 e=0 z=0  None .text      checkNormal__8daTbox_cFv                                     */
//	80491590: 804061C0 (g_dComIfG_gameInfo)
//	80491594: 804061C0 (g_dComIfG_gameInfo)
//	804915A0: 80035360 (isSwitch__10dSv_info_cCFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::checkNormal() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/checkNormal__8daTbox_cFv.s"
}
#pragma pop


/* 804915BC-80491624 0068+00 s=2 e=0 z=0  None .text      checkEnvEffectTbox__8daTbox_cFv                              */
//	80491608: 803AED78 (item_info__10dItem_data)
//	8049160C: 803AED78 (item_info__10dItem_data)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::checkEnvEffectTbox() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/checkEnvEffectTbox__8daTbox_cFv.s"
}
#pragma pop


/* 80491624-804916A4 0080+00 s=1 e=0 z=0  None .text      calcHeapSize__8daTbox_cFv                                    */
//	80491644: 8049139C (checkOpen__8daTbox_cFv)
//	8049164C: 80491364 (checkAppear__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::calcHeapSize() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/calcHeapSize__8daTbox_cFv.s"
}
#pragma pop


/* 804916A4-80491744 00A0+00 s=1 e=0 z=0  None .text      CreateHeap__8daTbox_cFv                                      */
//	804916B8: 80490E6C (commonShapeSet__8daTbox_cFv)
//	804916D0: 8049135C (checkEnv__8daTbox_cFv)
//	804916E0: 804911C0 (envShapeSet__8daTbox_cFv)
//	804916F8: 8049139C (checkOpen__8daTbox_cFv)
//	80491708: 804911B8 (effectShapeSet__8daTbox_cFv)
//	80491720: 804911C8 (bgCheckSet__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/CreateHeap__8daTbox_cFv.s"
}
#pragma pop


/* 80491744-804919B0 026C+00 s=1 e=0 z=0  None .text      CreateInit__8daTbox_cFv                                      */
//	80491754: 803621DC (_savegpr_29)
//	8049175C: 804961D4 (l_cull_size_box)
//	80491760: 804961D4 (l_cull_size_box)
//	80491780: 804919B0 (initPos__8daTbox_cFv)
//	80491788: 80491BB0 (initAnm__8daTbox_cFv)
//	804917B0: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	804917B8: 804964B8 (l_cyl_src)
//	804917BC: 804964B8 (l_cyl_src)
//	804917C0: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	804917E4: 8026F114 (Set__8cM3dGCylFRC9cM3dGCylS)
//	804917F4: 804061C0 (g_dComIfG_gameInfo)
//	804917F8: 804061C0 (g_dComIfG_gameInfo)
//	80491800: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80491814: 804913D0 (clrDzb__8daTbox_cFv)
//	8049182C: 8049141C (setDzb__8daTbox_cFv)
//	80491854: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80491880: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	804918B0: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	804918DC: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	804918EC: 804061C0 (g_dComIfG_gameInfo)
//	804918F0: 804061C0 (g_dComIfG_gameInfo)
//	80491908: 80047698 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cUc)
//	80491924: 80490E50 (getModelInfo__8daTbox_cFv)
//	80491938: 80496334 (struct_80496334)
//	8049193C: 80496334 (struct_80496334)
//	80491948: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	80491954: 804953D4 (initBaseMtx__8daTbox_cFv)
//	8049195C: 8049129C (lightReady__8daTbox_cFv)
//	80491994: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	8049199C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::CreateInit() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/CreateInit__8daTbox_cFv.s"
}
#pragma pop


/* 804919B0-80491BB0 0200+00 s=1 e=0 z=0  None .text      initPos__8daTbox_cFv                                         */
//	804919C0: 803621DC (_savegpr_29)
//	804919FC: 800517EC (dPath_GetRoomPath__Fii)
//	80491A0C: 804061C0 (g_dComIfG_gameInfo)
//	80491A10: 804061C0 (g_dComIfG_gameInfo)
//	80491A1C: 80035360 (isSwitch__10dSv_info_cCFii)
//	80491A88: 80494950 (checkDrop__8daTbox_cFv)
//	80491AA0: 804928DC (calcJumpGoalAndAngle__8daTbox_cFP4cXyzPs)
//	80491ADC: 80492B10 (getDropSAngle__8daTbox_cFPs)
//	80491B04: 80496254 (lit_4222)
//	80491B08: 80496254 (lit_4222)
//	80491B14: 80496258 (lit_4223)
//	80491B18: 80496258 (lit_4223)
//	80491B30: 8001DC68 (lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80491B40: 804061C0 (g_dComIfG_gameInfo)
//	80491B44: 804061C0 (g_dComIfG_gameInfo)
//	80491B4C: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	80491B50: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	80491B58: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	80491B9C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::initPos() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/initPos__8daTbox_cFv.s"
}
#pragma pop


/* 80491BB0-80491F68 03B8+00 s=1 e=0 z=0  None .text      initAnm__8daTbox_cFv                                         */
//	80491BC0: 803621DC (_savegpr_29)
//	80491BC8: 80496494 (cNullVec__6Z2Calc)
//	80491BCC: 80496494 (cNullVec__6Z2Calc)
//	80491BD8: 8049139C (checkOpen__8daTbox_cFv)
//	80491BEC: 8049625C (lit_4357)
//	80491BF0: 8049625C (lit_4357)
//	80491C34: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80491C40: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80491C44: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80491CC8: 8009C1F0 (offStatus__7dTres_cFUcii)
//	80491CD4: 8049135C (checkEnv__8daTbox_cFv)
//	80491D00: 80491544 (checkNormal__8daTbox_cFv)
//	80491D18: 80494950 (checkDrop__8daTbox_cFv)
//	80491D50: 804061C0 (g_dComIfG_gameInfo)
//	80491D54: 804061C0 (g_dComIfG_gameInfo)
//	80491D60: 80035360 (isSwitch__10dSv_info_cCFii)
//	80491D88: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80491D94: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80491D98: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80491E8C: 8009C168 (onStatus__7dTres_cFUcii)
//	80491EA4: 8009C1F0 (offStatus__7dTres_cFUcii)
//	80491F54: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::initAnm() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/initAnm__8daTbox_cFv.s"
}
#pragma pop


/* 80491F68-804920A8 0140+00 s=1 e=0 z=0  None .text      boxCheck__8daTbox_cFv                                        */
//	80491F80: 803621D8 (_savegpr_28)
//	80491F88: 804961D4 (l_cull_size_box)
//	80491F8C: 804961D4 (l_cull_size_box)
//	80491F90: 804061C0 (g_dComIfG_gameInfo)
//	80491F94: 804061C0 (g_dComIfG_gameInfo)
//	80491FA0: 80496334 (struct_80496334)
//	80491FA4: 80496334 (struct_80496334)
//	80491FAC: 80368994 (strcmp)
//	80491FF4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80492024: 80347138 (PSVECSquareMag)
//	80492050: 8001A79C (fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80492064: 8001A79C (fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80492094: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::boxCheck() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/boxCheck__8daTbox_cFv.s"
}
#pragma pop


/* 804920A8-8049216C 00C4+00 s=1 e=0 z=0  None .text      demoProcOpen__8daTbox_cFv                                    */
//	804920E0: 801A7A00 (dKy_efplight_cut__FP15LIGHT_INFLUENCE)
//	804920F4: 804923D4 (lightDownProc__8daTbox_cFv)
//	80492108: 80492398 (lightUpProc__8daTbox_cFv)
//	80492120: 80439A20 (sincosTable___5JMath)
//	80492124: 80439A20 (sincosTable___5JMath)
//	8049212C: 8049622C (lit_3834)
//	80492130: 8049622C (lit_3834)
//	80492134: 8049626C (lit_4441)
//	80492138: 8049626C (lit_4441)
//	8049214C: 8049216C (lightColorProc__8daTbox_cFv)
//	80492154: 8049233C (environmentProc__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::demoProcOpen() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/demoProcOpen__8daTbox_cFv.s"
}
#pragma pop


/* 8049216C-8049233C 01D0+00 s=1 e=0 z=0  None .text      lightColorProc__8daTbox_cFv                                  */
//	8049217C: 803621D0 (_savegpr_26)
//	80492198: 80496270 (key_frame)
//	8049219C: 80496270 (key_frame)
//	804921C8: 80496270 (key_frame)
//	804921CC: 80496270 (key_frame)
//	804921F4: 8049628C (key_color)
//	804921F8: 8049628C (key_color)
//	8049220C: 8049625C (lit_4357)
//	80492210: 8049625C (lit_4357)
//	804922F8: 802706D0 (cLib_chaseS__FPsss)
//	8049230C: 802706D0 (cLib_chaseS__FPsss)
//	80492320: 802706D0 (cLib_chaseS__FPsss)
//	80492328: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::lightColorProc() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/lightColorProc__8daTbox_cFv.s"
}
#pragma pop


/* 8049233C-80492398 005C+00 s=1 e=0 z=0  None .text      environmentProc__8daTbox_cFv                                 */
//	80492348: 804961D4 (l_cull_size_box)
//	8049234C: 804961D4 (l_cull_size_box)
//	80492370: 8026F97C (cLib_addCalc__FPfffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::environmentProc() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/environmentProc__8daTbox_cFv.s"
}
#pragma pop


/* 80492398-804923D4 003C+00 s=1 e=0 z=0  None .text      lightUpProc__8daTbox_cFv                                     */
//	804923A4: 804961D4 (l_cull_size_box)
//	804923A8: 804961D4 (l_cull_size_box)
//	804923C0: 8026F97C (cLib_addCalc__FPfffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::lightUpProc() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/lightUpProc__8daTbox_cFv.s"
}
#pragma pop


/* 804923D4-80492408 0034+00 s=1 e=0 z=0  None .text      lightDownProc__8daTbox_cFv                                   */
//	804923E0: 804962C4 (lit_4499)
//	804923E4: 804962C4 (lit_4499)
//	804923E8: 80496254 (lit_4222)
//	804923EC: 80496254 (lit_4222)
//	804923F4: 8026FA80 (cLib_addCalc0__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::lightDownProc() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/lightDownProc__8daTbox_cFv.s"
}
#pragma pop


/* 80492408-80492450 0048+00 s=2 e=0 z=0  None .text      dropProcInitCall__8daTbox_cFv                                */
//	80492434: 80492D08 (dropProcInit2__8daTbox_cFv)
//	8049243C: 80492450 (dropProcInit__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::dropProcInitCall() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/dropProcInitCall__8daTbox_cFv.s"
}
#pragma pop


/* 80492450-804928DC 048C+00 s=1 e=0 z=0  None .text      dropProcInit__8daTbox_cFv                                    */
//	80492488: 804961D4 (l_cull_size_box)
//	8049248C: 804961D4 (l_cull_size_box)
//	8049249C: 800517EC (dPath_GetRoomPath__Fii)
//	80492558: 8034739C (PSVECSquareDistance)
//	804925C8: 80450AE0 (__float_nan)
//	804925CC: 80450AE0 (__float_nan)
//	80492638: 80450AE0 (__float_nan)
//	8049263C: 80450AE0 (__float_nan)
//	80492654: 80492C84 (setRotAxis__8daTbox_cFPC4cXyzPC4cXyz)
//	804926B4: 8034739C (PSVECSquareDistance)
//	80492724: 80450AE0 (__float_nan)
//	80492728: 80450AE0 (__float_nan)
//	80492794: 80450AE0 (__float_nan)
//	80492798: 80450AE0 (__float_nan)
//	80492834: 80492C84 (setRotAxis__8daTbox_cFPC4cXyzPC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::dropProcInit() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/dropProcInit__8daTbox_cFv.s"
}
#pragma pop


/* 804928DC-80492B10 0234+00 s=2 e=0 z=0  None .text      calcJumpGoalAndAngle__8daTbox_cFP4cXyzPs                     */
//	804928F4: 803621D8 (_savegpr_28)
//	80492904: 804961D4 (l_cull_size_box)
//	80492908: 804961D4 (l_cull_size_box)
//	80492918: 800517EC (dPath_GetRoomPath__Fii)
//	8049297C: 8034739C (PSVECSquareDistance)
//	804929EC: 80450AE0 (__float_nan)
//	804929F0: 80450AE0 (__float_nan)
//	80492A5C: 80450AE0 (__float_nan)
//	80492A60: 80450AE0 (__float_nan)
//	80492A74: 80492B10 (getDropSAngle__8daTbox_cFPs)
//	80492A88: 803DD470 (now__14mDoMtx_stack_c)
//	80492A8C: 803DD470 (now__14mDoMtx_stack_c)
//	80492A94: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80492A98: 803DD470 (now__14mDoMtx_stack_c)
//	80492A9C: 803DD470 (now__14mDoMtx_stack_c)
//	80492AA8: 80346D6C (PSMTXMultVec)
//	80492AB8: 80347090 (PSVECAdd)
//	80492AFC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz* False
// 	 cXyz False
//  s16* False
// 	 s16 False
asm void daTbox_c::calcJumpGoalAndAngle(cXyz* param_0, s16* param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/calcJumpGoalAndAngle__8daTbox_cFP4cXyzPs.s"
}
#pragma pop


/* 80492B10-80492BC8 00B8+00 s=4 e=0 z=0  None .text      getDropSAngle__8daTbox_cFPs                                  */
//	80492B48: 80492BC8 (getDir__8daTbox_cFv)
//	80492B58: 80492BC8 (getDir__8daTbox_cFv)
//	80492B68: 8049625C (lit_4357)
//	80492B6C: 8049625C (lit_4357)
//	80492B88: 804962F0 (lit_4756)
//	80492B8C: 804962F0 (lit_4756)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s16* False
// 	 s16 False
asm void daTbox_c::getDropSAngle(s16* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/getDropSAngle__8daTbox_cFPs.s"
}
#pragma pop


/* 80492BC8-80492C84 00BC+00 s=1 e=0 z=0  None .text      getDir__8daTbox_cFv                                          */
//	80492BD8: 803621D4 (_savegpr_27)
//	80492BF8: 804061C0 (g_dComIfG_gameInfo)
//	80492BFC: 804061C0 (g_dComIfG_gameInfo)
//	80492C08: 80035360 (isSwitch__10dSv_info_cCFii)
//	80492C24: 804061C0 (g_dComIfG_gameInfo)
//	80492C28: 804061C0 (g_dComIfG_gameInfo)
//	80492C44: 80035360 (isSwitch__10dSv_info_cCFii)
//	80492C70: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::getDir() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/getDir__8daTbox_cFv.s"
}
#pragma pop


/* 80492C84-80492D08 0084+00 s=2 e=0 z=0  None .text      setRotAxis__8daTbox_cFPC4cXyzPC4cXyz                         */
//	80492CA8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80492CC4: 80496248 (lit_3934)
//	80492CC8: 80496248 (lit_3934)
//	80492CD0: 803DD470 (now__14mDoMtx_stack_c)
//	80492CD4: 803DD470 (now__14mDoMtx_stack_c)
//	80492CDC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80492CE0: 803DD470 (now__14mDoMtx_stack_c)
//	80492CE4: 803DD470 (now__14mDoMtx_stack_c)
//	80492CF0: 80346D6C (PSMTXMultVec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
asm void daTbox_c::setRotAxis(cXyz const* param_0, cXyz const* param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/setRotAxis__8daTbox_cFPC4cXyzPC4cXyz.s"
}
#pragma pop


/* 80492D08-80492F50 0248+00 s=1 e=0 z=0  None .text      dropProcInit2__8daTbox_cFv                                   */
//	80492D28: 804961D4 (l_cull_size_box)
//	80492D2C: 804961D4 (l_cull_size_box)
//	80492D38: 804928DC (calcJumpGoalAndAngle__8daTbox_cFP4cXyzPs)
//	80492D44: 80496334 (struct_80496334)
//	80492D48: 80496334 (struct_80496334)
//	80492D54: 80006C0C (OSReport_Error)
//	80492D64: 800517EC (dPath_GetRoomPath__Fii)
//	80492E18: 8034739C (PSVECSquareDistance)
//	80492E88: 80450AE0 (__float_nan)
//	80492E8C: 80450AE0 (__float_nan)
//	80492EF8: 80450AE0 (__float_nan)
//	80492EFC: 80450AE0 (__float_nan)
//	80492F14: 80492C84 (setRotAxis__8daTbox_cFPC4cXyzPC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::dropProcInit2() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/dropProcInit2__8daTbox_cFv.s"
}
#pragma pop


/* 80492F50-804932C0 0370+00 s=2 e=0 z=0  None .text      dropProc__8daTbox_cFv                                        */
//	80492F60: 803621C8 (_savegpr_24)
//	80492F68: 804961D4 (l_cull_size_box)
//	80492F6C: 804961D4 (l_cull_size_box)
//	80492FCC: 80346484 (PSMTXIdentity)
//	80492FF8: 80346484 (PSMTXIdentity)
//	8049302C: 804061C0 (g_dComIfG_gameInfo)
//	80493030: 804061C0 (g_dComIfG_gameInfo)
//	80493054: 8004D068 (setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	8049306C: 804061C0 (g_dComIfG_gameInfo)
//	80493070: 804061C0 (g_dComIfG_gameInfo)
//	80493088: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	804930BC: 8007757C (__ct__11dBgS_GndChkFv)
//	804930C0: 8049680C (__vt__14dBgS_ObjGndChk)
//	804930C4: 8049680C (__vt__14dBgS_ObjGndChk)
//	804930E8: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	804930F4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80493108: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80493124: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	80493138: 8002D06C (dComIfGp_getReverb__Fi)
//	8049314C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80493150: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80493178: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8049317C: 8049680C (__vt__14dBgS_ObjGndChk)
//	80493180: 8049680C (__vt__14dBgS_ObjGndChk)
//	8049319C: 800775F0 (__dt__11dBgS_GndChkFv)
//	804931A8: 8034739C (PSVECSquareDistance)
//	80493218: 80450AE0 (__float_nan)
//	8049321C: 80450AE0 (__float_nan)
//	80493288: 80450AE0 (__float_nan)
//	8049328C: 80450AE0 (__float_nan)
//	804932AC: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::dropProc() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/dropProc__8daTbox_cFv.s"
}
#pragma pop


/* 804932C0-80493338 0078+00 s=4 e=0 z=0  None .text      __dt__14dBgS_ObjGndChkFv                                     */
//	804932E0: 8049680C (__vt__14dBgS_ObjGndChk)
//	804932E4: 8049680C (__vt__14dBgS_ObjGndChk)
//	80493308: 800775F0 (__dt__11dBgS_GndChkFv)
//	80493318: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjGndChk::~dBgS_ObjGndChk() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__14dBgS_ObjGndChkFv.s"
}
#pragma pop


/* 80493338-80493484 014C+00 s=1 e=0 z=0  None .text      demoInitAppear__8daTbox_cFv                                  */
//	80493348: 803621D0 (_savegpr_26)
//	80493350: 804961D4 (l_cull_size_box)
//	80493354: 804961D4 (l_cull_size_box)
//	804933A8: 804061C0 (g_dComIfG_gameInfo)
//	804933AC: 804061C0 (g_dComIfG_gameInfo)
//	804933F4: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80493428: 8002D06C (dComIfGp_getReverb__Fi)
//	8049343C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80493440: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80493468: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80493470: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::demoInitAppear() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/demoInitAppear__8daTbox_cFv.s"
}
#pragma pop


/* 80493484-80493518 0094+00 s=1 e=0 z=0  None .text      demoProcAppear__8daTbox_cFv                                  */
//	804934B4: 8049630C (lit_5021)
//	804934B8: 8049630C (lit_5021)
//	804934D4: 8000D428 (play__14mDoExt_baseAnmFv)
//	804934E0: 80496248 (lit_3934)
//	804934E4: 80496248 (lit_3934)
//	804934F0: 804061C0 (g_dComIfG_gameInfo)
//	804934F4: 804061C0 (g_dComIfG_gameInfo)
//	80493500: 8004817C (cutEnd__16dEvent_manager_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::demoProcAppear() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/demoProcAppear__8daTbox_cFv.s"
}
#pragma pop


/* 80493518-80493838 0320+00 s=7 e=0 z=0  None .text      demoProc__8daTbox_cFv                                        */
//	80493528: 803621DC (_savegpr_29)
//	80493530: 804061C0 (g_dComIfG_gameInfo)
//	80493534: 804061C0 (g_dComIfG_gameInfo)
//	80493544: 804965C8 (action_table)
//	80493548: 804965C8 (action_table)
//	80493558: 80047E10 (getMyActIdx__16dEvent_manager_cFiPCPCciii)
//	80493568: 80047D4C (getIsAddvance__16dEvent_manager_cFi)
//	804935A8: 804939A4 (OpenInit__8daTbox_cFv)
//	804935BC: 8009C1F0 (offStatus__7dTres_cFUcii)
//	804935D0: 80496310 (lit_5135)
//	804935D4: 80496310 (lit_5135)
//	804935E0: 8049141C (setDzb__8daTbox_cFv)
//	80493600: 8009C168 (onStatus__7dTres_cFUcii)
//	80493608: 80493338 (demoInitAppear__8daTbox_cFv)
//	80493614: 80493838 (OpenInit_com__8daTbox_cFv)
//	80493628: 8009C1F0 (offStatus__7dTres_cFUcii)
//	80493664: 80493484 (demoProcAppear__8daTbox_cFv)
//	8049366C: 80491484 (surfaceProc__8daTbox_cFv)
//	80493688: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8049369C: 804061C0 (g_dComIfG_gameInfo)
//	804936A0: 804061C0 (g_dComIfG_gameInfo)
//	804936C4: 8000D428 (play__14mDoExt_baseAnmFv)
//	804936E8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80493710: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80493724: 804061C0 (g_dComIfG_gameInfo)
//	80493728: 804061C0 (g_dComIfG_gameInfo)
//	8049374C: 8000D428 (play__14mDoExt_baseAnmFv)
//	80493770: 8004817C (cutEnd__16dEvent_manager_cFi)
//	804937A8: 80492408 (dropProcInitCall__8daTbox_cFv)
//	804937BC: 80492F50 (dropProc__8daTbox_cFv)
//	804937E0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	804937F0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80493804: 804920A8 (demoProcOpen__8daTbox_cFv)
//	80493818: 801A8A44 (dKy_set_allcol_ratio__Ff)
//	80493824: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::demoProc() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/demoProc__8daTbox_cFv.s"
}
#pragma pop


/* 80493838-804939A4 016C+00 s=2 e=0 z=0  None .text      OpenInit_com__8daTbox_cFv                                    */
//	80493848: 803621DC (_savegpr_29)
//	80493850: 804961D4 (l_cull_size_box)
//	80493854: 804961D4 (l_cull_size_box)
//	80493874: 804061C0 (g_dComIfG_gameInfo)
//	80493878: 804061C0 (g_dComIfG_gameInfo)
//	80493880: 800347A0 (onTbox__12dSv_memBit_cFi)
//	80493888: 8049141C (setDzb__8daTbox_cFv)
//	80493898: 8007B9C0 (Move__4dBgWFv)
//	804938A0: 804915BC (checkEnvEffectTbox__8daTbox_cFv)
//	804938B8: 801A8A44 (dKy_set_allcol_ratio__Ff)
//	804938CC: 801A797C (dKy_efplight_set__FP15LIGHT_INFLUENCE)
//	804938E4: 80490E50 (getModelInfo__8daTbox_cFv)
//	804938F0: 804061C0 (g_dComIfG_gameInfo)
//	804938F4: 804061C0 (g_dComIfG_gameInfo)
//	80493904: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80493928: 8000D7DC (init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb)
//	80493950: 8002D06C (dComIfGp_getReverb__Fi)
//	8049395C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80493960: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80493988: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80493990: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::OpenInit_com() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/OpenInit_com__8daTbox_cFv.s"
}
#pragma pop


/* 804939A4-804939F4 0050+00 s=1 e=0 z=0  None .text      OpenInit__8daTbox_cFv                                        */
//	804939B8: 80493838 (OpenInit_com__8daTbox_cFv)
//	804939DC: 804912EC (setLightPos__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::OpenInit() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/OpenInit__8daTbox_cFv.s"
}
#pragma pop


/* 804939F4-804939FC 0008+00 s=2 e=0 z=0  None .text      actionWait__8daTbox_cFv                                      */
// True False
//  bool False
bool daTbox_c::actionWait() {
	return true;
}


/* 804939FC-80493CC8 02CC+00 s=1 e=0 z=0  None .text      actionDemo__8daTbox_cFv                                      */
//	80493A0C: 803621DC (_savegpr_29)
//	80493A18: 804061C0 (g_dComIfG_gameInfo)
//	80493A1C: 804061C0 (g_dComIfG_gameInfo)
//	80493A24: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80493A3C: 80496248 (lit_3934)
//	80493A40: 80496248 (lit_3934)
//	80493A54: 804965DC (lit_5194)
//	80493A58: 804965DC (lit_5194)
//	80493A78: 804965E8 (lit_5197)
//	80493A7C: 804965E8 (lit_5197)
//	80493AA0: 80042468 (reset__14dEvt_control_cFv)
//	80493AA4: 80496244 (lit_3933)
//	80493AA8: 80496244 (lit_3933)
//	80493AAC: 801A8A44 (dKy_set_allcol_ratio__Ff)
//	80493AC4: 800436BC (setPtI__14dEvt_control_cFPv)
//	80493AE0: 80496334 (struct_80496334)
//	80493AE4: 80496334 (struct_80496334)
//	80493AEC: 80368994 (strcmp)
//	80493B24: 804061C0 (g_dComIfG_gameInfo)
//	80493B28: 804061C0 (g_dComIfG_gameInfo)
//	80493B3C: 80034A04 (getEventReg__11dSv_event_cCFUs)
//	80493B58: 800349E0 (setEventReg__11dSv_event_cFUsUc)
//	80493B60: 804061C0 (g_dComIfG_gameInfo)
//	80493B64: 804061C0 (g_dComIfG_gameInfo)
//	80493B78: 80034A04 (getEventReg__11dSv_event_cCFUs)
//	80493B94: 800349E0 (setEventReg__11dSv_event_cFUsUc)
//	80493B9C: 80496334 (struct_80496334)
//	80493BA0: 80496334 (struct_80496334)
//	80493BAC: 80006C0C (OSReport_Error)
//	80493BD0: 804061C0 (g_dComIfG_gameInfo)
//	80493BD4: 804061C0 (g_dComIfG_gameInfo)
//	80493BE8: 80034A04 (getEventReg__11dSv_event_cCFUs)
//	80493C04: 800349E0 (setEventReg__11dSv_event_cFUsUc)
//	80493C0C: 80496334 (struct_80496334)
//	80493C10: 80496334 (struct_80496334)
//	80493C1C: 80006C0C (OSReport_Error)
//	80493C28: 80496334 (struct_80496334)
//	80493C2C: 80496334 (struct_80496334)
//	80493C34: 80368994 (strcmp)
//	80493C5C: 804061C0 (g_dComIfG_gameInfo)
//	80493C60: 804061C0 (g_dComIfG_gameInfo)
//	80493C74: 80034A04 (getEventReg__11dSv_event_cCFUs)
//	80493C90: 800349E0 (setEventReg__11dSv_event_cFUsUc)
//	80493C9C: 80493518 (demoProc__8daTbox_cFv)
//	80493CB4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionDemo() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionDemo__8daTbox_cFv.s"
}
#pragma pop


/* 80493CC8-80493D90 00C8+00 s=2 e=0 z=0  None .text      actionDemo2__8daTbox_cFv                                     */
//	80493CEC: 804061C0 (g_dComIfG_gameInfo)
//	80493CF0: 804061C0 (g_dComIfG_gameInfo)
//	80493CF8: 80496334 (struct_80496334)
//	80493CFC: 80496334 (struct_80496334)
//	80493D04: 80047ADC (endCheckOld__16dEvent_manager_cFPCc)
//	80493D20: 804061C0 (g_dComIfG_gameInfo)
//	80493D24: 804061C0 (g_dComIfG_gameInfo)
//	80493D30: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80493D3C: 804965F4 (lit_5283)
//	80493D40: 804965F4 (lit_5283)
//	80493D5C: 804061C0 (g_dComIfG_gameInfo)
//	80493D60: 804061C0 (g_dComIfG_gameInfo)
//	80493D68: 80042468 (reset__14dEvt_control_cFv)
//	80493D74: 80493518 (demoProc__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionDemo2() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionDemo2__8daTbox_cFv.s"
}
#pragma pop


/* 80493D90-80493ED8 0148+00 s=2 e=0 z=0  None .text      actionDropDemo__8daTbox_cFv                                  */
//	80493DB4: 804061C0 (g_dComIfG_gameInfo)
//	80493DB8: 804061C0 (g_dComIfG_gameInfo)
//	80493DC0: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80493DCC: 80496600 (lit_5303)
//	80493DD0: 80496600 (lit_5303)
//	80493DF0: 80042468 (reset__14dEvt_control_cFv)
//	80493DF8: 8049141C (setDzb__8daTbox_cFv)
//	80493E20: 804061C0 (g_dComIfG_gameInfo)
//	80493E24: 804061C0 (g_dComIfG_gameInfo)
//	80493E40: 801614AC (Start__9dCamera_cFv)
//	80493E4C: 8016300C (SetTrimSize__9dCamera_cFl)
//	80493E60: 80493518 (demoProc__8daTbox_cFv)
//	80493E68: 80492F50 (dropProc__8daTbox_cFv)
//	80493E84: 8049660C (lit_5312)
//	80493E88: 8049660C (lit_5312)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionDropDemo() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionDropDemo__8daTbox_cFv.s"
}
#pragma pop


/* 80493ED8-80493FE8 0110+00 s=5 e=0 z=0  None .text      getBombItemNo__8daTbox_cFUcUc                                */
//	80493F14: 80496668 (lit_5368)
//	80493F18: 80496668 (lit_5368)
//	80493F5C: 80496618 (lit_5369)
//	80493F60: 80496618 (lit_5369)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  u8 False
asm void daTbox_c::getBombItemNo(u8 param_0, u8 param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/getBombItemNo__8daTbox_cFUcUc.s"
}
#pragma pop


/* 80493FE8-80494144 015C+00 s=1 e=0 z=0  None .text      getBombItemNo2__8daTbox_cFUcUcUc                             */
//	804940A4: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	804940B8: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	804940DC: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	804940F0: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	80494114: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	80494128: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  u8 False
//  u8 False
asm void daTbox_c::getBombItemNo2(u8 param_0, u8 param_1, u8 param_2) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/getBombItemNo2__8daTbox_cFUcUcUc.s"
}
#pragma pop


/* 80494144-804942CC 0188+00 s=1 e=0 z=0  None .text      getBombItemNo3__8daTbox_cFUcUcUcUc                           */
//	8049421C: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	80494230: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	8049425C: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	80494270: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	8049429C: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	804942B0: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  u8 False
//  u8 False
//  u8 False
asm void daTbox_c::getBombItemNo3(u8 param_0, u8 param_1, u8 param_2, u8 param_3) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/getBombItemNo3__8daTbox_cFUcUcUcUc.s"
}
#pragma pop


/* 804942CC-804945C8 02FC+00 s=1 e=0 z=0  None .text      getBombItemNoMain__8daTbox_cFUc                              */
//	804942DC: 803621BC (_savegpr_21)
//	804942F0: 804061C0 (g_dComIfG_gameInfo)
//	804942F4: 804061C0 (g_dComIfG_gameInfo)
//	8049431C: 80033030 (getItem__17dSv_player_item_cCFib)
//	80494330: 800340F8 (getBombNum__21dSv_player_item_max_cCFUc)
//	80494340: 80033F7C (getBombNum__24dSv_player_item_record_cCFUc)
//	804943AC: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	804943F4: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	80494424: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	80494440: 80493FE8 (getBombItemNo2__8daTbox_cFUcUcUc)
//	804944A0: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	804944D0: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	804944EC: 80493FE8 (getBombItemNo2__8daTbox_cFUcUcUc)
//	80494534: 80493ED8 (getBombItemNo__8daTbox_cFUcUc)
//	80494550: 80493FE8 (getBombItemNo2__8daTbox_cFUcUcUc)
//	80494584: 80493FE8 (getBombItemNo2__8daTbox_cFUcUcUc)
//	804945A4: 80494144 (getBombItemNo3__8daTbox_cFUcUcUcUc)
//	804945B4: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void daTbox_c::getBombItemNoMain(u8 param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/getBombItemNoMain__8daTbox_cFUc.s"
}
#pragma pop


/* 804945C8-804946A4 00DC+00 s=1 e=0 z=0  None .text      setGetDemoItem__8daTbox_cFv                                  */
//	80494614: 804942CC (getBombItemNoMain__8daTbox_cFUc)
//	80494644: 8001BBE8 (fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz)
//	80494668: 8001BC74 (fopAcM_createItemForTrBoxDemo__FPC4cXyziiiPC5csXyzPC4cXyz)
//	8049467C: 804061C0 (g_dComIfG_gameInfo)
//	80494680: 804061C0 (g_dComIfG_gameInfo)
//	80494688: 800436EC (setPtI_Id__14dEvt_control_cFUi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::setGetDemoItem() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/setGetDemoItem__8daTbox_cFv.s"
}
#pragma pop


/* 804946A4-804948CC 0228+00 s=11 e=0 z=0  None .text      actionOpenWait__8daTbox_cFv                                  */
//	804946B4: 803621D4 (_savegpr_27)
//	804946BC: 80496494 (cNullVec__6Z2Calc)
//	804946C0: 80496494 (cNullVec__6Z2Calc)
//	804946C4: 80451018 (m_midnaActor__9daPy_py_c)
//	804946C8: 80451018 (m_midnaActor__9daPy_py_c)
//	804946CC: 804061C0 (g_dComIfG_gameInfo)
//	804946D0: 804061C0 (g_dComIfG_gameInfo)
//	80494714: 80362084 (__ptmf_scall)
//	8049474C: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80494758: 80493518 (demoProc__8daTbox_cFv)
//	8049478C: 804945C8 (setGetDemoItem__8daTbox_cFv)
//	804947B8: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	804947C4: 80493518 (demoProc__8daTbox_cFv)
//	804947D4: 80491F68 (boxCheck__8daTbox_cFv)
//	804947FC: 80496334 (struct_80496334)
//	80494800: 80496334 (struct_80496334)
//	80494808: 80043428 (setEventName__11dEvt_info_cFPc)
//	80494810: 804061C0 (g_dComIfG_gameInfo)
//	80494814: 804061C0 (g_dComIfG_gameInfo)
//	80494830: 80362084 (__ptmf_scall)
//	80494844: 80496334 (struct_80496334)
//	80494848: 80496334 (struct_80496334)
//	80494850: 80043428 (setEventName__11dEvt_info_cFPc)
//	80494878: 804915BC (checkEnvEffectTbox__8daTbox_cFv)
//	80494888: 80496334 (struct_80496334)
//	8049488C: 80496334 (struct_80496334)
//	80494894: 80043428 (setEventName__11dEvt_info_cFPc)
//	804948A0: 80496334 (struct_80496334)
//	804948A4: 80496334 (struct_80496334)
//	804948AC: 80043428 (setEventName__11dEvt_info_cFPc)
//	804948B8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionOpenWait() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionOpenWait__8daTbox_cFv.s"
}
#pragma pop


/* 804948CC-80494950 0084+00 s=1 e=0 z=0  None .text      actionNotOpenDemo__8daTbox_cFv                               */
//	804948E4: 804061C0 (g_dComIfG_gameInfo)
//	804948E8: 804061C0 (g_dComIfG_gameInfo)
//	804948F4: 80047A78 (endCheck__16dEvent_manager_cFs)
//	80494900: 804966A0 (lit_5639)
//	80494904: 804966A0 (lit_5639)
//	80494924: 80042468 (reset__14dEvt_control_cFv)
//	80494930: 80493518 (demoProc__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionNotOpenDemo() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionNotOpenDemo__8daTbox_cFv.s"
}
#pragma pop


/* 80494950-80494A0C 00BC+00 s=3 e=0 z=0  None .text      checkDrop__8daTbox_cFv                                       */
//	80494960: 803621DC (_savegpr_29)
//	80494980: 804061C0 (g_dComIfG_gameInfo)
//	80494984: 804061C0 (g_dComIfG_gameInfo)
//	80494990: 80035360 (isSwitch__10dSv_info_cCFii)
//	804949B0: 804061C0 (g_dComIfG_gameInfo)
//	804949B4: 804061C0 (g_dComIfG_gameInfo)
//	804949D0: 80035360 (isSwitch__10dSv_info_cCFii)
//	804949F8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::checkDrop() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/checkDrop__8daTbox_cFv.s"
}
#pragma pop


/* 80494A0C-80494D88 037C+00 s=1 e=0 z=0  None .text      settingDropDemoCamera__8daTbox_cFv                           */
//	80494A24: 803621D0 (_savegpr_26)
//	80494A2C: 804961D4 (l_cull_size_box)
//	80494A30: 804961D4 (l_cull_size_box)
//	80494A34: 804061C0 (g_dComIfG_gameInfo)
//	80494A38: 804061C0 (g_dComIfG_gameInfo)
//	80494A54: 801614D0 (Stop__9dCamera_cFv)
//	80494A68: 80043500 (searchMapEventData__14dEvt_control_cFUcl)
//	80494A78: 8016300C (SetTrimSize__9dCamera_cFl)
//	80494A7C: 804061C0 (g_dComIfG_gameInfo)
//	80494A80: 804061C0 (g_dComIfG_gameInfo)
//	80494A90: 80024384 (getStatusRoomDt__20dStage_roomControl_cFi)
//	80494B04: 8034739C (PSVECSquareDistance)
//	80494B74: 80450AE0 (__float_nan)
//	80494B78: 80450AE0 (__float_nan)
//	80494BE4: 80450AE0 (__float_nan)
//	80494BE8: 80450AE0 (__float_nan)
//	80494BF4: 80430D24 (BaseY__4cXyz)
//	80494BF8: 80430D24 (BaseY__4cXyz)
//	80494C18: 80492B10 (getDropSAngle__8daTbox_cFPs)
//	80494C40: 803470B4 (PSVECSubtract)
//	80494C74: 80346878 (PSMTXRotAxisRad)
//	80494C84: 80346D6C (PSMTXMultVec)
//	80494C94: 80347090 (PSVECAdd)
//	80494CD4: 80439A20 (sincosTable___5JMath)
//	80494CD8: 80439A20 (sincosTable___5JMath)
//	80494D5C: 80180B40 (Set__9dCamera_cF4cXyz4cXyzsf)
//	80494D74: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::settingDropDemoCamera() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/settingDropDemoCamera__8daTbox_cFv.s"
}
#pragma pop


/* 80494D88-80494E98 0110+00 s=1 e=0 z=0  None .text      actionSwOnWait__8daTbox_cFv                                  */
//	80494DA8: 804966AC (lit_5868)
//	80494DAC: 804966AC (lit_5868)
//	80494DC8: 804061C0 (g_dComIfG_gameInfo)
//	80494DCC: 804061C0 (g_dComIfG_gameInfo)
//	80494DD4: 804964B4 (l_staff_name)
//	80494DD8: 804964B4 (l_staff_name)
//	80494DE8: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80494DF4: 80493518 (demoProc__8daTbox_cFv)
//	80494E04: 804061C0 (g_dComIfG_gameInfo)
//	80494E08: 804061C0 (g_dComIfG_gameInfo)
//	80494E14: 80035360 (isSwitch__10dSv_info_cCFii)
//	80494E34: 80496334 (struct_80496334)
//	80494E38: 80496334 (struct_80496334)
//	80494E50: 8001B3CC (fopAcM_orderOtherEvent__FP10fopAc_ac_cPCcUsUsUs)
//	80494E70: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionSwOnWait() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionSwOnWait__8daTbox_cFv.s"
}
#pragma pop


/* 80494E98-80494F44 00AC+00 s=1 e=0 z=0  None .text      actionSwOnWait2__8daTbox_cFv                                 */
//	80494EB4: 804061C0 (g_dComIfG_gameInfo)
//	80494EB8: 804061C0 (g_dComIfG_gameInfo)
//	80494EC4: 80035360 (isSwitch__10dSv_info_cCFii)
//	80494ED0: 804966B8 (lit_5900)
//	80494ED4: 804966B8 (lit_5900)
//	80494EF4: 8049141C (setDzb__8daTbox_cFv)
//	80494F18: 8009C168 (onStatus__7dTres_cFUcii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionSwOnWait2() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionSwOnWait2__8daTbox_cFv.s"
}
#pragma pop


/* 80494F44-80495058 0114+00 s=1 e=0 z=0  None .text      actionDropWait__8daTbox_cFv                                  */
//	80494F5C: 80496494 (cNullVec__6Z2Calc)
//	80494F60: 80496494 (cNullVec__6Z2Calc)
//	80494F88: 804913D0 (clrDzb__8daTbox_cFv)
//	80494F94: 804061C0 (g_dComIfG_gameInfo)
//	80494F98: 804061C0 (g_dComIfG_gameInfo)
//	80494FAC: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	80494FC4: 80494A0C (settingDropDemoCamera__8daTbox_cFv)
//	80494FCC: 80494950 (checkDrop__8daTbox_cFv)
//	80495000: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
//	80495018: 80492408 (dropProcInitCall__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionDropWait() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionDropWait__8daTbox_cFv.s"
}
#pragma pop


/* 80495058-8049518C 0134+00 s=1 e=0 z=0  None .text      actionGenocide__8daTbox_cFv                                  */
//	80495078: 804966DC (lit_5954)
//	8049507C: 804966DC (lit_5954)
//	80495098: 804061C0 (g_dComIfG_gameInfo)
//	8049509C: 804061C0 (g_dComIfG_gameInfo)
//	804950A4: 804964B4 (l_staff_name)
//	804950A8: 804964B4 (l_staff_name)
//	804950B8: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	804950C4: 80493518 (demoProc__8daTbox_cFv)
//	804950D4: 8001CA1C (fopAcM_myRoomSearchEnemy__FSc)
//	8049510C: 80496334 (struct_80496334)
//	80495110: 80496334 (struct_80496334)
//	80495128: 8001B3CC (fopAcM_orderOtherEvent__FP10fopAc_ac_cPCcUsUsUs)
//	80495148: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
//	80495160: 804061C0 (g_dComIfG_gameInfo)
//	80495164: 804061C0 (g_dComIfG_gameInfo)
//	80495170: 80035200 (onSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionGenocide() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionGenocide__8daTbox_cFv.s"
}
#pragma pop


/* 8049518C-80495250 00C4+00 s=1 e=0 z=0  None .text      actionDropWaitForWeb__8daTbox_cFv                            */
//	804951D4: 804966E8 (lit_5997)
//	804951D8: 804966E8 (lit_5997)
//	80495200: 80496228 (lit_3833)
//	80495204: 80496228 (lit_3833)
//	80495214: 804061C0 (g_dComIfG_gameInfo)
//	80495218: 804061C0 (g_dComIfG_gameInfo)
//	80495224: 80035200 (onSwitch__10dSv_info_cFii)
//	8049522C: 80495490 (setBaseMtx__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionDropWaitForWeb() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionDropWaitForWeb__8daTbox_cFv.s"
}
#pragma pop


/* 80495250-804953D4 0184+00 s=1 e=0 z=0  None .text      actionDropForWeb__8daTbox_cFv                                */
//	80495260: 803621DC (_savegpr_29)
//	80495268: 804961D4 (l_cull_size_box)
//	8049526C: 804961D4 (l_cull_size_box)
//	80495274: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	8049527C: 804061C0 (g_dComIfG_gameInfo)
//	80495280: 804061C0 (g_dComIfG_gameInfo)
//	8049528C: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	804952DC: 80495490 (setBaseMtx__8daTbox_cFv)
//	80495314: 804061C0 (g_dComIfG_gameInfo)
//	80495318: 804061C0 (g_dComIfG_gameInfo)
//	8049533C: 8004D068 (setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	80495364: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8049536C: 8049141C (setDzb__8daTbox_cFv)
//	8049537C: 8007B9C0 (Move__4dBgWFv)
//	80495380: 804966F4 (lit_6017)
//	80495384: 804966F4 (lit_6017)
//	804953B4: 8009C3CC (setPosition__7dTres_cFiUcPC3Veci)
//	804953C0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::actionDropForWeb() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/actionDropForWeb__8daTbox_cFv.s"
}
#pragma pop


/* 804953D4-80495490 00BC+00 s=1 e=0 z=0  None .text      initBaseMtx__8daTbox_cFv                                     */
//	804953F0: 80430D0C (BaseX__4cXyz)
//	804953F4: 80430D0C (BaseX__4cXyz)
//	80495410: 80346484 (PSMTXIdentity)
//	80495458: 80495490 (setBaseMtx__8daTbox_cFv)
//	80495468: 8007B9C0 (Move__4dBgWFv)
//	80495478: 8007B9C0 (Move__4dBgWFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/initBaseMtx__8daTbox_cFv.s"
}
#pragma pop


/* 80495490-80495660 01D0+00 s=4 e=0 z=0  None .text      setBaseMtx__8daTbox_cFv                                      */
//	804954A8: 804961D4 (l_cull_size_box)
//	804954AC: 804961D4 (l_cull_size_box)
//	804954C0: 80346484 (PSMTXIdentity)
//	804954F4: 80346878 (PSMTXRotAxisRad)
//	80495500: 80492B10 (getDropSAngle__8daTbox_cFPs)
//	80495538: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80495558: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	80495568: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8049556C: 803DD470 (now__14mDoMtx_stack_c)
//	80495570: 803DD470 (now__14mDoMtx_stack_c)
//	8049557C: 803464E4 (PSMTXConcat)
//	80495580: 803DD470 (now__14mDoMtx_stack_c)
//	80495584: 803DD470 (now__14mDoMtx_stack_c)
//	80495590: 803464E4 (PSMTXConcat)
//	80495598: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	804955A8: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	804955C4: 803464B0 (PSMTXCopy)
//	804955CC: 803DD470 (now__14mDoMtx_stack_c)
//	804955D0: 803DD470 (now__14mDoMtx_stack_c)
//	804955DC: 803464B0 (PSMTXCopy)
//	804955EC: 803464E4 (PSMTXConcat)
//	804955FC: 803464B0 (PSMTXCopy)
//	8049560C: 803DD470 (now__14mDoMtx_stack_c)
//	80495610: 803DD470 (now__14mDoMtx_stack_c)
//	80495628: 803468E8 (PSMTXTrans)
//	80495630: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80495634: 803DD470 (now__14mDoMtx_stack_c)
//	80495638: 803DD470 (now__14mDoMtx_stack_c)
//	80495644: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/setBaseMtx__8daTbox_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804968F0-804968FC 000C+00 s=0 e=0 z=0  None .bss       @3824                                                        */
u8 lit_3824[12];

/* 804968FC-80496930 0034+00 s=0 e=0 z=0  None .bss       l_HIO                                                        */
u8 l_HIO[52];

/* 80496930-80496934 0004+00 s=1 e=0 z=0  None .bss       None                                                         */
static u8 data_80496930[4];

/* 80495660-804956EC 008C+00 s=1 e=0 z=0  None .text      mode_proc_call__8daTbox_cFv                                  */
//	8049566C: 80496494 (cNullVec__6Z2Calc)
//	80495670: 80496494 (cNullVec__6Z2Calc)
//	80495674: 80496930 (data_80496930)
//	80495678: 80496930 (data_80496930)
//	804956D4: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::mode_proc_call() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/mode_proc_call__8daTbox_cFv.s"
}
#pragma pop


/* 804956EC-80495818 012C+00 s=1 e=0 z=0  None .text      mode_exec_wait__8daTbox_cFv                                  */
//	80495744: 80496254 (lit_4222)
//	80495748: 80496254 (lit_4222)
//	80495754: 80496258 (lit_4223)
//	80495758: 80496258 (lit_4223)
//	80495770: 8001DC68 (lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8049577C: 804061C0 (g_dComIfG_gameInfo)
//	80495780: 804061C0 (g_dComIfG_gameInfo)
//	80495788: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	8049578C: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	80495794: 80074ABC (ChkMoveBG__4dBgSFRC13cBgS_PolyInfo)
//	804957A4: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	804957A8: 803F1C48 (mLineCheck__11fopAcM_lc_c)
//	804957FC: 80495818 (mode_exec__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::mode_exec_wait() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/mode_exec_wait__8daTbox_cFv.s"
}
#pragma pop


/* 80495818-80495910 00F8+00 s=2 e=0 z=0  None .text      mode_exec__8daTbox_cFv                                       */
//	80495830: 80362084 (__ptmf_scall)
//	80495864: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	80495878: 804061C0 (g_dComIfG_gameInfo)
//	8049587C: 804061C0 (g_dComIfG_gameInfo)
//	80495884: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	804958CC: 80495490 (setBaseMtx__8daTbox_cFv)
//	804958E0: 8007B9C0 (Move__4dBgWFv)
//	804958F8: 8009C3CC (setPosition__7dTres_cFiUcPC3Veci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::mode_exec() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/mode_exec__8daTbox_cFv.s"
}
#pragma pop


/* 80495910-804959EC 00DC+00 s=1 e=0 z=0  None .text      create1st__8daTbox_cFv                                       */
//	8049595C: 80490E50 (getModelInfo__8daTbox_cFv)
//	8049596C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80495980: 80491624 (calcHeapSize__8daTbox_cFv)
//	80495994: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	80495998: 80075AD8 (dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz)
//	804959A0: 800787BC (MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f)
//	804959B8: 80491744 (CreateInit__8daTbox_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::create1st() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/create1st__8daTbox_cFv.s"
}
#pragma pop


/* 804959EC-80495AF0 0104+00 s=1 e=0 z=0  None .text      Execute__8daTbox_cFPPA3_A4_f                                 */
//	80495A08: 80495660 (mode_proc_call__8daTbox_cFv)
//	80495A20: 804961EC (l_cyl_info)
//	80495A24: 804961EC (l_cyl_info)
//	80495A44: 803DD470 (now__14mDoMtx_stack_c)
//	80495A48: 803DD470 (now__14mDoMtx_stack_c)
//	80495A50: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80495A54: 803DD470 (now__14mDoMtx_stack_c)
//	80495A58: 803DD470 (now__14mDoMtx_stack_c)
//	80495A64: 80346D6C (PSMTXMultVec)
//	80495A74: 80347090 (PSVECAdd)
//	80495A88: 804061C0 (g_dComIfG_gameInfo)
//	80495A8C: 804061C0 (g_dComIfG_gameInfo)
//	80495A98: 80035360 (isSwitch__10dSv_info_cCFii)
//	80495ABC: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80495AC0: 804061C0 (g_dComIfG_gameInfo)
//	80495AC4: 804061C0 (g_dComIfG_gameInfo)
//	80495AD0: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 (** )[3][4] False
// 	 f32 False
// 	 ** False
// 		 * False
// 			  False
asm void daTbox_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/Execute__8daTbox_cFPPA3_A4_f.s"
}
#pragma pop


/* 80495AF0-80495C9C 01AC+00 s=1 e=0 z=0  None .text      Draw__8daTbox_cFv                                            */
//	80495B1C: 8042CA54 (g_env_light)
//	80495B20: 8042CA54 (g_env_light)
//	80495B30: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80495B48: 80496248 (lit_3934)
//	80495B4C: 80496248 (lit_3934)
//	80495B58: 8042CA54 (g_env_light)
//	80495B5C: 8042CA54 (g_env_light)
//	80495B68: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80495B80: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	80495B88: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80495B94: 8000DE8C (mDoExt_brkAnmRemove__FP12J3DModelData)
//	80495BAC: 8042CA54 (g_env_light)
//	80495BB0: 8042CA54 (g_env_light)
//	80495BC0: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80495BD0: 804061C0 (g_dComIfG_gameInfo)
//	80495BD4: 804061C0 (g_dComIfG_gameInfo)
//	80495BDC: 80434AC8 (j3dSys)
//	80495BE0: 80434AC8 (j3dSys)
//	80495BE8: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80495BEC: 804061C0 (g_dComIfG_gameInfo)
//	80495BF0: 804061C0 (g_dComIfG_gameInfo)
//	80495BF8: 80434AC8 (j3dSys)
//	80495BFC: 80434AC8 (j3dSys)
//	80495C1C: 8000D9CC (entry__13mDoExt_bckAnmFP12J3DModelDataf)
//	80495C3C: 8001D42C (fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData)
//	80495C40: 804061C0 (g_dComIfG_gameInfo)
//	80495C44: 804061C0 (g_dComIfG_gameInfo)
//	80495C4C: 80434AC8 (j3dSys)
//	80495C50: 80434AC8 (j3dSys)
//	80495C64: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80495C68: 804061C0 (g_dComIfG_gameInfo)
//	80495C6C: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::Draw() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/Draw__8daTbox_cFv.s"
}
#pragma pop


/* 80495C9C-80495CFC 0060+00 s=1 e=0 z=0  None .text      Delete__8daTbox_cFv                                          */
//	80495CBC: 804061C0 (g_dComIfG_gameInfo)
//	80495CC0: 804061C0 (g_dComIfG_gameInfo)
//	80495CC8: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80495CD0: 80490E50 (getModelInfo__8daTbox_cFv)
//	80495CE0: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTbox_c::Delete() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/Delete__8daTbox_cFv.s"
}
#pragma pop


/* 80495CFC-80495E38 013C+00 s=1 e=0 z=0  None .text      daTbox_create1st__FP8daTbox_c                                */
//	80495D0C: 803621DC (_savegpr_29)
//	80495D30: 80078624 (__ct__16dBgS_MoveBgActorFv)
//	80495D34: 804967E0 (__vt__12daTboxBase_c)
//	80495D38: 804967E0 (__vt__12daTboxBase_c)
//	80495D40: 803C3728 (__vt__9cCcD_Stts)
//	80495D44: 803C3728 (__vt__9cCcD_Stts)
//	80495D50: 80083760 (__ct__10dCcD_GSttsFv)
//	80495D54: 803AC2E4 (__vt__9dCcD_Stts)
//	80495D58: 803AC2E4 (__vt__9dCcD_Stts)
//	80495D70: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80495D74: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80495D78: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80495D80: 804967D4 (__vt__8cM3dGAab)
//	80495D84: 804967D4 (__vt__8cM3dGAab)
//	80495D8C: 804967C8 (__vt__8cM3dGCyl)
//	80495D90: 804967C8 (__vt__8cM3dGCyl)
//	80495D98: 803C35A4 (__vt__12cCcD_CylAttr)
//	80495D9C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80495DAC: 803AC050 (__vt__8dCcD_Cyl)
//	80495DB0: 803AC050 (__vt__8dCcD_Cyl)
//	80495DC8: 8049683C (__vt__8daTbox_c)
//	80495DCC: 8049683C (__vt__8daTbox_c)
//	80495DDC: 800760A0 (__ct__9dBgS_AcchFv)
//	80495DE0: 804967A4 (__vt__12dBgS_ObjAcch)
//	80495DE4: 804967A4 (__vt__12dBgS_ObjAcch)
//	80495E00: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80495E08: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80495E1C: 80495910 (create1st__8daTbox_cFv)
//	80495E24: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTbox_c* False
// 	 daTbox_c False
asm static void daTbox_create1st(daTbox_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/daTbox_create1st__FP8daTbox_c.s"
}
#pragma pop


/* 80495E38-80495EA8 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80495E58: 80496798 (__vt__12dBgS_AcchCir)
//	80495E5C: 80496798 (__vt__12dBgS_AcchCir)
//	80495E6C: 8026EF18 (__dt__8cM3dGCirFv)
//	80495E78: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80495E88: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80495EA8-80495F18 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80495EC8: 804967A4 (__vt__12dBgS_ObjAcch)
//	80495ECC: 804967A4 (__vt__12dBgS_ObjAcch)
//	80495EE8: 80075F94 (__dt__9dBgS_AcchFv)
//	80495EF8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80495F18-80495F60 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80495F30: 804967C8 (__vt__8cM3dGCyl)
//	80495F34: 804967C8 (__vt__8cM3dGCyl)
//	80495F44: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80495F60-80495FA8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80495F78: 804967D4 (__vt__8cM3dGAab)
//	80495F7C: 804967D4 (__vt__8cM3dGAab)
//	80495F8C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80495FA8-80496004 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80495FC0: 8049678C (__vt__10dCcD_GStts)
//	80495FC4: 8049678C (__vt__10dCcD_GStts)
//	80495FD0: 80496780 (__vt__10cCcD_GStts)
//	80495FD4: 80496780 (__vt__10cCcD_GStts)
//	80495FE8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80496004-80496024 0020+00 s=1 e=0 z=0  None .text      daTbox_MoveBGDelete__FP8daTbox_c                             */
//	80496010: 800788DC (MoveBGDelete__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTbox_c* False
// 	 daTbox_c False
asm static void daTbox_MoveBGDelete(daTbox_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/daTbox_MoveBGDelete__FP8daTbox_c.s"
}
#pragma pop


/* 80496024-80496044 0020+00 s=1 e=0 z=0  None .text      daTbox_MoveBGExecute__FP8daTbox_c                            */
//	80496030: 80078950 (MoveBGExecute__16dBgS_MoveBgActorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTbox_c* False
// 	 daTbox_c False
asm static void daTbox_MoveBGExecute(daTbox_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/daTbox_MoveBGExecute__FP8daTbox_c.s"
}
#pragma pop


/* 80496044-80496070 002C+00 s=1 e=0 z=0  None .text      daTbox_MoveBGDraw__FP8daTbox_c                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTbox_c* False
// 	 daTbox_c False
asm static void daTbox_MoveBGDraw(daTbox_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/daTbox_MoveBGDraw__FP8daTbox_c.s"
}
#pragma pop


/* 80496070-804960B8 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80496088: 80496780 (__vt__10cCcD_GStts)
//	8049608C: 80496780 (__vt__10cCcD_GStts)
//	8049609C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 804960B8-80496114 005C+00 s=2 e=0 z=0  None .text      __dt__12daTbox_HIO_cFv                                       */
//	804960D0: 80496874 (__vt__12daTbox_HIO_c)
//	804960D4: 80496874 (__vt__12daTbox_HIO_c)
//	804960E0: 80496880 (__vt__14mDoHIO_entry_c)
//	804960E4: 80496880 (__vt__14mDoHIO_entry_c)
//	804960F8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daTbox_HIO_c::~daTbox_HIO_c() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__dt__12daTbox_HIO_cFv.s"
}
#pragma pop


/* 80496114-80496188 0074+00 s=0 e=1 z=0  None .text      __sinit_d_a_tbox_cpp                                         */
//	80496124: 80496898 (lit_1109)
//	80496128: 80496898 (lit_1109)
//	8049612C: 80496248 (lit_3934)
//	80496130: 80496248 (lit_3934)
//	80496138: 80496330 (lit_6499)
//	8049613C: 80496330 (lit_6499)
//	8049614C: 80490DCC (__dt__4cXyzFv)
//	80496150: 80490DCC (__dt__4cXyzFv)
//	80496158: 80490CB8 (__register_global_object)
//	80496160: 80490D2C (__ct__12daTbox_HIO_cFv)
//	80496164: 804960B8 (__dt__12daTbox_HIO_cFv)
//	80496168: 804960B8 (__dt__12daTbox_HIO_cFv)
//	80496170: 80490CB8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_tbox_cpp() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/__sinit_d_a_tbox_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80496114 = (void*)__sinit_d_a_tbox_cpp;
#pragma pop


/* 80496188-80496190 0008+00 s=1 e=0 z=0  None .text      @20@__dt__14dBgS_ObjGndChkFv                                 */
//	8049618C: 804932C0 (__dt__14dBgS_ObjGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80496188() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/func_80496188.s"
}
#pragma pop


/* 80496190-80496198 0008+00 s=1 e=0 z=0  None .text      @76@__dt__14dBgS_ObjGndChkFv                                 */
//	80496194: 804932C0 (__dt__14dBgS_ObjGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80496190() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/func_80496190.s"
}
#pragma pop


/* 80496198-804961A0 0008+00 s=1 e=0 z=0  None .text      @60@__dt__14dBgS_ObjGndChkFv                                 */
//	8049619C: 804932C0 (__dt__14dBgS_ObjGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80496198() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/func_80496198.s"
}
#pragma pop


/* 804961A0-804961A8 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	804961A4: 80495EA8 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_804961A0() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/func_804961A0.s"
}
#pragma pop


/* 804961A8-804961B0 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	804961AC: 80495EA8 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_804961A8() {
	nofralloc
#include "asm/rel/d/a/d_a_tbox/d_a_tbox/func_804961A8.s"
}
#pragma pop


/* 804961B0-804961B8 0008+00 s=1 e=0 z=0  None .text      Create__8daTbox_cFv                                          */
// True False
//  bool False
bool daTbox_c::Create() {
	return true;
}


/* 804961B8-804961C0 0008+00 s=1 e=0 z=0  None .text      checkSmallTbox__8daTbox_cFv                                  */
// True False
//  bool False
bool daTbox_c::checkSmallTbox() {
	return true;
}


/* ############################################################################################## */
/* 80496934-80496938 0004+00 s=0 e=0 z=0  None .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_80496934[4];

/* 80496938-8049693C 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_80496938[4];

/* 8049693C-80496940 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_8049693C[4];

/* 80496940-80496944 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_80496940[4];

/* 80496944-80496948 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_80496944[4];

/* 80496948-8049694C 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_80496948[4];

/* 8049694C-80496950 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_8049694C[4];

/* 80496950-80496954 0004+00 s=0 e=0 z=0  None .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_80496950[4];

/* 80496954-80496958 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_80496954[4];

/* 80496958-8049695C 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_80496958[4];

/* 8049695C-80496960 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_8049695C[4];

/* 80496960-80496964 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_80496960[4];

/* 80496964-80496968 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_80496964[4];

/* 80496968-8049696C 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_80496968[4];

/* 8049696C-80496970 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_8049696C[4];

/* 80496970-80496974 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_80496970[4];

/* 80496974-80496978 0004+00 s=0 e=0 z=0  None .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_80496974[4];

/* 80496978-8049697C 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_80496978[4];

/* 8049697C-80496980 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_8049697C[4];

/* 80496980-80496984 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_80496980[4];

/* 80496984-80496988 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_80496984[4];

/* 80496988-8049698C 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_80496988[4];

/* 8049698C-80496990 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_8049698C[4];

/* 80496990-80496994 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_80496990[4];

/* 80496994-80496998 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_80496994[4];

