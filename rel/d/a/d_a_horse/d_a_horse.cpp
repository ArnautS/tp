// 
// Generated By: dol2asm
// Translation Unit: d_a_horse
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/d_a_horse/d_a_horse.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 80266F48 */ // False False
void normalizeZP();
	/* 80267128 */ // False False
void atan2sX_Z() const;
	/* 80267150 */ // False False
void atan2sY_XZ() const;
	/* 8083836C */ // True False
~cXyz();
	/* 808392D8 */ // True False
cXyz();
};

struct Quaternion {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
	/* 8000CF7C */ // False False
//  Quaternion const* False
// 	 Quaternion const False
// 		 Quaternion False
void quatM(Quaternion const*);
};

struct J3DAnmTexPattern {
};

struct J3DMaterialTable {
};

struct mDoExt_btpAnm {
	/* 8000D54C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTexPattern* False
// 	 J3DAnmTexPattern False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTexPattern*, int, int, f32, s16, s16);
	/* 8000D5E8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  s16 False
void entry(J3DMaterialTable*, s16);
};

struct mDoExt_MtxCalcOldFrame {
	/* 8000F848 */ // False False
//  f32 False
//  u16 False
//  u16 False
void initOldFrameMorf(f32, u16, u16);
};

struct mDoExt_AnmRatioPack {
	/* 808453FC */ // True False
~mDoExt_AnmRatioPack();
	/* 80845438 */ // True False
mDoExt_AnmRatioPack();
};

struct mDoExt_3DlineMat_c {
};

struct mDoExt_3DlineMatSortPacket {
	/* 80014738 */ // False False
//  mDoExt_3DlineMat_c* False
// 	 mDoExt_3DlineMat_c False
void setMat(mDoExt_3DlineMat_c*);
};

struct _GXColor {
};

struct dKy_tevstr_c {
};

struct ResTIMG {
};

struct mDoExt_3DlineMat1_c {
	/* 80013360 */ // False False
//  u16 False
//  u16 False
//  ResTIMG* False
// 	 ResTIMG False
//  int False
void init(u16, u16, ResTIMG*, int);
	/* 8001373C */ // False False
//  int False
//  f32 False
//  _GXColor& False
// 	 _GXColor False
//  u16 False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void update(int, f32, _GXColor&, u16, dKy_tevstr_c*);
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct fopAcM_wt_c {
	/* 8001DD84 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void waterCheck(cXyz const*);
};

struct fopAcM_gc_c {
	/* 8001DCBC */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void gndCheck(cXyz const*);
};

struct daPy_py_c {
	/* 8015F4F0 */ // False False
//  cXyz* False
// 	 cXyz False
void setLookPos(cXyz*);
};

struct daPy_frameCtrl_c {
	/* 8015E4CC */ // False False
void checkAnmEnd();
	/* 8015E510 */ // False False
void updateFrame();
	/* 8015E544 */ // False False
//  u8 False
//  s16 False
//  s16 False
//  f32 False
//  f32 False
void setFrameCtrl(u8, s16, s16, f32, f32);
	/* 80845354 */ // True False
~daPy_frameCtrl_c();
	/* 808453B0 */ // True False
daPy_frameCtrl_c();
};

struct daPy_actorKeep_c {
	/* 8015EC48 */ // False False
void setActor();
	/* 8015ECFC */ // False False
void clearData();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 80084318 */ // False False
void ResetAtHit();
	/* 80084460 */ // False False
void ChkTgHit();
};

struct daHorse_c {
	/* 80838498 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void coHitCallbackBoarJump(fopAc_ac_c*);
	/* 80838798 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
void coHitCallbackBoarHit(fopAc_ac_c*, dCcD_GObjInf*);
	/* 80838904 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void coHitCallbackCowHit(fopAc_ac_c*);
	/* 80838B78 */ // True False
//  int False
void modelCallBack(int);
	/* 80838F98 */ // True False
void createHeap();
	/* 8083940C */ // True False
void checkEnding();
	/* 80839498 */ // True False
void create();
	/* 80839D1C */ // True False
//  int False
void setBasAnime(int);
	/* 80839EBC */ // True False
void resetBasAnime();
	/* 80839ED4 */ // True False
//  f32 False
//  f32 False
//  f32 False
//  u16 False
//  u16 False
//  f32 False
void setDoubleAnime(f32, f32, f32, u16, u16, f32);
	/* 8083A20C */ // True False
//  u16 False
//  f32 False
//  f32 False
//  s16 False
//  f32 False
//  int False
void setSingleAnime(u16, f32, f32, s16, f32, int);
	/* 8083A3C4 */ // True False
void animePlay();
	/* 8083A5AC */ // True False
void checkDemoAction();
	/* 8083A890 */ // True False
void setStickRodeoMove();
	/* 8083AC7C */ // True False
void setStickCallMove();
	/* 8083ACEC */ // True False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void setDemoMoveData(u32*, cXyz const*);
	/* 8083AEC0 */ // True False
void setDemoData();
	/* 8083B578 */ // True False
void acceptPlayerRide();
	/* 8083B600 */ // True False
void setStickData();
	/* 8083B828 */ // True False
//  void False
void setTurnStartVibration();
	/* 8083B82C */ // True False
//  void False
void setTurnVibration();
	/* 8083B830 */ // True False
//  f32 False
void setMoveAnime(f32);
	/* 8083BF48 */ // True False
//  int False
void checkHorseNoMove(int);
	/* 8083CA80 */ // True False
void checkTurnPlayerState();
	/* 8083CB38 */ // True False
void setSpeedAndAngle();
	/* 8083D748 */ // True False
void checkWaitTurn() const;
	/* 8083D774 */ // True False
//  int False
void setRoomInfo(int);
	/* 8083D918 */ // True False
void setBodyPart();
	/* 8083D9D8 */ // True False
void setMatrix();
	/* 8083DC58 */ // True False
//  u32* False
// 	 u32 False
void setDashEffect(u32*);
	/* 8083DEEC */ // True False
void setEffect();
	/* 8083E4D8 */ // True False
void setCollision();
	/* 8083E6E8 */ // True False
void autoGroundHit();
	/* 8083E760 */ // True False
void setTailAngle();
	/* 8083E8A4 */ // True False
void setNeckAngle();
	/* 8083EA78 */ // True False
void copyFootMatrix();
	/* 8083EB10 */ // True False
void setFootMatrix();
	/* 8083ED88 */ // True False
//  f32 False
//  int False
//  int False
//  s16* False
// 	 s16 False
void setLegAngle(f32, int, int, s16*);
	/* 8083F3B0 */ // True False
void footBgCheck();
	/* 8083F9AC */ // True False
//  int False
void setReinPosMoveInit(int);
	/* 8083FDAC */ // True False
void copyReinPos();
	/* 8083FEB4 */ // True False
//  int False
void setReinPosHandSubstance(int);
	/* 8084010C */ // True False
void setReinPosNormalSubstance();
	/* 808402F8 */ // True False
void bgCheck();
	/* 80840714 */ // True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void checkSpecialWallHitSubstance(cXyz const&) const;
	/* 808407B0 */ // True False
void setServiceWaitTimer();
	/* 80840800 */ // True False
void checkServiceWaitAnime();
	/* 80840844 */ // True False
void checkTurnInput();
	/* 808408F0 */ // True False
void checkTgHitTurn();
	/* 808409C0 */ // True False
//  f32 False
void checkTurnAfterFastMove(f32);
	/* 80840B28 */ // True False
void setNeckAnimeMorf();
	/* 80840B88 */ // True False
//  u16 False
//  f32 False
//  f32 False
//  s16 False
void setNeckAnime(u16, f32, f32, s16);
	/* 80840CA4 */ // True False
void resetNeckAnime();
	/* 80840CE4 */ // True False
void setLashCnt();
	/* 80840FE0 */ // True False
void setTalkModeWolf();
	/* 80841084 */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void setBoarHit(fopAc_ac_c*, int);
	/* 8084116C */ // True False
void savePos();
	/* 808411D0 */ // True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void callHorseSubstance(cXyz const*);
	/* 80841468 */ // True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
void setHorsePosAndAngleSubstance(cXyz const*, s16);
	/* 808415B4 */ // True False
void checkPlayerHeavy();
	/* 80841628 */ // True False
//  u32 False
//  u32 False
void setTgCoGrp(u32, u32);
	/* 80841698 */ // True False
void onRideFlgSubstance();
	/* 808416D4 */ // True False
void offRideFlgSubstance();
	/* 80841708 */ // True False
void procWaitInit();
	/* 808417B8 */ // True False
void procWait();
	/* 80841F04 */ // True False
void procMoveInit();
	/* 80841F80 */ // True False
void procMove();
	/* 808423DC */ // True False
void procStopInit();
	/* 808425BC */ // True False
void procStop();
	/* 80842878 */ // True False
//  int False
void procTurnInit(int);
	/* 80842AB0 */ // True False
void procTurn();
	/* 80843008 */ // True False
//  int False
void procJumpInit(int);
	/* 808432E0 */ // True False
void procJump();
	/* 80843604 */ // True False
//  f32 False
//  int False
void procLandInit(f32, int);
	/* 80843770 */ // True False
void procLand();
	/* 808438AC */ // True False
void procLargeDamageInit();
	/* 8084396C */ // True False
void procLargeDamage();
	/* 808439C8 */ // True False
void procToolDemoInit();
	/* 80843A44 */ // True False
void procToolDemo();
	/* 80843BFC */ // True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void searchSceneChangeArea(fopAc_ac_c*);
	/* 80843C74 */ // True False
void execute();
	/* 80844590 */ // True False
void draw();
	/* 8084478C */ // True False
~daHorse_c();
	/* 80844CB0 */ // True False
daHorse_c();
};

struct daHorseRein_c {
	/* 80837F2C */ // True False
//  int False
void setReinPos(int);
	/* 808383A8 */ // True False
//  int False
void setReinPosPart(int);
	/* 80844FB0 */ // True False
~daHorseRein_c();
	/* 80844FEC */ // True False
daHorseRein_c();
};

struct daHorseFootData_c {
	/* 80844F70 */ // True False
~daHorseFootData_c();
	/* 80844FAC */ // True False
daHorseFootData_c();
};

struct daCow_c {
	/* 8065CFBC */ // False False
void isAngry();
	/* 8065D0B8 */ // False False
void setAngryHit();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct daAlink_c {
	struct daAlink_ANM {
	};

	/* 8009DA60 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void checkStageName(char const*);
	/* 800A21E0 */ // False False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  int False
void getMoveBGActorName(cBgS_PolyInfo&, int);
	/* 800AC558 */ // False False
//  daAlink_c::daAlink_ANM False
void checkUnderMove0BckNoArc(daAlink_c::daAlink_ANM) const;
	/* 800ECDC4 */ // False False
void checkHorseWaitLashAnime() const;
	/* 800ECF04 */ // False False
void checkHorseLieAnime() const;
	/* 800ECF5C */ // False False
void checkHorseSubjectivity() const;
	/* 800ED0D4 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void getHorseReinHandPos(cXyz*, cXyz*);
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
	/* 8006FB10 */ // False False
//  int False
//  int False
//  cXyz False
void StartQuake(int, int, cXyz);
	/* 8006FD94 */ // False False
//  int False
void StopQuake(int);
};

struct dSv_horse_place_c {
	/* 80032C64 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  s8 False
void set(char const*, cXyz const&, s16, s8);
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
	/* 8003C400 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  u16 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getIDRes(char const*, u16, dRes_info_c*, int);
};

struct dPath {
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dBgS {
	/* 80074B98 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetExitId(cBgS_PolyInfo const&);
	/* 80074BE8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyColor(cBgS_PolyInfo const&);
	/* 80074C6C */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetHorseNoEntry(cBgS_PolyInfo const&);
	/* 80074CBC */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetSpecialCode(cBgS_PolyInfo const&);
	/* 80074EF0 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGroundCode(cBgS_PolyInfo const&);
	/* 80075100 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomId(cBgS_PolyInfo const&);
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 808452E4 */ // True False
~dBgS_AcchCir();
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076288 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
void Set(fopAc_ac_c*, int, dBgS_AcchCir*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct dPaPo_c {
	/* 80050C9C */ // False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
//  f32 False
//  f32 False
void init(dBgS_Acch*, f32, f32);
};

struct dPaPoF_c {
	/* 800512E8 */ // False False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  f32 False
//  f32 False
void setEffectFour(dKy_tevstr_c const*, cXyz const*, u32, u32, cXyz const*, cXyz const*, cXyz const*, cXyz const*, cXyz const*, csXyz const*, cXyz const*, s8, f32, f32);
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
	/* 80249F90 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void init(fopAc_ac_c*, int, int, fopAc_ac_c**);
	/* 8024A2D8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void doFlow(fopAc_ac_c*, fopAc_ac_c**, int);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 80047B1C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 80047F5C */ // False False
//  int False
void getMyNowCutName(int);
	/* 800480EC */ // False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void getMySubstanceP(int, char const*, int);
	/* 8004817C */ // False False
//  int False
void cutEnd(int);
	/* 800483E0 */ // False False
void getGoal();
};

struct dDemo_object_c {
	/* 80039088 */ // False False
//  u8 False
void getActor(u8);
};

struct dDemo_actor_c {
	/* 80038338 */ // False False
//  int* False
// 	 int False
//  int* False
// 	 int False
//  int* False
// 	 int False
//  u16* False
// 	 u16 False
//  u8* False
// 	 u8 False
void getDemoIDData(int*, int*, int*, u16*, u8*);
};

struct dComIfG_play_c {
	/* 8002C97C */ // False False
//  int False
void getLayerNo(int);
};

struct cCcD_Obj {
};

struct dCcMassS_Mng {
	/* 80085D98 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u8 False
void Set(cCcD_Obj*, u8);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_SrcCyl {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 80845218 */ // True False
~dCcD_GStts();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
	/* 80084954 */ // False False
//  cXyz& False
// 	 cXyz False
void MoveCAt(cXyz&);
	/* 808450C8 */ // True False
~dCcD_Cyl();
	/* 80845194 */ // True False
dCcD_Cyl();
};

struct dBgS_PolyPassChk {
	/* 80078EF8 */ // False False
void SetHorse();
};

struct dBgS_LinChk {
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_HorseLinChk {
	/* 80078460 */ // False False
dBgS_HorseLinChk();
	/* 800784BC */ // False False
~dBgS_HorseLinChk();
};

struct dBgS_HorseAcch {
	/* 80845274 */ // True False
~dBgS_HorseAcch();
};

struct dAttention_c {
	/* 80070844 */ // False False
//  s32 False
void GetLockonList(s32);
	/* 800737E4 */ // False False
void LockonTruth();
};

struct dAttList_c {
	/* 80073864 */ // False False
void getActor();
};

struct camera_class {
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 80844FF0 */ // True False
~cM3dGSph();
};

struct cM3dGPla {
	/* 80838750 */ // True False
~cM3dGPla();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80845038 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80845080 */ // True False
~cM3dGAab();
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_Stts {
	/* 8026395C */ // False False
void ClrCcMove();
};

struct cCcD_ObjTg {
	/* 80264894 */ // False False
//  u32 False
void SetGrp(u32);
};

struct cCcD_ObjCo {
	/* 8026491C */ // False False
//  u32 False
void SetVsGrp(u32);
};

struct cCcD_GStts {
	/* 80844B44 */ // True False
~cCcD_GStts();
};

struct cBgS_LinChk {
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 80074660 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void ChkPolySafe(cBgS_PolyInfo const&);
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct _GXTexObj {
};

struct Z2SeqMgr {
	/* 802AF49C */ // False False
//  u32 False
void subBgmStart(u32);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2CreatureRide {
	/* 802C4FFC */ // False False
Z2CreatureRide();
	/* 802C5114 */ // False False
~Z2CreatureRide();
	/* 802C520C */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C522C */ // False False
//  bool False
void setLinkRiding(bool);
};

struct Z2Creature {
	/* 802C0628 */ // False False
//  void* False
// 	 void False
//  bool False
//  f32 False
//  f32 False
void initAnime(void*, bool, f32, f32);
	/* 802C06D0 */ // False False
//  f32 False
//  f32 False
void updateAnime(f32, f32);
};

struct J3DTransformInfo {
};

struct J3DMtxCalcNoAnmBase {
	/* 80839348 */ // True False
~J3DMtxCalcNoAnmBase();
};

template <typename A0, typename B0>
struct J3DMtxCalcNoAnm { };
/* J3DMtxCalcNoAnm<J3DMtxCalcCalcTransformMaya, J3DMtxCalcJ3DSysInitMaya> */
struct J3DMtxCalcNoAnm__template0 {
	/* 808392DC */ // False True
~J3DMtxCalcNoAnm__template0();
	/* 80844BB4 */ // False True
//  Vec const& False
// 	 Vec const False
// 		 Vec False
//  f32 const (& )[3][4] False
// 	 f32 const False
// 		 f32 False
// 	 & False
// 		  False
void init(Vec const&, f32 const (& )[3][4]);
	/* 80844BDC */ // False True
void calc();
};

struct J3DMtxCalcJ3DSysInitMaya {
	/* 8032ECAC */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
//  f32 const (& )[3][4] False
// 	 f32 const False
// 		 f32 False
// 	 & False
// 		  False
void init(Vec const&, f32 const (& )[3][4]);
};

struct J3DMtxCalcCalcTransformMaya {
	/* 8032EFBC */ // False False
//  J3DTransformInfo const& False
// 	 J3DTransformInfo const False
// 		 J3DTransformInfo False
void calcTransform(J3DTransformInfo const&);
};

struct J3DAnmTransform {
};

struct J3DMtxCalc {
	/* 808393A4 */ // True False
~J3DMtxCalc();
	/* 80844B8C */ // True False
//  void False
//  u8 False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
void setAnmTransform(u8, J3DAnmTransform*);
	/* 80844B90 */ // True False
//  void False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
void setAnmTransform(J3DAnmTransform*);
	/* 80844B94 */ // True False
//  bool False
//  u8 False
bool getAnmTransform(u8);
	/* 80844B9C */ // True False
//  bool False
bool getAnmTransform();
	/* 80844BA4 */ // True False
//  void False
//  u8 False
//  f32 False
void setWeight(u8, f32);
	/* 80844BA8 */ // True False
//  u8 False
void getWeight(u8) const;
};

struct J3DModel {
};

struct J3DJoint {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
	/* 80845450 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
static void daHorse_coHitCallbackBoarJump(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
static void daHorse_coHitCallbackCowHit(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
static void daHorse_coHitCallbackAll(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
static void daHorse_searchEnemy(fopAc_ac_c*, void*);
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
static void daHorse_modelCallBack(J3DJoint*, int);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
static void daHorse_searchSingleBoar(fopAc_ac_c*, void*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daHorse_createHeap(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daHorse_Create(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
static void daHorse_searchSceneChangeArea(fopAc_ac_c*, void*);
// True False
//  daHorse_c* False
// 	 daHorse_c False
static void daHorse_Execute(daHorse_c*);
// True False
//  daHorse_c* False
// 	 daHorse_c False
static void daHorse_Draw(daHorse_c*);
// True False
//  daHorse_c* False
// 	 daHorse_c False
static void daHorse_Delete(daHorse_c*);

// True False
//  int False
extern "C" void setReinPos__13daHorseRein_cFi();
// True False
extern "C" void __dt__4cXyzFv();
// True False
//  int False
extern "C" void setReinPosPart__13daHorseRein_cFi();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void coHitCallbackBoarJump__9daHorse_cFP10fopAc_ac_c();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" void coHitCallbackBoarHit__9daHorse_cFP10fopAc_ac_cP12dCcD_GObjInf();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void coHitCallbackCowHit__9daHorse_cFP10fopAc_ac_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" static void daHorse_coHitCallbackBoarJump__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" static void daHorse_coHitCallbackCowHit__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" static void daHorse_coHitCallbackAll__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
extern "C" static void daHorse_searchEnemy__FP10fopAc_ac_cPv();
// True False
//  int False
extern "C" void modelCallBack__9daHorse_cFi();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" static void daHorse_modelCallBack__FP8J3DJointi();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
extern "C" static void daHorse_searchSingleBoar__FP10fopAc_ac_cPv();
// True False
extern "C" void createHeap__9daHorse_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// False True
extern "C" void func_808392DC();
// True False
extern "C" void __dt__19J3DMtxCalcNoAnmBaseFv();
// True False
extern "C" void __dt__10J3DMtxCalcFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daHorse_createHeap__FP10fopAc_ac_c();
// True False
extern "C" void checkEnding__9daHorse_cFv();
// True False
extern "C" void create__9daHorse_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daHorse_Create__FP10fopAc_ac_c();
// True False
//  int False
extern "C" void setBasAnime__9daHorse_cFi();
// True False
extern "C" void resetBasAnime__9daHorse_cFv();
// True False
//  f32 False
//  f32 False
//  f32 False
//  u16 False
//  u16 False
//  f32 False
extern "C" void setDoubleAnime__9daHorse_cFfffUsUsf();
// True False
//  u16 False
//  f32 False
//  f32 False
//  s16 False
//  f32 False
//  int False
extern "C" void setSingleAnime__9daHorse_cFUsffsfi();
// True False
extern "C" void animePlay__9daHorse_cFv();
// True False
extern "C" void checkDemoAction__9daHorse_cFv();
// True False
extern "C" void setStickRodeoMove__9daHorse_cFv();
// True False
extern "C" void setStickCallMove__9daHorse_cFv();
// True False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void setDemoMoveData__9daHorse_cFPUlPC4cXyz();
// True False
extern "C" void setDemoData__9daHorse_cFv();
// True False
extern "C" void acceptPlayerRide__9daHorse_cFv();
// True False
extern "C" void setStickData__9daHorse_cFv();
// True False
//  void False
extern "C" void setTurnStartVibration__9daHorse_cFv();
// True False
//  void False
extern "C" void setTurnVibration__9daHorse_cFv();
// True False
//  f32 False
extern "C" void setMoveAnime__9daHorse_cFf();
// True False
//  int False
extern "C" void checkHorseNoMove__9daHorse_cFi();
// True False
extern "C" void checkTurnPlayerState__9daHorse_cFv();
// True False
extern "C" void setSpeedAndAngle__9daHorse_cFv();
// True False
extern "C" void checkWaitTurn__9daHorse_cCFv();
// True False
//  int False
extern "C" void setRoomInfo__9daHorse_cFi();
// True False
extern "C" void setBodyPart__9daHorse_cFv();
// True False
extern "C" void setMatrix__9daHorse_cFv();
// True False
//  u32* False
// 	 u32 False
extern "C" void setDashEffect__9daHorse_cFPUl();
// True False
extern "C" void setEffect__9daHorse_cFv();
// True False
extern "C" void setCollision__9daHorse_cFv();
// True False
extern "C" void autoGroundHit__9daHorse_cFv();
// True False
extern "C" void setTailAngle__9daHorse_cFv();
// True False
extern "C" void setNeckAngle__9daHorse_cFv();
// True False
extern "C" void copyFootMatrix__9daHorse_cFv();
// True False
extern "C" void setFootMatrix__9daHorse_cFv();
// True False
//  f32 False
//  int False
//  int False
//  s16* False
// 	 s16 False
extern "C" void setLegAngle__9daHorse_cFfiiPs();
// True False
extern "C" void footBgCheck__9daHorse_cFv();
// True False
//  int False
extern "C" void setReinPosMoveInit__9daHorse_cFi();
// True False
extern "C" void copyReinPos__9daHorse_cFv();
// True False
//  int False
extern "C" void setReinPosHandSubstance__9daHorse_cFi();
// True False
extern "C" void setReinPosNormalSubstance__9daHorse_cFv();
// True False
extern "C" void bgCheck__9daHorse_cFv();
// True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void checkSpecialWallHitSubstance__9daHorse_cCFRC4cXyz();
// True False
extern "C" void setServiceWaitTimer__9daHorse_cFv();
// True False
extern "C" void checkServiceWaitAnime__9daHorse_cFv();
// True False
extern "C" void checkTurnInput__9daHorse_cFv();
// True False
extern "C" void checkTgHitTurn__9daHorse_cFv();
// True False
//  f32 False
extern "C" void checkTurnAfterFastMove__9daHorse_cFf();
// True False
extern "C" void setNeckAnimeMorf__9daHorse_cFv();
// True False
//  u16 False
//  f32 False
//  f32 False
//  s16 False
extern "C" void setNeckAnime__9daHorse_cFUsffs();
// True False
extern "C" void resetNeckAnime__9daHorse_cFv();
// True False
extern "C" void setLashCnt__9daHorse_cFv();
// True False
extern "C" void setTalkModeWolf__9daHorse_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void setBoarHit__9daHorse_cFP10fopAc_ac_ci();
// True False
extern "C" void savePos__9daHorse_cFv();
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void callHorseSubstance__9daHorse_cFPC4cXyz();
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
extern "C" void setHorsePosAndAngleSubstance__9daHorse_cFPC4cXyzs();
// True False
extern "C" void checkPlayerHeavy__9daHorse_cFv();
// True False
//  u32 False
//  u32 False
extern "C" void setTgCoGrp__9daHorse_cFUlUl();
// True False
extern "C" void onRideFlgSubstance__9daHorse_cFv();
// True False
extern "C" void offRideFlgSubstance__9daHorse_cFv();
// True False
extern "C" void procWaitInit__9daHorse_cFv();
// True False
extern "C" void procWait__9daHorse_cFv();
// True False
extern "C" void procMoveInit__9daHorse_cFv();
// True False
extern "C" void procMove__9daHorse_cFv();
// True False
extern "C" void procStopInit__9daHorse_cFv();
// True False
extern "C" void procStop__9daHorse_cFv();
// True False
//  int False
extern "C" void procTurnInit__9daHorse_cFi();
// True False
extern "C" void procTurn__9daHorse_cFv();
// True False
//  int False
extern "C" void procJumpInit__9daHorse_cFi();
// True False
extern "C" void procJump__9daHorse_cFv();
// True False
//  f32 False
//  int False
extern "C" void procLandInit__9daHorse_cFfi();
// True False
extern "C" void procLand__9daHorse_cFv();
// True False
extern "C" void procLargeDamageInit__9daHorse_cFv();
// True False
extern "C" void procLargeDamage__9daHorse_cFv();
// True False
extern "C" void procToolDemoInit__9daHorse_cFv();
// True False
extern "C" void procToolDemo__9daHorse_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void searchSceneChangeArea__9daHorse_cFP10fopAc_ac_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
extern "C" static void daHorse_searchSceneChangeArea__FP10fopAc_ac_cPv();
// True False
extern "C" void execute__9daHorse_cFv();
// True False
//  daHorse_c* False
// 	 daHorse_c False
extern "C" static void daHorse_Execute__FP9daHorse_c();
// True False
extern "C" void draw__9daHorse_cFv();
// True False
//  daHorse_c* False
// 	 daHorse_c False
extern "C" static void daHorse_Draw__FP9daHorse_c();
// True False
extern "C" void __dt__9daHorse_cFv();
// True False
//  daHorse_c* False
// 	 daHorse_c False
extern "C" static void daHorse_Delete__FP9daHorse_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
//  void False
//  u8 False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
extern "C" void setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform();
// True False
//  void False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
extern "C" void setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform();
// True False
//  bool False
//  u8 False
extern "C" bool getAnmTransform__10J3DMtxCalcFUc();
// True False
//  bool False
extern "C" bool getAnmTransform__10J3DMtxCalcFv();
// True False
//  void False
//  u8 False
//  f32 False
extern "C" void setWeight__10J3DMtxCalcFUcf();
// True False
//  u8 False
extern "C" void getWeight__10J3DMtxCalcCFUc();
// False True
//  Vec const& False
// 	 Vec const False
// 		 Vec False
//  f32 const (& )[3][4] False
// 	 f32 const False
// 		 f32 False
// 	 & False
// 		  False
extern "C" void func_80844BB4();
// False True
extern "C" void func_80844BDC();
// False False
extern "C" void __sinit_d_a_horse_cpp();
// True False
extern "C" static void func_80844CA0();
// True False
extern "C" static void func_80844CA8();
// True False
extern "C" void __ct__9daHorse_cFv();
// True False
extern "C" void __dt__17daHorseFootData_cFv();
// True False
extern "C" void __ct__17daHorseFootData_cFv();
// True False
extern "C" void __dt__13daHorseRein_cFv();
// True False
extern "C" void __ct__13daHorseRein_cFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__8dCcD_CylFv();
// True False
extern "C" void __ct__8dCcD_CylFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__14dBgS_HorseAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__16daPy_frameCtrl_cFv();
// True False
extern "C" void __ct__16daPy_frameCtrl_cFv();
// True False
extern "C" void __dt__19mDoExt_AnmRatioPackFv();
// True False
extern "C" void __ct__19mDoExt_AnmRatioPackFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
extern "C" extern u32 const m_callLimitDistance2__9daHorse_c;
extern "C" extern u32 const lit_4305;
extern "C" extern u32 const lit_4307;
extern "C" extern u32 const lit_4308[1 + 1 /* padding */];
extern "C" extern u8 const lit_4309[8];
extern "C" extern u8 const lit_4310[8];
extern "C" extern u8 const lit_4311[8];
extern "C" extern u32 const lit_4312;
extern "C" extern u32 const lit_4313;
extern "C" extern u32 const lit_4465;
extern "C" extern u32 const lit_4466;
extern "C" extern u32 const lit_4467;
extern "C" extern u32 const lit_4468;
extern "C" extern u32 const lit_5177;
extern "C" extern u32 const lit_5179;
extern "C" extern u32 const lit_5181;
extern "C" extern u32 const lit_5182;
extern "C" extern u32 const lit_5183;
extern "C" extern u32 const lit_5529;
extern "C" extern u32 const lit_5530;
extern "C" extern u32 const lit_5629;
extern "C" extern u32 const lit_5630;
extern "C" extern u32 const lit_5814;
extern "C" extern u32 const lit_5889;
extern "C" extern u32 const lit_5890;
extern "C" extern u8 const data_80845688[16];
extern "C" extern u32 const lit_6389;
extern "C" extern u32 const lit_6390;
extern "C" extern u32 const lit_6391;
extern "C" extern u32 const lit_6392;
extern "C" extern u32 const lit_6393;
extern "C" extern u32 const lit_6871;
extern "C" extern u32 const lit_6872;
extern "C" extern u32 const lit_6873;
extern "C" extern u32 const lit_6874;
extern "C" extern u32 const lit_6875;
extern "C" extern u32 const lit_6876;
extern "C" extern u32 const lit_6877;
extern "C" extern u32 const lit_6878;
extern "C" extern u32 const lit_7216;
extern "C" extern u32 const lit_7217;
extern "C" extern u32 const lit_7219;
extern "C" extern u32 const lit_7300;
extern "C" extern u32 const lit_7362;
extern "C" extern u32 const lit_7363;
extern "C" extern u32 const lit_7364;
extern "C" extern u8 const lit_7373[12];
extern "C" extern u8 const lit_7374[6 + 2 /* padding */];
extern "C" extern u32 const lit_7439;
extern "C" extern u32 const lit_7440;
extern "C" extern u32 const lit_7691;
extern "C" extern u32 const lit_7692;
extern "C" extern u32 const lit_7693;
extern "C" extern u32 const lit_7694;
extern "C" extern u32 const lit_7695;
extern "C" extern u32 const lit_7696;
extern "C" extern u8 const data_80845724[12];
extern "C" extern u32 const lit_7747;
extern "C" extern u32 const lit_7748;
extern "C" extern u32 const lit_8279;
extern "C" extern u32 const lit_8509;
extern "C" extern u32 const lit_8510;
extern "C" extern u32 const lit_8511;
extern "C" extern u32 const lit_8623;
extern "C" extern u32 const lit_8624;
extern "C" extern u32 const lit_8625;
extern "C" extern u32 const lit_8626;
extern "C" extern u32 const lit_8627;
extern "C" extern u32 const lit_8628;
extern "C" extern u32 const lit_8629;
extern "C" extern u32 const lit_8630;
extern "C" extern u32 const lit_8805;
extern "C" extern u32 const lit_8806;
extern "C" extern u32 const lit_8904;
extern "C" extern u32 const lit_8905;
extern "C" extern u32 const lit_9264;
extern "C" extern u32 const lit_9265;
extern "C" extern u32 const lit_9537;
extern "C" extern u32 const lit_9538;
extern "C" extern u32 const lit_9539;
extern "C" extern u32 const lit_9540;
extern "C" extern u32 const lit_9541;
extern "C" extern u32 const lit_9676;
extern "C" extern u32 const lit_9716;
extern "C" extern u8 const data_808457C0[48];
extern "C" extern u8 const data_808457F0[48];
extern "C" extern u32 const lit_9792;
extern "C" extern u32 const lit_9793;
extern "C" extern u32 const lit_9794;
extern "C" extern u32 const lit_9831;
extern "C" extern u32 const lit_9832;
extern "C" extern u32 const lit_9833;
extern "C" extern u32 const lit_9982;
extern "C" extern u32 const lit_10106;
extern "C" extern u8 const lit_10308[12];
extern "C" extern u32 const lit_10523;
extern "C" extern u32 const lit_10703;
extern "C" extern u32 const lit_10704;
extern "C" extern u32 const lit_10705;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 l_cylSrc[68];
extern "C" extern u8 l_sphSrc[64];
extern "C" extern void* lit_4886[3];
extern "C" extern void* lit_4887[3];
extern "C" extern void* lit_4888[3];
extern "C" extern void* lit_4889[3];
extern "C" extern void* lit_4890[3];
extern "C" extern void* lit_4891[3];
extern "C" extern void* lit_4892[3];
extern "C" extern void* g_profile_HORSE[12];
extern "C" extern void* __vt__16daPy_frameCtrl_c[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__18mDoExt_3DlineMat_c[5];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__14dBgS_HorseAcch[9];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* data_80845B1C[11];
extern "C" extern void* __vt__19J3DMtxCalcNoAnmBase[11];
extern "C" extern void* __vt__10J3DMtxCalc[11];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 3 /* padding */];
extern "C" extern u8 lit_4179[12];
extern "C" extern u8 lit_4180[12];
extern "C" extern u8 lit_7279[12 + 4 /* padding */];
extern "C" extern u8 data_80845C38[12];
extern "C" extern u8 lit_7469[12 + 4 /* padding */];
extern "C" extern u8 data_80845C54[12];
extern "C" extern u8 lit_7473[12 + 4 /* padding */];
extern "C" extern u8 data_80845C70[12];
extern "C" extern u8 lit_7477[12 + 4 /* padding */];
extern "C" extern u8 data_80845C8C[12];
extern "C" extern u8 lit_7481[12 + 4 /* padding */];
extern "C" extern u8 data_80845CA8[12];
extern "C" extern u8 lit_8516[12 + 4 /* padding */];
extern "C" extern u8 data_80845CC4[12];
extern "C" extern u8 lit_8520[12 + 4 /* padding */];
extern "C" extern u8 data_80845CE0[12];
extern "C" extern u8 lit_8524[12 + 4 /* padding */];
extern "C" extern u8 data_80845CFC[12];
extern "C" extern u8 lit_8528[12 + 4 /* padding */];
extern "C" extern u8 data_80845D18[12];
extern "C" extern u8 lit_8753[12 + 4 /* padding */];
extern "C" extern u8 data_80845D34[12];
extern "C" extern u8 lit_8757[12 + 4 /* padding */];
extern "C" extern u8 data_80845D50[12];
extern "C" extern u8 lit_8813[12 + 4 /* padding */];
extern "C" extern u8 data_80845D6C[12];
extern "C" extern u8 lit_8817[12 + 4 /* padding */];
extern "C" extern u8 data_80845D88[12];
extern "C" extern u8 lit_8821[12 + 4 /* padding */];
extern "C" extern u8 data_80845DA4[12];
extern "C" extern u8 data_80845DB0[4];
extern "C" extern u8 data_80845DB4[4];
extern "C" extern u8 data_80845DB8[4];
extern "C" extern u8 data_80845DBC[4];
extern "C" extern u8 data_80845DC0[4];
extern "C" extern u8 data_80845DC4[4];
extern "C" extern u8 data_80845DC8[4];
extern "C" extern u8 data_80845DCC[4];
extern "C" extern u8 data_80845DD0[4];
extern "C" extern u8 data_80845DD4[4];
extern "C" extern u8 data_80845DD8[4];
extern "C" extern u8 data_80845DDC[4];
extern "C" extern u8 data_80845DE0[4];
extern "C" extern u8 data_80845DE4[4];
extern "C" extern u8 data_80845DE8[4];
extern "C" extern u8 data_80845DEC[4];
extern "C" extern u8 data_80845DF0[4];
extern "C" extern u8 data_80845DF4[4];
extern "C" extern u8 data_80845DF8[4];
extern "C" extern u8 data_80845DFC[4];
extern "C" extern u8 data_80845E00[4];
extern "C" extern u8 data_80845E04[4];
extern "C" extern u8 data_80845E08[4];
extern "C" extern u8 data_80845E0C[4];
extern "C" extern u8 data_80845E10[4];
extern "C" extern u8 data_80845E14[4];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_ZXYrotM(f32 (* )[4], s16, s16, s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  Quaternion const* False
// 	 Quaternion const False
// 		 Quaternion False
//  Quaternion const* False
// 	 Quaternion const False
// 		 Quaternion False
//  Quaternion* False
// 	 Quaternion False
void mDoMtx_QuatConcat(Quaternion const*, Quaternion const*, Quaternion*);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelEntryDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  int (*)(void*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Executor(int (*)(void*, void*), void*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  void* False
// 	 void False
void fopAcM_setStageLayer(void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_seenActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ2(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz* False
// 	 cXyz False
void fpoAcM_relativePos(fopAc_ac_c const*, cXyz const*, cXyz*);
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  s16 False
void fopAcM_getPolygonAngle(cBgS_PolyInfo const&, s16);
// False False
//  cM3dGPla const* False
// 	 cM3dGPla const False
// 		 cM3dGPla False
//  s16 False
void fopAcM_getPolygonAngle(cM3dGPla const*, s16);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  int False
//  int False
void dPath_GetRoomPath(int, int);
// False False
//  dPath const* False
// 	 dPath const False
// 		 dPath False
//  int False
void dPath_GetNextRoomPath(dPath const*, int);
// False False
//  camera_class* False
// 	 camera_class False
void dCam_getControledAngleY(camera_class*);
// False False
//  cBgS_PolyInfo const* False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void dKy_pol_sound_get(cBgS_PolyInfo const*);
// False False
//  f32 False
void cM_rad2s(f32);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
void cM_rnd();
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32 False
void cBgW_CheckBWall(f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseAngleS(s16*, s16, s16);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  s16 False
//  s16 False
void cLib_distanceAngleS(s16, s16);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new[](u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);
// False False
//  s16 False
//  s16 False
//  s16 False
//  Quaternion* False
// 	 Quaternion False
void JMAEulerToQuat(s16, s16, s16, Quaternion*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  Quaternion const* False
// 	 Quaternion const False
// 		 Quaternion False
//  Quaternion const* False
// 	 Quaternion const False
// 		 Quaternion False
//  Quaternion* False
// 	 Quaternion False
extern "C" void mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  Quaternion const* False
// 	 Quaternion const False
// 		 Quaternion False
extern "C" void quatM__14mDoMtx_stack_cFPC10Quaternion();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTexPattern* False
// 	 J3DAnmTexPattern False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_btpAnmFP16J3DMaterialTableP16J3DAnmTexPatterniifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  s16 False
extern "C" void entry__13mDoExt_btpAnmFP16J3DMaterialTables();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelEntryDL__FP8J3DModel();
// False False
//  f32 False
//  u16 False
//  u16 False
extern "C" void initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs();
// False False
//  u16 False
//  u16 False
//  ResTIMG* False
// 	 ResTIMG False
//  int False
extern "C" void init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi();
// False False
//  int False
//  f32 False
//  _GXColor& False
// 	 _GXColor False
//  u16 False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void update__19mDoExt_3DlineMat1_cFifR8_GXColorUsP12dKy_tevstr_c();
// False False
//  mDoExt_3DlineMat_c* False
// 	 mDoExt_3DlineMat_c False
extern "C" void setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  int (*)(void*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Executor__FPFPvPv_iPv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  void* False
// 	 void False
extern "C" void fopAcM_setStageLayer__FPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ2__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void fpoAcM_relativePos__FPC10fopAc_ac_cPC4cXyzP4cXyz();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  s16 False
extern "C" void fopAcM_getPolygonAngle__FRC13cBgS_PolyInfos();
// False False
//  cM3dGPla const* False
// 	 cM3dGPla const False
// 		 cM3dGPla False
//  s16 False
extern "C" void fopAcM_getPolygonAngle__FPC8cM3dGPlas();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void waterCheck__11fopAcM_wt_cFPC4cXyz();
// False False
//  int False
extern "C" void getLayerNo__14dComIfG_play_cFi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  s8 False
extern "C" void set__17dSv_horse_place_cFPCcRC4cXyzsSc();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  int* False
// 	 int False
//  int* False
// 	 int False
//  int* False
// 	 int False
//  u16* False
// 	 u16 False
//  u8* False
// 	 u8 False
extern "C" void getDemoIDData__13dDemo_actor_cFPiPiPiPUsPUc();
// False False
//  u8 False
extern "C" void getActor__14dDemo_object_cFUc();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  u16 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
// False False
//  int False
extern "C" void getMyNowCutName__16dEvent_manager_cFi();
// False False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
// False False
//  int False
extern "C" void cutEnd__16dEvent_manager_cFi();
// False False
extern "C" void getGoal__16dEvent_manager_cFv();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  dBgS_Acch* False
// 	 dBgS_Acch False
//  f32 False
//  f32 False
extern "C" void init__7dPaPo_cFP9dBgS_Acchff();
// False False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  f32 False
//  f32 False
extern "C" void setEffectFour__8dPaPoF_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC5csXyzPC4cXyzScff();
// False False
//  int False
//  int False
extern "C" void dPath_GetRoomPath__Fii();
// False False
//  dPath const* False
// 	 dPath const False
// 		 dPath False
//  int False
extern "C" void dPath_GetNextRoomPath__FPC5dPathi();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartQuake__12dVibration_cFii4cXyz();
// False False
//  int False
extern "C" void StopQuake__12dVibration_cFi();
// False False
//  s32 False
extern "C" void GetLockonList__12dAttention_cFl();
// False False
extern "C" void LockonTruth__12dAttention_cFv();
// False False
extern "C" void getActor__10dAttList_cFv();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void ChkPolySafe__4cBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetExitId__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyColor__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetHorseNoEntry__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetSpecialCode__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGroundCode__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
extern "C" void Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void __ct__16dBgS_HorseLinChkFv();
// False False
extern "C" void __dt__16dBgS_HorseLinChkFv();
// False False
extern "C" void SetHorse__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ResetAtHit__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void MoveCAt__8dCcD_CylFR4cXyz();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u8 False
extern "C" void Set__12dCcMassS_MngFP8cCcD_ObjUc();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void checkStageName__9daAlink_cFPCc();
// False False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  int False
extern "C" void getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi();
// False False
//  daAlink_c::daAlink_ANM False
extern "C" void checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM();
// False False
extern "C" void checkHorseWaitLashAnime__9daAlink_cCFv();
// False False
extern "C" void checkHorseLieAnime__9daAlink_cCFv();
// False False
extern "C" void checkHorseSubjectivity__9daAlink_cCFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void getHorseReinHandPos__9daAlink_cFP4cXyzP4cXyz();
// False False
extern "C" void checkAnmEnd__16daPy_frameCtrl_cFv();
// False False
extern "C" void updateFrame__16daPy_frameCtrl_cFv();
// False False
//  u8 False
//  s16 False
//  s16 False
//  f32 False
//  f32 False
extern "C" void setFrameCtrl__16daPy_frameCtrl_cFUcssff();
// False False
extern "C" void setActor__16daPy_actorKeep_cFv();
// False False
extern "C" void clearData__16daPy_actorKeep_cFv();
// False False
//  cXyz* False
// 	 cXyz False
extern "C" void setLookPos__9daPy_py_cFP4cXyz();
// False False
//  camera_class* False
// 	 camera_class False
extern "C" void dCam_getControledAngleY__FP12camera_class();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cBgS_PolyInfo const* False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void dKy_pol_sound_get__FPC13cBgS_PolyInfo();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
// False False
extern "C" void ClrCcMove__9cCcD_SttsFv();
// False False
//  u32 False
extern "C" void SetGrp__10cCcD_ObjTgFUl();
// False False
//  u32 False
extern "C" void SetVsGrp__10cCcD_ObjCoFUl();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
extern "C" void normalizeZP__4cXyzFv();
// False False
extern "C" void atan2sX_Z__4cXyzCFv();
// False False
extern "C" void atan2sY_XZ__4cXyzCFv();
// False False
//  f32 False
extern "C" void cM_rad2s__Ff();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
extern "C" void cM_rnd__Fv();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
//  f32 False
extern "C" void cBgW_CheckBWall__Ff();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseAngleS__FPsss();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  s16 False
//  s16 False
extern "C" void cLib_distanceAngleS__Fss();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  u32 False
extern "C" void subBgmStart__8Z2SeqMgrFUl();
// False False
//  void* False
// 	 void False
//  bool False
//  f32 False
//  f32 False
extern "C" void initAnime__10Z2CreatureFPvbff();
// False False
//  f32 False
//  f32 False
extern "C" void updateAnime__10Z2CreatureFff();
// False False
extern "C" void __ct__14Z2CreatureRideFv();
// False False
extern "C" void __dt__14Z2CreatureRideFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__14Z2CreatureRideFP3VecP3VecUcUc();
// False False
//  bool False
extern "C" void setLinkRiding__14Z2CreatureRideFb();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nwa__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
//  f32 const (& )[3][4] False
// 	 f32 const False
// 		 f32 False
// 	 & False
// 		  False
extern "C" void init__24J3DMtxCalcJ3DSysInitMayaFRC3VecRA3_A4_Cf();
// False False
//  J3DTransformInfo const& False
// 	 J3DTransformInfo const False
// 		 J3DTransformInfo False
extern "C" void calcTransform__27J3DMtxCalcCalcTransformMayaFRC16J3DTransformInfo();
// False False
//  s16 False
//  s16 False
//  s16 False
//  Quaternion* False
// 	 Quaternion False
extern "C" void JMAEulerToQuat__FsssP10Quaternion();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXConcat();
// False False
extern "C" void PSMTXInverse();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXQuat();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSubtract();
// False False
extern "C" void PSVECScale();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __construct_new_array();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void __save_gpr();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_21();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void __restore_gpr();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_21();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void abs();
// False False
extern "C" void strcmp();
extern "C" extern u8 const m_handLeftInSidePos__9daAlink_c[12];
extern "C" extern u8 const m_handRightInSidePos__9daAlink_c[12];
extern "C" extern void* __vt__19mDoExt_3DlineMat1_c[5];
extern "C" extern void* __vt__28mDoExt_MtxCalcAnmBlendTblOld[11];
extern "C" extern void* __vt__25mDoExt_MtxCalcAnmBlendTbl[11];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 m_typeFourData__8dPaPoF_c[60];
extern "C" extern u8 m_emitterFourData__8dPaPoF_c[60 + 28 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mGndCheck__11fopAcM_gc_c[84];
extern "C" extern u8 mDemoArcName__20dStage_roomControl_c[10 + 2 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern f32 Zero__4cXyz[3];
extern "C" extern u8 BaseX__4cXyz[12];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern f32 mWaterY__11fopAcM_wt_c[1 + 1 /* padding */];
extern "C" extern u8 struct_80450D64[4];
extern "C" extern u8 m_top__12daTagHstop_c[4 + 4 /* padding */];
extern "C" extern u8 m_object__7dDemo_c[4];
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 mJoint__10J3DMtxCalc[4];
// False False
extern "C" void isAngry__7daCow_cFv();
// False False
extern "C" void setAngryHit__7daCow_cFv();
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 808454AC-808454B8 000C+00 s=41 e=0 z=0  None .rodata    @3894                                                        */
SECTION_RODATA static u8 const lit_3894[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80837F2C-8083836C 0440+00 s=1 e=0 z=0  None .text      setReinPos__13daHorseRein_cFi                                */
//	80837F4C: 803621D0 (_savegpr_26)
//	80837F58: 808454AC (lit_3894)
//	80837F5C: 808454AC (lit_3894)
//	80837F78: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80837F9C: 80266F48 (normalizeZP__4cXyzFv)
//	80837FF4: 803470D8 (PSVECScale)
//	80838064: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80838074: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80838084: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	808380BC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	808380E0: 80266F48 (normalizeZP__4cXyzFv)
//	808380F0: 80266B84 (__ml__4cXyzCFf)
//	80838100: 80347090 (PSVECAdd)
//	8083811C: 80266F48 (normalizeZP__4cXyzFv)
//	8083812C: 80266B84 (__ml__4cXyzCFf)
//	8083813C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80838164: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80838184: 80347138 (PSVECSquareMag)
//	808381F4: 80450AE0 (__float_nan)
//	808381F8: 80450AE0 (__float_nan)
//	80838264: 80450AE0 (__float_nan)
//	80838268: 80450AE0 (__float_nan)
//	808382AC: 803470D8 (PSVECScale)
//	808382BC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	808382D0: 80266B84 (__ml__4cXyzCFf)
//	808382E0: 80266B84 (__ml__4cXyzCFf)
//	808382F0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80838318: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80838328: 80266B84 (__ml__4cXyzCFf)
//	80838358: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daHorseRein_c::setReinPos(int param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setReinPos__13daHorseRein_cFi.s"
}
#pragma pop


/* 8083836C-808383A8 003C+00 s=7 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	8083838C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__4cXyzFv.s"
}
#pragma pop


/* 808383A8-80838498 00F0+00 s=2 e=0 z=0  None .text      setReinPosPart__13daHorseRein_cFi                            */
//	808383D4: 80430CF4 (Zero__4cXyz)
//	808383D8: 80430CF4 (Zero__4cXyz)
//	80838470: 80837F2C (setReinPos__13daHorseRein_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daHorseRein_c::setReinPosPart(int param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setReinPosPart__13daHorseRein_cFi.s"
}
#pragma pop


/* ############################################################################################## */
/* 808458D4-808458E0 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 808458E0-808458F4 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 808458F4-808458F8 0004+00 s=1 e=0 z=0  None .data      l_autoUpHeight                                               */
SECTION_DATA static u32 l_autoUpHeight = 0x42480000;

/* 808458F8-8084593C 0044+00 s=0 e=0 z=0  None .data      l_cylSrc                                                     */
SECTION_DATA u8 l_cylSrc[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x79, 0x0B, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
	0x43, 0x66, 0x00, 0x00,
};

/* 8084593C-8084597C 0040+00 s=0 e=0 z=0  None .data      l_sphSrc                                                     */
SECTION_DATA u8 l_sphSrc[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
};

/* 8084597C-80845988 000C+00 s=0 e=0 z=0  None .data      @4886                                                        */
SECTION_DATA void* lit_4886[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)checkSpecialWallHitSubstance__9daHorse_cCFRC4cXyz,
};

/* 80845988-80845994 000C+00 s=0 e=0 z=0  None .data      @4887                                                        */
SECTION_DATA void* lit_4887[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)setReinPosHandSubstance__9daHorse_cFi,
};

/* 80845994-808459A0 000C+00 s=0 e=0 z=0  None .data      @4888                                                        */
SECTION_DATA void* lit_4888[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)setReinPosNormalSubstance__9daHorse_cFv,
};

/* 808459A0-808459AC 000C+00 s=0 e=0 z=0  None .data      @4889                                                        */
SECTION_DATA void* lit_4889[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)callHorseSubstance__9daHorse_cFPC4cXyz,
};

/* 808459AC-808459B8 000C+00 s=0 e=0 z=0  None .data      @4890                                                        */
SECTION_DATA void* lit_4890[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)setHorsePosAndAngleSubstance__9daHorse_cFPC4cXyzs,
};

/* 808459B8-808459C4 000C+00 s=0 e=0 z=0  None .data      @4891                                                        */
SECTION_DATA void* lit_4891[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)onRideFlgSubstance__9daHorse_cFv,
};

/* 808459C4-808459D0 000C+00 s=0 e=0 z=0  None .data      @4892                                                        */
SECTION_DATA void* lit_4892[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)offRideFlgSubstance__9daHorse_cFv,
};

/* 808459D0-808459DC 000C+00 s=1 e=0 z=0  None .data      @9343                                                        */
SECTION_DATA static void* lit_9343[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procWait__9daHorse_cFv,
};

/* 808459DC-808459E8 000C+00 s=1 e=0 z=0  None .data      @9546                                                        */
SECTION_DATA static void* lit_9546[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procMove__9daHorse_cFv,
};

/* 808459E8-808459F4 000C+00 s=1 e=0 z=0  None .data      @9680                                                        */
SECTION_DATA static void* lit_9680[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procStop__9daHorse_cFv,
};

/* 808459F4-80845A00 000C+00 s=1 e=0 z=0  None .data      @9802                                                        */
SECTION_DATA static void* lit_9802[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procTurn__9daHorse_cFv,
};

/* 80845A00-80845A0C 000C+00 s=1 e=0 z=0  None .data      @9992                                                        */
SECTION_DATA static void* lit_9992[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procJump__9daHorse_cFv,
};

/* 80845A0C-80845A18 000C+00 s=1 e=0 z=0  None .data      @10113                                                       */
SECTION_DATA static void* lit_10113[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procLand__9daHorse_cFv,
};

/* 80845A18-80845A24 000C+00 s=1 e=0 z=0  None .data      @10171                                                       */
SECTION_DATA static void* lit_10171[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procLargeDamage__9daHorse_cFv,
};

/* 80845A24-80845A30 000C+00 s=1 e=0 z=0  None .data      @10185                                                       */
SECTION_DATA static void* lit_10185[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)procToolDemo__9daHorse_cFv,
};

/* 80845A30-80845A34 0004+00 s=1 e=0 z=0  None .data      reinLineColor$10541                                          */
SECTION_DATA static u8 reinLineColor[4] = {
	0x00, 0x00, 0x00, 0xFF,
};

/* 80845A34-80845A54 0020+00 s=1 e=0 z=0  None .data      l_daHorse_Method                                             */
SECTION_DATA static void* l_daHorse_Method[8] = {
	(void*)daHorse_Create__FP10fopAc_ac_c,
	(void*)daHorse_Delete__FP9daHorse_c,
	(void*)daHorse_Execute__FP9daHorse_c,
	(void*)NULL,
	(void*)daHorse_Draw__FP9daHorse_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80845A54-80845A84 0030+00 s=0 e=0 z=1  None .data      g_profile_HORSE                                              */
SECTION_DATA void* g_profile_HORSE[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0004FFFD,
	(void*)0x00EE0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00001904,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x005A0000,
	(void*)&l_daHorse_Method,
	(void*)0x00060000,
	(void*)0x050E0000,
};

/* 80845A84-80845A90 000C+00 s=2 e=0 z=0  None .data      __vt__16daPy_frameCtrl_c                                     */
SECTION_DATA void* __vt__16daPy_frameCtrl_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__16daPy_frameCtrl_cFv,
};

/* 80845A90-80845A9C 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80845A9C-80845AA8 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80845AA8-80845AB4 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80845AB4-80845AC8 0014+00 s=1 e=0 z=0  None .data      __vt__18mDoExt_3DlineMat_c                                   */
SECTION_DATA void* __vt__18mDoExt_3DlineMat_c[5] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80845AC8-80845AD4 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80845AD4-80845AE0 000C+00 s=5 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80845AE0-80845AEC 000C+00 s=5 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80845AEC-80845B10 0024+00 s=3 e=0 z=0  None .data      __vt__14dBgS_HorseAcch                                       */
SECTION_DATA void* __vt__14dBgS_HorseAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14dBgS_HorseAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80844CA8,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80844CA0,
};

/* 80845B10-80845B1C 000C+00 s=5 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80845B1C-80845B48 002C+00 s=2 e=0 z=0  None .data      __vt__73J3DMtxCalcNoAnm<27J3DMtxCalcCalcTransformMaya,24J3DMtxCalcJ3DSysInitMaya> */
SECTION_DATA void* data_80845B1C[11] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)func_808392DC,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)func_80844BB4,
	(void*)func_80844BDC,
};

/* 80845B48-80845B74 002C+00 s=3 e=0 z=0  None .data      __vt__19J3DMtxCalcNoAnmBase                                  */
SECTION_DATA void* __vt__19J3DMtxCalcNoAnmBase[11] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__19J3DMtxCalcNoAnmBaseFv,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)NULL,
	(void*)NULL,
};

/* 80845B74-80845BA0 002C+00 s=4 e=0 z=0  None .data      __vt__10J3DMtxCalc                                           */
SECTION_DATA void* __vt__10J3DMtxCalc[11] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)NULL,
	(void*)NULL,
};

/* 80845BA0-80845BAC 000C+00 s=5 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 80838498-80838750 02B8+00 s=2 e=0 z=0  None .text      coHitCallbackBoarJump__9daHorse_cFP10fopAc_ac_c              */
//	808384D0: 803621D0 (_savegpr_26)
//	808384D8: 808454AC (lit_3894)
//	808384DC: 808454AC (lit_3894)
//	808384E0: 804061C0 (g_dComIfG_gameInfo)
//	808384E4: 804061C0 (g_dComIfG_gameInfo)
//	80838524: 80439A20 (sincosTable___5JMath)
//	80838528: 80439A20 (sincosTable___5JMath)
//	808385B0: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	808385BC: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	808385C8: 80845BA0 (__vt__8cM3dGPla)
//	808385CC: 80845BA0 (__vt__8cM3dGPla)
//	808385E0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	808385E8: 80268210 (cBgW_CheckBWall__Ff)
//	808385F4: 80845BA0 (__vt__8cM3dGPla)
//	808385F8: 80845BA0 (__vt__8cM3dGPla)
//	80838604: 80845BA0 (__vt__8cM3dGPla)
//	80838608: 80845BA0 (__vt__8cM3dGPla)
//	80838638: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	8083863C: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	80838674: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80838688: 80074C6C (GetHorseNoEntry__4dBgSFRC13cBgS_PolyInfo)
//	8083870C: 80841084 (setBoarHit__9daHorse_cFP10fopAc_ac_ci)
//	8083873C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daHorse_c::coHitCallbackBoarJump(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/coHitCallbackBoarJump__9daHorse_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80838750-80838798 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	80838768: 80845BA0 (__vt__8cM3dGPla)
//	8083876C: 80845BA0 (__vt__8cM3dGPla)
//	8083877C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 80838798-80838904 016C+00 s=1 e=0 z=0  None .text      coHitCallbackBoarHit__9daHorse_cFP10fopAc_ac_cP12dCcD_GObjInf */
//	808387A8: 803621DC (_savegpr_29)
//	808387B0: 808454AC (lit_3894)
//	808387B4: 808454AC (lit_3894)
//	808387B8: 804061C0 (g_dComIfG_gameInfo)
//	808387BC: 804061C0 (g_dComIfG_gameInfo)
//	80838828: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8083885C: 803650D0 (abs)
//	808388B4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	808388C8: 808438AC (procLargeDamageInit__9daHorse_cFv)
//	808388E8: 80841084 (setBoarHit__9daHorse_cFP10fopAc_ac_ci)
//	808388F0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
asm void daHorse_c::coHitCallbackBoarHit(fopAc_ac_c* param_0, dCcD_GObjInf* param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/coHitCallbackBoarHit__9daHorse_cFP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop


/* 80838904-80838A20 011C+00 s=2 e=0 z=0  None .text      coHitCallbackCowHit__9daHorse_cFP10fopAc_ac_c                */
//	80838930: 8065CFBC (isAngry__7daCow_cFv)
//	80838940: 8065D0B8 (setAngryHit__7daCow_cFv)
//	80838944: 804061C0 (g_dComIfG_gameInfo)
//	80838948: 804061C0 (g_dComIfG_gameInfo)
//	8083896C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	808389B4: 804061C0 (g_dComIfG_gameInfo)
//	808389B8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daHorse_c::coHitCallbackCowHit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/coHitCallbackCowHit__9daHorse_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80838A20-80838A44 0024+00 s=1 e=0 z=0  None .text      daHorse_coHitCallbackBoarJump__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	80838A30: 80838498 (coHitCallbackBoarJump__9daHorse_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
asm static void daHorse_coHitCallbackBoarJump(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/func_80838A20.s"
}
#pragma pop


/* 80838A44-80838A68 0024+00 s=1 e=0 z=0  None .text      daHorse_coHitCallbackCowHit__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	80838A54: 80838904 (coHitCallbackCowHit__9daHorse_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
asm static void daHorse_coHitCallbackCowHit(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_coHitCallbackCowHit__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop


/* 80838A68-80838AC4 005C+00 s=1 e=0 z=0  None .text      daHorse_coHitCallbackAll__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
//	80838A78: 803621DC (_savegpr_29)
//	80838A8C: 80838498 (coHitCallbackBoarJump__9daHorse_cFP10fopAc_ac_c)
//	80838A9C: 80838798 (coHitCallbackBoarHit__9daHorse_cFP10fopAc_ac_cP12dCcD_GObjInf)
//	80838AA8: 80838904 (coHitCallbackCowHit__9daHorse_cFP10fopAc_ac_c)
//	80838AB0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
asm static void daHorse_coHitCallbackAll(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_coHitCallbackAll__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop


/* ############################################################################################## */
/* 808454B8-808454C0 0006+02 s=2 e=0 z=0  None .rodata    l_arcName                                                    */
SECTION_RODATA static u8 const l_arcName[6 + 2 /* padding */] = {
	0x48, 0x6F, 0x72, 0x73, 0x65, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 808454C0-808454C8 0008+00 s=2 e=0 z=0  None .rodata    m_footJointTable__9daHorse_c                                 */
SECTION_RODATA static u8 const m_footJointTable__9daHorse_c[8] = {
	0x00, 0x03, 0x00, 0x07, 0x00, 0x1B, 0x00, 0x1F,
};

/* 808454C8-808454CC 0004+00 s=0 e=0 z=0  None .rodata    m_callLimitDistance2__9daHorse_c                             */
SECTION_RODATA u32 const m_callLimitDistance2__9daHorse_c = 0x491C4000;

/* 808454CC-808455F0 0124+00 s=1 e=0 z=0  None .rodata    m__14daHorse_hio_c0                                          */
SECTION_RODATA static u8 const m__14daHorse_hio_c0[292] = {
	0x02, 0x58, 0x00, 0x32, 0x00, 0x2D, 0x00, 0x07, 0x00, 0x0E, 0x00, 0x08, 0x00, 0x5A, 0x00, 0xD2,
	0x00, 0x0F, 0x00, 0x07, 0x00, 0x0D, 0x00, 0x08, 0x00, 0x03, 0x00, 0x2D, 0x42, 0x28, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0xC0, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A,
	0x3F, 0xC0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3D, 0xA3, 0xD7, 0x0A, 0x3E, 0xE6, 0x66, 0x66,
	0x3F, 0x66, 0x66, 0x66, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0xA0, 0x00, 0x00, 0x3F, 0xB3, 0x33, 0x33,
	0x3E, 0xCC, 0xCC, 0xCD, 0x40, 0x00, 0x00, 0x00, 0x40, 0xD0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x3F, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0xA0, 0x00, 0x00,
	0x42, 0x34, 0x00, 0x00, 0x3F, 0xD9, 0x99, 0x9A, 0x40, 0x20, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD,
	0x40, 0xA0, 0x00, 0x00, 0x42, 0x64, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x41, 0xF8, 0x00, 0x00,
	0x40, 0x00, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x3F, 0xD9, 0x99, 0x9A, 0x40, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x41, 0x10, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
	0x43, 0xAF, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x44, 0x7A, 0x00, 0x00,
	0x42, 0x48, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66, 0x3F, 0x00, 0x00, 0x00,
	0x40, 0x80, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
	0x3E, 0x99, 0x99, 0x9A, 0x40, 0xE0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x41, 0x10, 0x00, 0x00, 0x42, 0xFA, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x3F, 0xA6, 0x66, 0x66,
	0x41, 0x70, 0x00, 0x00,
};

/* 808455F0-808455F4 0004+00 s=3 e=0 z=0  None .rodata    @4303                                                        */
SECTION_RODATA static u32 const lit_4303 = 0x40400000;

/* 808455F4-808455F8 0004+00 s=4 e=0 z=0  None .rodata    @4304                                                        */
SECTION_RODATA static u32 const lit_4304 = 0x3F800000;

/* 808455F8-808455FC 0004+00 s=0 e=0 z=0  None .rodata    @4305                                                        */
SECTION_RODATA u32 const lit_4305 = 0xC0900000;

/* 808455FC-80845600 0004+00 s=14 e=0 z=0  None .rodata    @4306                                                        */
SECTION_RODATA static u8 const lit_4306[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80838AC4-80838B78 00B4+00 s=1 e=0 z=0  None .text      daHorse_searchEnemy__FP10fopAc_ac_cPv                        */
//	80838AE0: 804061C0 (g_dComIfG_gameInfo)
//	80838AE4: 804061C0 (g_dComIfG_gameInfo)
//	80838B14: 808455FC (lit_4306)
//	80838B18: 808455FC (lit_4306)
//	80838B40: 8034739C (PSVECSquareDistance)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
asm static void daHorse_searchEnemy(fopAc_ac_c* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_searchEnemy__FP10fopAc_ac_cPv.s"
}
#pragma pop


/* 80838B78-80838F3C 03C4+00 s=1 e=0 z=0  None .text      modelCallBack__9daHorse_cFi                                  */
//	80838B88: 803621D0 (_savegpr_26)
//	80838BB4: 808455FC (lit_4306)
//	80838BB8: 808455FC (lit_4306)
//	80838BE8: 80434BE4 (mCurrentMtx__6J3DSys)
//	80838BEC: 80434BE4 (mCurrentMtx__6J3DSys)
//	80838BF0: 803464B0 (PSMTXCopy)
//	80838C48: 803DD470 (now__14mDoMtx_stack_c)
//	80838C4C: 803DD470 (now__14mDoMtx_stack_c)
//	80838C5C: 803468E8 (PSMTXTrans)
//	80838C60: 803DD470 (now__14mDoMtx_stack_c)
//	80838C64: 803DD470 (now__14mDoMtx_stack_c)
//	80838C6C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80838C88: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80838C8C: 803DD470 (now__14mDoMtx_stack_c)
//	80838C90: 803DD470 (now__14mDoMtx_stack_c)
//	80838C9C: 803464E4 (PSMTXConcat)
//	80838CB8: 803DD470 (now__14mDoMtx_stack_c)
//	80838CBC: 803DD470 (now__14mDoMtx_stack_c)
//	80838CC0: 803464B0 (PSMTXCopy)
//	80838CE4: 803DD470 (now__14mDoMtx_stack_c)
//	80838CE8: 803DD470 (now__14mDoMtx_stack_c)
//	80838CF8: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80838D00: 803DD470 (now__14mDoMtx_stack_c)
//	80838D04: 803DD470 (now__14mDoMtx_stack_c)
//	80838D18: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80838D1C: 803DD470 (now__14mDoMtx_stack_c)
//	80838D20: 803DD470 (now__14mDoMtx_stack_c)
//	80838D38: 803464B0 (PSMTXCopy)
//	80838D4C: 80434BE4 (mCurrentMtx__6J3DSys)
//	80838D50: 80434BE4 (mCurrentMtx__6J3DSys)
//	80838D54: 803464B0 (PSMTXCopy)
//	80838DC4: 80339878 (JMAEulerToQuat__FsssP10Quaternion)
//	80838DE0: 8000CB5C (mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion)
//	80838DF4: 803DD470 (now__14mDoMtx_stack_c)
//	80838DF8: 803DD470 (now__14mDoMtx_stack_c)
//	80838E08: 803468E8 (PSMTXTrans)
//	80838E18: 8000CF7C (quatM__14mDoMtx_stack_cFPC10Quaternion)
//	80838E1C: 803DD470 (now__14mDoMtx_stack_c)
//	80838E20: 803DD470 (now__14mDoMtx_stack_c)
//	80838E28: 803465B0 (PSMTXInverse)
//	80838E44: 803DD470 (now__14mDoMtx_stack_c)
//	80838E48: 803DD470 (now__14mDoMtx_stack_c)
//	80838E4C: 80434BE4 (mCurrentMtx__6J3DSys)
//	80838E50: 80434BE4 (mCurrentMtx__6J3DSys)
//	80838E54: 803464E4 (PSMTXConcat)
//	80838E60: 803469E8 (PSMTXQuat)
//	80838E7C: 80434BE4 (mCurrentMtx__6J3DSys)
//	80838E80: 80434BE4 (mCurrentMtx__6J3DSys)
//	80838E8C: 803464E4 (PSMTXConcat)
//	80838E90: 80434BE4 (mCurrentMtx__6J3DSys)
//	80838E94: 80434BE4 (mCurrentMtx__6J3DSys)
//	80838E9C: 803464B0 (PSMTXCopy)
//	80838EE4: 8083EB10 (setFootMatrix__9daHorse_cFv)
//	80838EFC: 808455F4 (lit_4304)
//	80838F00: 808455F4 (lit_4304)
//	80838F14: 808455FC (lit_4306)
//	80838F18: 808455FC (lit_4306)
//	80838F28: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daHorse_c::modelCallBack(int param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/modelCallBack__9daHorse_cFi.s"
}
#pragma pop


/* 80838F3C-80838F80 0044+00 s=1 e=0 z=0  None .text      daHorse_modelCallBack__FP8J3DJointi                          */
//	80838F4C: 80434AC8 (j3dSys)
//	80838F50: 80434AC8 (j3dSys)
//	80838F68: 80838B78 (modelCallBack__9daHorse_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm static void daHorse_modelCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_modelCallBack__FP8J3DJointi.s"
}
#pragma pop


/* 80838F80-80838F98 0018+00 s=1 e=0 z=0  None .text      daHorse_searchSingleBoar__FP10fopAc_ac_cPv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
asm static void daHorse_searchSingleBoar(fopAc_ac_c* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_searchSingleBoar__FP10fopAc_ac_cPv.s"
}
#pragma pop


/* 80838F98-808392D8 0340+00 s=1 e=0 z=0  None .text      createHeap__9daHorse_cFv                                     */
//	80838FA8: 803621D4 (_savegpr_27)
//	80838FB0: 808454AC (lit_3894)
//	80838FB4: 808454AC (lit_3894)
//	80838FC0: 804061C0 (g_dComIfG_gameInfo)
//	80838FC4: 804061C0 (g_dComIfG_gameInfo)
//	80838FD8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80838FF0: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80839010: 802CECC4 (__nwa__FUl)
//	80839024: 80361F14 (__construct_new_array)
//	8083903C: 802CECC4 (__nwa__FUl)
//	80839054: 802CEC4C (__nw__FUl)
//	808390AC: 802CEC4C (__nw__FUl)
//	808390BC: 80845B74 (__vt__10J3DMtxCalc)
//	808390C0: 80845B74 (__vt__10J3DMtxCalc)
//	808390C8: 80845B48 (__vt__19J3DMtxCalcNoAnmBase)
//	808390CC: 80845B48 (__vt__19J3DMtxCalcNoAnmBase)
//	808390D4: 80845B1C (data_80845B1C)
//	808390D8: 80845B1C (data_80845B1C)
//	808390E0: 803A33E4 (__vt__25mDoExt_MtxCalcAnmBlendTbl)
//	808390E4: 803A33E4 (__vt__25mDoExt_MtxCalcAnmBlendTbl)
//	80839138: 803A33B8 (__vt__28mDoExt_MtxCalcAnmBlendTblOld)
//	8083913C: 803A33B8 (__vt__28mDoExt_MtxCalcAnmBlendTblOld)
//	80839170: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80839198: 8000D54C (init__13mDoExt_btpAnmFP16J3DMaterialTableP16J3DAnmTexPatterniifss)
//	808391B0: 802CEC4C (__nw__FUl)
//	808391DC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	808391F4: 80013360 (init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi)
//	80839224: 808392D8 (__ct__4cXyzFv)
//	80839228: 808392D8 (__ct__4cXyzFv)
//	8083922C: 8083836C (__dt__4cXyzFv)
//	80839230: 8083836C (__dt__4cXyzFv)
//	80839240: 802CECC4 (__nwa__FUl)
//	80839254: 80361F14 (__construct_new_array)
//	8083927C: 802CECC4 (__nwa__FUl)
//	80839290: 80361F14 (__construct_new_array)
//	808392C4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::createHeap() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/createHeap__9daHorse_cFv.s"
}
#pragma pop


/* 808392D8-808392DC 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 808392DC-80839348 006C+00 s=1 e=0 z=0  None .text      __dt__73J3DMtxCalcNoAnm<27J3DMtxCalcCalcTransformMaya,24J3DMtxCalcJ3DSysInitMaya>Fv */
//	808392F4: 80845B1C (data_80845B1C)
//	808392F8: 80845B1C (data_80845B1C)
//	80839304: 80845B48 (__vt__19J3DMtxCalcNoAnmBase)
//	80839308: 80845B48 (__vt__19J3DMtxCalcNoAnmBase)
//	80839314: 80845B74 (__vt__10J3DMtxCalc)
//	80839318: 80845B74 (__vt__10J3DMtxCalc)
//	8083932C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
asm J3DMtxCalcNoAnm__template0::~J3DMtxCalcNoAnm__template0() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/func_808392DC.s"
}
#pragma pop


/* 80839348-808393A4 005C+00 s=1 e=0 z=0  None .text      __dt__19J3DMtxCalcNoAnmBaseFv                                */
//	80839360: 80845B48 (__vt__19J3DMtxCalcNoAnmBase)
//	80839364: 80845B48 (__vt__19J3DMtxCalcNoAnmBase)
//	80839370: 80845B74 (__vt__10J3DMtxCalc)
//	80839374: 80845B74 (__vt__10J3DMtxCalc)
//	80839388: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMtxCalcNoAnmBase::~J3DMtxCalcNoAnmBase() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__19J3DMtxCalcNoAnmBaseFv.s"
}
#pragma pop


/* 808393A4-808393EC 0048+00 s=1 e=0 z=0  None .text      __dt__10J3DMtxCalcFv                                         */
//	808393BC: 80845B74 (__vt__10J3DMtxCalc)
//	808393C0: 80845B74 (__vt__10J3DMtxCalc)
//	808393D0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DMtxCalc::~J3DMtxCalc() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__10J3DMtxCalcFv.s"
}
#pragma pop


/* 808393EC-8083940C 0020+00 s=1 e=0 z=0  None .text      daHorse_createHeap__FP10fopAc_ac_c                           */
//	808393F8: 80838F98 (createHeap__9daHorse_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daHorse_createHeap(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_createHeap__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80845600-80845604 0004+00 s=0 e=0 z=0  None .rodata    @4307                                                        */
SECTION_RODATA u32 const lit_4307 = 0x3F969697;

/* 80845604-8084560C 0004+04 s=0 e=0 z=0  None .rodata    @4308                                                        */
SECTION_RODATA u32 const lit_4308[1 + 1 /* padding */] = {
	0x40B00000,
	/* padding */
	0x00000000,
};

/* 8084560C-80845614 0008+00 s=0 e=0 z=0  None .rodata    @4309                                                        */
SECTION_RODATA u8 const lit_4309[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80845614-8084561C 0008+00 s=0 e=0 z=0  None .rodata    @4310                                                        */
SECTION_RODATA u8 const lit_4310[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8084561C-80845624 0008+00 s=0 e=0 z=0  None .rodata    @4311                                                        */
SECTION_RODATA u8 const lit_4311[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80845624-80845628 0004+00 s=0 e=0 z=0  None .rodata    @4312                                                        */
SECTION_RODATA u32 const lit_4312 = 0x3F99999A;

/* 80845628-8084562C 0004+00 s=0 e=0 z=0  None .rodata    @4313                                                        */
SECTION_RODATA u32 const lit_4313 = 0x3E4CCCCD;

/* 8084562C-80845634 0008+00 s=3 e=0 z=0  None .rodata    @4315                                                        */
SECTION_RODATA static u8 const lit_4315[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80845634-80845638 0004+00 s=0 e=0 z=0  None .rodata    @4465                                                        */
SECTION_RODATA u32 const lit_4465 = 0x42C80000;

/* 80845638-8084563C 0004+00 s=0 e=0 z=0  None .rodata    @4466                                                        */
SECTION_RODATA u32 const lit_4466 = 0x43480000;

/* 8084563C-80845640 0004+00 s=0 e=0 z=0  None .rodata    @4467                                                        */
SECTION_RODATA u32 const lit_4467 = 0x41C80000;

/* 80845640-80845644 0004+00 s=0 e=0 z=0  None .rodata    @4468                                                        */
SECTION_RODATA u32 const lit_4468 = 0x40A00000;

/* 80845644-80845648 0004+00 s=1 e=0 z=0  None .rodata    @5176                                                        */
SECTION_RODATA static u32 const lit_5176 = 0x3DCCCCCD;

/* 80845648-8084564C 0004+00 s=0 e=0 z=0  None .rodata    @5177                                                        */
SECTION_RODATA u32 const lit_5177 = 0x42700000;

/* 8084564C-80845650 0004+00 s=1 e=0 z=0  None .rodata    @5178                                                        */
SECTION_RODATA static u32 const lit_5178 = 0x43160000;

/* 80845650-80845654 0004+00 s=0 e=0 z=0  None .rodata    @5179                                                        */
SECTION_RODATA u32 const lit_5179 = 0x43700000;

/* 80845654-80845658 0004+00 s=1 e=0 z=0  None .rodata    @5180                                                        */
SECTION_RODATA static u32 const lit_5180 = 0x43FA0000;

/* 80845658-8084565C 0004+00 s=0 e=0 z=0  None .rodata    @5181                                                        */
SECTION_RODATA u32 const lit_5181 = 0xC0A00000;

/* 8084565C-80845660 0004+00 s=0 e=0 z=0  None .rodata    @5182                                                        */
SECTION_RODATA u32 const lit_5182 = 0x420C0000;

/* 80845660-80845664 0004+00 s=0 e=0 z=0  None .rodata    @5183                                                        */
SECTION_RODATA u32 const lit_5183 = 0x425C0000;

/* 80845664-80845668 0004+00 s=0 e=0 z=0  None .rodata    @5529                                                        */
SECTION_RODATA u32 const lit_5529 = 0xBF800000;

/* 80845668-8084566C 0004+00 s=0 e=0 z=0  None .rodata    @5530                                                        */
SECTION_RODATA u32 const lit_5530 = 0x41000000;

/* 8084566C-80845670 0004+00 s=1 e=0 z=0  None .rodata    @5531                                                        */
SECTION_RODATA static u32 const lit_5531 = 0x3F000000;

/* 80845670-80845674 0004+00 s=0 e=0 z=0  None .rodata    @5629                                                        */
SECTION_RODATA u32 const lit_5629 = 0x41900000;

/* 80845674-80845678 0004+00 s=0 e=0 z=0  None .rodata    @5630                                                        */
SECTION_RODATA u32 const lit_5630 = 0x3C449BA6;

/* 80845678-8084567C 0004+00 s=3 e=0 z=0  None .rodata    @5722                                                        */
SECTION_RODATA static u32 const lit_5722 = 0x3D4CCCCD;

/* 8084567C-80845680 0004+00 s=0 e=0 z=0  None .rodata    @5814                                                        */
SECTION_RODATA u32 const lit_5814 = 0x43C80000;

/* 80845680-80845684 0004+00 s=0 e=0 z=0  None .rodata    @5889                                                        */
SECTION_RODATA u32 const lit_5889 = 0x461C4000;

/* 80845684-80845688 0004+00 s=0 e=0 z=0  None .rodata    @5890                                                        */
SECTION_RODATA u32 const lit_5890 = 0x44C80000;

/* 80845688-80845698 0010+00 s=0 e=0 z=0  None .rodata    footEffectRate$6303                                          */
SECTION_RODATA u8 const data_80845688[16] = {
	0x3E, 0x8A, 0x3D, 0x71, 0x3E, 0xCC, 0xCC, 0xCD, 0x3F, 0x66, 0x66, 0x66, 0x3E, 0x2E, 0x14, 0x7B,
};

/* 80845698-8084569C 0004+00 s=0 e=0 z=0  None .rodata    @6389                                                        */
SECTION_RODATA u32 const lit_6389 = 0x41200000;

/* 8084569C-808456A0 0004+00 s=0 e=0 z=0  None .rodata    @6390                                                        */
SECTION_RODATA u32 const lit_6390 = 0x42080000;

/* 808456A0-808456A4 0004+00 s=0 e=0 z=0  None .rodata    @6391                                                        */
SECTION_RODATA u32 const lit_6391 = 0x41400000;

/* 808456A4-808456A8 0004+00 s=0 e=0 z=0  None .rodata    @6392                                                        */
SECTION_RODATA u32 const lit_6392 = 0x41600000;

/* 808456A8-808456AC 0004+00 s=0 e=0 z=0  None .rodata    @6393                                                        */
SECTION_RODATA u32 const lit_6393 = 0x41980000;

/* 808456AC-808456B0 0004+00 s=0 e=0 z=0  None .rodata    @6871                                                        */
SECTION_RODATA u32 const lit_6871 = 0xC702DC00;

/* 808456B0-808456B4 0004+00 s=0 e=0 z=0  None .rodata    @6872                                                        */
SECTION_RODATA u32 const lit_6872 = 0xC6A02800;

/* 808456B4-808456B8 0004+00 s=0 e=0 z=0  None .rodata    @6873                                                        */
SECTION_RODATA u32 const lit_6873 = 0x43960000;

/* 808456B8-808456BC 0004+00 s=0 e=0 z=0  None .rodata    @6874                                                        */
SECTION_RODATA u32 const lit_6874 = 0x46B94800;

/* 808456BC-808456C0 0004+00 s=0 e=0 z=0  None .rodata    @6875                                                        */
SECTION_RODATA u32 const lit_6875 = 0x42480000;

/* 808456C0-808456C4 0004+00 s=0 e=0 z=0  None .rodata    @6876                                                        */
SECTION_RODATA u32 const lit_6876 = 0x43360B61;

/* 808456C4-808456C8 0004+00 s=0 e=0 z=0  None .rodata    @6877                                                        */
SECTION_RODATA u32 const lit_6877 = 0x42CA0000;

/* 808456C8-808456CC 0004+00 s=0 e=0 z=0  None .rodata    @6878                                                        */
SECTION_RODATA u32 const lit_6878 = 0xC3480000;

/* 808456CC-808456D0 0004+00 s=0 e=0 z=0  None .rodata    @7216                                                        */
SECTION_RODATA u32 const lit_7216 = 0x49742400;

/* 808456D0-808456D4 0004+00 s=0 e=0 z=0  None .rodata    @7217                                                        */
SECTION_RODATA u32 const lit_7217 = 0x4A095440;

/* 808456D4-808456D8 0004+00 s=1 e=0 z=0  None .rodata    @7218                                                        */
SECTION_RODATA static u32 const lit_7218 = 0x3F333333;

/* 808456D8-808456DC 0004+00 s=0 e=0 z=0  None .rodata    @7219                                                        */
SECTION_RODATA u32 const lit_7219 = 0x3F4CCCCD;

/* 808456DC-808456E0 0004+00 s=1 e=0 z=0  None .rodata    @7274                                                        */
SECTION_RODATA static u32 const lit_7274 = 0xCE6E6B28;

/* 808456E0-808456E4 0004+00 s=0 e=0 z=0  None .rodata    @7300                                                        */
SECTION_RODATA u32 const lit_7300 = 0xC1700000;

/* 808456E4-808456E8 0004+00 s=0 e=0 z=0  None .rodata    @7362                                                        */
SECTION_RODATA u32 const lit_7362 = 0x40800000;

/* 808456E8-808456EC 0004+00 s=0 e=0 z=0  None .rodata    @7363                                                        */
SECTION_RODATA u32 const lit_7363 = 0x3E99999A;

/* 808456EC-808456F0 0004+00 s=0 e=0 z=0  None .rodata    @7364                                                        */
SECTION_RODATA u32 const lit_7364 = 0x430C0000;

/* 808456F0-808456FC 000C+00 s=0 e=0 z=0  None .rodata    @7373                                                        */
SECTION_RODATA u8 const lit_7373[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 808456FC-80845704 0006+02 s=0 e=0 z=0  None .rodata    @7374                                                        */
SECTION_RODATA u8 const lit_7374[6 + 2 /* padding */] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 80845704-80845708 0004+00 s=0 e=0 z=0  None .rodata    @7439                                                        */
SECTION_RODATA u32 const lit_7439 = 0x44960000;

/* 80845708-8084570C 0004+00 s=0 e=0 z=0  None .rodata    @7440                                                        */
SECTION_RODATA u32 const lit_7440 = 0x442F0000;

/* 8084570C-80845710 0004+00 s=0 e=0 z=0  None .rodata    @7691                                                        */
SECTION_RODATA u32 const lit_7691 = 0x40000000;

/* 80845710-80845714 0004+00 s=0 e=0 z=0  None .rodata    @7692                                                        */
SECTION_RODATA u32 const lit_7692 = 0x437F0000;

/* 80845714-80845718 0004+00 s=0 e=0 z=0  None .rodata    @7693                                                        */
SECTION_RODATA u32 const lit_7693 = 0x3FC00000;

/* 80845718-8084571C 0004+00 s=0 e=0 z=0  None .rodata    @7694                                                        */
SECTION_RODATA u32 const lit_7694 = 0x3FE66666;

/* 8084571C-80845720 0004+00 s=0 e=0 z=0  None .rodata    @7695                                                        */
SECTION_RODATA u32 const lit_7695 = 0xBF400000;

/* 80845720-80845724 0004+00 s=0 e=0 z=0  None .rodata    @7696                                                        */
SECTION_RODATA u32 const lit_7696 = 0x3F400000;

/* 80845724-80845730 000C+00 s=0 e=0 z=0  None .rodata    localHeadPos$7706                                            */
SECTION_RODATA u8 const data_80845724[12] = {
	0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80845730-80845734 0004+00 s=0 e=0 z=0  None .rodata    @7747                                                        */
SECTION_RODATA u32 const lit_7747 = 0x432A0000;

/* 80845734-80845738 0004+00 s=0 e=0 z=0  None .rodata    @7748                                                        */
SECTION_RODATA u32 const lit_7748 = 0x42A60000;

/* 80845738-8084573C 0004+00 s=1 e=0 z=0  None .rodata    @7749                                                        */
SECTION_RODATA static u32 const lit_7749 = 0x42A00000;

/* 8084573C-80845740 0004+00 s=1 e=0 z=0  None .rodata    @7848                                                        */
SECTION_RODATA static u32 const lit_7848 = 0x48742400;

/* 80845740-80845744 0004+00 s=0 e=0 z=0  None .rodata    @8279                                                        */
SECTION_RODATA u32 const lit_8279 = 0x3BA3D70A;

/* 80845744-80845748 0004+00 s=0 e=0 z=0  None .rodata    @8509                                                        */
SECTION_RODATA u32 const lit_8509 = 0x42F00000;

/* 80845748-8084574C 0004+00 s=0 e=0 z=0  None .rodata    @8510                                                        */
SECTION_RODATA u32 const lit_8510 = 0x447A0000;

/* 8084574C-80845750 0004+00 s=0 e=0 z=0  None .rodata    @8511                                                        */
SECTION_RODATA u32 const lit_8511 = 0x41F00000;

/* 80845750-80845754 0004+00 s=0 e=0 z=0  None .rodata    @8623                                                        */
SECTION_RODATA u32 const lit_8623 = 0x427C0000;

/* 80845754-80845758 0004+00 s=0 e=0 z=0  None .rodata    @8624                                                        */
SECTION_RODATA u32 const lit_8624 = 0x41880000;

/* 80845758-8084575C 0004+00 s=0 e=0 z=0  None .rodata    @8625                                                        */
SECTION_RODATA u32 const lit_8625 = 0x41300000;

/* 8084575C-80845760 0004+00 s=0 e=0 z=0  None .rodata    @8626                                                        */
SECTION_RODATA u32 const lit_8626 = 0xC1300000;

/* 80845760-80845764 0004+00 s=0 e=0 z=0  None .rodata    @8627                                                        */
SECTION_RODATA u32 const lit_8627 = 0xC20C0000;

/* 80845764-80845768 0004+00 s=0 e=0 z=0  None .rodata    @8628                                                        */
SECTION_RODATA u32 const lit_8628 = 0x46000000;

/* 80845768-8084576C 0004+00 s=0 e=0 z=0  None .rodata    @8629                                                        */
SECTION_RODATA u32 const lit_8629 = 0x3A03126F;

/* 8084576C-80845770 0004+00 s=0 e=0 z=0  None .rodata    @8630                                                        */
SECTION_RODATA u32 const lit_8630 = 0x41A00000;

/* 80845770-8084577C 000C+00 s=1 e=0 z=0  None .rodata    zeldaLocalLeft$8682                                          */
SECTION_RODATA static u8 const zeldaLocalLeft[12] = {
	0x40, 0x40, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00,
};

/* 8084577C-80845788 000C+00 s=1 e=0 z=0  None .rodata    zeldaLocalRight$8683                                         */
SECTION_RODATA static u8 const zeldaLocalRight[12] = {
	0x40, 0x40, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 80845788-8084578C 0004+00 s=0 e=0 z=0  None .rodata    @8805                                                        */
SECTION_RODATA u32 const lit_8805 = 0x41E80000;

/* 8084578C-80845790 0004+00 s=0 e=0 z=0  None .rodata    @8806                                                        */
SECTION_RODATA u32 const lit_8806 = 0xC0000000;

/* 80845790-80845794 0004+00 s=0 e=0 z=0  None .rodata    @8904                                                        */
SECTION_RODATA u32 const lit_8904 = 0x435C0000;

/* 80845794-80845798 0004+00 s=0 e=0 z=0  None .rodata    @8905                                                        */
SECTION_RODATA u32 const lit_8905 = 0xC32A0000;

/* 80845798-8084579C 0004+00 s=1 e=0 z=0  None .rodata    @8963                                                        */
SECTION_RODATA static u32 const lit_8963 = 0x3F666666;

/* 8084579C-808457A0 0004+00 s=0 e=0 z=0  None .rodata    @9264                                                        */
SECTION_RODATA u32 const lit_9264 = 0x4A742400;

/* 808457A0-808457A4 0004+00 s=0 e=0 z=0  None .rodata    @9265                                                        */
SECTION_RODATA u32 const lit_9265 = 0x491C4000;

/* 808457A4-808457A8 0004+00 s=0 e=0 z=0  None .rodata    @9537                                                        */
SECTION_RODATA u32 const lit_9537 = 0x41700000;

/* 808457A8-808457AC 0004+00 s=0 e=0 z=0  None .rodata    @9538                                                        */
SECTION_RODATA u32 const lit_9538 = 0x3C23D70A;

/* 808457AC-808457B0 0004+00 s=0 e=0 z=0  None .rodata    @9539                                                        */
SECTION_RODATA u32 const lit_9539 = 0x3ECCCCCD;

/* 808457B0-808457B4 0004+00 s=0 e=0 z=0  None .rodata    @9540                                                        */
SECTION_RODATA u32 const lit_9540 = 0x3F19999A;

/* 808457B4-808457B8 0004+00 s=0 e=0 z=0  None .rodata    @9541                                                        */
SECTION_RODATA u32 const lit_9541 = 0x40C00000;

/* 808457B8-808457BC 0004+00 s=0 e=0 z=0  None .rodata    @9676                                                        */
SECTION_RODATA u32 const lit_9676 = 0x43AF0000;

/* 808457BC-808457C0 0004+00 s=0 e=0 z=0  None .rodata    @9716                                                        */
SECTION_RODATA u32 const lit_9716 = 0x402CCCCD;

/* 808457C0-808457F0 0030+00 s=0 e=0 z=0  None .rodata    stopFootEffectFrame$9720                                     */
SECTION_RODATA u8 const data_808457C0[48] = {
	0x41, 0x00, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00,
	0x41, 0x60, 0x00, 0x00, 0x41, 0xD8, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
	0x41, 0x90, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x41, 0xB8, 0x00, 0x00,
};

/* 808457F0-80845820 0030+00 s=0 e=0 z=0  None .rodata    stopStandFootEffectFrame$9721                                */
SECTION_RODATA u8 const data_808457F0[48] = {
	0x40, 0xE0, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00,
	0x41, 0x98, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
	0x41, 0x90, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00,
};

/* 80845820-80845824 0004+00 s=0 e=0 z=0  None .rodata    @9792                                                        */
SECTION_RODATA u32 const lit_9792 = 0x40600000;

/* 80845824-80845828 0004+00 s=0 e=0 z=0  None .rodata    @9793                                                        */
SECTION_RODATA u32 const lit_9793 = 0x426C0000;

/* 80845828-8084582C 0004+00 s=0 e=0 z=0  None .rodata    @9794                                                        */
SECTION_RODATA u32 const lit_9794 = 0x42000000;

/* 8084582C-80845830 0004+00 s=0 e=0 z=0  None .rodata    @9831                                                        */
SECTION_RODATA u32 const lit_9831 = 0x42500000;

/* 80845830-80845834 0004+00 s=0 e=0 z=0  None .rodata    @9832                                                        */
SECTION_RODATA u32 const lit_9832 = 0x3DC90FDB;

/* 80845834-80845838 0004+00 s=0 e=0 z=0  None .rodata    @9833                                                        */
SECTION_RODATA u32 const lit_9833 = 0x42540000;

/* 80845838-8084583C 0004+00 s=0 e=0 z=0  None .rodata    @9982                                                        */
SECTION_RODATA u32 const lit_9982 = 0x44FA0000;

/* 8084583C-80845840 0004+00 s=0 e=0 z=0  None .rodata    @10106                                                       */
SECTION_RODATA u32 const lit_10106 = 0x40E00000;

/* 80845840-8084584C 000C+00 s=0 e=0 z=0  None .rodata    @10308                                                       */
SECTION_RODATA u8 const lit_10308[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8084584C-80845850 0004+00 s=0 e=0 z=0  None .rodata    @10523                                                       */
SECTION_RODATA u32 const lit_10523 = 0x38D1B717;

/* 80845850-80845854 0004+00 s=0 e=0 z=0  None .rodata    @10703                                                       */
SECTION_RODATA u32 const lit_10703 = 0x41BC0000;

/* 80845854-80845858 0004+00 s=0 e=0 z=0  None .rodata    @10704                                                       */
SECTION_RODATA u32 const lit_10704 = 0xC1A00000;

/* 80845858-8084585C 0004+00 s=0 e=0 z=0  None .rodata    @10705                                                       */
SECTION_RODATA u32 const lit_10705 = 0x41CC0000;

/* 8084585C-808458D1 0075+00 s=4 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_8084585C = "F_SP108";
SECTION_DEAD char const* const stringBase_80845864 = "F_SP104";
SECTION_DEAD char const* const stringBase_8084586C = "F_SP109";
SECTION_DEAD char const* const stringBase_80845874 = "";
SECTION_DEAD char const* const stringBase_80845875 = "F_SP00";
SECTION_DEAD char const* const stringBase_8084587C = "F_SP103";
SECTION_DEAD char const* const stringBase_80845884 = "F_SP113";
SECTION_DEAD char const* const stringBase_8084588C = "F_SP102";
SECTION_DEAD char const* const stringBase_80845894 = "D_MN09B";
SECTION_DEAD char const* const stringBase_8084589C = "F_SP123";
SECTION_DEAD char const* const stringBase_808458A4 = "Horse";
SECTION_DEAD char const* const stringBase_808458AA = "pos";
SECTION_DEAD char const* const stringBase_808458AE = "angle";
SECTION_DEAD char const* const stringBase_808458B4 = "prm0";
SECTION_DEAD char const* const stringBase_808458B9 = "ride";
SECTION_DEAD char const* const stringBase_808458BE = "disXZ";
SECTION_DEAD char const* const stringBase_808458C4 = "disY";
SECTION_DEAD char const* const stringBase_808458C9 = "F_SP110";
#pragma pop

/* 8083940C-80839498 008C+00 s=1 e=0 z=0  None .text      checkEnding__9daHorse_cFv                                    */
//	80839420: 8084585C (stringBase0)
//	80839424: 8084585C (stringBase0)
//	80839428: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80839438: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	80839444: 8084585C (stringBase0)
//	80839448: 8084585C (stringBase0)
//	80839450: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80839460: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	8083946C: 80450D64 (struct_80450D64)
//	80839470: 80450D64 (struct_80450D64)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::checkEnding() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkEnding__9daHorse_cFv.s"
}
#pragma pop


/* 80839498-80839CFC 0864+00 s=1 e=0 z=0  None .text      create__9daHorse_cFv                                         */
//	808394A8: 803621C8 (_savegpr_24)
//	808394B0: 808458D4 (cNullVec__6Z2Calc)
//	808394B4: 808458D4 (cNullVec__6Z2Calc)
//	808394B8: 808454AC (lit_3894)
//	808394BC: 808454AC (lit_3894)
//	808394D4: 80844CB0 (__ct__9daHorse_cFv)
//	808394E4: 8083940C (checkEnding__9daHorse_cFv)
//	80839508: 804061C0 (g_dComIfG_gameInfo)
//	8083950C: 804061C0 (g_dComIfG_gameInfo)
//	8083951C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80839530: 800349BC (isEventBit__11dSv_event_cCFUs)
//	8083953C: 8084585C (stringBase0)
//	80839540: 8084585C (stringBase0)
//	80839548: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8083955C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80839568: 804061C0 (g_dComIfG_gameInfo)
//	8083956C: 804061C0 (g_dComIfG_gameInfo)
//	80839578: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80839594: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	808395A4: 804061C0 (g_dComIfG_gameInfo)
//	808395A8: 804061C0 (g_dComIfG_gameInfo)
//	808396C8: 804061C0 (g_dComIfG_gameInfo)
//	808396CC: 804061C0 (g_dComIfG_gameInfo)
//	808396D4: 8084585C (stringBase0)
//	808396D8: 8084585C (stringBase0)
//	808396E0: 80368994 (strcmp)
//	808396EC: 804061C0 (g_dComIfG_gameInfo)
//	808396F0: 804061C0 (g_dComIfG_gameInfo)
//	80839700: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80839714: 800349BC (isEventBit__11dSv_event_cCFUs)
//	80839724: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	808397AC: 808393EC (daHorse_createHeap__FP10fopAc_ac_c)
//	808397B0: 808393EC (daHorse_createHeap__FP10fopAc_ac_c)
//	808397B8: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	808397CC: 8084585C (stringBase0)
//	808397D0: 8084585C (stringBase0)
//	808397D8: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	808397E4: 8084585C (stringBase0)
//	808397E8: 8084585C (stringBase0)
//	808397F0: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	808397FC: 8084585C (stringBase0)
//	80839800: 8084585C (stringBase0)
//	80839808: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80839814: 8084585C (stringBase0)
//	80839818: 8084585C (stringBase0)
//	8083981C: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80839828: 8084585C (stringBase0)
//	8083982C: 8084585C (stringBase0)
//	80839834: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	808398B4: 800517EC (dPath_GetRoomPath__Fii)
//	808398CC: 80051898 (dPath_GetNextRoomPath__FPC5dPathi)
//	8083990C: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80839924: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80839934: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80839944: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80839958: 80076288 (Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir)
//	808399AC: 802C520C (init__14Z2CreatureRideFP3VecP3VecUcUc)
//	808399B4: 80839EBC (resetBasAnime__9daHorse_cFv)
//	808399E4: 80050C9C (init__7dPaPo_cFP9dBgS_Acchff)
//	80839A14: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80839A34: 8026F200 (SetR__8cM3dGCylFf)
//	80839A40: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80839A50: 808407B0 (setServiceWaitTimer__9daHorse_cFv)
//	80839A54: 80838A68 (daHorse_coHitCallbackAll__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80839A58: 80838A68 (daHorse_coHitCallbackAll__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80839A60: 80838A44 (daHorse_coHitCallbackCowHit__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80839A64: 80838A44 (daHorse_coHitCallbackCowHit__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80839A78: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80839A84: 80838A20 (daHorse_coHitCallbackBoarJump__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80839A88: 80838A20 (daHorse_coHitCallbackBoarJump__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	80839A98: 8026491C (SetVsGrp__10cCcD_ObjCoFUl)
//	80839AC8: 8026F200 (SetR__8cM3dGCylFf)
//	80839AD4: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80839B0C: 8026F1F8 (SetH__8cM3dGCylFf)
//	80839B18: 8026F200 (SetR__8cM3dGCylFf)
//	80839B38: 80841708 (procWaitInit__9daHorse_cFv)
//	80839B48: 80838F3C (daHorse_modelCallBack__FP8J3DJointi)
//	80839B4C: 80838F3C (daHorse_modelCallBack__FP8J3DJointi)
//	80839B7C: 8083D9D8 (setMatrix__9daHorse_cFv)
//	80839B98: 8083D918 (setBodyPart__9daHorse_cFv)
//	80839BB8: 804061C0 (g_dComIfG_gameInfo)
//	80839BBC: 804061C0 (g_dComIfG_gameInfo)
//	80839BC4: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80839BD0: 8083D774 (setRoomInfo__9daHorse_cFi)
//	80839BE4: 80430CF4 (Zero__4cXyz)
//	80839BE8: 80430CF4 (Zero__4cXyz)
//	80839C6C: 80362084 (__ptmf_scall)
//	80839C84: 8084585C (stringBase0)
//	80839C88: 8084585C (stringBase0)
//	80839C90: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80839C9C: 8084585C (stringBase0)
//	80839CA0: 8084585C (stringBase0)
//	80839CA8: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80839CB4: 8084585C (stringBase0)
//	80839CB8: 8084585C (stringBase0)
//	80839CC0: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	80839CDC: 800198C4 (fopAcM_setStageLayer__FPv)
//	80839CE8: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::create() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/create__9daHorse_cFv.s"
}
#pragma pop


/* 80839CFC-80839D1C 0020+00 s=1 e=0 z=0  None .text      daHorse_Create__FP10fopAc_ac_c                               */
//	80839D08: 80839498 (create__9daHorse_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daHorse_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80839D1C-80839EBC 01A0+00 s=2 e=0 z=0  None .text      setBasAnime__9daHorse_cFi                                    */
//	80839D50: 80839EBC (resetBasAnime__9daHorse_cFv)
//	80839D7C: 808455FC (lit_4306)
//	80839D80: 808455FC (lit_4306)
//	80839DD0: 8084562C (lit_4315)
//	80839DD4: 8084562C (lit_4315)
//	80839E58: 808455FC (lit_4306)
//	80839E5C: 808455FC (lit_4306)
//	80839E70: 808455FC (lit_4306)
//	80839E74: 808455FC (lit_4306)
//	80839E88: 8084562C (lit_4315)
//	80839E8C: 8084562C (lit_4315)
//	80839EA8: 802C0628 (initAnime__10Z2CreatureFPvbff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daHorse_c::setBasAnime(int param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setBasAnime__9daHorse_cFi.s"
}
#pragma pop


/* 80839EBC-80839ED4 0018+00 s=2 e=0 z=0  None .text      resetBasAnime__9daHorse_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::resetBasAnime() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/resetBasAnime__9daHorse_cFv.s"
}
#pragma pop


/* 80839ED4-8083A20C 0338+00 s=1 e=0 z=0  None .text      setDoubleAnime__9daHorse_cFfffUsUsf                          */
//	80839F1C: 803621D0 (_savegpr_26)
//	80839F3C: 808454AC (lit_3894)
//	80839F40: 808454AC (lit_3894)
//	80839FD8: 80840B88 (setNeckAnime__9daHorse_cFUsffs)
//	8083A000: 80840B88 (setNeckAnime__9daHorse_cFUsffs)
//	8083A054: 804061C0 (g_dComIfG_gameInfo)
//	8083A058: 804061C0 (g_dComIfG_gameInfo)
//	8083A06C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8083A084: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8083A110: 8015E544 (setFrameCtrl__16daPy_frameCtrl_cFUcssff)
//	8083A148: 8015E544 (setFrameCtrl__16daPy_frameCtrl_cFUcssff)
//	8083A17C: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	8083A1A4: 80839D1C (setBasAnime__9daHorse_cFi)
//	8083A1B4: 80839D1C (setBasAnime__9daHorse_cFi)
//	8083A1F8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
//  f32 False
//  u16 False
//  u16 False
//  f32 False
asm void daHorse_c::setDoubleAnime(f32 param_0, f32 param_1, f32 param_2, u16 param_3, u16 param_4, f32 param_5) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setDoubleAnime__9daHorse_cFfffUsUsf.s"
}
#pragma pop


/* 8083A20C-8083A3C4 01B8+00 s=10 e=0 z=0  None .text      setSingleAnime__9daHorse_cFUsffsfi                           */
//	8083A23C: 803621D4 (_savegpr_27)
//	8083A258: 808454AC (lit_3894)
//	8083A25C: 808454AC (lit_3894)
//	8083A268: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	8083A26C: 80406194 (mDemoArcName__20dStage_roomControl_c)
//	8083A270: 804061C0 (g_dComIfG_gameInfo)
//	8083A274: 804061C0 (g_dComIfG_gameInfo)
//	8083A284: 8003C400 (getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci)
//	8083A2A0: 804061C0 (g_dComIfG_gameInfo)
//	8083A2A4: 804061C0 (g_dComIfG_gameInfo)
//	8083A2B4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8083A34C: 8015E544 (setFrameCtrl__16daPy_frameCtrl_cFUcssff)
//	8083A374: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	8083A384: 80839D1C (setBasAnime__9daHorse_cFi)
//	8083A3B0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
//  f32 False
//  f32 False
//  s16 False
//  f32 False
//  int False
asm void daHorse_c::setSingleAnime(u16 param_0, f32 param_1, f32 param_2, s16 param_3, f32 param_4, int param_5) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setSingleAnime__9daHorse_cFUsffsfi.s"
}
#pragma pop


/* 8083A3C4-8083A5AC 01E8+00 s=1 e=0 z=0  None .text      animePlay__9daHorse_cFv                                      */
//	8083A3D4: 803621D4 (_savegpr_27)
//	8083A3DC: 808454AC (lit_3894)
//	8083A3E0: 808454AC (lit_3894)
//	8083A3F4: 80840CA4 (resetNeckAnime__9daHorse_cFv)
//	8083A3F8: 804061C0 (g_dComIfG_gameInfo)
//	8083A3FC: 804061C0 (g_dComIfG_gameInfo)
//	8083A458: 8015E510 (updateFrame__16daPy_frameCtrl_cFv)
//	8083A4CC: 8015E510 (updateFrame__16daPy_frameCtrl_cFv)
//	8083A4EC: 8015E510 (updateFrame__16daPy_frameCtrl_cFv)
//	8083A504: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8083A578: 8026786C (cM_rnd__Fv)
//	8083A598: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::animePlay() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/animePlay__9daHorse_cFv.s"
}
#pragma pop


/* 8083A5AC-8083A890 02E4+00 s=1 e=0 z=0  None .text      checkDemoAction__9daHorse_cFv                                */
//	8083A5D0: 8083AC7C (setStickCallMove__9daHorse_cFv)
//	8083A5F0: 804061C0 (g_dComIfG_gameInfo)
//	8083A5F4: 804061C0 (g_dComIfG_gameInfo)
//	8083A600: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8083A630: 80841F04 (procMoveInit__9daHorse_cFv)
//	8083A638: 804061C0 (g_dComIfG_gameInfo)
//	8083A63C: 804061C0 (g_dComIfG_gameInfo)
//	8083A69C: 808439C8 (procToolDemoInit__9daHorse_cFv)
//	8083A6DC: 80843008 (procJumpInit__9daHorse_cFi)
//	8083A724: 808423DC (procStopInit__9daHorse_cFv)
//	8083A73C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8083A77C: 808423DC (procStopInit__9daHorse_cFv)
//	8083A7BC: 80842878 (procTurnInit__9daHorse_cFi)
//	8083A7D0: 80841708 (procWaitInit__9daHorse_cFv)
//	8083A7E0: 808455FC (lit_4306)
//	8083A7E4: 808455FC (lit_4306)
//	8083A7F0: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
//	8083A84C: 80845678 (lit_5722)
//	8083A850: 80845678 (lit_5722)
//	8083A860: 80841708 (procWaitInit__9daHorse_cFv)
//	8083A86C: 80841F04 (procMoveInit__9daHorse_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::checkDemoAction() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkDemoAction__9daHorse_cFv.s"
}
#pragma pop


/* 8083A890-8083AC7C 03EC+00 s=1 e=0 z=0  None .text      setStickRodeoMove__9daHorse_cFv                              */
//	8083A8A8: 808454AC (lit_3894)
//	8083A8AC: 808454AC (lit_3894)
//	8083A914: 80347138 (PSVECSquareMag)
//	8083A984: 80450AE0 (__float_nan)
//	8083A988: 80450AE0 (__float_nan)
//	8083A9F4: 80450AE0 (__float_nan)
//	8083A9F8: 80450AE0 (__float_nan)
//	8083AA88: 80267954 (cM_rndF__Ff)
//	8083AB68: 80267128 (atan2sX_Z__4cXyzCFv)
//	8083AB84: 80270E24 (cLib_distanceAngleS__Fss)
//	8083AC04: 80267128 (atan2sX_Z__4cXyzCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setStickRodeoMove() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setStickRodeoMove__9daHorse_cFv.s"
}
#pragma pop


/* 8083AC7C-8083ACEC 0070+00 s=2 e=0 z=0  None .text      setStickCallMove__9daHorse_cFv                               */
//	8083AC90: 808455F4 (lit_4304)
//	8083AC94: 808455F4 (lit_4304)
//	8083ACA8: 804061C0 (g_dComIfG_gameInfo)
//	8083ACAC: 804061C0 (g_dComIfG_gameInfo)
//	8083ACB8: 8083ACEC (setDemoMoveData__9daHorse_cFPUlPC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setStickCallMove() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setStickCallMove__9daHorse_cFv.s"
}
#pragma pop


/* 8083ACEC-8083AEC0 01D4+00 s=2 e=0 z=0  None .text      setDemoMoveData__9daHorse_cFPUlPC4cXyz                       */
//	8083ACFC: 803621DC (_savegpr_29)
//	8083AD08: 808454AC (lit_3894)
//	8083AD0C: 808454AC (lit_3894)
//	8083AD1C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8083AD64: 80267128 (atan2sX_Z__4cXyzCFv)
//	8083AD7C: 803650D0 (abs)
//	8083AD94: 804061C0 (g_dComIfG_gameInfo)
//	8083AD98: 804061C0 (g_dComIfG_gameInfo)
//	8083ADA0: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8083ADC4: 80347138 (PSVECSquareMag)
//	8083AEA0: 80267128 (atan2sX_Z__4cXyzCFv)
//	8083AEAC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
asm void daHorse_c::setDemoMoveData(u32* param_0, cXyz const* param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setDemoMoveData__9daHorse_cFPUlPC4cXyz.s"
}
#pragma pop


/* 8083AEC0-8083B578 06B8+00 s=1 e=0 z=0  None .text      setDemoData__9daHorse_cFv                                    */
//	8083AED0: 803621D0 (_savegpr_26)
//	8083AED8: 804061C0 (g_dComIfG_gameInfo)
//	8083AEDC: 804061C0 (g_dComIfG_gameInfo)
//	8083AF44: 808455FC (lit_4306)
//	8083AF48: 808455FC (lit_4306)
//	8083AFA0: 80845678 (lit_5722)
//	8083AFA4: 80845678 (lit_5722)
//	8083AFB4: 80841708 (procWaitInit__9daHorse_cFv)
//	8083AFC0: 80841F04 (procMoveInit__9daHorse_cFv)
//	8083AFD0: 80450E20 (m_object__7dDemo_c)
//	8083AFD4: 80450E20 (m_object__7dDemo_c)
//	8083AFE0: 80039088 (getActor__14dDemo_object_cFUc)
//	8083B000: 8084585C (stringBase0)
//	8083B004: 8084585C (stringBase0)
//	8083B014: 80047B1C (getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci)
//	8083B04C: 80841708 (procWaitInit__9daHorse_cFv)
//	8083B180: 80038338 (getDemoIDData__13dDemo_actor_cFPiPiPiPUsPUc)
//	8083B1B4: 80047F5C (getMyNowCutName__16dEvent_manager_cFi)
//	8083B200: 8084585C (stringBase0)
//	8083B204: 8084585C (stringBase0)
//	8083B210: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	8083B224: 800483E0 (getGoal__16dEvent_manager_cFv)
//	8083B234: 8084585C (stringBase0)
//	8083B238: 8084585C (stringBase0)
//	8083B244: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	8083B268: 8084585C (stringBase0)
//	8083B26C: 8084585C (stringBase0)
//	8083B278: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	8083B288: 8084585C (stringBase0)
//	8083B28C: 8084585C (stringBase0)
//	8083B298: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	8083B300: 808455FC (lit_4306)
//	8083B304: 808455FC (lit_4306)
//	8083B310: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	8083B324: 80362084 (__ptmf_scall)
//	8083B360: 8083ACEC (setDemoMoveData__9daHorse_cFPUlPC4cXyz)
//	8083B384: 8084585C (stringBase0)
//	8083B388: 8084585C (stringBase0)
//	8083B394: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	8083B3B8: 8084585C (stringBase0)
//	8083B3BC: 8084585C (stringBase0)
//	8083B3C8: 800480EC (getMySubstanceP__16dEvent_manager_cFiPCci)
//	8083B3F0: 808455FC (lit_4306)
//	8083B3F4: 808455FC (lit_4306)
//	8083B448: 808455FC (lit_4306)
//	8083B44C: 808455FC (lit_4306)
//	8083B48C: 8083ACEC (setDemoMoveData__9daHorse_cFPUlPC4cXyz)
//	8083B49C: 808455FC (lit_4306)
//	8083B4A0: 808455FC (lit_4306)
//	8083B4AC: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	8083B4BC: 808455FC (lit_4306)
//	8083B4C0: 808455FC (lit_4306)
//	8083B51C: 808455FC (lit_4306)
//	8083B520: 808455FC (lit_4306)
//	8083B55C: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8083B564: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setDemoData() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setDemoData__9daHorse_cFv.s"
}
#pragma pop


/* 8083B578-8083B600 0088+00 s=4 e=0 z=0  None .text      acceptPlayerRide__9daHorse_cFv                               */
//	8083B59C: 804061C0 (g_dComIfG_gameInfo)
//	8083B5A0: 804061C0 (g_dComIfG_gameInfo)
//	8083B5B8: 8001A79C (fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::acceptPlayerRide() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/acceptPlayerRide__9daHorse_cFv.s"
}
#pragma pop


/* 8083B600-8083B828 0228+00 s=1 e=0 z=0  None .text      setStickData__9daHorse_cFv                                   */
//	8083B618: 808454AC (lit_3894)
//	8083B61C: 808454AC (lit_3894)
//	8083B640: 804061C0 (g_dComIfG_gameInfo)
//	8083B644: 804061C0 (g_dComIfG_gameInfo)
//	8083B6EC: 8083A890 (setStickRodeoMove__9daHorse_cFv)
//	8083B700: 8083AC7C (setStickCallMove__9daHorse_cFv)
//	8083B72C: 8083AC7C (setStickCallMove__9daHorse_cFv)
//	8083B750: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8083B754: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8083B768: 802AF49C (subBgmStart__8Z2SeqMgrFUl)
//	8083B770: 8083A890 (setStickRodeoMove__9daHorse_cFv)
//	8083B7A0: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	8083B7A4: 803DD2E8 (m_cpadInfo__8mDoCPd_c)
//	8083B7C8: 80181614 (dCam_getControledAngleY__FP12camera_class)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setStickData() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setStickData__9daHorse_cFv.s"
}
#pragma pop


/* 8083B828-8083B82C 0004+00 s=1 e=0 z=0  None .text      setTurnStartVibration__9daHorse_cFv                          */
// True False
//  void False
void daHorse_c::setTurnStartVibration() {
	/* empty function */
}


/* 8083B82C-8083B830 0004+00 s=1 e=0 z=0  None .text      setTurnVibration__9daHorse_cFv                               */
// True False
//  void False
void daHorse_c::setTurnVibration() {
	/* empty function */
}


/* 8083B830-8083BF48 0718+00 s=6 e=0 z=0  None .text      setMoveAnime__9daHorse_cFf                                   */
//	8083B860: 803621CC (_savegpr_25)
//	8083B86C: 808454AC (lit_3894)
//	8083B870: 808454AC (lit_3894)
//	8083B8B0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8083B8CC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8083B8E0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8083B900: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8083B914: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8083B938: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8083B95C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8083B9FC: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8083BA38: 80839ED4 (setDoubleAnime__9daHorse_cFfffUsUsf)
//	8083BA74: 80839ED4 (setDoubleAnime__9daHorse_cFfffUsUsf)
//	8083BA90: 80270E24 (cLib_distanceAngleS__Fss)
//	8083BA9C: 8083D748 (checkWaitTurn__9daHorse_cCFv)
//	8083BAD0: 80840CA4 (resetNeckAnime__9daHorse_cFv)
//	8083BAF8: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8083BB10: 8083B828 (setTurnStartVibration__9daHorse_cFv)
//	8083BB28: 803650D0 (abs)
//	8083BB84: 8083B82C (setTurnVibration__9daHorse_cFv)
//	8083BBB0: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	8083BBC8: 8083B828 (setTurnStartVibration__9daHorse_cFv)
//	8083BBE0: 803650D0 (abs)
//	8083BC3C: 8083B82C (setTurnVibration__9daHorse_cFv)
//	8083BC70: 80839ED4 (setDoubleAnime__9daHorse_cFfffUsUsf)
//	8083BCD0: 80839ED4 (setDoubleAnime__9daHorse_cFfffUsUsf)
//	8083BD00: 80839ED4 (setDoubleAnime__9daHorse_cFfffUsUsf)
//	8083BD3C: 80839ED4 (setDoubleAnime__9daHorse_cFfffUsUsf)
//	8083BD60: 80839ED4 (setDoubleAnime__9daHorse_cFfffUsUsf)
//	8083BDB4: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	8083BE2C: 80839ED4 (setDoubleAnime__9daHorse_cFfffUsUsf)
//	8083BEE4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8083BF34: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
asm void daHorse_c::setMoveAnime(f32 param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setMoveAnime__9daHorse_cFf.s"
}
#pragma pop


/* 8083BF48-8083CA80 0B38+00 s=6 e=0 z=0  None .text      checkHorseNoMove__9daHorse_cFi                               */
//	8083BF90: 803621B4 (_savegpr_19)
//	8083BF9C: 808454AC (lit_3894)
//	8083BFA0: 808454AC (lit_3894)
//	8083BFB8: 808415B4 (checkPlayerHeavy__9daHorse_cFv)
//	8083BFD4: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	8083BFF8: 804061C0 (g_dComIfG_gameInfo)
//	8083BFFC: 804061C0 (g_dComIfG_gameInfo)
//	8083C008: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	8083C01C: 8001DAE4 (fopAcM_getPolygonAngle__FRC13cBgS_PolyInfos)
//	8083C07C: 803650D0 (abs)
//	8083C09C: 803650D0 (abs)
//	8083C10C: 80439A20 (sincosTable___5JMath)
//	8083C110: 80439A20 (sincosTable___5JMath)
//	8083C144: 80439A20 (sincosTable___5JMath)
//	8083C148: 80439A20 (sincosTable___5JMath)
//	8083C178: 804061C0 (g_dComIfG_gameInfo)
//	8083C17C: 804061C0 (g_dComIfG_gameInfo)
//	8083C1AC: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	8083C20C: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8083C21C: 804061C0 (g_dComIfG_gameInfo)
//	8083C220: 804061C0 (g_dComIfG_gameInfo)
//	8083C230: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	8083C248: 80845BA0 (__vt__8cM3dGPla)
//	8083C24C: 80845BA0 (__vt__8cM3dGPla)
//	8083C260: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8083C280: 80268210 (cBgW_CheckBWall__Ff)
//	8083C298: 80267128 (atan2sX_Z__4cXyzCFv)
//	8083C2A0: 80270E24 (cLib_distanceAngleS__Fss)
//	8083C2B8: 80267128 (atan2sX_Z__4cXyzCFv)
//	8083C2C0: 80270E24 (cLib_distanceAngleS__Fss)
//	8083C2DC: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8083C2FC: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	8083C310: 8034739C (PSVECSquareDistance)
//	8083C320: 80845BA0 (__vt__8cM3dGPla)
//	8083C324: 80845BA0 (__vt__8cM3dGPla)
//	8083C334: 80845BA0 (__vt__8cM3dGPla)
//	8083C338: 80845BA0 (__vt__8cM3dGPla)
//	8083C350: 8034739C (PSVECSquareDistance)
//	8083C3C0: 80450AE0 (__float_nan)
//	8083C3C4: 80450AE0 (__float_nan)
//	8083C430: 80450AE0 (__float_nan)
//	8083C434: 80450AE0 (__float_nan)
//	8083C444: 80845BA0 (__vt__8cM3dGPla)
//	8083C448: 80845BA0 (__vt__8cM3dGPla)
//	8083C45C: 80845BA0 (__vt__8cM3dGPla)
//	8083C460: 80845BA0 (__vt__8cM3dGPla)
//	8083C4BC: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	8083C4C0: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	8083C4CC: 80450DF8 (m_top__12daTagHstop_c)
//	8083C4D0: 80450DF8 (m_top__12daTagHstop_c)
//	8083C500: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	8083C50C: 80845BA0 (__vt__8cM3dGPla)
//	8083C510: 80845BA0 (__vt__8cM3dGPla)
//	8083C524: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8083C544: 80347138 (PSVECSquareMag)
//	8083C5B4: 80450AE0 (__float_nan)
//	8083C5B8: 80450AE0 (__float_nan)
//	8083C624: 80450AE0 (__float_nan)
//	8083C628: 80450AE0 (__float_nan)
//	8083C630: 80267674 (cM_atan2s__Fff)
//	8083C6A0: 80346D6C (PSMTXMultVec)
//	8083C748: 80845BA0 (__vt__8cM3dGPla)
//	8083C74C: 80845BA0 (__vt__8cM3dGPla)
//	8083C75C: 80845BA0 (__vt__8cM3dGPla)
//	8083C760: 80845BA0 (__vt__8cM3dGPla)
//	8083C790: 80074C6C (GetHorseNoEntry__4dBgSFRC13cBgS_PolyInfo)
//	8083C7B0: 80074B98 (GetExitId__4dBgSFRC13cBgS_PolyInfo)
//	8083C7EC: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	8083C804: 80074CBC (GetSpecialCode__4dBgSFRC13cBgS_PolyInfo)
//	8083C864: 80845BA0 (__vt__8cM3dGPla)
//	8083C868: 80845BA0 (__vt__8cM3dGPla)
//	8083C878: 80845BA0 (__vt__8cM3dGPla)
//	8083C87C: 80845BA0 (__vt__8cM3dGPla)
//	8083C890: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
//	8083C89C: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	8083C8A0: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	8083C8A4: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	8083C8A8: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	8083C8E8: 80845BA0 (__vt__8cM3dGPla)
//	8083C8EC: 80845BA0 (__vt__8cM3dGPla)
//	8083C8FC: 80845BA0 (__vt__8cM3dGPla)
//	8083C900: 80845BA0 (__vt__8cM3dGPla)
//	8083C910: 80845BA0 (__vt__8cM3dGPla)
//	8083C914: 80845BA0 (__vt__8cM3dGPla)
//	8083C948: 8001D900 (fpoAcM_relativePos__FPC10fopAc_ac_cPC4cXyzP4cXyz)
//	8083CA6C: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daHorse_c::checkHorseNoMove(int param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkHorseNoMove__9daHorse_cFi.s"
}
#pragma pop


/* 8083CA80-8083CB38 00B8+00 s=1 e=0 z=0  None .text      checkTurnPlayerState__9daHorse_cFv                           */
//	8083CA90: 803621DC (_savegpr_29)
//	8083CA94: 804061C0 (g_dComIfG_gameInfo)
//	8083CA98: 804061C0 (g_dComIfG_gameInfo)
//	8083CAB8: 800ECDC4 (checkHorseWaitLashAnime__9daAlink_cCFv)
//	8083CADC: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8083CAFC: 808455F4 (lit_4304)
//	8083CB00: 808455F4 (lit_4304)
//	8083CB24: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::checkTurnPlayerState() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkTurnPlayerState__9daHorse_cFv.s"
}
#pragma pop


/* 8083CB38-8083D748 0C10+00 s=2 e=0 z=0  None .text      setSpeedAndAngle__9daHorse_cFv                               */
//	8083CB58: 803621C8 (_savegpr_24)
//	8083CB60: 808454AC (lit_3894)
//	8083CB64: 808454AC (lit_3894)
//	8083CB6C: 8083BF48 (checkHorseNoMove__9daHorse_cFi)
//	8083CBF4: 804061C0 (g_dComIfG_gameInfo)
//	8083CBF8: 804061C0 (g_dComIfG_gameInfo)
//	8083CC04: 800ECF5C (checkHorseSubjectivity__9daAlink_cCFv)
//	8083CC34: 8083BF48 (checkHorseNoMove__9daHorse_cFi)
//	8083CC64: 80270740 (cLib_chaseF__FPfff)
//	8083CC90: 80270740 (cLib_chaseF__FPfff)
//	8083CCA4: 803650D0 (abs)
//	8083CCC4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083CCE0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083CCF8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083CD30: 803650D0 (abs)
//	8083CDE0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083CE00: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083CE34: 800AC558 (checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM)
//	8083CE44: 800ECDC4 (checkHorseWaitLashAnime__9daAlink_cCFv)
//	8083CEF8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083CF18: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083CF74: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083CFBC: 80270740 (cLib_chaseF__FPfff)
//	8083CFD4: 804061C0 (g_dComIfG_gameInfo)
//	8083CFD8: 804061C0 (g_dComIfG_gameInfo)
//	8083CFE8: 80070844 (GetLockonList__12dAttention_cFl)
//	8083CFF8: 800737E4 (LockonTruth__12dAttention_cFv)
//	8083D00C: 80070844 (GetLockonList__12dAttention_cFl)
//	8083D010: 80073864 (getActor__10dAttList_cFv)
//	8083D01C: 8001AA94 (fopAcM_searchActorDistanceXZ2__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8083D034: 80070844 (GetLockonList__12dAttention_cFl)
//	8083D038: 80073864 (getActor__10dAttList_cFv)
//	8083D044: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8083D060: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083D0AC: 80838F80 (daHorse_searchSingleBoar__FP10fopAc_ac_cPv)
//	8083D0B0: 80838F80 (daHorse_searchSingleBoar__FP10fopAc_ac_cPv)
//	8083D0B8: 800197BC (fopAcIt_Executor__FPFPvPv_iPv)
//	8083D0DC: 8001A79C (fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8083D120: 8034739C (PSVECSquareDistance)
//	8083D140: 803650D0 (abs)
//	8083D1A8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083D234: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083D244: 80270B90 (cLib_chaseAngleS__FPsss)
//	8083D248: 80439A20 (sincosTable___5JMath)
//	8083D24C: 80439A20 (sincosTable___5JMath)
//	8083D2D4: 80270740 (cLib_chaseF__FPfff)
//	8083D318: 80270740 (cLib_chaseF__FPfff)
//	8083D34C: 8083BF48 (checkHorseNoMove__9daHorse_cFi)
//	8083D3B8: 80270740 (cLib_chaseF__FPfff)
//	8083D3CC: 80840844 (checkTurnInput__9daHorse_cFv)
//	8083D3E8: 8083CA80 (checkTurnPlayerState__9daHorse_cFv)
//	8083D424: 8083BF48 (checkHorseNoMove__9daHorse_cFi)
//	8083D450: 80270740 (cLib_chaseF__FPfff)
//	8083D470: 80270740 (cLib_chaseF__FPfff)
//	8083D4B0: 80270740 (cLib_chaseF__FPfff)
//	8083D570: 803650D0 (abs)
//	8083D59C: 804061C0 (g_dComIfG_gameInfo)
//	8083D5A0: 804061C0 (g_dComIfG_gameInfo)
//	8083D5B0: 80074660 (ChkPolySafe__4cBgSFRC13cBgS_PolyInfo)
//	8083D5C4: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	8083D610: 80270740 (cLib_chaseF__FPfff)
//	8083D690: 80270740 (cLib_chaseF__FPfff)
//	8083D6CC: 80270740 (cLib_chaseF__FPfff)
//	8083D734: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setSpeedAndAngle() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setSpeedAndAngle__9daHorse_cFv.s"
}
#pragma pop


/* 8083D748-8083D774 002C+00 s=1 e=0 z=0  None .text      checkWaitTurn__9daHorse_cCFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::checkWaitTurn() const {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkWaitTurn__9daHorse_cCFv.s"
}
#pragma pop


/* 8083D774-8083D918 01A4+00 s=2 e=0 z=0  None .text      setRoomInfo__9daHorse_cFi                                    */
//	8083D784: 803621D8 (_savegpr_28)
//	8083D790: 808456DC (lit_7274)
//	8083D794: 808456DC (lit_7274)
//	8083D7CC: 80845654 (lit_5180)
//	8083D7D0: 80845654 (lit_5180)
//	8083D7DC: 804061C0 (g_dComIfG_gameInfo)
//	8083D7E0: 804061C0 (g_dComIfG_gameInfo)
//	8083D7F0: 80075100 (GetRoomId__4dBgSFRC13cBgS_PolyInfo)
//	8083D800: 80074BE8 (GetPolyColor__4dBgSFRC13cBgS_PolyInfo)
//	8083D828: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	8083D840: 801AB4C0 (dKy_pol_sound_get__FPC13cBgS_PolyInfo)
//	8083D878: 8084116C (savePos__9daHorse_cFv)
//	8083D8A4: 8084116C (savePos__9daHorse_cFv)
//	8083D8E0: 80450D64 (struct_80450D64)
//	8083D8E4: 80450D64 (struct_80450D64)
//	8083D8F0: 8002D06C (dComIfGp_getReverb__Fi)
//	8083D904: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daHorse_c::setRoomInfo(int param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setRoomInfo__9daHorse_cFi.s"
}
#pragma pop


/* ############################################################################################## */
/* 80845BB8-80845BBC 0001+03 s=6 e=0 z=0  None .bss       @1109                                                        */
static u8 lit_1109[1 + 3 /* padding */];

/* 8083D918-8083D9D8 00C0+00 s=2 e=0 z=0  None .text      setBodyPart__9daHorse_cFv                                    */
//	8083D930: 80845BB8 (lit_1109)
//	8083D934: 80845BB8 (lit_1109)
//	8083D938: 808454AC (lit_3894)
//	8083D93C: 808454AC (lit_3894)
//	8083D968: 8083836C (__dt__4cXyzFv)
//	8083D96C: 8083836C (__dt__4cXyzFv)
//	8083D974: 80837EB8 (__register_global_object)
//	8083D998: 80346D6C (PSMTXMultVec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setBodyPart() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setBodyPart__9daHorse_cFv.s"
}
#pragma pop


/* 8083D9D8-8083DC58 0280+00 s=2 e=0 z=0  None .text      setMatrix__9daHorse_cFv                                      */
//	8083D9E8: 803621DC (_savegpr_29)
//	8083D9F0: 808454AC (lit_3894)
//	8083D9F4: 808454AC (lit_3894)
//	8083DB28: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083DB48: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083DB64: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083DB6C: 8083E8A4 (setNeckAngle__9daHorse_cFv)
//	8083DB70: 803DD470 (now__14mDoMtx_stack_c)
//	8083DB74: 803DD470 (now__14mDoMtx_stack_c)
//	8083DB84: 803468E8 (PSMTXTrans)
//	8083DB88: 803DD470 (now__14mDoMtx_stack_c)
//	8083DB8C: 803DD470 (now__14mDoMtx_stack_c)
//	8083DB9C: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	8083DBA0: 803DD470 (now__14mDoMtx_stack_c)
//	8083DBA4: 803DD470 (now__14mDoMtx_stack_c)
//	8083DBB0: 803464B0 (PSMTXCopy)
//	8083DBB4: 804061C0 (g_dComIfG_gameInfo)
//	8083DBB8: 804061C0 (g_dComIfG_gameInfo)
//	8083DBCC: 80439A20 (sincosTable___5JMath)
//	8083DBD0: 80439A20 (sincosTable___5JMath)
//	8083DC44: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setMatrix() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setMatrix__9daHorse_cFv.s"
}
#pragma pop


/* 8083DC58-8083DEEC 0294+00 s=1 e=0 z=0  None .text      setDashEffect__9daHorse_cFPUl                                */
//	8083DC68: 803621D4 (_savegpr_27)
//	8083DC74: 808454AC (lit_3894)
//	8083DC78: 808454AC (lit_3894)
//	8083DC7C: 804061C0 (g_dComIfG_gameInfo)
//	8083DC80: 804061C0 (g_dComIfG_gameInfo)
//	8083DCA4: 8034739C (PSVECSquareDistance)
//	8083DD14: 80450AE0 (__float_nan)
//	8083DD18: 80450AE0 (__float_nan)
//	8083DD84: 80450AE0 (__float_nan)
//	8083DD88: 80450AE0 (__float_nan)
//	8083DDA4: 80439A20 (sincosTable___5JMath)
//	8083DDA8: 80439A20 (sincosTable___5JMath)
//	8083DE78: 804061C0 (g_dComIfG_gameInfo)
//	8083DE7C: 804061C0 (g_dComIfG_gameInfo)
//	8083DECC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8083DED8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32* False
// 	 u32 False
asm void daHorse_c::setDashEffect(u32* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setDashEffect__9daHorse_cFPUl.s"
}
#pragma pop


/* 8083DEEC-8083E4D8 05EC+00 s=1 e=0 z=0  None .text      setEffect__9daHorse_cFv                                      */
//	8083DEFC: 803621BC (_savegpr_21)
//	8083DF04: 80845BB8 (lit_1109)
//	8083DF08: 80845BB8 (lit_1109)
//	8083DF0C: 808454AC (lit_3894)
//	8083DF10: 808454AC (lit_3894)
//	8083DF30: 8083DC58 (setDashEffect__9daHorse_cFPUl)
//	8083DF88: 804061C0 (g_dComIfG_gameInfo)
//	8083DF8C: 804061C0 (g_dComIfG_gameInfo)
//	8083DFA8: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	8083DFE8: 8083DC58 (setDashEffect__9daHorse_cFPUl)
//	8083E0D4: 800512E8 (setEffectFour__8dPaPoF_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC5csXyzPC4cXyzScff)
//	8083E120: 800512E8 (setEffectFour__8dPaPoF_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC5csXyzPC4cXyzScff)
//	8083E144: 8083836C (__dt__4cXyzFv)
//	8083E148: 8083836C (__dt__4cXyzFv)
//	8083E150: 80837EB8 (__register_global_object)
//	8083E17C: 8083836C (__dt__4cXyzFv)
//	8083E180: 8083836C (__dt__4cXyzFv)
//	8083E188: 80837EB8 (__register_global_object)
//	8083E1B4: 8083836C (__dt__4cXyzFv)
//	8083E1B8: 8083836C (__dt__4cXyzFv)
//	8083E1C0: 80837EB8 (__register_global_object)
//	8083E1F4: 8083836C (__dt__4cXyzFv)
//	8083E1F8: 8083836C (__dt__4cXyzFv)
//	8083E200: 80837EB8 (__register_global_object)
//	8083E214: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	8083E218: 803A86D0 (m_typeFourData__8dPaPoF_c)
//	8083E21C: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	8083E220: 803A8748 (m_emitterFourData__8dPaPoF_c)
//	8083E23C: 80362084 (__ptmf_scall)
//	8083E25C: 80362084 (__ptmf_scall)
//	8083E318: 80362084 (__ptmf_scall)
//	8083E3D8: 80362084 (__ptmf_scall)
//	8083E4C4: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setEffect() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setEffect__9daHorse_cFv.s"
}
#pragma pop


/* 8083E4D8-8083E6E8 0210+00 s=1 e=0 z=0  None .text      setCollision__9daHorse_cFv                                   */
//	8083E4F8: 803621D8 (_savegpr_28)
//	8083E500: 808454AC (lit_3894)
//	8083E504: 808454AC (lit_3894)
//	8083E50C: 80083830 (Move__10dCcD_GSttsFv)
//	8083E518: 80439A20 (sincosTable___5JMath)
//	8083E51C: 80439A20 (sincosTable___5JMath)
//	8083E560: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	8083E5B0: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	8083E5F4: 80346D6C (PSMTXMultVec)
//	8083E600: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	8083E604: 804061C0 (g_dComIfG_gameInfo)
//	8083E608: 804061C0 (g_dComIfG_gameInfo)
//	8083E618: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8083E624: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8083E630: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8083E634: 804061C0 (g_dComIfG_gameInfo)
//	8083E638: 804061C0 (g_dComIfG_gameInfo)
//	8083E64C: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	8083E65C: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	8083E668: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8083E674: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8083E688: 80084954 (MoveCAt__8dCcD_CylFR4cXyz)
//	8083E6A0: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8083E6B0: 80085D98 (Set__12dCcMassS_MngFP8cCcD_ObjUc)
//	8083E6BC: 80084318 (ResetAtHit__12dCcD_GObjInfFv)
//	8083E6D4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setCollision() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setCollision__9daHorse_cFv.s"
}
#pragma pop


/* 8083E6E8-8083E760 0078+00 s=1 e=0 z=0  None .text      autoGroundHit__9daHorse_cFv                                  */
//	8083E720: 808455FC (lit_4306)
//	8083E724: 808455FC (lit_4306)
//	8083E730: 808458F4 (l_autoUpHeight)
//	8083E734: 808458F4 (l_autoUpHeight)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::autoGroundHit() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/autoGroundHit__9daHorse_cFv.s"
}
#pragma pop


/* 8083E760-8083E8A4 0144+00 s=1 e=0 z=0  None .text      setTailAngle__9daHorse_cFv                                   */
//	8083E770: 803621D4 (_savegpr_27)
//	8083E7E0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083E828: 8084566C (lit_5531)
//	8083E82C: 8084566C (lit_5531)
//	8083E830: 8084562C (lit_4315)
//	8083E834: 8084562C (lit_4315)
//	8083E890: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setTailAngle() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setTailAngle__9daHorse_cFv.s"
}
#pragma pop


/* 8083E8A4-8083EA78 01D4+00 s=1 e=0 z=0  None .text      setNeckAngle__9daHorse_cFv                                   */
//	8083E8B4: 803621DC (_savegpr_29)
//	8083E8CC: 804061C0 (g_dComIfG_gameInfo)
//	8083E8D0: 804061C0 (g_dComIfG_gameInfo)
//	8083E8D8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8083E910: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083E960: 804061C0 (g_dComIfG_gameInfo)
//	8083E964: 804061C0 (g_dComIfG_gameInfo)
//	8083E978: 808455FC (lit_4306)
//	8083E97C: 808455FC (lit_4306)
//	8083E9A4: 8034739C (PSVECSquareDistance)
//	8083E9A8: 8084573C (lit_7848)
//	8083E9AC: 8084573C (lit_7848)
//	8083E9BC: 8015F4F0 (setLookPos__9daPy_py_cFP4cXyz)
//	8083E9C8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8083E9DC: 803650D0 (abs)
//	8083EA5C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083EA64: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setNeckAngle() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setNeckAngle__9daHorse_cFv.s"
}
#pragma pop


/* 8083EA78-8083EB10 0098+00 s=1 e=0 z=0  None .text      copyFootMatrix__9daHorse_cFv                                 */
//	8083EA88: 803621CC (_savegpr_25)
//	8083EA9C: 808454C0 (m_footJointTable__9daHorse_c)
//	8083EAA0: 808454C0 (m_footJointTable__9daHorse_c)
//	8083EAD0: 803464B0 (PSMTXCopy)
//	8083EAFC: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::copyFootMatrix() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/copyFootMatrix__9daHorse_cFv.s"
}
#pragma pop


/* 8083EB10-8083ED88 0278+00 s=1 e=0 z=0  None .text      setFootMatrix__9daHorse_cFv                                  */
//	8083EB20: 803621A0 (__save_gpr)
//	8083EB28: 8083EA78 (copyFootMatrix__9daHorse_cFv)
//	8083EB54: 808454C0 (m_footJointTable__9daHorse_c)
//	8083EB58: 808454C0 (m_footJointTable__9daHorse_c)
//	8083EB5C: 803DD470 (now__14mDoMtx_stack_c)
//	8083EB60: 803DD470 (now__14mDoMtx_stack_c)
//	8083EB94: 8000C474 (mDoMtx_ZrotS__FPA4_fs)
//	8083EBB8: 803464E4 (PSMTXConcat)
//	8083EBD0: 803464B0 (PSMTXCopy)
//	8083EC08: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8083EC10: 8000CF7C (quatM__14mDoMtx_stack_cFPC10Quaternion)
//	8083EC2C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	8083EC3C: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	8083EC58: 803464B0 (PSMTXCopy)
//	8083EC68: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8083EC70: 8000CF7C (quatM__14mDoMtx_stack_cFPC10Quaternion)
//	8083EC8C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	8083EC9C: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	8083ECC0: 803464B0 (PSMTXCopy)
//	8083ECD0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8083ECD8: 8000CF7C (quatM__14mDoMtx_stack_cFPC10Quaternion)
//	8083ECE8: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	8083ECF4: 803DD470 (now__14mDoMtx_stack_c)
//	8083ECF8: 803DD470 (now__14mDoMtx_stack_c)
//	8083ED10: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	8083ED18: 803DD470 (now__14mDoMtx_stack_c)
//	8083ED1C: 803DD470 (now__14mDoMtx_stack_c)
//	8083ED24: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	8083ED48: 803464B0 (PSMTXCopy)
//	8083ED74: 803621EC (__restore_gpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setFootMatrix() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setFootMatrix__9daHorse_cFv.s"
}
#pragma pop


/* 8083ED88-8083F3B0 0628+00 s=1 e=0 z=0  None .text      setLegAngle__9daHorse_cFfiiPs                                */
//	8083EDD0: 803621C4 (_savegpr_23)
//	8083EDE0: 808454AC (lit_3894)
//	8083EDE4: 808454AC (lit_3894)
//	8083EE30: 803DD470 (now__14mDoMtx_stack_c)
//	8083EE34: 803DD470 (now__14mDoMtx_stack_c)
//	8083EE6C: 80346D6C (PSMTXMultVec)
//	8083EEC0: 80451180 (G_CM3D_F_ABS_MIN)
//	8083EEC4: 80451180 (G_CM3D_F_ABS_MIN)
//	8083EF04: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8083EF2C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8083EF94: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8083EFB4: 80347138 (PSVECSquareMag)
//	8083EFD8: 80347138 (PSVECSquareMag)
//	8083EFE4: 80347138 (PSVECSquareMag)
//	8083F154: 80347138 (PSVECSquareMag)
//	8083F1C0: 80450AE0 (__float_nan)
//	8083F1C4: 80450AE0 (__float_nan)
//	8083F230: 80450AE0 (__float_nan)
//	8083F234: 80450AE0 (__float_nan)
//	8083F28C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8083F2B4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8083F2D8: 80267674 (cM_atan2s__Fff)
//	8083F2E8: 80267674 (cM_atan2s__Fff)
//	8083F30C: 80267674 (cM_atan2s__Fff)
//	8083F31C: 80267674 (cM_atan2s__Fff)
//	8083F39C: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  int False
//  int False
//  s16* False
// 	 s16 False
asm void daHorse_c::setLegAngle(f32 param_0, int param_1, int param_2, s16* param_3) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setLegAngle__9daHorse_cFfiiPs.s"
}
#pragma pop


/* ############################################################################################## */
/* 80845BBC-80845BC0 0001+03 s=0 e=0 z=0  None .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 80845BC0-80845BC4 0001+03 s=0 e=0 z=0  None .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 80845BC4-80845BC8 0001+03 s=0 e=0 z=0  None .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 80845BC8-80845BCC 0001+03 s=0 e=0 z=0  None .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 80845BCC-80845BD0 0001+03 s=0 e=0 z=0  None .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 80845BD0-80845BD4 0001+03 s=0 e=0 z=0  None .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 80845BD4-80845BD8 0001+03 s=0 e=0 z=0  None .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 80845BD8-80845BDC 0001+03 s=0 e=0 z=0  None .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 80845BDC-80845BE0 0001+03 s=0 e=0 z=0  None .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 80845BE0-80845BE4 0001+03 s=0 e=0 z=0  None .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 80845BE4-80845BE8 0001+03 s=0 e=0 z=0  None .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 80845BE8-80845BEC 0001+03 s=0 e=0 z=0  None .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 80845BEC-80845BF0 0001+03 s=0 e=0 z=0  None .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 80845BF0-80845BF4 0001+03 s=0 e=0 z=0  None .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 80845BF4-80845BF8 0001+03 s=0 e=0 z=0  None .bss       @1009                                                        */
u8 lit_1009[1 + 3 /* padding */];

/* 80845BF8-80845C04 000C+00 s=0 e=0 z=0  None .bss       @4179                                                        */
u8 lit_4179[12];

/* 80845C04-80845C10 000C+00 s=1 e=0 z=0  None .bss       l_frontFootOffset                                            */
static u8 l_frontFootOffset[12];

/* 80845C10-80845C1C 000C+00 s=0 e=0 z=0  None .bss       @4180                                                        */
u8 lit_4180[12];

/* 80845C1C-80845C28 000C+00 s=1 e=0 z=0  None .bss       l_backFootOffset                                             */
static u8 l_backFootOffset[12];

/* 8083F3B0-8083F9AC 05FC+00 s=1 e=0 z=0  None .text      footBgCheck__9daHorse_cFv                                    */
//	8083F3C8: 803621BC (_savegpr_21)
//	8083F3D0: 808454AC (lit_3894)
//	8083F3D4: 808454AC (lit_3894)
//	8083F424: 80845C04 (l_frontFootOffset)
//	8083F428: 80845C04 (l_frontFootOffset)
//	8083F430: 80346D6C (PSMTXMultVec)
//	8083F444: 80845C04 (l_frontFootOffset)
//	8083F448: 80845C04 (l_frontFootOffset)
//	8083F450: 80346D6C (PSMTXMultVec)
//	8083F464: 80845C1C (l_backFootOffset)
//	8083F468: 80845C1C (l_backFootOffset)
//	8083F470: 80346D6C (PSMTXMultVec)
//	8083F484: 80845C1C (l_backFootOffset)
//	8083F488: 80845C1C (l_backFootOffset)
//	8083F490: 80346D6C (PSMTXMultVec)
//	8083F4A0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8083F500: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	8083F504: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	8083F50C: 804061C0 (g_dComIfG_gameInfo)
//	8083F510: 804061C0 (g_dComIfG_gameInfo)
//	8083F528: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8083F550: 80347090 (PSVECAdd)
//	8083F598: 80347138 (PSVECSquareMag)
//	8083F5D4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8083F624: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	8083F634: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	8083F638: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	8083F650: 80845BA0 (__vt__8cM3dGPla)
//	8083F654: 80845BA0 (__vt__8cM3dGPla)
//	8083F668: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8083F674: 8001DBD8 (fopAcM_getPolygonAngle__FPC8cM3dGPlas)
//	8083F678: 80845BA0 (__vt__8cM3dGPla)
//	8083F67C: 80845BA0 (__vt__8cM3dGPla)
//	8083F6A4: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	8083F6A8: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	8083F7B0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8083F7C0: 80266B84 (__ml__4cXyzCFf)
//	8083F7D0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8083F7E0: 80266B84 (__ml__4cXyzCFf)
//	8083F7F0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8083F810: 80267150 (atan2sY_XZ__4cXyzCFv)
//	8083F85C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083F868: 803DD470 (now__14mDoMtx_stack_c)
//	8083F86C: 803DD470 (now__14mDoMtx_stack_c)
//	8083F87C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8083F898: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8083F8C8: 8083ED88 (setLegAngle__9daHorse_cFfiiPs)
//	8083F918: 8083ED88 (setLegAngle__9daHorse_cFfiiPs)
//	8083F964: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8083F998: 80362208 (_restgpr_21)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::footBgCheck() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/footBgCheck__9daHorse_cFv.s"
}
#pragma pop


/* 8083F9AC-8083FDAC 0400+00 s=2 e=0 z=0  None .text      setReinPosMoveInit__9daHorse_cFi                             */
//	8083F9E4: 803621D4 (_savegpr_27)
//	8083F9F0: 80845BB8 (lit_1109)
//	8083F9F4: 80845BB8 (lit_1109)
//	8083F9F8: 808454AC (lit_3894)
//	8083F9FC: 808454AC (lit_3894)
//	8083FA28: 8083836C (__dt__4cXyzFv)
//	8083FA2C: 8083836C (__dt__4cXyzFv)
//	8083FA34: 80837EB8 (__register_global_object)
//	8083FA68: 8083836C (__dt__4cXyzFv)
//	8083FA6C: 8083836C (__dt__4cXyzFv)
//	8083FA74: 80837EB8 (__register_global_object)
//	8083FAA4: 8083836C (__dt__4cXyzFv)
//	8083FAA8: 8083836C (__dt__4cXyzFv)
//	8083FAB0: 80837EB8 (__register_global_object)
//	8083FAE0: 8083836C (__dt__4cXyzFv)
//	8083FAE4: 8083836C (__dt__4cXyzFv)
//	8083FAEC: 80837EB8 (__register_global_object)
//	8083FB10: 80346D6C (PSMTXMultVec)
//	8083FB2C: 80346D6C (PSMTXMultVec)
//	8083FB40: 80439A20 (sincosTable___5JMath)
//	8083FB44: 80439A20 (sincosTable___5JMath)
//	8083FBF8: 80346D6C (PSMTXMultVec)
//	8083FC38: 80346D6C (PSMTXMultVec)
//	8083FC80: 8034739C (PSVECSquareDistance)
//	8083FCB0: 803DD470 (now__14mDoMtx_stack_c)
//	8083FCB4: 803DD470 (now__14mDoMtx_stack_c)
//	8083FCC4: 803468E8 (PSMTXTrans)
//	8083FCC8: 803DD470 (now__14mDoMtx_stack_c)
//	8083FCCC: 803DD470 (now__14mDoMtx_stack_c)
//	8083FCE0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8083FCFC: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8083FD08: 803DD470 (now__14mDoMtx_stack_c)
//	8083FD0C: 803DD470 (now__14mDoMtx_stack_c)
//	8083FD44: 80346D6C (PSMTXMultVec)
//	8083FD98: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daHorse_c::setReinPosMoveInit(int param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setReinPosMoveInit__9daHorse_cFi.s"
}
#pragma pop


/* 8083FDAC-8083FEB4 0108+00 s=2 e=0 z=0  None .text      copyReinPos__9daHorse_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::copyReinPos() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/copyReinPos__9daHorse_cFv.s"
}
#pragma pop


/* 8083FEB4-8084010C 0258+00 s=1 e=0 z=0  None .text      setReinPosHandSubstance__9daHorse_cFi                        */
//	8083FEC4: 803621C8 (_savegpr_24)
//	8083FED0: 8083F9AC (setReinPosMoveInit__9daHorse_cFi)
//	8083FED4: 804061C0 (g_dComIfG_gameInfo)
//	8083FED8: 804061C0 (g_dComIfG_gameInfo)
//	8083FF40: 80845770 (zeldaLocalLeft)
//	8083FF44: 80845770 (zeldaLocalLeft)
//	8083FF54: 80346D6C (PSMTXMultVec)
//	8083FF68: 8084577C (zeldaLocalRight)
//	8083FF6C: 8084577C (zeldaLocalRight)
//	8083FF7C: 80346D6C (PSMTXMultVec)
//	8083FFA0: 800ED0D4 (getHorseReinHandPos__9daAlink_cFP4cXyzP4cXyz)
//	8083FFAC: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	8083FFB8: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	8083FFCC: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	8083FFEC: 80391900 (m_handLeftInSidePos__9daAlink_c)
//	8083FFF0: 80391900 (m_handLeftInSidePos__9daAlink_c)
//	8083FFF8: 80346D6C (PSMTXMultVec)
//	80840018: 8039190C (m_handRightInSidePos__9daAlink_c)
//	8084001C: 8039190C (m_handRightInSidePos__9daAlink_c)
//	80840024: 80346D6C (PSMTXMultVec)
//	80840030: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	80840040: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	80840054: 80391900 (m_handLeftInSidePos__9daAlink_c)
//	80840058: 80391900 (m_handLeftInSidePos__9daAlink_c)
//	80840064: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	80840070: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	80840094: 80346D6C (PSMTXMultVec)
//	808400B4: 8039190C (m_handRightInSidePos__9daAlink_c)
//	808400B8: 8039190C (m_handRightInSidePos__9daAlink_c)
//	808400C0: 80346D6C (PSMTXMultVec)
//	808400CC: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	808400DC: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	808400F0: 8083FDAC (copyReinPos__9daHorse_cFv)
//	808400F8: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daHorse_c::setReinPosHandSubstance(int param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setReinPosHandSubstance__9daHorse_cFi.s"
}
#pragma pop


/* 8084010C-808402F8 01EC+00 s=1 e=0 z=0  None .text      setReinPosNormalSubstance__9daHorse_cFv                      */
//	8084011C: 803621DC (_savegpr_29)
//	80840124: 80845BB8 (lit_1109)
//	80840128: 80845BB8 (lit_1109)
//	8084012C: 808454AC (lit_3894)
//	80840130: 808454AC (lit_3894)
//	8084015C: 8083836C (__dt__4cXyzFv)
//	80840160: 8083836C (__dt__4cXyzFv)
//	80840168: 80837EB8 (__register_global_object)
//	8084019C: 8083836C (__dt__4cXyzFv)
//	808401A0: 8083836C (__dt__4cXyzFv)
//	808401A8: 80837EB8 (__register_global_object)
//	808401F0: 8083F9AC (setReinPosMoveInit__9daHorse_cFi)
//	80840210: 80346D6C (PSMTXMultVec)
//	8084021C: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	8084023C: 80346D6C (PSMTXMultVec)
//	80840248: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	80840274: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	80840290: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	8084029C: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	808402C8: 808383A8 (setReinPosPart__13daHorseRein_cFi)
//	808402DC: 8083FDAC (copyReinPos__9daHorse_cFv)
//	808402E4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setReinPosNormalSubstance() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setReinPosNormalSubstance__9daHorse_cFv.s"
}
#pragma pop


/* 808402F8-80840714 041C+00 s=1 e=0 z=0  None .text      bgCheck__9daHorse_cFv                                        */
//	80840310: 803621D4 (_savegpr_27)
//	80840318: 80845BB8 (lit_1109)
//	8084031C: 80845BB8 (lit_1109)
//	80840320: 808454AC (lit_3894)
//	80840324: 808454AC (lit_3894)
//	80840358: 8083836C (__dt__4cXyzFv)
//	8084035C: 8083836C (__dt__4cXyzFv)
//	80840364: 80837EB8 (__register_global_object)
//	80840398: 8083836C (__dt__4cXyzFv)
//	8084039C: 8083836C (__dt__4cXyzFv)
//	808403A4: 80837EB8 (__register_global_object)
//	808403D8: 8083836C (__dt__4cXyzFv)
//	808403DC: 8083836C (__dt__4cXyzFv)
//	808403E4: 80837EB8 (__register_global_object)
//	808403F4: 803DD470 (now__14mDoMtx_stack_c)
//	808403F8: 803DD470 (now__14mDoMtx_stack_c)
//	80840408: 803468E8 (PSMTXTrans)
//	8084040C: 803DD470 (now__14mDoMtx_stack_c)
//	80840410: 803DD470 (now__14mDoMtx_stack_c)
//	80840420: 8000C2A0 (mDoMtx_ZXYrotM__FPA4_fsss)
//	80840424: 803DD470 (now__14mDoMtx_stack_c)
//	80840428: 803DD470 (now__14mDoMtx_stack_c)
//	80840434: 80346D6C (PSMTXMultVec)
//	80840438: 803DD470 (now__14mDoMtx_stack_c)
//	8084043C: 803DD470 (now__14mDoMtx_stack_c)
//	80840448: 80346D6C (PSMTXMultVec)
//	8084044C: 80845BA0 (__vt__8cM3dGPla)
//	80840450: 80845BA0 (__vt__8cM3dGPla)
//	80840468: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8084046C: 804061C0 (g_dComIfG_gameInfo)
//	80840470: 804061C0 (g_dComIfG_gameInfo)
//	80840480: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80840498: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	808404A0: 80268210 (cBgW_CheckBWall__Ff)
//	808404C0: 80267128 (atan2sX_Z__4cXyzCFv)
//	808404EC: 803DD470 (now__14mDoMtx_stack_c)
//	808404F0: 803DD470 (now__14mDoMtx_stack_c)
//	808404FC: 80346D6C (PSMTXMultVec)
//	80840510: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8084051C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80840534: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8084053C: 80268210 (cBgW_CheckBWall__Ff)
//	80840560: 803470B4 (PSVECSubtract)
//	80840580: 80347138 (PSVECSquareMag)
//	808405F0: 80450AE0 (__float_nan)
//	808405F4: 80450AE0 (__float_nan)
//	80840660: 80450AE0 (__float_nan)
//	80840664: 80450AE0 (__float_nan)
//	80840674: 80267128 (atan2sX_Z__4cXyzCFv)
//	8084068C: 80267674 (cM_atan2s__Fff)
//	80840694: 80439A20 (sincosTable___5JMath)
//	80840698: 80439A20 (sincosTable___5JMath)
//	808406E8: 80845BA0 (__vt__8cM3dGPla)
//	808406EC: 80845BA0 (__vt__8cM3dGPla)
//	80840700: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::bgCheck() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/bgCheck__9daHorse_cFv.s"
}
#pragma pop


/* 80840714-808407B0 009C+00 s=1 e=0 z=0  None .text      checkSpecialWallHitSubstance__9daHorse_cCFRC4cXyz            */
//	80840754: 808456D4 (lit_7218)
//	80840758: 808456D4 (lit_7218)
//	80840778: 80267128 (atan2sX_Z__4cXyzCFv)
//	80840784: 80270E24 (cLib_distanceAngleS__Fss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
asm void daHorse_c::checkSpecialWallHitSubstance(cXyz const& param_0) const {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkSpecialWallHitSubstance__9daHorse_cCFRC4cXyz.s"
}
#pragma pop


/* 808407B0-80840800 0050+00 s=3 e=0 z=0  None .text      setServiceWaitTimer__9daHorse_cFv                            */
//	808407C4: 80845738 (lit_7749)
//	808407C8: 80845738 (lit_7749)
//	808407CC: 80267954 (cM_rndF__Ff)
//	808407D0: 8084564C (lit_5178)
//	808407D4: 8084564C (lit_5178)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setServiceWaitTimer() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setServiceWaitTimer__9daHorse_cFv.s"
}
#pragma pop


/* 80840800-80840844 0044+00 s=2 e=0 z=0  None .text      checkServiceWaitAnime__9daHorse_cFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::checkServiceWaitAnime() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkServiceWaitAnime__9daHorse_cFv.s"
}
#pragma pop


/* 80840844-808408F0 00AC+00 s=2 e=0 z=0  None .text      checkTurnInput__9daHorse_cFv                                 */
//	80840854: 803621D8 (_savegpr_28)
//	80840860: 80845798 (lit_8963)
//	80840864: 80845798 (lit_8963)
//	80840874: 804061C0 (g_dComIfG_gameInfo)
//	80840878: 804061C0 (g_dComIfG_gameInfo)
//	80840888: 800737E4 (LockonTruth__12dAttention_cFv)
//	808408AC: 804061C0 (g_dComIfG_gameInfo)
//	808408B0: 804061C0 (g_dComIfG_gameInfo)
//	808408DC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::checkTurnInput() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkTurnInput__9daHorse_cFv.s"
}
#pragma pop


/* 808408F0-808409C0 00D0+00 s=2 e=0 z=0  None .text      checkTgHitTurn__9daHorse_cFv                                 */
//	80840904: 804061C0 (g_dComIfG_gameInfo)
//	80840908: 804061C0 (g_dComIfG_gameInfo)
//	8084095C: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	8084096C: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	8084097C: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	8084098C: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	808409A0: 80842878 (procTurnInit__9daHorse_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::checkTgHitTurn() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkTgHitTurn__9daHorse_cFv.s"
}
#pragma pop


/* 808409C0-80840B28 0168+00 s=3 e=0 z=0  None .text      checkTurnAfterFastMove__9daHorse_cFf                         */
//	808409E4: 808408F0 (checkTgHitTurn__9daHorse_cFv)
//	808409FC: 80845678 (lit_5722)
//	80840A00: 80845678 (lit_5722)
//	80840A1C: 803650D0 (abs)
//	80840A40: 80842878 (procTurnInit__9daHorse_cFi)
//	80840A58: 8083BF48 (checkHorseNoMove__9daHorse_cFi)
//	80840A64: 808454CC (m__14daHorse_hio_c0)
//	80840A68: 808454CC (m__14daHorse_hio_c0)
//	80840A80: 80841F04 (procMoveInit__9daHorse_cFv)
//	80840AB4: 80841708 (procWaitInit__9daHorse_cFv)
//	80840ABC: 804061C0 (g_dComIfG_gameInfo)
//	80840AC0: 804061C0 (g_dComIfG_gameInfo)
//	80840AD8: 80840844 (checkTurnInput__9daHorse_cFv)
//	80840AF8: 80842878 (procTurnInit__9daHorse_cFi)
//	80840B04: 80841708 (procWaitInit__9daHorse_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
asm void daHorse_c::checkTurnAfterFastMove(f32 param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkTurnAfterFastMove__9daHorse_cFf.s"
}
#pragma pop


/* 80840B28-80840B88 0060+00 s=2 e=0 z=0  None .text      setNeckAnimeMorf__9daHorse_cFv                               */
//	80840B3C: 80845644 (lit_5176)
//	80840B40: 80845644 (lit_5176)
//	80840B6C: 808455F0 (lit_4303)
//	80840B70: 808455F0 (lit_4303)
//	80840B74: 8000F848 (initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setNeckAnimeMorf() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setNeckAnimeMorf__9daHorse_cFv.s"
}
#pragma pop


/* 80840B88-80840CA4 011C+00 s=4 e=0 z=0  None .text      setNeckAnime__9daHorse_cFUsffs                               */
//	80840BB0: 803621D8 (_savegpr_28)
//	80840BC8: 808454B8 (l_arcName)
//	80840BCC: 808454B8 (l_arcName)
//	80840BD4: 804061C0 (g_dComIfG_gameInfo)
//	80840BD8: 804061C0 (g_dComIfG_gameInfo)
//	80840BE8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80840C04: 808455FC (lit_4306)
//	80840C08: 808455FC (lit_4306)
//	80840C18: 8084562C (lit_4315)
//	80840C1C: 8084562C (lit_4315)
//	80840C64: 8015E544 (setFrameCtrl__16daPy_frameCtrl_cFUcssff)
//	80840C70: 80840B28 (setNeckAnimeMorf__9daHorse_cFv)
//	80840C90: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
//  f32 False
//  f32 False
//  s16 False
asm void daHorse_c::setNeckAnime(u16 param_0, f32 param_1, f32 param_2, s16 param_3) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setNeckAnime__9daHorse_cFUsffs.s"
}
#pragma pop


/* 80840CA4-80840CE4 0040+00 s=9 e=0 z=0  None .text      resetNeckAnime__9daHorse_cFv                                 */
//	80840CD0: 80840B28 (setNeckAnimeMorf__9daHorse_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::resetNeckAnime() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/resetNeckAnime__9daHorse_cFv.s"
}
#pragma pop


/* 80840CE4-80840FE0 02FC+00 s=1 e=0 z=0  None .text      setLashCnt__9daHorse_cFv                                     */
//	80840CFC: 808454AC (lit_3894)
//	80840D00: 808454AC (lit_3894)
//	80840D30: 804061C0 (g_dComIfG_gameInfo)
//	80840D34: 804061C0 (g_dComIfG_gameInfo)
//	80840D48: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80840D6C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80840D70: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80840D9C: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80840E38: 80840B88 (setNeckAnime__9daHorse_cFUsffs)
//	80840EF4: 804061C0 (g_dComIfG_gameInfo)
//	80840EF8: 804061C0 (g_dComIfG_gameInfo)
//	80840F10: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80840F14: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80840F40: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80840F68: 804061C0 (g_dComIfG_gameInfo)
//	80840F6C: 804061C0 (g_dComIfG_gameInfo)
//	80840F84: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80840F88: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80840FB4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setLashCnt() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setLashCnt__9daHorse_cFv.s"
}
#pragma pop


/* 80840FE0-80841084 00A4+00 s=1 e=0 z=0  None .text      setTalkModeWolf__9daHorse_cFv                                */
//	80841020: 80249F90 (init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c)
//	80841044: 8024A2D8 (doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci)
//	80841050: 804061C0 (g_dComIfG_gameInfo)
//	80841054: 804061C0 (g_dComIfG_gameInfo)
//	8084105C: 80042468 (reset__14dEvt_control_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::setTalkModeWolf() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setTalkModeWolf__9daHorse_cFv.s"
}
#pragma pop


/* 80841084-8084116C 00E8+00 s=2 e=0 z=0  None .text      setBoarHit__9daHorse_cFP10fopAc_ac_ci                        */
//	80841094: 803621D8 (_savegpr_28)
//	808410C0: 803650D0 (abs)
//	808410CC: 808455FC (lit_4306)
//	808410D0: 808455FC (lit_4306)
//	808410D8: 808455F4 (lit_4304)
//	808410DC: 808455F4 (lit_4304)
//	808410E8: 804061C0 (g_dComIfG_gameInfo)
//	808410EC: 804061C0 (g_dComIfG_gameInfo)
//	80841100: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80841104: 804061C0 (g_dComIfG_gameInfo)
//	80841108: 804061C0 (g_dComIfG_gameInfo)
//	80841130: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80841158: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
asm void daHorse_c::setBoarHit(fopAc_ac_c* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setBoarHit__9daHorse_cFP10fopAc_ac_ci.s"
}
#pragma pop


/* 8084116C-808411D0 0064+00 s=1 e=0 z=0  None .text      savePos__9daHorse_cFv                                        */
//	808411A4: 804061C0 (g_dComIfG_gameInfo)
//	808411A8: 804061C0 (g_dComIfG_gameInfo)
//	808411BC: 80032C64 (set__17dSv_horse_place_cFPCcRC4cXyzsSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::savePos() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/savePos__9daHorse_cFv.s"
}
#pragma pop


/* 808411D0-80841468 0298+00 s=1 e=0 z=0  None .text      callHorseSubstance__9daHorse_cFPC4cXyz                       */
//	808411F0: 803621D4 (_savegpr_27)
//	808411FC: 808454AC (lit_3894)
//	80841200: 808454AC (lit_3894)
//	80841204: 80450D64 (struct_80450D64)
//	80841208: 80450D64 (struct_80450D64)
//	8084121C: 8084585C (stringBase0)
//	80841220: 8084585C (stringBase0)
//	80841224: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8084124C: 8084585C (stringBase0)
//	80841250: 8084585C (stringBase0)
//	80841258: 8009DA60 (checkStageName__9daAlink_cFPCc)
//	8084128C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	808412BC: 80347138 (PSVECSquareMag)
//	808413F0: 80362084 (__ptmf_scall)
//	80841454: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
asm void daHorse_c::callHorseSubstance(cXyz const* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/callHorseSubstance__9daHorse_cFPC4cXyz.s"
}
#pragma pop


/* 80841468-808415B4 014C+00 s=1 e=0 z=0  None .text      setHorsePosAndAngleSubstance__9daHorse_cFPC4cXyzs            */
//	80841478: 803621D4 (_savegpr_27)
//	808414EC: 803DD470 (now__14mDoMtx_stack_c)
//	808414F0: 803DD470 (now__14mDoMtx_stack_c)
//	80841500: 803468E8 (PSMTXTrans)
//	80841504: 803DD470 (now__14mDoMtx_stack_c)
//	80841508: 803DD470 (now__14mDoMtx_stack_c)
//	80841518: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80841534: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80841538: 803DD470 (now__14mDoMtx_stack_c)
//	8084153C: 803DD470 (now__14mDoMtx_stack_c)
//	80841548: 80346D6C (PSMTXMultVec)
//	80841554: 803DD470 (now__14mDoMtx_stack_c)
//	80841558: 803DD470 (now__14mDoMtx_stack_c)
//	80841574: 80346D6C (PSMTXMultVec)
//	808415A0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
asm void daHorse_c::setHorsePosAndAngleSubstance(cXyz const* param_0, s16 param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setHorsePosAndAngleSubstance__9daHorse_cFPC4cXyzs.s"
}
#pragma pop


/* 808415B4-80841628 0074+00 s=2 e=0 z=0  None .text      checkPlayerHeavy__9daHorse_cFv                               */
//	808415C8: 804061C0 (g_dComIfG_gameInfo)
//	808415CC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::checkPlayerHeavy() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/checkPlayerHeavy__9daHorse_cFv.s"
}
#pragma pop


/* 80841628-80841698 0070+00 s=2 e=0 z=0  None .text      setTgCoGrp__9daHorse_cFUlUl                                  */
//	80841638: 803621D8 (_savegpr_28)
//	8084164C: 80264894 (SetGrp__10cCcD_ObjTgFUl)
//	80841660: 80264894 (SetGrp__10cCcD_ObjTgFUl)
//	8084166C: 8026491C (SetVsGrp__10cCcD_ObjCoFUl)
//	80841684: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u32 False
asm void daHorse_c::setTgCoGrp(u32 param_0, u32 param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/setTgCoGrp__9daHorse_cFUlUl.s"
}
#pragma pop


/* 80841698-808416D4 003C+00 s=1 e=0 z=0  None .text      onRideFlgSubstance__9daHorse_cFv                             */
//	808416C0: 80841628 (setTgCoGrp__9daHorse_cFUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::onRideFlgSubstance() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/onRideFlgSubstance__9daHorse_cFv.s"
}
#pragma pop


/* 808416D4-80841708 0034+00 s=1 e=0 z=0  None .text      offRideFlgSubstance__9daHorse_cFv                            */
//	808416F4: 80841628 (setTgCoGrp__9daHorse_cFUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::offRideFlgSubstance() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/offRideFlgSubstance__9daHorse_cFv.s"
}
#pragma pop


/* 80841708-808417B8 00B0+00 s=8 e=0 z=0  None .text      procWaitInit__9daHorse_cFv                                   */
//	80841744: 808459D0 (lit_9343)
//	80841748: 808459D0 (lit_9343)
//	8084176C: 808455FC (lit_4306)
//	80841770: 808455FC (lit_4306)
//	8084177C: 80840800 (checkServiceWaitAnime__9daHorse_cFv)
//	8084178C: 808455F0 (lit_4303)
//	80841790: 808455F0 (lit_4303)
//	80841794: 8083B830 (setMoveAnime__9daHorse_cFf)
//	8084179C: 808407B0 (setServiceWaitTimer__9daHorse_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procWaitInit() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procWaitInit__9daHorse_cFv.s"
}
#pragma pop


/* 808417B8-80841F04 074C+00 s=1 e=0 z=0  None .text      procWait__9daHorse_cFv                                       */
//	808417D0: 803621D4 (_savegpr_27)
//	808417D8: 808454AC (lit_3894)
//	808417DC: 808454AC (lit_3894)
//	808417E0: 804061C0 (g_dComIfG_gameInfo)
//	808417E4: 804061C0 (g_dComIfG_gameInfo)
//	80841804: 808415B4 (checkPlayerHeavy__9daHorse_cFv)
//	80841818: 80842878 (procTurnInit__9daHorse_cFi)
//	80841824: 8083CB38 (setSpeedAndAngle__9daHorse_cFv)
//	808418B0: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	808418D0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80841914: 80842878 (procTurnInit__9daHorse_cFi)
//	8084195C: 80841F04 (procMoveInit__9daHorse_cFv)
//	80841964: 804061C0 (g_dComIfG_gameInfo)
//	80841968: 804061C0 (g_dComIfG_gameInfo)
//	80841974: 808408F0 (checkTgHitTurn__9daHorse_cFv)
//	808419B0: 80838AC4 (daHorse_searchEnemy__FP10fopAc_ac_cPv)
//	808419B4: 80838AC4 (daHorse_searchEnemy__FP10fopAc_ac_cPv)
//	808419BC: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80841A20: 800ECF04 (checkHorseLieAnime__9daAlink_cCFv)
//	80841A48: 80842878 (procTurnInit__9daHorse_cFi)
//	80841A94: 8026786C (cM_rnd__Fv)
//	80841AC0: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80841AC8: 80267954 (cM_rndF__Ff)
//	80841B04: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80841B0C: 80267954 (cM_rndF__Ff)
//	80841B48: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80841B7C: 808407B0 (setServiceWaitTimer__9daHorse_cFv)
//	80841BAC: 8083B830 (setMoveAnime__9daHorse_cFf)
//	80841C50: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80841C88: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80841CDC: 8083B830 (setMoveAnime__9daHorse_cFf)
//	80841CE4: 808407B0 (setServiceWaitTimer__9daHorse_cFv)
//	80841D40: 80840800 (checkServiceWaitAnime__9daHorse_cFv)
//	80841D4C: 8026786C (cM_rnd__Fv)
//	80841DBC: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80841DD4: 8083B830 (setMoveAnime__9daHorse_cFf)
//	80841E0C: 8083B830 (setMoveAnime__9daHorse_cFf)
//	80841E14: 808407B0 (setServiceWaitTimer__9daHorse_cFv)
//	80841E60: 8083B578 (acceptPlayerRide__9daHorse_cFv)
//	80841E80: 80840800 (checkServiceWaitAnime__9daHorse_cFv)
//	80841ED4: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80841EF0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procWait() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procWait__9daHorse_cFv.s"
}
#pragma pop


/* 80841F04-80841F80 007C+00 s=6 e=0 z=0  None .text      procMoveInit__9daHorse_cFv                                   */
//	80841F18: 808459DC (lit_9546)
//	80841F1C: 808459DC (lit_9546)
//	80841F54: 808455F0 (lit_4303)
//	80841F58: 808455F0 (lit_4303)
//	80841F5C: 8083B830 (setMoveAnime__9daHorse_cFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procMoveInit() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procMoveInit__9daHorse_cFv.s"
}
#pragma pop


/* 80841F80-808423DC 045C+00 s=1 e=0 z=0  None .text      procMove__9daHorse_cFv                                       */
//	80841F90: 803621DC (_savegpr_29)
//	80841F98: 808454AC (lit_3894)
//	80841F9C: 808454AC (lit_3894)
//	80841FA0: 8083CB38 (setSpeedAndAngle__9daHorse_cFv)
//	80841FC4: 804061C0 (g_dComIfG_gameInfo)
//	80841FC8: 804061C0 (g_dComIfG_gameInfo)
//	80841FD0: 800ECF5C (checkHorseSubjectivity__9daAlink_cCFv)
//	808420BC: 80843008 (procJumpInit__9daHorse_cFi)
//	808420E0: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80842104: 80843008 (procJumpInit__9daHorse_cFi)
//	80842140: 80843008 (procJumpInit__9daHorse_cFi)
//	80842158: 80842878 (procTurnInit__9daHorse_cFi)
//	8084217C: 80840CA4 (resetNeckAnime__9daHorse_cFv)
//	808421A0: 80841708 (procWaitInit__9daHorse_cFv)
//	808421BC: 808423DC (procStopInit__9daHorse_cFv)
//	808421F0: 80842878 (procTurnInit__9daHorse_cFi)
//	808421FC: 80841708 (procWaitInit__9daHorse_cFv)
//	80842220: 80347138 (PSVECSquareMag)
//	80842290: 80450AE0 (__float_nan)
//	80842294: 80450AE0 (__float_nan)
//	80842300: 80450AE0 (__float_nan)
//	80842304: 80450AE0 (__float_nan)
//	80842338: 804061C0 (g_dComIfG_gameInfo)
//	8084233C: 804061C0 (g_dComIfG_gameInfo)
//	80842378: 8034739C (PSVECSquareDistance)
//	8084238C: 808423DC (procStopInit__9daHorse_cFv)
//	808423A8: 8083B830 (setMoveAnime__9daHorse_cFf)
//	808423C8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procMove() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procMove__9daHorse_cFv.s"
}
#pragma pop


/* 808423DC-808425BC 01E0+00 s=3 e=0 z=0  None .text      procStopInit__9daHorse_cFv                                   */
//	808423F4: 808454AC (lit_3894)
//	808423F8: 808454AC (lit_3894)
//	808423FC: 808459E8 (lit_9680)
//	80842400: 808459E8 (lit_9680)
//	80842424: 80840CA4 (resetNeckAnime__9daHorse_cFv)
//	808424B4: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80842504: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procStopInit() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procStopInit__9daHorse_cFv.s"
}
#pragma pop


/* 808425BC-80842878 02BC+00 s=1 e=0 z=0  None .text      procStop__9daHorse_cFv                                       */
//	808425D4: 803621D4 (_savegpr_27)
//	808425DC: 808454AC (lit_3894)
//	808425E0: 808454AC (lit_3894)
//	808425EC: 8083BF48 (checkHorseNoMove__9daHorse_cFi)
//	80842620: 80270740 (cLib_chaseF__FPfff)
//	80842634: 80270740 (cLib_chaseF__FPfff)
//	80842654: 8083B578 (acceptPlayerRide__9daHorse_cFv)
//	80842674: 80841708 (procWaitInit__9daHorse_cFv)
//	8084267C: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	808426A8: 804061C0 (g_dComIfG_gameInfo)
//	808426AC: 804061C0 (g_dComIfG_gameInfo)
//	808426B8: 8004817C (cutEnd__16dEvent_manager_cFi)
//	808426D4: 80841708 (procWaitInit__9daHorse_cFv)
//	808426EC: 80841F04 (procMoveInit__9daHorse_cFv)
//	80842714: 80840B88 (setNeckAnime__9daHorse_cFUsffs)
//	8084271C: 80841708 (procWaitInit__9daHorse_cFv)
//	80842750: 80842878 (procTurnInit__9daHorse_cFi)
//	80842764: 808409C0 (checkTurnAfterFastMove__9daHorse_cFf)
//	8084278C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80842864: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procStop() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procStop__9daHorse_cFv.s"
}
#pragma pop


/* 80842878-80842AB0 0238+00 s=6 e=0 z=0  None .text      procTurnInit__9daHorse_cFi                                   */
//	80842888: 803621DC (_savegpr_29)
//	80842894: 808454AC (lit_3894)
//	80842898: 808454AC (lit_3894)
//	808428B8: 808459F4 (lit_9802)
//	808428BC: 808459F4 (lit_9802)
//	808428E0: 80840CA4 (resetNeckAnime__9daHorse_cFv)
//	80842904: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80842978: 804061C0 (g_dComIfG_gameInfo)
//	8084297C: 804061C0 (g_dComIfG_gameInfo)
//	808429EC: 8026798C (cM_rndFX__Ff)
//	80842A30: 80267954 (cM_rndF__Ff)
//	80842A58: 8083B578 (acceptPlayerRide__9daHorse_cFv)
//	80842A9C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daHorse_c::procTurnInit(int param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procTurnInit__9daHorse_cFi.s"
}
#pragma pop


/* 80842AB0-80843008 0558+00 s=1 e=0 z=0  None .text      procTurn__9daHorse_cFv                                       */
//	80842AC0: 803621D0 (_savegpr_26)
//	80842AC8: 808454AC (lit_3894)
//	80842ACC: 808454AC (lit_3894)
//	80842B0C: 8083BF48 (checkHorseNoMove__9daHorse_cFi)
//	80842B28: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80842B54: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80842B98: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80842BCC: 804061C0 (g_dComIfG_gameInfo)
//	80842BD0: 804061C0 (g_dComIfG_gameInfo)
//	80842BDC: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80842BE8: 8083B830 (setMoveAnime__9daHorse_cFf)
//	80842BF4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80842C18: 804061C0 (g_dComIfG_gameInfo)
//	80842C1C: 804061C0 (g_dComIfG_gameInfo)
//	80842C28: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80842C34: 8083B830 (setMoveAnime__9daHorse_cFf)
//	80842C48: 8083B578 (acceptPlayerRide__9daHorse_cFv)
//	80842C50: 80841708 (procWaitInit__9daHorse_cFv)
//	80842C68: 808409C0 (checkTurnAfterFastMove__9daHorse_cFf)
//	80842D0C: 804061C0 (g_dComIfG_gameInfo)
//	80842D10: 804061C0 (g_dComIfG_gameInfo)
//	80842D48: 802675E4 (cM_rad2s__Ff)
//	80842D50: 80439A20 (sincosTable___5JMath)
//	80842D54: 80439A20 (sincosTable___5JMath)
//	80842DCC: 803650D0 (abs)
//	80842E00: 80270B90 (cLib_chaseAngleS__FPsss)
//	80842E04: 80439A20 (sincosTable___5JMath)
//	80842E08: 80439A20 (sincosTable___5JMath)
//	80842E58: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80842E74: 803DD470 (now__14mDoMtx_stack_c)
//	80842E78: 803DD470 (now__14mDoMtx_stack_c)
//	80842E88: 803468E8 (PSMTXTrans)
//	80842E8C: 803DD470 (now__14mDoMtx_stack_c)
//	80842E90: 803DD470 (now__14mDoMtx_stack_c)
//	80842EA4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80842EA8: 803DD470 (now__14mDoMtx_stack_c)
//	80842EAC: 803DD470 (now__14mDoMtx_stack_c)
//	80842EB8: 80346D6C (PSMTXMultVec)
//	80842ED0: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	80842EDC: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80842EE0: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	80842F1C: 8083BF48 (checkHorseNoMove__9daHorse_cFi)
//	80842F78: 80270E24 (cLib_distanceAngleS__Fss)
//	80842F94: 8083B578 (acceptPlayerRide__9daHorse_cFv)
//	80842FB4: 80841708 (procWaitInit__9daHorse_cFv)
//	80842FF4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procTurn() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procTurn__9daHorse_cFv.s"
}
#pragma pop


/* 80843008-808432E0 02D8+00 s=2 e=0 z=0  None .text      procJumpInit__9daHorse_cFi                                   */
//	80843018: 803621DC (_savegpr_29)
//	80843024: 808454AC (lit_3894)
//	80843028: 808454AC (lit_3894)
//	80843058: 808423DC (procStopInit__9daHorse_cFv)
//	80843060: 80845A00 (lit_9992)
//	80843064: 80845A00 (lit_9992)
//	8084308C: 80840CA4 (resetNeckAnime__9daHorse_cFv)
//	808430BC: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	808430E4: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	808432CC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daHorse_c::procJumpInit(int param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procJumpInit__9daHorse_cFi.s"
}
#pragma pop


/* 808432E0-80843604 0324+00 s=1 e=0 z=0  None .text      procJump__9daHorse_cFv                                       */
//	808432F8: 808454AC (lit_3894)
//	808432FC: 808454AC (lit_3894)
//	80843360: 8034739C (PSVECSquareDistance)
//	80843394: 80843604 (procLandInit__9daHorse_cFfi)
//	808433B4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	808433E0: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	808433F4: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	808434B0: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80843500: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80843540: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80843560: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	808435DC: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procJump() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procJump__9daHorse_cFv.s"
}
#pragma pop


/* 80843604-80843770 016C+00 s=1 e=0 z=0  None .text      procLandInit__9daHorse_cFfi                                  */
//	8084361C: 803621DC (_savegpr_29)
//	8084362C: 808454AC (lit_3894)
//	80843630: 808454AC (lit_3894)
//	80843634: 80845A0C (lit_10113)
//	80843638: 80845A0C (lit_10113)
//	8084365C: 80840CA4 (resetNeckAnime__9daHorse_cFv)
//	80843674: 804061C0 (g_dComIfG_gameInfo)
//	80843678: 804061C0 (g_dComIfG_gameInfo)
//	8084368C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	808436B8: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	808436EC: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	8084375C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  int False
asm void daHorse_c::procLandInit(f32 param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procLandInit__9daHorse_cFfi.s"
}
#pragma pop


/* 80843770-808438AC 013C+00 s=1 e=0 z=0  None .text      procLand__9daHorse_cFv                                       */
//	80843780: 803621D8 (_savegpr_28)
//	80843788: 808454AC (lit_3894)
//	8084378C: 808454AC (lit_3894)
//	80843798: 8083BF48 (checkHorseNoMove__9daHorse_cFi)
//	808437CC: 80270740 (cLib_chaseF__FPfff)
//	808437EC: 80270740 (cLib_chaseF__FPfff)
//	808437F0: 804061C0 (g_dComIfG_gameInfo)
//	808437F4: 804061C0 (g_dComIfG_gameInfo)
//	80843800: 8004817C (cutEnd__16dEvent_manager_cFi)
//	8084380C: 8083B830 (setMoveAnime__9daHorse_cFf)
//	80843818: 8015E4CC (checkAnmEnd__16daPy_frameCtrl_cFv)
//	80843840: 80270740 (cLib_chaseF__FPfff)
//	80843844: 804061C0 (g_dComIfG_gameInfo)
//	80843848: 804061C0 (g_dComIfG_gameInfo)
//	80843854: 8004817C (cutEnd__16dEvent_manager_cFi)
//	80843860: 8083B830 (setMoveAnime__9daHorse_cFf)
//	80843874: 80841F04 (procMoveInit__9daHorse_cFv)
//	8084388C: 808409C0 (checkTurnAfterFastMove__9daHorse_cFf)
//	80843898: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procLand() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procLand__9daHorse_cFv.s"
}
#pragma pop


/* 808438AC-8084396C 00C0+00 s=1 e=0 z=0  None .text      procLargeDamageInit__9daHorse_cFv                            */
//	808438C4: 808454AC (lit_3894)
//	808438C8: 808454AC (lit_3894)
//	808438CC: 80845A18 (lit_10171)
//	808438D0: 80845A18 (lit_10171)
//	808438F4: 80840CA4 (resetNeckAnime__9daHorse_cFv)
//	80843918: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procLargeDamageInit() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procLargeDamageInit__9daHorse_cFv.s"
}
#pragma pop


/* 8084396C-808439C8 005C+00 s=1 e=0 z=0  None .text      procLargeDamage__9daHorse_cFv                                */
//	80843994: 80270540 (cLib_addCalcAngleS__FPsssss)
//	808439A4: 808455FC (lit_4306)
//	808439A8: 808455FC (lit_4306)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procLargeDamage() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procLargeDamage__9daHorse_cFv.s"
}
#pragma pop


/* 808439C8-80843A44 007C+00 s=1 e=0 z=0  None .text      procToolDemoInit__9daHorse_cFv                               */
//	808439DC: 80845A24 (lit_10185)
//	808439E0: 80845A24 (lit_10185)
//	80843A04: 808455FC (lit_4306)
//	80843A08: 808455FC (lit_4306)
//	80843A14: 80840CA4 (resetNeckAnime__9daHorse_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procToolDemoInit() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procToolDemoInit__9daHorse_cFv.s"
}
#pragma pop


/* 80843A44-80843BFC 01B8+00 s=1 e=0 z=0  None .text      procToolDemo__9daHorse_cFv                                   */
//	80843A5C: 803621DC (_savegpr_29)
//	80843A64: 808454AC (lit_3894)
//	80843A68: 808454AC (lit_3894)
//	80843A6C: 80450E20 (m_object__7dDemo_c)
//	80843A70: 80450E20 (m_object__7dDemo_c)
//	80843A7C: 80039088 (getActor__14dDemo_object_cFUc)
//	80843B58: 8083A20C (setSingleAnime__9daHorse_cFUsffsfi)
//	80843B74: 80038338 (getDemoIDData__13dDemo_actor_cFPiPiPiPUsPUc)
//	80843BD4: 80841708 (procWaitInit__9daHorse_cFv)
//	80843BE8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::procToolDemo() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/procToolDemo__9daHorse_cFv.s"
}
#pragma pop


/* 80843BFC-80843C40 0044+00 s=1 e=0 z=0  None .text      searchSceneChangeArea__9daHorse_cFP10fopAc_ac_c              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm void daHorse_c::searchSceneChangeArea(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/searchSceneChangeArea__9daHorse_cFP10fopAc_ac_c.s"
}
#pragma pop


/* 80843C40-80843C74 0034+00 s=1 e=0 z=0  None .text      daHorse_searchSceneChangeArea__FP10fopAc_ac_cPv              */
//	80843C50: 804061C0 (g_dComIfG_gameInfo)
//	80843C54: 804061C0 (g_dComIfG_gameInfo)
//	80843C5C: 80843BFC (searchSceneChangeArea__9daHorse_cFP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
asm static void daHorse_searchSceneChangeArea(fopAc_ac_c* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_searchSceneChangeArea__FP10fopAc_ac_cPv.s"
}
#pragma pop


/* 80843C74-80844570 08FC+00 s=1 e=0 z=0  None .text      execute__9daHorse_cFv                                        */
//	80843C8C: 803621C8 (_savegpr_24)
//	80843C94: 808454AC (lit_3894)
//	80843C98: 808454AC (lit_3894)
//	80843CA4: 80843C40 (daHorse_searchSceneChangeArea__FP10fopAc_ac_cPv)
//	80843CA8: 80843C40 (daHorse_searchSceneChangeArea__FP10fopAc_ac_cPv)
//	80843CB0: 800197BC (fopAcIt_Executor__FPFPvPv_iPv)
//	80843CB8: 8015EC48 (setActor__16daPy_actorKeep_cFv)
//	80843CE8: 804061C0 (g_dComIfG_gameInfo)
//	80843CEC: 804061C0 (g_dComIfG_gameInfo)
//	80843D7C: 8083AEC0 (setDemoData__9daHorse_cFv)
//	80843D84: 8083B600 (setStickData__9daHorse_cFv)
//	80843D94: 80840CE4 (setLashCnt__9daHorse_cFv)
//	80843D9C: 80840FE0 (setTalkModeWolf__9daHorse_cFv)
//	80843DBC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80843DCC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80843DDC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80843DEC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80843E0C: 80840B88 (setNeckAnime__9daHorse_cFUsffs)
//	80843E84: 8083A3C4 (animePlay__9daHorse_cFv)
//	80843E8C: 8083A5AC (checkDemoAction__9daHorse_cFv)
//	80843E98: 80362084 (__ptmf_scall)
//	80843EBC: 80439A20 (sincosTable___5JMath)
//	80843EC0: 80439A20 (sincosTable___5JMath)
//	80843EF0: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	80843F00: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	80843F08: 80347138 (PSVECSquareMag)
//	80843F78: 80450AE0 (__float_nan)
//	80843F7C: 80450AE0 (__float_nan)
//	80843FE8: 80450AE0 (__float_nan)
//	80843FEC: 80450AE0 (__float_nan)
//	80844010: 8083BF48 (checkHorseNoMove__9daHorse_cFi)
//	80844028: 803470B4 (PSVECSubtract)
//	80844060: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	8084406C: 808402F8 (bgCheck__9daHorse_cFv)
//	80844074: 804061C0 (g_dComIfG_gameInfo)
//	80844078: 804061C0 (g_dComIfG_gameInfo)
//	80844084: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80844098: 8083E6E8 (autoGroundHit__9daHorse_cFv)
//	808440E4: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	808440E8: 803DD470 (now__14mDoMtx_stack_c)
//	808440EC: 803DD470 (now__14mDoMtx_stack_c)
//	808440F4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80844120: 803DD470 (now__14mDoMtx_stack_c)
//	80844124: 803DD470 (now__14mDoMtx_stack_c)
//	80844130: 80346D6C (PSMTXMultVec)
//	808441B0: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	808441D4: 8006FD94 (StopQuake__12dVibration_cFi)
//	808441EC: 8083D774 (setRoomInfo__9daHorse_cFi)
//	808441F4: 8083D9D8 (setMatrix__9daHorse_cFv)
//	808441FC: 8083F3B0 (footBgCheck__9daHorse_cFv)
//	80844204: 8083E760 (setTailAngle__9daHorse_cFv)
//	80844220: 8083D918 (setBodyPart__9daHorse_cFv)
//	8084423C: 80430D0C (BaseX__4cXyz)
//	80844240: 80430D0C (BaseX__4cXyz)
//	80844248: 80346D6C (PSMTXMultVec)
//	8084425C: 80267674 (cM_atan2s__Fff)
//	808442B8: 803470B4 (PSVECSubtract)
//	808442C0: 80267128 (atan2sX_Z__4cXyzCFv)
//	80844304: 803DD470 (now__14mDoMtx_stack_c)
//	80844308: 803DD470 (now__14mDoMtx_stack_c)
//	80844318: 803468E8 (PSMTXTrans)
//	8084431C: 803DD470 (now__14mDoMtx_stack_c)
//	80844320: 803DD470 (now__14mDoMtx_stack_c)
//	80844334: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80844350: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	8084435C: 803DD470 (now__14mDoMtx_stack_c)
//	80844360: 803DD470 (now__14mDoMtx_stack_c)
//	8084437C: 80346D6C (PSMTXMultVec)
//	808443F0: 802C06D0 (updateAnime__10Z2CreatureFff)
//	808443F8: 8083DEEC (setEffect__9daHorse_cFv)
//	80844400: 8083E4D8 (setCollision__9daHorse_cFv)
//	80844418: 80362084 (__ptmf_scall)
//	80844428: 802C522C (setLinkRiding__14Z2CreatureRideFb)
//	80844438: 802C522C (setLinkRiding__14Z2CreatureRideFb)
//	80844540: 80430188 (g_meter2_info)
//	80844544: 80430188 (g_meter2_info)
//	8084455C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::execute() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/execute__9daHorse_cFv.s"
}
#pragma pop


/* 80844570-80844590 0020+00 s=1 e=0 z=0  None .text      daHorse_Execute__FP9daHorse_c                                */
//	8084457C: 80843C74 (execute__9daHorse_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daHorse_c* False
// 	 daHorse_c False
asm static void daHorse_Execute(daHorse_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_Execute__FP9daHorse_c.s"
}
#pragma pop


/* 80844590-8084476C 01DC+00 s=1 e=0 z=0  None .text      draw__9daHorse_cFv                                           */
//	808445A8: 808454AC (lit_3894)
//	808445AC: 808454AC (lit_3894)
//	808445B0: 8042CA54 (g_env_light)
//	808445B4: 8042CA54 (g_env_light)
//	808445C4: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	808445E8: 8042CA54 (g_env_light)
//	808445EC: 8042CA54 (g_env_light)
//	808445FC: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80844600: 804061C0 (g_dComIfG_gameInfo)
//	80844604: 804061C0 (g_dComIfG_gameInfo)
//	80844660: 8000D5E8 (entry__13mDoExt_btpAnmFP16J3DMaterialTables)
//	80844668: 8000DD64 (mDoExt_modelEntryDL__FP8J3DModel)
//	808446B8: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	808446BC: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	808446C0: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	808446E0: 804061C0 (g_dComIfG_gameInfo)
//	808446E4: 804061C0 (g_dComIfG_gameInfo)
//	808446EC: 800ECF5C (checkHorseSubjectivity__9daAlink_cCFv)
//	80844704: 80845A30 (reinLineColor)
//	80844708: 80845A30 (reinLineColor)
//	80844714: 8001373C (update__19mDoExt_3DlineMat1_cFifR8_GXColorUsP12dKy_tevstr_c)
//	80844730: 804061C0 (g_dComIfG_gameInfo)
//	80844734: 804061C0 (g_dComIfG_gameInfo)
//	8084474C: 80014738 (setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daHorse_c::draw() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/draw__9daHorse_cFv.s"
}
#pragma pop


/* 8084476C-8084478C 0020+00 s=1 e=0 z=0  None .text      daHorse_Draw__FP9daHorse_c                                   */
//	80844778: 80844590 (draw__9daHorse_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daHorse_c* False
// 	 daHorse_c False
asm static void daHorse_Draw(daHorse_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_Draw__FP9daHorse_c.s"
}
#pragma pop


/* 8084478C-80844B1C 0390+00 s=1 e=0 z=0  None .text      __dt__9daHorse_cFv                                           */
//	808447C4: 808454B8 (l_arcName)
//	808447C8: 808454B8 (l_arcName)
//	808447CC: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	808447D0: 804061C0 (g_dComIfG_gameInfo)
//	808447D4: 804061C0 (g_dComIfG_gameInfo)
//	808447F0: 80844F70 (__dt__17daHorseFootData_cFv)
//	808447F4: 80844F70 (__dt__17daHorseFootData_cFv)
//	80844800: 80361CE8 (__destroy_arr)
//	8084480C: 80249F48 (__dt__10dMsgFlow_cFv)
//	80844814: 80844FB0 (__dt__13daHorseRein_cFv)
//	80844818: 80844FB0 (__dt__13daHorseRein_cFv)
//	80844824: 80361CE8 (__destroy_arr)
//	80844830: 802C5114 (__dt__14Z2CreatureRideFv)
//	8084483C: 803ABFC0 (__vt__8dCcD_Sph)
//	80844840: 803ABFC0 (__vt__8dCcD_Sph)
//	80844860: 803C3540 (__vt__12cCcD_SphAttr)
//	80844864: 803C3540 (__vt__12cCcD_SphAttr)
//	8084487C: 80845AC8 (__vt__8cM3dGSph)
//	80844880: 80845AC8 (__vt__8cM3dGSph)
//	80844890: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80844894: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	808448A4: 80845AE0 (__vt__8cM3dGAab)
//	808448A8: 80845AE0 (__vt__8cM3dGAab)
//	808448B8: 800840E4 (__dt__12dCcD_GObjInfFv)
//	808448C4: 803AC050 (__vt__8dCcD_Cyl)
//	808448C8: 803AC050 (__vt__8dCcD_Cyl)
//	808448E8: 803C35A4 (__vt__12cCcD_CylAttr)
//	808448EC: 803C35A4 (__vt__12cCcD_CylAttr)
//	80844904: 80845AD4 (__vt__8cM3dGCyl)
//	80844908: 80845AD4 (__vt__8cM3dGCyl)
//	80844918: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8084491C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	8084492C: 80845AE0 (__vt__8cM3dGAab)
//	80844930: 80845AE0 (__vt__8cM3dGAab)
//	80844940: 800840E4 (__dt__12dCcD_GObjInfFv)
//	8084494C: 803AC050 (__vt__8dCcD_Cyl)
//	80844950: 803AC050 (__vt__8dCcD_Cyl)
//	80844970: 803C35A4 (__vt__12cCcD_CylAttr)
//	80844974: 803C35A4 (__vt__12cCcD_CylAttr)
//	8084498C: 80845AD4 (__vt__8cM3dGCyl)
//	80844990: 80845AD4 (__vt__8cM3dGCyl)
//	808449A0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	808449A4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	808449B4: 80845AE0 (__vt__8cM3dGAab)
//	808449B8: 80845AE0 (__vt__8cM3dGAab)
//	808449C8: 800840E4 (__dt__12dCcD_GObjInfFv)
//	808449D0: 808450C8 (__dt__8dCcD_CylFv)
//	808449D4: 808450C8 (__dt__8dCcD_CylFv)
//	808449E0: 80361CE8 (__destroy_arr)
//	808449EC: 800784BC (__dt__16dBgS_HorseLinChkFv)
//	808449F8: 803AC2E4 (__vt__9dCcD_Stts)
//	808449FC: 803AC2E4 (__vt__9dCcD_Stts)
//	80844A14: 80845AA8 (__vt__10dCcD_GStts)
//	80844A18: 80845AA8 (__vt__10dCcD_GStts)
//	80844A28: 80845A9C (__vt__10cCcD_GStts)
//	80844A2C: 80845A9C (__vt__10cCcD_GStts)
//	80844A3C: 803C3728 (__vt__9cCcD_Stts)
//	80844A40: 803C3728 (__vt__9cCcD_Stts)
//	80844A50: 80845AEC (__vt__14dBgS_HorseAcch)
//	80844A54: 80845AEC (__vt__14dBgS_HorseAcch)
//	80844A74: 80075F94 (__dt__9dBgS_AcchFv)
//	80844A7C: 808452E4 (__dt__12dBgS_AcchCirFv)
//	80844A80: 808452E4 (__dt__12dBgS_AcchCirFv)
//	80844A8C: 80361CE8 (__destroy_arr)
//	80844A94: 80845354 (__dt__16daPy_frameCtrl_cFv)
//	80844A98: 80845354 (__dt__16daPy_frameCtrl_cFv)
//	80844AA4: 80361CE8 (__destroy_arr)
//	80844AAC: 808453FC (__dt__19mDoExt_AnmRatioPackFv)
//	80844AB0: 808453FC (__dt__19mDoExt_AnmRatioPackFv)
//	80844ABC: 80361CE8 (__destroy_arr)
//	80844AD8: 80845B10 (__vt__12J3DFrameCtrl)
//	80844ADC: 80845B10 (__vt__12J3DFrameCtrl)
//	80844AEC: 80018C8C (__dt__10fopAc_ac_cFv)
//	80844AFC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daHorse_c::~daHorse_c() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__9daHorse_cFv.s"
}
#pragma pop


/* 80844B1C-80844B44 0028+00 s=1 e=0 z=0  None .text      daHorse_Delete__FP9daHorse_c                                 */
//	80844B2C: 8084478C (__dt__9daHorse_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daHorse_c* False
// 	 daHorse_c False
asm static void daHorse_Delete(daHorse_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/daHorse_Delete__FP9daHorse_c.s"
}
#pragma pop


/* 80844B44-80844B8C 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80844B5C: 80845A9C (__vt__10cCcD_GStts)
//	80844B60: 80845A9C (__vt__10cCcD_GStts)
//	80844B70: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80844B8C-80844B90 0004+00 s=3 e=0 z=0  None .text      setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform           */
// True False
//  void False
//  u8 False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
void J3DMtxCalc::setAnmTransform(u8 param_0, J3DAnmTransform* param_1) {
	/* empty function */
}


/* 80844B90-80844B94 0004+00 s=3 e=0 z=0  None .text      setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform             */
// True False
//  void False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
void J3DMtxCalc::setAnmTransform(J3DAnmTransform* param_0) {
	/* empty function */
}


/* 80844B94-80844B9C 0008+00 s=3 e=0 z=0  None .text      getAnmTransform__10J3DMtxCalcFUc                             */
// True False
//  bool False
//  u8 False
bool J3DMtxCalc::getAnmTransform(u8 param_0) {
	return false;
}


/* 80844B9C-80844BA4 0008+00 s=3 e=0 z=0  None .text      getAnmTransform__10J3DMtxCalcFv                              */
// True False
//  bool False
bool J3DMtxCalc::getAnmTransform() {
	return false;
}


/* 80844BA4-80844BA8 0004+00 s=3 e=0 z=0  None .text      setWeight__10J3DMtxCalcFUcf                                  */
// True False
//  void False
//  u8 False
//  f32 False
void J3DMtxCalc::setWeight(u8 param_0, f32 param_1) {
	/* empty function */
}


/* 80844BA8-80844BB4 000C+00 s=3 e=0 z=0  None .text      getWeight__10J3DMtxCalcCFUc                                  */
//	80844BA8: 808455FC (lit_4306)
//	80844BAC: 808455FC (lit_4306)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J3DMtxCalc::getWeight(u8 param_0) const {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/getWeight__10J3DMtxCalcCFUc.s"
}
#pragma pop


/* 80844BB4-80844BDC 0028+00 s=1 e=0 z=0  None .text      init__73J3DMtxCalcNoAnm<27J3DMtxCalcCalcTransformMaya,24J3DMtxCalcJ3DSysInitMaya>FRC3VecRA3_A4_Cf */
//	80844BC8: 8032ECAC (init__24J3DMtxCalcJ3DSysInitMayaFRC3VecRA3_A4_Cf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  Vec const& False
// 	 Vec const False
// 		 Vec False
//  f32 const (& )[3][4] False
// 	 f32 const False
// 		 f32 False
// 	 & False
// 		  False
asm void J3DMtxCalcNoAnm__template0::init(Vec const& param_0, f32 const (& param_1)[3][4]) {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/func_80844BB4.s"
}
#pragma pop


/* 80844BDC-80844C0C 0030+00 s=1 e=0 z=0  None .text      calc__73J3DMtxCalcNoAnm<27J3DMtxCalcCalcTransformMaya,24J3DMtxCalcJ3DSysInitMaya>Fv */
//	80844BE8: 804515F4 (mJoint__10J3DMtxCalc)
//	80844BEC: 804515F4 (mJoint__10J3DMtxCalc)
//	80844BF8: 8032EFBC (calcTransform__27J3DMtxCalcCalcTransformMayaFRC16J3DTransformInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
asm void J3DMtxCalcNoAnm__template0::calc() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/func_80844BDC.s"
}
#pragma pop


/* 80844C0C-80844CA0 0094+00 s=0 e=1 z=0  None .text      __sinit_d_a_horse_cpp                                        */
//	80844C20: 80845BB8 (lit_1109)
//	80844C24: 80845BB8 (lit_1109)
//	80844C28: 808454AC (lit_3894)
//	80844C2C: 808454AC (lit_3894)
//	80844C4C: 8083836C (__dt__4cXyzFv)
//	80844C50: 8083836C (__dt__4cXyzFv)
//	80844C58: 80837EB8 (__register_global_object)
//	80844C78: 8083836C (__dt__4cXyzFv)
//	80844C7C: 8083836C (__dt__4cXyzFv)
//	80844C84: 80837EB8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_horse_cpp() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__sinit_d_a_horse_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80844C0C = (void*)__sinit_d_a_horse_cpp;
#pragma pop


/* 80844CA0-80844CA8 0008+00 s=1 e=0 z=0  None .text      @36@__dt__14dBgS_HorseAcchFv                                 */
//	80844CA4: 80845274 (__dt__14dBgS_HorseAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80844CA0() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/func_80844CA0.s"
}
#pragma pop


/* 80844CA8-80844CB0 0008+00 s=1 e=0 z=0  None .text      @20@__dt__14dBgS_HorseAcchFv                                 */
//	80844CAC: 80845274 (__dt__14dBgS_HorseAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80844CA8() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/func_80844CA8.s"
}
#pragma pop


/* 80844CB0-80844F70 02C0+00 s=1 e=0 z=0  None .text      __ct__9daHorse_cFv                                           */
//	80844CC0: 803621D4 (_savegpr_27)
//	80844CC8: 80018B64 (__ct__10fopAc_ac_cFv)
//	80844CD0: 80845B10 (__vt__12J3DFrameCtrl)
//	80844CD4: 80845B10 (__vt__12J3DFrameCtrl)
//	80844CE4: 803283FC (init__12J3DFrameCtrlFs)
//	80844CF4: 80845438 (__ct__19mDoExt_AnmRatioPackFv)
//	80844CF8: 80845438 (__ct__19mDoExt_AnmRatioPackFv)
//	80844CFC: 808453FC (__dt__19mDoExt_AnmRatioPackFv)
//	80844D00: 808453FC (__dt__19mDoExt_AnmRatioPackFv)
//	80844D0C: 80361D60 (__construct_array)
//	80844D14: 808453B0 (__ct__16daPy_frameCtrl_cFv)
//	80844D18: 808453B0 (__ct__16daPy_frameCtrl_cFv)
//	80844D1C: 80845354 (__dt__16daPy_frameCtrl_cFv)
//	80844D20: 80845354 (__dt__16daPy_frameCtrl_cFv)
//	80844D2C: 80361D60 (__construct_array)
//	80844D34: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80844D38: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80844D3C: 808452E4 (__dt__12dBgS_AcchCirFv)
//	80844D40: 808452E4 (__dt__12dBgS_AcchCirFv)
//	80844D4C: 80361D60 (__construct_array)
//	80844D58: 800760A0 (__ct__9dBgS_AcchFv)
//	80844D5C: 80845AEC (__vt__14dBgS_HorseAcch)
//	80844D60: 80845AEC (__vt__14dBgS_HorseAcch)
//	80844D7C: 80078EF8 (SetHorse__16dBgS_PolyPassChkFv)
//	80844D80: 803C3728 (__vt__9cCcD_Stts)
//	80844D84: 803C3728 (__vt__9cCcD_Stts)
//	80844D90: 80083760 (__ct__10dCcD_GSttsFv)
//	80844D94: 803AC2E4 (__vt__9dCcD_Stts)
//	80844D98: 803AC2E4 (__vt__9dCcD_Stts)
//	80844DAC: 80078460 (__ct__16dBgS_HorseLinChkFv)
//	80844DB4: 80845194 (__ct__8dCcD_CylFv)
//	80844DB8: 80845194 (__ct__8dCcD_CylFv)
//	80844DBC: 808450C8 (__dt__8dCcD_CylFv)
//	80844DC0: 808450C8 (__dt__8dCcD_CylFv)
//	80844DCC: 80361D60 (__construct_array)
//	80844DD8: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80844DDC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80844DE0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80844DE8: 80845AE0 (__vt__8cM3dGAab)
//	80844DEC: 80845AE0 (__vt__8cM3dGAab)
//	80844DF4: 80845AD4 (__vt__8cM3dGCyl)
//	80844DF8: 80845AD4 (__vt__8cM3dGCyl)
//	80844E00: 803C35A4 (__vt__12cCcD_CylAttr)
//	80844E04: 803C35A4 (__vt__12cCcD_CylAttr)
//	80844E14: 803AC050 (__vt__8dCcD_Cyl)
//	80844E18: 803AC050 (__vt__8dCcD_Cyl)
//	80844E38: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80844E3C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80844E40: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80844E48: 80845AE0 (__vt__8cM3dGAab)
//	80844E4C: 80845AE0 (__vt__8cM3dGAab)
//	80844E54: 80845AD4 (__vt__8cM3dGCyl)
//	80844E58: 80845AD4 (__vt__8cM3dGCyl)
//	80844E60: 803C35A4 (__vt__12cCcD_CylAttr)
//	80844E64: 803C35A4 (__vt__12cCcD_CylAttr)
//	80844E70: 803AC050 (__vt__8dCcD_Cyl)
//	80844E74: 803AC050 (__vt__8dCcD_Cyl)
//	80844E8C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80844E90: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80844E94: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80844E9C: 80845AE0 (__vt__8cM3dGAab)
//	80844EA0: 80845AE0 (__vt__8cM3dGAab)
//	80844EA8: 80845AC8 (__vt__8cM3dGSph)
//	80844EAC: 80845AC8 (__vt__8cM3dGSph)
//	80844EB4: 803C3540 (__vt__12cCcD_SphAttr)
//	80844EB8: 803C3540 (__vt__12cCcD_SphAttr)
//	80844EC8: 803ABFC0 (__vt__8dCcD_Sph)
//	80844ECC: 803ABFC0 (__vt__8dCcD_Sph)
//	80844EE8: 802C4FFC (__ct__14Z2CreatureRideFv)
//	80844EF0: 80844FEC (__ct__13daHorseRein_cFv)
//	80844EF4: 80844FEC (__ct__13daHorseRein_cFv)
//	80844EF8: 80844FB0 (__dt__13daHorseRein_cFv)
//	80844EFC: 80844FB0 (__dt__13daHorseRein_cFv)
//	80844F08: 80361D60 (__construct_array)
//	80844F0C: 80845AB4 (__vt__18mDoExt_3DlineMat_c)
//	80844F10: 80845AB4 (__vt__18mDoExt_3DlineMat_c)
//	80844F18: 803A3248 (__vt__19mDoExt_3DlineMat1_c)
//	80844F1C: 803A3248 (__vt__19mDoExt_3DlineMat1_c)
//	80844F28: 80249F00 (__ct__10dMsgFlow_cFv)
//	80844F30: 8015ECFC (clearData__16daPy_actorKeep_cFv)
//	80844F38: 80844FAC (__ct__17daHorseFootData_cFv)
//	80844F3C: 80844FAC (__ct__17daHorseFootData_cFv)
//	80844F40: 80844F70 (__dt__17daHorseFootData_cFv)
//	80844F44: 80844F70 (__dt__17daHorseFootData_cFv)
//	80844F50: 80361D60 (__construct_array)
//	80844F5C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daHorse_c::daHorse_c() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__ct__9daHorse_cFv.s"
}
#pragma pop


/* 80844F70-80844FAC 003C+00 s=2 e=0 z=0  None .text      __dt__17daHorseFootData_cFv                                  */
//	80844F90: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daHorseFootData_c::~daHorseFootData_c() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__17daHorseFootData_cFv.s"
}
#pragma pop


/* 80844FAC-80844FB0 0004+00 s=1 e=0 z=0  None .text      __ct__17daHorseFootData_cFv                                  */
// True False
daHorseFootData_c::daHorseFootData_c() {
	/* empty function */
}


/* 80844FB0-80844FEC 003C+00 s=2 e=0 z=0  None .text      __dt__13daHorseRein_cFv                                      */
//	80844FD0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daHorseRein_c::~daHorseRein_c() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__13daHorseRein_cFv.s"
}
#pragma pop


/* 80844FEC-80844FF0 0004+00 s=1 e=0 z=0  None .text      __ct__13daHorseRein_cFv                                      */
// True False
daHorseRein_c::daHorseRein_c() {
	/* empty function */
}


/* 80844FF0-80845038 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80845008: 80845AC8 (__vt__8cM3dGSph)
//	8084500C: 80845AC8 (__vt__8cM3dGSph)
//	8084501C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80845038-80845080 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80845050: 80845AD4 (__vt__8cM3dGCyl)
//	80845054: 80845AD4 (__vt__8cM3dGCyl)
//	80845064: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80845080-808450C8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80845098: 80845AE0 (__vt__8cM3dGAab)
//	8084509C: 80845AE0 (__vt__8cM3dGAab)
//	808450AC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 808450C8-80845194 00CC+00 s=2 e=0 z=0  None .text      __dt__8dCcD_CylFv                                            */
//	808450E8: 803AC050 (__vt__8dCcD_Cyl)
//	808450EC: 803AC050 (__vt__8dCcD_Cyl)
//	8084510C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80845110: 803C35A4 (__vt__12cCcD_CylAttr)
//	80845128: 80845AD4 (__vt__8cM3dGCyl)
//	8084512C: 80845AD4 (__vt__8cM3dGCyl)
//	8084513C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80845140: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80845150: 80845AE0 (__vt__8cM3dGAab)
//	80845154: 80845AE0 (__vt__8cM3dGAab)
//	80845164: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80845174: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::~dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__8dCcD_CylFv.s"
}
#pragma pop


/* 80845194-80845218 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_CylFv                                            */
//	808451A8: 80083A28 (__ct__12dCcD_GObjInfFv)
//	808451AC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	808451B0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	808451B8: 80845AE0 (__vt__8cM3dGAab)
//	808451BC: 80845AE0 (__vt__8cM3dGAab)
//	808451C4: 80845AD4 (__vt__8cM3dGCyl)
//	808451C8: 80845AD4 (__vt__8cM3dGCyl)
//	808451D0: 803C35A4 (__vt__12cCcD_CylAttr)
//	808451D4: 803C35A4 (__vt__12cCcD_CylAttr)
//	808451E4: 803AC050 (__vt__8dCcD_Cyl)
//	808451E8: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__ct__8dCcD_CylFv.s"
}
#pragma pop


/* 80845218-80845274 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80845230: 80845AA8 (__vt__10dCcD_GStts)
//	80845234: 80845AA8 (__vt__10dCcD_GStts)
//	80845240: 80845A9C (__vt__10cCcD_GStts)
//	80845244: 80845A9C (__vt__10cCcD_GStts)
//	80845258: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80845274-808452E4 0070+00 s=3 e=0 z=0  None .text      __dt__14dBgS_HorseAcchFv                                     */
//	80845294: 80845AEC (__vt__14dBgS_HorseAcch)
//	80845298: 80845AEC (__vt__14dBgS_HorseAcch)
//	808452B4: 80075F94 (__dt__9dBgS_AcchFv)
//	808452C4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_HorseAcch::~dBgS_HorseAcch() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__14dBgS_HorseAcchFv.s"
}
#pragma pop


/* 808452E4-80845354 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80845304: 80845A90 (__vt__12dBgS_AcchCir)
//	80845308: 80845A90 (__vt__12dBgS_AcchCir)
//	80845318: 8026EF18 (__dt__8cM3dGCirFv)
//	80845324: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80845334: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80845354-808453B0 005C+00 s=3 e=0 z=0  None .text      __dt__16daPy_frameCtrl_cFv                                   */
//	8084536C: 80845A84 (__vt__16daPy_frameCtrl_c)
//	80845370: 80845A84 (__vt__16daPy_frameCtrl_c)
//	8084537C: 80845B10 (__vt__12J3DFrameCtrl)
//	80845380: 80845B10 (__vt__12J3DFrameCtrl)
//	80845394: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daPy_frameCtrl_c::~daPy_frameCtrl_c() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__16daPy_frameCtrl_cFv.s"
}
#pragma pop


/* 808453B0-808453FC 004C+00 s=1 e=0 z=0  None .text      __ct__16daPy_frameCtrl_cFv                                   */
//	808453C4: 80845B10 (__vt__12J3DFrameCtrl)
//	808453C8: 80845B10 (__vt__12J3DFrameCtrl)
//	808453D4: 803283FC (init__12J3DFrameCtrlFs)
//	808453D8: 80845A84 (__vt__16daPy_frameCtrl_c)
//	808453DC: 80845A84 (__vt__16daPy_frameCtrl_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daPy_frameCtrl_c::daPy_frameCtrl_c() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__ct__16daPy_frameCtrl_cFv.s"
}
#pragma pop


/* 808453FC-80845438 003C+00 s=2 e=0 z=0  None .text      __dt__19mDoExt_AnmRatioPackFv                                */
//	8084541C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm mDoExt_AnmRatioPack::~mDoExt_AnmRatioPack() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__19mDoExt_AnmRatioPackFv.s"
}
#pragma pop


/* 80845438-80845450 0018+00 s=1 e=0 z=0  None .text      __ct__19mDoExt_AnmRatioPackFv                                */
//	80845438: 808455FC (lit_4306)
//	8084543C: 808455FC (lit_4306)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm mDoExt_AnmRatioPack::mDoExt_AnmRatioPack() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__ct__19mDoExt_AnmRatioPackFv.s"
}
#pragma pop


/* 80845450-80845498 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80845468: 80845B10 (__vt__12J3DFrameCtrl)
//	8084546C: 80845B10 (__vt__12J3DFrameCtrl)
//	8084547C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/d_a_horse/d_a_horse/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80845C28-80845C38 000C+04 s=0 e=0 z=0  None .bss       @7279                                                        */
u8 lit_7279[12 + 4 /* padding */];

/* 80845C38-80845C44 000C+00 s=0 e=0 z=0  None .bss       localEyePos$7278                                             */
u8 data_80845C38[12];

/* 80845C44-80845C54 000C+04 s=0 e=0 z=0  None .bss       @7469                                                        */
u8 lit_7469[12 + 4 /* padding */];

/* 80845C54-80845C60 000C+00 s=0 e=0 z=0  None .bss       runScale$7468                                                */
u8 data_80845C54[12];

/* 80845C60-80845C70 000C+04 s=0 e=0 z=0  None .bss       @7473                                                        */
u8 lit_7473[12 + 4 /* padding */];

/* 80845C70-80845C7C 000C+00 s=0 e=0 z=0  None .bss       landScale$7472                                               */
u8 data_80845C70[12];

/* 80845C7C-80845C8C 000C+04 s=0 e=0 z=0  None .bss       @7477                                                        */
u8 lit_7477[12 + 4 /* padding */];

/* 80845C8C-80845C98 000C+00 s=0 e=0 z=0  None .bss       grassRunScale$7476                                           */
u8 data_80845C8C[12];

/* 80845C98-80845CA8 000C+04 s=0 e=0 z=0  None .bss       @7481                                                        */
u8 lit_7481[12 + 4 /* padding */];

/* 80845CA8-80845CB4 000C+00 s=0 e=0 z=0  None .bss       waterDirection$7480                                          */
u8 data_80845CA8[12];

/* 80845CB4-80845CC4 000C+04 s=0 e=0 z=0  None .bss       @8516                                                        */
u8 lit_8516[12 + 4 /* padding */];

/* 80845CC4-80845CD0 000C+00 s=0 e=0 z=0  None .bss       reinLeftStart$8515                                           */
u8 data_80845CC4[12];

/* 80845CD0-80845CE0 000C+04 s=0 e=0 z=0  None .bss       @8520                                                        */
u8 lit_8520[12 + 4 /* padding */];

/* 80845CE0-80845CEC 000C+00 s=0 e=0 z=0  None .bss       reinRightStart$8519                                          */
u8 data_80845CE0[12];

/* 80845CEC-80845CFC 000C+04 s=0 e=0 z=0  None .bss       @8524                                                        */
u8 lit_8524[12 + 4 /* padding */];

/* 80845CFC-80845D08 000C+00 s=0 e=0 z=0  None .bss       localNeckLeft$8523                                           */
u8 data_80845CFC[12];

/* 80845D08-80845D18 000C+04 s=0 e=0 z=0  None .bss       @8528                                                        */
u8 lit_8528[12 + 4 /* padding */];

/* 80845D18-80845D24 000C+00 s=0 e=0 z=0  None .bss       localNeckRight$8527                                          */
u8 data_80845D18[12];

/* 80845D24-80845D34 000C+04 s=0 e=0 z=0  None .bss       @8753                                                        */
u8 lit_8753[12 + 4 /* padding */];

/* 80845D34-80845D40 000C+00 s=0 e=0 z=0  None .bss       saddleLeft$8752                                              */
u8 data_80845D34[12];

/* 80845D40-80845D50 000C+04 s=0 e=0 z=0  None .bss       @8757                                                        */
u8 lit_8757[12 + 4 /* padding */];

/* 80845D50-80845D5C 000C+00 s=0 e=0 z=0  None .bss       saddleRight$8756                                             */
u8 data_80845D50[12];

/* 80845D5C-80845D6C 000C+04 s=0 e=0 z=0  None .bss       @8813                                                        */
u8 lit_8813[12 + 4 /* padding */];

/* 80845D6C-80845D78 000C+00 s=0 e=0 z=0  None .bss       localCenterPos$8812                                          */
u8 data_80845D6C[12];

/* 80845D78-80845D88 000C+04 s=0 e=0 z=0  None .bss       @8817                                                        */
u8 lit_8817[12 + 4 /* padding */];

/* 80845D88-80845D94 000C+00 s=0 e=0 z=0  None .bss       localFrontPos$8816                                           */
u8 data_80845D88[12];

/* 80845D94-80845DA4 000C+04 s=0 e=0 z=0  None .bss       @8821                                                        */
u8 lit_8821[12 + 4 /* padding */];

/* 80845DA4-80845DB0 000C+00 s=0 e=0 z=0  None .bss       localBackPos$8820                                            */
u8 data_80845DA4[12];

/* 80845DB0-80845DB4 0004+00 s=0 e=0 z=0  None .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_80845DB0[4];

/* 80845DB4-80845DB8 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_80845DB4[4];

/* 80845DB8-80845DBC 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_80845DB8[4];

/* 80845DBC-80845DC0 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_80845DBC[4];

/* 80845DC0-80845DC4 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_80845DC0[4];

/* 80845DC4-80845DC8 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_80845DC4[4];

/* 80845DC8-80845DCC 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_80845DC8[4];

/* 80845DCC-80845DD0 0004+00 s=0 e=0 z=0  None .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_80845DCC[4];

/* 80845DD0-80845DD4 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_80845DD0[4];

/* 80845DD4-80845DD8 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_80845DD4[4];

/* 80845DD8-80845DDC 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_80845DD8[4];

/* 80845DDC-80845DE0 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_80845DDC[4];

/* 80845DE0-80845DE4 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_80845DE0[4];

/* 80845DE4-80845DE8 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_80845DE4[4];

/* 80845DE8-80845DEC 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_80845DE8[4];

/* 80845DEC-80845DF0 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_80845DEC[4];

/* 80845DF0-80845DF4 0004+00 s=0 e=0 z=0  None .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_80845DF0[4];

/* 80845DF4-80845DF8 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_80845DF4[4];

/* 80845DF8-80845DFC 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_80845DF8[4];

/* 80845DFC-80845E00 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_80845DFC[4];

/* 80845E00-80845E04 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_80845E00[4];

/* 80845E04-80845E08 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_80845E04[4];

/* 80845E08-80845E0C 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_80845E08[4];

/* 80845E0C-80845E10 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_80845E0C[4];

/* 80845E10-80845E14 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_80845E10[4];

/* 80845E14-80845E18 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JAUSectionHeap>             */
u8 data_80845E14[4];

