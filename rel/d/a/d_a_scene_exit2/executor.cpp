// 
// Generated By: dol2asm
// Translation Unit: executor
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/d_a_scene_exit2/executor.h"

// 
// Forward References:
// 


// False False
extern "C" void _prolog();
// False False
extern "C" void _epilog();
// False False
extern "C" void _unresolved();

// 
// External References:
// 


// False False
//  void False
extern "C" void ModuleProlog();
// False False
//  void False
extern "C" void ModuleEpilog();
// False False
extern "C" void ModuleUnresolved();
// False False
extern "C" void ModuleConstructorsX();
// False False
extern "C" void ModuleDestructorsX();
extern u8 const data_8059E7EC[4];
extern u8 const data_8059E7F0[4];

// 
// Declarations:
// 

/* 8059E0E0-8059E10C 002C+00 s=0 e=0 z=0  None .text      _prolog                                                      */
//	8059E0EC: 8059E7EC (data_8059E7EC)
//	8059E0F0: 8059E7EC (data_8059E7EC)
//	8059E0F4: 8026314C (ModuleConstructorsX)
//	8059E0F8: 80263088 (ModuleProlog)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void _prolog() {
	nofralloc
#include "asm/rel/d/a/d_a_scene_exit2/executor/_prolog.s"
}
#pragma pop


/* 8059E10C-8059E138 002C+00 s=0 e=0 z=0  None .text      _epilog                                                      */
//	8059E118: 8026308C (ModuleEpilog)
//	8059E11C: 8059E7F0 (data_8059E7F0)
//	8059E120: 8059E7F0 (data_8059E7F0)
//	8059E124: 80263190 (ModuleDestructorsX)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void _epilog() {
	nofralloc
#include "asm/rel/d/a/d_a_scene_exit2/executor/_epilog.s"
}
#pragma pop


/* 8059E138-8059E158 0020+00 s=0 e=0 z=0  None .text      _unresolved                                                  */
//	8059E144: 80263090 (ModuleUnresolved)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void _unresolved() {
	nofralloc
#include "asm/rel/d/a/d_a_scene_exit2/executor/_unresolved.s"
}
#pragma pop


