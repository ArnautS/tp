// 
// Generated By: dol2asm
// Translation Unit: d_a_L7demo_dr
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct cXyz {
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct daDr_c {
	/* 805A9238 */ // True False
//  void (daDr_c::*)() False
// 	 * False
// 		  False
// 	 void False
// 	 daDr_c False
void setAction(void (daDr_c::*)());
	/* 805A92DC */ // True False
void action();
	/* 805A9304 */ // True False
void mtx_set();
	/* 805A93D4 */ // True False
void draw();
	/* 805A9478 */ // True False
void wait();
	/* 805A963C */ // True False
void pl_walk();
	/* 805A9914 */ // True False
void pl_turn();
	/* 805A9A34 */ // True False
void bridge_destroy();
	/* 805A9D10 */ // True False
void bridge_destroy2();
	/* 805A9EE4 */ // True False
void execute();
	/* 805A9FFC */ // True False
void _delete();
	/* 805AA084 */ // True False
void CreateHeap();
	/* 805AA19C */ // True False
void check_start();
	/* 805AA224 */ // True False
void create();
};

struct dVibration_c {
	/* 8006FB10 */ // False False
//  int False
//  int False
//  cXyz False
void StartQuake(int, int, cXyz);
	/* 8006FD94 */ // False False
//  int False
void StopQuake(int);
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dComIfG_play_c {
	/* 8002C97C */ // False False
//  int False
void getLayerNo(int);
};

struct dCamera_c {
	/* 801614AC */ // False False
void Start();
	/* 801614D0 */ // False False
void Stop();
	/* 8016300C */ // False False
//  s32 False
void SetTrimSize(s32);
	/* 80180AA8 */ // False False
//  cXyz False
//  cXyz False
void Set(cXyz, cXyz);
};

struct Vec {
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

// 
// Forward References:
// 

// True False
//  daDr_c* False
// 	 daDr_c False
static void daDr_Draw(daDr_c*);
// True False
//  daDr_c* False
// 	 daDr_c False
static void daDr_Execute(daDr_c*);
// True False
//  bool False
//  daDr_c* False
// 	 daDr_c False
static bool daDr_IsDelete(daDr_c*);
// True False
//  daDr_c* False
// 	 daDr_c False
static void daDr_Delete(daDr_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  daDr_c* False
// 	 daDr_c False
static void daDr_Create(daDr_c*);

// True False
//  void (daDr_c::*)() False
// 	 * False
// 		  False
// 	 void False
// 	 daDr_c False
extern "C" void setAction__6daDr_cFM6daDr_cFPCvPv_v();
// True False
extern "C" void action__6daDr_cFv();
// True False
extern "C" void mtx_set__6daDr_cFv();
// True False
extern "C" void draw__6daDr_cFv();
// True False
//  daDr_c* False
// 	 daDr_c False
extern "C" static void daDr_Draw__FP6daDr_c();
// True False
extern "C" void wait__6daDr_cFv();
// True False
extern "C" void pl_walk__6daDr_cFv();
// True False
extern "C" void pl_turn__6daDr_cFv();
// True False
extern "C" void bridge_destroy__6daDr_cFv();
// True False
extern "C" void bridge_destroy2__6daDr_cFv();
// True False
extern "C" void execute__6daDr_cFv();
// True False
//  daDr_c* False
// 	 daDr_c False
extern "C" static void daDr_Execute__FP6daDr_c();
// True False
//  bool False
//  daDr_c* False
// 	 daDr_c False
extern "C" static bool daDr_IsDelete__FP6daDr_c();
// True False
extern "C" void _delete__6daDr_cFv();
// True False
//  daDr_c* False
// 	 daDr_c False
extern "C" static void daDr_Delete__FP6daDr_c();
// True False
extern "C" void CreateHeap__6daDr_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void check_start__6daDr_cFv();
// True False
extern "C" void create__6daDr_cFv();
// True False
//  daDr_c* False
// 	 daDr_c False
extern "C" static void daDr_Create__FP6daDr_c();
extern "C" extern u32 const lit_3865;
extern "C" extern u32 const lit_3866;
extern "C" extern u32 const lit_3946;
extern "C" extern u32 const lit_3947;
extern "C" extern u32 const lit_3948;
extern "C" extern u32 const lit_3949;
extern "C" extern u32 const lit_3950;
extern "C" extern u32 const lit_3952;
extern "C" extern u32 const lit_4123;
extern "C" extern u32 const lit_4124;
extern "C" extern u32 const lit_4125;
extern "C" extern u32 const lit_4126;
extern "C" extern u32 const lit_4127;
extern "C" extern u32 const lit_4182;
extern "C" extern u32 const lit_4183;
extern "C" extern u32 const lit_4184;
extern "C" extern u32 const lit_4185;
extern "C" extern u32 const lit_4186;
extern "C" extern u32 const lit_4290;
extern "C" extern u32 const lit_4291;
extern "C" extern u32 const lit_4292;
extern "C" extern u32 const lit_4293;
extern "C" extern u32 const lit_4370;
extern "C" extern u32 const lit_4371;
extern "C" extern u32 const lit_4372;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_DR[12];

// 
// External References:
// 

// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderPotentialEvent(fopAc_ac_c*, u16, u16, u16);
// False False
void fopOvlpM_IsPeek();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeForPName(void*, void*);
// False False
//  int False
//  f32 False
//  u32 False
//  s8 False
//  s16 False
//  int False
void dStage_changeScene(int, f32, u32, s8, s16, int);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);

// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs();
// False False
extern "C" void fopOvlpM_IsPeek__Fv();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeForPName__FPvPv();
// False False
//  int False
//  f32 False
//  u32 False
//  s8 False
//  s16 False
//  int False
extern "C" void dStage_changeScene__FifUlScsi();
// False False
//  int False
extern "C" void getLayerNo__14dComIfG_play_cFi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartQuake__12dVibration_cFii4cXyz();
// False False
//  int False
extern "C" void StopQuake__12dVibration_cFi();
// False False
extern "C" void Start__9dCamera_cFv();
// False False
extern "C" void Stop__9dCamera_cFv();
// False False
//  s32 False
extern "C" void SetTrimSize__9dCamera_cFl();
// False False
//  cXyz False
//  cXyz False
extern "C" void Set__9dCamera_cF4cXyz4cXyz();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];

// 
// Declarations:
// 

/* 805A9238-805A92DC 00A4+00 s=5 e=0 z=0  None .text      setAction__6daDr_cFM6daDr_cFPCvPv_v                          */
//	805A9258: 80362018 (__ptmf_test)
//	805A9274: 80362084 (__ptmf_scall)
//	805A92BC: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void (daDr_c::*)() False
// 	 * False
// 		  False
// 	 void False
// 	 daDr_c False
asm void daDr_c::setAction(void (daDr_c::*)()) {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/setAction__6daDr_cFM6daDr_cFPCvPv_v.s"
}
#pragma pop


/* 805A92DC-805A9304 0028+00 s=1 e=0 z=0  None .text      action__6daDr_cFv                                            */
//	805A92EC: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::action() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/action__6daDr_cFv.s"
}
#pragma pop


/* 805A9304-805A93D4 00D0+00 s=1 e=0 z=0  None .text      mtx_set__6daDr_cFv                                           */
//	805A9330: 803DD470 (now__14mDoMtx_stack_c)
//	805A9334: 803DD470 (now__14mDoMtx_stack_c)
//	805A9338: 803464B0 (PSMTXCopy)
//	805A933C: 803DD470 (now__14mDoMtx_stack_c)
//	805A9340: 803DD470 (now__14mDoMtx_stack_c)
//	805A9360: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	805A9368: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	805A9384: 803DD470 (now__14mDoMtx_stack_c)
//	805A9388: 803DD470 (now__14mDoMtx_stack_c)
//	805A9390: 803464B0 (PSMTXCopy)
//	805A9398: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::mtx_set() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/mtx_set__6daDr_cFv.s"
}
#pragma pop


/* 805A93D4-805A9458 0084+00 s=1 e=0 z=0  None .text      draw__6daDr_cFv                                              */
//	805A9408: 8042CA54 (g_env_light)
//	805A940C: 8042CA54 (g_env_light)
//	805A941C: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	805A9420: 8042CA54 (g_env_light)
//	805A9424: 8042CA54 (g_env_light)
//	805A9430: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	805A9438: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::draw() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/draw__6daDr_cFv.s"
}
#pragma pop


/* 805A9458-805A9478 0020+00 s=1 e=0 z=0  None .text      daDr_Draw__FP6daDr_c                                         */
//	805A9464: 805A93D4 (draw__6daDr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daDr_c* False
// 	 daDr_c False
asm static void daDr_Draw(daDr_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/daDr_Draw__FP6daDr_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 805AA454-805AA458 0004+00 s=6 e=0 z=0  None .rodata    @3864                                                        */
SECTION_RODATA static u32 const lit_3864 = 0xC5E10000;

/* 805AA4D0-805AA4DC 000C+00 s=1 e=0 z=0  None .data      @3830                                                        */
SECTION_DATA static void* lit_3830[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)pl_walk__6daDr_cFv,
};

/* 805AA4DC-805AA4E8 000C+00 s=1 e=0 z=0  None .data      @3833                                                        */
SECTION_DATA static void* lit_3833[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)pl_turn__6daDr_cFv,
};

/* 805A9478-805A963C 01C4+00 s=2 e=0 z=0  None .text      wait__6daDr_cFv                                              */
//	805A9488: 803621DC (_savegpr_29)
//	805A9490: 805AA454 (lit_3864)
//	805A9494: 805AA454 (lit_3864)
//	805A94E4: 804061C0 (g_dComIfG_gameInfo)
//	805A94E8: 804061C0 (g_dComIfG_gameInfo)
//	805A9514: 801614D0 (Stop__9dCamera_cFv)
//	805A9520: 8016300C (SetTrimSize__9dCamera_cFl)
//	805A9524: 804061C0 (g_dComIfG_gameInfo)
//	805A9528: 804061C0 (g_dComIfG_gameInfo)
//	805A9544: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	805A9550: 805AA4D0 (lit_3830)
//	805A9554: 805AA4D0 (lit_3830)
//	805A9578: 805A9238 (setAction__6daDr_cFM6daDr_cFPCvPv_v)
//	805A9580: 805AA4DC (lit_3833)
//	805A9584: 805AA4DC (lit_3833)
//	805A95A8: 805A9238 (setAction__6daDr_cFM6daDr_cFPCvPv_v)
//	805A95B4: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	805A95C4: 805AA19C (check_start__6daDr_cFv)
//	805A95E4: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	805A9628: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::wait() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/wait__6daDr_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 805AA4E8-805AA4F4 000C+00 s=1 e=0 z=0  None .data      @3886                                                        */
SECTION_DATA static void* lit_3886[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)pl_turn__6daDr_cFv,
};

/* 805A963C-805A9914 02D8+00 s=1 e=0 z=0  None .text      pl_walk__6daDr_cFv                                           */
//	805A964C: 803621DC (_savegpr_29)
//	805A9654: 805AA454 (lit_3864)
//	805A9658: 805AA454 (lit_3864)
//	805A965C: 804061C0 (g_dComIfG_gameInfo)
//	805A9660: 804061C0 (g_dComIfG_gameInfo)
//	805A96F0: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	805A97F0: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	805A9898: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	805A98C0: 80027170 (dStage_changeScene__FifUlScsi)
//	805A98C8: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	805A98D0: 805AA4E8 (lit_3886)
//	805A98D4: 805AA4E8 (lit_3886)
//	805A98F8: 805A9238 (setAction__6daDr_cFM6daDr_cFPCvPv_v)
//	805A9900: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::pl_walk() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/pl_walk__6daDr_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 805AA4F4-805AA500 000C+00 s=1 e=0 z=0  None .data      @3978                                                        */
SECTION_DATA static void* lit_3978[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)bridge_destroy__6daDr_cFv,
};

/* 805A9914-805A9A34 0120+00 s=2 e=0 z=0  None .text      pl_turn__6daDr_cFv                                           */
//	805A9928: 804061C0 (g_dComIfG_gameInfo)
//	805A992C: 804061C0 (g_dComIfG_gameInfo)
//	805A995C: 8001E558 (fopOvlpM_IsPeek__Fv)
//	805A99F8: 805AA4F4 (lit_3978)
//	805A99FC: 805AA4F4 (lit_3978)
//	805A9A1C: 805A9238 (setAction__6daDr_cFM6daDr_cFPCvPv_v)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::pl_turn() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/pl_turn__6daDr_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 805AA500-805AA50C 000C+00 s=1 e=0 z=0  None .data      @4041                                                        */
SECTION_DATA static void* lit_4041[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)bridge_destroy2__6daDr_cFv,
};

/* 805A9A34-805A9D10 02DC+00 s=1 e=0 z=0  None .text      bridge_destroy__6daDr_cFv                                    */
//	805A9A44: 803621DC (_savegpr_29)
//	805A9A4C: 805AA454 (lit_3864)
//	805A9A50: 805AA454 (lit_3864)
//	805A9A54: 804061C0 (g_dComIfG_gameInfo)
//	805A9A58: 804061C0 (g_dComIfG_gameInfo)
//	805A9B18: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	805A9BB4: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	805A9BCC: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	805A9BD0: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	805A9BD8: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805A9C00: 804061C0 (g_dComIfG_gameInfo)
//	805A9C04: 804061C0 (g_dComIfG_gameInfo)
//	805A9C18: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	805A9CD0: 805AA500 (lit_4041)
//	805A9CD4: 805AA500 (lit_4041)
//	805A9CF4: 805A9238 (setAction__6daDr_cFM6daDr_cFPCvPv_v)
//	805A9CFC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::bridge_destroy() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/bridge_destroy__6daDr_cFv.s"
}
#pragma pop


/* 805A9D10-805A9EE4 01D4+00 s=1 e=0 z=0  None .text      bridge_destroy2__6daDr_cFv                                   */
//	805A9D20: 803621DC (_savegpr_29)
//	805A9D28: 805AA454 (lit_3864)
//	805A9D2C: 805AA454 (lit_3864)
//	805A9D30: 804061C0 (g_dComIfG_gameInfo)
//	805A9D34: 804061C0 (g_dComIfG_gameInfo)
//	805A9D60: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	805A9D64: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	805A9D6C: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	805A9DF4: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	805A9E4C: 8006FD94 (StopQuake__12dVibration_cFi)
//	805A9E6C: 804061C0 (g_dComIfG_gameInfo)
//	805A9E70: 804061C0 (g_dComIfG_gameInfo)
//	805A9E7C: 80035200 (onSwitch__10dSv_info_cFii)
//	805A9E84: 801614AC (Start__9dCamera_cFv)
//	805A9E90: 8016300C (SetTrimSize__9dCamera_cFl)
//	805A9E94: 804061C0 (g_dComIfG_gameInfo)
//	805A9E98: 804061C0 (g_dComIfG_gameInfo)
//	805A9EA0: 80042468 (reset__14dEvt_control_cFv)
//	805A9EC0: 80027170 (dStage_changeScene__FifUlScsi)
//	805A9EC8: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	805A9ED0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::bridge_destroy2() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/bridge_destroy2__6daDr_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 805AA458-805AA45C 0004+00 s=0 e=0 z=0  None .rodata    @3865                                                        */
SECTION_RODATA u32 const lit_3865 = 0xC3480000;

/* 805AA45C-805AA460 0004+00 s=0 e=0 z=0  None .rodata    @3866                                                        */
SECTION_RODATA u32 const lit_3866 = 0xC6428800;

/* 805AA460-805AA464 0004+00 s=0 e=0 z=0  None .rodata    @3946                                                        */
SECTION_RODATA u32 const lit_3946 = 0xC588F800;

/* 805AA464-805AA468 0004+00 s=0 e=0 z=0  None .rodata    @3947                                                        */
SECTION_RODATA u32 const lit_3947 = 0x438E8000;

/* 805AA468-805AA46C 0004+00 s=0 e=0 z=0  None .rodata    @3948                                                        */
SECTION_RODATA u32 const lit_3948 = 0xC5928000;

/* 805AA46C-805AA470 0004+00 s=0 e=0 z=0  None .rodata    @3949                                                        */
SECTION_RODATA u32 const lit_3949 = 0x43AA0000;

/* 805AA470-805AA474 0004+00 s=0 e=0 z=0  None .rodata    @3950                                                        */
SECTION_RODATA u32 const lit_3950 = 0xC58B1000;

/* 805AA474-805AA478 0004+00 s=1 e=0 z=0  None .rodata    @3951                                                        */
SECTION_RODATA static u8 const lit_3951[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 805AA478-805AA47C 0004+00 s=0 e=0 z=0  None .rodata    @3952                                                        */
SECTION_RODATA u32 const lit_3952 = 0xC5802000;

/* 805AA47C-805AA480 0004+00 s=0 e=0 z=0  None .rodata    @4123                                                        */
SECTION_RODATA u32 const lit_4123 = 0x3F800000;

/* 805AA480-805AA484 0004+00 s=0 e=0 z=0  None .rodata    @4124                                                        */
SECTION_RODATA u32 const lit_4124 = 0xC58FC000;

/* 805AA484-805AA488 0004+00 s=0 e=0 z=0  None .rodata    @4125                                                        */
SECTION_RODATA u32 const lit_4125 = 0x42A00000;

/* 805AA488-805AA48C 0004+00 s=0 e=0 z=0  None .rodata    @4126                                                        */
SECTION_RODATA u32 const lit_4126 = 0x431C0000;

/* 805AA48C-805AA490 0004+00 s=0 e=0 z=0  None .rodata    @4127                                                        */
SECTION_RODATA u32 const lit_4127 = 0x43520000;

/* 805AA490-805AA494 0004+00 s=0 e=0 z=0  None .rodata    @4182                                                        */
SECTION_RODATA u32 const lit_4182 = 0xC5D16000;

/* 805AA494-805AA498 0004+00 s=0 e=0 z=0  None .rodata    @4183                                                        */
SECTION_RODATA u32 const lit_4183 = 0xC4548000;

/* 805AA498-805AA49C 0004+00 s=0 e=0 z=0  None .rodata    @4184                                                        */
SECTION_RODATA u32 const lit_4184 = 0xC69E9800;

/* 805AA49C-805AA4A0 0004+00 s=0 e=0 z=0  None .rodata    @4185                                                        */
SECTION_RODATA u32 const lit_4185 = 0xC4610000;

/* 805AA4A0-805AA4A4 0004+00 s=0 e=0 z=0  None .rodata    @4186                                                        */
SECTION_RODATA u32 const lit_4186 = 0xC6A1B800;

/* 805AA4A4-805AA4A8 0004+00 s=1 e=0 z=0  None .rodata    @4217                                                        */
SECTION_RODATA static u32 const lit_4217 = 0x42E60000;

/* 805AA4A8-805AA4AC 0004+00 s=1 e=0 z=0  None .rodata    @4218                                                        */
SECTION_RODATA static u32 const lit_4218 = 0x43130000;

/* 805A9EE4-805A9FD4 00F0+00 s=1 e=0 z=0  None .text      execute__6daDr_cFv                                           */
//	805A9F10: 805A92DC (action__6daDr_cFv)
//	805A9F18: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	805A9F34: 805AA4A4 (lit_4217)
//	805A9F38: 805AA4A4 (lit_4217)
//	805A9F44: 805AA4A8 (lit_4218)
//	805A9F48: 805AA4A8 (lit_4218)
//	805A9FA0: 8002D06C (dComIfGp_getReverb__Fi)
//	805A9FB0: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	805A9FB8: 805A9304 (mtx_set__6daDr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::execute() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/execute__6daDr_cFv.s"
}
#pragma pop


/* 805A9FD4-805A9FF4 0020+00 s=2 e=0 z=0  None .text      daDr_Execute__FP6daDr_c                                      */
//	805A9FE0: 805A9EE4 (execute__6daDr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daDr_c* False
// 	 daDr_c False
asm static void daDr_Execute(daDr_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/daDr_Execute__FP6daDr_c.s"
}
#pragma pop


/* 805A9FF4-805A9FFC 0008+00 s=1 e=0 z=0  None .text      daDr_IsDelete__FP6daDr_c                                     */
// True False
//  bool False
//  daDr_c* False
// 	 daDr_c False
static bool daDr_IsDelete(daDr_c* param_0) {
	return true;
}


/* ############################################################################################## */
/* 805AA4AC-805AA4B0 0004+00 s=0 e=0 z=0  None .rodata    @4290                                                        */
SECTION_RODATA u32 const lit_4290 = 0xC58C0000;

/* 805AA4B0-805AA4B4 0004+00 s=0 e=0 z=0  None .rodata    @4291                                                        */
SECTION_RODATA u32 const lit_4291 = 0xC5692000;

/* 805AA4B4-805AA4B8 0004+00 s=0 e=0 z=0  None .rodata    @4292                                                        */
SECTION_RODATA u32 const lit_4292 = 0xC6480000;

/* 805AA4B8-805AA4BC 0004+00 s=0 e=0 z=0  None .rodata    @4293                                                        */
SECTION_RODATA u32 const lit_4293 = 0xC63D1000;

/* 805AA4BC-805AA4C0 0004+00 s=0 e=0 z=0  None .rodata    @4370                                                        */
SECTION_RODATA u32 const lit_4370 = 0xC6A51A00;

/* 805AA4C0-805AA4C4 0004+00 s=0 e=0 z=0  None .rodata    @4371                                                        */
SECTION_RODATA u32 const lit_4371 = 0x4591A000;

/* 805AA4C4-805AA4C8 0004+00 s=0 e=0 z=0  None .rodata    @4372                                                        */
SECTION_RODATA u32 const lit_4372 = 0xC6C1A200;

/* 805AA4C8-805AA4CD 0005+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_805AA4C8 = "B_dr";
#pragma pop

/* 805A9FFC-805AA064 0068+00 s=1 e=0 z=0  None .text      _delete__6daDr_cFv                                           */
//	805AA020: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
//	805AA028: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	805AA040: 805AA4C8 (stringBase0)
//	805AA044: 805AA4C8 (stringBase0)
//	805AA048: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::_delete() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/_delete__6daDr_cFv.s"
}
#pragma pop


/* 805AA064-805AA084 0020+00 s=1 e=0 z=0  None .text      daDr_Delete__FP6daDr_c                                       */
//	805AA070: 805A9FFC (_delete__6daDr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daDr_c* False
// 	 daDr_c False
asm static void daDr_Delete(daDr_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/daDr_Delete__FP6daDr_c.s"
}
#pragma pop


/* 805AA084-805AA17C 00F8+00 s=1 e=0 z=0  None .text      CreateHeap__6daDr_cFv                                        */
//	805AA094: 803621D8 (_savegpr_28)
//	805AA09C: 805AA4C8 (stringBase0)
//	805AA0A0: 805AA4C8 (stringBase0)
//	805AA0A8: 804061C0 (g_dComIfG_gameInfo)
//	805AA0AC: 804061C0 (g_dComIfG_gameInfo)
//	805AA0C0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	805AA0CC: 802CEC4C (__nw__FUl)
//	805AA0D8: 805AA4C8 (stringBase0)
//	805AA0DC: 805AA4C8 (stringBase0)
//	805AA0EC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	805AA124: 805AA474 (lit_3951)
//	805AA128: 805AA474 (lit_3951)
//	805AA134: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	805AA168: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/CreateHeap__6daDr_cFv.s"
}
#pragma pop


/* 805AA17C-805AA19C 0020+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	805AA188: 805AA084 (CreateHeap__6daDr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 805AA19C-805AA224 0088+00 s=1 e=0 z=0  None .text      check_start__6daDr_cFv                                       */
//	805AA1A0: 805AA454 (lit_3864)
//	805AA1A4: 805AA454 (lit_3864)
//	805AA1A8: 804061C0 (g_dComIfG_gameInfo)
//	805AA1AC: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::check_start() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/check_start__6daDr_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 805AA50C-805AA518 000C+00 s=1 e=0 z=0  None .data      @4306                                                        */
SECTION_DATA static void* lit_4306[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__6daDr_cFv,
};

/* 805AA518-805AA524 000C+00 s=1 e=0 z=0  None .data      @4317                                                        */
SECTION_DATA static void* lit_4317[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__6daDr_cFv,
};

/* 805AA224-805AA42C 0208+00 s=1 e=0 z=0  None .text      create__6daDr_cFv                                            */
//	805AA234: 803621DC (_savegpr_29)
//	805AA23C: 805AA454 (lit_3864)
//	805AA240: 805AA454 (lit_3864)
//	805AA25C: 80018B64 (__ct__10fopAc_ac_cFv)
//	805AA264: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	805AA278: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	805AA288: 805AA4C8 (stringBase0)
//	805AA28C: 805AA4C8 (stringBase0)
//	805AA290: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	805AA2A4: 805AA17C (useHeapInit__FP10fopAc_ac_c)
//	805AA2A8: 805AA17C (useHeapInit__FP10fopAc_ac_c)
//	805AA2B0: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	805AA308: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	805AA328: 805AA50C (lit_4306)
//	805AA32C: 805AA50C (lit_4306)
//	805AA350: 805A9238 (setAction__6daDr_cFM6daDr_cFPCvPv_v)
//	805AA364: 804061C0 (g_dComIfG_gameInfo)
//	805AA368: 804061C0 (g_dComIfG_gameInfo)
//	805AA374: 80035360 (isSwitch__10dSv_info_cCFii)
//	805AA38C: 805A9FD4 (daDr_Execute__FP6daDr_c)
//	805AA3B8: 804061C0 (g_dComIfG_gameInfo)
//	805AA3BC: 804061C0 (g_dComIfG_gameInfo)
//	805AA3C8: 80035360 (isSwitch__10dSv_info_cCFii)
//	805AA3DC: 805AA518 (lit_4317)
//	805AA3E0: 805AA518 (lit_4317)
//	805AA404: 805A9238 (setAction__6daDr_cFM6daDr_cFPCvPv_v)
//	805AA40C: 805A9FD4 (daDr_Execute__FP6daDr_c)
//	805AA418: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daDr_c::create() {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/create__6daDr_cFv.s"
}
#pragma pop


/* 805AA42C-805AA44C 0020+00 s=1 e=0 z=0  None .text      daDr_Create__FP6daDr_c                                       */
//	805AA438: 805AA224 (create__6daDr_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daDr_c* False
// 	 daDr_c False
asm static void daDr_Create(daDr_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_L7demo_dr/d_a_L7demo_dr/daDr_Create__FP6daDr_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 805AA524-805AA544 0020+00 s=1 e=0 z=0  None .data      l_daDr_Method                                                */
SECTION_DATA static void* l_daDr_Method[8] = {
	(void*)daDr_Create__FP6daDr_c,
	(void*)daDr_Delete__FP6daDr_c,
	(void*)daDr_Execute__FP6daDr_c,
	(void*)daDr_IsDelete__FP6daDr_c,
	(void*)daDr_Draw__FP6daDr_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 805AA544-805AA574 0030+00 s=0 e=0 z=1  None .data      g_profile_DR                                                 */
SECTION_DATA void* g_profile_DR[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02030000,
	(void*)&g_fpcLf_Method,
	(void*)0x0000065C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00CE0000,
	(void*)&l_daDr_Method,
	(void*)0x00040000,
	(void*)0x020E0000,
};

