// 
// Generated By: dol2asm
// Translation Unit: d_a_tag_firewall
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall.h"

// 
// Types:
// 

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct daTag_FWall_c {
	/* 80D58940 */ // True False
void execute();
	/* 80D59078 */ // True False
//  bool False
bool _delete();
	/* 80D590A8 */ // True False
void create();
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80D5901C */ // True False
~cXyz();
	/* 80D594B0 */ // True False
cXyz();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct _GXColor {
};

struct dKy_tevstr_c {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 80D592D0 */ // True False
~dCcD_Sph();
	/* 80D5939C */ // True False
dCcD_Sph();
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
};

struct dCamera_c {
	/* 80181E64 */ // False False
void Eye();
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80D59420 */ // True False
~cM3dGSph();
};

struct cM3dGAab {
	/* 80D59468 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

// 
// Forward References:
// 

// True False
//  bool False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
static bool daTag_FWall_Draw(daTag_FWall_c*);
// True False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
static void daTag_FWall_Execute(daTag_FWall_c*);
// True False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
static void daTag_FWall_IsDelete(daTag_FWall_c*);
// True False
//  bool False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
static bool daTag_FWall_Delete(daTag_FWall_c*);
// True False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
static void daTag_FWall_Create(daTag_FWall_c*);

// True False
//  bool False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
extern "C" static bool daTag_FWall_Draw__FP13daTag_FWall_c();
// True False
extern "C" void execute__13daTag_FWall_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
extern "C" static void daTag_FWall_Execute__FP13daTag_FWall_c();
// True False
//  bool False
extern "C" bool _delete__13daTag_FWall_cFv();
// True False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
extern "C" static void daTag_FWall_IsDelete__FP13daTag_FWall_c();
// True False
//  bool False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
extern "C" static bool daTag_FWall_Delete__FP13daTag_FWall_c();
// True False
extern "C" void create__13daTag_FWall_cFv();
// True False
extern "C" void __dt__8dCcD_SphFv();
// True False
extern "C" void __ct__8dCcD_SphFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
extern "C" static void daTag_FWall_Create__FP13daTag_FWall_c();
extern "C" extern u32 const lit_3984;
extern "C" extern u32 const lit_3985;
extern "C" extern u32 const lit_3986;
extern "C" extern u8 const lit_3987[8];
extern "C" extern u8 const lit_3988[8];
extern "C" extern u8 const lit_3989[8];
extern "C" extern u32 const lit_3990;
extern "C" extern u32 const lit_3991;
extern "C" extern void* g_profile_Tag_FWall[12];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGSph[3];

// 
// External References:
// 

// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcM_fastCreate(s16, u32, cXyz const*, int, csXyz const*, cXyz const*, s8, int (*)(void*), void*);
// False False
void dCam_getBody();
// False False
//  u8* False
// 	 u8 False
//  u8 False
//  u8 False
void cLib_chaseUC(u8*, u8, u8);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
extern "C" void dCam_getBody__Fv();
// False False
extern "C" void Eye__9dCamera_cFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  u8* False
// 	 u8 False
//  u8 False
//  u8 False
extern "C" void cLib_chaseUC__FPUcUcUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_16();
// False False
extern "C" void _restgpr_16();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* 80D58938-80D58940 0008+00 s=1 e=0 z=0  None .text      daTag_FWall_Draw__FP13daTag_FWall_c                          */
// True False
//  bool False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
static bool daTag_FWall_Draw(daTag_FWall_c* param_0) {
	return true;
}


/* ############################################################################################## */
/* 80D594DC-80D594E0 0004+00 s=1 e=0 z=0  None .rodata    @3983                                                        */
SECTION_RODATA static u8 const lit_3983[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80D5950C-80D5954C 0040+00 s=1 e=0 z=0  None .data      cc_sph_src__11Tag_FWall_n                                    */
SECTION_DATA static u8 cc_sph_src__11Tag_FWall_n[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 80D5954C-80D59554 0008+00 s=1 e=0 z=0  None .data      game_over_eff_name__11Tag_FWall_n                            */
SECTION_DATA static u8 game_over_eff_name__11Tag_FWall_n[8] = {
	0x84, 0xCC, 0x84, 0xCD, 0x84, 0xCE, 0x84, 0xCF,
};

/* 80D595C0-80D595C4 0004+00 s=1 e=0 z=0  None .bss       fire_leader                                                  */
static u8 fire_leader[4];

/* 80D595C4-80D595C8 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_80D595C4[4];

/* 80D58940-80D5901C 06DC+00 s=1 e=0 z=0  None .text      execute__13daTag_FWall_cFv                                   */
//	80D58950: 803621A8 (_savegpr_16)
//	80D58958: 80D594DC (lit_3983)
//	80D5895C: 80D594DC (lit_3983)
//	80D58960: 80181640 (dCam_getBody__Fv)
//	80D5896C: 80181E64 (Eye__9dCamera_cFv)
//	80D589B0: 804061C0 (g_dComIfG_gameInfo)
//	80D589B4: 804061C0 (g_dComIfG_gameInfo)
//	80D589B8: 80D5954C (game_over_eff_name__11Tag_FWall_n)
//	80D589BC: 80D5954C (game_over_eff_name__11Tag_FWall_n)
//	80D58A0C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80D58A40: 804061C0 (g_dComIfG_gameInfo)
//	80D58A44: 804061C0 (g_dComIfG_gameInfo)
//	80D58A4C: 80D595C4 (data_80D595C4)
//	80D58A50: 80D595C4 (data_80D595C4)
//	80D58AA8: 80D5950C (cc_sph_src__11Tag_FWall_n)
//	80D58AAC: 80D5950C (cc_sph_src__11Tag_FWall_n)
//	80D58AB4: 80D595C4 (data_80D595C4)
//	80D58AB8: 80D595C4 (data_80D595C4)
//	80D58ACC: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80D58BDC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80D58C30: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80D58C44: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D58C48: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D58C80: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D58C9C: 804061C0 (g_dComIfG_gameInfo)
//	80D58CA0: 804061C0 (g_dComIfG_gameInfo)
//	80D58CE0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	80D58D3C: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80D58D48: 8026F708 (SetR__8cM3dGSphFf)
//	80D58D54: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80D58DAC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80D58DC0: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	80D58DD8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80D58E08: 80347138 (PSVECSquareMag)
//	80D58E78: 80450AE0 (__float_nan)
//	80D58E7C: 80450AE0 (__float_nan)
//	80D58EE8: 80450AE0 (__float_nan)
//	80D58EEC: 80450AE0 (__float_nan)
//	80D58F2C: 8027065C (cLib_chaseUC__FPUcUcUc)
//	80D58FE0: 80019E04 (fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv)
//	80D59008: 803621F4 (_restgpr_16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_FWall_c::execute() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall/execute__13daTag_FWall_cFv.s"
}
#pragma pop


/* 80D5901C-80D59058 003C+00 s=1 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80D5903C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall/__dt__4cXyzFv.s"
}
#pragma pop


/* 80D59058-80D59078 0020+00 s=1 e=0 z=0  None .text      daTag_FWall_Execute__FP13daTag_FWall_c                       */
//	80D59064: 80D58940 (execute__13daTag_FWall_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
asm static void daTag_FWall_Execute(daTag_FWall_c* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall/daTag_FWall_Execute__FP13daTag_FWall_c.s"
}
#pragma pop


/* 80D59078-80D59080 0008+00 s=1 e=0 z=0  None .text      _delete__13daTag_FWall_cFv                                   */
// True False
//  bool False
bool daTag_FWall_c::_delete() {
	return true;
}


/* 80D59080-80D590A0 0020+00 s=1 e=0 z=0  None .text      daTag_FWall_IsDelete__FP13daTag_FWall_c                      */
//	80D5908C: 80D59078 (_delete__13daTag_FWall_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
asm static void daTag_FWall_IsDelete(daTag_FWall_c* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall/daTag_FWall_IsDelete__FP13daTag_FWall_c.s"
}
#pragma pop


/* 80D590A0-80D590A8 0008+00 s=1 e=0 z=0  None .text      daTag_FWall_Delete__FP13daTag_FWall_c                        */
// True False
//  bool False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
static bool daTag_FWall_Delete(daTag_FWall_c* param_0) {
	return true;
}


/* 80D590A8-80D592D0 0228+00 s=1 e=0 z=0  None .text      create__13daTag_FWall_cFv                                    */
//	80D590D8: 80018B64 (__ct__10fopAc_ac_cFv)
//	80D590E0: 80D594B0 (__ct__4cXyzFv)
//	80D590E4: 80D594B0 (__ct__4cXyzFv)
//	80D590E8: 80D5901C (__dt__4cXyzFv)
//	80D590EC: 80D5901C (__dt__4cXyzFv)
//	80D590F8: 80361D60 (__construct_array)
//	80D590FC: 803C3728 (__vt__9cCcD_Stts)
//	80D59100: 803C3728 (__vt__9cCcD_Stts)
//	80D5910C: 80083760 (__ct__10dCcD_GSttsFv)
//	80D59110: 803AC2E4 (__vt__9dCcD_Stts)
//	80D59114: 803AC2E4 (__vt__9dCcD_Stts)
//	80D59128: 80D5939C (__ct__8dCcD_SphFv)
//	80D5912C: 80D5939C (__ct__8dCcD_SphFv)
//	80D59130: 80D592D0 (__dt__8dCcD_SphFv)
//	80D59134: 80D592D0 (__dt__8dCcD_SphFv)
//	80D59140: 80361D60 (__construct_array)
//	80D59150: 80D595C4 (data_80D595C4)
//	80D59154: 80D595C4 (data_80D595C4)
//	80D59168: 80D595C0 (fire_leader)
//	80D5916C: 80D595C0 (fire_leader)
//	80D59180: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80D5918C: 80D595C0 (fire_leader)
//	80D59190: 80D595C0 (fire_leader)
//	80D59198: 80D595C4 (data_80D595C4)
//	80D5919C: 80D595C4 (data_80D595C4)
//	80D591F8: 80D595C0 (fire_leader)
//	80D591FC: 80D595C0 (fire_leader)
//	80D59204: 80D595C4 (data_80D595C4)
//	80D59208: 80D595C4 (data_80D595C4)
//	80D59280: 80D595C4 (data_80D595C4)
//	80D59284: 80D595C4 (data_80D595C4)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_FWall_c::create() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall/create__13daTag_FWall_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D59554-80D59574 0020+00 s=1 e=0 z=0  None .data      l_daTag_FWall_Method                                         */
SECTION_DATA static void* l_daTag_FWall_Method[8] = {
	(void*)daTag_FWall_Create__FP13daTag_FWall_c,
	(void*)daTag_FWall_Delete__FP13daTag_FWall_c,
	(void*)daTag_FWall_Execute__FP13daTag_FWall_c,
	(void*)daTag_FWall_IsDelete__FP13daTag_FWall_c,
	(void*)daTag_FWall_Draw__FP13daTag_FWall_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80D59574-80D595A4 0030+00 s=0 e=0 z=1  None .data      g_profile_Tag_FWall                                          */
SECTION_DATA void* g_profile_Tag_FWall[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01F70000,
	(void*)&g_fpcLf_Method,
	(void*)0x00002068,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00C50000,
	(void*)&l_daTag_FWall_Method,
	(void*)0x00060100,
	(void*)NULL,
};

/* 80D595A4-80D595B0 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80D595B0-80D595BC 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80D592D0-80D5939C 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_SphFv                                            */
//	80D592F0: 803ABFC0 (__vt__8dCcD_Sph)
//	80D592F4: 803ABFC0 (__vt__8dCcD_Sph)
//	80D59314: 803C3540 (__vt__12cCcD_SphAttr)
//	80D59318: 803C3540 (__vt__12cCcD_SphAttr)
//	80D59330: 80D595B0 (__vt__8cM3dGSph)
//	80D59334: 80D595B0 (__vt__8cM3dGSph)
//	80D59344: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D59348: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D59358: 80D595A4 (__vt__8cM3dGAab)
//	80D5935C: 80D595A4 (__vt__8cM3dGAab)
//	80D5936C: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80D5937C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::~dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall/__dt__8dCcD_SphFv.s"
}
#pragma pop


/* 80D5939C-80D59420 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_SphFv                                            */
//	80D593B0: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80D593B4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D593B8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D593C0: 80D595A4 (__vt__8cM3dGAab)
//	80D593C4: 80D595A4 (__vt__8cM3dGAab)
//	80D593CC: 80D595B0 (__vt__8cM3dGSph)
//	80D593D0: 80D595B0 (__vt__8cM3dGSph)
//	80D593D8: 803C3540 (__vt__12cCcD_SphAttr)
//	80D593DC: 803C3540 (__vt__12cCcD_SphAttr)
//	80D593EC: 803ABFC0 (__vt__8dCcD_Sph)
//	80D593F0: 803ABFC0 (__vt__8dCcD_Sph)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall/__ct__8dCcD_SphFv.s"
}
#pragma pop


/* 80D59420-80D59468 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80D59438: 80D595B0 (__vt__8cM3dGSph)
//	80D5943C: 80D595B0 (__vt__8cM3dGSph)
//	80D5944C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80D59468-80D594B0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80D59480: 80D595A4 (__vt__8cM3dGAab)
//	80D59484: 80D595A4 (__vt__8cM3dGAab)
//	80D59494: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80D594B0-80D594B4 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80D594B4-80D594D4 0020+00 s=1 e=0 z=0  None .text      daTag_FWall_Create__FP13daTag_FWall_c                        */
//	80D594C0: 80D590A8 (create__13daTag_FWall_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTag_FWall_c* False
// 	 daTag_FWall_c False
asm static void daTag_FWall_Create(daTag_FWall_c* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_firewall/d_a_tag_firewall/daTag_FWall_Create__FP13daTag_FWall_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D594E0-80D594E4 0004+00 s=0 e=0 z=0  None .rodata    @3984                                                        */
SECTION_RODATA u32 const lit_3984 = 0x3F800000;

/* 80D594E4-80D594E8 0004+00 s=0 e=0 z=0  None .rodata    @3985                                                        */
SECTION_RODATA u32 const lit_3985 = 0xBF800000;

/* 80D594E8-80D594EC 0004+00 s=0 e=0 z=0  None .rodata    @3986                                                        */
SECTION_RODATA u32 const lit_3986 = 0x42B40000;

/* 80D594EC-80D594F4 0008+00 s=0 e=0 z=0  None .rodata    @3987                                                        */
SECTION_RODATA u8 const lit_3987[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D594F4-80D594FC 0008+00 s=0 e=0 z=0  None .rodata    @3988                                                        */
SECTION_RODATA u8 const lit_3988[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D594FC-80D59504 0008+00 s=0 e=0 z=0  None .rodata    @3989                                                        */
SECTION_RODATA u8 const lit_3989[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D59504-80D59508 0004+00 s=0 e=0 z=0  None .rodata    @3990                                                        */
SECTION_RODATA u32 const lit_3990 = 0x437A0000;

/* 80D59508-80D5950C 0004+00 s=0 e=0 z=0  None .rodata    @3991                                                        */
SECTION_RODATA u32 const lit_3991 = 0x447A0000;

