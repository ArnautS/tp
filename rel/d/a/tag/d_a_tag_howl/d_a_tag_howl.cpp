// 
// Generated By: dol2asm
// Translation Unit: d_a_tag_howl
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/tag/d_a_tag_howl/d_a_tag_howl.h"

// 
// Types:
// 

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daTag_Howl_c {
	/* 8048D958 */ // True False
void create();
	/* 8048D9BC */ // True False
//  bool False
bool destroy();
	/* 8048D9C4 */ // True False
void execute();
	/* 8048DA24 */ // True False
//  bool False
bool draw();
	/* 8048DA2C */ // True False
void isAreaCheck();
	/* 8048DC1C */ // True False
void getParam();
	/* 8048DC68 */ // True False
void getSwitchBit();
	/* 8048DCFC */ // True False
~daTag_Howl_c();
};

struct dSv_memBit_c {
	/* 80034860 */ // False False
//  int False
void isSwitch(int) const;
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daTag_Howl_Create(void*);
// True False
//  void* False
// 	 void False
static void daTag_Howl_Delete(void*);
// True False
//  void* False
// 	 void False
static void daTag_Howl_Execute(void*);
// True False
//  void* False
// 	 void False
static void daTag_Howl_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daTag_Howl_IsDelete(void*);

// True False
extern "C" void create__12daTag_Howl_cFv();
// True False
//  bool False
extern "C" bool destroy__12daTag_Howl_cFv();
// True False
extern "C" void execute__12daTag_Howl_cFv();
// True False
//  bool False
extern "C" bool draw__12daTag_Howl_cFv();
// True False
extern "C" void isAreaCheck__12daTag_Howl_cFv();
// True False
extern "C" void getParam__12daTag_Howl_cFv();
// True False
extern "C" void getSwitchBit__12daTag_Howl_cFv();
// True False
//  void* False
// 	 void False
extern "C" static void daTag_Howl_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daTag_Howl_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daTag_Howl_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daTag_Howl_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daTag_Howl_IsDelete__FPv();
// True False
extern "C" void __dt__12daTag_Howl_cFv();
extern "C" extern u8 const lit_3740[8];
extern "C" extern u8 const lit_3741[8];
extern "C" extern u8 const lit_3742[8];
extern "C" extern void* g_profile_TAG_HOWL[12];
extern "C" extern void* __vt__12daTag_Howl_c[3];

// 
// External References:
// 

// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  int False
extern "C" void isSwitch__12dSv_memBit_cCFi();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSVECSquareMag();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u32 __float_nan;
extern "C" extern u8 struct_80450D64[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 8048DD88-8048DDA8 0020+00 s=1 e=0 z=0  None .data      daTag_Howl_MethodTable                                       */
SECTION_DATA static void* daTag_Howl_MethodTable[8] = {
	(void*)daTag_Howl_Create__FPv,
	(void*)daTag_Howl_Delete__FPv,
	(void*)daTag_Howl_Execute__FPv,
	(void*)daTag_Howl_IsDelete__FPv,
	(void*)daTag_Howl_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 8048DDA8-8048DDD8 0030+00 s=0 e=0 z=1  None .data      g_profile_TAG_HOWL                                           */
SECTION_DATA void* g_profile_TAG_HOWL[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02D40000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000570,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x011B0000,
	(void*)&daTag_Howl_MethodTable,
	(void*)0x00040000,
	(void*)0x000E0000,
};

/* 8048DDD8-8048DDE4 000C+00 s=2 e=0 z=0  None .data      __vt__12daTag_Howl_c                                         */
SECTION_DATA void* __vt__12daTag_Howl_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daTag_Howl_cFv,
};

/* 8048D958-8048D9BC 0064+00 s=1 e=0 z=0  None .text      create__12daTag_Howl_cFv                                     */
//	8048D980: 80018B64 (__ct__10fopAc_ac_cFv)
//	8048D984: 8048DDD8 (__vt__12daTag_Howl_c)
//	8048D988: 8048DDD8 (__vt__12daTag_Howl_c)
//	8048D9A0: 8048DC1C (getParam__12daTag_Howl_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_Howl_c::create() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_howl/d_a_tag_howl/create__12daTag_Howl_cFv.s"
}
#pragma pop


/* 8048D9BC-8048D9C4 0008+00 s=1 e=0 z=0  None .text      destroy__12daTag_Howl_cFv                                    */
// True False
//  bool False
bool daTag_Howl_c::destroy() {
	return true;
}


/* 8048D9C4-8048DA24 0060+00 s=1 e=0 z=0  None .text      execute__12daTag_Howl_cFv                                    */
//	8048D9D8: 80450D64 (struct_80450D64)
//	8048D9DC: 80450D64 (struct_80450D64)
//	8048D9EC: 8048DA2C (isAreaCheck__12daTag_Howl_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_Howl_c::execute() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_howl/d_a_tag_howl/execute__12daTag_Howl_cFv.s"
}
#pragma pop


/* 8048DA24-8048DA2C 0008+00 s=1 e=0 z=0  None .text      draw__12daTag_Howl_cFv                                       */
// True False
//  bool False
bool daTag_Howl_c::draw() {
	return true;
}


/* ############################################################################################## */
/* 8048DD64-8048DD6C 0004+04 s=1 e=0 z=0  None .rodata    @3739                                                        */
SECTION_RODATA static u8 const lit_3739[4 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 8048DA2C-8048DC1C 01F0+00 s=1 e=0 z=0  None .text      isAreaCheck__12daTag_Howl_cFv                                */
//	8048DA44: 8048DD64 (lit_3739)
//	8048DA48: 8048DD64 (lit_3739)
//	8048DA4C: 8048DC68 (getSwitchBit__12daTag_Howl_cFv)
//	8048DA60: 8048DC68 (getSwitchBit__12daTag_Howl_cFv)
//	8048DA68: 804061C0 (g_dComIfG_gameInfo)
//	8048DA6C: 804061C0 (g_dComIfG_gameInfo)
//	8048DA74: 80034860 (isSwitch__12dSv_memBit_cCFi)
//	8048DA8C: 804061C0 (g_dComIfG_gameInfo)
//	8048DA90: 804061C0 (g_dComIfG_gameInfo)
//	8048DAA0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8048DABC: 804061C0 (g_dComIfG_gameInfo)
//	8048DAC0: 804061C0 (g_dComIfG_gameInfo)
//	8048DAE8: 80347138 (PSVECSquareMag)
//	8048DB58: 80450AE0 (__float_nan)
//	8048DB5C: 80450AE0 (__float_nan)
//	8048DBC8: 80450AE0 (__float_nan)
//	8048DBCC: 80450AE0 (__float_nan)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_Howl_c::isAreaCheck() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_howl/d_a_tag_howl/isAreaCheck__12daTag_Howl_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 8048DD6C-8048DD74 0008+00 s=0 e=0 z=0  None .rodata    @3740                                                        */
SECTION_RODATA u8 const lit_3740[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8048DD74-8048DD7C 0008+00 s=0 e=0 z=0  None .rodata    @3741                                                        */
SECTION_RODATA u8 const lit_3741[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8048DD7C-8048DD84 0008+00 s=0 e=0 z=0  None .rodata    @3742                                                        */
SECTION_RODATA u8 const lit_3742[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8048DD84-8048DD88 0004+00 s=1 e=0 z=0  None .rodata    @3752                                                        */
SECTION_RODATA static u32 const lit_3752 = 0x42C80000;

/* 8048DC1C-8048DC68 004C+00 s=1 e=0 z=0  None .text      getParam__12daTag_Howl_cFv                                   */
//	8048DC38: 8048DD84 (lit_3752)
//	8048DC3C: 8048DD84 (lit_3752)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_Howl_c::getParam() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_howl/d_a_tag_howl/getParam__12daTag_Howl_cFv.s"
}
#pragma pop


/* 8048DC68-8048DC74 000C+00 s=1 e=0 z=0  None .text      getSwitchBit__12daTag_Howl_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_Howl_c::getSwitchBit() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_howl/d_a_tag_howl/getSwitchBit__12daTag_Howl_cFv.s"
}
#pragma pop


/* 8048DC74-8048DC94 0020+00 s=1 e=0 z=0  None .text      daTag_Howl_Create__FPv                                       */
//	8048DC80: 8048D958 (create__12daTag_Howl_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daTag_Howl_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_howl/d_a_tag_howl/daTag_Howl_Create__FPv.s"
}
#pragma pop


/* 8048DC94-8048DCB4 0020+00 s=1 e=0 z=0  None .text      daTag_Howl_Delete__FPv                                       */
//	8048DCA0: 8048D9BC (destroy__12daTag_Howl_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daTag_Howl_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_howl/d_a_tag_howl/daTag_Howl_Delete__FPv.s"
}
#pragma pop


/* 8048DCB4-8048DCD4 0020+00 s=1 e=0 z=0  None .text      daTag_Howl_Execute__FPv                                      */
//	8048DCC0: 8048D9C4 (execute__12daTag_Howl_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daTag_Howl_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_howl/d_a_tag_howl/daTag_Howl_Execute__FPv.s"
}
#pragma pop


/* 8048DCD4-8048DCF4 0020+00 s=1 e=0 z=0  None .text      daTag_Howl_Draw__FPv                                         */
//	8048DCE0: 8048DA24 (draw__12daTag_Howl_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daTag_Howl_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_howl/d_a_tag_howl/daTag_Howl_Draw__FPv.s"
}
#pragma pop


/* 8048DCF4-8048DCFC 0008+00 s=1 e=0 z=0  None .text      daTag_Howl_IsDelete__FPv                                     */
// True False
//  bool False
//  void* False
// 	 void False
static bool daTag_Howl_IsDelete(void* param_0) {
	return true;
}


/* 8048DCFC-8048DD5C 0060+00 s=1 e=0 z=0  None .text      __dt__12daTag_Howl_cFv                                       */
//	8048DD1C: 8048DDD8 (__vt__12daTag_Howl_c)
//	8048DD20: 8048DDD8 (__vt__12daTag_Howl_c)
//	8048DD2C: 80018C8C (__dt__10fopAc_ac_cFv)
//	8048DD3C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daTag_Howl_c::~daTag_Howl_c() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_howl/d_a_tag_howl/__dt__12daTag_Howl_cFv.s"
}
#pragma pop


