// 
// Generated By: dol2asm
// Translation Unit: d_a_tag_csw
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/tag/d_a_tag_csw/d_a_tag_csw.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct J3DAnmTevRegKey {
};

struct J3DMaterialTable {
};

struct mDoExt_brkAnm {
	/* 8000D70C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct daTagCsw_c {
	/* 80D56BD8 */ // True False
~daTagCsw_c();
	/* 80D56D98 */ // True False
void setMtx();
	/* 80D56EF8 */ // True False
void createHeap();
	/* 80D57320 */ // True False
void chkInsideStatueStart();
	/* 80D573C0 */ // True False
void create();
	/* 80D5789C */ // True False
void Delete();
	/* 80D57968 */ // True False
void onLight();
	/* 80D579A8 */ // True False
void offLight();
	/* 80D579E8 */ // True False
void execute();
	/* 80D583B8 */ // True False
void draw();
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
	/* 80035590 */ // False False
//  int False
//  int False
void isItem(int, int) const;
};

struct cXyz {
	/* 80266EF4 */ // False False
void normalize();
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 80D57764 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgW_Base {
};

struct dBgW {
	/* 8007B970 */ // False False
dBgW();
	/* 8007B9C0 */ // False False
void Move();
};

struct dBgS {
	/* 80074A08 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct csXyz {
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 80D576D4 */ // True False
~cM3dGCyl();
};

struct cM3dGAab {
	/* 80D5771C */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80D58568 */ // True False
~cCcD_GStts();
};

struct cBgW_BgId {
	/* 802681D4 */ // False False
void ChkUsed() const;
};

struct cBgD_t {
};

struct cBgW {
	/* 80079F38 */ // False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void Set(cBgD_t*, u32, f32 (* )[3][4]);
};

struct cBgS {
	/* 80074250 */ // False False
//  dBgW_Base* False
// 	 dBgW_Base False
void Release(dBgW_Base*);
};

struct Vec {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 80D572B8 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daTagCsw_c_createHeap(fopAc_ac_c*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void searchTagCswOut(void*, void*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void searchCStatue(void*, void*);
// True False
//  daTagCsw_c* False
// 	 daTagCsw_c False
static void daTagCsw_Draw(daTagCsw_c*);
// True False
//  daTagCsw_c* False
// 	 daTagCsw_c False
static void daTagCsw_Execute(daTagCsw_c*);
// True False
//  bool False
//  daTagCsw_c* False
// 	 daTagCsw_c False
static bool daTagCsw_IsDelete(daTagCsw_c*);
// True False
//  daTagCsw_c* False
// 	 daTagCsw_c False
static void daTagCsw_Delete(daTagCsw_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daTagCsw_Create(fopAc_ac_c*);

// True False
extern "C" void __dt__10daTagCsw_cFv();
// True False
extern "C" void setMtx__10daTagCsw_cFv();
// True False
extern "C" void createHeap__10daTagCsw_cFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daTagCsw_c_createHeap__FP10fopAc_ac_c();
// True False
extern "C" void chkInsideStatueStart__10daTagCsw_cFv();
// True False
extern "C" void create__10daTagCsw_cFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void searchTagCswOut__FPvPv();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void searchCStatue__FPvPv();
// True False
extern "C" void Delete__10daTagCsw_cFv();
// True False
extern "C" void onLight__10daTagCsw_cFv();
// True False
extern "C" void offLight__10daTagCsw_cFv();
// True False
extern "C" void execute__10daTagCsw_cFv();
// True False
extern "C" void draw__10daTagCsw_cFv();
// True False
//  daTagCsw_c* False
// 	 daTagCsw_c False
extern "C" static void daTagCsw_Draw__FP10daTagCsw_c();
// True False
//  daTagCsw_c* False
// 	 daTagCsw_c False
extern "C" static void daTagCsw_Execute__FP10daTagCsw_c();
// True False
//  bool False
//  daTagCsw_c* False
// 	 daTagCsw_c False
extern "C" static bool daTagCsw_IsDelete__FP10daTagCsw_c();
// True False
//  daTagCsw_c* False
// 	 daTagCsw_c False
extern "C" static void daTagCsw_Delete__FP10daTagCsw_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daTagCsw_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
extern "C" extern u8 const l_brk_idx[8];
extern "C" extern u8 const l_dbz_idx[8];
extern "C" extern u8 const lit_4000[4];
extern "C" extern u32 const lit_4001;
extern "C" extern u32 const lit_4002;
extern "C" extern u8 const lit_4461[8];
extern "C" extern u8 const lit_4462[8];
extern "C" extern u8 const lit_4463[8];
extern "C" extern u32 const lit_4464;
extern "C" extern u32 const lit_4465;
extern "C" extern u32 const lit_4466;
extern "C" extern u32 const lit_4467;
extern "C" extern u32 const lit_4468;
extern "C" extern u32 const lit_4469;
extern "C" extern u32 const lit_4470;
extern "C" extern u32 const lit_4471;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 l_cyl_src[68];
extern "C" extern u8 l_tg_src[68];
extern "C" extern void* g_profile_TAG_CSW[12];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
void fopAcM_createItem(cXyz const*, int, int, int, csXyz const*, cXyz const*, int);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
extern "C" void fopAcM_createItem__FPC4cXyziiiPC5csXyzPC4cXyzi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  int False
//  int False
extern "C" void isItem__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
extern "C" void Release__4cBgSFP9dBgW_Base();
// False False
//  dBgW_Base* False
// 	 dBgW_Base False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
// False False
//  cBgD_t* False
// 	 cBgD_t False
//  u32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
// False False
extern "C" void __ct__4dBgWFv();
// False False
extern "C" void Move__4dBgWFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
extern "C" void normalize__4cXyzFv();
// False False
extern "C" void ChkUsed__9cBgW_BgIdCFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSVECScale();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80D585B8-80D585C0 0008+00 s=2 e=0 z=0  None .rodata    l_bmd_idx                                                    */
SECTION_RODATA static u8 const l_bmd_idx[8] = {
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06,
};

/* 80D585C0-80D585C8 0008+00 s=0 e=0 z=0  None .rodata    l_brk_idx                                                    */
SECTION_RODATA u8 const l_brk_idx[8] = {
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0A,
};

/* 80D585C8-80D585D0 0008+00 s=0 e=0 z=0  None .rodata    l_dbz_idx                                                    */
SECTION_RODATA u8 const l_dbz_idx[8] = {
	0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0E,
};

/* 80D585D0-80D585D4 0004+00 s=3 e=0 z=0  None .rodata    @3725                                                        */
SECTION_RODATA static u32 const lit_3725 = 0x3F800000;

/* 80D585D4-80D585D8 0004+00 s=0 e=0 z=0  None .rodata    @4000                                                        */
SECTION_RODATA u8 const lit_4000[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80D585D8-80D585DC 0004+00 s=0 e=0 z=0  None .rodata    @4001                                                        */
SECTION_RODATA u32 const lit_4001 = 0x43FA0000;

/* 80D585DC-80D585E0 0004+00 s=0 e=0 z=0  None .rodata    @4002                                                        */
SECTION_RODATA u32 const lit_4002 = 0x40A00000;

/* 80D585E0-80D585E8 0004+04 s=1 e=0 z=0  None .rodata    @4158                                                        */
SECTION_RODATA static u32 const lit_4158[1 + 1 /* padding */] = {
	0xBF800000,
	/* padding */
	0x00000000,
};

/* 80D585E8-80D585F0 0008+00 s=0 e=0 z=0  None .rodata    @4461                                                        */
SECTION_RODATA u8 const lit_4461[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D585F0-80D585F8 0008+00 s=0 e=0 z=0  None .rodata    @4462                                                        */
SECTION_RODATA u8 const lit_4462[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D585F8-80D58600 0008+00 s=0 e=0 z=0  None .rodata    @4463                                                        */
SECTION_RODATA u8 const lit_4463[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D58600-80D58604 0004+00 s=0 e=0 z=0  None .rodata    @4464                                                        */
SECTION_RODATA u32 const lit_4464 = 0x42960000;

/* 80D58604-80D58608 0004+00 s=0 e=0 z=0  None .rodata    @4465                                                        */
SECTION_RODATA u32 const lit_4465 = 0x41F00000;

/* 80D58608-80D5860C 0004+00 s=0 e=0 z=0  None .rodata    @4466                                                        */
SECTION_RODATA u32 const lit_4466 = 0x43480000;

/* 80D5860C-80D58610 0004+00 s=0 e=0 z=0  None .rodata    @4467                                                        */
SECTION_RODATA u32 const lit_4467 = 0xC0A00000;

/* 80D58610-80D58614 0004+00 s=0 e=0 z=0  None .rodata    @4468                                                        */
SECTION_RODATA u32 const lit_4468 = 0x40000000;

/* 80D58614-80D58618 0004+00 s=0 e=0 z=0  None .rodata    @4469                                                        */
SECTION_RODATA u32 const lit_4469 = 0x3F8CCCCD;

/* 80D58618-80D5861C 0004+00 s=0 e=0 z=0  None .rodata    @4470                                                        */
SECTION_RODATA u32 const lit_4470 = 0x438C0000;

/* 80D5861C-80D58620 0004+00 s=0 e=0 z=0  None .rodata    @4471                                                        */
SECTION_RODATA u32 const lit_4471 = 0xBF666666;

/* 80D58620-80D58628 0008+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80D58620 = "Lv6Warp";
#pragma pop

/* 80D58628-80D58634 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D58634-80D58648 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80D58648-80D5864C 0004+00 s=2 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)&stringBase0;

/* 80D5864C-80D58690 0044+00 s=0 e=0 z=0  None .data      l_cyl_src                                                    */
SECTION_DATA u8 l_cyl_src[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00,
	0x44, 0x16, 0x00, 0x00,
};

/* 80D58690-80D586D4 0044+00 s=0 e=0 z=0  None .data      l_tg_src                                                     */
SECTION_DATA u8 l_tg_src[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00,
	0x44, 0x16, 0x00, 0x00,
};

/* 80D586D4-80D586F4 0020+00 s=1 e=0 z=0  None .data      l_daTagCsw_Method                                            */
SECTION_DATA static void* l_daTagCsw_Method[8] = {
	(void*)daTagCsw_Create__FP10fopAc_ac_c,
	(void*)daTagCsw_Delete__FP10daTagCsw_c,
	(void*)daTagCsw_Execute__FP10daTagCsw_c,
	(void*)daTagCsw_IsDelete__FP10daTagCsw_c,
	(void*)daTagCsw_Draw__FP10daTagCsw_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80D586F4-80D58724 0030+00 s=0 e=0 z=1  None .data      g_profile_TAG_CSW                                            */
SECTION_DATA void* g_profile_TAG_CSW[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02220000,
	(void*)&g_fpcLf_Method,
	(void*)0x000008F8,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x01110000,
	(void*)&l_daTagCsw_Method,
	(void*)0x00040000,
	(void*)NULL,
};

/* 80D58724-80D58730 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80D58730-80D5873C 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80D5873C-80D58748 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80D58748-80D58754 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80D58754-80D58760 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80D56BD8-80D56D98 01C0+00 s=1 e=0 z=0  None .text      __dt__10daTagCsw_cFv                                         */
//	80D56C00: 803AC050 (__vt__8dCcD_Cyl)
//	80D56C04: 803AC050 (__vt__8dCcD_Cyl)
//	80D56C24: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D56C28: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D56C40: 80D58754 (__vt__8cM3dGCyl)
//	80D56C44: 80D58754 (__vt__8cM3dGCyl)
//	80D56C54: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D56C58: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D56C68: 80D58748 (__vt__8cM3dGAab)
//	80D56C6C: 80D58748 (__vt__8cM3dGAab)
//	80D56C7C: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80D56C88: 803AC050 (__vt__8dCcD_Cyl)
//	80D56C8C: 803AC050 (__vt__8dCcD_Cyl)
//	80D56CAC: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D56CB0: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D56CC8: 80D58754 (__vt__8cM3dGCyl)
//	80D56CCC: 80D58754 (__vt__8cM3dGCyl)
//	80D56CDC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D56CE0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D56CF0: 80D58748 (__vt__8cM3dGAab)
//	80D56CF4: 80D58748 (__vt__8cM3dGAab)
//	80D56D04: 800840E4 (__dt__12dCcD_GObjInfFv)
//	80D56D10: 803AC2E4 (__vt__9dCcD_Stts)
//	80D56D14: 803AC2E4 (__vt__9dCcD_Stts)
//	80D56D2C: 80D5873C (__vt__10dCcD_GStts)
//	80D56D30: 80D5873C (__vt__10dCcD_GStts)
//	80D56D40: 80D58730 (__vt__10cCcD_GStts)
//	80D56D44: 80D58730 (__vt__10cCcD_GStts)
//	80D56D54: 803C3728 (__vt__9cCcD_Stts)
//	80D56D58: 803C3728 (__vt__9cCcD_Stts)
//	80D56D68: 80018C8C (__dt__10fopAc_ac_cFv)
//	80D56D78: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daTagCsw_c::~daTagCsw_c() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/__dt__10daTagCsw_cFv.s"
}
#pragma pop


/* 80D56D98-80D56EF8 0160+00 s=2 e=0 z=0  None .text      setMtx__10daTagCsw_cFv                                       */
//	80D56DAC: 803DD470 (now__14mDoMtx_stack_c)
//	80D56DB0: 803DD470 (now__14mDoMtx_stack_c)
//	80D56DC0: 803468E8 (PSMTXTrans)
//	80D56DC4: 803DD470 (now__14mDoMtx_stack_c)
//	80D56DC8: 803DD470 (now__14mDoMtx_stack_c)
//	80D56DD0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80D56DD4: 803DD470 (now__14mDoMtx_stack_c)
//	80D56DD8: 803DD470 (now__14mDoMtx_stack_c)
//	80D56DE0: 803464B0 (PSMTXCopy)
//	80D56DE4: 803DD470 (now__14mDoMtx_stack_c)
//	80D56DE8: 803DD470 (now__14mDoMtx_stack_c)
//	80D56DF4: 803464B0 (PSMTXCopy)
//	80D56DF8: 803DD470 (now__14mDoMtx_stack_c)
//	80D56DFC: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E14: 803468E8 (PSMTXTrans)
//	80D56E18: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E1C: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E24: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80D56E28: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E2C: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E34: 803464B0 (PSMTXCopy)
//	80D56E44: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E48: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E70: 803468E8 (PSMTXTrans)
//	80D56E74: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E78: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E80: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80D56E84: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E88: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E94: 803464B0 (PSMTXCopy)
//	80D56E98: 803DD470 (now__14mDoMtx_stack_c)
//	80D56E9C: 803DD470 (now__14mDoMtx_stack_c)
//	80D56EAC: 803468E8 (PSMTXTrans)
//	80D56EB0: 803DD470 (now__14mDoMtx_stack_c)
//	80D56EB4: 803DD470 (now__14mDoMtx_stack_c)
//	80D56EBC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80D56EC4: 80D585D0 (lit_3725)
//	80D56EC8: 80D585D0 (lit_3725)
//	80D56ED0: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80D56ED4: 803DD470 (now__14mDoMtx_stack_c)
//	80D56ED8: 803DD470 (now__14mDoMtx_stack_c)
//	80D56EE0: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTagCsw_c::setMtx() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/setMtx__10daTagCsw_cFv.s"
}
#pragma pop


/* 80D56EF8-80D572B8 03C0+00 s=1 e=0 z=0  None .text      createHeap__10daTagCsw_cFv                                   */
//	80D56F08: 803621DC (_savegpr_29)
//	80D56F10: 80D58648 (l_arcName)
//	80D56F14: 80D58648 (l_arcName)
//	80D56F20: 804061C0 (g_dComIfG_gameInfo)
//	80D56F24: 804061C0 (g_dComIfG_gameInfo)
//	80D56F38: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D56F48: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80D56F64: 80D58648 (l_arcName)
//	80D56F68: 80D58648 (l_arcName)
//	80D56F7C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D56FB4: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80D56FE0: 80D56D98 (setMtx__10daTagCsw_cFv)
//	80D56FE8: 802CEC4C (__nw__FUl)
//	80D56FF4: 80D58724 (__vt__12J3DFrameCtrl)
//	80D56FF8: 80D58724 (__vt__12J3DFrameCtrl)
//	80D57004: 803283FC (init__12J3DFrameCtrlFs)
//	80D57028: 80D58648 (l_arcName)
//	80D5702C: 80D58648 (l_arcName)
//	80D57040: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D57060: 80D585D0 (lit_3725)
//	80D57064: 80D585D0 (lit_3725)
//	80D57070: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80D570A0: 802CEC4C (__nw__FUl)
//	80D570AC: 80D58724 (__vt__12J3DFrameCtrl)
//	80D570B0: 80D58724 (__vt__12J3DFrameCtrl)
//	80D570BC: 803283FC (init__12J3DFrameCtrlFs)
//	80D570E0: 80D58648 (l_arcName)
//	80D570E4: 80D58648 (l_arcName)
//	80D570F8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D57118: 80D585D0 (lit_3725)
//	80D5711C: 80D585D0 (lit_3725)
//	80D57128: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80D57140: 802CEC4C (__nw__FUl)
//	80D5714C: 8007B970 (__ct__4dBgWFv)
//	80D5716C: 80D58648 (l_arcName)
//	80D57170: 80D58648 (l_arcName)
//	80D57184: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D57198: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
//	80D571C8: 802CEC4C (__nw__FUl)
//	80D571D4: 8007B970 (__ct__4dBgWFv)
//	80D571F4: 80D58648 (l_arcName)
//	80D571F8: 80D58648 (l_arcName)
//	80D5720C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D57220: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
//	80D57238: 802CEC4C (__nw__FUl)
//	80D57244: 8007B970 (__ct__4dBgWFv)
//	80D57264: 80D58648 (l_arcName)
//	80D57268: 80D58648 (l_arcName)
//	80D5727C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80D57290: 80079F38 (Set__4cBgWFP6cBgD_tUlPA3_A4_f)
//	80D572A4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTagCsw_c::createHeap() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/createHeap__10daTagCsw_cFv.s"
}
#pragma pop


/* 80D572B8-80D57300 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80D572D0: 80D58724 (__vt__12J3DFrameCtrl)
//	80D572D4: 80D58724 (__vt__12J3DFrameCtrl)
//	80D572E4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80D57300-80D57320 0020+00 s=1 e=0 z=0  None .text      daTagCsw_c_createHeap__FP10fopAc_ac_c                        */
//	80D5730C: 80D56EF8 (createHeap__10daTagCsw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daTagCsw_c_createHeap(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/daTagCsw_c_createHeap__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80D57320-80D573C0 00A0+00 s=1 e=0 z=0  None .text      chkInsideStatueStart__10daTagCsw_cFv                         */
//	80D57330: 803621DC (_savegpr_29)
//	80D57344: 804061C0 (g_dComIfG_gameInfo)
//	80D57348: 804061C0 (g_dComIfG_gameInfo)
//	80D57354: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D57374: 804061C0 (g_dComIfG_gameInfo)
//	80D57378: 804061C0 (g_dComIfG_gameInfo)
//	80D57388: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D573AC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTagCsw_c::chkInsideStatueStart() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/chkInsideStatueStart__10daTagCsw_cFv.s"
}
#pragma pop


/* 80D573C0-80D576D4 0314+00 s=1 e=0 z=0  None .text      create__10daTagCsw_cFv                                       */
//	80D573D0: 803621C8 (_savegpr_24)
//	80D573D8: 80D58628 (cNullVec__6Z2Calc)
//	80D573DC: 80D58628 (cNullVec__6Z2Calc)
//	80D573E0: 80D585B8 (l_bmd_idx)
//	80D573E4: 80D585B8 (l_bmd_idx)
//	80D57400: 80018B64 (__ct__10fopAc_ac_cFv)
//	80D57404: 803C3728 (__vt__9cCcD_Stts)
//	80D57408: 803C3728 (__vt__9cCcD_Stts)
//	80D57414: 80083760 (__ct__10dCcD_GSttsFv)
//	80D57418: 803AC2E4 (__vt__9dCcD_Stts)
//	80D5741C: 803AC2E4 (__vt__9dCcD_Stts)
//	80D57434: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80D57438: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D5743C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D57444: 80D58748 (__vt__8cM3dGAab)
//	80D57448: 80D58748 (__vt__8cM3dGAab)
//	80D57450: 80D58754 (__vt__8cM3dGCyl)
//	80D57454: 80D58754 (__vt__8cM3dGCyl)
//	80D5745C: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D57460: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D57470: 803AC050 (__vt__8dCcD_Cyl)
//	80D57474: 803AC050 (__vt__8dCcD_Cyl)
//	80D57494: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80D57498: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D5749C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80D574A4: 80D58748 (__vt__8cM3dGAab)
//	80D574A8: 80D58748 (__vt__8cM3dGAab)
//	80D574B0: 80D58754 (__vt__8cM3dGCyl)
//	80D574B4: 80D58754 (__vt__8cM3dGCyl)
//	80D574BC: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D574C0: 803C35A4 (__vt__12cCcD_CylAttr)
//	80D574CC: 803AC050 (__vt__8dCcD_Cyl)
//	80D574D0: 803AC050 (__vt__8dCcD_Cyl)
//	80D5750C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80D57558: 80D57320 (chkInsideStatueStart__10daTagCsw_cFv)
//	80D57584: 804061C0 (g_dComIfG_gameInfo)
//	80D57588: 804061C0 (g_dComIfG_gameInfo)
//	80D57594: 80035200 (onSwitch__10dSv_info_cFii)
//	80D575A4: 804061C0 (g_dComIfG_gameInfo)
//	80D575A8: 804061C0 (g_dComIfG_gameInfo)
//	80D575B4: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D575D8: 80D57300 (daTagCsw_c_createHeap__FP10fopAc_ac_c)
//	80D575DC: 80D57300 (daTagCsw_c_createHeap__FP10fopAc_ac_c)
//	80D575E4: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80D57604: 80D579A8 (offLight__10daTagCsw_cFv)
//	80D57618: 80D57320 (chkInsideStatueStart__10daTagCsw_cFv)
//	80D57628: 80D57968 (onLight__10daTagCsw_cFv)
//	80D57634: 804061C0 (g_dComIfG_gameInfo)
//	80D57638: 804061C0 (g_dComIfG_gameInfo)
//	80D5764C: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80D57664: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80D57678: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80D57684: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80D57698: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	80D576C0: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTagCsw_c::create() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/create__10daTagCsw_cFv.s"
}
#pragma pop


/* 80D576D4-80D5771C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80D576EC: 80D58754 (__vt__8cM3dGCyl)
//	80D576F0: 80D58754 (__vt__8cM3dGCyl)
//	80D57700: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80D5771C-80D57764 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80D57734: 80D58748 (__vt__8cM3dGAab)
//	80D57738: 80D58748 (__vt__8cM3dGAab)
//	80D57748: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80D57764-80D577C0 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80D5777C: 80D5873C (__vt__10dCcD_GStts)
//	80D57780: 80D5873C (__vt__10dCcD_GStts)
//	80D5778C: 80D58730 (__vt__10cCcD_GStts)
//	80D57790: 80D58730 (__vt__10cCcD_GStts)
//	80D577A4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80D577C0-80D57840 0080+00 s=1 e=0 z=0  None .text      searchTagCswOut__FPvPv                                       */
//	80D577E0: 80018CE0 (fopAc_IsActor__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void searchTagCswOut(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/searchTagCswOut__FPvPv.s"
}
#pragma pop


/* 80D57840-80D5789C 005C+00 s=1 e=0 z=0  None .text      searchCStatue__FPvPv                                         */
//	80D57858: 80018CE0 (fopAc_IsActor__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void searchCStatue(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/searchCStatue__FPvPv.s"
}
#pragma pop


/* 80D5789C-80D57968 00CC+00 s=1 e=0 z=0  None .text      Delete__10daTagCsw_cFv                                       */
//	80D578BC: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80D578C8: 804061C0 (g_dComIfG_gameInfo)
//	80D578CC: 804061C0 (g_dComIfG_gameInfo)
//	80D578D8: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80D578E8: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80D578F4: 804061C0 (g_dComIfG_gameInfo)
//	80D578F8: 804061C0 (g_dComIfG_gameInfo)
//	80D57904: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80D57914: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80D57920: 804061C0 (g_dComIfG_gameInfo)
//	80D57924: 804061C0 (g_dComIfG_gameInfo)
//	80D57930: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80D57944: 80D58648 (l_arcName)
//	80D57948: 80D58648 (l_arcName)
//	80D57950: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTagCsw_c::Delete() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/Delete__10daTagCsw_cFv.s"
}
#pragma pop


/* 80D57968-80D579A8 0040+00 s=2 e=0 z=0  None .text      onLight__10daTagCsw_cFv                                      */
//	80D57974: 80D585D0 (lit_3725)
//	80D57978: 80D585D0 (lit_3725)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTagCsw_c::onLight() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/onLight__10daTagCsw_cFv.s"
}
#pragma pop


/* 80D579A8-80D579E8 0040+00 s=2 e=0 z=0  None .text      offLight__10daTagCsw_cFv                                     */
//	80D579B4: 80D585E0 (lit_4158)
//	80D579B8: 80D585E0 (lit_4158)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTagCsw_c::offLight() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/offLight__10daTagCsw_cFv.s"
}
#pragma pop


/* 80D579E8-80D583B8 09D0+00 s=1 e=0 z=0  None .text      execute__10daTagCsw_cFv                                      */
//	80D579F8: 803621D4 (_savegpr_27)
//	80D57A00: 80D585B8 (l_bmd_idx)
//	80D57A04: 80D585B8 (l_bmd_idx)
//	80D57A0C: 80D57840 (searchCStatue__FPvPv)
//	80D57A10: 80D57840 (searchCStatue__FPvPv)
//	80D57A18: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80D57A58: 8034739C (PSVECSquareDistance)
//	80D57AC8: 80450AE0 (__float_nan)
//	80D57ACC: 80450AE0 (__float_nan)
//	80D57B38: 80450AE0 (__float_nan)
//	80D57B3C: 80450AE0 (__float_nan)
//	80D57B94: 804061C0 (g_dComIfG_gameInfo)
//	80D57B98: 804061C0 (g_dComIfG_gameInfo)
//	80D57BA4: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D57BD8: 80D577C0 (searchTagCswOut__FPvPv)
//	80D57BDC: 80D577C0 (searchTagCswOut__FPvPv)
//	80D57BE4: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	80D57C18: 80451180 (G_CM3D_F_ABS_MIN)
//	80D57C1C: 80451180 (G_CM3D_F_ABS_MIN)
//	80D57C38: 804061C0 (g_dComIfG_gameInfo)
//	80D57C3C: 804061C0 (g_dComIfG_gameInfo)
//	80D57C48: 80035200 (onSwitch__10dSv_info_cFii)
//	80D57C58: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80D57C64: 804061C0 (g_dComIfG_gameInfo)
//	80D57C68: 804061C0 (g_dComIfG_gameInfo)
//	80D57C78: 80074A08 (Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c)
//	80D57CC0: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80D57CD4: 8026F200 (SetR__8cM3dGCylFf)
//	80D57CD8: 804061C0 (g_dComIfG_gameInfo)
//	80D57CDC: 804061C0 (g_dComIfG_gameInfo)
//	80D57CE8: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80D57D00: 802681D4 (ChkUsed__9cBgW_BgIdCFv)
//	80D57D0C: 804061C0 (g_dComIfG_gameInfo)
//	80D57D10: 804061C0 (g_dComIfG_gameInfo)
//	80D57D1C: 80074250 (Release__4cBgSFP9dBgW_Base)
//	80D57D70: 804061C0 (g_dComIfG_gameInfo)
//	80D57D74: 804061C0 (g_dComIfG_gameInfo)
//	80D57D80: 80035200 (onSwitch__10dSv_info_cFii)
//	80D57D88: 804061C0 (g_dComIfG_gameInfo)
//	80D57D8C: 804061C0 (g_dComIfG_gameInfo)
//	80D57D98: 80035200 (onSwitch__10dSv_info_cFii)
//	80D57DCC: 804061C0 (g_dComIfG_gameInfo)
//	80D57DD0: 804061C0 (g_dComIfG_gameInfo)
//	80D57DDC: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D57DEC: 80D579A8 (offLight__10daTagCsw_cFv)
//	80D57E00: 804061C0 (g_dComIfG_gameInfo)
//	80D57E04: 804061C0 (g_dComIfG_gameInfo)
//	80D57E14: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D57E2C: 804061C0 (g_dComIfG_gameInfo)
//	80D57E30: 804061C0 (g_dComIfG_gameInfo)
//	80D57E40: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D57E50: 80D57968 (onLight__10daTagCsw_cFv)
//	80D57ED0: 80D57968 (onLight__10daTagCsw_cFv)
//	80D57F00: 804061C0 (g_dComIfG_gameInfo)
//	80D57F04: 804061C0 (g_dComIfG_gameInfo)
//	80D57F10: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D57F4C: 804061C0 (g_dComIfG_gameInfo)
//	80D57F50: 804061C0 (g_dComIfG_gameInfo)
//	80D57F5C: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D57F78: 804061C0 (g_dComIfG_gameInfo)
//	80D57F7C: 804061C0 (g_dComIfG_gameInfo)
//	80D57F88: 80035200 (onSwitch__10dSv_info_cFii)
//	80D57F98: 80D57968 (onLight__10daTagCsw_cFv)
//	80D57FB4: 80D579A8 (offLight__10daTagCsw_cFv)
//	80D58040: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D58044: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D58070: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D580E4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D580E8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D58114: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D58148: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D5814C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D58178: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D58188: 80451180 (G_CM3D_F_ABS_MIN)
//	80D5818C: 80451180 (G_CM3D_F_ABS_MIN)
//	80D581BC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80D581F0: 804061C0 (g_dComIfG_gameInfo)
//	80D581F4: 804061C0 (g_dComIfG_gameInfo)
//	80D58200: 80035590 (isItem__10dSv_info_cCFii)
//	80D58230: 8001C240 (fopAcM_createItem__FPC4cXyziiiPC5csXyzPC4cXyzi)
//	80D58240: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D58244: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80D58270: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80D582A0: 80347138 (PSVECSquareMag)
//	80D582AC: 80451180 (G_CM3D_F_ABS_MIN)
//	80D582B0: 80451180 (G_CM3D_F_ABS_MIN)
//	80D582C4: 80266EF4 (normalize__4cXyzFv)
//	80D582D4: 803470D8 (PSVECScale)
//	80D582F0: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	80D582F4: 804061C0 (g_dComIfG_gameInfo)
//	80D582F8: 804061C0 (g_dComIfG_gameInfo)
//	80D58304: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80D5830C: 80347138 (PSVECSquareMag)
//	80D58318: 80451180 (G_CM3D_F_ABS_MIN)
//	80D5831C: 80451180 (G_CM3D_F_ABS_MIN)
//	80D58358: 8000D428 (play__14mDoExt_baseAnmFv)
//	80D58368: 8000D428 (play__14mDoExt_baseAnmFv)
//	80D58370: 80D56D98 (setMtx__10daTagCsw_cFv)
//	80D58378: 8007B9C0 (Move__4dBgWFv)
//	80D58380: 8007B9C0 (Move__4dBgWFv)
//	80D58390: 8007B9C0 (Move__4dBgWFv)
//	80D58398: 80083830 (Move__10dCcD_GSttsFv)
//	80D583A4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTagCsw_c::execute() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/execute__10daTagCsw_cFv.s"
}
#pragma pop


/* 80D583B8-80D584C4 010C+00 s=1 e=0 z=0  None .text      draw__10daTagCsw_cFv                                         */
//	80D583E4: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	80D58404: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	80D58408: 8042CA54 (g_env_light)
//	80D5840C: 8042CA54 (g_env_light)
//	80D5841C: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80D58420: 8042CA54 (g_env_light)
//	80D58424: 8042CA54 (g_env_light)
//	80D58434: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80D58444: 8042CA54 (g_env_light)
//	80D58448: 8042CA54 (g_env_light)
//	80D58454: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	80D58458: 804061C0 (g_dComIfG_gameInfo)
//	80D5845C: 804061C0 (g_dComIfG_gameInfo)
//	80D58464: 80434AC8 (j3dSys)
//	80D58468: 80434AC8 (j3dSys)
//	80D5847C: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80D5848C: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	80D58490: 804061C0 (g_dComIfG_gameInfo)
//	80D58494: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTagCsw_c::draw() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/draw__10daTagCsw_cFv.s"
}
#pragma pop


/* 80D584C4-80D584E4 0020+00 s=1 e=0 z=0  None .text      daTagCsw_Draw__FP10daTagCsw_c                                */
//	80D584D0: 80D583B8 (draw__10daTagCsw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTagCsw_c* False
// 	 daTagCsw_c False
asm static void daTagCsw_Draw(daTagCsw_c* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/daTagCsw_Draw__FP10daTagCsw_c.s"
}
#pragma pop


/* 80D584E4-80D58504 0020+00 s=1 e=0 z=0  None .text      daTagCsw_Execute__FP10daTagCsw_c                             */
//	80D584F0: 80D579E8 (execute__10daTagCsw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTagCsw_c* False
// 	 daTagCsw_c False
asm static void daTagCsw_Execute(daTagCsw_c* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/daTagCsw_Execute__FP10daTagCsw_c.s"
}
#pragma pop


/* 80D58504-80D5850C 0008+00 s=1 e=0 z=0  None .text      daTagCsw_IsDelete__FP10daTagCsw_c                            */
// True False
//  bool False
//  daTagCsw_c* False
// 	 daTagCsw_c False
static bool daTagCsw_IsDelete(daTagCsw_c* param_0) {
	return true;
}


/* 80D5850C-80D58548 003C+00 s=1 e=0 z=0  None .text      daTagCsw_Delete__FP10daTagCsw_c                              */
//	80D58520: 80D5789C (Delete__10daTagCsw_cFv)
//	80D5852C: 80D56BD8 (__dt__10daTagCsw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daTagCsw_c* False
// 	 daTagCsw_c False
asm static void daTagCsw_Delete(daTagCsw_c* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/daTagCsw_Delete__FP10daTagCsw_c.s"
}
#pragma pop


/* 80D58548-80D58568 0020+00 s=1 e=0 z=0  None .text      daTagCsw_Create__FP10fopAc_ac_c                              */
//	80D58554: 80D573C0 (create__10daTagCsw_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daTagCsw_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/daTagCsw_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80D58568-80D585B0 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80D58580: 80D58730 (__vt__10cCcD_GStts)
//	80D58584: 80D58730 (__vt__10cCcD_GStts)
//	80D58594: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_csw/d_a_tag_csw/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


