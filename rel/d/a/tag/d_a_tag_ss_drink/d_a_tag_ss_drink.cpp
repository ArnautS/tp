// 
// Generated By: dol2asm
// Translation Unit: d_a_tag_ss_drink
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink.h"

// 
// Types:
// 

struct fopAc_ac_c {
};

struct daTag_SSDrink_c {
	/* 80D62DB8 */ // True False
void create();
	/* 80D62E5C */ // True False
//  bool False
bool Delete();
	/* 80D62E64 */ // True False
void Execute();
	/* 80D62ED0 */ // True False
//  bool False
bool Draw();
	/* 80D62ED8 */ // True False
void getTypeFromParam();
	/* 80D62F80 */ // True False
void getSwitchFromParam();
	/* 80D62F8C */ // True False
void getFlowNodeNum();
	/* 80D62FC8 */ // True False
void getValue();
	/* 80D62FD4 */ // True False
void restart();
	/* 80D63044 */ // True False
void initialize();
	/* 80D630BC */ // True False
//  int (daTag_SSDrink_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daTag_SSDrink_c False
void checkProcess(int (daTag_SSDrink_c::*)(void*));
	/* 80D630E8 */ // True False
//  int (daTag_SSDrink_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daTag_SSDrink_c False
void setProcess(int (daTag_SSDrink_c::*)(void*));
	/* 80D631D4 */ // True False
void setAttnPos();
	/* 80D63208 */ // True False
void chkEvent();
	/* 80D63384 */ // True False
void orderEvent();
	/* 80D63490 */ // True False
//  void* False
// 	 void False
void wait(void*);
	/* 80D635C8 */ // True False
//  void* False
// 	 void False
void talk(void*);
	/* 80D63724 */ // True False
~daTag_SSDrink_c();
};

struct daObj_SSBase_c {
	/* 8015E3F8 */ // False False
daObj_SSBase_c();
	/* 8015E450 */ // False False
~daObj_SSBase_c();
	/* 8015E4B0 */ // False False
void getProcessID();
	/* 80D63794 */ // True False
//  void False
void setSoldOut();
};

struct dSv_info_c {
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dMsgFlow_c {
	/* 80249F00 */ // False False
dMsgFlow_c();
	/* 80249F48 */ // False False
~dMsgFlow_c();
	/* 80249F90 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void init(fopAc_ac_c*, int, int, fopAc_ac_c**);
	/* 8024A2D8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
void doFlow(fopAc_ac_c*, fopAc_ac_c**, int);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
};

struct dEvent_manager_c {
	/* 800487F0 */ // False False
void ChkPresentEnd();
};

struct dAttCatch_c {
	/* 80073A08 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u8 False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
//  int False
void request(fopAc_ac_c*, u8, f32, f32, f32, s16, int);
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

// 
// Forward References:
// 

// True False
//  void* False
// 	 void False
static void daTag_SSDrink_Create(void*);
// True False
//  void* False
// 	 void False
static void daTag_SSDrink_Delete(void*);
// True False
//  void* False
// 	 void False
static void daTag_SSDrink_Execute(void*);
// True False
//  void* False
// 	 void False
static void daTag_SSDrink_Draw(void*);
// True False
//  bool False
//  void* False
// 	 void False
static bool daTag_SSDrink_IsDelete(void*);

// True False
extern "C" void create__15daTag_SSDrink_cFv();
// True False
//  bool False
extern "C" bool Delete__15daTag_SSDrink_cFv();
// True False
extern "C" void Execute__15daTag_SSDrink_cFv();
// True False
//  bool False
extern "C" bool Draw__15daTag_SSDrink_cFv();
// True False
extern "C" void getTypeFromParam__15daTag_SSDrink_cFv();
// True False
extern "C" void getSwitchFromParam__15daTag_SSDrink_cFv();
// True False
extern "C" void getFlowNodeNum__15daTag_SSDrink_cFv();
// True False
extern "C" void getValue__15daTag_SSDrink_cFv();
// True False
extern "C" void restart__15daTag_SSDrink_cFv();
// True False
extern "C" void initialize__15daTag_SSDrink_cFv();
// True False
//  int (daTag_SSDrink_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daTag_SSDrink_c False
extern "C" void checkProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i();
// True False
//  int (daTag_SSDrink_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daTag_SSDrink_c False
extern "C" void setProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i();
// True False
extern "C" void setAttnPos__15daTag_SSDrink_cFv();
// True False
extern "C" void chkEvent__15daTag_SSDrink_cFv();
// True False
extern "C" void orderEvent__15daTag_SSDrink_cFv();
// True False
//  void* False
// 	 void False
extern "C" void wait__15daTag_SSDrink_cFPv();
// True False
//  void* False
// 	 void False
extern "C" void talk__15daTag_SSDrink_cFPv();
// True False
//  void* False
// 	 void False
extern "C" static void daTag_SSDrink_Create__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daTag_SSDrink_Delete__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daTag_SSDrink_Execute__FPv();
// True False
//  void* False
// 	 void False
extern "C" static void daTag_SSDrink_Draw__FPv();
// True False
//  bool False
//  void* False
// 	 void False
extern "C" static bool daTag_SSDrink_IsDelete__FPv();
// True False
extern "C" void __dt__15daTag_SSDrink_cFv();
// True False
//  void False
extern "C" void setSoldOut__14daObj_SSBase_cFv();
extern "C" extern u32 const lit_3844;
extern "C" extern u32 const lit_3845;
extern "C" extern u32 const lit_3846;
extern "C" extern u32 const lit_3991;
extern "C" extern u32 const lit_3992;
extern "C" extern void* g_profile_TAG_SSDRINK[12];
extern "C" extern void* __vt__15daTag_SSDrink_c[5];

// 
// External References:
// 

// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_seenActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  s16 False
void dMsgObject_addTotalPrice(s16);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u8 False
//  f32 False
//  f32 False
//  f32 False
//  s16 False
//  int False
extern "C" void request__11dAttCatch_cFP10fopAc_ac_cUcfffsi();
// False False
extern "C" void __ct__14daObj_SSBase_cFv();
// False False
extern "C" void __dt__14daObj_SSBase_cFv();
// False False
extern "C" void getProcessID__14daObj_SSBase_cFv();
// False False
//  s16 False
extern "C" void dMsgObject_addTotalPrice__Fs();
// False False
extern "C" void __ct__10dMsgFlow_cFv();
// False False
extern "C" void __dt__10dMsgFlow_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  int False
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80D637BC-80D637D8 001C+00 s=1 e=0 z=0  None .data      @3806                                                        */
SECTION_DATA static void* lit_3806[7] = {
	(void*)(((char*)getTypeFromParam__15daTag_SSDrink_cFv)+0x28),
	(void*)(((char*)getTypeFromParam__15daTag_SSDrink_cFv)+0x38),
	(void*)(((char*)getTypeFromParam__15daTag_SSDrink_cFv)+0x48),
	(void*)(((char*)getTypeFromParam__15daTag_SSDrink_cFv)+0x58),
	(void*)(((char*)getTypeFromParam__15daTag_SSDrink_cFv)+0x68),
	(void*)(((char*)getTypeFromParam__15daTag_SSDrink_cFv)+0x78),
	(void*)(((char*)getTypeFromParam__15daTag_SSDrink_cFv)+0x88),
};

/* 80D637D8-80D637E4 000C+00 s=1 e=0 z=0  None .data      @3829                                                        */
SECTION_DATA static void* lit_3829[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__15daTag_SSDrink_cFPv,
};

/* 80D637E4-80D637F0 000C+00 s=1 e=0 z=0  None .data      @3881                                                        */
SECTION_DATA static void* lit_3881[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__15daTag_SSDrink_cFPv,
};

/* 80D637F0-80D637FC 000C+00 s=1 e=0 z=0  None .data      @3889                                                        */
SECTION_DATA static void* lit_3889[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)talk__15daTag_SSDrink_cFPv,
};

/* 80D637FC-80D63808 000C+00 s=1 e=0 z=0  None .data      @4003                                                        */
SECTION_DATA static void* lit_4003[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)wait__15daTag_SSDrink_cFPv,
};

/* 80D63808-80D63828 0020+00 s=1 e=0 z=0  None .data      daTag_SSDrink_MethodTable                                    */
SECTION_DATA static void* daTag_SSDrink_MethodTable[8] = {
	(void*)daTag_SSDrink_Create__FPv,
	(void*)daTag_SSDrink_Delete__FPv,
	(void*)daTag_SSDrink_Execute__FPv,
	(void*)daTag_SSDrink_IsDelete__FPv,
	(void*)daTag_SSDrink_Draw__FPv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80D63828-80D63858 0030+00 s=0 e=0 z=1  None .data      g_profile_TAG_SSDRINK                                        */
SECTION_DATA void* g_profile_TAG_SSDRINK[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01220000,
	(void*)&g_fpcLf_Method,
	(void*)0x000005D8,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00460000,
	(void*)&daTag_SSDrink_MethodTable,
	(void*)0x00064100,
	(void*)0x050E0000,
};

/* 80D63858-80D6386C 0014+00 s=2 e=0 z=0  None .data      __vt__15daTag_SSDrink_c                                      */
SECTION_DATA void* __vt__15daTag_SSDrink_c[5] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__15daTag_SSDrink_cFv,
	(void*)setSoldOut__14daObj_SSBase_cFv,
	(void*)getProcessID__14daObj_SSBase_cFv,
};

/* 80D62DB8-80D62E5C 00A4+00 s=1 e=0 z=0  None .text      create__15daTag_SSDrink_cFv                                  */
//	80D62DE8: 8015E3F8 (__ct__14daObj_SSBase_cFv)
//	80D62DEC: 80D63858 (__vt__15daTag_SSDrink_c)
//	80D62DF0: 80D63858 (__vt__15daTag_SSDrink_c)
//	80D62DFC: 80249F00 (__ct__10dMsgFlow_cFv)
//	80D62E10: 80D62ED8 (getTypeFromParam__15daTag_SSDrink_cFv)
//	80D62E1C: 80D62F8C (getFlowNodeNum__15daTag_SSDrink_cFv)
//	80D62E28: 80D62FC8 (getValue__15daTag_SSDrink_cFv)
//	80D62E3C: 80D63044 (initialize__15daTag_SSDrink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::create() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/create__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* 80D62E5C-80D62E64 0008+00 s=1 e=0 z=0  None .text      Delete__15daTag_SSDrink_cFv                                  */
// True False
//  bool False
bool daTag_SSDrink_c::Delete() {
	return true;
}


/* 80D62E64-80D62ED0 006C+00 s=2 e=0 z=0  None .text      Execute__15daTag_SSDrink_cFv                                 */
//	80D62E78: 80D63208 (chkEvent__15daTag_SSDrink_cFv)
//	80D62E88: 80362018 (__ptmf_test)
//	80D62EA0: 80362084 (__ptmf_scall)
//	80D62EAC: 80D63384 (orderEvent__15daTag_SSDrink_cFv)
//	80D62EB4: 80D631D4 (setAttnPos__15daTag_SSDrink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::Execute() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/Execute__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* 80D62ED0-80D62ED8 0008+00 s=1 e=0 z=0  None .text      Draw__15daTag_SSDrink_cFv                                    */
// True False
//  bool False
bool daTag_SSDrink_c::Draw() {
	return true;
}


/* 80D62ED8-80D62F80 00A8+00 s=2 e=0 z=0  None .text      getTypeFromParam__15daTag_SSDrink_cFv                        */
//	80D62EE8: 80D637BC (lit_3806)
//	80D62EEC: 80D637BC (lit_3806)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::getTypeFromParam() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/getTypeFromParam__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* 80D62F80-80D62F8C 000C+00 s=2 e=0 z=0  None .text      getSwitchFromParam__15daTag_SSDrink_cFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::getSwitchFromParam() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/getSwitchFromParam__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* 80D62F8C-80D62FC8 003C+00 s=3 e=0 z=0  None .text      getFlowNodeNum__15daTag_SSDrink_cFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::getFlowNodeNum() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/getFlowNodeNum__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* 80D62FC8-80D62FD4 000C+00 s=1 e=0 z=0  None .text      getValue__15daTag_SSDrink_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::getValue() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/getValue__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* 80D62FD4-80D63044 0070+00 s=1 e=0 z=0  None .text      restart__15daTag_SSDrink_cFv                                 */
//	80D6300C: 80D637D8 (lit_3829)
//	80D63010: 80D637D8 (lit_3829)
//	80D63030: 80D630E8 (setProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::restart() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/restart__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D637A0-80D637A4 0004+00 s=2 e=0 z=0  None .rodata    @3843                                                        */
SECTION_RODATA static u32 const lit_3843 = 0xC1F00000;

/* 80D63044-80D630BC 0078+00 s=1 e=0 z=0  None .text      initialize__15daTag_SSDrink_cFv                              */
//	80D63058: 80D637A0 (lit_3843)
//	80D6305C: 80D637A0 (lit_3843)
//	80D63078: 8001A548 (fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff)
//	80D6309C: 80D62FD4 (restart__15daTag_SSDrink_cFv)
//	80D630A4: 80D62E64 (Execute__15daTag_SSDrink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::initialize() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/initialize__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* 80D630BC-80D630E8 002C+00 s=2 e=0 z=0  None .text      checkProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i */
//	80D630CC: 80362048 (__ptmf_cmpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daTag_SSDrink_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daTag_SSDrink_c False
asm void daTag_SSDrink_c::checkProcess(int (daTag_SSDrink_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/checkProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i.s"
}
#pragma pop


/* 80D630E8-80D631D4 00EC+00 s=3 e=0 z=0  None .text      setProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i   */
//	80D630F8: 803621DC (_savegpr_29)
//	80D63124: 80D630BC (checkProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i)
//	80D63144: 80362018 (__ptmf_test)
//	80D6315C: 80362084 (__ptmf_scall)
//	80D6318C: 80362018 (__ptmf_test)
//	80D631A4: 80362084 (__ptmf_scall)
//	80D631C0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int (daTag_SSDrink_c::*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 daTag_SSDrink_c False
asm void daTag_SSDrink_c::setProcess(int (daTag_SSDrink_c::*)(void*)) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/setProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i.s"
}
#pragma pop


/* 80D631D4-80D63208 0034+00 s=1 e=0 z=0  None .text      setAttnPos__15daTag_SSDrink_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::setAttnPos() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/setAttnPos__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* 80D63208-80D63384 017C+00 s=1 e=0 z=0  None .text      chkEvent__15daTag_SSDrink_cFv                                */
//	80D63218: 803621DC (_savegpr_29)
//	80D63224: 804061C0 (g_dComIfG_gameInfo)
//	80D63228: 804061C0 (g_dComIfG_gameInfo)
//	80D63260: 80D637E4 (lit_3881)
//	80D63264: 80D637E4 (lit_3881)
//	80D63288: 80D630BC (checkProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i)
//	80D632A0: 80362084 (__ptmf_scall)
//	80D632B4: 804061C0 (g_dComIfG_gameInfo)
//	80D632B8: 804061C0 (g_dComIfG_gameInfo)
//	80D632E0: 800487F0 (ChkPresentEnd__16dEvent_manager_cFv)
//	80D632EC: 80D637F0 (lit_3889)
//	80D632F0: 80D637F0 (lit_3889)
//	80D63314: 80D630E8 (setProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i)
//	80D63354: 80238730 (dMsgObject_addTotalPrice__Fs)
//	80D63370: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::chkEvent() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/chkEvent__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D637A4-80D637A8 0004+00 s=0 e=0 z=0  None .rodata    @3844                                                        */
SECTION_RODATA u32 const lit_3844 = 0xC1700000;

/* 80D637A8-80D637AC 0004+00 s=0 e=0 z=0  None .rodata    @3845                                                        */
SECTION_RODATA u32 const lit_3845 = 0x41F00000;

/* 80D637AC-80D637B0 0004+00 s=0 e=0 z=0  None .rodata    @3846                                                        */
SECTION_RODATA u32 const lit_3846 = 0x42340000;

/* 80D637B0-80D637B4 0004+00 s=1 e=0 z=0  None .rodata    @3947                                                        */
SECTION_RODATA static u32 const lit_3947 = 0x43200000;

/* 80D63384-80D63490 010C+00 s=1 e=0 z=0  None .text      orderEvent__15daTag_SSDrink_cFv                              */
//	80D6339C: 804061C0 (g_dComIfG_gameInfo)
//	80D633A0: 804061C0 (g_dComIfG_gameInfo)
//	80D633B4: 80D62F80 (getSwitchFromParam__15daTag_SSDrink_cFv)
//	80D633BC: 804061C0 (g_dComIfG_gameInfo)
//	80D633C0: 804061C0 (g_dComIfG_gameInfo)
//	80D633CC: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D633E8: 80D62F8C (getFlowNodeNum__15daTag_SSDrink_cFv)
//	80D63424: 804061C0 (g_dComIfG_gameInfo)
//	80D63428: 804061C0 (g_dComIfG_gameInfo)
//	80D63430: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80D63434: 80D637B0 (lit_3947)
//	80D63438: 80D637B0 (lit_3947)
//	80D63450: 8001A79C (fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daTag_SSDrink_c::orderEvent() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/orderEvent__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* 80D63490-80D635C8 0138+00 s=2 e=0 z=0  None .text      wait__15daTag_SSDrink_cFPv                                   */
//	80D634A0: 803621DC (_savegpr_29)
//	80D634A8: 80D637A0 (lit_3843)
//	80D634AC: 80D637A0 (lit_3843)
//	80D634D4: 80D62F80 (getSwitchFromParam__15daTag_SSDrink_cFv)
//	80D634DC: 804061C0 (g_dComIfG_gameInfo)
//	80D634E0: 804061C0 (g_dComIfG_gameInfo)
//	80D634EC: 80035360 (isSwitch__10dSv_info_cCFii)
//	80D634FC: 804061C0 (g_dComIfG_gameInfo)
//	80D63500: 804061C0 (g_dComIfG_gameInfo)
//	80D63508: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80D63524: 8001A79C (fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80D63540: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80D6355C: 804061C0 (g_dComIfG_gameInfo)
//	80D63560: 804061C0 (g_dComIfG_gameInfo)
//	80D63588: 80073A08 (request__11dAttCatch_cFP10fopAc_ac_cUcfffsi)
//	80D635B4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daTag_SSDrink_c::wait(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/wait__15daTag_SSDrink_cFPv.s"
}
#pragma pop


/* 80D635C8-80D6369C 00D4+00 s=2 e=0 z=0  None .text      talk__15daTag_SSDrink_cFPv                                   */
//	80D63604: 80D62F8C (getFlowNodeNum__15daTag_SSDrink_cFv)
//	80D6361C: 80249F90 (init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c)
//	80D63634: 8024A2D8 (doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci)
//	80D63640: 804061C0 (g_dComIfG_gameInfo)
//	80D63644: 804061C0 (g_dComIfG_gameInfo)
//	80D6364C: 80042468 (reset__14dEvt_control_cFv)
//	80D63650: 80D637FC (lit_4003)
//	80D63654: 80D637FC (lit_4003)
//	80D63678: 80D630E8 (setProcess__15daTag_SSDrink_cFM15daTag_SSDrink_cFPCvPvPv_i)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void daTag_SSDrink_c::talk(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/talk__15daTag_SSDrink_cFPv.s"
}
#pragma pop


/* 80D6369C-80D636BC 0020+00 s=1 e=0 z=0  None .text      daTag_SSDrink_Create__FPv                                    */
//	80D636A8: 80D62DB8 (create__15daTag_SSDrink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daTag_SSDrink_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/daTag_SSDrink_Create__FPv.s"
}
#pragma pop


/* 80D636BC-80D636DC 0020+00 s=1 e=0 z=0  None .text      daTag_SSDrink_Delete__FPv                                    */
//	80D636C8: 80D62E5C (Delete__15daTag_SSDrink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daTag_SSDrink_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/daTag_SSDrink_Delete__FPv.s"
}
#pragma pop


/* 80D636DC-80D636FC 0020+00 s=1 e=0 z=0  None .text      daTag_SSDrink_Execute__FPv                                   */
//	80D636E8: 80D62E64 (Execute__15daTag_SSDrink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daTag_SSDrink_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/daTag_SSDrink_Execute__FPv.s"
}
#pragma pop


/* 80D636FC-80D6371C 0020+00 s=1 e=0 z=0  None .text      daTag_SSDrink_Draw__FPv                                      */
//	80D63708: 80D62ED0 (Draw__15daTag_SSDrink_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm static void daTag_SSDrink_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/daTag_SSDrink_Draw__FPv.s"
}
#pragma pop


/* 80D6371C-80D63724 0008+00 s=1 e=0 z=0  None .text      daTag_SSDrink_IsDelete__FPv                                  */
// True False
//  bool False
//  void* False
// 	 void False
static bool daTag_SSDrink_IsDelete(void* param_0) {
	return true;
}


/* 80D63724-80D63794 0070+00 s=1 e=0 z=0  None .text      __dt__15daTag_SSDrink_cFv                                    */
//	80D63744: 80D63858 (__vt__15daTag_SSDrink_c)
//	80D63748: 80D63858 (__vt__15daTag_SSDrink_c)
//	80D63758: 80249F48 (__dt__10dMsgFlow_cFv)
//	80D63764: 8015E450 (__dt__14daObj_SSBase_cFv)
//	80D63774: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daTag_SSDrink_c::~daTag_SSDrink_c() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_ss_drink/d_a_tag_ss_drink/__dt__15daTag_SSDrink_cFv.s"
}
#pragma pop


/* 80D63794-80D63798 0004+00 s=1 e=0 z=0  None .text      setSoldOut__14daObj_SSBase_cFv                               */
// True False
//  void False
void daObj_SSBase_c::setSoldOut() {
	/* empty function */
}


/* ############################################################################################## */
/* 80D637B4-80D637B8 0004+00 s=0 e=0 z=0  None .rodata    @3991                                                        */
SECTION_RODATA u32 const lit_3991 = 0x43480000;

/* 80D637B8-80D637BC 0004+00 s=0 e=0 z=0  None .rodata    @3992                                                        */
SECTION_RODATA u32 const lit_3992 = 0x42C80000;

