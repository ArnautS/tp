// 
// Generated By: dol2asm
// Translation Unit: d_a_canoe
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/d_a_canoe/d_a_canoe.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
	/* 80018C8C */ // False False
~fopAc_ac_c();
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 80267128 */ // False False
void atan2sX_Z() const;
	/* 80267150 */ // False False
void atan2sY_XZ() const;
	/* 804DA5B8 */ // True False
~cXyz();
};

struct fopAcM_wt_c {
	/* 8001DD84 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void waterCheck(cXyz const*);
};

struct daTagWaterFall_c {
	/* 80D64768 */ // False False
//  cXyz False
void checkHitWaterFall(cXyz);
};

struct daPy_py_c {
	/* 8015EA20 */ // False False
//  int False
void checkFishingRodItem(int);
};

struct daObjGOMIKABE_c {
	/* 80BFE52C */ // False False
void BreakSet();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct daCanoe_c {
	/* 804DA5F4 */ // True False
void createHeap();
	/* 804DA740 */ // True False
void create();
	/* 804DAEA8 */ // True False
~daCanoe_c();
	/* 804DB008 */ // True False
void setRoomInfo();
	/* 804DB0B0 */ // True False
void setMatrix();
	/* 804DB3F4 */ // True False
void setCollision();
	/* 804DB578 */ // True False
void posMove();
	/* 804DB754 */ // True False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
void checkGomikabe(cBgS_PolyInfo&);
	/* 804DB7AC */ // True False
void setFrontBackPos();
	/* 804DB828 */ // True False
void frontBackBgCheck();
	/* 804DC330 */ // True False
void setPaddleEffect();
	/* 804DC554 */ // True False
void setCanoeSliderEffect();
	/* 804DC7B4 */ // True False
void execute();
	/* 804DD35C */ // True False
void draw();
};

struct daAlink_c {
	/* 800A21E0 */ // False False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  int False
void getMoveBGActorName(cBgS_PolyInfo&, int);
	/* 800F3BB0 */ // False False
void getCanoeMaxSpeed() const;
	/* 800F3BDC */ // False False
void getCanoeBackMaxSpeed() const;
	/* 800F3BEC */ // False False
void getCanoeCres() const;
	/* 800F3C44 */ // False False
void getCanoeMaxRotSpeed() const;
	/* 800F3CCC */ // False False
void getCanoeLocalPaddleTop();
	/* 800F3DFC */ // False False
void getCanoePaddleMatrix();
	/* 800F3EB8 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void checkCanoePaddleGrab(fopAc_ac_c*) const;
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct dKy_tevstr_c {
};

struct J3DModelData {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004C838 */ // False False
//  u32* False
// 	 u32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
void setWaterRipple(u32*, cBgS_PolyInfo&, cXyz const*, f32, dKy_tevstr_c const*, cXyz const*, s8);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dMeter2Info_c {
	/* 8021E268 */ // False False
//  s8 False
void setMiniGameCount(s8);
};

struct J3DModel {
};

struct dDlst_shadowControl_c {
	/* 80055F1C */ // False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
void addReal(u32, J3DModel*);
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 804DAE2C */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 80084658 */ // False False
void ChkCoHit();
};

struct dCcD_GAtTgCoCommonBase {
	/* 80083688 */ // False False
void GetAc();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
	/* 804DAB18 */ // True False
~dCcD_Cyl();
	/* 804DABE4 */ // True False
dCcD_Cyl();
};

struct dBgS_PolyPassChk {
	/* 80078E98 */ // False False
void SetLink();
};

struct dBgS_LinkLinChk {
	/* 80078030 */ // False False
dBgS_LinkLinChk();
	/* 8007808C */ // False False
~dBgS_LinkLinChk();
};

struct dBgS_LinkAcch {
	/* 804DACF8 */ // True False
~dBgS_LinkAcch();
	/* 804DAD68 */ // True False
dBgS_LinkAcch();
};

struct dBgS_LinChk {
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 804DADBC */ // True False
~dBgS_AcchCir();
};

struct dBgS {
	/* 80074BE8 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyColor(cBgS_PolyInfo const&);
	/* 80075100 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetRoomId(cBgS_PolyInfo const&);
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076288 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
void Set(fopAc_ac_c*, int, dBgS_AcchCir*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGPla {
	/* 804DC2E8 */ // True False
~cM3dGPla();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 804DAC68 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 804DACB0 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_Stts {
	/* 8026395C */ // False False
void ClrCcMove();
};

struct cCcD_ObjCo {
	/* 8026491C */ // False False
//  u32 False
void SetVsGrp(u32);
};

struct cCcD_GStts {
	/* 804DD574 */ // True False
~cCcD_GStts();
};

struct cBgS_LinChk {
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 80074618 */ // False False
//  int False
void GetActorPointer(int) const;
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct _GXTexObj {
};

struct Z2SoundObjSimple {
	/* 802BE844 */ // False False
Z2SoundObjSimple();
};

struct Z2SoundObjBase {
	/* 802BDF48 */ // False False
~Z2SoundObjBase();
	/* 802BDFF8 */ // False False
void deleteObject();
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct JGeometry {
	template <typename A1>
	struct TVec3 { };
	/* TVec3<f32> */
	struct TVec3__template0 {
	};

};

// 
// Forward References:
// 

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
static void daCanoe_searchTagWaterFall(fopAc_ac_c*, void*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daCanoe_createHeap(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daCanoe_Create(fopAc_ac_c*);
// True False
//  daCanoe_c* False
// 	 daCanoe_c False
static void daCanoe_Delete(daCanoe_c*);
// True False
//  daCanoe_c* False
// 	 daCanoe_c False
static void daCanoe_Execute(daCanoe_c*);
// True False
//  daCanoe_c* False
// 	 daCanoe_c False
static void daCanoe_Draw(daCanoe_c*);

// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
extern "C" static void daCanoe_searchTagWaterFall__FP10fopAc_ac_cPv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void createHeap__9daCanoe_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daCanoe_createHeap__FP10fopAc_ac_c();
// True False
extern "C" void create__9daCanoe_cFv();
// True False
extern "C" void __dt__8dCcD_CylFv();
// True False
extern "C" void __ct__8dCcD_CylFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__13dBgS_LinkAcchFv();
// True False
extern "C" void __ct__13dBgS_LinkAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daCanoe_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__9daCanoe_cFv();
// True False
//  daCanoe_c* False
// 	 daCanoe_c False
extern "C" static void daCanoe_Delete__FP9daCanoe_c();
// True False
extern "C" void setRoomInfo__9daCanoe_cFv();
// True False
extern "C" void setMatrix__9daCanoe_cFv();
// True False
extern "C" void setCollision__9daCanoe_cFv();
// True False
extern "C" void posMove__9daCanoe_cFv();
// True False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
extern "C" void checkGomikabe__9daCanoe_cFR13cBgS_PolyInfo();
// True False
extern "C" void setFrontBackPos__9daCanoe_cFv();
// True False
extern "C" void frontBackBgCheck__9daCanoe_cFv();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
extern "C" void setPaddleEffect__9daCanoe_cFv();
// True False
extern "C" void setCanoeSliderEffect__9daCanoe_cFv();
// True False
extern "C" void execute__9daCanoe_cFv();
// True False
//  daCanoe_c* False
// 	 daCanoe_c False
extern "C" static void daCanoe_Execute__FP9daCanoe_c();
// True False
extern "C" void draw__9daCanoe_cFv();
// True False
//  daCanoe_c* False
// 	 daCanoe_c False
extern "C" static void daCanoe_Draw__FP9daCanoe_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" static void func_804DD5BC();
// True False
extern "C" static void func_804DD5C4();
extern "C" extern u8 const l_arcName[6 + 2 /* padding */];
extern "C" extern u8 const l_arcName2[7 + 1 /* padding */];
extern "C" extern u8 const l_arcName3[8];
extern "C" extern u32 const lit_4328;
extern "C" extern u32 const lit_4329;
extern "C" extern u32 const lit_4330;
extern "C" extern u32 const lit_4331;
extern "C" extern u32 const lit_4332;
extern "C" extern u32 const lit_4333;
extern "C" extern u32 const lit_4334;
extern "C" extern u32 const lit_4335;
extern "C" extern u32 const lit_4336;
extern "C" extern u32 const lit_4626;
extern "C" extern u32 const lit_4627;
extern "C" extern u32 const lit_4628;
extern "C" extern u32 const lit_4629;
extern "C" extern u32 const lit_4630;
extern "C" extern u32 const lit_4631;
extern "C" extern u32 const lit_4632;
extern "C" extern u32 const lit_4633;
extern "C" extern u32 const lit_4634;
extern "C" extern u32 const lit_4635;
extern "C" extern u8 const lit_4636[4];
extern "C" extern u32 const lit_4637;
extern "C" extern u32 const lit_4638;
extern "C" extern u32 const lit_4639;
extern "C" extern u32 const lit_4640;
extern "C" extern u32 const lit_4641;
extern "C" extern u32 const lit_4642;
extern "C" extern u8 const lit_4738[8];
extern "C" extern u8 const lit_5087[8];
extern "C" extern u8 const lit_5088[8];
extern "C" extern u8 const lit_5089[8];
extern "C" extern u32 const lit_5090;
extern "C" extern u32 const lit_5091;
extern "C" extern u32 const lit_5092;
extern "C" extern u32 const lit_5172;
extern "C" extern u32 const lit_5173;
extern "C" extern u8 const data_804DD6B8[4];
extern "C" extern u32 const lit_5280;
extern "C" extern u32 const lit_5504;
extern "C" extern u32 const lit_5505;
extern "C" extern u32 const lit_5506;
extern "C" extern u32 const lit_5507;
extern "C" extern u32 const lit_5508;
extern "C" extern u32 const lit_5573;
extern "C" extern u32 const lit_5574;
extern "C" extern u32 const lit_5575;
extern "C" extern u32 const lit_5576;
extern "C" extern u32 const lit_5577;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_CANOE[12];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__13dBgS_LinkAcch[9];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 3 /* padding */];
extern "C" extern u8 lit_5103[12 + 4 /* padding */];
extern "C" extern u8 data_804DD848[12];
extern "C" extern u8 lit_5356[12 + 4 /* padding */];
extern "C" extern u8 data_804DD864[12];
extern "C" extern u8 data_804DD870[4];
extern "C" extern u8 data_804DD874[4];
extern "C" extern u8 data_804DD878[4];
extern "C" extern u8 data_804DD87C[4];
extern "C" extern u8 data_804DD880[4];
extern "C" extern u8 data_804DD884[4];
extern "C" extern u8 data_804DD888[4];
extern "C" extern u8 data_804DD88C[4];
extern "C" extern u8 data_804DD890[4];
extern "C" extern u8 data_804DD894[4];
extern "C" extern u8 data_804DD898[4];
extern "C" extern u8 data_804DD89C[4];
extern "C" extern u8 data_804DD8A0[4];
extern "C" extern u8 data_804DD8A4[4];
extern "C" extern u8 data_804DD8A8[4];
extern "C" extern u8 data_804DD8AC[4];
extern "C" extern u8 data_804DD8B0[4];
extern "C" extern u8 data_804DD8B4[4];
extern "C" extern u8 data_804DD8B8[4];
extern "C" extern u8 data_804DD8BC[4];
extern "C" extern u8 data_804DD8C0[4];
extern "C" extern u8 data_804DD8C4[4];
extern "C" extern u8 data_804DD8C8[4];
extern "C" extern u8 data_804DD8CC[4];
extern "C" extern u8 data_804DD8D0[4];
extern "C" extern u8 data_804DD8D4[4];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
void mDoMtx_XYZrotM(f32 (* )[4], s16, s16, s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  int (*)(void*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Executor(int (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cXyz* False
// 	 cXyz False
//  int* False
// 	 int False
//  int False
void fopAcM_getWaterStream(cXyz const*, cBgS_PolyInfo const&, cXyz*, int*, int);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  int False
void fopKyM_createWpillar(cXyz const*, f32, int);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  f32 False
void cM_rad2s(f32);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc(f32*, f32, f32, f32, f32);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalcPosXZ(cXyz*, cXyz const&, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  s16 False
//  s16 False
void cLib_distanceAngleS(s16, s16);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
//  s16 False
//  s16 False
extern "C" void mDoMtx_XYZrotM__FPA4_fsss();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void __dt__10fopAc_ac_cFv();
// False False
//  int (*)(void*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Executor__FPFPvPv_iPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cXyz* False
// 	 cXyz False
//  int* False
// 	 int False
//  int False
extern "C" void fopAcM_getWaterStream__FPC4cXyzRC13cBgS_PolyInfoP4cXyzPii();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void waterCheck__11fopAcM_wt_cFPC4cXyz();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  int False
extern "C" void fopKyM_createWpillar__FPC4cXyzfi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u32* False
// 	 u32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
extern "C" void setWaterRipple__13dPa_control_cFPUlR13cBgS_PolyInfoPC4cXyzfPC12dKy_tevstr_cPC4cXyzSc();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  int False
extern "C" void GetActorPointer__4cBgSCFi();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyColor__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
extern "C" void Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void __ct__15dBgS_LinkLinChkFv();
// False False
extern "C" void __dt__15dBgS_LinkLinChkFv();
// False False
extern "C" void SetLink__16dBgS_PolyPassChkFv();
// False False
extern "C" void GetAc__22dCcD_GAtTgCoCommonBaseFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  int False
extern "C" void getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi();
// False False
extern "C" void getCanoeMaxSpeed__9daAlink_cCFv();
// False False
extern "C" void getCanoeBackMaxSpeed__9daAlink_cCFv();
// False False
extern "C" void getCanoeCres__9daAlink_cCFv();
// False False
extern "C" void getCanoeMaxRotSpeed__9daAlink_cCFv();
// False False
extern "C" void getCanoeLocalPaddleTop__9daAlink_cFv();
// False False
extern "C" void getCanoePaddleMatrix__9daAlink_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void checkCanoePaddleGrab__9daAlink_cCFP10fopAc_ac_c();
// False False
//  int False
extern "C" void checkFishingRodItem__9daPy_py_cFi();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  s8 False
extern "C" void setMiniGameCount__13dMeter2Info_cFSc();
// False False
extern "C" void ClrCcMove__9cCcD_SttsFv();
// False False
//  u32 False
extern "C" void SetVsGrp__10cCcD_ObjCoFUl();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
extern "C" void atan2sX_Z__4cXyzCFv();
// False False
extern "C" void atan2sY_XZ__4cXyzCFv();
// False False
//  f32 False
extern "C" void cM_rad2s__Ff();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc__FPfffff();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalcPosXZ__FP4cXyzRC4cXyzfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  s16 False
//  s16 False
extern "C" void cLib_distanceAngleS__Fss();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_802807E0();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void __dt__14Z2SoundObjBaseFv();
// False False
extern "C" void deleteObject__14Z2SoundObjBaseFv();
// False False
extern "C" void __ct__16Z2SoundObjSimpleFv();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSubtract();
// False False
extern "C" void PSVECScale();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __cvt_fp2unsigned();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void abs();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__16Z2SoundObjSimple[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mWaterCheck__11fopAcM_wt_c[84 + 4 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern f32 Zero__4cXyz[3];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mWaterY__11fopAcM_wt_c[1 + 1 /* padding */];
extern "C" extern u8 struct_80450D64[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();
// False False
extern "C" void BreakSet__15daObjGOMIKABE_cFv();
// False False
//  cXyz False
extern "C" void checkHitWaterFall__16daTagWaterFall_cF4cXyz();

// 
// Declarations:
// 

/* 804DA54C-804DA5B8 006C+00 s=1 e=0 z=0  None .text      daCanoe_searchTagWaterFall__FP10fopAc_ac_cPv                 */
//	804DA580: 80D64768 (checkHitWaterFall__16daTagWaterFall_cF4cXyz)
//	804DA58C: 804061C0 (g_dComIfG_gameInfo)
//	804DA590: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  void* False
// 	 void False
asm static void daCanoe_searchTagWaterFall(fopAc_ac_c* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/daCanoe_searchTagWaterFall__FP10fopAc_ac_cPv.s"
}
#pragma pop


/* 804DA5B8-804DA5F4 003C+00 s=2 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	804DA5D8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__dt__4cXyzFv.s"
}
#pragma pop


/* 804DA5F4-804DA720 012C+00 s=1 e=0 z=0  None .text      createHeap__9daCanoe_cFv                                     */
//	804DA604: 803621D8 (_savegpr_28)
//	804DA614: 804061C0 (g_dComIfG_gameInfo)
//	804DA618: 804061C0 (g_dComIfG_gameInfo)
//	804DA62C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	804DA644: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	804DA65C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	804DA674: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	804DA6A0: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	804DA6CC: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	804DA70C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::createHeap() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/createHeap__9daCanoe_cFv.s"
}
#pragma pop


/* 804DA720-804DA740 0020+00 s=1 e=0 z=0  None .text      daCanoe_createHeap__FP10fopAc_ac_c                           */
//	804DA72C: 804DA5F4 (createHeap__9daCanoe_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daCanoe_createHeap(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/daCanoe_createHeap__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 804DD5DC-804DD5E8 000C+00 s=8 e=0 z=0  None .rodata    @3766                                                        */
SECTION_RODATA static u8 const lit_3766[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804DD5E8-804DD5F0 0006+02 s=0 e=0 z=0  None .rodata    l_arcName                                                    */
SECTION_RODATA u8 const l_arcName[6 + 2 /* padding */] = {
	0x43, 0x61, 0x6E, 0x6F, 0x65, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 804DD5F0-804DD5F8 0007+01 s=0 e=0 z=0  None .rodata    l_arcName2                                                   */
SECTION_RODATA u8 const l_arcName2[7 + 1 /* padding */] = {
	0x43, 0x61, 0x6E, 0x6F, 0x65, 0x42, 0x00,
	/* padding */
	0x00,
};

/* 804DD5F8-804DD600 0008+00 s=0 e=0 z=0  None .rodata    l_arcName3                                                   */
SECTION_RODATA u8 const l_arcName3[8] = {
	0x43, 0x61, 0x6E, 0x6F, 0x65, 0x45, 0x33, 0x00,
};

/* 804DD600-804DD614 0014+00 s=2 e=0 z=0  None .rodata    l_cylOffsetZ                                                 */
SECTION_RODATA static u8 const l_cylOffsetZ[20] = {
	0x43, 0x48, 0x00, 0x00, 0x42, 0xDC, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0xC2, 0x8C, 0x00, 0x00,
	0xC3, 0x20, 0x00, 0x00,
};

/* 804DD614-804DD618 0004+00 s=0 e=0 z=0  None .rodata    @4328                                                        */
SECTION_RODATA u32 const lit_4328 = 0xC2A00000;

/* 804DD618-804DD61C 0004+00 s=0 e=0 z=0  None .rodata    @4329                                                        */
SECTION_RODATA u32 const lit_4329 = 0xC2200000;

/* 804DD61C-804DD620 0004+00 s=0 e=0 z=0  None .rodata    @4330                                                        */
SECTION_RODATA u32 const lit_4330 = 0xC3660000;

/* 804DD620-804DD624 0004+00 s=0 e=0 z=0  None .rodata    @4331                                                        */
SECTION_RODATA u32 const lit_4331 = 0x42A00000;

/* 804DD624-804DD628 0004+00 s=0 e=0 z=0  None .rodata    @4332                                                        */
SECTION_RODATA u32 const lit_4332 = 0x42B40000;

/* 804DD628-804DD62C 0004+00 s=0 e=0 z=0  None .rodata    @4333                                                        */
SECTION_RODATA u32 const lit_4333 = 0x438C0000;

/* 804DD62C-804DD630 0004+00 s=0 e=0 z=0  None .rodata    @4334                                                        */
SECTION_RODATA u32 const lit_4334 = 0x41200000;

/* 804DD630-804DD634 0004+00 s=0 e=0 z=0  None .rodata    @4335                                                        */
SECTION_RODATA u32 const lit_4335 = 0x42700000;

/* 804DD634-804DD638 0004+00 s=0 e=0 z=0  None .rodata    @4336                                                        */
SECTION_RODATA u32 const lit_4336 = 0x42200000;

/* 804DD638-804DD63C 0004+00 s=1 e=0 z=0  None .rodata    @4480                                                        */
SECTION_RODATA static u32 const lit_4480 = 0xCE6E6B28;

/* 804DD63C-804DD640 0004+00 s=0 e=0 z=0  None .rodata    @4626                                                        */
SECTION_RODATA u32 const lit_4626 = 0x40A00000;

/* 804DD640-804DD644 0004+00 s=0 e=0 z=0  None .rodata    @4627                                                        */
SECTION_RODATA u32 const lit_4627 = 0xC0A00000;

/* 804DD644-804DD648 0004+00 s=0 e=0 z=0  None .rodata    @4628                                                        */
SECTION_RODATA u32 const lit_4628 = 0x3DCCCCCD;

/* 804DD648-804DD64C 0004+00 s=0 e=0 z=0  None .rodata    @4629                                                        */
SECTION_RODATA u32 const lit_4629 = 0x3F266666;

/* 804DD64C-804DD650 0004+00 s=0 e=0 z=0  None .rodata    @4630                                                        */
SECTION_RODATA u32 const lit_4630 = 0x3F800000;

/* 804DD650-804DD654 0004+00 s=0 e=0 z=0  None .rodata    @4631                                                        */
SECTION_RODATA u32 const lit_4631 = 0x3F000000;

/* 804DD654-804DD658 0004+00 s=0 e=0 z=0  None .rodata    @4632                                                        */
SECTION_RODATA u32 const lit_4632 = 0x3EA0D97C;

/* 804DD658-804DD65C 0004+00 s=0 e=0 z=0  None .rodata    @4633                                                        */
SECTION_RODATA u32 const lit_4633 = 0x3D4CCCCD;

/* 804DD65C-804DD660 0004+00 s=0 e=0 z=0  None .rodata    @4634                                                        */
SECTION_RODATA u32 const lit_4634 = 0x3FB33333;

/* 804DD660-804DD664 0004+00 s=0 e=0 z=0  None .rodata    @4635                                                        */
SECTION_RODATA u32 const lit_4635 = 0xBF800000;

/* 804DD664-804DD668 0004+00 s=0 e=0 z=0  None .rodata    @4636                                                        */
SECTION_RODATA u8 const lit_4636[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 804DD668-804DD66C 0004+00 s=0 e=0 z=0  None .rodata    @4637                                                        */
SECTION_RODATA u32 const lit_4637 = 0x38D1B717;

/* 804DD66C-804DD670 0004+00 s=0 e=0 z=0  None .rodata    @4638                                                        */
SECTION_RODATA u32 const lit_4638 = 0xBF000000;

/* 804DD670-804DD674 0004+00 s=0 e=0 z=0  None .rodata    @4639                                                        */
SECTION_RODATA u32 const lit_4639 = 0x40400000;

/* 804DD674-804DD678 0004+00 s=0 e=0 z=0  None .rodata    @4640                                                        */
SECTION_RODATA u32 const lit_4640 = 0x3C75C28F;

/* 804DD678-804DD67C 0004+00 s=0 e=0 z=0  None .rodata    @4641                                                        */
SECTION_RODATA u32 const lit_4641 = 0x3F7851EC;

/* 804DD67C-804DD680 0004+00 s=0 e=0 z=0  None .rodata    @4642                                                        */
SECTION_RODATA u32 const lit_4642 = 0x420C0000;

/* 804DD680-804DD684 0004+00 s=1 e=0 z=0  None .rodata    @4683                                                        */
SECTION_RODATA static u32 const lit_4683 = 0x41F00000;

/* 804DD684-804DD68C 0008+00 s=0 e=0 z=0  None .rodata    @4738                                                        */
SECTION_RODATA u8 const lit_4738[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 804DD68C-804DD694 0008+00 s=0 e=0 z=0  None .rodata    @5087                                                        */
SECTION_RODATA u8 const lit_5087[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804DD694-804DD69C 0008+00 s=0 e=0 z=0  None .rodata    @5088                                                        */
SECTION_RODATA u8 const lit_5088[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804DD69C-804DD6A4 0008+00 s=0 e=0 z=0  None .rodata    @5089                                                        */
SECTION_RODATA u8 const lit_5089[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804DD6A4-804DD6A8 0004+00 s=0 e=0 z=0  None .rodata    @5090                                                        */
SECTION_RODATA u32 const lit_5090 = 0xC2480000;

/* 804DD6A8-804DD6AC 0004+00 s=0 e=0 z=0  None .rodata    @5091                                                        */
SECTION_RODATA u32 const lit_5091 = 0x43C80000;

/* 804DD6AC-804DD6B0 0004+00 s=0 e=0 z=0  None .rodata    @5092                                                        */
SECTION_RODATA u32 const lit_5092 = 0x3F19999A;

/* 804DD6B0-804DD6B4 0004+00 s=0 e=0 z=0  None .rodata    @5172                                                        */
SECTION_RODATA u32 const lit_5172 = 0x3F333333;

/* 804DD6B4-804DD6B8 0004+00 s=0 e=0 z=0  None .rodata    @5173                                                        */
SECTION_RODATA u32 const lit_5173 = 0x3E99999A;

/* 804DD6B8-804DD6BC 0004+00 s=0 e=0 z=0  None .rodata    effName$5177                                                 */
SECTION_RODATA u8 const data_804DD6B8[4] = {
	0x8A, 0x5A, 0x8A, 0x5B,
};

/* 804DD6BC-804DD6C0 0004+00 s=0 e=0 z=0  None .rodata    @5280                                                        */
SECTION_RODATA u32 const lit_5280 = 0x41C80000;

/* 804DD6C0-804DD6C4 0004+00 s=0 e=0 z=0  None .rodata    @5504                                                        */
SECTION_RODATA u32 const lit_5504 = 0x3E567750;

/* 804DD6C4-804DD6C8 0004+00 s=0 e=0 z=0  None .rodata    @5505                                                        */
SECTION_RODATA u32 const lit_5505 = 0x40C00000;

/* 804DD6C8-804DD6CC 0004+00 s=0 e=0 z=0  None .rodata    @5506                                                        */
SECTION_RODATA u32 const lit_5506 = 0x3C23D70A;

/* 804DD6CC-804DD6D0 0004+00 s=0 e=0 z=0  None .rodata    @5507                                                        */
SECTION_RODATA u32 const lit_5507 = 0x40000000;

/* 804DD6D0-804DD6D4 0004+00 s=0 e=0 z=0  None .rodata    @5508                                                        */
SECTION_RODATA u32 const lit_5508 = 0x42FE0000;

/* 804DD6D4-804DD6D8 0004+00 s=0 e=0 z=0  None .rodata    @5573                                                        */
SECTION_RODATA u32 const lit_5573 = 0x41B80000;

/* 804DD6D8-804DD6DC 0004+00 s=0 e=0 z=0  None .rodata    @5574                                                        */
SECTION_RODATA u32 const lit_5574 = 0x432F0000;

/* 804DD6DC-804DD6E0 0004+00 s=0 e=0 z=0  None .rodata    @5575                                                        */
SECTION_RODATA u32 const lit_5575 = 0x41A00000;

/* 804DD6E0-804DD6E4 0004+00 s=0 e=0 z=0  None .rodata    @5576                                                        */
SECTION_RODATA u32 const lit_5576 = 0x41E80000;

/* 804DD6E4-804DD6E8 0004+00 s=0 e=0 z=0  None .rodata    @5577                                                        */
SECTION_RODATA u32 const lit_5577 = 0x44480000;

/* 804DD6E8-804DD6F0 0008+00 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_804DD6E8 = "F_SP127";
#pragma pop

/* 804DD6F0-804DD734 0044+00 s=1 e=0 z=0  None .data      l_cylSrc                                                     */
SECTION_DATA static u8 l_cylSrc[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x5C, 0x00, 0x00,
	0x42, 0xA0, 0x00, 0x00,
};

/* 804DA740-804DAB18 03D8+00 s=1 e=0 z=0  None .text      create__9daCanoe_cFv                                         */
//	804DA750: 803621D0 (_savegpr_26)
//	804DA758: 804DD5DC (lit_3766)
//	804DA75C: 804DD5DC (lit_3766)
//	804DA778: 80018B64 (__ct__10fopAc_ac_cFv)
//	804DA77C: 803C3728 (__vt__9cCcD_Stts)
//	804DA780: 803C3728 (__vt__9cCcD_Stts)
//	804DA78C: 80083760 (__ct__10dCcD_GSttsFv)
//	804DA790: 803AC2E4 (__vt__9dCcD_Stts)
//	804DA794: 803AC2E4 (__vt__9dCcD_Stts)
//	804DA7A8: 80075EAC (__ct__12dBgS_AcchCirFv)
//	804DA7AC: 80075EAC (__ct__12dBgS_AcchCirFv)
//	804DA7B0: 804DADBC (__dt__12dBgS_AcchCirFv)
//	804DA7B4: 804DADBC (__dt__12dBgS_AcchCirFv)
//	804DA7C0: 80361D60 (__construct_array)
//	804DA7C8: 804DAD68 (__ct__13dBgS_LinkAcchFv)
//	804DA7CC: 804DAD68 (__ct__13dBgS_LinkAcchFv)
//	804DA7D0: 804DACF8 (__dt__13dBgS_LinkAcchFv)
//	804DA7D4: 804DACF8 (__dt__13dBgS_LinkAcchFv)
//	804DA7E0: 80361D60 (__construct_array)
//	804DA7E8: 804DABE4 (__ct__8dCcD_CylFv)
//	804DA7EC: 804DABE4 (__ct__8dCcD_CylFv)
//	804DA7F0: 804DAB18 (__dt__8dCcD_CylFv)
//	804DA7F4: 804DAB18 (__dt__8dCcD_CylFv)
//	804DA800: 80361D60 (__construct_array)
//	804DA808: 80078030 (__ct__15dBgS_LinkLinChkFv)
//	804DA810: 802BE844 (__ct__16Z2SoundObjSimpleFv)
//	804DA820: 804061C0 (g_dComIfG_gameInfo)
//	804DA824: 804061C0 (g_dComIfG_gameInfo)
//	804DA82C: 804DD6E8 (stringBase0)
//	804DA830: 804DD6E8 (stringBase0)
//	804DA834: 80368994 (strcmp)
//	804DA840: 804061C0 (g_dComIfG_gameInfo)
//	804DA844: 804061C0 (g_dComIfG_gameInfo)
//	804DA850: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	804DA854: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	804DA85C: 800349BC (isEventBit__11dSv_event_cCFUs)
//	804DA874: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	804DA878: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	804DA880: 800349BC (isEventBit__11dSv_event_cCFUs)
//	804DA8E4: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	804DA8F8: 804DA720 (daCanoe_createHeap__FP10fopAc_ac_c)
//	804DA8FC: 804DA720 (daCanoe_createHeap__FP10fopAc_ac_c)
//	804DA904: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	804DA934: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	804DA948: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	804DA95C: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	804DA96C: 804DB7AC (setFrontBackPos__9daCanoe_cFv)
//	804DA9B8: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	804DA9C8: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	804DA9D8: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	804DA9FC: 80076288 (Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir)
//	804DAA30: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	804DAA58: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	804DAA98: 804DD6F0 (l_cylSrc)
//	804DAA9C: 804DD6F0 (l_cylSrc)
//	804DAAAC: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	804DAAD4: 8002D06C (dComIfGp_getReverb__Fi)
//	804DAAF8: 804DB0B0 (setMatrix__9daCanoe_cFv)
//	804DAB04: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::create() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/create__9daCanoe_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804DD734-804DD754 0020+00 s=1 e=0 z=0  None .data      l_daCanoe_Method                                             */
SECTION_DATA static void* l_daCanoe_Method[8] = {
	(void*)daCanoe_Create__FP10fopAc_ac_c,
	(void*)daCanoe_Delete__FP9daCanoe_c,
	(void*)daCanoe_Execute__FP9daCanoe_c,
	(void*)NULL,
	(void*)daCanoe_Draw__FP9daCanoe_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 804DD754-804DD784 0030+00 s=0 e=0 z=1  None .data      g_profile_CANOE                                              */
SECTION_DATA void* g_profile_CANOE[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0004FFFD,
	(void*)0x00ED0000,
	(void*)&g_fpcLf_Method,
	(void*)0x000014DC,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02D40000,
	(void*)&l_daCanoe_Method,
	(void*)0x00044100,
	(void*)0x030E0000,
};

/* 804DD784-804DD790 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 804DD790-804DD79C 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 804DD79C-804DD7A8 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 804DD7A8-804DD7B4 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 804DD7B4-804DD7D8 0024+00 s=2 e=0 z=0  None .data      __vt__13dBgS_LinkAcch                                        */
SECTION_DATA void* __vt__13dBgS_LinkAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__13dBgS_LinkAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_804DD5C4,
	(void*)NULL,
	(void*)NULL,
	(void*)func_804DD5BC,
};

/* 804DD7D8-804DD7E4 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 804DD7E4-804DD7F0 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 804DAB18-804DABE4 00CC+00 s=2 e=0 z=0  None .text      __dt__8dCcD_CylFv                                            */
//	804DAB38: 803AC050 (__vt__8dCcD_Cyl)
//	804DAB3C: 803AC050 (__vt__8dCcD_Cyl)
//	804DAB5C: 803C35A4 (__vt__12cCcD_CylAttr)
//	804DAB60: 803C35A4 (__vt__12cCcD_CylAttr)
//	804DAB78: 804DD7E4 (__vt__8cM3dGCyl)
//	804DAB7C: 804DD7E4 (__vt__8cM3dGCyl)
//	804DAB8C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	804DAB90: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	804DABA0: 804DD7D8 (__vt__8cM3dGAab)
//	804DABA4: 804DD7D8 (__vt__8cM3dGAab)
//	804DABB4: 800840E4 (__dt__12dCcD_GObjInfFv)
//	804DABC4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::~dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__dt__8dCcD_CylFv.s"
}
#pragma pop


/* 804DABE4-804DAC68 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_CylFv                                            */
//	804DABF8: 80083A28 (__ct__12dCcD_GObjInfFv)
//	804DABFC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	804DAC00: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	804DAC08: 804DD7D8 (__vt__8cM3dGAab)
//	804DAC0C: 804DD7D8 (__vt__8cM3dGAab)
//	804DAC14: 804DD7E4 (__vt__8cM3dGCyl)
//	804DAC18: 804DD7E4 (__vt__8cM3dGCyl)
//	804DAC20: 803C35A4 (__vt__12cCcD_CylAttr)
//	804DAC24: 803C35A4 (__vt__12cCcD_CylAttr)
//	804DAC34: 803AC050 (__vt__8dCcD_Cyl)
//	804DAC38: 803AC050 (__vt__8dCcD_Cyl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Cyl::dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__ct__8dCcD_CylFv.s"
}
#pragma pop


/* 804DAC68-804DACB0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	804DAC80: 804DD7E4 (__vt__8cM3dGCyl)
//	804DAC84: 804DD7E4 (__vt__8cM3dGCyl)
//	804DAC94: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 804DACB0-804DACF8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	804DACC8: 804DD7D8 (__vt__8cM3dGAab)
//	804DACCC: 804DD7D8 (__vt__8cM3dGAab)
//	804DACDC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 804DACF8-804DAD68 0070+00 s=5 e=0 z=0  None .text      __dt__13dBgS_LinkAcchFv                                      */
//	804DAD18: 804DD7B4 (__vt__13dBgS_LinkAcch)
//	804DAD1C: 804DD7B4 (__vt__13dBgS_LinkAcch)
//	804DAD38: 80075F94 (__dt__9dBgS_AcchFv)
//	804DAD48: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_LinkAcch::~dBgS_LinkAcch() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__dt__13dBgS_LinkAcchFv.s"
}
#pragma pop


/* 804DAD68-804DADBC 0054+00 s=1 e=0 z=0  None .text      __ct__13dBgS_LinkAcchFv                                      */
//	804DAD7C: 800760A0 (__ct__9dBgS_AcchFv)
//	804DAD80: 804DD7B4 (__vt__13dBgS_LinkAcch)
//	804DAD84: 804DD7B4 (__vt__13dBgS_LinkAcch)
//	804DADA0: 80078E98 (SetLink__16dBgS_PolyPassChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_LinkAcch::dBgS_LinkAcch() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__ct__13dBgS_LinkAcchFv.s"
}
#pragma pop


/* 804DADBC-804DAE2C 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	804DADDC: 804DD7A8 (__vt__12dBgS_AcchCir)
//	804DADE0: 804DD7A8 (__vt__12dBgS_AcchCir)
//	804DADF0: 8026EF18 (__dt__8cM3dGCirFv)
//	804DADFC: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	804DAE0C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 804DAE2C-804DAE88 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	804DAE44: 804DD79C (__vt__10dCcD_GStts)
//	804DAE48: 804DD79C (__vt__10dCcD_GStts)
//	804DAE54: 804DD790 (__vt__10cCcD_GStts)
//	804DAE58: 804DD790 (__vt__10cCcD_GStts)
//	804DAE6C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 804DAE88-804DAEA8 0020+00 s=1 e=0 z=0  None .text      daCanoe_Create__FP10fopAc_ac_c                               */
//	804DAE94: 804DA740 (create__9daCanoe_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daCanoe_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/daCanoe_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 804DAEA8-804DAFE0 0138+00 s=1 e=0 z=0  None .text      __dt__9daCanoe_cFv                                           */
//	804DAED0: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	804DAED8: 802BDFF8 (deleteObject__14Z2SoundObjBaseFv)
//	804DAEE4: 803CAD10 (__vt__16Z2SoundObjSimple)
//	804DAEE8: 803CAD10 (__vt__16Z2SoundObjSimple)
//	804DAEF8: 802BDF48 (__dt__14Z2SoundObjBaseFv)
//	804DAF04: 8007808C (__dt__15dBgS_LinkLinChkFv)
//	804DAF0C: 804DAB18 (__dt__8dCcD_CylFv)
//	804DAF10: 804DAB18 (__dt__8dCcD_CylFv)
//	804DAF1C: 80361CE8 (__destroy_arr)
//	804DAF24: 804DACF8 (__dt__13dBgS_LinkAcchFv)
//	804DAF28: 804DACF8 (__dt__13dBgS_LinkAcchFv)
//	804DAF34: 80361CE8 (__destroy_arr)
//	804DAF3C: 804DADBC (__dt__12dBgS_AcchCirFv)
//	804DAF40: 804DADBC (__dt__12dBgS_AcchCirFv)
//	804DAF4C: 80361CE8 (__destroy_arr)
//	804DAF58: 803AC2E4 (__vt__9dCcD_Stts)
//	804DAF5C: 803AC2E4 (__vt__9dCcD_Stts)
//	804DAF74: 804DD79C (__vt__10dCcD_GStts)
//	804DAF78: 804DD79C (__vt__10dCcD_GStts)
//	804DAF88: 804DD790 (__vt__10cCcD_GStts)
//	804DAF8C: 804DD790 (__vt__10cCcD_GStts)
//	804DAF9C: 803C3728 (__vt__9cCcD_Stts)
//	804DAFA0: 803C3728 (__vt__9cCcD_Stts)
//	804DAFB0: 80018C8C (__dt__10fopAc_ac_cFv)
//	804DAFC0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daCanoe_c::~daCanoe_c() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__dt__9daCanoe_cFv.s"
}
#pragma pop


/* 804DAFE0-804DB008 0028+00 s=1 e=0 z=0  None .text      daCanoe_Delete__FP9daCanoe_c                                 */
//	804DAFF0: 804DAEA8 (__dt__9daCanoe_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daCanoe_c* False
// 	 daCanoe_c False
asm static void daCanoe_Delete(daCanoe_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/daCanoe_Delete__FP9daCanoe_c.s"
}
#pragma pop


/* 804DB008-804DB0B0 00A8+00 s=1 e=0 z=0  None .text      setRoomInfo__9daCanoe_cFv                                    */
//	804DB018: 803621DC (_savegpr_29)
//	804DB020: 804DD638 (lit_4480)
//	804DB024: 804DD638 (lit_4480)
//	804DB034: 804061C0 (g_dComIfG_gameInfo)
//	804DB038: 804061C0 (g_dComIfG_gameInfo)
//	804DB048: 80075100 (GetRoomId__4dBgSFRC13cBgS_PolyInfo)
//	804DB058: 80074BE8 (GetPolyColor__4dBgSFRC13cBgS_PolyInfo)
//	804DB064: 80450D64 (struct_80450D64)
//	804DB068: 80450D64 (struct_80450D64)
//	804DB088: 8002D06C (dComIfGp_getReverb__Fi)
//	804DB09C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::setRoomInfo() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/setRoomInfo__9daCanoe_cFv.s"
}
#pragma pop


/* 804DB0B0-804DB3F4 0344+00 s=2 e=0 z=0  None .text      setMatrix__9daCanoe_cFv                                      */
//	804DB0D0: 803621D4 (_savegpr_27)
//	804DB0D8: 804DD5DC (lit_3766)
//	804DB0DC: 804DD5DC (lit_3766)
//	804DB134: 804061C0 (g_dComIfG_gameInfo)
//	804DB138: 804061C0 (g_dComIfG_gameInfo)
//	804DB180: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	804DB19C: 802675E4 (cM_rad2s__Ff)
//	804DB1A4: 80439A20 (sincosTable___5JMath)
//	804DB1A8: 80439A20 (sincosTable___5JMath)
//	804DB300: 80270740 (cLib_chaseF__FPfff)
//	804DB314: 803DD470 (now__14mDoMtx_stack_c)
//	804DB318: 803DD470 (now__14mDoMtx_stack_c)
//	804DB330: 803468E8 (PSMTXTrans)
//	804DB338: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	804DB33C: 803DD470 (now__14mDoMtx_stack_c)
//	804DB340: 803DD470 (now__14mDoMtx_stack_c)
//	804DB34C: 803464B0 (PSMTXCopy)
//	804DB350: 803DD470 (now__14mDoMtx_stack_c)
//	804DB354: 803DD470 (now__14mDoMtx_stack_c)
//	804DB360: 803464B0 (PSMTXCopy)
//	804DB364: 80439A20 (sincosTable___5JMath)
//	804DB368: 80439A20 (sincosTable___5JMath)
//	804DB3E0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::setMatrix() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/setMatrix__9daCanoe_cFv.s"
}
#pragma pop


/* 804DB3F4-804DB578 0184+00 s=1 e=0 z=0  None .text      setCollision__9daCanoe_cFv                                   */
//	804DB414: 803621D4 (_savegpr_27)
//	804DB420: 80083830 (Move__10dCcD_GSttsFv)
//	804DB42C: 80439A20 (sincosTable___5JMath)
//	804DB430: 80439A20 (sincosTable___5JMath)
//	804DB444: 804DD680 (lit_4683)
//	804DB448: 804DD680 (lit_4683)
//	804DB458: 804DD600 (l_cylOffsetZ)
//	804DB45C: 804DD600 (l_cylOffsetZ)
//	804DB464: 804061C0 (g_dComIfG_gameInfo)
//	804DB468: 804061C0 (g_dComIfG_gameInfo)
//	804DB4CC: 804061C0 (g_dComIfG_gameInfo)
//	804DB4D0: 804061C0 (g_dComIfG_gameInfo)
//	804DB504: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	804DB510: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	804DB528: 8026491C (SetVsGrp__10cCcD_ObjCoFUl)
//	804DB538: 8026491C (SetVsGrp__10cCcD_ObjCoFUl)
//	804DB564: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::setCollision() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/setCollision__9daCanoe_cFv.s"
}
#pragma pop


/* 804DB578-804DB754 01DC+00 s=1 e=0 z=0  None .text      posMove__9daCanoe_cFv                                        */
//	804DB598: 804DD5DC (lit_3766)
//	804DB59C: 804DD5DC (lit_3766)
//	804DB5A0: 80439A20 (sincosTable___5JMath)
//	804DB5A4: 80439A20 (sincosTable___5JMath)
//	804DB62C: 80347090 (PSVECAdd)
//	804DB634: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	804DB64C: 8001D9A8 (fopAcM_getWaterStream__FPC4cXyzRC13cBgS_PolyInfoP4cXyzPii)
//	804DB680: 803470D8 (PSVECScale)
//	804DB6A0: 80347138 (PSVECSquareMag)
//	804DB6C4: 80347138 (PSVECSquareMag)
//	804DB6E0: 80430CF4 (Zero__4cXyz)
//	804DB6E4: 80430CF4 (Zero__4cXyz)
//	804DB710: 8026FDF4 (cLib_addCalcPosXZ__FP4cXyzRC4cXyzfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::posMove() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/posMove__9daCanoe_cFv.s"
}
#pragma pop


/* 804DB754-804DB7AC 0058+00 s=2 e=0 z=0  None .text      checkGomikabe__9daCanoe_cFR13cBgS_PolyInfo                   */
//	804DB770: 800A21E0 (getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi)
//	804DB780: 804061C0 (g_dComIfG_gameInfo)
//	804DB784: 804061C0 (g_dComIfG_gameInfo)
//	804DB790: 80074618 (GetActorPointer__4cBgSCFi)
//	804DB794: 80BFE52C (BreakSet__15daObjGOMIKABE_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
asm void daCanoe_c::checkGomikabe(cBgS_PolyInfo& param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/checkGomikabe__9daCanoe_cFR13cBgS_PolyInfo.s"
}
#pragma pop


/* 804DB7AC-804DB828 007C+00 s=3 e=0 z=0  None .text      setFrontBackPos__9daCanoe_cFv                                */
//	804DB7B4: 80439A20 (sincosTable___5JMath)
//	804DB7B8: 80439A20 (sincosTable___5JMath)
//	804DB7CC: 804DD600 (l_cylOffsetZ)
//	804DB7D0: 804DD600 (l_cylOffsetZ)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::setFrontBackPos() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/setFrontBackPos__9daCanoe_cFv.s"
}
#pragma pop


/* 804DB828-804DC2E8 0AC0+00 s=1 e=0 z=0  None .text      frontBackBgCheck__9daCanoe_cFv                               */
//	804DB850: 803621B4 (_savegpr_19)
//	804DB858: 804DD5DC (lit_3766)
//	804DB85C: 804DD5DC (lit_3766)
//	804DB860: 804DB7AC (setFrontBackPos__9daCanoe_cFv)
//	804DB868: 804061C0 (g_dComIfG_gameInfo)
//	804DB86C: 804061C0 (g_dComIfG_gameInfo)
//	804DB878: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	804DB884: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	804DB890: 804DD784 (__vt__8cM3dGPla)
//	804DB894: 804DD784 (__vt__8cM3dGPla)
//	804DB91C: 80439A20 (sincosTable___5JMath)
//	804DB920: 80439A20 (sincosTable___5JMath)
//	804DB974: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	804DB980: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	804DB998: 803470B4 (PSVECSubtract)
//	804DB9A8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	804DB9C8: 80347138 (PSVECSquareMag)
//	804DBA38: 80450AE0 (__float_nan)
//	804DBA3C: 80450AE0 (__float_nan)
//	804DBAA8: 80450AE0 (__float_nan)
//	804DBAAC: 80450AE0 (__float_nan)
//	804DBABC: 80267128 (atan2sX_Z__4cXyzCFv)
//	804DBAD4: 80267674 (cM_atan2s__Fff)
//	804DBB2C: 80267128 (atan2sX_Z__4cXyzCFv)
//	804DBB3C: 804DB754 (checkGomikabe__9daCanoe_cFR13cBgS_PolyInfo)
//	804DBB78: 804DB754 (checkGomikabe__9daCanoe_cFR13cBgS_PolyInfo)
//	804DBBC4: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	804DBBD0: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	804DBBE8: 803470B4 (PSVECSubtract)
//	804DBBF8: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	804DBC18: 80347138 (PSVECSquareMag)
//	804DBC88: 80450AE0 (__float_nan)
//	804DBC8C: 80450AE0 (__float_nan)
//	804DBCF8: 80450AE0 (__float_nan)
//	804DBCFC: 80450AE0 (__float_nan)
//	804DBD0C: 80267128 (atan2sX_Z__4cXyzCFv)
//	804DBD24: 80267674 (cM_atan2s__Fff)
//	804DBD7C: 80267128 (atan2sX_Z__4cXyzCFv)
//	804DBD8C: 804DB754 (checkGomikabe__9daCanoe_cFR13cBgS_PolyInfo)
//	804DBDC8: 804DB754 (checkGomikabe__9daCanoe_cFR13cBgS_PolyInfo)
//	804DBDF0: 804061C0 (g_dComIfG_gameInfo)
//	804DBDF4: 804061C0 (g_dComIfG_gameInfo)
//	804DBE20: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	804DBE50: 80347138 (PSVECSquareMag)
//	804DBEAC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	804DBED4: 80430188 (g_meter2_info)
//	804DBED8: 80430188 (g_meter2_info)
//	804DBEE4: 8021E268 (setMiniGameCount__13dMeter2Info_cFSc)
//	804DBF28: 803470D8 (PSVECScale)
//	804DBF3C: 80430188 (g_meter2_info)
//	804DBF40: 80430188 (g_meter2_info)
//	804DBF60: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	804DBF64: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	804DBF90: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	804DBFD8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	804DC008: 80347138 (PSVECSquareMag)
//	804DC028: 80267128 (atan2sX_Z__4cXyzCFv)
//	804DC03C: 800F3BB0 (getCanoeMaxSpeed__9daAlink_cCFv)
//	804DC070: 80266B84 (__ml__4cXyzCFf)
//	804DC080: 80266B34 (__mi__4cXyzCFRC3Vec)
//	804DC0A0: 804DB7AC (setFrontBackPos__9daCanoe_cFv)
//	804DC0DC: 803650D0 (abs)
//	804DC144: 80266B84 (__ml__4cXyzCFf)
//	804DC154: 80266B34 (__mi__4cXyzCFRC3Vec)
//	804DC174: 804DB7AC (setFrontBackPos__9daCanoe_cFv)
//	804DC1A8: 803650D0 (abs)
//	804DC220: 80270608 (cLib_addCalcAngleS2__FPssss)
//	804DC234: 80439A20 (sincosTable___5JMath)
//	804DC238: 80439A20 (sincosTable___5JMath)
//	804DC2A8: 804DB7AC (setFrontBackPos__9daCanoe_cFv)
//	804DC2AC: 804DD784 (__vt__8cM3dGPla)
//	804DC2B0: 804DD784 (__vt__8cM3dGPla)
//	804DC2D4: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::frontBackBgCheck() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/frontBackBgCheck__9daCanoe_cFv.s"
}
#pragma pop


/* 804DC2E8-804DC330 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	804DC300: 804DD784 (__vt__8cM3dGPla)
//	804DC304: 804DD784 (__vt__8cM3dGPla)
//	804DC314: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804DD7F8-804DD7FC 0001+03 s=2 e=0 z=0  None .bss       @1109                                                        */
static u8 lit_1109[1 + 3 /* padding */];

/* 804DC330-804DC554 0224+00 s=1 e=0 z=0  None .text      setPaddleEffect__9daCanoe_cFv                                */
//	804DC340: 803621D8 (_savegpr_28)
//	804DC348: 804DD7F8 (lit_1109)
//	804DC34C: 804DD7F8 (lit_1109)
//	804DC350: 804DD5DC (lit_3766)
//	804DC354: 804DD5DC (lit_3766)
//	804DC378: 804DA5B8 (__dt__4cXyzFv)
//	804DC37C: 804DA5B8 (__dt__4cXyzFv)
//	804DC384: 804DA4D8 (__register_global_object)
//	804DC390: 804061C0 (g_dComIfG_gameInfo)
//	804DC394: 804061C0 (g_dComIfG_gameInfo)
//	804DC3A4: 800F3EB8 (checkCanoePaddleGrab__9daAlink_cCFP10fopAc_ac_c)
//	804DC3DC: 800F3CCC (getCanoeLocalPaddleTop__9daAlink_cFv)
//	804DC3F0: 80346D6C (PSMTXMultVec)
//	804DC3F8: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
//	804DC408: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	804DC40C: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	804DC440: 80266B34 (__mi__4cXyzCFRC3Vec)
//	804DC474: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	804DC478: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	804DC48C: 803470D8 (PSVECScale)
//	804DC49C: 80347090 (PSVECAdd)
//	804DC4A0: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	804DC4A4: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	804DC4B4: 804061C0 (g_dComIfG_gameInfo)
//	804DC4B8: 804061C0 (g_dComIfG_gameInfo)
//	804DC4C4: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	804DC4C8: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	804DC4DC: 8004C838 (setWaterRipple__13dPa_control_cFPUlR13cBgS_PolyInfoPC4cXyzfPC12dKy_tevstr_cPC4cXyzSc)
//	804DC50C: 8001F87C (fopKyM_createWpillar__FPC4cXyzfi)
//	804DC540: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::setPaddleEffect() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/setPaddleEffect__9daCanoe_cFv.s"
}
#pragma pop


/* 804DC554-804DC7B4 0260+00 s=1 e=0 z=0  None .text      setCanoeSliderEffect__9daCanoe_cFv                           */
//	804DC564: 803621C8 (_savegpr_24)
//	804DC56C: 804DD5DC (lit_3766)
//	804DC570: 804DD5DC (lit_3766)
//	804DC574: 804061C0 (g_dComIfG_gameInfo)
//	804DC578: 804061C0 (g_dComIfG_gameInfo)
//	804DC5A8: 80347138 (PSVECSquareMag)
//	804DC5DC: 804061C0 (g_dComIfG_gameInfo)
//	804DC5E0: 804061C0 (g_dComIfG_gameInfo)
//	804DC630: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	804DC644: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	804DC660: 802807E0 (func_802807E0)
//	804DC678: 804061C0 (g_dComIfG_gameInfo)
//	804DC67C: 804061C0 (g_dComIfG_gameInfo)
//	804DC68C: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	804DC71C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	804DC730: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	804DC74C: 802807E0 (func_802807E0)
//	804DC75C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	804DC770: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	804DC78C: 804DA54C (daCanoe_searchTagWaterFall__FP10fopAc_ac_cPv)
//	804DC790: 804DA54C (daCanoe_searchTagWaterFall__FP10fopAc_ac_cPv)
//	804DC798: 800197BC (fopAcIt_Executor__FPFPvPv_iPv)
//	804DC7A0: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::setCanoeSliderEffect() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/setCanoeSliderEffect__9daCanoe_cFv.s"
}
#pragma pop


/* 804DC7B4-804DD33C 0B88+00 s=1 e=0 z=0  None .text      execute__9daCanoe_cFv                                        */
//	804DC7CC: 803621CC (_savegpr_25)
//	804DC7D4: 804DD7F8 (lit_1109)
//	804DC7D8: 804DD7F8 (lit_1109)
//	804DC7DC: 804DD5DC (lit_3766)
//	804DC7E0: 804DD5DC (lit_3766)
//	804DC7E4: 804061C0 (g_dComIfG_gameInfo)
//	804DC7E8: 804061C0 (g_dComIfG_gameInfo)
//	804DC840: 800F3C44 (getCanoeMaxRotSpeed__9daAlink_cCFv)
//	804DC8A0: 80347138 (PSVECSquareMag)
//	804DC8B4: 80267128 (atan2sX_Z__4cXyzCFv)
//	804DC8C4: 80270E24 (cLib_distanceAngleS__Fss)
//	804DC8EC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	804DC904: 80270540 (cLib_addCalcAngleS__FPsssss)
//	804DC95C: 802675E4 (cM_rad2s__Ff)
//	804DC964: 80439A20 (sincosTable___5JMath)
//	804DC968: 80439A20 (sincosTable___5JMath)
//	804DCAB4: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	804DCB1C: 80439A20 (sincosTable___5JMath)
//	804DCB20: 80439A20 (sincosTable___5JMath)
//	804DCB40: 803650D0 (abs)
//	804DCB50: 803650D0 (abs)
//	804DCB64: 80267954 (cM_rndF__Ff)
//	804DCC64: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	804DCD24: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	804DCD7C: 80439A20 (sincosTable___5JMath)
//	804DCD80: 80439A20 (sincosTable___5JMath)
//	804DCDC8: 803650D0 (abs)
//	804DCDD8: 803650D0 (abs)
//	804DCDE8: 80267954 (cM_rndF__Ff)
//	804DCE50: 803650D0 (abs)
//	804DCEDC: 800F3BEC (getCanoeCres__9daAlink_cCFv)
//	804DCEF4: 8026F97C (cLib_addCalc__FPfffff)
//	804DCEFC: 800F3BB0 (getCanoeMaxSpeed__9daAlink_cCFv)
//	804DCF10: 800F3BB0 (getCanoeMaxSpeed__9daAlink_cCFv)
//	804DCF20: 800F3BDC (getCanoeBackMaxSpeed__9daAlink_cCFv)
//	804DCF38: 800F3BDC (getCanoeBackMaxSpeed__9daAlink_cCFv)
//	804DCF48: 804DB578 (posMove__9daCanoe_cFv)
//	804DCF50: 804DB828 (frontBackBgCheck__9daCanoe_cFv)
//	804DCF58: 804061C0 (g_dComIfG_gameInfo)
//	804DCF5C: 804061C0 (g_dComIfG_gameInfo)
//	804DCF64: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	804DCF88: 804DA5B8 (__dt__4cXyzFv)
//	804DCF8C: 804DA5B8 (__dt__4cXyzFv)
//	804DCF94: 804DA4D8 (__register_global_object)
//	804DCFCC: 804061C0 (g_dComIfG_gameInfo)
//	804DCFD0: 804061C0 (g_dComIfG_gameInfo)
//	804DCFE0: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	804DCFF8: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	804DD018: 804061C0 (g_dComIfG_gameInfo)
//	804DD01C: 804061C0 (g_dComIfG_gameInfo)
//	804DD038: 8004C838 (setWaterRipple__13dPa_control_cFPUlR13cBgS_PolyInfoPC4cXyzfPC12dKy_tevstr_cPC4cXyzSc)
//	804DD05C: 804DB754 (checkGomikabe__9daCanoe_cFR13cBgS_PolyInfo)
//	804DD090: 804DB7AC (setFrontBackPos__9daCanoe_cFv)
//	804DD0C8: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
//	804DD0D4: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	804DD0D8: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	804DD0E4: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
//	804DD0F0: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	804DD0F4: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	804DD108: 803470B4 (PSVECSubtract)
//	804DD110: 80267150 (atan2sY_XZ__4cXyzCFv)
//	804DD160: 804DB7AC (setFrontBackPos__9daCanoe_cFv)
//	804DD188: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	804DD198: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	804DD1A8: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	804DD1B8: 80083688 (GetAc__22dCcD_GAtTgCoCommonBaseFv)
//	804DD1DC: 804DC330 (setPaddleEffect__9daCanoe_cFv)
//	804DD1E4: 804DB0B0 (setMatrix__9daCanoe_cFv)
//	804DD1EC: 804DB3F4 (setCollision__9daCanoe_cFv)
//	804DD1F4: 804DB008 (setRoomInfo__9daCanoe_cFv)
//	804DD1FC: 804DC554 (setCanoeSliderEffect__9daCanoe_cFv)
//	804DD264: 80347138 (PSVECSquareMag)
//	804DD278: 8015EA20 (checkFishingRodItem__9daPy_py_cFi)
//	804DD2B0: 800F3BB0 (getCanoeMaxSpeed__9daAlink_cCFv)
//	804DD2C0: 803620AC (__cvt_fp2unsigned)
//	804DD328: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::execute() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/execute__9daCanoe_cFv.s"
}
#pragma pop


/* 804DD33C-804DD35C 0020+00 s=1 e=0 z=0  None .text      daCanoe_Execute__FP9daCanoe_c                                */
//	804DD348: 804DC7B4 (execute__9daCanoe_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daCanoe_c* False
// 	 daCanoe_c False
asm static void daCanoe_Execute(daCanoe_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/daCanoe_Execute__FP9daCanoe_c.s"
}
#pragma pop


/* 804DD35C-804DD554 01F8+00 s=1 e=0 z=0  None .text      draw__9daCanoe_cFv                                           */
//	804DD36C: 803621DC (_savegpr_29)
//	804DD374: 804DD5DC (lit_3766)
//	804DD378: 804DD5DC (lit_3766)
//	804DD384: 8042CA54 (g_env_light)
//	804DD388: 8042CA54 (g_env_light)
//	804DD398: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	804DD39C: 8042CA54 (g_env_light)
//	804DD3A0: 8042CA54 (g_env_light)
//	804DD3B0: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	804DD3B8: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	804DD3BC: 804061C0 (g_dComIfG_gameInfo)
//	804DD3C0: 804061C0 (g_dComIfG_gameInfo)
//	804DD3C8: 80434AC8 (j3dSys)
//	804DD3CC: 80434AC8 (j3dSys)
//	804DD3D8: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	804DD3DC: 804061C0 (g_dComIfG_gameInfo)
//	804DD3E0: 804061C0 (g_dComIfG_gameInfo)
//	804DD3E8: 80434AC8 (j3dSys)
//	804DD3EC: 80434AC8 (j3dSys)
//	804DD424: 800F3EB8 (checkCanoePaddleGrab__9daAlink_cCFP10fopAc_ac_c)
//	804DD438: 800F3EB8 (checkCanoePaddleGrab__9daAlink_cCFP10fopAc_ac_c)
//	804DD448: 800F3DFC (getCanoePaddleMatrix__9daAlink_cFv)
//	804DD454: 803464B0 (PSMTXCopy)
//	804DD464: 803DD470 (now__14mDoMtx_stack_c)
//	804DD468: 803DD470 (now__14mDoMtx_stack_c)
//	804DD46C: 803464B0 (PSMTXCopy)
//	804DD490: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	804DD494: 803DD470 (now__14mDoMtx_stack_c)
//	804DD498: 803DD470 (now__14mDoMtx_stack_c)
//	804DD4A8: 8000C164 (mDoMtx_XYZrotM__FPA4_fsss)
//	804DD4AC: 803DD470 (now__14mDoMtx_stack_c)
//	804DD4B0: 803DD470 (now__14mDoMtx_stack_c)
//	804DD4BC: 803464B0 (PSMTXCopy)
//	804DD4C0: 8042CA54 (g_env_light)
//	804DD4C4: 8042CA54 (g_env_light)
//	804DD4D4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	804DD4DC: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	804DD510: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	804DD514: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	804DD518: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	804DD520: 804061C0 (g_dComIfG_gameInfo)
//	804DD524: 804061C0 (g_dComIfG_gameInfo)
//	804DD534: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	804DD540: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daCanoe_c::draw() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/draw__9daCanoe_cFv.s"
}
#pragma pop


/* 804DD554-804DD574 0020+00 s=1 e=0 z=0  None .text      daCanoe_Draw__FP9daCanoe_c                                   */
//	804DD560: 804DD35C (draw__9daCanoe_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daCanoe_c* False
// 	 daCanoe_c False
asm static void daCanoe_Draw(daCanoe_c* param_0) {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/daCanoe_Draw__FP9daCanoe_c.s"
}
#pragma pop


/* 804DD574-804DD5BC 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	804DD58C: 804DD790 (__vt__10cCcD_GStts)
//	804DD590: 804DD790 (__vt__10cCcD_GStts)
//	804DD5A0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 804DD5BC-804DD5C4 0008+00 s=1 e=0 z=0  None .text      @36@__dt__13dBgS_LinkAcchFv                                  */
//	804DD5C0: 804DACF8 (__dt__13dBgS_LinkAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_804DD5BC() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/func_804DD5BC.s"
}
#pragma pop


/* 804DD5C4-804DD5CC 0008+00 s=1 e=0 z=0  None .text      @20@__dt__13dBgS_LinkAcchFv                                  */
//	804DD5C8: 804DACF8 (__dt__13dBgS_LinkAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_804DD5C4() {
	nofralloc
#include "asm/rel/d/a/d_a_canoe/d_a_canoe/func_804DD5C4.s"
}
#pragma pop


/* ############################################################################################## */
/* 804DD7FC-804DD800 0001+03 s=0 e=0 z=0  None .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 804DD800-804DD804 0001+03 s=0 e=0 z=0  None .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 804DD804-804DD808 0001+03 s=0 e=0 z=0  None .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 804DD808-804DD80C 0001+03 s=0 e=0 z=0  None .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 804DD80C-804DD810 0001+03 s=0 e=0 z=0  None .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 804DD810-804DD814 0001+03 s=0 e=0 z=0  None .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 804DD814-804DD818 0001+03 s=0 e=0 z=0  None .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 804DD818-804DD81C 0001+03 s=0 e=0 z=0  None .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 804DD81C-804DD820 0001+03 s=0 e=0 z=0  None .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 804DD820-804DD824 0001+03 s=0 e=0 z=0  None .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 804DD824-804DD828 0001+03 s=0 e=0 z=0  None .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 804DD828-804DD82C 0001+03 s=0 e=0 z=0  None .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 804DD82C-804DD830 0001+03 s=0 e=0 z=0  None .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 804DD830-804DD834 0001+03 s=0 e=0 z=0  None .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 804DD834-804DD838 0001+03 s=0 e=0 z=0  None .bss       @1009                                                        */
u8 lit_1009[1 + 3 /* padding */];

/* 804DD838-804DD848 000C+04 s=0 e=0 z=0  None .bss       @5103                                                        */
u8 lit_5103[12 + 4 /* padding */];

/* 804DD848-804DD854 000C+00 s=0 e=0 z=0  None .bss       paddleRippleScale$5102                                       */
u8 data_804DD848[12];

/* 804DD854-804DD864 000C+04 s=0 e=0 z=0  None .bss       @5356                                                        */
u8 lit_5356[12 + 4 /* padding */];

/* 804DD864-804DD870 000C+00 s=0 e=0 z=0  None .bss       bodyRippleScale$5355                                         */
u8 data_804DD864[12];

/* 804DD870-804DD874 0004+00 s=0 e=0 z=0  None .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_804DD870[4];

/* 804DD874-804DD878 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_804DD874[4];

/* 804DD878-804DD87C 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_804DD878[4];

/* 804DD87C-804DD880 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_804DD87C[4];

/* 804DD880-804DD884 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_804DD880[4];

/* 804DD884-804DD888 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_804DD884[4];

/* 804DD888-804DD88C 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_804DD888[4];

/* 804DD88C-804DD890 0004+00 s=0 e=0 z=0  None .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_804DD88C[4];

/* 804DD890-804DD894 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_804DD890[4];

/* 804DD894-804DD898 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_804DD894[4];

/* 804DD898-804DD89C 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_804DD898[4];

/* 804DD89C-804DD8A0 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_804DD89C[4];

/* 804DD8A0-804DD8A4 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_804DD8A0[4];

/* 804DD8A4-804DD8A8 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_804DD8A4[4];

/* 804DD8A8-804DD8AC 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_804DD8A8[4];

/* 804DD8AC-804DD8B0 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_804DD8AC[4];

/* 804DD8B0-804DD8B4 0004+00 s=0 e=0 z=0  None .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_804DD8B0[4];

/* 804DD8B4-804DD8B8 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_804DD8B4[4];

/* 804DD8B8-804DD8BC 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_804DD8B8[4];

/* 804DD8BC-804DD8C0 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_804DD8BC[4];

/* 804DD8C0-804DD8C4 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_804DD8C0[4];

/* 804DD8C4-804DD8C8 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_804DD8C4[4];

/* 804DD8C8-804DD8CC 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_804DD8C8[4];

/* 804DD8CC-804DD8D0 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_804DD8CC[4];

/* 804DD8D0-804DD8D4 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_804DD8D0[4];

/* 804DD8D4-804DD8D8 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JAUSectionHeap>             */
u8 data_804DD8D4[4];

