// 
// Generated By: dol2asm
// Translation Unit: d_a_e_is
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_is/d_a_e_is.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct e_is_class {
	/* 806F76B4 */ // True False
e_is_class();
};

struct daE_IS_HIO_c {
	/* 806F5A4C */ // True False
daE_IS_HIO_c();
	/* 806F7AC4 */ // True False
~daE_IS_HIO_c();
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_SrcCyl {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 80084A78 */ // False False
//  cXyz& False
// 	 cXyz False
void StartCAt(cXyz&);
	/* 80084AC4 */ // False False
//  cXyz& False
// 	 cXyz False
void MoveCAt(cXyz&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 806F7940 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 806F799C */ // True False
~dBgS_ObjAcch();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 806F7A0C */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 806F78B0 */ // True False
~cM3dGSph();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 806F7868 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 806F78F8 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 806F7A7C */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct _GXTexObj {
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
};

// 
// Forward References:
// 

// True False
//  e_is_class* False
// 	 e_is_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void anm_init(e_is_class*, int, f32, u8, f32);
// True False
//  e_is_class* False
// 	 e_is_class False
static void daE_IS_Draw(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
//  f32 False
//  s16 False
static void pl_check(e_is_class*, f32, s16);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_stop_sub(void*, void*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void damage_check(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void e_is_wait(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void e_is_move(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void e_is_attack(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void e_is_trap(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void e_is_poweroff(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void e_is_damage(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void e_is_break(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void e_is_sekizou(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void action(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void anm_se_set(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void daE_IS_Execute(e_is_class*);
// True False
//  bool False
//  e_is_class* False
// 	 e_is_class False
static bool daE_IS_IsDelete(e_is_class*);
// True False
//  e_is_class* False
// 	 e_is_class False
static void daE_IS_Delete(e_is_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daE_IS_Create(fopAc_ac_c*);

// True False
extern "C" void __ct__12daE_IS_HIO_cFv();
// True False
//  e_is_class* False
// 	 e_is_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void anm_init__FP10e_is_classifUcf();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void daE_IS_Draw__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
//  f32 False
//  s16 False
extern "C" static void pl_check__FP10e_is_classfs();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_stop_sub__FPvPv();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void damage_check__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void e_is_wait__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void e_is_move__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void e_is_attack__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void e_is_trap__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void e_is_poweroff__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void e_is_damage__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void e_is_break__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void e_is_sekizou__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void action__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void anm_se_set__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void daE_IS_Execute__FP10e_is_class();
// True False
//  bool False
//  e_is_class* False
// 	 e_is_class False
extern "C" static bool daE_IS_IsDelete__FP10e_is_class();
// True False
//  e_is_class* False
// 	 e_is_class False
extern "C" static void daE_IS_Delete__FP10e_is_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daE_IS_Create__FP10fopAc_ac_c();
// True False
extern "C" void __ct__10e_is_classFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__12daE_IS_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_is_cpp();
// True False
extern "C" static void func_806F7B48();
// True False
extern "C" static void func_806F7B50();
extern "C" extern u32 const lit_3649;
extern "C" extern u32 const lit_3650;
extern "C" extern u32 const lit_3651;
extern "C" extern u32 const lit_3652;
extern "C" extern u32 const lit_3710;
extern "C" extern u32 const lit_3711;
extern "C" extern u32 const lit_3712;
extern "C" extern u32 const lit_3713;
extern "C" extern u32 const lit_3714;
extern "C" extern u32 const lit_3715;
extern "C" extern u32 const lit_3716;
extern "C" extern u32 const lit_3717;
extern "C" extern u32 const lit_3718;
extern "C" extern u32 const lit_3719;
extern "C" extern u32 const lit_3720;
extern "C" extern u32 const lit_3917;
extern "C" extern u32 const lit_3965;
extern "C" extern u32 const lit_3966;
extern "C" extern u32 const lit_3967;
extern "C" extern u32 const lit_3968;
extern "C" extern u32 const lit_3969;
extern "C" extern u32 const lit_3970;
extern "C" extern u32 const lit_4007;
extern "C" extern u32 const lit_4031;
extern "C" extern u32 const lit_4102;
extern "C" extern u32 const lit_4205;
extern "C" extern u32 const lit_4206;
extern "C" extern u32 const lit_4207;
extern "C" extern u32 const lit_4208;
extern "C" extern u32 const lit_4209;
extern "C" extern u32 const lit_4210;
extern "C" extern u32 const lit_4211;
extern "C" extern u32 const lit_4332;
extern "C" extern u32 const lit_4333;
extern "C" extern u32 const lit_4334;
extern "C" extern u32 const lit_4335;
extern "C" extern u32 const lit_4336;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_806F7C3C[64];
extern "C" extern u8 data_806F7C7C[68];
extern "C" extern u8 data_806F7CC0[64];
extern "C" extern void* g_profile_E_IS[12];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12daE_IS_HIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
void fopAcM_createDisappear(fopAc_ac_c const*, cXyz const*, u8, u8, u8);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_otherBgCheck(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  s16 False
void fopAcM_plAngleCheck(fopAc_ac_c const*, s16);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
void fopAcM_setEffectMtx(fopAc_ac_c const*, J3DModelData const*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fpcEx_Search(void* (*)(void*, void*), void*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void def_se_set(Z2Creature*, cCcD_Obj*, u32, fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void MtxPosition(cXyz*, cXyz*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
extern "C" void fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  s16 False
extern "C" void fopAcM_plAngleCheck__FPC10fopAc_ac_cs();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
extern "C" void fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fpcEx_Search__FPFPvPv_PvPv();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void StartCAt__8dCcD_SphFR4cXyz();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void MoveCAt__8dCcD_SphFR4cXyz();
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void MtxPosition__FP4cXyzP4cXyz();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 806F7B6C-806F7B70 0004+00 s=14 e=0 z=0  None .rodata    @3648                                                        */
SECTION_RODATA static u32 const lit_3648 = 0x3F800000;

/* 806F7C1C-806F7C28 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806F7C28-806F7C3C 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 806F7C3C-806F7C7C 0040+00 s=0 e=0 z=0  None .data      at_sph_src$4258                                              */
SECTION_DATA u8 data_806F7C3C[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
};

/* 806F7C7C-806F7CC0 0044+00 s=0 e=0 z=0  None .data      cc_cyl_src$4259                                              */
SECTION_DATA u8 data_806F7C7C[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00,
	0x43, 0x7A, 0x00, 0x00,
};

/* 806F7CC0-806F7D00 0040+00 s=0 e=0 z=0  None .data      core_sph_src$4260                                            */
SECTION_DATA u8 data_806F7CC0[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFD, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 806F7D00-806F7D20 0020+00 s=1 e=0 z=0  None .data      l_daE_IS_Method                                              */
SECTION_DATA static void* l_daE_IS_Method[8] = {
	(void*)daE_IS_Create__FP10fopAc_ac_c,
	(void*)daE_IS_Delete__FP10e_is_class,
	(void*)daE_IS_Execute__FP10e_is_class,
	(void*)daE_IS_IsDelete__FP10e_is_class,
	(void*)daE_IS_Draw__FP10e_is_class,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 806F7D20-806F7D50 0030+00 s=0 e=0 z=1  None .data      g_profile_E_IS                                               */
SECTION_DATA void* g_profile_E_IS[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01EE0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000CF8,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00B80000,
	(void*)&l_daE_IS_Method,
	(void*)0x00040100,
	(void*)0x020E0000,
};

/* 806F7D50-806F7D5C 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 806F7D5C-806F7D68 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 806F7D68-806F7D74 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 806F7D74-806F7D80 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 806F7D80-806F7D8C 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 806F7D8C-806F7D98 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 806F7D98-806F7DBC 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_806F7B50,
	(void*)NULL,
	(void*)NULL,
	(void*)func_806F7B48,
};

/* 806F7DBC-806F7DC8 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_IS_HIO_c                                         */
SECTION_DATA void* __vt__12daE_IS_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_IS_HIO_cFv,
};

/* 806F5A4C-806F5A94 0048+00 s=1 e=0 z=0  None .text      __ct__12daE_IS_HIO_cFv                                       */
//	806F5A4C: 806F7B6C (lit_3648)
//	806F5A50: 806F7B6C (lit_3648)
//	806F5A54: 806F7DBC (__vt__12daE_IS_HIO_c)
//	806F5A58: 806F7DBC (__vt__12daE_IS_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_IS_HIO_c::daE_IS_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__ct__12daE_IS_HIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 806F7B70-806F7B74 0004+00 s=0 e=0 z=0  None .rodata    @3649                                                        */
SECTION_RODATA u32 const lit_3649 = 0x40E00000;

/* 806F7B74-806F7B78 0004+00 s=0 e=0 z=0  None .rodata    @3650                                                        */
SECTION_RODATA u32 const lit_3650 = 0x43960000;

/* 806F7B78-806F7B7C 0004+00 s=0 e=0 z=0  None .rodata    @3651                                                        */
SECTION_RODATA u32 const lit_3651 = 0x43480000;

/* 806F7B7C-806F7B80 0004+00 s=0 e=0 z=0  None .rodata    @3652                                                        */
SECTION_RODATA u32 const lit_3652 = 0x42F00000;

/* 806F7B80-806F7B84 0004+00 s=3 e=0 z=0  None .rodata    @3666                                                        */
SECTION_RODATA static u8 const lit_3666[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 806F7B84-806F7B88 0004+00 s=1 e=0 z=0  None .rodata    @3667                                                        */
SECTION_RODATA static u32 const lit_3667 = 0xBF800000;

/* 806F7B88-806F7B8C 0004+00 s=0 e=0 z=0  None .rodata    @3710                                                        */
SECTION_RODATA u32 const lit_3710 = 0x43720000;

/* 806F7B8C-806F7B90 0004+00 s=0 e=0 z=0  None .rodata    @3711                                                        */
SECTION_RODATA u32 const lit_3711 = 0x42EA0000;

/* 806F7B90-806F7B94 0004+00 s=0 e=0 z=0  None .rodata    @3712                                                        */
SECTION_RODATA u32 const lit_3712 = 0x437F0000;

/* 806F7B94-806F7B98 0004+00 s=0 e=0 z=0  None .rodata    @3713                                                        */
SECTION_RODATA u32 const lit_3713 = 0x42A00000;

/* 806F7B98-806F7B9C 0004+00 s=0 e=0 z=0  None .rodata    @3714                                                        */
SECTION_RODATA u32 const lit_3714 = 0x41200000;

/* 806F7B9C-806F7BA0 0004+00 s=0 e=0 z=0  None .rodata    @3715                                                        */
SECTION_RODATA u32 const lit_3715 = 0x425C0000;

/* 806F7BA0-806F7BA4 0004+00 s=0 e=0 z=0  None .rodata    @3716                                                        */
SECTION_RODATA u32 const lit_3716 = 0x42700000;

/* 806F7BA4-806F7BA8 0004+00 s=0 e=0 z=0  None .rodata    @3717                                                        */
SECTION_RODATA u32 const lit_3717 = 0x43610000;

/* 806F7BA8-806F7BAC 0004+00 s=0 e=0 z=0  None .rodata    @3718                                                        */
SECTION_RODATA u32 const lit_3718 = 0x43160000;

/* 806F7BAC-806F7BB0 0004+00 s=0 e=0 z=0  None .rodata    @3719                                                        */
SECTION_RODATA u32 const lit_3719 = 0x42480000;

/* 806F7BB0-806F7BB4 0004+00 s=0 e=0 z=0  None .rodata    @3720                                                        */
SECTION_RODATA u32 const lit_3720 = 0x44160000;

/* 806F7BB4-806F7BB8 0004+00 s=0 e=0 z=0  None .rodata    @3917                                                        */
SECTION_RODATA u32 const lit_3917 = 0x47C35000;

/* 806F7BB8-806F7BBC 0004+00 s=0 e=0 z=0  None .rodata    @3965                                                        */
SECTION_RODATA u32 const lit_3965 = 0x41A00000;

/* 806F7BBC-806F7BC0 0004+00 s=0 e=0 z=0  None .rodata    @3966                                                        */
SECTION_RODATA u32 const lit_3966 = 0x40000000;

/* 806F7BC0-806F7BC4 0004+00 s=0 e=0 z=0  None .rodata    @3967                                                        */
SECTION_RODATA u32 const lit_3967 = 0x41E80000;

/* 806F7BC4-806F7BC8 0004+00 s=0 e=0 z=0  None .rodata    @3968                                                        */
SECTION_RODATA u32 const lit_3968 = 0x3F000000;

/* 806F7BC8-806F7BCC 0004+00 s=0 e=0 z=0  None .rodata    @3969                                                        */
SECTION_RODATA u32 const lit_3969 = 0x40400000;

/* 806F7BCC-806F7BD0 0004+00 s=0 e=0 z=0  None .rodata    @3970                                                        */
SECTION_RODATA u32 const lit_3970 = 0xC4820000;

/* 806F7BD0-806F7BD4 0004+00 s=0 e=0 z=0  None .rodata    @4007                                                        */
SECTION_RODATA u32 const lit_4007 = 0x3C23D70A;

/* 806F7BD4-806F7BD8 0004+00 s=0 e=0 z=0  None .rodata    @4031                                                        */
SECTION_RODATA u32 const lit_4031 = 0x40A00000;

/* 806F7BD8-806F7BDC 0004+00 s=0 e=0 z=0  None .rodata    @4102                                                        */
SECTION_RODATA u32 const lit_4102 = 0x447A0000;

/* 806F7BDC-806F7BE0 0004+00 s=1 e=0 z=0  None .rodata    @4120                                                        */
SECTION_RODATA static u32 const lit_4120 = 0x421C0000;

/* 806F7BE0-806F7BE4 0004+00 s=1 e=0 z=0  None .rodata    @4121                                                        */
SECTION_RODATA static u32 const lit_4121 = 0x41980000;

/* 806F7BE4-806F7BE8 0004+00 s=0 e=0 z=0  None .rodata    @4205                                                        */
SECTION_RODATA u32 const lit_4205 = 0x3CA3D70A;

/* 806F7BE8-806F7BEC 0004+00 s=0 e=0 z=0  None .rodata    @4206                                                        */
SECTION_RODATA u32 const lit_4206 = 0x42C80000;

/* 806F7BEC-806F7BF0 0004+00 s=0 e=0 z=0  None .rodata    @4207                                                        */
SECTION_RODATA u32 const lit_4207 = 0x469C4000;

/* 806F7BF0-806F7BF4 0004+00 s=0 e=0 z=0  None .rodata    @4208                                                        */
SECTION_RODATA u32 const lit_4208 = 0xC6EA6000;

/* 806F7BF4-806F7BF8 0004+00 s=0 e=0 z=0  None .rodata    @4209                                                        */
SECTION_RODATA u32 const lit_4209 = 0x466A6000;

/* 806F7BF8-806F7BFC 0004+00 s=0 e=0 z=0  None .rodata    @4210                                                        */
SECTION_RODATA u32 const lit_4210 = 0x41F00000;

/* 806F7BFC-806F7C00 0004+00 s=0 e=0 z=0  None .rodata    @4211                                                        */
SECTION_RODATA u32 const lit_4211 = 0x466FD800;

/* 806F7C00-806F7C04 0004+00 s=0 e=0 z=0  None .rodata    @4332                                                        */
SECTION_RODATA u32 const lit_4332 = 0xC3FA0000;

/* 806F7C04-806F7C08 0004+00 s=0 e=0 z=0  None .rodata    @4333                                                        */
SECTION_RODATA u32 const lit_4333 = 0xC3480000;

/* 806F7C08-806F7C0C 0004+00 s=0 e=0 z=0  None .rodata    @4334                                                        */
SECTION_RODATA u32 const lit_4334 = 0x43FA0000;

/* 806F7C0C-806F7C10 0004+00 s=0 e=0 z=0  None .rodata    @4335                                                        */
SECTION_RODATA u32 const lit_4335 = 0xC0E00000;

/* 806F7C10-806F7C14 0004+00 s=0 e=0 z=0  None .rodata    @4336                                                        */
SECTION_RODATA u32 const lit_4336 = 0x45642000;

/* 806F7C14-806F7C19 0005+00 s=4 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_806F7C14 = "E_IS";
#pragma pop

/* 806F5A94-806F5B40 00AC+00 s=7 e=0 z=0  None .text      anm_init__FP10e_is_classifUcf                                */
//	806F5AB4: 803621DC (_savegpr_29)
//	806F5ACC: 806F7C14 (stringBase0)
//	806F5AD0: 806F7C14 (stringBase0)
//	806F5AD4: 804061C0 (g_dComIfG_gameInfo)
//	806F5AD8: 804061C0 (g_dComIfG_gameInfo)
//	806F5AE8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806F5B00: 806F7B80 (lit_3666)
//	806F5B04: 806F7B80 (lit_3666)
//	806F5B08: 806F7B84 (lit_3667)
//	806F5B0C: 806F7B84 (lit_3667)
//	806F5B10: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	806F5B2C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void anm_init(e_is_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/anm_init__FP10e_is_classifUcf.s"
}
#pragma pop


/* 806F5B40-806F5E38 02F8+00 s=1 e=0 z=0  None .text      daE_IS_Draw__FP10e_is_class                                  */
//	806F5B50: 803621D0 (_savegpr_26)
//	806F5B58: 806F7B6C (lit_3648)
//	806F5B5C: 806F7B6C (lit_3648)
//	806F5B68: 8042CA54 (g_env_light)
//	806F5B6C: 8042CA54 (g_env_light)
//	806F5B7C: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	806F5B80: 8042CA54 (g_env_light)
//	806F5B84: 8042CA54 (g_env_light)
//	806F5B90: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	806F5DB4: 8001D42C (fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData)
//	806F5DBC: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	806F5E0C: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	806F5E10: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	806F5E14: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	806F5E24: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void daE_IS_Draw(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/daE_IS_Draw__FP10e_is_class.s"
}
#pragma pop


/* 806F5E38-806F5EB4 007C+00 s=2 e=0 z=0  None .text      pl_check__FP10e_is_classfs                                   */
//	806F5E44: 804061C0 (g_dComIfG_gameInfo)
//	806F5E48: 804061C0 (g_dComIfG_gameInfo)
//	806F5E8C: 8001CDFC (fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
//  f32 False
//  s16 False
asm static void pl_check(e_is_class* param_0, f32 param_1, s16 param_2) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/pl_check__FP10e_is_classfs.s"
}
#pragma pop


/* 806F5EB4-806F5F3C 0088+00 s=1 e=0 z=0  None .text      s_stop_sub__FPvPv                                            */
//	806F5ED0: 80018CE0 (fopAc_IsActor__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_stop_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/s_stop_sub__FPvPv.s"
}
#pragma pop


/* 806F5F3C-806F6134 01F8+00 s=1 e=0 z=0  None .text      damage_check__FP10e_is_class                                 */
//	806F5F54: 80083830 (Move__10dCcD_GSttsFv)
//	806F5F68: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806F5F80: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	806F5F90: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	806F608C: 804061C0 (g_dComIfG_gameInfo)
//	806F6090: 804061C0 (g_dComIfG_gameInfo)
//	806F60D0: 806F7B6C (lit_3648)
//	806F60D4: 806F7B6C (lit_3648)
//	806F60D8: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806F60F0: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806F6100: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	806F6114: 80087514 (def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void damage_check(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/damage_check__FP10e_is_class.s"
}
#pragma pop


/* 806F6134-806F6320 01EC+00 s=1 e=0 z=0  None .text      e_is_wait__FP10e_is_class                                    */
//	806F614C: 806F7B80 (lit_3666)
//	806F6150: 806F7B80 (lit_3666)
//	806F61B4: 806F7B6C (lit_3648)
//	806F61B8: 806F7B6C (lit_3648)
//	806F61C0: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F61CC: 806F7B6C (lit_3648)
//	806F61D0: 806F7B6C (lit_3648)
//	806F61D8: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F61E4: 806F7B80 (lit_3666)
//	806F61E8: 806F7B80 (lit_3666)
//	806F6204: 804061C0 (g_dComIfG_gameInfo)
//	806F6208: 804061C0 (g_dComIfG_gameInfo)
//	806F6218: 80035360 (isSwitch__10dSv_info_cCFii)
//	806F622C: 804061C0 (g_dComIfG_gameInfo)
//	806F6230: 804061C0 (g_dComIfG_gameInfo)
//	806F6240: 80035360 (isSwitch__10dSv_info_cCFii)
//	806F6270: 806F5E38 (pl_check__FP10e_is_classfs)
//	806F627C: 806F7B6C (lit_3648)
//	806F6280: 806F7B6C (lit_3648)
//	806F629C: 806F7B6C (lit_3648)
//	806F62A0: 806F7B6C (lit_3648)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void e_is_wait(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/e_is_wait__FP10e_is_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 806F7DD0-806F7DD4 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_806F7DD0[4];

/* 806F7DD4-806F7DE0 000C+00 s=1 e=0 z=0  None .bss       @3643                                                        */
static u8 lit_3643[12];

/* 806F7DE0-806F7DFC 001C+00 s=4 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[28];

/* 806F6320-806F63FC 00DC+00 s=1 e=0 z=0  None .text      e_is_move__FP10e_is_class                                    */
//	806F6340: 806F7B6C (lit_3648)
//	806F6344: 806F7B6C (lit_3648)
//	806F6378: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F6388: 806F7DE0 (l_HIO)
//	806F638C: 806F7DE0 (l_HIO)
//	806F63C4: 8026FA3C (cLib_addCalc2__FPffff)
//	806F63D8: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void e_is_move(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/e_is_move__FP10e_is_class.s"
}
#pragma pop


/* 806F63FC-806F65BC 01C0+00 s=1 e=0 z=0  None .text      e_is_attack__FP10e_is_class                                  */
//	806F640C: 803621DC (_savegpr_29)
//	806F6414: 806F7B6C (lit_3648)
//	806F6418: 806F7B6C (lit_3648)
//	806F643C: 8026FA80 (cLib_addCalc0__FPfff)
//	806F647C: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F6520: 806F5E38 (pl_check__FP10e_is_classfs)
//	806F6554: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F6570: 806F5E38 (pl_check__FP10e_is_classfs)
//	806F65A0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806F65A8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void e_is_attack(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/e_is_attack__FP10e_is_class.s"
}
#pragma pop


/* 806F65BC-806F67B0 01F4+00 s=1 e=0 z=0  None .text      e_is_trap__FP10e_is_class                                    */
//	806F65D4: 806F7B6C (lit_3648)
//	806F65D8: 806F7B6C (lit_3648)
//	806F65E8: 8026FA80 (cLib_addCalc0__FPfff)
//	806F6660: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F66B4: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F66EC: 804061C0 (g_dComIfG_gameInfo)
//	806F66F0: 804061C0 (g_dComIfG_gameInfo)
//	806F6704: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	806F6758: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806F6780: 8026FA3C (cLib_addCalc2__FPffff)
//	806F6794: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void e_is_trap(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/e_is_trap__FP10e_is_class.s"
}
#pragma pop


/* 806F67B0-806F691C 016C+00 s=1 e=0 z=0  None .text      e_is_poweroff__FP10e_is_class                                */
//	806F67C8: 806F7B6C (lit_3648)
//	806F67CC: 806F7B6C (lit_3648)
//	806F685C: 806F5EB4 (s_stop_sub__FPvPv)
//	806F6860: 806F5EB4 (s_stop_sub__FPvPv)
//	806F6868: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	806F6888: 804061C0 (g_dComIfG_gameInfo)
//	806F688C: 804061C0 (g_dComIfG_gameInfo)
//	806F689C: 80035200 (onSwitch__10dSv_info_cFii)
//	806F68A0: 804061C0 (g_dComIfG_gameInfo)
//	806F68A4: 804061C0 (g_dComIfG_gameInfo)
//	806F68B4: 80035200 (onSwitch__10dSv_info_cFii)
//	806F68C4: 804061C0 (g_dComIfG_gameInfo)
//	806F68C8: 804061C0 (g_dComIfG_gameInfo)
//	806F68D4: 80035200 (onSwitch__10dSv_info_cFii)
//	806F68E4: 8026FA80 (cLib_addCalc0__FPfff)
//	806F6900: 8026FA80 (cLib_addCalc0__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void e_is_poweroff(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/e_is_poweroff__FP10e_is_class.s"
}
#pragma pop


/* 806F691C-806F6A38 011C+00 s=1 e=0 z=0  None .text      e_is_damage__FP10e_is_class                                  */
//	806F6934: 806F7B6C (lit_3648)
//	806F6938: 806F7B6C (lit_3648)
//	806F6974: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F698C: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F69F0: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F6A1C: 8026FA80 (cLib_addCalc0__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void e_is_damage(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/e_is_damage__FP10e_is_class.s"
}
#pragma pop


/* 806F6A38-806F6B68 0130+00 s=1 e=0 z=0  None .text      e_is_break__FP10e_is_class                                   */
//	806F6A50: 806F7B6C (lit_3648)
//	806F6A54: 806F7B6C (lit_3648)
//	806F6A9C: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F6AB4: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F6B34: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	806F6B3C: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	806F6B4C: 8026FA80 (cLib_addCalc0__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void e_is_break(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/e_is_break__FP10e_is_class.s"
}
#pragma pop


/* 806F6B68-806F6B7C 0014+00 s=1 e=0 z=0  None .text      e_is_sekizou__FP10e_is_class                                 */
//	806F6B68: 806F7B80 (lit_3666)
//	806F6B6C: 806F7B80 (lit_3666)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void e_is_sekizou(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/e_is_sekizou__FP10e_is_class.s"
}
#pragma pop


/* 806F6B7C-806F6D90 0214+00 s=1 e=0 z=0  None .text      action__FP10e_is_class                                       */
//	806F6B8C: 803621DC (_savegpr_29)
//	806F6B94: 806F7B6C (lit_3648)
//	806F6B98: 806F7B6C (lit_3648)
//	806F6B9C: 804061C0 (g_dComIfG_gameInfo)
//	806F6BA0: 804061C0 (g_dComIfG_gameInfo)
//	806F6BA8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806F6BB8: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806F6C2C: 806F6134 (e_is_wait__FP10e_is_class)
//	806F6C38: 806F6320 (e_is_move__FP10e_is_class)
//	806F6C44: 806F63FC (e_is_attack__FP10e_is_class)
//	806F6C50: 806F65BC (e_is_trap__FP10e_is_class)
//	806F6C60: 806F67B0 (e_is_poweroff__FP10e_is_class)
//	806F6C70: 806F691C (e_is_damage__FP10e_is_class)
//	806F6C80: 806F6A38 (e_is_break__FP10e_is_class)
//	806F6C90: 806F6B68 (e_is_sekizou__FP10e_is_class)
//	806F6CA8: 80266B84 (__ml__4cXyzCFf)
//	806F6CB8: 80347090 (PSVECAdd)
//	806F6CCC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806F6CD0: 80450768 (calc_mtx)
//	806F6CD4: 80450768 (calc_mtx)
//	806F6CE0: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806F6D00: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806F6D20: 80347090 (PSVECAdd)
//	806F6D38: 804061C0 (g_dComIfG_gameInfo)
//	806F6D3C: 804061C0 (g_dComIfG_gameInfo)
//	806F6D44: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	806F6D7C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void action(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/action__FP10e_is_class.s"
}
#pragma pop


/* 806F6D90-806F6E58 00C8+00 s=1 e=0 z=0  None .text      anm_se_set__FP10e_is_class                                   */
//	806F6DB8: 806F7BDC (lit_4120)
//	806F6DBC: 806F7BDC (lit_4120)
//	806F6DC0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806F6E04: 806F7BE0 (lit_4121)
//	806F6E08: 806F7BE0 (lit_4121)
//	806F6E0C: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void anm_se_set(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/anm_se_set__FP10e_is_class.s"
}
#pragma pop


/* 806F6E58-806F7204 03AC+00 s=2 e=0 z=0  None .text      daE_IS_Execute__FP10e_is_class                               */
//	806F6E68: 803621D8 (_savegpr_28)
//	806F6E70: 806F7B6C (lit_3648)
//	806F6E74: 806F7B6C (lit_3648)
//	806F6EE8: 8026FA3C (cLib_addCalc2__FPffff)
//	806F6EFC: 8026FA3C (cLib_addCalc2__FPffff)
//	806F6F04: 806F6B7C (action__FP10e_is_class)
//	806F6F0C: 806F5F3C (damage_check__FP10e_is_class)
//	806F6F10: 803DD470 (now__14mDoMtx_stack_c)
//	806F6F14: 803DD470 (now__14mDoMtx_stack_c)
//	806F6F24: 803468E8 (PSMTXTrans)
//	806F6F28: 803DD470 (now__14mDoMtx_stack_c)
//	806F6F2C: 803DD470 (now__14mDoMtx_stack_c)
//	806F6F34: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806F6F38: 806F7DE0 (l_HIO)
//	806F6F3C: 806F7DE0 (l_HIO)
//	806F6F4C: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806F6F58: 803DD470 (now__14mDoMtx_stack_c)
//	806F6F5C: 803DD470 (now__14mDoMtx_stack_c)
//	806F6F64: 803464B0 (PSMTXCopy)
//	806F6F70: 8002D06C (dComIfGp_getReverb__Fi)
//	806F6F80: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	806F6F88: 806F6D90 (anm_se_set__FP10e_is_class)
//	806F6F90: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	806F6FCC: 8026F200 (SetR__8cM3dGCylFf)
//	806F6FD8: 8001CFD8 (fopAcM_plAngleCheck__FPC10fopAc_ac_cs)
//	806F7020: 8026F200 (SetR__8cM3dGCylFf)
//	806F7048: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	806F704C: 804061C0 (g_dComIfG_gameInfo)
//	806F7050: 804061C0 (g_dComIfG_gameInfo)
//	806F7060: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806F707C: 80450768 (calc_mtx)
//	806F7080: 80450768 (calc_mtx)
//	806F7088: 803464B0 (PSMTXCopy)
//	806F70A4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806F70BC: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	806F70CC: 80084AC4 (MoveCAt__8dCcD_SphFR4cXyz)
//	806F70D8: 8026F708 (SetR__8cM3dGSphFf)
//	806F710C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	806F7118: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806F7124: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806F7134: 80450768 (calc_mtx)
//	806F7138: 80450768 (calc_mtx)
//	806F7140: 803464B0 (PSMTXCopy)
//	806F7164: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806F71CC: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806F71D8: 8026F708 (SetR__8cM3dGSphFf)
//	806F71E4: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806F71F0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void daE_IS_Execute(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/daE_IS_Execute__FP10e_is_class.s"
}
#pragma pop


/* 806F7204-806F720C 0008+00 s=1 e=0 z=0  None .text      daE_IS_IsDelete__FP10e_is_class                              */
// True False
//  bool False
//  e_is_class* False
// 	 e_is_class False
static bool daE_IS_IsDelete(e_is_class* param_0) {
	return true;
}


/* 806F720C-806F7274 0068+00 s=1 e=0 z=0  None .text      daE_IS_Delete__FP10e_is_class                                */
//	806F7224: 806F7C14 (stringBase0)
//	806F7228: 806F7C14 (stringBase0)
//	806F722C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	806F7240: 806F7DD0 (data_806F7DD0)
//	806F7244: 806F7DD0 (data_806F7DD0)
//	806F7258: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_is_class* False
// 	 e_is_class False
asm static void daE_IS_Delete(e_is_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/daE_IS_Delete__FP10e_is_class.s"
}
#pragma pop


/* 806F7274-806F736C 00F8+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	806F7284: 803621D8 (_savegpr_28)
//	806F7290: 802CEC4C (__nw__FUl)
//	806F729C: 806F7C14 (stringBase0)
//	806F72A0: 806F7C14 (stringBase0)
//	806F72A8: 804061C0 (g_dComIfG_gameInfo)
//	806F72AC: 804061C0 (g_dComIfG_gameInfo)
//	806F72C0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806F72C8: 806F7C14 (stringBase0)
//	806F72CC: 806F7C14 (stringBase0)
//	806F72DC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806F7314: 806F7B6C (lit_3648)
//	806F7318: 806F7B6C (lit_3648)
//	806F7324: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	806F7358: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 806F736C-806F76B4 0348+00 s=1 e=0 z=0  None .text      daE_IS_Create__FP10fopAc_ac_c                                */
//	806F737C: 803621D8 (_savegpr_28)
//	806F7384: 806F7C1C (cNullVec__6Z2Calc)
//	806F7388: 806F7C1C (cNullVec__6Z2Calc)
//	806F738C: 806F7B6C (lit_3648)
//	806F7390: 806F7B6C (lit_3648)
//	806F73A8: 806F76B4 (__ct__10e_is_classFv)
//	806F73BC: 806F7C14 (stringBase0)
//	806F73C0: 806F7C14 (stringBase0)
//	806F73C4: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	806F7430: 806F7274 (useHeapInit__FP10fopAc_ac_c)
//	806F7434: 806F7274 (useHeapInit__FP10fopAc_ac_c)
//	806F7440: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	806F7454: 806F7DD0 (data_806F7DD0)
//	806F7458: 806F7DD0 (data_806F7DD0)
//	806F7474: 806F7DE0 (l_HIO)
//	806F7478: 806F7DE0 (l_HIO)
//	806F74A8: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	806F74BC: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	806F74DC: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	806F74E8: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806F74FC: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	806F7524: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806F7558: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	806F7568: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	806F7580: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	806F75A8: 804061C0 (g_dComIfG_gameInfo)
//	806F75AC: 804061C0 (g_dComIfG_gameInfo)
//	806F75BC: 80035360 (isSwitch__10dSv_info_cCFii)
//	806F75E4: 806F5A94 (anm_init__FP10e_is_classifUcf)
//	806F7694: 806F6E58 (daE_IS_Execute__FP10e_is_class)
//	806F76A0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daE_IS_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/daE_IS_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 806F76B4-806F7868 01B4+00 s=1 e=0 z=0  None .text      __ct__10e_is_classFv                                         */
//	806F76C4: 803621D4 (_savegpr_27)
//	806F76CC: 80018B64 (__ct__10fopAc_ac_cFv)
//	806F76D4: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	806F76DC: 80075EAC (__ct__12dBgS_AcchCirFv)
//	806F76E8: 800760A0 (__ct__9dBgS_AcchFv)
//	806F76EC: 806F7D98 (__vt__12dBgS_ObjAcch)
//	806F76F0: 806F7D98 (__vt__12dBgS_ObjAcch)
//	806F770C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	806F7710: 803C3728 (__vt__9cCcD_Stts)
//	806F7714: 803C3728 (__vt__9cCcD_Stts)
//	806F7720: 80083760 (__ct__10dCcD_GSttsFv)
//	806F7724: 803AC2E4 (__vt__9dCcD_Stts)
//	806F7728: 803AC2E4 (__vt__9dCcD_Stts)
//	806F7740: 80083A28 (__ct__12dCcD_GObjInfFv)
//	806F7744: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806F7748: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806F7750: 806F7D8C (__vt__8cM3dGAab)
//	806F7754: 806F7D8C (__vt__8cM3dGAab)
//	806F775C: 806F7D80 (__vt__8cM3dGSph)
//	806F7760: 806F7D80 (__vt__8cM3dGSph)
//	806F7768: 803C3540 (__vt__12cCcD_SphAttr)
//	806F776C: 803C3540 (__vt__12cCcD_SphAttr)
//	806F777C: 803ABFC0 (__vt__8dCcD_Sph)
//	806F7780: 803ABFC0 (__vt__8dCcD_Sph)
//	806F77A0: 80083A28 (__ct__12dCcD_GObjInfFv)
//	806F77A4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806F77A8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806F77B0: 806F7D8C (__vt__8cM3dGAab)
//	806F77B4: 806F7D8C (__vt__8cM3dGAab)
//	806F77BC: 806F7D80 (__vt__8cM3dGSph)
//	806F77C0: 806F7D80 (__vt__8cM3dGSph)
//	806F77C8: 803C3540 (__vt__12cCcD_SphAttr)
//	806F77CC: 803C3540 (__vt__12cCcD_SphAttr)
//	806F77D8: 803ABFC0 (__vt__8dCcD_Sph)
//	806F77DC: 803ABFC0 (__vt__8dCcD_Sph)
//	806F77F4: 80083A28 (__ct__12dCcD_GObjInfFv)
//	806F77F8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806F77FC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806F7804: 806F7D8C (__vt__8cM3dGAab)
//	806F7808: 806F7D8C (__vt__8cM3dGAab)
//	806F7810: 806F7D74 (__vt__8cM3dGCyl)
//	806F7814: 806F7D74 (__vt__8cM3dGCyl)
//	806F781C: 803C35A4 (__vt__12cCcD_CylAttr)
//	806F7820: 803C35A4 (__vt__12cCcD_CylAttr)
//	806F7830: 803AC050 (__vt__8dCcD_Cyl)
//	806F7834: 803AC050 (__vt__8dCcD_Cyl)
//	806F7854: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm e_is_class::e_is_class() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__ct__10e_is_classFv.s"
}
#pragma pop


/* 806F7868-806F78B0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	806F7880: 806F7D74 (__vt__8cM3dGCyl)
//	806F7884: 806F7D74 (__vt__8cM3dGCyl)
//	806F7894: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 806F78B0-806F78F8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	806F78C8: 806F7D80 (__vt__8cM3dGSph)
//	806F78CC: 806F7D80 (__vt__8cM3dGSph)
//	806F78DC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 806F78F8-806F7940 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	806F7910: 806F7D8C (__vt__8cM3dGAab)
//	806F7914: 806F7D8C (__vt__8cM3dGAab)
//	806F7924: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 806F7940-806F799C 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	806F7958: 806F7D68 (__vt__10dCcD_GStts)
//	806F795C: 806F7D68 (__vt__10dCcD_GStts)
//	806F7968: 806F7D5C (__vt__10cCcD_GStts)
//	806F796C: 806F7D5C (__vt__10cCcD_GStts)
//	806F7980: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 806F799C-806F7A0C 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	806F79BC: 806F7D98 (__vt__12dBgS_ObjAcch)
//	806F79C0: 806F7D98 (__vt__12dBgS_ObjAcch)
//	806F79DC: 80075F94 (__dt__9dBgS_AcchFv)
//	806F79EC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 806F7A0C-806F7A7C 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	806F7A2C: 806F7D50 (__vt__12dBgS_AcchCir)
//	806F7A30: 806F7D50 (__vt__12dBgS_AcchCir)
//	806F7A40: 8026EF18 (__dt__8cM3dGCirFv)
//	806F7A4C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	806F7A5C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 806F7A7C-806F7AC4 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	806F7A94: 806F7D5C (__vt__10cCcD_GStts)
//	806F7A98: 806F7D5C (__vt__10cCcD_GStts)
//	806F7AA8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 806F7AC4-806F7B0C 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_IS_HIO_cFv                                       */
//	806F7ADC: 806F7DBC (__vt__12daE_IS_HIO_c)
//	806F7AE0: 806F7DBC (__vt__12daE_IS_HIO_c)
//	806F7AF0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_IS_HIO_c::~daE_IS_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__dt__12daE_IS_HIO_cFv.s"
}
#pragma pop


/* 806F7B0C-806F7B48 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_is_cpp                                         */
//	806F7B18: 806F7DE0 (l_HIO)
//	806F7B1C: 806F7DE0 (l_HIO)
//	806F7B20: 806F5A4C (__ct__12daE_IS_HIO_cFv)
//	806F7B24: 806F7AC4 (__dt__12daE_IS_HIO_cFv)
//	806F7B28: 806F7AC4 (__dt__12daE_IS_HIO_cFv)
//	806F7B2C: 806F7DD4 (lit_3643)
//	806F7B30: 806F7DD4 (lit_3643)
//	806F7B34: 806F59D8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_is_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/__sinit_d_a_e_is_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_806F7B0C = (void*)__sinit_d_a_e_is_cpp;
#pragma pop


/* 806F7B48-806F7B50 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	806F7B4C: 806F799C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_806F7B48() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/func_806F7B48.s"
}
#pragma pop


/* 806F7B50-806F7B58 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	806F7B54: 806F799C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_806F7B50() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_is/d_a_e_is/func_806F7B50.s"
}
#pragma pop


