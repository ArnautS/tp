// 
// Generated By: dol2asm
// Translation Unit: d_a_e_ym
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_ym/d_a_e_ym.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 8026702C */ // False False
//  bool False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
bool operator==(Vec const&) const;
	/* 80813E38 */ // True False
cXyz();
	/* 80815900 */ // True False
~cXyz();
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CDD4 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transM(cXyz const&);
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct J3DAnmTevRegKey {
};

struct J3DMaterialTable {
};

struct mDoExt_brkAnm {
	/* 8000D70C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
};

struct fopEn_enemy_c {
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct daTag_FWall_c {
	/* 80815958 */ // True False
//  u8 False
void getPos(u8);
};

struct daPy_py_c {
	/* 8015F424 */ // False False
void checkNowWolfEyeUp();
	/* 8081593C */ // True False
void getLeftHandPos() const;
};

struct daKago_c {
	/* 8084B088 */ // False False
//  cXyz False
void checkNextPath(cXyz);
};

struct daE_YM_c {
	/* 80808184 */ // True False
//  char const* False
// 	 char const False
// 		 char False
//  int False
void checkBck(char const*, int);
	/* 808081E0 */ // True False
//  int False
//  u8 False
//  f32 False
//  f32 False
void bckSet(int, u8, f32, f32);
	/* 80808328 */ // True False
//  int False
//  u8 False
//  f32 False
//  f32 False
void bckSetFly(int, u8, f32, f32);
	/* 808083CC */ // True False
void draw();
	/* 80808768 */ // True False
void setDigEffect();
	/* 80808884 */ // True False
void setElecEffect1();
	/* 808089DC */ // True False
void setElecEffect2();
	/* 80808B3C */ // True False
void setFireEffect();
	/* 80808E34 */ // True False
void checkWallCrash();
	/* 80809000 */ // True False
void checkWolfBark();
	/* 80809228 */ // True False
void checkSurpriseLock();
	/* 8080963C */ // True False
void checkRailSurprise();
	/* 808096EC */ // True False
void checkSurpriseNear();
	/* 80809D6C */ // True False
void setNormalCc();
	/* 80809D84 */ // True False
void setAppear();
	/* 80809DA8 */ // True False
//  int False
void setMoveSound(int);
	/* 80809EF0 */ // True False
void setTurnSound();
	/* 80809F9C */ // True False
//  int False
void setActionMode(int);
	/* 80809FC4 */ // True False
void executeWait();
	/* 8080A57C */ // True False
void executeMove();
	/* 8080ACB4 */ // True False
void executeEscape();
	/* 8080B444 */ // True False
void executeDown();
	/* 8080BB7C */ // True False
void damage_check();
	/* 8080BCFC */ // True False
void executeWind();
	/* 8080C05C */ // True False
void getSurpriseType();
	/* 8080C1FC */ // True False
void setSurpriseAway();
	/* 8080C24C */ // True False
void setGoHomeType();
	/* 8080C374 */ // True False
void executeSurprise();
	/* 8080CEE0 */ // True False
void executeBack();
	/* 8080CFC8 */ // True False
void executeFall();
	/* 8080D2C8 */ // True False
void executeAttack();
	/* 8080D990 */ // True False
void checkAttackEnd();
	/* 8080DB58 */ // True False
void setAttackMotion();
	/* 8080DC5C */ // True False
void executeAttackWall();
	/* 8080E26C */ // True False
void executeDefense();
	/* 8080E49C */ // True False
void checkFlyTerritory();
	/* 8080E630 */ // True False
void initFly();
	/* 8080E6A0 */ // True False
void executeFly();
	/* 8080F8C8 */ // True False
void setInclination();
	/* 8080F92C */ // True False
void executeFlyAttack();
	/* 80810084 */ // True False
void setNextPathPoint();
	/* 8081013C */ // True False
void checkRailDig();
	/* 8081030C */ // True False
void executeRail();
	/* 80810690 */ // True False
void executeBackRail();
	/* 80810DF8 */ // True False
void checkElectricStart();
	/* 80810E64 */ // True False
void executeElectric();
	/* 8081105C */ // True False
void executeSwitch();
	/* 80811740 */ // True False
//  int False
void initFireFly(int);
	/* 80811838 */ // True False
void executeFire();
	/* 808120B0 */ // True False
void setRiverAttention();
	/* 808123C4 */ // False False
void setLockByCargo();
	/* 808123D0 */ // True False
void executeRiver();
	/* 80812FCC */ // True False
void checkFrinedSamePos();
	/* 8081300C */ // True False
void action();
	/* 80813528 */ // True False
void mtx_set();
	/* 808135B0 */ // True False
void cc_set();
	/* 808138AC */ // True False
void execute();
	/* 80813A38 */ // True False
void _delete();
	/* 80813AF0 */ // True False
void CreateHeap();
	/* 80813EA4 */ // True False
//  s16 False
void checkBeforeBg(s16);
	/* 808143A0 */ // True False
void checkBeforeGround();
	/* 808144D8 */ // True False
void checkInitialWall();
	/* 80814758 */ // True False
void checkWall();
	/* 80814AF0 */ // True False
void setHideType();
	/* 80814BA4 */ // True False
void create();
};

struct daE_YM_HIO_c {
	/* 8080812C */ // True False
daE_YM_HIO_c();
	/* 80815458 */ // True False
~daE_YM_HIO_c();
};

struct dSv_light_drop_c {
	/* 8003439C */ // False False
//  u8 False
void isLightDropGetFlag(u8) const;
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPath {
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004C218 */ // False False
//  u16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
void setHitMark(u16, fopAc_ac_c*, cXyz const*, csXyz const*, cXyz const*, u32);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dComIfG_play_c {
	/* 8002C97C */ // False False
//  int False
void getLayerNo(int);
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 808152B4 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800842C0 */ // False False
void ChkAtHit();
	/* 80084358 */ // False False
void GetAtHitObj();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084658 */ // False False
void ChkCoHit();
	/* 800846F0 */ // False False
void GetCoHitObj();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjGndChk_Wtr {
	/* 80077678 */ // False False
dBgS_ObjGndChk_Wtr();
	/* 80077710 */ // False False
~dBgS_ObjGndChk_Wtr();
};

struct dBgS_ObjAcch {
	/* 80815310 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80815380 */ // True False
~dBgS_AcchCir();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct dBgS {
	/* 80074EF0 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGroundCode(cBgS_PolyInfo const&);
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
	/* 80077114 */ // False False
//  f32 False
void SetGroundUpY(f32);
};

struct dAttention_c {
	/* 8007353C */ // False False
//  s32 False
void LockonTarget(s32);
	/* 800737E4 */ // False False
void LockonTruth();
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80815224 */ // True False
~cM3dGSph();
};

struct cM3dGPla {
	/* 8080BB34 */ // True False
~cM3dGPla();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 8081526C */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
	/* 80263A48 */ // False False
void GetAc();
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 80815410 */ // True False
~cCcD_GStts();
};

struct cBgS_LinChk {
};

struct cBgS_GndChk {
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
	/* 80267D0C */ // False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void SetPos(Vec const*);
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct _GXTexObj {
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C1B7C */ // False False
//  bool False
void setLinkSearch(bool);
	/* 802C1B90 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void setEnemyName(char const*);
};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
	/* 80813E3C */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  daE_YM_c* False
// 	 daE_YM_c False
static void daE_YM_Draw(daE_YM_c*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_obj_sub(void*, void*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_ym_sub(void*, void*);
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
static void daE_YM_Execute(daE_YM_c*);
// True False
//  bool False
//  daE_YM_c* False
// 	 daE_YM_c False
static bool daE_YM_IsDelete(daE_YM_c*);
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
static void daE_YM_Delete(daE_YM_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
static void daE_YM_Create(daE_YM_c*);
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
static void setMidnaBindEffect(fopEn_enemy_c*, Z2CreatureEnemy*, cXyz*, cXyz*);

// True False
extern "C" void __ct__12daE_YM_HIO_cFv();
// True False
//  char const* False
// 	 char const False
// 		 char False
//  int False
extern "C" void checkBck__8daE_YM_cFPCci();
// True False
//  int False
//  u8 False
//  f32 False
//  f32 False
extern "C" void bckSet__8daE_YM_cFiUcff();
// True False
//  int False
//  u8 False
//  f32 False
//  f32 False
extern "C" void bckSetFly__8daE_YM_cFiUcff();
// True False
extern "C" void draw__8daE_YM_cFv();
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
extern "C" static void daE_YM_Draw__FP8daE_YM_c();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_obj_sub__FPvPv();
// True False
extern "C" void setDigEffect__8daE_YM_cFv();
// True False
extern "C" void setElecEffect1__8daE_YM_cFv();
// True False
extern "C" void setElecEffect2__8daE_YM_cFv();
// True False
extern "C" void setFireEffect__8daE_YM_cFv();
// True False
extern "C" void checkWallCrash__8daE_YM_cFv();
// True False
extern "C" void checkWolfBark__8daE_YM_cFv();
// True False
extern "C" void checkSurpriseLock__8daE_YM_cFv();
// True False
extern "C" void checkRailSurprise__8daE_YM_cFv();
// True False
extern "C" void checkSurpriseNear__8daE_YM_cFv();
// True False
extern "C" void setNormalCc__8daE_YM_cFv();
// True False
extern "C" void setAppear__8daE_YM_cFv();
// True False
//  int False
extern "C" void setMoveSound__8daE_YM_cFi();
// True False
extern "C" void setTurnSound__8daE_YM_cFv();
// True False
//  int False
extern "C" void setActionMode__8daE_YM_cFi();
// True False
extern "C" void executeWait__8daE_YM_cFv();
// True False
extern "C" void executeMove__8daE_YM_cFv();
// True False
extern "C" void executeEscape__8daE_YM_cFv();
// True False
extern "C" void executeDown__8daE_YM_cFv();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
extern "C" void damage_check__8daE_YM_cFv();
// True False
extern "C" void executeWind__8daE_YM_cFv();
// True False
extern "C" void getSurpriseType__8daE_YM_cFv();
// True False
extern "C" void setSurpriseAway__8daE_YM_cFv();
// True False
extern "C" void setGoHomeType__8daE_YM_cFv();
// True False
extern "C" void executeSurprise__8daE_YM_cFv();
// True False
extern "C" void executeBack__8daE_YM_cFv();
// True False
extern "C" void executeFall__8daE_YM_cFv();
// True False
extern "C" void executeAttack__8daE_YM_cFv();
// True False
extern "C" void checkAttackEnd__8daE_YM_cFv();
// True False
extern "C" void setAttackMotion__8daE_YM_cFv();
// True False
extern "C" void executeAttackWall__8daE_YM_cFv();
// True False
extern "C" void executeDefense__8daE_YM_cFv();
// True False
extern "C" void checkFlyTerritory__8daE_YM_cFv();
// True False
extern "C" void initFly__8daE_YM_cFv();
// True False
extern "C" void executeFly__8daE_YM_cFv();
// True False
extern "C" void setInclination__8daE_YM_cFv();
// True False
extern "C" void executeFlyAttack__8daE_YM_cFv();
// True False
extern "C" void setNextPathPoint__8daE_YM_cFv();
// True False
extern "C" void checkRailDig__8daE_YM_cFv();
// True False
extern "C" void executeRail__8daE_YM_cFv();
// True False
extern "C" void executeBackRail__8daE_YM_cFv();
// True False
extern "C" void checkElectricStart__8daE_YM_cFv();
// True False
extern "C" void executeElectric__8daE_YM_cFv();
// True False
extern "C" void executeSwitch__8daE_YM_cFv();
// True False
//  int False
extern "C" void initFireFly__8daE_YM_cFi();
// True False
extern "C" void executeFire__8daE_YM_cFv();
// True False
extern "C" void setRiverAttention__8daE_YM_cFv();
// False False
extern "C" void setLockByCargo__8daE_YM_cFv();
// True False
extern "C" void executeRiver__8daE_YM_cFv();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_ym_sub__FPvPv();
// True False
extern "C" void checkFrinedSamePos__8daE_YM_cFv();
// True False
extern "C" void action__8daE_YM_cFv();
// True False
extern "C" void mtx_set__8daE_YM_cFv();
// True False
extern "C" void cc_set__8daE_YM_cFv();
// True False
extern "C" void execute__8daE_YM_cFv();
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
extern "C" static void daE_YM_Execute__FP8daE_YM_c();
// True False
//  bool False
//  daE_YM_c* False
// 	 daE_YM_c False
extern "C" static bool daE_YM_IsDelete__FP8daE_YM_c();
// True False
extern "C" void _delete__8daE_YM_cFv();
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
extern "C" static void daE_YM_Delete__FP8daE_YM_c();
// True False
extern "C" void CreateHeap__8daE_YM_cFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
//  s16 False
extern "C" void checkBeforeBg__8daE_YM_cFs();
// True False
extern "C" void checkBeforeGround__8daE_YM_cFv();
// True False
extern "C" void checkInitialWall__8daE_YM_cFv();
// True False
extern "C" void checkWall__8daE_YM_cFv();
// True False
extern "C" void setHideType__8daE_YM_cFv();
// True False
extern "C" void create__8daE_YM_cFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
extern "C" static void daE_YM_Create__FP8daE_YM_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__12daE_YM_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_ym_cpp();
// True False
extern "C" static void func_808154DC();
// True False
extern "C" static void func_808154E4();
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" static void setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void getLeftHandPos__9daPy_py_cCFv();
// True False
//  u8 False
extern "C" void getPos__13daTag_FWall_cFUc();
extern "C" extern u8 const lit_3928[8];
extern "C" extern u8 const lit_3929[8];
extern "C" extern u8 const lit_3930[8];
extern "C" extern u32 const lit_3931;
extern "C" extern u32 const lit_3946;
extern "C" extern u32 const lit_3948;
extern "C" extern u32 const lit_3950;
extern "C" extern u32 const lit_3951;
extern "C" extern u32 const lit_3952;
extern "C" extern u32 const lit_3987;
extern "C" extern u32 const lit_4101;
extern "C" extern u32 const lit_4102;
extern "C" extern u32 const lit_4214;
extern "C" extern u32 const lit_4215;
extern "C" extern u32 const lit_4416;
extern "C" extern u32 const lit_4472;
extern "C" extern u32 const lit_4603;
extern "C" extern u32 const lit_4820;
extern "C" extern u32 const lit_4821;
extern "C" extern u32 const lit_4822;
extern "C" extern u32 const lit_4871;
extern "C" extern u32 const lit_4873;
extern "C" extern u32 const lit_5021;
extern "C" extern u32 const lit_5268;
extern "C" extern u32 const lit_5269;
extern "C" extern u32 const lit_5270;
extern "C" extern u32 const lit_5413;
extern "C" extern u32 const lit_5414;
extern "C" extern u32 const lit_5415;
extern "C" extern u32 const lit_5416;
extern "C" extern u8 const lit_5418[8];
extern "C" extern u32 const lit_5644;
extern "C" extern u32 const lit_5645;
extern "C" extern u32 const lit_5646;
extern "C" extern u32 const lit_5647;
extern "C" extern u32 const lit_5648;
extern "C" extern u32 const lit_5724;
extern "C" extern u32 const lit_5725;
extern "C" extern u32 const lit_5726;
extern "C" extern u32 const lit_5792;
extern "C" extern u32 const lit_5793;
extern "C" extern u32 const lit_6055;
extern "C" extern u32 const lit_6056;
extern "C" extern u32 const lit_6057;
extern "C" extern u32 const lit_6058;
extern "C" extern u32 const lit_6059;
extern "C" extern u32 const lit_6060;
extern "C" extern u32 const lit_6061;
extern "C" extern u32 const lit_6062;
extern "C" extern u32 const lit_6244;
extern "C" extern u32 const lit_6245;
extern "C" extern u32 const lit_7042;
extern "C" extern u32 const lit_7043;
extern "C" extern u32 const lit_7044;
extern "C" extern u32 const lit_7045;
extern "C" extern u32 const lit_7046;
extern "C" extern u32 const lit_7047;
extern "C" extern u32 const lit_7048;
extern "C" extern u32 const lit_7556;
extern "C" extern u32 const lit_7719;
extern "C" extern u32 const lit_7942;
extern "C" extern u32 const lit_7943;
extern "C" extern u32 const lit_8040;
extern "C" extern u32 const lit_8350;
extern "C" extern u32 const lit_8351;
extern "C" extern u32 const lit_8621;
extern "C" extern u32 const lit_8622;
extern "C" extern u32 const lit_8964;
extern "C" extern u32 const lit_8965;
extern "C" extern u32 const lit_9187;
extern "C" extern u8 const lit_9420[8];
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_80815B24[8];
extern "C" extern u8 data_80815B2C[8];
extern "C" extern u8 data_80815B34[6 + 2 /* padding */];
extern "C" extern u8 data_80815B7C[8];
extern "C" extern void* g_profile_E_YM[12];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__12daE_YM_HIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  s16 False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void fopAcM_SearchByName(s16, fopAc_ac_c**);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
void fopAcM_createDisappear(fopAc_ac_c const*, cXyz const*, u8, u8, u8);
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
void fopAcM_effSmokeSet1(u32*, u32*, cXyz const*, csXyz const*, f32, dKy_tevstr_c const*, int);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fpcEx_Search(void* (*)(void*, void*), void*);
// False False
//  unsigned int False
void fpcM_IsCreating(unsigned int);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  dPath const* False
// 	 dPath const False
// 		 dPath False
//  int False
void dPath_GetPnt(dPath const*, int);
// False False
//  int False
//  int False
void dPath_GetRoomPath(int, int);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
void cM_rnd();
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void cLib_chasePos(cXyz*, cXyz const&, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseAngleS(s16*, s16, s16);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_targetAngleX(cXyz const*, cXyz const*);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_offsetPos(cXyz*, cXyz const*, s16, cXyz const*);
// False False
//  s16 False
//  s16 False
void cLib_distanceAngleS(s16, s16);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new[](u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transM__14mDoMtx_stack_cFRC4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  s16 False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void fopAcM_SearchByName__FsPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
extern "C" void fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc();
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
extern "C" void fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fpcEx_Search__FPFPvPv_PvPv();
// False False
//  unsigned int False
extern "C" void fpcM_IsCreating__FUi();
// False False
//  int False
extern "C" void getLayerNo__14dComIfG_play_cFi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  u8 False
extern "C" void isLightDropGetFlag__16dSv_light_drop_cCFUc();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
extern "C" void setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  dPath const* False
// 	 dPath const False
// 		 dPath False
//  int False
extern "C" void dPath_GetPnt__FPC5dPathi();
// False False
//  int False
//  int False
extern "C" void dPath_GetRoomPath__Fii();
// False False
//  s32 False
extern "C" void LockonTarget__12dAttention_cFl();
// False False
extern "C" void LockonTruth__12dAttention_cFv();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGroundCode__4dBgSFRC13cBgS_PolyInfo();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
//  f32 False
extern "C" void SetGroundUpY__9dBgS_AcchFf();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__18dBgS_ObjGndChk_WtrFv();
// False False
extern "C" void __dt__18dBgS_ObjGndChk_WtrFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkAtHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetAtHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetCoHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
extern "C" void checkNowWolfEyeUp__9daPy_py_cFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
extern "C" void GetAc__8cCcD_ObjFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
//  bool False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" bool __eq__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
extern "C" void cM_rnd__Fv();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void SetPos__11cBgS_GndChkFPC3Vec();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void cLib_chasePos__FP4cXyzRC4cXyzf();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseAngleS__FPsss();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_targetAngleX__FPC4cXyzPC4cXyz();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz();
// False False
//  s16 False
//  s16 False
extern "C" void cLib_distanceAngleS__Fss();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  bool False
extern "C" void setLinkSearch__15Z2CreatureEnemyFb();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void setEnemyName__15Z2CreatureEnemyFPCc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nwa__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __construct_new_array();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void abs();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern u8 JPTracePCB4[4];
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
// False False
extern "C" void __register_global_object();
// False False
//  cXyz False
extern "C" void checkNextPath__8daKago_cF4cXyz();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80815994-80815998 0004+00 s=48 e=0 z=0  None .rodata    @3925                                                        */
SECTION_RODATA static u32 const lit_3925 = 0x42C80000;

/* 80815B04-80815B10 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80815B10-80815B24 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80815B24-80815B2C 0008+00 s=0 e=0 z=0  None .data      e_prim$3804                                                  */
SECTION_DATA u8 data_80815B24[8] = {
	0xFF, 0x78, 0x00, 0x00, 0xFF, 0x64, 0x78, 0x00,
};

/* 80815B2C-80815B34 0008+00 s=0 e=0 z=0  None .data      e_env$3805                                                   */
SECTION_DATA u8 data_80815B2C[8] = {
	0x5A, 0x2D, 0x2D, 0x00, 0x3C, 0x1E, 0x1E, 0x00,
};

/* 80815B34-80815B3C 0006+02 s=0 e=0 z=0  None .data      eff_id$3813                                                  */
SECTION_DATA u8 data_80815B34[6 + 2 /* padding */] = {
	0x02, 0x9D, 0x02, 0x9E, 0x02, 0x9F,
	/* padding */
	0x00, 0x00,
};

/* 80815B3C-80815B7C 0040+00 s=1 e=0 z=0  None .data      cc_sph_src__6E_YM_n                                          */
SECTION_DATA static u8 cc_sph_src__6E_YM_n[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x75, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 80815B7C-80815B84 0008+00 s=0 e=0 z=0  None .data      w_eff_id$5427                                                */
SECTION_DATA u8 data_80815B7C[8] = {
	0x01, 0xB8, 0x01, 0xB9, 0x01, 0xBA, 0x01, 0xBB,
};

/* 80815B84-80815BA4 0020+00 s=1 e=0 z=0  None .data      @6063                                                        */
SECTION_DATA static void* lit_6063[8] = {
	(void*)(((char*)executeSurprise__8daE_YM_cFv)+0xEC),
	(void*)(((char*)executeSurprise__8daE_YM_cFv)+0x1F4),
	(void*)(((char*)executeSurprise__8daE_YM_cFv)+0x708),
	(void*)(((char*)executeSurprise__8daE_YM_cFv)+0x810),
	(void*)(((char*)executeSurprise__8daE_YM_cFv)+0xB44),
	(void*)(((char*)executeSurprise__8daE_YM_cFv)+0x83C),
	(void*)(((char*)executeSurprise__8daE_YM_cFv)+0xA88),
	(void*)(((char*)executeSurprise__8daE_YM_cFv)+0xAEC),
};

/* 80815BA4-80815BD0 002C+00 s=1 e=0 z=0  None .data      @7049                                                        */
SECTION_DATA static void* lit_7049[11] = {
	(void*)(((char*)executeFly__8daE_YM_cFv)+0x10C),
	(void*)(((char*)executeFly__8daE_YM_cFv)+0x13C),
	(void*)(((char*)executeFly__8daE_YM_cFv)+0x1EC),
	(void*)(((char*)executeFly__8daE_YM_cFv)+0x228),
	(void*)(((char*)executeFly__8daE_YM_cFv)+0x798),
	(void*)(((char*)executeFly__8daE_YM_cFv)+0xAB0),
	(void*)(((char*)executeFly__8daE_YM_cFv)+0x798),
	(void*)(((char*)executeFly__8daE_YM_cFv)+0x9BC),
	(void*)(((char*)executeFly__8daE_YM_cFv)+0x11DC),
	(void*)(((char*)executeFly__8daE_YM_cFv)+0x11DC),
	(void*)(((char*)executeFly__8daE_YM_cFv)+0xFCC),
};

/* 80815BD0-80815BDC 000C+00 s=1 e=0 z=0  None .data      YM_DIG_POS_Y$7355                                            */
SECTION_DATA static u8 YM_DIG_POS_Y[12] = {
	0xC1, 0x70, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00, 0xC2, 0x8C, 0x00, 0x00,
};

/* 80815BDC-80815C28 004C+00 s=1 e=0 z=0  None .data      @8522                                                        */
SECTION_DATA static void* lit_8522[19] = {
	(void*)(((char*)action__8daE_YM_cFv)+0x124),
	(void*)(((char*)action__8daE_YM_cFv)+0x130),
	(void*)(((char*)action__8daE_YM_cFv)+0x13C),
	(void*)(((char*)action__8daE_YM_cFv)+0x148),
	(void*)(((char*)action__8daE_YM_cFv)+0x154),
	(void*)(((char*)action__8daE_YM_cFv)+0x160),
	(void*)(((char*)action__8daE_YM_cFv)+0x16C),
	(void*)(((char*)action__8daE_YM_cFv)+0x178),
	(void*)(((char*)action__8daE_YM_cFv)+0x184),
	(void*)(((char*)action__8daE_YM_cFv)+0x194),
	(void*)(((char*)action__8daE_YM_cFv)+0x1A4),
	(void*)(((char*)action__8daE_YM_cFv)+0x1B0),
	(void*)(((char*)action__8daE_YM_cFv)+0x1BC),
	(void*)(((char*)action__8daE_YM_cFv)+0x1CC),
	(void*)(((char*)action__8daE_YM_cFv)+0x1D8),
	(void*)(((char*)action__8daE_YM_cFv)+0x1E4),
	(void*)(((char*)action__8daE_YM_cFv)+0x1F4),
	(void*)(((char*)action__8daE_YM_cFv)+0x200),
	(void*)(((char*)action__8daE_YM_cFv)+0x20C),
};

/* 80815C28-80815C48 0020+00 s=1 e=0 z=0  None .data      @9421                                                        */
SECTION_DATA static void* lit_9421[8] = {
	(void*)(((char*)create__8daE_YM_cFv)+0x40C),
	(void*)(((char*)create__8daE_YM_cFv)+0x434),
	(void*)(((char*)create__8daE_YM_cFv)+0x464),
	(void*)(((char*)create__8daE_YM_cFv)+0x47C),
	(void*)(((char*)create__8daE_YM_cFv)+0x494),
	(void*)(((char*)create__8daE_YM_cFv)+0x524),
	(void*)(((char*)create__8daE_YM_cFv)+0x5B4),
	(void*)(((char*)create__8daE_YM_cFv)+0x5C4),
};

/* 80815C48-80815C68 0020+00 s=1 e=0 z=0  None .data      l_daE_YM_Method                                              */
SECTION_DATA static void* l_daE_YM_Method[8] = {
	(void*)daE_YM_Create__FP8daE_YM_c,
	(void*)daE_YM_Delete__FP8daE_YM_c,
	(void*)daE_YM_Execute__FP8daE_YM_c,
	(void*)daE_YM_IsDelete__FP8daE_YM_c,
	(void*)daE_YM_Draw__FP8daE_YM_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80815C68-80815C98 0030+00 s=0 e=0 z=1  None .data      g_profile_E_YM                                               */
SECTION_DATA void* g_profile_E_YM[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01F40000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000AF8,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00C20000,
	(void*)&l_daE_YM_Method,
	(void*)0x00040100,
	(void*)0x020E0000,
};

/* 80815C98-80815CA4 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80815CA4-80815CB0 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80815CB0-80815CBC 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80815CBC-80815CC8 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80815CC8-80815CD4 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80815CD4-80815CF8 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_808154E4,
	(void*)NULL,
	(void*)NULL,
	(void*)func_808154DC,
};

/* 80815CF8-80815D04 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 80815D04-80815D10 000C+00 s=6 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 80815D10-80815D1C 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_YM_HIO_c                                         */
SECTION_DATA void* __vt__12daE_YM_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_YM_HIO_cFv,
};

/* 8080812C-80808184 0058+00 s=1 e=0 z=0  None .text      __ct__12daE_YM_HIO_cFv                                       */
//	8080812C: 80815994 (lit_3925)
//	80808130: 80815994 (lit_3925)
//	80808134: 80815D10 (__vt__12daE_YM_HIO_c)
//	80808138: 80815D10 (__vt__12daE_YM_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_YM_HIO_c::daE_YM_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__ct__12daE_YM_HIO_cFv.s"
}
#pragma pop


/* 80808184-808081E0 005C+00 s=3 e=0 z=0  None .text      checkBck__8daE_YM_cFPCci                                     */
//	808081A0: 804061C0 (g_dComIfG_gameInfo)
//	808081A4: 804061C0 (g_dComIfG_gameInfo)
//	808081B4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  char const* False
// 	 char const False
// 		 char False
//  int False
asm void daE_YM_c::checkBck(char const* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkBck__8daE_YM_cFPCci.s"
}
#pragma pop


/* ############################################################################################## */
/* 80815998-8081599C 0004+00 s=3 e=0 z=0  None .rodata    @3926                                                        */
SECTION_RODATA static u8 const lit_3926[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 8081599C-808159A4 0004+04 s=3 e=0 z=0  None .rodata    @3927                                                        */
SECTION_RODATA static u32 const lit_3927[1 + 1 /* padding */] = {
	0x3F800000,
	/* padding */
	0x00000000,
};

/* 808159A4-808159AC 0008+00 s=0 e=0 z=0  None .rodata    @3928                                                        */
SECTION_RODATA u8 const lit_3928[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 808159AC-808159B4 0008+00 s=0 e=0 z=0  None .rodata    @3929                                                        */
SECTION_RODATA u8 const lit_3929[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 808159B4-808159BC 0008+00 s=0 e=0 z=0  None .rodata    @3930                                                        */
SECTION_RODATA u8 const lit_3930[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 808159BC-808159C0 0004+00 s=0 e=0 z=0  None .rodata    @3931                                                        */
SECTION_RODATA u32 const lit_3931 = 0x3C23D70A;

/* 808159C0-808159C4 0004+00 s=0 e=0 z=0  None .rodata    @3946                                                        */
SECTION_RODATA u32 const lit_3946 = 0x41A00000;

/* 808159C4-808159C8 0004+00 s=1 e=0 z=0  None .rodata    @3947                                                        */
SECTION_RODATA static u32 const lit_3947 = 0x41F00000;

/* 808159C8-808159CC 0004+00 s=0 e=0 z=0  None .rodata    @3948                                                        */
SECTION_RODATA u32 const lit_3948 = 0x3F19999A;

/* 808159CC-808159D0 0004+00 s=1 e=0 z=0  None .rodata    @3949                                                        */
SECTION_RODATA static u32 const lit_3949 = 0x40400000;

/* 808159D0-808159D4 0004+00 s=0 e=0 z=0  None .rodata    @3950                                                        */
SECTION_RODATA u32 const lit_3950 = 0x41500000;

/* 808159D4-808159D8 0004+00 s=0 e=0 z=0  None .rodata    @3951                                                        */
SECTION_RODATA u32 const lit_3951 = 0x43C80000;

/* 808159D8-808159DC 0004+00 s=0 e=0 z=0  None .rodata    @3952                                                        */
SECTION_RODATA u32 const lit_3952 = 0x43960000;

/* 808159DC-808159E0 0004+00 s=0 e=0 z=0  None .rodata    @3987                                                        */
SECTION_RODATA u32 const lit_3987 = 0x40000000;

/* 808159E0-808159E4 0004+00 s=1 e=0 z=0  None .rodata    @3988                                                        */
SECTION_RODATA static u32 const lit_3988 = 0xBF800000;

/* 808159E4-808159E8 0004+00 s=0 e=0 z=0  None .rodata    @4101                                                        */
SECTION_RODATA u32 const lit_4101 = 0x437F0000;

/* 808159E8-808159EC 0004+00 s=0 e=0 z=0  None .rodata    @4102                                                        */
SECTION_RODATA u32 const lit_4102 = 0xC28C0000;

/* 808159EC-808159F0 0004+00 s=0 e=0 z=0  None .rodata    @4214                                                        */
SECTION_RODATA u32 const lit_4214 = 0x41200000;

/* 808159F0-808159F4 0004+00 s=0 e=0 z=0  None .rodata    @4215                                                        */
SECTION_RODATA u32 const lit_4215 = 0x40C00000;

/* 808159F4-808159F8 0004+00 s=0 e=0 z=0  None .rodata    @4416                                                        */
SECTION_RODATA u32 const lit_4416 = 0x44160000;

/* 808159F8-808159FC 0004+00 s=0 e=0 z=0  None .rodata    @4472                                                        */
SECTION_RODATA u32 const lit_4472 = 0x44610000;

/* 808159FC-80815A00 0004+00 s=0 e=0 z=0  None .rodata    @4603                                                        */
SECTION_RODATA u32 const lit_4603 = 0x43160000;

/* 80815A00-80815A04 0004+00 s=1 e=0 z=0  None .rodata    @4618                                                        */
SECTION_RODATA static u32 const lit_4618 = 0x43480000;

/* 80815A04-80815A08 0004+00 s=0 e=0 z=0  None .rodata    @4820                                                        */
SECTION_RODATA u32 const lit_4820 = 0x42480000;

/* 80815A08-80815A0C 0004+00 s=0 e=0 z=0  None .rodata    @4821                                                        */
SECTION_RODATA u32 const lit_4821 = 0x43AF0000;

/* 80815A0C-80815A10 0004+00 s=0 e=0 z=0  None .rodata    @4822                                                        */
SECTION_RODATA u32 const lit_4822 = 0x41800000;

/* 80815A10-80815A14 0004+00 s=0 e=0 z=0  None .rodata    @4871                                                        */
SECTION_RODATA u32 const lit_4871 = 0x3E19999A;

/* 80815A14-80815A18 0004+00 s=1 e=0 z=0  None .rodata    @4872                                                        */
SECTION_RODATA static u32 const lit_4872 = 0x40A00000;

/* 80815A18-80815A1C 0004+00 s=0 e=0 z=0  None .rodata    @4873                                                        */
SECTION_RODATA u32 const lit_4873 = 0x41100000;

/* 80815A1C-80815A20 0004+00 s=0 e=0 z=0  None .rodata    @5021                                                        */
SECTION_RODATA u32 const lit_5021 = 0xC2700000;

/* 80815A20-80815A24 0004+00 s=0 e=0 z=0  None .rodata    @5268                                                        */
SECTION_RODATA u32 const lit_5268 = 0x3FC00000;

/* 80815A24-80815A28 0004+00 s=0 e=0 z=0  None .rodata    @5269                                                        */
SECTION_RODATA u32 const lit_5269 = 0x47000000;

/* 80815A28-80815A2C 0004+00 s=0 e=0 z=0  None .rodata    @5270                                                        */
SECTION_RODATA u32 const lit_5270 = 0x42200000;

/* 80815A2C-80815A30 0004+00 s=0 e=0 z=0  None .rodata    @5413                                                        */
SECTION_RODATA u32 const lit_5413 = 0x41000000;

/* 80815A30-80815A34 0004+00 s=0 e=0 z=0  None .rodata    @5414                                                        */
SECTION_RODATA u32 const lit_5414 = 0x46000000;

/* 80815A34-80815A38 0004+00 s=0 e=0 z=0  None .rodata    @5415                                                        */
SECTION_RODATA u32 const lit_5415 = 0x42340000;

/* 80815A38-80815A3C 0004+00 s=0 e=0 z=0  None .rodata    @5416                                                        */
SECTION_RODATA u32 const lit_5416 = 0x43FA0000;

/* 80815A3C-80815A44 0008+00 s=0 e=0 z=0  None .rodata    @5418                                                        */
SECTION_RODATA u8 const lit_5418[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80815A44-80815A48 0004+00 s=0 e=0 z=0  None .rodata    @5644                                                        */
SECTION_RODATA u32 const lit_5644 = 0xC0A00000;

/* 80815A48-80815A4C 0004+00 s=0 e=0 z=0  None .rodata    @5645                                                        */
SECTION_RODATA u32 const lit_5645 = 0x41700000;

/* 80815A4C-80815A50 0004+00 s=0 e=0 z=0  None .rodata    @5646                                                        */
SECTION_RODATA u32 const lit_5646 = 0x42700000;

/* 80815A50-80815A54 0004+00 s=0 e=0 z=0  None .rodata    @5647                                                        */
SECTION_RODATA u32 const lit_5647 = 0x447A0000;

/* 80815A54-80815A58 0004+00 s=0 e=0 z=0  None .rodata    @5648                                                        */
SECTION_RODATA u32 const lit_5648 = 0xCE6E6B28;

/* 80815A58-80815A5C 0004+00 s=0 e=0 z=0  None .rodata    @5724                                                        */
SECTION_RODATA u32 const lit_5724 = 0x41C80000;

/* 80815A5C-80815A60 0004+00 s=0 e=0 z=0  None .rodata    @5725                                                        */
SECTION_RODATA u32 const lit_5725 = 0x45800000;

/* 80815A60-80815A64 0004+00 s=0 e=0 z=0  None .rodata    @5726                                                        */
SECTION_RODATA u32 const lit_5726 = 0x45000000;

/* 80815A64-80815A68 0004+00 s=1 e=0 z=0  None .rodata    @5774                                                        */
SECTION_RODATA static u32 const lit_5774 = 0x41400000;

/* 80815A68-80815A6C 0004+00 s=0 e=0 z=0  None .rodata    @5792                                                        */
SECTION_RODATA u32 const lit_5792 = 0x3DCCCCCD;

/* 80815A6C-80815A70 0004+00 s=0 e=0 z=0  None .rodata    @5793                                                        */
SECTION_RODATA u32 const lit_5793 = 0x457A0000;

/* 80815A70-80815A74 0004+00 s=0 e=0 z=0  None .rodata    @6055                                                        */
SECTION_RODATA u32 const lit_6055 = 0xC2B40000;

/* 80815A74-80815A78 0004+00 s=0 e=0 z=0  None .rodata    @6056                                                        */
SECTION_RODATA u32 const lit_6056 = 0x41E00000;

/* 80815A78-80815A7C 0004+00 s=0 e=0 z=0  None .rodata    @6057                                                        */
SECTION_RODATA u32 const lit_6057 = 0x41880000;

/* 80815A7C-80815A80 0004+00 s=0 e=0 z=0  None .rodata    @6058                                                        */
SECTION_RODATA u32 const lit_6058 = 0x3E99999A;

/* 80815A80-80815A84 0004+00 s=0 e=0 z=0  None .rodata    @6059                                                        */
SECTION_RODATA u32 const lit_6059 = 0x44228000;

/* 80815A84-80815A88 0004+00 s=0 e=0 z=0  None .rodata    @6060                                                        */
SECTION_RODATA u32 const lit_6060 = 0x42B40000;

/* 80815A88-80815A8C 0004+00 s=0 e=0 z=0  None .rodata    @6061                                                        */
SECTION_RODATA u32 const lit_6061 = 0x42960000;

/* 80815A8C-80815A90 0004+00 s=0 e=0 z=0  None .rodata    @6062                                                        */
SECTION_RODATA u32 const lit_6062 = 0x420C0000;

/* 80815A90-80815A94 0004+00 s=0 e=0 z=0  None .rodata    @6244                                                        */
SECTION_RODATA u32 const lit_6244 = 0xC2C80000;

/* 80815A94-80815A98 0004+00 s=0 e=0 z=0  None .rodata    @6245                                                        */
SECTION_RODATA u32 const lit_6245 = 0x40800000;

/* 80815A98-80815A9C 0004+00 s=0 e=0 z=0  None .rodata    @7042                                                        */
SECTION_RODATA u32 const lit_7042 = 0x41600000;

/* 80815A9C-80815AA0 0004+00 s=0 e=0 z=0  None .rodata    @7043                                                        */
SECTION_RODATA u32 const lit_7043 = 0xC1200000;

/* 80815AA0-80815AA4 0004+00 s=0 e=0 z=0  None .rodata    @7044                                                        */
SECTION_RODATA u32 const lit_7044 = 0x428C0000;

/* 80815AA4-80815AA8 0004+00 s=0 e=0 z=0  None .rodata    @7045                                                        */
SECTION_RODATA u32 const lit_7045 = 0x3ECCCCCD;

/* 80815AA8-80815AAC 0004+00 s=0 e=0 z=0  None .rodata    @7046                                                        */
SECTION_RODATA u32 const lit_7046 = 0xC5400000;

/* 80815AAC-80815AB0 0004+00 s=0 e=0 z=0  None .rodata    @7047                                                        */
SECTION_RODATA u32 const lit_7047 = 0x45A00000;

/* 80815AB0-80815AB4 0004+00 s=0 e=0 z=0  None .rodata    @7048                                                        */
SECTION_RODATA u32 const lit_7048 = 0xC1700000;

/* 80815AB4-80815AB8 0004+00 s=0 e=0 z=0  None .rodata    @7556                                                        */
SECTION_RODATA u32 const lit_7556 = 0x42100000;

/* 80815AB8-80815ABC 0004+00 s=0 e=0 z=0  None .rodata    @7719                                                        */
SECTION_RODATA u32 const lit_7719 = 0x44000000;

/* 80815ABC-80815AC0 0004+00 s=0 e=0 z=0  None .rodata    @7942                                                        */
SECTION_RODATA u32 const lit_7942 = 0x44098000;

/* 80815AC0-80815AC4 0004+00 s=0 e=0 z=0  None .rodata    @7943                                                        */
SECTION_RODATA u32 const lit_7943 = 0x437A0000;

/* 80815AC4-80815AC8 0004+00 s=0 e=0 z=0  None .rodata    @8040                                                        */
SECTION_RODATA u32 const lit_8040 = 0x44FA0000;

/* 80815AC8-80815ACC 0004+00 s=0 e=0 z=0  None .rodata    @8350                                                        */
SECTION_RODATA u32 const lit_8350 = 0x44BB8000;

/* 80815ACC-80815AD0 0004+00 s=0 e=0 z=0  None .rodata    @8351                                                        */
SECTION_RODATA u32 const lit_8351 = 0x4019999A;

/* 80815AD0-80815AD4 0004+00 s=0 e=0 z=0  None .rodata    @8621                                                        */
SECTION_RODATA u32 const lit_8621 = 0xC1F00000;

/* 80815AD4-80815AD8 0004+00 s=0 e=0 z=0  None .rodata    @8622                                                        */
SECTION_RODATA u32 const lit_8622 = 0xC1A00000;

/* 80815AD8-80815ADC 0004+00 s=0 e=0 z=0  None .rodata    @8964                                                        */
SECTION_RODATA u32 const lit_8964 = 0xC3480000;

/* 80815ADC-80815AE0 0004+00 s=0 e=0 z=0  None .rodata    @8965                                                        */
SECTION_RODATA u32 const lit_8965 = 0x42A00000;

/* 80815AE0-80815AE4 0004+00 s=0 e=0 z=0  None .rodata    @9187                                                        */
SECTION_RODATA u32 const lit_9187 = 0xC2480000;

/* 80815AE4-80815AEC 0008+00 s=0 e=0 z=0  None .rodata    @9420                                                        */
SECTION_RODATA u8 const lit_9420[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80815AEC-80815B03 0017+00 s=9 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80815AEC = "E_TM";
SECTION_DEAD char const* const stringBase_80815AF1 = "E_YM";
SECTION_DEAD char const* const stringBase_80815AF6 = "R_SP108";
SECTION_DEAD char const* const stringBase_80815AFE = "E_ym";
#pragma pop

/* 808081E0-80808328 0148+00 s=18 e=0 z=0  None .text      bckSet__8daE_YM_cFiUcff                                      */
//	80808200: 803621DC (_savegpr_29)
//	80808214: 80815994 (lit_3925)
//	80808218: 80815994 (lit_3925)
//	80808278: 80815AEC (stringBase0)
//	8080827C: 80815AEC (stringBase0)
//	80808280: 804061C0 (g_dComIfG_gameInfo)
//	80808284: 804061C0 (g_dComIfG_gameInfo)
//	80808294: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	808082B4: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	808082BC: 80815AEC (stringBase0)
//	808082C0: 80815AEC (stringBase0)
//	808082C8: 804061C0 (g_dComIfG_gameInfo)
//	808082CC: 804061C0 (g_dComIfG_gameInfo)
//	808082DC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	808082FC: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	80808314: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  u8 False
//  f32 False
//  f32 False
asm void daE_YM_c::bckSet(int param_0, u8 param_1, f32 param_2, f32 param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/bckSet__8daE_YM_cFiUcff.s"
}
#pragma pop


/* 80808328-808083CC 00A4+00 s=4 e=0 z=0  None .text      bckSetFly__8daE_YM_cFiUcff                                   */
//	8080835C: 80815AEC (stringBase0)
//	80808360: 80815AEC (stringBase0)
//	80808364: 804061C0 (g_dComIfG_gameInfo)
//	80808368: 804061C0 (g_dComIfG_gameInfo)
//	80808378: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80808390: 80815998 (lit_3926)
//	80808394: 80815998 (lit_3926)
//	80808398: 808159E0 (lit_3988)
//	8080839C: 808159E0 (lit_3988)
//	808083A0: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  u8 False
//  f32 False
//  f32 False
asm void daE_YM_c::bckSetFly(int param_0, u8 param_1, f32 param_2, f32 param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/bckSetFly__8daE_YM_cFiUcff.s"
}
#pragma pop


/* 808083CC-80808678 02AC+00 s=1 e=0 z=0  None .text      draw__8daE_YM_cFv                                            */
//	808083DC: 803621D0 (_savegpr_26)
//	808083E4: 80815994 (lit_3925)
//	808083E8: 80815994 (lit_3925)
//	80808400: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	8080841C: 8026FA3C (cLib_addCalc2__FPffff)
//	80808440: 8026FA3C (cLib_addCalc2__FPffff)
//	80808458: 8026FA3C (cLib_addCalc2__FPffff)
//	80808510: 8042CA54 (g_env_light)
//	80808514: 8042CA54 (g_env_light)
//	80808524: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	80808528: 8042CA54 (g_env_light)
//	8080852C: 8042CA54 (g_env_light)
//	80808538: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	808085BC: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	808085C0: 804061C0 (g_dComIfG_gameInfo)
//	808085C4: 804061C0 (g_dComIfG_gameInfo)
//	808085CC: 80434AC8 (j3dSys)
//	808085D0: 80434AC8 (j3dSys)
//	808085E4: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	808085E8: 804061C0 (g_dComIfG_gameInfo)
//	808085EC: 804061C0 (g_dComIfG_gameInfo)
//	8080864C: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80808650: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	80808654: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	80808664: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::draw() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/draw__8daE_YM_cFv.s"
}
#pragma pop


/* 80808678-80808698 0020+00 s=1 e=0 z=0  None .text      daE_YM_Draw__FP8daE_YM_c                                     */
//	80808684: 808083CC (draw__8daE_YM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
asm static void daE_YM_Draw(daE_YM_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/daE_YM_Draw__FP8daE_YM_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80815D28-80815D2C 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_80815D28[4];

/* 80815D2C-80815D38 000C+00 s=1 e=0 z=0  None .bss       @3941                                                        */
static u8 lit_3941[12];

/* 80815D38-80815D5C 0024+00 s=18 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[36];

/* 80815D5C-80815D60 0004+00 s=3 e=0 z=0  None .bss       m_near_obj                                                   */
static u8 m_near_obj[4];

/* 80815D60-80815D64 0004+00 s=3 e=0 z=0  None .bss       m_obj_dist                                                   */
static u8 m_obj_dist[4];

/* 80808698-80808768 00D0+00 s=2 e=0 z=0  None .text      s_obj_sub__FPvPv                                             */
//	808086B4: 80018CE0 (fopAc_IsActor__FPv)
//	808086E0: 80022138 (fpcM_IsCreating__FUi)
//	808086F4: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	808086F8: 80815994 (lit_3925)
//	808086FC: 80815994 (lit_3925)
//	80808708: 80815D60 (m_obj_dist)
//	8080870C: 80815D60 (m_obj_dist)
//	80808730: 808159C4 (lit_3947)
//	80808734: 808159C4 (lit_3947)
//	80808740: 80815D5C (m_near_obj)
//	80808744: 80815D5C (m_near_obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_obj_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/s_obj_sub__FPvPv.s"
}
#pragma pop


/* 80808768-80808884 011C+00 s=1 e=0 z=0  None .text      setDigEffect__8daE_YM_cFv                                    */
//	808087B4: 804061C0 (g_dComIfG_gameInfo)
//	808087B8: 804061C0 (g_dComIfG_gameInfo)
//	80808804: 8081599C (lit_3927)
//	80808808: 8081599C (lit_3927)
//	8080880C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8080885C: 8081599C (lit_3927)
//	80808860: 8081599C (lit_3927)
//	80808864: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setDigEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setDigEffect__8daE_YM_cFv.s"
}
#pragma pop


/* 80808884-808089DC 0158+00 s=8 e=0 z=0  None .text      setElecEffect1__8daE_YM_cFv                                  */
//	80808894: 803621DC (_savegpr_29)
//	8080889C: 80815994 (lit_3925)
//	808088A0: 80815994 (lit_3925)
//	80808914: 804061C0 (g_dComIfG_gameInfo)
//	80808918: 804061C0 (g_dComIfG_gameInfo)
//	80808968: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	808089BC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	808089C8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setElecEffect1() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setElecEffect1__8daE_YM_cFv.s"
}
#pragma pop


/* 808089DC-80808B3C 0160+00 s=9 e=0 z=0  None .text      setElecEffect2__8daE_YM_cFv                                  */
//	808089EC: 803621DC (_savegpr_29)
//	808089F4: 80815994 (lit_3925)
//	808089F8: 80815994 (lit_3925)
//	80808A70: 80808884 (setElecEffect1__8daE_YM_cFv)
//	80808A74: 804061C0 (g_dComIfG_gameInfo)
//	80808A78: 804061C0 (g_dComIfG_gameInfo)
//	80808AC8: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80808B1C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80808B28: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setElecEffect2() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setElecEffect2__8daE_YM_cFv.s"
}
#pragma pop


/* 80808B3C-80808E34 02F8+00 s=1 e=0 z=0  None .text      setFireEffect__8daE_YM_cFv                                   */
//	80808B4C: 803621D0 (_savegpr_26)
//	80808B54: 80815994 (lit_3925)
//	80808B58: 80815994 (lit_3925)
//	80808B6C: 804061C0 (g_dComIfG_gameInfo)
//	80808B70: 804061C0 (g_dComIfG_gameInfo)
//	80808BB8: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80808C08: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80808C58: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80808CE8: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	80808CF8: 80347138 (PSVECSquareMag)
//	80808D68: 80450AE0 (__float_nan)
//	80808D6C: 80450AE0 (__float_nan)
//	80808DD8: 80450AE0 (__float_nan)
//	80808DDC: 80450AE0 (__float_nan)
//	80808DEC: 80450CA4 (JPTracePCB4)
//	80808DF0: 80450CA4 (JPTracePCB4)
//	80808E20: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setFireEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setFireEffect__8daE_YM_cFv.s"
}
#pragma pop


/* 80808E34-80809000 01CC+00 s=3 e=0 z=0  None .text      checkWallCrash__8daE_YM_cFv                                  */
//	80808E4C: 80815994 (lit_3925)
//	80808E50: 80815994 (lit_3925)
//	80808E60: 804061C0 (g_dComIfG_gameInfo)
//	80808E64: 804061C0 (g_dComIfG_gameInfo)
//	80808E90: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80808EC0: 80347138 (PSVECSquareMag)
//	80808F30: 80450AE0 (__float_nan)
//	80808F34: 80450AE0 (__float_nan)
//	80808FA0: 80450AE0 (__float_nan)
//	80808FA4: 80450AE0 (__float_nan)
//	80808FC8: 80809F9C (setActionMode__8daE_YM_cFi)
//	80808FD8: 80809F9C (setActionMode__8daE_YM_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkWallCrash() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkWallCrash__8daE_YM_cFv.s"
}
#pragma pop


/* 80809000-80809228 0228+00 s=3 e=0 z=0  None .text      checkWolfBark__8daE_YM_cFv                                   */
//	80809010: 803621DC (_savegpr_29)
//	80809018: 80815994 (lit_3925)
//	8080901C: 80815994 (lit_3925)
//	80809034: 804061C0 (g_dComIfG_gameInfo)
//	80809038: 804061C0 (g_dComIfG_gameInfo)
//	8080906C: 80270E24 (cLib_distanceAngleS__Fss)
//	80809080: 80266B34 (__mi__4cXyzCFRC3Vec)
//	808090A0: 80347138 (PSVECSquareMag)
//	80809110: 80450AE0 (__float_nan)
//	80809114: 80450AE0 (__float_nan)
//	80809180: 80450AE0 (__float_nan)
//	80809184: 80450AE0 (__float_nan)
//	80809188: 80815D38 (l_HIO)
//	8080918C: 80815D38 (l_HIO)
//	808091A8: 80267954 (cM_rndF__Ff)
//	808091C0: 80809F9C (setActionMode__8daE_YM_cFi)
//	808091DC: 80809F9C (setActionMode__8daE_YM_cFi)
//	808091EC: 80809F9C (setActionMode__8daE_YM_cFi)
//	80809214: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkWolfBark() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkWolfBark__8daE_YM_cFv.s"
}
#pragma pop


/* 80809228-8080963C 0414+00 s=1 e=0 z=0  None .text      checkSurpriseLock__8daE_YM_cFv                               */
//	80809238: 803621D8 (_savegpr_28)
//	80809240: 80815994 (lit_3925)
//	80809244: 80815994 (lit_3925)
//	80809248: 804061C0 (g_dComIfG_gameInfo)
//	8080924C: 804061C0 (g_dComIfG_gameInfo)
//	808092CC: 804061C0 (g_dComIfG_gameInfo)
//	808092D0: 804061C0 (g_dComIfG_gameInfo)
//	808092DC: 800737E4 (LockonTruth__12dAttention_cFv)
//	808092F0: 8007353C (LockonTarget__12dAttention_cFl)
//	80809314: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080933C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80809368: 8080963C (checkRailSurprise__8daE_YM_cFv)
//	80809390: 80347138 (PSVECSquareMag)
//	80809400: 80450AE0 (__float_nan)
//	80809404: 80450AE0 (__float_nan)
//	80809470: 80450AE0 (__float_nan)
//	80809474: 80450AE0 (__float_nan)
//	80809478: 80815D38 (l_HIO)
//	8080947C: 80815D38 (l_HIO)
//	80809490: 80347138 (PSVECSquareMag)
//	80809500: 80450AE0 (__float_nan)
//	80809504: 80450AE0 (__float_nan)
//	80809570: 80450AE0 (__float_nan)
//	80809574: 80450AE0 (__float_nan)
//	808095AC: 80809F9C (setActionMode__8daE_YM_cFi)
//	808095BC: 80809F9C (setActionMode__8daE_YM_cFi)
//	808095D8: 80809F9C (setActionMode__8daE_YM_cFi)
//	80809604: 80809F9C (setActionMode__8daE_YM_cFi)
//	80809614: 80809F9C (setActionMode__8daE_YM_cFi)
//	80809628: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkSurpriseLock() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkSurpriseLock__8daE_YM_cFv.s"
}
#pragma pop


/* 8080963C-808096EC 00B0+00 s=2 e=0 z=0  None .text      checkRailSurprise__8daE_YM_cFv                               */
//	80809650: 804061C0 (g_dComIfG_gameInfo)
//	80809654: 804061C0 (g_dComIfG_gameInfo)
//	80809668: 80815A00 (lit_4618)
//	8080966C: 80815A00 (lit_4618)
//	80809680: 80270E24 (cLib_distanceAngleS__Fss)
//	808096C0: 80809F9C (setActionMode__8daE_YM_cFi)
//	808096D0: 80809F9C (setActionMode__8daE_YM_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkRailSurprise() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkRailSurprise__8daE_YM_cFv.s"
}
#pragma pop


/* 808096EC-80809D6C 0680+00 s=3 e=0 z=0  None .text      checkSurpriseNear__8daE_YM_cFv                               */
//	80809704: 803621DC (_savegpr_29)
//	8080970C: 80815994 (lit_3925)
//	80809710: 80815994 (lit_3925)
//	80809714: 804061C0 (g_dComIfG_gameInfo)
//	80809718: 804061C0 (g_dComIfG_gameInfo)
//	808097A4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	808097C4: 80347138 (PSVECSquareMag)
//	80809834: 80450AE0 (__float_nan)
//	80809838: 80450AE0 (__float_nan)
//	808098A4: 80450AE0 (__float_nan)
//	808098A8: 80450AE0 (__float_nan)
//	808098C0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	808098E0: 80347138 (PSVECSquareMag)
//	80809950: 80450AE0 (__float_nan)
//	80809954: 80450AE0 (__float_nan)
//	808099C0: 80450AE0 (__float_nan)
//	808099C4: 80450AE0 (__float_nan)
//	808099D8: 8007757C (__ct__11dBgS_GndChkFv)
//	808099E4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	808099E8: 804061C0 (g_dComIfG_gameInfo)
//	808099EC: 804061C0 (g_dComIfG_gameInfo)
//	808099F8: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	80809A20: 80809F9C (setActionMode__8daE_YM_cFi)
//	80809A2C: 800775F0 (__dt__11dBgS_GndChkFv)
//	80809A40: 800775F0 (__dt__11dBgS_GndChkFv)
//	80809A54: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80809A74: 80347138 (PSVECSquareMag)
//	80809AE4: 80450AE0 (__float_nan)
//	80809AE8: 80450AE0 (__float_nan)
//	80809B54: 80450AE0 (__float_nan)
//	80809B58: 80450AE0 (__float_nan)
//	80809B78: 80809F9C (setActionMode__8daE_YM_cFi)
//	80809BB4: 80815D38 (l_HIO)
//	80809BB8: 80815D38 (l_HIO)
//	80809BD4: 80815D38 (l_HIO)
//	80809BD8: 80815D38 (l_HIO)
//	80809BE8: 80815D38 (l_HIO)
//	80809BEC: 80815D38 (l_HIO)
//	80809C08: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	80809C18: 800846F0 (GetCoHitObj__12dCcD_GObjInfFv)
//	80809C1C: 80263A48 (GetAc__8cCcD_ObjFv)
//	80809C3C: 8080963C (checkRailSurprise__8daE_YM_cFv)
//	80809C58: 80809F9C (setActionMode__8daE_YM_cFi)
//	80809C68: 80809F9C (setActionMode__8daE_YM_cFi)
//	80809CC0: 80815D38 (l_HIO)
//	80809CC4: 80815D38 (l_HIO)
//	80809D08: 8080963C (checkRailSurprise__8daE_YM_cFv)
//	80809D24: 80809F9C (setActionMode__8daE_YM_cFi)
//	80809D34: 80809F9C (setActionMode__8daE_YM_cFi)
//	80809D58: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkSurpriseNear() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkSurpriseNear__8daE_YM_cFv.s"
}
#pragma pop


/* 80809D6C-80809D84 0018+00 s=6 e=0 z=0  None .text      setNormalCc__8daE_YM_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setNormalCc() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setNormalCc__8daE_YM_cFv.s"
}
#pragma pop


/* 80809D84-80809DA8 0024+00 s=7 e=0 z=0  None .text      setAppear__8daE_YM_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setAppear() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setAppear__8daE_YM_cFv.s"
}
#pragma pop


/* 80809DA8-80809EF0 0148+00 s=8 e=0 z=0  None .text      setMoveSound__8daE_YM_cFi                                    */
//	80809DB8: 803621DC (_savegpr_29)
//	80809DC4: 80815994 (lit_3925)
//	80809DC8: 80815994 (lit_3925)
//	80809DD8: 80815AEC (stringBase0)
//	80809DDC: 80815AEC (stringBase0)
//	80809DE4: 80808184 (checkBck__8daE_YM_cFPCci)
//	80809DF4: 80815AEC (stringBase0)
//	80809DF8: 80815AEC (stringBase0)
//	80809E04: 80808184 (checkBck__8daE_YM_cFPCci)
//	80809E38: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80809E50: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80809E68: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80809EDC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daE_YM_c::setMoveSound(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setMoveSound__8daE_YM_cFi.s"
}
#pragma pop


/* 80809EF0-80809F9C 00AC+00 s=3 e=0 z=0  None .text      setTurnSound__8daE_YM_cFv                                    */
//	80809F08: 80815994 (lit_3925)
//	80809F0C: 80815994 (lit_3925)
//	80809F1C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80809F34: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80809F4C: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setTurnSound() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setTurnSound__8daE_YM_cFv.s"
}
#pragma pop


/* 80809F9C-80809FC4 0028+00 s=26 e=0 z=0  None .text      setActionMode__8daE_YM_cFi                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daE_YM_c::setActionMode(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setActionMode__8daE_YM_cFi.s"
}
#pragma pop


/* 80809FC4-8080A57C 05B8+00 s=1 e=0 z=0  None .text      executeWait__8daE_YM_cFv                                     */
//	80809FD4: 803621DC (_savegpr_29)
//	80809FDC: 80815994 (lit_3925)
//	80809FE0: 80815994 (lit_3925)
//	80809FE4: 804061C0 (g_dComIfG_gameInfo)
//	80809FE8: 804061C0 (g_dComIfG_gameInfo)
//	8080A040: 80270740 (cLib_chaseF__FPfff)
//	8080A0EC: 80814AF0 (setHideType__8daE_YM_cFv)
//	8080A13C: 80814758 (checkWall__8daE_YM_cFv)
//	8080A154: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080A1A0: 804061C0 (g_dComIfG_gameInfo)
//	8080A1A4: 804061C0 (g_dComIfG_gameInfo)
//	8080A1B0: 80035360 (isSwitch__10dSv_info_cCFii)
//	8080A1CC: 80809D6C (setNormalCc__8daE_YM_cFv)
//	8080A1EC: 8026798C (cM_rndFX__Ff)
//	8080A210: 8026798C (cM_rndFX__Ff)
//	8080A234: 80809D6C (setNormalCc__8daE_YM_cFv)
//	8080A244: 8026798C (cM_rndFX__Ff)
//	8080A268: 808096EC (checkSurpriseNear__8daE_YM_cFv)
//	8080A278: 80809000 (checkWolfBark__8daE_YM_cFv)
//	8080A288: 80808E34 (checkWallCrash__8daE_YM_cFv)
//	8080A2A8: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080A2B4: 80812FCC (checkFrinedSamePos__8daE_YM_cFv)
//	8080A304: 80815D5C (m_near_obj)
//	8080A308: 80815D5C (m_near_obj)
//	8080A310: 80815D60 (m_obj_dist)
//	8080A314: 80815D60 (m_obj_dist)
//	8080A318: 80808698 (s_obj_sub__FPvPv)
//	8080A31C: 80808698 (s_obj_sub__FPvPv)
//	8080A324: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	8080A328: 80815D5C (m_near_obj)
//	8080A32C: 80815D5C (m_near_obj)
//	8080A340: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080A374: 8081593C (getLeftHandPos__9daPy_py_cCFv)
//	8080A384: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080A3A4: 80347138 (PSVECSquareMag)
//	8080A414: 80450AE0 (__float_nan)
//	8080A418: 80450AE0 (__float_nan)
//	8080A484: 80450AE0 (__float_nan)
//	8080A488: 80450AE0 (__float_nan)
//	8080A4D4: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080A500: 804061C0 (g_dComIfG_gameInfo)
//	8080A504: 804061C0 (g_dComIfG_gameInfo)
//	8080A514: 80035360 (isSwitch__10dSv_info_cCFii)
//	8080A548: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080A558: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080A568: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeWait() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeWait__8daE_YM_cFv.s"
}
#pragma pop


/* 8080A57C-8080ACB4 0738+00 s=1 e=0 z=0  None .text      executeMove__8daE_YM_cFv                                     */
//	8080A594: 803621DC (_savegpr_29)
//	8080A59C: 80815994 (lit_3925)
//	8080A5A0: 80815994 (lit_3925)
//	8080A5C0: 808096EC (checkSurpriseNear__8daE_YM_cFv)
//	8080A5D0: 80809000 (checkWolfBark__8daE_YM_cFv)
//	8080A5E0: 80808E34 (checkWallCrash__8daE_YM_cFv)
//	8080A5F0: 8080DB58 (setAttackMotion__8daE_YM_cFv)
//	8080A614: 80270740 (cLib_chaseF__FPfff)
//	8080A658: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080A660: 80814758 (checkWall__8daE_YM_cFv)
//	8080A678: 80439A20 (sincosTable___5JMath)
//	8080A67C: 80439A20 (sincosTable___5JMath)
//	8080A698: 80077114 (SetGroundUpY__9dBgS_AcchFf)
//	8080A6A0: 8026798C (cM_rndFX__Ff)
//	8080A6BC: 80270E24 (cLib_distanceAngleS__Fss)
//	8080A6E4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080A70C: 80347138 (PSVECSquareMag)
//	8080A77C: 80450AE0 (__float_nan)
//	8080A780: 80450AE0 (__float_nan)
//	8080A7EC: 80450AE0 (__float_nan)
//	8080A7F0: 80450AE0 (__float_nan)
//	8080A808: 803DD470 (now__14mDoMtx_stack_c)
//	8080A80C: 803DD470 (now__14mDoMtx_stack_c)
//	8080A81C: 8000C474 (mDoMtx_ZrotS__FPA4_fs)
//	8080A820: 803DD470 (now__14mDoMtx_stack_c)
//	8080A824: 803DD470 (now__14mDoMtx_stack_c)
//	8080A834: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8080A838: 803DD470 (now__14mDoMtx_stack_c)
//	8080A83C: 803DD470 (now__14mDoMtx_stack_c)
//	8080A848: 80346D6C (PSMTXMultVec)
//	8080A870: 80267674 (cM_atan2s__Fff)
//	8080A890: 80809EF0 (setTurnSound__8daE_YM_cFv)
//	8080A8C0: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080A8F0: 80813EA4 (checkBeforeBg__8daE_YM_cFs)
//	8080A904: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080A920: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080A928: 80267954 (cM_rndF__Ff)
//	8080A994: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8080A9B4: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080A9EC: 80267954 (cM_rndF__Ff)
//	8080AA14: 80809DA8 (setMoveSound__8daE_YM_cFi)
//	8080AA28: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080AA54: 80347138 (PSVECSquareMag)
//	8080AAC4: 80450AE0 (__float_nan)
//	8080AAC8: 80450AE0 (__float_nan)
//	8080AB34: 80450AE0 (__float_nan)
//	8080AB38: 80450AE0 (__float_nan)
//	8080AB54: 80347138 (PSVECSquareMag)
//	8080ABC4: 80450AE0 (__float_nan)
//	8080ABC8: 80450AE0 (__float_nan)
//	8080AC34: 80450AE0 (__float_nan)
//	8080AC38: 80450AE0 (__float_nan)
//	8080AC68: 80813EA4 (checkBeforeBg__8daE_YM_cFs)
//	8080AC84: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080ACA0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeMove() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeMove__8daE_YM_cFv.s"
}
#pragma pop


/* 8080ACB4-8080B444 0790+00 s=1 e=0 z=0  None .text      executeEscape__8daE_YM_cFv                                   */
//	8080ACC4: 803621DC (_savegpr_29)
//	8080ACCC: 80815994 (lit_3925)
//	8080ACD0: 80815994 (lit_3925)
//	8080ACE0: 80270740 (cLib_chaseF__FPfff)
//	8080AD10: 804061C0 (g_dComIfG_gameInfo)
//	8080AD14: 804061C0 (g_dComIfG_gameInfo)
//	8080AD70: 80809D84 (setAppear__8daE_YM_cFv)
//	8080AE00: 8026798C (cM_rndFX__Ff)
//	8080AE60: 80267954 (cM_rndF__Ff)
//	8080AE88: 80267954 (cM_rndF__Ff)
//	8080AEC4: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080AF30: 80808884 (setElecEffect1__8daE_YM_cFv)
//	8080AFAC: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080AFFC: 80808884 (setElecEffect1__8daE_YM_cFv)
//	8080B090: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080B09C: 80808884 (setElecEffect1__8daE_YM_cFv)
//	8080B0F8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8080B154: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080B1A8: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080B1C0: 808089DC (setElecEffect2__8daE_YM_cFv)
//	8080B1F0: 80815D38 (l_HIO)
//	8080B1F4: 80815D38 (l_HIO)
//	8080B224: 80270740 (cLib_chaseF__FPfff)
//	8080B230: 80809DA8 (setMoveSound__8daE_YM_cFi)
//	8080B2A4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8080B2B4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080B2E4: 80347138 (PSVECSquareMag)
//	8080B354: 80450AE0 (__float_nan)
//	8080B358: 80450AE0 (__float_nan)
//	8080B3C4: 80450AE0 (__float_nan)
//	8080B3C8: 80450AE0 (__float_nan)
//	8080B404: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080B40C: 80809D6C (setNormalCc__8daE_YM_cFv)
//	8080B430: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeEscape() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeEscape__8daE_YM_cFv.s"
}
#pragma pop


/* 8080B444-8080BB34 06F0+00 s=2 e=0 z=0  None .text      executeDown__8daE_YM_cFv                                     */
//	8080B45C: 803621D8 (_savegpr_28)
//	8080B464: 80815994 (lit_3925)
//	8080B468: 80815994 (lit_3925)
//	8080B4B0: 80077678 (__ct__18dBgS_ObjGndChk_WtrFv)
//	8080B4BC: 80267D0C (SetPos__11cBgS_GndChkFPC3Vec)
//	8080B4C0: 804061C0 (g_dComIfG_gameInfo)
//	8080B4C4: 804061C0 (g_dComIfG_gameInfo)
//	8080B4D4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8080B544: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080B560: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080B580: 80267954 (cM_rndF__Ff)
//	8080B594: 80267954 (cM_rndF__Ff)
//	8080B5D4: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	8080B5E4: 804061C0 (g_dComIfG_gameInfo)
//	8080B5E8: 804061C0 (g_dComIfG_gameInfo)
//	8080B614: 80439A20 (sincosTable___5JMath)
//	8080B618: 80439A20 (sincosTable___5JMath)
//	8080B658: 80347090 (PSVECAdd)
//	8080B660: 80077C68 (__ct__11dBgS_LinChkFv)
//	8080B674: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8080B680: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	8080B68C: 80815D04 (__vt__8cM3dGPla)
//	8080B690: 80815D04 (__vt__8cM3dGPla)
//	8080B6A4: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	8080B6B4: 80266B84 (__ml__4cXyzCFf)
//	8080B6C4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8080B6E8: 80815D04 (__vt__8cM3dGPla)
//	8080B6EC: 80815D04 (__vt__8cM3dGPla)
//	8080B6FC: 80077CDC (__dt__11dBgS_LinChkFv)
//	8080B704: 80809D84 (setAppear__8daE_YM_cFv)
//	8080B710: 80815AEC (stringBase0)
//	8080B714: 80815AEC (stringBase0)
//	8080B720: 80368994 (strcmp)
//	8080B72C: 804061C0 (g_dComIfG_gameInfo)
//	8080B730: 804061C0 (g_dComIfG_gameInfo)
//	8080B744: 8002C97C (getLayerNo__14dComIfG_play_cFi)
//	8080B75C: 804061C0 (g_dComIfG_gameInfo)
//	8080B760: 804061C0 (g_dComIfG_gameInfo)
//	8080B76C: 80035360 (isSwitch__10dSv_info_cCFii)
//	8080B778: 804061C0 (g_dComIfG_gameInfo)
//	8080B77C: 804061C0 (g_dComIfG_gameInfo)
//	8080B78C: 80035200 (onSwitch__10dSv_info_cFii)
//	8080B7B4: 80077114 (SetGroundUpY__9dBgS_AcchFf)
//	8080B7CC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8080B7E8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8080B818: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080B860: 80267954 (cM_rndF__Ff)
//	8080B944: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080B9A4: 8007757C (__ct__11dBgS_GndChkFv)
//	8080B9B0: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8080B9BC: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8080B9F4: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	8080BA08: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	8080BA1C: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	8080BA3C: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080BA68: 800775F0 (__dt__11dBgS_GndChkFv)
//	8080BAAC: 804061C0 (g_dComIfG_gameInfo)
//	8080BAB0: 804061C0 (g_dComIfG_gameInfo)
//	8080BABC: 80035360 (isSwitch__10dSv_info_cCFii)
//	8080BAC8: 804061C0 (g_dComIfG_gameInfo)
//	8080BACC: 804061C0 (g_dComIfG_gameInfo)
//	8080BADC: 80035200 (onSwitch__10dSv_info_cFii)
//	8080BAE4: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	8080BAFC: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	8080BB10: 80077710 (__dt__18dBgS_ObjGndChk_WtrFv)
//	8080BB20: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeDown() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeDown__8daE_YM_cFv.s"
}
#pragma pop


/* 8080BB34-8080BB7C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	8080BB4C: 80815D04 (__vt__8cM3dGPla)
//	8080BB50: 80815D04 (__vt__8cM3dGPla)
//	8080BB60: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 8080BB7C-8080BCFC 0180+00 s=1 e=0 z=0  None .text      damage_check__8daE_YM_cFv                                    */
//	8080BBB8: 80083830 (Move__10dCcD_GSttsFv)
//	8080BBC0: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	8080BBD0: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	8080BBFC: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	8080BC5C: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080BCAC: 804061C0 (g_dComIfG_gameInfo)
//	8080BCB0: 804061C0 (g_dComIfG_gameInfo)
//	8080BCD0: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	8080BCDC: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080BCE4: 8080B444 (executeDown__8daE_YM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::damage_check() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/damage_check__8daE_YM_cFv.s"
}
#pragma pop


/* 8080BCFC-8080C05C 0360+00 s=1 e=0 z=0  None .text      executeWind__8daE_YM_cFv                                     */
//	8080BD14: 80815994 (lit_3925)
//	8080BD18: 80815994 (lit_3925)
//	8080BD28: 80270740 (cLib_chaseF__FPfff)
//	8080BD60: 80809D84 (setAppear__8daE_YM_cFv)
//	8080BD68: 80809D6C (setNormalCc__8daE_YM_cFv)
//	8080BD70: 8026798C (cM_rndFX__Ff)
//	8080BDBC: 80077114 (SetGroundUpY__9dBgS_AcchFf)
//	8080BDCC: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080BDE8: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080BE44: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080BE64: 80267954 (cM_rndF__Ff)
//	8080BEA8: 80267954 (cM_rndF__Ff)
//	8080BEC8: 80267954 (cM_rndF__Ff)
//	8080BF14: 80267954 (cM_rndF__Ff)
//	8080BF54: 80267954 (cM_rndF__Ff)
//	8080BF74: 80267954 (cM_rndF__Ff)
//	8080BFBC: 80267954 (cM_rndF__Ff)
//	8080BFE4: 80077114 (SetGroundUpY__9dBgS_AcchFf)
//	8080C004: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080C030: 80809F9C (setActionMode__8daE_YM_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeWind() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeWind__8daE_YM_cFv.s"
}
#pragma pop


/* 8080C05C-8080C1FC 01A0+00 s=1 e=0 z=0  None .text      getSurpriseType__8daE_YM_cFv                                 */
//	8080C074: 80815994 (lit_3925)
//	8080C078: 80815994 (lit_3925)
//	8080C088: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080C0A8: 80347138 (PSVECSquareMag)
//	8080C118: 80450AE0 (__float_nan)
//	8080C11C: 80450AE0 (__float_nan)
//	8080C188: 80450AE0 (__float_nan)
//	8080C18C: 80450AE0 (__float_nan)
//	8080C190: 80815D38 (l_HIO)
//	8080C194: 80815D38 (l_HIO)
//	8080C1B4: 80270E24 (cLib_distanceAngleS__Fss)
//	8080C1CC: 80267954 (cM_rndF__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::getSurpriseType() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/getSurpriseType__8daE_YM_cFv.s"
}
#pragma pop


/* 8080C1FC-8080C24C 0050+00 s=2 e=0 z=0  None .text      setSurpriseAway__8daE_YM_cFv                                 */
//	8080C220: 808159CC (lit_3949)
//	8080C224: 808159CC (lit_3949)
//	8080C22C: 80815A64 (lit_5774)
//	8080C230: 80815A64 (lit_5774)
//	8080C238: 808081E0 (bckSet__8daE_YM_cFiUcff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setSurpriseAway() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setSurpriseAway__8daE_YM_cFv.s"
}
#pragma pop


/* 8080C24C-8080C374 0128+00 s=1 e=0 z=0  None .text      setGoHomeType__8daE_YM_cFv                                   */
//	8080C25C: 803621DC (_savegpr_29)
//	8080C264: 80815994 (lit_3925)
//	8080C268: 80815994 (lit_3925)
//	8080C274: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080C27C: 8026786C (cM_rnd__Fv)
//	8080C2C4: 8026798C (cM_rndFX__Ff)
//	8080C344: 80815D38 (l_HIO)
//	8080C348: 80815D38 (l_HIO)
//	8080C358: 8080C1FC (setSurpriseAway__8daE_YM_cFv)
//	8080C360: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setGoHomeType() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setGoHomeType__8daE_YM_cFv.s"
}
#pragma pop


/* 8080C374-8080CEE0 0B6C+00 s=2 e=0 z=0  None .text      executeSurprise__8daE_YM_cFv                                 */
//	8080C38C: 803621D4 (_savegpr_27)
//	8080C394: 80815994 (lit_3925)
//	8080C398: 80815994 (lit_3925)
//	8080C39C: 804061C0 (g_dComIfG_gameInfo)
//	8080C3A0: 804061C0 (g_dComIfG_gameInfo)
//	8080C3C0: 80270740 (cLib_chaseF__FPfff)
//	8080C3D0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080C424: 80270740 (cLib_chaseF__FPfff)
//	8080C434: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080C448: 80815B84 (lit_6063)
//	8080C44C: 80815B84 (lit_6063)
//	8080C490: 8080C05C (getSurpriseType__8daE_YM_cFv)
//	8080C4AC: 8080C24C (setGoHomeType__8daE_YM_cFv)
//	8080C4D8: 80270E24 (cLib_distanceAngleS__Fss)
//	8080C560: 8080C1FC (setSurpriseAway__8daE_YM_cFv)
//	8080C584: 8080C24C (setGoHomeType__8daE_YM_cFv)
//	8080C594: 80809DA8 (setMoveSound__8daE_YM_cFi)
//	8080C610: 8034739C (PSVECSquareDistance)
//	8080C680: 80450AE0 (__float_nan)
//	8080C684: 80450AE0 (__float_nan)
//	8080C6F0: 80450AE0 (__float_nan)
//	8080C6F4: 80450AE0 (__float_nan)
//	8080C70C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080C724: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080C748: 803650D0 (abs)
//	8080C75C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080C794: 80347138 (PSVECSquareMag)
//	8080C804: 80450AE0 (__float_nan)
//	8080C808: 80450AE0 (__float_nan)
//	8080C874: 80450AE0 (__float_nan)
//	8080C878: 80450AE0 (__float_nan)
//	8080C880: 80815D38 (l_HIO)
//	8080C884: 80815D38 (l_HIO)
//	8080C8B8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8080C8D8: 8026786C (cM_rnd__Fv)
//	8080C8FC: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080C918: 8034739C (PSVECSquareDistance)
//	8080C988: 80450AE0 (__float_nan)
//	8080C98C: 80450AE0 (__float_nan)
//	8080C9F8: 80450AE0 (__float_nan)
//	8080C9FC: 80450AE0 (__float_nan)
//	8080CA04: 80815D38 (l_HIO)
//	8080CA08: 80815D38 (l_HIO)
//	8080CA28: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080CA54: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080CA64: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080CA80: 8080C05C (getSurpriseType__8daE_YM_cFv)
//	8080CAAC: 8026798C (cM_rndFX__Ff)
//	8080CAF4: 8026798C (cM_rndFX__Ff)
//	8080CB3C: 8026798C (cM_rndFX__Ff)
//	8080CB4C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080CBA8: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080CBF4: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080CCA4: 80347138 (PSVECSquareMag)
//	8080CD14: 80450AE0 (__float_nan)
//	8080CD18: 80450AE0 (__float_nan)
//	8080CD84: 80450AE0 (__float_nan)
//	8080CD88: 80450AE0 (__float_nan)
//	8080CE48: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080CEA4: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080CECC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeSurprise() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeSurprise__8daE_YM_cFv.s"
}
#pragma pop


/* 8080CEE0-8080CFC8 00E8+00 s=1 e=0 z=0  None .text      executeBack__8daE_YM_cFv                                     */
//	8080CEF8: 80815994 (lit_3925)
//	8080CEFC: 80815994 (lit_3925)
//	8080CF18: 80270740 (cLib_chaseF__FPfff)
//	8080CF54: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080CF78: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080CF8C: 80809DA8 (setMoveSound__8daE_YM_cFi)
//	8080CFAC: 80809F9C (setActionMode__8daE_YM_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeBack() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeBack__8daE_YM_cFv.s"
}
#pragma pop


/* 8080CFC8-8080D2C8 0300+00 s=1 e=0 z=0  None .text      executeFall__8daE_YM_cFv                                     */
//	8080CFE0: 80815994 (lit_3925)
//	8080CFE4: 80815994 (lit_3925)
//	8080CFF4: 80270740 (cLib_chaseF__FPfff)
//	8080D084: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080D0D8: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	8080D0E4: 80077114 (SetGroundUpY__9dBgS_AcchFf)
//	8080D110: 80270E24 (cLib_distanceAngleS__Fss)
//	8080D130: 80270E24 (cLib_distanceAngleS__Fss)
//	8080D16C: 80808884 (setElecEffect1__8daE_YM_cFv)
//	8080D1B4: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080D1C4: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080D1CC: 808089DC (setElecEffect2__8daE_YM_cFv)
//	8080D1FC: 80815D38 (l_HIO)
//	8080D200: 80815D38 (l_HIO)
//	8080D26C: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080D284: 808081E0 (bckSet__8daE_YM_cFiUcff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeFall() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeFall__8daE_YM_cFv.s"
}
#pragma pop


/* 8080D2C8-8080D990 06C8+00 s=1 e=0 z=0  None .text      executeAttack__8daE_YM_cFv                                   */
//	8080D2D8: 803621D8 (_savegpr_28)
//	8080D2E0: 80815994 (lit_3925)
//	8080D2E4: 80815994 (lit_3925)
//	8080D2E8: 804061C0 (g_dComIfG_gameInfo)
//	8080D2EC: 804061C0 (g_dComIfG_gameInfo)
//	8080D300: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080D334: 80270740 (cLib_chaseF__FPfff)
//	8080D33C: 80347138 (PSVECSquareMag)
//	8080D3AC: 80450AE0 (__float_nan)
//	8080D3B0: 80450AE0 (__float_nan)
//	8080D41C: 80450AE0 (__float_nan)
//	8080D420: 80450AE0 (__float_nan)
//	8080D428: 80815D38 (l_HIO)
//	8080D42C: 80815D38 (l_HIO)
//	8080D4A0: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080D4D8: 804061C0 (g_dComIfG_gameInfo)
//	8080D4DC: 804061C0 (g_dComIfG_gameInfo)
//	8080D4E8: 800737E4 (LockonTruth__12dAttention_cFv)
//	8080D4FC: 8007353C (LockonTarget__12dAttention_cFl)
//	8080D50C: 808096EC (checkSurpriseNear__8daE_YM_cFv)
//	8080D51C: 80809EF0 (setTurnSound__8daE_YM_cFv)
//	8080D528: 80270E24 (cLib_distanceAngleS__Fss)
//	8080D538: 80815AEC (stringBase0)
//	8080D53C: 80815AEC (stringBase0)
//	8080D548: 80808184 (checkBck__8daE_YM_cFPCci)
//	8080D568: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080D580: 80815AEC (stringBase0)
//	8080D584: 80815AEC (stringBase0)
//	8080D590: 80808184 (checkBck__8daE_YM_cFPCci)
//	8080D5B0: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080D5C0: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080D5E8: 80347138 (PSVECSquareMag)
//	8080D658: 80450AE0 (__float_nan)
//	8080D65C: 80450AE0 (__float_nan)
//	8080D6C8: 80450AE0 (__float_nan)
//	8080D6CC: 80450AE0 (__float_nan)
//	8080D6F8: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080D70C: 80808884 (setElecEffect1__8daE_YM_cFv)
//	8080D780: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080D794: 808089DC (setElecEffect2__8daE_YM_cFv)
//	8080D808: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080D868: 808089DC (setElecEffect2__8daE_YM_cFv)
//	8080D898: 80815D38 (l_HIO)
//	8080D89C: 80815D38 (l_HIO)
//	8080D90C: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080D95C: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080D97C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeAttack() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeAttack__8daE_YM_cFv.s"
}
#pragma pop


/* 8080D990-8080DB58 01C8+00 s=1 e=0 z=0  None .text      checkAttackEnd__8daE_YM_cFv                                  */
//	8080D9A8: 80815994 (lit_3925)
//	8080D9AC: 80815994 (lit_3925)
//	8080D9B0: 804061C0 (g_dComIfG_gameInfo)
//	8080D9B4: 804061C0 (g_dComIfG_gameInfo)
//	8080D9DC: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080D9FC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080DA1C: 80347138 (PSVECSquareMag)
//	8080DA8C: 80450AE0 (__float_nan)
//	8080DA90: 80450AE0 (__float_nan)
//	8080DAFC: 80450AE0 (__float_nan)
//	8080DB00: 80450AE0 (__float_nan)
//	8080DB08: 80815D38 (l_HIO)
//	8080DB0C: 80815D38 (l_HIO)
//	8080DB28: 80809F9C (setActionMode__8daE_YM_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkAttackEnd() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkAttackEnd__8daE_YM_cFv.s"
}
#pragma pop


/* 8080DB58-8080DC5C 0104+00 s=2 e=0 z=0  None .text      setAttackMotion__8daE_YM_cFv                                 */
//	8080DB70: 80815994 (lit_3925)
//	8080DB74: 80815994 (lit_3925)
//	8080DB90: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	8080DBA0: 80084358 (GetAtHitObj__12dCcD_GObjInfFv)
//	8080DBA4: 80263A48 (GetAc__8cCcD_ObjFv)
//	8080DBC8: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080DC08: 808081E0 (bckSet__8daE_YM_cFiUcff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setAttackMotion() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setAttackMotion__8daE_YM_cFv.s"
}
#pragma pop


/* 8080DC5C-8080E26C 0610+00 s=1 e=0 z=0  None .text      executeAttackWall__8daE_YM_cFv                               */
//	8080DC6C: 803621DC (_savegpr_29)
//	8080DC74: 80815994 (lit_3925)
//	8080DC78: 80815994 (lit_3925)
//	8080DC84: 804061C0 (g_dComIfG_gameInfo)
//	8080DC88: 804061C0 (g_dComIfG_gameInfo)
//	8080DC90: 80809000 (checkWolfBark__8daE_YM_cFv)
//	8080DCA0: 80808E34 (checkWallCrash__8daE_YM_cFv)
//	8080DCB0: 8080DB58 (setAttackMotion__8daE_YM_cFv)
//	8080DCF0: 80814758 (checkWall__8daE_YM_cFv)
//	8080DD30: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080DD5C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080DD78: 803DD470 (now__14mDoMtx_stack_c)
//	8080DD7C: 803DD470 (now__14mDoMtx_stack_c)
//	8080DD8C: 8000C474 (mDoMtx_ZrotS__FPA4_fs)
//	8080DD90: 803DD470 (now__14mDoMtx_stack_c)
//	8080DD94: 803DD470 (now__14mDoMtx_stack_c)
//	8080DDA4: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8080DDA8: 803DD470 (now__14mDoMtx_stack_c)
//	8080DDAC: 803DD470 (now__14mDoMtx_stack_c)
//	8080DDB8: 80346D6C (PSMTXMultVec)
//	8080DDC4: 80267674 (cM_atan2s__Fff)
//	8080DDD4: 80813EA4 (checkBeforeBg__8daE_YM_cFs)
//	8080DDE8: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080DE0C: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080DE28: 8080D990 (checkAttackEnd__8daE_YM_cFv)
//	8080DE38: 80809EF0 (setTurnSound__8daE_YM_cFv)
//	8080DE48: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080DE68: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080DE7C: 8080D990 (checkAttackEnd__8daE_YM_cFv)
//	8080DED4: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080DEE8: 80267954 (cM_rndF__Ff)
//	8080DF3C: 80809DA8 (setMoveSound__8daE_YM_cFi)
//	8080DF58: 80813EA4 (checkBeforeBg__8daE_YM_cFs)
//	8080DF78: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080DFA4: 80347138 (PSVECSquareMag)
//	8080E014: 80450AE0 (__float_nan)
//	8080E018: 80450AE0 (__float_nan)
//	8080E084: 80450AE0 (__float_nan)
//	8080E088: 80450AE0 (__float_nan)
//	8080E090: 80815D38 (l_HIO)
//	8080E094: 80815D38 (l_HIO)
//	8080E0B4: 80347138 (PSVECSquareMag)
//	8080E124: 80450AE0 (__float_nan)
//	8080E128: 80450AE0 (__float_nan)
//	8080E194: 80450AE0 (__float_nan)
//	8080E198: 80450AE0 (__float_nan)
//	8080E1D8: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080E244: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080E258: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeAttackWall() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeAttackWall__8daE_YM_cFv.s"
}
#pragma pop


/* 8080E26C-8080E49C 0230+00 s=1 e=0 z=0  None .text      executeDefense__8daE_YM_cFv                                  */
//	8080E284: 80815994 (lit_3925)
//	8080E288: 80815994 (lit_3925)
//	8080E300: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080E370: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8080E398: 80270740 (cLib_chaseF__FPfff)
//	8080E418: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	8080E42C: 80270740 (cLib_chaseF__FPfff)
//	8080E440: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080E480: 80809F9C (setActionMode__8daE_YM_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeDefense() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeDefense__8daE_YM_cFv.s"
}
#pragma pop


/* 8080E49C-8080E630 0194+00 s=1 e=0 z=0  None .text      checkFlyTerritory__8daE_YM_cFv                               */
//	8080E4B4: 80815994 (lit_3925)
//	8080E4B8: 80815994 (lit_3925)
//	8080E4F0: 8034739C (PSVECSquareDistance)
//	8080E560: 80450AE0 (__float_nan)
//	8080E564: 80450AE0 (__float_nan)
//	8080E5D0: 80450AE0 (__float_nan)
//	8080E5D4: 80450AE0 (__float_nan)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkFlyTerritory() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkFlyTerritory__8daE_YM_cFv.s"
}
#pragma pop


/* 8080E630-8080E6A0 0070+00 s=1 e=0 z=0  None .text      initFly__8daE_YM_cFv                                         */
//	8080E638: 80815998 (lit_3926)
//	8080E63C: 80815998 (lit_3926)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::initFly() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/initFly__8daE_YM_cFv.s"
}
#pragma pop


/* 8080E6A0-8080F8C8 1228+00 s=2 e=0 z=0  None .text      executeFly__8daE_YM_cFv                                      */
//	8080E6B0: 803621D8 (_savegpr_28)
//	8080E6B8: 80815994 (lit_3925)
//	8080E6BC: 80815994 (lit_3925)
//	8080E6C0: 804061C0 (g_dComIfG_gameInfo)
//	8080E6C4: 804061C0 (g_dComIfG_gameInfo)
//	8080E6F0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080E718: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080E740: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080E794: 80815BA4 (lit_7049)
//	8080E798: 80815BA4 (lit_7049)
//	8080E7C8: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080E7EC: 80808884 (setElecEffect1__8daE_YM_cFv)
//	8080E7FC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8080E81C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8080E848: 8080E630 (initFly__8daE_YM_cFv)
//	8080E874: 8080E630 (initFly__8daE_YM_cFv)
//	8080E880: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080E8A8: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080E8B0: 8080E630 (initFly__8daE_YM_cFv)
//	8080E8D0: 80077114 (SetGroundUpY__9dBgS_AcchFf)
//	8080E8EC: 8026786C (cM_rnd__Fv)
//	8080E938: 80347138 (PSVECSquareMag)
//	8080E9A8: 80450AE0 (__float_nan)
//	8080E9AC: 80450AE0 (__float_nan)
//	8080EA18: 80450AE0 (__float_nan)
//	8080EA1C: 80450AE0 (__float_nan)
//	8080EA34: 8080E49C (checkFlyTerritory__8daE_YM_cFv)
//	8080EA44: 8026798C (cM_rndFX__Ff)
//	8080EA58: 8026798C (cM_rndFX__Ff)
//	8080EA70: 8080E49C (checkFlyTerritory__8daE_YM_cFv)
//	8080EA84: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080EAA0: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080EAB0: 80439A20 (sincosTable___5JMath)
//	8080EAB4: 80439A20 (sincosTable___5JMath)
//	8080EAE4: 80267954 (cM_rndF__Ff)
//	8080EB18: 80267954 (cM_rndF__Ff)
//	8080EB30: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080EB40: 80270C74 (cLib_targetAngleX__FPC4cXyzPC4cXyz)
//	8080EB48: 80439A20 (sincosTable___5JMath)
//	8080EB4C: 80439A20 (sincosTable___5JMath)
//	8080EB60: 80815D38 (l_HIO)
//	8080EB64: 80815D38 (l_HIO)
//	8080EBC4: 80347138 (PSVECSquareMag)
//	8080EC34: 80450AE0 (__float_nan)
//	8080EC38: 80450AE0 (__float_nan)
//	8080ECA4: 80450AE0 (__float_nan)
//	8080ECA8: 80450AE0 (__float_nan)
//	8080ECD8: 8080E49C (checkFlyTerritory__8daE_YM_cFv)
//	8080ECE8: 8026798C (cM_rndFX__Ff)
//	8080ED0C: 80267954 (cM_rndF__Ff)
//	8080ED24: 80267954 (cM_rndF__Ff)
//	8080ED38: 8026798C (cM_rndFX__Ff)
//	8080ED50: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080ED60: 80270C74 (cLib_targetAngleX__FPC4cXyzPC4cXyz)
//	8080ED70: 8080E49C (checkFlyTerritory__8daE_YM_cFv)
//	8080ED84: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080ED98: 80267954 (cM_rndF__Ff)
//	8080EDB8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080EDC8: 80270C74 (cLib_targetAngleX__FPC4cXyzPC4cXyz)
//	8080EDD8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080EE08: 80439A20 (sincosTable___5JMath)
//	8080EE0C: 80439A20 (sincosTable___5JMath)
//	8080EE14: 80815D38 (l_HIO)
//	8080EE18: 80815D38 (l_HIO)
//	8080EE38: 80439A20 (sincosTable___5JMath)
//	8080EE3C: 80439A20 (sincosTable___5JMath)
//	8080EE5C: 80815D38 (l_HIO)
//	8080EE60: 80815D38 (l_HIO)
//	8080EE70: 80270740 (cLib_chaseF__FPfff)
//	8080EEA8: 80815AEC (stringBase0)
//	8080EEAC: 80815AEC (stringBase0)
//	8080EEB4: 80808184 (checkBck__8daE_YM_cFPCci)
//	8080EED4: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080EEE0: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080EEF0: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080EF24: 80439A20 (sincosTable___5JMath)
//	8080EF28: 80439A20 (sincosTable___5JMath)
//	8080EF48: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080EF54: 80439A20 (sincosTable___5JMath)
//	8080EF58: 80439A20 (sincosTable___5JMath)
//	8080EFA4: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080EFC8: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080F054: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080F090: 80815AEC (stringBase0)
//	8080F094: 80815AEC (stringBase0)
//	8080F09C: 80808184 (checkBck__8daE_YM_cFPCci)
//	8080F0BC: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080F0CC: 80270740 (cLib_chaseF__FPfff)
//	8080F0DC: 80270740 (cLib_chaseF__FPfff)
//	8080F100: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8080F148: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080F158: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080F168: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080F178: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080F188: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080F198: 80270740 (cLib_chaseF__FPfff)
//	8080F1A8: 80270740 (cLib_chaseF__FPfff)
//	8080F1D4: 80347138 (PSVECSquareMag)
//	8080F244: 80450AE0 (__float_nan)
//	8080F248: 80450AE0 (__float_nan)
//	8080F2B4: 80450AE0 (__float_nan)
//	8080F2B8: 80450AE0 (__float_nan)
//	8080F2F4: 80347138 (PSVECSquareMag)
//	8080F364: 80450AE0 (__float_nan)
//	8080F368: 80450AE0 (__float_nan)
//	8080F3D4: 80450AE0 (__float_nan)
//	8080F3D8: 80450AE0 (__float_nan)
//	8080F428: 80347138 (PSVECSquareMag)
//	8080F498: 80450AE0 (__float_nan)
//	8080F49C: 80450AE0 (__float_nan)
//	8080F508: 80450AE0 (__float_nan)
//	8080F50C: 80450AE0 (__float_nan)
//	8080F538: 80347138 (PSVECSquareMag)
//	8080F5A8: 80450AE0 (__float_nan)
//	8080F5AC: 80450AE0 (__float_nan)
//	8080F618: 80450AE0 (__float_nan)
//	8080F61C: 80450AE0 (__float_nan)
//	8080F624: 80815D38 (l_HIO)
//	8080F628: 80815D38 (l_HIO)
//	8080F664: 80809F9C (setActionMode__8daE_YM_cFi)
//	8080F67C: 808089DC (setElecEffect2__8daE_YM_cFv)
//	8080F6AC: 80815D38 (l_HIO)
//	8080F6B0: 80815D38 (l_HIO)
//	8080F714: 80815AEC (stringBase0)
//	8080F718: 80815AEC (stringBase0)
//	8080F720: 80808184 (checkBck__8daE_YM_cFPCci)
//	8080F740: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080F790: 80270740 (cLib_chaseF__FPfff)
//	8080F7B0: 80270740 (cLib_chaseF__FPfff)
//	8080F7C0: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080F7D0: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080F7F8: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080F804: 80270C74 (cLib_targetAngleX__FPC4cXyzPC4cXyz)
//	8080F814: 80439A20 (sincosTable___5JMath)
//	8080F818: 80439A20 (sincosTable___5JMath)
//	8080F820: 80815D38 (l_HIO)
//	8080F824: 80815D38 (l_HIO)
//	8080F854: 80270740 (cLib_chaseF__FPfff)
//	8080F864: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080F890: 80439A20 (sincosTable___5JMath)
//	8080F894: 80439A20 (sincosTable___5JMath)
//	8080F8B4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeFly() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeFly__8daE_YM_cFv.s"
}
#pragma pop


/* 8080F8C8-8080F92C 0064+00 s=1 e=0 z=0  None .text      setInclination__8daE_YM_cFv                                  */
//	8080F8E4: 80267674 (cM_atan2s__Fff)
//	8080F914: 80270B90 (cLib_chaseAngleS__FPsss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setInclination() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setInclination__8daE_YM_cFv.s"
}
#pragma pop


/* 8080F92C-80810084 0758+00 s=1 e=0 z=0  None .text      executeFlyAttack__8daE_YM_cFv                                */
//	8080F93C: 803621D4 (_savegpr_27)
//	8080F944: 80815994 (lit_3925)
//	8080F948: 80815994 (lit_3925)
//	8080F9C8: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080F9D4: 804061C0 (g_dComIfG_gameInfo)
//	8080F9D8: 804061C0 (g_dComIfG_gameInfo)
//	8080FA10: 80808884 (setElecEffect1__8daE_YM_cFv)
//	8080FA4C: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080FA5C: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080FAA4: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080FAC0: 808089DC (setElecEffect2__8daE_YM_cFv)
//	8080FB1C: 80815D38 (l_HIO)
//	8080FB20: 80815D38 (l_HIO)
//	8080FB50: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8080FB74: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080FB84: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080FBAC: 80347138 (PSVECSquareMag)
//	8080FC1C: 80450AE0 (__float_nan)
//	8080FC20: 80450AE0 (__float_nan)
//	8080FC8C: 80450AE0 (__float_nan)
//	8080FC90: 80450AE0 (__float_nan)
//	8080FC98: 80267674 (cM_atan2s__Fff)
//	8080FCA4: 80815D38 (l_HIO)
//	8080FCA8: 80815D38 (l_HIO)
//	8080FCB0: 80439A20 (sincosTable___5JMath)
//	8080FCB4: 80439A20 (sincosTable___5JMath)
//	8080FCCC: 80270740 (cLib_chaseF__FPfff)
//	8080FCD8: 80439A20 (sincosTable___5JMath)
//	8080FCDC: 80439A20 (sincosTable___5JMath)
//	8080FCEC: 80270740 (cLib_chaseF__FPfff)
//	8080FCF4: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	8080FD04: 80084358 (GetAtHitObj__12dCcD_GObjInfFv)
//	8080FD08: 80263A48 (GetAc__8cCcD_ObjFv)
//	8080FD2C: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080FD4C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	8080FD64: 80347138 (PSVECSquareMag)
//	8080FDD4: 80450AE0 (__float_nan)
//	8080FDD8: 80450AE0 (__float_nan)
//	8080FE44: 80450AE0 (__float_nan)
//	8080FE48: 80450AE0 (__float_nan)
//	8080FE94: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080FEA4: 8080F8C8 (setInclination__8daE_YM_cFv)
//	8080FEC0: 80439A20 (sincosTable___5JMath)
//	8080FEC4: 80439A20 (sincosTable___5JMath)
//	8080FEE8: 80270740 (cLib_chaseF__FPfff)
//	8080FEF8: 80270740 (cLib_chaseF__FPfff)
//	8080FF78: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	8080FF8C: 80267954 (cM_rndF__Ff)
//	8080FFAC: 8080F8C8 (setInclination__8daE_YM_cFv)
//	8080FFD4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8080FFE4: 80270B90 (cLib_chaseAngleS__FPsss)
//	8080FFF4: 80270740 (cLib_chaseF__FPfff)
//	80810004: 80270740 (cLib_chaseF__FPfff)
//	8081001C: 80809F9C (setActionMode__8daE_YM_cFi)
//	80810030: 80267674 (cM_atan2s__Fff)
//	80810060: 80270B90 (cLib_chaseAngleS__FPsss)
//	80810068: 8080F8C8 (setInclination__8daE_YM_cFv)
//	80810070: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeFlyAttack() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeFlyAttack__8daE_YM_cFv.s"
}
#pragma pop


/* 80810084-8081013C 00B8+00 s=1 e=0 z=0  None .text      setNextPathPoint__8daE_YM_cFv                                */
//	808100D0: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	808100F4: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80810114: 80815A14 (lit_4872)
//	80810118: 80815A14 (lit_4872)
//	8081011C: 8081599C (lit_3927)
//	80810120: 8081599C (lit_3927)
//	80810124: 808081E0 (bckSet__8daE_YM_cFiUcff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setNextPathPoint() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setNextPathPoint__8daE_YM_cFv.s"
}
#pragma pop


/* 8081013C-8081030C 01D0+00 s=1 e=0 z=0  None .text      checkRailDig__8daE_YM_cFv                                    */
//	8081014C: 803621DC (_savegpr_29)
//	80810154: 80815994 (lit_3925)
//	80810158: 80815994 (lit_3925)
//	8081015C: 804061C0 (g_dComIfG_gameInfo)
//	80810160: 804061C0 (g_dComIfG_gameInfo)
//	8081018C: 8081593C (getLeftHandPos__9daPy_py_cCFv)
//	8081019C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	808101BC: 80347138 (PSVECSquareMag)
//	8081022C: 80450AE0 (__float_nan)
//	80810230: 80450AE0 (__float_nan)
//	8081029C: 80450AE0 (__float_nan)
//	808102A0: 80450AE0 (__float_nan)
//	808102D8: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	808102F8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkRailDig() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkRailDig__8daE_YM_cFv.s"
}
#pragma pop


/* 8081030C-80810690 0384+00 s=1 e=0 z=0  None .text      executeRail__8daE_YM_cFv                                     */
//	8081031C: 803621DC (_savegpr_29)
//	80810324: 80815994 (lit_3925)
//	80810328: 80815994 (lit_3925)
//	8081032C: 804061C0 (g_dComIfG_gameInfo)
//	80810330: 804061C0 (g_dComIfG_gameInfo)
//	80810394: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	808103F0: 80810084 (setNextPathPoint__8daE_YM_cFv)
//	808103F8: 8081013C (checkRailDig__8daE_YM_cFv)
//	8081045C: 80810084 (setNextPathPoint__8daE_YM_cFv)
//	80810464: 8081013C (checkRailDig__8daE_YM_cFv)
//	80810480: 80809DA8 (setMoveSound__8daE_YM_cFi)
//	80810490: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	808104B8: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	808104F8: 8034739C (PSVECSquareDistance)
//	80810568: 80450AE0 (__float_nan)
//	8081056C: 80450AE0 (__float_nan)
//	808105D8: 80450AE0 (__float_nan)
//	808105DC: 80450AE0 (__float_nan)
//	80810610: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	8081062C: 80809D84 (setAppear__8daE_YM_cFv)
//	80810650: 80809F9C (setActionMode__8daE_YM_cFi)
//	8081067C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeRail() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeRail__8daE_YM_cFv.s"
}
#pragma pop


/* 80810690-80810DF8 0768+00 s=1 e=0 z=0  None .text      executeBackRail__8daE_YM_cFv                                 */
//	808106A8: 80815994 (lit_3925)
//	808106AC: 80815994 (lit_3925)
//	808106BC: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80810710: 8034739C (PSVECSquareDistance)
//	80810780: 80450AE0 (__float_nan)
//	80810784: 80450AE0 (__float_nan)
//	808107F0: 80450AE0 (__float_nan)
//	808107F4: 80450AE0 (__float_nan)
//	8081080C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80810818: 80270E24 (cLib_distanceAngleS__Fss)
//	80810860: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80810890: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	808108BC: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	808108C4: 80808768 (setDigEffect__8daE_YM_cFv)
//	80810900: 80815BD0 (YM_DIG_POS_Y)
//	80810904: 80815BD0 (YM_DIG_POS_Y)
//	80810910: 80270740 (cLib_chaseF__FPfff)
//	8081091C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80810934: 80270540 (cLib_addCalcAngleS__FPsssss)
//	8081094C: 80270740 (cLib_chaseF__FPfff)
//	8081097C: 80808768 (setDigEffect__8daE_YM_cFv)
//	80810A10: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	80810A68: 80270740 (cLib_chaseF__FPfff)
//	80810A74: 80809DA8 (setMoveSound__8daE_YM_cFi)
//	80810AAC: 8034739C (PSVECSquareDistance)
//	80810B1C: 80450AE0 (__float_nan)
//	80810B20: 80450AE0 (__float_nan)
//	80810B8C: 80450AE0 (__float_nan)
//	80810B90: 80450AE0 (__float_nan)
//	80810BA8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80810BB8: 80270B90 (cLib_chaseAngleS__FPsss)
//	80810BC8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80810BE0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80810BF8: 80270740 (cLib_chaseF__FPfff)
//	80810C24: 808143A0 (checkBeforeGround__8daE_YM_cFv)
//	80810C84: 8034739C (PSVECSquareDistance)
//	80810CF4: 80450AE0 (__float_nan)
//	80810CF8: 80450AE0 (__float_nan)
//	80810D64: 80450AE0 (__float_nan)
//	80810D68: 80450AE0 (__float_nan)
//	80810DB4: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	80810DDC: 80809F9C (setActionMode__8daE_YM_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeBackRail() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeBackRail__8daE_YM_cFv.s"
}
#pragma pop


/* 80810DF8-80810E64 006C+00 s=1 e=0 z=0  None .text      checkElectricStart__8daE_YM_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkElectricStart() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkElectricStart__8daE_YM_cFv.s"
}
#pragma pop


/* 80810E64-8081105C 01F8+00 s=1 e=0 z=0  None .text      executeElectric__8daE_YM_cFv                                 */
//	80810E7C: 80815994 (lit_3925)
//	80810E80: 80815994 (lit_3925)
//	80810EC8: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	80810EF4: 80808884 (setElecEffect1__8daE_YM_cFv)
//	80810F28: 808089DC (setElecEffect2__8daE_YM_cFv)
//	80810F64: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80810F7C: 808089DC (setElecEffect2__8daE_YM_cFv)
//	80810FAC: 80815D38 (l_HIO)
//	80810FB0: 80815D38 (l_HIO)
//	80811028: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	80811040: 80809F9C (setActionMode__8daE_YM_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeElectric() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeElectric__8daE_YM_cFv.s"
}
#pragma pop


/* 8081105C-80811740 06E4+00 s=1 e=0 z=0  None .text      executeSwitch__8daE_YM_cFv                                   */
//	80811074: 80815994 (lit_3925)
//	80811078: 80815994 (lit_3925)
//	808110FC: 804061C0 (g_dComIfG_gameInfo)
//	80811100: 804061C0 (g_dComIfG_gameInfo)
//	80811110: 80035360 (isSwitch__10dSv_info_cCFii)
//	80811174: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	808111E8: 80809D84 (setAppear__8daE_YM_cFv)
//	808111F0: 80809D6C (setNormalCc__8daE_YM_cFv)
//	80811210: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	80811224: 80270740 (cLib_chaseF__FPfff)
//	80811230: 80809DA8 (setMoveSound__8daE_YM_cFi)
//	808112A4: 80270540 (cLib_addCalcAngleS__FPsssss)
//	808112DC: 8034739C (PSVECSquareDistance)
//	8081134C: 80450AE0 (__float_nan)
//	80811350: 80450AE0 (__float_nan)
//	808113BC: 80450AE0 (__float_nan)
//	808113C0: 80450AE0 (__float_nan)
//	808113FC: 80809F9C (setActionMode__8daE_YM_cFi)
//	80811410: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80811424: 808089DC (setElecEffect2__8daE_YM_cFv)
//	80811454: 80815D38 (l_HIO)
//	80811458: 80815D38 (l_HIO)
//	80811488: 80270740 (cLib_chaseF__FPfff)
//	80811494: 80809DA8 (setMoveSound__8daE_YM_cFi)
//	808114A4: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	808114C8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	808114E0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	80811518: 8034739C (PSVECSquareDistance)
//	80811588: 80450AE0 (__float_nan)
//	8081158C: 80450AE0 (__float_nan)
//	808115F8: 80450AE0 (__float_nan)
//	808115FC: 80450AE0 (__float_nan)
//	80811680: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	8081168C: 80809F9C (setActionMode__8daE_YM_cFi)
//	80811694: 80809D84 (setAppear__8daE_YM_cFv)
//	8081169C: 80809D6C (setNormalCc__8daE_YM_cFv)
//	808116AC: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80811710: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	8081171C: 80809F9C (setActionMode__8daE_YM_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeSwitch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeSwitch__8daE_YM_cFv.s"
}
#pragma pop


/* 80811740-80811838 00F8+00 s=1 e=0 z=0  None .text      initFireFly__8daE_YM_cFi                                     */
//	80811750: 803621DC (_savegpr_29)
//	8081175C: 80815994 (lit_3925)
//	80811760: 80815994 (lit_3925)
//	80811768: 8026798C (cM_rndFX__Ff)
//	808117B0: 8026798C (cM_rndFX__Ff)
//	808117E8: 8026798C (cM_rndFX__Ff)
//	808117FC: 8026798C (cM_rndFX__Ff)
//	80811824: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daE_YM_c::initFireFly(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/initFireFly__8daE_YM_cFi.s"
}
#pragma pop


/* 80811838-808120B0 0878+00 s=1 e=0 z=0  None .text      executeFire__8daE_YM_cFv                                     */
//	80811850: 80815994 (lit_3925)
//	80811854: 80815994 (lit_3925)
//	808118B8: 808089DC (setElecEffect2__8daE_YM_cFv)
//	808118EC: 804061C0 (g_dComIfG_gameInfo)
//	808118F0: 804061C0 (g_dComIfG_gameInfo)
//	8081191C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8081193C: 80347138 (PSVECSquareMag)
//	808119AC: 80450AE0 (__float_nan)
//	808119B0: 80450AE0 (__float_nan)
//	80811A1C: 80450AE0 (__float_nan)
//	80811A20: 80450AE0 (__float_nan)
//	80811AA4: 804061C0 (g_dComIfG_gameInfo)
//	80811AA8: 804061C0 (g_dComIfG_gameInfo)
//	80811AB4: 80035360 (isSwitch__10dSv_info_cCFii)
//	80811AE8: 80809D84 (setAppear__8daE_YM_cFv)
//	80811AF0: 80809D6C (setNormalCc__8daE_YM_cFv)
//	80811B20: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	80811B3C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80811B5C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	80811B80: 80019A2C (fopAcM_SearchByName__FsPP10fopAc_ac_c)
//	80811BB8: 80815958 (getPos__13daTag_FWall_cFUc)
//	80811BF4: 80811740 (initFireFly__8daE_YM_cFi)
//	80811C10: 80808B3C (setFireEffect__8daE_YM_cFv)
//	80811C18: 808089DC (setElecEffect2__8daE_YM_cFv)
//	80811C48: 80815D38 (l_HIO)
//	80811C4C: 80815D38 (l_HIO)
//	80811C78: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80811C88: 80270C74 (cLib_targetAngleX__FPC4cXyzPC4cXyz)
//	80811C90: 80439A20 (sincosTable___5JMath)
//	80811C94: 80439A20 (sincosTable___5JMath)
//	80811CD0: 8034739C (PSVECSquareDistance)
//	80811D40: 80450AE0 (__float_nan)
//	80811D44: 80450AE0 (__float_nan)
//	80811DB0: 80450AE0 (__float_nan)
//	80811DB4: 80450AE0 (__float_nan)
//	80811DE0: 80811740 (initFireFly__8daE_YM_cFi)
//	80811E30: 804061C0 (g_dComIfG_gameInfo)
//	80811E34: 804061C0 (g_dComIfG_gameInfo)
//	80811EB0: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	80811ED0: 80808B3C (setFireEffect__8daE_YM_cFv)
//	80811EF0: 808089DC (setElecEffect2__8daE_YM_cFv)
//	80811F20: 80815D38 (l_HIO)
//	80811F24: 80815D38 (l_HIO)
//	80812004: 80811740 (initFireFly__8daE_YM_cFi)
//	80812020: 80811740 (initFireFly__8daE_YM_cFi)
//	80812040: 80439A20 (sincosTable___5JMath)
//	80812044: 80439A20 (sincosTable___5JMath)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeFire() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeFire__8daE_YM_cFv.s"
}
#pragma pop


/* 808120B0-808123C4 0314+00 s=1 e=0 z=0  None .text      setRiverAttention__8daE_YM_cFv                               */
//	808120C8: 80815994 (lit_3925)
//	808120CC: 80815994 (lit_3925)
//	808120D0: 804061C0 (g_dComIfG_gameInfo)
//	808120D4: 804061C0 (g_dComIfG_gameInfo)
//	80812110: 8034739C (PSVECSquareDistance)
//	80812180: 80450AE0 (__float_nan)
//	80812184: 80450AE0 (__float_nan)
//	808121F0: 80450AE0 (__float_nan)
//	808121F4: 80450AE0 (__float_nan)
//	80812204: 803DD470 (now__14mDoMtx_stack_c)
//	80812208: 803DD470 (now__14mDoMtx_stack_c)
//	80812218: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8081221C: 803DD470 (now__14mDoMtx_stack_c)
//	80812220: 803DD470 (now__14mDoMtx_stack_c)
//	80812230: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80812244: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8081224C: 8000CDD4 (transM__14mDoMtx_stack_cFRC4cXyz)
//	80812250: 803DD470 (now__14mDoMtx_stack_c)
//	80812254: 803DD470 (now__14mDoMtx_stack_c)
//	80812298: 80347138 (PSVECSquareMag)
//	80812308: 80450AE0 (__float_nan)
//	8081230C: 80450AE0 (__float_nan)
//	80812378: 80450AE0 (__float_nan)
//	8081237C: 80450AE0 (__float_nan)
//	8081238C: 80267674 (cM_atan2s__Fff)
//	80812398: 803650D0 (abs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setRiverAttention() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setRiverAttention__8daE_YM_cFv.s"
}
#pragma pop


/* 808123C4-808123D0 000C+00 s=0 e=0 z=1  None .text      setLockByCargo__8daE_YM_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void daE_YM_c::setLockByCargo() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setLockByCargo__8daE_YM_cFv.s"
}
#pragma pop


/* 808123D0-80812F0C 0B3C+00 s=1 e=0 z=0  None .text      executeRiver__8daE_YM_cFv                                    */
//	808123E0: 803621DC (_savegpr_29)
//	808123E8: 80815994 (lit_3925)
//	808123EC: 80815994 (lit_3925)
//	808123F0: 804061C0 (g_dComIfG_gameInfo)
//	808123F4: 804061C0 (g_dComIfG_gameInfo)
//	80812420: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	808124A4: 80019A2C (fopAcM_SearchByName__FsPP10fopAc_ac_c)
//	808124B8: 804061C0 (g_dComIfG_gameInfo)
//	808124BC: 804061C0 (g_dComIfG_gameInfo)
//	808124C8: 8003439C (isLightDropGetFlag__16dSv_light_drop_cCFUc)
//	80812560: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	80812580: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	808125E0: 800517B0 (dPath_GetPnt__FPC5dPathi)
//	80812604: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	80812614: 80809D84 (setAppear__8daE_YM_cFv)
//	8081261C: 80809D6C (setNormalCc__8daE_YM_cFv)
//	80812630: 80808884 (setElecEffect1__8daE_YM_cFv)
//	8081267C: 804061C0 (g_dComIfG_gameInfo)
//	80812680: 804061C0 (g_dComIfG_gameInfo)
//	8081268C: 80035360 (isSwitch__10dSv_info_cCFii)
//	808126C0: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	808126E4: 8084B088 (checkNextPath__8daKago_cF4cXyz)
//	8081271C: 80808328 (bckSetFly__8daE_YM_cFiUcff)
//	80812728: 808120B0 (setRiverAttention__8daE_YM_cFv)
//	80812748: 80439A20 (sincosTable___5JMath)
//	8081274C: 80439A20 (sincosTable___5JMath)
//	808127BC: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	808127D0: 80270C74 (cLib_targetAngleX__FPC4cXyzPC4cXyz)
//	808127E8: 803650D0 (abs)
//	8081280C: 8084B088 (checkNextPath__8daKago_cF4cXyz)
//	8081284C: 80270740 (cLib_chaseF__FPfff)
//	8081286C: 80270740 (cLib_chaseF__FPfff)
//	80812880: 80270740 (cLib_chaseF__FPfff)
//	808128A8: 80270740 (cLib_chaseF__FPfff)
//	808128C8: 80270740 (cLib_chaseF__FPfff)
//	808128EC: 80347138 (PSVECSquareMag)
//	8081295C: 80450AE0 (__float_nan)
//	80812960: 80450AE0 (__float_nan)
//	808129CC: 80450AE0 (__float_nan)
//	808129D0: 80450AE0 (__float_nan)
//	808129F4: 80270740 (cLib_chaseF__FPfff)
//	80812A08: 80270740 (cLib_chaseF__FPfff)
//	80812A1C: 80270740 (cLib_chaseF__FPfff)
//	80812A30: 80270740 (cLib_chaseF__FPfff)
//	80812A44: 80439A20 (sincosTable___5JMath)
//	80812A48: 80439A20 (sincosTable___5JMath)
//	80812A7C: 8034739C (PSVECSquareDistance)
//	80812AEC: 80450AE0 (__float_nan)
//	80812AF0: 80450AE0 (__float_nan)
//	80812B5C: 80450AE0 (__float_nan)
//	80812B60: 80450AE0 (__float_nan)
//	80812BC4: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80812BDC: 80809F9C (setActionMode__8daE_YM_cFi)
//	80812BF0: 8034739C (PSVECSquareDistance)
//	80812C60: 80450AE0 (__float_nan)
//	80812C64: 80450AE0 (__float_nan)
//	80812CD0: 80450AE0 (__float_nan)
//	80812CD4: 80450AE0 (__float_nan)
//	80812CF0: 808089DC (setElecEffect2__8daE_YM_cFv)
//	80812D2C: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	80812D3C: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	80812D44: 80263A48 (GetAc__8cCcD_ObjFv)
//	80812D58: 80263A48 (GetAc__8cCcD_ObjFv)
//	80812D80: 80809D84 (setAppear__8daE_YM_cFv)
//	80812DAC: 808081E0 (bckSet__8daE_YM_cFiUcff)
//	80812DD8: 80808884 (setElecEffect1__8daE_YM_cFv)
//	80812DFC: 803DD470 (now__14mDoMtx_stack_c)
//	80812E00: 803DD470 (now__14mDoMtx_stack_c)
//	80812E04: 803464B0 (PSMTXCopy)
//	80812E08: 803DD470 (now__14mDoMtx_stack_c)
//	80812E0C: 803DD470 (now__14mDoMtx_stack_c)
//	80812E38: 80347090 (PSVECAdd)
//	80812E60: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	80812E78: 804061C0 (g_dComIfG_gameInfo)
//	80812E7C: 804061C0 (g_dComIfG_gameInfo)
//	80812E88: 80035360 (isSwitch__10dSv_info_cCFii)
//	80812E94: 804061C0 (g_dComIfG_gameInfo)
//	80812E98: 804061C0 (g_dComIfG_gameInfo)
//	80812EA8: 80035200 (onSwitch__10dSv_info_cFii)
//	80812EAC: 804061C0 (g_dComIfG_gameInfo)
//	80812EB0: 804061C0 (g_dComIfG_gameInfo)
//	80812ED0: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	80812ED8: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80812EF0: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	80812EF8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::executeRiver() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/executeRiver__8daE_YM_cFv.s"
}
#pragma pop


/* 80812F0C-80812FCC 00C0+00 s=1 e=0 z=0  None .text      s_ym_sub__FPvPv                                              */
//	80812F28: 80018CE0 (fopAc_IsActor__FPv)
//	80812F54: 80022138 (fpcM_IsCreating__FUi)
//	80812F70: 8026702C (__eq__4cXyzCFRC3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_ym_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/s_ym_sub__FPvPv.s"
}
#pragma pop


/* 80812FCC-8081300C 0040+00 s=1 e=0 z=0  None .text      checkFrinedSamePos__8daE_YM_cFv                              */
//	80812FF0: 80812F0C (s_ym_sub__FPvPv)
//	80812FF4: 80812F0C (s_ym_sub__FPvPv)
//	80812FF8: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkFrinedSamePos() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkFrinedSamePos__8daE_YM_cFv.s"
}
#pragma pop


/* 8081300C-80813528 051C+00 s=2 e=0 z=0  None .text      action__8daE_YM_cFv                                          */
//	8081301C: 803621DC (_savegpr_29)
//	80813024: 804061C0 (g_dComIfG_gameInfo)
//	80813028: 804061C0 (g_dComIfG_gameInfo)
//	8081304C: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8081305C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8081308C: 80815998 (lit_3926)
//	80813090: 80815998 (lit_3926)
//	808130F4: 8080BB7C (damage_check__8daE_YM_cFv)
//	808130FC: 80809228 (checkSurpriseLock__8daE_YM_cFv)
//	80813118: 80815BDC (lit_8522)
//	8081311C: 80815BDC (lit_8522)
//	80813134: 80809FC4 (executeWait__8daE_YM_cFv)
//	80813140: 8080A57C (executeMove__8daE_YM_cFv)
//	8081314C: 8080ACB4 (executeEscape__8daE_YM_cFv)
//	80813158: 8080B444 (executeDown__8daE_YM_cFv)
//	80813164: 8080BCFC (executeWind__8daE_YM_cFv)
//	80813170: 8080C374 (executeSurprise__8daE_YM_cFv)
//	8081317C: 8080CEE0 (executeBack__8daE_YM_cFv)
//	80813188: 8080CFC8 (executeFall__8daE_YM_cFv)
//	80813198: 8080D2C8 (executeAttack__8daE_YM_cFv)
//	808131A8: 8080DC5C (executeAttackWall__8daE_YM_cFv)
//	808131B4: 8080E26C (executeDefense__8daE_YM_cFv)
//	808131C0: 8080E6A0 (executeFly__8daE_YM_cFv)
//	808131D0: 8080F92C (executeFlyAttack__8daE_YM_cFv)
//	808131DC: 8081030C (executeRail__8daE_YM_cFv)
//	808131E8: 80810690 (executeBackRail__8daE_YM_cFv)
//	808131F8: 80810E64 (executeElectric__8daE_YM_cFv)
//	80813204: 8081105C (executeSwitch__8daE_YM_cFv)
//	80813210: 80811838 (executeFire__8daE_YM_cFv)
//	8081321C: 808123D0 (executeRiver__8daE_YM_cFv)
//	80813230: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	80813284: 80815D04 (__vt__8cM3dGPla)
//	80813288: 80815D04 (__vt__8cM3dGPla)
//	80813290: 804061C0 (g_dComIfG_gameInfo)
//	80813294: 804061C0 (g_dComIfG_gameInfo)
//	808132A4: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	808132B0: 80267674 (cM_atan2s__Fff)
//	808132C8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	808132D4: 80267674 (cM_atan2s__Fff)
//	808132EC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	808132F0: 80815D04 (__vt__8cM3dGPla)
//	808132F4: 80815D04 (__vt__8cM3dGPla)
//	80813318: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	8081332C: 804061C0 (g_dComIfG_gameInfo)
//	80813330: 804061C0 (g_dComIfG_gameInfo)
//	80813338: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	80813340: 803DD470 (now__14mDoMtx_stack_c)
//	80813344: 803DD470 (now__14mDoMtx_stack_c)
//	8081334C: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	80813350: 803DD470 (now__14mDoMtx_stack_c)
//	80813354: 803DD470 (now__14mDoMtx_stack_c)
//	8081335C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80813360: 803DD470 (now__14mDoMtx_stack_c)
//	80813364: 803DD470 (now__14mDoMtx_stack_c)
//	8081336C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80813374: 80815998 (lit_3926)
//	80813378: 80815998 (lit_3926)
//	80813388: 803DD470 (now__14mDoMtx_stack_c)
//	8081338C: 803DD470 (now__14mDoMtx_stack_c)
//	80813398: 80346D6C (PSMTXMultVec)
//	808133C0: 80347090 (PSVECAdd)
//	808133C8: 80815998 (lit_3926)
//	808133CC: 80815998 (lit_3926)
//	80813458: 80077C68 (__ct__11dBgS_LinChkFv)
//	80813460: 804061C0 (g_dComIfG_gameInfo)
//	80813464: 804061C0 (g_dComIfG_gameInfo)
//	80813478: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8081347C: 804061C0 (g_dComIfG_gameInfo)
//	80813480: 804061C0 (g_dComIfG_gameInfo)
//	8081348C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	808134AC: 80077CDC (__dt__11dBgS_LinChkFv)
//	808134E8: 808154EC (setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz)
//	808134F4: 8002D06C (dComIfGp_getReverb__Fi)
//	80813504: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	8081350C: 8000D428 (play__14mDoExt_baseAnmFv)
//	80813514: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::action() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/action__8daE_YM_cFv.s"
}
#pragma pop


/* 80813528-808135B0 0088+00 s=1 e=0 z=0  None .text      mtx_set__8daE_YM_cFv                                         */
//	8081353C: 803DD470 (now__14mDoMtx_stack_c)
//	80813540: 803DD470 (now__14mDoMtx_stack_c)
//	80813558: 803468E8 (PSMTXTrans)
//	80813560: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80813568: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	80813578: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	80813584: 803DD470 (now__14mDoMtx_stack_c)
//	80813588: 803DD470 (now__14mDoMtx_stack_c)
//	80813590: 803464B0 (PSMTXCopy)
//	80813598: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::mtx_set() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/mtx_set__8daE_YM_cFv.s"
}
#pragma pop


/* 808135B0-808138AC 02FC+00 s=1 e=0 z=0  None .text      cc_set__8daE_YM_cFv                                          */
//	808135C0: 803621DC (_savegpr_29)
//	808135C8: 80815994 (lit_3925)
//	808135CC: 80815994 (lit_3925)
//	8081361C: 803DD470 (now__14mDoMtx_stack_c)
//	80813620: 803DD470 (now__14mDoMtx_stack_c)
//	80813624: 803464B0 (PSMTXCopy)
//	8081363C: 803DD470 (now__14mDoMtx_stack_c)
//	80813640: 803DD470 (now__14mDoMtx_stack_c)
//	8081364C: 80346D6C (PSMTXMultVec)
//	80813684: 803DD470 (now__14mDoMtx_stack_c)
//	80813688: 803DD470 (now__14mDoMtx_stack_c)
//	80813690: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	80813694: 803DD470 (now__14mDoMtx_stack_c)
//	80813698: 803DD470 (now__14mDoMtx_stack_c)
//	808136A0: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	808136BC: 803DD470 (now__14mDoMtx_stack_c)
//	808136C0: 803DD470 (now__14mDoMtx_stack_c)
//	808136CC: 80346D6C (PSMTXMultVec)
//	808136DC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	808136F8: 803DD470 (now__14mDoMtx_stack_c)
//	808136FC: 803DD470 (now__14mDoMtx_stack_c)
//	80813704: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	80813708: 803DD470 (now__14mDoMtx_stack_c)
//	8081370C: 803DD470 (now__14mDoMtx_stack_c)
//	80813714: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80813730: 803DD470 (now__14mDoMtx_stack_c)
//	80813734: 803DD470 (now__14mDoMtx_stack_c)
//	80813740: 80346D6C (PSMTXMultVec)
//	80813750: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	808137C0: 803DD470 (now__14mDoMtx_stack_c)
//	808137C4: 803DD470 (now__14mDoMtx_stack_c)
//	808137C8: 803464B0 (PSMTXCopy)
//	8081380C: 803DD470 (now__14mDoMtx_stack_c)
//	80813810: 803DD470 (now__14mDoMtx_stack_c)
//	8081381C: 80346D6C (PSMTXMultVec)
//	8081382C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80813838: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80813850: 8026F708 (SetR__8cM3dGSphFf)
//	8081386C: 8026F708 (SetR__8cM3dGSphFf)
//	8081387C: 8026F708 (SetR__8cM3dGSphFf)
//	80813880: 804061C0 (g_dComIfG_gameInfo)
//	80813884: 804061C0 (g_dComIfG_gameInfo)
//	80813890: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80813898: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::cc_set() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/cc_set__8daE_YM_cFv.s"
}
#pragma pop


/* 808138AC-80813A10 0164+00 s=1 e=0 z=0  None .text      execute__8daE_YM_cFv                                         */
//	808139DC: 80810DF8 (checkElectricStart__8daE_YM_cFv)
//	808139E4: 8081300C (action__8daE_YM_cFv)
//	808139EC: 80813528 (mtx_set__8daE_YM_cFv)
//	808139F4: 808135B0 (cc_set__8daE_YM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::execute() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/execute__8daE_YM_cFv.s"
}
#pragma pop


/* 80813A10-80813A30 0020+00 s=2 e=0 z=0  None .text      daE_YM_Execute__FP8daE_YM_c                                  */
//	80813A1C: 808138AC (execute__8daE_YM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
asm static void daE_YM_Execute(daE_YM_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/daE_YM_Execute__FP8daE_YM_c.s"
}
#pragma pop


/* 80813A30-80813A38 0008+00 s=1 e=0 z=0  None .text      daE_YM_IsDelete__FP8daE_YM_c                                 */
// True False
//  bool False
//  daE_YM_c* False
// 	 daE_YM_c False
static bool daE_YM_IsDelete(daE_YM_c* param_0) {
	return true;
}


/* 80813A38-80813AD0 0098+00 s=1 e=0 z=0  None .text      _delete__8daE_YM_cFv                                         */
//	80813A5C: 80815AEC (stringBase0)
//	80813A60: 80815AEC (stringBase0)
//	80813A64: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80813A70: 80815AEC (stringBase0)
//	80813A74: 80815AEC (stringBase0)
//	80813A7C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80813A90: 80815D28 (data_80815D28)
//	80813A94: 80815D28 (data_80815D28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::_delete() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/_delete__8daE_YM_cFv.s"
}
#pragma pop


/* 80813AD0-80813AF0 0020+00 s=1 e=0 z=0  None .text      daE_YM_Delete__FP8daE_YM_c                                   */
//	80813ADC: 80813A38 (_delete__8daE_YM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
asm static void daE_YM_Delete(daE_YM_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/daE_YM_Delete__FP8daE_YM_c.s"
}
#pragma pop


/* 80813AF0-80813E38 0348+00 s=1 e=0 z=0  None .text      CreateHeap__8daE_YM_cFv                                      */
//	80813B00: 803621D8 (_savegpr_28)
//	80813B14: 80815AEC (stringBase0)
//	80813B18: 80815AEC (stringBase0)
//	80813B20: 804061C0 (g_dComIfG_gameInfo)
//	80813B24: 804061C0 (g_dComIfG_gameInfo)
//	80813B38: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80813B44: 802CEC4C (__nw__FUl)
//	80813B50: 80815AEC (stringBase0)
//	80813B54: 80815AEC (stringBase0)
//	80813B64: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80813B9C: 8081599C (lit_3927)
//	80813BA0: 8081599C (lit_3927)
//	80813BAC: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80813BDC: 802CEC4C (__nw__FUl)
//	80813BE8: 80815CF8 (__vt__12J3DFrameCtrl)
//	80813BEC: 80815CF8 (__vt__12J3DFrameCtrl)
//	80813BF8: 803283FC (init__12J3DFrameCtrlFs)
//	80813C1C: 80815AEC (stringBase0)
//	80813C20: 80815AEC (stringBase0)
//	80813C30: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80813C54: 8081599C (lit_3927)
//	80813C58: 8081599C (lit_3927)
//	80813C64: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80813C78: 80815AEC (stringBase0)
//	80813C7C: 80815AEC (stringBase0)
//	80813C88: 804061C0 (g_dComIfG_gameInfo)
//	80813C8C: 804061C0 (g_dComIfG_gameInfo)
//	80813CA0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80813CAC: 802CEC4C (__nw__FUl)
//	80813CB8: 80815AEC (stringBase0)
//	80813CBC: 80815AEC (stringBase0)
//	80813CD0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80813D08: 8081599C (lit_3927)
//	80813D0C: 8081599C (lit_3927)
//	80813D18: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80813D48: 802CEC4C (__nw__FUl)
//	80813D54: 80815CF8 (__vt__12J3DFrameCtrl)
//	80813D58: 80815CF8 (__vt__12J3DFrameCtrl)
//	80813D64: 803283FC (init__12J3DFrameCtrlFs)
//	80813D88: 80815AEC (stringBase0)
//	80813D8C: 80815AEC (stringBase0)
//	80813DA0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80813DC4: 8081599C (lit_3927)
//	80813DC8: 8081599C (lit_3927)
//	80813DD4: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	80813DF8: 802CECC4 (__nwa__FUl)
//	80813DFC: 80813E38 (__ct__4cXyzFv)
//	80813E00: 80813E38 (__ct__4cXyzFv)
//	80813E04: 80815900 (__dt__4cXyzFv)
//	80813E08: 80815900 (__dt__4cXyzFv)
//	80813E14: 80361F14 (__construct_new_array)
//	80813E24: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/CreateHeap__8daE_YM_cFv.s"
}
#pragma pop


/* 80813E38-80813E3C 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 80813E3C-80813E84 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	80813E54: 80815CF8 (__vt__12J3DFrameCtrl)
//	80813E58: 80815CF8 (__vt__12J3DFrameCtrl)
//	80813E68: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 80813E84-80813EA4 0020+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	80813E90: 80813AF0 (CreateHeap__8daE_YM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80813EA4-808143A0 04FC+00 s=2 e=0 z=0  None .text      checkBeforeBg__8daE_YM_cFs                                   */
//	80813EB4: 803621D8 (_savegpr_28)
//	80813EC0: 80815994 (lit_3925)
//	80813EC4: 80815994 (lit_3925)
//	80813ECC: 80077C68 (__ct__11dBgS_LinChkFv)
//	80813EE8: 80077CDC (__dt__11dBgS_LinChkFv)
//	80813F14: 80077CDC (__dt__11dBgS_LinChkFv)
//	80813F20: 803DD470 (now__14mDoMtx_stack_c)
//	80813F24: 803DD470 (now__14mDoMtx_stack_c)
//	80813F2C: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	80813F30: 803DD470 (now__14mDoMtx_stack_c)
//	80813F34: 803DD470 (now__14mDoMtx_stack_c)
//	80813F3C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80813F40: 803DD470 (now__14mDoMtx_stack_c)
//	80813F44: 803DD470 (now__14mDoMtx_stack_c)
//	80813F4C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80813F64: 803DD470 (now__14mDoMtx_stack_c)
//	80813F68: 803DD470 (now__14mDoMtx_stack_c)
//	80813F74: 80346D6C (PSMTXMultVec)
//	80813F84: 80347090 (PSVECAdd)
//	80813F88: 803DD470 (now__14mDoMtx_stack_c)
//	80813F8C: 803DD470 (now__14mDoMtx_stack_c)
//	80813F94: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	80813F98: 803DD470 (now__14mDoMtx_stack_c)
//	80813F9C: 803DD470 (now__14mDoMtx_stack_c)
//	80813FA4: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80813FA8: 803DD470 (now__14mDoMtx_stack_c)
//	80813FAC: 803DD470 (now__14mDoMtx_stack_c)
//	80813FB4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80813FCC: 803DD470 (now__14mDoMtx_stack_c)
//	80813FD0: 803DD470 (now__14mDoMtx_stack_c)
//	80813FDC: 80346D6C (PSMTXMultVec)
//	80814004: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80814030: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80814034: 804061C0 (g_dComIfG_gameInfo)
//	80814038: 804061C0 (g_dComIfG_gameInfo)
//	80814048: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	8081405C: 80077CDC (__dt__11dBgS_LinChkFv)
//	808140A8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	808140D4: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	808140E0: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	808140F4: 80077CDC (__dt__11dBgS_LinChkFv)
//	80814100: 803DD470 (now__14mDoMtx_stack_c)
//	80814104: 803DD470 (now__14mDoMtx_stack_c)
//	8081410C: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	80814110: 803DD470 (now__14mDoMtx_stack_c)
//	80814114: 803DD470 (now__14mDoMtx_stack_c)
//	8081411C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80814120: 803DD470 (now__14mDoMtx_stack_c)
//	80814124: 803DD470 (now__14mDoMtx_stack_c)
//	8081412C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80814148: 803DD470 (now__14mDoMtx_stack_c)
//	8081414C: 803DD470 (now__14mDoMtx_stack_c)
//	80814158: 80346D6C (PSMTXMultVec)
//	80814168: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	808141A8: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	808141BC: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	808141C8: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	808141DC: 80077CDC (__dt__11dBgS_LinChkFv)
//	808141E8: 80815D04 (__vt__8cM3dGPla)
//	808141EC: 80815D04 (__vt__8cM3dGPla)
//	80814200: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80814220: 80347138 (PSVECSquareMag)
//	80814290: 80450AE0 (__float_nan)
//	80814294: 80450AE0 (__float_nan)
//	80814300: 80450AE0 (__float_nan)
//	80814304: 80450AE0 (__float_nan)
//	8081430C: 80267674 (cM_atan2s__Fff)
//	8081431C: 803650D0 (abs)
//	80814330: 80267674 (cM_atan2s__Fff)
//	8081434C: 80815D04 (__vt__8cM3dGPla)
//	80814350: 80815D04 (__vt__8cM3dGPla)
//	80814360: 80077CDC (__dt__11dBgS_LinChkFv)
//	8081436C: 80815D04 (__vt__8cM3dGPla)
//	80814370: 80815D04 (__vt__8cM3dGPla)
//	80814380: 80077CDC (__dt__11dBgS_LinChkFv)
//	8081438C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s16 False
asm void daE_YM_c::checkBeforeBg(s16 param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkBeforeBg__8daE_YM_cFs.s"
}
#pragma pop


/* 808143A0-808144D8 0138+00 s=1 e=0 z=0  None .text      checkBeforeGround__8daE_YM_cFv                               */
//	808143B8: 80815994 (lit_3925)
//	808143BC: 80815994 (lit_3925)
//	808143C4: 8007757C (__ct__11dBgS_GndChkFv)
//	808143EC: 803DD470 (now__14mDoMtx_stack_c)
//	808143F0: 803DD470 (now__14mDoMtx_stack_c)
//	808143F8: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80814410: 803DD470 (now__14mDoMtx_stack_c)
//	80814414: 803DD470 (now__14mDoMtx_stack_c)
//	80814420: 80346D6C (PSMTXMultVec)
//	8081444C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	80814450: 804061C0 (g_dComIfG_gameInfo)
//	80814454: 804061C0 (g_dComIfG_gameInfo)
//	80814460: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	808144A4: 800775F0 (__dt__11dBgS_GndChkFv)
//	808144B8: 800775F0 (__dt__11dBgS_GndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkBeforeGround() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkBeforeGround__8daE_YM_cFv.s"
}
#pragma pop


/* 808144D8-80814758 0280+00 s=1 e=0 z=0  None .text      checkInitialWall__8daE_YM_cFv                                */
//	808144E8: 803621CC (_savegpr_25)
//	808144F0: 80815994 (lit_3925)
//	808144F4: 80815994 (lit_3925)
//	80814510: 80077C68 (__ct__11dBgS_LinChkFv)
//	8081451C: 804061C0 (g_dComIfG_gameInfo)
//	80814520: 804061C0 (g_dComIfG_gameInfo)
//	80814544: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	80814558: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	80814564: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80814570: 80815D04 (__vt__8cM3dGPla)
//	80814574: 80815D04 (__vt__8cM3dGPla)
//	80814588: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	808145A8: 80347138 (PSVECSquareMag)
//	80814618: 80450AE0 (__float_nan)
//	8081461C: 80450AE0 (__float_nan)
//	80814688: 80450AE0 (__float_nan)
//	8081468C: 80450AE0 (__float_nan)
//	80814694: 80267674 (cM_atan2s__Fff)
//	808146A4: 803650D0 (abs)
//	808146D0: 80267674 (cM_atan2s__Fff)
//	808146F0: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	808146F4: 80815D04 (__vt__8cM3dGPla)
//	808146F8: 80815D04 (__vt__8cM3dGPla)
//	80814708: 80077CDC (__dt__11dBgS_LinChkFv)
//	80814710: 80815D04 (__vt__8cM3dGPla)
//	80814714: 80815D04 (__vt__8cM3dGPla)
//	8081473C: 80077CDC (__dt__11dBgS_LinChkFv)
//	80814744: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkInitialWall() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkInitialWall__8daE_YM_cFv.s"
}
#pragma pop


/* 80814758-80814AF0 0398+00 s=3 e=0 z=0  None .text      checkWall__8daE_YM_cFv                                       */
//	80814768: 803621DC (_savegpr_29)
//	80814770: 80815994 (lit_3925)
//	80814774: 80815994 (lit_3925)
//	80814790: 80077C68 (__ct__11dBgS_LinChkFv)
//	808147A8: 80077CDC (__dt__11dBgS_LinChkFv)
//	808147C4: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	808147E0: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	808147F4: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	808147F8: 804061C0 (g_dComIfG_gameInfo)
//	808147FC: 804061C0 (g_dComIfG_gameInfo)
//	8081480C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	80814818: 80815D04 (__vt__8cM3dGPla)
//	8081481C: 80815D04 (__vt__8cM3dGPla)
//	80814830: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	80814850: 80347138 (PSVECSquareMag)
//	808148C0: 80450AE0 (__float_nan)
//	808148C4: 80450AE0 (__float_nan)
//	80814930: 80450AE0 (__float_nan)
//	80814934: 80450AE0 (__float_nan)
//	8081493C: 80267674 (cM_atan2s__Fff)
//	8081494C: 803650D0 (abs)
//	80814978: 80267674 (cM_atan2s__Fff)
//	808149A4: 80347138 (PSVECSquareMag)
//	80814A14: 80450AE0 (__float_nan)
//	80814A18: 80450AE0 (__float_nan)
//	80814A84: 80450AE0 (__float_nan)
//	80814A88: 80450AE0 (__float_nan)
//	80814A90: 80267674 (cM_atan2s__Fff)
//	80814A9C: 80815D04 (__vt__8cM3dGPla)
//	80814AA0: 80815D04 (__vt__8cM3dGPla)
//	80814AB0: 80077CDC (__dt__11dBgS_LinChkFv)
//	80814ABC: 80815D04 (__vt__8cM3dGPla)
//	80814AC0: 80815D04 (__vt__8cM3dGPla)
//	80814AD0: 80077CDC (__dt__11dBgS_LinChkFv)
//	80814ADC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::checkWall() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/checkWall__8daE_YM_cFv.s"
}
#pragma pop


/* 80814AF0-80814BA4 00B4+00 s=1 e=0 z=0  None .text      setHideType__8daE_YM_cFv                                     */
//	80814B20: 80815D5C (m_near_obj)
//	80814B24: 80815D5C (m_near_obj)
//	80814B28: 80815994 (lit_3925)
//	80814B2C: 80815994 (lit_3925)
//	80814B30: 80815D60 (m_obj_dist)
//	80814B34: 80815D60 (m_obj_dist)
//	80814B38: 80808698 (s_obj_sub__FPvPv)
//	80814B3C: 80808698 (s_obj_sub__FPvPv)
//	80814B44: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	80814B48: 80815D5C (m_near_obj)
//	80814B4C: 80815D5C (m_near_obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::setHideType() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setHideType__8daE_YM_cFv.s"
}
#pragma pop


/* 80814BA4-80815224 0680+00 s=2 e=0 z=0  None .text      create__8daE_YM_cFv                                          */
//	80814BB4: 803621D4 (_savegpr_27)
//	80814BBC: 80815994 (lit_3925)
//	80814BC0: 80815994 (lit_3925)
//	80814BDC: 80018B64 (__ct__10fopAc_ac_cFv)
//	80814BE4: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	80814BEC: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80814BF8: 800760A0 (__ct__9dBgS_AcchFv)
//	80814BFC: 80815CD4 (__vt__12dBgS_ObjAcch)
//	80814C00: 80815CD4 (__vt__12dBgS_ObjAcch)
//	80814C1C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80814C20: 803C3728 (__vt__9cCcD_Stts)
//	80814C24: 803C3728 (__vt__9cCcD_Stts)
//	80814C30: 80083760 (__ct__10dCcD_GSttsFv)
//	80814C34: 803AC2E4 (__vt__9dCcD_Stts)
//	80814C38: 803AC2E4 (__vt__9dCcD_Stts)
//	80814C50: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80814C54: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80814C58: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80814C60: 80815CC8 (__vt__8cM3dGAab)
//	80814C64: 80815CC8 (__vt__8cM3dGAab)
//	80814C6C: 80815CBC (__vt__8cM3dGSph)
//	80814C70: 80815CBC (__vt__8cM3dGSph)
//	80814C78: 803C3540 (__vt__12cCcD_SphAttr)
//	80814C7C: 803C3540 (__vt__12cCcD_SphAttr)
//	80814C8C: 803ABFC0 (__vt__8dCcD_Sph)
//	80814C90: 803ABFC0 (__vt__8dCcD_Sph)
//	80814D74: 804061C0 (g_dComIfG_gameInfo)
//	80814D78: 804061C0 (g_dComIfG_gameInfo)
//	80814D84: 80035360 (isSwitch__10dSv_info_cCFii)
//	80814DEC: 80815AEC (stringBase0)
//	80814DF0: 80815AEC (stringBase0)
//	80814DF4: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80814E00: 80815AEC (stringBase0)
//	80814E04: 80815AEC (stringBase0)
//	80814E0C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80814E34: 80813E84 (useHeapInit__FP10fopAc_ac_c)
//	80814E38: 80813E84 (useHeapInit__FP10fopAc_ac_c)
//	80814E40: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80814E54: 80815D28 (data_80815D28)
//	80814E58: 80815D28 (data_80815D28)
//	80814E74: 80815D38 (l_HIO)
//	80814E78: 80815D38 (l_HIO)
//	80814EB0: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	80814EC4: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	80814EF0: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80814F0C: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	80814F2C: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	80814F34: 80815B3C (cc_sph_src__6E_YM_n)
//	80814F38: 80815B3C (cc_sph_src__6E_YM_n)
//	80814F3C: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80814F5C: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	80814F64: 80815AEC (stringBase0)
//	80814F68: 80815AEC (stringBase0)
//	80814F70: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	80814F98: 80815C28 (lit_9421)
//	80814F9C: 80815C28 (lit_9421)
//	80814FD0: 80809F9C (setActionMode__8daE_YM_cFi)
//	80814FDC: 808144D8 (checkInitialWall__8daE_YM_cFv)
//	80815000: 80809F9C (setActionMode__8daE_YM_cFi)
//	80815010: 80809F9C (setActionMode__8daE_YM_cFi)
//	80815028: 80809F9C (setActionMode__8daE_YM_cFi)
//	8081504C: 800517EC (dPath_GetRoomPath__Fii)
//	80815090: 80809F9C (setActionMode__8daE_YM_cFi)
//	808150C0: 80809F9C (setActionMode__8daE_YM_cFi)
//	808150FC: 80809F9C (setActionMode__8daE_YM_cFi)
//	80815118: 800517EC (dPath_GetRoomPath__Fii)
//	80815128: 80809F9C (setActionMode__8daE_YM_cFi)
//	8081512C: 804061C0 (g_dComIfG_gameInfo)
//	80815130: 804061C0 (g_dComIfG_gameInfo)
//	80815140: 80035360 (isSwitch__10dSv_info_cCFii)
//	80815160: 80809F9C (setActionMode__8daE_YM_cFi)
//	8081517C: 800517EC (dPath_GetRoomPath__Fii)
//	80815198: 800517EC (dPath_GetRoomPath__Fii)
//	808151C8: 80809F9C (setActionMode__8daE_YM_cFi)
//	80815204: 80813A10 (daE_YM_Execute__FP8daE_YM_c)
//	80815210: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_YM_c::create() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/create__8daE_YM_cFv.s"
}
#pragma pop


/* 80815224-8081526C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	8081523C: 80815CBC (__vt__8cM3dGSph)
//	80815240: 80815CBC (__vt__8cM3dGSph)
//	80815250: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 8081526C-808152B4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80815284: 80815CC8 (__vt__8cM3dGAab)
//	80815288: 80815CC8 (__vt__8cM3dGAab)
//	80815298: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 808152B4-80815310 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	808152CC: 80815CB0 (__vt__10dCcD_GStts)
//	808152D0: 80815CB0 (__vt__10dCcD_GStts)
//	808152DC: 80815CA4 (__vt__10cCcD_GStts)
//	808152E0: 80815CA4 (__vt__10cCcD_GStts)
//	808152F4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80815310-80815380 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80815330: 80815CD4 (__vt__12dBgS_ObjAcch)
//	80815334: 80815CD4 (__vt__12dBgS_ObjAcch)
//	80815350: 80075F94 (__dt__9dBgS_AcchFv)
//	80815360: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80815380-808153F0 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	808153A0: 80815C98 (__vt__12dBgS_AcchCir)
//	808153A4: 80815C98 (__vt__12dBgS_AcchCir)
//	808153B4: 8026EF18 (__dt__8cM3dGCirFv)
//	808153C0: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	808153D0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 808153F0-80815410 0020+00 s=1 e=0 z=0  None .text      daE_YM_Create__FP8daE_YM_c                                   */
//	808153FC: 80814BA4 (create__8daE_YM_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_YM_c* False
// 	 daE_YM_c False
asm static void daE_YM_Create(daE_YM_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/daE_YM_Create__FP8daE_YM_c.s"
}
#pragma pop


/* 80815410-80815458 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80815428: 80815CA4 (__vt__10cCcD_GStts)
//	8081542C: 80815CA4 (__vt__10cCcD_GStts)
//	8081543C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80815458-808154A0 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_YM_HIO_cFv                                       */
//	80815470: 80815D10 (__vt__12daE_YM_HIO_c)
//	80815474: 80815D10 (__vt__12daE_YM_HIO_c)
//	80815484: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_YM_HIO_c::~daE_YM_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__dt__12daE_YM_HIO_cFv.s"
}
#pragma pop


/* 808154A0-808154DC 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_ym_cpp                                         */
//	808154AC: 80815D38 (l_HIO)
//	808154B0: 80815D38 (l_HIO)
//	808154B4: 8080812C (__ct__12daE_YM_HIO_cFv)
//	808154B8: 80815458 (__dt__12daE_YM_HIO_cFv)
//	808154BC: 80815458 (__dt__12daE_YM_HIO_cFv)
//	808154C0: 80815D2C (lit_3941)
//	808154C4: 80815D2C (lit_3941)
//	808154C8: 808080B8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_ym_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__sinit_d_a_e_ym_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_808154A0 = (void*)__sinit_d_a_e_ym_cpp;
#pragma pop


/* 808154DC-808154E4 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	808154E0: 80815310 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_808154DC() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/func_808154DC.s"
}
#pragma pop


/* 808154E4-808154EC 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	808154E8: 80815310 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_808154E4() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/func_808154E4.s"
}
#pragma pop


/* 808154EC-80815900 0414+00 s=1 e=0 z=0  None .text      setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz */
//	808154FC: 803621B4 (_savegpr_19)
//	80815510: 80815B04 (cNullVec__6Z2Calc)
//	80815514: 80815B04 (cNullVec__6Z2Calc)
//	80815518: 80815994 (lit_3925)
//	8081551C: 80815994 (lit_3925)
//	80815520: 804061C0 (g_dComIfG_gameInfo)
//	80815524: 804061C0 (g_dComIfG_gameInfo)
//	8081552C: 80451018 (m_midnaActor__9daPy_py_c)
//	80815530: 80451018 (m_midnaActor__9daPy_py_c)
//	80815558: 801AC57C (dKy_darkworld_check__Fv)
//	8081557C: 80451018 (m_midnaActor__9daPy_py_c)
//	80815580: 80451018 (m_midnaActor__9daPy_py_c)
//	80815598: 803DD470 (now__14mDoMtx_stack_c)
//	8081559C: 803DD470 (now__14mDoMtx_stack_c)
//	808155A0: 803464B0 (PSMTXCopy)
//	808155B8: 803DD470 (now__14mDoMtx_stack_c)
//	808155BC: 803DD470 (now__14mDoMtx_stack_c)
//	808155C8: 80346D6C (PSMTXMultVec)
//	808155D8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	808155F4: 80267674 (cM_atan2s__Fff)
//	80815628: 80267674 (cM_atan2s__Fff)
//	80815644: 804061C0 (g_dComIfG_gameInfo)
//	80815648: 804061C0 (g_dComIfG_gameInfo)
//	80815698: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	808156A8: 80347138 (PSVECSquareMag)
//	80815718: 80450AE0 (__float_nan)
//	8081571C: 80450AE0 (__float_nan)
//	80815788: 80450AE0 (__float_nan)
//	8081578C: 80450AE0 (__float_nan)
//	808157E0: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8081581C: 804061C0 (g_dComIfG_gameInfo)
//	80815820: 804061C0 (g_dComIfG_gameInfo)
//	8081588C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	808158EC: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
asm static void setMidnaBindEffect(fopEn_enemy_c* param_0, Z2CreatureEnemy* param_1, cXyz* param_2, cXyz* param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz.s"
}
#pragma pop


/* 80815900-8081593C 003C+00 s=1 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	80815920: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/__dt__4cXyzFv.s"
}
#pragma pop


/* 8081593C-80815958 001C+00 s=2 e=0 z=0  None .text      getLeftHandPos__9daPy_py_cCFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daPy_py_c::getLeftHandPos() const {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/getLeftHandPos__9daPy_py_cCFv.s"
}
#pragma pop


/* 80815958-80815980 0028+00 s=1 e=0 z=0  None .text      getPos__13daTag_FWall_cFUc                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void daTag_FWall_c::getPos(u8 param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym/d_a_e_ym/getPos__13daTag_FWall_cFUc.s"
}
#pragma pop


