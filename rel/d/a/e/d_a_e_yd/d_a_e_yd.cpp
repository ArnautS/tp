// 
// Generated By: dol2asm
// Translation Unit: d_a_e_yd
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_yd/d_a_e_yd.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct J3DAnmTevRegKey {
};

struct J3DMaterialTable {
};

struct mDoExt_brkAnm {
	/* 8000D70C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct Vec {
};

struct mDoExt_McaMorf {
	/* 8001037C */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  void* False
// 	 void False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32, void*);
	/* 800105C8 */ // False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
void play(Vec*, u32, s8);
};

struct mDoExt_3DlineMat_c {
};

struct mDoExt_3DlineMatSortPacket {
	/* 80014738 */ // False False
//  mDoExt_3DlineMat_c* False
// 	 mDoExt_3DlineMat_c False
void setMat(mDoExt_3DlineMat_c*);
};

struct _GXColor {
};

struct dKy_tevstr_c {
};

struct ResTIMG {
};

struct mDoExt_3DlineMat1_c {
	/* 80013360 */ // False False
//  u16 False
//  u16 False
//  ResTIMG* False
// 	 ResTIMG False
//  int False
void init(u16, u16, ResTIMG*, int);
	/* 80013FB0 */ // False False
//  int False
//  _GXColor& False
// 	 _GXColor False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void update(int, _GXColor&, dKy_tevstr_c*);
};

struct fopEn_enemy_c {
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 807F7480 */ // True False
cXyz();
	/* 807F79B0 */ // True False
~cXyz();
};

struct fopAcM_gc_c {
	/* 8001DCBC */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void gndCheck(cXyz const*);
};

struct e_yd_class {
};

struct daE_YD_HIO_c {
	/* 807F2C2C */ // True False
daE_YD_HIO_c();
	/* 807F74CC */ // True False
~daE_YD_HIO_c();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
	/* 807F747C */ // True False
csXyz();
	/* 807F7974 */ // True False
~csXyz();
};

struct dPa_control_c {
	struct level_c {
		/* 8004B8B4 */ // False False
//  u32 False
void forceOnEventMove(u32);
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 80084A78 */ // False False
//  cXyz& False
// 	 cXyz False
void StartCAt(cXyz&);
	/* 80084AC4 */ // False False
//  cXyz& False
// 	 cXyz False
void MoveCAt(cXyz&);
	/* 807F7240 */ // True False
dCcD_Sph();
	/* 807F72C4 */ // True False
~dCcD_Sph();
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 807F7420 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 800842C0 */ // False False
void ChkAtHit();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 807F7160 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 807F71D0 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 807F7390 */ // True False
~cM3dGSph();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 807F73D8 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
	/* 80263A48 */ // False False
void GetAc();
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 807F7484 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct _GXTexObj {
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C1B7C */ // False False
//  bool False
void setLinkSearch(bool);
	/* 802C1B90 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void setEnemyName(char const*);
};

struct JPABaseEmitter {
	/* 8027EC60 */ // False False
void deleteAllParticle();
};

struct JGeometry {
	template <typename A1>
	struct TVec3 { };
	/* TVec3<f32> */
	struct TVec3__template0 {
	};

};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
	/* 807F6C48 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  e_yd_class* False
// 	 e_yd_class False
static void yd_disappear(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void anm_init(e_yd_class*, int, f32, u8, f32);
// True False
//  e_yd_class* False
// 	 e_yd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void leaf_anm_init(e_yd_class*, int, f32, u8, f32);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void daE_YD_Draw(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
//  f32 False
static void pl_check(e_yd_class*, f32);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void damage_check(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void e_yd_stay(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void e_yd_appear(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void e_yd_appear_v(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void e_yd_wait(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void e_yd_attack(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void e_yd_chance(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void e_yd_s_damage(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void e_yd_damage(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void kuki_control1(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void kuki_control2(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void kuki_control3(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void kuki_ha_set(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void action(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void eff_set(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void anm_se_set(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void daE_YD_Execute(e_yd_class*);
// True False
//  bool False
//  e_yd_class* False
// 	 e_yd_class False
static bool daE_YD_IsDelete(e_yd_class*);
// True False
//  e_yd_class* False
// 	 e_yd_class False
static void daE_YD_Delete(e_yd_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daE_YD_Create(fopAc_ac_c*);
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
static void setMidnaBindEffect(fopEn_enemy_c*, Z2CreatureEnemy*, cXyz*, cXyz*);

// True False
extern "C" void __ct__12daE_YD_HIO_cFv();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void yd_disappear__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void anm_init__FP10e_yd_classifUcf();
// True False
//  e_yd_class* False
// 	 e_yd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void leaf_anm_init__FP10e_yd_classifUcf();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void daE_YD_Draw__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
//  f32 False
extern "C" static void pl_check__FP10e_yd_classf();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void damage_check__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void e_yd_stay__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void e_yd_appear__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void e_yd_appear_v__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void e_yd_wait__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void e_yd_attack__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void e_yd_chance__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void e_yd_s_damage__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void e_yd_damage__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void kuki_control1__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void kuki_control2__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void kuki_control3__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void kuki_ha_set__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void action__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void eff_set__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void anm_se_set__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void daE_YD_Execute__FP10e_yd_class();
// True False
//  bool False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static bool daE_YD_IsDelete__FP10e_yd_class();
// True False
//  e_yd_class* False
// 	 e_yd_class False
extern "C" static void daE_YD_Delete__FP10e_yd_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daE_YD_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __ct__8dCcD_SphFv();
// True False
extern "C" void __dt__8dCcD_SphFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__12daE_YD_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_yd_cpp();
// True False
extern "C" static void func_807F7550();
// True False
extern "C" static void func_807F7558();
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" static void setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __dt__4cXyzFv();
extern "C" extern u8 const lit_3791[8];
extern "C" extern u8 const lit_3792[8];
extern "C" extern u8 const lit_3793[8];
extern "C" extern u32 const lit_3794;
extern "C" extern u32 const lit_3870;
extern "C" extern u32 const lit_3949;
extern "C" extern u32 const lit_3950;
extern "C" extern u32 const lit_4075;
extern "C" extern u32 const lit_4076;
extern "C" extern u32 const lit_4077;
extern "C" extern u32 const lit_4078;
extern "C" extern u32 const lit_4079;
extern "C" extern u32 const lit_4080;
extern "C" extern u32 const lit_4081;
extern "C" extern u32 const lit_4082;
extern "C" extern u32 const lit_4083;
extern "C" extern u32 const lit_4084;
extern "C" extern u32 const lit_4118;
extern "C" extern u32 const lit_4149;
extern "C" extern u32 const lit_4150;
extern "C" extern u32 const lit_4151;
extern "C" extern u32 const lit_4152;
extern "C" extern u32 const lit_4153;
extern "C" extern u32 const lit_4246;
extern "C" extern u32 const lit_4247;
extern "C" extern u32 const lit_4248;
extern "C" extern u32 const lit_4249;
extern "C" extern u32 const lit_4250;
extern "C" extern u32 const lit_4445;
extern "C" extern u32 const lit_4446;
extern "C" extern u32 const lit_4447;
extern "C" extern u32 const lit_4448;
extern "C" extern u32 const lit_4449;
extern "C" extern u32 const lit_4450;
extern "C" extern u32 const lit_4451;
extern "C" extern u32 const lit_4504;
extern "C" extern u32 const lit_4505;
extern "C" extern u32 const lit_4550;
extern "C" extern u32 const lit_4551;
extern "C" extern u32 const lit_4628;
extern "C" extern u32 const lit_4629;
extern "C" extern u32 const lit_4630;
extern "C" extern u32 const lit_4709;
extern "C" extern u32 const lit_4710;
extern "C" extern u32 const lit_4861;
extern "C" extern u32 const lit_4862;
extern "C" extern u32 const lit_4863;
extern "C" extern u32 const lit_4864;
extern "C" extern u32 const lit_5003;
extern "C" extern u32 const lit_5004;
extern "C" extern u32 const lit_5005;
extern "C" extern u32 const lit_5006;
extern "C" extern u32 const lit_5167;
extern "C" extern u32 const lit_5168;
extern "C" extern u32 const lit_5238;
extern "C" extern u32 const lit_5468;
extern "C" extern u32 const lit_5469;
extern "C" extern u32 const lit_5470;
extern "C" extern u32 const lit_5471;
extern "C" extern u32 const lit_5472[1 + 1 /* padding */];
extern "C" extern u8 const lit_5474[8];
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_807F7B58[8];
extern "C" extern u8 data_807F7B60[8];
extern "C" extern u8 data_807F7B68[6 + 2 /* padding */];
extern "C" extern u8 data_807F7BC4[64];
extern "C" extern u8 data_807F7C04[64];
extern "C" extern u8 data_807F7C44[64];
extern "C" extern void* g_profile_E_YD[12];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__18mDoExt_3DlineMat_c[5];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12daE_YD_HIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
void fopAcM_createChild(s16, unsigned int, u32, cXyz const*, int, csXyz const*, cXyz const*, s8, int (*)(void*));
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  u8 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32* False
// 	 f32 False
//  f32* False
// 	 f32 False
void fopAcM_createItemFromEnemyID(u8, cXyz const*, int, int, csXyz const*, cXyz const*, f32*, f32*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_otherBgCheck(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeByID(void*, void*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void def_se_set(Z2Creature*, cCcD_Obj*, u32, fopAc_ac_c*);
// False False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void at_power_check(dCcU_AtInfo*);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void MtxScale(f32, f32, f32, u8);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void MtxPosition(cXyz*, cXyz*);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxSTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*, JGeometry::TVec3__template0*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  void* False
// 	 void False
extern "C" void setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv();
// False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
extern "C" void play__14mDoExt_McaMorfFP3VecUlSc();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  u16 False
//  u16 False
//  ResTIMG* False
// 	 ResTIMG False
//  int False
extern "C" void init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi();
// False False
//  int False
//  _GXColor& False
// 	 _GXColor False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c();
// False False
//  mDoExt_3DlineMat_c* False
// 	 mDoExt_3DlineMat_c False
extern "C" void setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  u8 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32* False
// 	 f32 False
//  f32* False
// 	 f32 False
extern "C" void fopAcM_createItemFromEnemyID__FUcPC4cXyziiPC5csXyzPC4cXyzPfPf();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeByID__FPvPv();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
extern "C" void forceOnEventMove__Q213dPa_control_c7level_cFUl();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkAtHit__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void StartCAt__8dCcD_SphFR4cXyz();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void MoveCAt__8dCcD_SphFR4cXyz();
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c();
// False False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void at_power_check__FP11dCcU_AtInfo();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
extern "C" void GetAc__8cCcD_ObjFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void MtxScale__FfffUc();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void MtxPosition__FP4cXyzP4cXyz();
// False False
extern "C" void deleteAllParticle__14JPABaseEmitterFv();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_802807E0();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_80280808();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  bool False
extern "C" void setLinkSearch__15Z2CreatureEnemyFb();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void setEnemyName__15Z2CreatureEnemyFPCc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSubtract();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* __vt__19mDoExt_3DlineMat1_c[5];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mGndCheck__11fopAcM_gc_c[84];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
extern "C" extern u8 struct_80451124[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 807F7A00-807F7A04 0004+00 s=17 e=0 z=0  None .rodata    @3788                                                        */
SECTION_RODATA static u32 const lit_3788 = 0x42C80000;

/* 807F7A04-807F7A08 0004+00 s=4 e=0 z=0  None .rodata    @3789                                                        */
SECTION_RODATA static u8 const lit_3789[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 807F7A08-807F7A10 0004+04 s=3 e=0 z=0  None .rodata    @3790                                                        */
SECTION_RODATA static u32 const lit_3790[1 + 1 /* padding */] = {
	0x3F800000,
	/* padding */
	0x00000000,
};

/* 807F7A10-807F7A18 0008+00 s=0 e=0 z=0  None .rodata    @3791                                                        */
SECTION_RODATA u8 const lit_3791[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807F7A18-807F7A20 0008+00 s=0 e=0 z=0  None .rodata    @3792                                                        */
SECTION_RODATA u8 const lit_3792[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807F7A20-807F7A28 0008+00 s=0 e=0 z=0  None .rodata    @3793                                                        */
SECTION_RODATA u8 const lit_3793[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807F7A28-807F7A2C 0004+00 s=0 e=0 z=0  None .rodata    @3794                                                        */
SECTION_RODATA u32 const lit_3794 = 0x3C23D70A;

/* 807F7A2C-807F7A30 0004+00 s=1 e=0 z=0  None .rodata    @3809                                                        */
SECTION_RODATA static u32 const lit_3809 = 0x3F000000;

/* 807F7B38-807F7B44 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807F7B44-807F7B58 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 807F7B58-807F7B60 0008+00 s=0 e=0 z=0  None .data      e_prim$3667                                                  */
SECTION_DATA u8 data_807F7B58[8] = {
	0xFF, 0x78, 0x00, 0x00, 0xFF, 0x64, 0x78, 0x00,
};

/* 807F7B60-807F7B68 0008+00 s=0 e=0 z=0  None .data      e_env$3668                                                   */
SECTION_DATA u8 data_807F7B60[8] = {
	0x5A, 0x2D, 0x2D, 0x00, 0x3C, 0x1E, 0x1E, 0x00,
};

/* 807F7B68-807F7B70 0006+02 s=0 e=0 z=0  None .data      eff_id$3676                                                  */
SECTION_DATA u8 data_807F7B68[6 + 2 /* padding */] = {
	0x02, 0x9D, 0x02, 0x9E, 0x02, 0x9F,
	/* padding */
	0x00, 0x00,
};

/* 807F7B70-807F7B74 0004+00 s=1 e=0 z=0  None .data      l_color$3890                                                 */
SECTION_DATA static u8 l_color[4] = {
	0x14, 0x0F, 0x00, 0xFF,
};

/* 807F7B74-807F7B8C 0016+02 s=1 e=0 z=0  None .data      pow_xa$4634                                                  */
SECTION_DATA static u8 pow_xa[22 + 2 /* padding */] = {
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x20, 0x00, 0x30, 0x00, 0x40, 0x00, 0x30, 0x00, 0x20, 0x00,
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 807F7B8C-807F7BB0 0024+00 s=1 e=0 z=0  None .data      @5007                                                        */
SECTION_DATA static void* lit_5007[9] = {
	(void*)(((char*)action__FP10e_yd_class)+0x1CC),
	(void*)(((char*)action__FP10e_yd_class)+0x1E0),
	(void*)(((char*)action__FP10e_yd_class)+0x200),
	(void*)(((char*)action__FP10e_yd_class)+0x220),
	(void*)(((char*)action__FP10e_yd_class)+0x240),
	(void*)(((char*)action__FP10e_yd_class)+0x2AC),
	(void*)(((char*)action__FP10e_yd_class)+0x260),
	(void*)(((char*)action__FP10e_yd_class)+0x280),
	(void*)(((char*)action__FP10e_yd_class)+0x2A0),
};

/* 807F7BB0-807F7BB8 0006+02 s=1 e=0 z=0  None .data      p_name$5015                                                  */
SECTION_DATA static u8 p_name[6 + 2 /* padding */] = {
	0x88, 0x11, 0x88, 0x12, 0x88, 0x13,
	/* padding */
	0x00, 0x00,
};

/* 807F7BB8-807F7BC4 000C+00 s=1 e=0 z=0  None .data      p_idx$5016                                                   */
SECTION_DATA static u8 p_idx[12] = {
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06,
};

/* 807F7BC4-807F7C04 0040+00 s=0 e=0 z=0  None .data      cc_sph_src$5344                                              */
SECTION_DATA u8 data_807F7BC4[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 807F7C04-807F7C44 0040+00 s=0 e=0 z=0  None .data      at_sph_src$5345                                              */
SECTION_DATA u8 data_807F7C04[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
};

/* 807F7C44-807F7C84 0040+00 s=0 e=0 z=0  None .data      kuki_sph_src$5346                                            */
SECTION_DATA u8 data_807F7C44[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
};

/* 807F7C84-807F7CA4 0020+00 s=1 e=0 z=0  None .data      l_daE_YD_Method                                              */
SECTION_DATA static void* l_daE_YD_Method[8] = {
	(void*)daE_YD_Create__FP10fopAc_ac_c,
	(void*)daE_YD_Delete__FP10e_yd_class,
	(void*)daE_YD_Execute__FP10e_yd_class,
	(void*)daE_YD_IsDelete__FP10e_yd_class,
	(void*)daE_YD_Draw__FP10e_yd_class,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 807F7CA4-807F7CD4 0030+00 s=0 e=0 z=1  None .data      g_profile_E_YD                                               */
SECTION_DATA void* g_profile_E_YD[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01CC0000,
	(void*)&g_fpcLf_Method,
	(void*)0x0000126C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x008F0000,
	(void*)&l_daE_YD_Method,
	(void*)0x10050100,
	(void*)0x020E0000,
};

/* 807F7CD4-807F7CE0 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 807F7CE0-807F7CEC 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 807F7CEC-807F7CF8 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 807F7CF8-807F7D1C 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_807F7558,
	(void*)NULL,
	(void*)NULL,
	(void*)func_807F7550,
};

/* 807F7D1C-807F7D28 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 807F7D28-807F7D34 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 807F7D34-807F7D48 0014+00 s=1 e=0 z=0  None .data      __vt__18mDoExt_3DlineMat_c                                   */
SECTION_DATA void* __vt__18mDoExt_3DlineMat_c[5] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 807F7D48-807F7D54 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 807F7D54-807F7D60 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_YD_HIO_c                                         */
SECTION_DATA void* __vt__12daE_YD_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_YD_HIO_cFv,
};

/* 807F2C2C-807F2C78 004C+00 s=1 e=0 z=0  None .text      __ct__12daE_YD_HIO_cFv                                       */
//	807F2C2C: 807F7D54 (__vt__12daE_YD_HIO_c)
//	807F2C30: 807F7D54 (__vt__12daE_YD_HIO_c)
//	807F2C40: 807F7A08 (lit_3790)
//	807F2C44: 807F7A08 (lit_3790)
//	807F2C4C: 807F7A2C (lit_3809)
//	807F2C50: 807F7A2C (lit_3809)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_YD_HIO_c::daE_YD_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__ct__12daE_YD_HIO_cFv.s"
}
#pragma pop


/* 807F2C78-807F2E20 01A8+00 s=1 e=0 z=0  None .text      yd_disappear__FP10e_yd_class                                 */
//	807F2C88: 803621D4 (_savegpr_27)
//	807F2C90: 807F7A00 (lit_3788)
//	807F2C94: 807F7A00 (lit_3788)
//	807F2CA8: 804061C0 (g_dComIfG_gameInfo)
//	807F2CAC: 804061C0 (g_dComIfG_gameInfo)
//	807F2CF4: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807F2D3C: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807F2D48: 8002D06C (dComIfGp_getReverb__Fi)
//	807F2D5C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	807F2D60: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	807F2D88: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	807F2DAC: 8001BE14 (fopAcM_createItemFromEnemyID__FUcPC4cXyziiPC5csXyzPC4cXyzPfPf)
//	807F2DB4: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	807F2DD8: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	807F2DE4: 8027EC60 (deleteAllParticle__14JPABaseEmitterFv)
//	807F2DF4: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	807F2E0C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void yd_disappear(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/yd_disappear__FP10e_yd_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 807F7A30-807F7A34 0004+00 s=0 e=0 z=0  None .rodata    @3870                                                        */
SECTION_RODATA u32 const lit_3870 = 0x3FC00000;

/* 807F7A34-807F7A38 0004+00 s=2 e=0 z=0  None .rodata    @3871                                                        */
SECTION_RODATA static u32 const lit_3871 = 0xBF800000;

/* 807F7A38-807F7A3C 0004+00 s=0 e=0 z=0  None .rodata    @3949                                                        */
SECTION_RODATA u32 const lit_3949 = 0x42480000;

/* 807F7A3C-807F7A40 0004+00 s=0 e=0 z=0  None .rodata    @3950                                                        */
SECTION_RODATA u32 const lit_3950 = 0x44160000;

/* 807F7A40-807F7A44 0004+00 s=0 e=0 z=0  None .rodata    @4075                                                        */
SECTION_RODATA u32 const lit_4075 = 0x41200000;

/* 807F7A44-807F7A48 0004+00 s=0 e=0 z=0  None .rodata    @4076                                                        */
SECTION_RODATA u32 const lit_4076 = 0xC32A0000;

/* 807F7A48-807F7A4C 0004+00 s=0 e=0 z=0  None .rodata    @4077                                                        */
SECTION_RODATA u32 const lit_4077 = 0x432A0000;

/* 807F7A4C-807F7A50 0004+00 s=0 e=0 z=0  None .rodata    @4078                                                        */
SECTION_RODATA u32 const lit_4078 = 0x3E4CCCCD;

/* 807F7A50-807F7A54 0004+00 s=0 e=0 z=0  None .rodata    @4079                                                        */
SECTION_RODATA u32 const lit_4079 = 0x3DCCCCCD;

/* 807F7A54-807F7A58 0004+00 s=0 e=0 z=0  None .rodata    @4080                                                        */
SECTION_RODATA u32 const lit_4080 = 0x41A00000;

/* 807F7A58-807F7A5C 0004+00 s=0 e=0 z=0  None .rodata    @4081                                                        */
SECTION_RODATA u32 const lit_4081 = 0x40800000;

/* 807F7A5C-807F7A60 0004+00 s=0 e=0 z=0  None .rodata    @4082                                                        */
SECTION_RODATA u32 const lit_4082 = 0x3ECCCCCD;

/* 807F7A60-807F7A64 0004+00 s=0 e=0 z=0  None .rodata    @4083                                                        */
SECTION_RODATA u32 const lit_4083 = 0x3CA3D70A;

/* 807F7A64-807F7A68 0004+00 s=0 e=0 z=0  None .rodata    @4084                                                        */
SECTION_RODATA u32 const lit_4084 = 0x3D4CCCCD;

/* 807F7A68-807F7A6C 0004+00 s=0 e=0 z=0  None .rodata    @4118                                                        */
SECTION_RODATA u32 const lit_4118 = 0x41F00000;

/* 807F7A6C-807F7A70 0004+00 s=1 e=0 z=0  None .rodata    @4148                                                        */
SECTION_RODATA static u32 const lit_4148 = 0x40A00000;

/* 807F7A70-807F7A74 0004+00 s=0 e=0 z=0  None .rodata    @4149                                                        */
SECTION_RODATA u32 const lit_4149 = 0x41700000;

/* 807F7A74-807F7A78 0004+00 s=0 e=0 z=0  None .rodata    @4150                                                        */
SECTION_RODATA u32 const lit_4150 = 0x42700000;

/* 807F7A78-807F7A7C 0004+00 s=0 e=0 z=0  None .rodata    @4151                                                        */
SECTION_RODATA u32 const lit_4151 = 0x42200000;

/* 807F7A7C-807F7A80 0004+00 s=0 e=0 z=0  None .rodata    @4152                                                        */
SECTION_RODATA u32 const lit_4152 = 0x43C80000;

/* 807F7A80-807F7A84 0004+00 s=0 e=0 z=0  None .rodata    @4153                                                        */
SECTION_RODATA u32 const lit_4153 = 0x3E19999A;

/* 807F7A84-807F7A88 0004+00 s=0 e=0 z=0  None .rodata    @4246                                                        */
SECTION_RODATA u32 const lit_4246 = 0x3F400000;

/* 807F7A88-807F7A8C 0004+00 s=0 e=0 z=0  None .rodata    @4247                                                        */
SECTION_RODATA u32 const lit_4247 = 0x42B40000;

/* 807F7A8C-807F7A90 0004+00 s=0 e=0 z=0  None .rodata    @4248                                                        */
SECTION_RODATA u32 const lit_4248 = 0xC2C80000;

/* 807F7A90-807F7A94 0004+00 s=0 e=0 z=0  None .rodata    @4249                                                        */
SECTION_RODATA u32 const lit_4249 = 0x3E99999A;

/* 807F7A94-807F7A98 0004+00 s=0 e=0 z=0  None .rodata    @4250                                                        */
SECTION_RODATA u32 const lit_4250 = 0x442F0000;

/* 807F7A98-807F7AA0 0008+00 s=1 e=0 z=0  None .rodata    @4252                                                        */
SECTION_RODATA static u8 const lit_4252[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 807F7AA0-807F7AA4 0004+00 s=0 e=0 z=0  None .rodata    @4445                                                        */
SECTION_RODATA u32 const lit_4445 = 0x43AF0000;

/* 807F7AA4-807F7AA8 0004+00 s=0 e=0 z=0  None .rodata    @4446                                                        */
SECTION_RODATA u32 const lit_4446 = 0x3F4CCCCD;

/* 807F7AA8-807F7AAC 0004+00 s=0 e=0 z=0  None .rodata    @4447                                                        */
SECTION_RODATA u32 const lit_4447 = 0x40000000;

/* 807F7AAC-807F7AB0 0004+00 s=0 e=0 z=0  None .rodata    @4448                                                        */
SECTION_RODATA u32 const lit_4448 = 0x44FA0000;

/* 807F7AB0-807F7AB4 0004+00 s=0 e=0 z=0  None .rodata    @4449                                                        */
SECTION_RODATA u32 const lit_4449 = 0x428C0000;

/* 807F7AB4-807F7AB8 0004+00 s=0 e=0 z=0  None .rodata    @4450                                                        */
SECTION_RODATA u32 const lit_4450 = 0xC2480000;

/* 807F7AB8-807F7ABC 0004+00 s=0 e=0 z=0  None .rodata    @4451                                                        */
SECTION_RODATA u32 const lit_4451 = 0x43480000;

/* 807F7ABC-807F7AC0 0004+00 s=0 e=0 z=0  None .rodata    @4504                                                        */
SECTION_RODATA u32 const lit_4504 = 0x43660000;

/* 807F7AC0-807F7AC4 0004+00 s=0 e=0 z=0  None .rodata    @4505                                                        */
SECTION_RODATA u32 const lit_4505 = 0x40400000;

/* 807F7AC4-807F7AC8 0004+00 s=0 e=0 z=0  None .rodata    @4550                                                        */
SECTION_RODATA u32 const lit_4550 = 0x437A0000;

/* 807F7AC8-807F7ACC 0004+00 s=0 e=0 z=0  None .rodata    @4551                                                        */
SECTION_RODATA u32 const lit_4551 = 0x3F6B851F;

/* 807F7ACC-807F7AD0 0004+00 s=0 e=0 z=0  None .rodata    @4628                                                        */
SECTION_RODATA u32 const lit_4628 = 0xC1A00000;

/* 807F7AD0-807F7AD4 0004+00 s=0 e=0 z=0  None .rodata    @4629                                                        */
SECTION_RODATA u32 const lit_4629 = 0x43E10000;

/* 807F7AD4-807F7AD8 0004+00 s=0 e=0 z=0  None .rodata    @4630                                                        */
SECTION_RODATA u32 const lit_4630 = 0xBDCCCCCD;

/* 807F7AD8-807F7ADC 0004+00 s=0 e=0 z=0  None .rodata    @4709                                                        */
SECTION_RODATA u32 const lit_4709 = 0xC1F00000;

/* 807F7ADC-807F7AE0 0004+00 s=0 e=0 z=0  None .rodata    @4710                                                        */
SECTION_RODATA u32 const lit_4710 = 0xC3480000;

/* 807F7AE0-807F7AE4 0004+00 s=1 e=0 z=0  None .rodata    @4765                                                        */
SECTION_RODATA static u32 const lit_4765 = 0x41300000;

/* 807F7AE4-807F7AE8 0004+00 s=0 e=0 z=0  None .rodata    @4861                                                        */
SECTION_RODATA u32 const lit_4861 = 0xC1200000;

/* 807F7AE8-807F7AEC 0004+00 s=0 e=0 z=0  None .rodata    @4862                                                        */
SECTION_RODATA u32 const lit_4862 = 0x461C4000;

/* 807F7AEC-807F7AF0 0004+00 s=0 e=0 z=0  None .rodata    @4863                                                        */
SECTION_RODATA u32 const lit_4863 = 0x47800000;

/* 807F7AF0-807F7AF4 0004+00 s=0 e=0 z=0  None .rodata    @4864                                                        */
SECTION_RODATA u32 const lit_4864 = 0xC0A00000;

/* 807F7AF4-807F7AF8 0004+00 s=0 e=0 z=0  None .rodata    @5003                                                        */
SECTION_RODATA u32 const lit_5003 = 0x41C80000;

/* 807F7AF8-807F7AFC 0004+00 s=0 e=0 z=0  None .rodata    @5004                                                        */
SECTION_RODATA u32 const lit_5004 = 0xC6EA6000;

/* 807F7AFC-807F7B00 0004+00 s=0 e=0 z=0  None .rodata    @5005                                                        */
SECTION_RODATA u32 const lit_5005 = 0x48927C00;

/* 807F7B00-807F7B04 0004+00 s=0 e=0 z=0  None .rodata    @5006                                                        */
SECTION_RODATA u32 const lit_5006 = 0x46EA6000;

/* 807F7B04-807F7B08 0004+00 s=0 e=0 z=0  None .rodata    @5167                                                        */
SECTION_RODATA u32 const lit_5167 = 0x41B00000;

/* 807F7B08-807F7B0C 0004+00 s=0 e=0 z=0  None .rodata    @5168                                                        */
SECTION_RODATA u32 const lit_5168 = 0x41A80000;

/* 807F7B0C-807F7B10 0004+00 s=0 e=0 z=0  None .rodata    @5238                                                        */
SECTION_RODATA u32 const lit_5238 = 0xC69C4000;

/* 807F7B10-807F7B14 0004+00 s=0 e=0 z=0  None .rodata    @5468                                                        */
SECTION_RODATA u32 const lit_5468 = 0x43FA0000;

/* 807F7B14-807F7B18 0004+00 s=0 e=0 z=0  None .rodata    @5469                                                        */
SECTION_RODATA u32 const lit_5469 = 0xC3960000;

/* 807F7B18-807F7B1C 0004+00 s=0 e=0 z=0  None .rodata    @5470                                                        */
SECTION_RODATA u32 const lit_5470 = 0xC3C80000;

/* 807F7B1C-807F7B20 0004+00 s=0 e=0 z=0  None .rodata    @5471                                                        */
SECTION_RODATA u32 const lit_5471 = 0x43960000;

/* 807F7B20-807F7B28 0004+04 s=0 e=0 z=0  None .rodata    @5472                                                        */
SECTION_RODATA u32 const lit_5472[1 + 1 /* padding */] = {
	0x477FFF00,
	/* padding */
	0x00000000,
};

/* 807F7B28-807F7B30 0008+00 s=0 e=0 z=0  None .rodata    @5474                                                        */
SECTION_RODATA u8 const lit_5474[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807F7B30-807F7B35 0005+00 s=5 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_807F7B30 = "E_yd";
#pragma pop

/* 807F2E20-807F2ECC 00AC+00 s=8 e=0 z=0  None .text      anm_init__FP10e_yd_classifUcf                                */
//	807F2E40: 803621DC (_savegpr_29)
//	807F2E58: 807F7B30 (stringBase0)
//	807F2E5C: 807F7B30 (stringBase0)
//	807F2E60: 804061C0 (g_dComIfG_gameInfo)
//	807F2E64: 804061C0 (g_dComIfG_gameInfo)
//	807F2E74: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807F2E8C: 807F7A04 (lit_3789)
//	807F2E90: 807F7A04 (lit_3789)
//	807F2E94: 807F7A34 (lit_3871)
//	807F2E98: 807F7A34 (lit_3871)
//	807F2E9C: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	807F2EB8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void anm_init(e_yd_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/anm_init__FP10e_yd_classifUcf.s"
}
#pragma pop


/* 807F2ECC-807F2FA4 00D8+00 s=8 e=0 z=0  None .text      leaf_anm_init__FP10e_yd_classifUcf                           */
//	807F2EEC: 803621DC (_savegpr_29)
//	807F2F08: 80023590 (fpcSch_JudgeByID__FPvPv)
//	807F2F0C: 80023590 (fpcSch_JudgeByID__FPvPv)
//	807F2F14: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	807F2F20: 807F7B30 (stringBase0)
//	807F2F24: 807F7B30 (stringBase0)
//	807F2F2C: 804061C0 (g_dComIfG_gameInfo)
//	807F2F30: 804061C0 (g_dComIfG_gameInfo)
//	807F2F40: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807F2F58: 807F7A04 (lit_3789)
//	807F2F5C: 807F7A04 (lit_3789)
//	807F2F60: 807F7A34 (lit_3871)
//	807F2F64: 807F7A34 (lit_3871)
//	807F2F6C: 8001037C (setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv)
//	807F2F90: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void leaf_anm_init(e_yd_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/leaf_anm_init__FP10e_yd_classifUcf.s"
}
#pragma pop


/* 807F2FA4-807F3168 01C4+00 s=1 e=0 z=0  None .text      daE_YD_Draw__FP10e_yd_class                                  */
//	807F2FB4: 803621C8 (_savegpr_24)
//	807F2FBC: 807F7A00 (lit_3788)
//	807F2FC0: 807F7A00 (lit_3788)
//	807F2FC4: 8042CA54 (g_env_light)
//	807F2FC8: 8042CA54 (g_env_light)
//	807F2FD8: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	807F2FDC: 804061C0 (g_dComIfG_gameInfo)
//	807F2FE0: 804061C0 (g_dComIfG_gameInfo)
//	807F2FE8: 80434AC8 (j3dSys)
//	807F2FEC: 80434AC8 (j3dSys)
//	807F3004: 8042CA54 (g_env_light)
//	807F3008: 8042CA54 (g_env_light)
//	807F3014: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	807F3028: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	807F3030: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	807F303C: 807F7B70 (l_color)
//	807F3040: 807F7B70 (l_color)
//	807F3048: 80013FB0 (update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c)
//	807F3064: 804061C0 (g_dComIfG_gameInfo)
//	807F3068: 804061C0 (g_dComIfG_gameInfo)
//	807F3080: 80014738 (setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c)
//	807F308C: 8042CA54 (g_env_light)
//	807F3090: 8042CA54 (g_env_light)
//	807F30B0: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	807F30B8: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	807F30CC: 804061C0 (g_dComIfG_gameInfo)
//	807F30D0: 804061C0 (g_dComIfG_gameInfo)
//	807F311C: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	807F3120: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	807F3124: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	807F3128: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	807F313C: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	807F3140: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	807F3144: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	807F3154: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void daE_YD_Draw(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/daE_YD_Draw__FP10e_yd_class.s"
}
#pragma pop


/* 807F3168-807F31C0 0058+00 s=2 e=0 z=0  None .text      pl_check__FP10e_yd_classf                                    */
//	807F3174: 804061C0 (g_dComIfG_gameInfo)
//	807F3178: 804061C0 (g_dComIfG_gameInfo)
//	807F3198: 8001CDFC (fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
//  f32 False
asm static void pl_check(e_yd_class* param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/pl_check__FP10e_yd_classf.s"
}
#pragma pop


/* 807F31C0-807F342C 026C+00 s=1 e=0 z=0  None .text      damage_check__FP10e_yd_class                                 */
//	807F31D0: 803621CC (_savegpr_25)
//	807F31D8: 804061C0 (g_dComIfG_gameInfo)
//	807F31DC: 804061C0 (g_dComIfG_gameInfo)
//	807F31F4: 80083830 (Move__10dCcD_GSttsFv)
//	807F3238: 807F7A04 (lit_3789)
//	807F323C: 807F7A04 (lit_3789)
//	807F3244: 807F7A08 (lit_3790)
//	807F3248: 807F7A08 (lit_3790)
//	807F3254: 804061C0 (g_dComIfG_gameInfo)
//	807F3258: 804061C0 (g_dComIfG_gameInfo)
//	807F326C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	807F328C: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	807F32A4: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	807F32DC: 80087A58 (at_power_check__FP11dCcU_AtInfo)
//	807F3338: 80087514 (def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c)
//	807F3364: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	807F3374: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	807F3380: 80263A48 (GetAc__8cCcD_ObjFv)
//	807F33E8: 80087514 (def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c)
//	807F33F8: 807F2C78 (yd_disappear__FP10e_yd_class)
//	807F340C: 80451125 (struct_80451124)
//	807F3410: 80451125 (struct_80451124)
//	807F3418: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void damage_check(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/damage_check__FP10e_yd_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 807F7D68-807F7D6C 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_807F7D68[4];

/* 807F7D6C-807F7D78 000C+00 s=1 e=0 z=0  None .bss       @3804                                                        */
static u8 lit_3804[12];

/* 807F7D78-807F7D94 001C+00 s=9 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[28];

/* 807F342C-807F3784 0358+00 s=1 e=0 z=0  None .text      e_yd_stay__FP10e_yd_class                                    */
//	807F3444: 807F7A00 (lit_3788)
//	807F3448: 807F7A00 (lit_3788)
//	807F349C: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F34B4: 807F2ECC (leaf_anm_init__FP10e_yd_classifUcf)
//	807F3520: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3544: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3560: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3574: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3584: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807F35AC: 80347138 (PSVECSquareMag)
//	807F361C: 80450AE0 (__float_nan)
//	807F3620: 80450AE0 (__float_nan)
//	807F368C: 80450AE0 (__float_nan)
//	807F3690: 80450AE0 (__float_nan)
//	807F36AC: 8026FA80 (cLib_addCalc0__FPfff)
//	807F36CC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F36E4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F36F8: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3700: 807F7D78 (l_HIO)
//	807F3704: 807F7D78 (l_HIO)
//	807F3714: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3738: 807F3168 (pl_check__FP10e_yd_classf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void e_yd_stay(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/e_yd_stay__FP10e_yd_class.s"
}
#pragma pop


/* 807F3784-807F3A44 02C0+00 s=1 e=0 z=0  None .text      e_yd_appear__FP10e_yd_class                                  */
//	807F379C: 807F7A00 (lit_3788)
//	807F37A0: 807F7A00 (lit_3788)
//	807F37E4: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F37FC: 807F2ECC (leaf_anm_init__FP10e_yd_classifUcf)
//	807F380C: 8026798C (cM_rndFX__Ff)
//	807F3820: 8026798C (cM_rndFX__Ff)
//	807F3840: 8026798C (cM_rndFX__Ff)
//	807F3860: 8026798C (cM_rndFX__Ff)
//	807F3914: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3930: 8026FA3C (cLib_addCalc2__FPffff)
//	807F394C: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3960: 8026FA3C (cLib_addCalc2__FPffff)
//	807F39CC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F39E0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F39F8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F3A0C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F3A14: 807F7D78 (l_HIO)
//	807F3A18: 807F7D78 (l_HIO)
//	807F3A28: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void e_yd_appear(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/e_yd_appear__FP10e_yd_class.s"
}
#pragma pop


/* 807F3A44-807F3C10 01CC+00 s=1 e=0 z=0  None .text      e_yd_appear_v__FP10e_yd_class                                */
//	807F3A5C: 807F7A00 (lit_3788)
//	807F3A60: 807F7A00 (lit_3788)
//	807F3A90: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F3AA8: 807F2ECC (leaf_anm_init__FP10e_yd_classifUcf)
//	807F3ADC: 80439A20 (sincosTable___5JMath)
//	807F3AE0: 80439A20 (sincosTable___5JMath)
//	807F3B28: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3B4C: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3B70: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3B84: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3BBC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F3BD0: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3BD8: 807F7D78 (l_HIO)
//	807F3BDC: 807F7D78 (l_HIO)
//	807F3BEC: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void e_yd_appear_v(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/e_yd_appear_v__FP10e_yd_class.s"
}
#pragma pop


/* 807F3C10-807F4158 0548+00 s=1 e=0 z=0  None .text      e_yd_wait__FP10e_yd_class                                    */
//	807F3C20: 803621DC (_savegpr_29)
//	807F3C28: 807F7A00 (lit_3788)
//	807F3C2C: 807F7A00 (lit_3788)
//	807F3C40: 80267954 (cM_rndF__Ff)
//	807F3CF4: 80450768 (calc_mtx)
//	807F3CF8: 80450768 (calc_mtx)
//	807F3D04: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F3D10: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F3D20: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	807F3D4C: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3D60: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3D74: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3D90: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F3DA8: 807F2ECC (leaf_anm_init__FP10e_yd_classifUcf)
//	807F3DC4: 80267954 (cM_rndF__Ff)
//	807F3DE4: 807F7D78 (l_HIO)
//	807F3DE8: 807F7D78 (l_HIO)
//	807F3E0C: 80267954 (cM_rndF__Ff)
//	807F3E60: 80267954 (cM_rndF__Ff)
//	807F3E80: 8026798C (cM_rndFX__Ff)
//	807F3E94: 8026798C (cM_rndFX__Ff)
//	807F3EB4: 8026798C (cM_rndFX__Ff)
//	807F3ED4: 8026798C (cM_rndFX__Ff)
//	807F3F00: 80439A20 (sincosTable___5JMath)
//	807F3F04: 80439A20 (sincosTable___5JMath)
//	807F3F60: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3F84: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3FA8: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3FBC: 8026FA3C (cLib_addCalc2__FPffff)
//	807F3FE8: 807F3168 (pl_check__FP10e_yd_classf)
//	807F4048: 807F3168 (pl_check__FP10e_yd_classf)
//	807F4070: 804061C0 (g_dComIfG_gameInfo)
//	807F4074: 804061C0 (g_dComIfG_gameInfo)
//	807F4098: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F40A8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807F40E8: 80267674 (cM_atan2s__Fff)
//	807F4108: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4128: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F413C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4144: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void e_yd_wait(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/e_yd_wait__FP10e_yd_class.s"
}
#pragma pop


/* 807F4158-807F4BB8 0A60+00 s=1 e=0 z=0  None .text      e_yd_attack__FP10e_yd_class                                  */
//	807F4168: 803621D0 (_savegpr_26)
//	807F4170: 807F7A00 (lit_3788)
//	807F4174: 807F7A00 (lit_3788)
//	807F4178: 804061C0 (g_dComIfG_gameInfo)
//	807F417C: 804061C0 (g_dComIfG_gameInfo)
//	807F4190: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807F41D0: 80267674 (cM_atan2s__Fff)
//	807F4294: 807F2ECC (leaf_anm_init__FP10e_yd_classifUcf)
//	807F42AC: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F42D8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4308: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4324: 80450768 (calc_mtx)
//	807F4328: 80450768 (calc_mtx)
//	807F4334: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F4340: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F4350: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	807F4384: 8026FA3C (cLib_addCalc2__FPffff)
//	807F43A0: 8026FA3C (cLib_addCalc2__FPffff)
//	807F43BC: 8026FA3C (cLib_addCalc2__FPffff)
//	807F43D0: 8026FA3C (cLib_addCalc2__FPffff)
//	807F43FC: 80450768 (calc_mtx)
//	807F4400: 80450768 (calc_mtx)
//	807F4418: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F441C: 80450768 (calc_mtx)
//	807F4420: 80450768 (calc_mtx)
//	807F4430: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	807F4450: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F4460: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	807F4480: 80450768 (calc_mtx)
//	807F4484: 80450768 (calc_mtx)
//	807F4490: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F4494: 80450768 (calc_mtx)
//	807F4498: 80450768 (calc_mtx)
//	807F44A8: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	807F44C8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F44D8: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	807F454C: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	807F4554: 80267954 (cM_rndF__Ff)
//	807F45D0: 8026FA3C (cLib_addCalc2__FPffff)
//	807F45EC: 8026FA3C (cLib_addCalc2__FPffff)
//	807F45F0: 807F7D78 (l_HIO)
//	807F45F4: 807F7D78 (l_HIO)
//	807F4614: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4638: 8026FA3C (cLib_addCalc2__FPffff)
//	807F4658: 8026FA3C (cLib_addCalc2__FPffff)
//	807F466C: 8026FA3C (cLib_addCalc2__FPffff)
//	807F468C: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	807F46BC: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F46F4: 804061C0 (g_dComIfG_gameInfo)
//	807F46F8: 804061C0 (g_dComIfG_gameInfo)
//	807F470C: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	807F47D4: 804061C0 (g_dComIfG_gameInfo)
//	807F47D8: 804061C0 (g_dComIfG_gameInfo)
//	807F4800: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807F481C: 80267674 (cM_atan2s__Fff)
//	807F4830: 80347138 (PSVECSquareMag)
//	807F48A0: 80450AE0 (__float_nan)
//	807F48A4: 80450AE0 (__float_nan)
//	807F4910: 80450AE0 (__float_nan)
//	807F4914: 80450AE0 (__float_nan)
//	807F496C: 80450768 (calc_mtx)
//	807F4970: 80450768 (calc_mtx)
//	807F497C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F498C: 80439A20 (sincosTable___5JMath)
//	807F4990: 80439A20 (sincosTable___5JMath)
//	807F49DC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4A00: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F4A10: 80347090 (PSVECAdd)
//	807F4A24: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4A68: 8026FA3C (cLib_addCalc2__FPffff)
//	807F4A7C: 8026FA3C (cLib_addCalc2__FPffff)
//	807F4A90: 8026FA3C (cLib_addCalc2__FPffff)
//	807F4AA4: 8026FA3C (cLib_addCalc2__FPffff)
//	807F4AD0: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F4B28: 804061C0 (g_dComIfG_gameInfo)
//	807F4B2C: 804061C0 (g_dComIfG_gameInfo)
//	807F4B34: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	807F4B78: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4B9C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4BA4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void e_yd_attack(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/e_yd_attack__FP10e_yd_class.s"
}
#pragma pop


/* 807F4BB8-807F4EB8 0300+00 s=1 e=0 z=0  None .text      e_yd_chance__FP10e_yd_class                                  */
//	807F4BD0: 807F7A00 (lit_3788)
//	807F4BD4: 807F7A00 (lit_3788)
//	807F4C1C: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F4C34: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F4C4C: 807F2ECC (leaf_anm_init__FP10e_yd_classifUcf)
//	807F4C74: 80439A20 (sincosTable___5JMath)
//	807F4C78: 80439A20 (sincosTable___5JMath)
//	807F4CC0: 8026FA3C (cLib_addCalc2__FPffff)
//	807F4CE4: 8026FA3C (cLib_addCalc2__FPffff)
//	807F4D14: 8026FA3C (cLib_addCalc2__FPffff)
//	807F4D3C: 8026FA3C (cLib_addCalc2__FPffff)
//	807F4D50: 8026FA3C (cLib_addCalc2__FPffff)
//	807F4DC0: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F4DD8: 807F2ECC (leaf_anm_init__FP10e_yd_classifUcf)
//	807F4E70: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4E88: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F4E9C: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void e_yd_chance(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/e_yd_chance__FP10e_yd_class.s"
}
#pragma pop


/* 807F4EB8-807F5110 0258+00 s=1 e=0 z=0  None .text      e_yd_s_damage__FP10e_yd_class                                */
//	807F4ED0: 807F7A00 (lit_3788)
//	807F4ED4: 807F7A00 (lit_3788)
//	807F4F04: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F4F1C: 807F2ECC (leaf_anm_init__FP10e_yd_classifUcf)
//	807F4F58: 80450768 (calc_mtx)
//	807F4F5C: 80450768 (calc_mtx)
//	807F4F74: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F4F7C: 80450768 (calc_mtx)
//	807F4F80: 80450768 (calc_mtx)
//	807F4F8C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F4FB0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F4FF4: 80347090 (PSVECAdd)
//	807F50DC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F50F4: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void e_yd_s_damage(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/e_yd_s_damage__FP10e_yd_class.s"
}
#pragma pop


/* 807F5110-807F54F0 03E0+00 s=1 e=0 z=0  None .text      e_yd_damage__FP10e_yd_class                                  */
//	807F5130: 807F7A00 (lit_3788)
//	807F5134: 807F7A00 (lit_3788)
//	807F5170: 807F2E20 (anm_init__FP10e_yd_classifUcf)
//	807F5188: 807F2ECC (leaf_anm_init__FP10e_yd_classifUcf)
//	807F51B8: 80450768 (calc_mtx)
//	807F51BC: 80450768 (calc_mtx)
//	807F51C8: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F521C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F5260: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807F5280: 80347138 (PSVECSquareMag)
//	807F52F0: 80450AE0 (__float_nan)
//	807F52F4: 80450AE0 (__float_nan)
//	807F5360: 80450AE0 (__float_nan)
//	807F5364: 80450AE0 (__float_nan)
//	807F53E4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F53F4: 80347090 (PSVECAdd)
//	807F543C: 807F7D78 (l_HIO)
//	807F5440: 807F7D78 (l_HIO)
//	807F5468: 804061C0 (g_dComIfG_gameInfo)
//	807F546C: 804061C0 (g_dComIfG_gameInfo)
//	807F5474: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void e_yd_damage(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/e_yd_damage__FP10e_yd_class.s"
}
#pragma pop


/* 807F54F0-807F5820 0330+00 s=1 e=0 z=0  None .text      kuki_control1__FP10e_yd_class                                */
//	807F5530: 803621C4 (_savegpr_23)
//	807F5538: 807F7A00 (lit_3788)
//	807F553C: 807F7A00 (lit_3788)
//	807F55C4: 80450768 (calc_mtx)
//	807F55C8: 80450768 (calc_mtx)
//	807F55E8: 80439A20 (sincosTable___5JMath)
//	807F55EC: 80439A20 (sincosTable___5JMath)
//	807F5624: 80439A20 (sincosTable___5JMath)
//	807F5628: 80439A20 (sincosTable___5JMath)
//	807F5658: 80450768 (calc_mtx)
//	807F565C: 80450768 (calc_mtx)
//	807F5668: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F566C: 80450768 (calc_mtx)
//	807F5670: 80450768 (calc_mtx)
//	807F5678: 807F7B74 (pow_xa)
//	807F567C: 807F7B74 (pow_xa)
//	807F5694: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	807F569C: 80450768 (calc_mtx)
//	807F56A0: 80450768 (calc_mtx)
//	807F56AC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F56B0: 80450768 (calc_mtx)
//	807F56B4: 80450768 (calc_mtx)
//	807F56BC: 807F7B74 (pow_xa)
//	807F56C0: 807F7B74 (pow_xa)
//	807F56CC: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	807F56E0: 80270EA4 (MtxScale__FfffUc)
//	807F56EC: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F573C: 80267674 (cM_atan2s__Fff)
//	807F5764: 80267674 (cM_atan2s__Fff)
//	807F5778: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F5784: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	807F5790: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F57A0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	807F580C: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void kuki_control1(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/kuki_control1__FP10e_yd_class.s"
}
#pragma pop


/* 807F5820-807F5994 0174+00 s=1 e=0 z=0  None .text      kuki_control2__FP10e_yd_class                                */
//	807F5850: 803621D0 (_savegpr_26)
//	807F586C: 807F7A04 (lit_3789)
//	807F5870: 807F7A04 (lit_3789)
//	807F5890: 80450768 (calc_mtx)
//	807F5894: 80450768 (calc_mtx)
//	807F58C4: 80267674 (cM_atan2s__Fff)
//	807F58EC: 80267674 (cM_atan2s__Fff)
//	807F5900: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807F590C: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	807F5918: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F5928: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	807F5980: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void kuki_control2(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/kuki_control2__FP10e_yd_class.s"
}
#pragma pop


/* 807F5994-807F5A70 00DC+00 s=1 e=0 z=0  None .text      kuki_control3__FP10e_yd_class                                */
//	807F59B4: 803621DC (_savegpr_29)
//	807F59C8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807F59EC: 807F7A98 (lit_4252)
//	807F59F0: 807F7A98 (lit_4252)
//	807F59F8: 807F7AE0 (lit_4765)
//	807F59FC: 807F7AE0 (lit_4765)
//	807F5A24: 80266B84 (__ml__4cXyzCFf)
//	807F5A34: 803470B4 (PSVECSubtract)
//	807F5A5C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void kuki_control3(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/kuki_control3__FP10e_yd_class.s"
}
#pragma pop


/* 807F5A70-807F5B5C 00EC+00 s=1 e=0 z=0  None .text      kuki_ha_set__FP10e_yd_class                                  */
//	807F5A80: 803621CC (_savegpr_25)
//	807F5ABC: 803DD470 (now__14mDoMtx_stack_c)
//	807F5AC0: 803DD470 (now__14mDoMtx_stack_c)
//	807F5AD0: 803468E8 (PSMTXTrans)
//	807F5AD4: 803DD470 (now__14mDoMtx_stack_c)
//	807F5AD8: 803DD470 (now__14mDoMtx_stack_c)
//	807F5AE0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	807F5AE4: 803DD470 (now__14mDoMtx_stack_c)
//	807F5AE8: 803DD470 (now__14mDoMtx_stack_c)
//	807F5AF0: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	807F5AF4: 803DD470 (now__14mDoMtx_stack_c)
//	807F5AF8: 803DD470 (now__14mDoMtx_stack_c)
//	807F5B00: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	807F5B10: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	807F5B14: 803DD470 (now__14mDoMtx_stack_c)
//	807F5B18: 803DD470 (now__14mDoMtx_stack_c)
//	807F5B24: 803464B0 (PSMTXCopy)
//	807F5B48: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void kuki_ha_set(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/kuki_ha_set__FP10e_yd_class.s"
}
#pragma pop


/* 807F5B5C-807F613C 05E0+00 s=2 e=0 z=0  None .text      action__FP10e_yd_class                                       */
//	807F5B6C: 803621C4 (_savegpr_23)
//	807F5B74: 807F7A00 (lit_3788)
//	807F5B78: 807F7A00 (lit_3788)
//	807F5B7C: 804061C0 (g_dComIfG_gameInfo)
//	807F5B80: 804061C0 (g_dComIfG_gameInfo)
//	807F5B8C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807F5BA0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807F5BA8: 80347138 (PSVECSquareMag)
//	807F5C18: 80450AE0 (__float_nan)
//	807F5C1C: 80450AE0 (__float_nan)
//	807F5C88: 80450AE0 (__float_nan)
//	807F5C8C: 80450AE0 (__float_nan)
//	807F5CA8: 807F31C0 (damage_check__FP10e_yd_class)
//	807F5D10: 807F7B8C (lit_5007)
//	807F5D14: 807F7B8C (lit_5007)
//	807F5D2C: 807F342C (e_yd_stay__FP10e_yd_class)
//	807F5D40: 807F3784 (e_yd_appear__FP10e_yd_class)
//	807F5D60: 807F3A44 (e_yd_appear_v__FP10e_yd_class)
//	807F5D80: 807F3C10 (e_yd_wait__FP10e_yd_class)
//	807F5DA0: 807F4158 (e_yd_attack__FP10e_yd_class)
//	807F5DC0: 807F4BB8 (e_yd_chance__FP10e_yd_class)
//	807F5DE0: 807F4EB8 (e_yd_s_damage__FP10e_yd_class)
//	807F5E00: 807F5110 (e_yd_damage__FP10e_yd_class)
//	807F5E18: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	807F5E28: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	807F5E60: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807F5E80: 80347138 (PSVECSquareMag)
//	807F5EF0: 80450AE0 (__float_nan)
//	807F5EF4: 80450AE0 (__float_nan)
//	807F5F60: 80450AE0 (__float_nan)
//	807F5F64: 80450AE0 (__float_nan)
//	807F5FA0: 8026FA3C (cLib_addCalc2__FPffff)
//	807F5FA8: 807F54F0 (kuki_control1__FP10e_yd_class)
//	807F5FB0: 807F5820 (kuki_control2__FP10e_yd_class)
//	807F5FB8: 807F5994 (kuki_control3__FP10e_yd_class)
//	807F5FC0: 807F5A70 (kuki_ha_set__FP10e_yd_class)
//	807F5FCC: 80023590 (fpcSch_JudgeByID__FPvPv)
//	807F5FD0: 80023590 (fpcSch_JudgeByID__FPvPv)
//	807F5FD8: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	807F5FF4: 800105C8 (play__14mDoExt_McaMorfFP3VecUlSc)
//	807F6008: 8026FA3C (cLib_addCalc2__FPffff)
//	807F6038: 804061C0 (g_dComIfG_gameInfo)
//	807F603C: 804061C0 (g_dComIfG_gameInfo)
//	807F6094: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	807F60A0: 8026F708 (SetR__8cM3dGSphFf)
//	807F60B4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	807F60C4: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	807F60D4: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	807F60FC: 8026FA80 (cLib_addCalc0__FPfff)
//	807F6120: 807F7560 (setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz)
//	807F6128: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void action(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/action__FP10e_yd_class.s"
}
#pragma pop


/* 807F613C-807F64E0 03A4+00 s=1 e=0 z=0  None .text      eff_set__FP10e_yd_class                                      */
//	807F614C: 803621C4 (_savegpr_23)
//	807F6154: 807F7A00 (lit_3788)
//	807F6158: 807F7A00 (lit_3788)
//	807F61B0: 8026FA3C (cLib_addCalc2__FPffff)
//	807F61C0: 804061C0 (g_dComIfG_gameInfo)
//	807F61C4: 804061C0 (g_dComIfG_gameInfo)
//	807F61C8: 807F7BB0 (p_name)
//	807F61CC: 807F7BB0 (p_name)
//	807F621C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807F6230: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	807F6244: 807F7BB8 (p_idx)
//	807F6248: 807F7BB8 (p_idx)
//	807F6258: 80450768 (calc_mtx)
//	807F625C: 80450768 (calc_mtx)
//	807F6264: 803464B0 (PSMTXCopy)
//	807F6278: 80270EA4 (MtxScale__FfffUc)
//	807F627C: 80450768 (calc_mtx)
//	807F6280: 80450768 (calc_mtx)
//	807F6294: 80280808 (func_80280808)
//	807F62FC: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	807F6308: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	807F630C: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	807F6360: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807F63C0: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807F63D4: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	807F63EC: 80450768 (calc_mtx)
//	807F63F0: 80450768 (calc_mtx)
//	807F63F8: 803464B0 (PSMTXCopy)
//	807F63FC: 80450768 (calc_mtx)
//	807F6400: 80450768 (calc_mtx)
//	807F6410: 802807E0 (func_802807E0)
//	807F646C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807F6480: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	807F6498: 80450768 (calc_mtx)
//	807F649C: 80450768 (calc_mtx)
//	807F64A4: 803464B0 (PSMTXCopy)
//	807F64A8: 80450768 (calc_mtx)
//	807F64AC: 80450768 (calc_mtx)
//	807F64BC: 802807E0 (func_802807E0)
//	807F64CC: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void eff_set(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/eff_set__FP10e_yd_class.s"
}
#pragma pop


/* 807F64E0-807F6648 0168+00 s=1 e=0 z=0  None .text      anm_se_set__FP10e_yd_class                                   */
//	807F64F4: 807F7A00 (lit_3788)
//	807F64F8: 807F7A00 (lit_3788)
//	807F6514: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807F6564: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807F65B4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807F6600: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void anm_se_set(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/anm_se_set__FP10e_yd_class.s"
}
#pragma pop


/* 807F6648-807F694C 0304+00 s=2 e=0 z=0  None .text      daE_YD_Execute__FP10e_yd_class                               */
//	807F6658: 803621D8 (_savegpr_28)
//	807F6660: 807F7A00 (lit_3788)
//	807F6664: 807F7A00 (lit_3788)
//	807F66B8: 807F5B5C (action__FP10e_yd_class)
//	807F66C0: 807F64E0 (anm_se_set__FP10e_yd_class)
//	807F66C4: 803DD470 (now__14mDoMtx_stack_c)
//	807F66C8: 803DD470 (now__14mDoMtx_stack_c)
//	807F66D8: 803468E8 (PSMTXTrans)
//	807F66DC: 803DD470 (now__14mDoMtx_stack_c)
//	807F66E0: 803DD470 (now__14mDoMtx_stack_c)
//	807F66E8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	807F66EC: 803DD470 (now__14mDoMtx_stack_c)
//	807F66F0: 803DD470 (now__14mDoMtx_stack_c)
//	807F66F8: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	807F66FC: 803DD470 (now__14mDoMtx_stack_c)
//	807F6700: 803DD470 (now__14mDoMtx_stack_c)
//	807F6708: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	807F671C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807F6720: 807F7D78 (l_HIO)
//	807F6724: 807F7D78 (l_HIO)
//	807F673C: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	807F6748: 803DD470 (now__14mDoMtx_stack_c)
//	807F674C: 803DD470 (now__14mDoMtx_stack_c)
//	807F6754: 803464B0 (PSMTXCopy)
//	807F6760: 8002D06C (dComIfGp_getReverb__Fi)
//	807F6770: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	807F6778: 8000D428 (play__14mDoExt_baseAnmFv)
//	807F6780: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	807F67A8: 80450768 (calc_mtx)
//	807F67AC: 80450768 (calc_mtx)
//	807F67B4: 803464B0 (PSMTXCopy)
//	807F6820: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F6860: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807F687C: 80347090 (PSVECAdd)
//	807F6888: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	807F68A4: 8026F708 (SetR__8cM3dGSphFf)
//	807F68A8: 804061C0 (g_dComIfG_gameInfo)
//	807F68AC: 804061C0 (g_dComIfG_gameInfo)
//	807F68BC: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	807F68D4: 80084AC4 (MoveCAt__8dCcD_SphFR4cXyz)
//	807F68F0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	807F68FC: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	807F6918: 8026F708 (SetR__8cM3dGSphFf)
//	807F6924: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	807F692C: 807F613C (eff_set__FP10e_yd_class)
//	807F6938: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void daE_YD_Execute(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/daE_YD_Execute__FP10e_yd_class.s"
}
#pragma pop


/* 807F694C-807F6954 0008+00 s=1 e=0 z=0  None .text      daE_YD_IsDelete__FP10e_yd_class                              */
// True False
//  bool False
//  e_yd_class* False
// 	 e_yd_class False
static bool daE_YD_IsDelete(e_yd_class* param_0) {
	return true;
}


/* 807F6954-807F69BC 0068+00 s=1 e=0 z=0  None .text      daE_YD_Delete__FP10e_yd_class                                */
//	807F696C: 807F7B30 (stringBase0)
//	807F6970: 807F7B30 (stringBase0)
//	807F6974: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	807F6988: 807F7D68 (data_807F7D68)
//	807F698C: 807F7D68 (data_807F7D68)
//	807F69A0: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_yd_class* False
// 	 e_yd_class False
asm static void daE_YD_Delete(e_yd_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/daE_YD_Delete__FP10e_yd_class.s"
}
#pragma pop


/* 807F69BC-807F6C48 028C+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	807F69CC: 803621D4 (_savegpr_27)
//	807F69D8: 802CEC4C (__nw__FUl)
//	807F69E4: 807F7B30 (stringBase0)
//	807F69E8: 807F7B30 (stringBase0)
//	807F69F0: 804061C0 (g_dComIfG_gameInfo)
//	807F69F4: 804061C0 (g_dComIfG_gameInfo)
//	807F6A08: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807F6A10: 807F7B30 (stringBase0)
//	807F6A14: 807F7B30 (stringBase0)
//	807F6A24: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807F6A5C: 807F7A08 (lit_3790)
//	807F6A60: 807F7A08 (lit_3790)
//	807F6A6C: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	807F6A9C: 802CEC4C (__nw__FUl)
//	807F6AA8: 807F7D48 (__vt__12J3DFrameCtrl)
//	807F6AAC: 807F7D48 (__vt__12J3DFrameCtrl)
//	807F6AB8: 803283FC (init__12J3DFrameCtrlFs)
//	807F6ADC: 807F7B30 (stringBase0)
//	807F6AE0: 807F7B30 (stringBase0)
//	807F6AE8: 804061C0 (g_dComIfG_gameInfo)
//	807F6AEC: 804061C0 (g_dComIfG_gameInfo)
//	807F6B00: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807F6B1C: 807F7A08 (lit_3790)
//	807F6B20: 807F7A08 (lit_3790)
//	807F6B2C: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	807F6B40: 807F7B30 (stringBase0)
//	807F6B44: 807F7B30 (stringBase0)
//	807F6B54: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807F6B6C: 80013360 (init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi)
//	807F6B88: 807F7A6C (lit_4148)
//	807F6B8C: 807F7A6C (lit_4148)
//	807F6BA4: 807F7B30 (stringBase0)
//	807F6BA8: 807F7B30 (stringBase0)
//	807F6BB8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807F6BE0: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	807F6C00: 807F7A08 (lit_3790)
//	807F6C04: 807F7A08 (lit_3790)
//	807F6C08: 80267954 (cM_rndF__Ff)
//	807F6C0C: 807F7A08 (lit_3790)
//	807F6C10: 807F7A08 (lit_3790)
//	807F6C34: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 807F6C48-807F6C90 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	807F6C60: 807F7D48 (__vt__12J3DFrameCtrl)
//	807F6C64: 807F7D48 (__vt__12J3DFrameCtrl)
//	807F6C74: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 807F6C90-807F7160 04D0+00 s=1 e=0 z=0  None .text      daE_YD_Create__FP10fopAc_ac_c                                */
//	807F6CA0: 803621C8 (_savegpr_24)
//	807F6CA8: 807F7B38 (cNullVec__6Z2Calc)
//	807F6CAC: 807F7B38 (cNullVec__6Z2Calc)
//	807F6CB0: 807F7A00 (lit_3788)
//	807F6CB4: 807F7A00 (lit_3788)
//	807F6CD0: 80018B64 (__ct__10fopAc_ac_cFv)
//	807F6CD8: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	807F6CE0: 807F7480 (__ct__4cXyzFv)
//	807F6CE4: 807F7480 (__ct__4cXyzFv)
//	807F6CE8: 807F79B0 (__dt__4cXyzFv)
//	807F6CEC: 807F79B0 (__dt__4cXyzFv)
//	807F6CF8: 80361D60 (__construct_array)
//	807F6D00: 807F747C (__ct__5csXyzFv)
//	807F6D04: 807F747C (__ct__5csXyzFv)
//	807F6D08: 807F7974 (__dt__5csXyzFv)
//	807F6D0C: 807F7974 (__dt__5csXyzFv)
//	807F6D18: 80361D60 (__construct_array)
//	807F6D1C: 807F7D34 (__vt__18mDoExt_3DlineMat_c)
//	807F6D20: 807F7D34 (__vt__18mDoExt_3DlineMat_c)
//	807F6D28: 803A3248 (__vt__19mDoExt_3DlineMat1_c)
//	807F6D2C: 803A3248 (__vt__19mDoExt_3DlineMat1_c)
//	807F6D34: 803C3728 (__vt__9cCcD_Stts)
//	807F6D38: 803C3728 (__vt__9cCcD_Stts)
//	807F6D44: 80083760 (__ct__10dCcD_GSttsFv)
//	807F6D48: 803AC2E4 (__vt__9dCcD_Stts)
//	807F6D4C: 803AC2E4 (__vt__9dCcD_Stts)
//	807F6D64: 80083A28 (__ct__12dCcD_GObjInfFv)
//	807F6D68: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807F6D6C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807F6D74: 807F7D28 (__vt__8cM3dGAab)
//	807F6D78: 807F7D28 (__vt__8cM3dGAab)
//	807F6D80: 807F7D1C (__vt__8cM3dGSph)
//	807F6D84: 807F7D1C (__vt__8cM3dGSph)
//	807F6D8C: 803C3540 (__vt__12cCcD_SphAttr)
//	807F6D90: 803C3540 (__vt__12cCcD_SphAttr)
//	807F6DA0: 803ABFC0 (__vt__8dCcD_Sph)
//	807F6DA4: 803ABFC0 (__vt__8dCcD_Sph)
//	807F6DC4: 80083A28 (__ct__12dCcD_GObjInfFv)
//	807F6DC8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807F6DCC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807F6DD4: 807F7D28 (__vt__8cM3dGAab)
//	807F6DD8: 807F7D28 (__vt__8cM3dGAab)
//	807F6DE0: 807F7D1C (__vt__8cM3dGSph)
//	807F6DE4: 807F7D1C (__vt__8cM3dGSph)
//	807F6DEC: 803C3540 (__vt__12cCcD_SphAttr)
//	807F6DF0: 803C3540 (__vt__12cCcD_SphAttr)
//	807F6DFC: 803ABFC0 (__vt__8dCcD_Sph)
//	807F6E00: 803ABFC0 (__vt__8dCcD_Sph)
//	807F6E14: 807F7240 (__ct__8dCcD_SphFv)
//	807F6E18: 807F7240 (__ct__8dCcD_SphFv)
//	807F6E1C: 807F72C4 (__dt__8dCcD_SphFv)
//	807F6E20: 807F72C4 (__dt__8dCcD_SphFv)
//	807F6E2C: 80361D60 (__construct_array)
//	807F6E34: 80075EAC (__ct__12dBgS_AcchCirFv)
//	807F6E40: 800760A0 (__ct__9dBgS_AcchFv)
//	807F6E44: 807F7CF8 (__vt__12dBgS_ObjAcch)
//	807F6E48: 807F7CF8 (__vt__12dBgS_ObjAcch)
//	807F6E64: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	807F6E78: 807F7B30 (stringBase0)
//	807F6E7C: 807F7B30 (stringBase0)
//	807F6E80: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	807F6F1C: 807F69BC (useHeapInit__FP10fopAc_ac_c)
//	807F6F20: 807F69BC (useHeapInit__FP10fopAc_ac_c)
//	807F6F28: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	807F6F3C: 807F7D68 (data_807F7D68)
//	807F6F40: 807F7D68 (data_807F7D68)
//	807F6F5C: 807F7D78 (l_HIO)
//	807F6F60: 807F7D78 (l_HIO)
//	807F6F90: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	807F6FA4: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	807F6FC4: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	807F6FD0: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	807F6FE4: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	807F7004: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	807F7044: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	807F7054: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	807F706C: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	807F7074: 807F7B30 (stringBase0)
//	807F7078: 807F7B30 (stringBase0)
//	807F707C: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	807F709C: 80267954 (cM_rndF__Ff)
//	807F70B0: 807F7D78 (l_HIO)
//	807F70B4: 807F7D78 (l_HIO)
//	807F711C: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	807F7140: 807F6648 (daE_YD_Execute__FP10e_yd_class)
//	807F714C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daE_YD_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/daE_YD_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 807F7160-807F71D0 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	807F7180: 807F7CF8 (__vt__12dBgS_ObjAcch)
//	807F7184: 807F7CF8 (__vt__12dBgS_ObjAcch)
//	807F71A0: 80075F94 (__dt__9dBgS_AcchFv)
//	807F71B0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 807F71D0-807F7240 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	807F71F0: 807F7CEC (__vt__12dBgS_AcchCir)
//	807F71F4: 807F7CEC (__vt__12dBgS_AcchCir)
//	807F7204: 8026EF18 (__dt__8cM3dGCirFv)
//	807F7210: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	807F7220: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 807F7240-807F72C4 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_SphFv                                            */
//	807F7254: 80083A28 (__ct__12dCcD_GObjInfFv)
//	807F7258: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807F725C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807F7264: 807F7D28 (__vt__8cM3dGAab)
//	807F7268: 807F7D28 (__vt__8cM3dGAab)
//	807F7270: 807F7D1C (__vt__8cM3dGSph)
//	807F7274: 807F7D1C (__vt__8cM3dGSph)
//	807F727C: 803C3540 (__vt__12cCcD_SphAttr)
//	807F7280: 803C3540 (__vt__12cCcD_SphAttr)
//	807F7290: 803ABFC0 (__vt__8dCcD_Sph)
//	807F7294: 803ABFC0 (__vt__8dCcD_Sph)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__ct__8dCcD_SphFv.s"
}
#pragma pop


/* 807F72C4-807F7390 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_SphFv                                            */
//	807F72E4: 803ABFC0 (__vt__8dCcD_Sph)
//	807F72E8: 803ABFC0 (__vt__8dCcD_Sph)
//	807F7308: 803C3540 (__vt__12cCcD_SphAttr)
//	807F730C: 803C3540 (__vt__12cCcD_SphAttr)
//	807F7324: 807F7D1C (__vt__8cM3dGSph)
//	807F7328: 807F7D1C (__vt__8cM3dGSph)
//	807F7338: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807F733C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807F734C: 807F7D28 (__vt__8cM3dGAab)
//	807F7350: 807F7D28 (__vt__8cM3dGAab)
//	807F7360: 800840E4 (__dt__12dCcD_GObjInfFv)
//	807F7370: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::~dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__8dCcD_SphFv.s"
}
#pragma pop


/* 807F7390-807F73D8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	807F73A8: 807F7D1C (__vt__8cM3dGSph)
//	807F73AC: 807F7D1C (__vt__8cM3dGSph)
//	807F73BC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 807F73D8-807F7420 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	807F73F0: 807F7D28 (__vt__8cM3dGAab)
//	807F73F4: 807F7D28 (__vt__8cM3dGAab)
//	807F7404: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 807F7420-807F747C 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	807F7438: 807F7CE0 (__vt__10dCcD_GStts)
//	807F743C: 807F7CE0 (__vt__10dCcD_GStts)
//	807F7448: 807F7CD4 (__vt__10cCcD_GStts)
//	807F744C: 807F7CD4 (__vt__10cCcD_GStts)
//	807F7460: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 807F747C-807F7480 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 807F7480-807F7484 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 807F7484-807F74CC 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	807F749C: 807F7CD4 (__vt__10cCcD_GStts)
//	807F74A0: 807F7CD4 (__vt__10cCcD_GStts)
//	807F74B0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 807F74CC-807F7514 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_YD_HIO_cFv                                       */
//	807F74E4: 807F7D54 (__vt__12daE_YD_HIO_c)
//	807F74E8: 807F7D54 (__vt__12daE_YD_HIO_c)
//	807F74F8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_YD_HIO_c::~daE_YD_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__12daE_YD_HIO_cFv.s"
}
#pragma pop


/* 807F7514-807F7550 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_yd_cpp                                         */
//	807F7520: 807F7D78 (l_HIO)
//	807F7524: 807F7D78 (l_HIO)
//	807F7528: 807F2C2C (__ct__12daE_YD_HIO_cFv)
//	807F752C: 807F74CC (__dt__12daE_YD_HIO_cFv)
//	807F7530: 807F74CC (__dt__12daE_YD_HIO_cFv)
//	807F7534: 807F7D6C (lit_3804)
//	807F7538: 807F7D6C (lit_3804)
//	807F753C: 807F2BB8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_yd_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__sinit_d_a_e_yd_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_807F7514 = (void*)__sinit_d_a_e_yd_cpp;
#pragma pop


/* 807F7550-807F7558 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	807F7554: 807F7160 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_807F7550() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/func_807F7550.s"
}
#pragma pop


/* 807F7558-807F7560 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	807F755C: 807F7160 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_807F7558() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/func_807F7558.s"
}
#pragma pop


/* 807F7560-807F7974 0414+00 s=1 e=0 z=0  None .text      setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz */
//	807F7570: 803621B4 (_savegpr_19)
//	807F7584: 807F7B38 (cNullVec__6Z2Calc)
//	807F7588: 807F7B38 (cNullVec__6Z2Calc)
//	807F758C: 807F7A00 (lit_3788)
//	807F7590: 807F7A00 (lit_3788)
//	807F7594: 804061C0 (g_dComIfG_gameInfo)
//	807F7598: 804061C0 (g_dComIfG_gameInfo)
//	807F75A0: 80451018 (m_midnaActor__9daPy_py_c)
//	807F75A4: 80451018 (m_midnaActor__9daPy_py_c)
//	807F75CC: 801AC57C (dKy_darkworld_check__Fv)
//	807F75F0: 80451018 (m_midnaActor__9daPy_py_c)
//	807F75F4: 80451018 (m_midnaActor__9daPy_py_c)
//	807F760C: 803DD470 (now__14mDoMtx_stack_c)
//	807F7610: 803DD470 (now__14mDoMtx_stack_c)
//	807F7614: 803464B0 (PSMTXCopy)
//	807F762C: 803DD470 (now__14mDoMtx_stack_c)
//	807F7630: 803DD470 (now__14mDoMtx_stack_c)
//	807F763C: 80346D6C (PSMTXMultVec)
//	807F764C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807F7668: 80267674 (cM_atan2s__Fff)
//	807F769C: 80267674 (cM_atan2s__Fff)
//	807F76B8: 804061C0 (g_dComIfG_gameInfo)
//	807F76BC: 804061C0 (g_dComIfG_gameInfo)
//	807F770C: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807F771C: 80347138 (PSVECSquareMag)
//	807F778C: 80450AE0 (__float_nan)
//	807F7790: 80450AE0 (__float_nan)
//	807F77FC: 80450AE0 (__float_nan)
//	807F7800: 80450AE0 (__float_nan)
//	807F7854: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807F7890: 804061C0 (g_dComIfG_gameInfo)
//	807F7894: 804061C0 (g_dComIfG_gameInfo)
//	807F7900: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807F7960: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
asm static void setMidnaBindEffect(fopEn_enemy_c* param_0, Z2CreatureEnemy* param_1, cXyz* param_2, cXyz* param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz.s"
}
#pragma pop


/* 807F7974-807F79B0 003C+00 s=1 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	807F7994: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__5csXyzFv.s"
}
#pragma pop


/* 807F79B0-807F79EC 003C+00 s=1 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	807F79D0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_yd/d_a_e_yd/__dt__4cXyzFv.s"
}
#pragma pop


