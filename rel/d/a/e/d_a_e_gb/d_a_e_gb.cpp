// 
// Generated By: dol2asm
// Translation Unit: d_a_e_gb
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_gb/d_a_e_gb.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct J3DAnmTevRegKey {
};

struct J3DMaterialTable {
};

struct mDoExt_brkAnm {
	/* 8000D70C */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ // False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
void entry(J3DMaterialTable*, f32);
};

struct mDoExt_baseAnm {
	/* 8000D428 */ // False False
void play();
};

struct mDoExt_McaMorfCallBack2_c {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct Vec {
};

struct J3DAnmTransform {
};

struct J3DModelData {
};

struct mDoExt_McaMorf {
	/* 8000FC4C */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  int False
//  void* False
// 	 void False
//  u32 False
//  u32 False
mDoExt_McaMorf(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, int, void*, u32, u32);
	/* 8001037C */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  void* False
// 	 void False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32, void*);
	/* 800105C8 */ // False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
void play(Vec*, u32, s8);
	/* 80010680 */ // False False
void entryDL();
	/* 800106AC */ // False False
void modelCalc();
};

struct fopEn_enemy_c {
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct e_gb_class {
	/* 806C6B94 */ // True False
e_gb_class();
};

struct daPy_py_c {
	/* 8015F8C8 */ // False False
//  bool False
bool checkBoomerangChargeTime();
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 806C6F4C */ // True False
cXyz();
	/* 806C747C */ // True False
~cXyz();
};

struct daKey_c {
	/* 806C74B8 */ // True False
//  cXyz False
void setPos(cXyz);
	/* 80CDA9AC */ // False False
void actionWaitInit();
};

struct daE_GB_HIO_c {
	/* 806C1CEC */ // True False
daE_GB_HIO_c();
	/* 806C6F98 */ // True False
~daE_GB_HIO_c();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
	/* 806C6F48 */ // True False
csXyz();
	/* 806C7440 */ // True False
~csXyz();
};

struct _GXColor {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 80042914 */ // False False
//  void* False
// 	 void False
//  int (*)(void*, int) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 int False
//  int False
void setSkipProc(void*, int (*)(void*, int), int);
};

struct J3DModel {
};

struct dDlst_shadowControl_c {
	/* 80055F1C */ // False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
void addReal(u32, J3DModel*);
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_SrcCyl {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 806C6EEC */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084358 */ // False False
void GetAtHitObj();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dCamera_c {
	/* 801614AC */ // False False
void Start();
	/* 801614D0 */ // False False
void Stop();
	/* 8016300C */ // False False
//  s32 False
void SetTrimSize(s32);
	/* 80180AE0 */ // False False
//  cXyz False
//  cXyz False
//  f32 False
//  s16 False
void Set(cXyz, cXyz, f32, s16);
	/* 80180C18 */ // False False
//  cXyz False
//  cXyz False
void Reset(cXyz, cXyz);
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 806C6D34 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 806C6DA4 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 806C6E5C */ // True False
~cM3dGSph();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F1F8 */ // False False
//  f32 False
void SetH(f32);
	/* 8026F200 */ // False False
//  f32 False
void SetR(f32);
	/* 806C6E14 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 806C6EA4 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 806C6F50 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct _GXTexObj {
};

struct Z2SeqMgr {
	/* 802B4164 */ // False False
//  bool False
void setBattleBgmOff(bool);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C1B7C */ // False False
//  bool False
void setLinkSearch(bool);
	/* 802C1B90 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void setEnemyName(char const*);
};

struct Z2Creature {
	/* 802C06F4 */ // False False
void stopAnime();
};

struct JGeometry {
	template <typename A1>
	struct TVec3 { };
	/* TVec3<f32> */
	struct TVec3__template0 {
	};

};

struct J3DFrameCtrl {
	/* 803283FC */ // False False
//  s16 False
void init(s16);
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
	/* 806C6894 */ // True False
~J3DFrameCtrl();
};

// 
// Forward References:
// 

// True False
//  e_gb_class* False
// 	 e_gb_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void head_anm_init(e_gb_class*, int, f32, u8, f32);
// True False
//  e_gb_class* False
// 	 e_gb_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void body_anm_init(e_gb_class*, int, f32, u8, f32);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void daE_GB_Draw(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void e_gb_wait(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void e_gb_attack_1(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void e_gb_attack_2(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void e_gb_damage(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void e_gb_end(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void e_gb_start(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void kuki_control1(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void kuki_control2(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void kuki_control3(e_gb_class*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_b_sub(void*, void*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void damage_check(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void action(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void e_gf_wait(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void e_gf_chance(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void e_gf_eatbomb(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void e_gf_end(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void damage_check2(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void action2(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
//  f32 False
static void cam_3d_morf(e_gb_class*, f32);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void demo_camera(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void daE_GB_Execute(e_gb_class*);
// True False
//  bool False
//  e_gb_class* False
// 	 e_gb_class False
static bool daE_GB_IsDelete(e_gb_class*);
// True False
//  e_gb_class* False
// 	 e_gb_class False
static void daE_GB_Delete(e_gb_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daE_GB_Create(fopAc_ac_c*);
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
static void setMidnaBindEffect(fopEn_enemy_c*, Z2CreatureEnemy*, cXyz*, cXyz*);

// True False
extern "C" void __ct__12daE_GB_HIO_cFv();
// True False
//  e_gb_class* False
// 	 e_gb_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void head_anm_init__FP10e_gb_classifUcf();
// True False
//  e_gb_class* False
// 	 e_gb_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void body_anm_init__FP10e_gb_classifUcf();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void daE_GB_Draw__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void e_gb_wait__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void e_gb_attack_1__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void e_gb_attack_2__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void e_gb_damage__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void e_gb_end__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void e_gb_start__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void kuki_control1__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void kuki_control2__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void kuki_control3__FP10e_gb_class();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_b_sub__FPvPv();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void damage_check__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void action__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void e_gf_wait__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void e_gf_chance__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void e_gf_eatbomb__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void e_gf_end__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void damage_check2__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void action2__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
//  f32 False
extern "C" static void cam_3d_morf__FP10e_gb_classf();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void demo_camera__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void daE_GB_Execute__FP10e_gb_class();
// True False
//  bool False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static bool daE_GB_IsDelete__FP10e_gb_class();
// True False
//  e_gb_class* False
// 	 e_gb_class False
extern "C" static void daE_GB_Delete__FP10e_gb_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void __dt__12J3DFrameCtrlFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daE_GB_Create__FP10fopAc_ac_c();
// True False
extern "C" void __ct__10e_gb_classFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__12daE_GB_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_gb_cpp();
// True False
extern "C" static void func_806C701C();
// True False
extern "C" static void func_806C7024();
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" static void setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
//  cXyz False
extern "C" void setPos__7daKey_cF4cXyz();
extern "C" extern u8 const lit_3909[8];
extern "C" extern u8 const lit_3910[8];
extern "C" extern u8 const lit_3911[8];
extern "C" extern u32 const lit_3912;
extern "C" extern u32 const lit_4012;
extern "C" extern u32 const lit_4108;
extern "C" extern u32 const lit_4109;
extern "C" extern u32 const lit_4110;
extern "C" extern u32 const lit_4111;
extern "C" extern u32 const lit_4112;
extern "C" extern u32 const lit_4113;
extern "C" extern u32 const lit_4114;
extern "C" extern u32 const lit_4115;
extern "C" extern u32 const lit_4116[1 + 1 /* padding */];
extern "C" extern u8 const lit_4118[8];
extern "C" extern u32 const lit_4217;
extern "C" extern u32 const lit_4218;
extern "C" extern u32 const lit_4219;
extern "C" extern u32 const lit_4220;
extern "C" extern u32 const lit_4221;
extern "C" extern u32 const lit_4222;
extern "C" extern u32 const lit_4223;
extern "C" extern u32 const lit_4326;
extern "C" extern u32 const lit_4327;
extern "C" extern u32 const lit_4328;
extern "C" extern u32 const lit_4329;
extern "C" extern u32 const lit_4330;
extern "C" extern u32 const lit_4331;
extern "C" extern u32 const lit_4367;
extern "C" extern u32 const lit_4368[1 + 1 /* padding */];
extern "C" extern u8 const lit_4415[8];
extern "C" extern u32 const lit_4434;
extern "C" extern u32 const lit_4435;
extern "C" extern u32 const lit_4436;
extern "C" extern u32 const lit_4437;
extern "C" extern u32 const lit_4438;
extern "C" extern u32 const lit_4439;
extern "C" extern u32 const lit_4533;
extern "C" extern u32 const lit_4534;
extern "C" extern u32 const lit_4535;
extern "C" extern u32 const lit_4612;
extern "C" extern u32 const lit_4650;
extern "C" extern u32 const lit_4802;
extern "C" extern u32 const lit_4979;
extern "C" extern u32 const lit_4980;
extern "C" extern u32 const lit_5039;
extern "C" extern u32 const lit_5351;
extern "C" extern u32 const lit_5352;
extern "C" extern u32 const lit_5353;
extern "C" extern u32 const lit_5354;
extern "C" extern u32 const lit_5355;
extern "C" extern u32 const lit_5356;
extern "C" extern u32 const lit_5357;
extern "C" extern u32 const lit_5358;
extern "C" extern u32 const lit_5359;
extern "C" extern u32 const lit_5360;
extern "C" extern u32 const lit_5361;
extern "C" extern u32 const lit_5362;
extern "C" extern u32 const lit_5363;
extern "C" extern u32 const lit_5364;
extern "C" extern u32 const lit_5365;
extern "C" extern u32 const lit_5366;
extern "C" extern u32 const lit_5367;
extern "C" extern u32 const lit_5368;
extern "C" extern u32 const lit_5369;
extern "C" extern u32 const lit_5370;
extern "C" extern u32 const lit_5371;
extern "C" extern u32 const lit_5372;
extern "C" extern u32 const lit_5373;
extern "C" extern u32 const lit_5374;
extern "C" extern u32 const lit_5375;
extern "C" extern u32 const lit_5376;
extern "C" extern u32 const lit_5377;
extern "C" extern u32 const lit_5378;
extern "C" extern u32 const lit_5379;
extern "C" extern u32 const lit_5380;
extern "C" extern u32 const lit_5381;
extern "C" extern u32 const lit_5382;
extern "C" extern u32 const lit_5383;
extern "C" extern u32 const lit_5384;
extern "C" extern u32 const lit_5385;
extern "C" extern u32 const lit_5386;
extern "C" extern u32 const lit_5387;
extern "C" extern u32 const lit_5388;
extern "C" extern u32 const lit_5389;
extern "C" extern u32 const lit_5390;
extern "C" extern u32 const lit_5391;
extern "C" extern u32 const lit_5392;
extern "C" extern u32 const lit_5393;
extern "C" extern u32 const lit_5394;
extern "C" extern u32 const lit_5395;
extern "C" extern u32 const lit_5396;
extern "C" extern u32 const lit_5397;
extern "C" extern u32 const lit_5398;
extern "C" extern u32 const lit_5399;
extern "C" extern u32 const lit_5688;
extern "C" extern u32 const lit_5689;
extern "C" extern u32 const lit_5690;
extern "C" extern u32 const lit_5691;
extern "C" extern u32 const lit_5692;
extern "C" extern u32 const lit_5693;
extern "C" extern u32 const lit_5694;
extern "C" extern u32 const lit_5877;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_806C76E4[8];
extern "C" extern u8 data_806C76EC[8];
extern "C" extern u8 data_806C76F4[6 + 2 /* padding */];
extern "C" extern u8 data_806C7700[34 + 2 /* padding */];
extern "C" extern u8 data_806C7724[34 + 2 /* padding */];
extern "C" extern u8 data_806C7748[68];
extern "C" extern void* g_profile_E_GB[12];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* __vt__12daE_GB_HIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderPotentialEvent(fopAc_ac_c*, u16, u16, u16);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
void fopAcM_createDisappear(fopAc_ac_c const*, cXyz const*, u8, u8, u8);
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
void fopAcM_effSmokeSet1(u32*, u32*, cXyz const*, csXyz const*, f32, dKy_tevstr_c const*, int);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fpcEx_Search(void* (*)(void*, void*), void*);
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeForPName(void*, void*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  void* False
// 	 void False
//  int False
void dEv_defaultSkipProc(void*, int);
// False False
//  void* False
// 	 void False
//  int False
void dEv_noFinishSkipProc(void*, int);
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void def_se_set(Z2Creature*, cCcD_Obj*, u32, fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void MtxTrans(f32, f32, f32, u8);
// False False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void MtxScale(f32, f32, f32, u8);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void MtxPosition(cXyz*, cXyz*);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxSTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*, JGeometry::TVec3__template0*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
extern "C" void play__14mDoExt_baseAnmFv();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  J3DAnmTevRegKey* False
// 	 J3DAnmTevRegKey False
//  int False
//  int False
//  f32 False
//  s16 False
//  s16 False
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
// False False
//  J3DMaterialTable* False
// 	 J3DMaterialTable False
//  f32 False
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  int False
//  void* False
// 	 void False
//  u32 False
//  u32 False
extern "C" void __ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  void* False
// 	 void False
extern "C" void setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv();
// False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
extern "C" void play__14mDoExt_McaMorfFP3VecUlSc();
// False False
extern "C" void entryDL__14mDoExt_McaMorfFv();
// False False
extern "C" void modelCalc__14mDoExt_McaMorfFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
extern "C" void fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc();
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
extern "C" void fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fpcEx_Search__FPFPvPv_PvPv();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeForPName__FPvPv();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  void* False
// 	 void False
//  int False
extern "C" void dEv_defaultSkipProc__FPvi();
// False False
//  void* False
// 	 void False
//  int False
extern "C" void dEv_noFinishSkipProc__FPvi();
// False False
//  void* False
// 	 void False
//  int (*)(void*, int) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 int False
//  int False
extern "C" void setSkipProc__14dEvt_control_cFPvPFPvi_ii();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void GetAtHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
//  bool False
extern "C" bool checkBoomerangChargeTime__9daPy_py_cFv();
// False False
extern "C" void Start__9dCamera_cFv();
// False False
extern "C" void Stop__9dCamera_cFv();
// False False
//  s32 False
extern "C" void SetTrimSize__9dCamera_cFl();
// False False
//  cXyz False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void Set__9dCamera_cF4cXyz4cXyzfs();
// False False
//  cXyz False
//  cXyz False
extern "C" void Reset__9dCamera_cF4cXyz4cXyz();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  f32 False
extern "C" void SetH__8cM3dGCylFf();
// False False
//  f32 False
extern "C" void SetR__8cM3dGCylFf();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void MtxTrans__FfffUc();
// False False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void MtxScale__FfffUc();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void MtxPosition__FP4cXyzP4cXyz();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_802807E0();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_80280808();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  bool False
extern "C" void setBattleBgmOff__8Z2SeqMgrFb();
// False False
extern "C" void stopAnime__10Z2CreatureFv();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  bool False
extern "C" void setLinkSearch__15Z2CreatureEnemyFb();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void setEnemyName__15Z2CreatureEnemyFPCc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  s16 False
extern "C" void init__12J3DFrameCtrlFs();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSubtract();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_20();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_20();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();
// False False
extern "C" void actionWaitInit__7daKey_cFv();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 806C74E8-806C74EC 0004+00 s=20 e=0 z=0  None .rodata    @3906                                                        */
SECTION_RODATA static u32 const lit_3906 = 0x42C80000;

/* 806C74EC-806C74F0 0004+00 s=4 e=0 z=0  None .rodata    @3907                                                        */
SECTION_RODATA static u8 const lit_3907[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 806C74F0-806C74F8 0004+04 s=3 e=0 z=0  None .rodata    @3908                                                        */
SECTION_RODATA static u32 const lit_3908[1 + 1 /* padding */] = {
	0x3F800000,
	/* padding */
	0x00000000,
};

/* 806C74F8-806C7500 0008+00 s=0 e=0 z=0  None .rodata    @3909                                                        */
SECTION_RODATA u8 const lit_3909[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806C7500-806C7508 0008+00 s=0 e=0 z=0  None .rodata    @3910                                                        */
SECTION_RODATA u8 const lit_3910[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806C7508-806C7510 0008+00 s=0 e=0 z=0  None .rodata    @3911                                                        */
SECTION_RODATA u8 const lit_3911[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806C7510-806C7514 0004+00 s=0 e=0 z=0  None .rodata    @3912                                                        */
SECTION_RODATA u32 const lit_3912 = 0x3C23D70A;

/* 806C7514-806C7518 0004+00 s=1 e=0 z=0  None .rodata    @3927                                                        */
SECTION_RODATA static u32 const lit_3927 = 0x42820000;

/* 806C76C4-806C76D0 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806C76D0-806C76E4 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 806C76E4-806C76EC 0008+00 s=0 e=0 z=0  None .data      e_prim$3785                                                  */
SECTION_DATA u8 data_806C76E4[8] = {
	0xFF, 0x78, 0x00, 0x00, 0xFF, 0x64, 0x78, 0x00,
};

/* 806C76EC-806C76F4 0008+00 s=0 e=0 z=0  None .data      e_env$3786                                                   */
SECTION_DATA u8 data_806C76EC[8] = {
	0x5A, 0x2D, 0x2D, 0x00, 0x3C, 0x1E, 0x1E, 0x00,
};

/* 806C76F4-806C76FC 0006+02 s=0 e=0 z=0  None .data      eff_id$3794                                                  */
SECTION_DATA u8 data_806C76F4[6 + 2 /* padding */] = {
	0x02, 0x9D, 0x02, 0x9E, 0x02, 0x9F,
	/* padding */
	0x00, 0x00,
};

/* 806C76FC-806C7700 0004+00 s=1 e=0 z=0  None .data      eno$4381                                                     */
SECTION_DATA static u8 eno_4381[4] = {
	0x83, 0x2F, 0x83, 0x30,
};

/* 806C7700-806C7724 0022+02 s=0 e=0 z=0  None .data      pow_xa$4443                                                  */
SECTION_DATA u8 data_806C7700[34 + 2 /* padding */] = {
	0xD0, 0x00, 0xD8, 0x00, 0xE0, 0x00, 0xE8, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x10, 0x00, 0x18, 0x00,
	0x20, 0x00, 0x28, 0x00, 0x30, 0x00, 0x38, 0x00, 0x30, 0x00, 0x20, 0x00, 0x10, 0x00, 0x00, 0x00,
	0x00, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 806C7724-806C7748 0022+02 s=0 e=0 z=0  None .data      pow_xa_chance$4444                                           */
SECTION_DATA u8 data_806C7724[34 + 2 /* padding */] = {
	0xC8, 0x00, 0xD0, 0x00, 0xD8, 0x00, 0xE0, 0x00, 0xE8, 0x00, 0xF0, 0x00, 0xF8, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x08, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 806C7748-806C778C 0044+00 s=0 e=0 z=0  None .data      wav_d$4445                                                   */
SECTION_DATA u8 data_806C7748[68] = {
	0x00, 0x00, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD, 0x3E, 0xCC, 0xCC, 0xCD, 0x3F, 0x00, 0x00, 0x00,
	0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x19, 0x99, 0x9A, 0x3E, 0xCC, 0xCC, 0xCD, 0x3E, 0x4C, 0xCC, 0xCD,
	0x00, 0x00, 0x00, 0x00,
};

/* 806C778C-806C77B8 002C+00 s=1 e=0 z=0  None .data      @4803                                                        */
SECTION_DATA static void* lit_4803[11] = {
	(void*)(((char*)action__FP10e_gb_class)+0x174),
	(void*)(((char*)action__FP10e_gb_class)+0x18C),
	(void*)(((char*)action__FP10e_gb_class)+0x1A8),
	(void*)(((char*)action__FP10e_gb_class)+0x1C8),
	(void*)(((char*)action__FP10e_gb_class)+0x21C),
	(void*)(((char*)action__FP10e_gb_class)+0x1E4),
	(void*)(((char*)action__FP10e_gb_class)+0x21C),
	(void*)(((char*)action__FP10e_gb_class)+0x21C),
	(void*)(((char*)action__FP10e_gb_class)+0x21C),
	(void*)(((char*)action__FP10e_gb_class)+0x21C),
	(void*)(((char*)action__FP10e_gb_class)+0x200),
};

/* 806C77B8-806C77C4 000A+02 s=1 e=0 z=0  None .data      eno$4864                                                     */
SECTION_DATA static u8 eno_4864[10 + 2 /* padding */] = {
	0x82, 0xE8, 0x82, 0xE9, 0x82, 0xEA, 0x82, 0xEB, 0x82, 0xEC,
	/* padding */
	0x00, 0x00,
};

/* 806C77C4-806C77C8 0004+00 s=1 e=0 z=0  None .data      key_eno$5459                                                 */
SECTION_DATA static u8 key_eno[4] = {
	0x82, 0x7A, 0x82, 0x7B,
};

/* 806C77C8-806C7808 0040+00 s=1 e=0 z=0  None .data      head_cc_sph_src$5811                                         */
SECTION_DATA static u8 head_cc_sph_src[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x75, 0x0B, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 806C7808-806C784C 0044+00 s=1 e=0 z=0  None .data      body_cyl_src$5812                                            */
SECTION_DATA static u8 body_cyl_src[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
	0x41, 0xA0, 0x00, 0x00,
};

/* 806C784C-806C786C 0020+00 s=1 e=0 z=0  None .data      l_daE_GB_Method                                              */
SECTION_DATA static void* l_daE_GB_Method[8] = {
	(void*)daE_GB_Create__FP10fopAc_ac_c,
	(void*)daE_GB_Delete__FP10e_gb_class,
	(void*)daE_GB_Execute__FP10e_gb_class,
	(void*)daE_GB_IsDelete__FP10e_gb_class,
	(void*)daE_GB_Draw__FP10e_gb_class,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 806C786C-806C789C 0030+00 s=0 e=0 z=1  None .data      g_profile_E_GB                                               */
SECTION_DATA void* g_profile_E_GB[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01C80000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000EF8,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x008B0000,
	(void*)&l_daE_GB_Method,
	(void*)0x00040000,
	(void*)0x020E0000,
};

/* 806C789C-806C78A8 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 806C78A8-806C78B4 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 806C78B4-806C78C0 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 806C78C0-806C78E4 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_806C7024,
	(void*)NULL,
	(void*)NULL,
	(void*)func_806C701C,
};

/* 806C78E4-806C78F0 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 806C78F0-806C78FC 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 806C78FC-806C7908 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 806C7908-806C7914 000C+00 s=2 e=0 z=0  None .data      __vt__12J3DFrameCtrl                                         */
SECTION_DATA void* __vt__12J3DFrameCtrl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 806C7914-806C7920 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_GB_HIO_c                                         */
SECTION_DATA void* __vt__12daE_GB_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_GB_HIO_cFv,
};

/* 806C1CEC-806C1D3C 0050+00 s=1 e=0 z=0  None .text      __ct__12daE_GB_HIO_cFv                                       */
//	806C1CEC: 806C7914 (__vt__12daE_GB_HIO_c)
//	806C1CF0: 806C7914 (__vt__12daE_GB_HIO_c)
//	806C1D00: 806C74F0 (lit_3908)
//	806C1D04: 806C74F0 (lit_3908)
//	806C1D1C: 806C7514 (lit_3927)
//	806C1D20: 806C7514 (lit_3927)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_GB_HIO_c::daE_GB_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__ct__12daE_GB_HIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 806C7518-806C751C 0004+00 s=3 e=0 z=0  None .rodata    @3941                                                        */
SECTION_RODATA static u32 const lit_3941 = 0xBF800000;

/* 806C751C-806C7520 0004+00 s=0 e=0 z=0  None .rodata    @4012                                                        */
SECTION_RODATA u32 const lit_4012 = 0x44AF0000;

/* 806C7520-806C7524 0004+00 s=0 e=0 z=0  None .rodata    @4108                                                        */
SECTION_RODATA u32 const lit_4108 = 0x40400000;

/* 806C7524-806C7528 0004+00 s=0 e=0 z=0  None .rodata    @4109                                                        */
SECTION_RODATA u32 const lit_4109 = 0x41200000;

/* 806C7528-806C752C 0004+00 s=0 e=0 z=0  None .rodata    @4110                                                        */
SECTION_RODATA u32 const lit_4110 = 0x447A0000;

/* 806C752C-806C7530 0004+00 s=0 e=0 z=0  None .rodata    @4111                                                        */
SECTION_RODATA u32 const lit_4111 = 0x41F00000;

/* 806C7530-806C7534 0004+00 s=0 e=0 z=0  None .rodata    @4112                                                        */
SECTION_RODATA u32 const lit_4112 = 0x43E10000;

/* 806C7534-806C7538 0004+00 s=0 e=0 z=0  None .rodata    @4113                                                        */
SECTION_RODATA u32 const lit_4113 = 0x43480000;

/* 806C7538-806C753C 0004+00 s=0 e=0 z=0  None .rodata    @4114                                                        */
SECTION_RODATA u32 const lit_4114 = 0x44BB8000;

/* 806C753C-806C7540 0004+00 s=0 e=0 z=0  None .rodata    @4115                                                        */
SECTION_RODATA u32 const lit_4115 = 0x3DCCCCCD;

/* 806C7540-806C7548 0004+04 s=0 e=0 z=0  None .rodata    @4116                                                        */
SECTION_RODATA u32 const lit_4116[1 + 1 /* padding */] = {
	0x3D4CCCCD,
	/* padding */
	0x00000000,
};

/* 806C7548-806C7550 0008+00 s=0 e=0 z=0  None .rodata    @4118                                                        */
SECTION_RODATA u8 const lit_4118[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 806C7550-806C7554 0004+00 s=0 e=0 z=0  None .rodata    @4217                                                        */
SECTION_RODATA u32 const lit_4217 = 0x41A00000;

/* 806C7554-806C7558 0004+00 s=0 e=0 z=0  None .rodata    @4218                                                        */
SECTION_RODATA u32 const lit_4218 = 0x44960000;

/* 806C7558-806C755C 0004+00 s=0 e=0 z=0  None .rodata    @4219                                                        */
SECTION_RODATA u32 const lit_4219 = 0x3F000000;

/* 806C755C-806C7560 0004+00 s=0 e=0 z=0  None .rodata    @4220                                                        */
SECTION_RODATA u32 const lit_4220 = 0x40A00000;

/* 806C7560-806C7564 0004+00 s=0 e=0 z=0  None .rodata    @4221                                                        */
SECTION_RODATA u32 const lit_4221 = 0x453B8000;

/* 806C7564-806C7568 0004+00 s=0 e=0 z=0  None .rodata    @4222                                                        */
SECTION_RODATA u32 const lit_4222 = 0x40000000;

/* 806C7568-806C756C 0004+00 s=0 e=0 z=0  None .rodata    @4223                                                        */
SECTION_RODATA u32 const lit_4223 = 0xC1F00000;

/* 806C756C-806C7570 0004+00 s=0 e=0 z=0  None .rodata    @4326                                                        */
SECTION_RODATA u32 const lit_4326 = 0x42440000;

/* 806C7570-806C7574 0004+00 s=0 e=0 z=0  None .rodata    @4327                                                        */
SECTION_RODATA u32 const lit_4327 = 0x41800000;

/* 806C7574-806C7578 0004+00 s=0 e=0 z=0  None .rodata    @4328                                                        */
SECTION_RODATA u32 const lit_4328 = 0x40C00000;

/* 806C7578-806C757C 0004+00 s=0 e=0 z=0  None .rodata    @4329                                                        */
SECTION_RODATA u32 const lit_4329 = 0x42480000;

/* 806C757C-806C7580 0004+00 s=0 e=0 z=0  None .rodata    @4330                                                        */
SECTION_RODATA u32 const lit_4330 = 0x43160000;

/* 806C7580-806C7584 0004+00 s=0 e=0 z=0  None .rodata    @4331                                                        */
SECTION_RODATA u32 const lit_4331 = 0x3FD9999A;

/* 806C7584-806C7588 0004+00 s=0 e=0 z=0  None .rodata    @4367                                                        */
SECTION_RODATA u32 const lit_4367 = 0x44480000;

/* 806C7588-806C7590 0004+04 s=0 e=0 z=0  None .rodata    @4368                                                        */
SECTION_RODATA u32 const lit_4368[1 + 1 /* padding */] = {
	0x3E4CCCCD,
	/* padding */
	0x00000000,
};

/* 806C7590-806C7598 0008+00 s=0 e=0 z=0  None .rodata    @4415                                                        */
SECTION_RODATA u8 const lit_4415[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806C7598-806C759C 0004+00 s=0 e=0 z=0  None .rodata    @4434                                                        */
SECTION_RODATA u32 const lit_4434 = 0xC5BF0000;

/* 806C759C-806C75A0 0004+00 s=0 e=0 z=0  None .rodata    @4435                                                        */
SECTION_RODATA u32 const lit_4435 = 0x458D4000;

/* 806C75A0-806C75A4 0004+00 s=0 e=0 z=0  None .rodata    @4436                                                        */
SECTION_RODATA u32 const lit_4436 = 0x4628C000;

/* 806C75A4-806C75A8 0004+00 s=0 e=0 z=0  None .rodata    @4437                                                        */
SECTION_RODATA u32 const lit_4437 = 0xC5AA5000;

/* 806C75A8-806C75AC 0004+00 s=0 e=0 z=0  None .rodata    @4438                                                        */
SECTION_RODATA u32 const lit_4438 = 0x43FA0000;

/* 806C75AC-806C75B0 0004+00 s=0 e=0 z=0  None .rodata    @4439                                                        */
SECTION_RODATA u32 const lit_4439 = 0x42A00000;

/* 806C75B0-806C75B4 0004+00 s=0 e=0 z=0  None .rodata    @4533                                                        */
SECTION_RODATA u32 const lit_4533 = 0xC3480000;

/* 806C75B4-806C75B8 0004+00 s=0 e=0 z=0  None .rodata    @4534                                                        */
SECTION_RODATA u32 const lit_4534 = 0x3D0F5C29;

/* 806C75B8-806C75BC 0004+00 s=0 e=0 z=0  None .rodata    @4535                                                        */
SECTION_RODATA u32 const lit_4535 = 0x42700000;

/* 806C75BC-806C75C0 0004+00 s=0 e=0 z=0  None .rodata    @4612                                                        */
SECTION_RODATA u32 const lit_4612 = 0x41880000;

/* 806C75C0-806C75C4 0004+00 s=0 e=0 z=0  None .rodata    @4650                                                        */
SECTION_RODATA u32 const lit_4650 = 0x42DC0000;

/* 806C75C4-806C75C8 0004+00 s=0 e=0 z=0  None .rodata    @4802                                                        */
SECTION_RODATA u32 const lit_4802 = 0x420C0000;

/* 806C75C8-806C75CC 0004+00 s=0 e=0 z=0  None .rodata    @4979                                                        */
SECTION_RODATA u32 const lit_4979 = 0x40800000;

/* 806C75CC-806C75D0 0004+00 s=0 e=0 z=0  None .rodata    @4980                                                        */
SECTION_RODATA u32 const lit_4980 = 0xC0C00000;

/* 806C75D0-806C75D4 0004+00 s=0 e=0 z=0  None .rodata    @5039                                                        */
SECTION_RODATA u32 const lit_5039 = 0x423C0000;

/* 806C75D4-806C75D8 0004+00 s=0 e=0 z=0  None .rodata    @5351                                                        */
SECTION_RODATA u32 const lit_5351 = 0x425C0000;

/* 806C75D8-806C75DC 0004+00 s=0 e=0 z=0  None .rodata    @5352                                                        */
SECTION_RODATA u32 const lit_5352 = 0xC5B3B000;

/* 806C75DC-806C75E0 0004+00 s=0 e=0 z=0  None .rodata    @5353                                                        */
SECTION_RODATA u32 const lit_5353 = 0x4589D000;

/* 806C75E0-806C75E4 0004+00 s=0 e=0 z=0  None .rodata    @5354                                                        */
SECTION_RODATA u32 const lit_5354 = 0x4626F000;

/* 806C75E4-806C75E8 0004+00 s=0 e=0 z=0  None .rodata    @5355                                                        */
SECTION_RODATA u32 const lit_5355 = 0xC5B1C800;

/* 806C75E8-806C75EC 0004+00 s=0 e=0 z=0  None .rodata    @5356                                                        */
SECTION_RODATA u32 const lit_5356 = 0x45945800;

/* 806C75EC-806C75F0 0004+00 s=0 e=0 z=0  None .rodata    @5357                                                        */
SECTION_RODATA u32 const lit_5357 = 0x466A6000;

/* 806C75F0-806C75F4 0004+00 s=0 e=0 z=0  None .rodata    @5358                                                        */
SECTION_RODATA u32 const lit_5358 = 0xC5B22000;

/* 806C75F4-806C75F8 0004+00 s=0 e=0 z=0  None .rodata    @5359                                                        */
SECTION_RODATA u32 const lit_5359 = 0x45942000;

/* 806C75F8-806C75FC 0004+00 s=0 e=0 z=0  None .rodata    @5360                                                        */
SECTION_RODATA u32 const lit_5360 = 0x4664D000;

/* 806C75FC-806C7600 0004+00 s=0 e=0 z=0  None .rodata    @5361                                                        */
SECTION_RODATA u32 const lit_5361 = 0x4664CC00;

/* 806C7600-806C7604 0004+00 s=0 e=0 z=0  None .rodata    @5362                                                        */
SECTION_RODATA u32 const lit_5362 = 0xC5B2D800;

/* 806C7604-806C7608 0004+00 s=0 e=0 z=0  None .rodata    @5363                                                        */
SECTION_RODATA u32 const lit_5363 = 0x4593E800;

/* 806C7608-806C760C 0004+00 s=0 e=0 z=0  None .rodata    @5364                                                        */
SECTION_RODATA u32 const lit_5364 = 0x465F5400;

/* 806C760C-806C7610 0004+00 s=0 e=0 z=0  None .rodata    @5365                                                        */
SECTION_RODATA u32 const lit_5365 = 0x4587F000;

/* 806C7610-806C7614 0004+00 s=0 e=0 z=0  None .rodata    @5366                                                        */
SECTION_RODATA u32 const lit_5366 = 0x46171800;

/* 806C7614-806C7618 0004+00 s=0 e=0 z=0  None .rodata    @5367                                                        */
SECTION_RODATA u32 const lit_5367 = 0x3CA3D70A;

/* 806C7618-806C761C 0004+00 s=0 e=0 z=0  None .rodata    @5368                                                        */
SECTION_RODATA u32 const lit_5368 = 0x3A03126F;

/* 806C761C-806C7620 0004+00 s=0 e=0 z=0  None .rodata    @5369                                                        */
SECTION_RODATA u32 const lit_5369 = 0xC5B1D000;

/* 806C7620-806C7624 0004+00 s=0 e=0 z=0  None .rodata    @5370                                                        */
SECTION_RODATA u32 const lit_5370 = 0x458A8000;

/* 806C7624-806C7628 0004+00 s=0 e=0 z=0  None .rodata    @5371                                                        */
SECTION_RODATA u32 const lit_5371 = 0x46162800;

/* 806C7628-806C762C 0004+00 s=0 e=0 z=0  None .rodata    @5372                                                        */
SECTION_RODATA u32 const lit_5372 = 0xC5B26800;

/* 806C762C-806C7630 0004+00 s=0 e=0 z=0  None .rodata    @5373                                                        */
SECTION_RODATA u32 const lit_5373 = 0x458AE800;

/* 806C7630-806C7634 0004+00 s=0 e=0 z=0  None .rodata    @5374                                                        */
SECTION_RODATA u32 const lit_5374 = 0x461BA400;

/* 806C7634-806C7638 0004+00 s=0 e=0 z=0  None .rodata    @5375                                                        */
SECTION_RODATA u32 const lit_5375 = 0xC5B36800;

/* 806C7638-806C763C 0004+00 s=0 e=0 z=0  None .rodata    @5376                                                        */
SECTION_RODATA u32 const lit_5376 = 0x46248800;

/* 806C763C-806C7640 0004+00 s=0 e=0 z=0  None .rodata    @5377                                                        */
SECTION_RODATA u32 const lit_5377 = 0xC5B40000;

/* 806C7640-806C7644 0004+00 s=0 e=0 z=0  None .rodata    @5378                                                        */
SECTION_RODATA u32 const lit_5378 = 0x458C8000;

/* 806C7644-806C7648 0004+00 s=0 e=0 z=0  None .rodata    @5379                                                        */
SECTION_RODATA u32 const lit_5379 = 0x462A4000;

/* 806C7648-806C764C 0004+00 s=0 e=0 z=0  None .rodata    @5380                                                        */
SECTION_RODATA u32 const lit_5380 = 0xC5B25000;

/* 806C764C-806C7650 0004+00 s=0 e=0 z=0  None .rodata    @5381                                                        */
SECTION_RODATA u32 const lit_5381 = 0x458D7000;

/* 806C7650-806C7654 0004+00 s=0 e=0 z=0  None .rodata    @5382                                                        */
SECTION_RODATA u32 const lit_5382 = 0x4631CC00;

/* 806C7654-806C7658 0004+00 s=0 e=0 z=0  None .rodata    @5383                                                        */
SECTION_RODATA u32 const lit_5383 = 0xC5B1B800;

/* 806C7658-806C765C 0004+00 s=0 e=0 z=0  None .rodata    @5384                                                        */
SECTION_RODATA u32 const lit_5384 = 0x458CC800;

/* 806C765C-806C7660 0004+00 s=0 e=0 z=0  None .rodata    @5385                                                        */
SECTION_RODATA u32 const lit_5385 = 0x462C0000;

/* 806C7660-806C7664 0004+00 s=0 e=0 z=0  None .rodata    @5386                                                        */
SECTION_RODATA u32 const lit_5386 = 0xC5AFC000;

/* 806C7664-806C7668 0004+00 s=0 e=0 z=0  None .rodata    @5387                                                        */
SECTION_RODATA u32 const lit_5387 = 0x458AB800;

/* 806C7668-806C766C 0004+00 s=0 e=0 z=0  None .rodata    @5388                                                        */
SECTION_RODATA u32 const lit_5388 = 0x46196800;

/* 806C766C-806C7670 0004+00 s=0 e=0 z=0  None .rodata    @5389                                                        */
SECTION_RODATA u32 const lit_5389 = 0xC5AF2000;

/* 806C7670-806C7674 0004+00 s=0 e=0 z=0  None .rodata    @5390                                                        */
SECTION_RODATA u32 const lit_5390 = 0x458A1000;

/* 806C7674-806C7678 0004+00 s=0 e=0 z=0  None .rodata    @5391                                                        */
SECTION_RODATA u32 const lit_5391 = 0x46139C00;

/* 806C7678-806C767C 0004+00 s=0 e=0 z=0  None .rodata    @5392                                                        */
SECTION_RODATA u32 const lit_5392 = 0x458F4000;

/* 806C767C-806C7680 0004+00 s=0 e=0 z=0  None .rodata    @5393                                                        */
SECTION_RODATA u32 const lit_5393 = 0x43C80000;

/* 806C7680-806C7684 0004+00 s=0 e=0 z=0  None .rodata    @5394                                                        */
SECTION_RODATA u32 const lit_5394 = 0x3D23D70A;

/* 806C7684-806C7688 0004+00 s=0 e=0 z=0  None .rodata    @5395                                                        */
SECTION_RODATA u32 const lit_5395 = 0x3B03126F;

/* 806C7688-806C768C 0004+00 s=0 e=0 z=0  None .rodata    @5396                                                        */
SECTION_RODATA u32 const lit_5396 = 0x43960000;

/* 806C768C-806C7690 0004+00 s=0 e=0 z=0  None .rodata    @5397                                                        */
SECTION_RODATA u32 const lit_5397 = 0xC4160000;

/* 806C7690-806C7694 0004+00 s=0 e=0 z=0  None .rodata    @5398                                                        */
SECTION_RODATA u32 const lit_5398 = 0xC37A0000;

/* 806C7694-806C7698 0004+00 s=0 e=0 z=0  None .rodata    @5399                                                        */
SECTION_RODATA u32 const lit_5399 = 0x42F00000;

/* 806C7698-806C769C 0004+00 s=0 e=0 z=0  None .rodata    @5688                                                        */
SECTION_RODATA u32 const lit_5688 = 0xC2480000;

/* 806C769C-806C76A0 0004+00 s=0 e=0 z=0  None .rodata    @5689                                                        */
SECTION_RODATA u32 const lit_5689 = 0x41000000;

/* 806C76A0-806C76A4 0004+00 s=0 e=0 z=0  None .rodata    @5690                                                        */
SECTION_RODATA u32 const lit_5690 = 0x461C4000;

/* 806C76A4-806C76A8 0004+00 s=0 e=0 z=0  None .rodata    @5691                                                        */
SECTION_RODATA u32 const lit_5691 = 0x43200000;

/* 806C76A8-806C76AC 0004+00 s=0 e=0 z=0  None .rodata    @5692                                                        */
SECTION_RODATA u32 const lit_5692 = 0x432A0000;

/* 806C76AC-806C76B0 0004+00 s=0 e=0 z=0  None .rodata    @5693                                                        */
SECTION_RODATA u32 const lit_5693 = 0x3FC00000;

/* 806C76B0-806C76B4 0004+00 s=0 e=0 z=0  None .rodata    @5694                                                        */
SECTION_RODATA u32 const lit_5694 = 0x3A83126F;

/* 806C76B4-806C76B8 0004+00 s=0 e=0 z=0  None .rodata    @5877                                                        */
SECTION_RODATA u32 const lit_5877 = 0x477FFF00;

/* 806C76B8-806C76C4 000C+00 s=5 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_806C76B8 = "E_gb";
SECTION_DEAD char const* const stringBase_806C76BD = "D_MN05";
#pragma pop

/* 806C1D3C-806C1DEC 00B0+00 s=7 e=0 z=0  None .text      head_anm_init__FP10e_gb_classifUcf                           */
//	806C1D5C: 803621DC (_savegpr_29)
//	806C1D74: 806C76B8 (stringBase0)
//	806C1D78: 806C76B8 (stringBase0)
//	806C1D7C: 804061C0 (g_dComIfG_gameInfo)
//	806C1D80: 804061C0 (g_dComIfG_gameInfo)
//	806C1D90: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806C1DA8: 806C74EC (lit_3907)
//	806C1DAC: 806C74EC (lit_3907)
//	806C1DB0: 806C7518 (lit_3941)
//	806C1DB4: 806C7518 (lit_3941)
//	806C1DBC: 8001037C (setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv)
//	806C1DD8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void head_anm_init(e_gb_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/head_anm_init__FP10e_gb_classifUcf.s"
}
#pragma pop


/* 806C1DEC-806C1E9C 00B0+00 s=5 e=0 z=0  None .text      body_anm_init__FP10e_gb_classifUcf                           */
//	806C1E0C: 803621DC (_savegpr_29)
//	806C1E24: 806C76B8 (stringBase0)
//	806C1E28: 806C76B8 (stringBase0)
//	806C1E2C: 804061C0 (g_dComIfG_gameInfo)
//	806C1E30: 804061C0 (g_dComIfG_gameInfo)
//	806C1E40: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806C1E58: 806C74EC (lit_3907)
//	806C1E5C: 806C74EC (lit_3907)
//	806C1E60: 806C7518 (lit_3941)
//	806C1E64: 806C7518 (lit_3941)
//	806C1E6C: 8001037C (setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv)
//	806C1E88: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void body_anm_init(e_gb_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/body_anm_init__FP10e_gb_classifUcf.s"
}
#pragma pop


/* 806C1E9C-806C2078 01DC+00 s=1 e=0 z=0  None .text      daE_GB_Draw__FP10e_gb_class                                  */
//	806C1EAC: 803621CC (_savegpr_25)
//	806C1EB4: 806C74E8 (lit_3906)
//	806C1EB8: 806C74E8 (lit_3906)
//	806C1EBC: 8042CA54 (g_env_light)
//	806C1EC0: 8042CA54 (g_env_light)
//	806C1ED0: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	806C1EE0: 8042CA54 (g_env_light)
//	806C1EE4: 8042CA54 (g_env_light)
//	806C1EF0: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	806C1F04: 8000D7A8 (entry__13mDoExt_brkAnmFP16J3DMaterialTablef)
//	806C1F0C: 80010680 (entryDL__14mDoExt_McaMorfFv)
//	806C1F1C: 8042CA54 (g_env_light)
//	806C1F20: 8042CA54 (g_env_light)
//	806C1F2C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	806C1F34: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	806C1F5C: 8042CA54 (g_env_light)
//	806C1F60: 8042CA54 (g_env_light)
//	806C1F6C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	806C1F74: 80010680 (entryDL__14mDoExt_McaMorfFv)
//	806C1F80: 8042CA54 (g_env_light)
//	806C1F84: 8042CA54 (g_env_light)
//	806C1FA4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	806C1FAC: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	806C200C: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	806C2010: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	806C2014: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	806C2024: 804061C0 (g_dComIfG_gameInfo)
//	806C2028: 804061C0 (g_dComIfG_gameInfo)
//	806C2048: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	806C2064: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void daE_GB_Draw(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/daE_GB_Draw__FP10e_gb_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 806C7928-806C792C 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_806C7928[4];

/* 806C792C-806C7938 000C+00 s=1 e=0 z=0  None .bss       @3922                                                        */
static u8 lit_3922[12];

/* 806C7938-806C7958 0020+00 s=6 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[32];

/* 806C2078-806C2560 04E8+00 s=1 e=0 z=0  None .text      e_gb_wait__FP10e_gb_class                                    */
//	806C2090: 803621D8 (_savegpr_28)
//	806C2098: 806C74E8 (lit_3906)
//	806C209C: 806C74E8 (lit_3906)
//	806C20A8: 804061C0 (g_dComIfG_gameInfo)
//	806C20AC: 804061C0 (g_dComIfG_gameInfo)
//	806C20B8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806C20C0: 80347138 (PSVECSquareMag)
//	806C2130: 80450AE0 (__float_nan)
//	806C2134: 80450AE0 (__float_nan)
//	806C21A0: 80450AE0 (__float_nan)
//	806C21A4: 80450AE0 (__float_nan)
//	806C21F0: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C21F4: 806C7938 (l_HIO)
//	806C21F8: 806C7938 (l_HIO)
//	806C221C: 80267954 (cM_rndF__Ff)
//	806C227C: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C2288: 806C7938 (l_HIO)
//	806C228C: 806C7938 (l_HIO)
//	806C22B0: 80267954 (cM_rndF__Ff)
//	806C2338: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C2368: 80267954 (cM_rndF__Ff)
//	806C2384: 80450768 (calc_mtx)
//	806C2388: 80450768 (calc_mtx)
//	806C2394: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806C239C: 8026798C (cM_rndFX__Ff)
//	806C23A8: 8026798C (cM_rndFX__Ff)
//	806C23B0: 806C7938 (l_HIO)
//	806C23B4: 806C7938 (l_HIO)
//	806C23CC: 8026798C (cM_rndFX__Ff)
//	806C23E4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C23F4: 80347090 (PSVECAdd)
//	806C2428: 80439A20 (sincosTable___5JMath)
//	806C242C: 80439A20 (sincosTable___5JMath)
//	806C2484: 8026FA3C (cLib_addCalc2__FPffff)
//	806C24A8: 8026FA3C (cLib_addCalc2__FPffff)
//	806C24CC: 8026FA3C (cLib_addCalc2__FPffff)
//	806C24E0: 8026FA3C (cLib_addCalc2__FPffff)
//	806C24F4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C2508: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C251C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C254C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void e_gb_wait(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/e_gb_wait__FP10e_gb_class.s"
}
#pragma pop


/* 806C2560-806C2AB0 0550+00 s=1 e=0 z=0  None .text      e_gb_attack_1__FP10e_gb_class                                */
//	806C2588: 806C74E8 (lit_3906)
//	806C258C: 806C74E8 (lit_3906)
//	806C25A0: 804061C0 (g_dComIfG_gameInfo)
//	806C25A4: 804061C0 (g_dComIfG_gameInfo)
//	806C25B0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806C25B8: 80347138 (PSVECSquareMag)
//	806C2628: 80450AE0 (__float_nan)
//	806C262C: 80450AE0 (__float_nan)
//	806C2698: 80450AE0 (__float_nan)
//	806C269C: 80450AE0 (__float_nan)
//	806C26E8: 80267954 (cM_rndF__Ff)
//	806C2724: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C2774: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C2788: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C278C: 80450768 (calc_mtx)
//	806C2790: 80450768 (calc_mtx)
//	806C279C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806C27AC: 806C7938 (l_HIO)
//	806C27B0: 806C7938 (l_HIO)
//	806C27CC: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C27DC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	806C2810: 8026FA3C (cLib_addCalc2__FPffff)
//	806C282C: 8026FA3C (cLib_addCalc2__FPffff)
//	806C2848: 8026FA3C (cLib_addCalc2__FPffff)
//	806C285C: 8026FA3C (cLib_addCalc2__FPffff)
//	806C2898: 806C7938 (l_HIO)
//	806C289C: 806C7938 (l_HIO)
//	806C28BC: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C28EC: 806C7938 (l_HIO)
//	806C28F0: 806C7938 (l_HIO)
//	806C2940: 80267954 (cM_rndF__Ff)
//	806C29A0: 80267954 (cM_rndF__Ff)
//	806C29D4: 8026FA3C (cLib_addCalc2__FPffff)
//	806C2A4C: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C2A70: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C2A84: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void e_gb_attack_1(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/e_gb_attack_1__FP10e_gb_class.s"
}
#pragma pop


/* 806C2AB0-806C2FC0 0510+00 s=1 e=0 z=0  None .text      e_gb_attack_2__FP10e_gb_class                                */
//	806C2AC8: 806C74E8 (lit_3906)
//	806C2ACC: 806C74E8 (lit_3906)
//	806C2AD0: 804061C0 (g_dComIfG_gameInfo)
//	806C2AD4: 804061C0 (g_dComIfG_gameInfo)
//	806C2B20: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C2B28: 80267954 (cM_rndF__Ff)
//	806C2B9C: 8026FA3C (cLib_addCalc2__FPffff)
//	806C2BB0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C2BC4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C2BD8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C2BEC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C2C10: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C2DA0: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	806C2DB8: 804061C0 (g_dComIfG_gameInfo)
//	806C2DBC: 804061C0 (g_dComIfG_gameInfo)
//	806C2DD0: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	806C2E40: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806C2E60: 80267954 (cM_rndF__Ff)
//	806C2E74: 80347138 (PSVECSquareMag)
//	806C2EE4: 80450AE0 (__float_nan)
//	806C2EE8: 80450AE0 (__float_nan)
//	806C2F54: 80450AE0 (__float_nan)
//	806C2F58: 80450AE0 (__float_nan)
//	806C2F84: 80267954 (cM_rndF__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void e_gb_attack_2(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/e_gb_attack_2__FP10e_gb_class.s"
}
#pragma pop


/* 806C2FC0-806C3194 01D4+00 s=1 e=0 z=0  None .text      e_gb_damage__FP10e_gb_class                                  */
//	806C2FD8: 806C74E8 (lit_3906)
//	806C2FDC: 806C74E8 (lit_3906)
//	806C3034: 80450768 (calc_mtx)
//	806C3038: 80450768 (calc_mtx)
//	806C3044: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806C3068: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C3078: 80347090 (PSVECAdd)
//	806C3128: 8026FA3C (cLib_addCalc2__FPffff)
//	806C313C: 8026FA3C (cLib_addCalc2__FPffff)
//	806C3150: 8026FA3C (cLib_addCalc2__FPffff)
//	806C3164: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C3178: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void e_gb_damage(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/e_gb_damage__FP10e_gb_class.s"
}
#pragma pop


/* 806C3194-806C33C8 0234+00 s=1 e=0 z=0  None .text      e_gb_end__FP10e_gb_class                                     */
//	806C31A4: 803621D0 (_savegpr_26)
//	806C31AC: 806C74E8 (lit_3906)
//	806C31B0: 806C74E8 (lit_3906)
//	806C31F8: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C3288: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	806C32B4: 802C06F4 (stopAnime__10Z2CreatureFv)
//	806C32B8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C32BC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C3320: 804061C0 (g_dComIfG_gameInfo)
//	806C3324: 804061C0 (g_dComIfG_gameInfo)
//	806C3328: 806C76FC (eno_4381)
//	806C332C: 806C76FC (eno_4381)
//	806C3380: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806C33B4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void e_gb_end(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/e_gb_end__FP10e_gb_class.s"
}
#pragma pop


/* 806C33C8-806C3558 0190+00 s=1 e=0 z=0  None .text      e_gb_start__FP10e_gb_class                                   */
//	806C33E0: 806C74E8 (lit_3906)
//	806C33E4: 806C74E8 (lit_3906)
//	806C3434: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C3478: 8026FA3C (cLib_addCalc2__FPffff)
//	806C3480: 80450768 (calc_mtx)
//	806C3484: 80450768 (calc_mtx)
//	806C3490: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806C34B4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C34C4: 80347090 (PSVECAdd)
//	806C34D8: 8026FA3C (cLib_addCalc2__FPffff)
//	806C34EC: 8026FA3C (cLib_addCalc2__FPffff)
//	806C3500: 8026FA3C (cLib_addCalc2__FPffff)
//	806C3514: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C3528: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C353C: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void e_gb_start(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/e_gb_start__FP10e_gb_class.s"
}
#pragma pop


/* 806C3558-806C3904 03AC+00 s=1 e=0 z=0  None .text      kuki_control1__FP10e_gb_class                                */
//	806C3590: 803621B8 (_savegpr_20)
//	806C3598: 806C76C4 (cNullVec__6Z2Calc)
//	806C359C: 806C76C4 (cNullVec__6Z2Calc)
//	806C35A0: 806C74E8 (lit_3906)
//	806C35A4: 806C74E8 (lit_3906)
//	806C3600: 80450768 (calc_mtx)
//	806C3604: 80450768 (calc_mtx)
//	806C364C: 80439A20 (sincosTable___5JMath)
//	806C3650: 80439A20 (sincosTable___5JMath)
//	806C369C: 80439A20 (sincosTable___5JMath)
//	806C36A0: 80439A20 (sincosTable___5JMath)
//	806C36C4: 80450768 (calc_mtx)
//	806C36C8: 80450768 (calc_mtx)
//	806C36D4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806C36E4: 80450768 (calc_mtx)
//	806C36E8: 80450768 (calc_mtx)
//	806C36FC: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806C3704: 80450768 (calc_mtx)
//	806C3708: 80450768 (calc_mtx)
//	806C371C: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806C3730: 80270EA4 (MtxScale__FfffUc)
//	806C373C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C37AC: 80439A20 (sincosTable___5JMath)
//	806C37B0: 80439A20 (sincosTable___5JMath)
//	806C3824: 80267674 (cM_atan2s__Fff)
//	806C384C: 80267674 (cM_atan2s__Fff)
//	806C3860: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806C386C: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806C3878: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C3888: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	806C38F0: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void kuki_control1(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/kuki_control1__FP10e_gb_class.s"
}
#pragma pop


/* 806C3904-806C3A78 0174+00 s=1 e=0 z=0  None .text      kuki_control2__FP10e_gb_class                                */
//	806C3934: 803621D0 (_savegpr_26)
//	806C3950: 806C74EC (lit_3907)
//	806C3954: 806C74EC (lit_3907)
//	806C3974: 80450768 (calc_mtx)
//	806C3978: 80450768 (calc_mtx)
//	806C39A8: 80267674 (cM_atan2s__Fff)
//	806C39D4: 80267674 (cM_atan2s__Fff)
//	806C39E4: 8000C344 (mDoMtx_XrotS__FPA4_fs)
//	806C39F0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806C39FC: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C3A0C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	806C3A64: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void kuki_control2(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/kuki_control2__FP10e_gb_class.s"
}
#pragma pop


/* 806C3A78-806C3C44 01CC+00 s=1 e=0 z=0  None .text      kuki_control3__FP10e_gb_class                                */
//	806C3A98: 803621D4 (_savegpr_27)
//	806C3AA0: 806C74E8 (lit_3906)
//	806C3AA4: 806C74E8 (lit_3906)
//	806C3AB4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806C3B08: 80266B84 (__ml__4cXyzCFf)
//	806C3B18: 803470B4 (PSVECSubtract)
//	806C3B30: 80347138 (PSVECSquareMag)
//	806C3BA0: 80450AE0 (__float_nan)
//	806C3BA4: 80450AE0 (__float_nan)
//	806C3C10: 80450AE0 (__float_nan)
//	806C3C14: 80450AE0 (__float_nan)
//	806C3C30: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void kuki_control3(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/kuki_control3__FP10e_gb_class.s"
}
#pragma pop


/* 806C3C44-806C3D20 00DC+00 s=1 e=0 z=0  None .text      s_b_sub__FPvPv                                               */
//	806C3C54: 803621DC (_savegpr_29)
//	806C3C60: 806C74E8 (lit_3906)
//	806C3C64: 806C74E8 (lit_3906)
//	806C3C68: 80018CE0 (fopAc_IsActor__FPv)
//	806C3C98: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806C3CF8: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	806C3D0C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_b_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/s_b_sub__FPvPv.s"
}
#pragma pop


/* 806C3D20-806C3F0C 01EC+00 s=1 e=0 z=0  None .text      damage_check__FP10e_gb_class                                 */
//	806C3D38: 806C74E8 (lit_3906)
//	806C3D3C: 806C74E8 (lit_3906)
//	806C3D44: 80083830 (Move__10dCcD_GSttsFv)
//	806C3D6C: 80084358 (GetAtHitObj__12dCcD_GObjInfFv)
//	806C3D84: 80087514 (def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c)
//	806C3D9C: 804061C0 (g_dComIfG_gameInfo)
//	806C3DA0: 804061C0 (g_dComIfG_gameInfo)
//	806C3DB4: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	806C3DC0: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806C3DD8: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	806C3DE8: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	806C3E34: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C3E90: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void damage_check(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/damage_check__FP10e_gb_class.s"
}
#pragma pop


/* 806C3F0C-806C44F8 05EC+00 s=2 e=0 z=0  None .text      action__FP10e_gb_class                                       */
//	806C3F24: 803621D0 (_savegpr_26)
//	806C3F2C: 806C74E8 (lit_3906)
//	806C3F30: 806C74E8 (lit_3906)
//	806C3F38: 804061C0 (g_dComIfG_gameInfo)
//	806C3F3C: 804061C0 (g_dComIfG_gameInfo)
//	806C3F4C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806C3F74: 80267674 (cM_atan2s__Fff)
//	806C3FA8: 80267674 (cM_atan2s__Fff)
//	806C3FBC: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806C3FC8: 806C3D20 (damage_check__FP10e_gb_class)
//	806C3FE4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806C4000: 80267674 (cM_atan2s__Fff)
//	806C4008: 80450768 (calc_mtx)
//	806C400C: 80450768 (calc_mtx)
//	806C4014: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806C4038: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C4048: 80347090 (PSVECAdd)
//	806C4068: 806C778C (lit_4803)
//	806C406C: 806C778C (lit_4803)
//	806C4084: 806C2078 (e_gb_wait__FP10e_gb_class)
//	806C409C: 806C2560 (e_gb_attack_1__FP10e_gb_class)
//	806C40B8: 806C2AB0 (e_gb_attack_2__FP10e_gb_class)
//	806C40D8: 806C2FC0 (e_gb_damage__FP10e_gb_class)
//	806C40F4: 806C3194 (e_gb_end__FP10e_gb_class)
//	806C4110: 806C33C8 (e_gb_start__FP10e_gb_class)
//	806C4138: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	806C4148: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	806C4158: 80450768 (calc_mtx)
//	806C415C: 80450768 (calc_mtx)
//	806C4168: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806C416C: 80450768 (calc_mtx)
//	806C4170: 80450768 (calc_mtx)
//	806C417C: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806C419C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C41AC: 80347090 (PSVECAdd)
//	806C41BC: 80450768 (calc_mtx)
//	806C41C0: 80450768 (calc_mtx)
//	806C41CC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806C41EC: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C420C: 80347090 (PSVECAdd)
//	806C4244: 804061C0 (g_dComIfG_gameInfo)
//	806C4248: 804061C0 (g_dComIfG_gameInfo)
//	806C4250: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	806C42A0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806C42C0: 80347138 (PSVECSquareMag)
//	806C4330: 80450AE0 (__float_nan)
//	806C4334: 80450AE0 (__float_nan)
//	806C43A0: 80450AE0 (__float_nan)
//	806C43A4: 80450AE0 (__float_nan)
//	806C43C4: 806C7938 (l_HIO)
//	806C43C8: 806C7938 (l_HIO)
//	806C43F0: 8026FA3C (cLib_addCalc2__FPffff)
//	806C43F8: 806C3558 (kuki_control1__FP10e_gb_class)
//	806C4400: 806C3904 (kuki_control2__FP10e_gb_class)
//	806C4408: 806C3A78 (kuki_control3__FP10e_gb_class)
//	806C441C: 8026FA3C (cLib_addCalc2__FPffff)
//	806C4458: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806C4460: 80439A20 (sincosTable___5JMath)
//	806C4464: 80439A20 (sincosTable___5JMath)
//	806C44A4: 8026FA80 (cLib_addCalc0__FPfff)
//	806C44D4: 806C702C (setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz)
//	806C44E4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void action(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/action__FP10e_gb_class.s"
}
#pragma pop


/* 806C44F8-806C451C 0024+00 s=1 e=0 z=0  None .text      e_gf_wait__FP10e_gb_class                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void e_gf_wait(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/e_gf_wait__FP10e_gb_class.s"
}
#pragma pop


/* 806C451C-806C4688 016C+00 s=1 e=0 z=0  None .text      e_gf_chance__FP10e_gb_class                                  */
//	806C452C: 803621DC (_savegpr_29)
//	806C4534: 806C74E8 (lit_3906)
//	806C4538: 806C74E8 (lit_3906)
//	806C45A0: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C45B0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C45B4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C45E0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806C4630: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C4648: 806C3C44 (s_b_sub__FPvPv)
//	806C464C: 806C3C44 (s_b_sub__FPvPv)
//	806C4654: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	806C4674: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void e_gf_chance(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/e_gf_chance__FP10e_gb_class.s"
}
#pragma pop


/* 806C4688-806C48EC 0264+00 s=1 e=0 z=0  None .text      e_gf_eatbomb__FP10e_gb_class                                 */
//	806C4698: 803621C8 (_savegpr_24)
//	806C46A0: 806C74E8 (lit_3906)
//	806C46A4: 806C74E8 (lit_3906)
//	806C46E0: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C46F0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C46F4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C4720: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806C4770: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C4780: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C4784: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C47B0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806C4824: 804061C0 (g_dComIfG_gameInfo)
//	806C4828: 804061C0 (g_dComIfG_gameInfo)
//	806C482C: 806C77B8 (eno_4864)
//	806C4830: 806C77B8 (eno_4864)
//	806C4880: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806C4894: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806C48BC: 802807E0 (func_802807E0)
//	806C48D8: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void e_gf_eatbomb(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/e_gf_eatbomb__FP10e_gb_class.s"
}
#pragma pop


/* 806C48EC-806C4AB4 01C8+00 s=1 e=0 z=0  None .text      e_gf_end__FP10e_gb_class                                     */
//	806C48FC: 803621DC (_savegpr_29)
//	806C4904: 806C74E8 (lit_3906)
//	806C4908: 806C74E8 (lit_3906)
//	806C4948: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C4958: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C495C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C4988: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806C49E4: 804061C0 (g_dComIfG_gameInfo)
//	806C49E8: 804061C0 (g_dComIfG_gameInfo)
//	806C49FC: 80035200 (onSwitch__10dSv_info_cFii)
//	806C4A14: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	806C4A18: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	806C4A20: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	806C4A58: 806C74B8 (setPos__7daKey_cF4cXyz)
//	806C4A78: 80CDA9AC (actionWaitInit__7daKey_cFv)
//	806C4A90: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	806C4A98: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	806C4AA0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void e_gf_end(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/e_gf_end__FP10e_gb_class.s"
}
#pragma pop


/* 806C4AB4-806C4CC4 0210+00 s=1 e=0 z=0  None .text      damage_check2__FP10e_gb_class                                */
//	806C4ACC: 806C74E8 (lit_3906)
//	806C4AD0: 806C74E8 (lit_3906)
//	806C4AE4: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806C4AFC: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	806C4B14: 80087514 (def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c)
//	806C4B40: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C4B50: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C4B54: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C4B80: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806C4BB4: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C4BC4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C4BC8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C4BF4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806C4C48: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C4CA8: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void damage_check2(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/damage_check2__FP10e_gb_class.s"
}
#pragma pop


/* 806C4CC4-806C4E28 0164+00 s=1 e=0 z=0  None .text      action2__FP10e_gb_class                                      */
//	806C4CDC: 806C4AB4 (damage_check2__FP10e_gb_class)
//	806C4D1C: 806C44F8 (e_gf_wait__FP10e_gb_class)
//	806C4D28: 806C451C (e_gf_chance__FP10e_gb_class)
//	806C4D38: 806C4688 (e_gf_eatbomb__FP10e_gb_class)
//	806C4D48: 806C48EC (e_gf_end__FP10e_gb_class)
//	806C4D58: 804061C0 (g_dComIfG_gameInfo)
//	806C4D5C: 804061C0 (g_dComIfG_gameInfo)
//	806C4D84: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	806C4D88: 80023578 (fpcSch_JudgeForPName__FPvPv)
//	806C4D90: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	806C4DBC: 8002D06C (dComIfGp_getReverb__Fi)
//	806C4DD0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C4DD4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C4DE8: 806C74F0 (lit_3908)
//	806C4DEC: 806C74F0 (lit_3908)
//	806C4DF4: 806C7518 (lit_3941)
//	806C4DF8: 806C7518 (lit_3941)
//	806C4E04: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void action2(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/action2__FP10e_gb_class.s"
}
#pragma pop


/* 806C4E28-806C4F0C 00E4+00 s=1 e=0 z=0  None .text      cam_3d_morf__FP10e_gb_classf                                 */
//	806C4E60: 8026FA3C (cLib_addCalc2__FPffff)
//	806C4E7C: 8026FA3C (cLib_addCalc2__FPffff)
//	806C4E98: 8026FA3C (cLib_addCalc2__FPffff)
//	806C4EB4: 8026FA3C (cLib_addCalc2__FPffff)
//	806C4ED0: 8026FA3C (cLib_addCalc2__FPffff)
//	806C4EEC: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
//  f32 False
asm static void cam_3d_morf(e_gb_class* param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/cam_3d_morf__FP10e_gb_classf.s"
}
#pragma pop


/* 806C4F0C-806C59F4 0AE8+00 s=1 e=0 z=0  None .text      demo_camera__FP10e_gb_class                                  */
//	806C4F1C: 803621D4 (_savegpr_27)
//	806C4F24: 806C74E8 (lit_3906)
//	806C4F28: 806C74E8 (lit_3906)
//	806C4F2C: 804061C0 (g_dComIfG_gameInfo)
//	806C4F30: 804061C0 (g_dComIfG_gameInfo)
//	806C4FB8: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	806C4FD0: 801614D0 (Stop__9dCamera_cFv)
//	806C4FF4: 8016300C (SetTrimSize__9dCamera_cFl)
//	806C511C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C5120: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C5130: 802B4164 (setBattleBgmOff__8Z2SeqMgrFb)
//	806C5134: 804061C0 (g_dComIfG_gameInfo)
//	806C5138: 804061C0 (g_dComIfG_gameInfo)
//	806C5144: 800428DC (dEv_noFinishSkipProc__FPvi)
//	806C5148: 800428DC (dEv_noFinishSkipProc__FPvi)
//	806C5150: 80042914 (setSkipProc__14dEvt_control_cFPvPFPvi_ii)
//	806C5154: 804061C0 (g_dComIfG_gameInfo)
//	806C5158: 804061C0 (g_dComIfG_gameInfo)
//	806C516C: 80035200 (onSwitch__10dSv_info_cFii)
//	806C51BC: 806C4E28 (cam_3d_morf__FP10e_gb_classf)
//	806C51D0: 8026FA3C (cLib_addCalc2__FPffff)
//	806C5300: 806C4E28 (cam_3d_morf__FP10e_gb_classf)
//	806C5314: 8026FA3C (cLib_addCalc2__FPffff)
//	806C53E8: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C53F8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C53FC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C5428: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806C554C: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C559C: 806C1D3C (head_anm_init__FP10e_gb_classifUcf)
//	806C55F0: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C5600: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C5604: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C5630: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806C5650: 806C4E28 (cam_3d_morf__FP10e_gb_classf)
//	806C5664: 8026FA3C (cLib_addCalc2__FPffff)
//	806C5684: 8026FA3C (cLib_addCalc2__FPffff)
//	806C56D8: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C5704: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C5708: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C5718: 802B4164 (setBattleBgmOff__8Z2SeqMgrFb)
//	806C573C: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	806C5754: 801614D0 (Stop__9dCamera_cFv)
//	806C5778: 8016300C (SetTrimSize__9dCamera_cFl)
//	806C5830: 80180C18 (Reset__9dCamera_cF4cXyz4cXyz)
//	806C5838: 801614AC (Start__9dCamera_cFv)
//	806C5844: 8016300C (SetTrimSize__9dCamera_cFl)
//	806C5848: 804061C0 (g_dComIfG_gameInfo)
//	806C584C: 804061C0 (g_dComIfG_gameInfo)
//	806C5854: 80042468 (reset__14dEvt_control_cFv)
//	806C58C4: 80180AE0 (Set__9dCamera_cF4cXyz4cXyzfs)
//	806C58E0: 804061C0 (g_dComIfG_gameInfo)
//	806C58E4: 804061C0 (g_dComIfG_gameInfo)
//	806C58F4: 800425E8 (dEv_defaultSkipProc__FPvi)
//	806C58F8: 800425E8 (dEv_defaultSkipProc__FPvi)
//	806C5900: 80042914 (setSkipProc__14dEvt_control_cFPvPFPvi_ii)
//	806C5918: 80450768 (calc_mtx)
//	806C591C: 80450768 (calc_mtx)
//	806C5928: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806C594C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C595C: 80347090 (PSVECAdd)
//	806C59B0: 806C1DEC (body_anm_init__FP10e_gb_classifUcf)
//	806C59C4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C59C8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C59D8: 802B4164 (setBattleBgmOff__8Z2SeqMgrFb)
//	806C59E0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void demo_camera(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/demo_camera__FP10e_gb_class.s"
}
#pragma pop


/* 806C59F4-806C64A0 0AAC+00 s=2 e=0 z=0  None .text      daE_GB_Execute__FP10e_gb_class                               */
//	806C5A0C: 803621C0 (_savegpr_22)
//	806C5A14: 806C74E8 (lit_3906)
//	806C5A18: 806C74E8 (lit_3906)
//	806C5A80: 806C3F0C (action__FP10e_gb_class)
//	806C5A98: 8002D06C (dComIfGp_getReverb__Fi)
//	806C5ABC: 806C4CC4 (action2__FP10e_gb_class)
//	806C5AC0: 803DD470 (now__14mDoMtx_stack_c)
//	806C5AC4: 803DD470 (now__14mDoMtx_stack_c)
//	806C5AD4: 803468E8 (PSMTXTrans)
//	806C5AD8: 803DD470 (now__14mDoMtx_stack_c)
//	806C5ADC: 803DD470 (now__14mDoMtx_stack_c)
//	806C5AE4: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806C5AE8: 803DD470 (now__14mDoMtx_stack_c)
//	806C5AEC: 803DD470 (now__14mDoMtx_stack_c)
//	806C5AF4: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806C5AF8: 803DD470 (now__14mDoMtx_stack_c)
//	806C5AFC: 803DD470 (now__14mDoMtx_stack_c)
//	806C5B0C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806C5B10: 803DD470 (now__14mDoMtx_stack_c)
//	806C5B14: 803DD470 (now__14mDoMtx_stack_c)
//	806C5B1C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806C5B20: 803DD470 (now__14mDoMtx_stack_c)
//	806C5B24: 803DD470 (now__14mDoMtx_stack_c)
//	806C5B2C: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806C5B30: 803DD470 (now__14mDoMtx_stack_c)
//	806C5B34: 803DD470 (now__14mDoMtx_stack_c)
//	806C5B3C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	806C5B40: 806C7938 (l_HIO)
//	806C5B44: 806C7938 (l_HIO)
//	806C5B54: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806C5B60: 803DD470 (now__14mDoMtx_stack_c)
//	806C5B64: 803DD470 (now__14mDoMtx_stack_c)
//	806C5B6C: 803464B0 (PSMTXCopy)
//	806C5B78: 8002D06C (dComIfGp_getReverb__Fi)
//	806C5B8C: 800105C8 (play__14mDoExt_McaMorfFP3VecUlSc)
//	806C5B94: 800106AC (modelCalc__14mDoExt_McaMorfFv)
//	806C5BA4: 80450768 (calc_mtx)
//	806C5BA8: 80450768 (calc_mtx)
//	806C5BB0: 803464B0 (PSMTXCopy)
//	806C5BE0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C5C18: 804061C0 (g_dComIfG_gameInfo)
//	806C5C1C: 804061C0 (g_dComIfG_gameInfo)
//	806C5C6C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806C5C80: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806C5CA4: 80280808 (func_80280808)
//	806C5CC4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806C5D04: 804061C0 (g_dComIfG_gameInfo)
//	806C5D08: 804061C0 (g_dComIfG_gameInfo)
//	806C5D58: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806C5D6C: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806C5D90: 80280808 (func_80280808)
//	806C5DBC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806C5E0C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C5E34: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806C5E48: 8015F8C8 (checkBoomerangChargeTime__9daPy_py_cFv)
//	806C5E64: 8026F708 (SetR__8cM3dGSphFf)
//	806C5E7C: 8026F708 (SetR__8cM3dGSphFf)
//	806C5E80: 804061C0 (g_dComIfG_gameInfo)
//	806C5E84: 804061C0 (g_dComIfG_gameInfo)
//	806C5E94: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806C5EC8: 803DD470 (now__14mDoMtx_stack_c)
//	806C5ECC: 803DD470 (now__14mDoMtx_stack_c)
//	806C5EDC: 803468E8 (PSMTXTrans)
//	806C5EE0: 803DD470 (now__14mDoMtx_stack_c)
//	806C5EE4: 803DD470 (now__14mDoMtx_stack_c)
//	806C5EEC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806C5EF0: 806C7938 (l_HIO)
//	806C5EF4: 806C7938 (l_HIO)
//	806C5F04: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806C5F10: 803DD470 (now__14mDoMtx_stack_c)
//	806C5F14: 803DD470 (now__14mDoMtx_stack_c)
//	806C5F1C: 803464B0 (PSMTXCopy)
//	806C5F30: 800105C8 (play__14mDoExt_McaMorfFP3VecUlSc)
//	806C5F38: 8000D428 (play__14mDoExt_baseAnmFv)
//	806C5F40: 800106AC (modelCalc__14mDoExt_McaMorfFv)
//	806C5F64: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806C5F7C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C5F80: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C5FAC: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806C6014: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	806C6028: 8026F200 (SetR__8cM3dGCylFf)
//	806C603C: 8026F1F8 (SetH__8cM3dGCylFf)
//	806C6048: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806C60C8: 80450768 (calc_mtx)
//	806C60CC: 80450768 (calc_mtx)
//	806C60D4: 803464B0 (PSMTXCopy)
//	806C60F4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806C6104: 803DD470 (now__14mDoMtx_stack_c)
//	806C6108: 803DD470 (now__14mDoMtx_stack_c)
//	806C6118: 803468E8 (PSMTXTrans)
//	806C611C: 803DD470 (now__14mDoMtx_stack_c)
//	806C6120: 803DD470 (now__14mDoMtx_stack_c)
//	806C6128: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806C612C: 803DD470 (now__14mDoMtx_stack_c)
//	806C6130: 803DD470 (now__14mDoMtx_stack_c)
//	806C6138: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806C613C: 803DD470 (now__14mDoMtx_stack_c)
//	806C6140: 803DD470 (now__14mDoMtx_stack_c)
//	806C6148: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806C6158: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806C615C: 803DD470 (now__14mDoMtx_stack_c)
//	806C6160: 803DD470 (now__14mDoMtx_stack_c)
//	806C616C: 803464B0 (PSMTXCopy)
//	806C6194: 804061C0 (g_dComIfG_gameInfo)
//	806C6198: 804061C0 (g_dComIfG_gameInfo)
//	806C619C: 806C77C4 (key_eno)
//	806C61A0: 806C77C4 (key_eno)
//	806C61F0: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806C63A0: 80439A20 (sincosTable___5JMath)
//	806C63A4: 80439A20 (sincosTable___5JMath)
//	806C63D4: 80270E5C (MtxTrans__FfffUc)
//	806C63D8: 80450768 (calc_mtx)
//	806C63DC: 80450768 (calc_mtx)
//	806C63EC: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806C63F0: 80450768 (calc_mtx)
//	806C63F4: 80450768 (calc_mtx)
//	806C640C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806C6428: 80270EA4 (MtxScale__FfffUc)
//	806C643C: 80270E5C (MtxTrans__FfffUc)
//	806C6440: 80450768 (calc_mtx)
//	806C6444: 80450768 (calc_mtx)
//	806C6454: 803464B0 (PSMTXCopy)
//	806C6478: 806C4F0C (demo_camera__FP10e_gb_class)
//	806C648C: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void daE_GB_Execute(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/daE_GB_Execute__FP10e_gb_class.s"
}
#pragma pop


/* 806C64A0-806C64A8 0008+00 s=1 e=0 z=0  None .text      daE_GB_IsDelete__FP10e_gb_class                              */
// True False
//  bool False
//  e_gb_class* False
// 	 e_gb_class False
static bool daE_GB_IsDelete(e_gb_class* param_0) {
	return true;
}


/* 806C64A8-806C651C 0074+00 s=1 e=0 z=0  None .text      daE_GB_Delete__FP10e_gb_class                                */
//	806C64C0: 806C76B8 (stringBase0)
//	806C64C4: 806C76B8 (stringBase0)
//	806C64C8: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	806C64DC: 806C7928 (data_806C7928)
//	806C64E0: 806C7928 (data_806C7928)
//	806C6500: 802C06F4 (stopAnime__10Z2CreatureFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_gb_class* False
// 	 e_gb_class False
asm static void daE_GB_Delete(e_gb_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/daE_GB_Delete__FP10e_gb_class.s"
}
#pragma pop


/* 806C651C-806C6894 0378+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	806C6534: 803621D0 (_savegpr_26)
//	806C6540: 802CEC4C (__nw__FUl)
//	806C654C: 806C76B8 (stringBase0)
//	806C6550: 806C76B8 (stringBase0)
//	806C6558: 804061C0 (g_dComIfG_gameInfo)
//	806C655C: 804061C0 (g_dComIfG_gameInfo)
//	806C6570: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806C6578: 806C76B8 (stringBase0)
//	806C657C: 806C76B8 (stringBase0)
//	806C658C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806C65CC: 806C74F0 (lit_3908)
//	806C65D0: 806C74F0 (lit_3908)
//	806C65DC: 8000FC4C (__ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl)
//	806C660C: 802CEC4C (__nw__FUl)
//	806C6618: 806C76B8 (stringBase0)
//	806C661C: 806C76B8 (stringBase0)
//	806C6624: 804061C0 (g_dComIfG_gameInfo)
//	806C6628: 804061C0 (g_dComIfG_gameInfo)
//	806C663C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806C6644: 806C76B8 (stringBase0)
//	806C6648: 806C76B8 (stringBase0)
//	806C6658: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806C6698: 806C74F0 (lit_3908)
//	806C669C: 806C74F0 (lit_3908)
//	806C66A8: 8000FC4C (__ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl)
//	806C66E0: 802CEC4C (__nw__FUl)
//	806C66EC: 806C7908 (__vt__12J3DFrameCtrl)
//	806C66F0: 806C7908 (__vt__12J3DFrameCtrl)
//	806C66FC: 803283FC (init__12J3DFrameCtrlFs)
//	806C6720: 806C76B8 (stringBase0)
//	806C6724: 806C76B8 (stringBase0)
//	806C672C: 804061C0 (g_dComIfG_gameInfo)
//	806C6730: 804061C0 (g_dComIfG_gameInfo)
//	806C6744: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806C6768: 806C74F0 (lit_3908)
//	806C676C: 806C74F0 (lit_3908)
//	806C6778: 8000D70C (init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss)
//	806C678C: 806C74EC (lit_3907)
//	806C6790: 806C74EC (lit_3907)
//	806C679C: 806C76B8 (stringBase0)
//	806C67A0: 806C76B8 (stringBase0)
//	806C67B0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806C67C4: 806C74F0 (lit_3908)
//	806C67C8: 806C74F0 (lit_3908)
//	806C67D8: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	806C680C: 804061C0 (g_dComIfG_gameInfo)
//	806C6810: 804061C0 (g_dComIfG_gameInfo)
//	806C6818: 806C76B8 (stringBase0)
//	806C681C: 806C76B8 (stringBase0)
//	806C6824: 80368994 (strcmp)
//	806C6830: 806C76B8 (stringBase0)
//	806C6834: 806C76B8 (stringBase0)
//	806C6844: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806C6854: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	806C6880: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 806C6894-806C68DC 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv                                       */
//	806C68AC: 806C7908 (__vt__12J3DFrameCtrl)
//	806C68B0: 806C7908 (__vt__12J3DFrameCtrl)
//	806C68C0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 806C68DC-806C6B94 02B8+00 s=1 e=0 z=0  None .text      daE_GB_Create__FP10fopAc_ac_c                                */
//	806C68EC: 803621DC (_savegpr_29)
//	806C68F4: 806C74E8 (lit_3906)
//	806C68F8: 806C74E8 (lit_3906)
//	806C6910: 806C6B94 (__ct__10e_gb_classFv)
//	806C6924: 806C76B8 (stringBase0)
//	806C6928: 806C76B8 (stringBase0)
//	806C692C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	806C694C: 804061C0 (g_dComIfG_gameInfo)
//	806C6950: 804061C0 (g_dComIfG_gameInfo)
//	806C695C: 80035360 (isSwitch__10dSv_info_cCFii)
//	806C69A0: 806C651C (useHeapInit__FP10fopAc_ac_c)
//	806C69A4: 806C651C (useHeapInit__FP10fopAc_ac_c)
//	806C69B0: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	806C69C4: 806C7928 (data_806C7928)
//	806C69C8: 806C7928 (data_806C7928)
//	806C69E4: 806C7938 (l_HIO)
//	806C69E8: 806C7938 (l_HIO)
//	806C6A14: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	806C6A1C: 806C77C8 (head_cc_sph_src)
//	806C6A20: 806C77C8 (head_cc_sph_src)
//	806C6A24: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806C6A34: 806C7808 (body_cyl_src)
//	806C6A38: 806C7808 (body_cyl_src)
//	806C6A3C: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	806C6A7C: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	806C6A8C: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	806C6AB0: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	806C6AB8: 806C76B8 (stringBase0)
//	806C6ABC: 806C76B8 (stringBase0)
//	806C6AC0: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	806C6AC8: 80267954 (cM_rndF__Ff)
//	806C6AF4: 804061C0 (g_dComIfG_gameInfo)
//	806C6AF8: 804061C0 (g_dComIfG_gameInfo)
//	806C6AFC: 80035360 (isSwitch__10dSv_info_cCFii)
//	806C6B2C: 806C59F4 (daE_GB_Execute__FP10e_gb_class)
//	806C6B30: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C6B34: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806C6B80: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daE_GB_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/daE_GB_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 806C6B94-806C6D34 01A0+00 s=1 e=0 z=0  None .text      __ct__10e_gb_classFv                                         */
//	806C6BAC: 80018B64 (__ct__10fopAc_ac_cFv)
//	806C6BB4: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	806C6BBC: 806C6F4C (__ct__4cXyzFv)
//	806C6BC0: 806C6F4C (__ct__4cXyzFv)
//	806C6BC4: 806C747C (__dt__4cXyzFv)
//	806C6BC8: 806C747C (__dt__4cXyzFv)
//	806C6BD4: 80361D60 (__construct_array)
//	806C6BDC: 806C6F48 (__ct__5csXyzFv)
//	806C6BE0: 806C6F48 (__ct__5csXyzFv)
//	806C6BE4: 806C7440 (__dt__5csXyzFv)
//	806C6BE8: 806C7440 (__dt__5csXyzFv)
//	806C6BF4: 80361D60 (__construct_array)
//	806C6BF8: 803C3728 (__vt__9cCcD_Stts)
//	806C6BFC: 803C3728 (__vt__9cCcD_Stts)
//	806C6C08: 80083760 (__ct__10dCcD_GSttsFv)
//	806C6C0C: 803AC2E4 (__vt__9dCcD_Stts)
//	806C6C10: 803AC2E4 (__vt__9dCcD_Stts)
//	806C6C28: 80083A28 (__ct__12dCcD_GObjInfFv)
//	806C6C2C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806C6C30: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806C6C38: 806C78FC (__vt__8cM3dGAab)
//	806C6C3C: 806C78FC (__vt__8cM3dGAab)
//	806C6C44: 806C78F0 (__vt__8cM3dGSph)
//	806C6C48: 806C78F0 (__vt__8cM3dGSph)
//	806C6C50: 803C3540 (__vt__12cCcD_SphAttr)
//	806C6C54: 803C3540 (__vt__12cCcD_SphAttr)
//	806C6C64: 803ABFC0 (__vt__8dCcD_Sph)
//	806C6C68: 803ABFC0 (__vt__8dCcD_Sph)
//	806C6C88: 80083A28 (__ct__12dCcD_GObjInfFv)
//	806C6C8C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806C6C90: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806C6C98: 806C78FC (__vt__8cM3dGAab)
//	806C6C9C: 806C78FC (__vt__8cM3dGAab)
//	806C6CA4: 806C78E4 (__vt__8cM3dGCyl)
//	806C6CA8: 806C78E4 (__vt__8cM3dGCyl)
//	806C6CB0: 803C35A4 (__vt__12cCcD_CylAttr)
//	806C6CB4: 803C35A4 (__vt__12cCcD_CylAttr)
//	806C6CC4: 803AC050 (__vt__8dCcD_Cyl)
//	806C6CC8: 803AC050 (__vt__8dCcD_Cyl)
//	806C6CE4: 80075EAC (__ct__12dBgS_AcchCirFv)
//	806C6CF0: 800760A0 (__ct__9dBgS_AcchFv)
//	806C6CF4: 806C78C0 (__vt__12dBgS_ObjAcch)
//	806C6CF8: 806C78C0 (__vt__12dBgS_ObjAcch)
//	806C6D14: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm e_gb_class::e_gb_class() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__ct__10e_gb_classFv.s"
}
#pragma pop


/* 806C6D34-806C6DA4 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	806C6D54: 806C78C0 (__vt__12dBgS_ObjAcch)
//	806C6D58: 806C78C0 (__vt__12dBgS_ObjAcch)
//	806C6D74: 80075F94 (__dt__9dBgS_AcchFv)
//	806C6D84: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 806C6DA4-806C6E14 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	806C6DC4: 806C78B4 (__vt__12dBgS_AcchCir)
//	806C6DC8: 806C78B4 (__vt__12dBgS_AcchCir)
//	806C6DD8: 8026EF18 (__dt__8cM3dGCirFv)
//	806C6DE4: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	806C6DF4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 806C6E14-806C6E5C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	806C6E2C: 806C78E4 (__vt__8cM3dGCyl)
//	806C6E30: 806C78E4 (__vt__8cM3dGCyl)
//	806C6E40: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 806C6E5C-806C6EA4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	806C6E74: 806C78F0 (__vt__8cM3dGSph)
//	806C6E78: 806C78F0 (__vt__8cM3dGSph)
//	806C6E88: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 806C6EA4-806C6EEC 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	806C6EBC: 806C78FC (__vt__8cM3dGAab)
//	806C6EC0: 806C78FC (__vt__8cM3dGAab)
//	806C6ED0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 806C6EEC-806C6F48 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	806C6F04: 806C78A8 (__vt__10dCcD_GStts)
//	806C6F08: 806C78A8 (__vt__10dCcD_GStts)
//	806C6F14: 806C789C (__vt__10cCcD_GStts)
//	806C6F18: 806C789C (__vt__10cCcD_GStts)
//	806C6F2C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 806C6F48-806C6F4C 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 806C6F4C-806C6F50 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 806C6F50-806C6F98 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	806C6F68: 806C789C (__vt__10cCcD_GStts)
//	806C6F6C: 806C789C (__vt__10cCcD_GStts)
//	806C6F7C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 806C6F98-806C6FE0 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_GB_HIO_cFv                                       */
//	806C6FB0: 806C7914 (__vt__12daE_GB_HIO_c)
//	806C6FB4: 806C7914 (__vt__12daE_GB_HIO_c)
//	806C6FC4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_GB_HIO_c::~daE_GB_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__12daE_GB_HIO_cFv.s"
}
#pragma pop


/* 806C6FE0-806C701C 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_gb_cpp                                         */
//	806C6FEC: 806C7938 (l_HIO)
//	806C6FF0: 806C7938 (l_HIO)
//	806C6FF4: 806C1CEC (__ct__12daE_GB_HIO_cFv)
//	806C6FF8: 806C6F98 (__dt__12daE_GB_HIO_cFv)
//	806C6FFC: 806C6F98 (__dt__12daE_GB_HIO_cFv)
//	806C7000: 806C792C (lit_3922)
//	806C7004: 806C792C (lit_3922)
//	806C7008: 806C1C78 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_gb_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__sinit_d_a_e_gb_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_806C6FE0 = (void*)__sinit_d_a_e_gb_cpp;
#pragma pop


/* 806C701C-806C7024 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	806C7020: 806C6D34 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_806C701C() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/func_806C701C.s"
}
#pragma pop


/* 806C7024-806C702C 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	806C7028: 806C6D34 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_806C7024() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/func_806C7024.s"
}
#pragma pop


/* 806C702C-806C7440 0414+00 s=1 e=0 z=0  None .text      setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz */
//	806C703C: 803621B4 (_savegpr_19)
//	806C7050: 806C76C4 (cNullVec__6Z2Calc)
//	806C7054: 806C76C4 (cNullVec__6Z2Calc)
//	806C7058: 806C74E8 (lit_3906)
//	806C705C: 806C74E8 (lit_3906)
//	806C7060: 804061C0 (g_dComIfG_gameInfo)
//	806C7064: 804061C0 (g_dComIfG_gameInfo)
//	806C706C: 80451018 (m_midnaActor__9daPy_py_c)
//	806C7070: 80451018 (m_midnaActor__9daPy_py_c)
//	806C7098: 801AC57C (dKy_darkworld_check__Fv)
//	806C70BC: 80451018 (m_midnaActor__9daPy_py_c)
//	806C70C0: 80451018 (m_midnaActor__9daPy_py_c)
//	806C70D8: 803DD470 (now__14mDoMtx_stack_c)
//	806C70DC: 803DD470 (now__14mDoMtx_stack_c)
//	806C70E0: 803464B0 (PSMTXCopy)
//	806C70F8: 803DD470 (now__14mDoMtx_stack_c)
//	806C70FC: 803DD470 (now__14mDoMtx_stack_c)
//	806C7108: 80346D6C (PSMTXMultVec)
//	806C7118: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806C7134: 80267674 (cM_atan2s__Fff)
//	806C7168: 80267674 (cM_atan2s__Fff)
//	806C7184: 804061C0 (g_dComIfG_gameInfo)
//	806C7188: 804061C0 (g_dComIfG_gameInfo)
//	806C71D8: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806C71E8: 80347138 (PSVECSquareMag)
//	806C7258: 80450AE0 (__float_nan)
//	806C725C: 80450AE0 (__float_nan)
//	806C72C8: 80450AE0 (__float_nan)
//	806C72CC: 80450AE0 (__float_nan)
//	806C7320: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806C735C: 804061C0 (g_dComIfG_gameInfo)
//	806C7360: 804061C0 (g_dComIfG_gameInfo)
//	806C73CC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806C742C: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
asm static void setMidnaBindEffect(fopEn_enemy_c* param_0, Z2CreatureEnemy* param_1, cXyz* param_2, cXyz* param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz.s"
}
#pragma pop


/* 806C7440-806C747C 003C+00 s=1 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	806C7460: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__5csXyzFv.s"
}
#pragma pop


/* 806C747C-806C74B8 003C+00 s=1 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	806C749C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/__dt__4cXyzFv.s"
}
#pragma pop


/* 806C74B8-806C74D4 001C+00 s=1 e=0 z=0  None .text      setPos__7daKey_cF4cXyz                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz False
asm void daKey_c::setPos(cXyz param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_gb/d_a_e_gb/setPos__7daKey_cF4cXyz.s"
}
#pragma pop


