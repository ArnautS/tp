// 
// Generated By: dol2asm
// Translation Unit: d_a_e_db
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_db/d_a_e_db.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct Vec {
};

struct mDoExt_McaMorf {
	/* 8001037C */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  void* False
// 	 void False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32, void*);
	/* 800105C8 */ // False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
void play(Vec*, u32, s8);
};

struct mDoExt_3DlineMat_c {
};

struct mDoExt_3DlineMatSortPacket {
	/* 80014738 */ // False False
//  mDoExt_3DlineMat_c* False
// 	 mDoExt_3DlineMat_c False
void setMat(mDoExt_3DlineMat_c*);
};

struct _GXColor {
};

struct dKy_tevstr_c {
};

struct ResTIMG {
};

struct mDoExt_3DlineMat1_c {
	/* 80013360 */ // False False
//  u16 False
//  u16 False
//  ResTIMG* False
// 	 ResTIMG False
//  int False
void init(u16, u16, ResTIMG*, int);
	/* 80013FB0 */ // False False
//  int False
//  _GXColor& False
// 	 _GXColor False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void update(int, _GXColor&, dKy_tevstr_c*);
};

struct fopEn_enemy_c {
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 806A138C */ // True False
cXyz();
	/* 806A18BC */ // True False
~cXyz();
};

struct fopAcM_gc_c {
	/* 8001DCBC */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void gndCheck(cXyz const*);
};

struct e_db_class {
};

struct daPy_py_c {
	/* 8015F4F0 */ // False False
//  cXyz* False
// 	 cXyz False
void setLookPos(cXyz*);
};

struct daE_DB_HIO_c {
	/* 8069AAEC */ // True False
daE_DB_HIO_c();
	/* 806A13D8 */ // True False
~daE_DB_HIO_c();
};

struct dVibration_c {
	/* 8006FA24 */ // False False
//  int False
//  int False
//  cXyz False
void StartShock(int, int, cXyz);
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
	/* 80035644 */ // False False
//  int False
//  int False
void onActor(int, int);
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
	/* 806A1388 */ // True False
csXyz();
	/* 806A1880 */ // True False
~csXyz();
};

struct dPa_control_c {
	struct level_c {
		/* 8004B8B4 */ // False False
//  u32 False
void forceOnEventMove(u32);
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 80084A78 */ // False False
//  cXyz& False
// 	 cXyz False
void StartCAt(cXyz&);
	/* 80084AC4 */ // False False
//  cXyz& False
// 	 cXyz False
void MoveCAt(cXyz&);
	/* 806A114C */ // True False
dCcD_Sph();
	/* 806A11D0 */ // True False
~dCcD_Sph();
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 806A132C */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 800842C0 */ // False False
void ChkAtHit();
	/* 80084358 */ // False False
void GetAtHitObj();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjGndChk_Spl {
	/* 800777B0 */ // False False
dBgS_ObjGndChk_Spl();
	/* 80077848 */ // False False
~dBgS_ObjGndChk_Spl();
};

struct dBgS_ObjAcch {
	/* 806A106C */ // True False
~dBgS_ObjAcch();
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 806A10DC */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 806A129C */ // True False
~cM3dGSph();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 806A12E4 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
	/* 80263A48 */ // False False
void GetAc();
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 806A1390 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_GndChk {
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
	/* 80267D0C */ // False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void SetPos(Vec const*);
};

struct cBgS {
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
};

struct _GXTexObj {
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C1B7C */ // False False
//  bool False
void setLinkSearch(bool);
	/* 802C1B90 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void setEnemyName(char const*);
};

struct JPABaseEmitter {
	/* 8027EC60 */ // False False
void deleteAllParticle();
};

struct JGeometry {
	template <typename A1>
	struct TVec3 { };
	/* TVec3<f32> */
	struct TVec3__template0 {
	};

};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
};

// 
// Forward References:
// 

// True False
//  e_db_class* False
// 	 e_db_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void anm_init(e_db_class*, int, f32, u8, f32);
// True False
//  e_db_class* False
// 	 e_db_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void leaf_anm_init(e_db_class*, int, f32, u8, f32);
// True False
//  e_db_class* False
// 	 e_db_class False
static void daE_DB_Draw(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
//  f32 False
static void pl_check(e_db_class*, f32);
// True False
//  e_db_class* False
// 	 e_db_class False
static void damage_check(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_stay(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_appear(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_appear_v(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_wait(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_mk_roof(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_attack(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_attack_s(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_chance(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_s_damage(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_damage(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void kuki_control1(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void kuki_control2(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void kuki_control3(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void kuki_ha_set(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void kuki_control1_e(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_escape(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void e_db_e_dead(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void action(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
//  int False
static void eff_set(e_db_class*, int);
// True False
//  e_db_class* False
// 	 e_db_class False
static void anm_se_set(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void daE_DB_Execute(e_db_class*);
// True False
//  bool False
//  e_db_class* False
// 	 e_db_class False
static bool daE_DB_IsDelete(e_db_class*);
// True False
//  e_db_class* False
// 	 e_db_class False
static void daE_DB_Delete(e_db_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daE_DB_Create(fopAc_ac_c*);
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
static void setMidnaBindEffect(fopEn_enemy_c*, Z2CreatureEnemy*, cXyz*, cXyz*);

// True False
extern "C" void __ct__12daE_DB_HIO_cFv();
// True False
//  e_db_class* False
// 	 e_db_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void anm_init__FP10e_db_classifUcf();
// True False
//  e_db_class* False
// 	 e_db_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void leaf_anm_init__FP10e_db_classifUcf();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void daE_DB_Draw__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
//  f32 False
extern "C" static void pl_check__FP10e_db_classf();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void damage_check__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_stay__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_appear__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_appear_v__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_wait__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_mk_roof__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_attack__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_attack_s__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_chance__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_s_damage__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_damage__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void kuki_control1__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void kuki_control2__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void kuki_control3__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void kuki_ha_set__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void kuki_control1_e__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_escape__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void e_db_e_dead__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void action__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
//  int False
extern "C" static void eff_set__FP10e_db_classi();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void anm_se_set__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void daE_DB_Execute__FP10e_db_class();
// True False
//  bool False
//  e_db_class* False
// 	 e_db_class False
extern "C" static bool daE_DB_IsDelete__FP10e_db_class();
// True False
//  e_db_class* False
// 	 e_db_class False
extern "C" static void daE_DB_Delete__FP10e_db_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daE_DB_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __ct__8dCcD_SphFv();
// True False
extern "C" void __dt__8dCcD_SphFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __ct__4cXyzFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__12daE_DB_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_db_cpp();
// True False
extern "C" static void func_806A145C();
// True False
extern "C" static void func_806A1464();
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" static void setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __dt__4cXyzFv();
extern "C" extern u8 const lit_3905[8];
extern "C" extern u8 const lit_3906[8];
extern "C" extern u8 const lit_3907[8];
extern "C" extern u32 const lit_3908;
extern "C" extern u32 const lit_3923;
extern "C" extern u32 const lit_3924;
extern "C" extern u32 const lit_4015;
extern "C" extern u32 const lit_4016;
extern "C" extern u32 const lit_4118;
extern "C" extern u32 const lit_4119;
extern "C" extern u32 const lit_4120;
extern "C" extern u32 const lit_4121;
extern "C" extern u32 const lit_4123;
extern "C" extern u32 const lit_4124;
extern "C" extern u32 const lit_4183;
extern "C" extern u32 const lit_4184;
extern "C" extern u32 const lit_4185;
extern "C" extern u32 const lit_4186;
extern "C" extern u32 const lit_4187;
extern "C" extern u32 const lit_4188;
extern "C" extern u32 const lit_4189;
extern "C" extern u32 const lit_4190;
extern "C" extern u32 const lit_4253;
extern "C" extern u32 const lit_4254;
extern "C" extern u32 const lit_4255;
extern "C" extern u32 const lit_4256;
extern "C" extern u32 const lit_4356;
extern "C" extern u32 const lit_4357;
extern "C" extern u32 const lit_4358;
extern "C" extern u32 const lit_4359;
extern "C" extern u32 const lit_4360;
extern "C" extern u32 const lit_4392;
extern "C" extern u32 const lit_4393;
extern "C" extern u32 const lit_4603;
extern "C" extern u32 const lit_4604;
extern "C" extern u32 const lit_4605;
extern "C" extern u32 const lit_4606;
extern "C" extern u32 const lit_4607;
extern "C" extern u32 const lit_4608;
extern "C" extern u32 const lit_4609;
extern "C" extern u32 const lit_4723;
extern "C" extern u32 const lit_4724;
extern "C" extern u32 const lit_4767;
extern "C" extern u32 const lit_4768;
extern "C" extern u32 const lit_4848;
extern "C" extern u32 const lit_4849;
extern "C" extern u32 const lit_4850;
extern "C" extern u32 const lit_4936;
extern "C" extern u32 const lit_4937;
extern "C" extern u32 const lit_5085;
extern "C" extern u32 const lit_5349;
extern "C" extern u32 const lit_5350;
extern "C" extern u32 const lit_5351;
extern "C" extern u32 const lit_5352;
extern "C" extern u32 const lit_5353;
extern "C" extern u32 const lit_5354;
extern "C" extern u32 const lit_5355;
extern "C" extern u32 const lit_5356;
extern "C" extern u32 const lit_5357;
extern "C" extern u32 const lit_5358;
extern "C" extern u32 const lit_5499;
extern "C" extern u32 const lit_5500;
extern "C" extern u32 const lit_5644;
extern "C" extern u32 const lit_5645;
extern "C" extern u32 const lit_5646;
extern "C" extern u32 const lit_5816;
extern "C" extern u32 const lit_5817;
extern "C" extern u32 const lit_5910;
extern "C" extern u32 const lit_5911;
extern "C" extern u32 const lit_6122;
extern "C" extern u32 const lit_6123;
extern "C" extern u32 const lit_6124;
extern "C" extern u32 const lit_6125[1 + 1 /* padding */];
extern "C" extern u8 const lit_6127[8];
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_806A1A94[8];
extern "C" extern u8 data_806A1A9C[8];
extern "C" extern u8 data_806A1AA4[6 + 2 /* padding */];
extern "C" extern u8 data_806A1C00[64];
extern "C" extern u8 data_806A1C40[64];
extern "C" extern u8 data_806A1C80[64];
extern "C" extern void* g_profile_E_DB[12];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__18mDoExt_3DlineMat_c[5];
extern "C" extern void* __vt__12daE_DB_HIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fopAcIt_Judge(void* (*)(void*, void*), void*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
void fopAcM_createChild(s16, unsigned int, u32, cXyz const*, int, csXyz const*, cXyz const*, s8, int (*)(void*));
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
void fopAcM_createDisappear(fopAc_ac_c const*, cXyz const*, u8, u8, u8);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_otherBgCheck(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
void fopAcM_effSmokeSet1(u32*, u32*, cXyz const*, csXyz const*, f32, dKy_tevstr_c const*, int);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  int False
void fopKyM_createWpillar(cXyz const*, f32, int);
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
void fpcSch_JudgeByID(void*, void*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void def_se_set(Z2Creature*, cCcD_Obj*, u32, fopAc_ac_c*);
// False False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void at_power_check(dCcU_AtInfo*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void MtxScale(f32, f32, f32, u8);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void MtxPosition(cXyz*, cXyz*);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxSTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*, JGeometry::TVec3__template0*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  void* False
// 	 void False
extern "C" void setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv();
// False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
extern "C" void play__14mDoExt_McaMorfFP3VecUlSc();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
//  u16 False
//  u16 False
//  ResTIMG* False
// 	 ResTIMG False
//  int False
extern "C" void init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi();
// False False
//  int False
//  _GXColor& False
// 	 _GXColor False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c();
// False False
//  mDoExt_3DlineMat_c* False
// 	 mDoExt_3DlineMat_c False
extern "C" void setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
extern "C" void fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  f32 False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  int False
extern "C" void fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  int False
extern "C" void fopKyM_createWpillar__FPC4cXyzfi();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" void fpcSch_JudgeByID__FPvPv();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  int False
//  int False
extern "C" void onActor__10dSv_info_cFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
extern "C" void forceOnEventMove__Q213dPa_control_c7level_cFUl();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartShock__12dVibration_cFii4cXyz();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __dt__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkAtHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetAtHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void StartCAt__8dCcD_SphFR4cXyz();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void MoveCAt__8dCcD_SphFR4cXyz();
// False False
//  Z2Creature* False
// 	 Z2Creature False
//  cCcD_Obj* False
// 	 cCcD_Obj False
//  u32 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c();
// False False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void at_power_check__FP11dCcU_AtInfo();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
//  cXyz* False
// 	 cXyz False
extern "C" void setLookPos__9daPy_py_cFP4cXyz();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
extern "C" void GetAc__8cCcD_ObjFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void SetPos__11cBgS_GndChkFPC3Vec();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void MtxScale__FfffUc();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void MtxPosition__FP4cXyzP4cXyz();
// False False
extern "C" void deleteAllParticle__14JPABaseEmitterFv();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_802807E0();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_80280808();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  bool False
extern "C" void setLinkSearch__15Z2CreatureEnemyFb();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void setEnemyName__15Z2CreatureEnemyFPCc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSubtract();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_20();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_20();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* __vt__19mDoExt_3DlineMat1_c[5];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mGndCheck__11fopAcM_gc_c[84];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 806A190C-806A1910 0004+00 s=23 e=0 z=0  None .rodata    @3902                                                        */
SECTION_RODATA static u32 const lit_3902 = 0x42C80000;

/* 806A1A74-806A1A80 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806A1A80-806A1A94 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 806A1A94-806A1A9C 0008+00 s=0 e=0 z=0  None .data      e_prim$3781                                                  */
SECTION_DATA u8 data_806A1A94[8] = {
	0xFF, 0x78, 0x00, 0x00, 0xFF, 0x64, 0x78, 0x00,
};

/* 806A1A9C-806A1AA4 0008+00 s=0 e=0 z=0  None .data      e_env$3782                                                   */
SECTION_DATA u8 data_806A1A9C[8] = {
	0x5A, 0x2D, 0x2D, 0x00, 0x3C, 0x1E, 0x1E, 0x00,
};

/* 806A1AA4-806A1AAC 0006+02 s=0 e=0 z=0  None .data      eff_id$3790                                                  */
SECTION_DATA u8 data_806A1AA4[6 + 2 /* padding */] = {
	0x02, 0x9D, 0x02, 0x9E, 0x02, 0x9F,
	/* padding */
	0x00, 0x00,
};

/* 806A1AAC-806A1AB0 0004+00 s=1 e=0 z=0  None .data      l_color$3961                                                 */
SECTION_DATA static u8 l_color[4] = {
	0x14, 0x0F, 0x00, 0xFF,
};

/* 806A1AB0-806A1AC8 0016+02 s=1 e=0 z=0  None .data      pow_xa$4854                                                  */
SECTION_DATA static u8 pow_xa[22 + 2 /* padding */] = {
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x20, 0x00, 0x30, 0x00, 0x40, 0x00, 0x30, 0x00, 0x20, 0x00,
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 806A1AC8-806A1B94 00CC+00 s=1 e=0 z=0  None .data      @5359                                                        */
SECTION_DATA static void* lit_5359[51] = {
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xD8),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0x168),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0x290),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0x428),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0x4B8),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0x504),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0x558),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0x6C4),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0x95C),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0xAC0),
	(void*)(((char*)e_db_escape__FP10e_db_class)+0x9B0),
};

/* 806A1B94-806A1BEC 0058+00 s=1 e=0 z=0  None .data      @5647                                                        */
SECTION_DATA static void* lit_5647[22] = {
	(void*)(((char*)action__FP10e_db_class)+0x1D0),
	(void*)(((char*)action__FP10e_db_class)+0x1E4),
	(void*)(((char*)action__FP10e_db_class)+0x204),
	(void*)(((char*)action__FP10e_db_class)+0x224),
	(void*)(((char*)action__FP10e_db_class)+0x244),
	(void*)(((char*)action__FP10e_db_class)+0x264),
	(void*)(((char*)action__FP10e_db_class)+0x284),
	(void*)(((char*)action__FP10e_db_class)+0x2A4),
	(void*)(((char*)action__FP10e_db_class)+0x2C4),
	(void*)(((char*)action__FP10e_db_class)+0x320),
	(void*)(((char*)action__FP10e_db_class)+0x2D4),
	(void*)(((char*)action__FP10e_db_class)+0x320),
	(void*)(((char*)action__FP10e_db_class)+0x320),
	(void*)(((char*)action__FP10e_db_class)+0x320),
	(void*)(((char*)action__FP10e_db_class)+0x320),
	(void*)(((char*)action__FP10e_db_class)+0x320),
	(void*)(((char*)action__FP10e_db_class)+0x320),
	(void*)(((char*)action__FP10e_db_class)+0x320),
	(void*)(((char*)action__FP10e_db_class)+0x320),
	(void*)(((char*)action__FP10e_db_class)+0x320),
	(void*)(((char*)action__FP10e_db_class)+0x2E8),
	(void*)(((char*)action__FP10e_db_class)+0x314),
};

/* 806A1BEC-806A1BF4 0006+02 s=1 e=0 z=0  None .data      p_name$5653                                                  */
SECTION_DATA static u8 p_name[6 + 2 /* padding */] = {
	0x81, 0xC4, 0x81, 0xC5, 0x81, 0xC6,
	/* padding */
	0x00, 0x00,
};

/* 806A1BF4-806A1C00 000C+00 s=1 e=0 z=0  None .data      p_idx$5654                                                   */
SECTION_DATA static u8 p_idx[12] = {
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06,
};

/* 806A1C00-806A1C40 0040+00 s=0 e=0 z=0  None .data      cc_sph_src$5987                                              */
SECTION_DATA u8 data_806A1C00[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 806A1C40-806A1C80 0040+00 s=0 e=0 z=0  None .data      at_sph_src$5988                                              */
SECTION_DATA u8 data_806A1C40[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
};

/* 806A1C80-806A1CC0 0040+00 s=0 e=0 z=0  None .data      kuki_sph_src$5989                                            */
SECTION_DATA u8 data_806A1C80[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
};

/* 806A1CC0-806A1CE0 0020+00 s=1 e=0 z=0  None .data      l_daE_DB_Method                                              */
SECTION_DATA static void* l_daE_DB_Method[8] = {
	(void*)daE_DB_Create__FP10fopAc_ac_c,
	(void*)daE_DB_Delete__FP10e_db_class,
	(void*)daE_DB_Execute__FP10e_db_class,
	(void*)daE_DB_IsDelete__FP10e_db_class,
	(void*)daE_DB_Draw__FP10e_db_class,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 806A1CE0-806A1D10 0030+00 s=0 e=0 z=1  None .data      g_profile_E_DB                                               */
SECTION_DATA void* g_profile_E_DB[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01C50000,
	(void*)&g_fpcLf_Method,
	(void*)0x00001270,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00880000,
	(void*)&l_daE_DB_Method,
	(void*)0x10050120,
	(void*)0x020E0000,
};

/* 806A1D10-806A1D1C 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 806A1D1C-806A1D28 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 806A1D28-806A1D34 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 806A1D34-806A1D58 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_806A1464,
	(void*)NULL,
	(void*)NULL,
	(void*)func_806A145C,
};

/* 806A1D58-806A1D64 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 806A1D64-806A1D70 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 806A1D70-806A1D84 0014+00 s=1 e=0 z=0  None .data      __vt__18mDoExt_3DlineMat_c                                   */
SECTION_DATA void* __vt__18mDoExt_3DlineMat_c[5] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 806A1D84-806A1D90 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_DB_HIO_c                                         */
SECTION_DATA void* __vt__12daE_DB_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_DB_HIO_cFv,
};

/* 8069AAEC-8069AB34 0048+00 s=1 e=0 z=0  None .text      __ct__12daE_DB_HIO_cFv                                       */
//	8069AAEC: 806A190C (lit_3902)
//	8069AAF0: 806A190C (lit_3902)
//	8069AAF4: 806A1D84 (__vt__12daE_DB_HIO_c)
//	8069AAF8: 806A1D84 (__vt__12daE_DB_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_DB_HIO_c::daE_DB_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__ct__12daE_DB_HIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 806A1910-806A1914 0004+00 s=3 e=0 z=0  None .rodata    @3903                                                        */
SECTION_RODATA static u8 const lit_3903[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 806A1914-806A191C 0004+04 s=1 e=0 z=0  None .rodata    @3904                                                        */
SECTION_RODATA static u32 const lit_3904[1 + 1 /* padding */] = {
	0x3F800000,
	/* padding */
	0x00000000,
};

/* 806A191C-806A1924 0008+00 s=0 e=0 z=0  None .rodata    @3905                                                        */
SECTION_RODATA u8 const lit_3905[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806A1924-806A192C 0008+00 s=0 e=0 z=0  None .rodata    @3906                                                        */
SECTION_RODATA u8 const lit_3906[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806A192C-806A1934 0008+00 s=0 e=0 z=0  None .rodata    @3907                                                        */
SECTION_RODATA u8 const lit_3907[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806A1934-806A1938 0004+00 s=0 e=0 z=0  None .rodata    @3908                                                        */
SECTION_RODATA u32 const lit_3908 = 0x3C23D70A;

/* 806A1938-806A193C 0004+00 s=0 e=0 z=0  None .rodata    @3923                                                        */
SECTION_RODATA u32 const lit_3923 = 0x3F000000;

/* 806A193C-806A1940 0004+00 s=0 e=0 z=0  None .rodata    @3924                                                        */
SECTION_RODATA u32 const lit_3924 = 0x3F99999A;

/* 806A1940-806A1944 0004+00 s=2 e=0 z=0  None .rodata    @3938                                                        */
SECTION_RODATA static u32 const lit_3938 = 0xBF800000;

/* 806A1944-806A1948 0004+00 s=0 e=0 z=0  None .rodata    @4015                                                        */
SECTION_RODATA u32 const lit_4015 = 0x42480000;

/* 806A1948-806A194C 0004+00 s=0 e=0 z=0  None .rodata    @4016                                                        */
SECTION_RODATA u32 const lit_4016 = 0x44160000;

/* 806A194C-806A1950 0004+00 s=0 e=0 z=0  None .rodata    @4118                                                        */
SECTION_RODATA u32 const lit_4118 = 0x41200000;

/* 806A1950-806A1954 0004+00 s=0 e=0 z=0  None .rodata    @4119                                                        */
SECTION_RODATA u32 const lit_4119 = 0xC1700000;

/* 806A1954-806A1958 0004+00 s=0 e=0 z=0  None .rodata    @4120                                                        */
SECTION_RODATA u32 const lit_4120 = 0x42700000;

/* 806A1958-806A195C 0004+00 s=0 e=0 z=0  None .rodata    @4121                                                        */
SECTION_RODATA u32 const lit_4121 = 0x41F00000;

/* 806A195C-806A1960 0004+00 s=1 e=0 z=0  None .rodata    @4122                                                        */
SECTION_RODATA static u32 const lit_4122 = 0x40A00000;

/* 806A1960-806A1964 0004+00 s=0 e=0 z=0  None .rodata    @4123                                                        */
SECTION_RODATA u32 const lit_4123 = 0x41A00000;

/* 806A1964-806A1968 0004+00 s=0 e=0 z=0  None .rodata    @4124                                                        */
SECTION_RODATA u32 const lit_4124 = 0xC1200000;

/* 806A1968-806A196C 0004+00 s=0 e=0 z=0  None .rodata    @4183                                                        */
SECTION_RODATA u32 const lit_4183 = 0xC32A0000;

/* 806A196C-806A1970 0004+00 s=0 e=0 z=0  None .rodata    @4184                                                        */
SECTION_RODATA u32 const lit_4184 = 0x432A0000;

/* 806A1970-806A1974 0004+00 s=0 e=0 z=0  None .rodata    @4185                                                        */
SECTION_RODATA u32 const lit_4185 = 0x3E4CCCCD;

/* 806A1974-806A1978 0004+00 s=0 e=0 z=0  None .rodata    @4186                                                        */
SECTION_RODATA u32 const lit_4186 = 0x3DCCCCCD;

/* 806A1978-806A197C 0004+00 s=0 e=0 z=0  None .rodata    @4187                                                        */
SECTION_RODATA u32 const lit_4187 = 0x40800000;

/* 806A197C-806A1980 0004+00 s=0 e=0 z=0  None .rodata    @4188                                                        */
SECTION_RODATA u32 const lit_4188 = 0x3ECCCCCD;

/* 806A1980-806A1984 0004+00 s=0 e=0 z=0  None .rodata    @4189                                                        */
SECTION_RODATA u32 const lit_4189 = 0x3CA3D70A;

/* 806A1984-806A1988 0004+00 s=0 e=0 z=0  None .rodata    @4190                                                        */
SECTION_RODATA u32 const lit_4190 = 0x3D4CCCCD;

/* 806A1988-806A198C 0004+00 s=0 e=0 z=0  None .rodata    @4253                                                        */
SECTION_RODATA u32 const lit_4253 = 0x41700000;

/* 806A198C-806A1990 0004+00 s=0 e=0 z=0  None .rodata    @4254                                                        */
SECTION_RODATA u32 const lit_4254 = 0x42200000;

/* 806A1990-806A1994 0004+00 s=0 e=0 z=0  None .rodata    @4255                                                        */
SECTION_RODATA u32 const lit_4255 = 0x43C80000;

/* 806A1994-806A1998 0004+00 s=0 e=0 z=0  None .rodata    @4256                                                        */
SECTION_RODATA u32 const lit_4256 = 0x3E19999A;

/* 806A1998-806A199C 0004+00 s=0 e=0 z=0  None .rodata    @4356                                                        */
SECTION_RODATA u32 const lit_4356 = 0x3F400000;

/* 806A199C-806A19A0 0004+00 s=0 e=0 z=0  None .rodata    @4357                                                        */
SECTION_RODATA u32 const lit_4357 = 0x42B40000;

/* 806A19A0-806A19A4 0004+00 s=0 e=0 z=0  None .rodata    @4358                                                        */
SECTION_RODATA u32 const lit_4358 = 0xC2C80000;

/* 806A19A4-806A19A8 0004+00 s=0 e=0 z=0  None .rodata    @4359                                                        */
SECTION_RODATA u32 const lit_4359 = 0x3E99999A;

/* 806A19A8-806A19AC 0004+00 s=0 e=0 z=0  None .rodata    @4360                                                        */
SECTION_RODATA u32 const lit_4360 = 0x442F0000;

/* 806A19AC-806A19B4 0008+00 s=1 e=0 z=0  None .rodata    @4362                                                        */
SECTION_RODATA static u8 const lit_4362[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 806A19B4-806A19B8 0004+00 s=0 e=0 z=0  None .rodata    @4392                                                        */
SECTION_RODATA u32 const lit_4392 = 0x428C0000;

/* 806A19B8-806A19BC 0004+00 s=0 e=0 z=0  None .rodata    @4393                                                        */
SECTION_RODATA u32 const lit_4393 = 0x437A0000;

/* 806A19BC-806A19C0 0004+00 s=0 e=0 z=0  None .rodata    @4603                                                        */
SECTION_RODATA u32 const lit_4603 = 0x43AF0000;

/* 806A19C0-806A19C4 0004+00 s=0 e=0 z=0  None .rodata    @4604                                                        */
SECTION_RODATA u32 const lit_4604 = 0x3F4CCCCD;

/* 806A19C4-806A19C8 0004+00 s=0 e=0 z=0  None .rodata    @4605                                                        */
SECTION_RODATA u32 const lit_4605 = 0x40000000;

/* 806A19C8-806A19CC 0004+00 s=0 e=0 z=0  None .rodata    @4606                                                        */
SECTION_RODATA u32 const lit_4606 = 0x44FA0000;

/* 806A19CC-806A19D0 0004+00 s=0 e=0 z=0  None .rodata    @4607                                                        */
SECTION_RODATA u32 const lit_4607 = 0xC28C0000;

/* 806A19D0-806A19D4 0004+00 s=0 e=0 z=0  None .rodata    @4608                                                        */
SECTION_RODATA u32 const lit_4608 = 0x42A00000;

/* 806A19D4-806A19D8 0004+00 s=0 e=0 z=0  None .rodata    @4609                                                        */
SECTION_RODATA u32 const lit_4609 = 0x43480000;

/* 806A19D8-806A19DC 0004+00 s=0 e=0 z=0  None .rodata    @4723                                                        */
SECTION_RODATA u32 const lit_4723 = 0x43660000;

/* 806A19DC-806A19E0 0004+00 s=0 e=0 z=0  None .rodata    @4724                                                        */
SECTION_RODATA u32 const lit_4724 = 0x40400000;

/* 806A19E0-806A19E4 0004+00 s=0 e=0 z=0  None .rodata    @4767                                                        */
SECTION_RODATA u32 const lit_4767 = 0xC2480000;

/* 806A19E4-806A19E8 0004+00 s=0 e=0 z=0  None .rodata    @4768                                                        */
SECTION_RODATA u32 const lit_4768 = 0x3F6B851F;

/* 806A19E8-806A19EC 0004+00 s=0 e=0 z=0  None .rodata    @4848                                                        */
SECTION_RODATA u32 const lit_4848 = 0xC1A00000;

/* 806A19EC-806A19F0 0004+00 s=0 e=0 z=0  None .rodata    @4849                                                        */
SECTION_RODATA u32 const lit_4849 = 0x43E10000;

/* 806A19F0-806A19F4 0004+00 s=0 e=0 z=0  None .rodata    @4850                                                        */
SECTION_RODATA u32 const lit_4850 = 0xBDCCCCCD;

/* 806A19F4-806A19F8 0004+00 s=0 e=0 z=0  None .rodata    @4936                                                        */
SECTION_RODATA u32 const lit_4936 = 0xC1F00000;

/* 806A19F8-806A19FC 0004+00 s=0 e=0 z=0  None .rodata    @4937                                                        */
SECTION_RODATA u32 const lit_4937 = 0xC3480000;

/* 806A19FC-806A1A00 0004+00 s=1 e=0 z=0  None .rodata    @4992                                                        */
SECTION_RODATA static u32 const lit_4992 = 0x41300000;

/* 806A1A00-806A1A04 0004+00 s=0 e=0 z=0  None .rodata    @5085                                                        */
SECTION_RODATA u32 const lit_5085 = 0xC0A00000;

/* 806A1A04-806A1A08 0004+00 s=0 e=0 z=0  None .rodata    @5349                                                        */
SECTION_RODATA u32 const lit_5349 = 0x41C80000;

/* 806A1A08-806A1A0C 0004+00 s=0 e=0 z=0  None .rodata    @5350                                                        */
SECTION_RODATA u32 const lit_5350 = 0x43960000;

/* 806A1A0C-806A1A10 0004+00 s=0 e=0 z=0  None .rodata    @5351                                                        */
SECTION_RODATA u32 const lit_5351 = 0x40F00000;

/* 806A1A10-806A1A14 0004+00 s=0 e=0 z=0  None .rodata    @5352                                                        */
SECTION_RODATA u32 const lit_5352 = 0x3E800000;

/* 806A1A14-806A1A18 0004+00 s=0 e=0 z=0  None .rodata    @5353                                                        */
SECTION_RODATA u32 const lit_5353 = 0x47800000;

/* 806A1A18-806A1A1C 0004+00 s=0 e=0 z=0  None .rodata    @5354                                                        */
SECTION_RODATA u32 const lit_5354 = 0x459C4000;

/* 806A1A1C-806A1A20 0004+00 s=0 e=0 z=0  None .rodata    @5355                                                        */
SECTION_RODATA u32 const lit_5355 = 0xC2A00000;

/* 806A1A20-806A1A24 0004+00 s=0 e=0 z=0  None .rodata    @5356                                                        */
SECTION_RODATA u32 const lit_5356 = 0x420C0000;

/* 806A1A24-806A1A28 0004+00 s=0 e=0 z=0  None .rodata    @5357                                                        */
SECTION_RODATA u32 const lit_5357 = 0xC0E00000;

/* 806A1A28-806A1A2C 0004+00 s=0 e=0 z=0  None .rodata    @5358                                                        */
SECTION_RODATA u32 const lit_5358 = 0x3FE66666;

/* 806A1A2C-806A1A30 0004+00 s=0 e=0 z=0  None .rodata    @5499                                                        */
SECTION_RODATA u32 const lit_5499 = 0xC2200000;

/* 806A1A30-806A1A34 0004+00 s=0 e=0 z=0  None .rodata    @5500                                                        */
SECTION_RODATA u32 const lit_5500 = 0xBE99999A;

/* 806A1A34-806A1A38 0004+00 s=0 e=0 z=0  None .rodata    @5644                                                        */
SECTION_RODATA u32 const lit_5644 = 0xC6EA6000;

/* 806A1A38-806A1A3C 0004+00 s=0 e=0 z=0  None .rodata    @5645                                                        */
SECTION_RODATA u32 const lit_5645 = 0x48927C00;

/* 806A1A3C-806A1A40 0004+00 s=0 e=0 z=0  None .rodata    @5646                                                        */
SECTION_RODATA u32 const lit_5646 = 0x46EA6000;

/* 806A1A40-806A1A44 0004+00 s=0 e=0 z=0  None .rodata    @5816                                                        */
SECTION_RODATA u32 const lit_5816 = 0x41B00000;

/* 806A1A44-806A1A48 0004+00 s=0 e=0 z=0  None .rodata    @5817                                                        */
SECTION_RODATA u32 const lit_5817 = 0x41A80000;

/* 806A1A48-806A1A4C 0004+00 s=0 e=0 z=0  None .rodata    @5910                                                        */
SECTION_RODATA u32 const lit_5910 = 0x461C4000;

/* 806A1A4C-806A1A50 0004+00 s=0 e=0 z=0  None .rodata    @5911                                                        */
SECTION_RODATA u32 const lit_5911 = 0xC69C4000;

/* 806A1A50-806A1A54 0004+00 s=0 e=0 z=0  None .rodata    @6122                                                        */
SECTION_RODATA u32 const lit_6122 = 0x43FA0000;

/* 806A1A54-806A1A58 0004+00 s=0 e=0 z=0  None .rodata    @6123                                                        */
SECTION_RODATA u32 const lit_6123 = 0xC3960000;

/* 806A1A58-806A1A5C 0004+00 s=0 e=0 z=0  None .rodata    @6124                                                        */
SECTION_RODATA u32 const lit_6124 = 0xC3C80000;

/* 806A1A5C-806A1A64 0004+04 s=0 e=0 z=0  None .rodata    @6125                                                        */
SECTION_RODATA u32 const lit_6125[1 + 1 /* padding */] = {
	0x477FFF00,
	/* padding */
	0x00000000,
};

/* 806A1A64-806A1A6C 0008+00 s=0 e=0 z=0  None .rodata    @6127                                                        */
SECTION_RODATA u8 const lit_6127[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806A1A6C-806A1A71 0005+00 s=5 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_806A1A6C = "E_db";
#pragma pop

/* 8069AB34-8069ABE0 00AC+00 s=12 e=0 z=0  None .text      anm_init__FP10e_db_classifUcf                                */
//	8069AB54: 803621DC (_savegpr_29)
//	8069AB6C: 806A1A6C (stringBase0)
//	8069AB70: 806A1A6C (stringBase0)
//	8069AB74: 804061C0 (g_dComIfG_gameInfo)
//	8069AB78: 804061C0 (g_dComIfG_gameInfo)
//	8069AB88: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8069ABA0: 806A1910 (lit_3903)
//	8069ABA4: 806A1910 (lit_3903)
//	8069ABA8: 806A1940 (lit_3938)
//	8069ABAC: 806A1940 (lit_3938)
//	8069ABB0: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	8069ABCC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void anm_init(e_db_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/anm_init__FP10e_db_classifUcf.s"
}
#pragma pop


/* 8069ABE0-8069ACB8 00D8+00 s=11 e=0 z=0  None .text      leaf_anm_init__FP10e_db_classifUcf                           */
//	8069AC00: 803621DC (_savegpr_29)
//	8069AC1C: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8069AC20: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8069AC28: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8069AC34: 806A1A6C (stringBase0)
//	8069AC38: 806A1A6C (stringBase0)
//	8069AC40: 804061C0 (g_dComIfG_gameInfo)
//	8069AC44: 804061C0 (g_dComIfG_gameInfo)
//	8069AC54: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8069AC6C: 806A1910 (lit_3903)
//	8069AC70: 806A1910 (lit_3903)
//	8069AC74: 806A1940 (lit_3938)
//	8069AC78: 806A1940 (lit_3938)
//	8069AC80: 8001037C (setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv)
//	8069ACA4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void leaf_anm_init(e_db_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/leaf_anm_init__FP10e_db_classifUcf.s"
}
#pragma pop


/* 8069ACB8-8069AFB4 02FC+00 s=1 e=0 z=0  None .text      daE_DB_Draw__FP10e_db_class                                  */
//	8069ACC8: 803621CC (_savegpr_25)
//	8069ACD0: 806A190C (lit_3902)
//	8069ACD4: 806A190C (lit_3902)
//	8069ACD8: 8042CA54 (g_env_light)
//	8069ACDC: 8042CA54 (g_env_light)
//	8069ACEC: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	8069ACF8: 8042CA54 (g_env_light)
//	8069ACFC: 8042CA54 (g_env_light)
//	8069AD08: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	8069ADCC: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	8069AE14: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	8069AE18: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	8069AE1C: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	8069AE20: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	8069AE34: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	8069AE38: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	8069AE3C: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	8069AE4C: 806A1AAC (l_color)
//	8069AE50: 806A1AAC (l_color)
//	8069AE58: 80013FB0 (update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c)
//	8069AE74: 804061C0 (g_dComIfG_gameInfo)
//	8069AE78: 804061C0 (g_dComIfG_gameInfo)
//	8069AE90: 80014738 (setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c)
//	8069AEAC: 8042CA54 (g_env_light)
//	8069AEB0: 8042CA54 (g_env_light)
//	8069AEBC: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	8069AF84: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	8069AFA0: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void daE_DB_Draw(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/daE_DB_Draw__FP10e_db_class.s"
}
#pragma pop


/* 8069AFB4-8069B000 004C+00 s=2 e=0 z=0  None .text      pl_check__FP10e_db_classf                                    */
//	8069AFC0: 804061C0 (g_dComIfG_gameInfo)
//	8069AFC4: 804061C0 (g_dComIfG_gameInfo)
//	8069AFD8: 8001CDFC (fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
//  f32 False
asm static void pl_check(e_db_class* param_0, f32 param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/pl_check__FP10e_db_classf.s"
}
#pragma pop


/* 8069B000-8069B468 0468+00 s=1 e=0 z=0  None .text      damage_check__FP10e_db_class                                 */
//	8069B010: 803621CC (_savegpr_25)
//	8069B018: 806A190C (lit_3902)
//	8069B01C: 806A190C (lit_3902)
//	8069B020: 804061C0 (g_dComIfG_gameInfo)
//	8069B024: 804061C0 (g_dComIfG_gameInfo)
//	8069B03C: 80083830 (Move__10dCcD_GSttsFv)
//	8069B0C0: 804061C0 (g_dComIfG_gameInfo)
//	8069B0C4: 804061C0 (g_dComIfG_gameInfo)
//	8069B0D8: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8069B104: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	8069B11C: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	8069B150: 80263A48 (GetAc__8cCcD_ObjFv)
//	8069B17C: 80267674 (cM_atan2s__Fff)
//	8069B194: 80087A58 (at_power_check__FP11dCcU_AtInfo)
//	8069B1B4: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	8069B1CC: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	8069B1DC: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	8069B1E8: 804061C0 (g_dComIfG_gameInfo)
//	8069B1EC: 804061C0 (g_dComIfG_gameInfo)
//	8069B370: 804061C0 (g_dComIfG_gameInfo)
//	8069B374: 804061C0 (g_dComIfG_gameInfo)
//	8069B3B8: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8069B3F4: 80087514 (def_se_set__FP10Z2CreatureP8cCcD_ObjUlP10fopAc_ac_c)
//	8069B454: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void damage_check(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/damage_check__FP10e_db_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 806A1D98-806A1D9C 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_806A1D98[4];

/* 806A1D9C-806A1DA8 000C+00 s=1 e=0 z=0  None .bss       @3918                                                        */
static u8 lit_3918[12];

/* 806A1DA8-806A1DC0 0018+00 s=11 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[24];

/* 8069B468-8069B7C0 0358+00 s=1 e=0 z=0  None .text      e_db_stay__FP10e_db_class                                    */
//	8069B480: 806A190C (lit_3902)
//	8069B484: 806A190C (lit_3902)
//	8069B4D8: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069B4F0: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069B55C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069B580: 8026FA3C (cLib_addCalc2__FPffff)
//	8069B59C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069B5B0: 8026FA3C (cLib_addCalc2__FPffff)
//	8069B5C0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069B5E8: 80347138 (PSVECSquareMag)
//	8069B658: 80450AE0 (__float_nan)
//	8069B65C: 80450AE0 (__float_nan)
//	8069B6C8: 80450AE0 (__float_nan)
//	8069B6CC: 80450AE0 (__float_nan)
//	8069B6E8: 8026FA80 (cLib_addCalc0__FPfff)
//	8069B708: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069B720: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069B734: 8026FA3C (cLib_addCalc2__FPffff)
//	8069B73C: 806A1DA8 (l_HIO)
//	8069B740: 806A1DA8 (l_HIO)
//	8069B750: 8026FA3C (cLib_addCalc2__FPffff)
//	8069B774: 8069AFB4 (pl_check__FP10e_db_classf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_stay(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_stay__FP10e_db_class.s"
}
#pragma pop


/* 8069B7C0-8069BA80 02C0+00 s=1 e=0 z=0  None .text      e_db_appear__FP10e_db_class                                  */
//	8069B7D8: 806A190C (lit_3902)
//	8069B7DC: 806A190C (lit_3902)
//	8069B820: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069B838: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069B848: 8026798C (cM_rndFX__Ff)
//	8069B85C: 8026798C (cM_rndFX__Ff)
//	8069B87C: 8026798C (cM_rndFX__Ff)
//	8069B89C: 8026798C (cM_rndFX__Ff)
//	8069B950: 8026FA3C (cLib_addCalc2__FPffff)
//	8069B96C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069B988: 8026FA3C (cLib_addCalc2__FPffff)
//	8069B99C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BA08: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069BA1C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069BA34: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069BA48: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069BA50: 806A1DA8 (l_HIO)
//	8069BA54: 806A1DA8 (l_HIO)
//	8069BA64: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_appear(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_appear__FP10e_db_class.s"
}
#pragma pop


/* 8069BA80-8069BC4C 01CC+00 s=1 e=0 z=0  None .text      e_db_appear_v__FP10e_db_class                                */
//	8069BA98: 806A190C (lit_3902)
//	8069BA9C: 806A190C (lit_3902)
//	8069BACC: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069BAE4: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069BB18: 80439A20 (sincosTable___5JMath)
//	8069BB1C: 80439A20 (sincosTable___5JMath)
//	8069BB64: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BB88: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BBAC: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BBC0: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BBF8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069BC0C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BC14: 806A1DA8 (l_HIO)
//	8069BC18: 806A1DA8 (l_HIO)
//	8069BC28: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_appear_v(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_appear_v__FP10e_db_class.s"
}
#pragma pop


/* 8069BC4C-8069C1AC 0560+00 s=1 e=0 z=0  None .text      e_db_wait__FP10e_db_class                                    */
//	8069BC5C: 803621DC (_savegpr_29)
//	8069BC64: 806A190C (lit_3902)
//	8069BC68: 806A190C (lit_3902)
//	8069BC7C: 80267954 (cM_rndF__Ff)
//	8069BD30: 80450768 (calc_mtx)
//	8069BD34: 80450768 (calc_mtx)
//	8069BD40: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069BD4C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069BD5C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8069BD88: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BD9C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BDB0: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BDCC: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069BDE4: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069BE00: 80267954 (cM_rndF__Ff)
//	8069BE20: 806A1DA8 (l_HIO)
//	8069BE24: 806A1DA8 (l_HIO)
//	8069BE48: 80267954 (cM_rndF__Ff)
//	8069BE9C: 80267954 (cM_rndF__Ff)
//	8069BEBC: 8026798C (cM_rndFX__Ff)
//	8069BED0: 8026798C (cM_rndFX__Ff)
//	8069BEF0: 8026798C (cM_rndFX__Ff)
//	8069BF10: 8026798C (cM_rndFX__Ff)
//	8069BF3C: 80439A20 (sincosTable___5JMath)
//	8069BF40: 80439A20 (sincosTable___5JMath)
//	8069BF9C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BFC0: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BFE4: 8026FA3C (cLib_addCalc2__FPffff)
//	8069BFF8: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C018: 8069AFB4 (pl_check__FP10e_db_classf)
//	8069C064: 804061C0 (g_dComIfG_gameInfo)
//	8069C068: 804061C0 (g_dComIfG_gameInfo)
//	8069C09C: 8069AFB4 (pl_check__FP10e_db_classf)
//	8069C0C4: 804061C0 (g_dComIfG_gameInfo)
//	8069C0C8: 804061C0 (g_dComIfG_gameInfo)
//	8069C0EC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069C0FC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069C13C: 80267674 (cM_atan2s__Fff)
//	8069C15C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069C17C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069C190: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069C198: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_wait(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_wait__FP10e_db_class.s"
}
#pragma pop


/* 8069C1AC-8069C408 025C+00 s=1 e=0 z=0  None .text      e_db_mk_roof__FP10e_db_class                                 */
//	8069C1C4: 806A190C (lit_3902)
//	8069C1C8: 806A190C (lit_3902)
//	8069C1DC: 80267954 (cM_rndF__Ff)
//	8069C250: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069C268: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069C278: 80267954 (cM_rndF__Ff)
//	8069C29C: 806A1DA8 (l_HIO)
//	8069C2A0: 806A1DA8 (l_HIO)
//	8069C2B0: 806A1DA8 (l_HIO)
//	8069C2B4: 806A1DA8 (l_HIO)
//	8069C2D4: 80267954 (cM_rndF__Ff)
//	8069C2F4: 8026798C (cM_rndFX__Ff)
//	8069C308: 8026798C (cM_rndFX__Ff)
//	8069C33C: 80439A20 (sincosTable___5JMath)
//	8069C340: 80439A20 (sincosTable___5JMath)
//	8069C388: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C3AC: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C3C8: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C3DC: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_mk_roof(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_mk_roof__FP10e_db_class.s"
}
#pragma pop


/* 8069C408-8069CED8 0AD0+00 s=1 e=0 z=0  None .text      e_db_attack__FP10e_db_class                                  */
//	8069C418: 803621D0 (_savegpr_26)
//	8069C420: 806A190C (lit_3902)
//	8069C424: 806A190C (lit_3902)
//	8069C428: 804061C0 (g_dComIfG_gameInfo)
//	8069C42C: 804061C0 (g_dComIfG_gameInfo)
//	8069C450: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069C490: 80267674 (cM_atan2s__Fff)
//	8069C554: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069C56C: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069C598: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069C5C8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069C5E4: 80450768 (calc_mtx)
//	8069C5E8: 80450768 (calc_mtx)
//	8069C5F4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069C600: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069C610: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8069C644: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C660: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C67C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C690: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C6BC: 80450768 (calc_mtx)
//	8069C6C0: 80450768 (calc_mtx)
//	8069C6D8: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069C6DC: 80450768 (calc_mtx)
//	8069C6E0: 80450768 (calc_mtx)
//	8069C6F0: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8069C710: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069C720: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8069C740: 80450768 (calc_mtx)
//	8069C744: 80450768 (calc_mtx)
//	8069C750: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069C770: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069C780: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8069C804: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	8069C818: 80267954 (cM_rndF__Ff)
//	8069C894: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C8B0: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C8CC: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C8E0: 8026FA3C (cLib_addCalc2__FPffff)
//	8069C8F4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069C918: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	8069C928: 80084358 (GetAtHitObj__12dCcD_GObjInfFv)
//	8069C92C: 80263A48 (GetAc__8cCcD_ObjFv)
//	8069C95C: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069C994: 804061C0 (g_dComIfG_gameInfo)
//	8069C998: 804061C0 (g_dComIfG_gameInfo)
//	8069C9AC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8069CA74: 804061C0 (g_dComIfG_gameInfo)
//	8069CA78: 804061C0 (g_dComIfG_gameInfo)
//	8069CAB4: 804061C0 (g_dComIfG_gameInfo)
//	8069CAB8: 804061C0 (g_dComIfG_gameInfo)
//	8069CACC: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8069CADC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069CAF8: 80267674 (cM_atan2s__Fff)
//	8069CB0C: 80347138 (PSVECSquareMag)
//	8069CB7C: 80450AE0 (__float_nan)
//	8069CB80: 80450AE0 (__float_nan)
//	8069CBEC: 80450AE0 (__float_nan)
//	8069CBF0: 80450AE0 (__float_nan)
//	8069CC58: 80267954 (cM_rndF__Ff)
//	8069CC7C: 80450768 (calc_mtx)
//	8069CC80: 80450768 (calc_mtx)
//	8069CC8C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069CC9C: 80439A20 (sincosTable___5JMath)
//	8069CCA0: 80439A20 (sincosTable___5JMath)
//	8069CCEC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069CD10: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069CD20: 80347090 (PSVECAdd)
//	8069CD34: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069CD78: 8026FA3C (cLib_addCalc2__FPffff)
//	8069CD8C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069CDA0: 8026FA3C (cLib_addCalc2__FPffff)
//	8069CDB4: 8026FA3C (cLib_addCalc2__FPffff)
//	8069CDE0: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069CE48: 804061C0 (g_dComIfG_gameInfo)
//	8069CE4C: 804061C0 (g_dComIfG_gameInfo)
//	8069CE54: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8069CE98: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069CEBC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069CEC4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_attack(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_attack__FP10e_db_class.s"
}
#pragma pop


/* 8069CED8-8069D234 035C+00 s=1 e=0 z=0  None .text      e_db_attack_s__FP10e_db_class                                */
//	8069CEE8: 803621D8 (_savegpr_28)
//	8069CEF0: 806A190C (lit_3902)
//	8069CEF4: 806A190C (lit_3902)
//	8069CEF8: 804061C0 (g_dComIfG_gameInfo)
//	8069CEFC: 804061C0 (g_dComIfG_gameInfo)
//	8069CF10: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069CF50: 80267674 (cM_atan2s__Fff)
//	8069CFDC: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069CFF4: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069D000: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	8069D04C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069D068: 8026FA3C (cLib_addCalc2__FPffff)
//	8069D084: 8026FA3C (cLib_addCalc2__FPffff)
//	8069D098: 8026FA3C (cLib_addCalc2__FPffff)
//	8069D0A8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069D0D4: 80347138 (PSVECSquareMag)
//	8069D144: 80450AE0 (__float_nan)
//	8069D148: 80450AE0 (__float_nan)
//	8069D1B4: 80450AE0 (__float_nan)
//	8069D1B8: 80450AE0 (__float_nan)
//	8069D1F4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069D210: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069D220: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_attack_s(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_attack_s__FP10e_db_class.s"
}
#pragma pop


/* 8069D234-8069D534 0300+00 s=1 e=0 z=0  None .text      e_db_chance__FP10e_db_class                                  */
//	8069D24C: 806A190C (lit_3902)
//	8069D250: 806A190C (lit_3902)
//	8069D298: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069D2B0: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069D2C8: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069D2F0: 80439A20 (sincosTable___5JMath)
//	8069D2F4: 80439A20 (sincosTable___5JMath)
//	8069D33C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069D360: 8026FA3C (cLib_addCalc2__FPffff)
//	8069D390: 8026FA3C (cLib_addCalc2__FPffff)
//	8069D3B8: 8026FA3C (cLib_addCalc2__FPffff)
//	8069D3CC: 8026FA3C (cLib_addCalc2__FPffff)
//	8069D43C: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069D454: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069D4EC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069D504: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069D518: 8026FA3C (cLib_addCalc2__FPffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_chance(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_chance__FP10e_db_class.s"
}
#pragma pop


/* 8069D534-8069D770 023C+00 s=1 e=0 z=0  None .text      e_db_s_damage__FP10e_db_class                                */
//	8069D54C: 806A190C (lit_3902)
//	8069D550: 806A190C (lit_3902)
//	8069D580: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069D598: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069D5D4: 80450768 (calc_mtx)
//	8069D5D8: 80450768 (calc_mtx)
//	8069D5F0: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069D5F8: 80450768 (calc_mtx)
//	8069D5FC: 80450768 (calc_mtx)
//	8069D608: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069D62C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069D678: 80347090 (PSVECAdd)
//	8069D73C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069D754: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_s_damage(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_s_damage__FP10e_db_class.s"
}
#pragma pop


/* 8069D770-8069DB68 03F8+00 s=1 e=0 z=0  None .text      e_db_damage__FP10e_db_class                                  */
//	8069D790: 806A190C (lit_3902)
//	8069D794: 806A190C (lit_3902)
//	8069D7D0: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069D7E8: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069D818: 80450768 (calc_mtx)
//	8069D81C: 80450768 (calc_mtx)
//	8069D828: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069D87C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069D8C0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069D8E0: 80347138 (PSVECSquareMag)
//	8069D950: 80450AE0 (__float_nan)
//	8069D954: 80450AE0 (__float_nan)
//	8069D9C0: 80450AE0 (__float_nan)
//	8069D9C4: 80450AE0 (__float_nan)
//	8069DA44: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069DA54: 80347090 (PSVECAdd)
//	8069DA9C: 806A1DA8 (l_HIO)
//	8069DAA0: 806A1DA8 (l_HIO)
//	8069DAC8: 804061C0 (g_dComIfG_gameInfo)
//	8069DACC: 804061C0 (g_dComIfG_gameInfo)
//	8069DAD4: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_damage(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_damage__FP10e_db_class.s"
}
#pragma pop


/* 8069DB68-8069DEC4 035C+00 s=1 e=0 z=0  None .text      kuki_control1__FP10e_db_class                                */
//	8069DBA8: 803621C4 (_savegpr_23)
//	8069DBB0: 806A190C (lit_3902)
//	8069DBB4: 806A190C (lit_3902)
//	8069DC60: 80450768 (calc_mtx)
//	8069DC64: 80450768 (calc_mtx)
//	8069DC8C: 80439A20 (sincosTable___5JMath)
//	8069DC90: 80439A20 (sincosTable___5JMath)
//	8069DCC8: 80439A20 (sincosTable___5JMath)
//	8069DCCC: 80439A20 (sincosTable___5JMath)
//	8069DCFC: 80450768 (calc_mtx)
//	8069DD00: 80450768 (calc_mtx)
//	8069DD0C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069DD10: 80450768 (calc_mtx)
//	8069DD14: 80450768 (calc_mtx)
//	8069DD1C: 806A1AB0 (pow_xa)
//	8069DD20: 806A1AB0 (pow_xa)
//	8069DD38: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8069DD40: 80450768 (calc_mtx)
//	8069DD44: 80450768 (calc_mtx)
//	8069DD50: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069DD54: 80450768 (calc_mtx)
//	8069DD58: 80450768 (calc_mtx)
//	8069DD60: 806A1AB0 (pow_xa)
//	8069DD64: 806A1AB0 (pow_xa)
//	8069DD70: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8069DD84: 80270EA4 (MtxScale__FfffUc)
//	8069DD90: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069DDE0: 80267674 (cM_atan2s__Fff)
//	8069DE08: 80267674 (cM_atan2s__Fff)
//	8069DE1C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069DE28: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8069DE34: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069DE44: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8069DEB0: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void kuki_control1(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/kuki_control1__FP10e_db_class.s"
}
#pragma pop


/* 8069DEC4-8069E038 0174+00 s=1 e=0 z=0  None .text      kuki_control2__FP10e_db_class                                */
//	8069DEF4: 803621D0 (_savegpr_26)
//	8069DF10: 806A1910 (lit_3903)
//	8069DF14: 806A1910 (lit_3903)
//	8069DF34: 80450768 (calc_mtx)
//	8069DF38: 80450768 (calc_mtx)
//	8069DF68: 80267674 (cM_atan2s__Fff)
//	8069DF90: 80267674 (cM_atan2s__Fff)
//	8069DFA4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069DFB0: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8069DFBC: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069DFCC: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8069E024: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void kuki_control2(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/kuki_control2__FP10e_db_class.s"
}
#pragma pop


/* 8069E038-8069E114 00DC+00 s=1 e=0 z=0  None .text      kuki_control3__FP10e_db_class                                */
//	8069E058: 803621DC (_savegpr_29)
//	8069E06C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069E090: 806A19AC (lit_4362)
//	8069E094: 806A19AC (lit_4362)
//	8069E09C: 806A19FC (lit_4992)
//	8069E0A0: 806A19FC (lit_4992)
//	8069E0C8: 80266B84 (__ml__4cXyzCFf)
//	8069E0D8: 803470B4 (PSVECSubtract)
//	8069E100: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void kuki_control3(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/kuki_control3__FP10e_db_class.s"
}
#pragma pop


/* 8069E114-8069E200 00EC+00 s=1 e=0 z=0  None .text      kuki_ha_set__FP10e_db_class                                  */
//	8069E124: 803621CC (_savegpr_25)
//	8069E160: 803DD470 (now__14mDoMtx_stack_c)
//	8069E164: 803DD470 (now__14mDoMtx_stack_c)
//	8069E174: 803468E8 (PSMTXTrans)
//	8069E178: 803DD470 (now__14mDoMtx_stack_c)
//	8069E17C: 803DD470 (now__14mDoMtx_stack_c)
//	8069E184: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8069E188: 803DD470 (now__14mDoMtx_stack_c)
//	8069E18C: 803DD470 (now__14mDoMtx_stack_c)
//	8069E194: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8069E198: 803DD470 (now__14mDoMtx_stack_c)
//	8069E19C: 803DD470 (now__14mDoMtx_stack_c)
//	8069E1A4: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	8069E1B4: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	8069E1B8: 803DD470 (now__14mDoMtx_stack_c)
//	8069E1BC: 803DD470 (now__14mDoMtx_stack_c)
//	8069E1C8: 803464B0 (PSMTXCopy)
//	8069E1EC: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void kuki_ha_set(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/kuki_ha_set__FP10e_db_class.s"
}
#pragma pop


/* 8069E200-8069E504 0304+00 s=1 e=0 z=0  None .text      kuki_control1_e__FP10e_db_class                              */
//	8069E248: 803621B8 (_savegpr_20)
//	8069E250: 806A190C (lit_3902)
//	8069E254: 806A190C (lit_3902)
//	8069E25C: 8007757C (__ct__11dBgS_GndChkFv)
//	8069E2AC: 8026FA3C (cLib_addCalc2__FPffff)
//	8069E2C8: 804061C0 (g_dComIfG_gameInfo)
//	8069E2CC: 804061C0 (g_dComIfG_gameInfo)
//	8069E2D4: 80450768 (calc_mtx)
//	8069E2D8: 80450768 (calc_mtx)
//	8069E2DC: 80439A20 (sincosTable___5JMath)
//	8069E2E0: 80439A20 (sincosTable___5JMath)
//	8069E2F8: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069E324: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069E37C: 80267674 (cM_atan2s__Fff)
//	8069E3A4: 80267674 (cM_atan2s__Fff)
//	8069E3B8: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069E3C4: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8069E3D0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069E3E0: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8069E440: 80267D0C (SetPos__11cBgS_GndChkFPC3Vec)
//	8069E44C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8069E4B0: 800775F0 (__dt__11dBgS_GndChkFv)
//	8069E4F0: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void kuki_control1_e(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/kuki_control1_e__FP10e_db_class.s"
}
#pragma pop


/* 8069E504-8069F360 0E5C+00 s=2 e=0 z=0  None .text      e_db_escape__FP10e_db_class                                  */
//	8069E524: 803621C4 (_savegpr_23)
//	8069E52C: 806A190C (lit_3902)
//	8069E530: 806A190C (lit_3902)
//	8069E534: 804061C0 (g_dComIfG_gameInfo)
//	8069E538: 804061C0 (g_dComIfG_gameInfo)
//	8069E54C: 800777B0 (__ct__18dBgS_ObjGndChk_SplFv)
//	8069E57C: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8069E580: 804061C0 (g_dComIfG_gameInfo)
//	8069E584: 804061C0 (g_dComIfG_gameInfo)
//	8069E594: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8069E5A4: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8069E5C4: 806A1AC8 (lit_5359)
//	8069E5C8: 806A1AC8 (lit_5359)
//	8069E618: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069E624: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	8069E62C: 80267954 (cM_rndF__Ff)
//	8069E664: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	8069E67C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069E72C: 80267954 (cM_rndF__Ff)
//	8069E7A0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069E7C4: 80267674 (cM_atan2s__Fff)
//	8069E7D8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069E7E0: 80347138 (PSVECSquareMag)
//	8069E850: 80450AE0 (__float_nan)
//	8069E854: 80450AE0 (__float_nan)
//	8069E8C0: 80450AE0 (__float_nan)
//	8069E8C4: 80450AE0 (__float_nan)
//	8069E8F8: 8069ABE0 (leaf_anm_init__FP10e_db_classifUcf)
//	8069E93C: 8026FA80 (cLib_addCalc0__FPfff)
//	8069E958: 8026FA3C (cLib_addCalc2__FPffff)
//	8069E974: 8026FA3C (cLib_addCalc2__FPffff)
//	8069E988: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069E9D0: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069EA54: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069EA70: 80267954 (cM_rndF__Ff)
//	8069EAB0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069EAC4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069EAFC: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	8069EB60: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069EB98: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069EBC0: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	8069EC00: 8015F4F0 (setLookPos__9daPy_py_cFP4cXyz)
//	8069EC1C: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8069EC48: 804061C0 (g_dComIfG_gameInfo)
//	8069EC4C: 804061C0 (g_dComIfG_gameInfo)
//	8069EC98: 8006FA24 (StartShock__12dVibration_cFii4cXyz)
//	8069ECAC: 80450768 (calc_mtx)
//	8069ECB0: 80450768 (calc_mtx)
//	8069ECBC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069ECE0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069ECF0: 80347090 (PSVECAdd)
//	8069ED04: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069ED18: 8026FA3C (cLib_addCalc2__FPffff)
//	8069ED2C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069ED40: 8026FA3C (cLib_addCalc2__FPffff)
//	8069ED54: 8026FA3C (cLib_addCalc2__FPffff)
//	8069ED64: 80439A20 (sincosTable___5JMath)
//	8069ED68: 80439A20 (sincosTable___5JMath)
//	8069EDB4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069EDC8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069EDF4: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069EEA4: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069EED4: 8026FA3C (cLib_addCalc2__FPffff)
//	8069EEE4: 8026FA80 (cLib_addCalc0__FPfff)
//	8069EF08: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069EF1C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069EF2C: 80439A20 (sincosTable___5JMath)
//	8069EF30: 80439A20 (sincosTable___5JMath)
//	8069EF58: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069EF7C: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	8069EF84: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	8069EF8C: 804061C0 (g_dComIfG_gameInfo)
//	8069EF90: 804061C0 (g_dComIfG_gameInfo)
//	8069EF9C: 80035644 (onActor__10dSv_info_cFii)
//	8069EFB0: 804061C0 (g_dComIfG_gameInfo)
//	8069EFB4: 804061C0 (g_dComIfG_gameInfo)
//	8069EFC0: 80035200 (onSwitch__10dSv_info_cFii)
//	8069EFE8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069EFFC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069F01C: 8026FA3C (cLib_addCalc2__FPffff)
//	8069F048: 80439A20 (sincosTable___5JMath)
//	8069F04C: 80439A20 (sincosTable___5JMath)
//	8069F070: 80450768 (calc_mtx)
//	8069F074: 80450768 (calc_mtx)
//	8069F088: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069F0A8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069F0C8: 80347090 (PSVECAdd)
//	8069F114: 80450768 (calc_mtx)
//	8069F118: 80450768 (calc_mtx)
//	8069F124: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069F130: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069F140: 80347090 (PSVECAdd)
//	8069F184: 806A1DA8 (l_HIO)
//	8069F188: 806A1DA8 (l_HIO)
//	8069F1B4: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8069F208: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069F260: 80267954 (cM_rndF__Ff)
//	8069F2B4: 8001F87C (fopKyM_createWpillar__FPC4cXyzfi)
//	8069F300: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	8069F314: 804061C0 (g_dComIfG_gameInfo)
//	8069F318: 804061C0 (g_dComIfG_gameInfo)
//	8069F324: 80035200 (onSwitch__10dSv_info_cFii)
//	8069F330: 80077848 (__dt__18dBgS_ObjGndChk_SplFv)
//	8069F34C: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_escape(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_escape__FP10e_db_class.s"
}
#pragma pop


/* 8069F360-8069F978 0618+00 s=1 e=0 z=0  None .text      e_db_e_dead__FP10e_db_class                                  */
//	8069F380: 803621DC (_savegpr_29)
//	8069F388: 806A190C (lit_3902)
//	8069F38C: 806A190C (lit_3902)
//	8069F39C: 800777B0 (__ct__18dBgS_ObjGndChk_SplFv)
//	8069F3CC: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	8069F3D0: 804061C0 (g_dComIfG_gameInfo)
//	8069F3D4: 804061C0 (g_dComIfG_gameInfo)
//	8069F3E4: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	8069F420: 80450768 (calc_mtx)
//	8069F424: 80450768 (calc_mtx)
//	8069F430: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8069F454: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8069F46C: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069F4A8: 804061C0 (g_dComIfG_gameInfo)
//	8069F4AC: 804061C0 (g_dComIfG_gameInfo)
//	8069F538: 80267954 (cM_rndF__Ff)
//	8069F578: 8001D020 (fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci)
//	8069F5B8: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069F5D4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069F5E8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069F60C: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	8069F6A4: 806A1DA8 (l_HIO)
//	8069F6A8: 806A1DA8 (l_HIO)
//	8069F6C8: 80077848 (__dt__18dBgS_ObjGndChk_SplFv)
//	8069F6D4: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	8069F6DC: 804061C0 (g_dComIfG_gameInfo)
//	8069F6E0: 804061C0 (g_dComIfG_gameInfo)
//	8069F6EC: 80035644 (onActor__10dSv_info_cFii)
//	8069F700: 804061C0 (g_dComIfG_gameInfo)
//	8069F704: 804061C0 (g_dComIfG_gameInfo)
//	8069F710: 80035200 (onSwitch__10dSv_info_cFii)
//	8069F730: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069F744: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8069F754: 80347090 (PSVECAdd)
//	8069F768: 80439A20 (sincosTable___5JMath)
//	8069F76C: 80439A20 (sincosTable___5JMath)
//	8069F780: 806A1DA8 (l_HIO)
//	8069F784: 806A1DA8 (l_HIO)
//	8069F7C8: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8069F81C: 8069AB34 (anm_init__FP10e_db_classifUcf)
//	8069F850: 804061C0 (g_dComIfG_gameInfo)
//	8069F854: 804061C0 (g_dComIfG_gameInfo)
//	8069F87C: 80267954 (cM_rndF__Ff)
//	8069F8D0: 8001F87C (fopKyM_createWpillar__FPC4cXyzfi)
//	8069F91C: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	8069F930: 804061C0 (g_dComIfG_gameInfo)
//	8069F934: 804061C0 (g_dComIfG_gameInfo)
//	8069F940: 80035200 (onSwitch__10dSv_info_cFii)
//	8069F94C: 80077848 (__dt__18dBgS_ObjGndChk_SplFv)
//	8069F964: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void e_db_e_dead(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/e_db_e_dead__FP10e_db_class.s"
}
#pragma pop


/* 8069F978-8069FFFC 0684+00 s=2 e=0 z=0  None .text      action__FP10e_db_class                                       */
//	8069F988: 803621C4 (_savegpr_23)
//	8069F990: 806A190C (lit_3902)
//	8069F994: 806A190C (lit_3902)
//	8069F998: 804061C0 (g_dComIfG_gameInfo)
//	8069F99C: 804061C0 (g_dComIfG_gameInfo)
//	8069F9A8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8069F9BC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069F9C4: 80347138 (PSVECSquareMag)
//	8069FA34: 80450AE0 (__float_nan)
//	8069FA38: 80450AE0 (__float_nan)
//	8069FAA4: 80450AE0 (__float_nan)
//	8069FAA8: 80450AE0 (__float_nan)
//	8069FAC4: 8069B000 (damage_check__FP10e_db_class)
//	8069FB30: 806A1B94 (lit_5647)
//	8069FB34: 806A1B94 (lit_5647)
//	8069FB4C: 8069B468 (e_db_stay__FP10e_db_class)
//	8069FB60: 8069B7C0 (e_db_appear__FP10e_db_class)
//	8069FB80: 8069BA80 (e_db_appear_v__FP10e_db_class)
//	8069FBA0: 8069BC4C (e_db_wait__FP10e_db_class)
//	8069FBC0: 8069C408 (e_db_attack__FP10e_db_class)
//	8069FBE0: 8069CED8 (e_db_attack_s__FP10e_db_class)
//	8069FC00: 8069D234 (e_db_chance__FP10e_db_class)
//	8069FC20: 8069D534 (e_db_s_damage__FP10e_db_class)
//	8069FC40: 8069D770 (e_db_damage__FP10e_db_class)
//	8069FC50: 8069C1AC (e_db_mk_roof__FP10e_db_class)
//	8069FC64: 8069E504 (e_db_escape__FP10e_db_class)
//	8069FC90: 8069F360 (e_db_e_dead__FP10e_db_class)
//	8069FCA8: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	8069FCB8: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	8069FCF8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8069FD18: 80347138 (PSVECSquareMag)
//	8069FD88: 80450AE0 (__float_nan)
//	8069FD8C: 80450AE0 (__float_nan)
//	8069FDF8: 80450AE0 (__float_nan)
//	8069FDFC: 80450AE0 (__float_nan)
//	8069FE38: 8026FA3C (cLib_addCalc2__FPffff)
//	8069FE40: 8069DB68 (kuki_control1__FP10e_db_class)
//	8069FE48: 8069DEC4 (kuki_control2__FP10e_db_class)
//	8069FE50: 8069E038 (kuki_control3__FP10e_db_class)
//	8069FE58: 8069E114 (kuki_ha_set__FP10e_db_class)
//	8069FE64: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8069FE68: 80023590 (fpcSch_JudgeByID__FPvPv)
//	8069FE70: 800197F8 (fopAcIt_Judge__FPFPvPv_PvPv)
//	8069FE8C: 800105C8 (play__14mDoExt_McaMorfFP3VecUlSc)
//	8069FEA0: 8026FA3C (cLib_addCalc2__FPffff)
//	8069FEAC: 8069E200 (kuki_control1_e__FP10e_db_class)
//	8069FEB4: 8069E114 (kuki_ha_set__FP10e_db_class)
//	8069FEE4: 804061C0 (g_dComIfG_gameInfo)
//	8069FEE8: 804061C0 (g_dComIfG_gameInfo)
//	8069FF40: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	8069FF4C: 8026F708 (SetR__8cM3dGSphFf)
//	8069FF60: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8069FF70: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	8069FF80: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8069FFA8: 8026FA80 (cLib_addCalc0__FPfff)
//	8069FFE0: 806A146C (setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz)
//	8069FFE8: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void action(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/action__FP10e_db_class.s"
}
#pragma pop


/* 8069FFFC-806A03C4 03C8+00 s=1 e=0 z=0  None .text      eff_set__FP10e_db_classi                                     */
//	806A000C: 803621C0 (_savegpr_22)
//	806A0018: 806A190C (lit_3902)
//	806A001C: 806A190C (lit_3902)
//	806A0068: 8026FA3C (cLib_addCalc2__FPffff)
//	806A0078: 804061C0 (g_dComIfG_gameInfo)
//	806A007C: 804061C0 (g_dComIfG_gameInfo)
//	806A00BC: 806A1BEC (p_name)
//	806A00C0: 806A1BEC (p_name)
//	806A00DC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806A00F4: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806A0108: 8027EC60 (deleteAllParticle__14JPABaseEmitterFv)
//	806A0118: 8004B8B4 (forceOnEventMove__Q213dPa_control_c7level_cFUl)
//	806A0128: 806A1BF4 (p_idx)
//	806A012C: 806A1BF4 (p_idx)
//	806A013C: 80450768 (calc_mtx)
//	806A0140: 80450768 (calc_mtx)
//	806A0148: 803464B0 (PSMTXCopy)
//	806A015C: 80270EA4 (MtxScale__FfffUc)
//	806A0160: 80450768 (calc_mtx)
//	806A0164: 80450768 (calc_mtx)
//	806A0178: 80280808 (func_80280808)
//	806A01E0: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	806A01EC: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	806A01F0: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	806A0244: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806A02A4: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806A02B8: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806A02D0: 80450768 (calc_mtx)
//	806A02D4: 80450768 (calc_mtx)
//	806A02DC: 803464B0 (PSMTXCopy)
//	806A02E0: 80450768 (calc_mtx)
//	806A02E4: 80450768 (calc_mtx)
//	806A02F4: 802807E0 (func_802807E0)
//	806A0350: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806A0364: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806A037C: 80450768 (calc_mtx)
//	806A0380: 80450768 (calc_mtx)
//	806A0388: 803464B0 (PSMTXCopy)
//	806A038C: 80450768 (calc_mtx)
//	806A0390: 80450768 (calc_mtx)
//	806A03A0: 802807E0 (func_802807E0)
//	806A03B0: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
//  int False
asm static void eff_set(e_db_class* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/eff_set__FP10e_db_classi.s"
}
#pragma pop


/* 806A03C4-806A052C 0168+00 s=1 e=0 z=0  None .text      anm_se_set__FP10e_db_class                                   */
//	806A03D8: 806A190C (lit_3902)
//	806A03DC: 806A190C (lit_3902)
//	806A03F8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806A0448: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806A0498: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806A04E4: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void anm_se_set(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/anm_se_set__FP10e_db_class.s"
}
#pragma pop


/* 806A052C-806A08F0 03C4+00 s=2 e=0 z=0  None .text      daE_DB_Execute__FP10e_db_class                               */
//	806A053C: 803621D8 (_savegpr_28)
//	806A0544: 806A190C (lit_3902)
//	806A0548: 806A190C (lit_3902)
//	806A0580: 804061C0 (g_dComIfG_gameInfo)
//	806A0584: 804061C0 (g_dComIfG_gameInfo)
//	806A05C4: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806A05CC: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	806A0628: 8069F978 (action__FP10e_db_class)
//	806A0630: 806A03C4 (anm_se_set__FP10e_db_class)
//	806A0634: 803DD470 (now__14mDoMtx_stack_c)
//	806A0638: 803DD470 (now__14mDoMtx_stack_c)
//	806A0648: 803468E8 (PSMTXTrans)
//	806A064C: 803DD470 (now__14mDoMtx_stack_c)
//	806A0650: 803DD470 (now__14mDoMtx_stack_c)
//	806A0658: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806A065C: 803DD470 (now__14mDoMtx_stack_c)
//	806A0660: 803DD470 (now__14mDoMtx_stack_c)
//	806A0668: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	806A066C: 803DD470 (now__14mDoMtx_stack_c)
//	806A0670: 803DD470 (now__14mDoMtx_stack_c)
//	806A0678: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	806A0698: 80270608 (cLib_addCalcAngleS2__FPssss)
//	806A069C: 806A1DA8 (l_HIO)
//	806A06A0: 806A1DA8 (l_HIO)
//	806A06B8: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806A06C4: 803DD470 (now__14mDoMtx_stack_c)
//	806A06C8: 803DD470 (now__14mDoMtx_stack_c)
//	806A06D0: 803464B0 (PSMTXCopy)
//	806A06DC: 8002D06C (dComIfGp_getReverb__Fi)
//	806A06EC: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	806A06F4: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	806A071C: 80450768 (calc_mtx)
//	806A0720: 80450768 (calc_mtx)
//	806A0728: 803464B0 (PSMTXCopy)
//	806A0794: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806A07D4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	806A07FC: 80347090 (PSVECAdd)
//	806A0808: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806A0824: 8026F708 (SetR__8cM3dGSphFf)
//	806A0828: 804061C0 (g_dComIfG_gameInfo)
//	806A082C: 804061C0 (g_dComIfG_gameInfo)
//	806A083C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806A0854: 80084AC4 (MoveCAt__8dCcD_SphFR4cXyz)
//	806A0870: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	806A087C: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806A0898: 8026F708 (SetR__8cM3dGSphFf)
//	806A08A4: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806A08B0: 8069FFFC (eff_set__FP10e_db_classi)
//	806A08D0: 8026FA3C (cLib_addCalc2__FPffff)
//	806A08DC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void daE_DB_Execute(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/daE_DB_Execute__FP10e_db_class.s"
}
#pragma pop


/* 806A08F0-806A08F8 0008+00 s=1 e=0 z=0  None .text      daE_DB_IsDelete__FP10e_db_class                              */
// True False
//  bool False
//  e_db_class* False
// 	 e_db_class False
static bool daE_DB_IsDelete(e_db_class* param_0) {
	return true;
}


/* 806A08F8-806A0960 0068+00 s=1 e=0 z=0  None .text      daE_DB_Delete__FP10e_db_class                                */
//	806A0910: 806A1A6C (stringBase0)
//	806A0914: 806A1A6C (stringBase0)
//	806A0918: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	806A092C: 806A1D98 (data_806A1D98)
//	806A0930: 806A1D98 (data_806A1D98)
//	806A0944: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_db_class* False
// 	 e_db_class False
asm static void daE_DB_Delete(e_db_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/daE_DB_Delete__FP10e_db_class.s"
}
#pragma pop


/* 806A0960-806A0B54 01F4+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	806A0970: 803621D4 (_savegpr_27)
//	806A097C: 802CEC4C (__nw__FUl)
//	806A0988: 806A1A6C (stringBase0)
//	806A098C: 806A1A6C (stringBase0)
//	806A0994: 804061C0 (g_dComIfG_gameInfo)
//	806A0998: 804061C0 (g_dComIfG_gameInfo)
//	806A09AC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806A09B4: 806A1A6C (stringBase0)
//	806A09B8: 806A1A6C (stringBase0)
//	806A09C8: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806A0A00: 806A1914 (lit_3904)
//	806A0A04: 806A1914 (lit_3904)
//	806A0A10: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	806A0A3C: 806A1A6C (stringBase0)
//	806A0A40: 806A1A6C (stringBase0)
//	806A0A48: 804061C0 (g_dComIfG_gameInfo)
//	806A0A4C: 804061C0 (g_dComIfG_gameInfo)
//	806A0A60: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806A0A78: 80013360 (init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi)
//	806A0A94: 806A195C (lit_4122)
//	806A0A98: 806A195C (lit_4122)
//	806A0AB0: 806A1A6C (stringBase0)
//	806A0AB4: 806A1A6C (stringBase0)
//	806A0AC4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806A0AEC: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	806A0B0C: 806A1914 (lit_3904)
//	806A0B10: 806A1914 (lit_3904)
//	806A0B14: 80267954 (cM_rndF__Ff)
//	806A0B18: 806A1914 (lit_3904)
//	806A0B1C: 806A1914 (lit_3904)
//	806A0B40: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 806A0B54-806A106C 0518+00 s=1 e=0 z=0  None .text      daE_DB_Create__FP10fopAc_ac_c                                */
//	806A0B64: 803621C8 (_savegpr_24)
//	806A0B6C: 806A1A74 (cNullVec__6Z2Calc)
//	806A0B70: 806A1A74 (cNullVec__6Z2Calc)
//	806A0B74: 806A190C (lit_3902)
//	806A0B78: 806A190C (lit_3902)
//	806A0B94: 80018B64 (__ct__10fopAc_ac_cFv)
//	806A0B9C: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	806A0BA4: 806A138C (__ct__4cXyzFv)
//	806A0BA8: 806A138C (__ct__4cXyzFv)
//	806A0BAC: 806A18BC (__dt__4cXyzFv)
//	806A0BB0: 806A18BC (__dt__4cXyzFv)
//	806A0BBC: 80361D60 (__construct_array)
//	806A0BC4: 806A1388 (__ct__5csXyzFv)
//	806A0BC8: 806A1388 (__ct__5csXyzFv)
//	806A0BCC: 806A1880 (__dt__5csXyzFv)
//	806A0BD0: 806A1880 (__dt__5csXyzFv)
//	806A0BDC: 80361D60 (__construct_array)
//	806A0BE0: 806A1D70 (__vt__18mDoExt_3DlineMat_c)
//	806A0BE4: 806A1D70 (__vt__18mDoExt_3DlineMat_c)
//	806A0BEC: 803A3248 (__vt__19mDoExt_3DlineMat1_c)
//	806A0BF0: 803A3248 (__vt__19mDoExt_3DlineMat1_c)
//	806A0BF8: 803C3728 (__vt__9cCcD_Stts)
//	806A0BFC: 803C3728 (__vt__9cCcD_Stts)
//	806A0C08: 80083760 (__ct__10dCcD_GSttsFv)
//	806A0C0C: 803AC2E4 (__vt__9dCcD_Stts)
//	806A0C10: 803AC2E4 (__vt__9dCcD_Stts)
//	806A0C28: 80083A28 (__ct__12dCcD_GObjInfFv)
//	806A0C2C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806A0C30: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806A0C38: 806A1D64 (__vt__8cM3dGAab)
//	806A0C3C: 806A1D64 (__vt__8cM3dGAab)
//	806A0C44: 806A1D58 (__vt__8cM3dGSph)
//	806A0C48: 806A1D58 (__vt__8cM3dGSph)
//	806A0C50: 803C3540 (__vt__12cCcD_SphAttr)
//	806A0C54: 803C3540 (__vt__12cCcD_SphAttr)
//	806A0C64: 803ABFC0 (__vt__8dCcD_Sph)
//	806A0C68: 803ABFC0 (__vt__8dCcD_Sph)
//	806A0C88: 80083A28 (__ct__12dCcD_GObjInfFv)
//	806A0C8C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806A0C90: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806A0C98: 806A1D64 (__vt__8cM3dGAab)
//	806A0C9C: 806A1D64 (__vt__8cM3dGAab)
//	806A0CA4: 806A1D58 (__vt__8cM3dGSph)
//	806A0CA8: 806A1D58 (__vt__8cM3dGSph)
//	806A0CB0: 803C3540 (__vt__12cCcD_SphAttr)
//	806A0CB4: 803C3540 (__vt__12cCcD_SphAttr)
//	806A0CC0: 803ABFC0 (__vt__8dCcD_Sph)
//	806A0CC4: 803ABFC0 (__vt__8dCcD_Sph)
//	806A0CD8: 806A114C (__ct__8dCcD_SphFv)
//	806A0CDC: 806A114C (__ct__8dCcD_SphFv)
//	806A0CE0: 806A11D0 (__dt__8dCcD_SphFv)
//	806A0CE4: 806A11D0 (__dt__8dCcD_SphFv)
//	806A0CF0: 80361D60 (__construct_array)
//	806A0CF8: 80075EAC (__ct__12dBgS_AcchCirFv)
//	806A0D04: 800760A0 (__ct__9dBgS_AcchFv)
//	806A0D08: 806A1D34 (__vt__12dBgS_ObjAcch)
//	806A0D0C: 806A1D34 (__vt__12dBgS_ObjAcch)
//	806A0D28: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	806A0D3C: 806A1A6C (stringBase0)
//	806A0D40: 806A1A6C (stringBase0)
//	806A0D44: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	806A0D64: 804061C0 (g_dComIfG_gameInfo)
//	806A0D68: 804061C0 (g_dComIfG_gameInfo)
//	806A0D74: 80035360 (isSwitch__10dSv_info_cCFii)
//	806A0E10: 806A0960 (useHeapInit__FP10fopAc_ac_c)
//	806A0E14: 806A0960 (useHeapInit__FP10fopAc_ac_c)
//	806A0E1C: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	806A0E30: 806A1D98 (data_806A1D98)
//	806A0E34: 806A1D98 (data_806A1D98)
//	806A0E50: 806A1DA8 (l_HIO)
//	806A0E54: 806A1DA8 (l_HIO)
//	806A0E84: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	806A0E98: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	806A0EB8: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	806A0EC4: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806A0ED8: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806A0EF8: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806A0F38: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	806A0F48: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	806A0F60: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	806A0F68: 806A1A6C (stringBase0)
//	806A0F6C: 806A1A6C (stringBase0)
//	806A0F70: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	806A0F90: 80267954 (cM_rndF__Ff)
//	806A0FA4: 806A1DA8 (l_HIO)
//	806A0FA8: 806A1DA8 (l_HIO)
//	806A1040: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	806A104C: 806A052C (daE_DB_Execute__FP10e_db_class)
//	806A1058: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daE_DB_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/daE_DB_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 806A106C-806A10DC 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	806A108C: 806A1D34 (__vt__12dBgS_ObjAcch)
//	806A1090: 806A1D34 (__vt__12dBgS_ObjAcch)
//	806A10AC: 80075F94 (__dt__9dBgS_AcchFv)
//	806A10BC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 806A10DC-806A114C 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	806A10FC: 806A1D28 (__vt__12dBgS_AcchCir)
//	806A1100: 806A1D28 (__vt__12dBgS_AcchCir)
//	806A1110: 8026EF18 (__dt__8cM3dGCirFv)
//	806A111C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	806A112C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 806A114C-806A11D0 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_SphFv                                            */
//	806A1160: 80083A28 (__ct__12dCcD_GObjInfFv)
//	806A1164: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806A1168: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806A1170: 806A1D64 (__vt__8cM3dGAab)
//	806A1174: 806A1D64 (__vt__8cM3dGAab)
//	806A117C: 806A1D58 (__vt__8cM3dGSph)
//	806A1180: 806A1D58 (__vt__8cM3dGSph)
//	806A1188: 803C3540 (__vt__12cCcD_SphAttr)
//	806A118C: 803C3540 (__vt__12cCcD_SphAttr)
//	806A119C: 803ABFC0 (__vt__8dCcD_Sph)
//	806A11A0: 803ABFC0 (__vt__8dCcD_Sph)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__ct__8dCcD_SphFv.s"
}
#pragma pop


/* 806A11D0-806A129C 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_SphFv                                            */
//	806A11F0: 803ABFC0 (__vt__8dCcD_Sph)
//	806A11F4: 803ABFC0 (__vt__8dCcD_Sph)
//	806A1214: 803C3540 (__vt__12cCcD_SphAttr)
//	806A1218: 803C3540 (__vt__12cCcD_SphAttr)
//	806A1230: 806A1D58 (__vt__8cM3dGSph)
//	806A1234: 806A1D58 (__vt__8cM3dGSph)
//	806A1244: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806A1248: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806A1258: 806A1D64 (__vt__8cM3dGAab)
//	806A125C: 806A1D64 (__vt__8cM3dGAab)
//	806A126C: 800840E4 (__dt__12dCcD_GObjInfFv)
//	806A127C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::~dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__dt__8dCcD_SphFv.s"
}
#pragma pop


/* 806A129C-806A12E4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	806A12B4: 806A1D58 (__vt__8cM3dGSph)
//	806A12B8: 806A1D58 (__vt__8cM3dGSph)
//	806A12C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 806A12E4-806A132C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	806A12FC: 806A1D64 (__vt__8cM3dGAab)
//	806A1300: 806A1D64 (__vt__8cM3dGAab)
//	806A1310: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 806A132C-806A1388 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	806A1344: 806A1D1C (__vt__10dCcD_GStts)
//	806A1348: 806A1D1C (__vt__10dCcD_GStts)
//	806A1354: 806A1D10 (__vt__10cCcD_GStts)
//	806A1358: 806A1D10 (__vt__10cCcD_GStts)
//	806A136C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 806A1388-806A138C 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 806A138C-806A1390 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv                                                */
// True False
cXyz::cXyz() {
	/* empty function */
}


/* 806A1390-806A13D8 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	806A13A8: 806A1D10 (__vt__10cCcD_GStts)
//	806A13AC: 806A1D10 (__vt__10cCcD_GStts)
//	806A13BC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 806A13D8-806A1420 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_DB_HIO_cFv                                       */
//	806A13F0: 806A1D84 (__vt__12daE_DB_HIO_c)
//	806A13F4: 806A1D84 (__vt__12daE_DB_HIO_c)
//	806A1404: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_DB_HIO_c::~daE_DB_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__dt__12daE_DB_HIO_cFv.s"
}
#pragma pop


/* 806A1420-806A145C 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_db_cpp                                         */
//	806A142C: 806A1DA8 (l_HIO)
//	806A1430: 806A1DA8 (l_HIO)
//	806A1434: 8069AAEC (__ct__12daE_DB_HIO_cFv)
//	806A1438: 806A13D8 (__dt__12daE_DB_HIO_cFv)
//	806A143C: 806A13D8 (__dt__12daE_DB_HIO_cFv)
//	806A1440: 806A1D9C (lit_3918)
//	806A1444: 806A1D9C (lit_3918)
//	806A1448: 8069AA78 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_db_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__sinit_d_a_e_db_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_806A1420 = (void*)__sinit_d_a_e_db_cpp;
#pragma pop


/* 806A145C-806A1464 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	806A1460: 806A106C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_806A145C() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/func_806A145C.s"
}
#pragma pop


/* 806A1464-806A146C 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	806A1468: 806A106C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_806A1464() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/func_806A1464.s"
}
#pragma pop


/* 806A146C-806A1880 0414+00 s=1 e=0 z=0  None .text      setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz */
//	806A147C: 803621B4 (_savegpr_19)
//	806A1490: 806A1A74 (cNullVec__6Z2Calc)
//	806A1494: 806A1A74 (cNullVec__6Z2Calc)
//	806A1498: 806A190C (lit_3902)
//	806A149C: 806A190C (lit_3902)
//	806A14A0: 804061C0 (g_dComIfG_gameInfo)
//	806A14A4: 804061C0 (g_dComIfG_gameInfo)
//	806A14AC: 80451018 (m_midnaActor__9daPy_py_c)
//	806A14B0: 80451018 (m_midnaActor__9daPy_py_c)
//	806A14D8: 801AC57C (dKy_darkworld_check__Fv)
//	806A14FC: 80451018 (m_midnaActor__9daPy_py_c)
//	806A1500: 80451018 (m_midnaActor__9daPy_py_c)
//	806A1518: 803DD470 (now__14mDoMtx_stack_c)
//	806A151C: 803DD470 (now__14mDoMtx_stack_c)
//	806A1520: 803464B0 (PSMTXCopy)
//	806A1538: 803DD470 (now__14mDoMtx_stack_c)
//	806A153C: 803DD470 (now__14mDoMtx_stack_c)
//	806A1548: 80346D6C (PSMTXMultVec)
//	806A1558: 80266B34 (__mi__4cXyzCFRC3Vec)
//	806A1574: 80267674 (cM_atan2s__Fff)
//	806A15A8: 80267674 (cM_atan2s__Fff)
//	806A15C4: 804061C0 (g_dComIfG_gameInfo)
//	806A15C8: 804061C0 (g_dComIfG_gameInfo)
//	806A1618: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806A1628: 80347138 (PSVECSquareMag)
//	806A1698: 80450AE0 (__float_nan)
//	806A169C: 80450AE0 (__float_nan)
//	806A1708: 80450AE0 (__float_nan)
//	806A170C: 80450AE0 (__float_nan)
//	806A1760: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806A179C: 804061C0 (g_dComIfG_gameInfo)
//	806A17A0: 804061C0 (g_dComIfG_gameInfo)
//	806A180C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806A186C: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
asm static void setMidnaBindEffect(fopEn_enemy_c* param_0, Z2CreatureEnemy* param_1, cXyz* param_2, cXyz* param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz.s"
}
#pragma pop


/* 806A1880-806A18BC 003C+00 s=1 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	806A18A0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__dt__5csXyzFv.s"
}
#pragma pop


/* 806A18BC-806A18F8 003C+00 s=1 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	806A18DC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_db/d_a_e_db/__dt__4cXyzFv.s"
}
#pragma pop


