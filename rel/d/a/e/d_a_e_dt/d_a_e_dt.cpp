// 
// Generated By: dol2asm
// Translation Unit: d_a_e_dt
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_dt/d_a_e_dt.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 806AE56C */ // True False
~cXyz();
};

struct csXyz {
	/* 806B5B7C */ // True False
csXyz();
	/* 806B5B80 */ // True False
~csXyz();
};

struct mDoMtx_stack_c {
	/* 8000CD64 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void transS(cXyz const&);
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct mDoGph_gInf_c {
	/* 80008078 */ // False False
void onBlure();
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct daPy_py_c {
	/* 8015F914 */ // False False
//  int False
//  int False
void setPlayerDamage(int, int);
};

struct J3DJoint {
};

struct J3DModel {
};

struct daE_DT_c {
	/* 806AD97C */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 806ADBA0 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void JointCallBack(J3DJoint*, int);
	/* 806ADBEC */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJointTuba(J3DJoint*, J3DModel*);
	/* 806ADD30 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void JointCallBackTuba(J3DJoint*, int);
	/* 806ADD7C */ // True False
void draw();
	/* 806AE5C8 */ // True False
//  int False
void demo_skip(int);
	/* 806AE618 */ // True False
//  void* False
// 	 void False
//  int False
void DemoSkipCallBack(void*, int);
	/* 806AE64C */ // True False
//  int False
//  u8 False
//  f32 False
//  f32 False
void setBck(int, u8, f32, f32);
	/* 806AE6F0 */ // True False
//  int False
void checkBck(int);
	/* 806AE74C */ // True False
//  int False
//  int False
void setActionMode(int, int);
	/* 806AE758 */ // True False
void damage_check();
	/* 806AEB48 */ // True False
void setStabPos();
	/* 806AEBD4 */ // True False
//  f32 False
void checkBeforeBg(f32);
	/* 806AED94 */ // True False
void checkTongueBg();
	/* 806AEEFC */ // True False
void checkWaterSurface();
	/* 806AEFE8 */ // True False
void setSmallWaterEffect();
	/* 806AF09C */ // True False
void setLargeWaterEffect();
	/* 806AF150 */ // True False
//  int False
void setHamonEffect(int);
	/* 806AF240 */ // True False
void setJumpEffect();
	/* 806AF2F4 */ // True False
void setJumpSizukuEffect();
	/* 806AF3D0 */ // True False
//  int False
void setDamageShibukiEffect(int);
	/* 806AF460 */ // True False
//  int False
void setDamageYodareEffect(int);
	/* 806AF548 */ // True False
void setSwingEffect();
	/* 806AF5CC */ // True False
void setStepEffect();
	/* 806AF740 */ // True False
void setBombEffect();
	/* 806AF848 */ // True False
void setBombSmokeEffect();
	/* 806AF924 */ // True False
void setDeadShibukiEffect();
	/* 806AF9D8 */ // True False
void setDeadYodareEffect();
	/* 806AFAE0 */ // True False
void setBoxTubaEffect();
	/* 806AFBBC */ // True False
void setBoxTubaLandEffect();
	/* 806AFD30 */ // True False
void getNumberOfOtama();
	/* 806AFE24 */ // True False
void setStayOtamaFall();
	/* 806AFEAC */ // True False
void setStayOtamaDelete();
	/* 806B0114 */ // True False
void checkBombEat();
	/* 806B01B4 */ // True False
void isShutterOpen();
	/* 806B0200 */ // True False
void executeWait();
	/* 806B0368 */ // True False
void executeCry();
	/* 806B063C */ // True False
void executeShake();
	/* 806B07C4 */ // True False
void executeWalk();
	/* 806B0E9C */ // True False
void executeJump();
	/* 806B177C */ // True False
void executeDown();
	/* 806B1B60 */ // True False
void executeSearch();
	/* 806B1BEC */ // True False
void executeDamage();
	/* 806B1D48 */ // True False
void executeBombDamage();
	/* 806B1F78 */ // True False
void executeDeath();
	/* 806B28E4 */ // True False
//  cXyz* False
// 	 cXyz False
void pointInSight(cXyz*);
	/* 806B29D4 */ // True False
void executeOpening();
	/* 806B3B08 */ // True False
void calcCamera();
	/* 806B40D8 */ // True False
void calcBoxAndTuba();
	/* 806B4724 */ // True False
void action();
	/* 806B49F0 */ // True False
void mtx_set();
	/* 806B4B24 */ // True False
void cc_set();
	/* 806B4FD8 */ // True False
void execute();
	/* 806B5158 */ // True False
void _delete();
	/* 806B5214 */ // True False
void CreateHeap();
	/* 806B5460 */ // True False
void create();
};

struct daE_DT_HIO_c {
	/* 806AD90C */ // True False
daE_DT_HIO_c();
	/* 806B5BDC */ // True False
~daE_DT_HIO_c();
};

struct dVibration_c {
	/* 8006FB10 */ // False False
//  int False
//  int False
//  cXyz False
void StartQuake(int, int, cXyz);
	/* 8006FD94 */ // False False
//  int False
void StopQuake(int);
};

struct dSv_memBit_c {
	/* 80034918 */ // False False
//  int False
void onDungeonItem(int);
	/* 80034934 */ // False False
//  int False
void isDungeonItem(int) const;
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C37C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, char const*, dRes_info_c*, int);
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 80042914 */ // False False
//  void* False
// 	 void False
//  int (*)(void*, int) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 int False
//  int False
void setSkipProc(void*, int (*)(void*, int), int);
	/* 800429A8 */ // False False
void onSkipFade();
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 806B592C */ // True False
~dCcD_Sph();
	/* 806B59F8 */ // True False
dCcD_Sph();
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084658 */ // False False
void ChkCoHit();
	/* 800846F0 */ // False False
void GetCoHitObj();
};

struct dCamera_c {
	/* 801614AC */ // False False
void Start();
	/* 801614D0 */ // False False
void Stop();
	/* 8016300C */ // False False
//  s32 False
void SetTrimSize(s32);
	/* 80180AE0 */ // False False
//  cXyz False
//  cXyz False
//  f32 False
//  s16 False
void Set(cXyz, cXyz, f32, s16);
	/* 80180AA8 */ // False False
//  cXyz False
//  cXyz False
void Set(cXyz, cXyz);
	/* 80180BA0 */ // False False
//  cXyz False
//  cXyz False
//  f32 False
//  s16 False
void Reset(cXyz, cXyz, f32, s16);
	/* 80180C18 */ // False False
//  cXyz False
//  cXyz False
void Reset(cXyz, cXyz);
	/* 80181E64 */ // False False
void Eye();
	/* 80181E98 */ // False False
void Center();
	/* 806B5C8C */ // True False
void Bank();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjGndChk_Spl {
	/* 800777B0 */ // False False
dBgS_ObjGndChk_Spl();
	/* 80077848 */ // False False
~dBgS_ObjGndChk_Spl();
};

struct dBgS_ObjAcch {
	/* 806B5B0C */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct camera_class {
};

struct cSAngle {
	/* 80270F98 */ // False False
//  s16 False
cSAngle(s16);
	/* 80271174 */ // False False
//  cSAngle const& False
// 	 cSAngle const False
// 		 cSAngle False
void operator+(cSAngle const&) const;
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 806B5A7C */ // True False
~cM3dGSph();
};

struct cM3dGPla {
	/* 806AED4C */ // True False
~cM3dGPla();
};

struct cM3dGAab {
	/* 806B5AC4 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
	/* 80263A48 */ // False False
void GetAc();
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_Stts {
	/* 8026395C */ // False False
void ClrCcMove();
};

struct cBgS_PolyInfo {
};

struct cBgS_LinChk {
};

struct cBgS_GndChk {
	/* 80267D0C */ // False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void SetPos(Vec const*);
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct _GXTexObj {
};

struct Z2SeqMgr {
	/* 802AF49C */ // False False
//  u32 False
void subBgmStart(u32);
	/* 802AF884 */ // False False
void subBgmStop();
	/* 802B1DF4 */ // False False
//  s32 False
void changeSubBgmStatus(s32);
};

struct JAISoundID {
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
};

struct JGeometry {
	template <typename A1>
	struct TVec3 { };
	/* TVec3<f32> */
	struct TVec3__template0 {
	};

};

struct J3DFrameCtrl {
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
};

// 
// Forward References:
// 

// True False
//  daE_DT_c* False
// 	 daE_DT_c False
static void daE_DT_Draw(daE_DT_c*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_otama_todo(void*, void*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_fall_otama(void*, void*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_demo_otama(void*, void*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_bomb_search(void*, void*);
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
static void daE_DT_Execute(daE_DT_c*);
// True False
//  bool False
//  daE_DT_c* False
// 	 daE_DT_c False
static bool daE_DT_IsDelete(daE_DT_c*);
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
static void daE_DT_Delete(daE_DT_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
static void daE_DT_Create(daE_DT_c*);

// True False
extern "C" void __ct__12daE_DT_HIO_cFv();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void JointCallBack__8daE_DT_cFP8J3DJointi();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJointTuba__8daE_DT_cFP8J3DJointP8J3DModel();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void JointCallBackTuba__8daE_DT_cFP8J3DJointi();
// True False
extern "C" void draw__8daE_DT_cFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
extern "C" static void daE_DT_Draw__FP8daE_DT_c();
// True False
//  int False
extern "C" void demo_skip__8daE_DT_cFi();
// True False
//  void* False
// 	 void False
//  int False
extern "C" void DemoSkipCallBack__8daE_DT_cFPvi();
// True False
//  int False
//  u8 False
//  f32 False
//  f32 False
extern "C" void setBck__8daE_DT_cFiUcff();
// True False
//  int False
extern "C" void checkBck__8daE_DT_cFi();
// True False
//  int False
//  int False
extern "C" void setActionMode__8daE_DT_cFii();
// True False
extern "C" void damage_check__8daE_DT_cFv();
// True False
extern "C" void setStabPos__8daE_DT_cFv();
// True False
//  f32 False
extern "C" void checkBeforeBg__8daE_DT_cFf();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
extern "C" void checkTongueBg__8daE_DT_cFv();
// True False
extern "C" void checkWaterSurface__8daE_DT_cFv();
// True False
extern "C" void setSmallWaterEffect__8daE_DT_cFv();
// True False
extern "C" void setLargeWaterEffect__8daE_DT_cFv();
// True False
//  int False
extern "C" void setHamonEffect__8daE_DT_cFi();
// True False
extern "C" void setJumpEffect__8daE_DT_cFv();
// True False
extern "C" void setJumpSizukuEffect__8daE_DT_cFv();
// True False
//  int False
extern "C" void setDamageShibukiEffect__8daE_DT_cFi();
// True False
//  int False
extern "C" void setDamageYodareEffect__8daE_DT_cFi();
// True False
extern "C" void setSwingEffect__8daE_DT_cFv();
// True False
extern "C" void setStepEffect__8daE_DT_cFv();
// True False
extern "C" void setBombEffect__8daE_DT_cFv();
// True False
extern "C" void setBombSmokeEffect__8daE_DT_cFv();
// True False
extern "C" void setDeadShibukiEffect__8daE_DT_cFv();
// True False
extern "C" void setDeadYodareEffect__8daE_DT_cFv();
// True False
extern "C" void setBoxTubaEffect__8daE_DT_cFv();
// True False
extern "C" void setBoxTubaLandEffect__8daE_DT_cFv();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_otama_todo__FPvPv();
// True False
extern "C" void getNumberOfOtama__8daE_DT_cFv();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_fall_otama__FPvPv();
// True False
extern "C" void setStayOtamaFall__8daE_DT_cFv();
// True False
extern "C" void setStayOtamaDelete__8daE_DT_cFv();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_demo_otama__FPvPv();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_bomb_search__FPvPv();
// True False
extern "C" void checkBombEat__8daE_DT_cFv();
// True False
extern "C" void isShutterOpen__8daE_DT_cFv();
// True False
extern "C" void executeWait__8daE_DT_cFv();
// True False
extern "C" void executeCry__8daE_DT_cFv();
// True False
extern "C" void executeShake__8daE_DT_cFv();
// True False
extern "C" void executeWalk__8daE_DT_cFv();
// True False
extern "C" void executeJump__8daE_DT_cFv();
// True False
extern "C" void executeDown__8daE_DT_cFv();
// True False
extern "C" void executeSearch__8daE_DT_cFv();
// True False
extern "C" void executeDamage__8daE_DT_cFv();
// True False
extern "C" void executeBombDamage__8daE_DT_cFv();
// True False
extern "C" void executeDeath__8daE_DT_cFv();
// True False
//  cXyz* False
// 	 cXyz False
extern "C" void pointInSight__8daE_DT_cFP4cXyz();
// True False
extern "C" void executeOpening__8daE_DT_cFv();
// True False
extern "C" void calcCamera__8daE_DT_cFv();
// True False
extern "C" void calcBoxAndTuba__8daE_DT_cFv();
// True False
extern "C" void action__8daE_DT_cFv();
// True False
extern "C" void mtx_set__8daE_DT_cFv();
// True False
extern "C" void cc_set__8daE_DT_cFv();
// True False
extern "C" void execute__8daE_DT_cFv();
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
extern "C" static void daE_DT_Execute__FP8daE_DT_c();
// True False
//  bool False
//  daE_DT_c* False
// 	 daE_DT_c False
extern "C" static bool daE_DT_IsDelete__FP8daE_DT_c();
// True False
extern "C" void _delete__8daE_DT_cFv();
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
extern "C" static void daE_DT_Delete__FP8daE_DT_c();
// True False
extern "C" void CreateHeap__8daE_DT_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void create__8daE_DT_cFv();
// True False
extern "C" void __dt__8dCcD_SphFv();
// True False
extern "C" void __ct__8dCcD_SphFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__5csXyzFv();
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
extern "C" static void daE_DT_Create__FP8daE_DT_c();
// True False
extern "C" void __dt__12daE_DT_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_dt_cpp();
// True False
extern "C" static void func_806B5C7C();
// True False
extern "C" static void func_806B5C84();
// True False
extern "C" void Bank__9dCamera_cFv();
extern "C" extern u32 const lit_3793;
extern "C" extern u32 const lit_3794;
extern "C" extern u32 const lit_3795;
extern "C" extern u32 const lit_3796;
extern "C" extern u32 const lit_3799;
extern "C" extern u32 const lit_3800;
extern "C" extern u32 const lit_3801;
extern "C" extern u32 const lit_4061;
extern "C" extern u32 const lit_4062;
extern "C" extern u32 const lit_4063;
extern "C" extern u32 const lit_4064;
extern "C" extern u32 const lit_4065;
extern "C" extern u32 const lit_4067;
extern "C" extern u32 const lit_4068;
extern "C" extern u32 const lit_4069;
extern "C" extern u32 const lit_4070;
extern "C" extern u32 const lit_4073;
extern "C" extern u32 const lit_4074;
extern "C" extern u32 const lit_4075;
extern "C" extern u32 const lit_4233;
extern "C" extern u32 const lit_4234;
extern "C" extern u32 const lit_4367;
extern "C" extern u32 const lit_4630;
extern "C" extern u32 const lit_4631;
extern "C" extern u8 const lit_4976[8];
extern "C" extern u8 const lit_4977[8];
extern "C" extern u8 const lit_4978[8];
extern "C" extern u32 const lit_4979;
extern "C" extern u32 const lit_5088;
extern "C" extern u32 const lit_5089;
extern "C" extern u32 const lit_5090;
extern "C" extern u32 const lit_5155;
extern "C" extern u32 const lit_5156;
extern "C" extern u32 const lit_5157;
extern "C" extern u32 const lit_5158;
extern "C" extern u32 const lit_5315;
extern "C" extern u32 const lit_5316;
extern "C" extern u32 const lit_5317;
extern "C" extern u32 const lit_5318;
extern "C" extern u32 const lit_5319;
extern "C" extern u32 const lit_5520;
extern "C" extern u32 const lit_5521;
extern "C" extern u32 const lit_5522;
extern "C" extern u32 const lit_5523;
extern "C" extern u32 const lit_5524;
extern "C" extern u32 const lit_5525;
extern "C" extern u32 const lit_5526;
extern "C" extern u32 const lit_5527;
extern "C" extern u32 const lit_5528;
extern "C" extern u32 const lit_5529;
extern "C" extern u32 const lit_5530;
extern "C" extern u32 const lit_5531;
extern "C" extern u32 const lit_5613;
extern "C" extern u32 const lit_5614;
extern "C" extern u32 const lit_5705;
extern "C" extern u32 const lit_5706;
extern "C" extern u32 const lit_5952;
extern "C" extern u32 const lit_5953;
extern "C" extern u32 const lit_5954;
extern "C" extern u32 const lit_5955;
extern "C" extern u32 const lit_5956;
extern "C" extern u32 const lit_5957;
extern "C" extern u32 const lit_5958;
extern "C" extern u32 const lit_5959;
extern "C" extern u32 const lit_5960;
extern "C" extern u32 const lit_5961;
extern "C" extern u32 const lit_5962;
extern "C" extern u32 const lit_5963;
extern "C" extern u32 const lit_5964;
extern "C" extern u8 const lit_5967[8];
extern "C" extern u32 const lit_6430;
extern "C" extern u32 const lit_6431;
extern "C" extern u32 const lit_6432;
extern "C" extern u32 const lit_6433;
extern "C" extern u32 const lit_6434;
extern "C" extern u32 const lit_6435;
extern "C" extern u32 const lit_6436;
extern "C" extern u32 const lit_6437;
extern "C" extern u32 const lit_6438;
extern "C" extern u32 const lit_6439;
extern "C" extern u32 const lit_6440;
extern "C" extern u32 const lit_6441;
extern "C" extern u32 const lit_6442;
extern "C" extern u32 const lit_6443;
extern "C" extern u32 const lit_6444;
extern "C" extern u32 const lit_6445;
extern "C" extern u32 const lit_6446;
extern "C" extern u32 const lit_6447;
extern "C" extern u32 const lit_6448;
extern "C" extern u32 const lit_6449;
extern "C" extern u32 const lit_6450;
extern "C" extern u32 const lit_6451;
extern "C" extern u32 const lit_6618;
extern "C" extern u32 const lit_6724;
extern "C" extern u32 const lit_6725;
extern "C" extern u32 const lit_6726;
extern "C" extern u32 const lit_6727;
extern "C" extern u32 const lit_6728;
extern "C" extern u32 const lit_6729;
extern "C" extern u32 const lit_6730;
extern "C" extern u32 const lit_6731;
extern "C" extern u32 const lit_6733;
extern "C" extern u32 const lit_6949;
extern "C" extern u32 const lit_6950;
extern "C" extern u32 const lit_6951;
extern "C" extern u32 const lit_6952;
extern "C" extern u32 const lit_7217;
extern "C" extern u32 const lit_7218;
extern "C" extern u32 const lit_7219;
extern "C" extern u32 const lit_7220;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_E_DT[12];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__12daE_DT_HIO_c[3];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_3787[12];
extern "C" extern u8 lit_3802[12];
extern "C" extern u8 data_806B634C[4];
extern "C" extern u8 data_806B6350[4];
extern "C" extern u8 data_806B6354[4];
extern "C" extern u8 data_806B6358[4];
extern "C" extern u8 data_806B635C[4];
extern "C" extern u8 data_806B6360[4];
extern "C" extern u8 data_806B6364[4];
extern "C" extern u8 data_806B6368[4];
extern "C" extern u8 data_806B636C[4];
extern "C" extern u8 data_806B6370[4];
extern "C" extern u8 data_806B6374[4];
extern "C" extern u8 data_806B6378[4];
extern "C" extern u8 data_806B637C[4];
extern "C" extern u8 data_806B6380[4];
extern "C" extern u8 data_806B6384[4];
extern "C" extern u8 data_806B6388[4];
extern "C" extern u8 data_806B638C[4];
extern "C" extern u8 data_806B6390[4];
extern "C" extern u8 data_806B6394[4];
extern "C" extern u8 data_806B6398[4];
extern "C" extern u8 data_806B639C[4];
extern "C" extern u8 data_806B63A0[4];
extern "C" extern u8 data_806B63A4[4];
extern "C" extern u8 data_806B63A8[4];
extern "C" extern u8 data_806B63AC[4];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
void mDoLib_project(Vec*, Vec*);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  unsigned int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void fopAcM_SearchByID(unsigned int, fopAc_ac_c**);
// False False
//  s16 False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void fopAcM_SearchByName(s16, fopAc_ac_c**);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
void fopAcM_create(s16, u32, cXyz const*, int, csXyz const*, cXyz const*, s8);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleX(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderPotentialEvent(fopAc_ac_c*, u16, u16, u16);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
void fopAcM_createDisappear(fopAc_ac_c const*, cXyz const*, u8, u8, u8);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
void fopAcM_setEffectMtx(fopAc_ac_c const*, J3DModelData const*);
// False False
//  camera_class* False
// 	 camera_class False
void fopCamM_GetParam(camera_class*);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fpcEx_Search(void* (*)(void*, void*), void*);
// False False
//  unsigned int False
void fpcM_IsCreating(unsigned int);
// False False
//  int False
//  f32 False
//  u32 False
//  s8 False
//  s16 False
//  int False
void dStage_changeScene(int, f32, u32, s8, s16, int);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  int False
//  int False
void dComIfGs_onOneZoneSwitch(int, int);
// False False
//  int False
//  int False
void dComIfGs_isOneZoneSwitch(int, int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);
// False False
void dCam_getBody();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
void cM_rnd();
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
void cLib_addCalcPos2(cXyz*, cXyz const&, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void cLib_chasePos(cXyz*, cXyz const&, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseAngleS(s16*, s16, s16);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_offsetPos(cXyz*, cXyz const*, s16, cXyz const*);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxSTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*, JGeometry::TVec3__template0*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
extern "C" void onBlure__13mDoGph_gInf_cFv();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
extern "C" void mDoLib_project__FP3VecP3Vec();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  unsigned int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void fopAcM_SearchByID__FUiPP10fopAc_ac_c();
// False False
//  s16 False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void fopAcM_SearchByName__FsPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
extern "C" void fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleX__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
extern "C" void fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  J3DModelData const* False
// 	 J3DModelData const False
// 		 J3DModelData False
extern "C" void fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData();
// False False
//  camera_class* False
// 	 camera_class False
extern "C" void fopCamM_GetParam__FP12camera_class();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fpcEx_Search__FPFPvPv_PvPv();
// False False
//  unsigned int False
extern "C" void fpcM_IsCreating__FUi();
// False False
//  int False
//  f32 False
//  u32 False
//  s8 False
//  s16 False
//  int False
extern "C" void dStage_changeScene__FifUlScsi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  int False
//  int False
extern "C" void dComIfGs_onOneZoneSwitch__Fii();
// False False
//  int False
//  int False
extern "C" void dComIfGs_isOneZoneSwitch__Fii();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  int False
extern "C" void onDungeonItem__12dSv_memBit_cFi();
// False False
//  int False
extern "C" void isDungeonItem__12dSv_memBit_cCFi();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  char const* False
// 	 char const False
// 		 char False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  void* False
// 	 void False
//  int (*)(void*, int) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
// 	 int False
//  int False
extern "C" void setSkipProc__14dEvt_control_cFPvPFPvi_ii();
// False False
extern "C" void onSkipFade__14dEvt_control_cFv();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartQuake__12dVibration_cFii4cXyz();
// False False
//  int False
extern "C" void StopQuake__12dVibration_cFi();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __dt__18dBgS_ObjGndChk_SplFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetCoHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
//  int False
//  int False
extern "C" void setPlayerDamage__9daPy_py_cFii();
// False False
extern "C" void Start__9dCamera_cFv();
// False False
extern "C" void Stop__9dCamera_cFv();
// False False
//  s32 False
extern "C" void SetTrimSize__9dCamera_cFl();
// False False
//  cXyz False
//  cXyz False
extern "C" void Set__9dCamera_cF4cXyz4cXyz();
// False False
//  cXyz False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void Set__9dCamera_cF4cXyz4cXyzfs();
// False False
//  cXyz False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void Reset__9dCamera_cF4cXyz4cXyzfs();
// False False
//  cXyz False
//  cXyz False
extern "C" void Reset__9dCamera_cF4cXyz4cXyz();
// False False
extern "C" void dCam_getBody__Fv();
// False False
extern "C" void Eye__9dCamera_cFv();
// False False
extern "C" void Center__9dCamera_cFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void ClrCcMove__9cCcD_SttsFv();
// False False
extern "C" void GetAc__8cCcD_ObjFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
extern "C" void cM_rnd__Fv();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void SetPos__11cBgS_GndChkFPC3Vec();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
extern "C" void cLib_addCalcPos2__FP4cXyzRC4cXyzff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void cLib_chasePos__FP4cXyzRC4cXyzf();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseAngleS__FPsss();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz();
// False False
//  s16 False
extern "C" void __ct__7cSAngleFs();
// False False
//  cSAngle const& False
// 	 cSAngle const False
// 		 cSAngle False
extern "C" void __pl__7cSAngleCFRC7cSAngle();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_80280808();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  u32 False
extern "C" void subBgmStart__8Z2SeqMgrFUl();
// False False
extern "C" void subBgmStop__8Z2SeqMgrFv();
// False False
//  s32 False
extern "C" void changeSubBgmStatus__8Z2SeqMgrFl();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void abs();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 j3dZModeTable[96];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern u8 struct_80450BE4[4];
extern "C" extern u8 struct_80450C98[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 806B5CD4-806B5CD8 0004+00 s=22 e=0 z=0  None .rodata    @3792                                                        */
SECTION_RODATA static u32 const lit_3792 = 0x3FC00000;

/* 806B5EEC-806B5F14 0028+00 s=1 e=0 z=0  None .data      eDt_ShakeFrame__6E_DT_n                                      */
SECTION_DATA static u8 eDt_ShakeFrame__6E_DT_n[40] = {
	0x41, 0xA0, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00,
	0x41, 0xE0, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x42, 0x08, 0x00, 0x00,
	0x42, 0x10, 0x00, 0x00, 0x42, 0x18, 0x00, 0x00,
};

/* 806B5F14-806B5F3C 0028+00 s=1 e=0 z=0  None .data      eDt_ShakeFrameDemo__6E_DT_n                                  */
SECTION_DATA static u8 eDt_ShakeFrameDemo__6E_DT_n[40] = {
	0x43, 0x9B, 0x00, 0x00, 0x43, 0x9C, 0x00, 0x00, 0x43, 0x9D, 0x00, 0x00, 0x43, 0x9E, 0x00, 0x00,
	0x43, 0x9F, 0x00, 0x00, 0x43, 0xA0, 0x00, 0x00, 0x43, 0xA1, 0x00, 0x00, 0x43, 0xA2, 0x00, 0x00,
	0x43, 0xA3, 0x00, 0x00, 0x43, 0xA4, 0x00, 0x00,
};

/* 806B5F3C-806B5F7C 0040+00 s=1 e=0 z=0  None .data      cc_dt_body_src__6E_DT_n                                      */
SECTION_DATA static u8 cc_dt_body_src__6E_DT_n[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x75, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 806B5F7C-806B5FBC 0040+00 s=1 e=0 z=0  None .data      cc_dt_tongue_src__6E_DT_n                                    */
SECTION_DATA static u8 cc_dt_tongue_src__6E_DT_n[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x75, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 806B5FBC-806B6058 009C+00 s=1 e=0 z=0  None .data      @3874                                                        */
SECTION_DATA static void* lit_3874[39] = {
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x100),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x124),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1B4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1A0),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x14C),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x15C),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x1D4),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x174),
	(void*)(((char*)ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)+0x188),
};

/* 806B6058-806B6064 000A+02 s=1 e=0 z=0  None .data      w_eff_id$4386                                                */
SECTION_DATA static u8 w_eff_id_4386[10 + 2 /* padding */] = {
	0x85, 0x72, 0x85, 0x73, 0x85, 0x74, 0x85, 0x75, 0x85, 0x76,
	/* padding */
	0x00, 0x00,
};

/* 806B6064-806B6070 000A+02 s=1 e=0 z=0  None .data      w_eff_id$4410                                                */
SECTION_DATA static u8 w_eff_id_4410[10 + 2 /* padding */] = {
	0x85, 0x6D, 0x85, 0x6E, 0x85, 0x6F, 0x85, 0x70, 0x85, 0x71,
	/* padding */
	0x00, 0x00,
};

/* 806B6070-806B6078 0008+00 s=1 e=0 z=0  None .data      w_eff_id$4434                                                */
SECTION_DATA static u8 w_eff_id_4434[8] = {
	0x85, 0x63, 0x85, 0x64, 0x85, 0x61, 0x85, 0x62,
};

/* 806B6078-806B6084 000A+02 s=1 e=0 z=0  None .data      w_eff_id$4470                                                */
SECTION_DATA static u8 w_eff_id_4470[10 + 2 /* padding */] = {
	0x85, 0x65, 0x85, 0x66, 0x85, 0x67, 0x85, 0x68, 0x85, 0x69,
	/* padding */
	0x00, 0x00,
};

/* 806B6084-806B6088 0004+00 s=1 e=0 z=0  None .data      w_eff_id$4529                                                */
SECTION_DATA static u8 w_eff_id_4529[4] = {
	0x85, 0x5D, 0x85, 0x5F,
};

/* 806B6088-806B608C 0004+00 s=1 e=0 z=0  None .data      w_eff_id$4547                                                */
SECTION_DATA static u8 w_eff_id_4547[4] = {
	0x85, 0x5E, 0x85, 0x60,
};

/* 806B608C-806B6094 0008+00 s=1 e=0 z=0  None .data      w_eff_id$4635                                                */
SECTION_DATA static u8 w_eff_id_4635[8] = {
	0x85, 0x52, 0x85, 0x53, 0x85, 0x54, 0x85, 0x55,
};

/* 806B6094-806B6098 0004+00 s=1 e=0 z=0  None .data      w_eff_id$4713                                                */
SECTION_DATA static u8 w_eff_id_4713[4] = {
	0x85, 0x57, 0x85, 0x58,
};

/* 806B6098-806B60A0 0008+00 s=1 e=0 z=0  None .data      w_eff_id$4737                                                */
SECTION_DATA static u8 w_eff_id_4737[8] = {
	0x85, 0x59, 0x85, 0x5A, 0x85, 0x5B, 0x85, 0x5C,
};

/* 806B60A0-806B60A4 0004+00 s=1 e=0 z=0  None .data      w_eff_id$4815                                                */
SECTION_DATA static u8 w_eff_id_4815[4] = {
	0x85, 0x99, 0x85, 0x9A,
};

/* 806B60A4-806B60C4 0020+00 s=1 e=0 z=0  None .data      @5320                                                        */
SECTION_DATA static void* lit_5320[8] = {
	(void*)(((char*)executeWalk__8daE_DT_cFv)+0xDC),
	(void*)(((char*)executeWalk__8daE_DT_cFv)+0x10C),
	(void*)(((char*)executeWalk__8daE_DT_cFv)+0x1C8),
	(void*)(((char*)executeWalk__8daE_DT_cFv)+0x214),
	(void*)(((char*)executeWalk__8daE_DT_cFv)+0x480),
	(void*)(((char*)executeWalk__8daE_DT_cFv)+0x4CC),
	(void*)(((char*)executeWalk__8daE_DT_cFv)+0x590),
	(void*)(((char*)executeWalk__8daE_DT_cFv)+0x62C),
};

/* 806B60C4-806B60E4 0020+00 s=1 e=0 z=0  None .data      @5532                                                        */
SECTION_DATA static void* lit_5532[8] = {
	(void*)(((char*)executeJump__8daE_DT_cFv)+0x120),
	(void*)(((char*)executeJump__8daE_DT_cFv)+0x17C),
	(void*)(((char*)executeJump__8daE_DT_cFv)+0x234),
	(void*)(((char*)executeJump__8daE_DT_cFv)+0x2FC),
	(void*)(((char*)executeJump__8daE_DT_cFv)+0x3FC),
	(void*)(((char*)executeJump__8daE_DT_cFv)+0x4E4),
	(void*)(((char*)executeJump__8daE_DT_cFv)+0x510),
	(void*)(((char*)executeJump__8daE_DT_cFv)+0x800),
};

/* 806B60E4-806B6100 001C+00 s=1 e=0 z=0  None .data      @5965                                                        */
SECTION_DATA static void* lit_5965[7] = {
	(void*)(((char*)executeDeath__8daE_DT_cFv)+0x78),
	(void*)(((char*)executeDeath__8daE_DT_cFv)+0xE8),
	(void*)(((char*)executeDeath__8daE_DT_cFv)+0x114),
	(void*)(((char*)executeDeath__8daE_DT_cFv)+0x2C0),
	(void*)(((char*)executeDeath__8daE_DT_cFv)+0x754),
	(void*)(((char*)executeDeath__8daE_DT_cFv)+0x7D8),
	(void*)(((char*)executeDeath__8daE_DT_cFv)+0x800),
};

/* 806B6100-806B6184 0084+00 s=1 e=0 z=0  None .data      @6452                                                        */
SECTION_DATA static void* lit_6452[33] = {
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x84),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0xF0),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0xF0),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x4A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x518),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x568),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x74C),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x838),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x944),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0xB2C),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0xC54),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0xD90),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0xE94),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0x10A8),
	(void*)(((char*)executeOpening__8daE_DT_cFv)+0xF7C),
};

/* 806B6184-806B61B0 002C+00 s=1 e=0 z=0  None .data      @6804                                                        */
SECTION_DATA static void* lit_6804[11] = {
	(void*)(((char*)action__8daE_DT_cFv)+0x170),
	(void*)(((char*)action__8daE_DT_cFv)+0x17C),
	(void*)(((char*)action__8daE_DT_cFv)+0x188),
	(void*)(((char*)action__8daE_DT_cFv)+0x194),
	(void*)(((char*)action__8daE_DT_cFv)+0x1A0),
	(void*)(((char*)action__8daE_DT_cFv)+0x1AC),
	(void*)(((char*)action__8daE_DT_cFv)+0x1C4),
	(void*)(((char*)action__8daE_DT_cFv)+0x1D0),
	(void*)(((char*)action__8daE_DT_cFv)+0x1E8),
	(void*)(((char*)action__8daE_DT_cFv)+0x1F4),
	(void*)(((char*)action__8daE_DT_cFv)+0x200),
};

/* 806B61B0-806B61D0 0020+00 s=1 e=0 z=0  None .data      l_daE_DT_Method                                              */
SECTION_DATA static void* l_daE_DT_Method[8] = {
	(void*)daE_DT_Create__FP8daE_DT_c,
	(void*)daE_DT_Delete__FP8daE_DT_c,
	(void*)daE_DT_Execute__FP8daE_DT_c,
	(void*)daE_DT_IsDelete__FP8daE_DT_c,
	(void*)daE_DT_Draw__FP8daE_DT_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 806B61D0-806B6200 0030+00 s=0 e=0 z=1  None .data      g_profile_E_DT                                               */
SECTION_DATA void* g_profile_E_DT[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02000000,
	(void*)&g_fpcLf_Method,
	(void*)0x00001174,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00CA0000,
	(void*)&l_daE_DT_Method,
	(void*)0x00040000,
	(void*)0x020E0000,
};

/* 806B6200-806B620C 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 806B620C-806B6218 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 806B6218-806B623C 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_806B5C84,
	(void*)NULL,
	(void*)NULL,
	(void*)func_806B5C7C,
};

/* 806B623C-806B6248 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 806B6248-806B6254 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_DT_HIO_c                                         */
SECTION_DATA void* __vt__12daE_DT_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_DT_HIO_cFv,
};

/* 806AD90C-806AD97C 0070+00 s=1 e=0 z=0  None .text      __ct__12daE_DT_HIO_cFv                                       */
//	806AD90C: 806B5CD4 (lit_3792)
//	806AD910: 806B5CD4 (lit_3792)
//	806AD914: 806B6248 (__vt__12daE_DT_HIO_c)
//	806AD918: 806B6248 (__vt__12daE_DT_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_DT_HIO_c::daE_DT_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__ct__12daE_DT_HIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 806B5CD8-806B5CDC 0004+00 s=0 e=0 z=0  None .rodata    @3793                                                        */
SECTION_RODATA u32 const lit_3793 = 0x41000000;

/* 806B5CDC-806B5CE0 0004+00 s=0 e=0 z=0  None .rodata    @3794                                                        */
SECTION_RODATA u32 const lit_3794 = 0x432A0000;

/* 806B5CE0-806B5CE4 0004+00 s=0 e=0 z=0  None .rodata    @3795                                                        */
SECTION_RODATA u32 const lit_3795 = 0x44C00000;

/* 806B5CE4-806B5CE8 0004+00 s=0 e=0 z=0  None .rodata    @3796                                                        */
SECTION_RODATA u32 const lit_3796 = 0x41C80000;

/* 806B5CE8-806B5CEC 0004+00 s=1 e=0 z=0  None .rodata    @3797                                                        */
SECTION_RODATA static u32 const lit_3797 = 0x40400000;

/* 806B5CEC-806B5CF0 0004+00 s=1 e=0 z=0  None .rodata    @3798                                                        */
SECTION_RODATA static u32 const lit_3798 = 0x43960000;

/* 806B5CF0-806B5CF4 0004+00 s=0 e=0 z=0  None .rodata    @3799                                                        */
SECTION_RODATA u32 const lit_3799 = 0x42F00000;

/* 806B5CF4-806B5CF8 0004+00 s=0 e=0 z=0  None .rodata    @3800                                                        */
SECTION_RODATA u32 const lit_3800 = 0xC25C0000;

/* 806B5CF8-806B5CFC 0004+00 s=0 e=0 z=0  None .rodata    @3801                                                        */
SECTION_RODATA u32 const lit_3801 = 0x42D20000;

/* 806B5CFC-806B5D04 0004+04 s=18 e=0 z=0  None .rodata    @3868                                                        */
SECTION_RODATA static u32 const lit_3868[1 + 1 /* padding */] = {
	0x3F800000,
	/* padding */
	0x00000000,
};

/* 806B5D04-806B5D0C 0008+00 s=1 e=0 z=0  None .rodata    @3870                                                        */
SECTION_RODATA static u8 const lit_3870[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 806AD97C-806ADBA0 0224+00 s=2 e=0 z=0  None .text      ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel                    */
//	806AD994: 803621D8 (_savegpr_28)
//	806AD9B4: 803DD470 (now__14mDoMtx_stack_c)
//	806AD9B8: 803DD470 (now__14mDoMtx_stack_c)
//	806AD9BC: 803464B0 (PSMTXCopy)
//	806AD9C8: 80439A20 (sincosTable___5JMath)
//	806AD9CC: 80439A20 (sincosTable___5JMath)
//	806AD9D4: 806B5CFC (lit_3868)
//	806AD9D8: 806B5CFC (lit_3868)
//	806AD9F8: 806B5D04 (lit_3870)
//	806AD9FC: 806B5D04 (lit_3870)
//	806ADA64: 806B5FBC (lit_3874)
//	806ADA68: 806B5FBC (lit_3874)
//	806ADA84: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806ADA88: 806B5CFC (lit_3868)
//	806ADA8C: 806B5CFC (lit_3868)
//	806ADA98: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806ADAAC: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806ADAB0: 806B5CFC (lit_3868)
//	806ADAB4: 806B5CFC (lit_3868)
//	806ADAC0: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806ADAC8: 803DD470 (now__14mDoMtx_stack_c)
//	806ADACC: 803DD470 (now__14mDoMtx_stack_c)
//	806ADAD0: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806ADAD8: 803DD470 (now__14mDoMtx_stack_c)
//	806ADADC: 803DD470 (now__14mDoMtx_stack_c)
//	806ADAE8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806ADAF0: 803DD470 (now__14mDoMtx_stack_c)
//	806ADAF4: 803DD470 (now__14mDoMtx_stack_c)
//	806ADAFC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806ADB04: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB08: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB14: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806ADB1C: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB20: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB28: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	806ADB30: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB34: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB3C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806ADB40: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB44: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB4C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	806ADB50: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB54: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB64: 803464B0 (PSMTXCopy)
//	806ADB68: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB6C: 803DD470 (now__14mDoMtx_stack_c)
//	806ADB70: 80434BE4 (mCurrentMtx__6J3DSys)
//	806ADB74: 80434BE4 (mCurrentMtx__6J3DSys)
//	806ADB78: 803464B0 (PSMTXCopy)
//	806ADB8C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
asm void daE_DT_c::ctrlJoint(J3DJoint* param_0, J3DModel* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel.s"
}
#pragma pop


/* 806ADBA0-806ADBEC 004C+00 s=1 e=0 z=0  None .text      JointCallBack__8daE_DT_cFP8J3DJointi                         */
//	806ADBB8: 80434AC8 (j3dSys)
//	806ADBBC: 80434AC8 (j3dSys)
//	806ADBD4: 806AD97C (ctrlJoint__8daE_DT_cFP8J3DJointP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daE_DT_c::JointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/JointCallBack__8daE_DT_cFP8J3DJointi.s"
}
#pragma pop


/* 806ADBEC-806ADD30 0144+00 s=1 e=0 z=0  None .text      ctrlJointTuba__8daE_DT_cFP8J3DJointP8J3DModel                */
//	806ADBFC: 803621D8 (_savegpr_28)
//	806ADC1C: 803DD470 (now__14mDoMtx_stack_c)
//	806ADC20: 803DD470 (now__14mDoMtx_stack_c)
//	806ADC24: 803464B0 (PSMTXCopy)
//	806ADC44: 803DD470 (now__14mDoMtx_stack_c)
//	806ADC48: 803DD470 (now__14mDoMtx_stack_c)
//	806ADC5C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806ADC60: 803DD470 (now__14mDoMtx_stack_c)
//	806ADC64: 803DD470 (now__14mDoMtx_stack_c)
//	806ADC6C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	806ADC70: 806B5CFC (lit_3868)
//	806ADC74: 806B5CFC (lit_3868)
//	806ADC88: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806ADC98: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806ADCA0: 803DD470 (now__14mDoMtx_stack_c)
//	806ADCA4: 803DD470 (now__14mDoMtx_stack_c)
//	806ADCB8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806ADCBC: 806B5CFC (lit_3868)
//	806ADCC0: 806B5CFC (lit_3868)
//	806ADCD0: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806ADCD8: 806B5CFC (lit_3868)
//	806ADCDC: 806B5CFC (lit_3868)
//	806ADCE4: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806ADCE8: 803DD470 (now__14mDoMtx_stack_c)
//	806ADCEC: 803DD470 (now__14mDoMtx_stack_c)
//	806ADCFC: 803464B0 (PSMTXCopy)
//	806ADD00: 803DD470 (now__14mDoMtx_stack_c)
//	806ADD04: 803DD470 (now__14mDoMtx_stack_c)
//	806ADD08: 80434BE4 (mCurrentMtx__6J3DSys)
//	806ADD0C: 80434BE4 (mCurrentMtx__6J3DSys)
//	806ADD10: 803464B0 (PSMTXCopy)
//	806ADD1C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
asm void daE_DT_c::ctrlJointTuba(J3DJoint* param_0, J3DModel* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/ctrlJointTuba__8daE_DT_cFP8J3DJointP8J3DModel.s"
}
#pragma pop


/* 806ADD30-806ADD7C 004C+00 s=1 e=0 z=0  None .text      JointCallBackTuba__8daE_DT_cFP8J3DJointi                     */
//	806ADD48: 80434AC8 (j3dSys)
//	806ADD4C: 80434AC8 (j3dSys)
//	806ADD64: 806ADBEC (ctrlJointTuba__8daE_DT_cFP8J3DJointP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daE_DT_c::JointCallBackTuba(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/JointCallBackTuba__8daE_DT_cFP8J3DJointi.s"
}
#pragma pop


/* ############################################################################################## */
/* 806B6260-806B6264 0001+03 s=2 e=0 z=0  None .bss       @1109                                                        */
static u8 lit_1109[1 + 3 /* padding */];

/* 806B6264-806B6268 0001+03 s=0 e=0 z=0  None .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 806B6268-806B626C 0001+03 s=0 e=0 z=0  None .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 806B626C-806B6270 0001+03 s=0 e=0 z=0  None .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 806B6270-806B6274 0001+03 s=0 e=0 z=0  None .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 806B6274-806B6278 0001+03 s=0 e=0 z=0  None .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 806B6278-806B627C 0001+03 s=0 e=0 z=0  None .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 806B627C-806B6280 0001+03 s=0 e=0 z=0  None .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 806B6280-806B6284 0001+03 s=0 e=0 z=0  None .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 806B6284-806B6288 0001+03 s=0 e=0 z=0  None .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 806B6288-806B628C 0001+03 s=0 e=0 z=0  None .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 806B628C-806B6290 0001+03 s=0 e=0 z=0  None .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 806B6290-806B6294 0001+03 s=0 e=0 z=0  None .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 806B6294-806B6298 0001+03 s=0 e=0 z=0  None .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 806B6298-806B629C 0001+03 s=0 e=0 z=0  None .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 806B629C-806B62A0 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 struct_806B629C[4];

/* 806B62A0-806B62AC 000C+00 s=0 e=0 z=0  None .bss       @3787                                                        */
u8 lit_3787[12];

/* 806B62AC-806B62DC 0030+00 s=7 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[48];

/* 806ADD7C-806AE56C 07F0+00 s=1 e=0 z=0  None .text      draw__8daE_DT_cFv                                            */
//	806ADDAC: 803621D0 (_savegpr_26)
//	806ADDB4: 806B5CD4 (lit_3792)
//	806ADDB8: 806B5CD4 (lit_3792)
//	806ADDBC: 8042CA54 (g_env_light)
//	806ADDC0: 8042CA54 (g_env_light)
//	806ADDD0: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	806ADDE0: 8042CA54 (g_env_light)
//	806ADDE4: 8042CA54 (g_env_light)
//	806ADDF4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	806AE06C: 80437160 (j3dZModeTable)
//	806AE070: 80437160 (j3dZModeTable)
//	806AE0D0: 80437160 (j3dZModeTable)
//	806AE0D4: 80437160 (j3dZModeTable)
//	806AE16C: 8001D42C (fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData)
//	806AE174: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	806AE178: 8042CA54 (g_env_light)
//	806AE17C: 8042CA54 (g_env_light)
//	806AE18C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	806AE2A0: 8001D42C (fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData)
//	806AE2A8: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	806AE2C8: 8042CA54 (g_env_light)
//	806AE2CC: 8042CA54 (g_env_light)
//	806AE2D8: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	806AE3A4: 8001D42C (fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData)
//	806AE3AC: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	806AE414: 806B62AC (l_HIO)
//	806AE418: 806B62AC (l_HIO)
//	806AE478: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	806AE47C: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	806AE480: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	806AE4B8: 8042CA54 (g_env_light)
//	806AE4BC: 8042CA54 (g_env_light)
//	806AE4CC: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	806AE4D0: 8042CA54 (g_env_light)
//	806AE4D4: 8042CA54 (g_env_light)
//	806AE4E4: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	806AE4EC: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	806AE50C: 80450BE5 (struct_80450BE4)
//	806AE510: 80450BE5 (struct_80450BE4)
//	806AE514: 80008078 (onBlure__13mDoGph_gInf_cFv)
//	806AE528: 80450BE4 (struct_80450BE4)
//	806AE52C: 80450BE4 (struct_80450BE4)
//	806AE558: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::draw() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/draw__8daE_DT_cFv.s"
}
#pragma pop


/* 806AE56C-806AE5A8 003C+00 s=1 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	806AE58C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__dt__4cXyzFv.s"
}
#pragma pop


/* 806AE5A8-806AE5C8 0020+00 s=1 e=0 z=0  None .text      daE_DT_Draw__FP8daE_DT_c                                     */
//	806AE5B4: 806ADD7C (draw__8daE_DT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
asm static void daE_DT_Draw(daE_DT_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/daE_DT_Draw__FP8daE_DT_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 806B5D0C-806B5D10 0004+00 s=0 e=0 z=0  None .rodata    @4061                                                        */
SECTION_RODATA u32 const lit_4061 = 0x41C00000;

/* 806B5D10-806B5D14 0004+00 s=0 e=0 z=0  None .rodata    @4062                                                        */
SECTION_RODATA u32 const lit_4062 = 0x41900000;

/* 806B5D14-806B5D18 0004+00 s=0 e=0 z=0  None .rodata    @4063                                                        */
SECTION_RODATA u32 const lit_4063 = 0x40C00000;

/* 806B5D18-806B5D1C 0004+00 s=0 e=0 z=0  None .rodata    @4064                                                        */
SECTION_RODATA u32 const lit_4064 = 0x437F0000;

/* 806B5D1C-806B5D20 0004+00 s=0 e=0 z=0  None .rodata    @4065                                                        */
SECTION_RODATA u32 const lit_4065 = 0x41800000;

/* 806B5D20-806B5D24 0004+00 s=1 e=0 z=0  None .rodata    @4066                                                        */
SECTION_RODATA static u32 const lit_4066 = 0x41200000;

/* 806B5D24-806B5D28 0004+00 s=0 e=0 z=0  None .rodata    @4067                                                        */
SECTION_RODATA u32 const lit_4067 = 0x41400000;

/* 806B5D28-806B5D2C 0004+00 s=0 e=0 z=0  None .rodata    @4068                                                        */
SECTION_RODATA u32 const lit_4068 = 0xC1A00000;

/* 806B5D2C-806B5D30 0004+00 s=0 e=0 z=0  None .rodata    @4069                                                        */
SECTION_RODATA u32 const lit_4069 = 0xC1F00000;

/* 806B5D30-806B5D34 0004+00 s=0 e=0 z=0  None .rodata    @4070                                                        */
SECTION_RODATA u32 const lit_4070 = 0xC1200000;

/* 806B5D34-806B5D38 0004+00 s=4 e=0 z=0  None .rodata    @4071                                                        */
SECTION_RODATA static u8 const lit_4071[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 806AE5C8-806AE618 0050+00 s=1 e=0 z=0  None .text      demo_skip__8daE_DT_cFi                                       */
//	806AE5DC: 80450C98 (struct_80450C98)
//	806AE5E0: 80450C98 (struct_80450C98)
//	806AE5E8: 806B5D34 (lit_4071)
//	806AE5EC: 806B5D34 (lit_4071)
//	806AE604: 80027170 (dStage_changeScene__FifUlScsi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daE_DT_c::demo_skip(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/demo_skip__8daE_DT_cFi.s"
}
#pragma pop


/* 806AE618-806AE64C 0034+00 s=1 e=0 z=0  None .text      DemoSkipCallBack__8daE_DT_cFPvi                              */
//	806AE62C: 806AE5C8 (demo_skip__8daE_DT_cFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  int False
asm void daE_DT_c::DemoSkipCallBack(void* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/DemoSkipCallBack__8daE_DT_cFPvi.s"
}
#pragma pop


/* ############################################################################################## */
/* 806B5D38-806B5D3C 0004+00 s=1 e=0 z=0  None .rodata    @4072                                                        */
SECTION_RODATA static u32 const lit_4072 = 0x42C80000;

/* 806B5D3C-806B5D40 0004+00 s=0 e=0 z=0  None .rodata    @4073                                                        */
SECTION_RODATA u32 const lit_4073 = 0x447A0000;

/* 806B5D40-806B5D44 0004+00 s=0 e=0 z=0  None .rodata    @4074                                                        */
SECTION_RODATA u32 const lit_4074 = 0x44FA0000;

/* 806B5D44-806B5D48 0004+00 s=0 e=0 z=0  None .rodata    @4075                                                        */
SECTION_RODATA u32 const lit_4075 = 0x457A0000;

/* 806B5D48-806B5D4C 0004+00 s=1 e=0 z=0  None .rodata    @4112                                                        */
SECTION_RODATA static u32 const lit_4112 = 0xBF800000;

/* 806B5D4C-806B5D50 0004+00 s=0 e=0 z=0  None .rodata    @4233                                                        */
SECTION_RODATA u32 const lit_4233 = 0xBE99999A;

/* 806B5D50-806B5D54 0004+00 s=0 e=0 z=0  None .rodata    @4234                                                        */
SECTION_RODATA u32 const lit_4234 = 0x43020000;

/* 806B5D54-806B5D58 0004+00 s=0 e=0 z=0  None .rodata    @4367                                                        */
SECTION_RODATA u32 const lit_4367 = 0x41700000;

/* 806B5D58-806B5D5C 0004+00 s=1 e=0 z=0  None .rodata    @4382                                                        */
SECTION_RODATA static u32 const lit_4382 = 0xCE6E6B28;

/* 806B5D5C-806B5D60 0004+00 s=0 e=0 z=0  None .rodata    @4630                                                        */
SECTION_RODATA u32 const lit_4630 = 0x41E80000;

/* 806B5D60-806B5D64 0004+00 s=0 e=0 z=0  None .rodata    @4631                                                        */
SECTION_RODATA u32 const lit_4631 = 0x426C0000;

/* 806B5D64-806B5D6C 0008+00 s=0 e=0 z=0  None .rodata    @4976                                                        */
SECTION_RODATA u8 const lit_4976[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806B5D6C-806B5D74 0008+00 s=0 e=0 z=0  None .rodata    @4977                                                        */
SECTION_RODATA u8 const lit_4977[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806B5D74-806B5D7C 0008+00 s=0 e=0 z=0  None .rodata    @4978                                                        */
SECTION_RODATA u8 const lit_4978[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806B5D7C-806B5D80 0004+00 s=0 e=0 z=0  None .rodata    @4979                                                        */
SECTION_RODATA u32 const lit_4979 = 0x43480000;

/* 806B5D80-806B5D84 0004+00 s=0 e=0 z=0  None .rodata    @5088                                                        */
SECTION_RODATA u32 const lit_5088 = 0x42340000;

/* 806B5D84-806B5D88 0004+00 s=0 e=0 z=0  None .rodata    @5089                                                        */
SECTION_RODATA u32 const lit_5089 = 0x43160000;

/* 806B5D88-806B5D8C 0004+00 s=0 e=0 z=0  None .rodata    @5090                                                        */
SECTION_RODATA u32 const lit_5090 = 0x41F00000;

/* 806B5D8C-806B5D90 0004+00 s=0 e=0 z=0  None .rodata    @5155                                                        */
SECTION_RODATA u32 const lit_5155 = 0x44960000;

/* 806B5D90-806B5D94 0004+00 s=0 e=0 z=0  None .rodata    @5156                                                        */
SECTION_RODATA u32 const lit_5156 = 0x41D80000;

/* 806B5D94-806B5D98 0004+00 s=0 e=0 z=0  None .rodata    @5157                                                        */
SECTION_RODATA u32 const lit_5157 = 0x420C0000;

/* 806B5D98-806B5D9C 0004+00 s=0 e=0 z=0  None .rodata    @5158                                                        */
SECTION_RODATA u32 const lit_5158 = 0x428C0000;

/* 806B5D9C-806B5DA0 0004+00 s=0 e=0 z=0  None .rodata    @5315                                                        */
SECTION_RODATA u32 const lit_5315 = 0x44BB8000;

/* 806B5DA0-806B5DA4 0004+00 s=0 e=0 z=0  None .rodata    @5316                                                        */
SECTION_RODATA u32 const lit_5316 = 0x47000000;

/* 806B5DA4-806B5DA8 0004+00 s=0 e=0 z=0  None .rodata    @5317                                                        */
SECTION_RODATA u32 const lit_5317 = 0x46000000;

/* 806B5DA8-806B5DAC 0004+00 s=0 e=0 z=0  None .rodata    @5318                                                        */
SECTION_RODATA u32 const lit_5318 = 0x41B80000;

/* 806B5DAC-806B5DB0 0004+00 s=0 e=0 z=0  None .rodata    @5319                                                        */
SECTION_RODATA u32 const lit_5319 = 0x42820000;

/* 806B5DB0-806B5DB4 0004+00 s=0 e=0 z=0  None .rodata    @5520                                                        */
SECTION_RODATA u32 const lit_5520 = 0x43200000;

/* 806B5DB4-806B5DB8 0004+00 s=0 e=0 z=0  None .rodata    @5521                                                        */
SECTION_RODATA u32 const lit_5521 = 0x41A00000;

/* 806B5DB8-806B5DBC 0004+00 s=0 e=0 z=0  None .rodata    @5522                                                        */
SECTION_RODATA u32 const lit_5522 = 0xC0A00000;

/* 806B5DBC-806B5DC0 0004+00 s=0 e=0 z=0  None .rodata    @5523                                                        */
SECTION_RODATA u32 const lit_5523 = 0x442F0000;

/* 806B5DC0-806B5DC4 0004+00 s=0 e=0 z=0  None .rodata    @5524                                                        */
SECTION_RODATA u32 const lit_5524 = 0x42AE0000;

/* 806B5DC4-806B5DC8 0004+00 s=0 e=0 z=0  None .rodata    @5525                                                        */
SECTION_RODATA u32 const lit_5525 = 0xC2480000;

/* 806B5DC8-806B5DCC 0004+00 s=0 e=0 z=0  None .rodata    @5526                                                        */
SECTION_RODATA u32 const lit_5526 = 0x45800000;

/* 806B5DCC-806B5DD0 0004+00 s=0 e=0 z=0  None .rodata    @5527                                                        */
SECTION_RODATA u32 const lit_5527 = 0x43EB0000;

/* 806B5DD0-806B5DD4 0004+00 s=0 e=0 z=0  None .rodata    @5528                                                        */
SECTION_RODATA u32 const lit_5528 = 0x3F000000;

/* 806B5DD4-806B5DD8 0004+00 s=0 e=0 z=0  None .rodata    @5529                                                        */
SECTION_RODATA u32 const lit_5529 = 0x40A00000;

/* 806B5DD8-806B5DDC 0004+00 s=0 e=0 z=0  None .rodata    @5530                                                        */
SECTION_RODATA u32 const lit_5530 = 0x3E99999A;

/* 806B5DDC-806B5DE0 0004+00 s=0 e=0 z=0  None .rodata    @5531                                                        */
SECTION_RODATA u32 const lit_5531 = 0x3F99999A;

/* 806B5DE0-806B5DE4 0004+00 s=0 e=0 z=0  None .rodata    @5613                                                        */
SECTION_RODATA u32 const lit_5613 = 0x42600000;

/* 806B5DE4-806B5DE8 0004+00 s=0 e=0 z=0  None .rodata    @5614                                                        */
SECTION_RODATA u32 const lit_5614 = 0x42480000;

/* 806B5DE8-806B5DEC 0004+00 s=0 e=0 z=0  None .rodata    @5705                                                        */
SECTION_RODATA u32 const lit_5705 = 0x42EE0000;

/* 806B5DEC-806B5DF0 0004+00 s=0 e=0 z=0  None .rodata    @5706                                                        */
SECTION_RODATA u32 const lit_5706 = 0x43070000;

/* 806B5DF0-806B5DF4 0004+00 s=0 e=0 z=0  None .rodata    @5952                                                        */
SECTION_RODATA u32 const lit_5952 = 0x43E10000;

/* 806B5DF4-806B5DF8 0004+00 s=0 e=0 z=0  None .rodata    @5953                                                        */
SECTION_RODATA u32 const lit_5953 = 0xC47A0000;

/* 806B5DF8-806B5DFC 0004+00 s=0 e=0 z=0  None .rodata    @5954                                                        */
SECTION_RODATA u32 const lit_5954 = 0x44480000;

/* 806B5DFC-806B5E00 0004+00 s=0 e=0 z=0  None .rodata    @5955                                                        */
SECTION_RODATA u32 const lit_5955 = 0x425C0000;

/* 806B5E00-806B5E04 0004+00 s=0 e=0 z=0  None .rodata    @5956                                                        */
SECTION_RODATA u32 const lit_5956 = 0x42DC0000;

/* 806B5E04-806B5E08 0004+00 s=0 e=0 z=0  None .rodata    @5957                                                        */
SECTION_RODATA u32 const lit_5957 = 0x42FA0000;

/* 806B5E08-806B5E0C 0004+00 s=0 e=0 z=0  None .rodata    @5958                                                        */
SECTION_RODATA u32 const lit_5958 = 0x43540000;

/* 806B5E0C-806B5E10 0004+00 s=0 e=0 z=0  None .rodata    @5959                                                        */
SECTION_RODATA u32 const lit_5959 = 0x43300000;

/* 806B5E10-806B5E14 0004+00 s=0 e=0 z=0  None .rodata    @5960                                                        */
SECTION_RODATA u32 const lit_5960 = 0x41D1999A;

/* 806B5E14-806B5E18 0004+00 s=0 e=0 z=0  None .rodata    @5961                                                        */
SECTION_RODATA u32 const lit_5961 = 0x43340000;

/* 806B5E18-806B5E1C 0004+00 s=0 e=0 z=0  None .rodata    @5962                                                        */
SECTION_RODATA u32 const lit_5962 = 0x3CF5C28F;

/* 806B5E1C-806B5E20 0004+00 s=0 e=0 z=0  None .rodata    @5963                                                        */
SECTION_RODATA u32 const lit_5963 = 0x44160000;

/* 806B5E20-806B5E24 0004+00 s=0 e=0 z=0  None .rodata    @5964                                                        */
SECTION_RODATA u32 const lit_5964 = 0x3DCCCCCD;

/* 806B5E24-806B5E2C 0008+00 s=0 e=0 z=0  None .rodata    @5967                                                        */
SECTION_RODATA u8 const lit_5967[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806B5E2C-806B5E30 0004+00 s=0 e=0 z=0  None .rodata    @6430                                                        */
SECTION_RODATA u32 const lit_6430 = 0xC2C80000;

/* 806B5E30-806B5E34 0004+00 s=0 e=0 z=0  None .rodata    @6431                                                        */
SECTION_RODATA u32 const lit_6431 = 0x4039999A;

/* 806B5E34-806B5E38 0004+00 s=0 e=0 z=0  None .rodata    @6432                                                        */
SECTION_RODATA u32 const lit_6432 = 0x41600000;

/* 806B5E38-806B5E3C 0004+00 s=0 e=0 z=0  None .rodata    @6433                                                        */
SECTION_RODATA u32 const lit_6433 = 0x41980000;

/* 806B5E3C-806B5E40 0004+00 s=0 e=0 z=0  None .rodata    @6434                                                        */
SECTION_RODATA u32 const lit_6434 = 0x42700000;

/* 806B5E40-806B5E44 0004+00 s=0 e=0 z=0  None .rodata    @6435                                                        */
SECTION_RODATA u32 const lit_6435 = 0xC3960000;

/* 806B5E44-806B5E48 0004+00 s=0 e=0 z=0  None .rodata    @6436                                                        */
SECTION_RODATA u32 const lit_6436 = 0x453B8000;

/* 806B5E48-806B5E4C 0004+00 s=0 e=0 z=0  None .rodata    @6437                                                        */
SECTION_RODATA u32 const lit_6437 = 0x44D48000;

/* 806B5E4C-806B5E50 0004+00 s=0 e=0 z=0  None .rodata    @6438                                                        */
SECTION_RODATA u32 const lit_6438 = 0x45548000;

/* 806B5E50-806B5E54 0004+00 s=0 e=0 z=0  None .rodata    @6439                                                        */
SECTION_RODATA u32 const lit_6439 = 0x44AF0000;

/* 806B5E54-806B5E58 0004+00 s=0 e=0 z=0  None .rodata    @6440                                                        */
SECTION_RODATA u32 const lit_6440 = 0x430F0000;

/* 806B5E58-806B5E5C 0004+00 s=0 e=0 z=0  None .rodata    @6441                                                        */
SECTION_RODATA u32 const lit_6441 = 0x45428000;

/* 806B5E5C-806B5E60 0004+00 s=0 e=0 z=0  None .rodata    @6442                                                        */
SECTION_RODATA u32 const lit_6442 = 0x43730000;

/* 806B5E60-806B5E64 0004+00 s=0 e=0 z=0  None .rodata    @6443                                                        */
SECTION_RODATA u32 const lit_6443 = 0xC3160000;

/* 806B5E64-806B5E68 0004+00 s=0 e=0 z=0  None .rodata    @6444                                                        */
SECTION_RODATA u32 const lit_6444 = 0x44C80000;

/* 806B5E68-806B5E6C 0004+00 s=0 e=0 z=0  None .rodata    @6445                                                        */
SECTION_RODATA u32 const lit_6445 = 0x42E60000;

/* 806B5E6C-806B5E70 0004+00 s=0 e=0 z=0  None .rodata    @6446                                                        */
SECTION_RODATA u32 const lit_6446 = 0x44C1C000;

/* 806B5E70-806B5E74 0004+00 s=0 e=0 z=0  None .rodata    @6447                                                        */
SECTION_RODATA u32 const lit_6447 = 0x43AF0000;

/* 806B5E74-806B5E78 0004+00 s=0 e=0 z=0  None .rodata    @6448                                                        */
SECTION_RODATA u32 const lit_6448 = 0xC3FA0000;

/* 806B5E78-806B5E7C 0004+00 s=0 e=0 z=0  None .rodata    @6449                                                        */
SECTION_RODATA u32 const lit_6449 = 0x43910000;

/* 806B5E7C-806B5E80 0004+00 s=0 e=0 z=0  None .rodata    @6450                                                        */
SECTION_RODATA u32 const lit_6450 = 0x43A50000;

/* 806B5E80-806B5E84 0004+00 s=0 e=0 z=0  None .rodata    @6451                                                        */
SECTION_RODATA u32 const lit_6451 = 0x42200000;

/* 806B5E84-806B5E88 0004+00 s=0 e=0 z=0  None .rodata    @6618                                                        */
SECTION_RODATA u32 const lit_6618 = 0x43C80000;

/* 806B5E88-806B5E8C 0004+00 s=0 e=0 z=0  None .rodata    @6724                                                        */
SECTION_RODATA u32 const lit_6724 = 0xC2A00000;

/* 806B5E8C-806B5E90 0004+00 s=0 e=0 z=0  None .rodata    @6725                                                        */
SECTION_RODATA u32 const lit_6725 = 0x41100000;

/* 806B5E90-806B5E94 0004+00 s=0 e=0 z=0  None .rodata    @6726                                                        */
SECTION_RODATA u32 const lit_6726 = 0x45000000;

/* 806B5E94-806B5E98 0004+00 s=0 e=0 z=0  None .rodata    @6727                                                        */
SECTION_RODATA u32 const lit_6727 = 0x45C00000;

/* 806B5E98-806B5E9C 0004+00 s=0 e=0 z=0  None .rodata    @6728                                                        */
SECTION_RODATA u32 const lit_6728 = 0x3E4CCCCD;

/* 806B5E9C-806B5EA0 0004+00 s=0 e=0 z=0  None .rodata    @6729                                                        */
SECTION_RODATA u32 const lit_6729 = 0x3D4CCCCD;

/* 806B5EA0-806B5EA4 0004+00 s=0 e=0 z=0  None .rodata    @6730                                                        */
SECTION_RODATA u32 const lit_6730 = 0x42A00000;

/* 806B5EA4-806B5EA8 0004+00 s=0 e=0 z=0  None .rodata    @6731                                                        */
SECTION_RODATA u32 const lit_6731 = 0x40000000;

/* 806B5EA8-806B5EAC 0004+00 s=1 e=0 z=0  None .rodata    @6732                                                        */
SECTION_RODATA static u32 const lit_6732 = 0x3CA3D70A;

/* 806B5EAC-806B5EB0 0004+00 s=0 e=0 z=0  None .rodata    @6733                                                        */
SECTION_RODATA u32 const lit_6733 = 0x3C23D70A;

/* 806B5EB0-806B5EB4 0004+00 s=0 e=0 z=0  None .rodata    @6949                                                        */
SECTION_RODATA u32 const lit_6949 = 0x43FF0000;

/* 806B5EB4-806B5EB8 0004+00 s=0 e=0 z=0  None .rodata    @6950                                                        */
SECTION_RODATA u32 const lit_6950 = 0x43B40000;

/* 806B5EB8-806B5EBC 0004+00 s=0 e=0 z=0  None .rodata    @6951                                                        */
SECTION_RODATA u32 const lit_6951 = 0x43B90000;

/* 806B5EBC-806B5EC0 0004+00 s=0 e=0 z=0  None .rodata    @6952                                                        */
SECTION_RODATA u32 const lit_6952 = 0x435C0000;

/* 806B5EC0-806B5EC4 0004+00 s=0 e=0 z=0  None .rodata    @7217                                                        */
SECTION_RODATA u32 const lit_7217 = 0xC42F0000;

/* 806B5EC4-806B5EC8 0004+00 s=0 e=0 z=0  None .rodata    @7218                                                        */
SECTION_RODATA u32 const lit_7218 = 0xC3480000;

/* 806B5EC8-806B5ECC 0004+00 s=0 e=0 z=0  None .rodata    @7219                                                        */
SECTION_RODATA u32 const lit_7219 = 0x43FA0000;

/* 806B5ECC-806B5ED0 0004+00 s=0 e=0 z=0  None .rodata    @7220                                                        */
SECTION_RODATA u32 const lit_7220 = 0xC4480000;

/* 806B5ED0-806B5EEB 001B+00 s=5 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_806B5ED0 = "E_DT";
SECTION_DEAD char const* const stringBase_806B5ED5 = "Dalways";
SECTION_DEAD char const* const stringBase_806B5EDD = "E_OT";
SECTION_DEAD char const* const stringBase_806B5EE2 = "BoxB.bmd";
#pragma pop

/* 806AE64C-806AE6F0 00A4+00 s=11 e=0 z=0  None .text      setBck__8daE_DT_cFiUcff                                      */
//	806AE680: 806B5ED0 (stringBase0)
//	806AE684: 806B5ED0 (stringBase0)
//	806AE688: 804061C0 (g_dComIfG_gameInfo)
//	806AE68C: 804061C0 (g_dComIfG_gameInfo)
//	806AE69C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806AE6B4: 806B5D34 (lit_4071)
//	806AE6B8: 806B5D34 (lit_4071)
//	806AE6BC: 806B5D48 (lit_4112)
//	806AE6C0: 806B5D48 (lit_4112)
//	806AE6C4: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  u8 False
//  f32 False
//  f32 False
asm void daE_DT_c::setBck(int param_0, u8 param_1, f32 param_2, f32 param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setBck__8daE_DT_cFiUcff.s"
}
#pragma pop


/* 806AE6F0-806AE74C 005C+00 s=5 e=0 z=0  None .text      checkBck__8daE_DT_cFi                                        */
//	806AE704: 806B5ED0 (stringBase0)
//	806AE708: 806B5ED0 (stringBase0)
//	806AE70C: 804061C0 (g_dComIfG_gameInfo)
//	806AE710: 804061C0 (g_dComIfG_gameInfo)
//	806AE720: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daE_DT_c::checkBck(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/checkBck__8daE_DT_cFi.s"
}
#pragma pop


/* 806AE74C-806AE758 000C+00 s=12 e=0 z=0  None .text      setActionMode__8daE_DT_cFii                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void daE_DT_c::setActionMode(int param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setActionMode__8daE_DT_cFii.s"
}
#pragma pop


/* 806AE758-806AEB48 03F0+00 s=1 e=0 z=0  None .text      damage_check__8daE_DT_cFv                                    */
//	806AE768: 803621DC (_savegpr_29)
//	806AE770: 806B5CD4 (lit_3792)
//	806AE774: 806B5CD4 (lit_3792)
//	806AE778: 804061C0 (g_dComIfG_gameInfo)
//	806AE77C: 804061C0 (g_dComIfG_gameInfo)
//	806AE794: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806AE7A4: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806AE804: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806AE83C: 803DD470 (now__14mDoMtx_stack_c)
//	806AE840: 803DD470 (now__14mDoMtx_stack_c)
//	806AE844: 803464B0 (PSMTXCopy)
//	806AE854: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806AE858: 803DD470 (now__14mDoMtx_stack_c)
//	806AE85C: 803DD470 (now__14mDoMtx_stack_c)
//	806AE884: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806AE888: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806AE8B4: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806AE8C8: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806AE900: 803DD470 (now__14mDoMtx_stack_c)
//	806AE904: 803DD470 (now__14mDoMtx_stack_c)
//	806AE908: 803464B0 (PSMTXCopy)
//	806AE918: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806AE91C: 803DD470 (now__14mDoMtx_stack_c)
//	806AE920: 803DD470 (now__14mDoMtx_stack_c)
//	806AE948: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806AE94C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806AE978: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806AE9A8: 806AE74C (setActionMode__8daE_DT_cFii)
//	806AE9C0: 80083830 (Move__10dCcD_GSttsFv)
//	806AE9C8: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806AE9D8: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	806AE9E4: 80263A48 (GetAc__8cCcD_ObjFv)
//	806AE9F0: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	806AEAD8: 806AE74C (setActionMode__8daE_DT_cFii)
//	806AEAFC: 806AE74C (setActionMode__8daE_DT_cFii)
//	806AEB10: 806AE74C (setActionMode__8daE_DT_cFii)
//	806AEB2C: 806AE74C (setActionMode__8daE_DT_cFii)
//	806AEB34: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::damage_check() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/damage_check__8daE_DT_cFv.s"
}
#pragma pop


/* 806AEB48-806AEBD4 008C+00 s=1 e=0 z=0  None .text      setStabPos__8daE_DT_cFv                                      */
//	806AEB70: 803DD470 (now__14mDoMtx_stack_c)
//	806AEB74: 803DD470 (now__14mDoMtx_stack_c)
//	806AEB78: 803464B0 (PSMTXCopy)
//	806AEB7C: 806B5D20 (lit_4066)
//	806AEB80: 806B5D20 (lit_4066)
//	806AEB84: 806B5D34 (lit_4071)
//	806AEB88: 806B5D34 (lit_4071)
//	806AEB90: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806AEB94: 803DD470 (now__14mDoMtx_stack_c)
//	806AEB98: 803DD470 (now__14mDoMtx_stack_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setStabPos() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setStabPos__8daE_DT_cFv.s"
}
#pragma pop


/* 806AEBD4-806AED4C 0178+00 s=1 e=0 z=0  None .text      checkBeforeBg__8daE_DT_cFf                                   */
//	806AEBFC: 80077C68 (__ct__11dBgS_LinChkFv)
//	806AEC00: 806B623C (__vt__8cM3dGPla)
//	806AEC04: 806B623C (__vt__8cM3dGPla)
//	806AEC24: 806B5D38 (lit_4072)
//	806AEC28: 806B5D38 (lit_4072)
//	806AEC48: 80439A20 (sincosTable___5JMath)
//	806AEC4C: 80439A20 (sincosTable___5JMath)
//	806AEC8C: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	806AEC90: 804061C0 (g_dComIfG_gameInfo)
//	806AEC94: 804061C0 (g_dComIfG_gameInfo)
//	806AECA4: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	806AECBC: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	806AECC8: 80267674 (cM_atan2s__Fff)
//	806AECF0: 806B623C (__vt__8cM3dGPla)
//	806AECF4: 806B623C (__vt__8cM3dGPla)
//	806AED04: 80077CDC (__dt__11dBgS_LinChkFv)
//	806AED10: 806B623C (__vt__8cM3dGPla)
//	806AED14: 806B623C (__vt__8cM3dGPla)
//	806AED24: 80077CDC (__dt__11dBgS_LinChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
asm void daE_DT_c::checkBeforeBg(f32 param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/checkBeforeBg__8daE_DT_cFf.s"
}
#pragma pop


/* 806AED4C-806AED94 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	806AED64: 806B623C (__vt__8cM3dGPla)
//	806AED68: 806B623C (__vt__8cM3dGPla)
//	806AED78: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 806AED94-806AEEFC 0168+00 s=1 e=0 z=0  None .text      checkTongueBg__8daE_DT_cFv                                   */
//	806AEDA4: 803621D8 (_savegpr_28)
//	806AEDAC: 806B5CD4 (lit_3792)
//	806AEDB0: 806B5CD4 (lit_3792)
//	806AEDDC: 80270B90 (cLib_chaseAngleS__FPsss)
//	806AEDF8: 803DD470 (now__14mDoMtx_stack_c)
//	806AEDFC: 803DD470 (now__14mDoMtx_stack_c)
//	806AEE00: 803464B0 (PSMTXCopy)
//	806AEE04: 803DD470 (now__14mDoMtx_stack_c)
//	806AEE08: 803DD470 (now__14mDoMtx_stack_c)
//	806AEE34: 803464B0 (PSMTXCopy)
//	806AEE44: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806AEE64: 80077C68 (__ct__11dBgS_LinChkFv)
//	806AEE80: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	806AEE84: 804061C0 (g_dComIfG_gameInfo)
//	806AEE88: 804061C0 (g_dComIfG_gameInfo)
//	806AEE94: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	806AEEAC: 80270B90 (cLib_chaseAngleS__FPsss)
//	806AEED4: 80270B90 (cLib_chaseAngleS__FPsss)
//	806AEEE0: 80077CDC (__dt__11dBgS_LinChkFv)
//	806AEEE8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::checkTongueBg() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/checkTongueBg__8daE_DT_cFv.s"
}
#pragma pop


/* 806AEEFC-806AEFE8 00EC+00 s=1 e=0 z=0  None .text      checkWaterSurface__8daE_DT_cFv                               */
//	806AEF14: 800777B0 (__ct__18dBgS_ObjGndChk_SplFv)
//	806AEF30: 806B5CEC (lit_3798)
//	806AEF34: 806B5CEC (lit_3798)
//	806AEF48: 80267D0C (SetPos__11cBgS_GndChkFPC3Vec)
//	806AEF4C: 804061C0 (g_dComIfG_gameInfo)
//	806AEF50: 804061C0 (g_dComIfG_gameInfo)
//	806AEF5C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	806AEF60: 806B5D58 (lit_4382)
//	806AEF64: 806B5D58 (lit_4382)
//	806AEF8C: 806AE6F0 (checkBck__8daE_DT_cFi)
//	806AEFA0: 806AE6F0 (checkBck__8daE_DT_cFi)
//	806AEFB4: 806AF150 (setHamonEffect__8daE_DT_cFi)
//	806AEFC4: 806AF150 (setHamonEffect__8daE_DT_cFi)
//	806AEFD0: 80077848 (__dt__18dBgS_ObjGndChk_SplFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::checkWaterSurface() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/checkWaterSurface__8daE_DT_cFv.s"
}
#pragma pop


/* 806AEFE8-806AF09C 00B4+00 s=3 e=0 z=0  None .text      setSmallWaterEffect__8daE_DT_cFv                             */
//	806AEFF8: 803621D0 (_savegpr_26)
//	806AF018: 804061C0 (g_dComIfG_gameInfo)
//	806AF01C: 804061C0 (g_dComIfG_gameInfo)
//	806AF020: 806B6058 (w_eff_id_4386)
//	806AF024: 806B6058 (w_eff_id_4386)
//	806AF028: 806B5CFC (lit_3868)
//	806AF02C: 806B5CFC (lit_3868)
//	806AF070: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AF088: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setSmallWaterEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setSmallWaterEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AF09C-806AF150 00B4+00 s=2 e=0 z=0  None .text      setLargeWaterEffect__8daE_DT_cFv                             */
//	806AF0AC: 803621D0 (_savegpr_26)
//	806AF0CC: 804061C0 (g_dComIfG_gameInfo)
//	806AF0D0: 804061C0 (g_dComIfG_gameInfo)
//	806AF0D4: 806B6064 (w_eff_id_4410)
//	806AF0D8: 806B6064 (w_eff_id_4410)
//	806AF0DC: 806B5CFC (lit_3868)
//	806AF0E0: 806B5CFC (lit_3868)
//	806AF124: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AF13C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setLargeWaterEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setLargeWaterEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AF150-806AF240 00F0+00 s=1 e=0 z=0  None .text      setHamonEffect__8daE_DT_cFi                                  */
//	806AF160: 803621C8 (_savegpr_24)
//	806AF1A0: 804061C0 (g_dComIfG_gameInfo)
//	806AF1A4: 804061C0 (g_dComIfG_gameInfo)
//	806AF1AC: 806B6070 (w_eff_id_4434)
//	806AF1B0: 806B6070 (w_eff_id_4434)
//	806AF1B4: 806B5CFC (lit_3868)
//	806AF1B8: 806B5CFC (lit_3868)
//	806AF210: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AF22C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daE_DT_c::setHamonEffect(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setHamonEffect__8daE_DT_cFi.s"
}
#pragma pop


/* 806AF240-806AF2F4 00B4+00 s=1 e=0 z=0  None .text      setJumpEffect__8daE_DT_cFv                                   */
//	806AF250: 803621D0 (_savegpr_26)
//	806AF270: 804061C0 (g_dComIfG_gameInfo)
//	806AF274: 804061C0 (g_dComIfG_gameInfo)
//	806AF278: 806B6078 (w_eff_id_4470)
//	806AF27C: 806B6078 (w_eff_id_4470)
//	806AF280: 806B5CFC (lit_3868)
//	806AF284: 806B5CFC (lit_3868)
//	806AF2C8: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AF2E0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setJumpEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setJumpEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AF2F4-806AF3D0 00DC+00 s=1 e=0 z=0  None .text      setJumpSizukuEffect__8daE_DT_cFv                             */
//	806AF30C: 804061C0 (g_dComIfG_gameInfo)
//	806AF310: 804061C0 (g_dComIfG_gameInfo)
//	806AF35C: 806B5CFC (lit_3868)
//	806AF360: 806B5CFC (lit_3868)
//	806AF364: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AF378: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806AF3A4: 80280808 (func_80280808)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setJumpSizukuEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setJumpSizukuEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AF3D0-806AF460 0090+00 s=2 e=0 z=0  None .text      setDamageShibukiEffect__8daE_DT_cFi                          */
//	806AF3F4: 804061C0 (g_dComIfG_gameInfo)
//	806AF3F8: 804061C0 (g_dComIfG_gameInfo)
//	806AF424: 806B6084 (w_eff_id_4529)
//	806AF428: 806B6084 (w_eff_id_4529)
//	806AF444: 806B5CFC (lit_3868)
//	806AF448: 806B5CFC (lit_3868)
//	806AF44C: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daE_DT_c::setDamageShibukiEffect(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setDamageShibukiEffect__8daE_DT_cFi.s"
}
#pragma pop


/* 806AF460-806AF548 00E8+00 s=2 e=0 z=0  None .text      setDamageYodareEffect__8daE_DT_cFi                           */
//	806AF47C: 804061C0 (g_dComIfG_gameInfo)
//	806AF480: 804061C0 (g_dComIfG_gameInfo)
//	806AF4B8: 806B6088 (w_eff_id_4547)
//	806AF4BC: 806B6088 (w_eff_id_4547)
//	806AF4D4: 806B5CFC (lit_3868)
//	806AF4D8: 806B5CFC (lit_3868)
//	806AF4DC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AF4F0: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806AF51C: 80280808 (func_80280808)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daE_DT_c::setDamageYodareEffect(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setDamageYodareEffect__8daE_DT_cFi.s"
}
#pragma pop


/* 806AF548-806AF5CC 0084+00 s=2 e=0 z=0  None .text      setSwingEffect__8daE_DT_cFv                                  */
//	806AF568: 804061C0 (g_dComIfG_gameInfo)
//	806AF56C: 804061C0 (g_dComIfG_gameInfo)
//	806AF5B0: 806B5CFC (lit_3868)
//	806AF5B4: 806B5CFC (lit_3868)
//	806AF5B8: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setSwingEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setSwingEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AF5CC-806AF740 0174+00 s=1 e=0 z=0  None .text      setStepEffect__8daE_DT_cFv                                   */
//	806AF5E4: 806B5CD4 (lit_3792)
//	806AF5E8: 806B5CD4 (lit_3792)
//	806AF600: 806AE6F0 (checkBck__8daE_DT_cFi)
//	806AF618: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806AF624: 804061C0 (g_dComIfG_gameInfo)
//	806AF628: 804061C0 (g_dComIfG_gameInfo)
//	806AF670: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AF680: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806AF6F0: 8032842C (checkPass__12J3DFrameCtrlFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setStepEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setStepEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AF740-806AF848 0108+00 s=1 e=0 z=0  None .text      setBombEffect__8daE_DT_cFv                                   */
//	806AF750: 803621C8 (_savegpr_24)
//	806AF764: 804061C0 (g_dComIfG_gameInfo)
//	806AF768: 804061C0 (g_dComIfG_gameInfo)
//	806AF76C: 806B608C (w_eff_id_4635)
//	806AF770: 806B608C (w_eff_id_4635)
//	806AF774: 806B5CFC (lit_3868)
//	806AF778: 806B5CFC (lit_3868)
//	806AF7C8: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AF7DC: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806AF808: 80280808 (func_80280808)
//	806AF834: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setBombEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setBombEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AF848-806AF924 00DC+00 s=1 e=0 z=0  None .text      setBombSmokeEffect__8daE_DT_cFv                              */
//	806AF860: 804061C0 (g_dComIfG_gameInfo)
//	806AF864: 804061C0 (g_dComIfG_gameInfo)
//	806AF8B0: 806B5CFC (lit_3868)
//	806AF8B4: 806B5CFC (lit_3868)
//	806AF8B8: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AF8CC: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806AF8F8: 80280808 (func_80280808)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setBombSmokeEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setBombSmokeEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AF924-806AF9D8 00B4+00 s=1 e=0 z=0  None .text      setDeadShibukiEffect__8daE_DT_cFv                            */
//	806AF934: 803621D0 (_savegpr_26)
//	806AF954: 804061C0 (g_dComIfG_gameInfo)
//	806AF958: 804061C0 (g_dComIfG_gameInfo)
//	806AF95C: 806B6094 (w_eff_id_4713)
//	806AF960: 806B6094 (w_eff_id_4713)
//	806AF964: 806B5CFC (lit_3868)
//	806AF968: 806B5CFC (lit_3868)
//	806AF9AC: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AF9C4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setDeadShibukiEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setDeadShibukiEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AF9D8-806AFAE0 0108+00 s=1 e=0 z=0  None .text      setDeadYodareEffect__8daE_DT_cFv                             */
//	806AF9E8: 803621C8 (_savegpr_24)
//	806AF9FC: 804061C0 (g_dComIfG_gameInfo)
//	806AFA00: 804061C0 (g_dComIfG_gameInfo)
//	806AFA04: 806B6098 (w_eff_id_4737)
//	806AFA08: 806B6098 (w_eff_id_4737)
//	806AFA0C: 806B5CFC (lit_3868)
//	806AFA10: 806B5CFC (lit_3868)
//	806AFA60: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AFA74: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806AFAA0: 80280808 (func_80280808)
//	806AFACC: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setDeadYodareEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setDeadYodareEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AFAE0-806AFBBC 00DC+00 s=1 e=0 z=0  None .text      setBoxTubaEffect__8daE_DT_cFv                                */
//	806AFAF8: 804061C0 (g_dComIfG_gameInfo)
//	806AFAFC: 804061C0 (g_dComIfG_gameInfo)
//	806AFB48: 806B5CFC (lit_3868)
//	806AFB4C: 806B5CFC (lit_3868)
//	806AFB50: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AFB64: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	806AFB90: 80280808 (func_80280808)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setBoxTubaEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setBoxTubaEffect__8daE_DT_cFv.s"
}
#pragma pop


/* 806AFBBC-806AFC98 00DC+00 s=1 e=0 z=0  None .text      setBoxTubaLandEffect__8daE_DT_cFv                            */
//	806AFBCC: 803621D0 (_savegpr_26)
//	806AFBE0: 803DD470 (now__14mDoMtx_stack_c)
//	806AFBE4: 803DD470 (now__14mDoMtx_stack_c)
//	806AFBE8: 803464B0 (PSMTXCopy)
//	806AFBEC: 803DD470 (now__14mDoMtx_stack_c)
//	806AFBF0: 803DD470 (now__14mDoMtx_stack_c)
//	806AFC14: 804061C0 (g_dComIfG_gameInfo)
//	806AFC18: 804061C0 (g_dComIfG_gameInfo)
//	806AFC1C: 806B60A0 (w_eff_id_4815)
//	806AFC20: 806B60A0 (w_eff_id_4815)
//	806AFC24: 806B5CFC (lit_3868)
//	806AFC28: 806B5CFC (lit_3868)
//	806AFC6C: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	806AFC84: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setBoxTubaLandEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setBoxTubaLandEffect__8daE_DT_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 806B62DC-806B62E0 0004+00 s=2 e=0 z=0  None .bss       mDt_OtamaNum__6E_DT_n                                        */
static u8 mDt_OtamaNum__6E_DT_n[4];

/* 806B62E0-806B6330 0050+00 s=3 e=0 z=0  None .bss       mDt_OtamaNo__6E_DT_n                                         */
static u8 mDt_OtamaNo__6E_DT_n[80];

/* 806AFC98-806AFD30 0098+00 s=1 e=0 z=0  None .text      s_otama_todo__FPvPv                                          */
//	806AFCAC: 80018CE0 (fopAc_IsActor__FPv)
//	806AFCCC: 80022138 (fpcM_IsCreating__FUi)
//	806AFCE4: 806B62DC (mDt_OtamaNum__6E_DT_n)
//	806AFCE8: 806B62DC (mDt_OtamaNum__6E_DT_n)
//	806AFD0C: 806B62E0 (mDt_OtamaNo__6E_DT_n)
//	806AFD10: 806B62E0 (mDt_OtamaNo__6E_DT_n)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_otama_todo(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/s_otama_todo__FPvPv.s"
}
#pragma pop


/* 806AFD30-806AFD94 0064+00 s=3 e=0 z=0  None .text      getNumberOfOtama__8daE_DT_cFv                                */
//	806AFD44: 806B62DC (mDt_OtamaNum__6E_DT_n)
//	806AFD48: 806B62DC (mDt_OtamaNum__6E_DT_n)
//	806AFD50: 806B62E0 (mDt_OtamaNo__6E_DT_n)
//	806AFD54: 806B62E0 (mDt_OtamaNo__6E_DT_n)
//	806AFD6C: 806AFC98 (s_otama_todo__FPvPv)
//	806AFD70: 806AFC98 (s_otama_todo__FPvPv)
//	806AFD74: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	806AFD78: 806B62DC (mDt_OtamaNum__6E_DT_n)
//	806AFD7C: 806B62DC (mDt_OtamaNum__6E_DT_n)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::getNumberOfOtama() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/getNumberOfOtama__8daE_DT_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 806B6330-806B6334 0004+00 s=3 e=0 z=0  None .bss       m_fall_no__6E_DT_n                                           */
static u8 m_fall_no__6E_DT_n[4];

/* 806AFD94-806AFE24 0090+00 s=3 e=0 z=0  None .text      s_fall_otama__FPvPv                                          */
//	806AFDA8: 80018CE0 (fopAc_IsActor__FPv)
//	806AFDC8: 80022138 (fpcM_IsCreating__FUi)
//	806AFDE0: 806B6330 (m_fall_no__6E_DT_n)
//	806AFDE4: 806B6330 (m_fall_no__6E_DT_n)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_fall_otama(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/s_fall_otama__FPvPv.s"
}
#pragma pop


/* 806AFE24-806AFEAC 0088+00 s=2 e=0 z=0  None .text      setStayOtamaFall__8daE_DT_cFv                                */
//	806AFE34: 803621D4 (_savegpr_27)
//	806AFE44: 806B6330 (m_fall_no__6E_DT_n)
//	806AFE48: 806B6330 (m_fall_no__6E_DT_n)
//	806AFE4C: 806AFD94 (s_fall_otama__FPvPv)
//	806AFE50: 806AFD94 (s_fall_otama__FPvPv)
//	806AFE6C: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	806AFE98: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setStayOtamaFall() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setStayOtamaFall__8daE_DT_cFv.s"
}
#pragma pop


/* 806AFEAC-806AFF1C 0070+00 s=1 e=0 z=0  None .text      setStayOtamaDelete__8daE_DT_cFv                              */
//	806AFEBC: 803621D4 (_savegpr_27)
//	806AFEC8: 806B6330 (m_fall_no__6E_DT_n)
//	806AFECC: 806B6330 (m_fall_no__6E_DT_n)
//	806AFED0: 806AFD94 (s_fall_otama__FPvPv)
//	806AFED4: 806AFD94 (s_fall_otama__FPvPv)
//	806AFEE8: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	806AFF08: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::setStayOtamaDelete() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/setStayOtamaDelete__8daE_DT_cFv.s"
}
#pragma pop


/* 806AFF1C-806AFF8C 0070+00 s=1 e=0 z=0  None .text      s_demo_otama__FPvPv                                          */
//	806AFF30: 80018CE0 (fopAc_IsActor__FPv)
//	806AFF50: 80022138 (fpcM_IsCreating__FUi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_demo_otama(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/s_demo_otama__FPvPv.s"
}
#pragma pop


/* ############################################################################################## */
/* 806B6334-806B6340 000C+00 s=0 e=0 z=0  None .bss       @3802                                                        */
u8 lit_3802[12];

/* 806B6340-806B634C 000C+00 s=2 e=0 z=0  None .bss       m_tongue_pos__6E_DT_n                                        */
static u8 m_tongue_pos__6E_DT_n[12];

/* 806AFF8C-806B0114 0188+00 s=1 e=0 z=0  None .text      s_bomb_search__FPvPv                                         */
//	806AFFA4: 806B5CD4 (lit_3792)
//	806AFFA8: 806B5CD4 (lit_3792)
//	806AFFAC: 80018CE0 (fopAc_IsActor__FPv)
//	806AFFCC: 80022138 (fpcM_IsCreating__FUi)
//	806AFFF4: 806B6340 (m_tongue_pos__6E_DT_n)
//	806AFFF8: 806B6340 (m_tongue_pos__6E_DT_n)
//	806AFFFC: 8034739C (PSVECSquareDistance)
//	806B006C: 80450AE0 (__float_nan)
//	806B0070: 80450AE0 (__float_nan)
//	806B00DC: 80450AE0 (__float_nan)
//	806B00E0: 80450AE0 (__float_nan)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_bomb_search(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/s_bomb_search__FPvPv.s"
}
#pragma pop


/* 806B0114-806B01B4 00A0+00 s=1 e=0 z=0  None .text      checkBombEat__8daE_DT_cFv                                    */
//	806B013C: 803DD470 (now__14mDoMtx_stack_c)
//	806B0140: 803DD470 (now__14mDoMtx_stack_c)
//	806B0144: 803464B0 (PSMTXCopy)
//	806B0148: 803DD470 (now__14mDoMtx_stack_c)
//	806B014C: 803DD470 (now__14mDoMtx_stack_c)
//	806B0154: 806B6340 (m_tongue_pos__6E_DT_n)
//	806B0158: 806B6340 (m_tongue_pos__6E_DT_n)
//	806B016C: 806AFF8C (s_bomb_search__FPvPv)
//	806B0170: 806AFF8C (s_bomb_search__FPvPv)
//	806B0178: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::checkBombEat() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/checkBombEat__8daE_DT_cFv.s"
}
#pragma pop


/* 806B01B4-806B0200 004C+00 s=1 e=0 z=0  None .text      isShutterOpen__8daE_DT_cFv                                   */
//	806B01C8: 80019A2C (fopAcM_SearchByName__FsPP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::isShutterOpen() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/isShutterOpen__8daE_DT_cFv.s"
}
#pragma pop


/* 806B0200-806B0368 0168+00 s=1 e=0 z=0  None .text      executeWait__8daE_DT_cFv                                     */
//	806B0218: 806B5CD4 (lit_3792)
//	806B021C: 806B5CD4 (lit_3792)
//	806B0258: 806AE6F0 (checkBck__8daE_DT_cFi)
//	806B0270: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B0288: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B02DC: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B02EC: 8026798C (cM_rndFX__Ff)
//	806B032C: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B034C: 806AE74C (setActionMode__8daE_DT_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeWait() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeWait__8daE_DT_cFv.s"
}
#pragma pop


/* 806B0368-806B063C 02D4+00 s=1 e=0 z=0  None .text      executeCry__8daE_DT_cFv                                      */
//	806B0378: 803621D4 (_savegpr_27)
//	806B0380: 806B5CD4 (lit_3792)
//	806B0384: 806B5CD4 (lit_3792)
//	806B03B4: 806AEBD4 (checkBeforeBg__8daE_DT_cFf)
//	806B03E4: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B03EC: 804061C0 (g_dComIfG_gameInfo)
//	806B03F0: 804061C0 (g_dComIfG_gameInfo)
//	806B03F8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806B0438: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B045C: 80270B90 (cLib_chaseAngleS__FPsss)
//	806B0474: 806AEBD4 (checkBeforeBg__8daE_DT_cFf)
//	806B04A0: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B04C4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B0528: 806B0114 (checkBombEat__8daE_DT_cFv)
//	806B0540: 806AE74C (setActionMode__8daE_DT_cFii)
//	806B0554: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B0590: 806AFD30 (getNumberOfOtama__8daE_DT_cFv)
//	806B059C: 806B62E0 (mDt_OtamaNo__6E_DT_n)
//	806B05A0: 806B62E0 (mDt_OtamaNo__6E_DT_n)
//	806B05D0: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	806B0620: 806AE74C (setActionMode__8daE_DT_cFii)
//	806B0628: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeCry() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeCry__8daE_DT_cFv.s"
}
#pragma pop


/* 806B063C-806B07C4 0188+00 s=1 e=0 z=0  None .text      executeShake__8daE_DT_cFv                                    */
//	806B0654: 806B5CD4 (lit_3792)
//	806B0658: 806B5CD4 (lit_3792)
//	806B0694: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B06B8: 806AF548 (setSwingEffect__8daE_DT_cFv)
//	806B06D0: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B06FC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B0768: 806B5EEC (eDt_ShakeFrame__6E_DT_n)
//	806B076C: 806B5EEC (eDt_ShakeFrame__6E_DT_n)
//	806B0780: 806AFE24 (setStayOtamaFall__8daE_DT_cFv)
//	806B07A8: 806AE74C (setActionMode__8daE_DT_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeShake() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeShake__8daE_DT_cFv.s"
}
#pragma pop


/* 806B07C4-806B0E9C 06D8+00 s=2 e=0 z=0  None .text      executeWalk__8daE_DT_cFv                                     */
//	806B07D4: 803621DC (_savegpr_29)
//	806B07DC: 806B5CD4 (lit_3792)
//	806B07E0: 806B5CD4 (lit_3792)
//	806B07F4: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806B0804: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806B0814: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806B0824: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	806B084C: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B0888: 806B60A4 (lit_5320)
//	806B088C: 806B60A4 (lit_5320)
//	806B08B4: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B08F0: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B090C: 804061C0 (g_dComIfG_gameInfo)
//	806B0910: 804061C0 (g_dComIfG_gameInfo)
//	806B0918: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806B0924: 8026798C (cM_rndFX__Ff)
//	806B096C: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	806B0978: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	806B0998: 80270B90 (cLib_chaseAngleS__FPsss)
//	806B09C8: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B09E4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B09FC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B0A40: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B0A84: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B0AC0: 806B62AC (l_HIO)
//	806B0AC4: 806B62AC (l_HIO)
//	806B0AD0: 80270740 (cLib_chaseF__FPfff)
//	806B0B14: 8034739C (PSVECSquareDistance)
//	806B0B84: 80450AE0 (__float_nan)
//	806B0B88: 80450AE0 (__float_nan)
//	806B0BF4: 80450AE0 (__float_nan)
//	806B0BF8: 80450AE0 (__float_nan)
//	806B0C1C: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B0C28: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	806B0C50: 80270B90 (cLib_chaseAngleS__FPsss)
//	806B0C78: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B0C94: 804061C0 (g_dComIfG_gameInfo)
//	806B0C98: 804061C0 (g_dComIfG_gameInfo)
//	806B0CA0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806B0CB0: 803650D0 (abs)
//	806B0CC4: 8001A738 (fopAcM_searchActorAngleX__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806B0CD4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806B0D24: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B0D60: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B0DD8: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B0E34: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B0E4C: 806AFD30 (getNumberOfOtama__8daE_DT_cFv)
//	806B0E5C: 806AFD30 (getNumberOfOtama__8daE_DT_cFv)
//	806B0E80: 806AE74C (setActionMode__8daE_DT_cFii)
//	806B0E88: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeWalk() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeWalk__8daE_DT_cFv.s"
}
#pragma pop


/* 806B0E9C-806B177C 08E0+00 s=2 e=0 z=0  None .text      executeJump__8daE_DT_cFv                                     */
//	806B0EB4: 803621D4 (_savegpr_27)
//	806B0EBC: 806B5CD4 (lit_3792)
//	806B0EC0: 806B5CD4 (lit_3792)
//	806B0EC4: 804061C0 (g_dComIfG_gameInfo)
//	806B0EC8: 804061C0 (g_dComIfG_gameInfo)
//	806B0ED0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806B0EFC: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	806B0F48: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	806B0F50: 803DD470 (now__14mDoMtx_stack_c)
//	806B0F54: 803DD470 (now__14mDoMtx_stack_c)
//	806B0F60: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B0F84: 803DD470 (now__14mDoMtx_stack_c)
//	806B0F88: 803DD470 (now__14mDoMtx_stack_c)
//	806B0F94: 80346D6C (PSMTXMultVec)
//	806B0FA4: 806B60C4 (lit_5532)
//	806B0FA8: 806B60C4 (lit_5532)
//	806B0FD0: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B0FF8: 806B62AC (l_HIO)
//	806B0FFC: 806B62AC (l_HIO)
//	806B102C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	806B103C: 803650D0 (abs)
//	806B1050: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806B107C: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B10AC: 806AF240 (setJumpEffect__8daE_DT_cFv)
//	806B10D4: 806AF2F4 (setJumpSizukuEffect__8daE_DT_cFv)
//	806B10E4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B1174: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	806B1190: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B119C: 806AF2F4 (setJumpSizukuEffect__8daE_DT_cFv)
//	806B11A0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B11A4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B11B4: 802B1DF4 (changeSubBgmStatus__8Z2SeqMgrFl)
//	806B11E0: 80270740 (cLib_chaseF__FPfff)
//	806B11F8: 80270740 (cLib_chaseF__FPfff)
//	806B120C: 804061C0 (g_dComIfG_gameInfo)
//	806B1210: 804061C0 (g_dComIfG_gameInfo)
//	806B1278: 80270740 (cLib_chaseF__FPfff)
//	806B1290: 80270740 (cLib_chaseF__FPfff)
//	806B12CC: 804061C0 (g_dComIfG_gameInfo)
//	806B12D0: 804061C0 (g_dComIfG_gameInfo)
//	806B1300: 806B62AC (l_HIO)
//	806B1304: 806B62AC (l_HIO)
//	806B1334: 8026798C (cM_rndFX__Ff)
//	806B1344: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	806B13E0: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	806B13F0: 800846F0 (GetCoHitObj__12dCcD_GObjInfFv)
//	806B13F4: 80263A48 (GetAc__8cCcD_ObjFv)
//	806B1418: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	806B1428: 800846F0 (GetCoHitObj__12dCcD_GObjInfFv)
//	806B142C: 80263A48 (GetAc__8cCcD_ObjFv)
//	806B146C: 803650D0 (abs)
//	806B14B0: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	806B14D0: 803DD470 (now__14mDoMtx_stack_c)
//	806B14D4: 803DD470 (now__14mDoMtx_stack_c)
//	806B14D8: 803464B0 (PSMTXCopy)
//	806B14DC: 803DD470 (now__14mDoMtx_stack_c)
//	806B14E0: 803DD470 (now__14mDoMtx_stack_c)
//	806B14FC: 8026786C (cM_rnd__Fv)
//	806B1550: 8015F914 (setPlayerDamage__9daPy_py_cFii)
//	806B155C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B1560: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B1570: 802B1DF4 (changeSubBgmStatus__8Z2SeqMgrFl)
//	806B15A4: 806AF09C (setLargeWaterEffect__8daE_DT_cFv)
//	806B15C4: 804061C0 (g_dComIfG_gameInfo)
//	806B15C8: 804061C0 (g_dComIfG_gameInfo)
//	806B15DC: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	806B15FC: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B1680: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B1684: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B1694: 802B1DF4 (changeSubBgmStatus__8Z2SeqMgrFl)
//	806B16D8: 806AE74C (setActionMode__8daE_DT_cFii)
//	806B1768: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeJump() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeJump__8daE_DT_cFv.s"
}
#pragma pop


/* 806B177C-806B1B60 03E4+00 s=1 e=0 z=0  None .text      executeDown__8daE_DT_cFv                                     */
//	806B1794: 806B5CD4 (lit_3792)
//	806B1798: 806B5CD4 (lit_3792)
//	806B17E0: 806B62AC (l_HIO)
//	806B17E4: 806B62AC (l_HIO)
//	806B1800: 806B62AC (l_HIO)
//	806B1804: 806B62AC (l_HIO)
//	806B1838: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B186C: 806AEB48 (setStabPos__8daE_DT_cFv)
//	806B1878: 806AF3D0 (setDamageShibukiEffect__8daE_DT_cFi)
//	806B1884: 806AF460 (setDamageYodareEffect__8daE_DT_cFi)
//	806B1888: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B188C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B189C: 802B1DF4 (changeSubBgmStatus__8Z2SeqMgrFl)
//	806B18E4: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B1928: 806AE74C (setActionMode__8daE_DT_cFii)
//	806B1934: 806AE6F0 (checkBck__8daE_DT_cFi)
//	806B194C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B19A8: 804061C0 (g_dComIfG_gameInfo)
//	806B19AC: 804061C0 (g_dComIfG_gameInfo)
//	806B19D4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B19D8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B19E8: 802B1DF4 (changeSubBgmStatus__8Z2SeqMgrFl)
//	806B1A00: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B1A48: 806AEB48 (setStabPos__8daE_DT_cFv)
//	806B1A4C: 804061C0 (g_dComIfG_gameInfo)
//	806B1A50: 804061C0 (g_dComIfG_gameInfo)
//	806B1A68: 8026395C (ClrCcMove__9cCcD_SttsFv)
//	806B1AB8: 806AF460 (setDamageYodareEffect__8daE_DT_cFi)
//	806B1AC8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B1B04: 806AEFE8 (setSmallWaterEffect__8daE_DT_cFv)
//	806B1B44: 806AE74C (setActionMode__8daE_DT_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeDown() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeDown__8daE_DT_cFv.s"
}
#pragma pop


/* 806B1B60-806B1BEC 008C+00 s=1 e=0 z=0  None .text      executeSearch__8daE_DT_cFv                                   */
//	806B1B98: 806B5CE8 (lit_3797)
//	806B1B9C: 806B5CE8 (lit_3797)
//	806B1BA0: 806B5CFC (lit_3868)
//	806B1BA4: 806B5CFC (lit_3868)
//	806B1BA8: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B1BD4: 806AE74C (setActionMode__8daE_DT_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeSearch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeSearch__8daE_DT_cFv.s"
}
#pragma pop


/* 806B1BEC-806B1D48 015C+00 s=1 e=0 z=0  None .text      executeDamage__8daE_DT_cFv                                   */
//	806B1C04: 806B5CD4 (lit_3792)
//	806B1C08: 806B5CD4 (lit_3792)
//	806B1C74: 806AF3D0 (setDamageShibukiEffect__8daE_DT_cFi)
//	806B1C80: 806AF460 (setDamageYodareEffect__8daE_DT_cFi)
//	806B1CD4: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B1CEC: 806AF460 (setDamageYodareEffect__8daE_DT_cFi)
//	806B1D2C: 806AE74C (setActionMode__8daE_DT_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeDamage() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeDamage__8daE_DT_cFv.s"
}
#pragma pop


/* 806B1D48-806B1F78 0230+00 s=1 e=0 z=0  None .text      executeBombDamage__8daE_DT_cFv                               */
//	806B1D60: 806B5CD4 (lit_3792)
//	806B1D64: 806B5CD4 (lit_3792)
//	806B1D9C: 806AF740 (setBombEffect__8daE_DT_cFv)
//	806B1DA4: 806AF848 (setBombSmokeEffect__8daE_DT_cFv)
//	806B1DE4: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B1DF4: 806AF740 (setBombEffect__8daE_DT_cFv)
//	806B1DFC: 806AF848 (setBombSmokeEffect__8daE_DT_cFv)
//	806B1E0C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B1E48: 806AFEAC (setStayOtamaDelete__8daE_DT_cFv)
//	806B1E58: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B1E94: 806AEFE8 (setSmallWaterEffect__8daE_DT_cFv)
//	806B1EB4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B1EC0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B1EC4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B1ED4: 802B1DF4 (changeSubBgmStatus__8Z2SeqMgrFl)
//	806B1ED8: 806B62AC (l_HIO)
//	806B1EDC: 806B62AC (l_HIO)
//	806B1F5C: 806AE74C (setActionMode__8daE_DT_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeBombDamage() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeBombDamage__8daE_DT_cFv.s"
}
#pragma pop


/* 806B1F78-806B28E4 096C+00 s=2 e=0 z=0  None .text      executeDeath__8daE_DT_cFv                                    */
//	806B1F88: 803621D8 (_savegpr_28)
//	806B1F90: 806B5CD4 (lit_3792)
//	806B1F94: 806B5CD4 (lit_3792)
//	806B1FAC: 804061C0 (g_dComIfG_gameInfo)
//	806B1FB0: 804061C0 (g_dComIfG_gameInfo)
//	806B1FD8: 806B60E4 (lit_5965)
//	806B1FDC: 806B60E4 (lit_5965)
//	806B2034: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B20A8: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	806B20BC: 806AF924 (setDeadShibukiEffect__8daE_DT_cFv)
//	806B20C4: 806AF9D8 (setDeadYodareEffect__8daE_DT_cFv)
//	806B20CC: 801614D0 (Stop__9dCamera_cFv)
//	806B218C: 8016300C (SetTrimSize__9dCamera_cFl)
//	806B21AC: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B21E8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B21EC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B21F8: 802AF884 (subBgmStop__8Z2SeqMgrFv)
//	806B21FC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B2200: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B2220: 804061C0 (g_dComIfG_gameInfo)
//	806B2224: 804061C0 (g_dComIfG_gameInfo)
//	806B2230: 80034918 (onDungeonItem__12dSv_memBit_cFi)
//	806B225C: 806AFAE0 (setBoxTubaEffect__8daE_DT_cFv)
//	806B226C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B2284: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B229C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B22AC: 806AF924 (setDeadShibukiEffect__8daE_DT_cFv)
//	806B22BC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B22F8: 806AEFE8 (setSmallWaterEffect__8daE_DT_cFv)
//	806B2300: 806AF9D8 (setDeadYodareEffect__8daE_DT_cFv)
//	806B2310: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B2330: 803DD470 (now__14mDoMtx_stack_c)
//	806B2334: 803DD470 (now__14mDoMtx_stack_c)
//	806B2338: 803464B0 (PSMTXCopy)
//	806B233C: 803DD470 (now__14mDoMtx_stack_c)
//	806B2340: 803DD470 (now__14mDoMtx_stack_c)
//	806B2390: 80347138 (PSVECSquareMag)
//	806B2400: 80450AE0 (__float_nan)
//	806B2404: 80450AE0 (__float_nan)
//	806B2470: 80450AE0 (__float_nan)
//	806B2474: 80450AE0 (__float_nan)
//	806B2484: 80267674 (cM_atan2s__Fff)
//	806B24D8: 8026FA3C (cLib_addCalc2__FPffff)
//	806B2504: 8026FA3C (cLib_addCalc2__FPffff)
//	806B255C: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B256C: 80270740 (cLib_chaseF__FPfff)
//	806B257C: 80266B84 (__ml__4cXyzCFf)
//	806B2594: 80266B84 (__ml__4cXyzCFf)
//	806B25A4: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	806B25FC: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B265C: 80180AE0 (Set__9dCamera_cF4cXyz4cXyzfs)
//	806B2684: 8026FA3C (cLib_addCalc2__FPffff)
//	806B26E4: 8026FA3C (cLib_addCalc2__FPffff)
//	806B2718: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	806B2730: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	806B27A0: 80270178 (cLib_addCalcPos2__FP4cXyzRC4cXyzff)
//	806B27E8: 80180AE0 (Set__9dCamera_cF4cXyz4cXyzfs)
//	806B283C: 80180BA0 (Reset__9dCamera_cF4cXyz4cXyzfs)
//	806B2844: 801614AC (Start__9dCamera_cFv)
//	806B2850: 8016300C (SetTrimSize__9dCamera_cFl)
//	806B2854: 804061C0 (g_dComIfG_gameInfo)
//	806B2858: 804061C0 (g_dComIfG_gameInfo)
//	806B2860: 80042468 (reset__14dEvt_control_cFv)
//	806B2864: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B2868: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B28C8: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	806B28D0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeDeath() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeDeath__8daE_DT_cFv.s"
}
#pragma pop


/* 806B28E4-806B29D4 00F0+00 s=1 e=0 z=0  None .text      pointInSight__8daE_DT_cFP4cXyz                               */
//	806B290C: 806B5CD4 (lit_3792)
//	806B2910: 806B5CD4 (lit_3792)
//	806B2914: 804061C0 (g_dComIfG_gameInfo)
//	806B2918: 804061C0 (g_dComIfG_gameInfo)
//	806B2930: 8001E308 (fopCamM_GetParam__FP12camera_class)
//	806B2934: 804061C0 (g_dComIfG_gameInfo)
//	806B2938: 804061C0 (g_dComIfG_gameInfo)
//	806B2968: 80015310 (mDoLib_project__FP3VecP3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz* False
// 	 cXyz False
asm void daE_DT_c::pointInSight(cXyz* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/pointInSight__8daE_DT_cFP4cXyz.s"
}
#pragma pop


/* 806B29D4-806B3B08 1134+00 s=2 e=0 z=0  None .text      executeOpening__8daE_DT_cFv                                  */
//	806B29E4: 803621D0 (_savegpr_26)
//	806B29EC: 806B6260 (lit_1109)
//	806B29F0: 806B6260 (lit_1109)
//	806B29F4: 806B5CD4 (lit_3792)
//	806B29F8: 806B5CD4 (lit_3792)
//	806B29FC: 804061C0 (g_dComIfG_gameInfo)
//	806B2A00: 804061C0 (g_dComIfG_gameInfo)
//	806B2A08: 80181640 (dCam_getBody__Fv)
//	806B2A40: 806B6100 (lit_6452)
//	806B2A44: 806B6100 (lit_6452)
//	806B2A74: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B2A84: 806AFD30 (getNumberOfOtama__8daE_DT_cFv)
//	806B2AB4: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	806B2ADC: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	806B2AEC: 803DD470 (now__14mDoMtx_stack_c)
//	806B2AF0: 803DD470 (now__14mDoMtx_stack_c)
//	806B2B00: 803468E8 (PSMTXTrans)
//	806B2B04: 803DD470 (now__14mDoMtx_stack_c)
//	806B2B08: 803DD470 (now__14mDoMtx_stack_c)
//	806B2B10: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	806B2B20: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B2B24: 803DD470 (now__14mDoMtx_stack_c)
//	806B2B28: 803DD470 (now__14mDoMtx_stack_c)
//	806B2B50: 806B01B4 (isShutterOpen__8daE_DT_cFv)
//	806B2B70: 806B28E4 (pointInSight__8daE_DT_cFP4cXyz)
//	806B2B7C: 80181640 (dCam_getBody__Fv)
//	806B2B8C: 80181640 (dCam_getBody__Fv)
//	806B2B9C: 80181640 (dCam_getBody__Fv)
//	806B2BAC: 804061C0 (g_dComIfG_gameInfo)
//	806B2BB0: 804061C0 (g_dComIfG_gameInfo)
//	806B2C00: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B2C10: 80267954 (cM_rndF__Ff)
//	806B2C38: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B2C58: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B2C84: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B2CE0: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	806B2D18: 806AFD30 (getNumberOfOtama__8daE_DT_cFv)
//	806B2D38: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B2D48: 8026798C (cM_rndFX__Ff)
//	806B2D88: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B2DA4: 801614D0 (Stop__9dCamera_cFv)
//	806B2DB0: 80181E64 (Eye__9dCamera_cFv)
//	806B2DD4: 80181E98 (Center__9dCamera_cFv)
//	806B2E08: 806B5C8C (Bank__9dCamera_cFv)
//	806B2E28: 8016300C (SetTrimSize__9dCamera_cFl)
//	806B2E40: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B2E4C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B2E50: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B2E64: 802AF49C (subBgmStart__8Z2SeqMgrFUl)
//	806B2E74: 8002DA9C (dComIfGs_onOneZoneSwitch__Fii)
//	806B2E9C: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	806B2EF8: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B2F24: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B2F48: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B2F54: 806AE6F0 (checkBck__8daE_DT_cFi)
//	806B2F6C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B2F84: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B2F9C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B2FC8: 806AFD94 (s_fall_otama__FPvPv)
//	806B2FCC: 806AFD94 (s_fall_otama__FPvPv)
//	806B2FD4: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	806B3048: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B3084: 803DD470 (now__14mDoMtx_stack_c)
//	806B3088: 803DD470 (now__14mDoMtx_stack_c)
//	806B308C: 803464B0 (PSMTXCopy)
//	806B3090: 803DD470 (now__14mDoMtx_stack_c)
//	806B3094: 803DD470 (now__14mDoMtx_stack_c)
//	806B30E0: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B30F0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B312C: 80270740 (cLib_chaseF__FPfff)
//	806B3130: 803DD470 (now__14mDoMtx_stack_c)
//	806B3134: 803DD470 (now__14mDoMtx_stack_c)
//	806B3144: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B3154: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B3158: 803DD470 (now__14mDoMtx_stack_c)
//	806B315C: 803DD470 (now__14mDoMtx_stack_c)
//	806B3184: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B319C: 803DD470 (now__14mDoMtx_stack_c)
//	806B31A0: 803DD470 (now__14mDoMtx_stack_c)
//	806B31A4: 803464B0 (PSMTXCopy)
//	806B31D8: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B31FC: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B3218: 80270740 (cLib_chaseF__FPfff)
//	806B321C: 803DD470 (now__14mDoMtx_stack_c)
//	806B3220: 803DD470 (now__14mDoMtx_stack_c)
//	806B3230: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B3240: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B3244: 803DD470 (now__14mDoMtx_stack_c)
//	806B3248: 803DD470 (now__14mDoMtx_stack_c)
//	806B3270: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B3288: 803DD470 (now__14mDoMtx_stack_c)
//	806B328C: 803DD470 (now__14mDoMtx_stack_c)
//	806B3290: 803464B0 (PSMTXCopy)
//	806B32C4: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B32D4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B3318: 803DD470 (now__14mDoMtx_stack_c)
//	806B331C: 803DD470 (now__14mDoMtx_stack_c)
//	806B332C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B333C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B3340: 803DD470 (now__14mDoMtx_stack_c)
//	806B3344: 803DD470 (now__14mDoMtx_stack_c)
//	806B336C: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B3384: 803DD470 (now__14mDoMtx_stack_c)
//	806B3388: 803DD470 (now__14mDoMtx_stack_c)
//	806B338C: 803464B0 (PSMTXCopy)
//	806B33B4: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B33FC: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B340C: 80270740 (cLib_chaseF__FPfff)
//	806B3428: 80270740 (cLib_chaseF__FPfff)
//	806B3558: 80270740 (cLib_chaseF__FPfff)
//	806B356C: 806AF09C (setLargeWaterEffect__8daE_DT_cFv)
//	806B358C: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B35A4: 804061C0 (g_dComIfG_gameInfo)
//	806B35A8: 804061C0 (g_dComIfG_gameInfo)
//	806B35BC: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	806B3630: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B3658: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B3668: 80270740 (cLib_chaseF__FPfff)
//	806B36A0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B36B0: 806AFD30 (getNumberOfOtama__8daE_DT_cFv)
//	806B36EC: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	806B3710: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B377C: 806B5F14 (eDt_ShakeFrameDemo__6E_DT_n)
//	806B3780: 806B5F14 (eDt_ShakeFrameDemo__6E_DT_n)
//	806B3788: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B3798: 806AFE24 (setStayOtamaFall__8daE_DT_cFv)
//	806B37B4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B37C4: 806AF548 (setSwingEffect__8daE_DT_cFv)
//	806B37D4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	806B37FC: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	806B3874: 80270740 (cLib_chaseF__FPfff)
//	806B388C: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	806B38CC: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B3914: 806AE64C (setBck__8daE_DT_cFiUcff)
//	806B395C: 80270740 (cLib_chaseF__FPfff)
//	806B3974: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	806B39B4: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B39D0: 806AE74C (setActionMode__8daE_DT_cFii)
//	806B3A1C: 80180C18 (Reset__9dCamera_cF4cXyz4cXyz)
//	806B3A24: 801614AC (Start__9dCamera_cFv)
//	806B3A30: 8016300C (SetTrimSize__9dCamera_cFl)
//	806B3A34: 804061C0 (g_dComIfG_gameInfo)
//	806B3A38: 804061C0 (g_dComIfG_gameInfo)
//	806B3A40: 80042468 (reset__14dEvt_control_cFv)
//	806B3A4C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B3A50: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B3A64: 802AF49C (subBgmStart__8Z2SeqMgrFUl)
//	806B3A68: 806AFF1C (s_demo_otama__FPvPv)
//	806B3A6C: 806AFF1C (s_demo_otama__FPvPv)
//	806B3A74: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	806B3AC0: 80180AE0 (Set__9dCamera_cF4cXyz4cXyzfs)
//	806B3AC4: 804061C0 (g_dComIfG_gameInfo)
//	806B3AC8: 804061C0 (g_dComIfG_gameInfo)
//	806B3AD4: 800429A8 (onSkipFade__14dEvt_control_cFv)
//	806B3AE0: 806AE618 (DemoSkipCallBack__8daE_DT_cFPvi)
//	806B3AE4: 806AE618 (DemoSkipCallBack__8daE_DT_cFPvi)
//	806B3AEC: 80042914 (setSkipProc__14dEvt_control_cFPvPFPvi_ii)
//	806B3AF4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::executeOpening() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/executeOpening__8daE_DT_cFv.s"
}
#pragma pop


/* 806B3B08-806B40D8 05D0+00 s=1 e=0 z=0  None .text      calcCamera__8daE_DT_cFv                                      */
//	806B3B18: 803621D8 (_savegpr_28)
//	806B3B20: 806B5CD4 (lit_3792)
//	806B3B24: 806B5CD4 (lit_3792)
//	806B3B2C: 80077C68 (__ct__11dBgS_LinChkFv)
//	806B3B30: 804061C0 (g_dComIfG_gameInfo)
//	806B3B34: 804061C0 (g_dComIfG_gameInfo)
//	806B3BA4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806B3BAC: 803DD470 (now__14mDoMtx_stack_c)
//	806B3BB0: 803DD470 (now__14mDoMtx_stack_c)
//	806B3BB4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B3BD0: 803DD470 (now__14mDoMtx_stack_c)
//	806B3BD4: 803DD470 (now__14mDoMtx_stack_c)
//	806B3BE0: 80346D6C (PSMTXMultVec)
//	806B3BF0: 80347090 (PSVECAdd)
//	806B3C04: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	806B3C08: 804061C0 (g_dComIfG_gameInfo)
//	806B3C0C: 804061C0 (g_dComIfG_gameInfo)
//	806B3C18: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	806B3C48: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806B3C50: 803DD470 (now__14mDoMtx_stack_c)
//	806B3C54: 803DD470 (now__14mDoMtx_stack_c)
//	806B3C58: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B3C74: 803DD470 (now__14mDoMtx_stack_c)
//	806B3C78: 803DD470 (now__14mDoMtx_stack_c)
//	806B3C84: 80346D6C (PSMTXMultVec)
//	806B3C94: 80347090 (PSVECAdd)
//	806B3CA8: 801614D0 (Stop__9dCamera_cFv)
//	806B3CAC: 806B62AC (l_HIO)
//	806B3CB0: 806B62AC (l_HIO)
//	806B3D18: 80077CDC (__dt__11dBgS_LinChkFv)
//	806B3D2C: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B3D3C: 802707AC (cLib_chasePos__FP4cXyzRC4cXyzf)
//	806B3D54: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	806B3D60: 80270F98 (__ct__7cSAngleFs)
//	806B3DA8: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	806B3DB8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	806B3DC0: 803DD470 (now__14mDoMtx_stack_c)
//	806B3DC4: 803DD470 (now__14mDoMtx_stack_c)
//	806B3DC8: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B3DE4: 803DD470 (now__14mDoMtx_stack_c)
//	806B3DE8: 803DD470 (now__14mDoMtx_stack_c)
//	806B3DF4: 80346D6C (PSMTXMultVec)
//	806B3E04: 80347090 (PSVECAdd)
//	806B3E44: 80180C18 (Reset__9dCamera_cF4cXyz4cXyz)
//	806B3E4C: 801614AC (Start__9dCamera_cFv)
//	806B3E60: 801614D0 (Stop__9dCamera_cFv)
//	806B3E9C: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	806B3EA8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	806B3EB0: 803DD470 (now__14mDoMtx_stack_c)
//	806B3EB4: 803DD470 (now__14mDoMtx_stack_c)
//	806B3EBC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B3ED8: 803DD470 (now__14mDoMtx_stack_c)
//	806B3EDC: 803DD470 (now__14mDoMtx_stack_c)
//	806B3EE8: 80346D6C (PSMTXMultVec)
//	806B3EF8: 80347090 (PSVECAdd)
//	806B3EFC: 803DD470 (now__14mDoMtx_stack_c)
//	806B3F00: 803DD470 (now__14mDoMtx_stack_c)
//	806B3F08: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B3F20: 803DD470 (now__14mDoMtx_stack_c)
//	806B3F24: 803DD470 (now__14mDoMtx_stack_c)
//	806B3F30: 80346D6C (PSMTXMultVec)
//	806B3F40: 80347090 (PSVECAdd)
//	806B3F54: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	806B3F58: 804061C0 (g_dComIfG_gameInfo)
//	806B3F5C: 804061C0 (g_dComIfG_gameInfo)
//	806B3F68: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	806B3FA8: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	806B3FB4: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	806B3FC4: 803DD470 (now__14mDoMtx_stack_c)
//	806B3FC8: 803DD470 (now__14mDoMtx_stack_c)
//	806B3FD0: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B3FEC: 803DD470 (now__14mDoMtx_stack_c)
//	806B3FF0: 803DD470 (now__14mDoMtx_stack_c)
//	806B3FFC: 80346D6C (PSMTXMultVec)
//	806B400C: 80347090 (PSVECAdd)
//	806B4010: 803DD470 (now__14mDoMtx_stack_c)
//	806B4014: 803DD470 (now__14mDoMtx_stack_c)
//	806B401C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	806B4034: 803DD470 (now__14mDoMtx_stack_c)
//	806B4038: 803DD470 (now__14mDoMtx_stack_c)
//	806B4044: 80346D6C (PSMTXMultVec)
//	806B4054: 80347090 (PSVECAdd)
//	806B409C: 80180AE0 (Set__9dCamera_cF4cXyz4cXyzfs)
//	806B40A8: 801614AC (Start__9dCamera_cFv)
//	806B40BC: 80077CDC (__dt__11dBgS_LinChkFv)
//	806B40C4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::calcCamera() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/calcCamera__8daE_DT_cFv.s"
}
#pragma pop


/* 806B40D8-806B4724 064C+00 s=1 e=0 z=0  None .text      calcBoxAndTuba__8daE_DT_cFv                                  */
//	806B40F0: 806B5CD4 (lit_3792)
//	806B40F4: 806B5CD4 (lit_3792)
//	806B4134: 80347090 (PSVECAdd)
//	806B41C4: 806AFBBC (setBoxTubaLandEffect__8daE_DT_cFv)
//	806B41D4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B41D8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B4204: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	806B4224: 80347138 (PSVECSquareMag)
//	806B4294: 80450AE0 (__float_nan)
//	806B4298: 80450AE0 (__float_nan)
//	806B4304: 80450AE0 (__float_nan)
//	806B4308: 80450AE0 (__float_nan)
//	806B4318: 80267674 (cM_atan2s__Fff)
//	806B4334: 80270540 (cLib_addCalcAngleS__FPsssss)
//	806B434C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	806B4364: 80270540 (cLib_addCalcAngleS__FPsssss)
//	806B4394: 80439A20 (sincosTable___5JMath)
//	806B4398: 80439A20 (sincosTable___5JMath)
//	806B44AC: 80270B90 (cLib_chaseAngleS__FPsss)
//	806B44FC: 804061C0 (g_dComIfG_gameInfo)
//	806B4500: 804061C0 (g_dComIfG_gameInfo)
//	806B450C: 80035360 (isSwitch__10dSv_info_cCFii)
//	806B4518: 804061C0 (g_dComIfG_gameInfo)
//	806B451C: 804061C0 (g_dComIfG_gameInfo)
//	806B452C: 80035200 (onSwitch__10dSv_info_cFii)
//	806B4554: 80270540 (cLib_addCalcAngleS__FPsssss)
//	806B456C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	806B4584: 80270540 (cLib_addCalcAngleS__FPsssss)
//	806B4594: 80270740 (cLib_chaseF__FPfff)
//	806B45A4: 80270740 (cLib_chaseF__FPfff)
//	806B45B4: 80270740 (cLib_chaseF__FPfff)
//	806B45C4: 80270740 (cLib_chaseF__FPfff)
//	806B45E0: 80270540 (cLib_addCalcAngleS__FPsssss)
//	806B45F8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	806B4610: 80270540 (cLib_addCalcAngleS__FPsssss)
//	806B4620: 80270740 (cLib_chaseF__FPfff)
//	806B4630: 80270740 (cLib_chaseF__FPfff)
//	806B4640: 80270740 (cLib_chaseF__FPfff)
//	806B4650: 80270740 (cLib_chaseF__FPfff)
//	806B46B4: 80270740 (cLib_chaseF__FPfff)
//	806B46D0: 80270740 (cLib_chaseF__FPfff)
//	806B46EC: 80270740 (cLib_chaseF__FPfff)
//	806B4708: 80270740 (cLib_chaseF__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::calcBoxAndTuba() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/calcBoxAndTuba__8daE_DT_cFv.s"
}
#pragma pop


/* 806B4724-806B49F0 02CC+00 s=2 e=0 z=0  None .text      action__8daE_DT_cFv                                          */
//	806B4804: 806AEEFC (checkWaterSurface__8daE_DT_cFv)
//	806B480C: 806AE758 (damage_check__8daE_DT_cFv)
//	806B4814: 806B5D34 (lit_4071)
//	806B4818: 806B5D34 (lit_4071)
//	806B481C: 806B5EA8 (lit_6732)
//	806B4820: 806B5EA8 (lit_6732)
//	806B4824: 80270740 (cLib_chaseF__FPfff)
//	806B4840: 80270B90 (cLib_chaseAngleS__FPsss)
//	806B485C: 80270B90 (cLib_chaseAngleS__FPsss)
//	806B487C: 806B6184 (lit_6804)
//	806B4880: 806B6184 (lit_6804)
//	806B4898: 806B0200 (executeWait__8daE_DT_cFv)
//	806B48A4: 806B0368 (executeCry__8daE_DT_cFv)
//	806B48B0: 806B063C (executeShake__8daE_DT_cFv)
//	806B48BC: 806B07C4 (executeWalk__8daE_DT_cFv)
//	806B48C8: 806B0E9C (executeJump__8daE_DT_cFv)
//	806B48E0: 806B177C (executeDown__8daE_DT_cFv)
//	806B48EC: 806B1B60 (executeSearch__8daE_DT_cFv)
//	806B4904: 806B1BEC (executeDamage__8daE_DT_cFv)
//	806B4910: 806B1D48 (executeBombDamage__8daE_DT_cFv)
//	806B491C: 806B1F78 (executeDeath__8daE_DT_cFv)
//	806B4928: 806B29D4 (executeOpening__8daE_DT_cFv)
//	806B4938: 804061C0 (g_dComIfG_gameInfo)
//	806B493C: 804061C0 (g_dComIfG_gameInfo)
//	806B4954: 806B3B08 (calcCamera__8daE_DT_cFv)
//	806B495C: 806AF5CC (setStepEffect__8daE_DT_cFv)
//	806B4968: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	806B497C: 804061C0 (g_dComIfG_gameInfo)
//	806B4980: 804061C0 (g_dComIfG_gameInfo)
//	806B4988: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	806B4994: 8002D06C (dComIfGp_getReverb__Fi)
//	806B49A4: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	806B49AC: 806B40D8 (calcBoxAndTuba__8daE_DT_cFv)
//	806B49B4: 806AED94 (checkTongueBg__8daE_DT_cFv)
//	806B49C4: 80270B90 (cLib_chaseAngleS__FPsss)
//	806B49D4: 80270B90 (cLib_chaseAngleS__FPsss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::action() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/action__8daE_DT_cFv.s"
}
#pragma pop


/* 806B49F0-806B4B24 0134+00 s=1 e=0 z=0  None .text      mtx_set__8daE_DT_cFv                                         */
//	806B4A08: 806B5CD4 (lit_3792)
//	806B4A0C: 806B5CD4 (lit_3792)
//	806B4A10: 803DD470 (now__14mDoMtx_stack_c)
//	806B4A14: 803DD470 (now__14mDoMtx_stack_c)
//	806B4A24: 803468E8 (PSMTXTrans)
//	806B4A2C: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	806B4A3C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4A4C: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806B4A58: 803DD470 (now__14mDoMtx_stack_c)
//	806B4A5C: 803DD470 (now__14mDoMtx_stack_c)
//	806B4A64: 803464B0 (PSMTXCopy)
//	806B4A6C: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	806B4A74: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	806B4A7C: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	806B4A80: 803DD470 (now__14mDoMtx_stack_c)
//	806B4A84: 803DD470 (now__14mDoMtx_stack_c)
//	806B4A90: 803464B0 (PSMTXCopy)
//	806B4A94: 803DD470 (now__14mDoMtx_stack_c)
//	806B4A98: 803DD470 (now__14mDoMtx_stack_c)
//	806B4AA4: 803464B0 (PSMTXCopy)
//	806B4AB4: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4AB8: 803DD470 (now__14mDoMtx_stack_c)
//	806B4ABC: 803DD470 (now__14mDoMtx_stack_c)
//	806B4ADC: 8000CD64 (transS__14mDoMtx_stack_cFRC4cXyz)
//	806B4AE4: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	806B4AF4: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	806B4AF8: 803DD470 (now__14mDoMtx_stack_c)
//	806B4AFC: 803DD470 (now__14mDoMtx_stack_c)
//	806B4B08: 803464B0 (PSMTXCopy)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::mtx_set() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/mtx_set__8daE_DT_cFv.s"
}
#pragma pop


/* 806B4B24-806B4FD8 04B4+00 s=1 e=0 z=0  None .text      cc_set__8daE_DT_cFv                                          */
//	806B4B34: 803621D4 (_savegpr_27)
//	806B4B3C: 806B5CD4 (lit_3792)
//	806B4B40: 806B5CD4 (lit_3792)
//	806B4B84: 803DD470 (now__14mDoMtx_stack_c)
//	806B4B88: 803DD470 (now__14mDoMtx_stack_c)
//	806B4B8C: 803464B0 (PSMTXCopy)
//	806B4B9C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4BA0: 803DD470 (now__14mDoMtx_stack_c)
//	806B4BA4: 803DD470 (now__14mDoMtx_stack_c)
//	806B4BD0: 803DD470 (now__14mDoMtx_stack_c)
//	806B4BD4: 803DD470 (now__14mDoMtx_stack_c)
//	806B4BD8: 803464B0 (PSMTXCopy)
//	806B4BE8: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4BEC: 803DD470 (now__14mDoMtx_stack_c)
//	806B4BF0: 803DD470 (now__14mDoMtx_stack_c)
//	806B4C1C: 803DD470 (now__14mDoMtx_stack_c)
//	806B4C20: 803DD470 (now__14mDoMtx_stack_c)
//	806B4C24: 803464B0 (PSMTXCopy)
//	806B4C28: 803DD470 (now__14mDoMtx_stack_c)
//	806B4C2C: 803DD470 (now__14mDoMtx_stack_c)
//	806B4C98: 803DD470 (now__14mDoMtx_stack_c)
//	806B4C9C: 803DD470 (now__14mDoMtx_stack_c)
//	806B4CA0: 803464B0 (PSMTXCopy)
//	806B4CB0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4CE8: 8026F708 (SetR__8cM3dGSphFf)
//	806B4CF8: 8026F708 (SetR__8cM3dGSphFf)
//	806B4D08: 8026F708 (SetR__8cM3dGSphFf)
//	806B4D0C: 803DD470 (now__14mDoMtx_stack_c)
//	806B4D10: 803DD470 (now__14mDoMtx_stack_c)
//	806B4D34: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806B4D38: 804061C0 (g_dComIfG_gameInfo)
//	806B4D3C: 804061C0 (g_dComIfG_gameInfo)
//	806B4D4C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806B4D5C: 803DD470 (now__14mDoMtx_stack_c)
//	806B4D60: 803DD470 (now__14mDoMtx_stack_c)
//	806B4D64: 803464B0 (PSMTXCopy)
//	806B4D74: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4DB0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4DBC: 8026F708 (SetR__8cM3dGSphFf)
//	806B4DD0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4DDC: 8026F708 (SetR__8cM3dGSphFf)
//	806B4DF0: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4DFC: 8026F708 (SetR__8cM3dGSphFf)
//	806B4E20: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806B4E2C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806B4E3C: 803DD470 (now__14mDoMtx_stack_c)
//	806B4E40: 803DD470 (now__14mDoMtx_stack_c)
//	806B4E44: 803464B0 (PSMTXCopy)
//	806B4E54: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4E78: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806B4E84: 8026F708 (SetR__8cM3dGSphFf)
//	806B4E90: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806B4EA0: 803DD470 (now__14mDoMtx_stack_c)
//	806B4EA4: 803DD470 (now__14mDoMtx_stack_c)
//	806B4EA8: 803464B0 (PSMTXCopy)
//	806B4EB8: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4EDC: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806B4EE8: 8026F708 (SetR__8cM3dGSphFf)
//	806B4EF4: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806B4F04: 803DD470 (now__14mDoMtx_stack_c)
//	806B4F08: 803DD470 (now__14mDoMtx_stack_c)
//	806B4F0C: 803464B0 (PSMTXCopy)
//	806B4F1C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4F40: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806B4F4C: 8026F708 (SetR__8cM3dGSphFf)
//	806B4F58: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806B4F68: 803DD470 (now__14mDoMtx_stack_c)
//	806B4F6C: 803DD470 (now__14mDoMtx_stack_c)
//	806B4F70: 803464B0 (PSMTXCopy)
//	806B4F80: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	806B4FA4: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	806B4FB0: 8026F708 (SetR__8cM3dGSphFf)
//	806B4FBC: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	806B4FC4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::cc_set() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/cc_set__8daE_DT_cFv.s"
}
#pragma pop


/* 806B4FD8-806B5130 0158+00 s=1 e=0 z=0  None .text      execute__8daE_DT_cFv                                         */
//	806B505C: 804061C0 (g_dComIfG_gameInfo)
//	806B5060: 804061C0 (g_dComIfG_gameInfo)
//	806B506C: 8006FD94 (StopQuake__12dVibration_cFi)
//	806B50E4: 8002DB64 (dComIfGs_isOneZoneSwitch__Fii)
//	806B50FC: 8002DA9C (dComIfGs_onOneZoneSwitch__Fii)
//	806B5104: 806B4724 (action__8daE_DT_cFv)
//	806B510C: 806B49F0 (mtx_set__8daE_DT_cFv)
//	806B5114: 806B4B24 (cc_set__8daE_DT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::execute() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/execute__8daE_DT_cFv.s"
}
#pragma pop


/* 806B5130-806B5150 0020+00 s=2 e=0 z=0  None .text      daE_DT_Execute__FP8daE_DT_c                                  */
//	806B513C: 806B4FD8 (execute__8daE_DT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
asm static void daE_DT_Execute(daE_DT_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/daE_DT_Execute__FP8daE_DT_c.s"
}
#pragma pop


/* 806B5150-806B5158 0008+00 s=1 e=0 z=0  None .text      daE_DT_IsDelete__FP8daE_DT_c                                 */
// True False
//  bool False
//  daE_DT_c* False
// 	 daE_DT_c False
static bool daE_DT_IsDelete(daE_DT_c* param_0) {
	return true;
}


/* 806B5158-806B51F4 009C+00 s=1 e=0 z=0  None .text      _delete__8daE_DT_cFv                                         */
//	806B5170: 806B5ED0 (stringBase0)
//	806B5174: 806B5ED0 (stringBase0)
//	806B5178: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	806B5180: 806B5ED0 (stringBase0)
//	806B5184: 806B5ED0 (stringBase0)
//	806B518C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	806B5194: 806B5ED0 (stringBase0)
//	806B5198: 806B5ED0 (stringBase0)
//	806B51A0: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	806B51B4: 806B629D (struct_806B629C)
//	806B51B8: 806B629D (struct_806B629C)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::_delete() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/_delete__8daE_DT_cFv.s"
}
#pragma pop


/* 806B51F4-806B5214 0020+00 s=1 e=0 z=0  None .text      daE_DT_Delete__FP8daE_DT_c                                   */
//	806B5200: 806B5158 (_delete__8daE_DT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
asm static void daE_DT_Delete(daE_DT_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/daE_DT_Delete__FP8daE_DT_c.s"
}
#pragma pop


/* 806B5214-806B5440 022C+00 s=1 e=0 z=0  None .text      CreateHeap__8daE_DT_cFv                                      */
//	806B5224: 803621D8 (_savegpr_28)
//	806B522C: 806B5ED0 (stringBase0)
//	806B5230: 806B5ED0 (stringBase0)
//	806B5238: 804061C0 (g_dComIfG_gameInfo)
//	806B523C: 804061C0 (g_dComIfG_gameInfo)
//	806B5250: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806B525C: 802CEC4C (__nw__FUl)
//	806B5268: 806B5ED0 (stringBase0)
//	806B526C: 806B5ED0 (stringBase0)
//	806B527C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806B52B4: 806B5CFC (lit_3868)
//	806B52B8: 806B5CFC (lit_3868)
//	806B52C4: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	806B52F8: 806ADBA0 (JointCallBack__8daE_DT_cFP8J3DJointi)
//	806B52FC: 806ADBA0 (JointCallBack__8daE_DT_cFP8J3DJointi)
//	806B532C: 806B5ED0 (stringBase0)
//	806B5330: 806B5ED0 (stringBase0)
//	806B5344: 8003C37C (getRes__14dRes_control_cFPCcPCcP11dRes_info_ci)
//	806B5354: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	806B5370: 806B5ED0 (stringBase0)
//	806B5374: 806B5ED0 (stringBase0)
//	806B5384: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806B5394: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	806B53B8: 806ADD30 (JointCallBackTuba__8daE_DT_cFP8J3DJointi)
//	806B53BC: 806ADD30 (JointCallBackTuba__8daE_DT_cFP8J3DJointi)
//	806B53F0: 806B5ED0 (stringBase0)
//	806B53F4: 806B5ED0 (stringBase0)
//	806B5404: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806B5414: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	806B542C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/CreateHeap__8daE_DT_cFv.s"
}
#pragma pop


/* 806B5440-806B5460 0020+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	806B544C: 806B5214 (CreateHeap__8daE_DT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 806B5460-806B592C 04CC+00 s=1 e=0 z=0  None .text      create__8daE_DT_cFv                                          */
//	806B5470: 803621D4 (_savegpr_27)
//	806B5478: 806B5CD4 (lit_3792)
//	806B547C: 806B5CD4 (lit_3792)
//	806B5498: 80018B64 (__ct__10fopAc_ac_cFv)
//	806B54A0: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	806B54A8: 806B5B7C (__ct__5csXyzFv)
//	806B54AC: 806B5B7C (__ct__5csXyzFv)
//	806B54B0: 806B5B80 (__dt__5csXyzFv)
//	806B54B4: 806B5B80 (__dt__5csXyzFv)
//	806B54C0: 80361D60 (__construct_array)
//	806B54C8: 80075EAC (__ct__12dBgS_AcchCirFv)
//	806B54D4: 800760A0 (__ct__9dBgS_AcchFv)
//	806B54D8: 806B6218 (__vt__12dBgS_ObjAcch)
//	806B54DC: 806B6218 (__vt__12dBgS_ObjAcch)
//	806B54F8: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	806B54FC: 803C3728 (__vt__9cCcD_Stts)
//	806B5500: 803C3728 (__vt__9cCcD_Stts)
//	806B550C: 80083760 (__ct__10dCcD_GSttsFv)
//	806B5510: 803AC2E4 (__vt__9dCcD_Stts)
//	806B5514: 803AC2E4 (__vt__9dCcD_Stts)
//	806B5528: 806B59F8 (__ct__8dCcD_SphFv)
//	806B552C: 806B59F8 (__ct__8dCcD_SphFv)
//	806B5530: 806B592C (__dt__8dCcD_SphFv)
//	806B5534: 806B592C (__dt__8dCcD_SphFv)
//	806B5540: 80361D60 (__construct_array)
//	806B5548: 806B59F8 (__ct__8dCcD_SphFv)
//	806B554C: 806B59F8 (__ct__8dCcD_SphFv)
//	806B5550: 806B592C (__dt__8dCcD_SphFv)
//	806B5554: 806B592C (__dt__8dCcD_SphFv)
//	806B5560: 80361D60 (__construct_array)
//	806B5568: 806B59F8 (__ct__8dCcD_SphFv)
//	806B556C: 806B59F8 (__ct__8dCcD_SphFv)
//	806B5570: 806B592C (__dt__8dCcD_SphFv)
//	806B5574: 806B592C (__dt__8dCcD_SphFv)
//	806B5580: 80361D60 (__construct_array)
//	806B5594: 806B5ED0 (stringBase0)
//	806B5598: 806B5ED0 (stringBase0)
//	806B559C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	806B55B0: 806B5ED0 (stringBase0)
//	806B55B4: 806B5ED0 (stringBase0)
//	806B55BC: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	806B55D0: 806B5ED0 (stringBase0)
//	806B55D4: 806B5ED0 (stringBase0)
//	806B55DC: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	806B55F8: 804061C0 (g_dComIfG_gameInfo)
//	806B55FC: 804061C0 (g_dComIfG_gameInfo)
//	806B560C: 80035360 (isSwitch__10dSv_info_cCFii)
//	806B5620: 804061C0 (g_dComIfG_gameInfo)
//	806B5624: 804061C0 (g_dComIfG_gameInfo)
//	806B5630: 80034934 (isDungeonItem__12dSv_memBit_cCFi)
//	806B5648: 806B5440 (useHeapInit__FP10fopAc_ac_c)
//	806B564C: 806B5440 (useHeapInit__FP10fopAc_ac_c)
//	806B5658: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	806B566C: 806B629D (struct_806B629C)
//	806B5670: 806B629D (struct_806B629C)
//	806B568C: 806B62AC (l_HIO)
//	806B5690: 806B62AC (l_HIO)
//	806B56C0: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	806B56D4: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	806B5700: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	806B5710: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	806B5730: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	806B5738: 806B5F3C (cc_dt_body_src__6E_DT_n)
//	806B573C: 806B5F3C (cc_dt_body_src__6E_DT_n)
//	806B5740: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806B5750: 806B5F3C (cc_dt_body_src__6E_DT_n)
//	806B5754: 806B5F3C (cc_dt_body_src__6E_DT_n)
//	806B5758: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806B5768: 806B5F3C (cc_dt_body_src__6E_DT_n)
//	806B576C: 806B5F3C (cc_dt_body_src__6E_DT_n)
//	806B5770: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806B5780: 806B5F3C (cc_dt_body_src__6E_DT_n)
//	806B5784: 806B5F3C (cc_dt_body_src__6E_DT_n)
//	806B5788: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806B5798: 806B5F7C (cc_dt_tongue_src__6E_DT_n)
//	806B579C: 806B5F7C (cc_dt_tongue_src__6E_DT_n)
//	806B57A0: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806B57B0: 806B5F7C (cc_dt_tongue_src__6E_DT_n)
//	806B57B4: 806B5F7C (cc_dt_tongue_src__6E_DT_n)
//	806B57B8: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806B57E0: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	806B57FC: 806B62AC (l_HIO)
//	806B5800: 806B62AC (l_HIO)
//	806B5814: 804061C0 (g_dComIfG_gameInfo)
//	806B5818: 804061C0 (g_dComIfG_gameInfo)
//	806B5834: 80450C98 (struct_80450C98)
//	806B5838: 80450C98 (struct_80450C98)
//	806B5850: 80450C98 (struct_80450C98)
//	806B5854: 80450C98 (struct_80450C98)
//	806B5858: 80450C98 (struct_80450C98)
//	806B585C: 80450C98 (struct_80450C98)
//	806B5884: 806AE74C (setActionMode__8daE_DT_cFii)
//	806B58B8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	806B58C0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B58C4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	806B58D8: 802AF49C (subBgmStart__8Z2SeqMgrFUl)
//	806B58E8: 8002DA9C (dComIfGs_onOneZoneSwitch__Fii)
//	806B58FC: 806AE74C (setActionMode__8daE_DT_cFii)
//	806B590C: 806B5130 (daE_DT_Execute__FP8daE_DT_c)
//	806B5918: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_DT_c::create() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/create__8daE_DT_cFv.s"
}
#pragma pop


/* 806B592C-806B59F8 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_SphFv                                            */
//	806B594C: 803ABFC0 (__vt__8dCcD_Sph)
//	806B5950: 803ABFC0 (__vt__8dCcD_Sph)
//	806B5970: 803C3540 (__vt__12cCcD_SphAttr)
//	806B5974: 803C3540 (__vt__12cCcD_SphAttr)
//	806B598C: 806B620C (__vt__8cM3dGSph)
//	806B5990: 806B620C (__vt__8cM3dGSph)
//	806B59A0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806B59A4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806B59B4: 806B6200 (__vt__8cM3dGAab)
//	806B59B8: 806B6200 (__vt__8cM3dGAab)
//	806B59C8: 800840E4 (__dt__12dCcD_GObjInfFv)
//	806B59D8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::~dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__dt__8dCcD_SphFv.s"
}
#pragma pop


/* 806B59F8-806B5A7C 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_SphFv                                            */
//	806B5A0C: 80083A28 (__ct__12dCcD_GObjInfFv)
//	806B5A10: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806B5A14: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806B5A1C: 806B6200 (__vt__8cM3dGAab)
//	806B5A20: 806B6200 (__vt__8cM3dGAab)
//	806B5A28: 806B620C (__vt__8cM3dGSph)
//	806B5A2C: 806B620C (__vt__8cM3dGSph)
//	806B5A34: 803C3540 (__vt__12cCcD_SphAttr)
//	806B5A38: 803C3540 (__vt__12cCcD_SphAttr)
//	806B5A48: 803ABFC0 (__vt__8dCcD_Sph)
//	806B5A4C: 803ABFC0 (__vt__8dCcD_Sph)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__ct__8dCcD_SphFv.s"
}
#pragma pop


/* 806B5A7C-806B5AC4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	806B5A94: 806B620C (__vt__8cM3dGSph)
//	806B5A98: 806B620C (__vt__8cM3dGSph)
//	806B5AA8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 806B5AC4-806B5B0C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	806B5ADC: 806B6200 (__vt__8cM3dGAab)
//	806B5AE0: 806B6200 (__vt__8cM3dGAab)
//	806B5AF0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 806B5B0C-806B5B7C 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	806B5B2C: 806B6218 (__vt__12dBgS_ObjAcch)
//	806B5B30: 806B6218 (__vt__12dBgS_ObjAcch)
//	806B5B4C: 80075F94 (__dt__9dBgS_AcchFv)
//	806B5B5C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 806B5B7C-806B5B80 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 806B5B80-806B5BBC 003C+00 s=1 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	806B5BA0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__dt__5csXyzFv.s"
}
#pragma pop


/* 806B5BBC-806B5BDC 0020+00 s=1 e=0 z=0  None .text      daE_DT_Create__FP8daE_DT_c                                   */
//	806B5BC8: 806B5460 (create__8daE_DT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_DT_c* False
// 	 daE_DT_c False
asm static void daE_DT_Create(daE_DT_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/daE_DT_Create__FP8daE_DT_c.s"
}
#pragma pop


/* 806B5BDC-806B5C24 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_DT_HIO_cFv                                       */
//	806B5BF4: 806B6248 (__vt__12daE_DT_HIO_c)
//	806B5BF8: 806B6248 (__vt__12daE_DT_HIO_c)
//	806B5C08: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_DT_HIO_c::~daE_DT_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__dt__12daE_DT_HIO_cFv.s"
}
#pragma pop


/* 806B5C24-806B5C7C 0058+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_dt_cpp                                         */
//	806B5C34: 806B6260 (lit_1109)
//	806B5C38: 806B6260 (lit_1109)
//	806B5C40: 806AD90C (__ct__12daE_DT_HIO_cFv)
//	806B5C44: 806B5BDC (__dt__12daE_DT_HIO_cFv)
//	806B5C48: 806B5BDC (__dt__12daE_DT_HIO_cFv)
//	806B5C50: 806AD898 (__register_global_object)
//	806B5C58: 806AE56C (__dt__4cXyzFv)
//	806B5C5C: 806AE56C (__dt__4cXyzFv)
//	806B5C64: 806AD898 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_dt_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/__sinit_d_a_e_dt_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_806B5C24 = (void*)__sinit_d_a_e_dt_cpp;
#pragma pop


/* 806B5C7C-806B5C84 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	806B5C80: 806B5B0C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_806B5C7C() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/func_806B5C7C.s"
}
#pragma pop


/* 806B5C84-806B5C8C 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	806B5C88: 806B5B0C (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_806B5C84() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/func_806B5C84.s"
}
#pragma pop


/* 806B5C8C-806B5CC0 0034+00 s=1 e=0 z=0  None .text      Bank__9dCamera_cFv                                           */
//	806B5CA8: 80271174 (__pl__7cSAngleCFRC7cSAngle)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dCamera_c::Bank() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_dt/d_a_e_dt/Bank__9dCamera_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 806B634C-806B6350 0004+00 s=0 e=0 z=0  None .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_806B634C[4];

/* 806B6350-806B6354 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_806B6350[4];

/* 806B6354-806B6358 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_806B6354[4];

/* 806B6358-806B635C 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_806B6358[4];

/* 806B635C-806B6360 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_806B635C[4];

/* 806B6360-806B6364 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_806B6360[4];

/* 806B6364-806B6368 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_806B6364[4];

/* 806B6368-806B636C 0004+00 s=0 e=0 z=0  None .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_806B6368[4];

/* 806B636C-806B6370 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_806B636C[4];

/* 806B6370-806B6374 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_806B6370[4];

/* 806B6374-806B6378 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_806B6374[4];

/* 806B6378-806B637C 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_806B6378[4];

/* 806B637C-806B6380 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_806B637C[4];

/* 806B6380-806B6384 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_806B6380[4];

/* 806B6384-806B6388 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_806B6384[4];

/* 806B6388-806B638C 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_806B6388[4];

/* 806B638C-806B6390 0004+00 s=0 e=0 z=0  None .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_806B638C[4];

/* 806B6390-806B6394 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_806B6390[4];

/* 806B6394-806B6398 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_806B6394[4];

/* 806B6398-806B639C 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_806B6398[4];

/* 806B639C-806B63A0 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_806B639C[4];

/* 806B63A0-806B63A4 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_806B63A0[4];

/* 806B63A4-806B63A8 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_806B63A4[4];

/* 806B63A8-806B63AC 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_806B63A8[4];

/* 806B63AC-806B63B0 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_806B63AC[4];

