// 
// Generated By: dol2asm
// Translation Unit: d_a_e_bs
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_bs/d_a_e_bs.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
	/* 80011310 */ // False False
void stopZelAnime();
};

struct Vec {
};

struct mDoExt_McaMorf {
	/* 8000FC4C */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  int False
//  void* False
// 	 void False
//  u32 False
//  u32 False
mDoExt_McaMorf(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, int, void*, u32, u32);
	/* 8001037C */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  void* False
// 	 void False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32, void*);
	/* 800105C8 */ // False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
void play(Vec*, u32, s8);
	/* 80010680 */ // False False
void entryDL();
	/* 800106AC */ // False False
void modelCalc();
};

struct fopEn_enemy_c {
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct e_bs_class {
};

struct daE_BS_HIO_c {
	/* 8068E12C */ // True False
daE_BS_HIO_c();
	/* 8069091C */ // True False
~daE_BS_HIO_c();
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct csXyz {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct J3DModel {
};

struct dDlst_shadowControl_c {
	/* 80055F1C */ // False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
void addReal(u32, J3DModel*);
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 80084A78 */ // False False
//  cXyz& False
// 	 cXyz False
void StartCAt(cXyz&);
	/* 80084AC4 */ // False False
//  cXyz& False
// 	 cXyz False
void MoveCAt(cXyz&);
	/* 80690648 */ // True False
~dCcD_Sph();
	/* 80690714 */ // True False
dCcD_Sph();
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 80690798 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 800840E4 */ // False False
~dCcD_GObjInf();
	/* 800842C0 */ // False False
void ChkAtHit();
	/* 80084358 */ // False False
void GetAtHitObj();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
	/* 80084658 */ // False False
void ChkCoHit();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 806907F4 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80690864 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 806905B8 */ // True False
~cM3dGSph();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80690600 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
	/* 80263A48 */ // False False
void GetAc();
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 806908D4 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_LinChk {
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
};

struct _GXTexObj {
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C1B7C */ // False False
//  bool False
void setLinkSearch(bool);
	/* 802C1B90 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void setEnemyName(char const*);
};

struct J3DJoint {
};

struct J3DFrameCtrl {
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
};

// 
// Forward References:
// 

// True False
//  e_bs_class* False
// 	 e_bs_class False
//  int False
static void wepon_anm_init(e_bs_class*, int);
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void anm_init(e_bs_class*, int, f32, u8, f32);
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
static void nodeCallBack(J3DJoint*, int);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void daE_BS_Draw(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void player_way_check(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  f32 False
//  f32 False
static void way_bg_check(e_bs_class*, f32, f32);
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  f32 False
//  s16 False
static void pl_check(e_bs_class*, f32, s16);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void e_bs_appear(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void e_bs_normal(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void e_bs_fight_run(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void at_hit_check(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void e_bs_attack(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void e_bs_damage(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void damage_check(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void action(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void anm_se_set(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void daE_BS_Execute(e_bs_class*);
// True False
//  bool False
//  e_bs_class* False
// 	 e_bs_class False
static bool daE_BS_IsDelete(e_bs_class*);
// True False
//  e_bs_class* False
// 	 e_bs_class False
static void daE_BS_Delete(e_bs_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daE_BS_Create(fopAc_ac_c*);
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
static void setMidnaBindEffect(fopEn_enemy_c*, Z2CreatureEnemy*, cXyz*, cXyz*);

// True False
extern "C" void __ct__12daE_BS_HIO_cFv();
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  int False
extern "C" static void wepon_anm_init__FP10e_bs_classi();
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void anm_init__FP10e_bs_classifUcf();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" static void nodeCallBack__FP8J3DJointi();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void daE_BS_Draw__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void player_way_check__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  f32 False
//  f32 False
extern "C" static void way_bg_check__FP10e_bs_classff();
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  f32 False
//  s16 False
extern "C" static void pl_check__FP10e_bs_classfs();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void e_bs_appear__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void e_bs_normal__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void e_bs_fight_run__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void at_hit_check__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void e_bs_attack__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void e_bs_damage__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void damage_check__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void action__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void anm_se_set__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void daE_BS_Execute__FP10e_bs_class();
// True False
//  bool False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static bool daE_BS_IsDelete__FP10e_bs_class();
// True False
//  e_bs_class* False
// 	 e_bs_class False
extern "C" static void daE_BS_Delete__FP10e_bs_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daE_BS_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__8dCcD_SphFv();
// True False
extern "C" void __ct__8dCcD_SphFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__12daE_BS_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_bs_cpp();
// True False
extern "C" static void func_806909A0();
// True False
extern "C" static void func_806909A8();
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" static void setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz();
extern "C" extern u8 const lit_3791[8];
extern "C" extern u8 const lit_3792[8];
extern "C" extern u8 const lit_3793[8];
extern "C" extern u32 const lit_3794;
extern "C" extern u32 const lit_3809;
extern "C" extern u32 const lit_3810;
extern "C" extern u32 const lit_3811;
extern "C" extern u32 const lit_3812;
extern "C" extern u32 const lit_3826;
extern "C" extern u32 const lit_3896;
extern "C" extern u32 const lit_3897;
extern "C" extern u32 const lit_3996;
extern "C" extern u32 const lit_4040;
extern "C" extern u32 const lit_4041;
extern "C" extern u32 const lit_4042;
extern "C" extern u32 const lit_4043;
extern "C" extern u32 const lit_4123;
extern "C" extern u32 const lit_4124;
extern "C" extern u32 const lit_4125;
extern "C" extern u32 const lit_4126;
extern "C" extern u32 const lit_4127;
extern "C" extern u32 const lit_4128;
extern "C" extern u32 const lit_4129;
extern "C" extern u32 const lit_4130;
extern "C" extern u32 const lit_4431;
extern "C" extern u32 const lit_4432;
extern "C" extern u32 const lit_4433;
extern "C" extern u32 const lit_4434;
extern "C" extern u32 const lit_4435;
extern "C" extern u32 const lit_4436;
extern "C" extern u32 const lit_4437;
extern "C" extern u32 const lit_4438;
extern "C" extern u32 const lit_4491;
extern "C" extern u32 const lit_4492;
extern "C" extern u32 const lit_4493;
extern "C" extern u32 const lit_4494;
extern "C" extern u32 const lit_4495;
extern "C" extern u32 const lit_4496;
extern "C" extern u32 const lit_4497;
extern "C" extern u32 const lit_4599;
extern "C" extern u32 const lit_4600;
extern "C" extern u32 const lit_4601;
extern "C" extern u32 const lit_4602;
extern "C" extern u32 const lit_4791;
extern "C" extern u32 const lit_4792;
extern "C" extern u32 const lit_4793;
extern "C" extern u8 const lit_4795[8];
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_80690EE4[8];
extern "C" extern u8 data_80690EEC[8];
extern "C" extern u8 data_80690EF4[6 + 2 /* padding */];
extern "C" extern void* g_profile_E_BS[12];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12daE_BS_HIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleX(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  u8 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32* False
// 	 f32 False
//  f32* False
// 	 f32 False
void fopAcM_createItemFromEnemyID(u8, cXyz const*, int, int, csXyz const*, cXyz const*, f32*, f32*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  f32 False
void fopAcM_otoCheck(fopAc_ac_c const*, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_otherBgCheck(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void MtxPosition(cXyz*, cXyz*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  int False
//  void* False
// 	 void False
//  u32 False
//  u32 False
extern "C" void __ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  void* False
// 	 void False
extern "C" void setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv();
// False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
extern "C" void play__14mDoExt_McaMorfFP3VecUlSc();
// False False
extern "C" void entryDL__14mDoExt_McaMorfFv();
// False False
extern "C" void modelCalc__14mDoExt_McaMorfFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleX__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  u8 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32* False
// 	 f32 False
//  f32* False
// 	 f32 False
extern "C" void fopAcM_createItemFromEnemyID__FUcPC4cXyziiPC5csXyzPC4cXyzPfPf();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  f32 False
extern "C" void fopAcM_otoCheck__FPC10fopAc_ac_cf();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  J3DModel* False
// 	 J3DModel False
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void __dt__12dCcD_GObjInfFv();
// False False
extern "C" void ChkAtHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetAtHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void StartCAt__8dCcD_SphFR4cXyz();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void MoveCAt__8dCcD_SphFR4cXyz();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
extern "C" void GetAc__8cCcD_ObjFv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void MtxPosition__FP4cXyzP4cXyz();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  bool False
extern "C" void setLinkSearch__15Z2CreatureEnemyFb();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void setEnemyName__15Z2CreatureEnemyFPCc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80690DD8-80690DDC 0004+00 s=13 e=0 z=0  None .rodata    @3788                                                        */
SECTION_RODATA static u32 const lit_3788 = 0x42C80000;

/* 80690EC4-80690ED0 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80690ED0-80690EE4 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80690EE4-80690EEC 0008+00 s=0 e=0 z=0  None .data      e_prim$3667                                                  */
SECTION_DATA u8 data_80690EE4[8] = {
	0xFF, 0x78, 0x00, 0x00, 0xFF, 0x64, 0x78, 0x00,
};

/* 80690EEC-80690EF4 0008+00 s=0 e=0 z=0  None .data      e_env$3668                                                   */
SECTION_DATA u8 data_80690EEC[8] = {
	0x5A, 0x2D, 0x2D, 0x00, 0x3C, 0x1E, 0x1E, 0x00,
};

/* 80690EF4-80690EFC 0006+02 s=0 e=0 z=0  None .data      eff_id$3676                                                  */
SECTION_DATA u8 data_80690EF4[6 + 2 /* padding */] = {
	0x02, 0x9D, 0x02, 0x9E, 0x02, 0x9F,
	/* padding */
	0x00, 0x00,
};

/* 80690EFC-80690F00 0004+00 s=1 e=0 z=0  None .data      ap_name$3966                                                 */
SECTION_DATA static u8 ap_name_3966[4] = {
	0x81, 0xD8, 0x81, 0xD9,
};

/* 80690F00-80690F40 0040+00 s=1 e=0 z=0  None .data      @4131                                                        */
SECTION_DATA static void* lit_4131[16] = {
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x54),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x94),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x27C),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x27C),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x27C),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x27C),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x27C),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x27C),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x27C),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x27C),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0xAC),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0xD8),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x10C),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x1C4),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x27C),
	(void*)(((char*)e_bs_fight_run__FP10e_bs_class)+0x248),
};

/* 80690F40-80690F48 0006+02 s=1 e=0 z=0  None .data      ap_name$4233                                                 */
SECTION_DATA static u8 ap_name_4233[6 + 2 /* padding */] = {
	0x81, 0xDA, 0x81, 0xDB, 0x81, 0xDC,
	/* padding */
	0x00, 0x00,
};

/* 80690F48-80690F88 0040+00 s=1 e=0 z=0  None .data      cc_sph_src$4691                                              */
SECTION_DATA static u8 cc_sph_src[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 80690F88-80690FC8 0040+00 s=1 e=0 z=0  None .data      at_sph_src$4692                                              */
SECTION_DATA static u8 at_sph_src[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
};

/* 80690FC8-80690FE8 0020+00 s=1 e=0 z=0  None .data      l_daE_BS_Method                                              */
SECTION_DATA static void* l_daE_BS_Method[8] = {
	(void*)daE_BS_Create__FP10fopAc_ac_c,
	(void*)daE_BS_Delete__FP10e_bs_class,
	(void*)daE_BS_Execute__FP10e_bs_class,
	(void*)daE_BS_IsDelete__FP10e_bs_class,
	(void*)daE_BS_Draw__FP10e_bs_class,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80690FE8-80691018 0030+00 s=0 e=0 z=1  None .data      g_profile_E_BS                                               */
SECTION_DATA void* g_profile_E_BS[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01B70000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000CFC,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x007C0000,
	(void*)&l_daE_BS_Method,
	(void*)0x10040100,
	(void*)0x02000000,
};

/* 80691018-80691024 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80691024-80691030 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80691030-8069103C 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 8069103C-80691048 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80691048-80691054 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80691054-80691078 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_806909A8,
	(void*)NULL,
	(void*)NULL,
	(void*)func_806909A0,
};

/* 80691078-80691084 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_BS_HIO_c                                         */
SECTION_DATA void* __vt__12daE_BS_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_BS_HIO_cFv,
};

/* 8068E12C-8068E178 004C+00 s=1 e=0 z=0  None .text      __ct__12daE_BS_HIO_cFv                                       */
//	8068E12C: 80690DD8 (lit_3788)
//	8068E130: 80690DD8 (lit_3788)
//	8068E134: 80691078 (__vt__12daE_BS_HIO_c)
//	8068E138: 80691078 (__vt__12daE_BS_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_BS_HIO_c::daE_BS_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__ct__12daE_BS_HIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80690DDC-80690DE0 0004+00 s=3 e=0 z=0  None .rodata    @3789                                                        */
SECTION_RODATA static u8 const lit_3789[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80690DE0-80690DE8 0004+04 s=2 e=0 z=0  None .rodata    @3790                                                        */
SECTION_RODATA static u32 const lit_3790[1 + 1 /* padding */] = {
	0x3F800000,
	/* padding */
	0x00000000,
};

/* 80690DE8-80690DF0 0008+00 s=0 e=0 z=0  None .rodata    @3791                                                        */
SECTION_RODATA u8 const lit_3791[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80690DF0-80690DF8 0008+00 s=0 e=0 z=0  None .rodata    @3792                                                        */
SECTION_RODATA u8 const lit_3792[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80690DF8-80690E00 0008+00 s=0 e=0 z=0  None .rodata    @3793                                                        */
SECTION_RODATA u8 const lit_3793[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80690E00-80690E04 0004+00 s=0 e=0 z=0  None .rodata    @3794                                                        */
SECTION_RODATA u32 const lit_3794 = 0x3C23D70A;

/* 80690E04-80690E08 0004+00 s=0 e=0 z=0  None .rodata    @3809                                                        */
SECTION_RODATA u32 const lit_3809 = 0x40400000;

/* 80690E08-80690E0C 0004+00 s=0 e=0 z=0  None .rodata    @3810                                                        */
SECTION_RODATA u32 const lit_3810 = 0x453B8000;

/* 80690E0C-80690E10 0004+00 s=0 e=0 z=0  None .rodata    @3811                                                        */
SECTION_RODATA u32 const lit_3811 = 0x40C00000;

/* 80690E10-80690E14 0004+00 s=0 e=0 z=0  None .rodata    @3812                                                        */
SECTION_RODATA u32 const lit_3812 = 0x43480000;

/* 80690E14-80690E18 0004+00 s=0 e=0 z=0  None .rodata    @3826                                                        */
SECTION_RODATA u32 const lit_3826 = 0x40A00000;

/* 80690E18-80690E1C 0004+00 s=1 e=0 z=0  None .rodata    @3827                                                        */
SECTION_RODATA static u32 const lit_3827 = 0xBF800000;

/* 80690E1C-80690E20 0004+00 s=0 e=0 z=0  None .rodata    @3896                                                        */
SECTION_RODATA u32 const lit_3896 = 0x42480000;

/* 80690E20-80690E24 0004+00 s=0 e=0 z=0  None .rodata    @3897                                                        */
SECTION_RODATA u32 const lit_3897 = 0x44160000;

/* 80690E24-80690E28 0004+00 s=0 e=0 z=0  None .rodata    @3996                                                        */
SECTION_RODATA u32 const lit_3996 = 0x41A00000;

/* 80690E28-80690E2C 0004+00 s=0 e=0 z=0  None .rodata    @4040                                                        */
SECTION_RODATA u32 const lit_4040 = 0x47000000;

/* 80690E2C-80690E30 0004+00 s=0 e=0 z=0  None .rodata    @4041                                                        */
SECTION_RODATA u32 const lit_4041 = 0x461C4000;

/* 80690E30-80690E34 0004+00 s=0 e=0 z=0  None .rodata    @4042                                                        */
SECTION_RODATA u32 const lit_4042 = 0x41200000;

/* 80690E34-80690E38 0004+00 s=0 e=0 z=0  None .rodata    @4043                                                        */
SECTION_RODATA u32 const lit_4043 = 0x44FA0000;

/* 80690E38-80690E3C 0004+00 s=0 e=0 z=0  None .rodata    @4123                                                        */
SECTION_RODATA u32 const lit_4123 = 0x41700000;

/* 80690E3C-80690E40 0004+00 s=0 e=0 z=0  None .rodata    @4124                                                        */
SECTION_RODATA u32 const lit_4124 = 0x40000000;

/* 80690E40-80690E44 0004+00 s=0 e=0 z=0  None .rodata    @4125                                                        */
SECTION_RODATA u32 const lit_4125 = 0x3DCCCCCD;

/* 80690E44-80690E48 0004+00 s=0 e=0 z=0  None .rodata    @4126                                                        */
SECTION_RODATA u32 const lit_4126 = 0x3FC00000;

/* 80690E48-80690E4C 0004+00 s=0 e=0 z=0  None .rodata    @4127                                                        */
SECTION_RODATA u32 const lit_4127 = 0x41F00000;

/* 80690E4C-80690E50 0004+00 s=0 e=0 z=0  None .rodata    @4128                                                        */
SECTION_RODATA u32 const lit_4128 = 0x3EB33333;

/* 80690E50-80690E54 0004+00 s=0 e=0 z=0  None .rodata    @4129                                                        */
SECTION_RODATA u32 const lit_4129 = 0xBFC00000;

/* 80690E54-80690E58 0004+00 s=0 e=0 z=0  None .rodata    @4130                                                        */
SECTION_RODATA u32 const lit_4130 = 0x3F000000;

/* 80690E58-80690E5C 0004+00 s=0 e=0 z=0  None .rodata    @4431                                                        */
SECTION_RODATA u32 const lit_4431 = 0xC0A00000;

/* 80690E5C-80690E60 0004+00 s=0 e=0 z=0  None .rodata    @4432                                                        */
SECTION_RODATA u32 const lit_4432 = 0xC2700000;

/* 80690E60-80690E64 0004+00 s=0 e=0 z=0  None .rodata    @4433                                                        */
SECTION_RODATA u32 const lit_4433 = 0x3E4CCCCD;

/* 80690E64-80690E68 0004+00 s=0 e=0 z=0  None .rodata    @4434                                                        */
SECTION_RODATA u32 const lit_4434 = 0x40E00000;

/* 80690E68-80690E6C 0004+00 s=0 e=0 z=0  None .rodata    @4435                                                        */
SECTION_RODATA u32 const lit_4435 = 0x3E99999A;

/* 80690E6C-80690E70 0004+00 s=0 e=0 z=0  None .rodata    @4436                                                        */
SECTION_RODATA u32 const lit_4436 = 0x451C4000;

/* 80690E70-80690E74 0004+00 s=0 e=0 z=0  None .rodata    @4437                                                        */
SECTION_RODATA u32 const lit_4437 = 0xC3160000;

/* 80690E74-80690E78 0004+00 s=0 e=0 z=0  None .rodata    @4438                                                        */
SECTION_RODATA u32 const lit_4438 = 0x457A0000;

/* 80690E78-80690E7C 0004+00 s=0 e=0 z=0  None .rodata    @4491                                                        */
SECTION_RODATA u32 const lit_4491 = 0x42180000;

/* 80690E7C-80690E80 0004+00 s=0 e=0 z=0  None .rodata    @4492                                                        */
SECTION_RODATA u32 const lit_4492 = 0x42580000;

/* 80690E80-80690E84 0004+00 s=0 e=0 z=0  None .rodata    @4493                                                        */
SECTION_RODATA u32 const lit_4493 = 0x41100000;

/* 80690E84-80690E88 0004+00 s=0 e=0 z=0  None .rodata    @4494                                                        */
SECTION_RODATA u32 const lit_4494 = 0x41600000;

/* 80690E88-80690E8C 0004+00 s=0 e=0 z=0  None .rodata    @4495                                                        */
SECTION_RODATA u32 const lit_4495 = 0x41E80000;

/* 80690E8C-80690E90 0004+00 s=0 e=0 z=0  None .rodata    @4496                                                        */
SECTION_RODATA u32 const lit_4496 = 0x41800000;

/* 80690E90-80690E94 0004+00 s=0 e=0 z=0  None .rodata    @4497                                                        */
SECTION_RODATA u32 const lit_4497 = 0x41980000;

/* 80690E94-80690E98 0004+00 s=0 e=0 z=0  None .rodata    @4599                                                        */
SECTION_RODATA u32 const lit_4599 = 0xC8435000;

/* 80690E98-80690E9C 0004+00 s=0 e=0 z=0  None .rodata    @4600                                                        */
SECTION_RODATA u32 const lit_4600 = 0xC8127C00;

/* 80690E9C-80690EA0 0004+00 s=0 e=0 z=0  None .rodata    @4601                                                        */
SECTION_RODATA u32 const lit_4601 = 0x420C0000;

/* 80690EA0-80690EA4 0004+00 s=0 e=0 z=0  None .rodata    @4602                                                        */
SECTION_RODATA u32 const lit_4602 = 0x42F00000;

/* 80690EA4-80690EA8 0004+00 s=0 e=0 z=0  None .rodata    @4791                                                        */
SECTION_RODATA u32 const lit_4791 = 0x43FA0000;

/* 80690EA8-80690EAC 0004+00 s=0 e=0 z=0  None .rodata    @4792                                                        */
SECTION_RODATA u32 const lit_4792 = 0x42A00000;

/* 80690EAC-80690EB0 0004+00 s=0 e=0 z=0  None .rodata    @4793                                                        */
SECTION_RODATA u32 const lit_4793 = 0x477FFF00;

/* 80690EB0-80690EB8 0008+00 s=0 e=0 z=0  None .rodata    @4795                                                        */
SECTION_RODATA u8 const lit_4795[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80690EB8-80690EC2 000A+00 s=5 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80690EB8 = "E_BS";
SECTION_DEAD char const* const stringBase_80690EBD = "E_bs";
#pragma pop

/* 8068E178-8068E1F4 007C+00 s=1 e=0 z=0  None .text      wepon_anm_init__FP10e_bs_classi                              */
//	8068E190: 80690DD8 (lit_3788)
//	8068E194: 80690DD8 (lit_3788)
//	8068E198: 80690EB8 (stringBase0)
//	8068E19C: 80690EB8 (stringBase0)
//	8068E1A0: 804061C0 (g_dComIfG_gameInfo)
//	8068E1A4: 804061C0 (g_dComIfG_gameInfo)
//	8068E1B4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8068E1D8: 8001037C (setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  int False
asm static void wepon_anm_init(e_bs_class* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/wepon_anm_init__FP10e_bs_classi.s"
}
#pragma pop


/* 8068E1F4-8068E2D4 00E0+00 s=5 e=0 z=0  None .text      anm_init__FP10e_bs_classifUcf                                */
//	8068E214: 803621DC (_savegpr_29)
//	8068E22C: 80690EB8 (stringBase0)
//	8068E230: 80690EB8 (stringBase0)
//	8068E234: 804061C0 (g_dComIfG_gameInfo)
//	8068E238: 804061C0 (g_dComIfG_gameInfo)
//	8068E248: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8068E260: 80690DDC (lit_3789)
//	8068E264: 80690DDC (lit_3789)
//	8068E268: 80690E18 (lit_3827)
//	8068E26C: 80690E18 (lit_3827)
//	8068E270: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	8068E298: 8068E178 (wepon_anm_init__FP10e_bs_classi)
//	8068E2A8: 8068E178 (wepon_anm_init__FP10e_bs_classi)
//	8068E2C0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void anm_init(e_bs_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/anm_init__FP10e_bs_classifUcf.s"
}
#pragma pop


/* 8068E2D4-8068E3D4 0100+00 s=1 e=0 z=0  None .text      nodeCallBack__FP8J3DJointi                                   */
//	8068E2E4: 803621D8 (_savegpr_28)
//	8068E2F4: 80434AC8 (j3dSys)
//	8068E2F8: 80434AC8 (j3dSys)
//	8068E31C: 80450768 (calc_mtx)
//	8068E320: 80450768 (calc_mtx)
//	8068E328: 803464B0 (PSMTXCopy)
//	8068E334: 80450768 (calc_mtx)
//	8068E338: 80450768 (calc_mtx)
//	8068E344: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8068E348: 80450768 (calc_mtx)
//	8068E34C: 80450768 (calc_mtx)
//	8068E364: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8068E368: 80450768 (calc_mtx)
//	8068E36C: 80450768 (calc_mtx)
//	8068E380: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	8068E384: 80450768 (calc_mtx)
//	8068E388: 80450768 (calc_mtx)
//	8068E39C: 803464B0 (PSMTXCopy)
//	8068E3A0: 80450768 (calc_mtx)
//	8068E3A4: 80450768 (calc_mtx)
//	8068E3AC: 80434BE4 (mCurrentMtx__6J3DSys)
//	8068E3B0: 80434BE4 (mCurrentMtx__6J3DSys)
//	8068E3B4: 803464B0 (PSMTXCopy)
//	8068E3C0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm static void nodeCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/nodeCallBack__FP8J3DJointi.s"
}
#pragma pop


/* 8068E3D4-8068E4F0 011C+00 s=1 e=0 z=0  None .text      daE_BS_Draw__FP10e_bs_class                                  */
//	8068E3E4: 803621D8 (_savegpr_28)
//	8068E3EC: 80690DD8 (lit_3788)
//	8068E3F0: 80690DD8 (lit_3788)
//	8068E3FC: 8042CA54 (g_env_light)
//	8068E400: 8042CA54 (g_env_light)
//	8068E410: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	8068E414: 8042CA54 (g_env_light)
//	8068E418: 8042CA54 (g_env_light)
//	8068E424: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	8068E42C: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	8068E438: 8042CA54 (g_env_light)
//	8068E43C: 8042CA54 (g_env_light)
//	8068E448: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	8068E450: 80010680 (entryDL__14mDoExt_McaMorfFv)
//	8068E4AC: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	8068E4B0: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	8068E4B4: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	8068E4BC: 804061C0 (g_dComIfG_gameInfo)
//	8068E4C0: 804061C0 (g_dComIfG_gameInfo)
//	8068E4D0: 80055F1C (addReal__21dDlst_shadowControl_cFUlP8J3DModel)
//	8068E4DC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void daE_BS_Draw(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/daE_BS_Draw__FP10e_bs_class.s"
}
#pragma pop


/* 8068E4F0-8068E534 0044+00 s=1 e=0 z=0  None .text      player_way_check__FP10e_bs_class                             */
//	8068E4F0: 804061C0 (g_dComIfG_gameInfo)
//	8068E4F4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void player_way_check(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/player_way_check__FP10e_bs_class.s"
}
#pragma pop


/* 8068E534-8068E644 0110+00 s=1 e=0 z=0  None .text      way_bg_check__FP10e_bs_classff                               */
//	8068E564: 80077C68 (__ct__11dBgS_LinChkFv)
//	8068E588: 80450768 (calc_mtx)
//	8068E58C: 80450768 (calc_mtx)
//	8068E598: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8068E59C: 80690DDC (lit_3789)
//	8068E5A0: 80690DDC (lit_3789)
//	8068E5B8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8068E5C8: 80347090 (PSVECAdd)
//	8068E5DC: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8068E5E0: 804061C0 (g_dComIfG_gameInfo)
//	8068E5E4: 804061C0 (g_dComIfG_gameInfo)
//	8068E5F0: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	8068E604: 80077CDC (__dt__11dBgS_LinChkFv)
//	8068E618: 80077CDC (__dt__11dBgS_LinChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  f32 False
//  f32 False
asm static void way_bg_check(e_bs_class* param_0, f32 param_1, f32 param_2) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/way_bg_check__FP10e_bs_classff.s"
}
#pragma pop


/* 8068E644-8068E708 00C4+00 s=2 e=0 z=0  None .text      pl_check__FP10e_bs_classfs                                   */
//	8068E654: 803621DC (_savegpr_29)
//	8068E65C: 804061C0 (g_dComIfG_gameInfo)
//	8068E660: 804061C0 (g_dComIfG_gameInfo)
//	8068E6A4: 8001CDFC (fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8068E6C8: 80084658 (ChkCoHit__12dCcD_GObjInfFv)
//	8068E6F4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
//  f32 False
//  s16 False
asm static void pl_check(e_bs_class* param_0, f32 param_1, s16 param_2) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/pl_check__FP10e_bs_classfs.s"
}
#pragma pop


/* 8068E708-8068E8C4 01BC+00 s=1 e=0 z=0  None .text      e_bs_appear__FP10e_bs_class                                  */
//	8068E718: 803621D0 (_savegpr_26)
//	8068E720: 80690DD8 (lit_3788)
//	8068E724: 80690DD8 (lit_3788)
//	8068E768: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068E778: 80267954 (cM_rndF__Ff)
//	8068E7D8: 804061C0 (g_dComIfG_gameInfo)
//	8068E7DC: 804061C0 (g_dComIfG_gameInfo)
//	8068E7E0: 80690EFC (ap_name_3966)
//	8068E7E4: 80690EFC (ap_name_3966)
//	8068E828: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8068E8B0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void e_bs_appear(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/e_bs_appear__FP10e_bs_class.s"
}
#pragma pop


/* ############################################################################################## */
/* 80691090-80691094 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_80691090[4];

/* 80691094-806910A0 000C+00 s=1 e=0 z=0  None .bss       @3804                                                        */
static u8 lit_3804[12];

/* 806910A0-806910C0 0020+00 s=6 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[32];

/* 8068E8C4-8068EB50 028C+00 s=1 e=0 z=0  None .text      e_bs_normal__FP10e_bs_class                                  */
//	8068E8DC: 803621DC (_savegpr_29)
//	8068E8E4: 80690DD8 (lit_3788)
//	8068E8E8: 80690DD8 (lit_3788)
//	8068E924: 8068E534 (way_bg_check__FP10e_bs_classff)
//	8068E934: 8026798C (cM_rndFX__Ff)
//	8068E95C: 8026798C (cM_rndFX__Ff)
//	8068E978: 8026798C (cM_rndFX__Ff)
//	8068E994: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8068E9B0: 80267674 (cM_atan2s__Fff)
//	8068E9FC: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068EA0C: 80267954 (cM_rndF__Ff)
//	8068EA34: 806910A0 (l_HIO)
//	8068EA38: 806910A0 (l_HIO)
//	8068EA50: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068EA78: 8068E534 (way_bg_check__FP10e_bs_classff)
//	8068EA90: 80267954 (cM_rndF__Ff)
//	8068EAC0: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068EAD4: 8026FA3C (cLib_addCalc2__FPffff)
//	8068EAE0: 8001CC5C (fopAcM_otoCheck__FPC10fopAc_ac_cf)
//	8068EB0C: 8068E644 (pl_check__FP10e_bs_classfs)
//	8068EB3C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void e_bs_normal(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/e_bs_normal__FP10e_bs_class.s"
}
#pragma pop


/* 8068EB50-8068EF2C 03DC+00 s=2 e=0 z=0  None .text      e_bs_fight_run__FP10e_bs_class                               */
//	8068EB70: 80690DD8 (lit_3788)
//	8068EB74: 80690DD8 (lit_3788)
//	8068EB8C: 80690F00 (lit_4131)
//	8068EB90: 80690F00 (lit_4131)
//	8068EBB4: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068EBBC: 80267954 (cM_rndF__Ff)
//	8068EC00: 8026798C (cM_rndFX__Ff)
//	8068EC1C: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068EC28: 806910A0 (l_HIO)
//	8068EC2C: 806910A0 (l_HIO)
//	8068EC5C: 806910A0 (l_HIO)
//	8068EC60: 806910A0 (l_HIO)
//	8068EC9C: 80267954 (cM_rndF__Ff)
//	8068ECC8: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068ECDC: 80267954 (cM_rndF__Ff)
//	8068ED0C: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068ED14: 806910A0 (l_HIO)
//	8068ED18: 806910A0 (l_HIO)
//	8068ED38: 80267954 (cM_rndF__Ff)
//	8068ED60: 80267954 (cM_rndF__Ff)
//	8068ED90: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068EDAC: 806910A0 (l_HIO)
//	8068EDB0: 806910A0 (l_HIO)
//	8068EDDC: 8026FA3C (cLib_addCalc2__FPffff)
//	8068EDFC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068EE14: 8068E644 (pl_check__FP10e_bs_classfs)
//	8068EE40: 80267954 (cM_rndF__Ff)
//	8068EE70: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068EE90: 8068E4F0 (player_way_check__FP10e_bs_class)
//	8068EEA0: 806910A0 (l_HIO)
//	8068EEA4: 806910A0 (l_HIO)
//	8068EEC4: 80267954 (cM_rndF__Ff)
//	8068EEE4: 80267954 (cM_rndF__Ff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void e_bs_fight_run(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/e_bs_fight_run__FP10e_bs_class.s"
}
#pragma pop


/* 8068EF2C-8068EF8C 0060+00 s=1 e=0 z=0  None .text      at_hit_check__FP10e_bs_class                                 */
//	8068EF58: 800842C0 (ChkAtHit__12dCcD_GObjInfFv)
//	8068EF68: 80084358 (GetAtHitObj__12dCcD_GObjInfFv)
//	8068EF6C: 80263A48 (GetAc__8cCcD_ObjFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void at_hit_check(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/at_hit_check__FP10e_bs_class.s"
}
#pragma pop


/* 8068EF8C-8068F15C 01D0+00 s=1 e=0 z=0  None .text      e_bs_attack__FP10e_bs_class                                  */
//	8068EF9C: 803621DC (_savegpr_29)
//	8068EFA4: 80690DD8 (lit_3788)
//	8068EFA8: 80690DD8 (lit_3788)
//	8068EFF4: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068F01C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068F0B8: 8026FA80 (cLib_addCalc0__FPfff)
//	8068F0CC: 8068EF2C (at_hit_check__FP10e_bs_class)
//	8068F0E4: 804061C0 (g_dComIfG_gameInfo)
//	8068F0E8: 804061C0 (g_dComIfG_gameInfo)
//	8068F128: 80267954 (cM_rndF__Ff)
//	8068F148: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void e_bs_attack(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/e_bs_attack__FP10e_bs_class.s"
}
#pragma pop


/* 8068F15C-8068F208 00AC+00 s=1 e=0 z=0  None .text      e_bs_damage__FP10e_bs_class                                  */
//	8068F190: 80690DE0 (lit_3790)
//	8068F194: 80690DE0 (lit_3790)
//	8068F1A0: 8068E1F4 (anm_init__FP10e_bs_classifUcf)
//	8068F1C4: 80690DDC (lit_3789)
//	8068F1C8: 80690DDC (lit_3789)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void e_bs_damage(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/e_bs_damage__FP10e_bs_class.s"
}
#pragma pop


/* 8068F208-8068F4C4 02BC+00 s=1 e=0 z=0  None .text      damage_check__FP10e_bs_class                                 */
//	8068F218: 803621D0 (_savegpr_26)
//	8068F220: 80690DD8 (lit_3788)
//	8068F224: 80690DD8 (lit_3788)
//	8068F238: 80083830 (Move__10dCcD_GSttsFv)
//	8068F250: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	8068F260: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	8068F270: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	8068F2DC: 804061C0 (g_dComIfG_gameInfo)
//	8068F2E0: 804061C0 (g_dComIfG_gameInfo)
//	8068F2E4: 80690F40 (ap_name_4233)
//	8068F2E8: 80690F40 (ap_name_4233)
//	8068F32C: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8068F398: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	8068F3BC: 8001BE14 (fopAcM_createItemFromEnemyID__FUcPC4cXyziiPC5csXyzPC4cXyzPfPf)
//	8068F3D0: 804061C0 (g_dComIfG_gameInfo)
//	8068F3D4: 804061C0 (g_dComIfG_gameInfo)
//	8068F3E0: 80035200 (onSwitch__10dSv_info_cFii)
//	8068F4B0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void damage_check(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/damage_check__FP10e_bs_class.s"
}
#pragma pop


/* 8068F4C4-8068FA04 0540+00 s=1 e=0 z=0  None .text      action__FP10e_bs_class                                       */
//	8068F4D4: 803621D4 (_savegpr_27)
//	8068F4DC: 80690DD8 (lit_3788)
//	8068F4E0: 80690DD8 (lit_3788)
//	8068F4E4: 804061C0 (g_dComIfG_gameInfo)
//	8068F4E8: 804061C0 (g_dComIfG_gameInfo)
//	8068F4FC: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8068F50C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8068F51C: 8001A738 (fopAcM_searchActorAngleX__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8068F524: 806910A0 (l_HIO)
//	8068F528: 806910A0 (l_HIO)
//	8068F538: 8068F208 (damage_check__FP10e_bs_class)
//	8068F578: 8068E708 (e_bs_appear__FP10e_bs_class)
//	8068F588: 8068E8C4 (e_bs_normal__FP10e_bs_class)
//	8068F594: 8068EB50 (e_bs_fight_run__FP10e_bs_class)
//	8068F5A4: 8068EF8C (e_bs_attack__FP10e_bs_class)
//	8068F5B4: 8068F15C (e_bs_damage__FP10e_bs_class)
//	8068F5C8: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	8068F5D8: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	8068F5E4: 8001CDFC (fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8068F62C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068F640: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068F644: 80450768 (calc_mtx)
//	8068F648: 80450768 (calc_mtx)
//	8068F654: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8068F674: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8068F690: 806910A0 (l_HIO)
//	8068F694: 806910A0 (l_HIO)
//	8068F69C: 80266B84 (__ml__4cXyzCFf)
//	8068F6AC: 80347090 (PSVECAdd)
//	8068F734: 80450768 (calc_mtx)
//	8068F738: 80450768 (calc_mtx)
//	8068F744: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8068F750: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8068F760: 80347090 (PSVECAdd)
//	8068F770: 8026FA80 (cLib_addCalc0__FPfff)
//	8068F778: 804061C0 (g_dComIfG_gameInfo)
//	8068F77C: 804061C0 (g_dComIfG_gameInfo)
//	8068F784: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	8068F7B0: 80267954 (cM_rndF__Ff)
//	8068F7C4: 8026798C (cM_rndFX__Ff)
//	8068F7F0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8068F824: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8068F850: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8068F88C: 80267674 (cM_atan2s__Fff)
//	8068F8C8: 80267674 (cM_atan2s__Fff)
//	8068F920: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068F934: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068F954: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068F968: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068F984: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068F9A4: 80267954 (cM_rndF__Ff)
//	8068F9B8: 8026798C (cM_rndFX__Ff)
//	8068F9E8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8068F9F0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void action(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/action__FP10e_bs_class.s"
}
#pragma pop


/* 8068FA04-8068FBDC 01D8+00 s=1 e=0 z=0  None .text      anm_se_set__FP10e_bs_class                                   */
//	8068FA14: 803621DC (_savegpr_29)
//	8068FA1C: 80690DD8 (lit_3788)
//	8068FA20: 80690DD8 (lit_3788)
//	8068FA40: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8068FA58: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8068FA80: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8068FAC0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8068FAD8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8068FB00: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8068FB28: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8068FB40: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8068FB68: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8068FB80: 8032842C (checkPass__12J3DFrameCtrlFf)
//	8068FBC8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void anm_se_set(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/anm_se_set__FP10e_bs_class.s"
}
#pragma pop


/* 8068FBDC-8068FFA8 03CC+00 s=2 e=0 z=0  None .text      daE_BS_Execute__FP10e_bs_class                               */
//	8068FBEC: 803621D8 (_savegpr_28)
//	8068FBF4: 80690DD8 (lit_3788)
//	8068FBF8: 80690DD8 (lit_3788)
//	8068FC4C: 8068F4C4 (action__FP10e_bs_class)
//	8068FC70: 8026FA3C (cLib_addCalc2__FPffff)
//	8068FC74: 803DD470 (now__14mDoMtx_stack_c)
//	8068FC78: 803DD470 (now__14mDoMtx_stack_c)
//	8068FC88: 803468E8 (PSMTXTrans)
//	8068FC8C: 803DD470 (now__14mDoMtx_stack_c)
//	8068FC90: 803DD470 (now__14mDoMtx_stack_c)
//	8068FC98: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8068FC9C: 803DD470 (now__14mDoMtx_stack_c)
//	8068FCA0: 803DD470 (now__14mDoMtx_stack_c)
//	8068FCA8: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8068FCAC: 806910A0 (l_HIO)
//	8068FCB0: 806910A0 (l_HIO)
//	8068FCC0: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	8068FCCC: 803DD470 (now__14mDoMtx_stack_c)
//	8068FCD0: 803DD470 (now__14mDoMtx_stack_c)
//	8068FCD8: 803464B0 (PSMTXCopy)
//	8068FCE4: 8002D06C (dComIfGp_getReverb__Fi)
//	8068FCF4: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	8068FCFC: 8068FA04 (anm_se_set__FP10e_bs_class)
//	8068FD04: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	8068FD44: 80347090 (PSVECAdd)
//	8068FD54: 80450768 (calc_mtx)
//	8068FD58: 80450768 (calc_mtx)
//	8068FD60: 803464B0 (PSMTXCopy)
//	8068FD7C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8068FD8C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8068FD98: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	8068FDAC: 8026F708 (SetR__8cM3dGSphFf)
//	8068FDE4: 80450768 (calc_mtx)
//	8068FDE8: 80450768 (calc_mtx)
//	8068FDF0: 803464B0 (PSMTXCopy)
//	8068FE0C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8068FE1C: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8068FE28: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	8068FE3C: 8026F708 (SetR__8cM3dGSphFf)
//	8068FE40: 804061C0 (g_dComIfG_gameInfo)
//	8068FE44: 804061C0 (g_dComIfG_gameInfo)
//	8068FE54: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8068FE60: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8068FE74: 800105C8 (play__14mDoExt_McaMorfFP3VecUlSc)
//	8068FE8C: 80450768 (calc_mtx)
//	8068FE90: 80450768 (calc_mtx)
//	8068FE98: 803464B0 (PSMTXCopy)
//	8068FEA4: 80450768 (calc_mtx)
//	8068FEA8: 80450768 (calc_mtx)
//	8068FEB4: 803464B0 (PSMTXCopy)
//	8068FEBC: 800106AC (modelCalc__14mDoExt_McaMorfFv)
//	8068FEE8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8068FF08: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	8068FF18: 80084AC4 (MoveCAt__8dCcD_SphFR4cXyz)
//	8068FF2C: 8026F708 (SetR__8cM3dGSphFf)
//	8068FF44: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	8068FF64: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8068FF88: 806909B0 (setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz)
//	8068FF94: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void daE_BS_Execute(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/daE_BS_Execute__FP10e_bs_class.s"
}
#pragma pop


/* 8068FFA8-8068FFB0 0008+00 s=1 e=0 z=0  None .text      daE_BS_IsDelete__FP10e_bs_class                              */
// True False
//  bool False
//  e_bs_class* False
// 	 e_bs_class False
static bool daE_BS_IsDelete(e_bs_class* param_0) {
	return true;
}


/* 8068FFB0-80690018 0068+00 s=1 e=0 z=0  None .text      daE_BS_Delete__FP10e_bs_class                                */
//	8068FFC8: 80690EB8 (stringBase0)
//	8068FFCC: 80690EB8 (stringBase0)
//	8068FFD0: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	8068FFE4: 80691090 (data_80691090)
//	8068FFE8: 80691090 (data_80691090)
//	8068FFFC: 80011310 (stopZelAnime__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_bs_class* False
// 	 e_bs_class False
asm static void daE_BS_Delete(e_bs_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/daE_BS_Delete__FP10e_bs_class.s"
}
#pragma pop


/* 80690018-80690224 020C+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	80690028: 803621D8 (_savegpr_28)
//	80690034: 802CEC4C (__nw__FUl)
//	80690040: 80690EB8 (stringBase0)
//	80690044: 80690EB8 (stringBase0)
//	8069004C: 804061C0 (g_dComIfG_gameInfo)
//	80690050: 804061C0 (g_dComIfG_gameInfo)
//	80690064: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8069006C: 80690EB8 (stringBase0)
//	80690070: 80690EB8 (stringBase0)
//	80690080: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806900B8: 80690DE0 (lit_3790)
//	806900BC: 80690DE0 (lit_3790)
//	806900C8: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	806900FC: 8068E2D4 (nodeCallBack__FP8J3DJointi)
//	80690100: 8068E2D4 (nodeCallBack__FP8J3DJointi)
//	80690140: 802CEC4C (__nw__FUl)
//	8069014C: 80690EB8 (stringBase0)
//	80690150: 80690EB8 (stringBase0)
//	80690158: 804061C0 (g_dComIfG_gameInfo)
//	8069015C: 804061C0 (g_dComIfG_gameInfo)
//	80690170: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80690178: 80690EB8 (stringBase0)
//	8069017C: 80690EB8 (stringBase0)
//	8069018C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	806901CC: 80690DE0 (lit_3790)
//	806901D0: 80690DE0 (lit_3790)
//	806901DC: 8000FC4C (__ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl)
//	80690210: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80690224-806905B8 0394+00 s=1 e=0 z=0  None .text      daE_BS_Create__FP10fopAc_ac_c                                */
//	80690234: 803621C8 (_savegpr_24)
//	8069023C: 80690DD8 (lit_3788)
//	80690240: 80690DD8 (lit_3788)
//	8069025C: 80018B64 (__ct__10fopAc_ac_cFv)
//	80690264: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	8069026C: 80075EAC (__ct__12dBgS_AcchCirFv)
//	80690278: 800760A0 (__ct__9dBgS_AcchFv)
//	8069027C: 80691054 (__vt__12dBgS_ObjAcch)
//	80690280: 80691054 (__vt__12dBgS_ObjAcch)
//	8069029C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	806902A0: 803C3728 (__vt__9cCcD_Stts)
//	806902A4: 803C3728 (__vt__9cCcD_Stts)
//	806902B0: 80083760 (__ct__10dCcD_GSttsFv)
//	806902B4: 803AC2E4 (__vt__9dCcD_Stts)
//	806902B8: 803AC2E4 (__vt__9dCcD_Stts)
//	806902CC: 80690714 (__ct__8dCcD_SphFv)
//	806902D0: 80690714 (__ct__8dCcD_SphFv)
//	806902D4: 80690648 (__dt__8dCcD_SphFv)
//	806902D8: 80690648 (__dt__8dCcD_SphFv)
//	806902E4: 80361D60 (__construct_array)
//	806902F0: 80083A28 (__ct__12dCcD_GObjInfFv)
//	806902F4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806902F8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80690300: 80691048 (__vt__8cM3dGAab)
//	80690304: 80691048 (__vt__8cM3dGAab)
//	8069030C: 8069103C (__vt__8cM3dGSph)
//	80690310: 8069103C (__vt__8cM3dGSph)
//	80690318: 803C3540 (__vt__12cCcD_SphAttr)
//	8069031C: 803C3540 (__vt__12cCcD_SphAttr)
//	8069032C: 803ABFC0 (__vt__8dCcD_Sph)
//	80690330: 803ABFC0 (__vt__8dCcD_Sph)
//	80690358: 80690EB8 (stringBase0)
//	8069035C: 80690EB8 (stringBase0)
//	80690360: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80690380: 804061C0 (g_dComIfG_gameInfo)
//	80690384: 804061C0 (g_dComIfG_gameInfo)
//	80690390: 80035360 (isSwitch__10dSv_info_cCFii)
//	806903F8: 80690018 (useHeapInit__FP10fopAc_ac_c)
//	806903FC: 80690018 (useHeapInit__FP10fopAc_ac_c)
//	80690404: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80690418: 80691090 (data_80691090)
//	8069041C: 80691090 (data_80691090)
//	80690438: 806910A0 (l_HIO)
//	8069043C: 806910A0 (l_HIO)
//	80690484: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	80690494: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	806904B4: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	806904C0: 80690F48 (cc_sph_src)
//	806904C4: 80690F48 (cc_sph_src)
//	806904D8: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	806904F4: 80690F88 (at_sph_src)
//	806904F8: 80690F88 (at_sph_src)
//	806904FC: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	8069050C: 80267954 (cM_rndF__Ff)
//	8069055C: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	80690564: 80690EB8 (stringBase0)
//	80690568: 80690EB8 (stringBase0)
//	80690570: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	80690598: 8068FBDC (daE_BS_Execute__FP10e_bs_class)
//	806905A4: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daE_BS_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/daE_BS_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 806905B8-80690600 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	806905D0: 8069103C (__vt__8cM3dGSph)
//	806905D4: 8069103C (__vt__8cM3dGSph)
//	806905E4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80690600-80690648 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80690618: 80691048 (__vt__8cM3dGAab)
//	8069061C: 80691048 (__vt__8cM3dGAab)
//	8069062C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80690648-80690714 00CC+00 s=1 e=0 z=0  None .text      __dt__8dCcD_SphFv                                            */
//	80690668: 803ABFC0 (__vt__8dCcD_Sph)
//	8069066C: 803ABFC0 (__vt__8dCcD_Sph)
//	8069068C: 803C3540 (__vt__12cCcD_SphAttr)
//	80690690: 803C3540 (__vt__12cCcD_SphAttr)
//	806906A8: 8069103C (__vt__8cM3dGSph)
//	806906AC: 8069103C (__vt__8cM3dGSph)
//	806906BC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806906C0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	806906D0: 80691048 (__vt__8cM3dGAab)
//	806906D4: 80691048 (__vt__8cM3dGAab)
//	806906E4: 800840E4 (__dt__12dCcD_GObjInfFv)
//	806906F4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::~dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__dt__8dCcD_SphFv.s"
}
#pragma pop


/* 80690714-80690798 0084+00 s=1 e=0 z=0  None .text      __ct__8dCcD_SphFv                                            */
//	80690728: 80083A28 (__ct__12dCcD_GObjInfFv)
//	8069072C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80690730: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80690738: 80691048 (__vt__8cM3dGAab)
//	8069073C: 80691048 (__vt__8cM3dGAab)
//	80690744: 8069103C (__vt__8cM3dGSph)
//	80690748: 8069103C (__vt__8cM3dGSph)
//	80690750: 803C3540 (__vt__12cCcD_SphAttr)
//	80690754: 803C3540 (__vt__12cCcD_SphAttr)
//	80690764: 803ABFC0 (__vt__8dCcD_Sph)
//	80690768: 803ABFC0 (__vt__8dCcD_Sph)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_Sph::dCcD_Sph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__ct__8dCcD_SphFv.s"
}
#pragma pop


/* 80690798-806907F4 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	806907B0: 80691030 (__vt__10dCcD_GStts)
//	806907B4: 80691030 (__vt__10dCcD_GStts)
//	806907C0: 80691024 (__vt__10cCcD_GStts)
//	806907C4: 80691024 (__vt__10cCcD_GStts)
//	806907D8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 806907F4-80690864 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80690814: 80691054 (__vt__12dBgS_ObjAcch)
//	80690818: 80691054 (__vt__12dBgS_ObjAcch)
//	80690834: 80075F94 (__dt__9dBgS_AcchFv)
//	80690844: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80690864-806908D4 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80690884: 80691018 (__vt__12dBgS_AcchCir)
//	80690888: 80691018 (__vt__12dBgS_AcchCir)
//	80690898: 8026EF18 (__dt__8cM3dGCirFv)
//	806908A4: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	806908B4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 806908D4-8069091C 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	806908EC: 80691024 (__vt__10cCcD_GStts)
//	806908F0: 80691024 (__vt__10cCcD_GStts)
//	80690900: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 8069091C-80690964 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_BS_HIO_cFv                                       */
//	80690934: 80691078 (__vt__12daE_BS_HIO_c)
//	80690938: 80691078 (__vt__12daE_BS_HIO_c)
//	80690948: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_BS_HIO_c::~daE_BS_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__dt__12daE_BS_HIO_cFv.s"
}
#pragma pop


/* 80690964-806909A0 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_bs_cpp                                         */
//	80690970: 806910A0 (l_HIO)
//	80690974: 806910A0 (l_HIO)
//	80690978: 8068E12C (__ct__12daE_BS_HIO_cFv)
//	8069097C: 8069091C (__dt__12daE_BS_HIO_cFv)
//	80690980: 8069091C (__dt__12daE_BS_HIO_cFv)
//	80690984: 80691094 (lit_3804)
//	80690988: 80691094 (lit_3804)
//	8069098C: 8068E0B8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_bs_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/__sinit_d_a_e_bs_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80690964 = (void*)__sinit_d_a_e_bs_cpp;
#pragma pop


/* 806909A0-806909A8 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	806909A4: 806907F4 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_806909A0() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/func_806909A0.s"
}
#pragma pop


/* 806909A8-806909B0 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	806909AC: 806907F4 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_806909A8() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/func_806909A8.s"
}
#pragma pop


/* 806909B0-80690DC4 0414+00 s=1 e=0 z=0  None .text      setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz */
//	806909C0: 803621B4 (_savegpr_19)
//	806909D4: 80690EC4 (cNullVec__6Z2Calc)
//	806909D8: 80690EC4 (cNullVec__6Z2Calc)
//	806909DC: 80690DD8 (lit_3788)
//	806909E0: 80690DD8 (lit_3788)
//	806909E4: 804061C0 (g_dComIfG_gameInfo)
//	806909E8: 804061C0 (g_dComIfG_gameInfo)
//	806909F0: 80451018 (m_midnaActor__9daPy_py_c)
//	806909F4: 80451018 (m_midnaActor__9daPy_py_c)
//	80690A1C: 801AC57C (dKy_darkworld_check__Fv)
//	80690A40: 80451018 (m_midnaActor__9daPy_py_c)
//	80690A44: 80451018 (m_midnaActor__9daPy_py_c)
//	80690A5C: 803DD470 (now__14mDoMtx_stack_c)
//	80690A60: 803DD470 (now__14mDoMtx_stack_c)
//	80690A64: 803464B0 (PSMTXCopy)
//	80690A7C: 803DD470 (now__14mDoMtx_stack_c)
//	80690A80: 803DD470 (now__14mDoMtx_stack_c)
//	80690A8C: 80346D6C (PSMTXMultVec)
//	80690A9C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80690AB8: 80267674 (cM_atan2s__Fff)
//	80690AEC: 80267674 (cM_atan2s__Fff)
//	80690B08: 804061C0 (g_dComIfG_gameInfo)
//	80690B0C: 804061C0 (g_dComIfG_gameInfo)
//	80690B5C: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80690B6C: 80347138 (PSVECSquareMag)
//	80690BDC: 80450AE0 (__float_nan)
//	80690BE0: 80450AE0 (__float_nan)
//	80690C4C: 80450AE0 (__float_nan)
//	80690C50: 80450AE0 (__float_nan)
//	80690CA4: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80690CE0: 804061C0 (g_dComIfG_gameInfo)
//	80690CE4: 804061C0 (g_dComIfG_gameInfo)
//	80690D50: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80690DB0: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
asm static void setMidnaBindEffect(fopEn_enemy_c* param_0, Z2CreatureEnemy* param_1, cXyz* param_2, cXyz* param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_bs/d_a_e_bs/setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz.s"
}
#pragma pop


