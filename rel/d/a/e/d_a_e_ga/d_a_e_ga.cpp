// 
// Generated By: dol2asm
// Translation Unit: d_a_e_ga
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_ga/d_a_e_ga.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct ga_s {
	/* 804FBAB8 */ // True False
~ga_s();
	/* 804FBAF4 */ // True False
ga_s();
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct e_ga_class {
};

struct daE_Ga_HIO_c {
	/* 804FB0EC */ // True False
daE_Ga_HIO_c();
	/* 804FBAF8 */ // True False
~daE_Ga_HIO_c();
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct J3DModel {
};

struct J3DModelData {
};

struct dComIfG_play_c {
	/* 8002CAF0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  int False
//  u8 False
void addSimpleModel(J3DModelData*, int, u8);
	/* 8002CB30 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  int False
void removeSimpleModel(J3DModelData*, int);
	/* 8002CB68 */ // False False
//  J3DModel* False
// 	 J3DModel False
//  int False
void entrySimpleModel(J3DModel*, int);
};

// 
// Forward References:
// 

// True False
//  e_ga_class* False
// 	 e_ga_class False
static void daE_Ga_Draw(e_ga_class*);
// True False
//  e_ga_class* False
// 	 e_ga_class False
//  ga_s* False
// 	 ga_s False
static void ga_fly(e_ga_class*, ga_s*);
// True False
//  e_ga_class* False
// 	 e_ga_class False
//  ga_s* False
// 	 ga_s False
static void bt_fly(e_ga_class*, ga_s*);
// True False
//  e_ga_class* False
// 	 e_ga_class False
static void ga_control(e_ga_class*);
// True False
//  e_ga_class* False
// 	 e_ga_class False
static void daE_Ga_Execute(e_ga_class*);
// True False
//  bool False
//  e_ga_class* False
// 	 e_ga_class False
static bool daE_Ga_IsDelete(e_ga_class*);
// True False
//  e_ga_class* False
// 	 e_ga_class False
static void daE_Ga_Delete(e_ga_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daE_Ga_Create(fopAc_ac_c*);

// True False
extern "C" void __ct__12daE_Ga_HIO_cFv();
// True False
//  e_ga_class* False
// 	 e_ga_class False
extern "C" static void daE_Ga_Draw__FP10e_ga_class();
// True False
//  e_ga_class* False
// 	 e_ga_class False
//  ga_s* False
// 	 ga_s False
extern "C" static void ga_fly__FP10e_ga_classP4ga_s();
// True False
//  e_ga_class* False
// 	 e_ga_class False
//  ga_s* False
// 	 ga_s False
extern "C" static void bt_fly__FP10e_ga_classP4ga_s();
// True False
//  e_ga_class* False
// 	 e_ga_class False
extern "C" static void ga_control__FP10e_ga_class();
// True False
//  e_ga_class* False
// 	 e_ga_class False
extern "C" static void daE_Ga_Execute__FP10e_ga_class();
// True False
//  bool False
//  e_ga_class* False
// 	 e_ga_class False
extern "C" static bool daE_Ga_IsDelete__FP10e_ga_class();
// True False
//  e_ga_class* False
// 	 e_ga_class False
extern "C" static void daE_Ga_Delete__FP10e_ga_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daE_Ga_Create__FP10fopAc_ac_c();
// True False
extern "C" void __dt__4ga_sFv();
// True False
extern "C" void __ct__4ga_sFv();
// True False
extern "C" void __dt__12daE_Ga_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_ga_cpp();
extern "C" extern u32 const lit_3713;
extern "C" extern u32 const lit_3714;
extern "C" extern u32 const lit_3715;
extern "C" extern u8 const lit_3716[4 + 4 /* padding */];
extern "C" extern u8 const lit_3718[8];
extern "C" extern u32 const lit_3759;
extern "C" extern u32 const lit_3760;
extern "C" extern u32 const lit_3796;
extern "C" extern u32 const lit_3797;
extern "C" extern u8 const data_804FBBC0[4];
extern "C" extern u32 const lit_3912;
extern "C" extern u32 const lit_3913;
extern "C" extern u32 const lit_3914;
extern "C" extern u32 const lit_3915;
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_E_GA[12];
extern "C" extern void* __vt__12daE_Ga_HIO_c[3];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void MtxPosition(cXyz*, cXyz*);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  int False
//  u8 False
extern "C" void addSimpleModel__14dComIfG_play_cFP12J3DModelDataiUc();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  int False
extern "C" void removeSimpleModel__14dComIfG_play_cFP12J3DModelDatai();
// False False
//  J3DModel* False
// 	 J3DModel False
//  int False
extern "C" void entrySimpleModel__14dComIfG_play_cFP8J3DModeli();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void MtxPosition__FP4cXyzP4cXyz();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 804FBB90-804FBB94 0004+00 s=5 e=0 z=0  None .rodata    @3646                                                        */
SECTION_RODATA static u32 const lit_3646 = 0x3F800000;

/* 804FBBE0-804FBC00 0020+00 s=1 e=0 z=0  None .data      l_daE_Ga_Method                                              */
SECTION_DATA static void* l_daE_Ga_Method[8] = {
	(void*)daE_Ga_Create__FP10fopAc_ac_c,
	(void*)daE_Ga_Delete__FP10e_ga_class,
	(void*)daE_Ga_Execute__FP10e_ga_class,
	(void*)daE_Ga_IsDelete__FP10e_ga_class,
	(void*)daE_Ga_Draw__FP10e_ga_class,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 804FBC00-804FBC30 0030+00 s=0 e=0 z=1  None .data      g_profile_E_GA                                               */
SECTION_DATA void* g_profile_E_GA[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01C70000,
	(void*)&g_fpcLf_Method,
	(void*)0x00004D7C,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x008A0000,
	(void*)&l_daE_Ga_Method,
	(void*)0x00044000,
	(void*)0x000E0000,
};

/* 804FBC30-804FBC3C 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_Ga_HIO_c                                         */
SECTION_DATA void* __vt__12daE_Ga_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_Ga_HIO_cFv,
};

/* 804FB0EC-804FB110 0024+00 s=1 e=0 z=0  None .text      __ct__12daE_Ga_HIO_cFv                                       */
//	804FB0EC: 804FBC30 (__vt__12daE_Ga_HIO_c)
//	804FB0F0: 804FBC30 (__vt__12daE_Ga_HIO_c)
//	804FB100: 804FBB90 (lit_3646)
//	804FB104: 804FBB90 (lit_3646)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_Ga_HIO_c::daE_Ga_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/__ct__12daE_Ga_HIO_cFv.s"
}
#pragma pop


/* 804FB110-804FB1B0 00A0+00 s=1 e=0 z=0  None .text      daE_Ga_Draw__FP10e_ga_class                                  */
//	804FB120: 803621D4 (_savegpr_27)
//	804FB128: 8042CA54 (g_env_light)
//	804FB12C: 8042CA54 (g_env_light)
//	804FB13C: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	804FB154: 804061C0 (g_dComIfG_gameInfo)
//	804FB158: 804061C0 (g_dComIfG_gameInfo)
//	804FB17C: 8002CB68 (entrySimpleModel__14dComIfG_play_cFP8J3DModeli)
//	804FB19C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_ga_class* False
// 	 e_ga_class False
asm static void daE_Ga_Draw(e_ga_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/daE_Ga_Draw__FP10e_ga_class.s"
}
#pragma pop


/* 804FB1B0-804FB3A8 01F8+00 s=1 e=0 z=0  None .text      ga_fly__FP10e_ga_classP4ga_s                                 */
//	804FB1C8: 803621DC (_savegpr_29)
//	804FB1D4: 804FBB90 (lit_3646)
//	804FB1D8: 804FBB90 (lit_3646)
//	804FB210: 80267954 (cM_rndF__Ff)
//	804FB228: 8026798C (cM_rndFX__Ff)
//	804FB23C: 80267954 (cM_rndF__Ff)
//	804FB250: 8026798C (cM_rndFX__Ff)
//	804FB26C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	804FB288: 80267674 (cM_atan2s__Fff)
//	804FB2BC: 80267674 (cM_atan2s__Fff)
//	804FB2D8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	804FB2EC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	804FB304: 80450768 (calc_mtx)
//	804FB308: 80450768 (calc_mtx)
//	804FB314: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	804FB318: 80450768 (calc_mtx)
//	804FB31C: 80450768 (calc_mtx)
//	804FB328: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	804FB334: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	804FB344: 80347090 (PSVECAdd)
//	804FB36C: 80439A20 (sincosTable___5JMath)
//	804FB370: 80439A20 (sincosTable___5JMath)
//	804FB394: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_ga_class* False
// 	 e_ga_class False
//  ga_s* False
// 	 ga_s False
asm static void ga_fly(e_ga_class* param_0, ga_s* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/ga_fly__FP10e_ga_classP4ga_s.s"
}
#pragma pop


/* 804FB3A8-804FB5C0 0218+00 s=1 e=0 z=0  None .text      bt_fly__FP10e_ga_classP4ga_s                                 */
//	804FB3C0: 803621DC (_savegpr_29)
//	804FB3CC: 804FBB90 (lit_3646)
//	804FB3D0: 804FBB90 (lit_3646)
//	804FB408: 80267954 (cM_rndF__Ff)
//	804FB420: 8026798C (cM_rndFX__Ff)
//	804FB434: 80267954 (cM_rndF__Ff)
//	804FB448: 8026798C (cM_rndFX__Ff)
//	804FB464: 80266B34 (__mi__4cXyzCFRC3Vec)
//	804FB480: 80267674 (cM_atan2s__Fff)
//	804FB4B4: 80267674 (cM_atan2s__Fff)
//	804FB4D0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	804FB4E4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	804FB4FC: 80450768 (calc_mtx)
//	804FB500: 80450768 (calc_mtx)
//	804FB50C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	804FB510: 80450768 (calc_mtx)
//	804FB514: 80450768 (calc_mtx)
//	804FB520: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	804FB52C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	804FB590: 80439A20 (sincosTable___5JMath)
//	804FB594: 80439A20 (sincosTable___5JMath)
//	804FB5AC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_ga_class* False
// 	 e_ga_class False
//  ga_s* False
// 	 ga_s False
asm static void bt_fly(e_ga_class* param_0, ga_s* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/bt_fly__FP10e_ga_classP4ga_s.s"
}
#pragma pop


/* 804FB5C0-804FB6F8 0138+00 s=1 e=0 z=0  None .text      ga_control__FP10e_ga_class                                   */
//	804FB5D8: 803621D8 (_savegpr_28)
//	804FB5E0: 804FBB90 (lit_3646)
//	804FB5E4: 804FBB90 (lit_3646)
//	804FB640: 804FB1B0 (ga_fly__FP10e_ga_classP4ga_s)
//	804FB650: 804FB3A8 (bt_fly__FP10e_ga_classP4ga_s)
//	804FB654: 803DD470 (now__14mDoMtx_stack_c)
//	804FB658: 803DD470 (now__14mDoMtx_stack_c)
//	804FB668: 803468E8 (PSMTXTrans)
//	804FB66C: 803DD470 (now__14mDoMtx_stack_c)
//	804FB670: 803DD470 (now__14mDoMtx_stack_c)
//	804FB678: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	804FB67C: 803DD470 (now__14mDoMtx_stack_c)
//	804FB680: 803DD470 (now__14mDoMtx_stack_c)
//	804FB688: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	804FB69C: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	804FB6AC: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	804FB6B0: 803DD470 (now__14mDoMtx_stack_c)
//	804FB6B4: 803DD470 (now__14mDoMtx_stack_c)
//	804FB6C0: 803464B0 (PSMTXCopy)
//	804FB6E4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_ga_class* False
// 	 e_ga_class False
asm static void ga_control(e_ga_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/ga_control__FP10e_ga_class.s"
}
#pragma pop


/* 804FB6F8-804FB71C 0024+00 s=2 e=0 z=0  None .text      daE_Ga_Execute__FP10e_ga_class                               */
//	804FB704: 804FB5C0 (ga_control__FP10e_ga_class)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_ga_class* False
// 	 e_ga_class False
asm static void daE_Ga_Execute(e_ga_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/daE_Ga_Execute__FP10e_ga_class.s"
}
#pragma pop


/* 804FB71C-804FB724 0008+00 s=1 e=0 z=0  None .text      daE_Ga_IsDelete__FP10e_ga_class                              */
// True False
//  bool False
//  e_ga_class* False
// 	 e_ga_class False
static bool daE_Ga_IsDelete(e_ga_class* param_0) {
	return true;
}


/* ############################################################################################## */
/* 804FBB94-804FBB98 0004+00 s=0 e=0 z=0  None .rodata    @3713                                                        */
SECTION_RODATA u32 const lit_3713 = 0x42C80000;

/* 804FBB98-804FBB9C 0004+00 s=0 e=0 z=0  None .rodata    @3714                                                        */
SECTION_RODATA u32 const lit_3714 = 0x41200000;

/* 804FBB9C-804FBBA0 0004+00 s=0 e=0 z=0  None .rodata    @3715                                                        */
SECTION_RODATA u32 const lit_3715 = 0x43480000;

/* 804FBBA0-804FBBA8 0004+04 s=0 e=0 z=0  None .rodata    @3716                                                        */
SECTION_RODATA u8 const lit_3716[4 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 804FBBA8-804FBBB0 0008+00 s=0 e=0 z=0  None .rodata    @3718                                                        */
SECTION_RODATA u8 const lit_3718[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804FBBB0-804FBBB4 0004+00 s=0 e=0 z=0  None .rodata    @3759                                                        */
SECTION_RODATA u32 const lit_3759 = 0x41400000;

/* 804FBBB4-804FBBB8 0004+00 s=0 e=0 z=0  None .rodata    @3760                                                        */
SECTION_RODATA u32 const lit_3760 = 0x40E00000;

/* 804FBBB8-804FBBBC 0004+00 s=0 e=0 z=0  None .rodata    @3796                                                        */
SECTION_RODATA u32 const lit_3796 = 0xC1700000;

/* 804FBBBC-804FBBC0 0004+00 s=0 e=0 z=0  None .rodata    @3797                                                        */
SECTION_RODATA u32 const lit_3797 = 0xC0A00000;

/* 804FBBC0-804FBBC4 0004+00 s=0 e=0 z=0  None .rodata    l_bmdidx$3809                                                */
SECTION_RODATA u8 const data_804FBBC0[4] = {
	0x00, 0x00, 0x00, 0x03,
};

/* 804FBBC4-804FBBC8 0004+00 s=0 e=0 z=0  None .rodata    @3912                                                        */
SECTION_RODATA u32 const lit_3912 = 0x47800000;

/* 804FBBC8-804FBBCC 0004+00 s=0 e=0 z=0  None .rodata    @3913                                                        */
SECTION_RODATA u32 const lit_3913 = 0x3E99999A;

/* 804FBBCC-804FBBD0 0004+00 s=0 e=0 z=0  None .rodata    @3914                                                        */
SECTION_RODATA u32 const lit_3914 = 0x3F4CCCCD;

/* 804FBBD0-804FBBD4 0004+00 s=0 e=0 z=0  None .rodata    @3915                                                        */
SECTION_RODATA u32 const lit_3915 = 0x3E4CCCCD;

/* 804FBBD4-804FBBDE 000A+00 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_804FBBD4 = "E_ga";
SECTION_DEAD char const* const stringBase_804FBBD9 = "E_Ga";
#pragma pop

/* 804FBC48-804FBC4C 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 data_804FBC48[4];

/* 804FB724-804FB7C4 00A0+00 s=1 e=0 z=0  None .text      daE_Ga_Delete__FP10e_ga_class                                */
//	804FB744: 804FBBD4 (stringBase0)
//	804FB748: 804FBBD4 (stringBase0)
//	804FB750: 804061C0 (g_dComIfG_gameInfo)
//	804FB754: 804061C0 (g_dComIfG_gameInfo)
//	804FB764: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	804FB76C: 804061C0 (g_dComIfG_gameInfo)
//	804FB770: 804061C0 (g_dComIfG_gameInfo)
//	804FB780: 8002CB30 (removeSimpleModel__14dComIfG_play_cFP12J3DModelDatai)
//	804FB788: 804FBBD4 (stringBase0)
//	804FB78C: 804FBBD4 (stringBase0)
//	804FB790: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	804FB7A4: 804FBC48 (data_804FBC48)
//	804FB7A8: 804FBC48 (data_804FBC48)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_ga_class* False
// 	 e_ga_class False
asm static void daE_Ga_Delete(e_ga_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/daE_Ga_Delete__FP10e_ga_class.s"
}
#pragma pop


/* 804FB7C4-804FB874 00B0+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	804FB7D4: 803621D4 (_savegpr_27)
//	804FB7DC: 804FBBD4 (stringBase0)
//	804FB7E0: 804FBBD4 (stringBase0)
//	804FB7EC: 804061C0 (g_dComIfG_gameInfo)
//	804FB7F0: 804061C0 (g_dComIfG_gameInfo)
//	804FB800: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	804FB824: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	804FB860: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 804FBC4C-804FBC58 000C+00 s=1 e=0 z=0  None .bss       @3641                                                        */
static u8 lit_3641[12];

/* 804FBC58-804FBC64 000C+00 s=2 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[12];

/* 804FB874-804FBAB8 0244+00 s=1 e=0 z=0  None .text      daE_Ga_Create__FP10fopAc_ac_c                                */
//	804FB884: 803621D0 (_savegpr_26)
//	804FB88C: 804FBB90 (lit_3646)
//	804FB890: 804FBB90 (lit_3646)
//	804FB8AC: 80018B64 (__ct__10fopAc_ac_cFv)
//	804FB8B4: 804FBAF4 (__ct__4ga_sFv)
//	804FB8B8: 804FBAF4 (__ct__4ga_sFv)
//	804FB8BC: 804FBAB8 (__dt__4ga_sFv)
//	804FB8C0: 804FBAB8 (__dt__4ga_sFv)
//	804FB8CC: 80361D60 (__construct_array)
//	804FB8E0: 804FBBD4 (stringBase0)
//	804FB8E4: 804FBBD4 (stringBase0)
//	804FB8EC: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	804FB968: 804FB7C4 (useHeapInit__FP10fopAc_ac_c)
//	804FB96C: 804FB7C4 (useHeapInit__FP10fopAc_ac_c)
//	804FB974: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	804FB988: 804FBC48 (data_804FBC48)
//	804FB98C: 804FBC48 (data_804FBC48)
//	804FB9A8: 804FBC58 (l_HIO)
//	804FB9AC: 804FBC58 (l_HIO)
//	804FB9E8: 80267954 (cM_rndF__Ff)
//	804FBA0C: 80267954 (cM_rndF__Ff)
//	804FBA24: 80267954 (cM_rndF__Ff)
//	804FBA4C: 804FB6F8 (daE_Ga_Execute__FP10e_ga_class)
//	804FBA50: 804FBBD4 (stringBase0)
//	804FBA54: 804FBBD4 (stringBase0)
//	804FBA5C: 804061C0 (g_dComIfG_gameInfo)
//	804FBA60: 804061C0 (g_dComIfG_gameInfo)
//	804FBA70: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	804FBA78: 804061C0 (g_dComIfG_gameInfo)
//	804FBA7C: 804061C0 (g_dComIfG_gameInfo)
//	804FBA90: 8002CAF0 (addSimpleModel__14dComIfG_play_cFP12J3DModelDataiUc)
//	804FBAA4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daE_Ga_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/daE_Ga_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 804FBAB8-804FBAF4 003C+00 s=1 e=0 z=0  None .text      __dt__4ga_sFv                                                */
//	804FBAD8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm ga_s::~ga_s() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/__dt__4ga_sFv.s"
}
#pragma pop


/* 804FBAF4-804FBAF8 0004+00 s=1 e=0 z=0  None .text      __ct__4ga_sFv                                                */
// True False
ga_s::ga_s() {
	/* empty function */
}


/* 804FBAF8-804FBB40 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_Ga_HIO_cFv                                       */
//	804FBB10: 804FBC30 (__vt__12daE_Ga_HIO_c)
//	804FBB14: 804FBC30 (__vt__12daE_Ga_HIO_c)
//	804FBB24: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_Ga_HIO_c::~daE_Ga_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/__dt__12daE_Ga_HIO_cFv.s"
}
#pragma pop


/* 804FBB40-804FBB7C 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_ga_cpp                                         */
//	804FBB4C: 804FBC58 (l_HIO)
//	804FBB50: 804FBC58 (l_HIO)
//	804FBB54: 804FB0EC (__ct__12daE_Ga_HIO_cFv)
//	804FBB58: 804FBAF8 (__dt__12daE_Ga_HIO_cFv)
//	804FBB5C: 804FBAF8 (__dt__12daE_Ga_HIO_cFv)
//	804FBB60: 804FBC4C (lit_3641)
//	804FBB64: 804FBC4C (lit_3641)
//	804FBB68: 804FB078 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_ga_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ga/d_a_e_ga/__sinit_d_a_e_ga_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_804FBB40 = (void*)__sinit_d_a_e_ga_cpp;
#pragma pop


